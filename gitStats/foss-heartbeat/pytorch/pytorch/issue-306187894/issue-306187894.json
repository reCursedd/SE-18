{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5858", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5858/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5858/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5858/events", "html_url": "https://github.com/pytorch/pytorch/issues/5858", "id": 306187894, "node_id": "MDU6SXNzdWUzMDYxODc4OTQ=", "number": 5858, "title": "RuntimeError: freeze_support()", "user": {"login": "shinalone", "id": 14334826, "node_id": "MDQ6VXNlcjE0MzM0ODI2", "avatar_url": "https://avatars1.githubusercontent.com/u/14334826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shinalone", "html_url": "https://github.com/shinalone", "followers_url": "https://api.github.com/users/shinalone/followers", "following_url": "https://api.github.com/users/shinalone/following{/other_user}", "gists_url": "https://api.github.com/users/shinalone/gists{/gist_id}", "starred_url": "https://api.github.com/users/shinalone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shinalone/subscriptions", "organizations_url": "https://api.github.com/users/shinalone/orgs", "repos_url": "https://api.github.com/users/shinalone/repos", "events_url": "https://api.github.com/users/shinalone/events{/privacy}", "received_events_url": "https://api.github.com/users/shinalone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2018-03-17T20:28:41Z", "updated_at": "2018-11-11T20:23:46Z", "closed_at": "2018-05-10T07:59:20Z", "author_association": "NONE", "body_html": "<ul>\n<li>OS:<br>\nwindows 10</li>\n<li>PyTorch version:<br>\n0.3.1.post2</li>\n<li>How you installed PyTorch (conda, pip, source):<br>\nconda install -c peterjc123 pytorch-cpu</li>\n<li>Python version:<br>\n3.5.4</li>\n</ul>\n<hr>\n<ul>\n<li>Error Message:</li>\n</ul>\n<div class=\"highlight highlight-source-python\"><pre>C:\\<span class=\"pl-ii\">Install\\Anaconda3\\envs\\ame\\python.exe C:/DeepLearning/InPytorch/torch_CNN.py</span>\nTraceback (most recent call last):\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&lt;string&gt;<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">1</span>, <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\spawn.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">106</span>, <span class=\"pl-k\">in</span> spawn_main\n    exitcode <span class=\"pl-k\">=</span> _main(fd)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\spawn.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">115</span>, <span class=\"pl-k\">in</span> _main\n    prepare(preparation_data)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\spawn.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">226</span>, <span class=\"pl-k\">in</span> prepare\n    _fixup_main_from_path(data[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>init_main_from_path<span class=\"pl-pds\">'</span></span>])\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\spawn.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">278</span>, <span class=\"pl-k\">in</span> _fixup_main_from_path\n    run_name<span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>__mp_main__<span class=\"pl-pds\">\"</span></span>)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib<span class=\"pl-cce\">\\r</span>unpy.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">263</span>, <span class=\"pl-k\">in</span> run_path\n    pkg_name<span class=\"pl-k\">=</span>pkg_name, script_name<span class=\"pl-k\">=</span>fname)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib<span class=\"pl-cce\">\\r</span>unpy.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">96</span>, <span class=\"pl-k\">in</span> _run_module_code\n    mod_name, mod_spec, pkg_name, script_name)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib<span class=\"pl-cce\">\\r</span>unpy.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">85</span>, <span class=\"pl-k\">in</span> _run_code\n    <span class=\"pl-c1\">exec</span>(code, run_globals)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C:\\DeepLearning\\InPytorch<span class=\"pl-cce\">\\t</span>orch_CNN.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">69</span>, <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>\n    <span class=\"pl-k\">for</span> i,(batch_x,batch_y) <span class=\"pl-k\">in</span> <span class=\"pl-c1\">enumerate</span>(train_loader):\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\site-packages<span class=\"pl-cce\">\\t</span>orch\\utils\\data\\dataloader.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">417</span>, <span class=\"pl-k\">in</span> <span class=\"pl-c1\">__iter__</span>\n    <span class=\"pl-k\">return</span> DataLoaderIter(<span class=\"pl-c1\">self</span>)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\site-packages<span class=\"pl-cce\">\\t</span>orch\\utils\\data\\dataloader.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">234</span>, <span class=\"pl-k\">in</span> <span class=\"pl-c1\">__init__</span>\n    w.start()\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\process.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">105</span>, <span class=\"pl-k\">in</span> start\n    <span class=\"pl-c1\">self</span>._popen <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>._Popen(<span class=\"pl-c1\">self</span>)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\context.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">212</span>, <span class=\"pl-k\">in</span> _Popen\n    <span class=\"pl-k\">return</span> _default_context.get_context().Process._Popen(process_obj)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\context.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">313</span>, <span class=\"pl-k\">in</span> _Popen\n    <span class=\"pl-k\">return</span> Popen(process_obj)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\popen_spawn_win32.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">34</span>, <span class=\"pl-k\">in</span> <span class=\"pl-c1\">__init__</span>\n    prep_data <span class=\"pl-k\">=</span> spawn.get_preparation_data(process_obj._name)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\spawn.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">144</span>, <span class=\"pl-k\">in</span> get_preparation_data\n    _check_not_importing_main()\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\spawn.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">137</span>, <span class=\"pl-k\">in</span> _check_not_importing_main\n    <span class=\"pl-k\">is</span> <span class=\"pl-k\">not</span> going to be frozen to produce an executable.<span class=\"pl-s\"><span class=\"pl-pds\">'''</span>)</span>\n<span class=\"pl-s\">RuntimeError: </span>\n<span class=\"pl-s\">        An attempt has been made to start a new process before the</span>\n<span class=\"pl-s\">        current process has finished its bootstrapping phase.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">        This probably means that you are not using fork to start your</span>\n<span class=\"pl-s\">        child processes and you have forgotten to use the proper idiom</span>\n<span class=\"pl-s\">        in the main module:</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">            if __name__ == '__main__':</span>\n<span class=\"pl-s\">                freeze_support()</span>\n<span class=\"pl-s\">                ...</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">        The \"freeze_support()\" line can be omitted if the program</span>\n<span class=\"pl-s\">        is not going to be frozen to produce an executable.</span>\n<span class=\"pl-s\">Traceback (most recent call last):</span>\n<span class=\"pl-s\">  File \"&lt;string&gt;\", line 1, in &lt;module&gt;</span>\n<span class=\"pl-s\">  File \"C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\spawn.py\", line 106, in spawn_main</span>\n<span class=\"pl-s\">    exitcode = _main(fd)</span>\n<span class=\"pl-s\">  File \"C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\spawn.py\", line 115, in _main</span>\n<span class=\"pl-s\">    prepare(preparation_data)</span>\n<span class=\"pl-s\">  File \"C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\spawn.py\", line 226, in prepare</span>\n<span class=\"pl-s\">    _fixup_main_from_path(data['init_main_from_path'])</span>\n<span class=\"pl-s\">  File \"C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\spawn.py\", line 278, in _fixup_main_from_path</span>\n<span class=\"pl-s\">    run_name=\"__mp_main__\")</span>\n<span class=\"pl-s\">  File \"C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib<span class=\"pl-cce\">\\r</span>unpy.py\", line 263, in run_path</span>\n<span class=\"pl-s\">    pkg_name=pkg_name, script_name=fname)</span>\n<span class=\"pl-s\">  File \"C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib<span class=\"pl-cce\">\\r</span>unpy.py\", line 96, in _run_module_code</span>\n<span class=\"pl-s\">    mod_name, mod_spec, pkg_name, script_name)</span>\n<span class=\"pl-s\">  File \"C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib<span class=\"pl-cce\">\\r</span>unpy.py\", line 85, in _run_code</span>\n<span class=\"pl-s\">    exec(code, run_globals)</span>\n<span class=\"pl-s\">  File \"C:\\DeepLearning\\InPytorch<span class=\"pl-cce\">\\t</span>orch_CNN.py\", line 69, in &lt;module&gt;</span>\n<span class=\"pl-s\">    for i,(batch_x,batch_y) in enumerate(train_loader):</span>\n<span class=\"pl-s\">  File \"C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\site-packages<span class=\"pl-cce\">\\t</span>orch\\utils\\data\\dataloader.py\", line 417, in __iter__</span>\n<span class=\"pl-s\">    return DataLoaderIter(self)</span>\n<span class=\"pl-s\">  File \"C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\site-packages<span class=\"pl-cce\">\\t</span>orch\\utils\\data\\dataloader.py\", line 234, in __init__</span>\n<span class=\"pl-s\">    w.start()</span>\n<span class=\"pl-s\">  File \"C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\process.py\", line 105, in start</span>\n<span class=\"pl-s\">    self._popen = self._Popen(self)</span>\n<span class=\"pl-s\">  File \"C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\context.py\", line 212, in _Popen</span>\n<span class=\"pl-s\">    return _default_context.get_context().Process._Popen(process_obj)</span>\n<span class=\"pl-s\">  File \"C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\context.py\", line 313, in _Popen</span>\n<span class=\"pl-s\">    return Popen(process_obj)</span>\n<span class=\"pl-s\">  File \"C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\popen_spawn_win32.py\", line 34, in __init__</span>\n<span class=\"pl-s\">    prep_data = spawn.get_preparation_data(process_obj._name)</span>\n<span class=\"pl-s\">  File \"C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\spawn.py\", line 144, in get_preparation_data</span>\n<span class=\"pl-s\">Traceback (most recent call last):</span>\n<span class=\"pl-s\">  File \"&lt;string&gt;\", line 1, in &lt;module&gt;</span>\n<span class=\"pl-s\">    _check_not_importing_main()</span>\n<span class=\"pl-s\">  File \"C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\spawn.py\", line 137, in _check_not_importing_main</span>\n<span class=\"pl-s\">  File \"C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\spawn.py\", line 106, in spawn_main</span>\n<span class=\"pl-s\">    is not going to be frozen to produce an executable.<span class=\"pl-pds\">'''</span></span>)\n<span class=\"pl-c1\">RuntimeError</span>: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n\n        This probably means that you are <span class=\"pl-k\">not</span> using fork to start your\n        child processes <span class=\"pl-k\">and</span> you have forgotten to use the proper idiom\n        <span class=\"pl-k\">in</span> the main module:\n\n            <span class=\"pl-k\">if</span> <span class=\"pl-c1\">__name__</span> <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>__main__<span class=\"pl-pds\">'</span></span>:\n                freeze_support()\n                <span class=\"pl-c1\">...</span>\n\n        The <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>freeze_support()<span class=\"pl-pds\">\"</span></span> line can be omitted <span class=\"pl-k\">if</span> the program\n        <span class=\"pl-k\">is</span> <span class=\"pl-k\">not</span> going to be frozen to produce an executable.\n    exitcode <span class=\"pl-k\">=</span> _main(fd)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\spawn.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">115</span>, <span class=\"pl-k\">in</span> _main\n    prepare(preparation_data)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\spawn.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">226</span>, <span class=\"pl-k\">in</span> prepare\n    _fixup_main_from_path(data[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>init_main_from_path<span class=\"pl-pds\">'</span></span>])\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\spawn.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">278</span>, <span class=\"pl-k\">in</span> _fixup_main_from_path\n    run_name<span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>__mp_main__<span class=\"pl-pds\">\"</span></span>)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib<span class=\"pl-cce\">\\r</span>unpy.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">263</span>, <span class=\"pl-k\">in</span> run_path\n    pkg_name<span class=\"pl-k\">=</span>pkg_name, script_name<span class=\"pl-k\">=</span>fname)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib<span class=\"pl-cce\">\\r</span>unpy.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">96</span>, <span class=\"pl-k\">in</span> _run_module_code\n    mod_name, mod_spec, pkg_name, script_name)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib<span class=\"pl-cce\">\\r</span>unpy.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">85</span>, <span class=\"pl-k\">in</span> _run_code\n    <span class=\"pl-c1\">exec</span>(code, run_globals)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C:\\DeepLearning\\InPytorch<span class=\"pl-cce\">\\t</span>orch_CNN.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">69</span>, <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>\n    <span class=\"pl-k\">for</span> i,(batch_x,batch_y) <span class=\"pl-k\">in</span> <span class=\"pl-c1\">enumerate</span>(train_loader):\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\site-packages<span class=\"pl-cce\">\\t</span>orch\\utils\\data\\dataloader.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">417</span>, <span class=\"pl-k\">in</span> <span class=\"pl-c1\">__iter__</span>\n    <span class=\"pl-k\">return</span> DataLoaderIter(<span class=\"pl-c1\">self</span>)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\site-packages<span class=\"pl-cce\">\\t</span>orch\\utils\\data\\dataloader.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">234</span>, <span class=\"pl-k\">in</span> <span class=\"pl-c1\">__init__</span>\n    w.start()\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\process.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">105</span>, <span class=\"pl-k\">in</span> start\n    <span class=\"pl-c1\">self</span>._popen <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>._Popen(<span class=\"pl-c1\">self</span>)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\context.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">212</span>, <span class=\"pl-k\">in</span> _Popen\n    <span class=\"pl-k\">return</span> _default_context.get_context().Process._Popen(process_obj)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\context.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">313</span>, <span class=\"pl-k\">in</span> _Popen\n    <span class=\"pl-k\">return</span> Popen(process_obj)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\popen_spawn_win32.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">34</span>, <span class=\"pl-k\">in</span> <span class=\"pl-c1\">__init__</span>\nTraceback (most recent call last):\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&lt;string&gt;<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">1</span>, <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>\n    prep_data <span class=\"pl-k\">=</span> spawn.get_preparation_data(process_obj._name)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\spawn.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">144</span>, <span class=\"pl-k\">in</span> get_preparation_data\n    _check_not_importing_main()\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\spawn.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">137</span>, <span class=\"pl-k\">in</span> _check_not_importing_main\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\spawn.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">106</span>, <span class=\"pl-k\">in</span> spawn_main\n    <span class=\"pl-k\">is</span> <span class=\"pl-k\">not</span> going to be frozen to produce an executable.<span class=\"pl-s\"><span class=\"pl-pds\">'''</span>)</span>\n<span class=\"pl-s\">RuntimeError: </span>\n<span class=\"pl-s\">        An attempt has been made to start a new process before the</span>\n<span class=\"pl-s\">        current process has finished its bootstrapping phase.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">        This probably means that you are not using fork to start your</span>\n<span class=\"pl-s\">        child processes and you have forgotten to use the proper idiom</span>\n<span class=\"pl-s\">        in the main module:</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">            if __name__ == '__main__':</span>\n<span class=\"pl-s\">                freeze_support()</span>\n<span class=\"pl-s\">                ...</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">        The \"freeze_support()\" line can be omitted if the program</span>\n<span class=\"pl-s\">        is not going to be frozen to produce an executable.</span>\n<span class=\"pl-s\">    exitcode = _main(fd)</span>\n<span class=\"pl-s\">  File \"C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\spawn.py\", line 115, in _main</span>\n<span class=\"pl-s\">    prepare(preparation_data)</span>\n<span class=\"pl-s\">  File \"C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\spawn.py\", line 226, in prepare</span>\n<span class=\"pl-s\">    _fixup_main_from_path(data['init_main_from_path'])</span>\n<span class=\"pl-s\">  File \"C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\spawn.py\", line 278, in _fixup_main_from_path</span>\n<span class=\"pl-s\">    run_name=\"__mp_main__\")</span>\n<span class=\"pl-s\">  File \"C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib<span class=\"pl-cce\">\\r</span>unpy.py\", line 263, in run_path</span>\n<span class=\"pl-s\">    pkg_name=pkg_name, script_name=fname)</span>\n<span class=\"pl-s\">  File \"C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib<span class=\"pl-cce\">\\r</span>unpy.py\", line 96, in _run_module_code</span>\n<span class=\"pl-s\">    mod_name, mod_spec, pkg_name, script_name)</span>\n<span class=\"pl-s\">  File \"C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib<span class=\"pl-cce\">\\r</span>unpy.py\", line 85, in _run_code</span>\n<span class=\"pl-s\">    exec(code, run_globals)</span>\n<span class=\"pl-s\">  File \"C:\\DeepLearning\\InPytorch<span class=\"pl-cce\">\\t</span>orch_CNN.py\", line 69, in &lt;module&gt;</span>\n<span class=\"pl-s\">    for i,(batch_x,batch_y) in enumerate(train_loader):</span>\n<span class=\"pl-s\">  File \"C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\site-packages<span class=\"pl-cce\">\\t</span>orch\\utils\\data\\dataloader.py\", line 417, in __iter__</span>\n<span class=\"pl-s\">    return DataLoaderIter(self)</span>\n<span class=\"pl-s\">  File \"C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\site-packages<span class=\"pl-cce\">\\t</span>orch\\utils\\data\\dataloader.py\", line 234, in __init__</span>\n<span class=\"pl-s\">    w.start()</span>\n<span class=\"pl-s\">  File \"C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\process.py\", line 105, in start</span>\n<span class=\"pl-s\">    self._popen = self._Popen(self)</span>\n<span class=\"pl-s\">  File \"C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\context.py\", line 212, in _Popen</span>\n<span class=\"pl-s\">    return _default_context.get_context().Process._Popen(process_obj)</span>\n<span class=\"pl-s\">  File \"C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\context.py\", line 313, in _Popen</span>\n<span class=\"pl-s\">    return Popen(process_obj)</span>\n<span class=\"pl-s\">  File \"C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\popen_spawn_win32.py\", line 34, in __init__</span>\n<span class=\"pl-s\">    prep_data = spawn.get_preparation_data(process_obj._name)</span>\n<span class=\"pl-s\">  File \"C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\spawn.py\", line 144, in get_preparation_data</span>\n<span class=\"pl-s\">    _check_not_importing_main()</span>\n<span class=\"pl-s\">  File \"C:\\Install\\Anaconda3\\envs<span class=\"pl-cce\">\\a</span>me\\lib\\multiprocessing\\spawn.py\", line 137, in _check_not_importing_main</span>\n<span class=\"pl-s\">    is not going to be frozen to produce an executable.<span class=\"pl-pds\">'''</span></span>)\n<span class=\"pl-c1\">RuntimeError</span>: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n\n        This probably means that you are <span class=\"pl-k\">not</span> using fork to start your\n        child processes <span class=\"pl-k\">and</span> you have forgotten to use the proper idiom\n        <span class=\"pl-k\">in</span> the main module:\n\n            <span class=\"pl-k\">if</span> <span class=\"pl-c1\">__name__</span> <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>__main__<span class=\"pl-pds\">'</span></span>:\n                freeze_support()\n                <span class=\"pl-c1\">...</span>\n\n        The <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>freeze_support()<span class=\"pl-pds\">\"</span></span> line can be omitted <span class=\"pl-k\">if</span> the program\n        <span class=\"pl-k\">is</span> <span class=\"pl-k\">not</span> going to be frozen to produce an executable.\n</pre></div>\n<ul>\n<li>about me<br>\nEven though I use:</li>\n</ul>\n<div class=\"highlight highlight-source-python\"><pre>torch.multiprocessing.freeze_support()</pre></div>\n<p><em><a href=\"\">Please help !</a></em></p>", "body_text": "OS:\nwindows 10\nPyTorch version:\n0.3.1.post2\nHow you installed PyTorch (conda, pip, source):\nconda install -c peterjc123 pytorch-cpu\nPython version:\n3.5.4\n\n\n\nError Message:\n\nC:\\Install\\Anaconda3\\envs\\ame\\python.exe C:/DeepLearning/InPytorch/torch_CNN.py\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 106, in spawn_main\n    exitcode = _main(fd)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 115, in _main\n    prepare(preparation_data)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 226, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 278, in _fixup_main_from_path\n    run_name=\"__mp_main__\")\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\runpy.py\", line 263, in run_path\n    pkg_name=pkg_name, script_name=fname)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\runpy.py\", line 96, in _run_module_code\n    mod_name, mod_spec, pkg_name, script_name)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\runpy.py\", line 85, in _run_code\n    exec(code, run_globals)\n  File \"C:\\DeepLearning\\InPytorch\\torch_CNN.py\", line 69, in <module>\n    for i,(batch_x,batch_y) in enumerate(train_loader):\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\site-packages\\torch\\utils\\data\\dataloader.py\", line 417, in __iter__\n    return DataLoaderIter(self)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\site-packages\\torch\\utils\\data\\dataloader.py\", line 234, in __init__\n    w.start()\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\process.py\", line 105, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\context.py\", line 212, in _Popen\n    return _default_context.get_context().Process._Popen(process_obj)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\context.py\", line 313, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\popen_spawn_win32.py\", line 34, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 144, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 137, in _check_not_importing_main\n    is not going to be frozen to produce an executable.''')\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 106, in spawn_main\n    exitcode = _main(fd)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 115, in _main\n    prepare(preparation_data)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 226, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 278, in _fixup_main_from_path\n    run_name=\"__mp_main__\")\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\runpy.py\", line 263, in run_path\n    pkg_name=pkg_name, script_name=fname)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\runpy.py\", line 96, in _run_module_code\n    mod_name, mod_spec, pkg_name, script_name)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\runpy.py\", line 85, in _run_code\n    exec(code, run_globals)\n  File \"C:\\DeepLearning\\InPytorch\\torch_CNN.py\", line 69, in <module>\n    for i,(batch_x,batch_y) in enumerate(train_loader):\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\site-packages\\torch\\utils\\data\\dataloader.py\", line 417, in __iter__\n    return DataLoaderIter(self)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\site-packages\\torch\\utils\\data\\dataloader.py\", line 234, in __init__\n    w.start()\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\process.py\", line 105, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\context.py\", line 212, in _Popen\n    return _default_context.get_context().Process._Popen(process_obj)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\context.py\", line 313, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\popen_spawn_win32.py\", line 34, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 144, in get_preparation_data\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n    _check_not_importing_main()\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 137, in _check_not_importing_main\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 106, in spawn_main\n    is not going to be frozen to produce an executable.''')\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\n    exitcode = _main(fd)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 115, in _main\n    prepare(preparation_data)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 226, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 278, in _fixup_main_from_path\n    run_name=\"__mp_main__\")\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\runpy.py\", line 263, in run_path\n    pkg_name=pkg_name, script_name=fname)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\runpy.py\", line 96, in _run_module_code\n    mod_name, mod_spec, pkg_name, script_name)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\runpy.py\", line 85, in _run_code\n    exec(code, run_globals)\n  File \"C:\\DeepLearning\\InPytorch\\torch_CNN.py\", line 69, in <module>\n    for i,(batch_x,batch_y) in enumerate(train_loader):\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\site-packages\\torch\\utils\\data\\dataloader.py\", line 417, in __iter__\n    return DataLoaderIter(self)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\site-packages\\torch\\utils\\data\\dataloader.py\", line 234, in __init__\n    w.start()\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\process.py\", line 105, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\context.py\", line 212, in _Popen\n    return _default_context.get_context().Process._Popen(process_obj)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\context.py\", line 313, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\popen_spawn_win32.py\", line 34, in __init__\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 144, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 137, in _check_not_importing_main\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 106, in spawn_main\n    is not going to be frozen to produce an executable.''')\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\n    exitcode = _main(fd)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 115, in _main\n    prepare(preparation_data)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 226, in prepare\n    _fixup_main_from_path(data['init_main_from_path'])\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 278, in _fixup_main_from_path\n    run_name=\"__mp_main__\")\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\runpy.py\", line 263, in run_path\n    pkg_name=pkg_name, script_name=fname)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\runpy.py\", line 96, in _run_module_code\n    mod_name, mod_spec, pkg_name, script_name)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\runpy.py\", line 85, in _run_code\n    exec(code, run_globals)\n  File \"C:\\DeepLearning\\InPytorch\\torch_CNN.py\", line 69, in <module>\n    for i,(batch_x,batch_y) in enumerate(train_loader):\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\site-packages\\torch\\utils\\data\\dataloader.py\", line 417, in __iter__\n    return DataLoaderIter(self)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\site-packages\\torch\\utils\\data\\dataloader.py\", line 234, in __init__\n    w.start()\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\process.py\", line 105, in start\n    self._popen = self._Popen(self)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\context.py\", line 212, in _Popen\n    return _default_context.get_context().Process._Popen(process_obj)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\context.py\", line 313, in _Popen\n    return Popen(process_obj)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\popen_spawn_win32.py\", line 34, in __init__\n    prep_data = spawn.get_preparation_data(process_obj._name)\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 144, in get_preparation_data\n    _check_not_importing_main()\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 137, in _check_not_importing_main\n    is not going to be frozen to produce an executable.''')\nRuntimeError: \n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.\n\n\nabout me\nEven though I use:\n\ntorch.multiprocessing.freeze_support()\nPlease help !", "body": "- OS:\r\nwindows 10\r\n- PyTorch version:\r\n0.3.1.post2\r\n- How you installed PyTorch (conda, pip, source):\r\nconda install -c peterjc123 pytorch-cpu\r\n- Python version:\r\n3.5.4\r\n--------------------------------------------------------------------------------------------------\r\n- Error Message:\r\n\r\n```python\r\nC:\\Install\\Anaconda3\\envs\\ame\\python.exe C:/DeepLearning/InPytorch/torch_CNN.py\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 106, in spawn_main\r\n    exitcode = _main(fd)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 115, in _main\r\n    prepare(preparation_data)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 226, in prepare\r\n    _fixup_main_from_path(data['init_main_from_path'])\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 278, in _fixup_main_from_path\r\n    run_name=\"__mp_main__\")\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\runpy.py\", line 263, in run_path\r\n    pkg_name=pkg_name, script_name=fname)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\runpy.py\", line 96, in _run_module_code\r\n    mod_name, mod_spec, pkg_name, script_name)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"C:\\DeepLearning\\InPytorch\\torch_CNN.py\", line 69, in <module>\r\n    for i,(batch_x,batch_y) in enumerate(train_loader):\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\site-packages\\torch\\utils\\data\\dataloader.py\", line 417, in __iter__\r\n    return DataLoaderIter(self)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\site-packages\\torch\\utils\\data\\dataloader.py\", line 234, in __init__\r\n    w.start()\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\process.py\", line 105, in start\r\n    self._popen = self._Popen(self)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\context.py\", line 212, in _Popen\r\n    return _default_context.get_context().Process._Popen(process_obj)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\context.py\", line 313, in _Popen\r\n    return Popen(process_obj)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\popen_spawn_win32.py\", line 34, in __init__\r\n    prep_data = spawn.get_preparation_data(process_obj._name)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 144, in get_preparation_data\r\n    _check_not_importing_main()\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 137, in _check_not_importing_main\r\n    is not going to be frozen to produce an executable.''')\r\nRuntimeError: \r\n        An attempt has been made to start a new process before the\r\n        current process has finished its bootstrapping phase.\r\n\r\n        This probably means that you are not using fork to start your\r\n        child processes and you have forgotten to use the proper idiom\r\n        in the main module:\r\n\r\n            if __name__ == '__main__':\r\n                freeze_support()\r\n                ...\r\n\r\n        The \"freeze_support()\" line can be omitted if the program\r\n        is not going to be frozen to produce an executable.\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 106, in spawn_main\r\n    exitcode = _main(fd)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 115, in _main\r\n    prepare(preparation_data)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 226, in prepare\r\n    _fixup_main_from_path(data['init_main_from_path'])\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 278, in _fixup_main_from_path\r\n    run_name=\"__mp_main__\")\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\runpy.py\", line 263, in run_path\r\n    pkg_name=pkg_name, script_name=fname)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\runpy.py\", line 96, in _run_module_code\r\n    mod_name, mod_spec, pkg_name, script_name)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"C:\\DeepLearning\\InPytorch\\torch_CNN.py\", line 69, in <module>\r\n    for i,(batch_x,batch_y) in enumerate(train_loader):\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\site-packages\\torch\\utils\\data\\dataloader.py\", line 417, in __iter__\r\n    return DataLoaderIter(self)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\site-packages\\torch\\utils\\data\\dataloader.py\", line 234, in __init__\r\n    w.start()\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\process.py\", line 105, in start\r\n    self._popen = self._Popen(self)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\context.py\", line 212, in _Popen\r\n    return _default_context.get_context().Process._Popen(process_obj)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\context.py\", line 313, in _Popen\r\n    return Popen(process_obj)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\popen_spawn_win32.py\", line 34, in __init__\r\n    prep_data = spawn.get_preparation_data(process_obj._name)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 144, in get_preparation_data\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n    _check_not_importing_main()\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 137, in _check_not_importing_main\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 106, in spawn_main\r\n    is not going to be frozen to produce an executable.''')\r\nRuntimeError: \r\n        An attempt has been made to start a new process before the\r\n        current process has finished its bootstrapping phase.\r\n\r\n        This probably means that you are not using fork to start your\r\n        child processes and you have forgotten to use the proper idiom\r\n        in the main module:\r\n\r\n            if __name__ == '__main__':\r\n                freeze_support()\r\n                ...\r\n\r\n        The \"freeze_support()\" line can be omitted if the program\r\n        is not going to be frozen to produce an executable.\r\n    exitcode = _main(fd)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 115, in _main\r\n    prepare(preparation_data)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 226, in prepare\r\n    _fixup_main_from_path(data['init_main_from_path'])\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 278, in _fixup_main_from_path\r\n    run_name=\"__mp_main__\")\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\runpy.py\", line 263, in run_path\r\n    pkg_name=pkg_name, script_name=fname)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\runpy.py\", line 96, in _run_module_code\r\n    mod_name, mod_spec, pkg_name, script_name)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"C:\\DeepLearning\\InPytorch\\torch_CNN.py\", line 69, in <module>\r\n    for i,(batch_x,batch_y) in enumerate(train_loader):\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\site-packages\\torch\\utils\\data\\dataloader.py\", line 417, in __iter__\r\n    return DataLoaderIter(self)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\site-packages\\torch\\utils\\data\\dataloader.py\", line 234, in __init__\r\n    w.start()\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\process.py\", line 105, in start\r\n    self._popen = self._Popen(self)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\context.py\", line 212, in _Popen\r\n    return _default_context.get_context().Process._Popen(process_obj)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\context.py\", line 313, in _Popen\r\n    return Popen(process_obj)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\popen_spawn_win32.py\", line 34, in __init__\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n    prep_data = spawn.get_preparation_data(process_obj._name)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 144, in get_preparation_data\r\n    _check_not_importing_main()\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 137, in _check_not_importing_main\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 106, in spawn_main\r\n    is not going to be frozen to produce an executable.''')\r\nRuntimeError: \r\n        An attempt has been made to start a new process before the\r\n        current process has finished its bootstrapping phase.\r\n\r\n        This probably means that you are not using fork to start your\r\n        child processes and you have forgotten to use the proper idiom\r\n        in the main module:\r\n\r\n            if __name__ == '__main__':\r\n                freeze_support()\r\n                ...\r\n\r\n        The \"freeze_support()\" line can be omitted if the program\r\n        is not going to be frozen to produce an executable.\r\n    exitcode = _main(fd)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 115, in _main\r\n    prepare(preparation_data)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 226, in prepare\r\n    _fixup_main_from_path(data['init_main_from_path'])\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 278, in _fixup_main_from_path\r\n    run_name=\"__mp_main__\")\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\runpy.py\", line 263, in run_path\r\n    pkg_name=pkg_name, script_name=fname)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\runpy.py\", line 96, in _run_module_code\r\n    mod_name, mod_spec, pkg_name, script_name)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"C:\\DeepLearning\\InPytorch\\torch_CNN.py\", line 69, in <module>\r\n    for i,(batch_x,batch_y) in enumerate(train_loader):\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\site-packages\\torch\\utils\\data\\dataloader.py\", line 417, in __iter__\r\n    return DataLoaderIter(self)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\site-packages\\torch\\utils\\data\\dataloader.py\", line 234, in __init__\r\n    w.start()\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\process.py\", line 105, in start\r\n    self._popen = self._Popen(self)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\context.py\", line 212, in _Popen\r\n    return _default_context.get_context().Process._Popen(process_obj)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\context.py\", line 313, in _Popen\r\n    return Popen(process_obj)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\popen_spawn_win32.py\", line 34, in __init__\r\n    prep_data = spawn.get_preparation_data(process_obj._name)\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 144, in get_preparation_data\r\n    _check_not_importing_main()\r\n  File \"C:\\Install\\Anaconda3\\envs\\ame\\lib\\multiprocessing\\spawn.py\", line 137, in _check_not_importing_main\r\n    is not going to be frozen to produce an executable.''')\r\nRuntimeError: \r\n        An attempt has been made to start a new process before the\r\n        current process has finished its bootstrapping phase.\r\n\r\n        This probably means that you are not using fork to start your\r\n        child processes and you have forgotten to use the proper idiom\r\n        in the main module:\r\n\r\n            if __name__ == '__main__':\r\n                freeze_support()\r\n                ...\r\n\r\n        The \"freeze_support()\" line can be omitted if the program\r\n        is not going to be frozen to produce an executable.\r\n\r\n```\r\n- about me\r\nEven though I use:\r\n```python\r\ntorch.multiprocessing.freeze_support()\r\n```\r\n*[Please help !]()*"}