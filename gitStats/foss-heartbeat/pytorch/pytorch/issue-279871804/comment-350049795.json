{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/350049795", "html_url": "https://github.com/pytorch/pytorch/pull/4057#issuecomment-350049795", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4057", "id": 350049795, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDA0OTc5NQ==", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-07T18:13:21Z", "updated_at": "2017-12-07T18:13:21Z", "author_association": "MEMBER", "body_html": "<p>We could have implemented these in ATen as functions which take a <code>std::function</code> instead of <code>PyObject*</code>. I didn't do this because that would add a new argument type to ATen, which requires more work. I don't think these functions are generally useful enough to warrant that: they're very inefficient.</p>\n<p>An efficient pointwise-apply function makes sense in ATen.  Something like <code>TH_TENSOR_APPLY</code>, but hopefully cleaner. I think Greg is working on something like that.</p>", "body_text": "We could have implemented these in ATen as functions which take a std::function instead of PyObject*. I didn't do this because that would add a new argument type to ATen, which requires more work. I don't think these functions are generally useful enough to warrant that: they're very inefficient.\nAn efficient pointwise-apply function makes sense in ATen.  Something like TH_TENSOR_APPLY, but hopefully cleaner. I think Greg is working on something like that.", "body": "We could have implemented these in ATen as functions which take a `std::function` instead of `PyObject*`. I didn't do this because that would add a new argument type to ATen, which requires more work. I don't think these functions are generally useful enough to warrant that: they're very inefficient.\r\n\r\nAn efficient pointwise-apply function makes sense in ATen.  Something like `TH_TENSOR_APPLY`, but hopefully cleaner. I think Greg is working on something like that."}