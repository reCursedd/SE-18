{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/320960908", "html_url": "https://github.com/pytorch/pytorch/issues/2341#issuecomment-320960908", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2341", "id": 320960908, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDk2MDkwOA==", "user": {"login": "mjchen611", "id": 20677117, "node_id": "MDQ6VXNlcjIwNjc3MTE3", "avatar_url": "https://avatars1.githubusercontent.com/u/20677117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjchen611", "html_url": "https://github.com/mjchen611", "followers_url": "https://api.github.com/users/mjchen611/followers", "following_url": "https://api.github.com/users/mjchen611/following{/other_user}", "gists_url": "https://api.github.com/users/mjchen611/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjchen611/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjchen611/subscriptions", "organizations_url": "https://api.github.com/users/mjchen611/orgs", "repos_url": "https://api.github.com/users/mjchen611/repos", "events_url": "https://api.github.com/users/mjchen611/events{/privacy}", "received_events_url": "https://api.github.com/users/mjchen611/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-08T13:47:14Z", "updated_at": "2017-08-08T13:48:01Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=687194\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alykhantejani\">@alykhantejani</a></p>\n<ol>\n<li>\n<p>The code link was :<a href=\"https://github.com/andreasveit/triplet-network-pytorch/blob/master/train.py\">https://github.com/andreasveit/triplet-network-pytorch/blob/master/train.py</a></p>\n</li>\n<li>\n<p>The error ocured in train.py -- 136</p>\n</li>\n<li>\n<p>The error was:</p>\n</li>\n</ol>\n<p>runfile('G:/researchWork2/pytorch/triplet-network-pytorch-master/train.py', wdir='G:/researchWork2/pytorch/triplet-network-pytorch-master')<br>\nReloaded modules: triplet_mnist_loader, triplet_image_loader, tripletnet</p>\n<p>Number of params: 21840<br>\nTraceback (most recent call last):<br>\nFile \"\", line 1, in<br>\nrunfile('G:/researchWork2/pytorch/triplet-network-pytorch-master/train.py', wdir='G:/researchWork2/pytorch/triplet-network-pytorch-master')</p>\n<p>File \"D:\\Anaconda3\\lib\\site-packages\\spyder\\utils\\site\\sitecustomize.py\", line 880, in runfile<br>\nexecfile(filename, namespace)</p>\n<p>File \"D:\\Anaconda3\\lib\\site-packages\\spyder\\utils\\site\\sitecustomize.py\", line 102, in execfile<br>\nexec(compile(f.read(), filename, 'exec'), namespace)</p>\n<p>File \"G:/researchWork2/pytorch/triplet-network-pytorch-master/train.py\", line 258, in<br>\nmain()</p>\n<p>File \"G:/researchWork2/pytorch/triplet-network-pytorch-master/train.py\", line 116, in main<br>\ntrain(train_loader, tnet, criterion, optimizer, epoch)</p>\n<p>File \"G:/researchWork2/pytorch/triplet-network-pytorch-master/train.py\", line 137, in train<br>\nfor batch_idx, (data1, data2) in enumerate(train_loader):</p>\n<p>File \"D:\\Anaconda3\\lib\\site-packages\\torch\\utils\\data\\dataloader.py\", line 303, in iter<br>\nreturn DataLoaderIter(self)</p>\n<p>File \"D:\\Anaconda3\\lib\\site-packages\\torch\\utils\\data\\dataloader.py\", line 162, in init<br>\nw.start()</p>\n<p>File \"D:\\Anaconda3\\lib\\multiprocessing\\process.py\", line 105, in start<br>\nself._popen = self._Popen(self)</p>\n<p>File \"D:\\Anaconda3\\lib\\multiprocessing\\context.py\", line 223, in _Popen<br>\nreturn _default_context.get_context().Process._Popen(process_obj)</p>\n<p>File \"D:\\Anaconda3\\lib\\multiprocessing\\context.py\", line 322, in _Popen<br>\nreturn Popen(process_obj)</p>\n<p>File \"D:\\Anaconda3\\lib\\multiprocessing\\popen_spawn_win32.py\", line 65, in init<br>\nreduction.dump(process_obj, to_child)</p>\n<p>File \"D:\\Anaconda3\\lib\\multiprocessing\\reduction.py\", line 60, in dump<br>\nForkingPickler(file, protocol).dump(obj)</p>\n<p>BrokenPipeError: [Errno 32] Broken pipe</p>\n<ol start=\"4\">\n<li>Some part of train related codes as follows:<br>\ndef train(train_loader, tnet, criterion, optimizer, epoch):<br>\nlosses = AverageMeter()<br>\naccs = AverageMeter()<br>\nemb_norms = AverageMeter()</li>\n</ol>\n<h1>switch to train mode</h1>\n<p>tnet.train()<br>\nfor batch_idx, (data1, data2, data3) in enumerate(train_loader):<br>\nif args.cuda:<br>\ndata1, data2, data3 = data1.cuda(), data2.cuda(), data3.cuda()<br>\ndata1, data2, data3 = Variable(data1), Variable(data2), Variable(data3)</p>\n<pre><code># compute output\ndista, distb, embedded_x, embedded_y, embedded_z = tnet(data1, data2, data3)\n# 1 means, dista should be larger than distb\ntarget = torch.FloatTensor(dista.size()).fill_(1)\nif args.cuda:\n    target = target.cuda()\ntarget = Variable(target)\n\nloss_triplet = criterion(dista, distb, target)\nloss_embedd = embedded_x.norm(2) + embedded_y.norm(2) + embedded_z.norm(2)\nloss = loss_triplet + 0.001 * loss_embedd\n\n# measure accuracy and record loss\nacc = accuracy(dista, distb)\nlosses.update(loss_triplet.data[0], data1.size(0))\naccs.update(acc, data1.size(0))\nemb_norms.update(loss_embedd.data[0]/3, data1.size(0))\n\n# compute gradient and do optimizer step\noptimizer.zero_grad()\nloss.backward()\noptimizer.step()\n\nif batch_idx % args.log_interval == 0:\n    print('Train Epoch: {} [{}/{}]\\t'\n          'Loss: {:.4f} ({:.4f}) \\t'\n          'Acc: {:.2f}% ({:.2f}%) \\t'\n          'Emb_Norm: {:.2f} ({:.2f})'.format(\n        epoch, batch_idx * len(data1), len(train_loader.dataset),\n        losses.val, losses.avg, \n        100. * accs.val, 100. * accs.avg, emb_norms.val, emb_norms.avg))\n</code></pre>\n<h1>log avg values to somewhere</h1>\n<p>plotter.plot('acc', 'train', epoch, accs.avg)<br>\nplotter.plot('loss', 'train', epoch, losses.avg)<br>\nplotter.plot('emb_norms', 'train', epoch, emb_norms.avg)</p>\n<p>Thank you so much.</p>", "body_text": "@alykhantejani\n\n\nThe code link was :https://github.com/andreasveit/triplet-network-pytorch/blob/master/train.py\n\n\nThe error ocured in train.py -- 136\n\n\nThe error was:\n\n\nrunfile('G:/researchWork2/pytorch/triplet-network-pytorch-master/train.py', wdir='G:/researchWork2/pytorch/triplet-network-pytorch-master')\nReloaded modules: triplet_mnist_loader, triplet_image_loader, tripletnet\nNumber of params: 21840\nTraceback (most recent call last):\nFile \"\", line 1, in\nrunfile('G:/researchWork2/pytorch/triplet-network-pytorch-master/train.py', wdir='G:/researchWork2/pytorch/triplet-network-pytorch-master')\nFile \"D:\\Anaconda3\\lib\\site-packages\\spyder\\utils\\site\\sitecustomize.py\", line 880, in runfile\nexecfile(filename, namespace)\nFile \"D:\\Anaconda3\\lib\\site-packages\\spyder\\utils\\site\\sitecustomize.py\", line 102, in execfile\nexec(compile(f.read(), filename, 'exec'), namespace)\nFile \"G:/researchWork2/pytorch/triplet-network-pytorch-master/train.py\", line 258, in\nmain()\nFile \"G:/researchWork2/pytorch/triplet-network-pytorch-master/train.py\", line 116, in main\ntrain(train_loader, tnet, criterion, optimizer, epoch)\nFile \"G:/researchWork2/pytorch/triplet-network-pytorch-master/train.py\", line 137, in train\nfor batch_idx, (data1, data2) in enumerate(train_loader):\nFile \"D:\\Anaconda3\\lib\\site-packages\\torch\\utils\\data\\dataloader.py\", line 303, in iter\nreturn DataLoaderIter(self)\nFile \"D:\\Anaconda3\\lib\\site-packages\\torch\\utils\\data\\dataloader.py\", line 162, in init\nw.start()\nFile \"D:\\Anaconda3\\lib\\multiprocessing\\process.py\", line 105, in start\nself._popen = self._Popen(self)\nFile \"D:\\Anaconda3\\lib\\multiprocessing\\context.py\", line 223, in _Popen\nreturn _default_context.get_context().Process._Popen(process_obj)\nFile \"D:\\Anaconda3\\lib\\multiprocessing\\context.py\", line 322, in _Popen\nreturn Popen(process_obj)\nFile \"D:\\Anaconda3\\lib\\multiprocessing\\popen_spawn_win32.py\", line 65, in init\nreduction.dump(process_obj, to_child)\nFile \"D:\\Anaconda3\\lib\\multiprocessing\\reduction.py\", line 60, in dump\nForkingPickler(file, protocol).dump(obj)\nBrokenPipeError: [Errno 32] Broken pipe\n\nSome part of train related codes as follows:\ndef train(train_loader, tnet, criterion, optimizer, epoch):\nlosses = AverageMeter()\naccs = AverageMeter()\nemb_norms = AverageMeter()\n\nswitch to train mode\ntnet.train()\nfor batch_idx, (data1, data2, data3) in enumerate(train_loader):\nif args.cuda:\ndata1, data2, data3 = data1.cuda(), data2.cuda(), data3.cuda()\ndata1, data2, data3 = Variable(data1), Variable(data2), Variable(data3)\n# compute output\ndista, distb, embedded_x, embedded_y, embedded_z = tnet(data1, data2, data3)\n# 1 means, dista should be larger than distb\ntarget = torch.FloatTensor(dista.size()).fill_(1)\nif args.cuda:\n    target = target.cuda()\ntarget = Variable(target)\n\nloss_triplet = criterion(dista, distb, target)\nloss_embedd = embedded_x.norm(2) + embedded_y.norm(2) + embedded_z.norm(2)\nloss = loss_triplet + 0.001 * loss_embedd\n\n# measure accuracy and record loss\nacc = accuracy(dista, distb)\nlosses.update(loss_triplet.data[0], data1.size(0))\naccs.update(acc, data1.size(0))\nemb_norms.update(loss_embedd.data[0]/3, data1.size(0))\n\n# compute gradient and do optimizer step\noptimizer.zero_grad()\nloss.backward()\noptimizer.step()\n\nif batch_idx % args.log_interval == 0:\n    print('Train Epoch: {} [{}/{}]\\t'\n          'Loss: {:.4f} ({:.4f}) \\t'\n          'Acc: {:.2f}% ({:.2f}%) \\t'\n          'Emb_Norm: {:.2f} ({:.2f})'.format(\n        epoch, batch_idx * len(data1), len(train_loader.dataset),\n        losses.val, losses.avg, \n        100. * accs.val, 100. * accs.avg, emb_norms.val, emb_norms.avg))\n\nlog avg values to somewhere\nplotter.plot('acc', 'train', epoch, accs.avg)\nplotter.plot('loss', 'train', epoch, losses.avg)\nplotter.plot('emb_norms', 'train', epoch, emb_norms.avg)\nThank you so much.", "body": "@alykhantejani \r\n\r\n1) The code link was :https://github.com/andreasveit/triplet-network-pytorch/blob/master/train.py\r\n\r\n2) The error ocured in train.py -- 136\r\n\r\n3) The error was:\r\n\r\nrunfile('G:/researchWork2/pytorch/triplet-network-pytorch-master/train.py', wdir='G:/researchWork2/pytorch/triplet-network-pytorch-master')\r\nReloaded modules: triplet_mnist_loader, triplet_image_loader, tripletnet\r\n\r\nNumber of params: 21840\r\nTraceback (most recent call last):\r\nFile \"\", line 1, in\r\nrunfile('G:/researchWork2/pytorch/triplet-network-pytorch-master/train.py', wdir='G:/researchWork2/pytorch/triplet-network-pytorch-master')\r\n\r\nFile \"D:\\Anaconda3\\lib\\site-packages\\spyder\\utils\\site\\sitecustomize.py\", line 880, in runfile\r\nexecfile(filename, namespace)\r\n\r\nFile \"D:\\Anaconda3\\lib\\site-packages\\spyder\\utils\\site\\sitecustomize.py\", line 102, in execfile\r\nexec(compile(f.read(), filename, 'exec'), namespace)\r\n\r\nFile \"G:/researchWork2/pytorch/triplet-network-pytorch-master/train.py\", line 258, in\r\nmain()\r\n\r\nFile \"G:/researchWork2/pytorch/triplet-network-pytorch-master/train.py\", line 116, in main\r\ntrain(train_loader, tnet, criterion, optimizer, epoch)\r\n\r\nFile \"G:/researchWork2/pytorch/triplet-network-pytorch-master/train.py\", line 137, in train\r\nfor batch_idx, (data1, data2) in enumerate(train_loader):\r\n\r\nFile \"D:\\Anaconda3\\lib\\site-packages\\torch\\utils\\data\\dataloader.py\", line 303, in iter\r\nreturn DataLoaderIter(self)\r\n\r\nFile \"D:\\Anaconda3\\lib\\site-packages\\torch\\utils\\data\\dataloader.py\", line 162, in init\r\nw.start()\r\n\r\nFile \"D:\\Anaconda3\\lib\\multiprocessing\\process.py\", line 105, in start\r\nself._popen = self._Popen(self)\r\n\r\nFile \"D:\\Anaconda3\\lib\\multiprocessing\\context.py\", line 223, in _Popen\r\nreturn _default_context.get_context().Process._Popen(process_obj)\r\n\r\nFile \"D:\\Anaconda3\\lib\\multiprocessing\\context.py\", line 322, in _Popen\r\nreturn Popen(process_obj)\r\n\r\nFile \"D:\\Anaconda3\\lib\\multiprocessing\\popen_spawn_win32.py\", line 65, in init\r\nreduction.dump(process_obj, to_child)\r\n\r\nFile \"D:\\Anaconda3\\lib\\multiprocessing\\reduction.py\", line 60, in dump\r\nForkingPickler(file, protocol).dump(obj)\r\n\r\nBrokenPipeError: [Errno 32] Broken pipe\r\n\r\n4) Some part of train related codes as follows:\r\ndef train(train_loader, tnet, criterion, optimizer, epoch):\r\nlosses = AverageMeter()\r\naccs = AverageMeter()\r\nemb_norms = AverageMeter()\r\n\r\n# switch to train mode\r\ntnet.train()\r\nfor batch_idx, (data1, data2, data3) in enumerate(train_loader):\r\n    if args.cuda:\r\n        data1, data2, data3 = data1.cuda(), data2.cuda(), data3.cuda()\r\n    data1, data2, data3 = Variable(data1), Variable(data2), Variable(data3)\r\n\r\n    # compute output\r\n    dista, distb, embedded_x, embedded_y, embedded_z = tnet(data1, data2, data3)\r\n    # 1 means, dista should be larger than distb\r\n    target = torch.FloatTensor(dista.size()).fill_(1)\r\n    if args.cuda:\r\n        target = target.cuda()\r\n    target = Variable(target)\r\n    \r\n    loss_triplet = criterion(dista, distb, target)\r\n    loss_embedd = embedded_x.norm(2) + embedded_y.norm(2) + embedded_z.norm(2)\r\n    loss = loss_triplet + 0.001 * loss_embedd\r\n\r\n    # measure accuracy and record loss\r\n    acc = accuracy(dista, distb)\r\n    losses.update(loss_triplet.data[0], data1.size(0))\r\n    accs.update(acc, data1.size(0))\r\n    emb_norms.update(loss_embedd.data[0]/3, data1.size(0))\r\n\r\n    # compute gradient and do optimizer step\r\n    optimizer.zero_grad()\r\n    loss.backward()\r\n    optimizer.step()\r\n\r\n    if batch_idx % args.log_interval == 0:\r\n        print('Train Epoch: {} [{}/{}]\\t'\r\n              'Loss: {:.4f} ({:.4f}) \\t'\r\n              'Acc: {:.2f}% ({:.2f}%) \\t'\r\n              'Emb_Norm: {:.2f} ({:.2f})'.format(\r\n            epoch, batch_idx * len(data1), len(train_loader.dataset),\r\n            losses.val, losses.avg, \r\n            100. * accs.val, 100. * accs.avg, emb_norms.val, emb_norms.avg))\r\n# log avg values to somewhere\r\nplotter.plot('acc', 'train', epoch, accs.avg)\r\nplotter.plot('loss', 'train', epoch, losses.avg)\r\nplotter.plot('emb_norms', 'train', epoch, emb_norms.avg)\r\n\r\nThank you so much."}