{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/346547291", "html_url": "https://github.com/pytorch/pytorch/issues/2341#issuecomment-346547291", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2341", "id": 346547291, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjU0NzI5MQ==", "user": {"login": "karmus89", "id": 17722707, "node_id": "MDQ6VXNlcjE3NzIyNzA3", "avatar_url": "https://avatars0.githubusercontent.com/u/17722707?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karmus89", "html_url": "https://github.com/karmus89", "followers_url": "https://api.github.com/users/karmus89/followers", "following_url": "https://api.github.com/users/karmus89/following{/other_user}", "gists_url": "https://api.github.com/users/karmus89/gists{/gist_id}", "starred_url": "https://api.github.com/users/karmus89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karmus89/subscriptions", "organizations_url": "https://api.github.com/users/karmus89/orgs", "repos_url": "https://api.github.com/users/karmus89/repos", "events_url": "https://api.github.com/users/karmus89/events{/privacy}", "received_events_url": "https://api.github.com/users/karmus89/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-23T07:35:57Z", "updated_at": "2017-11-23T07:39:19Z", "author_association": "NONE", "body_html": "<p>Will do! And remember, I'm a using Windows machine. The code is directly copied from the tutorial <a href=\"http://pytorch.org/tutorials/beginner/transfer_learning_tutorial.html\" rel=\"nofollow\">PyTorch: Transfer Learning Tutorial</a>. This means that the dataset has to be downloaded and extracted as instructed.</p>\n<p>The code to reproduce the error:</p>\n<pre><code>import torch\nimport torchvision\nfrom torchvision import datasets, models, transforms\nimport os\n\ndata_transforms = {\n    'train': transforms.Compose([\n        transforms.RandomSizedCrop(224),\n        transforms.RandomHorizontalFlip(),\n        transforms.ToTensor(),\n        transforms.Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225])\n    ]),\n    'val': transforms.Compose([\n        transforms.Scale(256),\n        transforms.CenterCrop(224),\n        transforms.ToTensor(),\n        transforms.Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225])\n    ]),\n}\n\ndata_dir = 'hymenoptera_data'\nimage_datasets = {x: datasets.ImageFolder(os.path.join(data_dir, x),\n                                          data_transforms[x])\n                  for x in ['train', 'val']}\ndataloaders = {x: torch.utils.data.DataLoader(image_datasets[x], batch_size=4,\n                                             shuffle=True, num_workers=4)\n              for x in ['train', 'val']}\n\n# The code fill fail here trying to iterate over the DataLoader with multiple num_workers (Windows only)\ninputs, classes = next(iter(dataloaders['train']))\n</code></pre>\n<p>And I just made some PyTorch forum posts regarding this. The problem lies with Python's <code>multiprocessing</code> and Windows. Please see <a href=\"https://discuss.pytorch.org/t/brokenpipeerror-errno-32-broken-pipe-when-i-run-cifar10-tutorial-py/6224/4?u=karmus89\" rel=\"nofollow\">this</a> PyTorch discussion reply as I don't want to overly copy paste stuff here.</p>\n<h4>Edit:</h4>\n<p>Here's the code that doesn't crash, which at the same time complies with Python's multiprocessing programming guidelines for Windows machines:</p>\n<pre><code>import torch\nimport torchvision\nfrom torchvision import datasets, models, transforms\nimport os\n\nif __name__ == \"__main__\":\n    \n    data_transforms = {\n        'train': transforms.Compose([\n            transforms.RandomSizedCrop(224),\n            transforms.RandomHorizontalFlip(),\n            transforms.ToTensor(),\n            transforms.Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225])\n        ]),\n        'val': transforms.Compose([\n            transforms.Scale(256),\n            transforms.CenterCrop(224),\n            transforms.ToTensor(),\n            transforms.Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225])\n        ]),\n    }\n    \n    data_dir = 'hymenoptera_data'\n    image_datasets = {x: datasets.ImageFolder(os.path.join(data_dir, x),\n                                              data_transforms[x])\n                      for x in ['train', 'val']}\n    dataloaders = {x: torch.utils.data.DataLoader(image_datasets[x], batch_size=4,\n                                                 shuffle=True, num_workers=4)\n                  for x in ['train', 'val']}\n\n    inputs, classes = next(iter(dataloaders['train']))\n</code></pre>", "body_text": "Will do! And remember, I'm a using Windows machine. The code is directly copied from the tutorial PyTorch: Transfer Learning Tutorial. This means that the dataset has to be downloaded and extracted as instructed.\nThe code to reproduce the error:\nimport torch\nimport torchvision\nfrom torchvision import datasets, models, transforms\nimport os\n\ndata_transforms = {\n    'train': transforms.Compose([\n        transforms.RandomSizedCrop(224),\n        transforms.RandomHorizontalFlip(),\n        transforms.ToTensor(),\n        transforms.Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225])\n    ]),\n    'val': transforms.Compose([\n        transforms.Scale(256),\n        transforms.CenterCrop(224),\n        transforms.ToTensor(),\n        transforms.Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225])\n    ]),\n}\n\ndata_dir = 'hymenoptera_data'\nimage_datasets = {x: datasets.ImageFolder(os.path.join(data_dir, x),\n                                          data_transforms[x])\n                  for x in ['train', 'val']}\ndataloaders = {x: torch.utils.data.DataLoader(image_datasets[x], batch_size=4,\n                                             shuffle=True, num_workers=4)\n              for x in ['train', 'val']}\n\n# The code fill fail here trying to iterate over the DataLoader with multiple num_workers (Windows only)\ninputs, classes = next(iter(dataloaders['train']))\n\nAnd I just made some PyTorch forum posts regarding this. The problem lies with Python's multiprocessing and Windows. Please see this PyTorch discussion reply as I don't want to overly copy paste stuff here.\nEdit:\nHere's the code that doesn't crash, which at the same time complies with Python's multiprocessing programming guidelines for Windows machines:\nimport torch\nimport torchvision\nfrom torchvision import datasets, models, transforms\nimport os\n\nif __name__ == \"__main__\":\n    \n    data_transforms = {\n        'train': transforms.Compose([\n            transforms.RandomSizedCrop(224),\n            transforms.RandomHorizontalFlip(),\n            transforms.ToTensor(),\n            transforms.Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225])\n        ]),\n        'val': transforms.Compose([\n            transforms.Scale(256),\n            transforms.CenterCrop(224),\n            transforms.ToTensor(),\n            transforms.Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225])\n        ]),\n    }\n    \n    data_dir = 'hymenoptera_data'\n    image_datasets = {x: datasets.ImageFolder(os.path.join(data_dir, x),\n                                              data_transforms[x])\n                      for x in ['train', 'val']}\n    dataloaders = {x: torch.utils.data.DataLoader(image_datasets[x], batch_size=4,\n                                                 shuffle=True, num_workers=4)\n                  for x in ['train', 'val']}\n\n    inputs, classes = next(iter(dataloaders['train']))", "body": "Will do! And remember, I'm a using Windows machine. The code is directly copied from the tutorial [PyTorch: Transfer Learning Tutorial](http://pytorch.org/tutorials/beginner/transfer_learning_tutorial.html). This means that the dataset has to be downloaded and extracted as instructed.\r\n\r\nThe code to reproduce the error:\r\n```\r\nimport torch\r\nimport torchvision\r\nfrom torchvision import datasets, models, transforms\r\nimport os\r\n\r\ndata_transforms = {\r\n    'train': transforms.Compose([\r\n        transforms.RandomSizedCrop(224),\r\n        transforms.RandomHorizontalFlip(),\r\n        transforms.ToTensor(),\r\n        transforms.Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225])\r\n    ]),\r\n    'val': transforms.Compose([\r\n        transforms.Scale(256),\r\n        transforms.CenterCrop(224),\r\n        transforms.ToTensor(),\r\n        transforms.Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225])\r\n    ]),\r\n}\r\n\r\ndata_dir = 'hymenoptera_data'\r\nimage_datasets = {x: datasets.ImageFolder(os.path.join(data_dir, x),\r\n                                          data_transforms[x])\r\n                  for x in ['train', 'val']}\r\ndataloaders = {x: torch.utils.data.DataLoader(image_datasets[x], batch_size=4,\r\n                                             shuffle=True, num_workers=4)\r\n              for x in ['train', 'val']}\r\n\r\n# The code fill fail here trying to iterate over the DataLoader with multiple num_workers (Windows only)\r\ninputs, classes = next(iter(dataloaders['train']))\r\n```\r\n\r\nAnd I just made some PyTorch forum posts regarding this. The problem lies with Python's `multiprocessing` and Windows. Please see [this](https://discuss.pytorch.org/t/brokenpipeerror-errno-32-broken-pipe-when-i-run-cifar10-tutorial-py/6224/4?u=karmus89) PyTorch discussion reply as I don't want to overly copy paste stuff here.\r\n\r\n#### Edit:\r\n\r\nHere's the code that doesn't crash, which at the same time complies with Python's multiprocessing programming guidelines for Windows machines:\r\n\r\n```\r\nimport torch\r\nimport torchvision\r\nfrom torchvision import datasets, models, transforms\r\nimport os\r\n\r\nif __name__ == \"__main__\":\r\n    \r\n    data_transforms = {\r\n        'train': transforms.Compose([\r\n            transforms.RandomSizedCrop(224),\r\n            transforms.RandomHorizontalFlip(),\r\n            transforms.ToTensor(),\r\n            transforms.Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225])\r\n        ]),\r\n        'val': transforms.Compose([\r\n            transforms.Scale(256),\r\n            transforms.CenterCrop(224),\r\n            transforms.ToTensor(),\r\n            transforms.Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225])\r\n        ]),\r\n    }\r\n    \r\n    data_dir = 'hymenoptera_data'\r\n    image_datasets = {x: datasets.ImageFolder(os.path.join(data_dir, x),\r\n                                              data_transforms[x])\r\n                      for x in ['train', 'val']}\r\n    dataloaders = {x: torch.utils.data.DataLoader(image_datasets[x], batch_size=4,\r\n                                                 shuffle=True, num_workers=4)\r\n                  for x in ['train', 'val']}\r\n\r\n    inputs, classes = next(iter(dataloaders['train']))\r\n```"}