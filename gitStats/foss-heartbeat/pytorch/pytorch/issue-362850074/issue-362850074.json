{"url": "https://api.github.com/repos/pytorch/pytorch/issues/11973", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11973/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11973/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11973/events", "html_url": "https://github.com/pytorch/pytorch/pull/11973", "id": 362850074, "node_id": "MDExOlB1bGxSZXF1ZXN0MjE3NDUzMDQ2", "number": 11973, "title": "Merge Tensor.", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-22T11:32:44Z", "updated_at": "2018-11-23T15:51:51Z", "closed_at": "2018-10-08T16:36:19Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/11973", "html_url": "https://github.com/pytorch/pytorch/pull/11973", "diff_url": "https://github.com/pytorch/pytorch/pull/11973.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/11973.patch"}, "body_html": "<p>Stack:<br>\n\u00a0\u00a0\u00a0\u00a0<g-emoji class=\"g-emoji\" alias=\"white_circle\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/26aa.png\">\u26aa\ufe0f</g-emoji>\u00a0 <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"362849961\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/11970\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/11970/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/11970\">#11970</a> Make ATen-core and caffe2 mutually recursive / merge template data()\u00a0\u00a0<a href=\"https://our.internmc.facebook.com/intern/diff/D9967509/\" rel=\"nofollow\"><g-emoji class=\"g-emoji\" alias=\"yellow_heart\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f49b.png\">\ud83d\udc9b</g-emoji></a><br>\n\u00a0\u00a0\u00a0\u00a0<g-emoji class=\"g-emoji\" alias=\"white_circle\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/26aa.png\">\u26aa\ufe0f</g-emoji>\u00a0 <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"362850046\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/11971\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/11971/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/11971\">#11971</a> Merge TensorImpl.\u00a0\u00a0<a href=\"https://our.internmc.facebook.com/intern/diff/D9995559/\" rel=\"nofollow\"><g-emoji class=\"g-emoji\" alias=\"yellow_heart\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f49b.png\">\ud83d\udc9b</g-emoji></a><br>\n\u00a0\u00a0\u00a0\u00a0<g-emoji class=\"g-emoji\" alias=\"white_circle\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/26aa.png\">\u26aa\ufe0f</g-emoji>\u00a0 <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"362850059\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/11972\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/11972/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/11972\">#11972</a> Merge UndefinedTensorImpl.\u00a0\u00a0<a href=\"https://our.internmc.facebook.com/intern/diff/D9995633/\" rel=\"nofollow\"><g-emoji class=\"g-emoji\" alias=\"yellow_heart\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f49b.png\">\ud83d\udc9b</g-emoji></a><br>\n\u00a0\u00a0\u00a0\u00a0<g-emoji class=\"g-emoji\" alias=\"black_circle\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/26ab.png\">\u26ab\ufe0f</g-emoji>\u00a0 <strong><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"362850074\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/11973\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/11973/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/11973\">#11973</a> Merge Tensor.</strong>\u00a0\u00a0<a href=\"https://our.internmc.facebook.com/intern/diff/D9996898/\" rel=\"nofollow\"><g-emoji class=\"g-emoji\" alias=\"green_heart\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f49a.png\">\ud83d\udc9a</g-emoji></a></p>\n<ul>\n<li>Renamed at::Tensor from \"struct\" to \"class\", to line it up with<br>\nCaffe2 (if it has private members, make it a class!)  Had to fix<br>\nforward declarations.</li>\n<li>Fix forward declarations of caffe2::Tensor to forward declare<br>\nat::Tensor and then declare using at::Tensor in caffe2</li>\n<li>Modify Tensor::data to accept any type, not just ScalarType T.</li>\n<li>Rename tensor_impl_ field to impl_, to line up the impl name.</li>\n<li>Add qualifiers for some caffe2 only identifiers.</li>\n<li>Very critically, DELETE the now redundant CAFFE_KNOWN_TYPE for<br>\ncaffe2::Tensor. (Right now, this will silently cause very strange typeid<br>\nmismatch errors.)</li>\n<li>Fix some newly added methods on Tensor which had the wrong type.</li>\n<li>Merge data() to correctly virtual dispatch, so that we can handle the PyTorch<br>\nvariable case. This is different from the old Caffe2 implementation, which<br>\nwas inlineable. To do this, I had to introduce some more helper methods,<br>\nwhich do the obvious/logical things:\n<ul>\n<li>{Storage,StorageImpl}::IsTypeIdentifier(caffe2::TypeIdentifier)</li>\n<li>{Storage,StorageImpl}::unsafe_data() (non-templated)</li>\n<li>TypeIdentifier::name()</li>\n</ul>\n</li>\n</ul>\n<p>BC notes:</p>\n<ul>\n<li>Tensor::data() now returns a non-const T*, not a const T* (as it did<br>\npreviously). This is mostly compatible, but in some cases we pass<br>\nreferences to pointers, e.g., const T*&amp;. This is NOT convertible.<br>\nI generalize data to accept \"const\" types, and then modified call sites<br>\nto pass const T to get a const pointer.</li>\n<li>New constructors for Tensor seem to cause some brace-enclosed<br>\ninitializer lists to become ambiguous. I fixed the one case where this<br>\nhappened; in the future, we may want to reduce the number of tensor<br>\nconstructors.</li>\n</ul>\n<p>Differential Revision: <a href=\"https://our.internmc.facebook.com/intern/diff/D9996898/\" rel=\"nofollow\">D9996898</a></p>", "body_text": "Stack:\n\u00a0\u00a0\u00a0\u00a0\u26aa\ufe0f\u00a0 #11970 Make ATen-core and caffe2 mutually recursive / merge template data()\u00a0\u00a0\ud83d\udc9b\n\u00a0\u00a0\u00a0\u00a0\u26aa\ufe0f\u00a0 #11971 Merge TensorImpl.\u00a0\u00a0\ud83d\udc9b\n\u00a0\u00a0\u00a0\u00a0\u26aa\ufe0f\u00a0 #11972 Merge UndefinedTensorImpl.\u00a0\u00a0\ud83d\udc9b\n\u00a0\u00a0\u00a0\u00a0\u26ab\ufe0f\u00a0 #11973 Merge Tensor.\u00a0\u00a0\ud83d\udc9a\n\nRenamed at::Tensor from \"struct\" to \"class\", to line it up with\nCaffe2 (if it has private members, make it a class!)  Had to fix\nforward declarations.\nFix forward declarations of caffe2::Tensor to forward declare\nat::Tensor and then declare using at::Tensor in caffe2\nModify Tensor::data to accept any type, not just ScalarType T.\nRename tensor_impl_ field to impl_, to line up the impl name.\nAdd qualifiers for some caffe2 only identifiers.\nVery critically, DELETE the now redundant CAFFE_KNOWN_TYPE for\ncaffe2::Tensor. (Right now, this will silently cause very strange typeid\nmismatch errors.)\nFix some newly added methods on Tensor which had the wrong type.\nMerge data() to correctly virtual dispatch, so that we can handle the PyTorch\nvariable case. This is different from the old Caffe2 implementation, which\nwas inlineable. To do this, I had to introduce some more helper methods,\nwhich do the obvious/logical things:\n\n{Storage,StorageImpl}::IsTypeIdentifier(caffe2::TypeIdentifier)\n{Storage,StorageImpl}::unsafe_data() (non-templated)\nTypeIdentifier::name()\n\n\n\nBC notes:\n\nTensor::data() now returns a non-const T*, not a const T* (as it did\npreviously). This is mostly compatible, but in some cases we pass\nreferences to pointers, e.g., const T*&. This is NOT convertible.\nI generalize data to accept \"const\" types, and then modified call sites\nto pass const T to get a const pointer.\nNew constructors for Tensor seem to cause some brace-enclosed\ninitializer lists to become ambiguous. I fixed the one case where this\nhappened; in the future, we may want to reduce the number of tensor\nconstructors.\n\nDifferential Revision: D9996898", "body": "Stack:\n&nbsp;&nbsp;&nbsp;&nbsp;:white_circle:&nbsp; #11970 Make ATen-core and caffe2 mutually recursive / merge template data<T>()&nbsp;&nbsp;[:yellow_heart:](https://our.internmc.facebook.com/intern/diff/D9967509/)\n&nbsp;&nbsp;&nbsp;&nbsp;:white_circle:&nbsp; #11971 Merge TensorImpl.&nbsp;&nbsp;[:yellow_heart:](https://our.internmc.facebook.com/intern/diff/D9995559/)\n&nbsp;&nbsp;&nbsp;&nbsp;:white_circle:&nbsp; #11972 Merge UndefinedTensorImpl.&nbsp;&nbsp;[:yellow_heart:](https://our.internmc.facebook.com/intern/diff/D9995633/)\n&nbsp;&nbsp;&nbsp;&nbsp;:black_circle:&nbsp; **#11973 Merge Tensor.**&nbsp;&nbsp;[:green_heart:](https://our.internmc.facebook.com/intern/diff/D9996898/)\n\n- Renamed at::Tensor from \"struct\" to \"class\", to line it up with\n  Caffe2 (if it has private members, make it a class!)  Had to fix\n  forward declarations.\n- Fix forward declarations of caffe2::Tensor to forward declare\n  at::Tensor and then declare using at::Tensor in caffe2\n- Modify Tensor::data<T> to accept any type, not just ScalarType T.\n- Rename tensor_impl_ field to impl_, to line up the impl name.\n- Add qualifiers for some caffe2 only identifiers.\n- Very critically, DELETE the now redundant CAFFE_KNOWN_TYPE for\n  caffe2::Tensor. (Right now, this will silently cause very strange typeid\n  mismatch errors.)\n- Fix some newly added methods on Tensor which had the wrong type.\n- Merge data() to correctly virtual dispatch, so that we can handle the PyTorch\n  variable case. This is different from the old Caffe2 implementation, which\n  was inlineable. To do this, I had to introduce some more helper methods,\n  which do the obvious/logical things:\n    - {Storage,StorageImpl}::IsTypeIdentifier(caffe2::TypeIdentifier)\n    - {Storage,StorageImpl}::unsafe_data() (non-templated)\n    - TypeIdentifier::name()\n\nBC notes:\n- Tensor::data<T>() now returns a non-const T*, not a const T* (as it did\n  previously). This is mostly compatible, but in some cases we pass\n  references to pointers, e.g., const T*&. This is NOT convertible.\n  I generalize data to accept \"const\" types, and then modified call sites\n  to pass const T to get a const pointer.\n- New constructors for Tensor seem to cause some brace-enclosed\n  initializer lists to become ambiguous. I fixed the one case where this\n  happened; in the future, we may want to reduce the number of tensor\n  constructors.\n\nDifferential Revision: [D9996898](https://our.internmc.facebook.com/intern/diff/D9996898/)"}