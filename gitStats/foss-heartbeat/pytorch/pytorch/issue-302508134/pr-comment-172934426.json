{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/172934426", "pull_request_review_id": 102038071, "id": 172934426, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MjkzNDQyNg==", "diff_hunk": "@@ -2,7 +2,7 @@\n \n struct Doubler {\n   Doubler(int A, int B) {\n-     tensor_ = at::CPU(at::kDouble).ones({A, B});\n+    tensor_ = torch::as_variable(at::CPU(at::kDouble).ones({A, B}));", "path": "test/cpp_extensions/doubler.h", "position": null, "original_position": 5, "commit_id": "e219d18478d5e87a7ca12ce5ebce5bf959659ca7", "original_commit_id": "a000f53d67ff2159f4cd057f103f043410a853ff", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "Suggestion: add `torch::CPU(...)`, `torch::CUDA(...)`, and `torch::getType(...)` which will return `VariableType` instances and allocate variables.  Now we do not need torch::as_variable in common usage, while it still allows us to unpack the tensors in our own internal code.", "created_at": "2018-03-07T18:12:13Z", "updated_at": "2018-11-23T15:40:27Z", "html_url": "https://github.com/pytorch/pytorch/pull/5581#discussion_r172934426", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5581", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/172934426"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5581#discussion_r172934426"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5581"}}, "body_html": "<p>Suggestion: add <code>torch::CPU(...)</code>, <code>torch::CUDA(...)</code>, and <code>torch::getType(...)</code> which will return <code>VariableType</code> instances and allocate variables.  Now we do not need torch::as_variable in common usage, while it still allows us to unpack the tensors in our own internal code.</p>", "body_text": "Suggestion: add torch::CPU(...), torch::CUDA(...), and torch::getType(...) which will return VariableType instances and allocate variables.  Now we do not need torch::as_variable in common usage, while it still allows us to unpack the tensors in our own internal code."}