{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/173522606", "pull_request_review_id": 102734297, "id": 173522606, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzUyMjYwNg==", "diff_hunk": "@@ -428,19 +426,41 @@ inline Variable make_variable(at::Tensor data, Edge gradient_edge) {\n // Tensor Conversion\n //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n-inline Variable& as_variable_ref(at::Tensor& tensor) {\n-#ifdef DEBUG\n+inline bool is_variable(const at::Tensor& tensor) noexcept {\n   // dynamic_cast will return a nullptr if the `TensorImpl`'s dynamic type is\n   // not `Variable::Impl`.\n-  if (dynamic_cast<Variable::Impl*>(tensor.get()) == nullptr) {\n-    throw std::runtime_error(\n+  return dynamic_cast<const Variable::Impl*>(tensor.get()) != nullptr;\n+}\n+\n+/// Downcasts the `Tensor` reference to a `Variable` reference. If compiling\n+/// in DEBUG mode and the tensor's dynamic type is not in fact `Variable`,\n+/// throws a `std::invalid_argument` exception.\n+inline Variable& as_variable_ref(at::Tensor& tensor, bool check = false) {", "path": "torch/csrc/autograd/variable.h", "position": null, "original_position": 34, "commit_id": "e219d18478d5e87a7ca12ce5ebce5bf959659ca7", "original_commit_id": "54564f09b7e3ee3cf91d3f88d8a9c34a18b0288b", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "What do you think about pulling in the part of Ed's change (#5123) that adds `bool is_variable` to Type just always checking that `tensor` is truly a variable?", "created_at": "2018-03-09T18:00:09Z", "updated_at": "2018-11-23T15:40:32Z", "html_url": "https://github.com/pytorch/pytorch/pull/5581#discussion_r173522606", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5581", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/173522606"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5581#discussion_r173522606"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5581"}}, "body_html": "<p>What do you think about pulling in the part of Ed's change (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"295321827\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/5123\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/5123/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/5123\">#5123</a>) that adds <code>bool is_variable</code> to Type just always checking that <code>tensor</code> is truly a variable?</p>", "body_text": "What do you think about pulling in the part of Ed's change (#5123) that adds bool is_variable to Type just always checking that tensor is truly a variable?"}