{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/172939114", "pull_request_review_id": 102043413, "id": 172939114, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MjkzOTExNA==", "diff_hunk": "@@ -1,33 +1,44 @@\n #pragma once\n \n #include <Python.h>\n+\n #include <ATen/ATen.h>\n #include <pybind11/pybind11.h>\n #include <pybind11/stl.h>\n \n #include \"torch/csrc/DynamicTypes.h\"\n #include \"torch/csrc/autograd/python_variable.h\"\n \n+#include <stdexcept>\n+\n namespace py = pybind11;\n \n namespace pybind11 { namespace detail {\n \n-// handle Tensor <-> at::Tensor conversions\n-// Python Variables are unpacked into Tensors\n-template <> struct type_caster<at::Tensor> {\n-public:\n+// torch.autograd.Variable <-> at::Tensor conversions (without unwrapping)\n+template <>\n+struct type_caster<at::Tensor> {\n+ public:\n   PYBIND11_TYPE_CASTER(at::Tensor, _(\"at::Tensor\"));\n \n   bool load(handle src, bool) {\n     PyObject* obj = src.ptr();\n     if (THPVariable_Check(obj)) {\n-      value = ((THPVariable*)obj)->cdata.data();\n+      value = reinterpret_cast<THPVariable*>(obj)->cdata;\n       return true;\n     }\n     return false;\n   }\n-  static handle cast(at::Tensor src, return_value_policy /* policy */, handle /* parent */) {\n-    return handle(THPVariable_Wrap(torch::autograd::make_variable(src, false)));\n+\n+  static handle\n+  cast(at::Tensor src, return_value_policy /* policy */, handle /* parent */) {\n+#ifdef DEBUG", "path": "torch/csrc/utils/pybind.h", "position": null, "original_position": 42, "commit_id": "e219d18478d5e87a7ca12ce5ebce5bf959659ca7", "original_commit_id": "a000f53d67ff2159f4cd057f103f043410a853ff", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "Related to @apaszke's points about memory corruption, perhaps we should remove the DEBUG guards. It's probably worth always checking the type here, especially if we udpate & merge @ezyang's PR that improves the speed of \"is_variable\" checking. ", "created_at": "2018-03-07T18:27:42Z", "updated_at": "2018-11-23T15:40:27Z", "html_url": "https://github.com/pytorch/pytorch/pull/5581#discussion_r172939114", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5581", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/172939114"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5581#discussion_r172939114"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5581"}}, "body_html": "<p>Related to <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a>'s points about memory corruption, perhaps we should remove the DEBUG guards. It's probably worth always checking the type here, especially if we udpate &amp; merge <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a>'s PR that improves the speed of \"is_variable\" checking.</p>", "body_text": "Related to @apaszke's points about memory corruption, perhaps we should remove the DEBUG guards. It's probably worth always checking the type here, especially if we udpate & merge @ezyang's PR that improves the speed of \"is_variable\" checking."}