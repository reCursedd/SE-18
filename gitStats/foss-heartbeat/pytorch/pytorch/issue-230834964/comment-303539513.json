{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/303539513", "html_url": "https://github.com/pytorch/pytorch/issues/1634#issuecomment-303539513", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1634", "id": 303539513, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzUzOTUxMw==", "user": {"login": "el3ment", "id": 2135235, "node_id": "MDQ6VXNlcjIxMzUyMzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2135235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/el3ment", "html_url": "https://github.com/el3ment", "followers_url": "https://api.github.com/users/el3ment/followers", "following_url": "https://api.github.com/users/el3ment/following{/other_user}", "gists_url": "https://api.github.com/users/el3ment/gists{/gist_id}", "starred_url": "https://api.github.com/users/el3ment/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/el3ment/subscriptions", "organizations_url": "https://api.github.com/users/el3ment/orgs", "repos_url": "https://api.github.com/users/el3ment/repos", "events_url": "https://api.github.com/users/el3ment/events{/privacy}", "received_events_url": "https://api.github.com/users/el3ment/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-23T21:36:48Z", "updated_at": "2017-05-23T21:36:48Z", "author_association": "NONE", "body_html": "<p>You are correct. Sorry about that. My original issue was embeded in a Function but the issue is definitely not with what I labeled this issue as.</p>\n<p>That said, this example code does actually raise the opposite problem that using with device() is ignored by clone(). I'm not sure if this is expected or not.</p>\n<pre><code>import torch\n\nA = torch.randn(5)\nA = A.cuda()\nprint(A.get_device())\n\nwith torch.cuda.device(1):\n\tA2 = torch.randn(5)\n\tA2 = A2.cuda()\n\tprint(A2.get_device())\n\t\nD = A.clone()\nE = A2.clone()\nprint(D.get_device(), E.get_device())\n</code></pre>\n<p>outputs:</p>\n<pre><code>('should be 0', 0)\n('should be 1', 1)\n('should be (0, 1)', 0, 1)\n('should be (0, 0):', 0, 1)\n</code></pre>", "body_text": "You are correct. Sorry about that. My original issue was embeded in a Function but the issue is definitely not with what I labeled this issue as.\nThat said, this example code does actually raise the opposite problem that using with device() is ignored by clone(). I'm not sure if this is expected or not.\nimport torch\n\nA = torch.randn(5)\nA = A.cuda()\nprint(A.get_device())\n\nwith torch.cuda.device(1):\n\tA2 = torch.randn(5)\n\tA2 = A2.cuda()\n\tprint(A2.get_device())\n\t\nD = A.clone()\nE = A2.clone()\nprint(D.get_device(), E.get_device())\n\noutputs:\n('should be 0', 0)\n('should be 1', 1)\n('should be (0, 1)', 0, 1)\n('should be (0, 0):', 0, 1)", "body": "You are correct. Sorry about that. My original issue was embeded in a Function but the issue is definitely not with what I labeled this issue as.\r\n\r\nThat said, this example code does actually raise the opposite problem that using with device() is ignored by clone(). I'm not sure if this is expected or not.\r\n\r\n \r\n```\r\nimport torch\r\n\r\nA = torch.randn(5)\r\nA = A.cuda()\r\nprint(A.get_device())\r\n\r\nwith torch.cuda.device(1):\r\n\tA2 = torch.randn(5)\r\n\tA2 = A2.cuda()\r\n\tprint(A2.get_device())\r\n\t\r\nD = A.clone()\r\nE = A2.clone()\r\nprint(D.get_device(), E.get_device())\r\n```\r\noutputs:\r\n```\r\n('should be 0', 0)\r\n('should be 1', 1)\r\n('should be (0, 1)', 0, 1)\r\n('should be (0, 0):', 0, 1)\r\n```\r\n"}