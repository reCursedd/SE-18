{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/303544433", "html_url": "https://github.com/pytorch/pytorch/issues/1634#issuecomment-303544433", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1634", "id": 303544433, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzU0NDQzMw==", "user": {"login": "el3ment", "id": 2135235, "node_id": "MDQ6VXNlcjIxMzUyMzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2135235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/el3ment", "html_url": "https://github.com/el3ment", "followers_url": "https://api.github.com/users/el3ment/followers", "following_url": "https://api.github.com/users/el3ment/following{/other_user}", "gists_url": "https://api.github.com/users/el3ment/gists{/gist_id}", "starred_url": "https://api.github.com/users/el3ment/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/el3ment/subscriptions", "organizations_url": "https://api.github.com/users/el3ment/orgs", "repos_url": "https://api.github.com/users/el3ment/repos", "events_url": "https://api.github.com/users/el3ment/events{/privacy}", "received_events_url": "https://api.github.com/users/el3ment/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-23T21:58:07Z", "updated_at": "2017-05-23T21:58:07Z", "author_association": "NONE", "body_html": "<p>Bah, sorry</p>\n<pre><code>import torch\n\nA = torch.randn(5)\nA = A.cuda()\nprint('should be 0', A.get_device())\n\nwith torch.cuda.device(1):\n\tA2 = torch.randn(5)\n\tA2 = A2.cuda()\n\tprint('should be 1', A2.get_device())\n\nD = A.clone()\nE = A2.clone()\nprint('should be (0, 1)', D.get_device(), E.get_device())\n\nwith torch.cuda.device(0):\n\tH = A.clone()\n\tJ = A2.clone()\n\tprint('should be (0, 0):', H.get_device(), J.get_device())\n</code></pre>", "body_text": "Bah, sorry\nimport torch\n\nA = torch.randn(5)\nA = A.cuda()\nprint('should be 0', A.get_device())\n\nwith torch.cuda.device(1):\n\tA2 = torch.randn(5)\n\tA2 = A2.cuda()\n\tprint('should be 1', A2.get_device())\n\nD = A.clone()\nE = A2.clone()\nprint('should be (0, 1)', D.get_device(), E.get_device())\n\nwith torch.cuda.device(0):\n\tH = A.clone()\n\tJ = A2.clone()\n\tprint('should be (0, 0):', H.get_device(), J.get_device())", "body": "Bah, sorry\r\n\r\n```\r\nimport torch\r\n\r\nA = torch.randn(5)\r\nA = A.cuda()\r\nprint('should be 0', A.get_device())\r\n\r\nwith torch.cuda.device(1):\r\n\tA2 = torch.randn(5)\r\n\tA2 = A2.cuda()\r\n\tprint('should be 1', A2.get_device())\r\n\r\nD = A.clone()\r\nE = A2.clone()\r\nprint('should be (0, 1)', D.get_device(), E.get_device())\r\n\r\nwith torch.cuda.device(0):\r\n\tH = A.clone()\r\n\tJ = A2.clone()\r\n\tprint('should be (0, 0):', H.get_device(), J.get_device())\r\n```"}