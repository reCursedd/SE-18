{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/1421", "id": 118444122, "node_id": "MDExOlB1bGxSZXF1ZXN0MTE4NDQ0MTIy", "html_url": "https://github.com/pytorch/pytorch/pull/1421", "diff_url": "https://github.com/pytorch/pytorch/pull/1421.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/1421.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1421", "number": 1421, "state": "closed", "locked": false, "title": "Refactor test_sparse to reduce boilerplate.", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Instead of manually creating a helper function, threading an is_cuda\r\nparameter around, and creating a test method for CUDA and non-CUDA\r\nvariants, we take a different approach:\r\n\r\n- There is now some new member variables initialized in setUp which\r\n  control the aspects of how we carry out the test; at the moment,\r\n  it's just whether or not we are using CUDA or not.  This means\r\n  you don't have to pass is_cuda around, or do a conditional to\r\n  get the triplet of constructors you need.\r\n\r\n  I'll note that I am not a big fan of member variables in test\r\n  objects, but these are (intended to be) immutable so I think\r\n  it should be OK.\r\n\r\n- Instead of manually defining test_foo and test_foo_cuda, we now\r\n  have a new TestCudaSparse class which overrides setUp (from above)\r\n  to swap in the CUDA implementation.  Way less boilerplate, and NO\r\n  metaprogramming needed.\r\n\r\n  If you need to opt out of CUDA testing, there is a new cpu_only\r\n  decorator you can use.\r\n\r\nBUYER BEWARE: I haven't actually tested this on GPU yet.\r\n\r\nSigned-off-by: Edward Z. Yang <ezyang@fb.com>", "created_at": "2017-05-01T21:23:09Z", "updated_at": "2018-11-23T15:33:18Z", "closed_at": "2017-05-02T01:52:59Z", "merged_at": "2017-05-02T01:52:59Z", "merge_commit_sha": "dca208b525653d64a6c89527975d1840e2cf6142", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1421/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1421/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1421/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/f2b0ae3e9118ea674bb7c5583df6a781aef5af10", "head": {"label": "ezyang:pr/test-sparse-refactor", "ref": "pr/test-sparse-refactor", "sha": "f2b0ae3e9118ea674bb7c5583df6a781aef5af10", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "repo": {"id": 88668619, "node_id": "MDEwOlJlcG9zaXRvcnk4ODY2ODYxOQ==", "name": "pytorch-unattached", "full_name": "ezyang/pytorch-unattached", "private": false, "owner": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/ezyang/pytorch-unattached", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/ezyang/pytorch-unattached", "forks_url": "https://api.github.com/repos/ezyang/pytorch-unattached/forks", "keys_url": "https://api.github.com/repos/ezyang/pytorch-unattached/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/ezyang/pytorch-unattached/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/ezyang/pytorch-unattached/teams", "hooks_url": "https://api.github.com/repos/ezyang/pytorch-unattached/hooks", "issue_events_url": "https://api.github.com/repos/ezyang/pytorch-unattached/issues/events{/number}", "events_url": "https://api.github.com/repos/ezyang/pytorch-unattached/events", "assignees_url": "https://api.github.com/repos/ezyang/pytorch-unattached/assignees{/user}", "branches_url": "https://api.github.com/repos/ezyang/pytorch-unattached/branches{/branch}", "tags_url": "https://api.github.com/repos/ezyang/pytorch-unattached/tags", "blobs_url": "https://api.github.com/repos/ezyang/pytorch-unattached/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/ezyang/pytorch-unattached/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/ezyang/pytorch-unattached/git/refs{/sha}", "trees_url": "https://api.github.com/repos/ezyang/pytorch-unattached/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/ezyang/pytorch-unattached/statuses/{sha}", "languages_url": "https://api.github.com/repos/ezyang/pytorch-unattached/languages", "stargazers_url": "https://api.github.com/repos/ezyang/pytorch-unattached/stargazers", "contributors_url": "https://api.github.com/repos/ezyang/pytorch-unattached/contributors", "subscribers_url": "https://api.github.com/repos/ezyang/pytorch-unattached/subscribers", "subscription_url": "https://api.github.com/repos/ezyang/pytorch-unattached/subscription", "commits_url": "https://api.github.com/repos/ezyang/pytorch-unattached/commits{/sha}", "git_commits_url": "https://api.github.com/repos/ezyang/pytorch-unattached/git/commits{/sha}", "comments_url": "https://api.github.com/repos/ezyang/pytorch-unattached/comments{/number}", "issue_comment_url": "https://api.github.com/repos/ezyang/pytorch-unattached/issues/comments{/number}", "contents_url": "https://api.github.com/repos/ezyang/pytorch-unattached/contents/{+path}", "compare_url": "https://api.github.com/repos/ezyang/pytorch-unattached/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/ezyang/pytorch-unattached/merges", "archive_url": "https://api.github.com/repos/ezyang/pytorch-unattached/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/ezyang/pytorch-unattached/downloads", "issues_url": "https://api.github.com/repos/ezyang/pytorch-unattached/issues{/number}", "pulls_url": "https://api.github.com/repos/ezyang/pytorch-unattached/pulls{/number}", "milestones_url": "https://api.github.com/repos/ezyang/pytorch-unattached/milestones{/number}", "notifications_url": "https://api.github.com/repos/ezyang/pytorch-unattached/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/ezyang/pytorch-unattached/labels{/name}", "releases_url": "https://api.github.com/repos/ezyang/pytorch-unattached/releases{/id}", "deployments_url": "https://api.github.com/repos/ezyang/pytorch-unattached/deployments", "created_at": "2017-04-18T20:40:24Z", "updated_at": "2018-10-15T07:10:45Z", "pushed_at": "2018-09-02T23:24:19Z", "git_url": "git://github.com/ezyang/pytorch-unattached.git", "ssh_url": "git@github.com:ezyang/pytorch-unattached.git", "clone_url": "https://github.com/ezyang/pytorch-unattached.git", "svn_url": "https://github.com/ezyang/pytorch-unattached", "homepage": "http://pytorch.org", "size": 54602, "stargazers_count": 9, "watchers_count": 9, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 4, "mirror_url": null, "archived": false, "open_issues_count": 41, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 4, "open_issues": 41, "watchers": 9, "default_branch": "c10"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "5c7453447f54721f7d08952a08d541606e1b3a68", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T12:35:43Z", "pushed_at": "2018-11-24T12:42:01Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89656, "stargazers_count": 21589, "watchers_count": 21589, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5153, "mirror_url": null, "archived": false, "open_issues_count": 2197, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5153, "open_issues": 2197, "watchers": 21589, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1421"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1421"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/1421"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/1421/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1421/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1421/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/f2b0ae3e9118ea674bb7c5583df6a781aef5af10"}}, "author_association": "CONTRIBUTOR", "body_html": "<p>Instead of manually creating a helper function, threading an is_cuda<br>\nparameter around, and creating a test method for CUDA and non-CUDA<br>\nvariants, we take a different approach:</p>\n<ul>\n<li>\n<p>There is now some new member variables initialized in setUp which<br>\ncontrol the aspects of how we carry out the test; at the moment,<br>\nit's just whether or not we are using CUDA or not.  This means<br>\nyou don't have to pass is_cuda around, or do a conditional to<br>\nget the triplet of constructors you need.</p>\n<p>I'll note that I am not a big fan of member variables in test<br>\nobjects, but these are (intended to be) immutable so I think<br>\nit should be OK.</p>\n</li>\n<li>\n<p>Instead of manually defining test_foo and test_foo_cuda, we now<br>\nhave a new TestCudaSparse class which overrides setUp (from above)<br>\nto swap in the CUDA implementation.  Way less boilerplate, and NO<br>\nmetaprogramming needed.</p>\n<p>If you need to opt out of CUDA testing, there is a new cpu_only<br>\ndecorator you can use.</p>\n</li>\n</ul>\n<p>BUYER BEWARE: I haven't actually tested this on GPU yet.</p>\n<p>Signed-off-by: Edward Z. Yang <a href=\"mailto:ezyang@fb.com\">ezyang@fb.com</a></p>", "body_text": "Instead of manually creating a helper function, threading an is_cuda\nparameter around, and creating a test method for CUDA and non-CUDA\nvariants, we take a different approach:\n\n\nThere is now some new member variables initialized in setUp which\ncontrol the aspects of how we carry out the test; at the moment,\nit's just whether or not we are using CUDA or not.  This means\nyou don't have to pass is_cuda around, or do a conditional to\nget the triplet of constructors you need.\nI'll note that I am not a big fan of member variables in test\nobjects, but these are (intended to be) immutable so I think\nit should be OK.\n\n\nInstead of manually defining test_foo and test_foo_cuda, we now\nhave a new TestCudaSparse class which overrides setUp (from above)\nto swap in the CUDA implementation.  Way less boilerplate, and NO\nmetaprogramming needed.\nIf you need to opt out of CUDA testing, there is a new cpu_only\ndecorator you can use.\n\n\nBUYER BEWARE: I haven't actually tested this on GPU yet.\nSigned-off-by: Edward Z. Yang ezyang@fb.com", "merged": true, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "comments": 1, "review_comments": 4, "maintainer_can_modify": false, "commits": 0, "additions": 0, "deletions": 0, "changed_files": 0}