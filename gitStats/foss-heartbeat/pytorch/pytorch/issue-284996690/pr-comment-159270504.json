{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/159270504", "pull_request_review_id": 86191466, "id": 159270504, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTI3MDUwNA==", "diff_hunk": "@@ -138,7 +138,7 @@\n - name: cat(TensorList tensors, int64_t dim)\n   tensors: cat_tensors_backward(grad, to_arg_sizes(tensors, dim), dim)\n \n-- name: cauchy(Tensor self, double median, double sigma, Generator generator)\n+- name: cauchy_(Tensor self, double median, double sigma, Generator generator)", "path": "tools/autograd/derivatives.yaml", "position": 29, "original_position": 5, "commit_id": "a3e18ace01e67e4b2d2ea843574858acfaca620a", "original_commit_id": "ea3a56f81127e8a2efe06bf141a7d6d528d5959c", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "ok, now I'm confused about when I need to write an inplace function name here.  I.e. there is no add_ here, but there is a cauchy_.  Is it if there is _only_ an inplace function?  Below it says \"In-place functions wil use the out-of-place derivative definition if there is no in-place specific derivative\" -- that's ambiguous about whether I can `cachy(` here or not.  It's an out-of-place definition, but is it valid?  Can you add a comment to the top describing a rule for people to use?", "created_at": "2018-01-02T17:12:32Z", "updated_at": "2018-11-23T15:37:46Z", "html_url": "https://github.com/pytorch/pytorch/pull/4395#discussion_r159270504", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4395", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/159270504"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4395#discussion_r159270504"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4395"}}, "body_html": "<p>ok, now I'm confused about when I need to write an inplace function name here.  I.e. there is no add_ here, but there is a cauchy_.  Is it if there is <em>only</em> an inplace function?  Below it says \"In-place functions wil use the out-of-place derivative definition if there is no in-place specific derivative\" -- that's ambiguous about whether I can <code>cachy(</code> here or not.  It's an out-of-place definition, but is it valid?  Can you add a comment to the top describing a rule for people to use?</p>", "body_text": "ok, now I'm confused about when I need to write an inplace function name here.  I.e. there is no add_ here, but there is a cauchy_.  Is it if there is only an inplace function?  Below it says \"In-place functions wil use the out-of-place derivative definition if there is no in-place specific derivative\" -- that's ambiguous about whether I can cachy( here or not.  It's an out-of-place definition, but is it valid?  Can you add a comment to the top describing a rule for people to use?"}