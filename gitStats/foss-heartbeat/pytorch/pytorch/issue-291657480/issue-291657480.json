{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4853", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4853/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4853/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4853/events", "html_url": "https://github.com/pytorch/pytorch/pull/4853", "id": 291657480, "node_id": "MDExOlB1bGxSZXF1ZXN0MTY1MTg0NzA0", "number": 4853, "title": "Various indexing fixes around scalars.", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-25T17:45:55Z", "updated_at": "2018-01-25T19:05:15Z", "closed_at": "2018-01-25T19:05:15Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/4853", "html_url": "https://github.com/pytorch/pytorch/pull/4853", "diff_url": "https://github.com/pytorch/pytorch/pull/4853.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/4853.patch"}, "body_html": "<ol>\n<li>Have 0-dim byte tensors behave like Py_TRUE, Py_FALSE</li>\n<li>Py_TRUE now properly returns a copy from getitem</li>\n<li>setitem now properly shapes the LHS consistent with the RHS (this doesn't really matter outside of error messages having the proper shape)</li>\n<li>setitem supports numpy-style copy_to broadcasting (cuts off prefix 1s from src), so e.g. you can setitem (1,1,2,3) to (2,3) even though<br>\nthat doesn't follow the normal inplace broadcasting rules.</li>\n</ol>", "body_text": "Have 0-dim byte tensors behave like Py_TRUE, Py_FALSE\nPy_TRUE now properly returns a copy from getitem\nsetitem now properly shapes the LHS consistent with the RHS (this doesn't really matter outside of error messages having the proper shape)\nsetitem supports numpy-style copy_to broadcasting (cuts off prefix 1s from src), so e.g. you can setitem (1,1,2,3) to (2,3) even though\nthat doesn't follow the normal inplace broadcasting rules.", "body": "1) Have 0-dim byte tensors behave like Py_TRUE, Py_FALSE\r\n1) Py_TRUE now properly returns a copy from getitem\r\n3) setitem now properly shapes the LHS consistent with the RHS (this doesn't really matter outside of error messages having the proper shape)\r\n4) setitem supports numpy-style copy_to broadcasting (cuts off prefix 1s from src), so e.g. you can setitem (1,1,2,3) to (2,3) even though\r\n   that doesn't follow the normal inplace broadcasting rules."}