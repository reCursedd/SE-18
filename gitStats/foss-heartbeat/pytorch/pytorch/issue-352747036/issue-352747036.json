{"url": "https://api.github.com/repos/pytorch/pytorch/issues/10757", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10757/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10757/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10757/events", "html_url": "https://github.com/pytorch/pytorch/issues/10757", "id": 352747036, "node_id": "MDU6SXNzdWUzNTI3NDcwMzY=", "number": 10757, "title": "Performance improvement on sparse CUDA coalesce()", "user": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-08-21T23:28:56Z", "updated_at": "2018-09-07T23:16:30Z", "closed_at": "2018-09-07T23:16:30Z", "author_association": "CONTRIBUTOR", "body_html": "<p><code>coalesce()</code> at CUDA is slower than at CPU:</p>\n<pre><code>&gt;&gt;&gt; from random import *\n&gt;&gt;&gt; n = 100\n&gt;&gt;&gt; I = torch.tensor([[randint(0, 99) for _ in range(3)] for _ in range(n)])\n&gt;&gt;&gt; V = torch.randn(n)\n&gt;&gt;&gt; size = torch.Size([100, 100, 100])\n&gt;&gt;&gt; S = torch.sparse_coo_tensor(I.t(), V, size)\n\n&gt;&gt;&gt; %timeit S.coalesce()\n1000 loops, best of 3: 255 \u00b5s per loop\n\n&gt;&gt;&gt; S = torch.sparse_coo_tensor(I.t(), V.cuda(), size)\n&gt;&gt;&gt; %timeit torch.cuda.synchronize(); S.coalesce(); torch.cuda.synchronize();\n1000 loops, best of 3: 3.52 ms per loop\n</code></pre>", "body_text": "coalesce() at CUDA is slower than at CPU:\n>>> from random import *\n>>> n = 100\n>>> I = torch.tensor([[randint(0, 99) for _ in range(3)] for _ in range(n)])\n>>> V = torch.randn(n)\n>>> size = torch.Size([100, 100, 100])\n>>> S = torch.sparse_coo_tensor(I.t(), V, size)\n\n>>> %timeit S.coalesce()\n1000 loops, best of 3: 255 \u00b5s per loop\n\n>>> S = torch.sparse_coo_tensor(I.t(), V.cuda(), size)\n>>> %timeit torch.cuda.synchronize(); S.coalesce(); torch.cuda.synchronize();\n1000 loops, best of 3: 3.52 ms per loop", "body": "`coalesce()` at CUDA is slower than at CPU:\r\n```\r\n>>> from random import *\r\n>>> n = 100\r\n>>> I = torch.tensor([[randint(0, 99) for _ in range(3)] for _ in range(n)])\r\n>>> V = torch.randn(n)\r\n>>> size = torch.Size([100, 100, 100])\r\n>>> S = torch.sparse_coo_tensor(I.t(), V, size)\r\n\r\n>>> %timeit S.coalesce()\r\n1000 loops, best of 3: 255 \u00b5s per loop\r\n\r\n>>> S = torch.sparse_coo_tensor(I.t(), V.cuda(), size)\r\n>>> %timeit torch.cuda.synchronize(); S.coalesce(); torch.cuda.synchronize();\r\n1000 loops, best of 3: 3.52 ms per loop\r\n```"}