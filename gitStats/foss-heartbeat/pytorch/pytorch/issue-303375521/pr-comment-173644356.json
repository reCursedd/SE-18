{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/173644356", "pull_request_review_id": 102872181, "id": 173644356, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzY0NDM1Ng==", "diff_hunk": "@@ -0,0 +1,246 @@\n+#pragma once\n+#include \"torch/csrc/jit/ir.h\"\n+#include \"torch/csrc/jit/graph_executor.h\"\n+#include \"torch/csrc/autograd/variable.h\"\n+\n+namespace torch { namespace jit { namespace script {\n+\n+struct Method {\n+  Method(std::string name, bool optimize)\n+  : name_(std::move(name))\n+  , graph_(std::make_shared<Graph>())\n+  , optimize(optimize) {}\n+  variable_tensor_list run(variable_tensor_list && inputs) {\n+    std::call_once(executor_init, [&]{\n+      executor = GraphExecutor(graph_, optimize);\n+    });\n+    for(auto tp : member_inputs) {\n+      inputs.push_back(*tp);\n+    }\n+    return executor.run(std::move(inputs));\n+  }\n+  std::shared_ptr<Graph> graph() const {\n+    return graph_;\n+  }\n+\n+  const std::string & name() const {\n+    return name_;\n+  }\n+  // emit a function call by inlining the callees Graph into this one\n+  // adding any extra parameters necessary to do this call\n+\n+  // defined here to keep details of member_input handling confined to this class\n+  std::vector<Value*> emit_call_to(Method & callee, ArrayRef<Value*> inputs) {\n+    JIT_ASSERT(!executor);\n+    auto fn = callee.graph();", "path": "torch/csrc/jit/script/module.h", "position": null, "original_position": 35, "commit_id": "ea6aa3491a3ed3df04c89336181fc62bbae67cd7", "original_commit_id": "42bd21e28bac0a70ef99fcdee6139d2d222eb3d2", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "It's annoying that this is not generic inlining, because of the `callee.member_inputs` business. Arguably \"member inputs\" are just free variables, so maybe you can get something generic here.", "created_at": "2018-03-11T06:21:33Z", "updated_at": "2018-11-23T15:40:34Z", "html_url": "https://github.com/pytorch/pytorch/pull/5630#discussion_r173644356", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5630", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/173644356"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5630#discussion_r173644356"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5630"}}, "body_html": "<p>It's annoying that this is not generic inlining, because of the <code>callee.member_inputs</code> business. Arguably \"member inputs\" are just free variables, so maybe you can get something generic here.</p>", "body_text": "It's annoying that this is not generic inlining, because of the callee.member_inputs business. Arguably \"member inputs\" are just free variables, so maybe you can get something generic here."}