{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7345", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7345/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7345/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7345/events", "html_url": "https://github.com/pytorch/pytorch/pull/7345", "id": 320919480, "node_id": "MDExOlB1bGxSZXF1ZXN0MTg2NDM2MzU2", "number": 7345, "title": "Fix advanced indexing with negative indices", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-07T19:06:55Z", "updated_at": "2018-05-29T15:56:38Z", "closed_at": "2018-05-13T03:24:41Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/7345", "html_url": "https://github.com/pytorch/pytorch/pull/7345", "diff_url": "https://github.com/pytorch/pytorch/pull/7345.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/7345.patch"}, "body_html": "<p><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #7156.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"319330162\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/7156\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/7156/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/7156\">#7156</a></p>\n<p>Here is some behavior before this PR:</p>\n<pre><code>In[1]:\nx = torch.arange(9).view(3, 3).contiguous()\nx\n\nOut[1]:\ntensor([[ 0,  1,  2],\n        [ 3,  4,  5],\n        [ 6,  7,  8]])\n\nIn[2]:\nx[[0], [-1]]  # Should be equivalent to x[0, -1]\n\nOut[2]:\ntensor([ 8])\n</code></pre>\n<p>However, I would expect the output to be <code>tensor([2])</code>.</p>\n<p>The bug is that negative indices are added to the computed linear index<br>\ndirectly. In the above example, the linear index computed is \"-1\", which<br>\nwraps around to \"8\", giving the last element of a flattened view of <code>x</code>.</p>\n<p>Instead, we should wrap negative indices around before adding them to<br>\nthe linear index.</p>\n<p>cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=655866\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/colesbury\">@colesbury</a></p>", "body_text": "Fixes #7156\nHere is some behavior before this PR:\nIn[1]:\nx = torch.arange(9).view(3, 3).contiguous()\nx\n\nOut[1]:\ntensor([[ 0,  1,  2],\n        [ 3,  4,  5],\n        [ 6,  7,  8]])\n\nIn[2]:\nx[[0], [-1]]  # Should be equivalent to x[0, -1]\n\nOut[2]:\ntensor([ 8])\n\nHowever, I would expect the output to be tensor([2]).\nThe bug is that negative indices are added to the computed linear index\ndirectly. In the above example, the linear index computed is \"-1\", which\nwraps around to \"8\", giving the last element of a flattened view of x.\nInstead, we should wrap negative indices around before adding them to\nthe linear index.\ncc @colesbury", "body": "Fixes #7156\r\n\r\nHere is some behavior before this PR:\r\n```\r\nIn[1]:\r\nx = torch.arange(9).view(3, 3).contiguous()\r\nx\r\n\r\nOut[1]:\r\ntensor([[ 0,  1,  2],\r\n        [ 3,  4,  5],\r\n        [ 6,  7,  8]])\r\n\r\nIn[2]:\r\nx[[0], [-1]]  # Should be equivalent to x[0, -1]\r\n\r\nOut[2]:\r\ntensor([ 8])\r\n```\r\n\r\nHowever, I would expect the output to be `tensor([2])`.\r\n\r\nThe bug is that negative indices are added to the computed linear index\r\ndirectly. In the above example, the linear index computed is \"-1\", which\r\nwraps around to \"8\", giving the last element of a flattened view of `x`.\r\n\r\nInstead, we should wrap negative indices around before adding them to\r\nthe linear index.\r\n\r\ncc @colesbury \r\n\r\n"}