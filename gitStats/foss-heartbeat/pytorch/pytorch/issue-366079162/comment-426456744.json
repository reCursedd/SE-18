{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/426456744", "html_url": "https://github.com/pytorch/pytorch/issues/12269#issuecomment-426456744", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12269", "id": 426456744, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjQ1Njc0NA==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-02T22:51:54Z", "updated_at": "2018-10-02T22:51:54Z", "author_association": "CONTRIBUTOR", "body_html": "<p>scipy uses double precision by default.<br>\nif you use that for pytorch, you get the same thing</p>\n<pre><code>&gt;&gt;&gt; import torch.distributions as dist\n&gt;&gt;&gt; x = dist.Normal(torch.tensor(0.).double(), torch.tensor(1.).double())\n&gt;&gt;&gt; x.log_prob(torch.tensor(1.0e22).double())\ntensor(-49999997781963108210598812296389655766499328., dtype=torch.float64)\n&gt;&gt;&gt; x.log_prob(torch.tensor(1.0e22).double()).item()\n-4.999999778196311e+43\n</code></pre>", "body_text": "scipy uses double precision by default.\nif you use that for pytorch, you get the same thing\n>>> import torch.distributions as dist\n>>> x = dist.Normal(torch.tensor(0.).double(), torch.tensor(1.).double())\n>>> x.log_prob(torch.tensor(1.0e22).double())\ntensor(-49999997781963108210598812296389655766499328., dtype=torch.float64)\n>>> x.log_prob(torch.tensor(1.0e22).double()).item()\n-4.999999778196311e+43", "body": "scipy uses double precision by default.\r\nif you use that for pytorch, you get the same thing\r\n```\r\n>>> import torch.distributions as dist\r\n>>> x = dist.Normal(torch.tensor(0.).double(), torch.tensor(1.).double())\r\n>>> x.log_prob(torch.tensor(1.0e22).double())\r\ntensor(-49999997781963108210598812296389655766499328., dtype=torch.float64)\r\n>>> x.log_prob(torch.tensor(1.0e22).double()).item()\r\n-4.999999778196311e+43\r\n```"}