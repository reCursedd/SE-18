{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/146110985", "pull_request_review_id": 71012876, "id": 146110985, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NjExMDk4NQ==", "diff_hunk": "@@ -1,7 +1,7 @@\n #pragma once\n \n // ${generated_comment}\n-\n+#include <Python.h>", "path": "tools/autograd/templates/VariableType.h", "position": null, "original_position": 5, "commit_id": "638529e2ce35750bcf718e41f2a4c11323760f91", "original_commit_id": "61ed9d42888addad5689f099ba5594f6dfe876dc", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "@zdevito I think if you delete the Python include, the warnings will be gone now. If this is not the case, find the header that is still including `Python.h` and replace it with an include of python_stub.\r\n\r\n@apaszke The problem with Python.h is that it is infectious. If you add Python.h to a \"non-Python\" header (like `variable.h`) just because you needed to declare `PyObject*` reference, now EVERY cpp file which transitively imports this header must paste a `Python.h` reference to be warnings clean. This is really awful.", "created_at": "2017-10-21T17:41:50Z", "updated_at": "2018-11-23T15:35:35Z", "html_url": "https://github.com/pytorch/pytorch/pull/3207#discussion_r146110985", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3207", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/146110985"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3207#discussion_r146110985"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3207"}}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=370202\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zdevito\">@zdevito</a> I think if you delete the Python include, the warnings will be gone now. If this is not the case, find the header that is still including <code>Python.h</code> and replace it with an include of python_stub.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> The problem with Python.h is that it is infectious. If you add Python.h to a \"non-Python\" header (like <code>variable.h</code>) just because you needed to declare <code>PyObject*</code> reference, now EVERY cpp file which transitively imports this header must paste a <code>Python.h</code> reference to be warnings clean. This is really awful.</p>", "body_text": "@zdevito I think if you delete the Python include, the warnings will be gone now. If this is not the case, find the header that is still including Python.h and replace it with an include of python_stub.\n@apaszke The problem with Python.h is that it is infectious. If you add Python.h to a \"non-Python\" header (like variable.h) just because you needed to declare PyObject* reference, now EVERY cpp file which transitively imports this header must paste a Python.h reference to be warnings clean. This is really awful.", "in_reply_to_id": 146039933}