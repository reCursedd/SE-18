{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3057", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3057/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3057/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3057/events", "html_url": "https://github.com/pytorch/pytorch/pull/3057", "id": 264386693, "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ1ODA4OTU0", "number": 3057, "title": "Spatial Depthwise Convolution on the GPU", "user": {"login": "killeent", "id": 4529377, "node_id": "MDQ6VXNlcjQ1MjkzNzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/4529377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killeent", "html_url": "https://github.com/killeent", "followers_url": "https://api.github.com/users/killeent/followers", "following_url": "https://api.github.com/users/killeent/following{/other_user}", "gists_url": "https://api.github.com/users/killeent/gists{/gist_id}", "starred_url": "https://api.github.com/users/killeent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killeent/subscriptions", "organizations_url": "https://api.github.com/users/killeent/orgs", "repos_url": "https://api.github.com/users/killeent/repos", "events_url": "https://api.github.com/users/killeent/events{/privacy}", "received_events_url": "https://api.github.com/users/killeent/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-10-10T21:42:47Z", "updated_at": "2018-11-23T15:35:20Z", "closed_at": "2017-10-18T12:16:03Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/3057", "html_url": "https://github.com/pytorch/pytorch/pull/3057", "diff_url": "https://github.com/pytorch/pytorch/pull/3057.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/3057.patch"}, "body_html": "<p>Partially addresses <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"233339992\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/1708\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/1708/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/1708\">#1708</a>. Currently works for Conv2D but needs testing.</p>\n<p>TODO:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Extend gradWeight kernel to handle padding, strides, and dilation</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Extend all kernels to handle a depthwise multiplier, i.e a depthwise convolution with multiple filters per input channel</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Add support for bias</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Make gradWeight (and other kernels) more efficient by leveraging better CUDA programming paradigms</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Benchmark performance on individual layers and models that leverage Depthwise Convolution, see if any other perf wins can be made</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Finish writing unit tests</li>\n</ul>", "body_text": "Partially addresses #1708. Currently works for Conv2D but needs testing.\nTODO:\n\n Extend gradWeight kernel to handle padding, strides, and dilation\n Extend all kernels to handle a depthwise multiplier, i.e a depthwise convolution with multiple filters per input channel\n Add support for bias\n Make gradWeight (and other kernels) more efficient by leveraging better CUDA programming paradigms\n Benchmark performance on individual layers and models that leverage Depthwise Convolution, see if any other perf wins can be made\n Finish writing unit tests", "body": "Partially addresses #1708. Currently works for Conv2D but needs testing.\r\n\r\nTODO:\r\n\r\n- [x] Extend gradWeight kernel to handle padding, strides, and dilation\r\n- [x] Extend all kernels to handle a depthwise multiplier, i.e a depthwise convolution with multiple filters per input channel\r\n- [x] Add support for bias\r\n- [x] Make gradWeight (and other kernels) more efficient by leveraging better CUDA programming paradigms\r\n- [x] Benchmark performance on individual layers and models that leverage Depthwise Convolution, see if any other perf wins can be made\r\n- [x] Finish writing unit tests"}