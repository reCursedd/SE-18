{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/334472214", "html_url": "https://github.com/pytorch/pytorch/issues/2976#issuecomment-334472214", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2976", "id": 334472214, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDQ3MjIxNA==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-05T13:55:19Z", "updated_at": "2017-10-05T13:55:19Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Making all CUDA devices and CPU devices use the same RNG state would certainly be expensive, but hypothetically, couldn't we reverse engineer the CUDA RNG algorithm and implement it bit-for-bit equivalently on CPU? Not saying we are going to, but this doesn't seem expensive, perf-wise.</p>", "body_text": "Making all CUDA devices and CPU devices use the same RNG state would certainly be expensive, but hypothetically, couldn't we reverse engineer the CUDA RNG algorithm and implement it bit-for-bit equivalently on CPU? Not saying we are going to, but this doesn't seem expensive, perf-wise.", "body": "Making all CUDA devices and CPU devices use the same RNG state would certainly be expensive, but hypothetically, couldn't we reverse engineer the CUDA RNG algorithm and implement it bit-for-bit equivalently on CPU? Not saying we are going to, but this doesn't seem expensive, perf-wise."}