{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/384158366", "html_url": "https://github.com/pytorch/pytorch/issues/6912#issuecomment-384158366", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6912", "id": 384158366, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDE1ODM2Ng==", "user": {"login": "Atcold", "id": 2119355, "node_id": "MDQ6VXNlcjIxMTkzNTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2119355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Atcold", "html_url": "https://github.com/Atcold", "followers_url": "https://api.github.com/users/Atcold/followers", "following_url": "https://api.github.com/users/Atcold/following{/other_user}", "gists_url": "https://api.github.com/users/Atcold/gists{/gist_id}", "starred_url": "https://api.github.com/users/Atcold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Atcold/subscriptions", "organizations_url": "https://api.github.com/users/Atcold/orgs", "repos_url": "https://api.github.com/users/Atcold/repos", "events_url": "https://api.github.com/users/Atcold/events{/privacy}", "received_events_url": "https://api.github.com/users/Atcold/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-25T04:37:43Z", "updated_at": "2018-04-25T04:50:56Z", "author_association": "CONTRIBUTOR", "body_html": "<p>When using the REPL for interactive computing one ends up displaying tensors quite often. Having a leaner rendering (no brackets and commas) is definitely desirable. Moreover, having <code>dtype</code> and <code>size</code> information provides a quick insight about the item one is viewing.<br>\nThe current string <code>tensor()</code> is redundant, IMO.<br>\nDevice information could be added to the previous displaying layout. <em>E.g.</em> a <code>repr()</code> like</p>\n<div class=\"highlight highlight-source-python\"><pre> <span class=\"pl-c1\">1</span>  <span class=\"pl-c1\">2</span>  <span class=\"pl-c1\">3</span>\n <span class=\"pl-c1\">4</span>  <span class=\"pl-c1\">5</span>  <span class=\"pl-c1\">6</span>\n[dtype: FloatTensor, size: <span class=\"pl-ii\">2x3</span>, device: cpu]</pre></div>\n<p>and maybe a <code>str()</code> like</p>\n<div class=\"highlight highlight-source-python\"><pre> <span class=\"pl-c1\">1</span>  <span class=\"pl-c1\">2</span>  <span class=\"pl-c1\">3</span>\n <span class=\"pl-c1\">4</span>  <span class=\"pl-c1\">5</span>  <span class=\"pl-c1\">6</span></pre></div>", "body_text": "When using the REPL for interactive computing one ends up displaying tensors quite often. Having a leaner rendering (no brackets and commas) is definitely desirable. Moreover, having dtype and size information provides a quick insight about the item one is viewing.\nThe current string tensor() is redundant, IMO.\nDevice information could be added to the previous displaying layout. E.g. a repr() like\n 1  2  3\n 4  5  6\n[dtype: FloatTensor, size: 2x3, device: cpu]\nand maybe a str() like\n 1  2  3\n 4  5  6", "body": "When using the REPL for interactive computing one ends up displaying tensors quite often. Having a leaner rendering (no brackets and commas) is definitely desirable. Moreover, having `dtype` and `size` information provides a quick insight about the item one is viewing.\r\nThe current string `tensor()` is redundant, IMO.\r\nDevice information could be added to the previous displaying layout. *E.g.* a `repr()` like\r\n\r\n```python\r\n 1  2  3\r\n 4  5  6\r\n[dtype: FloatTensor, size: 2x3, device: cpu]\r\n```\r\nand maybe a `str()` like\r\n```python\r\n 1  2  3\r\n 4  5  6\r\n```"}