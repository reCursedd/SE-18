{"url": "https://api.github.com/repos/pytorch/pytorch/issues/6912", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6912/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6912/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6912/events", "html_url": "https://github.com/pytorch/pytorch/issues/6912", "id": 317407607, "node_id": "MDU6SXNzdWUzMTc0MDc2MDc=", "number": 6912, "title": "Ugly and poorer tensor visualisation with v0.4.0", "user": {"login": "Atcold", "id": 2119355, "node_id": "MDQ6VXNlcjIxMTkzNTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2119355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Atcold", "html_url": "https://github.com/Atcold", "followers_url": "https://api.github.com/users/Atcold/followers", "following_url": "https://api.github.com/users/Atcold/following{/other_user}", "gists_url": "https://api.github.com/users/Atcold/gists{/gist_id}", "starred_url": "https://api.github.com/users/Atcold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Atcold/subscriptions", "organizations_url": "https://api.github.com/users/Atcold/orgs", "repos_url": "https://api.github.com/users/Atcold/repos", "events_url": "https://api.github.com/users/Atcold/events{/privacy}", "received_events_url": "https://api.github.com/users/Atcold/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443484050, "node_id": "MDU6TGFiZWw0NDM0ODQwNTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/medium%20priority", "name": "medium priority", "color": "fbca04", "default": false}, {"id": 914046705, "node_id": "MDU6TGFiZWw5MTQwNDY3MDU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/printing", "name": "printing", "color": "8cf29f", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "li-roy", "id": 8813817, "node_id": "MDQ6VXNlcjg4MTM4MTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/8813817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/li-roy", "html_url": "https://github.com/li-roy", "followers_url": "https://api.github.com/users/li-roy/followers", "following_url": "https://api.github.com/users/li-roy/following{/other_user}", "gists_url": "https://api.github.com/users/li-roy/gists{/gist_id}", "starred_url": "https://api.github.com/users/li-roy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/li-roy/subscriptions", "organizations_url": "https://api.github.com/users/li-roy/orgs", "repos_url": "https://api.github.com/users/li-roy/repos", "events_url": "https://api.github.com/users/li-roy/events{/privacy}", "received_events_url": "https://api.github.com/users/li-roy/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "li-roy", "id": 8813817, "node_id": "MDQ6VXNlcjg4MTM4MTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/8813817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/li-roy", "html_url": "https://github.com/li-roy", "followers_url": "https://api.github.com/users/li-roy/followers", "following_url": "https://api.github.com/users/li-roy/following{/other_user}", "gists_url": "https://api.github.com/users/li-roy/gists{/gist_id}", "starred_url": "https://api.github.com/users/li-roy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/li-roy/subscriptions", "organizations_url": "https://api.github.com/users/li-roy/orgs", "repos_url": "https://api.github.com/users/li-roy/repos", "events_url": "https://api.github.com/users/li-roy/events{/privacy}", "received_events_url": "https://api.github.com/users/li-roy/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 16, "created_at": "2018-04-24T21:48:38Z", "updated_at": "2018-08-06T17:51:00Z", "closed_at": "2018-08-06T17:51:00Z", "author_association": "CONTRIBUTOR", "body_html": "<p><code>numpy</code> deals well with printing arrays.</p>\n<div class=\"highlight highlight-source-python\"><pre>In [<span class=\"pl-c1\">1</span>]: np.array([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>])       \nOut[<span class=\"pl-c1\">1</span>]: array([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>])          \n                                   \nIn [<span class=\"pl-c1\">2</span>]: <span class=\"pl-c1\">print</span>(np.array([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>]))\n[<span class=\"pl-c1\">1</span> <span class=\"pl-c1\">2</span> <span class=\"pl-c1\">3</span>]</pre></div>\n<p><code>torch</code> no longer does.</p>\n<div class=\"highlight highlight-source-python\"><pre>In [<span class=\"pl-c1\">3</span>]: torch.tensor([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>])       \nOut[<span class=\"pl-c1\">3</span>]: tensor([ <span class=\"pl-c1\">1</span>,  <span class=\"pl-c1\">2</span>,  <span class=\"pl-c1\">3</span>])\n\nIn [<span class=\"pl-c1\">4</span>]: <span class=\"pl-c1\">print</span>(torch.tensor([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>]))\ntensor([ <span class=\"pl-c1\">1</span>,  <span class=\"pl-c1\">2</span>,  <span class=\"pl-c1\">3</span>])</pre></div>\n<div class=\"highlight highlight-source-python\"><pre> <span class=\"pl-c1\">1</span>  <span class=\"pl-c1\">2</span>  <span class=\"pl-c1\">3</span>\n <span class=\"pl-c1\">4</span>  <span class=\"pl-c1\">5</span>  <span class=\"pl-c1\">6</span>\n[torch.FloatTensor of size <span class=\"pl-ii\">2x3</span>]\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> was much cleaner (no brackets and commas) and informative (`dtype` and `size`) than</span>\n\ntensor([[ <span class=\"pl-c1\">1</span>,  <span class=\"pl-c1\">2</span>,  <span class=\"pl-c1\">3</span>], \n        [ <span class=\"pl-c1\">4</span>,  <span class=\"pl-c1\">5</span>,  <span class=\"pl-c1\">6</span>]])</pre></div>", "body_text": "numpy deals well with printing arrays.\nIn [1]: np.array([1, 2, 3])       \nOut[1]: array([1, 2, 3])          \n                                   \nIn [2]: print(np.array([1, 2, 3]))\n[1 2 3]\ntorch no longer does.\nIn [3]: torch.tensor([1, 2, 3])       \nOut[3]: tensor([ 1,  2,  3])\n\nIn [4]: print(torch.tensor([1, 2, 3]))\ntensor([ 1,  2,  3])\n 1  2  3\n 4  5  6\n[torch.FloatTensor of size 2x3]\n\n# was much cleaner (no brackets and commas) and informative (`dtype` and `size`) than\n\ntensor([[ 1,  2,  3], \n        [ 4,  5,  6]])", "body": "`numpy` deals well with printing arrays.\r\n\r\n```python\r\nIn [1]: np.array([1, 2, 3])       \r\nOut[1]: array([1, 2, 3])          \r\n                                   \r\nIn [2]: print(np.array([1, 2, 3]))\r\n[1 2 3]\r\n```\r\n\r\n`torch` no longer does.\r\n\r\n```python\r\nIn [3]: torch.tensor([1, 2, 3])       \r\nOut[3]: tensor([ 1,  2,  3])\r\n\r\nIn [4]: print(torch.tensor([1, 2, 3]))\r\ntensor([ 1,  2,  3])\r\n```\r\n\r\n```python\r\n 1  2  3\r\n 4  5  6\r\n[torch.FloatTensor of size 2x3]\r\n\r\n# was much cleaner (no brackets and commas) and informative (`dtype` and `size`) than\r\n\r\ntensor([[ 1,  2,  3], \r\n        [ 4,  5,  6]])\r\n```"}