{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/384671150", "html_url": "https://github.com/pytorch/pytorch/pull/6965#issuecomment-384671150", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6965", "id": 384671150, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDY3MTE1MA==", "user": {"login": "t-vi", "id": 20787943, "node_id": "MDQ6VXNlcjIwNzg3OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/20787943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-vi", "html_url": "https://github.com/t-vi", "followers_url": "https://api.github.com/users/t-vi/followers", "following_url": "https://api.github.com/users/t-vi/following{/other_user}", "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions", "organizations_url": "https://api.github.com/users/t-vi/orgs", "repos_url": "https://api.github.com/users/t-vi/repos", "events_url": "https://api.github.com/users/t-vi/events{/privacy}", "received_events_url": "https://api.github.com/users/t-vi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-26T14:56:28Z", "updated_at": "2018-04-26T14:56:28Z", "author_association": "CONTRIBUTOR", "body_html": "<p>So I must admit that the faults in the implementation strategy are probably mine here.</p>\n<p>So this is what I had in mind when I looked into making the JIT actually use python_arg_parser code for determining the function to use.<br>\nSo when I think about this, I would look into changing this essentially to imitating (or using) <code>python arg parser.h/cpp</code> in that we lookup the name and then go through the iterated positions as the parameters processed by the JIT are not automatically converted into the right descriptor string.<br>\nHowever, that would be a largish change. In my preliminary patch, I implemented a FunctionSignature.parse_jit (or match_jit) function and a FunctionParameter.check_jit function to do this. Then the jit dispatch would have the full signature - it might also be useful to handle the \"exotic\" parameters such as device)<br>\nMy understanding is that that is not the way you want, but what would be the way you would want the jit  to work here?</p>", "body_text": "So I must admit that the faults in the implementation strategy are probably mine here.\nSo this is what I had in mind when I looked into making the JIT actually use python_arg_parser code for determining the function to use.\nSo when I think about this, I would look into changing this essentially to imitating (or using) python arg parser.h/cpp in that we lookup the name and then go through the iterated positions as the parameters processed by the JIT are not automatically converted into the right descriptor string.\nHowever, that would be a largish change. In my preliminary patch, I implemented a FunctionSignature.parse_jit (or match_jit) function and a FunctionParameter.check_jit function to do this. Then the jit dispatch would have the full signature - it might also be useful to handle the \"exotic\" parameters such as device)\nMy understanding is that that is not the way you want, but what would be the way you would want the jit  to work here?", "body": "So I must admit that the faults in the implementation strategy are probably mine here.\r\n\r\nSo this is what I had in mind when I looked into making the JIT actually use python_arg_parser code for determining the function to use.\r\nSo when I think about this, I would look into changing this essentially to imitating (or using) `python arg parser.h/cpp` in that we lookup the name and then go through the iterated positions as the parameters processed by the JIT are not automatically converted into the right descriptor string.\r\nHowever, that would be a largish change. In my preliminary patch, I implemented a FunctionSignature.parse_jit (or match_jit) function and a FunctionParameter.check_jit function to do this. Then the jit dispatch would have the full signature - it might also be useful to handle the \"exotic\" parameters such as device)\r\nMy understanding is that that is not the way you want, but what would be the way you would want the jit  to work here?\r\n"}