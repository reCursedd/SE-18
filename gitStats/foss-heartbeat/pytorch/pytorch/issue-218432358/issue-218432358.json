{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1151", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1151/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1151/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1151/events", "html_url": "https://github.com/pytorch/pytorch/issues/1151", "id": 218432358, "node_id": "MDU6SXNzdWUyMTg0MzIzNTg=", "number": 1151, "title": "Does pytorch implement SpatialUpSamplingBilinear layer?", "user": {"login": "fengshikun", "id": 2499990, "node_id": "MDQ6VXNlcjI0OTk5OTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2499990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fengshikun", "html_url": "https://github.com/fengshikun", "followers_url": "https://api.github.com/users/fengshikun/followers", "following_url": "https://api.github.com/users/fengshikun/following{/other_user}", "gists_url": "https://api.github.com/users/fengshikun/gists{/gist_id}", "starred_url": "https://api.github.com/users/fengshikun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fengshikun/subscriptions", "organizations_url": "https://api.github.com/users/fengshikun/orgs", "repos_url": "https://api.github.com/users/fengshikun/repos", "events_url": "https://api.github.com/users/fengshikun/events{/privacy}", "received_events_url": "https://api.github.com/users/fengshikun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-31T08:28:41Z", "updated_at": "2017-03-31T14:34:28Z", "closed_at": "2017-03-31T14:34:28Z", "author_association": "NONE", "body_html": "<p>Hi, I want to load a model trained by torch, which contains the layer \"nn.SpatialUpSamplingBilinear\", the convert code is simple as blow:</p>\n<pre><code>import torch\nfrom torch.utils.serialization import load_lua\nmodel = load_lua('model.net')\n</code></pre>\n<p>it will generate the exception:</p>\n<pre><code>T7ReaderException: don't know how to deserialize Lua class nn.SpatialUpSamplingBilinear. If you want to ignore this error and load this object as a dict, specify unknown_classes=True in reader's constructor\n</code></pre>\n<p>And I find the <code>class torch.nn.UpsamplingBilinear2d</code> in pytorch,  does it function like the layer <code>nn.SpatialUpSamplingBilinear</code>?</p>", "body_text": "Hi, I want to load a model trained by torch, which contains the layer \"nn.SpatialUpSamplingBilinear\", the convert code is simple as blow:\nimport torch\nfrom torch.utils.serialization import load_lua\nmodel = load_lua('model.net')\n\nit will generate the exception:\nT7ReaderException: don't know how to deserialize Lua class nn.SpatialUpSamplingBilinear. If you want to ignore this error and load this object as a dict, specify unknown_classes=True in reader's constructor\n\nAnd I find the class torch.nn.UpsamplingBilinear2d in pytorch,  does it function like the layer nn.SpatialUpSamplingBilinear?", "body": "Hi, I want to load a model trained by torch, which contains the layer \"nn.SpatialUpSamplingBilinear\", the convert code is simple as blow:\r\n\r\n```\r\nimport torch\r\nfrom torch.utils.serialization import load_lua\r\nmodel = load_lua('model.net')\r\n```\r\n\r\nit will generate the exception:\r\n```\r\nT7ReaderException: don't know how to deserialize Lua class nn.SpatialUpSamplingBilinear. If you want to ignore this error and load this object as a dict, specify unknown_classes=True in reader's constructor\r\n```\r\n\r\nAnd I find the ```class torch.nn.UpsamplingBilinear2d``` in pytorch,  does it function like the layer ```nn.SpatialUpSamplingBilinear```? \r\n"}