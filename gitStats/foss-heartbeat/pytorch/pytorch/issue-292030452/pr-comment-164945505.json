{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/164945505", "pull_request_review_id": 92797545, "id": 164945505, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NDk0NTUwNQ==", "diff_hunk": "@@ -148,10 +186,105 @@ struct SpatialTransformerDescriptor\n                       &cudnnCreateSpatialTransformerDescriptor,\n                       &cudnnDestroySpatialTransformerDescriptor>\n {\n-  SpatialTransformerDescriptor() : Descriptor() {\n-  }\n   void set(cudnnDataType_t dataType, int dim, int* size) {\n-    CUDNN_CHECK(cudnnSetSpatialTransformerNdDescriptor(desc(), CUDNN_SAMPLER_BILINEAR, dataType, dim, size));\n+    CUDNN_CHECK(cudnnSetSpatialTransformerNdDescriptor(mut_desc(), CUDNN_SAMPLER_BILINEAR, dataType, dim, size));\n+  }\n+};\n+\n+#if CUDNN_VERSION < 7000\n+\n+inline cudnnStatus_t cudnnRestoreDropoutDescriptor(\n+    cudnnDropoutDescriptor_t dropoutDesc,\n+    cudnnHandle_t handle,\n+    float dropout,\n+    void *states,\n+    size_t stateSizeInBytes,\n+    unsigned long long seed) {\n+  // Try to accurately simulate cuDNN's behavior, for our cuDNN 6 friends\n+  if (states == nullptr) return CUDNN_STATUS_INVALID_VALUE;\n+  if (stateSizeInBytes == 0) return CUDNN_STATUS_INVALID_VALUE;\n+  dropoutDesc->dropout = dropout;\n+  dropoutDesc->nstates = stateSizeInBytes;", "path": "aten/src/ATen/cudnn/Descriptors.h", "position": null, "original_position": 170, "commit_id": "ae78d3290563d944d5e884f6bfbaba8f7000d2d2", "original_commit_id": "b5bd576921dacf1771688493014b39e5faf5f6e3", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Nooooooooo :o)\r\n\r\n(What actually happened is that I thought the function permitted certain types of arguments, but when I ran it in CUDA 9, it did not, so I added some checks which I thought might catch these sorts of errors if you were developing on CUDA 8. Happy to improve this however necessary, but this seemed OK for hack :)", "created_at": "2018-01-31T03:26:53Z", "updated_at": "2018-11-23T15:38:48Z", "html_url": "https://github.com/pytorch/pytorch/pull/4881#discussion_r164945505", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4881", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/164945505"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4881#discussion_r164945505"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4881"}}, "body_html": "<p>Nooooooooo :o)</p>\n<p>(What actually happened is that I thought the function permitted certain types of arguments, but when I ran it in CUDA 9, it did not, so I added some checks which I thought might catch these sorts of errors if you were developing on CUDA 8. Happy to improve this however necessary, but this seemed OK for hack :)</p>", "body_text": "Nooooooooo :o)\n(What actually happened is that I thought the function permitted certain types of arguments, but when I ran it in CUDA 9, it did not, so I added some checks which I thought might catch these sorts of errors if you were developing on CUDA 8. Happy to improve this however necessary, but this seemed OK for hack :)", "in_reply_to_id": 164919839}