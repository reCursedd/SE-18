{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/420497632", "html_url": "https://github.com/pytorch/pytorch/issues/11559#issuecomment-420497632", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11559", "id": 420497632, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDQ5NzYzMg==", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-12T03:11:57Z", "updated_at": "2018-09-12T03:11:57Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The problem is actually a bit worse than you describe:</p>\n<p><code>auto y = at::ones_like(x, at::dtype(at::kDouble));</code><br>\nat least indicates that the second argument is a <code>TensorOptions</code>, you can also do:<br>\n<code>auto y = at::ones_like(x, at::kDouble);</code><br>\nbecause of implicit constructors, which looks exactly like:<br>\n<code>at::ones_like(y).to(at::kDouble)</code><br>\nbut as mentioned, the behavior is different.</p>", "body_text": "The problem is actually a bit worse than you describe:\nauto y = at::ones_like(x, at::dtype(at::kDouble));\nat least indicates that the second argument is a TensorOptions, you can also do:\nauto y = at::ones_like(x, at::kDouble);\nbecause of implicit constructors, which looks exactly like:\nat::ones_like(y).to(at::kDouble)\nbut as mentioned, the behavior is different.", "body": "The problem is actually a bit worse than you describe:\r\n\r\n`\r\nauto y = at::ones_like(x, at::dtype(at::kDouble));\r\n`\r\nat least indicates that the second argument is a `TensorOptions`, you can also do:\r\n`\r\nauto y = at::ones_like(x, at::kDouble);\r\n`\r\nbecause of implicit constructors, which looks exactly like:\r\n`\r\nat::ones_like(y).to(at::kDouble)\r\n`\r\nbut as mentioned, the behavior is different.\r\n\r\n"}