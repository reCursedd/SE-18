{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4329", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4329/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4329/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4329/events", "html_url": "https://github.com/pytorch/pytorch/issues/4329", "id": 284278025, "node_id": "MDU6SXNzdWUyODQyNzgwMjU=", "number": 4329, "title": "`affine_grid` cannot pass `gradcheck`", "user": {"login": "zck119", "id": 7291985, "node_id": "MDQ6VXNlcjcyOTE5ODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/7291985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zck119", "html_url": "https://github.com/zck119", "followers_url": "https://api.github.com/users/zck119/followers", "following_url": "https://api.github.com/users/zck119/following{/other_user}", "gists_url": "https://api.github.com/users/zck119/gists{/gist_id}", "starred_url": "https://api.github.com/users/zck119/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zck119/subscriptions", "organizations_url": "https://api.github.com/users/zck119/orgs", "repos_url": "https://api.github.com/users/zck119/repos", "events_url": "https://api.github.com/users/zck119/events{/privacy}", "received_events_url": "https://api.github.com/users/zck119/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-12-23T01:35:14Z", "updated_at": "2017-12-28T13:15:24Z", "closed_at": "2017-12-28T13:15:24Z", "author_association": "NONE", "body_html": "<p>I'm testing a modification of spatial transformer network, which fails the <code>gradcheck</code>. So I run <code>gradcheck</code> with the implementation provided in pytorch and found that this also fails <code>gradcheck</code>:</p>\n<p>Code:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">from</span> torch.autograd <span class=\"pl-k\">import</span> Variable\n<span class=\"pl-k\">from</span> torch.autograd.gradcheck <span class=\"pl-k\">import</span> gradcheck\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">from</span> torch.nn.functional <span class=\"pl-k\">import</span> affine_grid\n\ngrid_sz <span class=\"pl-k\">=</span> <span class=\"pl-c1\">2</span>    <span class=\"pl-c\"><span class=\"pl-c\">#</span> set small so output from gradcheck is also small. </span>\ntheta <span class=\"pl-k\">=</span> torch.FloatTensor(np.random.rand(<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>))\ntheta <span class=\"pl-k\">=</span> Variable(theta, <span class=\"pl-v\">requires_grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">func</span>(<span class=\"pl-smi\">v</span>):\n    <span class=\"pl-k\">return</span> affine_grid(v, torch.Size([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, grid_sz, grid_sz]))\ngradcheck(func, (theta,))</pre></div>\n<p>Output:</p>\n<pre><code>Traceback (most recent call last):\n  File \"test.py\", line 12, in &lt;module&gt;\n    gradcheck(func, (theta,))\n  File \"/Users/chengkaizhang/bin/anaconda3/envs/python_test/lib/python3.6/site-packages/torch/autograd/gradcheck.py\", line 181, in gradcheck\n    return fail_test('for output no. %d,\\n numerical:%s\\nanalytical:%s\\n' % (j, numerical, analytical))\n  File \"/Users/chengkaizhang/bin/anaconda3/envs/python_test/lib/python3.6/site-packages/torch/autograd/gradcheck.py\", line 166, in fail_test\n    raise RuntimeError(msg)\nRuntimeError: for output no. 0,\n numerical:(\n-1.0729  0.0000  1.0133  0.0000 -1.0133  0.0000  1.0729  0.0000\n-1.0729  0.0000 -1.0133  0.0000  1.0133  0.0000  1.0729  0.0000\n 1.0133  0.0000  1.0133  0.0000  1.0133  0.0000  1.0729  0.0000\n 0.0000 -0.9537  0.0000  0.9835  0.0000 -0.9537  0.0000  1.0133\n 0.0000 -1.0133  0.0000 -1.0133  0.0000  1.0133  0.0000  1.0133\n 0.0000  0.9835  0.0000  1.0133  0.0000  1.0133  0.0000  1.0133\n[torch.FloatTensor of size 6x8]\n,)\nanalytical:(\n   -1     0     1     0    -1     0     1     0\n   -1     0    -1     0     1     0     1     0\n    1     0     1     0     1     0     1     0\n    0    -1     0     1     0    -1     0     1\n    0    -1     0    -1     0     1     0     1\n    0     1     0     1     0     1     0     1\n[torch.FloatTensor of size 6x8]\n,)\n</code></pre>\n<p>It seems that the error is a bit larger than normally expected (e.g. -0.9537 vs -1). I set the grid size small so I can show output from <code>gradcheck</code>. Setting <code>grid_sz</code> to 200 still fail the test.</p>\n<p>Any thoughts?</p>", "body_text": "I'm testing a modification of spatial transformer network, which fails the gradcheck. So I run gradcheck with the implementation provided in pytorch and found that this also fails gradcheck:\nCode:\nimport torch\nfrom torch.autograd import Variable\nfrom torch.autograd.gradcheck import gradcheck\nimport numpy as np\nfrom torch.nn.functional import affine_grid\n\ngrid_sz = 2    # set small so output from gradcheck is also small. \ntheta = torch.FloatTensor(np.random.rand(1,2,3))\ntheta = Variable(theta, requires_grad=True)\ndef func(v):\n    return affine_grid(v, torch.Size([1, 1, grid_sz, grid_sz]))\ngradcheck(func, (theta,))\nOutput:\nTraceback (most recent call last):\n  File \"test.py\", line 12, in <module>\n    gradcheck(func, (theta,))\n  File \"/Users/chengkaizhang/bin/anaconda3/envs/python_test/lib/python3.6/site-packages/torch/autograd/gradcheck.py\", line 181, in gradcheck\n    return fail_test('for output no. %d,\\n numerical:%s\\nanalytical:%s\\n' % (j, numerical, analytical))\n  File \"/Users/chengkaizhang/bin/anaconda3/envs/python_test/lib/python3.6/site-packages/torch/autograd/gradcheck.py\", line 166, in fail_test\n    raise RuntimeError(msg)\nRuntimeError: for output no. 0,\n numerical:(\n-1.0729  0.0000  1.0133  0.0000 -1.0133  0.0000  1.0729  0.0000\n-1.0729  0.0000 -1.0133  0.0000  1.0133  0.0000  1.0729  0.0000\n 1.0133  0.0000  1.0133  0.0000  1.0133  0.0000  1.0729  0.0000\n 0.0000 -0.9537  0.0000  0.9835  0.0000 -0.9537  0.0000  1.0133\n 0.0000 -1.0133  0.0000 -1.0133  0.0000  1.0133  0.0000  1.0133\n 0.0000  0.9835  0.0000  1.0133  0.0000  1.0133  0.0000  1.0133\n[torch.FloatTensor of size 6x8]\n,)\nanalytical:(\n   -1     0     1     0    -1     0     1     0\n   -1     0    -1     0     1     0     1     0\n    1     0     1     0     1     0     1     0\n    0    -1     0     1     0    -1     0     1\n    0    -1     0    -1     0     1     0     1\n    0     1     0     1     0     1     0     1\n[torch.FloatTensor of size 6x8]\n,)\n\nIt seems that the error is a bit larger than normally expected (e.g. -0.9537 vs -1). I set the grid size small so I can show output from gradcheck. Setting grid_sz to 200 still fail the test.\nAny thoughts?", "body": "I'm testing a modification of spatial transformer network, which fails the `gradcheck`. So I run `gradcheck` with the implementation provided in pytorch and found that this also fails `gradcheck`: \r\n\r\nCode: \r\n```python\r\nimport torch\r\nfrom torch.autograd import Variable\r\nfrom torch.autograd.gradcheck import gradcheck\r\nimport numpy as np\r\nfrom torch.nn.functional import affine_grid\r\n\r\ngrid_sz = 2    # set small so output from gradcheck is also small. \r\ntheta = torch.FloatTensor(np.random.rand(1,2,3))\r\ntheta = Variable(theta, requires_grad=True)\r\ndef func(v):\r\n    return affine_grid(v, torch.Size([1, 1, grid_sz, grid_sz]))\r\ngradcheck(func, (theta,))\r\n```\r\n\r\nOutput: \r\n```\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 12, in <module>\r\n    gradcheck(func, (theta,))\r\n  File \"/Users/chengkaizhang/bin/anaconda3/envs/python_test/lib/python3.6/site-packages/torch/autograd/gradcheck.py\", line 181, in gradcheck\r\n    return fail_test('for output no. %d,\\n numerical:%s\\nanalytical:%s\\n' % (j, numerical, analytical))\r\n  File \"/Users/chengkaizhang/bin/anaconda3/envs/python_test/lib/python3.6/site-packages/torch/autograd/gradcheck.py\", line 166, in fail_test\r\n    raise RuntimeError(msg)\r\nRuntimeError: for output no. 0,\r\n numerical:(\r\n-1.0729  0.0000  1.0133  0.0000 -1.0133  0.0000  1.0729  0.0000\r\n-1.0729  0.0000 -1.0133  0.0000  1.0133  0.0000  1.0729  0.0000\r\n 1.0133  0.0000  1.0133  0.0000  1.0133  0.0000  1.0729  0.0000\r\n 0.0000 -0.9537  0.0000  0.9835  0.0000 -0.9537  0.0000  1.0133\r\n 0.0000 -1.0133  0.0000 -1.0133  0.0000  1.0133  0.0000  1.0133\r\n 0.0000  0.9835  0.0000  1.0133  0.0000  1.0133  0.0000  1.0133\r\n[torch.FloatTensor of size 6x8]\r\n,)\r\nanalytical:(\r\n   -1     0     1     0    -1     0     1     0\r\n   -1     0    -1     0     1     0     1     0\r\n    1     0     1     0     1     0     1     0\r\n    0    -1     0     1     0    -1     0     1\r\n    0    -1     0    -1     0     1     0     1\r\n    0     1     0     1     0     1     0     1\r\n[torch.FloatTensor of size 6x8]\r\n,)\r\n```\r\n\r\nIt seems that the error is a bit larger than normally expected (e.g. -0.9537 vs -1). I set the grid size small so I can show output from `gradcheck`. Setting `grid_sz` to 200 still fail the test. \r\n\r\nAny thoughts? "}