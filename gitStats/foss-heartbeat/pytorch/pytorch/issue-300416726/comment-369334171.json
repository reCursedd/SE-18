{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/369334171", "html_url": "https://github.com/pytorch/pytorch/pull/5420#issuecomment-369334171", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5420", "id": 369334171, "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTMzNDE3MQ==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-28T18:23:57Z", "updated_at": "2018-02-28T18:23:57Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> Just note that it's not a limitation of the Python autograd function - they can take arbitrary objects as arguments. I think it's the constraint for the logic in the symbolic machinery that is expecting a flat list of tensors (I wrote it when it was used in a single place that had a flat tensor arg list already).</p>", "body_text": "@ezyang Just note that it's not a limitation of the Python autograd function - they can take arbitrary objects as arguments. I think it's the constraint for the logic in the symbolic machinery that is expecting a flat list of tensors (I wrote it when it was used in a single place that had a flat tensor arg list already).", "body": "@ezyang Just note that it's not a limitation of the Python autograd function - they can take arbitrary objects as arguments. I think it's the constraint for the logic in the symbolic machinery that is expecting a flat list of tensors (I wrote it when it was used in a single place that had a flat tensor arg list already)."}