{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/191033852", "pull_request_review_id": 123540838, "id": 191033852, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTAzMzg1Mg==", "diff_hunk": "@@ -1337,17 +1337,15 @@ struct to_ir {\n         Compound::create(TK_LIST, loc, std::move(inputs));\n     const auto input_values = getValues(applyInputs->trees());\n     Value* tensor = input_values[0];\n-    const auto& begin = at::Scalar(input_values[1]->node()->t(attr::value)).toInt();\n-    const auto& end = at::Scalar(input_values[2]->node()->t(attr::value)).toInt();\n+    Value* begin = input_values[1];\n+    Value* end = input_values[2];\n+    Value* zero_dim = emitConst(Const::create(loc, std::to_string(0)));\n+    Value* one_step = emitConst(Const::create(loc, std::to_string(1)));\n     return emitNode(\n                Symbol::aten(\"slice\"),\n                loc,\n-               {tensor},\n-               1)\n-               ->i_(attr::dim, 0)\n-               ->i_(attr::step, 1)\n-               ->i_(attr::start, begin)\n-               ->i_(attr::end, end)->output();\n+               {tensor, zero_dim, begin, end, one_step},\n+               1)->output();", "path": "torch/csrc/jit/script/compiler.cpp", "position": null, "original_position": 20, "commit_id": "5cb4922502c99259a7d3999724c94d4d8cef93a8", "original_commit_id": "6d62e1969d08f1781bc99fd520e5c10479e653c9", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "I'd be nice to call `liftConstantAttributes` so that we get the attribute version of the function in the case it is constant. You may have to lookup the FunctionSchema for \"slice\" to call it.", "created_at": "2018-05-26T00:33:13Z", "updated_at": "2018-11-23T15:44:40Z", "html_url": "https://github.com/pytorch/pytorch/pull/7861#discussion_r191033852", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7861", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/191033852"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7861#discussion_r191033852"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7861"}}, "body_html": "<p>I'd be nice to call <code>liftConstantAttributes</code> so that we get the attribute version of the function in the case it is constant. You may have to lookup the FunctionSchema for \"slice\" to call it.</p>", "body_text": "I'd be nice to call liftConstantAttributes so that we get the attribute version of the function in the case it is constant. You may have to lookup the FunctionSchema for \"slice\" to call it."}