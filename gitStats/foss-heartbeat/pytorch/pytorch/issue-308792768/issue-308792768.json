{"url": "https://api.github.com/repos/pytorch/pytorch/issues/6032", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6032/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6032/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6032/events", "html_url": "https://github.com/pytorch/pytorch/issues/6032", "id": 308792768, "node_id": "MDU6SXNzdWUzMDg3OTI3Njg=", "number": 6032, "title": "[devs] some workflow changes...", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-03-27T01:47:07Z", "updated_at": "2018-05-31T03:18:10Z", "closed_at": "2018-05-31T03:18:10Z", "author_association": "MEMBER", "body_html": "<p>If you follow PyTorch development closely (maintainers, core-devs, folks sending PRs), you may have noticed a few things in the past few months:</p>\n<ul>\n<li>PyTorch and Caffe2 now share a <a href=\"https://ci.pytorch.org\" rel=\"nofollow\">CI</a> which was significant engineering work</li>\n<li>PyTorch and PyTorch-ONNX have a very complicated CI -- onnxbot triggers builds on each PyTorch PR and updates the PyTorch PR status in a roundabout way</li>\n<li>There's been backend work in a \"pending\" state, such as integrating with the latest and greatest libraries (MKLDNN, cuFFT, more NNPACK coverage, etc. etc.)</li>\n</ul>\n<p>As maintainers of PyTorch and Caffe2 frameworks, it kinda made sense to share engineering that is common across both, such as operator libraries.</p>\n<p>However, sharing code across two separate github repos is a challenge (submodules or subtrees dont cut it, Continuous Integration becomes hard, etc.).</p>\n<p>As a step in this line of collaboration and thinking, we are merging the Caffe2 repo into the PyTorch github, i.e. if you <code>git clone https://github.com/pytorch/pytorch</code>, you will see some caffe2 bits there.</p>\n<p><strong>As a PyTorch user, here's what you need to know:</strong></p>\n<ul>\n<li>Nothing changes for you. PyTorch is installed, shipped and used exactly how it is done today.</li>\n</ul>\n<h4>Does this mean that my code will break?</h4>\n<p>No, your code will not break. This is development and backend work. If you are not a core-developer, this issue is not even that relevant for you.</p>\n<h4>Will this mean I have to deal with protobuf?</h4>\n<p>No, if you are a user nothing changes.</p>\n<h4>Does this mean ATen is being replaced?</h4>\n<p>No, ATen will be here for a while. When we share code for operators, it will be under the ATen level.</p>\n<p>reference: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"308776272\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/caffe2/caffe2/issues/2439\" data-hovercard-type=\"issue\" data-hovercard-url=\"/caffe2/caffe2/issues/2439/hovercard\" href=\"https://github.com/caffe2/caffe2/issues/2439\">caffe2/caffe2#2439</a></p>", "body_text": "If you follow PyTorch development closely (maintainers, core-devs, folks sending PRs), you may have noticed a few things in the past few months:\n\nPyTorch and Caffe2 now share a CI which was significant engineering work\nPyTorch and PyTorch-ONNX have a very complicated CI -- onnxbot triggers builds on each PyTorch PR and updates the PyTorch PR status in a roundabout way\nThere's been backend work in a \"pending\" state, such as integrating with the latest and greatest libraries (MKLDNN, cuFFT, more NNPACK coverage, etc. etc.)\n\nAs maintainers of PyTorch and Caffe2 frameworks, it kinda made sense to share engineering that is common across both, such as operator libraries.\nHowever, sharing code across two separate github repos is a challenge (submodules or subtrees dont cut it, Continuous Integration becomes hard, etc.).\nAs a step in this line of collaboration and thinking, we are merging the Caffe2 repo into the PyTorch github, i.e. if you git clone https://github.com/pytorch/pytorch, you will see some caffe2 bits there.\nAs a PyTorch user, here's what you need to know:\n\nNothing changes for you. PyTorch is installed, shipped and used exactly how it is done today.\n\nDoes this mean that my code will break?\nNo, your code will not break. This is development and backend work. If you are not a core-developer, this issue is not even that relevant for you.\nWill this mean I have to deal with protobuf?\nNo, if you are a user nothing changes.\nDoes this mean ATen is being replaced?\nNo, ATen will be here for a while. When we share code for operators, it will be under the ATen level.\nreference: caffe2/caffe2#2439", "body": "If you follow PyTorch development closely (maintainers, core-devs, folks sending PRs), you may have noticed a few things in the past few months:\r\n\r\n- PyTorch and Caffe2 now share a [CI](https://ci.pytorch.org) which was significant engineering work\r\n- PyTorch and PyTorch-ONNX have a very complicated CI -- onnxbot triggers builds on each PyTorch PR and updates the PyTorch PR status in a roundabout way\r\n- There's been backend work in a \"pending\" state, such as integrating with the latest and greatest libraries (MKLDNN, cuFFT, more NNPACK coverage, etc. etc.)\r\n\r\nAs maintainers of PyTorch and Caffe2 frameworks, it kinda made sense to share engineering that is common across both, such as operator libraries.\r\n\r\nHowever, sharing code across two separate github repos is a challenge (submodules or subtrees dont cut it, Continuous Integration becomes hard, etc.).\r\n\r\nAs a step in this line of collaboration and thinking, we are merging the Caffe2 repo into the PyTorch github, i.e. if you `git clone https://github.com/pytorch/pytorch`, you will see some caffe2 bits there.\r\n\r\n**As a PyTorch user, here's what you need to know:**\r\n\r\n- Nothing changes for you. PyTorch is installed, shipped and used exactly how it is done today.\r\n\r\n\r\n#### Does this mean that my code will break?\r\n\r\nNo, your code will not break. This is development and backend work. If you are not a core-developer, this issue is not even that relevant for you.\r\n\r\n\r\n#### Will this mean I have to deal with protobuf?\r\n\r\nNo, if you are a user nothing changes.\r\n\r\n\r\n#### Does this mean ATen is being replaced?\r\n\r\nNo, ATen will be here for a while. When we share code for operators, it will be under the ATen level.\r\n\r\nreference: https://github.com/caffe2/caffe2/issues/2439"}