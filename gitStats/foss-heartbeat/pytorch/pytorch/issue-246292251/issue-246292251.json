{"url": "https://api.github.com/repos/pytorch/pytorch/issues/2228", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/2228/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2228/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/2228/events", "html_url": "https://github.com/pytorch/pytorch/issues/2228", "id": 246292251, "node_id": "MDU6SXNzdWUyNDYyOTIyNTE=", "number": 2228, "title": "PyTorch with numpy syntax?", "user": {"login": "petered", "id": 1148799, "node_id": "MDQ6VXNlcjExNDg3OTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1148799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petered", "html_url": "https://github.com/petered", "followers_url": "https://api.github.com/users/petered/followers", "following_url": "https://api.github.com/users/petered/following{/other_user}", "gists_url": "https://api.github.com/users/petered/gists{/gist_id}", "starred_url": "https://api.github.com/users/petered/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petered/subscriptions", "organizations_url": "https://api.github.com/users/petered/orgs", "repos_url": "https://api.github.com/users/petered/repos", "events_url": "https://api.github.com/users/petered/events{/privacy}", "received_events_url": "https://api.github.com/users/petered/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-07-28T09:17:55Z", "updated_at": "2018-01-22T08:19:20Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>Hi all,</p>\n<p>So there're some great things about PyTorch, but one of the not-great things is that it uses a mostly-but-not-fully different API than the one used for numpy, theano, and tensorflow.  I find myself having to consult a <a href=\"https://github.com/torch/torch7/wiki/Torch-for-Numpy-users\">lookup-table</a> when I want to run familiar commands.</p>\n<p>Are there any plans to make a numpytorch, where the API matches numpy's as closely as possible?</p>\n<p>An advantage would be that many functions written for numpy could also be used by pytorch.  It would also be nice to be able to call matplotlib functions (plot, imshow, etc) directly with torch variables without having to do any hacking of matplotlib.</p>", "body_text": "Hi all,\nSo there're some great things about PyTorch, but one of the not-great things is that it uses a mostly-but-not-fully different API than the one used for numpy, theano, and tensorflow.  I find myself having to consult a lookup-table when I want to run familiar commands.\nAre there any plans to make a numpytorch, where the API matches numpy's as closely as possible?\nAn advantage would be that many functions written for numpy could also be used by pytorch.  It would also be nice to be able to call matplotlib functions (plot, imshow, etc) directly with torch variables without having to do any hacking of matplotlib.", "body": "Hi all,\r\n\r\nSo there're some great things about PyTorch, but one of the not-great things is that it uses a mostly-but-not-fully different API than the one used for numpy, theano, and tensorflow.  I find myself having to consult a [lookup-table](https://github.com/torch/torch7/wiki/Torch-for-Numpy-users) when I want to run familiar commands.\r\n\r\nAre there any plans to make a numpytorch, where the API matches numpy's as closely as possible?\r\n\r\nAn advantage would be that many functions written for numpy could also be used by pytorch.  It would also be nice to be able to call matplotlib functions (plot, imshow, etc) directly with torch variables without having to do any hacking of matplotlib."}