{"url": "https://api.github.com/repos/pytorch/pytorch/issues/13761", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13761/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13761/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13761/events", "html_url": "https://github.com/pytorch/pytorch/pull/13761", "id": 379003104, "node_id": "MDExOlB1bGxSZXF1ZXN0MjI5NTczNjY1", "number": 13761, "title": "allow concatenating \"hybrid\" (sparse/dense) tensors along their dense dimensions", "user": {"login": "umanwizard", "id": 1893159, "node_id": "MDQ6VXNlcjE4OTMxNTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1893159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/umanwizard", "html_url": "https://github.com/umanwizard", "followers_url": "https://api.github.com/users/umanwizard/followers", "following_url": "https://api.github.com/users/umanwizard/following{/other_user}", "gists_url": "https://api.github.com/users/umanwizard/gists{/gist_id}", "starred_url": "https://api.github.com/users/umanwizard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/umanwizard/subscriptions", "organizations_url": "https://api.github.com/users/umanwizard/orgs", "repos_url": "https://api.github.com/users/umanwizard/repos", "events_url": "https://api.github.com/users/umanwizard/events{/privacy}", "received_events_url": "https://api.github.com/users/umanwizard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-11-09T02:56:21Z", "updated_at": "2018-11-23T15:55:07Z", "closed_at": null, "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/13761", "html_url": "https://github.com/pytorch/pytorch/pull/13761", "diff_url": "https://github.com/pytorch/pytorch/pull/13761.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/13761.patch"}, "body_html": "<p>Follow-up to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"377508084\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/13577\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/13577/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/13577\">#13577</a></p>\n<p>The idea is to take each values tensor, concatenate it with zeros before and after itself (along the dimension corresponding to the one we're catting the tensors along), to get a tensor corresponding to the values for that tensor in the result. Then we concatenate all of those together to get\u00a0the final values tensor. (Hopefully, this will be more clear from the example in the comments).</p>\n<p>The indices are more straightforward: since we aren't concatenating along a sparse dimension, they don't change at all, so all we need to do are concatenate the indices from the different tensors together.</p>", "body_text": "Follow-up to #13577\nThe idea is to take each values tensor, concatenate it with zeros before and after itself (along the dimension corresponding to the one we're catting the tensors along), to get a tensor corresponding to the values for that tensor in the result. Then we concatenate all of those together to get\u00a0the final values tensor. (Hopefully, this will be more clear from the example in the comments).\nThe indices are more straightforward: since we aren't concatenating along a sparse dimension, they don't change at all, so all we need to do are concatenate the indices from the different tensors together.", "body": "Follow-up to #13577 \r\n\r\nThe idea is to take each values tensor, concatenate it with zeros before and after itself (along the dimension corresponding to the one we're catting the tensors along), to get a tensor corresponding to the values for that tensor in the result. Then we concatenate all of those together to get\u00a0the final values tensor. (Hopefully, this will be more clear from the example in the comments).\r\n\r\nThe indices are more straightforward: since we aren't concatenating along a sparse dimension, they don't change at all, so all we need to do are concatenate the indices from the different tensors together. "}