{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/356287523", "html_url": "https://github.com/pytorch/pytorch/issues/4495#issuecomment-356287523", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4495", "id": 356287523, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjI4NzUyMw==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-09T13:44:38Z", "updated_at": "2018-01-09T13:44:38Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=191033\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/lantiga\">@lantiga</a> Ack! I know exactly what the problem is: you need to set the scope guard for <code>callPySymbolicMethod</code> as well (really, any call site of <code>processSymbolicOutput</code>; and there are multiple).</p>\n<p>This time, can we get <code>assertExpected</code> style tests too? Easier to see problems like that this way :)</p>", "body_text": "@lantiga Ack! I know exactly what the problem is: you need to set the scope guard for callPySymbolicMethod as well (really, any call site of processSymbolicOutput; and there are multiple).\nThis time, can we get assertExpected style tests too? Easier to see problems like that this way :)", "body": "@lantiga Ack! I know exactly what the problem is: you need to set the scope guard for `callPySymbolicMethod` as well (really, any call site of `processSymbolicOutput`; and there are multiple).\r\n\r\nThis time, can we get `assertExpected` style tests too? Easier to see problems like that this way :)"}