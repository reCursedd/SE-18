{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/355767372", "html_url": "https://github.com/pytorch/pytorch/issues/4495#issuecomment-355767372", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4495", "id": 355767372, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTc2NzM3Mg==", "user": {"login": "lantiga", "id": 191033, "node_id": "MDQ6VXNlcjE5MTAzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/191033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lantiga", "html_url": "https://github.com/lantiga", "followers_url": "https://api.github.com/users/lantiga/followers", "following_url": "https://api.github.com/users/lantiga/following{/other_user}", "gists_url": "https://api.github.com/users/lantiga/gists{/gist_id}", "starred_url": "https://api.github.com/users/lantiga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lantiga/subscriptions", "organizations_url": "https://api.github.com/users/lantiga/orgs", "repos_url": "https://api.github.com/users/lantiga/repos", "events_url": "https://api.github.com/users/lantiga/events{/privacy}", "received_events_url": "https://api.github.com/users/lantiga/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-06T18:53:22Z", "updated_at": "2018-01-06T18:53:22Z", "author_association": "COLLABORATOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> the plot thickens. So, this is what I get on AlexNet when I print out addresses of node, inputs and outputs at this point <a href=\"https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/passes/onnx.cpp#L89\">https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/passes/onnx.cpp#L89</a></p>\n<pre><code>OP NAME _convolution\nnode:                    0x7fbd786dfef0\ninput:                   0x7fbd7a8a4bb0\ninput-&gt;node:             0x7fbd786b40e0\noutput:                  0x7fbd78443b60\noutput-&gt;node:            0x7fbd78412f60\n\nOP NAME threshold_forward\nnode:                   0x7fbd786e05f0\ninput:                  0x7fbd786dffe0\ninput-&gt;node:            0x7fbd786dfef0\noutput:                 0x7fbd78443b60     &lt;-- same as Conv output\noutput-&gt;node:           0x7fbd78412f60     &lt;-- same as Conv output-&gt;node\n\nOP NAME threshold\nnode:                   0x7fbd786e0c70\ninput:                  0x7fbd786e08e0\ninput-&gt;node:            0x7fbd786e05f0\noutput:                 0x7fbd7873ba70\noutput-&gt;node:           0x7fbd7873b5b0\n</code></pre>\n<p>It seems that the later <code>threshold</code> behaves correctly, but that <code>threshold_forward</code> reuses <code>_convolution</code>'s output node. This leads to <code>threshold_forward</code>'s scope to overwrite <code>_convolution</code>'s scope.</p>\n<p>Side note: I was expecting that <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"285898958\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/4471\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/4471/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/4471\">#4471</a> would only make one of threshold and threshold_forward appear in the trace.</p>", "body_text": "@ezyang the plot thickens. So, this is what I get on AlexNet when I print out addresses of node, inputs and outputs at this point https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/passes/onnx.cpp#L89\nOP NAME _convolution\nnode:                    0x7fbd786dfef0\ninput:                   0x7fbd7a8a4bb0\ninput->node:             0x7fbd786b40e0\noutput:                  0x7fbd78443b60\noutput->node:            0x7fbd78412f60\n\nOP NAME threshold_forward\nnode:                   0x7fbd786e05f0\ninput:                  0x7fbd786dffe0\ninput->node:            0x7fbd786dfef0\noutput:                 0x7fbd78443b60     <-- same as Conv output\noutput->node:           0x7fbd78412f60     <-- same as Conv output->node\n\nOP NAME threshold\nnode:                   0x7fbd786e0c70\ninput:                  0x7fbd786e08e0\ninput->node:            0x7fbd786e05f0\noutput:                 0x7fbd7873ba70\noutput->node:           0x7fbd7873b5b0\n\nIt seems that the later threshold behaves correctly, but that threshold_forward reuses _convolution's output node. This leads to threshold_forward's scope to overwrite _convolution's scope.\nSide note: I was expecting that #4471 would only make one of threshold and threshold_forward appear in the trace.", "body": "@ezyang the plot thickens. So, this is what I get on AlexNet when I print out addresses of node, inputs and outputs at this point https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/passes/onnx.cpp#L89\r\n\r\n```\r\nOP NAME _convolution\r\nnode:                    0x7fbd786dfef0\r\ninput:                   0x7fbd7a8a4bb0\r\ninput->node:             0x7fbd786b40e0\r\noutput:                  0x7fbd78443b60\r\noutput->node:            0x7fbd78412f60\r\n\r\nOP NAME threshold_forward\r\nnode:                   0x7fbd786e05f0\r\ninput:                  0x7fbd786dffe0\r\ninput->node:            0x7fbd786dfef0\r\noutput:                 0x7fbd78443b60     <-- same as Conv output\r\noutput->node:           0x7fbd78412f60     <-- same as Conv output->node\r\n\r\nOP NAME threshold\r\nnode:                   0x7fbd786e0c70\r\ninput:                  0x7fbd786e08e0\r\ninput->node:            0x7fbd786e05f0\r\noutput:                 0x7fbd7873ba70\r\noutput->node:           0x7fbd7873b5b0\r\n```\r\nIt seems that the later `threshold` behaves correctly, but that `threshold_forward` reuses `_convolution`'s output node. This leads to `threshold_forward`'s scope to overwrite `_convolution`'s scope.\r\n\r\nSide note: I was expecting that #4471 would only make one of threshold and threshold_forward appear in the trace."}