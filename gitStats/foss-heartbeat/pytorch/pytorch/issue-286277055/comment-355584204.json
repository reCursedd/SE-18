{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/355584204", "html_url": "https://github.com/pytorch/pytorch/issues/4495#issuecomment-355584204", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4495", "id": 355584204, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTU4NDIwNA==", "user": {"login": "lanpa", "id": 2005323, "node_id": "MDQ6VXNlcjIwMDUzMjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2005323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lanpa", "html_url": "https://github.com/lanpa", "followers_url": "https://api.github.com/users/lanpa/followers", "following_url": "https://api.github.com/users/lanpa/following{/other_user}", "gists_url": "https://api.github.com/users/lanpa/gists{/gist_id}", "starred_url": "https://api.github.com/users/lanpa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lanpa/subscriptions", "organizations_url": "https://api.github.com/users/lanpa/orgs", "repos_url": "https://api.github.com/users/lanpa/repos", "events_url": "https://api.github.com/users/lanpa/events{/privacy}", "received_events_url": "https://api.github.com/users/lanpa/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-05T15:36:42Z", "updated_at": "2018-01-05T15:36:42Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=191033\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/lantiga\">@lantiga</a><br>\nI just fixed Alexnet tracing by explicitly made the forward call without using <code>nn.Sequential</code></p>\n<p>replace the <a href=\"https://github.com/pytorch/vision/blob/master/torchvision/models/alexnet.py#L33\">classifier</a> with</p>\n<pre><code>    x = F.dropout(x)\n    x = self.fc1(x)\n    x = self.relu1(x) \n    x = F.dropout(x)\n    x = self.fc2(x)\n    x = self.relu2(x)\n    x = self.fc3(x)\n</code></pre>\n<p>hope that helps~</p>", "body_text": "@ezyang @lantiga\nI just fixed Alexnet tracing by explicitly made the forward call without using nn.Sequential\nreplace the classifier with\n    x = F.dropout(x)\n    x = self.fc1(x)\n    x = self.relu1(x) \n    x = F.dropout(x)\n    x = self.fc2(x)\n    x = self.relu2(x)\n    x = self.fc3(x)\n\nhope that helps~", "body": "@ezyang @lantiga \r\nI just fixed Alexnet tracing by explicitly made the forward call without using `nn.Sequential`\r\n\r\nreplace the [classifier](https://github.com/pytorch/vision/blob/master/torchvision/models/alexnet.py#L33) with\r\n\r\n        x = F.dropout(x)\r\n        x = self.fc1(x)\r\n        x = self.relu1(x) \r\n        x = F.dropout(x)\r\n        x = self.fc2(x)\r\n        x = self.relu2(x)\r\n        x = self.fc3(x)\r\n\r\nhope that helps~"}