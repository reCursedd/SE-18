{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/355768841", "html_url": "https://github.com/pytorch/pytorch/issues/4495#issuecomment-355768841", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4495", "id": 355768841, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTc2ODg0MQ==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-06T19:15:46Z", "updated_at": "2018-01-06T19:15:46Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=191033\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/lantiga\">@lantiga</a> That seems consistent? <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"285898958\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/4471\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/4471/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/4471\">#4471</a> operates by effectively creating an ONNX translation for <code>threshold_forward</code> that is identity (i.e., whatever <code>Value</code> it gets as input, it returns as output).</p>\n<p>Maybe your problem is, in your debug statements, you're mixing up the input nodes from the old graph, versus the new graph. You need to check for aliasing against the new graph (i.e., after <code>env</code> translation).</p>", "body_text": "@lantiga That seems consistent? #4471 operates by effectively creating an ONNX translation for threshold_forward that is identity (i.e., whatever Value it gets as input, it returns as output).\nMaybe your problem is, in your debug statements, you're mixing up the input nodes from the old graph, versus the new graph. You need to check for aliasing against the new graph (i.e., after env translation).", "body": "@lantiga That seems consistent? #4471 operates by effectively creating an ONNX translation for `threshold_forward` that is identity (i.e., whatever `Value` it gets as input, it returns as output).\r\n\r\nMaybe your problem is, in your debug statements, you're mixing up the input nodes from the old graph, versus the new graph. You need to check for aliasing against the new graph (i.e., after `env` translation)."}