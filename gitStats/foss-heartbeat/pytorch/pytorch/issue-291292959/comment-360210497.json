{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/360210497", "html_url": "https://github.com/pytorch/pytorch/pull/4834#issuecomment-360210497", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4834", "id": 360210497, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDIxMDQ5Nw==", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-24T17:27:58Z", "updated_at": "2018-01-24T17:27:58Z", "author_association": "CONTRIBUTOR", "body_html": "<p>CC <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=648532\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fritzo\">@fritzo</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1762463\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/neerajprad\">@neerajprad</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1093846\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alicanb\">@alicanb</a> let me know if you think this is reasonable.</p>\n<p>Basically, we put the \"scalar\" hacks behind checks for torch._C._with_scalars() so the code and tests should work with or without scalars enabled.  Tests that check the shape of scalars can use SCALAR_SHAPE.  It should be pretty easy to pattern match what was done here for new tests; you can also check that new checks work when compiled with <code>WITH_SCALARS=1</code> (you may have to clean and rebuild).</p>", "body_text": "CC @fritzo @neerajprad @alicanb let me know if you think this is reasonable.\nBasically, we put the \"scalar\" hacks behind checks for torch._C._with_scalars() so the code and tests should work with or without scalars enabled.  Tests that check the shape of scalars can use SCALAR_SHAPE.  It should be pretty easy to pattern match what was done here for new tests; you can also check that new checks work when compiled with WITH_SCALARS=1 (you may have to clean and rebuild).", "body": "CC @fritzo @neerajprad @alicanb let me know if you think this is reasonable.\r\n\r\nBasically, we put the \"scalar\" hacks behind checks for torch._C._with_scalars() so the code and tests should work with or without scalars enabled.  Tests that check the shape of scalars can use SCALAR_SHAPE.  It should be pretty easy to pattern match what was done here for new tests; you can also check that new checks work when compiled with `WITH_SCALARS=1` (you may have to clean and rebuild)."}