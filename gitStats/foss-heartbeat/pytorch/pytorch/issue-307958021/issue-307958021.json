{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5956", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5956/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5956/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5956/events", "html_url": "https://github.com/pytorch/pytorch/pull/5956", "id": 307958021, "node_id": "MDExOlB1bGxSZXF1ZXN0MTc3MDE0ODY4", "number": 5956, "title": "Implement `GroupNorm2D` from paper: `Group Normalization`", "user": {"login": "DavexPro", "id": 10829987, "node_id": "MDQ6VXNlcjEwODI5OTg3", "avatar_url": "https://avatars0.githubusercontent.com/u/10829987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DavexPro", "html_url": "https://github.com/DavexPro", "followers_url": "https://api.github.com/users/DavexPro/followers", "following_url": "https://api.github.com/users/DavexPro/following{/other_user}", "gists_url": "https://api.github.com/users/DavexPro/gists{/gist_id}", "starred_url": "https://api.github.com/users/DavexPro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DavexPro/subscriptions", "organizations_url": "https://api.github.com/users/DavexPro/orgs", "repos_url": "https://api.github.com/users/DavexPro/repos", "events_url": "https://api.github.com/users/DavexPro/events{/privacy}", "received_events_url": "https://api.github.com/users/DavexPro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-23T09:36:08Z", "updated_at": "2018-03-23T11:53:07Z", "closed_at": "2018-03-23T11:53:07Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/5956", "html_url": "https://github.com/pytorch/pytorch/pull/5956", "diff_url": "https://github.com/pytorch/pytorch/pull/5956.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/5956.patch"}, "body_html": "<p>Paper: <a href=\"https://arxiv.org/abs/1803.08494\" rel=\"nofollow\">Group Normalization</a></p>\n<p>Migrate the code from tf code given:</p>\n<pre><code>def GroupNorm(x, gamma=1, beta=0.5, group=32, eps=1e-5):\n     # x: input features with shape [N,C,H,W]\n     # gamma, beta: scale and offset, with shape [1,C,1,1]\n     # G: number of groups for GN\n\n     N, C, H, W = x.shape\n     x = tf.reshape(x, [N, group, C // group, H, W])\n\n     mean, var = tf.nn.moments(x, [2, 3, 4], keep_dims=True)\n     x = (x - mean) / tf.sqrt(var + eps)\n\n     x = tf.reshape(x, [N, C, H, W])\n\n     return x * gamma + beta\n</code></pre>\n<p>I test it with VGG16 and CIFAR10, which it works well.</p>", "body_text": "Paper: Group Normalization\nMigrate the code from tf code given:\ndef GroupNorm(x, gamma=1, beta=0.5, group=32, eps=1e-5):\n     # x: input features with shape [N,C,H,W]\n     # gamma, beta: scale and offset, with shape [1,C,1,1]\n     # G: number of groups for GN\n\n     N, C, H, W = x.shape\n     x = tf.reshape(x, [N, group, C // group, H, W])\n\n     mean, var = tf.nn.moments(x, [2, 3, 4], keep_dims=True)\n     x = (x - mean) / tf.sqrt(var + eps)\n\n     x = tf.reshape(x, [N, C, H, W])\n\n     return x * gamma + beta\n\nI test it with VGG16 and CIFAR10, which it works well.", "body": "Paper: [Group Normalization](https://arxiv.org/abs/1803.08494)\r\n\r\nMigrate the code from tf code given:\r\n```\r\ndef GroupNorm(x, gamma=1, beta=0.5, group=32, eps=1e-5):\r\n     # x: input features with shape [N,C,H,W]\r\n     # gamma, beta: scale and offset, with shape [1,C,1,1]\r\n     # G: number of groups for GN\r\n\r\n     N, C, H, W = x.shape\r\n     x = tf.reshape(x, [N, group, C // group, H, W])\r\n\r\n     mean, var = tf.nn.moments(x, [2, 3, 4], keep_dims=True)\r\n     x = (x - mean) / tf.sqrt(var + eps)\r\n\r\n     x = tf.reshape(x, [N, C, H, W])\r\n\r\n     return x * gamma + beta\r\n```\r\n\r\nI test it with VGG16 and CIFAR10, which it works well."}