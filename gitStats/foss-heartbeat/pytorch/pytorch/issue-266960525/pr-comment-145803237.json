{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/145803237", "pull_request_review_id": 70658643, "id": 145803237, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTgwMzIzNw==", "diff_hunk": "@@ -200,16 +200,18 @@ static void wrap_output(std::tuple<Variable, Variable, Variable>& t, FunctionFla\n }\n \n static void increment_version(const Tensor & t) {\n-  auto pImpl = static_cast<VariableImpl*>(t.get());\n-  (*pImpl->version_counter)++;\n+  // accept a const Tensor & because some functions (e.g. relu) mark inputs as\n+  // const even though they may be modified in-place.", "path": "tools/autograd/templates/VariableType.cpp", "position": null, "original_position": 27, "commit_id": "5728a4a0355b69a86205f08cb328bbe682b0cb39", "original_commit_id": "1e15da0d96ad13d08b3cb70dceebf7e826b3e569", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "The const correctness story of ATen is a disaster (stemming from the disaster that is C++ const correctness, see https://github.com/zdevito/ATen/issues/27) but the consistent approach would be to make `version_counter()` in `Variable` self-const. I think you'll find that will compile. UPDATE: Or, perhaps more precisely, make the const version of `version_counter()` return a non-const reference.", "created_at": "2017-10-19T19:43:25Z", "updated_at": "2018-11-23T15:35:31Z", "html_url": "https://github.com/pytorch/pytorch/pull/3184#discussion_r145803237", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3184", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/145803237"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3184#discussion_r145803237"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3184"}}, "body_html": "<p>The const correctness story of ATen is a disaster (stemming from the disaster that is C++ const correctness, see <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"244399661\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/zdevito/ATen/issues/27\" data-hovercard-type=\"issue\" data-hovercard-url=\"/zdevito/ATen/issues/27/hovercard\" href=\"https://github.com/zdevito/ATen/issues/27\">zdevito/ATen#27</a>) but the consistent approach would be to make <code>version_counter()</code> in <code>Variable</code> self-const. I think you'll find that will compile. UPDATE: Or, perhaps more precisely, make the const version of <code>version_counter()</code> return a non-const reference.</p>", "body_text": "The const correctness story of ATen is a disaster (stemming from the disaster that is C++ const correctness, see zdevito/ATen#27) but the consistent approach would be to make version_counter() in Variable self-const. I think you'll find that will compile. UPDATE: Or, perhaps more precisely, make the const version of version_counter() return a non-const reference."}