{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/338016545", "html_url": "https://github.com/pytorch/pytorch/pull/3184#issuecomment-338016545", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3184", "id": 338016545, "node_id": "MDEyOklzc3VlQ29tbWVudDMzODAxNjU0NQ==", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-19T19:46:25Z", "updated_at": "2017-10-19T19:50:59Z", "author_association": "MEMBER", "body_html": "<p>Yeah, I would really like automated benchmarking. My current test is basically (in ipython3):</p>\n<pre><code>import torch; from torch.autograd import Variable; v = Variable(torch.randn(1));\n%timeit v.add(v)\n</code></pre>\n<p>This did not noticeably change.</p>\n<p>With the PR, we save on one small allocation/free (~30ns) and add a few atomic ops (~5ns each).</p>", "body_text": "Yeah, I would really like automated benchmarking. My current test is basically (in ipython3):\nimport torch; from torch.autograd import Variable; v = Variable(torch.randn(1));\n%timeit v.add(v)\n\nThis did not noticeably change.\nWith the PR, we save on one small allocation/free (~30ns) and add a few atomic ops (~5ns each).", "body": "Yeah, I would really like automated benchmarking. My current test is basically (in ipython3):\r\n\r\n```\r\nimport torch; from torch.autograd import Variable; v = Variable(torch.randn(1));\r\n%timeit v.add(v)\r\n```\r\n\r\nThis did not noticeably change.\r\n\r\nWith the PR, we save on one small allocation/free (~30ns) and add a few atomic ops (~5ns each). "}