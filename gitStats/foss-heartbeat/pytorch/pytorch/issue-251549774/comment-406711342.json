{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/406711342", "html_url": "https://github.com/pytorch/pytorch/issues/2496#issuecomment-406711342", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2496", "id": 406711342, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjcxMTM0Mg==", "user": {"login": "koulanurag", "id": 4881224, "node_id": "MDQ6VXNlcjQ4ODEyMjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/4881224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koulanurag", "html_url": "https://github.com/koulanurag", "followers_url": "https://api.github.com/users/koulanurag/followers", "following_url": "https://api.github.com/users/koulanurag/following{/other_user}", "gists_url": "https://api.github.com/users/koulanurag/gists{/gist_id}", "starred_url": "https://api.github.com/users/koulanurag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koulanurag/subscriptions", "organizations_url": "https://api.github.com/users/koulanurag/orgs", "repos_url": "https://api.github.com/users/koulanurag/repos", "events_url": "https://api.github.com/users/koulanurag/events{/privacy}", "received_events_url": "https://api.github.com/users/koulanurag/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-20T20:00:24Z", "updated_at": "2018-07-20T20:06:56Z", "author_association": "NONE", "body_html": "<p>Hi <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a>, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a></p>\n<p>Here is a simple script to replicate the issue:</p>\n<pre><code>import torch\nimport torch.nn as nn\nimport torch.nn.functional as F\nfrom torch.autograd import Variable\nimport torch.multiprocessing as mp\n\n\nclass Net(nn.Module):\n    def __init__(self, input_size):\n        super(Net, self).__init__()\n        self.conv1 = nn.Conv2d(input_size, 32, 3, stride=2, padding=1)\n\n    def forward(self, inputs):\n        print('Before Conv1 call')\n        x = F.elu(self.conv1(inputs))\n        print('After Conv1 call')\n        return x\n\n\ndef train():\n    net = Net(1)\n    net(Variable(torch.randn(1, 80, 80).unsqueeze(0)))\n    print('Passed!')\n\n\nif __name__ == '__main__':\n    # directly calling the method works\n    train()\n\n    # However; Call under a process gets stuck after Conv2d\n    p = mp.Process(target=train, args=())\n    p.start()\n    p.join()\n</code></pre>\n<p>Output:</p>\n<pre><code>Before Conv1 call\nAfter Conv1 call\nPassed!\nBefore Conv1 call\n</code></pre>\n<p>Issue faced while running over CentOS 7 with torch 0.4.0 and Python 3.5.1</p>\n<p>Note : It works fine on OSX with same dependencies.</p>", "body_text": "Hi @SsnL, @soumith\nHere is a simple script to replicate the issue:\nimport torch\nimport torch.nn as nn\nimport torch.nn.functional as F\nfrom torch.autograd import Variable\nimport torch.multiprocessing as mp\n\n\nclass Net(nn.Module):\n    def __init__(self, input_size):\n        super(Net, self).__init__()\n        self.conv1 = nn.Conv2d(input_size, 32, 3, stride=2, padding=1)\n\n    def forward(self, inputs):\n        print('Before Conv1 call')\n        x = F.elu(self.conv1(inputs))\n        print('After Conv1 call')\n        return x\n\n\ndef train():\n    net = Net(1)\n    net(Variable(torch.randn(1, 80, 80).unsqueeze(0)))\n    print('Passed!')\n\n\nif __name__ == '__main__':\n    # directly calling the method works\n    train()\n\n    # However; Call under a process gets stuck after Conv2d\n    p = mp.Process(target=train, args=())\n    p.start()\n    p.join()\n\nOutput:\nBefore Conv1 call\nAfter Conv1 call\nPassed!\nBefore Conv1 call\n\nIssue faced while running over CentOS 7 with torch 0.4.0 and Python 3.5.1\nNote : It works fine on OSX with same dependencies.", "body": "Hi @SsnL, @soumith \r\n\r\nHere is a simple script to replicate the issue:\r\n\r\n```\r\nimport torch\r\nimport torch.nn as nn\r\nimport torch.nn.functional as F\r\nfrom torch.autograd import Variable\r\nimport torch.multiprocessing as mp\r\n\r\n\r\nclass Net(nn.Module):\r\n    def __init__(self, input_size):\r\n        super(Net, self).__init__()\r\n        self.conv1 = nn.Conv2d(input_size, 32, 3, stride=2, padding=1)\r\n\r\n    def forward(self, inputs):\r\n        print('Before Conv1 call')\r\n        x = F.elu(self.conv1(inputs))\r\n        print('After Conv1 call')\r\n        return x\r\n\r\n\r\ndef train():\r\n    net = Net(1)\r\n    net(Variable(torch.randn(1, 80, 80).unsqueeze(0)))\r\n    print('Passed!')\r\n\r\n\r\nif __name__ == '__main__':\r\n    # directly calling the method works\r\n    train()\r\n\r\n    # However; Call under a process gets stuck after Conv2d\r\n    p = mp.Process(target=train, args=())\r\n    p.start()\r\n    p.join()\r\n```\r\nOutput:\r\n\r\n```\r\nBefore Conv1 call\r\nAfter Conv1 call\r\nPassed!\r\nBefore Conv1 call\r\n```\r\nIssue faced while running over CentOS 7 with torch 0.4.0 and Python 3.5.1 \r\n\r\nNote : It works fine on OSX with same dependencies.\r\n\r\n\r\n\r\n"}