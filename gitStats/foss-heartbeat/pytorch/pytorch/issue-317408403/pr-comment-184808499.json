{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/184808499", "pull_request_review_id": 116085421, "id": 184808499, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDgwODQ5OQ==", "diff_hunk": "@@ -89,8 +89,8 @@ static void tensorNewWithStorage(rpc::RPCMessage& raw_message) {\n   THLongStorage *stride = unpackTHLongStorage(raw_message);\n   finalize(raw_message);\n \n-  at::IntList sz(size->data, size->size);", "path": "torch/lib/THD/master_worker/worker/dispatch/Tensor.cpp", "position": 4, "original_position": 15, "commit_id": "0dbe7910e385a9e3c38c956d0912831bac8aad37", "original_commit_id": "c283c28af4fe8cacef6b6acc1d00456ed6ac37aa", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "I was thinking about the change to remove `THTensor` and replace with ATen that is coming down the pipe, and when that change happens we're going to obliterate all of the data members in the struct and so it's better to access these members using a function rather than a direct member access.\r\n\r\nIf you would like, I can add some C++ methods to the struct so that I can rewrite this as `size->sizes()` and then include the `hpp` header to get at them (the methods could then be rewritten to forward to ATen when we get there.)", "created_at": "2018-04-27T21:14:06Z", "updated_at": "2018-11-23T15:43:21Z", "html_url": "https://github.com/pytorch/pytorch/pull/6913#discussion_r184808499", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6913", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/184808499"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6913#discussion_r184808499"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6913"}}, "body_html": "<p>I was thinking about the change to remove <code>THTensor</code> and replace with ATen that is coming down the pipe, and when that change happens we're going to obliterate all of the data members in the struct and so it's better to access these members using a function rather than a direct member access.</p>\n<p>If you would like, I can add some C++ methods to the struct so that I can rewrite this as <code>size-&gt;sizes()</code> and then include the <code>hpp</code> header to get at them (the methods could then be rewritten to forward to ATen when we get there.)</p>", "body_text": "I was thinking about the change to remove THTensor and replace with ATen that is coming down the pipe, and when that change happens we're going to obliterate all of the data members in the struct and so it's better to access these members using a function rather than a direct member access.\nIf you would like, I can add some C++ methods to the struct so that I can rewrite this as size->sizes() and then include the hpp header to get at them (the methods could then be rewritten to forward to ATen when we get there.)", "in_reply_to_id": 184800228}