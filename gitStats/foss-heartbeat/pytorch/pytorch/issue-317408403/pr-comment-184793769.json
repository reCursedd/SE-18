{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/184793769", "pull_request_review_id": 116067511, "id": 184793769, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDc5Mzc2OQ==", "diff_hunk": "@@ -107,3 +107,32 @@ function call, e.g., `kernel = THTensor_(newContiguous2D)(k_)`.\n   to call `THError` before performing any allocations, since in some cases we\n   sketchily throw a C++ exception and try to recover (in particular, the test\n   suite does this.)\n+\n+## The C interface\n+\n+Historically, the Torch libraries were implemented in C.  Since then, we have slowly\n+started rewriting bits of pieces of Torch in C++ (usually because there is some\n+C++ feature which would be really helpful for writing something.)  However,\n+Torch has *always been*, and *will always be* a library that provides a C ABI\n+interface, even if, at some point in the future, its internal implementation\n+is entirely done in a C++ library that heavily uses C++ idioms.  (At the moment,\n+all of the source files are C++, but they are mostly C code that happens to be\n+compiled as C++).\n+\n+In order to achieve this, the `TH_API` macro (called `THC_API` in `THC`) plays\n+a crucial role: it declares a function as having C-linkage, which means that the\n+C++ compiler doesn't mangle its name and a C client can link against it.\n+\n+As a developer, here is what you need to know:\n+\n+1. If you add a function to the public API of Torch, you *must* mark it with\n+   `THC_API`.  This will ensure it is built with C-linkage (and on Windows, it", "path": "aten/src/README.md", "position": null, "original_position": 23, "commit_id": "0dbe7910e385a9e3c38c956d0912831bac8aad37", "original_commit_id": "c283c28af4fe8cacef6b6acc1d00456ed6ac37aa", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "shouldn't this say mark it with `TH_API` or `THC_API`?", "created_at": "2018-04-27T20:06:28Z", "updated_at": "2018-11-23T15:43:20Z", "html_url": "https://github.com/pytorch/pytorch/pull/6913#discussion_r184793769", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6913", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/184793769"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6913#discussion_r184793769"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6913"}}, "body_html": "<p>shouldn't this say mark it with <code>TH_API</code> or <code>THC_API</code>?</p>", "body_text": "shouldn't this say mark it with TH_API or THC_API?"}