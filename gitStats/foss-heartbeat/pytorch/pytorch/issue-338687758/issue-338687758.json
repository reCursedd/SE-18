{"url": "https://api.github.com/repos/pytorch/pytorch/issues/9190", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/9190/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9190/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/9190/events", "html_url": "https://github.com/pytorch/pytorch/issues/9190", "id": 338687758, "node_id": "MDU6SXNzdWUzMzg2ODc3NTg=", "number": 9190, "title": "[pytorch] torch.where to support Python scalars", "user": {"login": "vadimkantorov", "id": 1041752, "node_id": "MDQ6VXNlcjEwNDE3NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1041752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimkantorov", "html_url": "https://github.com/vadimkantorov", "followers_url": "https://api.github.com/users/vadimkantorov/followers", "following_url": "https://api.github.com/users/vadimkantorov/following{/other_user}", "gists_url": "https://api.github.com/users/vadimkantorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimkantorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimkantorov/subscriptions", "organizations_url": "https://api.github.com/users/vadimkantorov/orgs", "repos_url": "https://api.github.com/users/vadimkantorov/repos", "events_url": "https://api.github.com/users/vadimkantorov/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimkantorov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-07-05T18:52:41Z", "updated_at": "2018-10-31T15:19:54Z", "closed_at": null, "author_association": "NONE", "body_html": "<div class=\"highlight highlight-source-python\"><pre>a <span class=\"pl-k\">=</span> torch.Tensor([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>])\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> works, correctly produces tensor([-1.,  2.,  3.])</span>\nb <span class=\"pl-k\">=</span> torch.where(a <span class=\"pl-k\">==</span> <span class=\"pl-c1\">1</span>, torch.Tensor([<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>]), a)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> fails: TypeError: where(): argument 'input' (position 2) must be Tensor, not int</span>\nc <span class=\"pl-k\">=</span> torch.where(a <span class=\"pl-k\">==</span> <span class=\"pl-c1\">1</span>, <span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>, a)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> works in numpy</span>\nnp.where(a.numpy() <span class=\"pl-k\">==</span> <span class=\"pl-c1\">1</span>, <span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>, a.numpy())\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> both fail: RuntimeError: expected scalar type Long but found Float</span>\nd <span class=\"pl-k\">=</span> torch.where(a <span class=\"pl-k\">==</span> <span class=\"pl-c1\">1</span>, torch.tensor(<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>), a)\nd <span class=\"pl-k\">=</span> torch.where(a <span class=\"pl-k\">==</span> <span class=\"pl-c1\">1</span>, torch.tensor([<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>]), a)</pre></div>", "body_text": "a = torch.Tensor([1, 2, 3])\n\n# works, correctly produces tensor([-1.,  2.,  3.])\nb = torch.where(a == 1, torch.Tensor([-1]), a)\n\n# fails: TypeError: where(): argument 'input' (position 2) must be Tensor, not int\nc = torch.where(a == 1, -1, a)\n\n# works in numpy\nnp.where(a.numpy() == 1, -1, a.numpy())\n\n# both fail: RuntimeError: expected scalar type Long but found Float\nd = torch.where(a == 1, torch.tensor(-1), a)\nd = torch.where(a == 1, torch.tensor([-1]), a)", "body": "```python\r\na = torch.Tensor([1, 2, 3])\r\n\r\n# works, correctly produces tensor([-1.,  2.,  3.])\r\nb = torch.where(a == 1, torch.Tensor([-1]), a)\r\n\r\n# fails: TypeError: where(): argument 'input' (position 2) must be Tensor, not int\r\nc = torch.where(a == 1, -1, a)\r\n\r\n# works in numpy\r\nnp.where(a.numpy() == 1, -1, a.numpy())\r\n\r\n# both fail: RuntimeError: expected scalar type Long but found Float\r\nd = torch.where(a == 1, torch.tensor(-1), a)\r\nd = torch.where(a == 1, torch.tensor([-1]), a)\r\n```"}