{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/434709408", "html_url": "https://github.com/pytorch/pytorch/issues/9190#issuecomment-434709408", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9190", "id": 434709408, "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDcwOTQwOA==", "user": {"login": "vadimkantorov", "id": 1041752, "node_id": "MDQ6VXNlcjEwNDE3NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1041752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimkantorov", "html_url": "https://github.com/vadimkantorov", "followers_url": "https://api.github.com/users/vadimkantorov/followers", "following_url": "https://api.github.com/users/vadimkantorov/following{/other_user}", "gists_url": "https://api.github.com/users/vadimkantorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimkantorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimkantorov/subscriptions", "organizations_url": "https://api.github.com/users/vadimkantorov/orgs", "repos_url": "https://api.github.com/users/vadimkantorov/repos", "events_url": "https://api.github.com/users/vadimkantorov/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimkantorov/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-31T14:31:40Z", "updated_at": "2018-10-31T14:32:13Z", "author_association": "NONE", "body_html": "<p>it may come from this formula (modulo handling of the sum to avoid nan's): <code>torch.where(gate, a, b) := gate * a + (gate == 0) * b</code> but it may still be unintuitive for the negative case.</p>\n<p>Another possible useful function is just linear interpolation that handles NaN's and Inf's (e.g. for computing entropy <code>p * log(p)</code> without problems when p == 0):<br>\n<code>convex_combination(gate, a, b) := gate * a + (1 - gate) * b</code></p>", "body_text": "it may come from this formula (modulo handling of the sum to avoid nan's): torch.where(gate, a, b) := gate * a + (gate == 0) * b but it may still be unintuitive for the negative case.\nAnother possible useful function is just linear interpolation that handles NaN's and Inf's (e.g. for computing entropy p * log(p) without problems when p == 0):\nconvex_combination(gate, a, b) := gate * a + (1 - gate) * b", "body": "it may come from this formula (modulo handling of the sum to avoid nan's): `torch.where(gate, a, b) := gate * a + (gate == 0) * b` but it may still be unintuitive for the negative case.\r\n\r\nAnother possible useful function is just linear interpolation that handles NaN's and Inf's (e.g. for computing entropy `p * log(p)` without problems when p == 0):\r\n`convex_combination(gate, a, b) := gate * a + (1 - gate) * b`"}