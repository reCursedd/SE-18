{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/119628920", "pull_request_review_id": 41524200, "id": 119628920, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExOTYyODkyMA==", "diff_hunk": "@@ -0,0 +1,294 @@\n+from . import CWrapPlugin\n+from string import Template\n+\n+# Arguments to the Broadcast Plugin:\n+# broadcast: args_to_broadcast_against [inplace] [fallback]\n+# [args_to_broadcast_against]: either a single argument (e.g. \"arg1\") or a comma-seperated\n+#                              list of two arguments (e.g. \"tensor1,tensor2\") indicating\n+#                              arguments to broadcast specified argument (usually \"self\") against\n+# [inplace] will generate code for in-place function, which doesn't allow the in-place\n+#           argument to be broadcast\n+# [fallback] if tensors aren't broadcastable, preserves \"element number\" pointwise behavior,\n+#            where only number of elements need to match, and tensors are viewed as 1-dimensional.\n+# [dims] if the tensors shouldn't be broadcast to specific tensor or tensors, but a combination", "path": "tools/cwrap/plugins/Broadcast.py", "position": null, "original_position": 13, "commit_id": "ca546930a8c9f31eab0a6fb79154ad4e985882e3", "original_commit_id": "6430b6e52ad0ee00a07d92a78e95be9fe9885472", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "sure, I'll give a specific example.", "created_at": "2017-06-01T14:28:00Z", "updated_at": "2018-11-23T15:33:35Z", "html_url": "https://github.com/pytorch/pytorch/pull/1563#discussion_r119628920", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1563", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/119628920"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1563#discussion_r119628920"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1563"}}, "body_html": "<p>sure, I'll give a specific example.</p>", "body_text": "sure, I'll give a specific example.", "in_reply_to_id": 119613365}