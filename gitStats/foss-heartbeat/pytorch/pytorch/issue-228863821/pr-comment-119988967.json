{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/119988967", "pull_request_review_id": 41922415, "id": 119988967, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExOTk4ODk2Nw==", "diff_hunk": "@@ -0,0 +1,18 @@\n+import sys\n+from torch._C import _set_backcompat_broadcast_warn\n+from torch._C import _get_backcompat_broadcast_warn\n+\n+\n+class Warning:\n+    def __init__(self):\n+        pass\n+\n+    def set_enabled(self, value):\n+        _set_backcompat_broadcast_warn(value)\n+\n+    def get_enabled(self):\n+        return _get_backcompat_broadcast_warn()\n+\n+    enabled = property(get_enabled, set_enabled)\n+\n+sys.modules[__name__] = Warning()", "path": "torch/utils/backcompat/broadcast/warning/__init__.py", "position": null, "original_position": 18, "commit_id": "ca546930a8c9f31eab0a6fb79154ad4e985882e3", "original_commit_id": "0fb1f36420a17612e870b8c5c1851e7e85912ba3", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "I meant that you could do this instead of hacking `sys.modules`:\r\n```python\r\n# torch/utils/backcompat/broadcast.py\r\nclass Warning(object):\r\n    ... # declare the property here\r\nwarning = Warning()\r\n```\r\nAlso, maybe let's just have `torch.utils.backcompat.broadcast_warning` and `torch.utils.backcompat.keepdim_warning`? You could reuse the same class for this (just give the getter/setter C function to the constructor of both instances).", "created_at": "2017-06-03T15:49:13Z", "updated_at": "2018-11-23T15:33:39Z", "html_url": "https://github.com/pytorch/pytorch/pull/1563#discussion_r119988967", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1563", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/119988967"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1563#discussion_r119988967"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1563"}}, "body_html": "<p>I meant that you could do this instead of hacking <code>sys.modules</code>:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span> torch/utils/backcompat/broadcast.py</span>\n<span class=\"pl-k\">class</span> <span class=\"pl-c1\">Warning</span>(<span class=\"pl-c1\">object</span>):\n    <span class=\"pl-c1\">...</span> <span class=\"pl-c\"><span class=\"pl-c\">#</span> declare the property here</span>\nwarning <span class=\"pl-k\">=</span> <span class=\"pl-c1\">Warning</span>()</pre></div>\n<p>Also, maybe let's just have <code>torch.utils.backcompat.broadcast_warning</code> and <code>torch.utils.backcompat.keepdim_warning</code>? You could reuse the same class for this (just give the getter/setter C function to the constructor of both instances).</p>", "body_text": "I meant that you could do this instead of hacking sys.modules:\n# torch/utils/backcompat/broadcast.py\nclass Warning(object):\n    ... # declare the property here\nwarning = Warning()\nAlso, maybe let's just have torch.utils.backcompat.broadcast_warning and torch.utils.backcompat.keepdim_warning? You could reuse the same class for this (just give the getter/setter C function to the constructor of both instances).", "in_reply_to_id": 119903231}