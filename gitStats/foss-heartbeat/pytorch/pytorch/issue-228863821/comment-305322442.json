{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/305322442", "html_url": "https://github.com/pytorch/pytorch/pull/1563#issuecomment-305322442", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1563", "id": 305322442, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTMyMjQ0Mg==", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-31T21:26:12Z", "updated_at": "2017-05-31T21:26:12Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I think this is ready for review and now implements all functions mentioned in <a href=\"https://github.com/gchanan/pytorch/wiki/Broadcasting-Notes\">https://github.com/gchanan/pytorch/wiki/Broadcasting-Notes</a> (i.e. it no longer includes only pointwise mathematical and comparison functions like the title says).</p>\n<p>Re: turning off broadcasting, the only case I implemented this for was for copy, which allows you to pass a \"broadcast\" parameter (default: True).  There were a number of places in the code where it was clearly intended to copy tensors as 1-d, which wasn't really true for other functions.</p>\n<p>This PR now also includes some warnings that you can enable to detect backwards incompatible changes.  In particular:</p>\n<ol>\n<li>\n<p>Setting torch.utils.backcompat.broadcast.warning.enabled=True will cause Python warnings in the case where broadcast occurs but previously 1-d view style pointwise ops occured.</p>\n</li>\n<li>\n<p>Setting torch.utils.backcompat.keepdim.warning.enabled=True will cause Python warnings in the case where the default value of keepdim is used for 1-d reductions.</p>\n</li>\n</ol>\n<p>I've manually enabled these and verified that the only places these warnings are triggered are in the tests are directly in tests, i.e. there are no library calls (at least that are covered by tests) where we rely on the old behavior.  This should make turning on these warnings less noisy.</p>", "body_text": "I think this is ready for review and now implements all functions mentioned in https://github.com/gchanan/pytorch/wiki/Broadcasting-Notes (i.e. it no longer includes only pointwise mathematical and comparison functions like the title says).\nRe: turning off broadcasting, the only case I implemented this for was for copy, which allows you to pass a \"broadcast\" parameter (default: True).  There were a number of places in the code where it was clearly intended to copy tensors as 1-d, which wasn't really true for other functions.\nThis PR now also includes some warnings that you can enable to detect backwards incompatible changes.  In particular:\n\n\nSetting torch.utils.backcompat.broadcast.warning.enabled=True will cause Python warnings in the case where broadcast occurs but previously 1-d view style pointwise ops occured.\n\n\nSetting torch.utils.backcompat.keepdim.warning.enabled=True will cause Python warnings in the case where the default value of keepdim is used for 1-d reductions.\n\n\nI've manually enabled these and verified that the only places these warnings are triggered are in the tests are directly in tests, i.e. there are no library calls (at least that are covered by tests) where we rely on the old behavior.  This should make turning on these warnings less noisy.", "body": "I think this is ready for review and now implements all functions mentioned in https://github.com/gchanan/pytorch/wiki/Broadcasting-Notes (i.e. it no longer includes only pointwise mathematical and comparison functions like the title says).\r\n\r\nRe: turning off broadcasting, the only case I implemented this for was for copy, which allows you to pass a \"broadcast\" parameter (default: True).  There were a number of places in the code where it was clearly intended to copy tensors as 1-d, which wasn't really true for other functions.\r\n\r\nThis PR now also includes some warnings that you can enable to detect backwards incompatible changes.  In particular:\r\n\r\n1) Setting torch.utils.backcompat.broadcast.warning.enabled=True will cause Python warnings in the case where broadcast occurs but previously 1-d view style pointwise ops occured.\r\n\r\n2) Setting torch.utils.backcompat.keepdim.warning.enabled=True will cause Python warnings in the case where the default value of keepdim is used for 1-d reductions.\r\n\r\nI've manually enabled these and verified that the only places these warnings are triggered are in the tests are directly in tests, i.e. there are no library calls (at least that are covered by tests) where we rely on the old behavior.  This should make turning on these warnings less noisy."}