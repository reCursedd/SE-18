{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/119991688", "pull_request_review_id": 41925076, "id": 119991688, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExOTk5MTY4OA==", "diff_hunk": "@@ -285,23 +285,103 @@ void THTensor_(resize5d)(THTensor *self, long size0, long size1, long size2, lon\n   THTensor_(resizeNd)(self, 5, size, NULL);\n }\n \n-THTensor* THTensor_(newExpand)(THTensor *tensor, THLongStorage *sizes) {\n-  THArgCheck(THLongStorage_size(sizes) >= THTensor_(nDimension)(tensor), 1, \"the number of sizes provided \\\n-      must be greater or equal to the number of dimensions in the tensor\");\n-  THArgCheck(THTensor_(nDimension)(tensor) > 0, 0, \"can't expand an empty tensor\");\n+THTensor* THTensor_(newExpand)(THTensor *tensor, THLongStorage *sizes, int raiseErrors) {", "path": "torch/lib/TH/generic/THTensor.c", "position": null, "original_position": 8, "commit_id": "ca546930a8c9f31eab0a6fb79154ad4e985882e3", "original_commit_id": "0fb1f36420a17612e870b8c5c1851e7e85912ba3", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "is it guaranteed that THError (what gets called now if raiseErrors = 0) will throw an exception?  The function is settable, right?  So could e.g. exit.\r\n\r\nI guess we could move all of this to THPP and add real exception types?", "created_at": "2017-06-03T18:19:02Z", "updated_at": "2018-11-23T15:33:39Z", "html_url": "https://github.com/pytorch/pytorch/pull/1563#discussion_r119991688", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1563", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/119991688"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1563#discussion_r119991688"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1563"}}, "body_html": "<p>is it guaranteed that THError (what gets called now if raiseErrors = 0) will throw an exception?  The function is settable, right?  So could e.g. exit.</p>\n<p>I guess we could move all of this to THPP and add real exception types?</p>", "body_text": "is it guaranteed that THError (what gets called now if raiseErrors = 0) will throw an exception?  The function is settable, right?  So could e.g. exit.\nI guess we could move all of this to THPP and add real exception types?", "in_reply_to_id": 119902413}