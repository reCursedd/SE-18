{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/120327422", "pull_request_review_id": 42279433, "id": 120327422, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMDMyNzQyMg==", "diff_hunk": "@@ -285,23 +285,103 @@ void THTensor_(resize5d)(THTensor *self, long size0, long size1, long size2, lon\n   THTensor_(resizeNd)(self, 5, size, NULL);\n }\n \n-THTensor* THTensor_(newExpand)(THTensor *tensor, THLongStorage *sizes) {\n-  THArgCheck(THLongStorage_size(sizes) >= THTensor_(nDimension)(tensor), 1, \"the number of sizes provided \\\n-      must be greater or equal to the number of dimensions in the tensor\");\n-  THArgCheck(THTensor_(nDimension)(tensor) > 0, 0, \"can't expand an empty tensor\");\n+THTensor* THTensor_(newExpand)(THTensor *tensor, THLongStorage *sizes, int raiseErrors) {", "path": "torch/lib/TH/generic/THTensor.c", "position": null, "original_position": 8, "commit_id": "ca546930a8c9f31eab0a6fb79154ad4e985882e3", "original_commit_id": "0fb1f36420a17612e870b8c5c1851e7e85912ba3", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Yes, it is guaranteed in PyTorch. We depend on it all over the place (see how `HANDLE_TH_ERRORS` macro is defined in `torch/csrc/Exceptions.h`). I don't think having this flag as part of the interface is a good idea. It's only for this single use case.", "created_at": "2017-06-06T11:20:26Z", "updated_at": "2018-11-23T15:33:40Z", "html_url": "https://github.com/pytorch/pytorch/pull/1563#discussion_r120327422", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1563", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/120327422"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1563#discussion_r120327422"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1563"}}, "body_html": "<p>Yes, it is guaranteed in PyTorch. We depend on it all over the place (see how <code>HANDLE_TH_ERRORS</code> macro is defined in <code>torch/csrc/Exceptions.h</code>). I don't think having this flag as part of the interface is a good idea. It's only for this single use case.</p>", "body_text": "Yes, it is guaranteed in PyTorch. We depend on it all over the place (see how HANDLE_TH_ERRORS macro is defined in torch/csrc/Exceptions.h). I don't think having this flag as part of the interface is a good idea. It's only for this single use case.", "in_reply_to_id": 119902413}