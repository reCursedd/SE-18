{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/120150200", "pull_request_review_id": 42090075, "id": 120150200, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMDE1MDIwMA==", "diff_hunk": "@@ -0,0 +1,13 @@\n+#ifndef TH_SIZE_INC\n+#define TH_SIZE_INC\n+\n+#include \"THGeneral.h\"\n+#include <stddef.h>\n+\n+// THTensor functions that would work on a THSize if we had such a class in C++,\n+// i.e. THTensor functions that depend only on the shape of the tensor, not the type.", "path": "torch/lib/TH/THSize.h", "position": 8, "original_position": 8, "commit_id": "ca546930a8c9f31eab0a6fb79154ad4e985882e3", "original_commit_id": "0fb1f36420a17612e870b8c5c1851e7e85912ba3", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "I don't think we should be adding additional uses of THLongStorage to represent sizes. It was a mistake to represent sizes that way that only sort-of made sense in the context of Lua.\r\n\r\nWe already use `long*` pointers in `resizeNd` and `setStorageNd`.\r\n\r\nIt's also bad because we take the THLongStorage.size -> THTensor.nDimension, but one is an `int` and the other is a `long`. This requires either `-fpermissive` everywhere or extra casts.", "created_at": "2017-06-05T16:34:07Z", "updated_at": "2018-11-23T15:33:40Z", "html_url": "https://github.com/pytorch/pytorch/pull/1563#discussion_r120150200", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1563", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/120150200"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1563#discussion_r120150200"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1563"}}, "body_html": "<p>I don't think we should be adding additional uses of THLongStorage to represent sizes. It was a mistake to represent sizes that way that only sort-of made sense in the context of Lua.</p>\n<p>We already use <code>long*</code> pointers in <code>resizeNd</code> and <code>setStorageNd</code>.</p>\n<p>It's also bad because we take the THLongStorage.size -&gt; THTensor.nDimension, but one is an <code>int</code> and the other is a <code>long</code>. This requires either <code>-fpermissive</code> everywhere or extra casts.</p>", "body_text": "I don't think we should be adding additional uses of THLongStorage to represent sizes. It was a mistake to represent sizes that way that only sort-of made sense in the context of Lua.\nWe already use long* pointers in resizeNd and setStorageNd.\nIt's also bad because we take the THLongStorage.size -> THTensor.nDimension, but one is an int and the other is a long. This requires either -fpermissive everywhere or extra casts.", "in_reply_to_id": 119901253}