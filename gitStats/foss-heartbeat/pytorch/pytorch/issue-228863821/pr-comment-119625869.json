{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/119625869", "pull_request_review_id": 41522732, "id": 119625869, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExOTYyNTg2OQ==", "diff_hunk": "@@ -0,0 +1,108 @@\n+.. _broadcasting-semantics:\n+\n+Broadcasting semantics\n+==============\n+\n+Many PyTorch operations support :any:`NumPy Broadcasting Semantics <numpy.doc.broadcasting>`.\n+\n+In short, if a PyTorch operation supports broadcast, then its Tensor arguments can be\n+automatically expanded to be of equal sizes (without making copies of the data).", "path": "docs/source/notes/broadcasting.rst", "position": 9, "original_position": 9, "commit_id": "ca546930a8c9f31eab0a6fb79154ad4e985882e3", "original_commit_id": "6430b6e52ad0ee00a07d92a78e95be9fe9885472", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "Agreed, and I wasn't consistent in this PR.  In general I prefer \"shape\" but there is already a size() function and a torch.Size object.  I generally used size/sizes except in cases I thought shape was significantly clearer.", "created_at": "2017-06-01T14:17:25Z", "updated_at": "2018-11-23T15:33:35Z", "html_url": "https://github.com/pytorch/pytorch/pull/1563#discussion_r119625869", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1563", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/119625869"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1563#discussion_r119625869"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1563"}}, "body_html": "<p>Agreed, and I wasn't consistent in this PR.  In general I prefer \"shape\" but there is already a size() function and a torch.Size object.  I generally used size/sizes except in cases I thought shape was significantly clearer.</p>", "body_text": "Agreed, and I wasn't consistent in this PR.  In general I prefer \"shape\" but there is already a size() function and a torch.Size object.  I generally used size/sizes except in cases I thought shape was significantly clearer.", "in_reply_to_id": 119610761}