{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/338997428", "html_url": "https://github.com/pytorch/pytorch/pull/3252#issuecomment-338997428", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3252", "id": 338997428, "node_id": "MDEyOklzc3VlQ29tbWVudDMzODk5NzQyOA==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-24T13:52:28Z", "updated_at": "2017-10-24T13:52:28Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Oops sorry.</p>\n<pre><code>Previously the generated code looked like:\n\n  jit::tracer::recordTrace( \"min\", { self }, ret );\n\nNow it looks like:\n\n  jit::tracer::recordTrace( \"min\", { self }, { std::get&lt;0&gt;(ret), std::get&lt;1&gt;(ret) } );\n                          \n</code></pre>", "body_text": "Oops sorry.\nPreviously the generated code looked like:\n\n  jit::tracer::recordTrace( \"min\", { self }, ret );\n\nNow it looks like:\n\n  jit::tracer::recordTrace( \"min\", { self }, { std::get<0>(ret), std::get<1>(ret) } );", "body": "Oops sorry.\r\n\r\n```\r\nPreviously the generated code looked like:\r\n\r\n  jit::tracer::recordTrace( \"min\", { self }, ret );\r\n\r\nNow it looks like:\r\n\r\n  jit::tracer::recordTrace( \"min\", { self }, { std::get<0>(ret), std::get<1>(ret) } );\r\n                          \r\n```"}