{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/157958207", "pull_request_review_id": 84686849, "id": 157958207, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Nzk1ODIwNw==", "diff_hunk": "@@ -218,21 +220,26 @@ def assertTensorsEqual(a, b):\n             else:\n                 assertTensorsEqual(x, y)\n         elif isinstance(x, string_classes) and isinstance(y, string_classes):\n-            super(TestCase, self).assertEqual(x, y)\n+            super(TestCase, self).assertEqual(x, y, message)\n         elif type(x) == set and type(y) == set:\n-            super(TestCase, self).assertEqual(x, y)\n+            super(TestCase, self).assertEqual(x, y, message)\n         elif is_iterable(x) and is_iterable(y):\n-            super(TestCase, self).assertEqual(len(x), len(y))\n+            super(TestCase, self).assertEqual(len(x), len(y), message)\n             for x_, y_ in zip(x, y):\n                 self.assertEqual(x_, y_, prec, message)\n-        else:\n-            try:\n-                self.assertLessEqual(abs(x - y), prec, message)\n+        elif isinstance(x, Number) and isinstance(y, Number):\n+            if abs(x) == float('inf') and abs(y) == float('inf'):", "path": "test/common.py", "position": null, "original_position": 45, "commit_id": "1518dfccebc6c409717fedd8ed55816bc381ed9a", "original_commit_id": "d819c79f8d3bab73807a3969a0fac096a2f4717a", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "I\u2019m wondering if we really want to allow comparing infs. They can represent arbitrary overflows and if you write your test incorrectly such that it always overflows then it will pass and you won\u2019t even notice that it doesn\u2019t check anything.", "created_at": "2017-12-20T08:08:49Z", "updated_at": "2018-11-23T15:37:33Z", "html_url": "https://github.com/pytorch/pytorch/pull/4270#discussion_r157958207", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4270", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/157958207"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4270#discussion_r157958207"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4270"}}, "body_html": "<p>I\u2019m wondering if we really want to allow comparing infs. They can represent arbitrary overflows and if you write your test incorrectly such that it always overflows then it will pass and you won\u2019t even notice that it doesn\u2019t check anything.</p>", "body_text": "I\u2019m wondering if we really want to allow comparing infs. They can represent arbitrary overflows and if you write your test incorrectly such that it always overflows then it will pass and you won\u2019t even notice that it doesn\u2019t check anything."}