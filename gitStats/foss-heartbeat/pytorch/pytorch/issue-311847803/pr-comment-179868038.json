{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/179868038", "pull_request_review_id": 110199224, "id": 179868038, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTg2ODAzOA==", "diff_hunk": "@@ -1219,13 +1219,15 @@ void addGlobalMethods(py::module& m) {\n \n         // Parse protobuffers to NetDefs\n         std::vector<std::unique_ptr<caffe2::NetDef>> nets;", "path": "caffe2/python/pybind_state.cc", "position": 3, "original_position": 3, "commit_id": "d6eb5729b9fda03962796a12d14e09d7bc74c013", "original_commit_id": "d6eb5729b9fda03962796a12d14e09d7bc74c013", "user": {"login": "Swetko", "id": 11769173, "node_id": "MDQ6VXNlcjExNzY5MTcz", "avatar_url": "https://avatars3.githubusercontent.com/u/11769173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Swetko", "html_url": "https://github.com/Swetko", "followers_url": "https://api.github.com/users/Swetko/followers", "following_url": "https://api.github.com/users/Swetko/following{/other_user}", "gists_url": "https://api.github.com/users/Swetko/gists{/gist_id}", "starred_url": "https://api.github.com/users/Swetko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Swetko/subscriptions", "organizations_url": "https://api.github.com/users/Swetko/orgs", "repos_url": "https://api.github.com/users/Swetko/repos", "events_url": "https://api.github.com/users/Swetko/events{/privacy}", "received_events_url": "https://api.github.com/users/Swetko/received_events", "type": "User", "site_admin": false}, "body": "I didn't like the idea of passing pointers in the first place, but I wanted to make minimal changes to the existing code. I'd just change the interface to InferTensorShapes to take reference to a vector of NetDefs. This way no pointers at all. Does that sound better? Right now these functions are only used in this context so it'll be small change. To be honest I don't care too much about this change but when I was exploring the functionalities of Caffe2 I wanted to call InferTensorShapes and found out it's impossible to call the function , unless you explicitly create a NetDef object  (by copying/cloning, etc.) just for the purpose of calling a function that inspects the data. I found that to be bad style so I tried the make the minimal changes.\r\n\r\nBy the way, what's the problem with the unique_ptr's that is currently implemented in my PR?  The reason for the segfault is because I had the std::move(ptr) before ptr.get()  which was invalidating the pointer. The tests pass now without the segfault.\r\n\r\nLet me know which solution you'd prefer and I'll do that. ", "created_at": "2018-04-06T20:29:19Z", "updated_at": "2018-11-23T15:41:56Z", "html_url": "https://github.com/pytorch/pytorch/pull/6335#discussion_r179868038", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6335", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/179868038"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6335#discussion_r179868038"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6335"}}, "body_html": "<p>I didn't like the idea of passing pointers in the first place, but I wanted to make minimal changes to the existing code. I'd just change the interface to InferTensorShapes to take reference to a vector of NetDefs. This way no pointers at all. Does that sound better? Right now these functions are only used in this context so it'll be small change. To be honest I don't care too much about this change but when I was exploring the functionalities of Caffe2 I wanted to call InferTensorShapes and found out it's impossible to call the function , unless you explicitly create a NetDef object  (by copying/cloning, etc.) just for the purpose of calling a function that inspects the data. I found that to be bad style so I tried the make the minimal changes.</p>\n<p>By the way, what's the problem with the unique_ptr's that is currently implemented in my PR?  The reason for the segfault is because I had the std::move(ptr) before ptr.get()  which was invalidating the pointer. The tests pass now without the segfault.</p>\n<p>Let me know which solution you'd prefer and I'll do that.</p>", "body_text": "I didn't like the idea of passing pointers in the first place, but I wanted to make minimal changes to the existing code. I'd just change the interface to InferTensorShapes to take reference to a vector of NetDefs. This way no pointers at all. Does that sound better? Right now these functions are only used in this context so it'll be small change. To be honest I don't care too much about this change but when I was exploring the functionalities of Caffe2 I wanted to call InferTensorShapes and found out it's impossible to call the function , unless you explicitly create a NetDef object  (by copying/cloning, etc.) just for the purpose of calling a function that inspects the data. I found that to be bad style so I tried the make the minimal changes.\nBy the way, what's the problem with the unique_ptr's that is currently implemented in my PR?  The reason for the segfault is because I had the std::move(ptr) before ptr.get()  which was invalidating the pointer. The tests pass now without the segfault.\nLet me know which solution you'd prefer and I'll do that.", "in_reply_to_id": 179662182}