{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/179849433", "pull_request_review_id": 110175945, "id": 179849433, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTg0OTQzMw==", "diff_hunk": "@@ -1219,13 +1219,15 @@ void addGlobalMethods(py::module& m) {\n \n         // Parse protobuffers to NetDefs\n         std::vector<std::unique_ptr<caffe2::NetDef>> nets;", "path": "caffe2/python/pybind_state.cc", "position": 3, "original_position": 3, "commit_id": "d6eb5729b9fda03962796a12d14e09d7bc74c013", "original_commit_id": "d6eb5729b9fda03962796a12d14e09d7bc74c013", "user": {"login": "Swetko", "id": 11769173, "node_id": "MDQ6VXNlcjExNzY5MTcz", "avatar_url": "https://avatars3.githubusercontent.com/u/11769173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Swetko", "html_url": "https://github.com/Swetko", "followers_url": "https://api.github.com/users/Swetko/followers", "following_url": "https://api.github.com/users/Swetko/following{/other_user}", "gists_url": "https://api.github.com/users/Swetko/gists{/gist_id}", "starred_url": "https://api.github.com/users/Swetko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Swetko/subscriptions", "organizations_url": "https://api.github.com/users/Swetko/orgs", "repos_url": "https://api.github.com/users/Swetko/repos", "events_url": "https://api.github.com/users/Swetko/events{/privacy}", "received_events_url": "https://api.github.com/users/Swetko/received_events", "type": "User", "site_admin": false}, "body": "I tried implementing it like that, but it seems it makes the code longer and less clear necessitating two for loops because you can't take pointers from a vector unless you know its size is not going to change (hence invalidate the pointers).\r\nHere's how it can look. I think it looks worse and is more prone to errors.\r\n\r\n        std::vector<caffe2::NetDef> nets;\r\n        std::vector<caffe2::NetDef*> nets_ptr;\r\n        for (auto proto : net_protos) {\r\n          NetDef def;\r\n          CAFFE_ENFORCE(def.ParseFromString(proto));\r\n          nets.push_back(def);\r\n        }\r\n        for (auto& net: nets) nets_ptr.push_back(&net);\r\n", "created_at": "2018-04-06T19:05:17Z", "updated_at": "2018-11-23T15:41:56Z", "html_url": "https://github.com/pytorch/pytorch/pull/6335#discussion_r179849433", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6335", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/179849433"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6335#discussion_r179849433"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6335"}}, "body_html": "<p>I tried implementing it like that, but it seems it makes the code longer and less clear necessitating two for loops because you can't take pointers from a vector unless you know its size is not going to change (hence invalidate the pointers).<br>\nHere's how it can look. I think it looks worse and is more prone to errors.</p>\n<pre><code>    std::vector&lt;caffe2::NetDef&gt; nets;\n    std::vector&lt;caffe2::NetDef*&gt; nets_ptr;\n    for (auto proto : net_protos) {\n      NetDef def;\n      CAFFE_ENFORCE(def.ParseFromString(proto));\n      nets.push_back(def);\n    }\n    for (auto&amp; net: nets) nets_ptr.push_back(&amp;net);\n</code></pre>", "body_text": "I tried implementing it like that, but it seems it makes the code longer and less clear necessitating two for loops because you can't take pointers from a vector unless you know its size is not going to change (hence invalidate the pointers).\nHere's how it can look. I think it looks worse and is more prone to errors.\n    std::vector<caffe2::NetDef> nets;\n    std::vector<caffe2::NetDef*> nets_ptr;\n    for (auto proto : net_protos) {\n      NetDef def;\n      CAFFE_ENFORCE(def.ParseFromString(proto));\n      nets.push_back(def);\n    }\n    for (auto& net: nets) nets_ptr.push_back(&net);", "in_reply_to_id": 179662182}