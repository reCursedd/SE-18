{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/424344272", "html_url": "https://github.com/pytorch/pytorch/issues/7042#issuecomment-424344272", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7042", "id": 424344272, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDM0NDI3Mg==", "user": {"login": "YontiLevin", "id": 18164633, "node_id": "MDQ6VXNlcjE4MTY0NjMz", "avatar_url": "https://avatars0.githubusercontent.com/u/18164633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YontiLevin", "html_url": "https://github.com/YontiLevin", "followers_url": "https://api.github.com/users/YontiLevin/followers", "following_url": "https://api.github.com/users/YontiLevin/following{/other_user}", "gists_url": "https://api.github.com/users/YontiLevin/gists{/gist_id}", "starred_url": "https://api.github.com/users/YontiLevin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YontiLevin/subscriptions", "organizations_url": "https://api.github.com/users/YontiLevin/orgs", "repos_url": "https://api.github.com/users/YontiLevin/repos", "events_url": "https://api.github.com/users/YontiLevin/events{/privacy}", "received_events_url": "https://api.github.com/users/YontiLevin/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-25T13:31:15Z", "updated_at": "2018-09-26T07:31:00Z", "author_association": "NONE", "body_html": "<p>had the same error.<br>\ntried to drop letters in a char-rnn before the embeddings.<br>\nthe problem was with the bernoulli.div part<br>\nseems that when the input are ints/longs -&gt; ctx.noise.bernoulli is of type int/long<br>\nand calling the div_ function with a float results in a crash.<br>\nexample:</p>\n<pre><code>dropout_p = 0.5\ndropout = torch.nn.Droupout(p=droupout_p)\ninputs = torch.LongTensor([[10,15,30,0,3,5,8], [10,30,0,0,0,0,0]])\nx = dropout(inputs)\n\n&gt;&gt;&gt; ERROR...\n</code></pre>\n<p>ugly solution:</p>\n<pre><code>dropout_p = 0.5\ndropout = torch.nn.Droupout(p=droupout_p)\ninputs = torch.LongTensor([[10,15,30,0,3,5,8], [10,30,0,0,0,0,0]])\nif self.training:\n    x_ = dropout(inputs.float())\n    print(x_)\n&gt;&gt;&gt; [[0.0, 22.5,60.0, 0.0, 4.5, 0.0, 12.0], [15.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]\n    inputs = x_.mul(1-dropout_p).long()  \n    print(inputs)\n&gt;&gt;&gt; [[0, 15,30, 0, 3, 0, 8], [10, 0, 0, 0, 0, 0, 0]]\n</code></pre>\n<p><strong>IMPORTANT</strong><br>\ndon't forget the self.training!<br>\nif not - the reconstruction part will corrupt your inputs when eval</p>", "body_text": "had the same error.\ntried to drop letters in a char-rnn before the embeddings.\nthe problem was with the bernoulli.div part\nseems that when the input are ints/longs -> ctx.noise.bernoulli is of type int/long\nand calling the div_ function with a float results in a crash.\nexample:\ndropout_p = 0.5\ndropout = torch.nn.Droupout(p=droupout_p)\ninputs = torch.LongTensor([[10,15,30,0,3,5,8], [10,30,0,0,0,0,0]])\nx = dropout(inputs)\n\n>>> ERROR...\n\nugly solution:\ndropout_p = 0.5\ndropout = torch.nn.Droupout(p=droupout_p)\ninputs = torch.LongTensor([[10,15,30,0,3,5,8], [10,30,0,0,0,0,0]])\nif self.training:\n    x_ = dropout(inputs.float())\n    print(x_)\n>>> [[0.0, 22.5,60.0, 0.0, 4.5, 0.0, 12.0], [15.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]\n    inputs = x_.mul(1-dropout_p).long()  \n    print(inputs)\n>>> [[0, 15,30, 0, 3, 0, 8], [10, 0, 0, 0, 0, 0, 0]]\n\nIMPORTANT\ndon't forget the self.training!\nif not - the reconstruction part will corrupt your inputs when eval", "body": "had the same error.\r\ntried to drop letters in a char-rnn before the embeddings.\r\nthe problem was with the bernoulli.div part\r\nseems that when the input are ints/longs -> ctx.noise.bernoulli is of type int/long\r\nand calling the div_ function with a float results in a crash.\r\nexample:\r\n```\r\ndropout_p = 0.5\r\ndropout = torch.nn.Droupout(p=droupout_p)\r\ninputs = torch.LongTensor([[10,15,30,0,3,5,8], [10,30,0,0,0,0,0]])\r\nx = dropout(inputs)\r\n\r\n>>> ERROR...\r\n```\r\nugly solution:\r\n\r\n```\r\ndropout_p = 0.5\r\ndropout = torch.nn.Droupout(p=droupout_p)\r\ninputs = torch.LongTensor([[10,15,30,0,3,5,8], [10,30,0,0,0,0,0]])\r\nif self.training:\r\n    x_ = dropout(inputs.float())\r\n    print(x_)\r\n>>> [[0.0, 22.5,60.0, 0.0, 4.5, 0.0, 12.0], [15.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]\r\n    inputs = x_.mul(1-dropout_p).long()  \r\n    print(inputs)\r\n>>> [[0, 15,30, 0, 3, 0, 8], [10, 0, 0, 0, 0, 0, 0]]\r\n``` \r\n\r\n**IMPORTANT**\r\ndon't forget the self.training!\r\nif not - the reconstruction part will corrupt your inputs when eval\r\n\r\n"}