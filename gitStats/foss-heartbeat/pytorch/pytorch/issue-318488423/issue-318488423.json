{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7042", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7042/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7042/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7042/events", "html_url": "https://github.com/pytorch/pytorch/issues/7042", "id": 318488423, "node_id": "MDU6SXNzdWUzMTg0ODg0MjM=", "number": 7042, "title": "[bug report] (Pytorch 0.4.0) Dropout layer error when input is longtensor with 0", "user": {"login": "yu45020", "id": 28139045, "node_id": "MDQ6VXNlcjI4MTM5MDQ1", "avatar_url": "https://avatars0.githubusercontent.com/u/28139045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yu45020", "html_url": "https://github.com/yu45020", "followers_url": "https://api.github.com/users/yu45020/followers", "following_url": "https://api.github.com/users/yu45020/following{/other_user}", "gists_url": "https://api.github.com/users/yu45020/gists{/gist_id}", "starred_url": "https://api.github.com/users/yu45020/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yu45020/subscriptions", "organizations_url": "https://api.github.com/users/yu45020/orgs", "repos_url": "https://api.github.com/users/yu45020/repos", "events_url": "https://api.github.com/users/yu45020/events{/privacy}", "received_events_url": "https://api.github.com/users/yu45020/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131847, "node_id": "MDU6TGFiZWw0MjQxMzE4NDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/bug", "name": "bug", "color": "b60205", "default": true}, {"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-04-27T17:26:23Z", "updated_at": "2018-10-15T07:25:39Z", "closed_at": "2018-08-14T19:14:23Z", "author_association": "NONE", "body_html": "<h2>Code example</h2>\n<pre><code>a = torch.LongTensor([[1,2,3,4,5,0],[1,2,3,0,0,0]])\ndr = torch.nn.Dropout(p=0.5)\ndr(a)\n</code></pre>\n<p>=============     Output          ==================<br>\nProcess finished with exit code -1073741676 (0xC0000094)</p>\n<p>When I run my script in Jupyter Notebook, the input is</p>\n<pre><code>batch_x\n</code></pre>\n<pre><code>tensor([[  9275,   7123,   5062,  ...,   4286,   2369,   5854],\n        [  1484,   2162,   1908,  ...,   3859,   7213,  10871],\n        [ 11265,   2103,   4877,  ...,   5040,  10871,   3859],\n        ...,\n        [ 11558,    488,   8513,  ...,      0,      0,      0],\n        [ 11558,    851,   5770,  ...,      0,      0,      0],\n        [ 11558,    488,   4985,  ...,      0,      0,      0]], device='cuda:0')\n</code></pre>\n<pre><code>RuntimeError                              Traceback (most recent call last)\n&lt;ipython-input-23-f05c20dbc710&gt; in &lt;module&gt;()\n      1 dr = torch.nn.Dropout(0.2)\n----&gt; 2 dr(batch_x)\n\n/usr/local/lib/python3.6/dist-packages/torch/nn/modules/module.py in __call__(self, *input, **kwargs)\n    489             result = self._slow_forward(*input, **kwargs)\n    490         else:\n--&gt; 491             result = self.forward(*input, **kwargs)\n    492         for hook in self._forward_hooks.values():\n    493             hook_result = hook(self, input, result)\n\n/usr/local/lib/python3.6/dist-packages/torch/nn/modules/dropout.py in forward(self, input)\n     51 \n     52     def forward(self, input):\n---&gt; 53         return F.dropout(input, self.p, self.training, self.inplace)\n     54 \n     55 \n\n/usr/local/lib/python3.6/dist-packages/torch/nn/functional.py in dropout(input, p, training, inplace)\n    550 \n    551 def dropout(input, p=0.5, training=False, inplace=False):\n--&gt; 552     return _functions.dropout.Dropout.apply(input, p, training, inplace)\n    553 \n    554 \n\n/usr/local/lib/python3.6/dist-packages/torch/nn/_functions/dropout.py in forward(cls, ctx, input, p, train, inplace)\n     38             ctx.noise.fill_(0)\n     39         else:\n---&gt; 40             ctx.noise.bernoulli_(1 - ctx.p).div_(1 - ctx.p)\n     41         ctx.noise = ctx.noise.expand_as(input)\n     42         output.mul_(ctx.noise)\n\nRuntimeError: invalid argument 3: divide by zero at /pytorch/aten/src/THC/generic/THCTensorMathPairwise.cu:88\n\n</code></pre>\n<p>I am fitting an LSTM model. The input have various lengths, so I pad the shorter examples with 0s. Then I add a dropout layer so that the longer examples have higher probability to be masked out.</p>", "body_text": "Code example\na = torch.LongTensor([[1,2,3,4,5,0],[1,2,3,0,0,0]])\ndr = torch.nn.Dropout(p=0.5)\ndr(a)\n\n=============     Output          ==================\nProcess finished with exit code -1073741676 (0xC0000094)\nWhen I run my script in Jupyter Notebook, the input is\nbatch_x\n\ntensor([[  9275,   7123,   5062,  ...,   4286,   2369,   5854],\n        [  1484,   2162,   1908,  ...,   3859,   7213,  10871],\n        [ 11265,   2103,   4877,  ...,   5040,  10871,   3859],\n        ...,\n        [ 11558,    488,   8513,  ...,      0,      0,      0],\n        [ 11558,    851,   5770,  ...,      0,      0,      0],\n        [ 11558,    488,   4985,  ...,      0,      0,      0]], device='cuda:0')\n\nRuntimeError                              Traceback (most recent call last)\n<ipython-input-23-f05c20dbc710> in <module>()\n      1 dr = torch.nn.Dropout(0.2)\n----> 2 dr(batch_x)\n\n/usr/local/lib/python3.6/dist-packages/torch/nn/modules/module.py in __call__(self, *input, **kwargs)\n    489             result = self._slow_forward(*input, **kwargs)\n    490         else:\n--> 491             result = self.forward(*input, **kwargs)\n    492         for hook in self._forward_hooks.values():\n    493             hook_result = hook(self, input, result)\n\n/usr/local/lib/python3.6/dist-packages/torch/nn/modules/dropout.py in forward(self, input)\n     51 \n     52     def forward(self, input):\n---> 53         return F.dropout(input, self.p, self.training, self.inplace)\n     54 \n     55 \n\n/usr/local/lib/python3.6/dist-packages/torch/nn/functional.py in dropout(input, p, training, inplace)\n    550 \n    551 def dropout(input, p=0.5, training=False, inplace=False):\n--> 552     return _functions.dropout.Dropout.apply(input, p, training, inplace)\n    553 \n    554 \n\n/usr/local/lib/python3.6/dist-packages/torch/nn/_functions/dropout.py in forward(cls, ctx, input, p, train, inplace)\n     38             ctx.noise.fill_(0)\n     39         else:\n---> 40             ctx.noise.bernoulli_(1 - ctx.p).div_(1 - ctx.p)\n     41         ctx.noise = ctx.noise.expand_as(input)\n     42         output.mul_(ctx.noise)\n\nRuntimeError: invalid argument 3: divide by zero at /pytorch/aten/src/THC/generic/THCTensorMathPairwise.cu:88\n\n\nI am fitting an LSTM model. The input have various lengths, so I pad the shorter examples with 0s. Then I add a dropout layer so that the longer examples have higher probability to be masked out.", "body": "## Code example\r\n```\r\na = torch.LongTensor([[1,2,3,4,5,0],[1,2,3,0,0,0]])\r\ndr = torch.nn.Dropout(p=0.5)\r\ndr(a)\r\n```\r\n=============     Output          ==================\r\nProcess finished with exit code -1073741676 (0xC0000094)\r\n\r\nWhen I run my script in Jupyter Notebook, the input is \r\n```\r\nbatch_x\r\n```\r\n```\r\ntensor([[  9275,   7123,   5062,  ...,   4286,   2369,   5854],\r\n        [  1484,   2162,   1908,  ...,   3859,   7213,  10871],\r\n        [ 11265,   2103,   4877,  ...,   5040,  10871,   3859],\r\n        ...,\r\n        [ 11558,    488,   8513,  ...,      0,      0,      0],\r\n        [ 11558,    851,   5770,  ...,      0,      0,      0],\r\n        [ 11558,    488,   4985,  ...,      0,      0,      0]], device='cuda:0')\r\n```\r\n```\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-23-f05c20dbc710> in <module>()\r\n      1 dr = torch.nn.Dropout(0.2)\r\n----> 2 dr(batch_x)\r\n\r\n/usr/local/lib/python3.6/dist-packages/torch/nn/modules/module.py in __call__(self, *input, **kwargs)\r\n    489             result = self._slow_forward(*input, **kwargs)\r\n    490         else:\r\n--> 491             result = self.forward(*input, **kwargs)\r\n    492         for hook in self._forward_hooks.values():\r\n    493             hook_result = hook(self, input, result)\r\n\r\n/usr/local/lib/python3.6/dist-packages/torch/nn/modules/dropout.py in forward(self, input)\r\n     51 \r\n     52     def forward(self, input):\r\n---> 53         return F.dropout(input, self.p, self.training, self.inplace)\r\n     54 \r\n     55 \r\n\r\n/usr/local/lib/python3.6/dist-packages/torch/nn/functional.py in dropout(input, p, training, inplace)\r\n    550 \r\n    551 def dropout(input, p=0.5, training=False, inplace=False):\r\n--> 552     return _functions.dropout.Dropout.apply(input, p, training, inplace)\r\n    553 \r\n    554 \r\n\r\n/usr/local/lib/python3.6/dist-packages/torch/nn/_functions/dropout.py in forward(cls, ctx, input, p, train, inplace)\r\n     38             ctx.noise.fill_(0)\r\n     39         else:\r\n---> 40             ctx.noise.bernoulli_(1 - ctx.p).div_(1 - ctx.p)\r\n     41         ctx.noise = ctx.noise.expand_as(input)\r\n     42         output.mul_(ctx.noise)\r\n\r\nRuntimeError: invalid argument 3: divide by zero at /pytorch/aten/src/THC/generic/THCTensorMathPairwise.cu:88\r\n\r\n```\r\n\r\nI am fitting an LSTM model. The input have various lengths, so I pad the shorter examples with 0s. Then I add a dropout layer so that the longer examples have higher probability to be masked out. \r\n"}