{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/80714314", "pull_request_review_id": 1751398, "id": 80714314, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgwNzE0MzE0", "diff_hunk": "@@ -131,11 +137,14 @@ def reset_parameters(self):\n \n     def forward(self, input):\n         if self.is_dilated:\n-            func = self._backend.DilatedConv2d(self.kw, self.kh, self.dw,\n-                    self.dh, self.padw, self.padh, self.dilh, self.dilw)\n+            func = self._backend.DilatedConv2d(", "path": "torch/nn/modules/conv.py", "position": null, "original_position": 41, "commit_id": "e2c52918dd85a87f5ac4033b2f1e6a57e01c40a5", "original_commit_id": "53f3f3b9f1a4bdc378d7e32997271a7d1c5dcfb2", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "body": "I agree. I think the `SpatialConvolutionMM` function should internally call `SpatialDilatedConvolution`, as is done with `SpatialMaxPooling`/`SpatialDilatedMaxPooling`.\nOne thing to have in mind is that the THNN version of `SpatialConvolutionMM` is faster (and uses more memory) than `SpatialDilatedConvolution` (it parallelizes over the batch dimension as well).\n", "created_at": "2016-09-27T15:03:38Z", "updated_at": "2018-11-23T15:31:32Z", "html_url": "https://github.com/pytorch/pytorch/pull/36#discussion_r80714314", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/36", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/80714314"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/36#discussion_r80714314"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/36"}}, "body_html": "<p>I agree. I think the <code>SpatialConvolutionMM</code> function should internally call <code>SpatialDilatedConvolution</code>, as is done with <code>SpatialMaxPooling</code>/<code>SpatialDilatedMaxPooling</code>.<br>\nOne thing to have in mind is that the THNN version of <code>SpatialConvolutionMM</code> is faster (and uses more memory) than <code>SpatialDilatedConvolution</code> (it parallelizes over the batch dimension as well).</p>", "body_text": "I agree. I think the SpatialConvolutionMM function should internally call SpatialDilatedConvolution, as is done with SpatialMaxPooling/SpatialDilatedMaxPooling.\nOne thing to have in mind is that the THNN version of SpatialConvolutionMM is faster (and uses more memory) than SpatialDilatedConvolution (it parallelizes over the batch dimension as well).", "in_reply_to_id": 80711227}