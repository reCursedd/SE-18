{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/303142385", "html_url": "https://github.com/pytorch/pytorch/issues/1612#issuecomment-303142385", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1612", "id": 303142385, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzE0MjM4NQ==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-22T15:56:26Z", "updated_at": "2017-05-22T15:56:26Z", "author_association": "MEMBER", "body_html": "<div class=\"highlight highlight-source-python\"><pre>In [<span class=\"pl-c1\">7</span>]: y <span class=\"pl-k\">=</span> np.random.random([<span class=\"pl-c1\">1000</span>, <span class=\"pl-c1\">1000</span>])\n\nIn [<span class=\"pl-c1\">8</span>]: <span class=\"pl-k\">%</span>timeit y <span class=\"pl-k\">*</span> y <span class=\"pl-k\">*</span> y\n<span class=\"pl-c1\">100</span> loops, best of <span class=\"pl-c1\">3</span>: <span class=\"pl-c1\">11.5</span> ms per loop\n\nIn [<span class=\"pl-c1\">9</span>]: <span class=\"pl-k\">%</span>timeit y <span class=\"pl-k\">**</span> <span class=\"pl-c1\">3</span>\n<span class=\"pl-c1\">10</span> loops, best of <span class=\"pl-c1\">3</span>: <span class=\"pl-c1\">73.2</span> ms per loop\n\nIn [<span class=\"pl-c1\">10</span>]: yt <span class=\"pl-k\">=</span> torch.from_numpy(y)\n\nIn [<span class=\"pl-c1\">11</span>]: <span class=\"pl-k\">%</span>timeit yt <span class=\"pl-k\">**</span> <span class=\"pl-c1\">3</span>\n<span class=\"pl-c1\">10</span> loops, best of <span class=\"pl-c1\">3</span>: <span class=\"pl-c1\">81.5</span> ms per loop\n\nIn [<span class=\"pl-c1\">12</span>]: <span class=\"pl-k\">%</span>timeit yt <span class=\"pl-k\">*</span> yt <span class=\"pl-k\">*</span> yt\n<span class=\"pl-c1\">100</span> loops, best of <span class=\"pl-c1\">3</span>: <span class=\"pl-c1\">4.18</span> ms per loop</pre></div>", "body_text": "In [7]: y = np.random.random([1000, 1000])\n\nIn [8]: %timeit y * y * y\n100 loops, best of 3: 11.5 ms per loop\n\nIn [9]: %timeit y ** 3\n10 loops, best of 3: 73.2 ms per loop\n\nIn [10]: yt = torch.from_numpy(y)\n\nIn [11]: %timeit yt ** 3\n10 loops, best of 3: 81.5 ms per loop\n\nIn [12]: %timeit yt * yt * yt\n100 loops, best of 3: 4.18 ms per loop", "body": "```python\r\nIn [7]: y = np.random.random([1000, 1000])\r\n\r\nIn [8]: %timeit y * y * y\r\n100 loops, best of 3: 11.5 ms per loop\r\n\r\nIn [9]: %timeit y ** 3\r\n10 loops, best of 3: 73.2 ms per loop\r\n\r\nIn [10]: yt = torch.from_numpy(y)\r\n\r\nIn [11]: %timeit yt ** 3\r\n10 loops, best of 3: 81.5 ms per loop\r\n\r\nIn [12]: %timeit yt * yt * yt\r\n100 loops, best of 3: 4.18 ms per loop\r\n```"}