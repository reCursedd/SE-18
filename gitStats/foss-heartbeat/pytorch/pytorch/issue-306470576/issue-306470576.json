{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5875", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5875/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5875/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5875/events", "html_url": "https://github.com/pytorch/pytorch/issues/5875", "id": 306470576, "node_id": "MDU6SXNzdWUzMDY0NzA1NzY=", "number": 5875, "title": "Remainder operator breaks with divisor above 2**48 ", "user": {"login": "robert-wagner", "id": 15006100, "node_id": "MDQ6VXNlcjE1MDA2MTAw", "avatar_url": "https://avatars2.githubusercontent.com/u/15006100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robert-wagner", "html_url": "https://github.com/robert-wagner", "followers_url": "https://api.github.com/users/robert-wagner/followers", "following_url": "https://api.github.com/users/robert-wagner/following{/other_user}", "gists_url": "https://api.github.com/users/robert-wagner/gists{/gist_id}", "starred_url": "https://api.github.com/users/robert-wagner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robert-wagner/subscriptions", "organizations_url": "https://api.github.com/users/robert-wagner/orgs", "repos_url": "https://api.github.com/users/robert-wagner/repos", "events_url": "https://api.github.com/users/robert-wagner/events{/privacy}", "received_events_url": "https://api.github.com/users/robert-wagner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131847, "node_id": "MDU6TGFiZWw0MjQxMzE4NDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/bug", "name": "bug", "color": "b60205", "default": true}, {"id": 443484135, "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority", "name": "high priority", "color": "F22613", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-03-19T13:50:20Z", "updated_at": "2018-03-21T02:05:50Z", "closed_at": "2018-03-21T02:05:50Z", "author_association": "CONTRIBUTOR", "body_html": "<ul>\n<li>OS: Ubuntu</li>\n<li>PyTorch version: 3.0cpu</li>\n<li>How you installed PyTorch (conda, pip, source): conda</li>\n<li>Python version: 3.6</li>\n<li>CUDA/cuDNN version: N/A</li>\n<li>GPU models and configuration: N/A</li>\n<li>GCC version (if compiling from source): N/A</li>\n</ul>\n<p>The remainder operator called on LongTensors  return an incorrect value when the divisor is above 2**48. Rather than returning a positive number in the range [0,divisor], the remainder operation either returns the original number or the divisor plus the original number. This can be replicated with the following script</p>\n<pre><code>import torch\nds = torch.LongTensor([23500,4040,-10321])\nq=2**48`\nnew_ds = torch.LongTensor([23500,4040,q-10321])\nwhile (ds % q).equal(new_ds):\n    q+=2**32\n    new_ds = torch.LongTensor([23500,4040,q-10321])\n</code></pre>\n<p>When the script exits the loop new_ds will be a LongTensor with the incorrect value and q will be the divisor.</p>", "body_text": "OS: Ubuntu\nPyTorch version: 3.0cpu\nHow you installed PyTorch (conda, pip, source): conda\nPython version: 3.6\nCUDA/cuDNN version: N/A\nGPU models and configuration: N/A\nGCC version (if compiling from source): N/A\n\nThe remainder operator called on LongTensors  return an incorrect value when the divisor is above 2**48. Rather than returning a positive number in the range [0,divisor], the remainder operation either returns the original number or the divisor plus the original number. This can be replicated with the following script\nimport torch\nds = torch.LongTensor([23500,4040,-10321])\nq=2**48`\nnew_ds = torch.LongTensor([23500,4040,q-10321])\nwhile (ds % q).equal(new_ds):\n    q+=2**32\n    new_ds = torch.LongTensor([23500,4040,q-10321])\n\nWhen the script exits the loop new_ds will be a LongTensor with the incorrect value and q will be the divisor.", "body": "- OS: Ubuntu\r\n- PyTorch version: 3.0cpu\r\n- How you installed PyTorch (conda, pip, source): conda\r\n- Python version: 3.6\r\n- CUDA/cuDNN version: N/A\r\n- GPU models and configuration: N/A\r\n- GCC version (if compiling from source): N/A\r\n\r\n\r\nThe remainder operator called on LongTensors  return an incorrect value when the divisor is above 2**48. Rather than returning a positive number in the range [0,divisor], the remainder operation either returns the original number or the divisor plus the original number. This can be replicated with the following script\r\n\r\n```\r\nimport torch\r\nds = torch.LongTensor([23500,4040,-10321])\r\nq=2**48`\r\nnew_ds = torch.LongTensor([23500,4040,q-10321])\r\nwhile (ds % q).equal(new_ds):\r\n    q+=2**32\r\n    new_ds = torch.LongTensor([23500,4040,q-10321])\r\n```\r\nWhen the script exits the loop new_ds will be a LongTensor with the incorrect value and q will be the divisor."}