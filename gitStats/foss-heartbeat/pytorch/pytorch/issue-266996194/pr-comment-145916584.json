{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/145916584", "pull_request_review_id": 70784886, "id": 145916584, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTkxNjU4NA==", "diff_hunk": "@@ -89,4 +89,55 @@ void nontraceableBackwardSubgraph(const variable_list& inputs, const variable_li\n   std::make_shared<autograd::Eval>()->replaceSubgraph(inputs, outputs);\n }\n \n+Node* recordTraceHelper(std::string op, // TODO: make this a Symbol\n+                        at::ArrayRef<Variable> inputs,\n+                        at::ArrayRef<Variable> outputs) {\n+  auto state = getTracingState(inputs);\n+  auto& graph = state->graph;\n+  // TODO: Technically, we could reduce the scope of the lock, but since we\n+  // haven't actually specified what the locking contract is, be conservative.\n+  auto state_lock = state->lock();\n+\n+  Node *n = graph->create(stringToSymbol(op));\n+  for (Variable input : inputs) {\n+    n->addInput(getValueTrace(state, input));\n+  }\n+\n+  // NB: Order matters. This must append after inputs but before outputs.\n+  graph->appendNode(n);\n+\n+  int i = 0;\n+  for (Variable output : outputs) {\n+    Node* sel = graph->appendNode(graph->createSelect(n, i));\n+    // TODO: Track inplace operations (needed for JIT).\n+    if (output.defined()) {\n+      sel->inferTypeFrom(output.data());\n+      setValueTrace(state, output, sel);\n+    }\n+    i++;\n+  }\n+\n+  /*\n+  // Want to do this eventually, but we also need to deal with Handles in this\n+  // world", "path": "torch/csrc/jit/tracer.cpp", "position": 34, "original_position": 34, "commit_id": "06e2ed468ab4dad0749fe1f7b92d83127321895b", "original_commit_id": "d52b8e833ea59217b1a70b8f95010eb7d103aab7", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "We don't. We'll just be careful to have all core functions traceable from now on (it's easier, because it's harder to do unsupported things if you write in `derivatives.yaml` and not in a Turing-complete language). Let's delete it and add the special casing for 1 return later", "created_at": "2017-10-20T09:24:55Z", "updated_at": "2018-11-23T15:35:34Z", "html_url": "https://github.com/pytorch/pytorch/pull/3189#discussion_r145916584", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3189", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/145916584"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3189#discussion_r145916584"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3189"}}, "body_html": "<p>We don't. We'll just be careful to have all core functions traceable from now on (it's easier, because it's harder to do unsupported things if you write in <code>derivatives.yaml</code> and not in a Turing-complete language). Let's delete it and add the special casing for 1 return later</p>", "body_text": "We don't. We'll just be careful to have all core functions traceable from now on (it's easier, because it's harder to do unsupported things if you write in derivatives.yaml and not in a Turing-complete language). Let's delete it and add the special casing for 1 return later"}