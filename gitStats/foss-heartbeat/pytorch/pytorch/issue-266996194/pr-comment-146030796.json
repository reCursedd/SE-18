{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/146030796", "pull_request_review_id": 70922461, "id": 146030796, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NjAzMDc5Ng==", "diff_hunk": "@@ -149,20 +149,73 @@ def _newNode(self, opname, *args, **kwargs):\n     return n\n \n \n-def _op(self, opname, *args, **kwargs):\n+def _op(self, opname, *raw_args, **kwargs):\n+    outputs = kwargs.pop('outputs', 1)\n+    def const_if_tensor(arg):\n+        if isinstance(arg, torch._C.Node):\n+            return arg\n+        else:\n+            return self.op(\"Constant\", value_z=arg)\n+    args = list(const_if_tensor(arg) for arg in raw_args)\n+    n = self.appendNode(_newNode(self, opname, *args, **kwargs))\n+    if outputs == 1:\n+        return n\n+    return tuple(self.appendNode(self.createSelect(n, i)) for i in _range(outputs))\n+\n+\n+# Note [Export inplace]\n+# ~~~~~~~~~~~~~~~~~~~~~\n+# In abstract, it would be better for us to export inplace annotations,\n+# than to not export them, since it is useful information that can\n+# help the target of an ONNX export export more efficiently.  However,\n+# ONNX doesn't currently formalize inplace.  Fortunately, it's sound to drop\n+# inplace annotations, but we are losing information this way.\n+\n+\n+_current_graph = None\n+\n+\n+def run_symbolic_function(g, n, inputs):\n+    import torch.onnx.symbolic\n+    global _current_graph", "path": "torch/onnx/__init__.py", "position": null, "original_position": 51, "commit_id": "06e2ed468ab4dad0749fe1f7b92d83127321895b", "original_commit_id": "d52b8e833ea59217b1a70b8f95010eb7d103aab7", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "OK we're back to g now.", "created_at": "2017-10-20T18:05:17Z", "updated_at": "2018-11-23T15:35:34Z", "html_url": "https://github.com/pytorch/pytorch/pull/3189#discussion_r146030796", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3189", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/146030796"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3189#discussion_r146030796"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3189"}}, "body_html": "<p>OK we're back to g now.</p>", "body_text": "OK we're back to g now.", "in_reply_to_id": 145862640}