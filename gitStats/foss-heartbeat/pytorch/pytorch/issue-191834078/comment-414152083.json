{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/414152083", "html_url": "https://github.com/pytorch/pytorch/issues/260#issuecomment-414152083", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/260", "id": 414152083, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDE1MjA4Mw==", "user": {"login": "mariogeiger", "id": 333780, "node_id": "MDQ6VXNlcjMzMzc4MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/333780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mariogeiger", "html_url": "https://github.com/mariogeiger", "followers_url": "https://api.github.com/users/mariogeiger/followers", "following_url": "https://api.github.com/users/mariogeiger/following{/other_user}", "gists_url": "https://api.github.com/users/mariogeiger/gists{/gist_id}", "starred_url": "https://api.github.com/users/mariogeiger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mariogeiger/subscriptions", "organizations_url": "https://api.github.com/users/mariogeiger/orgs", "repos_url": "https://api.github.com/users/mariogeiger/repos", "events_url": "https://api.github.com/users/mariogeiger/events{/privacy}", "received_events_url": "https://api.github.com/users/mariogeiger/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-19T20:01:42Z", "updated_at": "2018-08-19T20:01:42Z", "author_association": "NONE", "body_html": "<p>What do you think about introducing a function <code>torch.set_default_device</code> working with the new device semantics ?</p>\n<pre><code>torch.set_default_device(torch.device('cpu'))\n\ntorch.set_default_device(torch.device('cuda:0'))\n</code></pre>", "body_text": "What do you think about introducing a function torch.set_default_device working with the new device semantics ?\ntorch.set_default_device(torch.device('cpu'))\n\ntorch.set_default_device(torch.device('cuda:0'))", "body": "What do you think about introducing a function `torch.set_default_device` working with the new device semantics ?\r\n\r\n```\r\ntorch.set_default_device(torch.device('cpu'))\r\n\r\ntorch.set_default_device(torch.device('cuda:0'))\r\n```"}