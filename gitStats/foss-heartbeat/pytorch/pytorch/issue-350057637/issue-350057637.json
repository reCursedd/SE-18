{"url": "https://api.github.com/repos/pytorch/pytorch/issues/10459", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10459/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10459/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10459/events", "html_url": "https://github.com/pytorch/pytorch/issues/10459", "id": 350057637, "node_id": "MDU6SXNzdWUzNTAwNTc2Mzc=", "number": 10459, "title": "[feature request] nn.Transformer", "user": {"login": "aconneau", "id": 10132730, "node_id": "MDQ6VXNlcjEwMTMyNzMw", "avatar_url": "https://avatars1.githubusercontent.com/u/10132730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aconneau", "html_url": "https://github.com/aconneau", "followers_url": "https://api.github.com/users/aconneau/followers", "following_url": "https://api.github.com/users/aconneau/following{/other_user}", "gists_url": "https://api.github.com/users/aconneau/gists{/gist_id}", "starred_url": "https://api.github.com/users/aconneau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aconneau/subscriptions", "organizations_url": "https://api.github.com/users/aconneau/orgs", "repos_url": "https://api.github.com/users/aconneau/repos", "events_url": "https://api.github.com/users/aconneau/events{/privacy}", "received_events_url": "https://api.github.com/users/aconneau/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2018-08-13T14:37:02Z", "updated_at": "2018-08-27T17:38:16Z", "closed_at": null, "author_association": "NONE", "body_html": "<h2>feature request description</h2>\n<p>The NLP community is shifting from LSTMs to <a href=\"https://arxiv.org/abs/1706.03762\" rel=\"nofollow\">Transformers</a> for a number of NLP tasks.<br>\nThis would be great if we could have a packed standard Transformer implementation in the 'nn' package, i.e. a <strong>nn.Transformer</strong>, just like we have a nn.LSTM.</p>\n<h2>Code example</h2>\n<p>fairseq-py has a tested implementation of the Transformer encoder and decoder (for LM and NMT) <a href=\"https://github.com/pytorch/fairseq/blob/master/fairseq/models/transformer.py\">https://github.com/pytorch/fairseq/blob/master/fairseq/models/transformer.py</a>. Wrapping this up in 'nn' should be the most straightforward approach to reimplementing this model.</p>\n<p>Thanks!</p>", "body_text": "feature request description\nThe NLP community is shifting from LSTMs to Transformers for a number of NLP tasks.\nThis would be great if we could have a packed standard Transformer implementation in the 'nn' package, i.e. a nn.Transformer, just like we have a nn.LSTM.\nCode example\nfairseq-py has a tested implementation of the Transformer encoder and decoder (for LM and NMT) https://github.com/pytorch/fairseq/blob/master/fairseq/models/transformer.py. Wrapping this up in 'nn' should be the most straightforward approach to reimplementing this model.\nThanks!", "body": "## feature request description\r\n\r\nThe NLP community is shifting from LSTMs to [Transformers](https://arxiv.org/abs/1706.03762) for a number of NLP tasks.\r\nThis would be great if we could have a packed standard Transformer implementation in the 'nn' package, i.e. a **nn.Transformer**, just like we have a nn.LSTM.\r\n\r\n## Code example\r\n\r\nfairseq-py has a tested implementation of the Transformer encoder and decoder (for LM and NMT) https://github.com/pytorch/fairseq/blob/master/fairseq/models/transformer.py. Wrapping this up in 'nn' should be the most straightforward approach to reimplementing this model.\r\n\r\nThanks!"}