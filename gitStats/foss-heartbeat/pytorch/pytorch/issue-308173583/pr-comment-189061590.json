{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/189061590", "pull_request_review_id": 121168078, "id": 189061590, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4OTA2MTU5MA==", "diff_hunk": "@@ -251,10 +251,6 @@ def pad_sequence(sequences, batch_first=False, padding_value=0):\n     out_variable = Variable(sequences[0].data.new(*out_dims).fill_(padding_value))\n     for i, variable in enumerate(sequences):\n         length = variable.size(0)\n-        # temporary sort check, can be removed when we handle sorting internally\n-        if prev_l < length:\n-            raise ValueError(\"lengths array has to be sorted in decreasing order\")", "path": "torch/nn/utils/rnn.py", "position": 17, "original_position": 17, "commit_id": "6ae6428d347e7cb1f0fbf1b65801b1981beda8af", "original_commit_id": "6ae6428d347e7cb1f0fbf1b65801b1981beda8af", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "body": "@apaszke Sorry, I'm not following the explanation (I think I'm misunderstanding how `pad_sequence` works).\r\n\r\nIf I do something like\r\n```\r\nimport torch\r\nfrom torch.nn.utils.rnn import pad_sequence\r\na = torch.full((1, 2), 0)\r\nb = torch.full((2, 2), 1)\r\nc = torch.full((3, 2), 2)\r\n# Not in order\r\nout = pad_sequence([a, c, b])\r\n```\r\nI expect `out[:,0]` to be a padded version of `a`, `out[:,1]` to be a padded version of `c`, `out[:,2]` to be a padded version of `b`. i.e.,\r\n```\r\nIn [10]: out[:,2]\r\nOut[10]:\r\ntensor([[ 2.,  2.],\r\n        [ 2.,  2.],\r\n        [ 0.,  0.]])\r\n```\r\n\r\nThat is what `out_variable[:length, i, ...] = variable` should give. What am I missing here?", "created_at": "2018-05-17T18:41:14Z", "updated_at": "2018-11-23T15:44:14Z", "html_url": "https://github.com/pytorch/pytorch/pull/5974#discussion_r189061590", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5974", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/189061590"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5974#discussion_r189061590"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5974"}}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> Sorry, I'm not following the explanation (I think I'm misunderstanding how <code>pad_sequence</code> works).</p>\n<p>If I do something like</p>\n<pre><code>import torch\nfrom torch.nn.utils.rnn import pad_sequence\na = torch.full((1, 2), 0)\nb = torch.full((2, 2), 1)\nc = torch.full((3, 2), 2)\n# Not in order\nout = pad_sequence([a, c, b])\n</code></pre>\n<p>I expect <code>out[:,0]</code> to be a padded version of <code>a</code>, <code>out[:,1]</code> to be a padded version of <code>c</code>, <code>out[:,2]</code> to be a padded version of <code>b</code>. i.e.,</p>\n<pre><code>In [10]: out[:,2]\nOut[10]:\ntensor([[ 2.,  2.],\n        [ 2.,  2.],\n        [ 0.,  0.]])\n</code></pre>\n<p>That is what <code>out_variable[:length, i, ...] = variable</code> should give. What am I missing here?</p>", "body_text": "@apaszke Sorry, I'm not following the explanation (I think I'm misunderstanding how pad_sequence works).\nIf I do something like\nimport torch\nfrom torch.nn.utils.rnn import pad_sequence\na = torch.full((1, 2), 0)\nb = torch.full((2, 2), 1)\nc = torch.full((3, 2), 2)\n# Not in order\nout = pad_sequence([a, c, b])\n\nI expect out[:,0] to be a padded version of a, out[:,1] to be a padded version of c, out[:,2] to be a padded version of b. i.e.,\nIn [10]: out[:,2]\nOut[10]:\ntensor([[ 2.,  2.],\n        [ 2.,  2.],\n        [ 0.,  0.]])\n\nThat is what out_variable[:length, i, ...] = variable should give. What am I missing here?", "in_reply_to_id": 176883668}