{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/212845456", "pull_request_review_id": 149557384, "id": 212845456, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjg0NTQ1Ng==", "diff_hunk": "@@ -161,7 +161,7 @@ struct IValue {\n   : tag(Tag::Tensor), retainable(t.defined())  {\n     // note: the undefined tensor is not refcounted, so while it\n     // is tagged as a tensor, retainable is set to false.\n-    as_tensor_impl = t.at::detail::TensorBase::detach();", "path": "torch/csrc/jit/ivalue.h", "position": null, "original_position": 4, "commit_id": "d0d160a5f5d5784bcc7111819ae20f9947b2a4e0", "original_commit_id": "7b00a9dace84566b95811ebc988566c866d36b54", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Oh, I think your confusion is about what `unsafeReleaseTensorImpl` does. This function is NOT a decref (actually, there is no way to decref the smart pointer class Tensor, and rightly so). It is, \"relinquish control of the TensorImpl* pointer, and return it.) I'm using `release()` and `get()` nomenclature consistent with how `unique_ptr` names them.", "created_at": "2018-08-27T00:37:24Z", "updated_at": "2018-11-23T15:50:02Z", "html_url": "https://github.com/pytorch/pytorch/pull/10824#discussion_r212845456", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10824", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/212845456"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10824#discussion_r212845456"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10824"}}, "body_html": "<p>Oh, I think your confusion is about what <code>unsafeReleaseTensorImpl</code> does. This function is NOT a decref (actually, there is no way to decref the smart pointer class Tensor, and rightly so). It is, \"relinquish control of the TensorImpl* pointer, and return it.) I'm using <code>release()</code> and <code>get()</code> nomenclature consistent with how <code>unique_ptr</code> names them.</p>", "body_text": "Oh, I think your confusion is about what unsafeReleaseTensorImpl does. This function is NOT a decref (actually, there is no way to decref the smart pointer class Tensor, and rightly so). It is, \"relinquish control of the TensorImpl* pointer, and return it.) I'm using release() and get() nomenclature consistent with how unique_ptr names them.", "in_reply_to_id": 212672805}