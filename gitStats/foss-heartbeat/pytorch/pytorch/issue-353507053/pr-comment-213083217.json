{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/213083217", "pull_request_review_id": 149845053, "id": 213083217, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzA4MzIxNw==", "diff_hunk": "@@ -447,6 +447,26 @@ def append_actuals_formals(actual, formal):\n \n         env['AutoNoGIL'] = 'AutoNoGIL no_gil;' if not declaration['with_gil'] else ''\n \n+        # Use the simple_return_type (Tensor) rather than the fancy return type\n+        # (Tensor &).  This is important because the dispatch functions take\n+        # mutable arguments *by value*, not by reference.  If you then return\n+        # a a reference to such an argument, you will now have a pointer to a\n+        # dangling stack entry.  Not good.\n+        #\n+        # You want:\n+        #\n+        #   Tensor dispatch_selu_(Tensor self) { return at::selu_(self); }\n+        #\n+        # *not*\n+        #\n+        #   Tensor& dispatch_selu_(Tensor self) { return at::selu_(self); }\n+        #\n+        # (NB: We can't make dispatch_selu_ take Tensor&, because the enclosing", "path": "tools/autograd/gen_python_functions.py", "position": 27, "original_position": 27, "commit_id": "d0d160a5f5d5784bcc7111819ae20f9947b2a4e0", "original_commit_id": "d0d160a5f5d5784bcc7111819ae20f9947b2a4e0", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "I think the code you want here is already supported if you pass `unpack_args=True` to `parse_arg`.  Might be better just to do that in this case (we already do it if there is a tensoroptions for example).  But this is probably fine too.", "created_at": "2018-08-27T19:13:41Z", "updated_at": "2018-11-23T15:50:05Z", "html_url": "https://github.com/pytorch/pytorch/pull/10824#discussion_r213083217", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10824", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/213083217"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10824#discussion_r213083217"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10824"}}, "body_html": "<p>I think the code you want here is already supported if you pass <code>unpack_args=True</code> to <code>parse_arg</code>.  Might be better just to do that in this case (we already do it if there is a tensoroptions for example).  But this is probably fine too.</p>", "body_text": "I think the code you want here is already supported if you pass unpack_args=True to parse_arg.  Might be better just to do that in this case (we already do it if there is a tensoroptions for example).  But this is probably fine too."}