{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7621", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7621/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7621/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7621/events", "html_url": "https://github.com/pytorch/pytorch/pull/7621", "id": 323735085, "node_id": "MDExOlB1bGxSZXF1ZXN0MTg4NTIwNDIz", "number": 7621, "title": "Be more lenient w.r.t. flag processing in C++ extensions", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-16T18:26:17Z", "updated_at": "2018-05-16T22:17:27Z", "closed_at": "2018-05-16T22:17:19Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/7621", "html_url": "https://github.com/pytorch/pytorch/pull/7621", "diff_url": "https://github.com/pytorch/pytorch/pull/7621.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/7621.patch"}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1911637\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/wickedfoo\">@wickedfoo</a> ran into a problem where he was passing the output of a <code>subprocess</code> call as flags to <code>torch.utils.cpp_extension.load</code>. It contained a newline, and therefore ninja didn't like the produced build file. This PR fixes this by calling <code>.strip()</code> on each flag before passing it to ninja.</p>\n<p>Added test that fails before and passes after.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a></p>", "body_text": "@wickedfoo ran into a problem where he was passing the output of a subprocess call as flags to torch.utils.cpp_extension.load. It contained a newline, and therefore ninja didn't like the produced build file. This PR fixes this by calling .strip() on each flag before passing it to ninja.\nAdded test that fails before and passes after.\n@apaszke @ezyang @soumith", "body": "@wickedfoo ran into a problem where he was passing the output of a `subprocess` call as flags to `torch.utils.cpp_extension.load`. It contained a newline, and therefore ninja didn't like the produced build file. This PR fixes this by calling `.strip()` on each flag before passing it to ninja.\r\n\r\nAdded test that fails before and passes after.\r\n\r\n@apaszke @ezyang @soumith "}