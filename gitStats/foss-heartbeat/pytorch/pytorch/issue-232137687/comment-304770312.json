{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/304770312", "html_url": "https://github.com/pytorch/pytorch/issues/1678#issuecomment-304770312", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1678", "id": 304770312, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDc3MDMxMg==", "user": {"login": "mrdrozdov", "id": 1575034, "node_id": "MDQ6VXNlcjE1NzUwMzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1575034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrdrozdov", "html_url": "https://github.com/mrdrozdov", "followers_url": "https://api.github.com/users/mrdrozdov/followers", "following_url": "https://api.github.com/users/mrdrozdov/following{/other_user}", "gists_url": "https://api.github.com/users/mrdrozdov/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrdrozdov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrdrozdov/subscriptions", "organizations_url": "https://api.github.com/users/mrdrozdov/orgs", "repos_url": "https://api.github.com/users/mrdrozdov/repos", "events_url": "https://api.github.com/users/mrdrozdov/events{/privacy}", "received_events_url": "https://api.github.com/users/mrdrozdov/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-30T04:11:41Z", "updated_at": "2017-05-30T04:11:41Z", "author_association": "CONTRIBUTOR", "body_html": "<p>hey soumith. see below:</p>\n<pre><code>In [1]: import copy\nIn [2]: import torch\nIn [3]: from torch.autograd import Variable\nIn [4]: var_cpu = Variable(torch.FloatTensor(3, 10))\nIn [5]: copy.deepcopy(var_cpu).size()\nOut[5]: torch.Size([3, 10])\nIn [6]: copy.deepcopy(var_cpu.cuda()).size()\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\n&lt;ipython-input-6-0e78a6923bc1&gt; in &lt;module&gt;()\n----&gt; 1 copy.deepcopy(var_cpu.cuda()).size()\n\n/home/dexter/anaconda2/lib/python2.7/copy.pyc in deepcopy(x, memo, _nil)\n    172             copier = getattr(x, \"__deepcopy__\", None)\n    173             if copier:\n--&gt; 174                 y = copier(memo)\n    175             else:\n    176                 reductor = dispatch_table.get(cls)\n\n/home/dexter/anaconda2/lib/python2.7/site-packages/torch/autograd/variable.pyc in __deepcopy__(self, memo)\n     84     def __deepcopy__(self, memo):\n     85         if self.creator is not None:\n---&gt; 86             raise RuntimeError(\"Only Variables created explicitly by the user \"\n     87                                \"(graph leaves) support the deepcopy protocol at the moment\")\n     88         result = type(self)(self.data.clone())\n\nRuntimeError: Only Variables created explicitly by the user (graph leaves) support the deepcopy protocol at the moment\nIn [7]: copy.deepcopy(var_cpu.cuda().detach()).size() # workaround for now\nOut[7]: torch.Size([3, 10])\n</code></pre>", "body_text": "hey soumith. see below:\nIn [1]: import copy\nIn [2]: import torch\nIn [3]: from torch.autograd import Variable\nIn [4]: var_cpu = Variable(torch.FloatTensor(3, 10))\nIn [5]: copy.deepcopy(var_cpu).size()\nOut[5]: torch.Size([3, 10])\nIn [6]: copy.deepcopy(var_cpu.cuda()).size()\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\n<ipython-input-6-0e78a6923bc1> in <module>()\n----> 1 copy.deepcopy(var_cpu.cuda()).size()\n\n/home/dexter/anaconda2/lib/python2.7/copy.pyc in deepcopy(x, memo, _nil)\n    172             copier = getattr(x, \"__deepcopy__\", None)\n    173             if copier:\n--> 174                 y = copier(memo)\n    175             else:\n    176                 reductor = dispatch_table.get(cls)\n\n/home/dexter/anaconda2/lib/python2.7/site-packages/torch/autograd/variable.pyc in __deepcopy__(self, memo)\n     84     def __deepcopy__(self, memo):\n     85         if self.creator is not None:\n---> 86             raise RuntimeError(\"Only Variables created explicitly by the user \"\n     87                                \"(graph leaves) support the deepcopy protocol at the moment\")\n     88         result = type(self)(self.data.clone())\n\nRuntimeError: Only Variables created explicitly by the user (graph leaves) support the deepcopy protocol at the moment\nIn [7]: copy.deepcopy(var_cpu.cuda().detach()).size() # workaround for now\nOut[7]: torch.Size([3, 10])", "body": "hey soumith. see below:\r\n\r\n```\r\nIn [1]: import copy\r\nIn [2]: import torch\r\nIn [3]: from torch.autograd import Variable\r\nIn [4]: var_cpu = Variable(torch.FloatTensor(3, 10))\r\nIn [5]: copy.deepcopy(var_cpu).size()\r\nOut[5]: torch.Size([3, 10])\r\nIn [6]: copy.deepcopy(var_cpu.cuda()).size()\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-6-0e78a6923bc1> in <module>()\r\n----> 1 copy.deepcopy(var_cpu.cuda()).size()\r\n\r\n/home/dexter/anaconda2/lib/python2.7/copy.pyc in deepcopy(x, memo, _nil)\r\n    172             copier = getattr(x, \"__deepcopy__\", None)\r\n    173             if copier:\r\n--> 174                 y = copier(memo)\r\n    175             else:\r\n    176                 reductor = dispatch_table.get(cls)\r\n\r\n/home/dexter/anaconda2/lib/python2.7/site-packages/torch/autograd/variable.pyc in __deepcopy__(self, memo)\r\n     84     def __deepcopy__(self, memo):\r\n     85         if self.creator is not None:\r\n---> 86             raise RuntimeError(\"Only Variables created explicitly by the user \"\r\n     87                                \"(graph leaves) support the deepcopy protocol at the moment\")\r\n     88         result = type(self)(self.data.clone())\r\n\r\nRuntimeError: Only Variables created explicitly by the user (graph leaves) support the deepcopy protocol at the moment\r\nIn [7]: copy.deepcopy(var_cpu.cuda().detach()).size() # workaround for now\r\nOut[7]: torch.Size([3, 10])\r\n```"}