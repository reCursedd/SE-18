{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/191995540", "pull_request_review_id": 124678185, "id": 191995540, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTk5NTU0MA==", "diff_hunk": "@@ -453,14 +453,20 @@ def persistent_load(saved_id):\n             raise RuntimeError(\"Unknown saved id type: %s\" % saved_id[0])\n \n     f_is_real_file = _is_real_file(f)\n-    if f_is_real_file and f.tell() == 0:\n-        # legacy_load requires that f has fileno()\n-        # only if offset is zero we can attempt the legacy tar file loader\n-        try:\n-            return legacy_load(f)\n-        except tarfile.TarError:\n-            # if not a tarfile, reset file offset and proceed\n-            f.seek(0)\n+\n+    try:\n+        if f_is_real_file and f.tell() == 0:", "path": "torch/serialization.py", "position": null, "original_position": 14, "commit_id": "8bfa74dd6e54176745fa849b9fee65bd652ed034", "original_commit_id": "08101d0943223cd88980b260ece5cbfe057c957e", "user": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "body": "Will the line above `f_is_real_file = _is_real_file(f)` mitigate this issue? Or you mean the file-like object can still pass the `_is_real_file()` check? If that's the case, then we can probably improve the check.", "created_at": "2018-05-31T05:55:16Z", "updated_at": "2018-11-23T15:44:46Z", "html_url": "https://github.com/pytorch/pytorch/pull/7754#discussion_r191995540", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7754", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/191995540"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7754#discussion_r191995540"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7754"}}, "body_html": "<p>Will the line above <code>f_is_real_file = _is_real_file(f)</code> mitigate this issue? Or you mean the file-like object can still pass the <code>_is_real_file()</code> check? If that's the case, then we can probably improve the check.</p>", "body_text": "Will the line above f_is_real_file = _is_real_file(f) mitigate this issue? Or you mean the file-like object can still pass the _is_real_file() check? If that's the case, then we can probably improve the check.", "in_reply_to_id": 190909662}