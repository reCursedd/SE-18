{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/400333274", "html_url": "https://github.com/pytorch/pytorch/issues/8686#issuecomment-400333274", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8686", "id": 400333274, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDMzMzI3NA==", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-26T14:38:38Z", "updated_at": "2018-06-26T14:38:38Z", "author_association": "CONTRIBUTOR", "body_html": "<p>probably this week.  <code>split</code> will likely be fixed in the patch enabling it.  <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=11662379\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ptrblck\">@ptrblck</a> is your code available somewhere?  FWIW you can write the test and include it now by guarding it with <code>@skipIfNoZeroSize</code>, as in: <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pytorch/pytorch/blob/8e019826c985804106f3d00600b808a5ff379a58/test/test_autograd.py#L1874\">pytorch/test/test_autograd.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 1874\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pytorch/pytorch/commit/8e019826c985804106f3d00600b808a5ff379a58\">8e01982</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L1874\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1874\"></td>\n          <td id=\"LC1874\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-en\">@skipIfNoZeroSize</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>You can also write the correct code by using <code>#ifdef USE_TH_SIZE_ZERO_DIM</code> and building with<br>\n<code>CFLAGS=\"-DUSE_TH_SIZE_ZERO_DIM\" DEBUG=1 python setup.py build_deps develop</code>.</p>\n<p>I'm happy to take a look, although I may get to it myself in a day or two when we enable zero sized dims.</p>", "body_text": "probably this week.  split will likely be fixed in the patch enabling it.  @ptrblck is your code available somewhere?  FWIW you can write the test and include it now by guarding it with @skipIfNoZeroSize, as in: \n  \n    \n      pytorch/test/test_autograd.py\n    \n    \n         Line 1874\n      in\n      8e01982\n    \n    \n    \n    \n\n        \n          \n           @skipIfNoZeroSize \n        \n    \n  \n\n\nYou can also write the correct code by using #ifdef USE_TH_SIZE_ZERO_DIM and building with\nCFLAGS=\"-DUSE_TH_SIZE_ZERO_DIM\" DEBUG=1 python setup.py build_deps develop.\nI'm happy to take a look, although I may get to it myself in a day or two when we enable zero sized dims.", "body": "probably this week.  `split` will likely be fixed in the patch enabling it.  @ptrblck is your code available somewhere?  FWIW you can write the test and include it now by guarding it with `@skipIfNoZeroSize`, as in: https://github.com/pytorch/pytorch/blob/8e019826c985804106f3d00600b808a5ff379a58/test/test_autograd.py#L1874\r\n\r\nYou can also write the correct code by using `#ifdef USE_TH_SIZE_ZERO_DIM` and building with\r\n`CFLAGS=\"-DUSE_TH_SIZE_ZERO_DIM\" DEBUG=1 python setup.py build_deps develop`.\r\n\r\nI'm happy to take a look, although I may get to it myself in a day or two when we enable zero sized dims."}