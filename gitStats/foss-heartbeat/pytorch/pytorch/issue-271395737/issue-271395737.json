{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3498", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3498/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3498/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3498/events", "html_url": "https://github.com/pytorch/pytorch/issues/3498", "id": 271395737, "node_id": "MDU6SXNzdWUyNzEzOTU3Mzc=", "number": 3498, "title": "Memory Leak in autograd using ndarray[None]", "user": {"login": "grantsrb", "id": 18670065, "node_id": "MDQ6VXNlcjE4NjcwMDY1", "avatar_url": "https://avatars1.githubusercontent.com/u/18670065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grantsrb", "html_url": "https://github.com/grantsrb", "followers_url": "https://api.github.com/users/grantsrb/followers", "following_url": "https://api.github.com/users/grantsrb/following{/other_user}", "gists_url": "https://api.github.com/users/grantsrb/gists{/gist_id}", "starred_url": "https://api.github.com/users/grantsrb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grantsrb/subscriptions", "organizations_url": "https://api.github.com/users/grantsrb/orgs", "repos_url": "https://api.github.com/users/grantsrb/repos", "events_url": "https://api.github.com/users/grantsrb/events{/privacy}", "received_events_url": "https://api.github.com/users/grantsrb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 742585577, "node_id": "MDU6TGFiZWw3NDI1ODU1Nzc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/0.3", "name": "0.3", "color": "d1c41b", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pytorch/pytorch/milestones/3", "html_url": "https://github.com/pytorch/pytorch/milestone/3", "labels_url": "https://api.github.com/repos/pytorch/pytorch/milestones/3/labels", "id": 3085371, "node_id": "MDk6TWlsZXN0b25lMzA4NTM3MQ==", "number": 3, "title": "0.3", "description": "", "creator": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "open_issues": 2, "closed_issues": 17, "state": "closed", "created_at": "2018-02-03T02:53:12Z", "updated_at": "2018-08-06T21:16:05Z", "due_on": "2017-12-01T08:00:00Z", "closed_at": "2018-08-06T21:16:05Z"}, "comments": 0, "created_at": "2017-11-06T08:39:11Z", "updated_at": "2018-02-03T02:53:51Z", "closed_at": "2017-11-07T17:47:13Z", "author_association": "NONE", "body_html": "<p>Here is an example of what seems to be a memory leak in pytorch, although it could be numpy?</p>\n<pre><code>import numpy as np\nimport gc\nimport resource\nimport torch\nimport torch.nn as nn\nfrom torch.autograd import Variable\n\nmodel = nn.Linear(100, 2)\n\ni = 0\nwhile True:\n    i += 1\n\n    np_arr = np.ones(100).astype(np.float32)\n    tensor = torch.from_numpy(np_arr[None]) # Issue seems to be use of [None] or [np.newaxis]\n    variable = Variable(tensor)\n    output = model(variable)\n\n    if i % 1000 == 0:\n        gc.collect()\n        max_mem_used = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss\n        print(\"{:.2f} MB\".format(max_mem_used / 1024))\n</code></pre>\n<p>The leak was only occurring when using the <code>[None]</code> or <code>[np.newaxis]</code> array unsqueezing methods in numpy. Also worth noting that the issue is resolved by removing the <code>.astype(np.float32)</code> from <code>np_arr</code> and casting the torch tensor to <code>float()</code> type.</p>\n<p>An easy workaround is to reshape the array after turning it into a torch Tensor.</p>", "body_text": "Here is an example of what seems to be a memory leak in pytorch, although it could be numpy?\nimport numpy as np\nimport gc\nimport resource\nimport torch\nimport torch.nn as nn\nfrom torch.autograd import Variable\n\nmodel = nn.Linear(100, 2)\n\ni = 0\nwhile True:\n    i += 1\n\n    np_arr = np.ones(100).astype(np.float32)\n    tensor = torch.from_numpy(np_arr[None]) # Issue seems to be use of [None] or [np.newaxis]\n    variable = Variable(tensor)\n    output = model(variable)\n\n    if i % 1000 == 0:\n        gc.collect()\n        max_mem_used = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss\n        print(\"{:.2f} MB\".format(max_mem_used / 1024))\n\nThe leak was only occurring when using the [None] or [np.newaxis] array unsqueezing methods in numpy. Also worth noting that the issue is resolved by removing the .astype(np.float32) from np_arr and casting the torch tensor to float() type.\nAn easy workaround is to reshape the array after turning it into a torch Tensor.", "body": "Here is an example of what seems to be a memory leak in pytorch, although it could be numpy?\r\n\r\n```\r\nimport numpy as np\r\nimport gc\r\nimport resource\r\nimport torch\r\nimport torch.nn as nn\r\nfrom torch.autograd import Variable\r\n\r\nmodel = nn.Linear(100, 2)\r\n\r\ni = 0\r\nwhile True:\r\n    i += 1\r\n\r\n    np_arr = np.ones(100).astype(np.float32)\r\n    tensor = torch.from_numpy(np_arr[None]) # Issue seems to be use of [None] or [np.newaxis]\r\n    variable = Variable(tensor)\r\n    output = model(variable)\r\n\r\n    if i % 1000 == 0:\r\n        gc.collect()\r\n        max_mem_used = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss\r\n        print(\"{:.2f} MB\".format(max_mem_used / 1024))\r\n```\r\n\r\nThe leak was only occurring when using the `[None]` or `[np.newaxis]` array unsqueezing methods in numpy. Also worth noting that the issue is resolved by removing the `.astype(np.float32)` from `np_arr` and casting the torch tensor to `float()` type.\r\n\r\nAn easy workaround is to reshape the array after turning it into a torch Tensor."}