{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207944071", "pull_request_review_id": 143355072, "id": 207944071, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzk0NDA3MQ==", "diff_hunk": "@@ -64,41 +56,69 @@ struct AT_API SparseTensorImpl : public TensorImpl {\n   void * unsafeGetTH(bool retain) override;\n   std::unique_ptr<Storage> storage() override;\n \n-  // Some ops do some manual size fiddling.\n-  // TODO: Figure out a more safe way to provide this functionality\n-  std::vector<int64_t>& _sizes_mut() { return size_; }\n-\n   // WARNING: This function does NOT preserve invariants of sparseDims/denseDims with\n   // respect to indices and values\n   void raw_resize_(int64_t sparseDims, int64_t denseDims, ArrayRef<int64_t> size) {\n-    // UGHHHHH.  Legacy special case\n-    if (size.size() == 0) {\n-      size_ = {0};\n-    } else {\n-      size_ = size.vec();\n-    }\n+    size_ = size.vec();\n     sparseDims_ = sparseDims;\n     denseDims_ = denseDims;\n   }\n \n-  // TODO: I hate these two setters, please get rid of them!!!\n-  void set_indices(const Tensor& indices) {\n-    AT_ASSERT(indices.type().backend() == at::toDense(type().backend()));\n-    AT_ASSERT(indices.type().scalarType() == kLong);\n-    indices_ = indices;\n+  // NOTE: This function preserves invariants of sparseDims/denseDims with respect to\n+  // indices and values.\n+  void resize_(int64_t sparseDims, int64_t denseDims, ArrayRef<int64_t> size) {\n+    AT_CHECK(sparseDims + denseDims == size.size(), \"number of dimensions must be sparseDims (\", sparseDims, \") + denseDims (\", denseDims, \"), but got \", size.size());\n+    AT_CHECK((sparseDims == sparseDims_) || (nnz_ == 0), \"resizing a non-empty sparse tensor with a different sparseDims will invalidate its indices, please use an empty sparse tensor instead\");", "path": "aten/src/ATen/SparseTensorImpl.h", "position": null, "original_position": 62, "commit_id": "f7b1f23e8f85e8484934de71c9708933421009d0", "original_commit_id": "b82e27fe1b554170056673f61f2e35568b6c49bb", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "I'm not sure what \"please use an empty sparse tensor instead\" means.  Do you mean \"call resize_ on an empty tensor\"?  That doesn't always seem applicable.  I'd expect a message along the lines of:\r\n\"changing the number of sparse dimensions on a non-empty sparse tensor is not supported.  If you need an empty tensor of this size, call XXX.  If you need to resize this tensor, either keep the number of sparse dimensions constant, or YYY (copy?).\"", "created_at": "2018-08-06T15:58:18Z", "updated_at": "2018-11-23T15:48:48Z", "html_url": "https://github.com/pytorch/pytorch/pull/9279#discussion_r207944071", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9279", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207944071"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9279#discussion_r207944071"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9279"}}, "body_html": "<p>I'm not sure what \"please use an empty sparse tensor instead\" means.  Do you mean \"call resize_ on an empty tensor\"?  That doesn't always seem applicable.  I'd expect a message along the lines of:<br>\n\"changing the number of sparse dimensions on a non-empty sparse tensor is not supported.  If you need an empty tensor of this size, call XXX.  If you need to resize this tensor, either keep the number of sparse dimensions constant, or YYY (copy?).\"</p>", "body_text": "I'm not sure what \"please use an empty sparse tensor instead\" means.  Do you mean \"call resize_ on an empty tensor\"?  That doesn't always seem applicable.  I'd expect a message along the lines of:\n\"changing the number of sparse dimensions on a non-empty sparse tensor is not supported.  If you need an empty tensor of this size, call XXX.  If you need to resize this tensor, either keep the number of sparse dimensions constant, or YYY (copy?).\""}