{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/205577948", "pull_request_review_id": 140878623, "id": 205577948, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTU3Nzk0OA==", "diff_hunk": "@@ -508,7 +541,13 @@ SparseTensor& s_mul_out_sparse_cpu(SparseTensor& r, const SparseTensor& t_, cons\n     );\n   }\n \n+#ifndef USE_TH_SIZE_ZERO_DIM\n   _get_sparse_impl(r)->set_nnz(r_i);\n+#else\n+  r_indices = r_indices.narrow(1, 0, r_i);\n+  r_values = r_values.narrow(0, 0, r_i);\n+  _get_sparse_impl(r)->set_indices_and_values_unsafe(r_indices, r_values);", "path": "aten/src/ATen/native/sparse/SparseTensorMath.cpp", "position": null, "original_position": 104, "commit_id": "f7b1f23e8f85e8484934de71c9708933421009d0", "original_commit_id": "48cbd37ac3ec1bd1cea7f9087ddb68872b481daa", "user": {"login": "yf225", "id": 4063635, "node_id": "MDQ6VXNlcjQwNjM2MzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/4063635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yf225", "html_url": "https://github.com/yf225", "followers_url": "https://api.github.com/users/yf225/followers", "following_url": "https://api.github.com/users/yf225/following{/other_user}", "gists_url": "https://api.github.com/users/yf225/gists{/gist_id}", "starred_url": "https://api.github.com/users/yf225/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yf225/subscriptions", "organizations_url": "https://api.github.com/users/yf225/orgs", "repos_url": "https://api.github.com/users/yf225/repos", "events_url": "https://api.github.com/users/yf225/events{/privacy}", "received_events_url": "https://api.github.com/users/yf225/received_events", "type": "User", "site_admin": false}, "body": "I think it actually might be a bit tricky here -- `set_indices_and_values_unsafe` would actually sets the `nnz` to `values.size(0)`, so in the existing code that function should be called before `set_nnz`, but in the new code it should be called after `r_indices = r_indices.narrow(1, 0, r_i)` and `r_values = r_values.narrow(0, 0, r_i)` so that it has the right indices and values. We could probably write it as:\r\n```\r\n#ifdef USE_TH_SIZE_ZERO_DIM\r\n  r_indices = r_indices.narrow(1, 0, r_i);\r\n  r_values = r_values.narrow(0, 0, r_i);\r\n#endif\r\n\r\n_get_sparse_impl(r)->set_indices_and_values_unsafe(r_indices, r_values);\r\n\r\n#ifndef USE_TH_SIZE_ZERO_DIM\r\n  _get_sparse_impl(r)->set_nnz(r_i);\r\n#endif\r\n```", "created_at": "2018-07-26T19:36:39Z", "updated_at": "2018-11-23T15:48:15Z", "html_url": "https://github.com/pytorch/pytorch/pull/9279#discussion_r205577948", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9279", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/205577948"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9279#discussion_r205577948"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9279"}}, "body_html": "<p>I think it actually might be a bit tricky here -- <code>set_indices_and_values_unsafe</code> would actually sets the <code>nnz</code> to <code>values.size(0)</code>, so in the existing code that function should be called before <code>set_nnz</code>, but in the new code it should be called after <code>r_indices = r_indices.narrow(1, 0, r_i)</code> and <code>r_values = r_values.narrow(0, 0, r_i)</code> so that it has the right indices and values. We could probably write it as:</p>\n<pre><code>#ifdef USE_TH_SIZE_ZERO_DIM\n  r_indices = r_indices.narrow(1, 0, r_i);\n  r_values = r_values.narrow(0, 0, r_i);\n#endif\n\n_get_sparse_impl(r)-&gt;set_indices_and_values_unsafe(r_indices, r_values);\n\n#ifndef USE_TH_SIZE_ZERO_DIM\n  _get_sparse_impl(r)-&gt;set_nnz(r_i);\n#endif\n</code></pre>", "body_text": "I think it actually might be a bit tricky here -- set_indices_and_values_unsafe would actually sets the nnz to values.size(0), so in the existing code that function should be called before set_nnz, but in the new code it should be called after r_indices = r_indices.narrow(1, 0, r_i) and r_values = r_values.narrow(0, 0, r_i) so that it has the right indices and values. We could probably write it as:\n#ifdef USE_TH_SIZE_ZERO_DIM\n  r_indices = r_indices.narrow(1, 0, r_i);\n  r_values = r_values.narrow(0, 0, r_i);\n#endif\n\n_get_sparse_impl(r)->set_indices_and_values_unsafe(r_indices, r_values);\n\n#ifndef USE_TH_SIZE_ZERO_DIM\n  _get_sparse_impl(r)->set_nnz(r_i);\n#endif", "in_reply_to_id": 205287195}