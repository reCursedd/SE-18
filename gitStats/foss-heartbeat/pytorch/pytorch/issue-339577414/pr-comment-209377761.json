{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/209377761", "pull_request_review_id": 145388047, "id": 209377761, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTM3Nzc2MQ==", "diff_hunk": "@@ -58,17 +54,47 @@ struct AT_API SparseTensorImpl : public TensorImpl {\n \n   // WARNING: This function does NOT preserve invariants of sparseDims/denseDims with\n   // respect to indices and values\n-  void raw_resize_(int64_t sparseDims, int64_t denseDims, ArrayRef<int64_t> size) {\n+  void raw_resize_(int64_t sparseDims, int64_t denseDims, IntList size) {\n     size_ = size.vec();\n     sparseDims_ = sparseDims;\n     denseDims_ = denseDims;\n   }\n \n   // NOTE: This function preserves invariants of sparseDims/denseDims with respect to\n   // indices and values.\n-  void resize_(int64_t sparseDims, int64_t denseDims, ArrayRef<int64_t> size) {\n+  //\n+  // NOTE: This function is safe to call in the following cases:", "path": "aten/src/ATen/SparseTensorImpl.h", "position": null, "original_position": 35, "commit_id": "f7b1f23e8f85e8484934de71c9708933421009d0", "original_commit_id": "dc7b60d3e595c3c5860f780c876f4101577fce63", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "nit: you are using \"safe\" in a bit of a non-standard way; usually a function not being safe would mean it could leave things in a bad state, but here you just error out.  You probably want to say something about it supporting these cases rather than it being safe for these cases.\r\n\r\nBesides that, the comment is clear.", "created_at": "2018-08-10T20:34:17Z", "updated_at": "2018-11-23T15:49:06Z", "html_url": "https://github.com/pytorch/pytorch/pull/9279#discussion_r209377761", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9279", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/209377761"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9279#discussion_r209377761"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9279"}}, "body_html": "<p>nit: you are using \"safe\" in a bit of a non-standard way; usually a function not being safe would mean it could leave things in a bad state, but here you just error out.  You probably want to say something about it supporting these cases rather than it being safe for these cases.</p>\n<p>Besides that, the comment is clear.</p>", "body_text": "nit: you are using \"safe\" in a bit of a non-standard way; usually a function not being safe would mean it could leave things in a bad state, but here you just error out.  You probably want to say something about it supporting these cases rather than it being safe for these cases.\nBesides that, the comment is clear."}