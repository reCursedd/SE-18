{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/209777198", "pull_request_review_id": 145857467, "id": 209777198, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTc3NzE5OA==", "diff_hunk": "@@ -58,17 +54,47 @@ struct AT_API SparseTensorImpl : public TensorImpl {\n \n   // WARNING: This function does NOT preserve invariants of sparseDims/denseDims with\n   // respect to indices and values\n-  void raw_resize_(int64_t sparseDims, int64_t denseDims, ArrayRef<int64_t> size) {\n+  void raw_resize_(int64_t sparseDims, int64_t denseDims, IntList size) {\n     size_ = size.vec();\n     sparseDims_ = sparseDims;\n     denseDims_ = denseDims;\n   }\n \n   // NOTE: This function preserves invariants of sparseDims/denseDims with respect to\n   // indices and values.\n-  void resize_(int64_t sparseDims, int64_t denseDims, ArrayRef<int64_t> size) {\n+  //\n+  // NOTE: This function is safe to call in the following cases:\n+  // 1. When we only change the shape of dense dimensions (adding/removing dims, or changing\n+  // the size of some dims) and keeping the shape of sparse dimensions unchanged.\n+  // 2. When we keep the number of sparse dimensions unchanged, and NOT shrinking the size of\n+  // any of the sparse dimensions.\n+  // 3. When the sparse tensor has zero nnz, in which case we are free to change the shapes of\n+  // both its sparse and dense dimensions.\n+  //\n+  // This function is NOT safe to call (and will throw an error) in the following cases:\n+  // 1. When we attempt to change the number of sparse dimensions on a non-empty sparse tensor\n+  // (such an operation will invalidate the indices stored).\n+  // 2. When we attempt to shrink the size of any of the sparse dimensions (this could make\n+  // some of the stored indices out-of-bound and thus unsafe).\n+  void resize_(int64_t sparseDims, int64_t denseDims, IntList size) {\n     AT_CHECK(sparseDims + denseDims == size.size(), \"number of dimensions must be sparseDims (\", sparseDims, \") + denseDims (\", denseDims, \"), but got \", size.size());\n-    AT_CHECK((sparseDims == sparseDims_) || (nnz_ == 0), \"resizing a non-empty sparse tensor with a different sparseDims will invalidate its indices, please use an empty sparse tensor instead\");\n+    if (nnz() > 0) {\n+      bool shrinking_sparse_dims = false;\n+      auto sparse_size_original = sizes().slice(0, sparseDims);\n+      auto sparse_size_new = size.slice(0, sparseDims);\n+      for (int i = 0; i < sparseDims; i++) {\n+        if (sparse_size_new[i] < sparse_size_original[i]) {\n+          shrinking_sparse_dims = true;\n+          break;\n+        }\n+      }\n+\n+      AT_CHECK(sparseDims == sparseDims_ && !shrinking_sparse_dims,\n+        \"changing the number of sparse dimensions or shrinking the size of sparse dimensions on a non-empty sparse tensor is not supported. \\", "path": "aten/src/ATen/SparseTensorImpl.h", "position": null, "original_position": 63, "commit_id": "f7b1f23e8f85e8484934de71c9708933421009d0", "original_commit_id": "dc7b60d3e595c3c5860f780c876f4101577fce63", "user": {"login": "yf225", "id": 4063635, "node_id": "MDQ6VXNlcjQwNjM2MzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/4063635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yf225", "html_url": "https://github.com/yf225", "followers_url": "https://api.github.com/users/yf225/followers", "following_url": "https://api.github.com/users/yf225/following{/other_user}", "gists_url": "https://api.github.com/users/yf225/gists{/gist_id}", "starred_url": "https://api.github.com/users/yf225/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yf225/subscriptions", "organizations_url": "https://api.github.com/users/yf225/orgs", "repos_url": "https://api.github.com/users/yf225/repos", "events_url": "https://api.github.com/users/yf225/events{/privacy}", "received_events_url": "https://api.github.com/users/yf225/received_events", "type": "User", "site_admin": false}, "body": "Fixed", "created_at": "2018-08-13T22:17:00Z", "updated_at": "2018-11-23T15:49:13Z", "html_url": "https://github.com/pytorch/pytorch/pull/9279#discussion_r209777198", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9279", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/209777198"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9279#discussion_r209777198"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9279"}}, "body_html": "<p>Fixed</p>", "body_text": "Fixed", "in_reply_to_id": 209379586}