{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3789", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3789/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3789/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3789/events", "html_url": "https://github.com/pytorch/pytorch/issues/3789", "id": 275250811, "node_id": "MDU6SXNzdWUyNzUyNTA4MTE=", "number": 3789, "title": "broadcasting behaves differently on CPU and GPU", "user": {"login": "hitvoice", "id": 13765633, "node_id": "MDQ6VXNlcjEzNzY1NjMz", "avatar_url": "https://avatars1.githubusercontent.com/u/13765633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hitvoice", "html_url": "https://github.com/hitvoice", "followers_url": "https://api.github.com/users/hitvoice/followers", "following_url": "https://api.github.com/users/hitvoice/following{/other_user}", "gists_url": "https://api.github.com/users/hitvoice/gists{/gist_id}", "starred_url": "https://api.github.com/users/hitvoice/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hitvoice/subscriptions", "organizations_url": "https://api.github.com/users/hitvoice/orgs", "repos_url": "https://api.github.com/users/hitvoice/repos", "events_url": "https://api.github.com/users/hitvoice/events{/privacy}", "received_events_url": "https://api.github.com/users/hitvoice/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131847, "node_id": "MDU6TGFiZWw0MjQxMzE4NDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/bug", "name": "bug", "color": "b60205", "default": true}, {"id": 443484135, "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority", "name": "high priority", "color": "F22613", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2017-11-20T06:37:03Z", "updated_at": "2017-12-11T11:00:55Z", "closed_at": "2017-12-11T11:00:55Z", "author_association": "NONE", "body_html": "<p>GRUCell and LSTMCell on GPU do not support broadcasting, while RNNCell supports broadcasting on both CPU and GPU. This inconsistency is not expected and not documented.</p>\n<p>Here's the example code:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">import</span> torch.nn <span class=\"pl-k\">as</span> nn\n<span class=\"pl-k\">from</span> torch.autograd <span class=\"pl-k\">import</span> Variable\n\nrnn <span class=\"pl-k\">=</span> nn.RNNCell(<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">20</span>)\ngru <span class=\"pl-k\">=</span> nn.GRUCell(<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">20</span>)\n<span class=\"pl-c1\">input</span> <span class=\"pl-k\">=</span> Variable(torch.randn(<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">10</span>))\nh0 <span class=\"pl-k\">=</span> Variable(torch.randn(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">20</span>)) <span class=\"pl-c\"><span class=\"pl-c\">#</span> this should be (3, 20)</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> both cells support broadcasting on CPU</span>\nhx_rnn <span class=\"pl-k\">=</span> rnn(<span class=\"pl-c1\">input</span>, h0)\nhx_gru <span class=\"pl-k\">=</span> gru(<span class=\"pl-c1\">input</span>, h0)\n<span class=\"pl-k\">assert</span> hx_rnn.size() <span class=\"pl-k\">==</span> hx_gru.size()\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> send models and variables to GPU</span>\nrnn.cuda()\ngru.cuda()\n<span class=\"pl-c1\">input</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">input</span>.cuda()\nh0 <span class=\"pl-k\">=</span> h0.cuda()\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> RNNCell is OK</span>\n<span class=\"pl-k\">try</span>:\n    hx_rnn_cuda <span class=\"pl-k\">=</span> rnn(<span class=\"pl-c1\">input</span>, h0)\n<span class=\"pl-k\">except</span> <span class=\"pl-c1\">RuntimeError</span> <span class=\"pl-k\">as</span> e:\n    <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>rnn error<span class=\"pl-cce\">\\n</span><span class=\"pl-pds\">'</span></span>, e)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> GRUCell on GPU does not support broadcasting</span>\n<span class=\"pl-k\">try</span>:\n    hx_gru_cuda <span class=\"pl-k\">=</span> gru(<span class=\"pl-c1\">input</span>, h0)\n<span class=\"pl-k\">except</span> <span class=\"pl-c1\">RuntimeError</span> <span class=\"pl-k\">as</span> e:\n    <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>gru error<span class=\"pl-cce\">\\n</span><span class=\"pl-pds\">'</span></span>, e)</pre></div>\n<p>The output of this example is:</p>\n<pre><code>gru error\ninvalid argument 3: Input and Hidden tensor sizes should be the same. at /pytorch/torch/lib/THCUNN/generic/FusedRNNKernel.cu:19\n</code></pre>\n<p>Is this a known issue or not expected?</p>", "body_text": "GRUCell and LSTMCell on GPU do not support broadcasting, while RNNCell supports broadcasting on both CPU and GPU. This inconsistency is not expected and not documented.\nHere's the example code:\nimport torch\nimport torch.nn as nn\nfrom torch.autograd import Variable\n\nrnn = nn.RNNCell(10, 20)\ngru = nn.GRUCell(10, 20)\ninput = Variable(torch.randn(3, 10))\nh0 = Variable(torch.randn(1, 20)) # this should be (3, 20)\n# both cells support broadcasting on CPU\nhx_rnn = rnn(input, h0)\nhx_gru = gru(input, h0)\nassert hx_rnn.size() == hx_gru.size()\n\n# send models and variables to GPU\nrnn.cuda()\ngru.cuda()\ninput = input.cuda()\nh0 = h0.cuda()\n\n# RNNCell is OK\ntry:\n    hx_rnn_cuda = rnn(input, h0)\nexcept RuntimeError as e:\n    print('rnn error\\n', e)\n\n# GRUCell on GPU does not support broadcasting\ntry:\n    hx_gru_cuda = gru(input, h0)\nexcept RuntimeError as e:\n    print('gru error\\n', e)\nThe output of this example is:\ngru error\ninvalid argument 3: Input and Hidden tensor sizes should be the same. at /pytorch/torch/lib/THCUNN/generic/FusedRNNKernel.cu:19\n\nIs this a known issue or not expected?", "body": "GRUCell and LSTMCell on GPU do not support broadcasting, while RNNCell supports broadcasting on both CPU and GPU. This inconsistency is not expected and not documented.\r\n\r\nHere's the example code:\r\n```python\r\nimport torch\r\nimport torch.nn as nn\r\nfrom torch.autograd import Variable\r\n\r\nrnn = nn.RNNCell(10, 20)\r\ngru = nn.GRUCell(10, 20)\r\ninput = Variable(torch.randn(3, 10))\r\nh0 = Variable(torch.randn(1, 20)) # this should be (3, 20)\r\n# both cells support broadcasting on CPU\r\nhx_rnn = rnn(input, h0)\r\nhx_gru = gru(input, h0)\r\nassert hx_rnn.size() == hx_gru.size()\r\n\r\n# send models and variables to GPU\r\nrnn.cuda()\r\ngru.cuda()\r\ninput = input.cuda()\r\nh0 = h0.cuda()\r\n\r\n# RNNCell is OK\r\ntry:\r\n    hx_rnn_cuda = rnn(input, h0)\r\nexcept RuntimeError as e:\r\n    print('rnn error\\n', e)\r\n\r\n# GRUCell on GPU does not support broadcasting\r\ntry:\r\n    hx_gru_cuda = gru(input, h0)\r\nexcept RuntimeError as e:\r\n    print('gru error\\n', e)\r\n```\r\nThe output of this example is:\r\n```\r\ngru error\r\ninvalid argument 3: Input and Hidden tensor sizes should be the same. at /pytorch/torch/lib/THCUNN/generic/FusedRNNKernel.cu:19\r\n```\r\n\r\nIs this a known issue or not expected?"}