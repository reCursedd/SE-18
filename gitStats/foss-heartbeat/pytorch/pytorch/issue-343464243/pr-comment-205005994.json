{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/205005994", "pull_request_review_id": 140188925, "id": 205005994, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTAwNTk5NA==", "diff_hunk": "@@ -18,3 +18,50 @@ popd\n # Install sccache from pre-compiled binary.\n curl https://s3.amazonaws.com/ossci-linux/sccache -o /usr/local/bin/sccache\n chmod a+x /usr/local/bin/sccache\n+\n+# Setup SCCACHE\n+###############################################################################\n+mkdir -p ./sccache\n+\n+SCCACHE=\"$(which sccache)\"\n+if [ -z \"${SCCACHE}\" ]; then\n+  echo \"Unable to find sccache...\"\n+  exit 1\n+fi\n+\n+# List of compilers to use sccache on.\n+declare -a compilers=(\"cc\" \"c++\" \"gcc\" \"g++\" \"x86_64-linux-gnu-gcc\")\n+\n+# If cuda build, add nvcc to sccache.\n+if [[ \"${BUILD_ENVIRONMENT}\" == *-cuda* ]]; then\n+  compilers+=(\"nvcc\")\n+fi\n+\n+# If rocm build, add hcc to sccache.\n+if [[ \"${BUILD_ENVIRONMENT}\" == *-rocm* ]]; then\n+  # HCC's symlink path: /opt/rocm/hcc/bin/hcc -> /opt/rocm/hcc/bin/clang -> /opt/rocm/hcc/bin/clang-7.0\n+  HCC_DEST_PATH=\"$(readlink -f $(which hcc))\"\n+  HCC_REAL_BINARY=\"$(dirname $HCC_DEST_PATH)/clang-7.0_original\"\n+  mv $HCC_DEST_PATH $HCC_REAL_BINARY\n+\n+  # Create sccache wrapper.\n+  (\n+    echo \"#!/bin/sh\"\n+    echo \"exec $SCCACHE \"$HCC_REAL_BINARY\" \\\"\\$@\\\"\"\n+  ) > $HCC_DEST_PATH\n+  chmod +x \"$HCC_DEST_PATH\"\n+fi\n+\n+# Setup wrapper scripts\n+for compiler in \"${compilers[@]}\"; do\n+  (\n+    echo \"#!/bin/sh\"\n+    echo \"exec $SCCACHE $(which $compiler) \\\"\\$@\\\"\"", "path": "docker/caffe2/jenkins/common/install_ccache.sh", "position": 42, "original_position": 42, "commit_id": "76b6b721e34faadb7d1a668ed45a671508c93dbc", "original_commit_id": "fecafa3f2f8ca8374fe11d6e78121e0dc025b498", "user": {"login": "bddppq", "id": 9300575, "node_id": "MDQ6VXNlcjkzMDA1NzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/9300575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bddppq", "html_url": "https://github.com/bddppq", "followers_url": "https://api.github.com/users/bddppq/followers", "following_url": "https://api.github.com/users/bddppq/following{/other_user}", "gists_url": "https://api.github.com/users/bddppq/gists{/gist_id}", "starred_url": "https://api.github.com/users/bddppq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bddppq/subscriptions", "organizations_url": "https://api.github.com/users/bddppq/orgs", "repos_url": "https://api.github.com/users/bddppq/repos", "events_url": "https://api.github.com/users/bddppq/events{/privacy}", "received_events_url": "https://api.github.com/users/bddppq/received_events", "type": "User", "site_admin": false}, "body": "You now need to make sure in all the Dockerfiles this install_ccache.sh is called after all other compiler installation scripts (install_gcc.sh and install_clang.sh).", "created_at": "2018-07-25T07:23:11Z", "updated_at": "2018-11-23T15:48:04Z", "html_url": "https://github.com/pytorch/pytorch/pull/9697#discussion_r205005994", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9697", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/205005994"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9697#discussion_r205005994"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9697"}}, "body_html": "<p>You now need to make sure in all the Dockerfiles this install_ccache.sh is called after all other compiler installation scripts (install_gcc.sh and install_clang.sh).</p>", "body_text": "You now need to make sure in all the Dockerfiles this install_ccache.sh is called after all other compiler installation scripts (install_gcc.sh and install_clang.sh)."}