{"url": "https://api.github.com/repos/pytorch/pytorch/issues/9025", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/9025/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9025/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/9025/events", "html_url": "https://github.com/pytorch/pytorch/issues/9025", "id": 336943252, "node_id": "MDU6SXNzdWUzMzY5NDMyNTI=", "number": 9025, "title": "[feature request] Allow embedding to use not only the last axis", "user": {"login": "arogozhnikov", "id": 6318811, "node_id": "MDQ6VXNlcjYzMTg4MTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6318811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arogozhnikov", "html_url": "https://github.com/arogozhnikov", "followers_url": "https://api.github.com/users/arogozhnikov/followers", "following_url": "https://api.github.com/users/arogozhnikov/following{/other_user}", "gists_url": "https://api.github.com/users/arogozhnikov/gists{/gist_id}", "starred_url": "https://api.github.com/users/arogozhnikov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arogozhnikov/subscriptions", "organizations_url": "https://api.github.com/users/arogozhnikov/orgs", "repos_url": "https://api.github.com/users/arogozhnikov/repos", "events_url": "https://api.github.com/users/arogozhnikov/events{/privacy}", "received_events_url": "https://api.github.com/users/arogozhnikov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-29T10:14:42Z", "updated_at": "2018-07-02T17:33:40Z", "closed_at": null, "author_association": "NONE", "body_html": "<h2>Issue description</h2>\n<p><code>torch.nn.Embedding</code> can provide one more argument - axis to use as an 'embedding dimensionality'</p>\n<p>This will allow using <code>nn.Embedding</code> in sequential models.</p>\n<h2>Code example</h2>\n<p>The following code is expected to work</p>\n<pre><code>m = torch.nn.Sequential(\n    torch.nn.Embedding(num_embeddings=26, embedding_dim=512, added_dim=1), \n    torch.nn.Conv1d(512, 512, kernel_size=3, padding=1),\n)\n</code></pre>\n<p>New argument <code>added_dim=1</code> should be <code>-1</code> by default to agree with previous behavior.</p>", "body_text": "Issue description\ntorch.nn.Embedding can provide one more argument - axis to use as an 'embedding dimensionality'\nThis will allow using nn.Embedding in sequential models.\nCode example\nThe following code is expected to work\nm = torch.nn.Sequential(\n    torch.nn.Embedding(num_embeddings=26, embedding_dim=512, added_dim=1), \n    torch.nn.Conv1d(512, 512, kernel_size=3, padding=1),\n)\n\nNew argument added_dim=1 should be -1 by default to agree with previous behavior.", "body": "## Issue description\r\n\r\n`torch.nn.Embedding` can provide one more argument - axis to use as an 'embedding dimensionality'\r\n\r\nThis will allow using `nn.Embedding` in sequential models.\r\n\r\n## Code example\r\n\r\nThe following code is expected to work \r\n```\r\nm = torch.nn.Sequential(\r\n    torch.nn.Embedding(num_embeddings=26, embedding_dim=512, added_dim=1), \r\n    torch.nn.Conv1d(512, 512, kernel_size=3, padding=1),\r\n)\r\n```\r\n\r\nNew argument `added_dim=1` should be `-1` by default to agree with previous behavior.\r\n\r\n"}