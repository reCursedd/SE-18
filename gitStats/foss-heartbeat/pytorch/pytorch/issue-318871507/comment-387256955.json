{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/387256955", "html_url": "https://github.com/pytorch/pytorch/issues/7093#issuecomment-387256955", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7093", "id": 387256955, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzI1Njk1NQ==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-08T01:34:55Z", "updated_at": "2018-05-08T01:34:55Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9083746\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/avmgithub\">@avmgithub</a> Yeah, this is a feature which \"accidentally works sometimes\" and you have hit a place where it doesn't work. The essential problem is that we install an exception handler to throw exceptions from C code, but this requires the C frames to be laid out a way such that the unwinder that PyTorch is built with to be able understand it. If the C frames are compiled by a different compiler than the stdc++ runtime PyTorch is linked with, the unwinder doesn't necessarily know how to deal with it.</p>\n<p>I'd recommend disabling this test on PPC for now.</p>", "body_text": "@avmgithub Yeah, this is a feature which \"accidentally works sometimes\" and you have hit a place where it doesn't work. The essential problem is that we install an exception handler to throw exceptions from C code, but this requires the C frames to be laid out a way such that the unwinder that PyTorch is built with to be able understand it. If the C frames are compiled by a different compiler than the stdc++ runtime PyTorch is linked with, the unwinder doesn't necessarily know how to deal with it.\nI'd recommend disabling this test on PPC for now.", "body": "@avmgithub Yeah, this is a feature which \"accidentally works sometimes\" and you have hit a place where it doesn't work. The essential problem is that we install an exception handler to throw exceptions from C code, but this requires the C frames to be laid out a way such that the unwinder that PyTorch is built with to be able understand it. If the C frames are compiled by a different compiler than the stdc++ runtime PyTorch is linked with, the unwinder doesn't necessarily know how to deal with it.\r\n\r\nI'd recommend disabling this test on PPC for now."}