{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4525", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4525/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4525/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4525/events", "html_url": "https://github.com/pytorch/pytorch/pull/4525", "id": 286587797, "node_id": "MDExOlB1bGxSZXF1ZXN0MTYxNTMyNDU2", "number": 4525, "title": "Start framework for kl_divergence(-,-) in torch.distributions", "user": {"login": "fritzo", "id": 648532, "node_id": "MDQ6VXNlcjY0ODUzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/648532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzo", "html_url": "https://github.com/fritzo", "followers_url": "https://api.github.com/users/fritzo/followers", "following_url": "https://api.github.com/users/fritzo/following{/other_user}", "gists_url": "https://api.github.com/users/fritzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzo/subscriptions", "organizations_url": "https://api.github.com/users/fritzo/orgs", "repos_url": "https://api.github.com/users/fritzo/repos", "events_url": "https://api.github.com/users/fritzo/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-07T18:13:57Z", "updated_at": "2018-11-23T15:37:56Z", "closed_at": "2018-01-09T08:45:00Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/4525", "html_url": "https://github.com/pytorch/pytorch/pull/4525", "diff_url": "https://github.com/pytorch/pytorch/pull/4525.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/4525.patch"}, "body_html": "<p>This adds a generic function <code>kl_divergence(-,-)</code> and a registration decorator</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-en\">@register_kl</span>(Normal, Normal)\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">kl_normal_normal</span>(<span class=\"pl-smi\">p</span>, <span class=\"pl-smi\">q</span>):\n    <span class=\"pl-c1\">...</span></pre></div>\n<p>such that <code>kl_divergence(Normal(0, 1), Normal(0, 2))</code> will call <code>_kl_normal_normal()</code> under the hood.</p>\n<p>The implementation has amortized constant lookup time, including failed lookup for <code>NotImplementedError</code>. It is important to keep this cheap so that generic inference algorithms can</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">try</span>:\n    kl <span class=\"pl-k\">=</span> kl_divergence(p, q):\n<span class=\"pl-k\">except</span> <span class=\"pl-c1\">NotImplementedError</span>:\n    <span class=\"pl-c1\">...</span>use an approximate method<span class=\"pl-c1\">...</span></pre></div>\n<p>This also adds a generic <code>TestKL</code> to which test cases can be added.</p>\n<p>Addresses <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"284280458\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/4330\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/4330/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/4330\">#4330</a>, <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"282768872\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/probtorch/pytorch/issues/37\" data-hovercard-type=\"issue\" data-hovercard-url=\"/probtorch/pytorch/issues/37/hovercard\" href=\"https://github.com/probtorch/pytorch/issues/37\">probtorch#37</a></p>", "body_text": "This adds a generic function kl_divergence(-,-) and a registration decorator\n@register_kl(Normal, Normal)\ndef kl_normal_normal(p, q):\n    ...\nsuch that kl_divergence(Normal(0, 1), Normal(0, 2)) will call _kl_normal_normal() under the hood.\nThe implementation has amortized constant lookup time, including failed lookup for NotImplementedError. It is important to keep this cheap so that generic inference algorithms can\ntry:\n    kl = kl_divergence(p, q):\nexcept NotImplementedError:\n    ...use an approximate method...\nThis also adds a generic TestKL to which test cases can be added.\nAddresses #4330, probtorch#37", "body": "This adds a generic function `kl_divergence(-,-)` and a registration decorator\r\n```py\r\n@register_kl(Normal, Normal)\r\ndef kl_normal_normal(p, q):\r\n    ...\r\n```\r\nsuch that `kl_divergence(Normal(0, 1), Normal(0, 2))` will call `_kl_normal_normal()` under the hood.\r\n\r\nThe implementation has amortized constant lookup time, including failed lookup for `NotImplementedError`. It is important to keep this cheap so that generic inference algorithms can\r\n```py\r\ntry:\r\n    kl = kl_divergence(p, q):\r\nexcept NotImplementedError:\r\n    ...use an approximate method...\r\n```\r\n\r\nThis also adds a generic `TestKL` to which test cases can be added.\r\n\r\nAddresses #4330, probtorch#37\r\n  \r\n  \r\n  \r\n  "}