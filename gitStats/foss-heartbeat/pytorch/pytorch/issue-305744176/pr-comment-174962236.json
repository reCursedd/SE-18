{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/174962236", "pull_request_review_id": 104413977, "id": 174962236, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDk2MjIzNg==", "diff_hunk": "@@ -0,0 +1,24 @@\n+import torch\n+from torch.autograd import Variable\n+import torch.onnx\n+\n+# This file contains pure pytorch operators that should eventually\n+# find a home outside of the onnx/ directory\n+\n+\n+def _size_as_variable(g, input):\n+    return g.op('Shape', input)\n+\n+\n+@torch.onnx.symbolic_override(_size_as_variable)\n+def size_as_variable(var):\n+    return Variable(torch.LongTensor(tuple(var.size())))\n+\n+\n+def _view_from_variable_shape(g, input, shape):\n+    return g.op('Reshape', input, shape)\n+\n+\n+@torch.onnx.symbolic_override(_view_from_variable_shape)\n+def view_from_variable_shape(var, size_var):\n+    return var.view(size_var.tolist())", "path": "torch/onnx/operators.py", "position": null, "original_position": 24, "commit_id": "2d6fcfa1b0d40de0fa8aea5668d462aaf4e2df85", "original_commit_id": "fe28c913fb9d680ad992e185a25cb8264122c4f7", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "`reshape` (instead of `view`) wil work on non-contiguous tensors (but may make copy in some cases). Not sure about the semantics you want.", "created_at": "2018-03-15T23:27:10Z", "updated_at": "2018-11-23T15:40:49Z", "html_url": "https://github.com/pytorch/pytorch/pull/5824#discussion_r174962236", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5824", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/174962236"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5824#discussion_r174962236"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5824"}}, "body_html": "<p><code>reshape</code> (instead of <code>view</code>) wil work on non-contiguous tensors (but may make copy in some cases). Not sure about the semantics you want.</p>", "body_text": "reshape (instead of view) wil work on non-contiguous tensors (but may make copy in some cases). Not sure about the semantics you want."}