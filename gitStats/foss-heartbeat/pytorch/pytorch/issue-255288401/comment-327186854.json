{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/327186854", "html_url": "https://github.com/pytorch/pytorch/issues/2628#issuecomment-327186854", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2628", "id": 327186854, "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzE4Njg1NA==", "user": {"login": "alykhantejani", "id": 687194, "node_id": "MDQ6VXNlcjY4NzE5NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/687194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alykhantejani", "html_url": "https://github.com/alykhantejani", "followers_url": "https://api.github.com/users/alykhantejani/followers", "following_url": "https://api.github.com/users/alykhantejani/following{/other_user}", "gists_url": "https://api.github.com/users/alykhantejani/gists{/gist_id}", "starred_url": "https://api.github.com/users/alykhantejani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alykhantejani/subscriptions", "organizations_url": "https://api.github.com/users/alykhantejani/orgs", "repos_url": "https://api.github.com/users/alykhantejani/repos", "events_url": "https://api.github.com/users/alykhantejani/events{/privacy}", "received_events_url": "https://api.github.com/users/alykhantejani/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-05T14:09:08Z", "updated_at": "2017-09-05T14:09:08Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I'm not sure the size checks are necessary as we have a single functional interface for batch_norm and these checks aren't performed there (as we don't know if it's 1D, 2D or 3D).  I think we should remove the dead code in BatchNorm{1-2-3}d that overrides <code>_check_input_dim</code> which now never gets called (sorry I missed this in my earlier PR).</p>\n<p>I'm inclined towards keeping the modules and functional interface as aligned as possible, so maybe just having a single BatchNorm module would be nice which is similar to how it's done in TF and Keras.</p>\n<p>After discussing it a bit with <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9110200\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fmassa\">@fmassa</a> perhaps we can keep the classes for backwards compatibility and add deprecation warning inside BatchNorm{1-2-3}d saying the user should use <code>BatchNorm</code> instead, we could/should also remove the docs for BatchNorm{1-2-3}d and just have docs for <code>BatchNorm</code> saying it accepts different input shapes.</p>\n<p>Happy to send a PR for these changes, WDYT?</p>", "body_text": "I'm not sure the size checks are necessary as we have a single functional interface for batch_norm and these checks aren't performed there (as we don't know if it's 1D, 2D or 3D).  I think we should remove the dead code in BatchNorm{1-2-3}d that overrides _check_input_dim which now never gets called (sorry I missed this in my earlier PR).\nI'm inclined towards keeping the modules and functional interface as aligned as possible, so maybe just having a single BatchNorm module would be nice which is similar to how it's done in TF and Keras.\nAfter discussing it a bit with @fmassa perhaps we can keep the classes for backwards compatibility and add deprecation warning inside BatchNorm{1-2-3}d saying the user should use BatchNorm instead, we could/should also remove the docs for BatchNorm{1-2-3}d and just have docs for BatchNorm saying it accepts different input shapes.\nHappy to send a PR for these changes, WDYT?", "body": "I'm not sure the size checks are necessary as we have a single functional interface for batch_norm and these checks aren't performed there (as we don't know if it's 1D, 2D or 3D).  I think we should remove the dead code in BatchNorm{1-2-3}d that overrides `_check_input_dim` which now never gets called (sorry I missed this in my earlier PR).\r\n\r\nI'm inclined towards keeping the modules and functional interface as aligned as possible, so maybe just having a single BatchNorm module would be nice which is similar to how it's done in TF and Keras.\r\n\r\nAfter discussing it a bit with @fmassa perhaps we can keep the classes for backwards compatibility and add deprecation warning inside BatchNorm{1-2-3}d saying the user should use `BatchNorm` instead, we could/should also remove the docs for BatchNorm{1-2-3}d and just have docs for `BatchNorm` saying it accepts different input shapes. \r\n\r\nHappy to send a PR for these changes, WDYT?\r\n"}