{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/274272260", "html_url": "https://github.com/pytorch/pytorch/issues/517#issuecomment-274272260", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/517", "id": 274272260, "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDI3MjI2MA==", "user": {"login": "shawnjhenry", "id": 9464836, "node_id": "MDQ6VXNlcjk0NjQ4MzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9464836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shawnjhenry", "html_url": "https://github.com/shawnjhenry", "followers_url": "https://api.github.com/users/shawnjhenry/followers", "following_url": "https://api.github.com/users/shawnjhenry/following{/other_user}", "gists_url": "https://api.github.com/users/shawnjhenry/gists{/gist_id}", "starred_url": "https://api.github.com/users/shawnjhenry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shawnjhenry/subscriptions", "organizations_url": "https://api.github.com/users/shawnjhenry/orgs", "repos_url": "https://api.github.com/users/shawnjhenry/repos", "events_url": "https://api.github.com/users/shawnjhenry/events{/privacy}", "received_events_url": "https://api.github.com/users/shawnjhenry/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-21T16:35:58Z", "updated_at": "2017-01-21T16:35:58Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1455742\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/braingineer\">@braingineer</a> In case you were wondering, sentinel masking <em>is</em> possible in PyTorch: you can do:</p>\n<pre><code>mask = torch.ne(tensor, sentinel)\n</code></pre>\n<p>which returns a <code>ByteTensor</code> of the same size as <code>tensor</code> with a 1 in the positions where the comparison is true.</p>", "body_text": "@braingineer In case you were wondering, sentinel masking is possible in PyTorch: you can do:\nmask = torch.ne(tensor, sentinel)\n\nwhich returns a ByteTensor of the same size as tensor with a 1 in the positions where the comparison is true.", "body": "@braingineer In case you were wondering, sentinel masking *is* possible in PyTorch: you can do:\r\n``` \r\nmask = torch.ne(tensor, sentinel)\r\n```\r\nwhich returns a `ByteTensor` of the same size as `tensor` with a 1 in the positions where the comparison is true. "}