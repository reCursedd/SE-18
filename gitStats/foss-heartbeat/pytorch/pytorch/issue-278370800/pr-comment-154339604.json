{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/154339604", "pull_request_review_id": 80488022, "id": 154339604, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDMzOTYwNA==", "diff_hunk": "@@ -135,6 +143,30 @@ void ${kernelName}(IndexType totalElements, ${formals}) {\n }\n )\");\n \n+auto cpu_compilation_unit_template = CodeTemplate(R\"(\n+#include <cstddef>\n+#include <math.h>\n+#include <iostream>\n+${type_declarations}\n+\n+static void ${kernelName}_kernel(IndexType totalElements, ${formals}) {\n+  // TODO: parallelize with something reasonable\n+  for (IndexType linearIndex = 0;\n+        linearIndex < totalElements;\n+        linearIndex += 1) {\n+      // Convert `linearIndex` into an offset of tensor:\n+      ${tensorOffsets}\n+      // calculate the results\n+      ${kernelBody}\n+    }\n+}\n+\n+extern \"C\"", "path": "torch/csrc/jit/fusion_compiler.cpp", "position": 65, "original_position": 65, "commit_id": "4621e76e17213ccfc8c8571354630f6a24790f75", "original_commit_id": "23487092097099756de8ef32e1e20823fffb4a83", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "I wonder if it's more portable to generate C code and call a C compiler on it (e.g., you don't  have to worry about linking against libstdc++). Are we using/plan to use C++ features in a nontrivial way?", "created_at": "2017-12-01T13:01:36Z", "updated_at": "2018-11-23T15:36:59Z", "html_url": "https://github.com/pytorch/pytorch/pull/3961#discussion_r154339604", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3961", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/154339604"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3961#discussion_r154339604"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3961"}}, "body_html": "<p>I wonder if it's more portable to generate C code and call a C compiler on it (e.g., you don't  have to worry about linking against libstdc++). Are we using/plan to use C++ features in a nontrivial way?</p>", "body_text": "I wonder if it's more portable to generate C code and call a C compiler on it (e.g., you don't  have to worry about linking against libstdc++). Are we using/plan to use C++ features in a nontrivial way?"}