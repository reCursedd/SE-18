{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/168864073", "pull_request_review_id": 97308978, "id": 168864073, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODg2NDA3Mw==", "diff_hunk": "@@ -0,0 +1,24 @@\n+#pragma once\n+\n+#include <Python.h>\n+#include \"ATen/ATen.h\"\n+\n+const int DTYPE_NAME_LEN = 64;\n+\n+struct THPDtype {\n+  PyObject_HEAD\n+  at::Type *cdata;\n+  char name[DTYPE_NAME_LEN + 1];\n+  bool is_cuda;\n+  bool is_sparse;\n+};\n+\n+extern PyObject *THPDtypeClass;", "path": "torch/csrc/Dtype.h", "position": null, "original_position": 16, "commit_id": "5709cb6ebc6aaa48dca67dc0a4352d23a5e648b5", "original_commit_id": "8f71ec62fed1ee845e2699accdfe583fa3b1cbbb", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "This seems unnecessary to me. Use `extern PyTypeObject* THPDtypeType` instead. Then you don't have to worry about initializing it.\r\n\r\nThe reason we use the separate class/Type pattern in other places is because we subclass `_VariableBase` with `Variable` in Python, but want to construct the subclass from C++. Since there's no subclass of THPDtypeType here it doesn't matter.", "created_at": "2018-02-16T20:36:18Z", "updated_at": "2018-11-23T15:39:41Z", "html_url": "https://github.com/pytorch/pytorch/pull/5245#discussion_r168864073", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5245", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/168864073"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5245#discussion_r168864073"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5245"}}, "body_html": "<p>This seems unnecessary to me. Use <code>extern PyTypeObject* THPDtypeType</code> instead. Then you don't have to worry about initializing it.</p>\n<p>The reason we use the separate class/Type pattern in other places is because we subclass <code>_VariableBase</code> with <code>Variable</code> in Python, but want to construct the subclass from C++. Since there's no subclass of THPDtypeType here it doesn't matter.</p>", "body_text": "This seems unnecessary to me. Use extern PyTypeObject* THPDtypeType instead. Then you don't have to worry about initializing it.\nThe reason we use the separate class/Type pattern in other places is because we subclass _VariableBase with Variable in Python, but want to construct the subclass from C++. Since there's no subclass of THPDtypeType here it doesn't matter."}