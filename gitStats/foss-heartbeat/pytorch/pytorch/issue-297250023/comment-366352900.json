{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/366352900", "html_url": "https://github.com/pytorch/pytorch/pull/5245#issuecomment-366352900", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5245", "id": 366352900, "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjM1MjkwMA==", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-16T20:43:18Z", "updated_at": "2018-02-16T20:43:18Z", "author_association": "CONTRIBUTOR", "body_html": "<p>CC <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a>: this now supports Type as parameters to native functions, which will get turned into dtypes at the python level (assuming the function is bound).</p>", "body_text": "CC @ezyang: this now supports Type as parameters to native functions, which will get turned into dtypes at the python level (assuming the function is bound).", "body": "CC @ezyang: this now supports Type as parameters to native functions, which will get turned into dtypes at the python level (assuming the function is bound)."}