{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5245", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5245/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5245/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5245/events", "html_url": "https://github.com/pytorch/pytorch/pull/5245", "id": 297250023, "node_id": "MDExOlB1bGxSZXF1ZXN0MTY5MjI1NjY5", "number": 5245, "title": "Add numpy-style dtypes to Variable factories.", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-02-14T21:23:29Z", "updated_at": "2018-11-23T15:39:41Z", "closed_at": "2018-02-20T16:04:14Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/5245", "html_url": "https://github.com/pytorch/pytorch/pull/5245", "diff_url": "https://github.com/pytorch/pytorch/pull/5245.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/5245.patch"}, "body_html": "<ol>\n<li>\n<p>Add numpy-style dtypes corresponding to torch tensor types.  These are:<br>\ntorch.float16, torch.float32, torch.float64, torch.uint8, torch.int8, torch.int16, torch.int32, torch.int64<br>\nas well as torch.cuda, torch.sparse, and torch.cuda.sparse equivalents.</p>\n</li>\n<li>\n<p>Adds \"legacy\" names for the above dtypes that correspond more closely to existing tensor names.  These are:<br>\ntorch.half, torch.float, torch.double, torch.short, torch.int, torch.long.<br>\ntorch.byte and torch.char don't exist because they either don't match numpy semantics or differ on different architectures.</p>\n</li>\n<li>\n<p>Adds a \"dtype\" parameter to Variable factories (e.g. zeros, ones) that allows the user to specify the type without changing the default tensor type.</p>\n</li>\n<li>\n<p>Adds a \"dtype\" getter to Variables that return the canonical dtype from 1)</p>\n</li>\n</ol>\n<p>This PR is missing the following useful features that should be added in the future:<br>\nA) We only add the \"dtype\" parameter to auto-generated factories; hand-written factories like in tensor_new.cpp don't support this yet.</p>\n<p>B) We don't allow type conversions to use dtypes; that should be added to type(param) or a new function.</p>\n<p>C) We don't yet have a \"device\" parameter for these factories; right now, they will only create Variables on the default device.</p>", "body_text": "Add numpy-style dtypes corresponding to torch tensor types.  These are:\ntorch.float16, torch.float32, torch.float64, torch.uint8, torch.int8, torch.int16, torch.int32, torch.int64\nas well as torch.cuda, torch.sparse, and torch.cuda.sparse equivalents.\n\n\nAdds \"legacy\" names for the above dtypes that correspond more closely to existing tensor names.  These are:\ntorch.half, torch.float, torch.double, torch.short, torch.int, torch.long.\ntorch.byte and torch.char don't exist because they either don't match numpy semantics or differ on different architectures.\n\n\nAdds a \"dtype\" parameter to Variable factories (e.g. zeros, ones) that allows the user to specify the type without changing the default tensor type.\n\n\nAdds a \"dtype\" getter to Variables that return the canonical dtype from 1)\n\n\nThis PR is missing the following useful features that should be added in the future:\nA) We only add the \"dtype\" parameter to auto-generated factories; hand-written factories like in tensor_new.cpp don't support this yet.\nB) We don't allow type conversions to use dtypes; that should be added to type(param) or a new function.\nC) We don't yet have a \"device\" parameter for these factories; right now, they will only create Variables on the default device.", "body": "1) Add numpy-style dtypes corresponding to torch tensor types.  These are:\r\ntorch.float16, torch.float32, torch.float64, torch.uint8, torch.int8, torch.int16, torch.int32, torch.int64\r\nas well as torch.cuda, torch.sparse, and torch.cuda.sparse equivalents.\r\n\r\n2) Adds \"legacy\" names for the above dtypes that correspond more closely to existing tensor names.  These are:\r\ntorch.half, torch.float, torch.double, torch.short, torch.int, torch.long.\r\ntorch.byte and torch.char don't exist because they either don't match numpy semantics or differ on different architectures.\r\n\r\n3) Adds a \"dtype\" parameter to Variable factories (e.g. zeros, ones) that allows the user to specify the type without changing the default tensor type.\r\n\r\n4) Adds a \"dtype\" getter to Variables that return the canonical dtype from 1)\r\n\r\nThis PR is missing the following useful features that should be added in the future:\r\nA) We only add the \"dtype\" parameter to auto-generated factories; hand-written factories like in tensor_new.cpp don't support this yet.\r\n\r\nB) We don't allow type conversions to use dtypes; that should be added to type(param) or a new function.\r\n\r\nC) We don't yet have a \"device\" parameter for these factories; right now, they will only create Variables on the default device."}