{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/373712678", "html_url": "https://github.com/pytorch/pytorch/issues/5825#issuecomment-373712678", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5825", "id": 373712678, "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzcxMjY3OA==", "user": {"login": "vadimkantorov", "id": 1041752, "node_id": "MDQ6VXNlcjEwNDE3NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1041752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimkantorov", "html_url": "https://github.com/vadimkantorov", "followers_url": "https://api.github.com/users/vadimkantorov/followers", "following_url": "https://api.github.com/users/vadimkantorov/following{/other_user}", "gists_url": "https://api.github.com/users/vadimkantorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimkantorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimkantorov/subscriptions", "organizations_url": "https://api.github.com/users/vadimkantorov/orgs", "repos_url": "https://api.github.com/users/vadimkantorov/repos", "events_url": "https://api.github.com/users/vadimkantorov/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimkantorov/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-16T13:27:11Z", "updated_at": "2018-03-16T13:27:11Z", "author_association": "NONE", "body_html": "<p><code>normalize</code> already works on 1-dim, it's just that default <code>dim</code> is off for 1-dim tensors. making <code>dim = 0</code> or <code>dim=-1</code> for 1-dim tensors would solve this particular case.</p>\n<p>IMO , it makes less confusion when things work on 1-dim (good for quick testing purposes) by default compared to when they don't, even if such support is added gradually (like it happened for negative dims), it saves boiler-plate.</p>", "body_text": "normalize already works on 1-dim, it's just that default dim is off for 1-dim tensors. making dim = 0 or dim=-1 for 1-dim tensors would solve this particular case.\nIMO , it makes less confusion when things work on 1-dim (good for quick testing purposes) by default compared to when they don't, even if such support is added gradually (like it happened for negative dims), it saves boiler-plate.", "body": "`normalize` already works on 1-dim, it's just that default `dim` is off for 1-dim tensors. making `dim = 0` or `dim=-1` for 1-dim tensors would solve this particular case.\r\n\r\nIMO , it makes less confusion when things work on 1-dim (good for quick testing purposes) by default compared to when they don't, even if such support is added gradually (like it happened for negative dims), it saves boiler-plate."}