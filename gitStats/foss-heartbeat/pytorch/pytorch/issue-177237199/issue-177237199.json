{"url": "https://api.github.com/repos/pytorch/pytorch/issues/32", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/32/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/32/events", "html_url": "https://github.com/pytorch/pytorch/issues/32", "id": 177237199, "node_id": "MDU6SXNzdWUxNzcyMzcxOTk=", "number": 32, "title": "Add information about non-differentiable points to grad tests", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131849, "node_id": "MDU6TGFiZWw0MjQxMzE4NDk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-15T17:29:06Z", "updated_at": "2016-10-16T07:49:33Z", "closed_at": "2016-10-16T07:49:33Z", "author_association": "MEMBER", "body_html": "<pre><code>FAIL: test_ReLU (__main__.TestNN)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test_nn.py\", line 287, in &lt;lambda&gt;\n    setattr(TestNN, test_name, lambda self,test=test: test(self))\n  File \"/data/users/soumith/pytorch/test/common_nn.py\", line 533, in __call__\n    self._do_test(test_case, module, input)\n  File \"test_nn.py\", line 33, in _do_test\n    test_case.check_jacobian(module, input, self.jacobian_input)\n  File \"/data/users/soumith/pytorch/test/common_nn.py\", line 433, in check_jacobian\n    PRECISION\nAssertionError: 0.20518362972049153 not less than or equal to 1e-05\n\nERROR: test_maskedSelect (__main__.TestTorch)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test_torch.py\", line 1887, in test_maskedSelect\n    self.assertEqual(dst, torch.Tensor(dst2), 0)\n  File \"/data/users/soumith/pytorch/test/common.py\", line 66, in assertEqual\n    max_err = max(max_err, abs(x[index] - y[index]))\nTypeError: bad operand type for abs(): 'DoubleTensor'\n</code></pre>", "body_text": "FAIL: test_ReLU (__main__.TestNN)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test_nn.py\", line 287, in <lambda>\n    setattr(TestNN, test_name, lambda self,test=test: test(self))\n  File \"/data/users/soumith/pytorch/test/common_nn.py\", line 533, in __call__\n    self._do_test(test_case, module, input)\n  File \"test_nn.py\", line 33, in _do_test\n    test_case.check_jacobian(module, input, self.jacobian_input)\n  File \"/data/users/soumith/pytorch/test/common_nn.py\", line 433, in check_jacobian\n    PRECISION\nAssertionError: 0.20518362972049153 not less than or equal to 1e-05\n\nERROR: test_maskedSelect (__main__.TestTorch)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test_torch.py\", line 1887, in test_maskedSelect\n    self.assertEqual(dst, torch.Tensor(dst2), 0)\n  File \"/data/users/soumith/pytorch/test/common.py\", line 66, in assertEqual\n    max_err = max(max_err, abs(x[index] - y[index]))\nTypeError: bad operand type for abs(): 'DoubleTensor'", "body": "```\nFAIL: test_ReLU (__main__.TestNN)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test_nn.py\", line 287, in <lambda>\n    setattr(TestNN, test_name, lambda self,test=test: test(self))\n  File \"/data/users/soumith/pytorch/test/common_nn.py\", line 533, in __call__\n    self._do_test(test_case, module, input)\n  File \"test_nn.py\", line 33, in _do_test\n    test_case.check_jacobian(module, input, self.jacobian_input)\n  File \"/data/users/soumith/pytorch/test/common_nn.py\", line 433, in check_jacobian\n    PRECISION\nAssertionError: 0.20518362972049153 not less than or equal to 1e-05\n\nERROR: test_maskedSelect (__main__.TestTorch)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test_torch.py\", line 1887, in test_maskedSelect\n    self.assertEqual(dst, torch.Tensor(dst2), 0)\n  File \"/data/users/soumith/pytorch/test/common.py\", line 66, in assertEqual\n    max_err = max(max_err, abs(x[index] - y[index]))\nTypeError: bad operand type for abs(): 'DoubleTensor'\n```\n"}