{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/390156163", "html_url": "https://github.com/pytorch/pytorch/issues/7645#issuecomment-390156163", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7645", "id": 390156163, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDE1NjE2Mw==", "user": {"login": "ClementPinard", "id": 4380424, "node_id": "MDQ6VXNlcjQzODA0MjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4380424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ClementPinard", "html_url": "https://github.com/ClementPinard", "followers_url": "https://api.github.com/users/ClementPinard/followers", "following_url": "https://api.github.com/users/ClementPinard/following{/other_user}", "gists_url": "https://api.github.com/users/ClementPinard/gists{/gist_id}", "starred_url": "https://api.github.com/users/ClementPinard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ClementPinard/subscriptions", "organizations_url": "https://api.github.com/users/ClementPinard/orgs", "repos_url": "https://api.github.com/users/ClementPinard/repos", "events_url": "https://api.github.com/users/ClementPinard/events{/privacy}", "received_events_url": "https://api.github.com/users/ClementPinard/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-18T09:49:34Z", "updated_at": "2018-05-18T10:08:03Z", "author_association": "NONE", "body_html": "<p>+1 for NaN -&gt; NaN,   <em>\"abyssus abyssum invocat\"</em><br>\nWe could also add an optional mask which would be a ByteTensor of the same size, specifying whether or not the considered pixel is used for the pooling, that could be used for any kind of pulling. An <code>ignore_nan</code> functionality would then be to provide the mask <code>input != input</code></p>", "body_text": "+1 for NaN -> NaN,   \"abyssus abyssum invocat\"\nWe could also add an optional mask which would be a ByteTensor of the same size, specifying whether or not the considered pixel is used for the pooling, that could be used for any kind of pulling. An ignore_nan functionality would then be to provide the mask input != input", "body": "+1 for NaN -> NaN,   _\"abyssus abyssum invocat\"_ \r\nWe could also add an optional mask which would be a ByteTensor of the same size, specifying whether or not the considered pixel is used for the pooling, that could be used for any kind of pulling. An `ignore_nan` functionality would then be to provide the mask `input != input`"}