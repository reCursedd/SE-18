{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/423154816", "html_url": "https://github.com/pytorch/pytorch/issues/5301#issuecomment-423154816", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5301", "id": 423154816, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzE1NDgxNg==", "user": {"login": "Beastmaster", "id": 5296304, "node_id": "MDQ6VXNlcjUyOTYzMDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/5296304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Beastmaster", "html_url": "https://github.com/Beastmaster", "followers_url": "https://api.github.com/users/Beastmaster/followers", "following_url": "https://api.github.com/users/Beastmaster/following{/other_user}", "gists_url": "https://api.github.com/users/Beastmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/Beastmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Beastmaster/subscriptions", "organizations_url": "https://api.github.com/users/Beastmaster/orgs", "repos_url": "https://api.github.com/users/Beastmaster/repos", "events_url": "https://api.github.com/users/Beastmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/Beastmaster/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-20T11:52:00Z", "updated_at": "2018-09-20T11:52:28Z", "author_association": "NONE", "body_html": "<p>I got an ugly solution.</p>\n<pre><code>def create_dataloader():\n      # some function to create a dataloader\n      return dataloader\n\n# in main function\ndataloader = create_dataloader()\ndataloader_iter = iter(dataloader)\nfor step in range(len(dataloader)):\n  while(true):\n     try:\n        data = next(dataloader_iter)\n     except:\n        dataloader = create_dataloader()\n        dataloader_iter = iter(dataloader)\n\n   #perform training\n</code></pre>", "body_text": "I got an ugly solution.\ndef create_dataloader():\n      # some function to create a dataloader\n      return dataloader\n\n# in main function\ndataloader = create_dataloader()\ndataloader_iter = iter(dataloader)\nfor step in range(len(dataloader)):\n  while(true):\n     try:\n        data = next(dataloader_iter)\n     except:\n        dataloader = create_dataloader()\n        dataloader_iter = iter(dataloader)\n\n   #perform training", "body": "I got an ugly solution. \r\n```\r\ndef create_dataloader():\r\n      # some function to create a dataloader\r\n      return dataloader\r\n\r\n# in main function\r\ndataloader = create_dataloader()\r\ndataloader_iter = iter(dataloader)\r\nfor step in range(len(dataloader)):\r\n  while(true):\r\n     try:\r\n        data = next(dataloader_iter)\r\n     except:\r\n        dataloader = create_dataloader()\r\n        dataloader_iter = iter(dataloader)\r\n\r\n   #perform training\r\n```\r\n\r\n"}