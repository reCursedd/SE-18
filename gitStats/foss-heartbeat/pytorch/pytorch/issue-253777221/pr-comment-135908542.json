{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/135908542", "pull_request_review_id": 59368240, "id": 135908542, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTkwODU0Mg==", "diff_hunk": "@@ -0,0 +1,219 @@\n+#pragma once\n+\n+#include \"torch/csrc/jit/ir.h\"\n+#include \"torch/csrc/jit/assert.h\"\n+#include \"torch/csrc/autograd/function_hook.h\"\n+#include \"torch/csrc/autograd/variable.h\"\n+#include \"torch/csrc/jit/init_pass.h\"\n+\n+#include <memory>\n+#include <mutex>\n+#include <vector>\n+#include <iostream>\n+#include <cstdint>\n+#include <unordered_map>\n+\n+\n+namespace torch { namespace jit { namespace tracer {\n+\n+using torch::autograd::Variable;\n+using variable_list = std::vector<std::shared_ptr<Variable>>;\n+\n+// TracingState tracks the necessary state when we are tracing the execution of\n+// autograd code; most importantly, it holds a reference to the actual IR\n+// graph which we are recording the trace to.\n+//\n+// The liveness of a TracingState is expected to be a superset of the region\n+// of code being traced; in particular, Variables do not keep a TracingState\n+// live.  Instead, they hold weak pointers to TracingState, to prevent leaks\n+// from arising when a variable that participated in a trace outlives the\n+// actual trace itself.\n+//\n+// Multi-threaded tracing is NOT yet supported: it is better to think of\n+// tracing as a thread local affair, where we enter and then exit\n+// a tracing region.  This not only coincides with how Python code\n+// is run (GIL = single-threaded), but also how single Functions in\n+// an autograd closure are applied.  Note that the execution of an\n+// *entire* autograd closure is multithreaded, in which case extra\n+// locking is necessary.", "path": "torch/csrc/jit/tracer.h", "position": null, "original_position": 38, "commit_id": "9d9a63c2860b98e0b323b578af23c4a4a00796ab", "original_commit_id": "652c70025e6aca99d828240869277bb2364799e3", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "This comment is now out of date", "created_at": "2017-08-29T20:52:29Z", "updated_at": "2018-11-23T15:34:30Z", "html_url": "https://github.com/pytorch/pytorch/pull/2565#discussion_r135908542", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2565", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/135908542"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2565#discussion_r135908542"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2565"}}, "body_html": "<p>This comment is now out of date</p>", "body_text": "This comment is now out of date"}