{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/135902519", "pull_request_review_id": 59368240, "id": 135902519, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTkwMjUxOQ==", "diff_hunk": "@@ -0,0 +1,350 @@\n+import torch\n+import torch.jit\n+import torch.nn as nn\n+import unittest\n+from torch.autograd import Variable, Function\n+from common import TestCase, run_tests\n+\n+try:\n+    import torchvision\n+    HAS_TORCHVISION = True\n+except ImportError:\n+    HAS_TORCHVISION = False\n+\n+try:\n+    import toffee\n+    import google.protobuf.text_format\n+    HAS_TOFFEE = True\n+except ImportError:\n+    HAS_TOFFEE = False\n+\n+toffee_only = unittest.skipIf(not HAS_TOFFEE, \"no toffee support library\")\n+skipIfNoTorchVision = unittest.skipIf(not HAS_TORCHVISION, \"no torchvision\")\n+\n+\n+class TestJit(TestCase):\n+    maxDiff = None\n+\n+    def test_simple(self):\n+        x = Variable(torch.Tensor([0.4]), requires_grad=True)\n+        y = Variable(torch.Tensor([0.7]), requires_grad=True)\n+\n+        trace = torch._C._tracer_enter((x, y))\n+        z = torch.sigmoid(torch.tanh(x * (x + y)))\n+        torch._C._tracer_exit((z,))\n+        torch._C._jit_pass_lint(trace)\n+        torch._C._jit_pass_init(trace)\n+        torch._C._jit_pass_lint(trace)\n+        torch._C._jit_pass_fuse(trace)\n+        torch._C._jit_pass_lint(trace)\n+\n+        self.assertExpected(str(trace))\n+\n+    def assertToffeeExpected(self, binary_pb, subname=None):\n+        graph_def = toffee.GraphProto.FromString(binary_pb)\n+        self.assertExpected(google.protobuf.text_format.MessageToString(graph_def, float_format='.15g'), subname)\n+\n+    @toffee_only\n+    def test_export(self):\n+        x = Variable(torch.Tensor([0.4]), requires_grad=True)\n+        y = Variable(torch.Tensor([0.7]), requires_grad=True)\n+\n+        trace = torch._C._tracer_enter((x, y))\n+        z = -torch.sigmoid(torch.tanh(x * (x + y)))\n+        torch._C._tracer_exit((z,))\n+        torch._C._jit_pass_lint(trace)\n+        self.assertToffeeExpected(trace.export())\n+\n+    @toffee_only\n+    def test_export_view(self):\n+        x = Variable(torch.Tensor([0]), requires_grad=True)\n+        trace, _ = torch.jit.record_trace(lambda x: x.view(1, 1), x)\n+        self.assertToffeeExpected(trace.export())\n+\n+    @toffee_only\n+    def test_export_data(self):", "path": "test/test_jit.py", "position": null, "original_position": 65, "commit_id": "9d9a63c2860b98e0b323b578af23c4a4a00796ab", "original_commit_id": "652c70025e6aca99d828240869277bb2364799e3", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Can we put all export tests in a `TestExport` class?", "created_at": "2017-08-29T20:27:38Z", "updated_at": "2018-11-23T15:34:29Z", "html_url": "https://github.com/pytorch/pytorch/pull/2565#discussion_r135902519", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2565", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/135902519"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2565#discussion_r135902519"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2565"}}, "body_html": "<p>Can we put all export tests in a <code>TestExport</code> class?</p>", "body_text": "Can we put all export tests in a TestExport class?"}