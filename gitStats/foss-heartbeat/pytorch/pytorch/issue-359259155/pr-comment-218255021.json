{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/218255021", "pull_request_review_id": 156152340, "id": 218255021, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODI1NTAyMQ==", "diff_hunk": "@@ -22,43 +23,36 @@ torch::detail::enable_if_module_t<T, bool> f(T&& m) {\n   return true;\n }\n \n-TEST_CASE(\"static\") {\n-  SECTION(\"all_of\") {\n-    REQUIRE(torch::all_of<>::value == true);\n-    REQUIRE(torch::all_of<true>::value == true);\n-    REQUIRE(torch::all_of<true, true, true>::value == true);\n-    REQUIRE(torch::all_of<false>::value == false);\n-    REQUIRE(torch::all_of<false, false, false>::value == false);\n-    REQUIRE(torch::all_of<true, true, false>::value == false);\n-  }\n-  SECTION(\"any_of\") {\n-    REQUIRE(torch::any_of<>::value == false);\n-    REQUIRE(torch::any_of<true>::value == true);\n-    REQUIRE(torch::any_of<true, true, true>::value == true);\n-    REQUIRE(torch::any_of<false>::value == false);\n-    REQUIRE(torch::any_of<true, true, false>::value == true);\n-  }\n-  SECTION(\"enable_if_module_t\") {\n-    REQUIRE(f(torch::nn::LinearImpl(1, 2)) == true);\n-    REQUIRE(f(5) == false);\n-  }\n-  SECTION(\"check_not_lvalue_references\") {\n-    REQUIRE(torch::detail::check_not_lvalue_references<int>() == true);\n-    REQUIRE(\n-        torch::detail::check_not_lvalue_references<float, int, char>() == true);\n-    REQUIRE(\n-        torch::detail::check_not_lvalue_references<float, int&, char>() ==\n-        false);\n-    REQUIRE(torch::detail::check_not_lvalue_references<std::string>() == true);\n-    REQUIRE(\n-        torch::detail::check_not_lvalue_references<std::string&>() == false);\n-  }\n-  SECTION(\"apply\") {\n-    std::vector<int> v;\n-    torch::apply([&v](int x) { v.push_back(x); }, 1, 2, 3, 4, 5);\n-    REQUIRE(v.size() == 5);\n-    for (size_t i = 0; i < v.size(); ++i) {\n-      REQUIRE(v.at(i) == 1 + i);\n-    }\n+TEST(TestStatic, All_Of){\n+  EXPECT_EQ(torch::all_of<>::value, true);", "path": "test/cpp/api/static.cpp", "position": null, "original_position": 50, "commit_id": "9386797f5f5bd304d2564234aed4fde5ca50841c", "original_commit_id": "9eb52996d27cd6db4c3a29e11423eda5dff9f754", "user": {"login": "zrphercule", "id": 22670479, "node_id": "MDQ6VXNlcjIyNjcwNDc5", "avatar_url": "https://avatars2.githubusercontent.com/u/22670479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zrphercule", "html_url": "https://github.com/zrphercule", "followers_url": "https://api.github.com/users/zrphercule/followers", "following_url": "https://api.github.com/users/zrphercule/following{/other_user}", "gists_url": "https://api.github.com/users/zrphercule/gists{/gist_id}", "starred_url": "https://api.github.com/users/zrphercule/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zrphercule/subscriptions", "organizations_url": "https://api.github.com/users/zrphercule/orgs", "repos_url": "https://api.github.com/users/zrphercule/repos", "events_url": "https://api.github.com/users/zrphercule/events{/privacy}", "received_events_url": "https://api.github.com/users/zrphercule/received_events", "type": "User", "site_admin": false}, "body": "Oh I see, Thanks!", "created_at": "2018-09-17T23:06:11Z", "updated_at": "2018-11-23T15:51:31Z", "html_url": "https://github.com/pytorch/pytorch/pull/11556#discussion_r218255021", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11556", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/218255021"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11556#discussion_r218255021"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11556"}}, "body_html": "<p>Oh I see, Thanks!</p>", "body_text": "Oh I see, Thanks!", "in_reply_to_id": 218254144}