{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/218197123", "pull_request_review_id": 156080674, "id": 218197123, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODE5NzEyMw==", "diff_hunk": "@@ -22,43 +23,32 @@ torch::detail::enable_if_module_t<T, bool> f(T&& m) {\n   return true;\n }\n \n-TEST_CASE(\"static\") {\n-  SECTION(\"all_of\") {\n-    REQUIRE(torch::all_of<>::value == true);\n-    REQUIRE(torch::all_of<true>::value == true);\n-    REQUIRE(torch::all_of<true, true, true>::value == true);\n-    REQUIRE(torch::all_of<false>::value == false);\n-    REQUIRE(torch::all_of<false, false, false>::value == false);\n-    REQUIRE(torch::all_of<true, true, false>::value == false);\n-  }\n-  SECTION(\"any_of\") {\n-    REQUIRE(torch::any_of<>::value == false);\n-    REQUIRE(torch::any_of<true>::value == true);\n-    REQUIRE(torch::any_of<true, true, true>::value == true);\n-    REQUIRE(torch::any_of<false>::value == false);\n-    REQUIRE(torch::any_of<true, true, false>::value == true);\n-  }\n-  SECTION(\"enable_if_module_t\") {\n-    REQUIRE(f(torch::nn::LinearImpl(1, 2)) == true);\n-    REQUIRE(f(5) == false);\n-  }\n-  SECTION(\"check_not_lvalue_references\") {\n-    REQUIRE(torch::detail::check_not_lvalue_references<int>() == true);\n-    REQUIRE(\n-        torch::detail::check_not_lvalue_references<float, int, char>() == true);\n-    REQUIRE(\n-        torch::detail::check_not_lvalue_references<float, int&, char>() ==\n-        false);\n-    REQUIRE(torch::detail::check_not_lvalue_references<std::string>() == true);\n-    REQUIRE(\n-        torch::detail::check_not_lvalue_references<std::string&>() == false);\n-  }\n-  SECTION(\"apply\") {\n-    std::vector<int> v;\n-    torch::apply([&v](int x) { v.push_back(x); }, 1, 2, 3, 4, 5);\n-    REQUIRE(v.size() == 5);\n-    for (size_t i = 0; i < v.size(); ++i) {\n-      REQUIRE(v.at(i) == 1 + i);\n-    }\n+// TEST_CASE(\"static\") {\n+TEST(static, static){", "path": "test/cpp/api/static.cpp", "position": null, "original_position": 50, "commit_id": "9386797f5f5bd304d2564234aed4fde5ca50841c", "original_commit_id": "be125ea1b3f76409712768cd347c011786e4e2c6", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "body": "The general structure you should follow when rewriting the tests is that each section becomes its own test case. So here, what was `SECTION(\"any_of\")` should become its own test as part of the `TestStatic` suite, i.e.\r\n\r\n```\r\nTEST(TestStatic, AllOf) { }\r\nTEST(TestStatic, AnyOf) { }\r\nTEST(TestStatic, EnableIfModule) { }\r\netc.\r\n```\r\n\r\nOtherwise we lose all organization. Right now it's just a disorganized blob of asserts", "created_at": "2018-09-17T19:28:08Z", "updated_at": "2018-11-23T15:51:30Z", "html_url": "https://github.com/pytorch/pytorch/pull/11556#discussion_r218197123", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11556", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/218197123"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11556#discussion_r218197123"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11556"}}, "body_html": "<p>The general structure you should follow when rewriting the tests is that each section becomes its own test case. So here, what was <code>SECTION(\"any_of\")</code> should become its own test as part of the <code>TestStatic</code> suite, i.e.</p>\n<pre><code>TEST(TestStatic, AllOf) { }\nTEST(TestStatic, AnyOf) { }\nTEST(TestStatic, EnableIfModule) { }\netc.\n</code></pre>\n<p>Otherwise we lose all organization. Right now it's just a disorganized blob of asserts</p>", "body_text": "The general structure you should follow when rewriting the tests is that each section becomes its own test case. So here, what was SECTION(\"any_of\") should become its own test as part of the TestStatic suite, i.e.\nTEST(TestStatic, AllOf) { }\nTEST(TestStatic, AnyOf) { }\nTEST(TestStatic, EnableIfModule) { }\netc.\n\nOtherwise we lose all organization. Right now it's just a disorganized blob of asserts"}