{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/133735067", "pull_request_review_id": 56949502, "id": 133735067, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMzczNTA2Nw==", "diff_hunk": "@@ -55,14 +56,15 @@ Currently three initialization methods are supported:\n TCP initialization\n ^^^^^^^^^^^^^^^^^^\n \n-Initialization will utilize a network address reachable from all processes.\n-If the address belongs to one of the machines, initialization requires that all processes\n-have manually specified ranks.\n+There are two ways to intialize using TCP, both requiring a network address\n+reachable from all processes and a desired ``world_size``. The first way\n+requires specifying an address that belongs to the rank 0 process. This form of\n+initialization requires that all processes have manually specified ranks.", "path": "docs/source/distributed.rst", "position": null, "original_position": 31, "commit_id": "4db2049590e219a1c9511d4f845b41ff681b7c43", "original_commit_id": "084de0c0e1382bfb6afa26f1114a6e8880e7fde8", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "It seems a bit misleading now, because you only have to manually assign ranks if you use the rank 0 addr method (multicast can assign them automatically). Perhaps split this paragraph at \"The first way\" to indicate that it doesn't apply to both ways?", "created_at": "2017-08-17T14:48:50Z", "updated_at": "2018-11-23T15:34:24Z", "html_url": "https://github.com/pytorch/pytorch/pull/2475#discussion_r133735067", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2475", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/133735067"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2475#discussion_r133735067"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2475"}}, "body_html": "<p>It seems a bit misleading now, because you only have to manually assign ranks if you use the rank 0 addr method (multicast can assign them automatically). Perhaps split this paragraph at \"The first way\" to indicate that it doesn't apply to both ways?</p>", "body_text": "It seems a bit misleading now, because you only have to manually assign ranks if you use the rank 0 addr method (multicast can assign them automatically). Perhaps split this paragraph at \"The first way\" to indicate that it doesn't apply to both ways?"}