{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/310122533", "html_url": "https://github.com/pytorch/pytorch/issues/1856#issuecomment-310122533", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1856", "id": 310122533, "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDEyMjUzMw==", "user": {"login": "alykhantejani", "id": 687194, "node_id": "MDQ6VXNlcjY4NzE5NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/687194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alykhantejani", "html_url": "https://github.com/alykhantejani", "followers_url": "https://api.github.com/users/alykhantejani/followers", "following_url": "https://api.github.com/users/alykhantejani/following{/other_user}", "gists_url": "https://api.github.com/users/alykhantejani/gists{/gist_id}", "starred_url": "https://api.github.com/users/alykhantejani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alykhantejani/subscriptions", "organizations_url": "https://api.github.com/users/alykhantejani/orgs", "repos_url": "https://api.github.com/users/alykhantejani/repos", "events_url": "https://api.github.com/users/alykhantejani/events{/privacy}", "received_events_url": "https://api.github.com/users/alykhantejani/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-21T15:50:19Z", "updated_at": "2017-06-21T15:50:19Z", "author_association": "CONTRIBUTOR", "body_html": "<p>So if we have a way to expose the <code>_in_bad_fork</code> flag in <code>torch.cuda.__init__</code> then in <code>torch.manual_seed</code> we can do:</p>\n<div class=\"highlight highlight-source-python\"><pre>    <span class=\"pl-k\">if</span> torch.cuda.is_available() <span class=\"pl-k\">and</span> <span class=\"pl-k\">not</span> _in_bad_fork:\n        torch.cuda.manual_seed_all(seed)\n\n    <span class=\"pl-k\">return</span> default_generator.manual_seed(seed)</pre></div>\n<p>?</p>", "body_text": "So if we have a way to expose the _in_bad_fork flag in torch.cuda.__init__ then in torch.manual_seed we can do:\n    if torch.cuda.is_available() and not _in_bad_fork:\n        torch.cuda.manual_seed_all(seed)\n\n    return default_generator.manual_seed(seed)\n?", "body": "So if we have a way to expose the `_in_bad_fork` flag in `torch.cuda.__init__` then in `torch.manual_seed` we can do:\r\n```python\r\n    if torch.cuda.is_available() and not _in_bad_fork:\r\n        torch.cuda.manual_seed_all(seed)\r\n\r\n    return default_generator.manual_seed(seed)\r\n```\r\n?"}