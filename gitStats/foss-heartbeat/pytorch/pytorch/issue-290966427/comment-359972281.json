{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/359972281", "html_url": "https://github.com/pytorch/pytorch/pull/4812#issuecomment-359972281", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4812", "id": 359972281, "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTk3MjI4MQ==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-23T23:52:49Z", "updated_at": "2018-01-23T23:52:49Z", "author_association": "CONTRIBUTOR", "body_html": "<p>While updating an existing test to cover this case, I found another bug:</p>\n<pre><code>&gt;&gt;&gt; x = Variable(torch.randn(1, 1, 2, 2), requires_grad=True)\n&gt;&gt;&gt; w = Variable(torch.randn(1, 1, 2, 2), requires_grad=False)\n&gt;&gt;&gt; b = Variable(torch.randn(1), requires_grad=True)\n&gt;&gt;&gt; F.conv2d(x, w, b).backward()\n&gt;&gt;&gt; b.grad\nVariable containing:\n 0\n[torch.FloatTensor of size 1]\n\n&gt;&gt;&gt; w.requires_grad = True\n&gt;&gt;&gt; F.conv2d(x, w, b).backward()\n&gt;&gt;&gt; b.grad\nVariable containing:\n 1\n[torch.FloatTensor of size 1]\n</code></pre>\n<p>This is caused by this check here only covering <code>grad_weight_</code>. <a href=\"https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/nn_parse.py#L331\">https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/nn_parse.py#L331</a></p>\n<p>I attempted to fix by including all params in the check, but <code>grad_weight</code> is assumed to exist in THNN. I will find a fix for this tomorrow.</p>", "body_text": "While updating an existing test to cover this case, I found another bug:\n>>> x = Variable(torch.randn(1, 1, 2, 2), requires_grad=True)\n>>> w = Variable(torch.randn(1, 1, 2, 2), requires_grad=False)\n>>> b = Variable(torch.randn(1), requires_grad=True)\n>>> F.conv2d(x, w, b).backward()\n>>> b.grad\nVariable containing:\n 0\n[torch.FloatTensor of size 1]\n\n>>> w.requires_grad = True\n>>> F.conv2d(x, w, b).backward()\n>>> b.grad\nVariable containing:\n 1\n[torch.FloatTensor of size 1]\n\nThis is caused by this check here only covering grad_weight_. https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/nn_parse.py#L331\nI attempted to fix by including all params in the check, but grad_weight is assumed to exist in THNN. I will find a fix for this tomorrow.", "body": "While updating an existing test to cover this case, I found another bug: \r\n```\r\n>>> x = Variable(torch.randn(1, 1, 2, 2), requires_grad=True)\r\n>>> w = Variable(torch.randn(1, 1, 2, 2), requires_grad=False)\r\n>>> b = Variable(torch.randn(1), requires_grad=True)\r\n>>> F.conv2d(x, w, b).backward()\r\n>>> b.grad\r\nVariable containing:\r\n 0\r\n[torch.FloatTensor of size 1]\r\n\r\n>>> w.requires_grad = True\r\n>>> F.conv2d(x, w, b).backward()\r\n>>> b.grad\r\nVariable containing:\r\n 1\r\n[torch.FloatTensor of size 1]\r\n```\r\n\r\nThis is caused by this check here only covering `grad_weight_`. https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/nn_parse.py#L331\r\n\r\nI attempted to fix by including all params in the check, but `grad_weight` is assumed to exist in THNN. I will find a fix for this tomorrow."}