{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/214500430", "pull_request_review_id": 151579195, "id": 214500430, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUwMDQzMA==", "diff_hunk": "@@ -66,8 +66,8 @@ def step(self, closure=None):\n                 state['step'] += 1\n \n                 grad = grad.coalesce()  # the update is non-linear so indices must be unique\n-                grad_indices = grad._indices()\n-                grad_values = grad._values()\n+                grad_indices = torch._indices(grad)", "path": "torch/optim/sparse_adam.py", "position": null, "original_position": 6, "commit_id": "1381c1410ea67add946aa8a99697bfb0872f1ac8", "original_commit_id": "701dd79132b8b30898f77c12d8fecc12cf651ed7", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "body": "My main concern is not about doc/public API, but that\r\n1. They are really really attributes of sparse tensors! So it makes very little sense to say `at::indices(tensor)` (or`_indices`).\r\n2. They are really really useful in writing sparse ops! \r\nSo I think one reasonable solution is to provide some new better-named way to access these fields, so our c++ devs/users can use thoseto write the kernels. \r\n\r\nFortunately this is exactly what you new commit does! :D although I would name them as `get_raw_values` and `get_raw_indices`, to indicate that they are unsafe and should usually be avoided.\r\n\r\ncc @ezyang if he has opinions on any of these.", "created_at": "2018-09-01T01:13:03Z", "updated_at": "2018-11-23T15:50:32Z", "html_url": "https://github.com/pytorch/pytorch/pull/11152#discussion_r214500430", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11152", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/214500430"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11152#discussion_r214500430"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11152"}}, "body_html": "<p>My main concern is not about doc/public API, but that</p>\n<ol>\n<li>They are really really attributes of sparse tensors! So it makes very little sense to say <code>at::indices(tensor)</code> (or<code>_indices</code>).</li>\n<li>They are really really useful in writing sparse ops!<br>\nSo I think one reasonable solution is to provide some new better-named way to access these fields, so our c++ devs/users can use thoseto write the kernels.</li>\n</ol>\n<p>Fortunately this is exactly what you new commit does! :D although I would name them as <code>get_raw_values</code> and <code>get_raw_indices</code>, to indicate that they are unsafe and should usually be avoided.</p>\n<p>cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> if he has opinions on any of these.</p>", "body_text": "My main concern is not about doc/public API, but that\n\nThey are really really attributes of sparse tensors! So it makes very little sense to say at::indices(tensor) (or_indices).\nThey are really really useful in writing sparse ops!\nSo I think one reasonable solution is to provide some new better-named way to access these fields, so our c++ devs/users can use thoseto write the kernels.\n\nFortunately this is exactly what you new commit does! :D although I would name them as get_raw_values and get_raw_indices, to indicate that they are unsafe and should usually be avoided.\ncc @ezyang if he has opinions on any of these.", "in_reply_to_id": 214441817}