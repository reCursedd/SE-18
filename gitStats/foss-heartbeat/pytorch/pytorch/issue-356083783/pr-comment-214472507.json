{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/214472507", "pull_request_review_id": 151545266, "id": 214472507, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDQ3MjUwNw==", "diff_hunk": "@@ -66,8 +66,8 @@ def step(self, closure=None):\n                 state['step'] += 1\n \n                 grad = grad.coalesce()  # the update is non-linear so indices must be unique\n-                grad_indices = grad._indices()\n-                grad_values = grad._values()\n+                grad_indices = torch._indices(grad)", "path": "torch/optim/sparse_adam.py", "position": null, "original_position": 6, "commit_id": "1381c1410ea67add946aa8a99697bfb0872f1ac8", "original_commit_id": "701dd79132b8b30898f77c12d8fecc12cf651ed7", "user": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "body": "I agree with @SsnL and @zou3519 , `_indices` and `_values` are fields of sparse tensor, so it is unintuitive to call `at::_indices(tensor)`. I am also fine with `tensor.indices()` and `tensor.values()` and deprecate `_*` methods. btw, @SsnL are `get_indices` and `get_values` going to do same thing as `_indices` and `_values`?", "created_at": "2018-08-31T20:51:00Z", "updated_at": "2018-11-23T15:50:30Z", "html_url": "https://github.com/pytorch/pytorch/pull/11152#discussion_r214472507", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11152", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/214472507"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11152#discussion_r214472507"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11152"}}, "body_html": "<p>I agree with <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a> and <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5652049\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zou3519\">@zou3519</a> , <code>_indices</code> and <code>_values</code> are fields of sparse tensor, so it is unintuitive to call <code>at::_indices(tensor)</code>. I am also fine with <code>tensor.indices()</code> and <code>tensor.values()</code> and deprecate <code>_*</code> methods. btw, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a> are <code>get_indices</code> and <code>get_values</code> going to do same thing as <code>_indices</code> and <code>_values</code>?</p>", "body_text": "I agree with @SsnL and @zou3519 , _indices and _values are fields of sparse tensor, so it is unintuitive to call at::_indices(tensor). I am also fine with tensor.indices() and tensor.values() and deprecate _* methods. btw, @SsnL are get_indices and get_values going to do same thing as _indices and _values?", "in_reply_to_id": 214441817}