{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/214474126", "pull_request_review_id": 151547271, "id": 214474126, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDQ3NDEyNg==", "diff_hunk": "@@ -66,8 +66,8 @@ def step(self, closure=None):\n                 state['step'] += 1\n \n                 grad = grad.coalesce()  # the update is non-linear so indices must be unique\n-                grad_indices = grad._indices()\n-                grad_values = grad._values()\n+                grad_indices = torch._indices(grad)", "path": "torch/optim/sparse_adam.py", "position": null, "original_position": 6, "commit_id": "1381c1410ea67add946aa8a99697bfb0872f1ac8", "original_commit_id": "701dd79132b8b30898f77c12d8fecc12cf651ed7", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "body": "It's not about trouble, it's just that we'd like the documentation for [at::Tensor](https://pytorch.org/cppdocs/api/structat_1_1_tensor.html#exhale-struct-structat-1-1-tensor) which is generated from the build/aten/src/ATen/Tensor.h file to be the exact public API we want users to use. In our Python docs we also filter out all the underscore methods except those three sparse \"properties\" https://imgur.com/a/Si2g5W5. I can make exceptions for those three, but just thinking about it, we should come up with a better API than an underscore method. It's not Pythonic at all! ", "created_at": "2018-08-31T20:59:28Z", "updated_at": "2018-11-23T15:50:30Z", "html_url": "https://github.com/pytorch/pytorch/pull/11152#discussion_r214474126", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11152", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/214474126"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11152#discussion_r214474126"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11152"}}, "body_html": "<p>It's not about trouble, it's just that we'd like the documentation for <a href=\"https://pytorch.org/cppdocs/api/structat_1_1_tensor.html#exhale-struct-structat-1-1-tensor\" rel=\"nofollow\">at::Tensor</a> which is generated from the build/aten/src/ATen/Tensor.h file to be the exact public API we want users to use. In our Python docs we also filter out all the underscore methods except those three sparse \"properties\" <a href=\"https://imgur.com/a/Si2g5W5\" rel=\"nofollow\">https://imgur.com/a/Si2g5W5</a>. I can make exceptions for those three, but just thinking about it, we should come up with a better API than an underscore method. It's not Pythonic at all!</p>", "body_text": "It's not about trouble, it's just that we'd like the documentation for at::Tensor which is generated from the build/aten/src/ATen/Tensor.h file to be the exact public API we want users to use. In our Python docs we also filter out all the underscore methods except those three sparse \"properties\" https://imgur.com/a/Si2g5W5. I can make exceptions for those three, but just thinking about it, we should come up with a better API than an underscore method. It's not Pythonic at all!", "in_reply_to_id": 214441817}