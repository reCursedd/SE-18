{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/407238085", "html_url": "https://github.com/pytorch/pytorch/issues/9674#issuecomment-407238085", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9674", "id": 407238085, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzIzODA4NQ==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-24T00:06:48Z", "updated_at": "2018-07-24T00:06:48Z", "author_association": "CONTRIBUTOR", "body_html": "<div class=\"email-fragment\">Sparse tensors are still listed as experimental API and nnz isn\u2019t exposed\n(iirc) so changing the internals should be fine.</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On Mon, Jul 23, 2018 at 19:31 Wei Yang ***@***.***&gt; wrote:\n <a class=\"user-mention\" href=\"https://github.com/SsnL\">@SsnL</a> &lt;<a href=\"https://github.com/SsnL\">https://github.com/SsnL</a>&gt; For add(Sparse, Sparse), I guess we can\n hide the internal representation from the user. But yes, users have to be\n more careful while working on _values directly.\n\n So I recalled some of the previous discussion with <a class=\"user-mention\" href=\"https://github.com/li-roy\">@li-roy</a>\n &lt;<a href=\"https://github.com/li-roy\">https://github.com/li-roy</a>&gt;. With the Constant representation, they might\n be confused since nnz is actually nnc, and zeros in sparse tensor will\n take place in _values. But I think it is fine since we already allow\n zeros to appear in _values when users create sparse tensors?\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"343294880\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/9674\" href=\"https://github.com/pytorch/pytorch/issues/9674#issuecomment-407232533\">#9674 (comment)</a>&gt;,\n or mute the thread\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/AFaWZT_5dIg2OI7njdWRp2_UnvSZQqwzks5uJlyzgaJpZM4VZeqW\">https://github.com/notifications/unsubscribe-auth/AFaWZT_5dIg2OI7njdWRp2_UnvSZQqwzks5uJlyzgaJpZM4VZeqW</a>&gt;\n .\n</div>\n<div class=\"email-fragment\"></div>\n</div>", "body_text": "Sparse tensors are still listed as experimental API and nnz isn\u2019t exposed\n(iirc) so changing the internals should be fine.\n\u2026\nOn Mon, Jul 23, 2018 at 19:31 Wei Yang ***@***.***> wrote:\n @SsnL <https://github.com/SsnL> For add(Sparse, Sparse), I guess we can\n hide the internal representation from the user. But yes, users have to be\n more careful while working on _values directly.\n\n So I recalled some of the previous discussion with @li-roy\n <https://github.com/li-roy>. With the Constant representation, they might\n be confused since nnz is actually nnc, and zeros in sparse tensor will\n take place in _values. But I think it is fine since we already allow\n zeros to appear in _values when users create sparse tensors?\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#9674 (comment)>,\n or mute the thread\n <https://github.com/notifications/unsubscribe-auth/AFaWZT_5dIg2OI7njdWRp2_UnvSZQqwzks5uJlyzgaJpZM4VZeqW>\n .", "body": "Sparse tensors are still listed as experimental API and nnz isn\u2019t exposed\n(iirc) so changing the internals should be fine.\n\nOn Mon, Jul 23, 2018 at 19:31 Wei Yang <notifications@github.com> wrote:\n\n> @SsnL <https://github.com/SsnL> For add(Sparse, Sparse), I guess we can\n> hide the internal representation from the user. But yes, users have to be\n> more careful while working on _values directly.\n>\n> So I recalled some of the previous discussion with @li-roy\n> <https://github.com/li-roy>. With the Constant representation, they might\n> be confused since nnz is actually nnc, and zeros in sparse tensor will\n> take place in _values. But I think it is fine since we already allow\n> zeros to appear in _values when users create sparse tensors?\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pytorch/pytorch/issues/9674#issuecomment-407232533>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AFaWZT_5dIg2OI7njdWRp2_UnvSZQqwzks5uJlyzgaJpZM4VZeqW>\n> .\n>\n"}