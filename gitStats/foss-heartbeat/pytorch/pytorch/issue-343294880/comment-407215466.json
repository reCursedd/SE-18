{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/407215466", "html_url": "https://github.com/pytorch/pytorch/issues/9674#issuecomment-407215466", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9674", "id": 407215466, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzIxNTQ2Ng==", "user": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-23T22:01:19Z", "updated_at": "2018-07-23T22:01:56Z", "author_association": "CONTRIBUTOR", "body_html": "<blockquote>\n<p>Additionally, I wonder if it's possible to support autograd on _values (after exposing it) and sparse tensor construction. It would really allow people to write their own operations with sparse tensor and make the sparse-dense interactions much more flexible.</p>\n</blockquote>\n<blockquote>\n<p>It should absolutely be supported. It makes complete mathematical sense; we just have to write a derivative formula for it.</p>\n</blockquote>\n<p>Totally agree! This is going to save the effort to write specific ops that apply on nnz only, e.g., <code>s_add</code>.</p>\n<blockquote>\n<p>It would really allow people to write their own operations with sparse tensor and make the sparse-dense interactions much more flexible.</p>\n</blockquote>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a> Would you like to give a simple example on the kind of ops that will be more flexible? Also, I wonder who's responsible for maintaining the invariance in sparse tensor after user applying ops on <code>_values</code>?</p>\n<blockquote>\n<p>we just have to write a derivative formula for it.</p>\n</blockquote>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> Did you mean users have to write the derivative formula (backward) when they define their own ops on <code>_values</code>? Or do we need to do that on behalf?</p>", "body_text": "Additionally, I wonder if it's possible to support autograd on _values (after exposing it) and sparse tensor construction. It would really allow people to write their own operations with sparse tensor and make the sparse-dense interactions much more flexible.\n\n\nIt should absolutely be supported. It makes complete mathematical sense; we just have to write a derivative formula for it.\n\nTotally agree! This is going to save the effort to write specific ops that apply on nnz only, e.g., s_add.\n\nIt would really allow people to write their own operations with sparse tensor and make the sparse-dense interactions much more flexible.\n\n@SsnL Would you like to give a simple example on the kind of ops that will be more flexible? Also, I wonder who's responsible for maintaining the invariance in sparse tensor after user applying ops on _values?\n\nwe just have to write a derivative formula for it.\n\n@ezyang Did you mean users have to write the derivative formula (backward) when they define their own ops on _values? Or do we need to do that on behalf?", "body": "> Additionally, I wonder if it's possible to support autograd on _values (after exposing it) and sparse tensor construction. It would really allow people to write their own operations with sparse tensor and make the sparse-dense interactions much more flexible.\r\n\r\n> It should absolutely be supported. It makes complete mathematical sense; we just have to write a derivative formula for it.\r\n\r\nTotally agree! This is going to save the effort to write specific ops that apply on nnz only, e.g., `s_add`. \r\n\r\n> It would really allow people to write their own operations with sparse tensor and make the sparse-dense interactions much more flexible.\r\n\r\n@SsnL Would you like to give a simple example on the kind of ops that will be more flexible? Also, I wonder who's responsible for maintaining the invariance in sparse tensor after user applying ops on `_values`?\r\n\r\n> we just have to write a derivative formula for it.\r\n\r\n@ezyang Did you mean users have to write the derivative formula (backward) when they define their own ops on `_values`? Or do we need to do that on behalf?"}