{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/406846953", "html_url": "https://github.com/pytorch/pytorch/issues/9674#issuecomment-406846953", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9674", "id": 406846953, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjg0Njk1Mw==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-22T07:26:21Z", "updated_at": "2018-07-22T07:26:21Z", "author_association": "MEMBER", "body_html": "<p>cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=11717476\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/btgraham\">@btgraham</a>, who has been working with sparse convnets, and who uses an internal tensor representation which is similar in spirit to what we currently have in PyTorch</p>", "body_text": "cc @btgraham, who has been working with sparse convnets, and who uses an internal tensor representation which is similar in spirit to what we currently have in PyTorch", "body": "cc @btgraham, who has been working with sparse convnets, and who uses an internal tensor representation which is similar in spirit to what we currently have in PyTorch"}