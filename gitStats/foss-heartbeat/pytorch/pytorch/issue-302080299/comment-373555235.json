{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/373555235", "html_url": "https://github.com/pytorch/pytorch/issues/5552#issuecomment-373555235", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5552", "id": 373555235, "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzU1NTIzNQ==", "user": {"login": "shubhamagarwal92", "id": 7984532, "node_id": "MDQ6VXNlcjc5ODQ1MzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/7984532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shubhamagarwal92", "html_url": "https://github.com/shubhamagarwal92", "followers_url": "https://api.github.com/users/shubhamagarwal92/followers", "following_url": "https://api.github.com/users/shubhamagarwal92/following{/other_user}", "gists_url": "https://api.github.com/users/shubhamagarwal92/gists{/gist_id}", "starred_url": "https://api.github.com/users/shubhamagarwal92/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shubhamagarwal92/subscriptions", "organizations_url": "https://api.github.com/users/shubhamagarwal92/orgs", "repos_url": "https://api.github.com/users/shubhamagarwal92/repos", "events_url": "https://api.github.com/users/shubhamagarwal92/events{/privacy}", "received_events_url": "https://api.github.com/users/shubhamagarwal92/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-15T23:30:46Z", "updated_at": "2018-03-15T23:30:46Z", "author_association": "NONE", "body_html": "<p>A simple reproducible example:</p>\n<pre><code>print torch.__version__\n0.3.1.post2\n</code></pre>\n<p>torch.cat works on 0-dim tensors</p>\n<pre><code>import torch\ndec_outputs = torch.FloatTensor() #even for torch.zeros(0,0,0)\nmax_time_steps = 2\nfor step in range(max_time_steps):\n    step_outputs = torch.randn(3,1,4) # (batch,length,dim)\n    dec_outputs = torch.cat((dec_outputs,step_outputs),1) #(batch,length,dim)\nprint dec_outputs.size() #(batch=3,length=2,dim=4)\n\ntorch.Size([3, 2, 4])\n</code></pre>\n<p>However, not on 0-dim Variables.</p>\n<pre><code># With variable cat doesnt work\nfrom torch.autograd import Variable\ndec_outputs = Variable(torch.FloatTensor()) # With variable cat doesnt work\nmax_time_steps = 2\nfor step in range(max_time_steps):\n    step_outputs = Variable(torch.randn(3,1,4)) \n    dec_outputs = torch.cat((dec_outputs,step_outputs),1) \nprint dec_outputs.size() \n\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\n&lt;ipython-input-14-349a1a33b0bb&gt; in &lt;module&gt;()\n     26 for step in range(max_time_steps):\n     27     step_outputs = Variable(torch.randn(3,1,4))\n---&gt; 28     dec_outputs = torch.cat((dec_outputs,step_outputs),1)\n     29 #     dec_outputs = torch.stack((dec_outputs,step_outputs),1)\n     30 print dec_outputs.size()\n\nRuntimeError: dimension specified as 1 but tensor has no dimensions\n</code></pre>\n<p>Though I don't need, we can convert into variable after the loop, but I assume it will not backpropagate gradients (even when volatile is False)?</p>\n<pre><code>dec_outputs_variable = Variable(dec_outputs,volatile=True)\nprint dec_outputs_variable.size()\n</code></pre>\n<p><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"227797059\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/1530\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/1530/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/1530\">#1530</a> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"270788006\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/3452\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/3452/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/3452\">#3452</a></p>", "body_text": "A simple reproducible example:\nprint torch.__version__\n0.3.1.post2\n\ntorch.cat works on 0-dim tensors\nimport torch\ndec_outputs = torch.FloatTensor() #even for torch.zeros(0,0,0)\nmax_time_steps = 2\nfor step in range(max_time_steps):\n    step_outputs = torch.randn(3,1,4) # (batch,length,dim)\n    dec_outputs = torch.cat((dec_outputs,step_outputs),1) #(batch,length,dim)\nprint dec_outputs.size() #(batch=3,length=2,dim=4)\n\ntorch.Size([3, 2, 4])\n\nHowever, not on 0-dim Variables.\n# With variable cat doesnt work\nfrom torch.autograd import Variable\ndec_outputs = Variable(torch.FloatTensor()) # With variable cat doesnt work\nmax_time_steps = 2\nfor step in range(max_time_steps):\n    step_outputs = Variable(torch.randn(3,1,4)) \n    dec_outputs = torch.cat((dec_outputs,step_outputs),1) \nprint dec_outputs.size() \n\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\n<ipython-input-14-349a1a33b0bb> in <module>()\n     26 for step in range(max_time_steps):\n     27     step_outputs = Variable(torch.randn(3,1,4))\n---> 28     dec_outputs = torch.cat((dec_outputs,step_outputs),1)\n     29 #     dec_outputs = torch.stack((dec_outputs,step_outputs),1)\n     30 print dec_outputs.size()\n\nRuntimeError: dimension specified as 1 but tensor has no dimensions\n\nThough I don't need, we can convert into variable after the loop, but I assume it will not backpropagate gradients (even when volatile is False)?\ndec_outputs_variable = Variable(dec_outputs,volatile=True)\nprint dec_outputs_variable.size()\n\n#1530 #3452", "body": "A simple reproducible example:\r\n```\r\nprint torch.__version__\r\n0.3.1.post2\r\n```\r\ntorch.cat works on 0-dim tensors\r\n```\r\nimport torch\r\ndec_outputs = torch.FloatTensor() #even for torch.zeros(0,0,0)\r\nmax_time_steps = 2\r\nfor step in range(max_time_steps):\r\n    step_outputs = torch.randn(3,1,4) # (batch,length,dim)\r\n    dec_outputs = torch.cat((dec_outputs,step_outputs),1) #(batch,length,dim)\r\nprint dec_outputs.size() #(batch=3,length=2,dim=4)\r\n\r\ntorch.Size([3, 2, 4])\r\n```\r\nHowever, not on 0-dim Variables.\r\n```\r\n# With variable cat doesnt work\r\nfrom torch.autograd import Variable\r\ndec_outputs = Variable(torch.FloatTensor()) # With variable cat doesnt work\r\nmax_time_steps = 2\r\nfor step in range(max_time_steps):\r\n    step_outputs = Variable(torch.randn(3,1,4)) \r\n    dec_outputs = torch.cat((dec_outputs,step_outputs),1) \r\nprint dec_outputs.size() \r\n\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-14-349a1a33b0bb> in <module>()\r\n     26 for step in range(max_time_steps):\r\n     27     step_outputs = Variable(torch.randn(3,1,4))\r\n---> 28     dec_outputs = torch.cat((dec_outputs,step_outputs),1)\r\n     29 #     dec_outputs = torch.stack((dec_outputs,step_outputs),1)\r\n     30 print dec_outputs.size()\r\n\r\nRuntimeError: dimension specified as 1 but tensor has no dimensions\r\n```\r\n\r\nThough I don't need, we can convert into variable after the loop, but I assume it will not backpropagate gradients (even when volatile is False)?\r\n```\r\ndec_outputs_variable = Variable(dec_outputs,volatile=True)\r\nprint dec_outputs_variable.size()\r\n```\r\n\r\n\r\n#1530 #3452"}