{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/398797984", "html_url": "https://github.com/pytorch/pytorch/issues/8685#issuecomment-398797984", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8685", "id": 398797984, "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODc5Nzk4NA==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-20T15:43:21Z", "updated_at": "2018-06-20T16:00:25Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I might know what's going on.</p>\n<p>In the <code>build_torch_libs.sh</code>, we have <code>CMAKE_MODULE_PATH=/home/amers/pytorch/cmake/FindCUDA</code>, a now non-existent path. So our custom <code>FindCUDA.cmake</code> is not used, at least not when building NCCL. If users have older versions of <code>FindCUDA.cmake</code>, I think this might happen.</p>\n<p>In <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"333409081\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/8615\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/8615/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/8615\">#8615</a> , I tried to make it pointing to our custom <code>FindCUDA.cmake</code>. However, it uses <code>sccache</code> on our CI and has some (yet) unsupported NVCC flags when building NCCL. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4063635\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yf225\">@yf225</a> is it possible to still use our custom <code>FindCUDA.cmake</code> when building NCCL, but do not use <code>sccache</code> on CI?</p>\n<p>If that is actually the cause, a workaround is to use NCCL 2. :)</p>", "body_text": "I might know what's going on.\nIn the build_torch_libs.sh, we have CMAKE_MODULE_PATH=/home/amers/pytorch/cmake/FindCUDA, a now non-existent path. So our custom FindCUDA.cmake is not used, at least not when building NCCL. If users have older versions of FindCUDA.cmake, I think this might happen.\nIn #8615 , I tried to make it pointing to our custom FindCUDA.cmake. However, it uses sccache on our CI and has some (yet) unsupported NVCC flags when building NCCL. @yf225 is it possible to still use our custom FindCUDA.cmake when building NCCL, but do not use sccache on CI?\nIf that is actually the cause, a workaround is to use NCCL 2. :)", "body": "I might know what's going on.\r\n\r\nIn the `build_torch_libs.sh`, we have `CMAKE_MODULE_PATH=/home/amers/pytorch/cmake/FindCUDA`, a now non-existent path. So our custom `FindCUDA.cmake` is not used, at least not when building NCCL. If users have older versions of `FindCUDA.cmake`, I think this might happen.\r\n\r\nIn #8615 , I tried to make it pointing to our custom `FindCUDA.cmake`. However, it uses `sccache` on our CI and has some (yet) unsupported NVCC flags when building NCCL. @yf225 is it possible to still use our custom `FindCUDA.cmake` when building NCCL, but do not use `sccache` on CI?\r\n\r\nIf that is actually the cause, a workaround is to use NCCL 2. :) "}