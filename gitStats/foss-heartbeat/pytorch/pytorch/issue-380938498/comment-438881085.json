{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/438881085", "html_url": "https://github.com/pytorch/pytorch/issues/14000#issuecomment-438881085", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/14000", "id": 438881085, "node_id": "MDEyOklzc3VlQ29tbWVudDQzODg4MTA4NQ==", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-15T01:24:05Z", "updated_at": "2018-11-15T01:24:05Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Sorry if I was unclear, but since <code>tensor</code> is already a tensor, there is no need to use <code>from_blob</code> anymore. I.e. replace</p>\n<div class=\"highlight highlight-source-c++\"><pre>at::TensorOptions <span class=\"pl-en\">options</span>(at::ScalarType::<span class=\"pl-c1\">Byte</span>);\n\nat::Tensor t = torch::from_blob(data, {<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">28</span>, <span class=\"pl-c1\">28</span>});\nt = t.toType(at::<span class=\"pl-c1\">kFloat</span>);\n\ninputs.emplace_back(t);</pre></div>\n<p>with</p>\n<div class=\"highlight highlight-source-c++\"><pre>inputs.emplace_back(tensor);</pre></div>\n<p>I don't think that will solve the NaNs, but at leas the tensor operations look correct to me here. Do you get NaNs in Python?</p>", "body_text": "Sorry if I was unclear, but since tensor is already a tensor, there is no need to use from_blob anymore. I.e. replace\nat::TensorOptions options(at::ScalarType::Byte);\n\nat::Tensor t = torch::from_blob(data, {1, 3, 28, 28});\nt = t.toType(at::kFloat);\n\ninputs.emplace_back(t);\nwith\ninputs.emplace_back(tensor);\nI don't think that will solve the NaNs, but at leas the tensor operations look correct to me here. Do you get NaNs in Python?", "body": "Sorry if I was unclear, but since `tensor` is already a tensor, there is no need to use `from_blob` anymore. I.e. replace\r\n\r\n```cpp\r\nat::TensorOptions options(at::ScalarType::Byte);\r\n\r\nat::Tensor t = torch::from_blob(data, {1, 3, 28, 28});\r\nt = t.toType(at::kFloat);\r\n\r\ninputs.emplace_back(t);\r\n```\r\n\r\nwith \r\n\r\n```cpp\r\ninputs.emplace_back(tensor);\r\n```\r\n\r\nI don't think that will solve the NaNs, but at leas the tensor operations look correct to me here. Do you get NaNs in Python?"}