{"url": "https://api.github.com/repos/pytorch/pytorch/issues/10218", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10218/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10218/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10218/events", "html_url": "https://github.com/pytorch/pytorch/pull/10218", "id": 347520890, "node_id": "MDExOlB1bGxSZXF1ZXN0MjA2MTI2NzM1", "number": 10218, "title": "nomnigraph - Enhancements to subgraph matching APIs", "user": {"login": "duc0", "id": 10603132, "node_id": "MDQ6VXNlcjEwNjAzMTMy", "avatar_url": "https://avatars1.githubusercontent.com/u/10603132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duc0", "html_url": "https://github.com/duc0", "followers_url": "https://api.github.com/users/duc0/followers", "following_url": "https://api.github.com/users/duc0/following{/other_user}", "gists_url": "https://api.github.com/users/duc0/gists{/gist_id}", "starred_url": "https://api.github.com/users/duc0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duc0/subscriptions", "organizations_url": "https://api.github.com/users/duc0/orgs", "repos_url": "https://api.github.com/users/duc0/repos", "events_url": "https://api.github.com/users/duc0/events{/privacy}", "received_events_url": "https://api.github.com/users/duc0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-03T20:06:35Z", "updated_at": "2018-08-08T21:57:39Z", "closed_at": "2018-08-08T21:57:39Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/10218", "html_url": "https://github.com/pytorch/pytorch/pull/10218", "diff_url": "https://github.com/pytorch/pytorch/pull/10218.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/10218.patch"}, "body_html": "<p>Summary:<br>\nSubtreeMatchCriteria now supports these additional requirements:</p>\n<ul>\n<li>nonTerminal flag : if this is set, it means we only match the root of the subtree and do not care about the children. Example use case: to match an \"input\" node but does not care how the input is produced.</li>\n<li>multiEdges flag : this goes together with \"count\" parameter and only applies when matching children nodes . If this is set, it means that the parent is expected to have multiple edges to the same subtree, rather than multiple subtrees matching the same criteria.<br>\nAdditional tests for these new logic are added to subgraph_matcher_test.cc.</li>\n</ul>\n<p>Subgraph matching APIs for NNGraph is also added.</p>\n<p>(Further enhancement to make the SubgraphMatching API constructs a Subgraph object/more diagnostic information will go later).</p>\n<p>Differential Revision: D9156092</p>", "body_text": "Summary:\nSubtreeMatchCriteria now supports these additional requirements:\n\nnonTerminal flag : if this is set, it means we only match the root of the subtree and do not care about the children. Example use case: to match an \"input\" node but does not care how the input is produced.\nmultiEdges flag : this goes together with \"count\" parameter and only applies when matching children nodes . If this is set, it means that the parent is expected to have multiple edges to the same subtree, rather than multiple subtrees matching the same criteria.\nAdditional tests for these new logic are added to subgraph_matcher_test.cc.\n\nSubgraph matching APIs for NNGraph is also added.\n(Further enhancement to make the SubgraphMatching API constructs a Subgraph object/more diagnostic information will go later).\nDifferential Revision: D9156092", "body": "Summary:\nSubtreeMatchCriteria now supports these additional requirements:\n- nonTerminal flag : if this is set, it means we only match the root of the subtree and do not care about the children. Example use case: to match an \"input\" node but does not care how the input is produced.\n- multiEdges flag : this goes together with \"count\" parameter and only applies when matching children nodes . If this is set, it means that the parent is expected to have multiple edges to the same subtree, rather than multiple subtrees matching the same criteria.\nAdditional tests for these new logic are added to subgraph_matcher_test.cc.\n\nSubgraph matching APIs for NNGraph is also added.\n\n(Further enhancement to make the SubgraphMatching API constructs a Subgraph object/more diagnostic information will go later).\n\nDifferential Revision: D9156092\n"}