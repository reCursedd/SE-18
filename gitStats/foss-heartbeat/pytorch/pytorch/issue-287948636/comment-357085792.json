{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/357085792", "html_url": "https://github.com/pytorch/pytorch/pull/4617#issuecomment-357085792", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4617", "id": 357085792, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzA4NTc5Mg==", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-11T22:42:58Z", "updated_at": "2018-01-11T22:42:58Z", "author_association": "CONTRIBUTOR", "body_html": "<p>We should probably get rid of Scalars in ATen; I don't think it's a huge issue for torch because there aren't that many functions to specify and we generate the overloads anyway, but for NN we will have a problem if we want to accept both python numbers and 0-dim tensors to the same functions because there are a ton of functions that take scalars.</p>\n<p>I wonder if we can (temporarily) handle this at the python binding level instead, i.e. the \"Scalar\" declaration accepts either a tensor or a scalar; if it's a tensor it wraps it in a scalar and does the dispatch.</p>", "body_text": "We should probably get rid of Scalars in ATen; I don't think it's a huge issue for torch because there aren't that many functions to specify and we generate the overloads anyway, but for NN we will have a problem if we want to accept both python numbers and 0-dim tensors to the same functions because there are a ton of functions that take scalars.\nI wonder if we can (temporarily) handle this at the python binding level instead, i.e. the \"Scalar\" declaration accepts either a tensor or a scalar; if it's a tensor it wraps it in a scalar and does the dispatch.", "body": "We should probably get rid of Scalars in ATen; I don't think it's a huge issue for torch because there aren't that many functions to specify and we generate the overloads anyway, but for NN we will have a problem if we want to accept both python numbers and 0-dim tensors to the same functions because there are a ton of functions that take scalars.\r\n\r\nI wonder if we can (temporarily) handle this at the python binding level instead, i.e. the \"Scalar\" declaration accepts either a tensor or a scalar; if it's a tensor it wraps it in a scalar and does the dispatch."}