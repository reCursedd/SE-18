{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/387816611", "html_url": "https://github.com/pytorch/pytorch/pull/7427#issuecomment-387816611", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7427", "id": 387816611, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzgxNjYxMQ==", "user": {"login": "jamesr66a", "id": 4685384, "node_id": "MDQ6VXNlcjQ2ODUzODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4685384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesr66a", "html_url": "https://github.com/jamesr66a", "followers_url": "https://api.github.com/users/jamesr66a/followers", "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}", "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions", "organizations_url": "https://api.github.com/users/jamesr66a/orgs", "repos_url": "https://api.github.com/users/jamesr66a/repos", "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesr66a/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-09T17:35:51Z", "updated_at": "2018-05-09T17:36:06Z", "author_association": "CONTRIBUTOR", "body_html": "<pre><code>import torch\n\nclass SomeModule(torch.nn.Module):\n    def __init__(self):\n        super(SomeModule, self).__init__()\n        self.param = torch.nn.Parameter(torch.zeros(3, 3))\n\n    def forward(self, x):\n        return torch.matmul(x, self.param)\n\nsm = torch.jit.trace(torch.zeros(1, 2, 3))(SomeModule())\n\nprint(sm.__getattr__('forward').graph)\n</code></pre>\n<p>yields</p>\n<pre><code>graph(%0 : Float(1, 2, 3)\n      %1 : Float(3, 3)) {\n  %6 : Float(1, 2, 3) = aten::matmul(%0, %1)\n  return (%6);\n}\n</code></pre>", "body_text": "import torch\n\nclass SomeModule(torch.nn.Module):\n    def __init__(self):\n        super(SomeModule, self).__init__()\n        self.param = torch.nn.Parameter(torch.zeros(3, 3))\n\n    def forward(self, x):\n        return torch.matmul(x, self.param)\n\nsm = torch.jit.trace(torch.zeros(1, 2, 3))(SomeModule())\n\nprint(sm.__getattr__('forward').graph)\n\nyields\ngraph(%0 : Float(1, 2, 3)\n      %1 : Float(3, 3)) {\n  %6 : Float(1, 2, 3) = aten::matmul(%0, %1)\n  return (%6);\n}", "body": "```\r\nimport torch\r\n\r\nclass SomeModule(torch.nn.Module):\r\n    def __init__(self):\r\n        super(SomeModule, self).__init__()\r\n        self.param = torch.nn.Parameter(torch.zeros(3, 3))\r\n\r\n    def forward(self, x):\r\n        return torch.matmul(x, self.param)\r\n\r\nsm = torch.jit.trace(torch.zeros(1, 2, 3))(SomeModule())\r\n\r\nprint(sm.__getattr__('forward').graph)\r\n```\r\n\r\nyields\r\n\r\n```\r\ngraph(%0 : Float(1, 2, 3)\r\n      %1 : Float(3, 3)) {\r\n  %6 : Float(1, 2, 3) = aten::matmul(%0, %1)\r\n  return (%6);\r\n}\r\n```"}