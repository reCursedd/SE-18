{"url": "https://api.github.com/repos/pytorch/pytorch/issues/9927", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/9927/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9927/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/9927/events", "html_url": "https://github.com/pytorch/pytorch/pull/9927", "id": 345169666, "node_id": "MDExOlB1bGxSZXF1ZXN0MjA0Mzg4MTYz", "number": 9927, "title": "Changed serialization mechanism of LambdaLR scheduler", "user": {"login": "0phoff", "id": 11853089, "node_id": "MDQ6VXNlcjExODUzMDg5", "avatar_url": "https://avatars3.githubusercontent.com/u/11853089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0phoff", "html_url": "https://github.com/0phoff", "followers_url": "https://api.github.com/users/0phoff/followers", "following_url": "https://api.github.com/users/0phoff/following{/other_user}", "gists_url": "https://api.github.com/users/0phoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/0phoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0phoff/subscriptions", "organizations_url": "https://api.github.com/users/0phoff/orgs", "repos_url": "https://api.github.com/users/0phoff/repos", "events_url": "https://api.github.com/users/0phoff/events{/privacy}", "received_events_url": "https://api.github.com/users/0phoff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-27T10:11:24Z", "updated_at": "2018-08-01T02:40:00Z", "closed_at": "2018-08-01T02:40:00Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/9927", "html_url": "https://github.com/pytorch/pytorch/pull/9927", "diff_url": "https://github.com/pytorch/pytorch/pull/9927.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/9927.patch"}, "body_html": "<p>I opened an issue explaining some of my frustrations with the current state of schedulers.<br>\nWhile most points that I raised in <a href=\"https://github.com/pytorch/pytorch/issues/8741#issuecomment-404449697\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/8741/hovercard\">that issue</a> need to be discussed more thoroughly before being implemented, there are some that are not so difficult to fix.</p>\n<p>This PR changes the way the LambdaLR scheduler gets serialized:</p>\n<blockquote>\n<p>The lr_lambda functions are only saved if the are callable objects (which can be stateful).<br>\nThere is no point in saving functions/lambdas as you need their definition before unpickling and they are stateless.</p>\n</blockquote>\n<p>This has the big advantage that the scheduler is serializable, even if you use lambda functions or locally defined functions (aka a function in a function).</p>\n<p>Does this functionality need any unit tests?</p>", "body_text": "I opened an issue explaining some of my frustrations with the current state of schedulers.\nWhile most points that I raised in that issue need to be discussed more thoroughly before being implemented, there are some that are not so difficult to fix.\nThis PR changes the way the LambdaLR scheduler gets serialized:\n\nThe lr_lambda functions are only saved if the are callable objects (which can be stateful).\nThere is no point in saving functions/lambdas as you need their definition before unpickling and they are stateless.\n\nThis has the big advantage that the scheduler is serializable, even if you use lambda functions or locally defined functions (aka a function in a function).\nDoes this functionality need any unit tests?", "body": "I opened an issue explaining some of my frustrations with the current state of schedulers.\r\nWhile most points that I raised in [that issue](https://github.com/pytorch/pytorch/issues/8741#issuecomment-404449697) need to be discussed more thoroughly before being implemented, there are some that are not so difficult to fix.\r\n\r\nThis PR changes the way the LambdaLR scheduler gets serialized:  \r\n> The lr_lambda functions are only saved if the are callable objects (which can be stateful).\r\n> There is no point in saving functions/lambdas as you need their definition before unpickling and they are stateless.\r\n\r\nThis has the big advantage that the scheduler is serializable, even if you use lambda functions or locally defined functions (aka a function in a function).\r\n\r\nDoes this functionality need any unit tests?"}