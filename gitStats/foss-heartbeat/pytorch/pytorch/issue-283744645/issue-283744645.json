{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4288", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4288/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4288/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4288/events", "html_url": "https://github.com/pytorch/pytorch/issues/4288", "id": 283744645, "node_id": "MDU6SXNzdWUyODM3NDQ2NDU=", "number": 4288, "title": "Unexpected behavior when initializing float tensor from numpy boolean array", "user": {"login": "alexub", "id": 7075865, "node_id": "MDQ6VXNlcjcwNzU4NjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/7075865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexub", "html_url": "https://github.com/alexub", "followers_url": "https://api.github.com/users/alexub/followers", "following_url": "https://api.github.com/users/alexub/following{/other_user}", "gists_url": "https://api.github.com/users/alexub/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexub/subscriptions", "organizations_url": "https://api.github.com/users/alexub/orgs", "repos_url": "https://api.github.com/users/alexub/repos", "events_url": "https://api.github.com/users/alexub/events{/privacy}", "received_events_url": "https://api.github.com/users/alexub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-21T01:21:56Z", "updated_at": "2017-12-21T14:33:35Z", "closed_at": null, "author_association": "NONE", "body_html": "<p><code>torch.Tensor(np.asarray([True, False]))</code> appears to have the same behavior as <code>torch.Tensor(size=2)</code>.<br>\nBoth give something like <code>-3.8315e+06   4.5761e-41   [torch.FloatTensor of size 2]</code></p>\n<p>Same behavior with other inputs: it appears to only look at the size of the boolean array.</p>\n<p>Passing a list of booleans gives a Tensor with ones and zeros as expected. It would be intuitive for <code>torch.Tensor(numpy_boolean_array)</code> to have the same behavior as <code>torch.Tensor(list_of_booleans)</code>. If changing the behavior isn't possible, it might make sense to throw an exception.</p>\n<p>(I'm using Pytorch 0.3.0.post4, python3.5, cuda8.0).</p>\n<p>Edit: I installed Pytorch with pip, which agrees with <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6359743\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/albanD\">@albanD</a> 's repro</p>", "body_text": "torch.Tensor(np.asarray([True, False])) appears to have the same behavior as torch.Tensor(size=2).\nBoth give something like -3.8315e+06   4.5761e-41   [torch.FloatTensor of size 2]\nSame behavior with other inputs: it appears to only look at the size of the boolean array.\nPassing a list of booleans gives a Tensor with ones and zeros as expected. It would be intuitive for torch.Tensor(numpy_boolean_array) to have the same behavior as torch.Tensor(list_of_booleans). If changing the behavior isn't possible, it might make sense to throw an exception.\n(I'm using Pytorch 0.3.0.post4, python3.5, cuda8.0).\nEdit: I installed Pytorch with pip, which agrees with @albanD 's repro", "body": "`torch.Tensor(np.asarray([True, False]))` appears to have the same behavior as `torch.Tensor(size=2)`. \r\nBoth give something like `-3.8315e+06   4.5761e-41   [torch.FloatTensor of size 2]`\r\n\r\nSame behavior with other inputs: it appears to only look at the size of the boolean array.\r\n\r\nPassing a list of booleans gives a Tensor with ones and zeros as expected. It would be intuitive for `torch.Tensor(numpy_boolean_array)` to have the same behavior as `torch.Tensor(list_of_booleans)`. If changing the behavior isn't possible, it might make sense to throw an exception.\r\n\r\n(I'm using Pytorch 0.3.0.post4, python3.5, cuda8.0).\r\n\r\nEdit: I installed Pytorch with pip, which agrees with @albanD 's repro"}