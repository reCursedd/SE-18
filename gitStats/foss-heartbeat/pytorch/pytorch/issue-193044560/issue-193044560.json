{"url": "https://api.github.com/repos/pytorch/pytorch/issues/286", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/286/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/286/events", "html_url": "https://github.com/pytorch/pytorch/pull/286", "id": 193044560, "node_id": "MDExOlB1bGxSZXF1ZXN0OTYyMjg4MDI=", "number": 286, "title": "Refactor Tensor/Storage copy and release GIL during copy", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-02T06:33:39Z", "updated_at": "2018-11-23T15:31:58Z", "closed_at": "2016-12-11T20:54:58Z", "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/286", "html_url": "https://github.com/pytorch/pytorch/pull/286", "diff_url": "https://github.com/pytorch/pytorch/pull/286.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/286.patch"}, "body_html": "<p>The GIL is now released during copies. This is important for the data loader because it optionally copies to pinned memory in a background thread.</p>\n<p>I also refactored the copy code. I removed a bunch of the nested macros as the cost of some template magic.</p>\n<p>The only other semantic change is that <code>async=True</code> is now ignored for CPU &lt;-&gt; CPU copies. Previously it was an error (\"Copy function from FloatTensor to FloatTensor isn't implemented!\"). I think this makes sense because we treat <code>async=True</code> as just a hint: it's ignored for GPU &lt;-&gt; GPU copies and for GPU &lt;-&gt; CPU copies it only has an effect if the CPU memory is \"pinned\".</p>", "body_text": "The GIL is now released during copies. This is important for the data loader because it optionally copies to pinned memory in a background thread.\nI also refactored the copy code. I removed a bunch of the nested macros as the cost of some template magic.\nThe only other semantic change is that async=True is now ignored for CPU <-> CPU copies. Previously it was an error (\"Copy function from FloatTensor to FloatTensor isn't implemented!\"). I think this makes sense because we treat async=True as just a hint: it's ignored for GPU <-> GPU copies and for GPU <-> CPU copies it only has an effect if the CPU memory is \"pinned\".", "body": "The GIL is now released during copies. This is important for the data loader because it optionally copies to pinned memory in a background thread.\r\n\r\nI also refactored the copy code. I removed a bunch of the nested macros as the cost of some template magic.\r\n\r\nThe only other semantic change is that `async=True` is now ignored for CPU <-> CPU copies. Previously it was an error (\"Copy function from FloatTensor to FloatTensor isn't implemented!\"). I think this makes sense because we treat `async=True` as just a hint: it's ignored for GPU <-> GPU copies and for GPU <-> CPU copies it only has an effect if the CPU memory is \"pinned\". "}