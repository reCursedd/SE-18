{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/91862507", "pull_request_review_id": 12372344, "id": 91862507, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkxODYyNTA3", "diff_hunk": "@@ -0,0 +1,88 @@\n+#ifndef THP_COPY_UTILS_H\n+#define THP_COPY_UTILS_H\n+\n+#include <functional>\n+#include <vector>\n+#include \"Types.h\"\n+\n+\n+typedef std::function<void(PyObject*, PyObject*)> THPCopyFunction;\n+struct THPCopyInfo {\n+  PyTypeObject* srcType;  // Python type of src tensor/storage\n+  THPCopyFunction copy;   // copy function\n+  bool async;             // true if copy implements an 'async' copy\n+};\n+typedef std::vector<THPCopyInfo> THPCopyList;", "path": "torch/csrc/copy_utils.h", "position": 15, "original_position": 15, "commit_id": "2013da30cfffa7daf227dd64568bff2338555821", "original_commit_id": "2013da30cfffa7daf227dd64568bff2338555821", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Are you sure it's a good idea to keep the functions in a vector? We have 8 tensor types and with CPU + CUDA + distributed we need 72 handlers. If we were to add OpenCL we'd arrive at 144.\r\n\r\nI'm a bit worried about calling `PyType_IsSubtype` 100 times for every copy call.", "created_at": "2016-12-11T19:02:25Z", "updated_at": "2018-11-23T15:31:58Z", "html_url": "https://github.com/pytorch/pytorch/pull/286#discussion_r91862507", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/286", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/91862507"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/286#discussion_r91862507"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/286"}}, "body_html": "<p>Are you sure it's a good idea to keep the functions in a vector? We have 8 tensor types and with CPU + CUDA + distributed we need 72 handlers. If we were to add OpenCL we'd arrive at 144.</p>\n<p>I'm a bit worried about calling <code>PyType_IsSubtype</code> 100 times for every copy call.</p>", "body_text": "Are you sure it's a good idea to keep the functions in a vector? We have 8 tensor types and with CPU + CUDA + distributed we need 72 handlers. If we were to add OpenCL we'd arrive at 144.\nI'm a bit worried about calling PyType_IsSubtype 100 times for every copy call."}