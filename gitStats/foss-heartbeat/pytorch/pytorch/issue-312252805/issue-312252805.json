{"url": "https://api.github.com/repos/pytorch/pytorch/issues/6392", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6392/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6392/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6392/events", "html_url": "https://github.com/pytorch/pytorch/pull/6392", "id": 312252805, "node_id": "MDExOlB1bGxSZXF1ZXN0MTgwMTMwMjE5", "number": 6392, "title": "IR serialization / deserialization via protobuf", "user": {"login": "lantiga", "id": 191033, "node_id": "MDQ6VXNlcjE5MTAzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/191033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lantiga", "html_url": "https://github.com/lantiga", "followers_url": "https://api.github.com/users/lantiga/followers", "following_url": "https://api.github.com/users/lantiga/following{/other_user}", "gists_url": "https://api.github.com/users/lantiga/gists{/gist_id}", "starred_url": "https://api.github.com/users/lantiga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lantiga/subscriptions", "organizations_url": "https://api.github.com/users/lantiga/orgs", "repos_url": "https://api.github.com/users/lantiga/repos", "events_url": "https://api.github.com/users/lantiga/events{/privacy}", "received_events_url": "https://api.github.com/users/lantiga/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 32, "created_at": "2018-04-07T23:29:08Z", "updated_at": "2018-11-23T15:43:21Z", "closed_at": "2018-05-01T18:21:29Z", "author_association": "COLLABORATOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/6392", "html_url": "https://github.com/pytorch/pytorch/pull/6392", "diff_url": "https://github.com/pytorch/pytorch/pull/6392.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/6392.patch"}, "body_html": "<p>Addresses <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"304968122\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/5757\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/5757/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/5757\">#5757</a></p>\n<p>This PR</p>\n<ul>\n<li>adds a <code>export_raw_ir</code> flag to <code>export</code> functions to avoid the ONNX pass altogether and output IR nodes in ONNX protobufs;</li>\n<li>adds <code>ir_import.cpp</code> that exposes an <code>ImportIRGraph</code> function; the function loads the serialized IR (+ eventual initializers) back into a graph using <code>nanopb</code></li>\n<li>deserializes graphs as attributes recursively</li>\n<li>manages blocks (e.g. if conditions, while loops)</li>\n<li>exposes <code>ImportIRGraph</code> to Python through <code>pybind11</code></li>\n<li>adds \"graph -&gt; proto -&gt; graph\" roundtrip tests in <code>test_jit.py</code></li>\n</ul>", "body_text": "Addresses #5757\nThis PR\n\nadds a export_raw_ir flag to export functions to avoid the ONNX pass altogether and output IR nodes in ONNX protobufs;\nadds ir_import.cpp that exposes an ImportIRGraph function; the function loads the serialized IR (+ eventual initializers) back into a graph using nanopb\ndeserializes graphs as attributes recursively\nmanages blocks (e.g. if conditions, while loops)\nexposes ImportIRGraph to Python through pybind11\nadds \"graph -> proto -> graph\" roundtrip tests in test_jit.py", "body": "Addresses #5757\r\n\r\nThis PR\r\n- adds a `export_raw_ir` flag to `export` functions to avoid the ONNX pass altogether and output IR nodes in ONNX protobufs;\r\n- adds `ir_import.cpp` that exposes an `ImportIRGraph` function; the function loads the serialized IR (+ eventual initializers) back into a graph using `nanopb`\r\n- deserializes graphs as attributes recursively\r\n- manages blocks (e.g. if conditions, while loops)\r\n- exposes `ImportIRGraph` to Python through `pybind11`\r\n- adds \"graph -> proto -> graph\" roundtrip tests in `test_jit.py`\r\n"}