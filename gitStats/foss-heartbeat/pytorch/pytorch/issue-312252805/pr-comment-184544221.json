{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/184544221", "pull_request_review_id": 115764618, "id": 184544221, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDU0NDIyMQ==", "diff_hunk": "@@ -0,0 +1,559 @@\n+#include \"torch/csrc/jit/ir_import.h\"\n+#include \"torch/csrc/onnx/onnx.pb.h\"\n+#include \"torch/csrc/jit/ir.h\"\n+\n+#include <ATen/ATen.h>\n+\n+#include <unordered_map>\n+#include <vector>\n+#include <string>\n+\n+#include \"third_party/nanopb/pb_decode.h\"\n+\n+namespace torch { namespace jit {\n+\n+namespace {\n+\n+// Deserialized data\n+\n+struct Tensor_ {\n+  std::vector<int64_t> dims;\n+  std::vector<uint8_t> raw_data;\n+  onnx_TensorProto_DataType data_type;\n+};\n+\n+struct AttributeValue_ {\n+  std::string name;\n+  onnx_AttributeProto_AttributeType type;\n+  double f;\n+  int64_t i;\n+  std::string s;\n+  Tensor_ t;\n+  std::string g;\n+  std::vector<double> fs;\n+  std::vector<int64_t> is;\n+  std::vector<std::string> ss;\n+  std::vector<Tensor_> ts;\n+  std::vector<std::string> gs;\n+};\n+\n+struct Value_ {\n+  std::string name;\n+};\n+\n+struct Node_ {\n+  std::string op_type;\n+  std::vector<std::string> inputs;\n+  std::vector<std::string> outputs;\n+  std::vector<AttributeValue_> attrs;\n+};\n+\n+struct Graph_ {\n+  std::vector<Value_> inputs;\n+  std::vector<Value_> outputs;\n+  std::vector<Node_> nodes;\n+  std::vector<Tensor_> initializers;\n+};\n+\n+struct Model_ {\n+  Graph_ graph;\n+};\n+\n+\n+// Readers\n+\n+struct ReaderBase {\n+  ReaderBase() {}\n+  ReaderBase(pb_callback_t& cb) {\n+    initialize_callback(cb);\n+  }\n+\n+  void initialize_callback(pb_callback_t& cb) {\n+    cb.funcs.decode = ReaderBase::decode;\n+    cb.arg = this;\n+  }\n+\n+  virtual void decode(pb_istream_t *stream) = 0;\n+\n+  static bool decode(pb_istream_t *stream, const pb_field_t *, void **_self) {\n+    ReaderBase* self = *reinterpret_cast<ReaderBase* const *>(_self);\n+    try {\n+      self->decode(stream);\n+    }\n+    catch (const std::runtime_error& error) {\n+      return false;\n+    }\n+    return true;\n+  }\n+};\n+\n+\n+template<typename T>\n+struct Reader : ReaderBase {};\n+\n+template<typename T>\n+struct Reader<std::vector<T>> : Reader<T> {\n+  Reader(pb_callback_t& cb) : Reader<T>(cb) {}\n+  virtual void decode(pb_istream_t *stream) override {\n+    Reader<T>::decode(stream);\n+    values.push_back(std::move(Reader<T>::value));", "path": "torch/csrc/jit/ir_import.cpp", "position": null, "original_position": 99, "commit_id": "a907ce98f4875f10b0c45be77ec3556236be5ee3", "original_commit_id": "53affa23d5100a2209c5a0396baef511ca5c4cc5", "user": {"login": "lantiga", "id": 191033, "node_id": "MDQ6VXNlcjE5MTAzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/191033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lantiga", "html_url": "https://github.com/lantiga", "followers_url": "https://api.github.com/users/lantiga/followers", "following_url": "https://api.github.com/users/lantiga/following{/other_user}", "gists_url": "https://api.github.com/users/lantiga/gists{/gist_id}", "starred_url": "https://api.github.com/users/lantiga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lantiga/subscriptions", "organizations_url": "https://api.github.com/users/lantiga/orgs", "repos_url": "https://api.github.com/users/lantiga/repos", "events_url": "https://api.github.com/users/lantiga/events{/privacy}", "received_events_url": "https://api.github.com/users/lantiga/received_events", "type": "User", "site_admin": false}, "body": "So `decode` is going to be called repeatedly from the callback (registered in the parent class constructor) each time an element is encountered. So all we do is relay the decoding through the parent class `decode` and push the result, every time this `decode` is called.", "created_at": "2018-04-26T22:03:36Z", "updated_at": "2018-11-23T15:43:16Z", "html_url": "https://github.com/pytorch/pytorch/pull/6392#discussion_r184544221", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6392", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/184544221"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6392#discussion_r184544221"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6392"}}, "body_html": "<p>So <code>decode</code> is going to be called repeatedly from the callback (registered in the parent class constructor) each time an element is encountered. So all we do is relay the decoding through the parent class <code>decode</code> and push the result, every time this <code>decode</code> is called.</p>", "body_text": "So decode is going to be called repeatedly from the callback (registered in the parent class constructor) each time an element is encountered. So all we do is relay the decoding through the parent class decode and push the result, every time this decode is called.", "in_reply_to_id": 184351620}