{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/184626814", "pull_request_review_id": 115861429, "id": 184626814, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDYyNjgxNA==", "diff_hunk": "@@ -498,37 +482,11 @@ void buildBlock(const Graph_& graph_, Block* block,\n     block->appendNode(node);\n   }\n \n-  for (auto output : graph_.outputs) {\n-    if (value_map.find(output.name) != value_map.end()) {\n-      Value* v = value_map.at(output.name);\n-      block->registerOutput(v);\n-    }\n-  }\n-}\n-\n-void buildBlocks(const std::vector<Graph_>& graphs_, Node* node,\n-                 std::unordered_map<std::string, Value*>& value_map) {\n-  for (auto g_ : graphs_) {\n-    auto block = node->addBlock();\n-    buildBlock(g_, block, value_map);\n-  }\n-}\n-\n-std::shared_ptr<Graph> buildGraph(const Graph_& graph_) {\n-  auto graph = std::make_shared<Graph>();\n-  std::unordered_map<std::string, Value*> value_map;\n-\n-  buildBlock(graph_, graph->block(), value_map);\n-\n-  return graph;\n-}\n-\n-std::vector<std::shared_ptr<Graph>> buildGraphs(const std::vector<Graph_>& graphs_) {\n-  std::vector<std::shared_ptr<Graph>> graphs;\n-  for (auto g_ : graphs_) {\n-    graphs.push_back(buildGraph(g_));\n+  for (auto & output : graph_.outputs) {\n+    assert(value_map.find(output.name) != value_map.end());", "path": "torch/csrc/jit/import.cpp", "position": null, "original_position": 189, "commit_id": "a907ce98f4875f10b0c45be77ec3556236be5ee3", "original_commit_id": "c3137d69cc30ff7a6027e6956d7be46c6bf13e77", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "This assert is not necessary. We usually compile with `-DNDEBUG` so it won't even be there, but `.at` already does the error checking for you.", "created_at": "2018-04-27T08:44:41Z", "updated_at": "2018-11-23T15:43:18Z", "html_url": "https://github.com/pytorch/pytorch/pull/6392#discussion_r184626814", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6392", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/184626814"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6392#discussion_r184626814"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6392"}}, "body_html": "<p>This assert is not necessary. We usually compile with <code>-DNDEBUG</code> so it won't even be there, but <code>.at</code> already does the error checking for you.</p>", "body_text": "This assert is not necessary. We usually compile with -DNDEBUG so it won't even be there, but .at already does the error checking for you."}