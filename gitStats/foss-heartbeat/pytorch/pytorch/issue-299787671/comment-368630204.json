{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/368630204", "html_url": "https://github.com/pytorch/pytorch/pull/5376#issuecomment-368630204", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5376", "id": 368630204, "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODYzMDIwNA==", "user": {"login": "lemairecarl", "id": 13444373, "node_id": "MDQ6VXNlcjEzNDQ0Mzcz", "avatar_url": "https://avatars3.githubusercontent.com/u/13444373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lemairecarl", "html_url": "https://github.com/lemairecarl", "followers_url": "https://api.github.com/users/lemairecarl/followers", "following_url": "https://api.github.com/users/lemairecarl/following{/other_user}", "gists_url": "https://api.github.com/users/lemairecarl/gists{/gist_id}", "starred_url": "https://api.github.com/users/lemairecarl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lemairecarl/subscriptions", "organizations_url": "https://api.github.com/users/lemairecarl/orgs", "repos_url": "https://api.github.com/users/lemairecarl/repos", "events_url": "https://api.github.com/users/lemairecarl/events{/privacy}", "received_events_url": "https://api.github.com/users/lemairecarl/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-26T19:58:52Z", "updated_at": "2018-02-26T20:01:48Z", "author_association": "CONTRIBUTOR", "body_html": "<p>What works is to (1) define <code>torch.cuda._get_device_properties()</code> with pybind and (2) add this to <code>cuda/__init__.py</code>:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">get_device_properties</span>(<span class=\"pl-smi\">device</span>):\n    <span class=\"pl-k\">if</span> <span class=\"pl-k\">not</span> _initialized:\n        init();  <span class=\"pl-c\"><span class=\"pl-c\">#</span> _get_device_properties is created</span>\n    <span class=\"pl-k\">return</span> _get_device_properties(device)<span class=\"pl-bu\">;</span></pre></div>", "body_text": "What works is to (1) define torch.cuda._get_device_properties() with pybind and (2) add this to cuda/__init__.py:\ndef get_device_properties(device):\n    if not _initialized:\n        init();  # _get_device_properties is created\n    return _get_device_properties(device);", "body": "What works is to (1) define `torch.cuda._get_device_properties()` with pybind and (2) add this to `cuda/__init__.py`:\r\n```python\r\ndef get_device_properties(device):\r\n    if not _initialized:\r\n        init();  # _get_device_properties is created\r\n    return _get_device_properties(device);\r\n```"}