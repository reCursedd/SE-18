{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/171037500", "pull_request_review_id": 99820173, "id": 171037500, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTAzNzUwMA==", "diff_hunk": "@@ -382,7 +383,28 @@ PyObject * THCPModule_initExtension(PyObject *self)\n   if (!THCPModule_initCuda(torch_module)) {\n     return NULL;\n   }\n-  Py_RETURN_NONE;\n+\n+  // Add class and method to torch.cuda\n+  auto m = py::handle(torch_module).cast<py::module>();\n+  py::class_<cudaDeviceProp>(m,\"_CudaDeviceProperties\")\n+    .def_readonly(\"name\", &cudaDeviceProp::name)\n+    .def_readonly(\"major\", &cudaDeviceProp::major)\n+    .def_readonly(\"minor\", &cudaDeviceProp::minor)\n+    .def_readonly(\"is_multi_gpu_board\", &cudaDeviceProp::isMultiGpuBoard)\n+    .def_readonly(\"is_integrated\", &cudaDeviceProp::integrated)\n+    .def_readonly(\"multi_processor_count\", &cudaDeviceProp::multiProcessorCount)\n+    .def_readonly(\"total_memory\", &cudaDeviceProp::totalGlobalMem)\n+    .def(\"__repr__\", [](const cudaDeviceProp &prop) {\n+      char repr[256];\n+      snprintf(repr, 256, \"_CudaDeviceProperties(name=\\\"%s\\\", major=%d, minor=%d, total_memory=%dMB, multi_processor_count=%d)\",", "path": "torch/csrc/cuda/Module.cpp", "position": null, "original_position": 26, "commit_id": "5d70e344ac0ea7eb543b08f9d56885a92f5ebc92", "original_commit_id": "b33381aa3ad7c40d80900e81cfc0d1cb7334d588", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "oh there's a much simpler way:\r\n```cpp\r\nstd::ostringstream stream;\r\nstream << \"_CudaDeviceProperties(name=\" << prop.name << \", major=\" << prop.major\r\n       << \", minor=\" << prop.minor << \", total_memory=\" << prop.totalGlobalMem / (1024 * 1024)\r\n       << \", multi_processor_count=\" << prop.multiProcessorCount << \")\";\r\n```", "created_at": "2018-02-27T19:22:48Z", "updated_at": "2018-11-23T15:40:04Z", "html_url": "https://github.com/pytorch/pytorch/pull/5376#discussion_r171037500", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5376", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/171037500"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5376#discussion_r171037500"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5376"}}, "body_html": "<p>oh there's a much simpler way:</p>\n<div class=\"highlight highlight-source-c++\"><pre>std::ostringstream stream;\nstream &lt;&lt; <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>_CudaDeviceProperties(name=<span class=\"pl-pds\">\"</span></span> &lt;&lt; prop.name &lt;&lt; <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>, major=<span class=\"pl-pds\">\"</span></span> &lt;&lt; prop.major\n       &lt;&lt; <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>, minor=<span class=\"pl-pds\">\"</span></span> &lt;&lt; prop.minor &lt;&lt; <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>, total_memory=<span class=\"pl-pds\">\"</span></span> &lt;&lt; prop.totalGlobalMem / (<span class=\"pl-c1\">1024</span> * <span class=\"pl-c1\">1024</span>)\n       &lt;&lt; <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>, multi_processor_count=<span class=\"pl-pds\">\"</span></span> &lt;&lt; prop.multiProcessorCount &lt;&lt; <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>)<span class=\"pl-pds\">\"</span></span>;</pre></div>", "body_text": "oh there's a much simpler way:\nstd::ostringstream stream;\nstream << \"_CudaDeviceProperties(name=\" << prop.name << \", major=\" << prop.major\n       << \", minor=\" << prop.minor << \", total_memory=\" << prop.totalGlobalMem / (1024 * 1024)\n       << \", multi_processor_count=\" << prop.multiProcessorCount << \")\";"}