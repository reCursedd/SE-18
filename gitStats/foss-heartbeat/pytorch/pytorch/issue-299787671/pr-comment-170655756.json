{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/170655756", "pull_request_review_id": 99355766, "id": 170655756, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDY1NTc1Ng==", "diff_hunk": "@@ -409,7 +417,16 @@ PyObject * THCPModule_initExtension(PyObject *self)\n   if (!THCPModule_initCuda(torch_module)) {\n     return NULL;\n   }\n-  Py_RETURN_NONE;\n+\n+  auto m = py::handle(torch_module).cast<py::module>();\n+  py::class_<cudaDeviceProp>(m,\"CudaDeviceProperties\")\n+          .def_readwrite(\"major\", &cudaDeviceProp::major)\n+          .def_readwrite(\"minor\", &cudaDeviceProp::minor)\n+          .def_readwrite(\"multi_processor_count\", &cudaDeviceProp::multiProcessorCount)\n+          .def_readwrite(\"total_memory\", &cudaDeviceProp::totalGlobalMem);", "path": "torch/csrc/cuda/Module.cpp", "position": null, "original_position": 33, "commit_id": "5d70e344ac0ea7eb543b08f9d56885a92f5ebc92", "original_commit_id": "77ca81caa12ce998229a20d86233f9af638f56c6", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Also, can you also expose all the other properties (at least those that are easy to expose, like integer values)?", "created_at": "2018-02-26T16:42:34Z", "updated_at": "2018-11-23T15:40:01Z", "html_url": "https://github.com/pytorch/pytorch/pull/5376#discussion_r170655756", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5376", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/170655756"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5376#discussion_r170655756"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5376"}}, "body_html": "<p>Also, can you also expose all the other properties (at least those that are easy to expose, like integer values)?</p>", "body_text": "Also, can you also expose all the other properties (at least those that are easy to expose, like integer values)?", "in_reply_to_id": 170639667}