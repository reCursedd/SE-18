{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/170907741", "pull_request_review_id": 99665849, "id": 170907741, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDkwNzc0MQ==", "diff_hunk": "@@ -382,7 +383,27 @@ PyObject * THCPModule_initExtension(PyObject *self)\n   if (!THCPModule_initCuda(torch_module)) {\n     return NULL;\n   }\n-  Py_RETURN_NONE;\n+\n+  // Add class and method to torch.cuda\n+  auto m = py::handle(torch_module).cast<py::module>();\n+  py::class_<cudaDeviceProp>(m,\"_CudaDeviceProperties\")\n+    .def_readonly(\"name\", &cudaDeviceProp::name)\n+    .def_readonly(\"major\", &cudaDeviceProp::major)\n+    .def_readonly(\"minor\", &cudaDeviceProp::minor)\n+    .def_readonly(\"is_multi_gpu_board\", &cudaDeviceProp::isMultiGpuBoard)\n+    .def_readonly(\"is_integrated\", &cudaDeviceProp::integrated)\n+    .def_readonly(\"multi_processor_count\", &cudaDeviceProp::multiProcessorCount)\n+    .def_readonly(\"total_memory\", &cudaDeviceProp::totalGlobalMem)\n+    .def(\"__repr__\", [](const cudaDeviceProp &prop) {\n+      return std::string(prop.name) + \" | CUDA \" + std::to_string(prop.major) + \".\"\n+      + std::to_string(prop.minor) + \" | Memory: \" + std::to_string(prop.totalGlobalMem / 1000000)\n+      + \" MB | Processors: \" + std::to_string(prop.multiProcessorCount);", "path": "torch/csrc/cuda/Module.cpp", "position": null, "original_position": 27, "commit_id": "5d70e344ac0ea7eb543b08f9d56885a92f5ebc92", "original_commit_id": "130b7116193aa54a67f27fd8e20e4bb40ef08337", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Can we change the `__repr__` to be in a more standard Python representation? I.e. something like this:\r\n```python\r\n_CudaDeviceProperties(name=\"960 GTX\", major=9, minor=1, total_memory=9812634, multi_processor_count=8)\r\n```", "created_at": "2018-02-27T12:36:59Z", "updated_at": "2018-11-23T15:40:03Z", "html_url": "https://github.com/pytorch/pytorch/pull/5376#discussion_r170907741", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5376", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/170907741"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5376#discussion_r170907741"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5376"}}, "body_html": "<p>Can we change the <code>__repr__</code> to be in a more standard Python representation? I.e. something like this:</p>\n<div class=\"highlight highlight-source-python\"><pre>_CudaDeviceProperties(<span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>960 GTX<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-v\">major</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">9</span>, <span class=\"pl-v\">minor</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>, <span class=\"pl-v\">total_memory</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">9812634</span>, <span class=\"pl-v\">multi_processor_count</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">8</span>)</pre></div>", "body_text": "Can we change the __repr__ to be in a more standard Python representation? I.e. something like this:\n_CudaDeviceProperties(name=\"960 GTX\", major=9, minor=1, total_memory=9812634, multi_processor_count=8)"}