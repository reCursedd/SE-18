{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/347943698", "html_url": "https://github.com/pytorch/pytorch/pull/3886#issuecomment-347943698", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3886", "id": 347943698, "node_id": "MDEyOklzc3VlQ29tbWVudDM0Nzk0MzY5OA==", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-29T17:59:25Z", "updated_at": "2017-11-29T17:59:25Z", "author_association": "MEMBER", "body_html": "<p>We should try to avoid <code>requires_grad</code> as method argument here. The convention is that if any input requires grad then the output requires grad. I think you can implement the reparameterization as a Python autograd function, which will have that behavior.</p>", "body_text": "We should try to avoid requires_grad as method argument here. The convention is that if any input requires grad then the output requires grad. I think you can implement the reparameterization as a Python autograd function, which will have that behavior.", "body": "We should try to avoid `requires_grad` as method argument here. The convention is that if any input requires grad then the output requires grad. I think you can implement the reparameterization as a Python autograd function, which will have that behavior.\r\n"}