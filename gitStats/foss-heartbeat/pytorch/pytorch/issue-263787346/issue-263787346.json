{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3028", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3028/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3028/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3028/events", "html_url": "https://github.com/pytorch/pytorch/pull/3028", "id": 263787346, "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ1Mzc1NjQ3", "number": 3028, "title": "NCCL C Bindings", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-10-09T05:16:14Z", "updated_at": "2018-11-23T15:35:11Z", "closed_at": "2017-10-10T02:24:19Z", "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/3028", "html_url": "https://github.com/pytorch/pytorch/pull/3028", "diff_url": "https://github.com/pytorch/pytorch/pull/3028.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/3028.patch"}, "body_html": "<p>Initial PR to move the NCCL bindings to C++.</p>\n<p>This avoids some deadlocks in the distributed setting that <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5248122\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ailzhang\">@ailzhang</a> noticed (the deadlocks were in a Python multi-threading setting, where THC's <code>CudaFreeMutex</code> and <code>GIL</code> were starving for each other.</p>\n<p>Current status: the call to <code>ncclReduce</code> never returns / deadlocks deep inside nccl. More precisely hangs at:</p>\n<pre><code>#0  0x00007ffff6aa6dc7 in sched_yield () from /lib/x86_64-linux-gnu/libc.so.6\n#1  0x00007fffc4027a95 in ncclEnqueueCheck(ncclResult_t (*)(void const*, void*, unsigned long, ncclDataType_t, ncclRedOp_t, int, ncclComm*, CUstream_st*), char const*, void const*, void*, unsigned long, ncclDataType_t, ncclRedOp_t, int, ncclComm*, CUstream_st*) () from /public/apps/NCCL/2.0.5/lib/libnccl.so.2\n#2  0x00007fffc407d7a0 in ncclReduce () from /public/apps/NCCL/2.0.5/lib/libnccl.so.2\n#3  0x00007fffedcba270 in THCPModule_nccl_reduce (self=&lt;optimized out&gt;, args=&lt;optimized out&gt;) at torch/csrc/cuda/nccl.cpp:198\n</code></pre>\n<p>Opening the PR for <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> to review.</p>", "body_text": "Initial PR to move the NCCL bindings to C++.\nThis avoids some deadlocks in the distributed setting that @ailzhang noticed (the deadlocks were in a Python multi-threading setting, where THC's CudaFreeMutex and GIL were starving for each other.\nCurrent status: the call to ncclReduce never returns / deadlocks deep inside nccl. More precisely hangs at:\n#0  0x00007ffff6aa6dc7 in sched_yield () from /lib/x86_64-linux-gnu/libc.so.6\n#1  0x00007fffc4027a95 in ncclEnqueueCheck(ncclResult_t (*)(void const*, void*, unsigned long, ncclDataType_t, ncclRedOp_t, int, ncclComm*, CUstream_st*), char const*, void const*, void*, unsigned long, ncclDataType_t, ncclRedOp_t, int, ncclComm*, CUstream_st*) () from /public/apps/NCCL/2.0.5/lib/libnccl.so.2\n#2  0x00007fffc407d7a0 in ncclReduce () from /public/apps/NCCL/2.0.5/lib/libnccl.so.2\n#3  0x00007fffedcba270 in THCPModule_nccl_reduce (self=<optimized out>, args=<optimized out>) at torch/csrc/cuda/nccl.cpp:198\n\nOpening the PR for @apaszke to review.", "body": "Initial PR to move the NCCL bindings to C++.\r\n\r\nThis avoids some deadlocks in the distributed setting that @ailzhang noticed (the deadlocks were in a Python multi-threading setting, where THC's `CudaFreeMutex` and `GIL` were starving for each other.\r\n\r\nCurrent status: the call to `ncclReduce` never returns / deadlocks deep inside nccl. More precisely hangs at:\r\n\r\n```\r\n#0  0x00007ffff6aa6dc7 in sched_yield () from /lib/x86_64-linux-gnu/libc.so.6\r\n#1  0x00007fffc4027a95 in ncclEnqueueCheck(ncclResult_t (*)(void const*, void*, unsigned long, ncclDataType_t, ncclRedOp_t, int, ncclComm*, CUstream_st*), char const*, void const*, void*, unsigned long, ncclDataType_t, ncclRedOp_t, int, ncclComm*, CUstream_st*) () from /public/apps/NCCL/2.0.5/lib/libnccl.so.2\r\n#2  0x00007fffc407d7a0 in ncclReduce () from /public/apps/NCCL/2.0.5/lib/libnccl.so.2\r\n#3  0x00007fffedcba270 in THCPModule_nccl_reduce (self=<optimized out>, args=<optimized out>) at torch/csrc/cuda/nccl.cpp:198\r\n```\r\n\r\nOpening the PR for @apaszke to review."}