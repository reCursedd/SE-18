{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4814", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4814/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4814/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4814/events", "html_url": "https://github.com/pytorch/pytorch/issues/4814", "id": 290973770, "node_id": "MDU6SXNzdWUyOTA5NzM3NzA=", "number": 4814, "title": "ATen: Efficient test for x instanceof Variable without dynamic_cast", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-23T20:00:50Z", "updated_at": "2018-03-10T04:52:55Z", "closed_at": "2018-03-10T04:52:55Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Right now in ATen (C++), given a <code>Tensor</code>, there is no efficient way to test if it is a <code>Variable</code> without attempting a <code>dynamic_cast</code> on it. This is bad because <code>dynamic_cast</code> is surprisingly inefficient, which means that in general we don't do Variable tests as often as we should (c.f. <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"286043274\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/4477\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/4477/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/4477\">#4477</a>). Similarly, we can't easily use <code>type()</code> to perform the test, as this gives us one of N <code>Type</code> instances, of which there is no convenient way to test if these are a Variable type.</p>\n<p>A simple way to fix the problem is to add a virtual function to Tensor or Type that gives us the info we need. Another way to fix the problem is to rethink the way we do <code>ID()</code> to somehow make this situation extensible. One thing that makes it awkward to fix this problem is the abstraction barrier between Tensor (which knows nothing about autodiff) and Variable; if we could put some code in Tensor to privilege Variable, it would be easy to solve this problem efficiently.</p>\n<p>CC <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=370202\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zdevito\">@zdevito</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=655866\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/colesbury\">@colesbury</a></p>", "body_text": "Right now in ATen (C++), given a Tensor, there is no efficient way to test if it is a Variable without attempting a dynamic_cast on it. This is bad because dynamic_cast is surprisingly inefficient, which means that in general we don't do Variable tests as often as we should (c.f. #4477). Similarly, we can't easily use type() to perform the test, as this gives us one of N Type instances, of which there is no convenient way to test if these are a Variable type.\nA simple way to fix the problem is to add a virtual function to Tensor or Type that gives us the info we need. Another way to fix the problem is to rethink the way we do ID() to somehow make this situation extensible. One thing that makes it awkward to fix this problem is the abstraction barrier between Tensor (which knows nothing about autodiff) and Variable; if we could put some code in Tensor to privilege Variable, it would be easy to solve this problem efficiently.\nCC @zdevito @colesbury", "body": "Right now in ATen (C++), given a `Tensor`, there is no efficient way to test if it is a `Variable` without attempting a `dynamic_cast` on it. This is bad because `dynamic_cast` is surprisingly inefficient, which means that in general we don't do Variable tests as often as we should (c.f. #4477). Similarly, we can't easily use `type()` to perform the test, as this gives us one of N `Type` instances, of which there is no convenient way to test if these are a Variable type.\r\n\r\nA simple way to fix the problem is to add a virtual function to Tensor or Type that gives us the info we need. Another way to fix the problem is to rethink the way we do `ID()` to somehow make this situation extensible. One thing that makes it awkward to fix this problem is the abstraction barrier between Tensor (which knows nothing about autodiff) and Variable; if we could put some code in Tensor to privilege Variable, it would be easy to solve this problem efficiently.\r\n\r\nCC @zdevito @colesbury "}