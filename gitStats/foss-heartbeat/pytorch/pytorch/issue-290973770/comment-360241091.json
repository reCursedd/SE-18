{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/360241091", "html_url": "https://github.com/pytorch/pytorch/issues/4814#issuecomment-360241091", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4814", "id": 360241091, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDI0MTA5MQ==", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-24T19:11:01Z", "updated_at": "2018-01-24T19:11:01Z", "author_association": "MEMBER", "body_html": "<p>I would prefer not requiring a virtual function call to detect if a Tensor is a Variable instance. We need to do this check for every argument to functions in  VariableType. Currently, this check is implemented by:</p>\n<div class=\"highlight highlight-source-c++\"><pre>arg.type() == *<span class=\"pl-c1\">this</span></pre></div>\n<p>Where <code>arg.type()</code> can be inlined and ends up just being a pointer comparison.</p>\n<p>One possibility is to make <code>is_variable()</code> non-virtual (and preferably can be inlined). It could be implemented as a field (bitmask?) in <code>Type.h</code>. We could do the same for <code>isSparse()</code> and <code>isCuda()</code>.</p>", "body_text": "I would prefer not requiring a virtual function call to detect if a Tensor is a Variable instance. We need to do this check for every argument to functions in  VariableType. Currently, this check is implemented by:\narg.type() == *this\nWhere arg.type() can be inlined and ends up just being a pointer comparison.\nOne possibility is to make is_variable() non-virtual (and preferably can be inlined). It could be implemented as a field (bitmask?) in Type.h. We could do the same for isSparse() and isCuda().", "body": "I would prefer not requiring a virtual function call to detect if a Tensor is a Variable instance. We need to do this check for every argument to functions in  VariableType. Currently, this check is implemented by:\r\n\r\n```c++\r\narg.type() == *this\r\n```\r\n\r\nWhere `arg.type()` can be inlined and ends up just being a pointer comparison.\r\n\r\nOne possibility is to make `is_variable()` non-virtual (and preferably can be inlined). It could be implemented as a field (bitmask?) in `Type.h`. We could do the same for `isSparse()` and `isCuda()`."}