{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/416731870", "html_url": "https://github.com/pytorch/pytorch/issues/9873#issuecomment-416731870", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9873", "id": 416731870, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjczMTg3MA==", "user": {"login": "berkinmalkoc", "id": 31172908, "node_id": "MDQ6VXNlcjMxMTcyOTA4", "avatar_url": "https://avatars0.githubusercontent.com/u/31172908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berkinmalkoc", "html_url": "https://github.com/berkinmalkoc", "followers_url": "https://api.github.com/users/berkinmalkoc/followers", "following_url": "https://api.github.com/users/berkinmalkoc/following{/other_user}", "gists_url": "https://api.github.com/users/berkinmalkoc/gists{/gist_id}", "starred_url": "https://api.github.com/users/berkinmalkoc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berkinmalkoc/subscriptions", "organizations_url": "https://api.github.com/users/berkinmalkoc/orgs", "repos_url": "https://api.github.com/users/berkinmalkoc/repos", "events_url": "https://api.github.com/users/berkinmalkoc/events{/privacy}", "received_events_url": "https://api.github.com/users/berkinmalkoc/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-28T20:37:06Z", "updated_at": "2018-08-28T20:37:06Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1199593\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/simonm3\">@simonm3</a>,</p>\n<blockquote>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=31172908\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/berkinmalkoc\">@berkinmalkoc</a> if I uninstall intel-openmp then it uninstalls a long list of packages that depend on it such as numpy and mkldnn.</p>\n</blockquote>\n<p>Sorry, my bad, I updated my previous comment and added the <code>--force</code> option to <code>conda remove</code> (so that only intel-openmp gets uninstalled and not its dependencies).</p>\n<blockquote>\n<p>I tried setting OMP_NUM_THREADS/MKL_NUM_THREADS but whatever setting I tried seemed to make no difference to the timings on either 8 or 72 vcpus.</p>\n</blockquote>\n<p>Do these vars change the number of cores that get busy when you run your code (as seen with, e.g., <code>htop</code>)? Are the timings independent of this?</p>\n<p>For me, the only way to have the number of busy cores reflect the value in <code>OMP_NUM_THREADS</code> was the installation procedure described in my previous post. But the timings were not significantly different across various values of <code>OMP_NUM_THREADS</code>.</p>", "body_text": "@simonm3,\n\n@berkinmalkoc if I uninstall intel-openmp then it uninstalls a long list of packages that depend on it such as numpy and mkldnn.\n\nSorry, my bad, I updated my previous comment and added the --force option to conda remove (so that only intel-openmp gets uninstalled and not its dependencies).\n\nI tried setting OMP_NUM_THREADS/MKL_NUM_THREADS but whatever setting I tried seemed to make no difference to the timings on either 8 or 72 vcpus.\n\nDo these vars change the number of cores that get busy when you run your code (as seen with, e.g., htop)? Are the timings independent of this?\nFor me, the only way to have the number of busy cores reflect the value in OMP_NUM_THREADS was the installation procedure described in my previous post. But the timings were not significantly different across various values of OMP_NUM_THREADS.", "body": "@simonm3,\r\n\r\n> @berkinmalkoc if I uninstall intel-openmp then it uninstalls a long list of packages that depend on it such as numpy and mkldnn.\r\n\r\nSorry, my bad, I updated my previous comment and added the `--force` option to `conda remove` (so that only intel-openmp gets uninstalled and not its dependencies).\r\n\r\n> I tried setting OMP_NUM_THREADS/MKL_NUM_THREADS but whatever setting I tried seemed to make no difference to the timings on either 8 or 72 vcpus.\r\n\r\nDo these vars change the number of cores that get busy when you run your code (as seen with, e.g., `htop`)? Are the timings independent of this?\r\n\r\nFor me, the only way to have the number of busy cores reflect the value in `OMP_NUM_THREADS` was the installation procedure described in my previous post. But the timings were not significantly different across various values of `OMP_NUM_THREADS`."}