{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/163359526", "pull_request_review_id": 90949676, "id": 163359526, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MzM1OTUyNg==", "diff_hunk": "@@ -34,6 +34,7 @@\n \n WITH_DISTRIBUTED = not check_env_flag('NO_DISTRIBUTED') and not IS_WINDOWS\n WITH_DISTRIBUTED_MW = WITH_DISTRIBUTED and check_env_flag('WITH_DISTRIBUTED_MW')\n+WITH_GLOO_IBVERBS = check_env_flag('WITH_GLOO_IBVERBS')", "path": "setup.py", "position": null, "original_position": 4, "commit_id": "b45de3a1281aef5cfa14013ecdbad556e0c98f4c", "original_commit_id": "8647463fa1f32ff86cc8db34df23612263466cd9", "user": {"login": "teng-li", "id": 8120856, "node_id": "MDQ6VXNlcjgxMjA4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8120856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teng-li", "html_url": "https://github.com/teng-li", "followers_url": "https://api.github.com/users/teng-li/followers", "following_url": "https://api.github.com/users/teng-li/following{/other_user}", "gists_url": "https://api.github.com/users/teng-li/gists{/gist_id}", "starred_url": "https://api.github.com/users/teng-li/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teng-li/subscriptions", "organizations_url": "https://api.github.com/users/teng-li/orgs", "repos_url": "https://api.github.com/users/teng-li/repos", "events_url": "https://api.github.com/users/teng-li/events{/privacy}", "received_events_url": "https://api.github.com/users/teng-li/received_events", "type": "User", "site_admin": false}, "body": "This seems hacky since we can't expect all users to have ibstat installed on their machine.  Let's do this then, we always build Gloo with both TCP and IB support, so that we don't need this flag. (Or we always set this flag on).\r\n\r\nThe purpose of autodetect and set this flag on is that if the machine has IB, we build/use the IB, and if the machine doesn't, we build/use the TCP. Why not we just build Gloo for both? And then in Gloo data channel, use the API to detect if we have IB interfaces. If yes, use IB, otherwise, fallback to TCP.", "created_at": "2018-01-23T19:57:43Z", "updated_at": "2018-11-23T15:38:28Z", "html_url": "https://github.com/pytorch/pytorch/pull/4795#discussion_r163359526", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4795", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/163359526"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4795#discussion_r163359526"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4795"}}, "body_html": "<p>This seems hacky since we can't expect all users to have ibstat installed on their machine.  Let's do this then, we always build Gloo with both TCP and IB support, so that we don't need this flag. (Or we always set this flag on).</p>\n<p>The purpose of autodetect and set this flag on is that if the machine has IB, we build/use the IB, and if the machine doesn't, we build/use the TCP. Why not we just build Gloo for both? And then in Gloo data channel, use the API to detect if we have IB interfaces. If yes, use IB, otherwise, fallback to TCP.</p>", "body_text": "This seems hacky since we can't expect all users to have ibstat installed on their machine.  Let's do this then, we always build Gloo with both TCP and IB support, so that we don't need this flag. (Or we always set this flag on).\nThe purpose of autodetect and set this flag on is that if the machine has IB, we build/use the IB, and if the machine doesn't, we build/use the TCP. Why not we just build Gloo for both? And then in Gloo data channel, use the API to detect if we have IB interfaces. If yes, use IB, otherwise, fallback to TCP.", "in_reply_to_id": 163193671}