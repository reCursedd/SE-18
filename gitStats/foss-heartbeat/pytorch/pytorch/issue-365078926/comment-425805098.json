{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/425805098", "html_url": "https://github.com/pytorch/pytorch/issues/12190#issuecomment-425805098", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12190", "id": 425805098, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTgwNTA5OA==", "user": {"login": "neerajprad", "id": 1762463, "node_id": "MDQ6VXNlcjE3NjI0NjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1762463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neerajprad", "html_url": "https://github.com/neerajprad", "followers_url": "https://api.github.com/users/neerajprad/followers", "following_url": "https://api.github.com/users/neerajprad/following{/other_user}", "gists_url": "https://api.github.com/users/neerajprad/gists{/gist_id}", "starred_url": "https://api.github.com/users/neerajprad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neerajprad/subscriptions", "organizations_url": "https://api.github.com/users/neerajprad/orgs", "repos_url": "https://api.github.com/users/neerajprad/repos", "events_url": "https://api.github.com/users/neerajprad/events{/privacy}", "received_events_url": "https://api.github.com/users/neerajprad/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-01T06:46:09Z", "updated_at": "2018-10-01T06:46:09Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a> : Oddly, it seems that the slowdown is simply in the exponentiation operation. You can see this above too in the line profiler output <code>self.scale ** 2</code> or simply <code>torch.ones(1000, 2) ** 2</code> has slowed down by a factor of 2. It also seems that the performance degrades only for certain shapes (e.g. <code>torch.ones(1000, 100) ** 2</code> has roughly the same perf), from what I can see.</p>", "body_text": "@SsnL : Oddly, it seems that the slowdown is simply in the exponentiation operation. You can see this above too in the line profiler output self.scale ** 2 or simply torch.ones(1000, 2) ** 2 has slowed down by a factor of 2. It also seems that the performance degrades only for certain shapes (e.g. torch.ones(1000, 100) ** 2 has roughly the same perf), from what I can see.", "body": "@SsnL : Oddly, it seems that the slowdown is simply in the exponentiation operation. You can see this above too in the line profiler output `self.scale ** 2` or simply `torch.ones(1000, 2) ** 2` has slowed down by a factor of 2. It also seems that the performance degrades only for certain shapes (e.g. `torch.ones(1000, 100) ** 2` has roughly the same perf), from what I can see."}