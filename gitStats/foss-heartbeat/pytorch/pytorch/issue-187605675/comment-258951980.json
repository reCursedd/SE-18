{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/258951980", "html_url": "https://github.com/pytorch/pytorch/pull/205#issuecomment-258951980", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/205", "id": 258951980, "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODk1MTk4MA==", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-07T20:25:07Z", "updated_at": "2016-11-07T20:25:07Z", "author_association": "MEMBER", "body_html": "<p>addressed comments. Now looks like this:</p>\n<pre><code>_netD (\n  (main): Sequential (\n    (0): Sequential (\n      (0): Sequential (\n        (0): Sequential (\n          (0): Conv2d (3 -&gt; 64, size = (4, 4), stride = (2, 2), padding = (1, 1), bias = False)\n          (1): LeakyReLU (negative slope = 0.2, inplace)\n          (2): Conv2d (64 -&gt; 128, size = (4, 4), stride = (2, 2), padding = (1, 1), bias = False)\n          (3): BatchNorm2d (128, eps = 1e-05, momentum = 0.1, affine = True)\n          (4): LeakyReLU (negative slope = 0.2, inplace)\n          (5): Conv2d (128 -&gt; 256, size = (4, 4), stride = (2, 2), padding = (1, 1), bias = False)\n          (6): BatchNorm2d (256, eps = 1e-05, momentum = 0.1, affine = True)\n          (7): LeakyReLU (negative slope = 0.2, inplace)\n          (8): Conv2d (256 -&gt; 512, size = (4, 4), stride = (2, 2), padding = (1, 1), bias = False)\n          (9): BatchNorm2d (512, eps = 1e-05, momentum = 0.1, affine = True)\n          (10): LeakyReLU (negative slope = 0.2, inplace)\n          (11): Conv2d (512 -&gt; 1, size = (4, 4), stride = (1, 1), bias = False)\n          (12): Sigmoid ()\n        )\n      )\n    )\n  )\n)\n</code></pre>", "body_text": "addressed comments. Now looks like this:\n_netD (\n  (main): Sequential (\n    (0): Sequential (\n      (0): Sequential (\n        (0): Sequential (\n          (0): Conv2d (3 -> 64, size = (4, 4), stride = (2, 2), padding = (1, 1), bias = False)\n          (1): LeakyReLU (negative slope = 0.2, inplace)\n          (2): Conv2d (64 -> 128, size = (4, 4), stride = (2, 2), padding = (1, 1), bias = False)\n          (3): BatchNorm2d (128, eps = 1e-05, momentum = 0.1, affine = True)\n          (4): LeakyReLU (negative slope = 0.2, inplace)\n          (5): Conv2d (128 -> 256, size = (4, 4), stride = (2, 2), padding = (1, 1), bias = False)\n          (6): BatchNorm2d (256, eps = 1e-05, momentum = 0.1, affine = True)\n          (7): LeakyReLU (negative slope = 0.2, inplace)\n          (8): Conv2d (256 -> 512, size = (4, 4), stride = (2, 2), padding = (1, 1), bias = False)\n          (9): BatchNorm2d (512, eps = 1e-05, momentum = 0.1, affine = True)\n          (10): LeakyReLU (negative slope = 0.2, inplace)\n          (11): Conv2d (512 -> 1, size = (4, 4), stride = (1, 1), bias = False)\n          (12): Sigmoid ()\n        )\n      )\n    )\n  )\n)", "body": "addressed comments. Now looks like this:\n\n```\n_netD (\n  (main): Sequential (\n    (0): Sequential (\n      (0): Sequential (\n        (0): Sequential (\n          (0): Conv2d (3 -> 64, size = (4, 4), stride = (2, 2), padding = (1, 1), bias = False)\n          (1): LeakyReLU (negative slope = 0.2, inplace)\n          (2): Conv2d (64 -> 128, size = (4, 4), stride = (2, 2), padding = (1, 1), bias = False)\n          (3): BatchNorm2d (128, eps = 1e-05, momentum = 0.1, affine = True)\n          (4): LeakyReLU (negative slope = 0.2, inplace)\n          (5): Conv2d (128 -> 256, size = (4, 4), stride = (2, 2), padding = (1, 1), bias = False)\n          (6): BatchNorm2d (256, eps = 1e-05, momentum = 0.1, affine = True)\n          (7): LeakyReLU (negative slope = 0.2, inplace)\n          (8): Conv2d (256 -> 512, size = (4, 4), stride = (2, 2), padding = (1, 1), bias = False)\n          (9): BatchNorm2d (512, eps = 1e-05, momentum = 0.1, affine = True)\n          (10): LeakyReLU (negative slope = 0.2, inplace)\n          (11): Conv2d (512 -> 1, size = (4, 4), stride = (1, 1), bias = False)\n          (12): Sigmoid ()\n        )\n      )\n    )\n  )\n)\n```\n"}