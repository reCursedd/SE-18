{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/387866313", "html_url": "https://github.com/pytorch/pytorch/pull/7204#issuecomment-387866313", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7204", "id": 387866313, "node_id": "MDEyOklzc3VlQ29tbWVudDM4Nzg2NjMxMw==", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-09T20:31:45Z", "updated_at": "2018-05-09T20:31:45Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I've changed it so that the <code>metadata</code> is only cached when a process receives a handle and opens it (or has opened the handle). A process that allocated a tensor and shares it does not cache the metadata, even after receiving that tensor back.</p>", "body_text": "I've changed it so that the metadata is only cached when a process receives a handle and opens it (or has opened the handle). A process that allocated a tensor and shares it does not cache the metadata, even after receiving that tensor back.", "body": "I've changed it so that the `metadata` is only cached when a process receives a handle and opens it (or has opened the handle). A process that allocated a tensor and shares it does not cache the metadata, even after receiving that tensor back."}