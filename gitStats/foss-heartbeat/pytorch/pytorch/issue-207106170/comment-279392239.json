{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/279392239", "html_url": "https://github.com/pytorch/pytorch/issues/728#issuecomment-279392239", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/728", "id": 279392239, "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTM5MjIzOQ==", "user": {"login": "Teaonly", "id": 2042911, "node_id": "MDQ6VXNlcjIwNDI5MTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2042911?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Teaonly", "html_url": "https://github.com/Teaonly", "followers_url": "https://api.github.com/users/Teaonly/followers", "following_url": "https://api.github.com/users/Teaonly/following{/other_user}", "gists_url": "https://api.github.com/users/Teaonly/gists{/gist_id}", "starred_url": "https://api.github.com/users/Teaonly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Teaonly/subscriptions", "organizations_url": "https://api.github.com/users/Teaonly/orgs", "repos_url": "https://api.github.com/users/Teaonly/repos", "events_url": "https://api.github.com/users/Teaonly/events{/privacy}", "received_events_url": "https://api.github.com/users/Teaonly/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-13T13:29:24Z", "updated_at": "2017-02-13T13:29:24Z", "author_association": "CONTRIBUTOR", "body_html": "<pre><code>/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/algorithm:2599:1: note:\n      candidate template ignored: could not match 'initializer_list&lt;type-parameter-0-0&gt;' against 'long long'\nmin(initializer_list&lt;_Tp&gt; __t, _Compare __comp)\n^\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/algorithm:2581:1: note:\n      candidate function template not viable: requires 3 arguments, but 2 were provided\nmin(const _Tp&amp; __a, const _Tp&amp; __b, _Compare __comp)\n^\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/algorithm:2607:1: note:\n      candidate function template not viable: requires single argument '__t', but 2 arguments were provided\nmin(initializer_list&lt;_Tp&gt; __t)\n^\n14 errors generated.\n/usr/bin/clang -Wno-unused-result -Wsign-compare -Wunreachable-code -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -I/Users/teaonly/opt/anaconda3/include -arch x86_64 -I/Users/teaonly/Workspace/github/pytorch -I/Users/teaonly/Workspace/github/pytorch/torch/csrc -I/Users/teaonly/Workspace/github/pytorch/torch/lib/tmp_install/include -I/Users/teaonly/Workspace/github/pytorch/torch/lib/tmp_install/include/TH -I/Users/teaonly/Workspace/github/pytorch/torch/lib/tmp_install/include/THPP -I/Users/teaonly/Workspace/github/pytorch/torch/lib/tmp_install/include/THNN -I/Users/teaonly/opt/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/Users/teaonly/opt/anaconda3/include/python3.5m -c torch/csrc/autograd/init.cpp -o build/temp.macosx-10.6-x86_64-3.5/torch/csrc/autograd/init.o -D_THP_CORE -std=c++11 -Wno-write-strings -DWITH_NUMPY\nerror: command '/usr/bin/clang' failed with exit status 1\naliwork:pytorch teaonly$ echo $MACOSX_DEPLOYMENT_TARGET\n10.9\n</code></pre>\n<p>I have setup env. If modify code like following, the pytorch will be installed.</p>\n<pre><code>--- a/torch/csrc/generic/serialization.cpp\n+++ b/torch/csrc/generic/serialization.cpp\n@@ -52,7 +52,7 @@ void THPStorage_(writeFileRaw)(THStorage *self, int fd)\n     long buffer_size = std::min(self-&gt;size, (long)5000);\n     std::unique_ptr&lt;uint8_t[]&gt; le_buffer(new uint8_t[buffer_size * sizeof(real)]);\n     for (int64_t i = 0; i &lt; self-&gt;size; i += buffer_size) {\n-      size_t to_convert = std::min(self-&gt;size - i, buffer_size);\n+      size_t to_convert = std::min(self-&gt;size - (int)i, buffer_size);\n       if (sizeof(real) == 2) {\n         THP_encodeInt16Buffer((uint8_t*)le_buffer.get(),\n             (const int16_t*)data + i,\n@@ -103,7 +103,7 @@ THStorage * THPStorage_(readFileRaw)(int fd)\n     long buffer_size = std::min(size, (long)5000);\n     std::unique_ptr&lt;uint8_t[]&gt; le_buffer(new uint8_t[buffer_size * sizeof(real)]);\n     for (int64_t i = 0; i &lt; size; i += buffer_size) {\n-      size_t to_convert = std::min(size - i, buffer_size);\n+      size_t to_convert = std::min(size - (int)i, buffer_size);\n       SYSCHECK(read(fd, le_buffer.get(), sizeof(real) * to_convert));\n       if (sizeof(real) == 2) {\n         THP_decodeInt16Buffer((int16_t*)data + i,\n</code></pre>", "body_text": "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/algorithm:2599:1: note:\n      candidate template ignored: could not match 'initializer_list<type-parameter-0-0>' against 'long long'\nmin(initializer_list<_Tp> __t, _Compare __comp)\n^\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/algorithm:2581:1: note:\n      candidate function template not viable: requires 3 arguments, but 2 were provided\nmin(const _Tp& __a, const _Tp& __b, _Compare __comp)\n^\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/algorithm:2607:1: note:\n      candidate function template not viable: requires single argument '__t', but 2 arguments were provided\nmin(initializer_list<_Tp> __t)\n^\n14 errors generated.\n/usr/bin/clang -Wno-unused-result -Wsign-compare -Wunreachable-code -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -I/Users/teaonly/opt/anaconda3/include -arch x86_64 -I/Users/teaonly/Workspace/github/pytorch -I/Users/teaonly/Workspace/github/pytorch/torch/csrc -I/Users/teaonly/Workspace/github/pytorch/torch/lib/tmp_install/include -I/Users/teaonly/Workspace/github/pytorch/torch/lib/tmp_install/include/TH -I/Users/teaonly/Workspace/github/pytorch/torch/lib/tmp_install/include/THPP -I/Users/teaonly/Workspace/github/pytorch/torch/lib/tmp_install/include/THNN -I/Users/teaonly/opt/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/Users/teaonly/opt/anaconda3/include/python3.5m -c torch/csrc/autograd/init.cpp -o build/temp.macosx-10.6-x86_64-3.5/torch/csrc/autograd/init.o -D_THP_CORE -std=c++11 -Wno-write-strings -DWITH_NUMPY\nerror: command '/usr/bin/clang' failed with exit status 1\naliwork:pytorch teaonly$ echo $MACOSX_DEPLOYMENT_TARGET\n10.9\n\nI have setup env. If modify code like following, the pytorch will be installed.\n--- a/torch/csrc/generic/serialization.cpp\n+++ b/torch/csrc/generic/serialization.cpp\n@@ -52,7 +52,7 @@ void THPStorage_(writeFileRaw)(THStorage *self, int fd)\n     long buffer_size = std::min(self->size, (long)5000);\n     std::unique_ptr<uint8_t[]> le_buffer(new uint8_t[buffer_size * sizeof(real)]);\n     for (int64_t i = 0; i < self->size; i += buffer_size) {\n-      size_t to_convert = std::min(self->size - i, buffer_size);\n+      size_t to_convert = std::min(self->size - (int)i, buffer_size);\n       if (sizeof(real) == 2) {\n         THP_encodeInt16Buffer((uint8_t*)le_buffer.get(),\n             (const int16_t*)data + i,\n@@ -103,7 +103,7 @@ THStorage * THPStorage_(readFileRaw)(int fd)\n     long buffer_size = std::min(size, (long)5000);\n     std::unique_ptr<uint8_t[]> le_buffer(new uint8_t[buffer_size * sizeof(real)]);\n     for (int64_t i = 0; i < size; i += buffer_size) {\n-      size_t to_convert = std::min(size - i, buffer_size);\n+      size_t to_convert = std::min(size - (int)i, buffer_size);\n       SYSCHECK(read(fd, le_buffer.get(), sizeof(real) * to_convert));\n       if (sizeof(real) == 2) {\n         THP_decodeInt16Buffer((int16_t*)data + i,", "body": "```\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/algorithm:2599:1: note:\r\n      candidate template ignored: could not match 'initializer_list<type-parameter-0-0>' against 'long long'\r\nmin(initializer_list<_Tp> __t, _Compare __comp)\r\n^\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/algorithm:2581:1: note:\r\n      candidate function template not viable: requires 3 arguments, but 2 were provided\r\nmin(const _Tp& __a, const _Tp& __b, _Compare __comp)\r\n^\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/algorithm:2607:1: note:\r\n      candidate function template not viable: requires single argument '__t', but 2 arguments were provided\r\nmin(initializer_list<_Tp> __t)\r\n^\r\n14 errors generated.\r\n/usr/bin/clang -Wno-unused-result -Wsign-compare -Wunreachable-code -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -I/Users/teaonly/opt/anaconda3/include -arch x86_64 -I/Users/teaonly/Workspace/github/pytorch -I/Users/teaonly/Workspace/github/pytorch/torch/csrc -I/Users/teaonly/Workspace/github/pytorch/torch/lib/tmp_install/include -I/Users/teaonly/Workspace/github/pytorch/torch/lib/tmp_install/include/TH -I/Users/teaonly/Workspace/github/pytorch/torch/lib/tmp_install/include/THPP -I/Users/teaonly/Workspace/github/pytorch/torch/lib/tmp_install/include/THNN -I/Users/teaonly/opt/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/Users/teaonly/opt/anaconda3/include/python3.5m -c torch/csrc/autograd/init.cpp -o build/temp.macosx-10.6-x86_64-3.5/torch/csrc/autograd/init.o -D_THP_CORE -std=c++11 -Wno-write-strings -DWITH_NUMPY\r\nerror: command '/usr/bin/clang' failed with exit status 1\r\naliwork:pytorch teaonly$ echo $MACOSX_DEPLOYMENT_TARGET\r\n10.9\r\n```\r\n\r\nI have setup env. If modify code like following, the pytorch will be installed.\r\n\r\n```\r\n--- a/torch/csrc/generic/serialization.cpp\r\n+++ b/torch/csrc/generic/serialization.cpp\r\n@@ -52,7 +52,7 @@ void THPStorage_(writeFileRaw)(THStorage *self, int fd)\r\n     long buffer_size = std::min(self->size, (long)5000);\r\n     std::unique_ptr<uint8_t[]> le_buffer(new uint8_t[buffer_size * sizeof(real)]);\r\n     for (int64_t i = 0; i < self->size; i += buffer_size) {\r\n-      size_t to_convert = std::min(self->size - i, buffer_size);\r\n+      size_t to_convert = std::min(self->size - (int)i, buffer_size);\r\n       if (sizeof(real) == 2) {\r\n         THP_encodeInt16Buffer((uint8_t*)le_buffer.get(),\r\n             (const int16_t*)data + i,\r\n@@ -103,7 +103,7 @@ THStorage * THPStorage_(readFileRaw)(int fd)\r\n     long buffer_size = std::min(size, (long)5000);\r\n     std::unique_ptr<uint8_t[]> le_buffer(new uint8_t[buffer_size * sizeof(real)]);\r\n     for (int64_t i = 0; i < size; i += buffer_size) {\r\n-      size_t to_convert = std::min(size - i, buffer_size);\r\n+      size_t to_convert = std::min(size - (int)i, buffer_size);\r\n       SYSCHECK(read(fd, le_buffer.get(), sizeof(real) * to_convert));\r\n       if (sizeof(real) == 2) {\r\n         THP_decodeInt16Buffer((int16_t*)data + i,\r\n```\r\n\r\n\r\n"}