{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/159766412", "pull_request_review_id": 86771612, "id": 159766412, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTc2NjQxMg==", "diff_hunk": "@@ -29,6 +29,23 @@ def event_shape(self):\n         \"\"\"\n         return self._event_shape\n \n+    @property\n+    def params(self):\n+        \"\"\"\n+        Returns a dictionary from param names to `Constraint` objects that\n+        should be satisfied by each parameter of this distribution. For\n+        distributions with multiple parameterization, only one complete\n+        set of parameters should be specified in `.params`.\n+        \"\"\"\n+        raise NotImplementedError\n+\n+    @property\n+    def support(self):", "path": "torch/distributions/distribution.py", "position": 15, "original_position": 15, "commit_id": "cedb47186572d0eb21d1930825ee597c3e7b9a03", "original_commit_id": "2093fac4d4316a93eccb5a89ae78d165bb68fb8d", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Hmm I think that if we want to make these attrs be part of the class interface too this won't be enough - `Distribution.params` will still be a valid thing and return the descriptor (and the same applies to `DistributionThatDoesntDefineParamsAtAll.params`). If we want to make it raise an error on all kinds of accesses we would need to make it a descriptor that always raises in `__get__`\r\n\r\nNot a big deal ofc, I'm ok with merging this as is. Just pointing out a possible improvement. Let me know what you want to do.\r\n  ", "created_at": "2018-01-04T22:01:57Z", "updated_at": "2018-11-23T15:37:50Z", "html_url": "https://github.com/pytorch/pytorch/pull/4450#discussion_r159766412", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4450", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/159766412"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4450#discussion_r159766412"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4450"}}, "body_html": "<p>Hmm I think that if we want to make these attrs be part of the class interface too this won't be enough - <code>Distribution.params</code> will still be a valid thing and return the descriptor (and the same applies to <code>DistributionThatDoesntDefineParamsAtAll.params</code>). If we want to make it raise an error on all kinds of accesses we would need to make it a descriptor that always raises in <code>__get__</code></p>\n<p>Not a big deal ofc, I'm ok with merging this as is. Just pointing out a possible improvement. Let me know what you want to do.</p>", "body_text": "Hmm I think that if we want to make these attrs be part of the class interface too this won't be enough - Distribution.params will still be a valid thing and return the descriptor (and the same applies to DistributionThatDoesntDefineParamsAtAll.params). If we want to make it raise an error on all kinds of accesses we would need to make it a descriptor that always raises in __get__\nNot a big deal ofc, I'm ok with merging this as is. Just pointing out a possible improvement. Let me know what you want to do."}