{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/420083857", "html_url": "https://github.com/pytorch/pytorch/pull/11342#issuecomment-420083857", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11342", "id": 420083857, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDA4Mzg1Nw==", "user": {"login": "realdoug", "id": 2383488, "node_id": "MDQ6VXNlcjIzODM0ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/2383488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/realdoug", "html_url": "https://github.com/realdoug", "followers_url": "https://api.github.com/users/realdoug/followers", "following_url": "https://api.github.com/users/realdoug/following{/other_user}", "gists_url": "https://api.github.com/users/realdoug/gists{/gist_id}", "starred_url": "https://api.github.com/users/realdoug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/realdoug/subscriptions", "organizations_url": "https://api.github.com/users/realdoug/orgs", "repos_url": "https://api.github.com/users/realdoug/repos", "events_url": "https://api.github.com/users/realdoug/events{/privacy}", "received_events_url": "https://api.github.com/users/realdoug/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-10T22:34:55Z", "updated_at": "2018-09-10T22:38:18Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I've pushed a new version w/ rename &amp; replaced the for loops.  This implementation does not share storage, but it is an improvement over to_dense().narrow().</p>\n<p>If there is an easy way to do <code>Tensor newValues = self._values().masked_select(mask);</code><br>\nwhile preserving shared storage, let me know.  Otherwise I think I'd have to rely on/enforce that the values tensor is contiguous, meaning indices must be sorted by the dimension being narrowed on.</p>", "body_text": "I've pushed a new version w/ rename & replaced the for loops.  This implementation does not share storage, but it is an improvement over to_dense().narrow().\nIf there is an easy way to do Tensor newValues = self._values().masked_select(mask);\nwhile preserving shared storage, let me know.  Otherwise I think I'd have to rely on/enforce that the values tensor is contiguous, meaning indices must be sorted by the dimension being narrowed on.", "body": "I've pushed a new version w/ rename & replaced the for loops.  This implementation does not share storage, but it is an improvement over to_dense().narrow().\r\n\r\nIf there is an easy way to do ```Tensor newValues = self._values().masked_select(mask);```\r\nwhile preserving shared storage, let me know.  Otherwise I think I'd have to rely on/enforce that the values tensor is contiguous, meaning indices must be sorted by the dimension being narrowed on."}