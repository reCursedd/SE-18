{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/420514459", "html_url": "https://github.com/pytorch/pytorch/pull/11342#issuecomment-420514459", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11342", "id": 420514459, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDUxNDQ1OQ==", "user": {"login": "realdoug", "id": 2383488, "node_id": "MDQ6VXNlcjIzODM0ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/2383488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/realdoug", "html_url": "https://github.com/realdoug", "followers_url": "https://api.github.com/users/realdoug/followers", "following_url": "https://api.github.com/users/realdoug/following{/other_user}", "gists_url": "https://api.github.com/users/realdoug/gists{/gist_id}", "starred_url": "https://api.github.com/users/realdoug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/realdoug/subscriptions", "organizations_url": "https://api.github.com/users/realdoug/orgs", "repos_url": "https://api.github.com/users/realdoug/repos", "events_url": "https://api.github.com/users/realdoug/events{/privacy}", "received_events_url": "https://api.github.com/users/realdoug/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-12T05:12:58Z", "updated_at": "2018-09-12T05:24:25Z", "author_association": "CONTRIBUTOR", "body_html": "<blockquote>\n<p>I don't see how your second sentence follows from the first. There's no way to do a <code>masked_select</code> that preserves shared storage. But if you select the correct values for the indices in the narrow range, I don't see why they have to be <em>sorted</em>. You've already committed to doing an <code>O(n)</code> operation...</p>\n</blockquote>\n<p>Sorry, I skipped a few logical steps there.  I was just referring to the fact that you can theoretically do <code>values[start:end]</code> which does preserve storage.</p>", "body_text": "I don't see how your second sentence follows from the first. There's no way to do a masked_select that preserves shared storage. But if you select the correct values for the indices in the narrow range, I don't see why they have to be sorted. You've already committed to doing an O(n) operation...\n\nSorry, I skipped a few logical steps there.  I was just referring to the fact that you can theoretically do values[start:end] which does preserve storage.", "body": "> I don't see how your second sentence follows from the first. There's no way to do a `masked_select` that preserves shared storage. But if you select the correct values for the indices in the narrow range, I don't see why they have to be _sorted_. You've already committed to doing an `O(n)` operation...\r\n\r\nSorry, I skipped a few logical steps there.  I was just referring to the fact that you can theoretically do ```values[start:end]``` which does preserve storage."}