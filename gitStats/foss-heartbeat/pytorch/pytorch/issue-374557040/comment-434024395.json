{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/434024395", "html_url": "https://github.com/pytorch/pytorch/issues/13188#issuecomment-434024395", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/13188", "id": 434024395, "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDAyNDM5NQ==", "user": {"login": "vadimkantorov", "id": 1041752, "node_id": "MDQ6VXNlcjEwNDE3NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1041752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimkantorov", "html_url": "https://github.com/vadimkantorov", "followers_url": "https://api.github.com/users/vadimkantorov/followers", "following_url": "https://api.github.com/users/vadimkantorov/following{/other_user}", "gists_url": "https://api.github.com/users/vadimkantorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimkantorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimkantorov/subscriptions", "organizations_url": "https://api.github.com/users/vadimkantorov/orgs", "repos_url": "https://api.github.com/users/vadimkantorov/repos", "events_url": "https://api.github.com/users/vadimkantorov/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimkantorov/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-29T18:22:25Z", "updated_at": "2018-10-29T18:24:16Z", "author_association": "NONE", "body_html": "<p>What about a prevention part: test case during CMake compilation that does only \"#include &lt;cudnn.h&gt;\" and checks that the real used header comes from the user-specified location?</p>\n<p>Then maybe it's possible to simply compiling the header file as if it was a compilation unit itself? Like <code>gcc cudnn.h -o cudnn.o</code>?</p>\n<p>Then also there is a mysterious keys <code>-isystem</code> and <code>-nostdinc</code>: <a href=\"https://www.cleancss.com/explain-command/gcc/5271\" rel=\"nofollow\">https://www.cleancss.com/explain-command/gcc/5271</a> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"171090787\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/bazelbuild/bazel/issues/1642\" data-hovercard-type=\"issue\" data-hovercard-url=\"/bazelbuild/bazel/issues/1642/hovercard\" href=\"https://github.com/bazelbuild/bazel/issues/1642\">bazelbuild/bazel#1642</a></p>", "body_text": "What about a prevention part: test case during CMake compilation that does only \"#include <cudnn.h>\" and checks that the real used header comes from the user-specified location?\nThen maybe it's possible to simply compiling the header file as if it was a compilation unit itself? Like gcc cudnn.h -o cudnn.o?\nThen also there is a mysterious keys -isystem and -nostdinc: https://www.cleancss.com/explain-command/gcc/5271 bazelbuild/bazel#1642", "body": "What about a prevention part: test case during CMake compilation that does only \"#include <cudnn.h>\" and checks that the real used header comes from the user-specified location?\r\n\r\nThen maybe it's possible to simply compiling the header file as if it was a compilation unit itself? Like `gcc cudnn.h -o cudnn.o`?\r\n\r\nThen also there is a mysterious keys `-isystem` and `-nostdinc`: https://www.cleancss.com/explain-command/gcc/5271 https://github.com/bazelbuild/bazel/issues/1642"}