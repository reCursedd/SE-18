{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/110079522", "pull_request_review_id": 31224264, "id": 110079522, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDA3OTUyMg==", "diff_hunk": "@@ -354,15 +354,43 @@ def test_fmod(self):\n         self.assertEqual(res1, res2)\n \n     def test_remainder(self):\n+        # Check the Floating point case\n         m1 = torch.Tensor(10, 10).uniform_(-10., 10.)\n         res1 = m1.clone()\n-        q = 2.1\n-        res1[:, 3].remainder_(q)\n         res2 = m1.clone()\n-        for i in range(m1.size(0)):\n-            res2[i, 3] = res2[i, 3] % q\n+        qs = torch.range(-5.1, 4.1)\n+        # Check the case where the divisor is a simple float\n+        for col_idx, q in enumerate(qs):\n+            # Reference\n+            for i in range(m1.size(0)):\n+                res2[i, col_idx] = res2[i, col_idx] % q\n+            # To test\n+            res1[:, col_idx].remainder_(q)\n+        self.assertEqual(res1, res2)\n+        # Check the case where the divisor is a tensor\n+        res1 = m1.clone()\n+        res1.remainder_(qs.unsqueeze(0).expand_as(res1))\n         self.assertEqual(res1, res2)\n \n+        # Check the LongTensor case\n+        long_m1 = torch.LongTensor(10, 10).random_(-10, 10)\n+        long_res1 = long_m1.clone()\n+        long_res2 = long_m1.clone()\n+        long_qs = torch.range(-5, 4).long()\n+        long_qs[5] = 5  # Can't handle the divisor=0 case", "path": "test/test_torch.py", "position": 31, "original_position": 31, "commit_id": "d6760a245d24f391a0e1178a00de72c2bc0a790f", "original_commit_id": "14c1ecb9848c0a04aee9b693bdc33d12eb9aa029", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "body": "it's not worth adding the div by zero exceptions. A lot of code has to be touched / refactored to enable this.", "created_at": "2017-04-06T05:02:29Z", "updated_at": "2018-11-23T15:33:01Z", "html_url": "https://github.com/pytorch/pytorch/pull/1170#discussion_r110079522", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1170", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/110079522"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1170#discussion_r110079522"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1170"}}, "body_html": "<p>it's not worth adding the div by zero exceptions. A lot of code has to be touched / refactored to enable this.</p>", "body_text": "it's not worth adding the div by zero exceptions. A lot of code has to be touched / refactored to enable this.", "in_reply_to_id": 109329065}