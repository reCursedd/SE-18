{"url": "https://api.github.com/repos/pytorch/pytorch/issues/94", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/94/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/94/events", "html_url": "https://github.com/pytorch/pytorch/issues/94", "id": 180587985, "node_id": "MDU6SXNzdWUxODA1ODc5ODU=", "number": 94, "title": "indexing bug on Variable", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-03T08:38:06Z", "updated_at": "2016-10-03T18:49:30Z", "closed_at": "2016-10-03T18:49:30Z", "author_association": "MEMBER", "body_html": "<p>RuntimeError: indexing a tensor with an object of type tuple. The only supported types are integers, slices and torch.ByteTensor.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">from</span> torch.autograd <span class=\"pl-k\">import</span> Variable\nb <span class=\"pl-k\">=</span> Variable(torch.randn(<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">20</span>))\nb[:,:<span class=\"pl-c1\">5</span>]</pre></div>\n<pre><code>---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\n&lt;ipython-input-9-039a3f3ae91a&gt; in &lt;module&gt;()\n----&gt; 1 b[:,:5]\n\n/Users/soumith/anaconda/lib/python2.7/site-packages/torch/autograd/variable.pyc in __getitem__(self, key)\n     55         if isinstance(key, Variable) and isinstance(key.data, torch.ByteTensor):\n     56             return MaskedSelect()(self, key)\n---&gt; 57         return Index(key)(self)\n     58 \n     59     # TODO: setitem\n\n/Users/soumith/anaconda/lib/python2.7/site-packages/torch/autograd/function.pyc in __call__(self, *input)\n     16 \n     17     def __call__(self, *input):\n---&gt; 18         return self._do_forward(*input)\n     19 \n     20     def save_for_backward(self, *tensors):\n\n/Users/soumith/anaconda/lib/python2.7/site-packages/torch/autograd/function.pyc in _do_forward(self, *input)\n     48             self.previous_functions = [(arg.creator or arg, id(arg)) for arg in input]\n     49 \n---&gt; 50         raw_output = self.forward(*unpacked_input)\n     51         if not isinstance(raw_output, tuple):\n     52             raw_output = (raw_output,)\n\n/Users/soumith/anaconda/lib/python2.7/site-packages/torch/autograd/functions/tensor.pyc in forward(self, i)\n     15     def forward(self, i):\n     16         self.input_size = i.size()\n---&gt; 17         return i[self.index]\n     18 \n     19     def backward(self, grad_output):\n\nRuntimeError: indexing a tensor with an object of type tuple. The only supported types are integers, slices and torch.ByteTensor\n</code></pre>", "body_text": "RuntimeError: indexing a tensor with an object of type tuple. The only supported types are integers, slices and torch.ByteTensor.\nfrom torch.autograd import Variable\nb = Variable(torch.randn(10, 20))\nb[:,:5]\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\n<ipython-input-9-039a3f3ae91a> in <module>()\n----> 1 b[:,:5]\n\n/Users/soumith/anaconda/lib/python2.7/site-packages/torch/autograd/variable.pyc in __getitem__(self, key)\n     55         if isinstance(key, Variable) and isinstance(key.data, torch.ByteTensor):\n     56             return MaskedSelect()(self, key)\n---> 57         return Index(key)(self)\n     58 \n     59     # TODO: setitem\n\n/Users/soumith/anaconda/lib/python2.7/site-packages/torch/autograd/function.pyc in __call__(self, *input)\n     16 \n     17     def __call__(self, *input):\n---> 18         return self._do_forward(*input)\n     19 \n     20     def save_for_backward(self, *tensors):\n\n/Users/soumith/anaconda/lib/python2.7/site-packages/torch/autograd/function.pyc in _do_forward(self, *input)\n     48             self.previous_functions = [(arg.creator or arg, id(arg)) for arg in input]\n     49 \n---> 50         raw_output = self.forward(*unpacked_input)\n     51         if not isinstance(raw_output, tuple):\n     52             raw_output = (raw_output,)\n\n/Users/soumith/anaconda/lib/python2.7/site-packages/torch/autograd/functions/tensor.pyc in forward(self, i)\n     15     def forward(self, i):\n     16         self.input_size = i.size()\n---> 17         return i[self.index]\n     18 \n     19     def backward(self, grad_output):\n\nRuntimeError: indexing a tensor with an object of type tuple. The only supported types are integers, slices and torch.ByteTensor", "body": "RuntimeError: indexing a tensor with an object of type tuple. The only supported types are integers, slices and torch.ByteTensor.\n\n``` python\nfrom torch.autograd import Variable\nb = Variable(torch.randn(10, 20))\nb[:,:5]\n```\n\n```\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\n<ipython-input-9-039a3f3ae91a> in <module>()\n----> 1 b[:,:5]\n\n/Users/soumith/anaconda/lib/python2.7/site-packages/torch/autograd/variable.pyc in __getitem__(self, key)\n     55         if isinstance(key, Variable) and isinstance(key.data, torch.ByteTensor):\n     56             return MaskedSelect()(self, key)\n---> 57         return Index(key)(self)\n     58 \n     59     # TODO: setitem\n\n/Users/soumith/anaconda/lib/python2.7/site-packages/torch/autograd/function.pyc in __call__(self, *input)\n     16 \n     17     def __call__(self, *input):\n---> 18         return self._do_forward(*input)\n     19 \n     20     def save_for_backward(self, *tensors):\n\n/Users/soumith/anaconda/lib/python2.7/site-packages/torch/autograd/function.pyc in _do_forward(self, *input)\n     48             self.previous_functions = [(arg.creator or arg, id(arg)) for arg in input]\n     49 \n---> 50         raw_output = self.forward(*unpacked_input)\n     51         if not isinstance(raw_output, tuple):\n     52             raw_output = (raw_output,)\n\n/Users/soumith/anaconda/lib/python2.7/site-packages/torch/autograd/functions/tensor.pyc in forward(self, i)\n     15     def forward(self, i):\n     16         self.input_size = i.size()\n---> 17         return i[self.index]\n     18 \n     19     def backward(self, grad_output):\n\nRuntimeError: indexing a tensor with an object of type tuple. The only supported types are integers, slices and torch.ByteTensor\n```\n"}