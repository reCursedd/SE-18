{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/387771205", "html_url": "https://github.com/pytorch/pytorch/pull/7375#issuecomment-387771205", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7375", "id": 387771205, "node_id": "MDEyOklzc3VlQ29tbWVudDM4Nzc3MTIwNQ==", "user": {"login": "cpuhrsch", "id": 1716488, "node_id": "MDQ6VXNlcjE3MTY0ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1716488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpuhrsch", "html_url": "https://github.com/cpuhrsch", "followers_url": "https://api.github.com/users/cpuhrsch/followers", "following_url": "https://api.github.com/users/cpuhrsch/following{/other_user}", "gists_url": "https://api.github.com/users/cpuhrsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpuhrsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpuhrsch/subscriptions", "organizations_url": "https://api.github.com/users/cpuhrsch/orgs", "repos_url": "https://api.github.com/users/cpuhrsch/repos", "events_url": "https://api.github.com/users/cpuhrsch/events{/privacy}", "received_events_url": "https://api.github.com/users/cpuhrsch/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-09T15:06:48Z", "updated_at": "2018-05-09T15:06:48Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1121581\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ajtulloch\">@ajtulloch</a> The code can definitely handle different bit width as it's only using Vec::size and you can ifdef on <a href=\"https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/CMakeLists.txt#L96\">CPU_CAPABILITY_</a>, but it's not clear if that'll immediately be a good idea without investigating case by case. As for ARM, the plan is to write only kernels specific to CPU for now.</p>\n<p>What do you think would be a good strategy?</p>", "body_text": "@ajtulloch The code can definitely handle different bit width as it's only using Vec::size and you can ifdef on CPU_CAPABILITY_, but it's not clear if that'll immediately be a good idea without investigating case by case. As for ARM, the plan is to write only kernels specific to CPU for now.\nWhat do you think would be a good strategy?", "body": "@ajtulloch The code can definitely handle different bit width as it's only using Vec::size and you can ifdef on [CPU_CAPABILITY_](https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/CMakeLists.txt#L96), but it's not clear if that'll immediately be a good idea without investigating case by case. As for ARM, the plan is to write only kernels specific to CPU for now.\r\n\r\nWhat do you think would be a good strategy?\r\n\r\n"}