{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/188137214", "pull_request_review_id": 120054794, "id": 188137214, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODEzNzIxNA==", "diff_hunk": "@@ -85,20 +139,98 @@ struct Vec256<int16_t> : public Vec256i {\n   using Vec256i::Vec256i;\n   Vec256() {}\n   Vec256(int16_t v) { values = _mm256_set1_epi16(v); }\n-  static Vec256<int16_t> s_load(const void* ptr) {\n-    Vec256<int16_t> vec;\n-    vec.load(ptr);\n-    return vec;\n+  template <int64_t mask>\n+  static Vec256<int16_t> blend(Vec256<int16_t> a, Vec256<int16_t> b) {\n+    __at_align32__ int16_t tmp_values[size];\n+    a.store(tmp_values);\n+    if (mask & 0x01)\n+      tmp_values[0] = _mm256_extract_epi16(b.values, 0);\n+    if (mask & 0x02)\n+      tmp_values[1] = _mm256_extract_epi16(b.values, 1);\n+    if (mask & 0x04)\n+      tmp_values[2] = _mm256_extract_epi16(b.values, 2);\n+    if (mask & 0x08)\n+      tmp_values[3] = _mm256_extract_epi16(b.values, 3);\n+    if (mask & 0x10)\n+      tmp_values[4] = _mm256_extract_epi16(b.values, 4);\n+    if (mask & 0x20)\n+      tmp_values[5] = _mm256_extract_epi16(b.values, 5);\n+    if (mask & 0x40)\n+      tmp_values[6] = _mm256_extract_epi16(b.values, 6);\n+    if (mask & 0x80)\n+      tmp_values[7] = _mm256_extract_epi16(b.values, 7);\n+    if (mask & 0x100)\n+      tmp_values[8] = _mm256_extract_epi16(b.values, 8);\n+    if (mask & 0x200)\n+      tmp_values[9] = _mm256_extract_epi16(b.values, 9);\n+    if (mask & 0x400)\n+      tmp_values[10] = _mm256_extract_epi16(b.values, 10);\n+    if (mask & 0x800)\n+      tmp_values[11] = _mm256_extract_epi16(b.values, 11);\n+    if (mask & 0x1000)\n+      tmp_values[12] = _mm256_extract_epi16(b.values, 12);\n+    if (mask & 0x2000)\n+      tmp_values[13] = _mm256_extract_epi16(b.values, 13);\n+    if (mask & 0x4000)\n+      tmp_values[14] = _mm256_extract_epi16(b.values, 14);\n+    if (mask & 0x8000)\n+      tmp_values[15] = _mm256_extract_epi16(b.values, 15);", "path": "aten/src/ATen/cpu/vec256/vec256_int.h", "position": 178, "original_position": 187, "commit_id": "b269b30289cf014a9bc3ce4924567ecb035a5fe1", "original_commit_id": "5daf54c358014219cfd16436f4db8f6fd8f45099", "user": {"login": "cpuhrsch", "id": 1716488, "node_id": "MDQ6VXNlcjE3MTY0ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1716488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpuhrsch", "html_url": "https://github.com/cpuhrsch", "followers_url": "https://api.github.com/users/cpuhrsch/followers", "following_url": "https://api.github.com/users/cpuhrsch/following{/other_user}", "gists_url": "https://api.github.com/users/cpuhrsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpuhrsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpuhrsch/subscriptions", "organizations_url": "https://api.github.com/users/cpuhrsch/orgs", "repos_url": "https://api.github.com/users/cpuhrsch/repos", "events_url": "https://api.github.com/users/cpuhrsch/events{/privacy}", "received_events_url": "https://api.github.com/users/cpuhrsch/received_events", "type": "User", "site_admin": false}, "body": "_mm256_blend_ps needs a constant as a third argument", "created_at": "2018-05-15T00:35:03Z", "updated_at": "2018-11-23T15:44:04Z", "html_url": "https://github.com/pytorch/pytorch/pull/7375#discussion_r188137214", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7375", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/188137214"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7375#discussion_r188137214"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7375"}}, "body_html": "<p>_mm256_blend_ps needs a constant as a third argument</p>", "body_text": "_mm256_blend_ps needs a constant as a third argument", "in_reply_to_id": 188130555}