{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/188130188", "pull_request_review_id": 119637311, "id": 188130188, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODEzMDE4OA==", "diff_hunk": "@@ -23,34 +22,55 @@ template <> class Vec256<float> {\n   operator __m256() const {\n     return values;\n   }\n-  void load(const void *ptr) {\n-    values = _mm256_loadu_ps(reinterpret_cast<const float*>(ptr));\n-  }\n-  void load_partial(const void *ptr, int count) {\n-    float tmp_values[size];\n-    std::memcpy(tmp_values, ptr, count * sizeof(float));\n-    load(tmp_values);\n-  }\n-  static Vec256<float> s_load(const void* ptr) {\n-    Vec256<float> vec;\n-    vec.load(ptr);\n-    return vec;\n-  }\n-  void store(void *ptr) const {\n-    _mm256_storeu_ps(reinterpret_cast<float*>(ptr), values);\n-  }\n-  void store_partial(void* ptr, int count) const {\n-    float tmp_values[size];\n-    store(tmp_values);\n-    std::memcpy(ptr, tmp_values, count * sizeof(float));\n+  template <int64_t mask>\n+  static Vec256<float> blend(Vec256<float> a, Vec256<float> b) {\n+    return _mm256_blend_ps(a.values, b.values, mask);\n+  }\n+  static Vec256<float> set(Vec256<float> a, Vec256<float> b, int64_t count = size) {\n+    switch (count) {\n+      case 0:\n+        return a;\n+      case 1:\n+        return blend<1>(a, b);\n+      case 2:\n+        return blend<3>(a, b);\n+      case 3:\n+        return blend<7>(a, b);\n+      case 4:\n+        return blend<15>(a, b);\n+      case 5:\n+        return blend<31>(a, b);\n+      case 6:\n+        return blend<63>(a, b);\n+      case 7:\n+        return blend<127>(a, b);", "path": "aten/src/ATen/cpu/vec256/vec256_float.h", "position": 62, "original_position": 62, "commit_id": "b269b30289cf014a9bc3ce4924567ecb035a5fe1", "original_commit_id": "5daf54c358014219cfd16436f4db8f6fd8f45099", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Does this really give us any benefits? The mapping from count to this values is really a tiny bitshift, so I doubt it.", "created_at": "2018-05-14T23:42:26Z", "updated_at": "2018-11-23T15:44:03Z", "html_url": "https://github.com/pytorch/pytorch/pull/7375#discussion_r188130188", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7375", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/188130188"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7375#discussion_r188130188"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7375"}}, "body_html": "<p>Does this really give us any benefits? The mapping from count to this values is really a tiny bitshift, so I doubt it.</p>", "body_text": "Does this really give us any benefits? The mapping from count to this values is really a tiny bitshift, so I doubt it."}