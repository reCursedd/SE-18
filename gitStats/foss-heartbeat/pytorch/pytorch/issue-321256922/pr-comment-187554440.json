{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/187554440", "pull_request_review_id": 119358451, "id": 187554440, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzU1NDQ0MA==", "diff_hunk": "@@ -90,15 +146,76 @@ struct Vec256<int16_t> : public Vec256i {\n     vec.load(ptr);\n     return vec;\n   }\n-  void load_partial(const void *ptr, int count) {\n-    int16_t tmp_values[size];\n+  template <int64_t count>\n+  void load(const void* ptr) {\n+    __at_align32__ int16_t tmp_values[size];\n     std::memcpy(tmp_values, ptr, count * sizeof(int16_t));\n-    load(tmp_values);\n+    for (int64_t i = count; i < size; i++)\n+      tmp_values[i] = _mm256_extract_epi16(values, i);\n+    values = _mm256_load_si256(reinterpret_cast<const __m256i*>(tmp_values));\n   }\n-  void store_partial(void* ptr, int count) const {\n-    __at_align32__ int16_t tmp_values[size];\n-    store(tmp_values);\n-    std::memcpy(ptr, tmp_values, count * sizeof(int16_t));\n+  void load(const void* ptr, int64_t count = size) {\n+    // TODO: Add bounds checking (error on switch default)?\n+    switch (count) {\n+      case 0:\n+        break;\n+      case 1:\n+        load<1>(ptr);\n+        break;\n+      case 2:\n+        load<2>(ptr);\n+        break;\n+      case 3:\n+        load<3>(ptr);\n+        break;\n+      case 4:\n+        load<4>(ptr);\n+        break;\n+      case 5:\n+        load<5>(ptr);\n+        break;\n+      case 6:\n+        load<6>(ptr);\n+        break;\n+      case 7:\n+        load<7>(ptr);\n+        break;\n+      case 8:\n+        load<8>(ptr);\n+        break;\n+      case 9:\n+        load<9>(ptr);\n+        break;\n+      case 10:\n+        load<10>(ptr);\n+        break;\n+      case 11:\n+        load<11>(ptr);\n+        break;\n+      case 12:\n+        load<12>(ptr);\n+        break;\n+      case 13:\n+        load<13>(ptr);\n+        break;\n+      case 14:\n+        load<14>(ptr);\n+        break;\n+      case 15:\n+        load<15>(ptr);\n+        break;\n+      case 16:\n+        values = _mm256_loadu_si256(reinterpret_cast<const __m256i*>(ptr));", "path": "aten/src/ATen/cpu/vec256/vec256_int.h", "position": null, "original_position": 198, "commit_id": "b269b30289cf014a9bc3ce4924567ecb035a5fe1", "original_commit_id": "1c546634aa6690aeeedf995141973a3c8b58db21", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Does this really help with anything? I have no idea why do we need it. It seems for me like it can only save us a single shift + sub, but those are essentially free.", "created_at": "2018-05-11T08:41:08Z", "updated_at": "2018-11-23T15:43:56Z", "html_url": "https://github.com/pytorch/pytorch/pull/7375#discussion_r187554440", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7375", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/187554440"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7375#discussion_r187554440"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7375"}}, "body_html": "<p>Does this really help with anything? I have no idea why do we need it. It seems for me like it can only save us a single shift + sub, but those are essentially free.</p>", "body_text": "Does this really help with anything? I have no idea why do we need it. It seems for me like it can only save us a single shift + sub, but those are essentially free."}