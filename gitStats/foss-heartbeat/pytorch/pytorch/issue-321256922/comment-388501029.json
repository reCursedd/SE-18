{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/388501029", "html_url": "https://github.com/pytorch/pytorch/pull/7375#issuecomment-388501029", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7375", "id": 388501029, "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODUwMTAyOQ==", "user": {"login": "cpuhrsch", "id": 1716488, "node_id": "MDQ6VXNlcjE3MTY0ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1716488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpuhrsch", "html_url": "https://github.com/cpuhrsch", "followers_url": "https://api.github.com/users/cpuhrsch/followers", "following_url": "https://api.github.com/users/cpuhrsch/following{/other_user}", "gists_url": "https://api.github.com/users/cpuhrsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpuhrsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpuhrsch/subscriptions", "organizations_url": "https://api.github.com/users/cpuhrsch/orgs", "repos_url": "https://api.github.com/users/cpuhrsch/repos", "events_url": "https://api.github.com/users/cpuhrsch/events{/privacy}", "received_events_url": "https://api.github.com/users/cpuhrsch/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-11T22:27:56Z", "updated_at": "2018-05-11T22:28:14Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I'm seeing a 4.5x on single core and 1.8x on 10 threads using this code</p>\n<pre><code>import torch\n\nif __name__ == \"__main__\":\n    softmax = torch.nn.LogSoftmax(dim=1)\n    output = torch.randn(1000, 100).type('torch.FloatTensor')\n    for _ in range(10000):\n        output = softmax(output)\n</code></pre>\n<p>and these commands</p>\n<pre><code>taskset -c 0 perf stat python softmax_comp.py\ntaskset -c 0-9 perf stat python softmax_comp.py\n</code></pre>", "body_text": "I'm seeing a 4.5x on single core and 1.8x on 10 threads using this code\nimport torch\n\nif __name__ == \"__main__\":\n    softmax = torch.nn.LogSoftmax(dim=1)\n    output = torch.randn(1000, 100).type('torch.FloatTensor')\n    for _ in range(10000):\n        output = softmax(output)\n\nand these commands\ntaskset -c 0 perf stat python softmax_comp.py\ntaskset -c 0-9 perf stat python softmax_comp.py", "body": "I'm seeing a 4.5x on single core and 1.8x on 10 threads using this code\r\n\r\n```\r\nimport torch\r\n\r\nif __name__ == \"__main__\":\r\n    softmax = torch.nn.LogSoftmax(dim=1)\r\n    output = torch.randn(1000, 100).type('torch.FloatTensor')\r\n    for _ in range(10000):\r\n        output = softmax(output)\r\n```\r\n\r\nand these commands\r\n\r\n```\r\ntaskset -c 0 perf stat python softmax_comp.py\r\ntaskset -c 0-9 perf stat python softmax_comp.py\r\n```"}