{"url": "https://api.github.com/repos/pytorch/pytorch/issues/2249", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/2249/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2249/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/2249/events", "html_url": "https://github.com/pytorch/pytorch/issues/2249", "id": 246562848, "node_id": "MDU6SXNzdWUyNDY1NjI4NDg=", "number": 2249, "title": "weird new() method of torch.cuda.sparse tensor", "user": {"login": "synxlin", "id": 16437040, "node_id": "MDQ6VXNlcjE2NDM3MDQw", "avatar_url": "https://avatars0.githubusercontent.com/u/16437040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/synxlin", "html_url": "https://github.com/synxlin", "followers_url": "https://api.github.com/users/synxlin/followers", "following_url": "https://api.github.com/users/synxlin/following{/other_user}", "gists_url": "https://api.github.com/users/synxlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/synxlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/synxlin/subscriptions", "organizations_url": "https://api.github.com/users/synxlin/orgs", "repos_url": "https://api.github.com/users/synxlin/repos", "events_url": "https://api.github.com/users/synxlin/events{/privacy}", "received_events_url": "https://api.github.com/users/synxlin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-07-30T05:04:44Z", "updated_at": "2017-08-13T00:13:57Z", "closed_at": "2017-08-13T00:13:57Z", "author_association": "NONE", "body_html": "<p>Let say,</p>\n<pre><code>a = torch.sparse.FloatTensor(torch.LongTensor([[0]]), torch.FloatTensor([0]), torch.Size([1]))\na = a.cuda(1)\n</code></pre>\n<p>when I try,</p>\n<pre><code>i = torch.LongTensor([[0, 1], [2, 0]])\nv = torch.FloatTensor([3, 4])\ni = i.cuda(1)\nv = v.cuda(1)\nb = a.new(i, v, torch.Size([2,3]))\n</code></pre>\n<p>it throws error: arguments are located on different GPUs<br>\nBut when I try,</p>\n<pre><code>i = i.cuda(0)\nv = v.cuda(0)\nb = a.new(i, v, torch.Size([2,3]))\n</code></pre>\n<p>then it will make b a sparse tensor on GPU 0.<br>\nBesides,</p>\n<pre><code>a = a.new()\nprint(a.get_device()) # sometimes print 0 and sometimes print -1\n</code></pre>", "body_text": "Let say,\na = torch.sparse.FloatTensor(torch.LongTensor([[0]]), torch.FloatTensor([0]), torch.Size([1]))\na = a.cuda(1)\n\nwhen I try,\ni = torch.LongTensor([[0, 1], [2, 0]])\nv = torch.FloatTensor([3, 4])\ni = i.cuda(1)\nv = v.cuda(1)\nb = a.new(i, v, torch.Size([2,3]))\n\nit throws error: arguments are located on different GPUs\nBut when I try,\ni = i.cuda(0)\nv = v.cuda(0)\nb = a.new(i, v, torch.Size([2,3]))\n\nthen it will make b a sparse tensor on GPU 0.\nBesides,\na = a.new()\nprint(a.get_device()) # sometimes print 0 and sometimes print -1", "body": "Let say,\r\n```\r\na = torch.sparse.FloatTensor(torch.LongTensor([[0]]), torch.FloatTensor([0]), torch.Size([1]))\r\na = a.cuda(1)\r\n```\r\nwhen I try,\r\n```\r\ni = torch.LongTensor([[0, 1], [2, 0]])\r\nv = torch.FloatTensor([3, 4])\r\ni = i.cuda(1)\r\nv = v.cuda(1)\r\nb = a.new(i, v, torch.Size([2,3]))\r\n```\r\nit throws error: arguments are located on different GPUs\r\nBut when I try,\r\n```\r\ni = i.cuda(0)\r\nv = v.cuda(0)\r\nb = a.new(i, v, torch.Size([2,3]))\r\n```\r\nthen it will make b a sparse tensor on GPU 0.\r\nBesides,\r\n```\r\na = a.new()\r\nprint(a.get_device()) # sometimes print 0 and sometimes print -1\r\n```"}