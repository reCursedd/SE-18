{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/402260128", "html_url": "https://github.com/pytorch/pytorch/issues/9003#issuecomment-402260128", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9003", "id": 402260128, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjI2MDEyOA==", "user": {"login": "pjh5", "id": 6456020, "node_id": "MDQ6VXNlcjY0NTYwMjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6456020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pjh5", "html_url": "https://github.com/pjh5", "followers_url": "https://api.github.com/users/pjh5/followers", "following_url": "https://api.github.com/users/pjh5/following{/other_user}", "gists_url": "https://api.github.com/users/pjh5/gists{/gist_id}", "starred_url": "https://api.github.com/users/pjh5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pjh5/subscriptions", "organizations_url": "https://api.github.com/users/pjh5/orgs", "repos_url": "https://api.github.com/users/pjh5/repos", "events_url": "https://api.github.com/users/pjh5/events{/privacy}", "received_events_url": "https://api.github.com/users/pjh5/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-03T18:58:33Z", "updated_at": "2018-07-03T19:02:13Z", "author_association": "CONTRIBUTOR", "body_html": "<p>So, the arguments that you pass to --cuda and --cudnn are actually only used for naming the package and aren't forwarded to the build system.</p>\n<p>If you have both CUDA 9.2 and 9.0 installed on your machine, then make sure that /usr/local/cuda points to the correct version and that all of <code>env | grep CUDA </code> are pointing to the right place too. If your default installation is CUDA 9.2 then the build system should only find that one.</p>\n<p>If you search in the output of scripts/build_anaconda.sh for \"Summary\" then you will find the cmake output. It should have a list of all the cuda related directories that it found.</p>\n<p>Edit: It looks like you have the cuda90 conda package installed. This means that some cuda libraries are installed into the anaconda env at ~/anaconda. Whenever you build with anaconda using scripts/build_anaconda.sh, the build system will look for packages in this location before looking in your system location (at /usr/local or /usr) so that you can use packages installed with conda. This also means that the cuda90 conda package you have installed may shadow your other CUDA installations, but you might be able to bypass that by passing CUDA_HOME=/your/desired/cuda/installation (<code>scripts/build_anaconda.sh --CUDA_HOME=/your/des..... --install-locally ...</code>)</p>", "body_text": "So, the arguments that you pass to --cuda and --cudnn are actually only used for naming the package and aren't forwarded to the build system.\nIf you have both CUDA 9.2 and 9.0 installed on your machine, then make sure that /usr/local/cuda points to the correct version and that all of env | grep CUDA  are pointing to the right place too. If your default installation is CUDA 9.2 then the build system should only find that one.\nIf you search in the output of scripts/build_anaconda.sh for \"Summary\" then you will find the cmake output. It should have a list of all the cuda related directories that it found.\nEdit: It looks like you have the cuda90 conda package installed. This means that some cuda libraries are installed into the anaconda env at ~/anaconda. Whenever you build with anaconda using scripts/build_anaconda.sh, the build system will look for packages in this location before looking in your system location (at /usr/local or /usr) so that you can use packages installed with conda. This also means that the cuda90 conda package you have installed may shadow your other CUDA installations, but you might be able to bypass that by passing CUDA_HOME=/your/desired/cuda/installation (scripts/build_anaconda.sh --CUDA_HOME=/your/des..... --install-locally ...)", "body": "So, the arguments that you pass to --cuda and --cudnn are actually only used for naming the package and aren't forwarded to the build system.\r\n\r\nIf you have both CUDA 9.2 and 9.0 installed on your machine, then make sure that /usr/local/cuda points to the correct version and that all of ```env | grep CUDA ``` are pointing to the right place too. If your default installation is CUDA 9.2 then the build system should only find that one.\r\n\r\nIf you search in the output of scripts/build_anaconda.sh for \"Summary\" then you will find the cmake output. It should have a list of all the cuda related directories that it found.\r\n\r\nEdit: It looks like you have the cuda90 conda package installed. This means that some cuda libraries are installed into the anaconda env at ~/anaconda. Whenever you build with anaconda using scripts/build_anaconda.sh, the build system will look for packages in this location before looking in your system location (at /usr/local or /usr) so that you can use packages installed with conda. This also means that the cuda90 conda package you have installed may shadow your other CUDA installations, but you might be able to bypass that by passing CUDA_HOME=/your/desired/cuda/installation (```scripts/build_anaconda.sh --CUDA_HOME=/your/des..... --install-locally ...```)"}