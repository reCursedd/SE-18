{"url": "https://api.github.com/repos/pytorch/pytorch/issues/9386", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/9386/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9386/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/9386/events", "html_url": "https://github.com/pytorch/pytorch/issues/9386", "id": 340684856, "node_id": "MDU6SXNzdWUzNDA2ODQ4NTY=", "number": 9386, "title": "[Feature request] Add `Tensor.device_as`", "user": {"login": "zuoxingdong", "id": 18168681, "node_id": "MDQ6VXNlcjE4MTY4Njgx", "avatar_url": "https://avatars0.githubusercontent.com/u/18168681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zuoxingdong", "html_url": "https://github.com/zuoxingdong", "followers_url": "https://api.github.com/users/zuoxingdong/followers", "following_url": "https://api.github.com/users/zuoxingdong/following{/other_user}", "gists_url": "https://api.github.com/users/zuoxingdong/gists{/gist_id}", "starred_url": "https://api.github.com/users/zuoxingdong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zuoxingdong/subscriptions", "organizations_url": "https://api.github.com/users/zuoxingdong/orgs", "repos_url": "https://api.github.com/users/zuoxingdong/repos", "events_url": "https://api.github.com/users/zuoxingdong/events{/privacy}", "received_events_url": "https://api.github.com/users/zuoxingdong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-12T15:20:15Z", "updated_at": "2018-07-13T01:34:54Z", "closed_at": "2018-07-13T01:34:54Z", "author_association": "CONTRIBUTOR", "body_html": "<p>When we want to create a tensor in the middle of training process, because of consistency of <code>dtype</code> and <code>device</code>, it would be very nice to support a function <code>Tensor.device_as</code>, similar to that of <code>Tensor.type_as</code></p>", "body_text": "When we want to create a tensor in the middle of training process, because of consistency of dtype and device, it would be very nice to support a function Tensor.device_as, similar to that of Tensor.type_as", "body": "When we want to create a tensor in the middle of training process, because of consistency of `dtype` and `device`, it would be very nice to support a function `Tensor.device_as`, similar to that of `Tensor.type_as`"}