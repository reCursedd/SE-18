{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/387813800", "html_url": "https://github.com/pytorch/pytorch/pull/7399#issuecomment-387813800", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7399", "id": 387813800, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzgxMzgwMA==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-09T17:26:23Z", "updated_at": "2018-05-09T17:26:50Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I had an in person chat with <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=79994\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/orionr\">@orionr</a>.</p>\n<p>The context is that, eventually, we want to have a single <code>python setup.py install</code> which gives you all the functionality you want for PyTorch 1.0 (subject to splitting only for dependencies, e.g. _cpu.so, _cuda.so, _amd.so). Our code is not really in the state where this library actually eixsts, but <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=79994\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/orionr\">@orionr</a> is trying to move the process along by proposing that <code>libcaffe2.so</code> fill this role (but have <code>BUILD_CAFFE2</code>/<code>BUILD_ATEN</code> flags which modulate what actually goes in the library.) The intent is to make it easier to move code around inside this library, since if all code is being built in the same compilation unit you have less to worry about when you move things around.</p>\n<p>However, talking to <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=79994\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/orionr\">@orionr</a>, there may be a fatal problem with this patch, which is that we can't reflect this dependency structure in fbcode without turning on a Caffe2-&gt;ATen dependency (which we are not equipped to do right now, because ATen is too big and needs to be slimmed down first.) We're planning to touch base with <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=17890620\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/dzhulgakov\">@dzhulgakov</a> about this some more.</p>", "body_text": "I had an in person chat with @orionr.\nThe context is that, eventually, we want to have a single python setup.py install which gives you all the functionality you want for PyTorch 1.0 (subject to splitting only for dependencies, e.g. _cpu.so, _cuda.so, _amd.so). Our code is not really in the state where this library actually eixsts, but @orionr is trying to move the process along by proposing that libcaffe2.so fill this role (but have BUILD_CAFFE2/BUILD_ATEN flags which modulate what actually goes in the library.) The intent is to make it easier to move code around inside this library, since if all code is being built in the same compilation unit you have less to worry about when you move things around.\nHowever, talking to @orionr, there may be a fatal problem with this patch, which is that we can't reflect this dependency structure in fbcode without turning on a Caffe2->ATen dependency (which we are not equipped to do right now, because ATen is too big and needs to be slimmed down first.) We're planning to touch base with @dzhulgakov about this some more.", "body": "I had an in person chat with @orionr.\r\n\r\nThe context is that, eventually, we want to have a single `python setup.py install` which gives you all the functionality you want for PyTorch 1.0 (subject to splitting only for dependencies, e.g. _cpu.so, _cuda.so, _amd.so). Our code is not really in the state where this library actually eixsts, but @orionr is trying to move the process along by proposing that `libcaffe2.so` fill this role (but have `BUILD_CAFFE2`/`BUILD_ATEN` flags which modulate what actually goes in the library.) The intent is to make it easier to move code around inside this library, since if all code is being built in the same compilation unit you have less to worry about when you move things around.\r\n\r\nHowever, talking to @orionr, there may be a fatal problem with this patch, which is that we can't reflect this dependency structure in fbcode without turning on a Caffe2->ATen dependency (which we are not equipped to do right now, because ATen is too big and needs to be slimmed down first.) We're planning to touch base with @dzhulgakov about this some more."}