{"url": "https://api.github.com/repos/pytorch/pytorch/issues/2258", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/2258/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2258/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/2258/events", "html_url": "https://github.com/pytorch/pytorch/issues/2258", "id": 246620123, "node_id": "MDU6SXNzdWUyNDY2MjAxMjM=", "number": 2258, "title": "Extending torch.utils.trainer with Visdom", "user": {"login": "alexsax", "id": 5157485, "node_id": "MDQ6VXNlcjUxNTc0ODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/5157485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexsax", "html_url": "https://github.com/alexsax", "followers_url": "https://api.github.com/users/alexsax/followers", "following_url": "https://api.github.com/users/alexsax/following{/other_user}", "gists_url": "https://api.github.com/users/alexsax/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexsax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexsax/subscriptions", "organizations_url": "https://api.github.com/users/alexsax/orgs", "repos_url": "https://api.github.com/users/alexsax/repos", "events_url": "https://api.github.com/users/alexsax/events{/privacy}", "received_events_url": "https://api.github.com/users/alexsax/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-07-31T00:38:41Z", "updated_at": "2017-08-30T23:20:08Z", "closed_at": "2017-08-30T23:20:08Z", "author_association": "NONE", "body_html": "<p>I'm planning on writing a lightweight extension to PyTorch. The goal is to speed up my research in 2 ways</p>\n<ol>\n<li>Testing many models should be easy, and it should be easy to keep track of the parameters used to train the models</li>\n<li>I would like to reuse my nice logging code across projects and models</li>\n</ol>\n<p>I see that there is a feature, torch.utils.trainer, that implements some of these ideas, and I'd like to extend it to be more fully-featured. For visualizations and logging, similar to Tensorboard, I'd like to integrate <a href=\"https://github.com/facebookresearch/visdom\">Visdom</a>. For me, the superior logging of TensorBoard is the biggest reason that I would still use TF for research.</p>\n<p>I'm imagining something like <a href=\"https://github.com/jingweiz/pytorch-rl\">this</a> which is a great start. The final version would be more general, and work with the existing torch.utils.trainer.Trainer.</p>\n<p>I'd also like to add some code to the trainer that supports saving out checkpoints, and nice-to-have features that will make the trainer more friendly.</p>\n<p>Is there interest in integrating this into the main PyTorch repo? If there is, then I will write a nice version and submit a pull request :)</p>", "body_text": "I'm planning on writing a lightweight extension to PyTorch. The goal is to speed up my research in 2 ways\n\nTesting many models should be easy, and it should be easy to keep track of the parameters used to train the models\nI would like to reuse my nice logging code across projects and models\n\nI see that there is a feature, torch.utils.trainer, that implements some of these ideas, and I'd like to extend it to be more fully-featured. For visualizations and logging, similar to Tensorboard, I'd like to integrate Visdom. For me, the superior logging of TensorBoard is the biggest reason that I would still use TF for research.\nI'm imagining something like this which is a great start. The final version would be more general, and work with the existing torch.utils.trainer.Trainer.\nI'd also like to add some code to the trainer that supports saving out checkpoints, and nice-to-have features that will make the trainer more friendly.\nIs there interest in integrating this into the main PyTorch repo? If there is, then I will write a nice version and submit a pull request :)", "body": "I'm planning on writing a lightweight extension to PyTorch. The goal is to speed up my research in 2 ways\r\n1) Testing many models should be easy, and it should be easy to keep track of the parameters used to train the models\r\n2) I would like to reuse my nice logging code across projects and models\r\n\r\nI see that there is a feature, torch.utils.trainer, that implements some of these ideas, and I'd like to extend it to be more fully-featured. For visualizations and logging, similar to Tensorboard, I'd like to integrate [Visdom](https://github.com/facebookresearch/visdom). For me, the superior logging of TensorBoard is the biggest reason that I would still use TF for research. \r\n\r\nI'm imagining something like [this](https://github.com/jingweiz/pytorch-rl) which is a great start. The final version would be more general, and work with the existing torch.utils.trainer.Trainer. \r\n\r\nI'd also like to add some code to the trainer that supports saving out checkpoints, and nice-to-have features that will make the trainer more friendly.\r\n\r\nIs there interest in integrating this into the main PyTorch repo? If there is, then I will write a nice version and submit a pull request :)"}