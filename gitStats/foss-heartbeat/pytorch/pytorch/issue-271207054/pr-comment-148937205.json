{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/148937205", "pull_request_review_id": 74261676, "id": 148937205, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODkzNzIwNQ==", "diff_hunk": "@@ -224,13 +232,38 @@ def _run_symbolic_function(g, n, inputs):\n             op_name = n.kind()[:-1]\n         else:\n             op_name = n.kind()\n-        if not hasattr(torch.onnx.symbolic, op_name):\n-            warnings.warn(\"ONNX export failed on {} because torch.onnx.symbolic.{} does not exist\"\n-                          .format(op_name, op_name))\n-            return None\n-        fn = getattr(torch.onnx.symbolic, op_name)\n-        attrs = {k: n[k] for k in n.attributeNames()}\n-        return fn(g, *inputs, **attrs)\n+        if globals()['aten']:\n+            attrs = {}\n+            def type_suffix(var):", "path": "torch/onnx/__init__.py", "position": null, "original_position": 49, "commit_id": "4c123c3774d8ae68b413ff99fe3cb15c7984f408", "original_commit_id": "715e58a6934fa8c8d7f121cef4ad510ceda539ad", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "In a situation like this, it might be better to call the underlying API, rather than construct the type suffixes, only for the helper function to immediately deconstruct the type suffix to reverse engineer the information you passed it. I'll also leave this up to you.", "created_at": "2017-11-04T18:02:38Z", "updated_at": "2018-11-23T15:36:03Z", "html_url": "https://github.com/pytorch/pytorch/pull/3489#discussion_r148937205", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3489", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/148937205"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3489#discussion_r148937205"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3489"}}, "body_html": "<p>In a situation like this, it might be better to call the underlying API, rather than construct the type suffixes, only for the helper function to immediately deconstruct the type suffix to reverse engineer the information you passed it. I'll also leave this up to you.</p>", "body_text": "In a situation like this, it might be better to call the underlying API, rather than construct the type suffixes, only for the helper function to immediately deconstruct the type suffix to reverse engineer the information you passed it. I'll also leave this up to you."}