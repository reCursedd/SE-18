{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/153103365", "pull_request_review_id": 79060384, "id": 153103365, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzEwMzM2NQ==", "diff_hunk": "@@ -139,23 +142,50 @@ def _run_symbolic_method(op_name, symbolic_fn, args):\n         raise\n \n \n-def _add_attribute(node, key, value):\n+def _is_onnx_list(value):\n+    if not isinstance(value, string_classes) and not torch.is_tensor(value) and isinstance(value, collections.Iterable):\n+        return True\n+    return False\n+\n+\n+def _add_attribute(node, key, value, aten):\n     \"\"\" initializes the right attribute based on type of value \"\"\"\n     m = attr_pattern.match(key)\n     if m is None:\n         raise IndexError((\n             \"Invalid attribute specifier '{}' names \" +\n             \" must be suffixed with type, e.g. 'dim_i' or 'dims_i'\").format(key))\n     name, kind = m.group(1), m.group(2)\n-    if not isinstance(value, string_classes) and not torch.is_tensor(value) and isinstance(value, collections.Iterable):\n+    if _is_onnx_list(value):\n         kind += \"s\"\n-    return getattr(node, kind + '_')(name, value)\n+    if aten:\n+        if torch.is_tensor(value):\n+            # Turn tensor attribute to float/int attribute.", "path": "torch/onnx/__init__.py", "position": null, "original_position": 60, "commit_id": "4c123c3774d8ae68b413ff99fe3cb15c7984f408", "original_commit_id": "be4100bfdb6b5bacfbd4c5d8fc155468ede6f289", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Remember the rule for comments: don't say what, say why. The reason *why* we have to do it this way, is because the Caffe2-ATen integration code assumes that tensor attributes are always single-valued.", "created_at": "2017-11-27T04:06:51Z", "updated_at": "2018-11-23T15:36:49Z", "html_url": "https://github.com/pytorch/pytorch/pull/3489#discussion_r153103365", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3489", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/153103365"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3489#discussion_r153103365"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3489"}}, "body_html": "<p>Remember the rule for comments: don't say what, say why. The reason <em>why</em> we have to do it this way, is because the Caffe2-ATen integration code assumes that tensor attributes are always single-valued.</p>", "body_text": "Remember the rule for comments: don't say what, say why. The reason why we have to do it this way, is because the Caffe2-ATen integration code assumes that tensor attributes are always single-valued."}