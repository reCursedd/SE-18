{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/149745470", "pull_request_review_id": 75188775, "id": 149745470, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0OTc0NTQ3MA==", "diff_hunk": "@@ -139,23 +142,51 @@ def _run_symbolic_method(op_name, symbolic_fn, args):\n         raise\n \n \n-def _add_attribute(node, key, value):\n-    \"\"\" initializes the right attribute based on type of value \"\"\"\n-    m = attr_pattern.match(key)\n-    if m is None:\n-        raise IndexError((\n-            \"Invalid attribute specifier '{}' names \" +\n-            \" must be suffixed with type, e.g. 'dim_i' or 'dims_i'\").format(key))\n-    name, kind = m.group(1), m.group(2)\n+def _is_onnx_list(value):\n     if not isinstance(value, string_classes) and not torch.is_tensor(value) and isinstance(value, collections.Iterable):\n-        kind += \"s\"\n-    return getattr(node, kind + '_')(name, value)\n+        return True\n+    return False\n+\n+\n+def _add_attribute(node, key, value, aten):\n+    \"\"\" initializes the right attribute based on type of value \"\"\"\n+    if aten:\n+        name = key\n+\n+        def infer_kind(value):", "path": "torch/onnx/__init__.py", "position": null, "original_position": 60, "commit_id": "4c123c3774d8ae68b413ff99fe3cb15c7984f408", "original_commit_id": "c45935a1fa468d025e34cc62f71473e0ff751265", "user": {"login": "houseroad", "id": 30275821, "node_id": "MDQ6VXNlcjMwMjc1ODIx", "avatar_url": "https://avatars0.githubusercontent.com/u/30275821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/houseroad", "html_url": "https://github.com/houseroad", "followers_url": "https://api.github.com/users/houseroad/followers", "following_url": "https://api.github.com/users/houseroad/following{/other_user}", "gists_url": "https://api.github.com/users/houseroad/gists{/gist_id}", "starred_url": "https://api.github.com/users/houseroad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/houseroad/subscriptions", "organizations_url": "https://api.github.com/users/houseroad/orgs", "repos_url": "https://api.github.com/users/houseroad/repos", "events_url": "https://api.github.com/users/houseroad/events{/privacy}", "received_events_url": "https://api.github.com/users/houseroad/received_events", "type": "User", "site_admin": false}, "body": "I see. Will call `kindOf`.", "created_at": "2017-11-08T17:49:53Z", "updated_at": "2018-11-23T15:36:13Z", "html_url": "https://github.com/pytorch/pytorch/pull/3489#discussion_r149745470", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3489", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/149745470"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3489#discussion_r149745470"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3489"}}, "body_html": "<p>I see. Will call <code>kindOf</code>.</p>", "body_text": "I see. Will call kindOf.", "in_reply_to_id": 149646741}