{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/195220688", "pull_request_review_id": 128546083, "id": 195220688, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTIyMDY4OA==", "diff_hunk": "@@ -153,6 +154,7 @@ if(USE_GLOG)\n   include(${CMAKE_CURRENT_LIST_DIR}/public/glog.cmake)\n   if (TARGET glog::glog)\n     set(CAFFE2_USE_GOOGLE_GLOG 1)\n+    include_directories(SYSTEM ${GLOG_INCLUDE_DIR})", "path": "cmake/Dependencies.cmake", "position": 12, "original_position": 17, "commit_id": "4e9cb416e227cf1ad694ab7c8142e746b22865e8", "original_commit_id": "8f9afbdc8621918e78540002ca6c44677844eeca", "user": {"login": "pjh5", "id": 6456020, "node_id": "MDQ6VXNlcjY0NTYwMjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6456020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pjh5", "html_url": "https://github.com/pjh5", "followers_url": "https://api.github.com/users/pjh5/followers", "following_url": "https://api.github.com/users/pjh5/following{/other_user}", "gists_url": "https://api.github.com/users/pjh5/gists{/gist_id}", "starred_url": "https://api.github.com/users/pjh5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pjh5/subscriptions", "organizations_url": "https://api.github.com/users/pjh5/orgs", "repos_url": "https://api.github.com/users/pjh5/repos", "events_url": "https://api.github.com/users/pjh5/events{/privacy}", "received_events_url": "https://api.github.com/users/pjh5/received_events", "type": "User", "site_admin": false}, "body": "The gflags target has the correct INTERFACE_INCLUDE_DIRECTORIES , checked by calling print_target_properties on it after it was created. According to https://cmake.org/cmake/help/v3.0/prop_tgt/INTERFACE_INCLUDE_DIRECTORIES.html this is the exact property which target_link_libraries should work with. Btw I am on cmake version 3.11.2, so this functionality should definitely exist.", "created_at": "2018-06-13T20:15:01Z", "updated_at": "2018-11-23T15:45:28Z", "html_url": "https://github.com/pytorch/pytorch/pull/8434#discussion_r195220688", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8434", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/195220688"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8434#discussion_r195220688"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8434"}}, "body_html": "<p>The gflags target has the correct INTERFACE_INCLUDE_DIRECTORIES , checked by calling print_target_properties on it after it was created. According to <a href=\"https://cmake.org/cmake/help/v3.0/prop_tgt/INTERFACE_INCLUDE_DIRECTORIES.html\" rel=\"nofollow\">https://cmake.org/cmake/help/v3.0/prop_tgt/INTERFACE_INCLUDE_DIRECTORIES.html</a> this is the exact property which target_link_libraries should work with. Btw I am on cmake version 3.11.2, so this functionality should definitely exist.</p>", "body_text": "The gflags target has the correct INTERFACE_INCLUDE_DIRECTORIES , checked by calling print_target_properties on it after it was created. According to https://cmake.org/cmake/help/v3.0/prop_tgt/INTERFACE_INCLUDE_DIRECTORIES.html this is the exact property which target_link_libraries should work with. Btw I am on cmake version 3.11.2, so this functionality should definitely exist.", "in_reply_to_id": 195189153}