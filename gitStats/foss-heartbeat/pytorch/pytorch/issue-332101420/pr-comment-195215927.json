{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/195215927", "pull_request_review_id": 128540243, "id": 195215927, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTIxNTkyNw==", "diff_hunk": "@@ -153,6 +154,7 @@ if(USE_GLOG)\n   include(${CMAKE_CURRENT_LIST_DIR}/public/glog.cmake)\n   if (TARGET glog::glog)\n     set(CAFFE2_USE_GOOGLE_GLOG 1)\n+    include_directories(SYSTEM ${GLOG_INCLUDE_DIR})", "path": "cmake/Dependencies.cmake", "position": 12, "original_position": 17, "commit_id": "4e9cb416e227cf1ad694ab7c8142e746b22865e8", "original_commit_id": "8f9afbdc8621918e78540002ca6c44677844eeca", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "So... if we are actually going to use new style targets everywhere in the cmake, inability to debug problems like this is a serious problem. (And I agree with you, it is very non-obvious how to debug problems like this; I feel it is one of the reasons why the stone-age style of smashing include paths into global variables has been around so much in cmake). IIRC, targets have \"properties\" which are queryable. Can we check if the property has the contents we expect?\r\n\r\nCC @Yangqing ", "created_at": "2018-06-13T19:59:18Z", "updated_at": "2018-11-23T15:45:28Z", "html_url": "https://github.com/pytorch/pytorch/pull/8434#discussion_r195215927", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8434", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/195215927"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8434#discussion_r195215927"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8434"}}, "body_html": "<p>So... if we are actually going to use new style targets everywhere in the cmake, inability to debug problems like this is a serious problem. (And I agree with you, it is very non-obvious how to debug problems like this; I feel it is one of the reasons why the stone-age style of smashing include paths into global variables has been around so much in cmake). IIRC, targets have \"properties\" which are queryable. Can we check if the property has the contents we expect?</p>\n<p>CC <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=551151\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Yangqing\">@Yangqing</a></p>", "body_text": "So... if we are actually going to use new style targets everywhere in the cmake, inability to debug problems like this is a serious problem. (And I agree with you, it is very non-obvious how to debug problems like this; I feel it is one of the reasons why the stone-age style of smashing include paths into global variables has been around so much in cmake). IIRC, targets have \"properties\" which are queryable. Can we check if the property has the contents we expect?\nCC @Yangqing", "in_reply_to_id": 195189153}