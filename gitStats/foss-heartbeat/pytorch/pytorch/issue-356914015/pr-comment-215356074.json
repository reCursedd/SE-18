{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/215356074", "pull_request_review_id": 152601904, "id": 215356074, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTM1NjA3NA==", "diff_hunk": "@@ -0,0 +1,205 @@\n+#include \"ATen/native/cpu/DistanceOpsKernel.h\"\n+\n+#include <numeric>\n+#include <iterator>\n+#include <algorithm>\n+\n+#include \"ATen/Dispatch.h\"\n+#include \"ATen/Parallel.h\"\n+#include \"ATen/cpu/vml.h\"\n+\n+namespace at { namespace native { namespace {\n+\n+template<typename scalar_t>\n+struct PDist {\n+  using Vec = vec256::Vec256<scalar_t>;\n+\n+  static inline Vec sign(Vec val) {\n+    return vec256::min(vec256::max(Vec(0), val.ceil()), Vec(1)) +\n+      vec256::min(vec256::max(Vec(-1), val.floor()), Vec(0));\n+  }", "path": "aten/src/ATen/native/cpu/DistanceOpsKernel.cpp", "position": null, "original_position": 20, "commit_id": "fb1ad6aafbc16862ca2973c08f91e84683964805", "original_commit_id": "e49da239055adf80fe06f01811d189dd8431276f", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "This seems weirdly long for a sign-computing function. Is https://stackoverflow.com/questions/41315420/how-to-implement-sign-function-with-sse3 perhaps of interest? (We don't actually have to optimize it for this PR, but maybe a comment saying that it is not optimal might be reasonable).", "created_at": "2018-09-05T17:16:58Z", "updated_at": "2018-11-23T15:50:37Z", "html_url": "https://github.com/pytorch/pytorch/pull/11230#discussion_r215356074", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11230", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/215356074"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11230#discussion_r215356074"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11230"}}, "body_html": "<p>This seems weirdly long for a sign-computing function. Is <a href=\"https://stackoverflow.com/questions/41315420/how-to-implement-sign-function-with-sse3\" rel=\"nofollow\">https://stackoverflow.com/questions/41315420/how-to-implement-sign-function-with-sse3</a> perhaps of interest? (We don't actually have to optimize it for this PR, but maybe a comment saying that it is not optimal might be reasonable).</p>", "body_text": "This seems weirdly long for a sign-computing function. Is https://stackoverflow.com/questions/41315420/how-to-implement-sign-function-with-sse3 perhaps of interest? (We don't actually have to optimize it for this PR, but maybe a comment saying that it is not optimal might be reasonable)."}