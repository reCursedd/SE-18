{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/418819951", "html_url": "https://github.com/pytorch/pytorch/pull/11230#issuecomment-418819951", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11230", "id": 418819951, "node_id": "MDEyOklzc3VlQ29tbWVudDQxODgxOTk1MQ==", "user": {"login": "erikbrinkman", "id": 858926, "node_id": "MDQ6VXNlcjg1ODkyNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/858926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikbrinkman", "html_url": "https://github.com/erikbrinkman", "followers_url": "https://api.github.com/users/erikbrinkman/followers", "following_url": "https://api.github.com/users/erikbrinkman/following{/other_user}", "gists_url": "https://api.github.com/users/erikbrinkman/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikbrinkman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikbrinkman/subscriptions", "organizations_url": "https://api.github.com/users/erikbrinkman/orgs", "repos_url": "https://api.github.com/users/erikbrinkman/repos", "events_url": "https://api.github.com/users/erikbrinkman/events{/privacy}", "received_events_url": "https://api.github.com/users/erikbrinkman/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-05T17:47:19Z", "updated_at": "2018-09-05T17:47:19Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> Unfortunately with regards to pairwise distance, this uses a completely different loop / function call. There are ways they could be combined, but it is nonobvious to someone with my knowledge of the code base. Also, for the purposes of this function is makes sense to mandate contiguous memory as each row is read (n - 1) times, but for pairwise distance they're only read once need to be bradcast, etc.</p>\n<p>Also, pairwise_distance calls <code>norm</code>, which I imagine is already vectorized.</p>", "body_text": "@ezyang Unfortunately with regards to pairwise distance, this uses a completely different loop / function call. There are ways they could be combined, but it is nonobvious to someone with my knowledge of the code base. Also, for the purposes of this function is makes sense to mandate contiguous memory as each row is read (n - 1) times, but for pairwise distance they're only read once need to be bradcast, etc.\nAlso, pairwise_distance calls norm, which I imagine is already vectorized.", "body": "@ezyang Unfortunately with regards to pairwise distance, this uses a completely different loop / function call. There are ways they could be combined, but it is nonobvious to someone with my knowledge of the code base. Also, for the purposes of this function is makes sense to mandate contiguous memory as each row is read (n - 1) times, but for pairwise distance they're only read once need to be bradcast, etc.\r\n\r\nAlso, pairwise_distance calls `norm`, which I imagine is already vectorized."}