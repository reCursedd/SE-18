{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3764", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3764/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3764/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3764/events", "html_url": "https://github.com/pytorch/pytorch/issues/3764", "id": 275014349, "node_id": "MDU6SXNzdWUyNzUwMTQzNDk=", "number": 3764, "title": "Rename distributions.Multinomial -> .Categorical", "user": {"login": "fritzo", "id": 648532, "node_id": "MDQ6VXNlcjY0ODUzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/648532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzo", "html_url": "https://github.com/fritzo", "followers_url": "https://api.github.com/users/fritzo/followers", "following_url": "https://api.github.com/users/fritzo/following{/other_user}", "gists_url": "https://api.github.com/users/fritzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzo/subscriptions", "organizations_url": "https://api.github.com/users/fritzo/orgs", "repos_url": "https://api.github.com/users/fritzo/repos", "events_url": "https://api.github.com/users/fritzo/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-17T22:23:23Z", "updated_at": "2017-11-18T21:10:08Z", "closed_at": "2017-11-18T21:10:08Z", "author_association": "CONTRIBUTOR", "body_html": "<p><code>Multinomial</code> commonly refers to a distribution over counts, and is a multivariate generalization of the <code>Binomial</code> distribution. However PyTorch's <code>Multinomial</code> implements what is more commonly referred to as a <code>Discrete</code> or <code>Categorical</code> distribution, a distribution over vectors of indices. I suggest renaming <code>torch.distributions.Multinomial</code> to <code>.Categorical</code> or <code>.Discrete</code> so as to make way for a true <code>.Multinomial</code> implementation (e.g. <a href=\"https://github.com/uber/pyro/blob/dev/pyro/distributions/multinomial.py\">this one</a> from Pyro).</p>\n<h2>Why?</h2>\n<p>This PR follows the naming convention used by:</p>\n<ul>\n<li>Tensorflow: <a href=\"https://www.tensorflow.org/api_docs/python/tf/distributions/Categorical\" rel=\"nofollow\">Categorical</a> vs <a href=\"https://www.tensorflow.org/api_docs/python/tf/distributions/Multinomial\" rel=\"nofollow\">Multinomial</a></li>\n<li>PyMC3: <a href=\"http://docs.pymc.io/api/distributions/discrete.html#pymc3.distributions.discrete.Categorical\" rel=\"nofollow\">Categorical</a> vs <a href=\"http://docs.pymc.io/api/distributions/multivariate.html#pymc3.distributions.multivariate.Multinomial\" rel=\"nofollow\">Multinomial</a></li>\n<li>Scipy: <a href=\"https://docs.scipy.org/doc/scipy-0.19.1/reference/generated/scipy.stats.multinomial.html\" rel=\"nofollow\">multinomial</a> operates on counts rather than values</li>\n</ul>\n<h2>How these distributions relate to each other</h2>\n<table>\n<thead>\n<tr>\n<th align=\"right\"></th>\n<th>Binary</th>\n<th>Multi-class</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"right\">values</td>\n<td><code>Bernoulli</code></td>\n<td><code>Categorical</code> aka <code>Discrete</code></td>\n</tr>\n<tr>\n<td align=\"right\">counts</td>\n<td><code>Binomial</code></td>\n<td><code>Multinomial</code></td>\n</tr>\n<tr>\n<td align=\"right\">conjugate prior</td>\n<td><code>Beta</code></td>\n<td><code>Dirichlet</code></td>\n</tr>\n</tbody>\n</table>", "body_text": "Multinomial commonly refers to a distribution over counts, and is a multivariate generalization of the Binomial distribution. However PyTorch's Multinomial implements what is more commonly referred to as a Discrete or Categorical distribution, a distribution over vectors of indices. I suggest renaming torch.distributions.Multinomial to .Categorical or .Discrete so as to make way for a true .Multinomial implementation (e.g. this one from Pyro).\nWhy?\nThis PR follows the naming convention used by:\n\nTensorflow: Categorical vs Multinomial\nPyMC3: Categorical vs Multinomial\nScipy: multinomial operates on counts rather than values\n\nHow these distributions relate to each other\n\n\n\n\nBinary\nMulti-class\n\n\n\n\nvalues\nBernoulli\nCategorical aka Discrete\n\n\ncounts\nBinomial\nMultinomial\n\n\nconjugate prior\nBeta\nDirichlet", "body": "`Multinomial` commonly refers to a distribution over counts, and is a multivariate generalization of the `Binomial` distribution. However PyTorch's `Multinomial` implements what is more commonly referred to as a `Discrete` or `Categorical` distribution, a distribution over vectors of indices. I suggest renaming `torch.distributions.Multinomial` to `.Categorical` or `.Discrete` so as to make way for a true `.Multinomial` implementation (e.g. [this one](https://github.com/uber/pyro/blob/dev/pyro/distributions/multinomial.py) from Pyro).\r\n\r\n## Why?\r\n\r\nThis PR follows the naming convention used by:\r\n- Tensorflow: [Categorical](https://www.tensorflow.org/api_docs/python/tf/distributions/Categorical) vs [Multinomial](https://www.tensorflow.org/api_docs/python/tf/distributions/Multinomial)\r\n- PyMC3: [Categorical](http://docs.pymc.io/api/distributions/discrete.html#pymc3.distributions.discrete.Categorical) vs [Multinomial](http://docs.pymc.io/api/distributions/multivariate.html#pymc3.distributions.multivariate.Multinomial)\r\n- Scipy: [multinomial](https://docs.scipy.org/doc/scipy-0.19.1/reference/generated/scipy.stats.multinomial.html) operates on counts rather than values\r\n\r\n## How these distributions relate to each other\r\n| | Binary | Multi-class |\r\n| -: | - | - |\r\n| values | `Bernoulli` | `Categorical` aka `Discrete` |\r\n| counts | `Binomial` | `Multinomial` |\r\n| conjugate prior | `Beta` | `Dirichlet` |"}