{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7441", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7441/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7441/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7441/events", "html_url": "https://github.com/pytorch/pytorch/issues/7441", "id": 321744565, "node_id": "MDU6SXNzdWUzMjE3NDQ1NjU=", "number": 7441, "title": "v0.4 module.type() move all parameter to cuda:0", "user": {"login": "FDecaYed", "id": 17164548, "node_id": "MDQ6VXNlcjE3MTY0NTQ4", "avatar_url": "https://avatars2.githubusercontent.com/u/17164548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FDecaYed", "html_url": "https://github.com/FDecaYed", "followers_url": "https://api.github.com/users/FDecaYed/followers", "following_url": "https://api.github.com/users/FDecaYed/following{/other_user}", "gists_url": "https://api.github.com/users/FDecaYed/gists{/gist_id}", "starred_url": "https://api.github.com/users/FDecaYed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FDecaYed/subscriptions", "organizations_url": "https://api.github.com/users/FDecaYed/orgs", "repos_url": "https://api.github.com/users/FDecaYed/repos", "events_url": "https://api.github.com/users/FDecaYed/events{/privacy}", "received_events_url": "https://api.github.com/users/FDecaYed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-05-09T22:13:50Z", "updated_at": "2018-05-10T22:22:14Z", "closed_at": "2018-05-10T22:22:14Z", "author_association": "CONTRIBUTOR", "body_html": "<h2>Issue description</h2>\n<p>when changing to pytorch v0.4, casting API behavior changed. Here is a simple reproduce case:</p>\n<pre><code>import torch\n\na = torch.nn.Linear(1,2)\na.cuda(1)\nprint(\"weight of a:\", a.weight)\na.type(torch.float16) # or use old a.type(torch.cuda.HalfTensor)\nprint(\"weight of a:\", a.weight)\n</code></pre>\n<p>sample output:</p>\n<pre><code>weight of a: Parameter containing:\ntensor([[ 0.1993],\n        [ 0.7559]], device='cuda:1')\nweight of a: Parameter containing:\ntensor([[ 0.1993],\n        [ 0.7559]], dtype=torch.float16, device='cuda:0')\n</code></pre>\n<p>The old behavior will keep tensor with new type on the device before casting</p>\n<p>On the other hand<br>\n<code>.half()</code><br>\nAPI respect tensor device<br>\nsample output:</p>\n<pre><code>weight of a: Parameter containing:\ntensor([[ 0.2513],\n        [-0.9306]], device='cuda:1')\nweight of a: Parameter containing:\ntensor([[ 0.2512],\n        [-0.9307]], dtype=torch.float16, device='cuda:1')\n</code></pre>", "body_text": "Issue description\nwhen changing to pytorch v0.4, casting API behavior changed. Here is a simple reproduce case:\nimport torch\n\na = torch.nn.Linear(1,2)\na.cuda(1)\nprint(\"weight of a:\", a.weight)\na.type(torch.float16) # or use old a.type(torch.cuda.HalfTensor)\nprint(\"weight of a:\", a.weight)\n\nsample output:\nweight of a: Parameter containing:\ntensor([[ 0.1993],\n        [ 0.7559]], device='cuda:1')\nweight of a: Parameter containing:\ntensor([[ 0.1993],\n        [ 0.7559]], dtype=torch.float16, device='cuda:0')\n\nThe old behavior will keep tensor with new type on the device before casting\nOn the other hand\n.half()\nAPI respect tensor device\nsample output:\nweight of a: Parameter containing:\ntensor([[ 0.2513],\n        [-0.9306]], device='cuda:1')\nweight of a: Parameter containing:\ntensor([[ 0.2512],\n        [-0.9307]], dtype=torch.float16, device='cuda:1')", "body": "## Issue description\r\nwhen changing to pytorch v0.4, casting API behavior changed. Here is a simple reproduce case:\r\n```\r\nimport torch\r\n\r\na = torch.nn.Linear(1,2)\r\na.cuda(1)\r\nprint(\"weight of a:\", a.weight)\r\na.type(torch.float16) # or use old a.type(torch.cuda.HalfTensor)\r\nprint(\"weight of a:\", a.weight)\r\n```\r\nsample output:\r\n```\r\nweight of a: Parameter containing:\r\ntensor([[ 0.1993],\r\n        [ 0.7559]], device='cuda:1')\r\nweight of a: Parameter containing:\r\ntensor([[ 0.1993],\r\n        [ 0.7559]], dtype=torch.float16, device='cuda:0')\r\n```\r\nThe old behavior will keep tensor with new type on the device before casting\r\n \r\nOn the other hand\r\n`.half()`\r\nAPI respect tensor device\r\nsample output:\r\n```\r\nweight of a: Parameter containing:\r\ntensor([[ 0.2513],\r\n        [-0.9306]], device='cuda:1')\r\nweight of a: Parameter containing:\r\ntensor([[ 0.2512],\r\n        [-0.9307]], dtype=torch.float16, device='cuda:1')\r\n```\r\n"}