{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/343744091", "html_url": "https://github.com/pytorch/pytorch/issues/3600#issuecomment-343744091", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3600", "id": 343744091, "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mzc0NDA5MQ==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-12T15:14:02Z", "updated_at": "2017-11-12T15:14:02Z", "author_association": "MEMBER", "body_html": "<p>I'm not sure this is a good strategy, as it might mask from the user configuration problems that he might not be aware of.<br>\nI think the best would be to simplify the task of having device-agnostic code, so that instead of calling <code>.cuda()</code> one instead do something like <code>.type(my_type)</code>.<br>\nAdding support for 'dtype' in the constructor of some functions will be a first step towards that direction.</p>", "body_text": "I'm not sure this is a good strategy, as it might mask from the user configuration problems that he might not be aware of.\nI think the best would be to simplify the task of having device-agnostic code, so that instead of calling .cuda() one instead do something like .type(my_type).\nAdding support for 'dtype' in the constructor of some functions will be a first step towards that direction.", "body": "I'm not sure this is a good strategy, as it might mask from the user configuration problems that he might not be aware of.\r\nI think the best would be to simplify the task of having device-agnostic code, so that instead of calling `.cuda()` one instead do something like `.type(my_type)`.\r\nAdding support for 'dtype' in the constructor of some functions will be a first step towards that direction."}