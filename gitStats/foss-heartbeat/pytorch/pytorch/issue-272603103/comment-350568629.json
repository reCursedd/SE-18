{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/350568629", "html_url": "https://github.com/pytorch/pytorch/issues/3600#issuecomment-350568629", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3600", "id": 350568629, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDU2ODYyOQ==", "user": {"login": "elbaro", "id": 1851290, "node_id": "MDQ6VXNlcjE4NTEyOTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1851290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elbaro", "html_url": "https://github.com/elbaro", "followers_url": "https://api.github.com/users/elbaro/followers", "following_url": "https://api.github.com/users/elbaro/following{/other_user}", "gists_url": "https://api.github.com/users/elbaro/gists{/gist_id}", "starred_url": "https://api.github.com/users/elbaro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elbaro/subscriptions", "organizations_url": "https://api.github.com/users/elbaro/orgs", "repos_url": "https://api.github.com/users/elbaro/repos", "events_url": "https://api.github.com/users/elbaro/events{/privacy}", "received_events_url": "https://api.github.com/users/elbaro/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-10T18:37:09Z", "updated_at": "2017-12-10T18:37:09Z", "author_association": "NONE", "body_html": "<p>+1 for warning and fallback.</p>\n<p>meanwhile this is a simple hack:</p>\n<pre><code>def cuda(x, **kwargs):\n    if config.gpu:\n        return x.cuda(**kwargs)\n    return x\n\nvar = Variable(cuda(tensor))\nnet = cuda(Network())\n</code></pre>", "body_text": "+1 for warning and fallback.\nmeanwhile this is a simple hack:\ndef cuda(x, **kwargs):\n    if config.gpu:\n        return x.cuda(**kwargs)\n    return x\n\nvar = Variable(cuda(tensor))\nnet = cuda(Network())", "body": "+1 for warning and fallback.\r\n\r\nmeanwhile this is a simple hack:\r\n\r\n```\r\ndef cuda(x, **kwargs):\r\n    if config.gpu:\r\n        return x.cuda(**kwargs)\r\n    return x\r\n\r\nvar = Variable(cuda(tensor))\r\nnet = cuda(Network())\r\n```\r\n"}