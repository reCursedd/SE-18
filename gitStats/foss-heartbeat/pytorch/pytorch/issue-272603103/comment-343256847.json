{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/343256847", "html_url": "https://github.com/pytorch/pytorch/issues/3600#issuecomment-343256847", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3600", "id": 343256847, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzI1Njg0Nw==", "user": {"login": "kyunghyuncho", "id": 4028979, "node_id": "MDQ6VXNlcjQwMjg5Nzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/4028979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyunghyuncho", "html_url": "https://github.com/kyunghyuncho", "followers_url": "https://api.github.com/users/kyunghyuncho/followers", "following_url": "https://api.github.com/users/kyunghyuncho/following{/other_user}", "gists_url": "https://api.github.com/users/kyunghyuncho/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyunghyuncho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyunghyuncho/subscriptions", "organizations_url": "https://api.github.com/users/kyunghyuncho/orgs", "repos_url": "https://api.github.com/users/kyunghyuncho/repos", "events_url": "https://api.github.com/users/kyunghyuncho/events{/privacy}", "received_events_url": "https://api.github.com/users/kyunghyuncho/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-09T19:01:56Z", "updated_at": "2017-11-09T19:01:56Z", "author_association": "NONE", "body_html": "<p>would this be resolved by modifying <code>CudaTransfer</code>?</p>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pytorch/pytorch/blob/fde355f7d4ad95a1f8cba6adc3fff7b4935ecba0/torch/autograd/_functions/tensor.py#L172-L190\">pytorch/torch/autograd/_functions/tensor.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 172 to 190\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pytorch/pytorch/commit/fde355f7d4ad95a1f8cba6adc3fff7b4935ecba0\">fde355f</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L172\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"172\"></td>\n          <td id=\"LC172\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">class</span> <span class=\"pl-en\">CudaTransfer</span>(<span class=\"pl-e\">Function</span>): </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L173\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"173\"></td>\n          <td id=\"LC173\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L174\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"174\"></td>\n          <td id=\"LC174\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-en\">@</span><span class=\"pl-c1\">staticmethod</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L175\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"175\"></td>\n          <td id=\"LC175\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-k\">def</span> <span class=\"pl-en\">forward</span>(<span class=\"pl-smi\">ctx</span>, <span class=\"pl-smi\">i</span>, <span class=\"pl-smi\">device</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">None</span>, <span class=\"pl-k\">async</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>): </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L176\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"176\"></td>\n          <td id=\"LC176\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         ctx.source_device <span class=\"pl-k\">=</span> <span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span> <span class=\"pl-k\">if</span> <span class=\"pl-k\">not</span> i.is_cuda <span class=\"pl-k\">else</span> i.get_device() </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L177\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"177\"></td>\n          <td id=\"LC177\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         ctx.source_was_cuda <span class=\"pl-k\">=</span> i.is_cuda </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L178\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"178\"></td>\n          <td id=\"LC178\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         <span class=\"pl-k\">if</span> device <span class=\"pl-k\">is</span> <span class=\"pl-k\">not</span> <span class=\"pl-c1\">None</span>: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L179\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"179\"></td>\n          <td id=\"LC179\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">             <span class=\"pl-k\">return</span> i.cuda(device, <span class=\"pl-k\">async</span><span class=\"pl-k\">=</span><span class=\"pl-k\">async</span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L180\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"180\"></td>\n          <td id=\"LC180\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         <span class=\"pl-k\">else</span>: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L181\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"181\"></td>\n          <td id=\"LC181\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">             <span class=\"pl-k\">return</span> i.cuda(<span class=\"pl-k\">async</span><span class=\"pl-k\">=</span><span class=\"pl-k\">async</span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L182\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"182\"></td>\n          <td id=\"LC182\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L183\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"183\"></td>\n          <td id=\"LC183\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-en\">@</span><span class=\"pl-c1\">staticmethod</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L184\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"184\"></td>\n          <td id=\"LC184\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-k\">def</span> <span class=\"pl-en\">backward</span>(<span class=\"pl-smi\">ctx</span>, <span class=\"pl-smi\">grad_output</span>): </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L185\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"185\"></td>\n          <td id=\"LC185\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         <span class=\"pl-k\">if</span> ctx.source_device <span class=\"pl-k\">!=</span> <span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L186\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"186\"></td>\n          <td id=\"LC186\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">             <span class=\"pl-k\">return</span> grad_output.cuda(ctx.source_device), <span class=\"pl-c1\">None</span>, <span class=\"pl-c1\">None</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L187\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"187\"></td>\n          <td id=\"LC187\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         <span class=\"pl-k\">elif</span> ctx.source_was_cuda: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L188\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"188\"></td>\n          <td id=\"LC188\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">             <span class=\"pl-k\">return</span> grad_output, <span class=\"pl-c1\">None</span>, <span class=\"pl-c1\">None</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L189\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"189\"></td>\n          <td id=\"LC189\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         <span class=\"pl-k\">else</span>: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L190\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"190\"></td>\n          <td id=\"LC190\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">             <span class=\"pl-k\">return</span> grad_output.cpu(), <span class=\"pl-c1\">None</span>, <span class=\"pl-c1\">None</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "body_text": "would this be resolved by modifying CudaTransfer?\n\n  \n    \n      pytorch/torch/autograd/_functions/tensor.py\n    \n    \n        Lines 172 to 190\n      in\n      fde355f\n    \n    \n    \n    \n\n        \n          \n           class CudaTransfer(Function): \n        \n\n        \n          \n            \n        \n\n        \n          \n               @staticmethod \n        \n\n        \n          \n               def forward(ctx, i, device=None, async=False): \n        \n\n        \n          \n                   ctx.source_device = -1 if not i.is_cuda else i.get_device() \n        \n\n        \n          \n                   ctx.source_was_cuda = i.is_cuda \n        \n\n        \n          \n                   if device is not None: \n        \n\n        \n          \n                       return i.cuda(device, async=async) \n        \n\n        \n          \n                   else: \n        \n\n        \n          \n                       return i.cuda(async=async) \n        \n\n        \n          \n            \n        \n\n        \n          \n               @staticmethod \n        \n\n        \n          \n               def backward(ctx, grad_output): \n        \n\n        \n          \n                   if ctx.source_device != -1: \n        \n\n        \n          \n                       return grad_output.cuda(ctx.source_device), None, None \n        \n\n        \n          \n                   elif ctx.source_was_cuda: \n        \n\n        \n          \n                       return grad_output, None, None \n        \n\n        \n          \n                   else: \n        \n\n        \n          \n                       return grad_output.cpu(), None, None", "body": "would this be resolved by modifying ``CudaTransfer``?\r\n\r\nhttps://github.com/pytorch/pytorch/blob/fde355f7d4ad95a1f8cba6adc3fff7b4935ecba0/torch/autograd/_functions/tensor.py#L172-L190"}