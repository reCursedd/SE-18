{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1662", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1662/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1662/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1662/events", "html_url": "https://github.com/pytorch/pytorch/issues/1662", "id": 231680847, "node_id": "MDU6SXNzdWUyMzE2ODA4NDc=", "number": 1662, "title": "feature request: a sensible masked_copy", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131847, "node_id": "MDU6TGFiZWw0MjQxMzE4NDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/bug", "name": "bug", "color": "b60205", "default": true}, {"id": 443484135, "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority", "name": "high priority", "color": "F22613", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pytorch/pytorch/milestones/2", "html_url": "https://github.com/pytorch/pytorch/milestone/2", "labels_url": "https://api.github.com/repos/pytorch/pytorch/milestones/2/labels", "id": 2536200, "node_id": "MDk6TWlsZXN0b25lMjUzNjIwMA==", "number": 2, "title": "v0.2", "description": "", "creator": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "open_issues": 2, "closed_issues": 34, "state": "closed", "created_at": "2017-05-22T18:19:28Z", "updated_at": "2018-08-06T21:16:06Z", "due_on": "2017-06-04T07:00:00Z", "closed_at": "2018-08-06T21:16:06Z"}, "comments": 2, "created_at": "2017-05-26T16:54:18Z", "updated_at": "2017-06-06T05:06:35Z", "closed_at": "2017-06-06T05:06:35Z", "author_association": "CONTRIBUTOR", "body_html": "<p>While working on broadcasting, I found the behavior of masked_copy unintuitive; I expected the same behavior as numpy.copyto (<a href=\"https://docs.scipy.org/doc/numpy/reference/generated/numpy.copyto.html\" rel=\"nofollow\">https://docs.scipy.org/doc/numpy/reference/generated/numpy.copyto.html</a>, which also has sensible broadcasting semantics.  In that case the (i,j,k...)th element is copied from the source tensor if (i,j,k,...) is 1 in the mask.  But instead it copies the element the z-th element from the source (when viewed as a 1-d tensor) to (i,j,k) in the destination if (i,j,k) is set in the mask, where z is the number of non-zero elements seen so far in the mask.</p>\n<p>I see <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> and others have run into the same issue: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"214613477\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/1011\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/1011/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/1011\">#1011</a>.</p>\n<p>This issue is to come up with some sensible deprecation / renaming strategy for this function.  We may want to do this soon, because broadcasting is changing/deprecating a lot of shape semantics like this anyway and it's better to do all these changes at once imo.</p>", "body_text": "While working on broadcasting, I found the behavior of masked_copy unintuitive; I expected the same behavior as numpy.copyto (https://docs.scipy.org/doc/numpy/reference/generated/numpy.copyto.html, which also has sensible broadcasting semantics.  In that case the (i,j,k...)th element is copied from the source tensor if (i,j,k,...) is 1 in the mask.  But instead it copies the element the z-th element from the source (when viewed as a 1-d tensor) to (i,j,k) in the destination if (i,j,k) is set in the mask, where z is the number of non-zero elements seen so far in the mask.\nI see @apaszke and others have run into the same issue: #1011.\nThis issue is to come up with some sensible deprecation / renaming strategy for this function.  We may want to do this soon, because broadcasting is changing/deprecating a lot of shape semantics like this anyway and it's better to do all these changes at once imo.", "body": "While working on broadcasting, I found the behavior of masked_copy unintuitive; I expected the same behavior as numpy.copyto (https://docs.scipy.org/doc/numpy/reference/generated/numpy.copyto.html, which also has sensible broadcasting semantics.  In that case the (i,j,k...)th element is copied from the source tensor if (i,j,k,...) is 1 in the mask.  But instead it copies the element the z-th element from the source (when viewed as a 1-d tensor) to (i,j,k) in the destination if (i,j,k) is set in the mask, where z is the number of non-zero elements seen so far in the mask.\r\n\r\nI see @apaszke and others have run into the same issue: https://github.com/pytorch/pytorch/issues/1011.\r\n\r\nThis issue is to come up with some sensible deprecation / renaming strategy for this function.  We may want to do this soon, because broadcasting is changing/deprecating a lot of shape semantics like this anyway and it's better to do all these changes at once imo."}