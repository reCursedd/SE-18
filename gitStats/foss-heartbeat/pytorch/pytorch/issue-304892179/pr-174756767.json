{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/5744", "id": 174756767, "node_id": "MDExOlB1bGxSZXF1ZXN0MTc0NzU2NzY3", "html_url": "https://github.com/pytorch/pytorch/pull/5744", "diff_url": "https://github.com/pytorch/pytorch/pull/5744.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/5744.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5744", "number": 5744, "state": "closed", "locked": false, "title": "Fix bmm memory leak", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "body": "Fixes #5611.\r\n\r\n`THCTensor_(baddbmm)` assumes that newContiguous will always return a new tensor (this is a bad assumption). At the end of the function, tensors are freed if `tensor_new != tensor_old`. As a result, some tensors aren't freed if they were initially contiguous and `newContiguous` is called on them.\r\n\r\n### Test Plan\r\n- code reading\r\n- run the following (from the #5611 bug report) and assert that the memory doesn't leak anymore\r\n```\r\nimport subprocess\r\nimport torch\r\nfrom torch.autograd import Variable\r\n\r\n# This is from https://discuss.pytorch.org/t/access-gpu-memory-usage-in-pytorch/3192/4\r\ndef get_gpu_memory_map():\r\n    \"\"\"Get the current gpu usage.\r\n\r\n    Returns\r\n    -------\r\n    usage: dict\r\n        Keys are device ids as integers.\r\n        Values are memory usage as integers in MB.\r\n    \"\"\"\r\n    result = subprocess.check_output(\r\n        [\r\n            'nvidia-smi', '--query-gpu=memory.used',\r\n            '--format=csv,nounits,noheader'\r\n        ], encoding='utf-8')\r\n    # Convert lines into a dictionary\r\n    gpu_memory = [int(x) for x in result.strip().split('\\n')]\r\n    gpu_memory_map = dict(zip(range(len(gpu_memory)), gpu_memory))\r\n    return gpu_memory_map\r\n\r\nl, m, n = 1, 9, 1\r\nw = torch.nn.Parameter(torch.Tensor(1024, 2, l, m).cuda())\r\nfor i in range(10000):\r\n    a = Variable(torch.Tensor(1024, 2, m, n).cuda())\r\n    torch.matmul(w, a).permute(0, 3, 1, 2).mean().backward()\r\n    if i % 100 == 0:\r\n        gpu_mem = get_gpu_memory_map()\r\n        print(\"GPU: {:.2f} KB\".format(gpu_mem[0]))\r\n```", "created_at": "2018-03-13T18:51:47Z", "updated_at": "2018-03-15T14:44:36Z", "closed_at": "2018-03-15T14:44:36Z", "merged_at": "2018-03-15T14:44:36Z", "merge_commit_sha": "82777815f8013f881bd8f40171b29de92fa3c360", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5744/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5744/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5744/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/0cb5c27a8fcbb4a2dddf8d51a57c3acaf18a06e6", "head": {"label": "zou3519:fix-bmm-leak", "ref": "fix-bmm-leak", "sha": "0cb5c27a8fcbb4a2dddf8d51a57c3acaf18a06e6", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "repo": {"id": 103550456, "node_id": "MDEwOlJlcG9zaXRvcnkxMDM1NTA0NTY=", "name": "pytorch", "full_name": "zou3519/pytorch", "private": false, "owner": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/zou3519/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": true, "url": "https://api.github.com/repos/zou3519/pytorch", "forks_url": "https://api.github.com/repos/zou3519/pytorch/forks", "keys_url": "https://api.github.com/repos/zou3519/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/zou3519/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/zou3519/pytorch/teams", "hooks_url": "https://api.github.com/repos/zou3519/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/zou3519/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/zou3519/pytorch/events", "assignees_url": "https://api.github.com/repos/zou3519/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/zou3519/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/zou3519/pytorch/tags", "blobs_url": "https://api.github.com/repos/zou3519/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/zou3519/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/zou3519/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/zou3519/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/zou3519/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/zou3519/pytorch/languages", "stargazers_url": "https://api.github.com/repos/zou3519/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/zou3519/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/zou3519/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/zou3519/pytorch/subscription", "commits_url": "https://api.github.com/repos/zou3519/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/zou3519/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/zou3519/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/zou3519/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/zou3519/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/zou3519/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/zou3519/pytorch/merges", "archive_url": "https://api.github.com/repos/zou3519/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/zou3519/pytorch/downloads", "issues_url": "https://api.github.com/repos/zou3519/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/zou3519/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/zou3519/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/zou3519/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/zou3519/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/zou3519/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/zou3519/pytorch/deployments", "created_at": "2017-09-14T15:36:38Z", "updated_at": "2018-11-14T15:29:03Z", "pushed_at": "2018-11-21T19:36:59Z", "git_url": "git://github.com/zou3519/pytorch.git", "ssh_url": "git@github.com:zou3519/pytorch.git", "clone_url": "https://github.com/zou3519/pytorch.git", "svn_url": "https://github.com/zou3519/pytorch", "homepage": "http://pytorch.org", "size": 123188, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "e9fffb5579e570d31a256fde7e387d3d8d40b845", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T05:35:41Z", "pushed_at": "2018-11-24T05:34:07Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89651, "stargazers_count": 21577, "watchers_count": 21577, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5149, "mirror_url": null, "archived": false, "open_issues_count": 2193, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5149, "open_issues": 2193, "watchers": 21577, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5744"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5744"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/5744"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/5744/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5744/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5744/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/0cb5c27a8fcbb4a2dddf8d51a57c3acaf18a06e6"}}, "author_association": "CONTRIBUTOR", "body_html": "<p><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #5611.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"303152463\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/5611\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/5611/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/5611\">#5611</a>.</p>\n<p><code>THCTensor_(baddbmm)</code> assumes that newContiguous will always return a new tensor (this is a bad assumption). At the end of the function, tensors are freed if <code>tensor_new != tensor_old</code>. As a result, some tensors aren't freed if they were initially contiguous and <code>newContiguous</code> is called on them.</p>\n<h3>Test Plan</h3>\n<ul>\n<li>code reading</li>\n<li>run the following (from the <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"303152463\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/5611\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/5611/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/5611\">#5611</a> bug report) and assert that the memory doesn't leak anymore</li>\n</ul>\n<pre><code>import subprocess\nimport torch\nfrom torch.autograd import Variable\n\n# This is from https://discuss.pytorch.org/t/access-gpu-memory-usage-in-pytorch/3192/4\ndef get_gpu_memory_map():\n    \"\"\"Get the current gpu usage.\n\n    Returns\n    -------\n    usage: dict\n        Keys are device ids as integers.\n        Values are memory usage as integers in MB.\n    \"\"\"\n    result = subprocess.check_output(\n        [\n            'nvidia-smi', '--query-gpu=memory.used',\n            '--format=csv,nounits,noheader'\n        ], encoding='utf-8')\n    # Convert lines into a dictionary\n    gpu_memory = [int(x) for x in result.strip().split('\\n')]\n    gpu_memory_map = dict(zip(range(len(gpu_memory)), gpu_memory))\n    return gpu_memory_map\n\nl, m, n = 1, 9, 1\nw = torch.nn.Parameter(torch.Tensor(1024, 2, l, m).cuda())\nfor i in range(10000):\n    a = Variable(torch.Tensor(1024, 2, m, n).cuda())\n    torch.matmul(w, a).permute(0, 3, 1, 2).mean().backward()\n    if i % 100 == 0:\n        gpu_mem = get_gpu_memory_map()\n        print(\"GPU: {:.2f} KB\".format(gpu_mem[0]))\n</code></pre>", "body_text": "Fixes #5611.\nTHCTensor_(baddbmm) assumes that newContiguous will always return a new tensor (this is a bad assumption). At the end of the function, tensors are freed if tensor_new != tensor_old. As a result, some tensors aren't freed if they were initially contiguous and newContiguous is called on them.\nTest Plan\n\ncode reading\nrun the following (from the #5611 bug report) and assert that the memory doesn't leak anymore\n\nimport subprocess\nimport torch\nfrom torch.autograd import Variable\n\n# This is from https://discuss.pytorch.org/t/access-gpu-memory-usage-in-pytorch/3192/4\ndef get_gpu_memory_map():\n    \"\"\"Get the current gpu usage.\n\n    Returns\n    -------\n    usage: dict\n        Keys are device ids as integers.\n        Values are memory usage as integers in MB.\n    \"\"\"\n    result = subprocess.check_output(\n        [\n            'nvidia-smi', '--query-gpu=memory.used',\n            '--format=csv,nounits,noheader'\n        ], encoding='utf-8')\n    # Convert lines into a dictionary\n    gpu_memory = [int(x) for x in result.strip().split('\\n')]\n    gpu_memory_map = dict(zip(range(len(gpu_memory)), gpu_memory))\n    return gpu_memory_map\n\nl, m, n = 1, 9, 1\nw = torch.nn.Parameter(torch.Tensor(1024, 2, l, m).cuda())\nfor i in range(10000):\n    a = Variable(torch.Tensor(1024, 2, m, n).cuda())\n    torch.matmul(w, a).permute(0, 3, 1, 2).mean().backward()\n    if i % 100 == 0:\n        gpu_mem = get_gpu_memory_map()\n        print(\"GPU: {:.2f} KB\".format(gpu_mem[0]))", "merged": true, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "comments": 8, "review_comments": 0, "maintainer_can_modify": false, "commits": 1, "additions": 12, "deletions": 2, "changed_files": 1}