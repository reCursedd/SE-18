{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/421022411", "html_url": "https://github.com/pytorch/pytorch/pull/10881#issuecomment-421022411", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/10881", "id": 421022411, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTAyMjQxMQ==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-13T14:14:30Z", "updated_at": "2018-09-13T14:14:30Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7799218\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mcarilli\">@mcarilli</a> Ok, now that the code is restricted to the NVTX path only (originally it hasn't been), I think we can accept this patch. However, I still think there are a few things that might make the profiler less useful for us, in particular the unnecessary use of <code>std::string msg</code>, which could easily have been a <code>const char *</code> that would save us on allocations and destructor calls in all other paths. I tried using the profiler yesterday for checking JIT perf and I have concluded that it's no longer as useful as it used to, due to all overheads that have creeped up over the past year. I'm trying to see if we can push them down again, but any such patch unfortunately makes them worse.</p>\n<p>I'm surprised people are using the NVTX mode this much. I haven't found it very useful due to how slow NVTX is.</p>", "body_text": "@mcarilli Ok, now that the code is restricted to the NVTX path only (originally it hasn't been), I think we can accept this patch. However, I still think there are a few things that might make the profiler less useful for us, in particular the unnecessary use of std::string msg, which could easily have been a const char * that would save us on allocations and destructor calls in all other paths. I tried using the profiler yesterday for checking JIT perf and I have concluded that it's no longer as useful as it used to, due to all overheads that have creeped up over the past year. I'm trying to see if we can push them down again, but any such patch unfortunately makes them worse.\nI'm surprised people are using the NVTX mode this much. I haven't found it very useful due to how slow NVTX is.", "body": "@mcarilli Ok, now that the code is restricted to the NVTX path only (originally it hasn't been), I think we can accept this patch. However, I still think there are a few things that might make the profiler less useful for us, in particular the unnecessary use of `std::string msg`, which could easily have been a `const char *` that would save us on allocations and destructor calls in all other paths. I tried using the profiler yesterday for checking JIT perf and I have concluded that it's no longer as useful as it used to, due to all overheads that have creeped up over the past year. I'm trying to see if we can push them down again, but any such patch unfortunately makes them worse.\r\n\r\nI'm surprised people are using the NVTX mode this much. I haven't found it very useful due to how slow NVTX is."}