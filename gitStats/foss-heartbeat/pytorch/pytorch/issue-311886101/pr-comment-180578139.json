{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/180578139", "pull_request_review_id": 111022831, "id": 180578139, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MDU3ODEzOQ==", "diff_hunk": "@@ -245,28 +186,28 @@ struct Module : public std::enable_shared_from_this<Module> {\n     return methods.values();\n   }\n \n-\n-  at::optional<NamedParameter&> find_parameter(const std::string& name) {\n+  NamedParameter* find_parameter(const std::string& name) {\n     return parameters.find(name);\n   }\n-  at::optional<NamedModule&> find_module(const std::string& name) {\n+  NamedModule* find_module(const std::string& name) {\n     return modules.find(name);\n   }\n-  at::optional<Method&> find_method(const std::string& name) {\n-    if(auto pm = methods.find(name))\n-      return at::optional<Method&>(**pm);\n-    return at::nullopt;\n+  Method* find_method(const std::string& name) {\n+    if (auto method = methods.find(name)) {\n+      return method->get();\n+    }\n+    return nullptr;", "path": "torch/csrc/jit/script/module.h", "position": 121, "original_position": 105, "commit_id": "0b7918bf1a5cb58c7ec4aeff0e6dd310b30ec134", "original_commit_id": "cae76cd6041dbd56cadcdcc50f55380a21df08e7", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "To be honest I find `at::optional` to be a much better indication that a value is optional than when it's a pointer. It also enforces handling of missing values on the calling code, which is generally good. Can you please revert this?", "created_at": "2018-04-10T21:48:59Z", "updated_at": "2018-11-23T15:42:13Z", "html_url": "https://github.com/pytorch/pytorch/pull/6345#discussion_r180578139", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6345", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/180578139"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6345#discussion_r180578139"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6345"}}, "body_html": "<p>To be honest I find <code>at::optional</code> to be a much better indication that a value is optional than when it's a pointer. It also enforces handling of missing values on the calling code, which is generally good. Can you please revert this?</p>", "body_text": "To be honest I find at::optional to be a much better indication that a value is optional than when it's a pointer. It also enforces handling of missing values on the calling code, which is generally good. Can you please revert this?"}