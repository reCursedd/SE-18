{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/180125364", "pull_request_review_id": 110491691, "id": 180125364, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MDEyNTM2NA==", "diff_hunk": "@@ -0,0 +1,26 @@\n+#pragma once\n+\n+#include <torch/csrc/autograd/variable.h>\n+\n+namespace at {\n+struct Type;\n+enum class Backend;\n+enum class ScalarType;\n+} // namespace at\n+\n+namespace torch {\n+/// There will only be gradient recording tensors in the frontend API.\n+using Tensor = autograd::Variable;", "path": "torch/csrc/api/include/torch/tensor.h", "position": 13, "original_position": 13, "commit_id": "0b7918bf1a5cb58c7ec4aeff0e6dd310b30ec134", "original_commit_id": "159082394a77aac7544a262384f1fd77725a24c1", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "That's impossible, unless `torch::` will become an exact mirror of `at::`. Even you used `at::tanh` in your `LSTM` implementation, but this means that you silently introduced an `at::Tensor` into the mix.", "created_at": "2018-04-09T15:03:44Z", "updated_at": "2018-11-23T15:42:03Z", "html_url": "https://github.com/pytorch/pytorch/pull/6345#discussion_r180125364", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6345", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/180125364"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6345#discussion_r180125364"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6345"}}, "body_html": "<p>That's impossible, unless <code>torch::</code> will become an exact mirror of <code>at::</code>. Even you used <code>at::tanh</code> in your <code>LSTM</code> implementation, but this means that you silently introduced an <code>at::Tensor</code> into the mix.</p>", "body_text": "That's impossible, unless torch:: will become an exact mirror of at::. Even you used at::tanh in your LSTM implementation, but this means that you silently introduced an at::Tensor into the mix.", "in_reply_to_id": 179962136}