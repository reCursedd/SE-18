{"url": "https://api.github.com/repos/pytorch/pytorch/issues/13267", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13267/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13267/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13267/events", "html_url": "https://github.com/pytorch/pytorch/pull/13267", "id": 375216192, "node_id": "MDExOlB1bGxSZXF1ZXN0MjI2NzEzMzAx", "number": 13267, "title": "Speed up tensor.storage_offset", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 679953983, "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit", "name": "jit", "color": "c5def5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-29T21:05:10Z", "updated_at": "2018-10-30T14:38:11Z", "closed_at": "2018-10-30T14:38:11Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/13267", "html_url": "https://github.com/pytorch/pytorch/pull/13267", "diff_url": "https://github.com/pytorch/pytorch/pull/13267.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/13267.patch"}, "body_html": "<p>This PR special cases tensor.storage_offset to avoid dispatches in the<br>\ncommon case. tensor.storage_offset is important for torch.as_strided<br>\nperformance, because as_strided(sizes, strides) shares an implementation<br>\nwith as_strided(sizes, strides, storage_offset) and it might not be the<br>\nbest if there were two separate implementations (including backward<br>\nimplementations).</p>\n<p>This PR reduces times on a tensor.storage_offset<br>\nmicrobenchmark from 22ns to 2ns (these numbers are pretty stable). For<br>\na torch.as_strided benchmark, this PR reduces numbers from 1042 to<br>\n928ns, a 100ns improvement, but this number is noisy and goes up and<br>\ndown.</p>\n<p>Test Plan: run tests. Also added new test case to make sure the JIT<br>\naccepts this special-cased tensor.storage_offset() fn.</p>", "body_text": "This PR special cases tensor.storage_offset to avoid dispatches in the\ncommon case. tensor.storage_offset is important for torch.as_strided\nperformance, because as_strided(sizes, strides) shares an implementation\nwith as_strided(sizes, strides, storage_offset) and it might not be the\nbest if there were two separate implementations (including backward\nimplementations).\nThis PR reduces times on a tensor.storage_offset\nmicrobenchmark from 22ns to 2ns (these numbers are pretty stable). For\na torch.as_strided benchmark, this PR reduces numbers from 1042 to\n928ns, a 100ns improvement, but this number is noisy and goes up and\ndown.\nTest Plan: run tests. Also added new test case to make sure the JIT\naccepts this special-cased tensor.storage_offset() fn.", "body": "This PR special cases tensor.storage_offset to avoid dispatches in the\r\ncommon case. tensor.storage_offset is important for torch.as_strided\r\nperformance, because as_strided(sizes, strides) shares an implementation\r\nwith as_strided(sizes, strides, storage_offset) and it might not be the\r\nbest if there were two separate implementations (including backward\r\nimplementations).\r\n\r\nThis PR reduces times on a tensor.storage_offset\r\nmicrobenchmark from 22ns to 2ns (these numbers are pretty stable). For\r\na torch.as_strided benchmark, this PR reduces numbers from 1042 to\r\n928ns, a 100ns improvement, but this number is noisy and goes up and\r\ndown.\r\n\r\nTest Plan: run tests. Also added new test case to make sure the JIT\r\naccepts this special-cased tensor.storage_offset() fn.\r\n\r\n"}