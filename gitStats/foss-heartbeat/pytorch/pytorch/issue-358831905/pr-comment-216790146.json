{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/216790146", "pull_request_review_id": 154352020, "id": 216790146, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjc5MDE0Ng==", "diff_hunk": "@@ -1734,6 +1734,51 @@ struct to_ir {\n     return emitSlice(loc, sliceable, maybe_dim, slice_exp);\n   }\n \n+  Value* emitTupleIndex(const SourceRange& loc,\n+      Value * tuple_val,\n+      Value * idx_val) {\n+    auto tuple_type = tuple_val->type()->cast<TupleType>();\n+    auto throw_integer_constants_error = [loc]() {\n+      throw ErrorReport(loc)\n+        << \"Indexing on tuples only supported with integer constants\";\n+    };\n+\n+    if (!idx_val->type()->isSubtypeOf(IntType::get())) {\n+      throw_integer_constants_error();\n+    }\n+\n+    int64_t index;\n+    if (idx_val->node()->kind() == prim::Constant) {\n+      index = idx_val->node()->i(attr::value);\n+    } else if (idx_val->node()->kind() == aten::neg) {\n+      auto input_to_neg_node = idx_val->node()->input()->node();\n+      if (input_to_neg_node->kind() != prim::Constant) {\n+        throw_integer_constants_error();\n+      }\n+      index = -input_to_neg_node->i(attr::value);\n+    } else {\n+      throw_integer_constants_error();\n+    }\n+\n+    // more likely that the positive index already exists, and difficult\n+    // to figure out the size of the tuple is when registering the operator,\n+    // not in aten::neg block bc negative constants occur in py2", "path": "torch/csrc/jit/script/compiler.cpp", "position": null, "original_position": 32, "commit_id": "b21e0e10937df577e0f3fb71aded15744aabbf2c", "original_commit_id": "824aa9c830f85c0546cea13ce8c48f10dad9eeab", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "I don't understand this comment. Can you please reword that?", "created_at": "2018-09-11T19:19:46Z", "updated_at": "2018-11-23T15:51:01Z", "html_url": "https://github.com/pytorch/pytorch/pull/11492#discussion_r216790146", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11492", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/216790146"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11492#discussion_r216790146"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11492"}}, "body_html": "<p>I don't understand this comment. Can you please reword that?</p>", "body_text": "I don't understand this comment. Can you please reword that?"}