{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/217773220", "pull_request_review_id": 155573441, "id": 217773220, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzc3MzIyMA==", "diff_hunk": "@@ -35,12 +35,37 @@ TORCH_API at::optional<IValue> toIValue(Value* v);\n \n // if a value is a constant then try to turn into type T using the\n // same rules as the interpreter\n+// use DEFINE_CONSTANT_AS to define a new case\n template<typename T>\n-at::optional<T> constant_as(Value* v) {\n-  if(auto ivalue = toIValue(v)) {\n-    return ivalue->to<T>();\n-  }\n-  return at::nullopt;\n+at::optional<T> constant_as(Value* v) = delete;\n+\n+// without isName() exception will be thrown if the IValue is the wrong type\n+#define DEFINE_CONSTANT_AS(type, name)                                      \\\n+template<>                                                                  \\\n+inline at::optional<type> constant_as(Value* v) {                           \\\n+  if (at::optional<IValue> ivalue = toIValue(v)) {                          \\\n+    if (ivalue->is ## name()) {                                             \\\n+      return ivalue->to<type>();                                            \\\n+    }                                                                       \\\n+  }                                                                         \\\n+  return at::nullopt;                                                       \\\n }\n \n+DEFINE_CONSTANT_AS(at::Tensor, Tensor)", "path": "torch/csrc/jit/constants.h", "position": null, "original_position": 25, "commit_id": "b21e0e10937df577e0f3fb71aded15744aabbf2c", "original_commit_id": "8e10ca771e946ddfd45775c56017fe483da275e0", "user": {"login": "eellison", "id": 11477974, "node_id": "MDQ6VXNlcjExNDc3OTc0", "avatar_url": "https://avatars2.githubusercontent.com/u/11477974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eellison", "html_url": "https://github.com/eellison", "followers_url": "https://api.github.com/users/eellison/followers", "following_url": "https://api.github.com/users/eellison/following{/other_user}", "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}", "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eellison/subscriptions", "organizations_url": "https://api.github.com/users/eellison/orgs", "repos_url": "https://api.github.com/users/eellison/repos", "events_url": "https://api.github.com/users/eellison/events{/privacy}", "received_events_url": "https://api.github.com/users/eellison/received_events", "type": "User", "site_admin": false}, "body": "In getIntListAttribute constant_as is called on the input with Shared<jit::IntList>, and then invoked with <int64_t>. In the case that the input is an in64_t this will throw an exception. It looks like that getIntListAttribute is not being called anywhere currently, but the pattern of constant_as<type1>, then constant_as<type2> seems to be an easy pattern to fall into.", "created_at": "2018-09-14T16:39:50Z", "updated_at": "2018-11-23T15:51:24Z", "html_url": "https://github.com/pytorch/pytorch/pull/11492#discussion_r217773220", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11492", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/217773220"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11492#discussion_r217773220"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11492"}}, "body_html": "<p>In getIntListAttribute constant_as is called on the input with Sharedjit::IntList, and then invoked with &lt;int64_t&gt;. In the case that the input is an in64_t this will throw an exception. It looks like that getIntListAttribute is not being called anywhere currently, but the pattern of constant_as, then constant_as seems to be an easy pattern to fall into.</p>", "body_text": "In getIntListAttribute constant_as is called on the input with Sharedjit::IntList, and then invoked with <int64_t>. In the case that the input is an in64_t this will throw an exception. It looks like that getIntListAttribute is not being called anywhere currently, but the pattern of constant_as, then constant_as seems to be an easy pattern to fall into.", "in_reply_to_id": 217611682}