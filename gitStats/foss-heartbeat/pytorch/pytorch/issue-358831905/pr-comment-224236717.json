{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/224236717", "pull_request_review_id": 163554936, "id": 224236717, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDIzNjcxNw==", "diff_hunk": "@@ -28,18 +68,16 @@ static void VisitNode(Node* n, Node* insert_point) {\n     return;\n   }\n \n-  // make any TupleUnpack dead by undoing TupleUnpack(TupleConstruct())\n-  if(n->kind() == prim::TupleUnpack) {\n-    auto construct = n->input()->node();\n-    // note: removing these asserts changes this pass from a complete lowering\n-    // pass to one that removes tuples when possible. When tuples are first-class\n-    // in the interpreter, we should still run this pass to remove extraneous uses\n-    JIT_ASSERTM(construct->kind() == prim::TupleConstruct, \"tuple unpack not matched to tuple construct\");\n-    for(size_t i = 0; i < n->outputs().size(); ++i) {\n-      n->outputs()[i]->replaceAllUsesWith(construct->inputs()[i]);\n-    }\n-    return;\n+  // note: changing the second argument to false changes this pass from a complete lowering\n+  // pass to one that removes tuples when possible. When tuples are first-class\n+  // in the interpreter, we should still run this pass to remove extraneous uses\n+\n+  if(n->kind() == prim::TupleUnpack || n->kind() == prim::TupleIndex ||", "path": "torch/csrc/jit/passes/lower_tuples.cpp", "position": 78, "original_position": 79, "commit_id": "b21e0e10937df577e0f3fb71aded15744aabbf2c", "original_commit_id": "03b972bd549702e5d6eec4929dd5b23541e770c6", "user": {"login": "eellison", "id": 11477974, "node_id": "MDQ6VXNlcjExNDc3OTc0", "avatar_url": "https://avatars2.githubusercontent.com/u/11477974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eellison", "html_url": "https://github.com/eellison", "followers_url": "https://api.github.com/users/eellison/followers", "following_url": "https://api.github.com/users/eellison/following{/other_user}", "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}", "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eellison/subscriptions", "organizations_url": "https://api.github.com/users/eellison/orgs", "repos_url": "https://api.github.com/users/eellison/repos", "events_url": "https://api.github.com/users/eellison/events{/privacy}", "received_events_url": "https://api.github.com/users/eellison/received_events", "type": "User", "site_admin": false}, "body": "The guard is for returning after removeTupleNodes is called", "created_at": "2018-10-10T20:49:55Z", "updated_at": "2018-11-23T15:52:50Z", "html_url": "https://github.com/pytorch/pytorch/pull/11492#discussion_r224236717", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11492", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/224236717"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11492#discussion_r224236717"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11492"}}, "body_html": "<p>The guard is for returning after removeTupleNodes is called</p>", "body_text": "The guard is for returning after removeTupleNodes is called", "in_reply_to_id": 223481419}