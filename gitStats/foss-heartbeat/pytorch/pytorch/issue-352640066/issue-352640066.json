{"url": "https://api.github.com/repos/pytorch/pytorch/issues/10739", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10739/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10739/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10739/events", "html_url": "https://github.com/pytorch/pytorch/pull/10739", "id": 352640066, "node_id": "MDExOlB1bGxSZXF1ZXN0MjA5OTAxNzcz", "number": 10739, "title": "Kill the dummy TaskOutput when task.get_step()", "user": {"login": "xsh6528", "id": 7608630, "node_id": "MDQ6VXNlcjc2MDg2MzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/7608630?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xsh6528", "html_url": "https://github.com/xsh6528", "followers_url": "https://api.github.com/users/xsh6528/followers", "following_url": "https://api.github.com/users/xsh6528/following{/other_user}", "gists_url": "https://api.github.com/users/xsh6528/gists{/gist_id}", "starred_url": "https://api.github.com/users/xsh6528/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xsh6528/subscriptions", "organizations_url": "https://api.github.com/users/xsh6528/orgs", "repos_url": "https://api.github.com/users/xsh6528/repos", "events_url": "https://api.github.com/users/xsh6528/events{/privacy}", "received_events_url": "https://api.github.com/users/xsh6528/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 890282107, "node_id": "MDU6TGFiZWw4OTAyODIxMDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/caffe2", "name": "caffe2", "color": "210aa8", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-21T17:34:22Z", "updated_at": "2018-08-29T03:42:56Z", "closed_at": "2018-08-29T03:42:56Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/10739", "html_url": "https://github.com/pytorch/pytorch/pull/10739", "diff_url": "https://github.com/pytorch/pytorch/pull/10739.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/10739.patch"}, "body_html": "<p>Summary:<br>\nI wanted to assert that the blobs in the workspace blobs after loading checkpoint are exactly the same as the blobs in the work save before saving to a checkpoint.</p>\n<p>But I found that when calling <code>task.get_step()</code>, a dummy task output blob, <code>task:output/ConstIntFill:0</code>, is added. Also a dummy net \"task:output\" was also added along.</p>\n<p>This makes it hard to assert \"Equal\", forcing me to assert \"LessThan\" or \"GreaterThan\".</p>\n<p>ZMQ socket can't send empty list.<br>\nAs a result, if the Task on the Worker had no output,<br>\nThe master would never stop waiting and hang forever.</p>\n<p>So a dummy TaskOutput was added when <code>task.get_step()</code> to work around it.</p>\n<p>After thinking it twice, I think this should be fixed.</p>\n<p>Because TaskOuput is at User layer. The issued shouldn't have been solved by adding a TaskOuput.</p>\n<p>Instead, we should move the creating of the placeholder blob to some deeper layer,<br>\nand remove the placeholder blob in the workspace afterwards to avoid polluting user workspace.<br>\nAfter this change, the workaround becomes totally transparent and no side-effect to users.</p>\n<p>Differential Revision: D9413150</p>", "body_text": "Summary:\nI wanted to assert that the blobs in the workspace blobs after loading checkpoint are exactly the same as the blobs in the work save before saving to a checkpoint.\nBut I found that when calling task.get_step(), a dummy task output blob, task:output/ConstIntFill:0, is added. Also a dummy net \"task:output\" was also added along.\nThis makes it hard to assert \"Equal\", forcing me to assert \"LessThan\" or \"GreaterThan\".\nZMQ socket can't send empty list.\nAs a result, if the Task on the Worker had no output,\nThe master would never stop waiting and hang forever.\nSo a dummy TaskOutput was added when task.get_step() to work around it.\nAfter thinking it twice, I think this should be fixed.\nBecause TaskOuput is at User layer. The issued shouldn't have been solved by adding a TaskOuput.\nInstead, we should move the creating of the placeholder blob to some deeper layer,\nand remove the placeholder blob in the workspace afterwards to avoid polluting user workspace.\nAfter this change, the workaround becomes totally transparent and no side-effect to users.\nDifferential Revision: D9413150", "body": "Summary:\nI wanted to assert that the blobs in the workspace blobs after loading checkpoint are exactly the same as the blobs in the work save before saving to a checkpoint.\n\nBut I found that when calling `task.get_step()`, a dummy task output blob, `task:output/ConstIntFill:0`, is added. Also a dummy net \"task:output\" was also added along.\n\nThis makes it hard to assert \"Equal\", forcing me to assert \"LessThan\" or \"GreaterThan\".\n\nZMQ socket can't send empty list.\nAs a result, if the Task on the Worker had no output,\nThe master would never stop waiting and hang forever.\n\nSo a dummy TaskOutput was added when `task.get_step()` to work around it.\n\nAfter thinking it twice, I think this should be fixed.\n\nBecause TaskOuput is at User layer. The issued shouldn't have been solved by adding a TaskOuput.\n\nInstead, we should move the creating of the placeholder blob to some deeper layer,\nand remove the placeholder blob in the workspace afterwards to avoid polluting user workspace.\nAfter this change, the workaround becomes totally transparent and no side-effect to users.\n\nDifferential Revision: D9413150\n"}