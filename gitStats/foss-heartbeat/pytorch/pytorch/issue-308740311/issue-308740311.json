{"url": "https://api.github.com/repos/pytorch/pytorch/issues/6021", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6021/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6021/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6021/events", "html_url": "https://github.com/pytorch/pytorch/issues/6021", "id": 308740311, "node_id": "MDU6SXNzdWUzMDg3NDAzMTE=", "number": 6021, "title": "nn.init.sparse poor performance", "user": {"login": "stefanonardo", "id": 11474759, "node_id": "MDQ6VXNlcjExNDc0NzU5", "avatar_url": "https://avatars2.githubusercontent.com/u/11474759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefanonardo", "html_url": "https://github.com/stefanonardo", "followers_url": "https://api.github.com/users/stefanonardo/followers", "following_url": "https://api.github.com/users/stefanonardo/following{/other_user}", "gists_url": "https://api.github.com/users/stefanonardo/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefanonardo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefanonardo/subscriptions", "organizations_url": "https://api.github.com/users/stefanonardo/orgs", "repos_url": "https://api.github.com/users/stefanonardo/repos", "events_url": "https://api.github.com/users/stefanonardo/events{/privacy}", "received_events_url": "https://api.github.com/users/stefanonardo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131849, "node_id": "MDU6TGFiZWw0MjQxMzE4NDk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 424131850, "node_id": "MDU6TGFiZWw0MjQxMzE4NTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true}, {"id": 897288569, "node_id": "MDU6TGFiZWw4OTcyODg1Njk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/pytorch", "name": "pytorch", "color": "f05732", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-03-26T21:22:33Z", "updated_at": "2018-05-05T09:08:09Z", "closed_at": "2018-05-05T09:08:08Z", "author_association": "NONE", "body_html": "<ul>\n<li>OS: Ubuntu 16.04</li>\n<li>PyTorch version: 0.3.1</li>\n<li>How you installed PyTorch (conda, pip, source): conda</li>\n<li>Python version: 3.6.4</li>\n<li>CUDA/cuDNN version: 9.1</li>\n<li>GPU models and configuration: GTX 1060</li>\n</ul>\n<p>It seems that <code>nn.init.sparse</code> takes too much time for its purpose. On my CPU, a 500x500 tensor initialization takes 0.25 seconds.<br>\nI wrote a piece of code that can be 10x faster than <code>nn.init.sparse</code>. I would ask you to try it yourself on your machines and check whether the semantic is the same.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">import</span> torch.nn <span class=\"pl-k\">as</span> nn\n<span class=\"pl-k\">import</span> time\n\nsparsity <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0.9</span>\ntensor_size <span class=\"pl-k\">=</span> <span class=\"pl-c1\">500</span>\n\nt1 <span class=\"pl-k\">=</span> torch.Tensor(tensor_size, tensor_size)\ns <span class=\"pl-k\">=</span> time.time()\nnn.init.sparse(t1, sparsity)\n<span class=\"pl-c1\">print</span>(time.time() <span class=\"pl-k\">-</span> s)\n\nt2 <span class=\"pl-k\">=</span> torch.Tensor(tensor_size <span class=\"pl-k\">*</span> tensor_size)\ns <span class=\"pl-k\">=</span> time.time()\nt2.normal_()\n<span class=\"pl-k\">if</span> sparsity <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0</span>:\n    zero_weights <span class=\"pl-k\">=</span> torch.randperm(<span class=\"pl-c1\">int</span>(tensor_size <span class=\"pl-k\">*</span> tensor_size))\n    zero_weights <span class=\"pl-k\">=</span> zero_weights[:<span class=\"pl-c1\">round</span>(tensor_size <span class=\"pl-k\">*</span> tensor_size <span class=\"pl-k\">*</span> sparsity)]\n    t2[zero_weights] <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>\nt2 <span class=\"pl-k\">=</span> t2.view(tensor_size, tensor_size)\n<span class=\"pl-c1\">print</span>(time.time() <span class=\"pl-k\">-</span> s)</pre></div>", "body_text": "OS: Ubuntu 16.04\nPyTorch version: 0.3.1\nHow you installed PyTorch (conda, pip, source): conda\nPython version: 3.6.4\nCUDA/cuDNN version: 9.1\nGPU models and configuration: GTX 1060\n\nIt seems that nn.init.sparse takes too much time for its purpose. On my CPU, a 500x500 tensor initialization takes 0.25 seconds.\nI wrote a piece of code that can be 10x faster than nn.init.sparse. I would ask you to try it yourself on your machines and check whether the semantic is the same.\nimport torch\nimport torch.nn as nn\nimport time\n\nsparsity = 0.9\ntensor_size = 500\n\nt1 = torch.Tensor(tensor_size, tensor_size)\ns = time.time()\nnn.init.sparse(t1, sparsity)\nprint(time.time() - s)\n\nt2 = torch.Tensor(tensor_size * tensor_size)\ns = time.time()\nt2.normal_()\nif sparsity > 0:\n    zero_weights = torch.randperm(int(tensor_size * tensor_size))\n    zero_weights = zero_weights[:round(tensor_size * tensor_size * sparsity)]\n    t2[zero_weights] = 0\nt2 = t2.view(tensor_size, tensor_size)\nprint(time.time() - s)", "body": "- OS: Ubuntu 16.04\r\n- PyTorch version: 0.3.1\r\n- How you installed PyTorch (conda, pip, source): conda\r\n- Python version: 3.6.4\r\n- CUDA/cuDNN version: 9.1 \r\n- GPU models and configuration: GTX 1060\r\n\r\nIt seems that `nn.init.sparse` takes too much time for its purpose. On my CPU, a 500x500 tensor initialization takes 0.25 seconds. \r\nI wrote a piece of code that can be 10x faster than `nn.init.sparse`. I would ask you to try it yourself on your machines and check whether the semantic is the same.\r\n\r\n```python\r\nimport torch\r\nimport torch.nn as nn\r\nimport time\r\n\r\nsparsity = 0.9\r\ntensor_size = 500\r\n\r\nt1 = torch.Tensor(tensor_size, tensor_size)\r\ns = time.time()\r\nnn.init.sparse(t1, sparsity)\r\nprint(time.time() - s)\r\n\r\nt2 = torch.Tensor(tensor_size * tensor_size)\r\ns = time.time()\r\nt2.normal_()\r\nif sparsity > 0:\r\n    zero_weights = torch.randperm(int(tensor_size * tensor_size))\r\n    zero_weights = zero_weights[:round(tensor_size * tensor_size * sparsity)]\r\n    t2[zero_weights] = 0\r\nt2 = t2.view(tensor_size, tensor_size)\r\nprint(time.time() - s)\r\n```"}