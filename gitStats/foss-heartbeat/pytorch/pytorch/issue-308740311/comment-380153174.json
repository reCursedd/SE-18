{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/380153174", "html_url": "https://github.com/pytorch/pytorch/issues/6021#issuecomment-380153174", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6021", "id": 380153174, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDE1MzE3NA==", "user": {"login": "mttk", "id": 3007947, "node_id": "MDQ6VXNlcjMwMDc5NDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3007947?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mttk", "html_url": "https://github.com/mttk", "followers_url": "https://api.github.com/users/mttk/followers", "following_url": "https://api.github.com/users/mttk/following{/other_user}", "gists_url": "https://api.github.com/users/mttk/gists{/gist_id}", "starred_url": "https://api.github.com/users/mttk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mttk/subscriptions", "organizations_url": "https://api.github.com/users/mttk/orgs", "repos_url": "https://api.github.com/users/mttk/repos", "events_url": "https://api.github.com/users/mttk/events{/privacy}", "received_events_url": "https://api.github.com/users/mttk/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-10T15:56:26Z", "updated_at": "2018-04-10T15:56:26Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9110200\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fmassa\">@fmassa</a> correct, that crossed my mind now as well. An option would be to allow the user to select row-level stability (but a slower speed) or tensor-level stability (faster).</p>\n<p>The Bernoulli option breaks all of this, so I'm not as much in favor of it anymore after getting temporarily blinded by its simplicity. I crunched some numbers and the sparsity does not deviate a lot when using it, but it does deviate.</p>\n<p>Guess it depends which way you guys prefer it, and also what the use cases are.</p>", "body_text": "@fmassa correct, that crossed my mind now as well. An option would be to allow the user to select row-level stability (but a slower speed) or tensor-level stability (faster).\nThe Bernoulli option breaks all of this, so I'm not as much in favor of it anymore after getting temporarily blinded by its simplicity. I crunched some numbers and the sparsity does not deviate a lot when using it, but it does deviate.\nGuess it depends which way you guys prefer it, and also what the use cases are.", "body": "@fmassa correct, that crossed my mind now as well. An option would be to allow the user to select row-level stability (but a slower speed) or tensor-level stability (faster). \r\n\r\nThe Bernoulli option breaks all of this, so I'm not as much in favor of it anymore after getting temporarily blinded by its simplicity. I crunched some numbers and the sparsity does not deviate a lot when using it, but it does deviate.\r\n\r\nGuess it depends which way you guys prefer it, and also what the use cases are."}