{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3062", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3062/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3062/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3062/events", "html_url": "https://github.com/pytorch/pytorch/pull/3062", "id": 264457833, "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ1ODU2NjMw", "number": 3062, "title": "Add Class-Aware Sampler", "user": {"login": "frombeijingwithlove", "id": 7559310, "node_id": "MDQ6VXNlcjc1NTkzMTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7559310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frombeijingwithlove", "html_url": "https://github.com/frombeijingwithlove", "followers_url": "https://api.github.com/users/frombeijingwithlove/followers", "following_url": "https://api.github.com/users/frombeijingwithlove/following{/other_user}", "gists_url": "https://api.github.com/users/frombeijingwithlove/gists{/gist_id}", "starred_url": "https://api.github.com/users/frombeijingwithlove/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frombeijingwithlove/subscriptions", "organizations_url": "https://api.github.com/users/frombeijingwithlove/orgs", "repos_url": "https://api.github.com/users/frombeijingwithlove/repos", "events_url": "https://api.github.com/users/frombeijingwithlove/events{/privacy}", "received_events_url": "https://api.github.com/users/frombeijingwithlove/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 559719279, "node_id": "MDU6TGFiZWw1NTk3MTkyNzk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/ready%20for%20review", "name": "ready for review", "color": "b60205", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-11T04:59:23Z", "updated_at": "2018-11-23T15:54:44Z", "closed_at": "2018-11-13T17:38:15Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/3062", "html_url": "https://github.com/pytorch/pytorch/pull/3062", "diff_url": "https://github.com/pytorch/pytorch/pull/3062.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/3062.patch"}, "body_html": "<p>Implemented Class-Aware Sampling: <a href=\"https://arxiv.org/abs/1512.05830\" rel=\"nofollow\">https://arxiv.org/abs/1512.05830</a>. Li Shen, Zhouchen Lin, Qingming Huang, Relay Backpropagation for Effective Learning of Deep Convolutional Neural Networks, ECCV 2016</p>\n<p>Use example:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">from</span> torchvision <span class=\"pl-k\">import</span> datasets, transforms\n<span class=\"pl-k\">from</span> torch.utils.data <span class=\"pl-k\">import</span> DataLoader\n<span class=\"pl-k\">from</span> torch.utils.data.sampler <span class=\"pl-k\">import</span> ClassAwareSampler\n\ntrain_set <span class=\"pl-k\">=</span> datasets.ImageFolder(\n    <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/path/to/data/train<span class=\"pl-pds\">'</span></span>,\n    transforms.Compose([\n        transforms.RandomHorizontalFlip(),\n        transforms.ToTensor(),\n        transforms.Normalize((<span class=\"pl-c1\">0.5</span>, <span class=\"pl-c1\">0.5</span>, <span class=\"pl-c1\">0.5</span>), (<span class=\"pl-c1\">0.5</span>, <span class=\"pl-c1\">0.5</span>, <span class=\"pl-c1\">0.5</span>))\n    ]))\ntrain_loader <span class=\"pl-k\">=</span> DataLoader(train_set, <span class=\"pl-v\">batch_size</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">4</span>, <span class=\"pl-v\">sampler</span><span class=\"pl-k\">=</span>ClassAwareSampler(train_set))</pre></div>", "body_text": "Implemented Class-Aware Sampling: https://arxiv.org/abs/1512.05830. Li Shen, Zhouchen Lin, Qingming Huang, Relay Backpropagation for Effective Learning of Deep Convolutional Neural Networks, ECCV 2016\nUse example:\nfrom torchvision import datasets, transforms\nfrom torch.utils.data import DataLoader\nfrom torch.utils.data.sampler import ClassAwareSampler\n\ntrain_set = datasets.ImageFolder(\n    '/path/to/data/train',\n    transforms.Compose([\n        transforms.RandomHorizontalFlip(),\n        transforms.ToTensor(),\n        transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))\n    ]))\ntrain_loader = DataLoader(train_set, batch_size=4, sampler=ClassAwareSampler(train_set))", "body": "Implemented Class-Aware Sampling: https://arxiv.org/abs/1512.05830. Li Shen, Zhouchen Lin, Qingming Huang, Relay Backpropagation for Effective Learning of Deep Convolutional Neural Networks, ECCV 2016\r\n\r\nUse example:\r\n```Python\r\nfrom torchvision import datasets, transforms\r\nfrom torch.utils.data import DataLoader\r\nfrom torch.utils.data.sampler import ClassAwareSampler\r\n\r\ntrain_set = datasets.ImageFolder(\r\n    '/path/to/data/train',\r\n    transforms.Compose([\r\n        transforms.RandomHorizontalFlip(),\r\n        transforms.ToTensor(),\r\n        transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))\r\n    ]))\r\ntrain_loader = DataLoader(train_set, batch_size=4, sampler=ClassAwareSampler(train_set))\r\n```\r\n"}