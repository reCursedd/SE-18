{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/396121215", "html_url": "https://github.com/pytorch/pytorch/pull/8277#issuecomment-396121215", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8277", "id": 396121215, "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjEyMTIxNQ==", "user": {"login": "peterjc123", "id": 9998726, "node_id": "MDQ6VXNlcjk5OTg3MjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/9998726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peterjc123", "html_url": "https://github.com/peterjc123", "followers_url": "https://api.github.com/users/peterjc123/followers", "following_url": "https://api.github.com/users/peterjc123/following{/other_user}", "gists_url": "https://api.github.com/users/peterjc123/gists{/gist_id}", "starred_url": "https://api.github.com/users/peterjc123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peterjc123/subscriptions", "organizations_url": "https://api.github.com/users/peterjc123/orgs", "repos_url": "https://api.github.com/users/peterjc123/repos", "events_url": "https://api.github.com/users/peterjc123/events{/privacy}", "received_events_url": "https://api.github.com/users/peterjc123/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-11T04:48:46Z", "updated_at": "2018-06-11T04:48:46Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> Well, I've figured out the root cause of this issue. It seems that the <code>ERRORLEVEL</code> is specified as a user variable somewhere in the code that prevents it to be interpreted as an internal variable. So we can use the <code>IF ERRORLEVEL</code> clause to detect the actual error code.</p>", "body_text": "@ezyang Well, I've figured out the root cause of this issue. It seems that the ERRORLEVEL is specified as a user variable somewhere in the code that prevents it to be interpreted as an internal variable. So we can use the IF ERRORLEVEL clause to detect the actual error code.", "body": "@ezyang Well, I've figured out the root cause of this issue. It seems that the `ERRORLEVEL` is specified as a user variable somewhere in the code that prevents it to be interpreted as an internal variable. So we can use the `IF ERRORLEVEL` clause to detect the actual error code."}