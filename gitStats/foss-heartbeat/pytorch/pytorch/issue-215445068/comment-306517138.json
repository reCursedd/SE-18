{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/306517138", "html_url": "https://github.com/pytorch/pytorch/issues/1048#issuecomment-306517138", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1048", "id": 306517138, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjUxNzEzOA==", "user": {"login": "jon-e-barker", "id": 19699370, "node_id": "MDQ6VXNlcjE5Njk5Mzcw", "avatar_url": "https://avatars0.githubusercontent.com/u/19699370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jon-e-barker", "html_url": "https://github.com/jon-e-barker", "followers_url": "https://api.github.com/users/jon-e-barker/followers", "following_url": "https://api.github.com/users/jon-e-barker/following{/other_user}", "gists_url": "https://api.github.com/users/jon-e-barker/gists{/gist_id}", "starred_url": "https://api.github.com/users/jon-e-barker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jon-e-barker/subscriptions", "organizations_url": "https://api.github.com/users/jon-e-barker/orgs", "repos_url": "https://api.github.com/users/jon-e-barker/repos", "events_url": "https://api.github.com/users/jon-e-barker/events{/privacy}", "received_events_url": "https://api.github.com/users/jon-e-barker/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-06T15:10:31Z", "updated_at": "2017-06-06T15:10:31Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a> I work for Bryan at NVIDIA.  I have an initial bare-bones implementation of im2col working, but before creating a PR I wanted to discuss design.  Initially I have added a dedicated Im2Col layer in nn.  I see there are also kernels for row2col and vol2col already though.  Would it make sense to have a single layer in nn that calls row2col/im2col/vol2col appropriately depending on the shape of the input tensor or would it be better to have independent layers for each of those cases?  If we go with the single layer solution, what should that layer be called?  Once we get that pinned down I should have a PR in a couple of days.</p>\n<p>My working branch is here: <a href=\"https://github.com/jbarker-nvidia/pytorch/tree/im2col\">https://github.com/jbarker-nvidia/pytorch/tree/im2col</a></p>", "body_text": "@soumith I work for Bryan at NVIDIA.  I have an initial bare-bones implementation of im2col working, but before creating a PR I wanted to discuss design.  Initially I have added a dedicated Im2Col layer in nn.  I see there are also kernels for row2col and vol2col already though.  Would it make sense to have a single layer in nn that calls row2col/im2col/vol2col appropriately depending on the shape of the input tensor or would it be better to have independent layers for each of those cases?  If we go with the single layer solution, what should that layer be called?  Once we get that pinned down I should have a PR in a couple of days.\nMy working branch is here: https://github.com/jbarker-nvidia/pytorch/tree/im2col", "body": "@soumith I work for Bryan at NVIDIA.  I have an initial bare-bones implementation of im2col working, but before creating a PR I wanted to discuss design.  Initially I have added a dedicated Im2Col layer in nn.  I see there are also kernels for row2col and vol2col already though.  Would it make sense to have a single layer in nn that calls row2col/im2col/vol2col appropriately depending on the shape of the input tensor or would it be better to have independent layers for each of those cases?  If we go with the single layer solution, what should that layer be called?  Once we get that pinned down I should have a PR in a couple of days.\r\n\r\nMy working branch is here: https://github.com/jbarker-nvidia/pytorch/tree/im2col\r\n"}