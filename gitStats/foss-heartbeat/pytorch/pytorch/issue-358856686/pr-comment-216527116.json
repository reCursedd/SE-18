{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/216527116", "pull_request_review_id": 154027020, "id": 216527116, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjUyNzExNg==", "diff_hunk": "@@ -56,30 +55,25 @@ Operation createPythonOperation(Node* op_) {\n     py::object py_outputs(func(*py_inputs));\n \n     auto num_outputs = op->outputs().size();\n-    auto addOutput = [&](py::handle entry) {\n-      if (!THPVariable_Check(entry.ptr())) {\n-        throw std::runtime_error(\n-            \"Function application returned a non-Variable output\");\n-      }\n-      THPVariable* var = (THPVariable*)entry.ptr();\n-      auto cdata = var->cdata;\n-      stack.push_back(std::move(cdata));\n+    auto addOutput = [&](py::handle entry, size_t pos) {\n+      stack.push_back(returnToIValue(pos, op->outputs().at(pos)->type(), entry));\n     };\n \n     if (!PyTuple_Check(py_outputs.ptr())) {", "path": "torch/csrc/jit/python_interpreter.cpp", "position": null, "original_position": 35, "commit_id": "2518d77768714086d74a4b14410b6d96c8746ea7", "original_commit_id": "69e047175136407cbf3abded94cbccc86fd7dba0", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Do we treat the `-> Tuple[int, Tensor]` schema differently from `-> (int, Tensor)`? If yes, I think that we should branch on `num_outputs` instead of checking if the return value is a tuple. This would be a good test too.", "created_at": "2018-09-11T02:07:55Z", "updated_at": "2018-11-23T15:50:56Z", "html_url": "https://github.com/pytorch/pytorch/pull/11505#discussion_r216527116", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11505", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/216527116"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11505#discussion_r216527116"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11505"}}, "body_html": "<p>Do we treat the <code>-&gt; Tuple[int, Tensor]</code> schema differently from <code>-&gt; (int, Tensor)</code>? If yes, I think that we should branch on <code>num_outputs</code> instead of checking if the return value is a tuple. This would be a good test too.</p>", "body_text": "Do we treat the -> Tuple[int, Tensor] schema differently from -> (int, Tensor)? If yes, I think that we should branch on num_outputs instead of checking if the return value is a tuple. This would be a good test too."}