{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/373564881", "html_url": "https://github.com/pytorch/pytorch/issues/5812#issuecomment-373564881", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5812", "id": 373564881, "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzU2NDg4MQ==", "user": {"login": "leftthomas", "id": 9991443, "node_id": "MDQ6VXNlcjk5OTE0NDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/9991443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leftthomas", "html_url": "https://github.com/leftthomas", "followers_url": "https://api.github.com/users/leftthomas/followers", "following_url": "https://api.github.com/users/leftthomas/following{/other_user}", "gists_url": "https://api.github.com/users/leftthomas/gists{/gist_id}", "starred_url": "https://api.github.com/users/leftthomas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leftthomas/subscriptions", "organizations_url": "https://api.github.com/users/leftthomas/orgs", "repos_url": "https://api.github.com/users/leftthomas/repos", "events_url": "https://api.github.com/users/leftthomas/events{/privacy}", "received_events_url": "https://api.github.com/users/leftthomas/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-16T00:26:32Z", "updated_at": "2018-03-16T07:27:40Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9110200\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fmassa\">@fmassa</a> but you could see from <code>processor</code> function that I have called <code>cuda()</code>, so why I have called this but it don't send data to GPU? And according to  the docs of PyTorch</p>\n<blockquote>\n<p>Variable API is nearly the same as regular Tensor API (with the exception of a couple in-place methods, that would overwrite inputs required for gradient computation). In most cases Tensors can be safely replaced with Variables and the code will remain to work just fine. Because of this, we\u2019re not documenting all the operations on variables, and you should refer to <code>torch.Tensor</code> docs for this purpose.</p>\n</blockquote>\n<p>so it's fine by use <code>data = Variable(data).cuda()</code>, or it works only by call <code>data=Variable(data.cuda())</code>? I also tested this, it still got the problem, and I tested on CUDA8.0, the problem is still there. Further More, I have step through each line of code on <code>tnt</code> as it runs, it behaved just fine. So I can't figure out why that happen.</p>", "body_text": "@fmassa but you could see from processor function that I have called cuda(), so why I have called this but it don't send data to GPU? And according to  the docs of PyTorch\n\nVariable API is nearly the same as regular Tensor API (with the exception of a couple in-place methods, that would overwrite inputs required for gradient computation). In most cases Tensors can be safely replaced with Variables and the code will remain to work just fine. Because of this, we\u2019re not documenting all the operations on variables, and you should refer to torch.Tensor docs for this purpose.\n\nso it's fine by use data = Variable(data).cuda(), or it works only by call data=Variable(data.cuda())? I also tested this, it still got the problem, and I tested on CUDA8.0, the problem is still there. Further More, I have step through each line of code on tnt as it runs, it behaved just fine. So I can't figure out why that happen.", "body": "@fmassa but you could see from `processor` function that I have called `cuda()`, so why I have called this but it don't send data to GPU? And according to  the docs of PyTorch\r\n> Variable API is nearly the same as regular Tensor API (with the exception of a couple in-place methods, that would overwrite inputs required for gradient computation). In most cases Tensors can be safely replaced with Variables and the code will remain to work just fine. Because of this, we\u2019re not documenting all the operations on variables, and you should refer to `torch.Tensor` docs for this purpose.\r\n\r\nso it's fine by use `data = Variable(data).cuda()`, or it works only by call `data=Variable(data.cuda())`? I also tested this, it still got the problem, and I tested on CUDA8.0, the problem is still there. Further More, I have step through each line of code on `tnt` as it runs, it behaved just fine. So I can't figure out why that happen. "}