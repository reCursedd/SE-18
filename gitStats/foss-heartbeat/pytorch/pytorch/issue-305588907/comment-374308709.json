{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/374308709", "html_url": "https://github.com/pytorch/pytorch/issues/5812#issuecomment-374308709", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5812", "id": 374308709, "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDMwODcwOQ==", "user": {"login": "philippHRO", "id": 23098362, "node_id": "MDQ6VXNlcjIzMDk4MzYy", "avatar_url": "https://avatars0.githubusercontent.com/u/23098362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philippHRO", "html_url": "https://github.com/philippHRO", "followers_url": "https://api.github.com/users/philippHRO/followers", "following_url": "https://api.github.com/users/philippHRO/following{/other_user}", "gists_url": "https://api.github.com/users/philippHRO/gists{/gist_id}", "starred_url": "https://api.github.com/users/philippHRO/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philippHRO/subscriptions", "organizations_url": "https://api.github.com/users/philippHRO/orgs", "repos_url": "https://api.github.com/users/philippHRO/repos", "events_url": "https://api.github.com/users/philippHRO/events{/privacy}", "received_events_url": "https://api.github.com/users/philippHRO/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-19T18:01:21Z", "updated_at": "2018-03-19T18:02:09Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9991443\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/leftthomas\">@leftthomas</a> Just saying this, because it hasn't been brought up yet. I had a similiar problem like you. I set my num_workers to 1 and it worked fine, albeit slower of course. But I didn't test this for many epochs yet. Maybe it's still accumulating memory, only slower.</p>", "body_text": "@leftthomas Just saying this, because it hasn't been brought up yet. I had a similiar problem like you. I set my num_workers to 1 and it worked fine, albeit slower of course. But I didn't test this for many epochs yet. Maybe it's still accumulating memory, only slower.", "body": "@leftthomas Just saying this, because it hasn't been brought up yet. I had a similiar problem like you. I set my num_workers to 1 and it worked fine, albeit slower of course. But I didn't test this for many epochs yet. Maybe it's still accumulating memory, only slower.\r\n"}