{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/384063148", "html_url": "https://github.com/pytorch/pytorch/pull/6855#issuecomment-384063148", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6855", "id": 384063148, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDA2MzE0OA==", "user": {"login": "t-vi", "id": 20787943, "node_id": "MDQ6VXNlcjIwNzg3OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/20787943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-vi", "html_url": "https://github.com/t-vi", "followers_url": "https://api.github.com/users/t-vi/followers", "following_url": "https://api.github.com/users/t-vi/following{/other_user}", "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions", "organizations_url": "https://api.github.com/users/t-vi/orgs", "repos_url": "https://api.github.com/users/t-vi/repos", "events_url": "https://api.github.com/users/t-vi/events{/privacy}", "received_events_url": "https://api.github.com/users/t-vi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-24T20:08:49Z", "updated_at": "2018-04-24T20:12:42Z", "author_association": "CONTRIBUTOR", "body_html": "<p>So while looking into adding an increment parameter to next_philox_seed.<br>\nIn terms of thread safety: I think there is a race condition that you might end up having two threads grab the same state and then do an atomic add each (in other words, it would be correct to have the two assignments in next_philox_seed in one atomic operation). Is that rare enough to neglect given the overhead of having to lock?</p>", "body_text": "So while looking into adding an increment parameter to next_philox_seed.\nIn terms of thread safety: I think there is a race condition that you might end up having two threads grab the same state and then do an atomic add each (in other words, it would be correct to have the two assignments in next_philox_seed in one atomic operation). Is that rare enough to neglect given the overhead of having to lock?", "body": "So while looking into adding an increment parameter to next_philox_seed.\r\nIn terms of thread safety: I think there is a race condition that you might end up having two threads grab the same state and then do an atomic add each (in other words, it would be correct to have the two assignments in next_philox_seed in one atomic operation). Is that rare enough to neglect given the overhead of having to lock? "}