{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/392327488", "html_url": "https://github.com/pytorch/pytorch/issues/7840#issuecomment-392327488", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7840", "id": 392327488, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjMyNzQ4OA==", "user": {"login": "songzenghui", "id": 25813311, "node_id": "MDQ6VXNlcjI1ODEzMzEx", "avatar_url": "https://avatars1.githubusercontent.com/u/25813311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/songzenghui", "html_url": "https://github.com/songzenghui", "followers_url": "https://api.github.com/users/songzenghui/followers", "following_url": "https://api.github.com/users/songzenghui/following{/other_user}", "gists_url": "https://api.github.com/users/songzenghui/gists{/gist_id}", "starred_url": "https://api.github.com/users/songzenghui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/songzenghui/subscriptions", "organizations_url": "https://api.github.com/users/songzenghui/orgs", "repos_url": "https://api.github.com/users/songzenghui/repos", "events_url": "https://api.github.com/users/songzenghui/events{/privacy}", "received_events_url": "https://api.github.com/users/songzenghui/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-27T12:27:51Z", "updated_at": "2018-05-27T12:27:51Z", "author_association": "NONE", "body_html": "<p>When i run <code>sudo make install </code> to compile ,ERRORs occurs.<br>\nI install the caffe2 from source code Here is my Linux:</p>\n<ul>\n<li>\n<p>OS : Ubuntu 16.04</p>\n</li>\n<li>\n<p>CUDA \uff1a 9.0</p>\n</li>\n<li>\n<p>CUDNN : 7.0<br>\nHere is the configure of caffe2 build(the output after running <code>cmake ..</code>):</p>\n</li>\n</ul>\n<p>-- Does not need to define long separately.<br>\n-- std::exception_ptr is supported.<br>\n-- NUMA is available<br>\n-- Current compiler supports avx2 extention. Will build perfkernels.<br>\n-- Building using own protobuf under third_party per request.<br>\n-- Use custom protobuf build.<br>\n-- Caffe2 protobuf include directory: $&lt;BUILD_INTERFACE:/home/songzenghui/zee/pytorch/third_party/protobuf/src&gt;$&lt;INSTALL_INTERFACE:include&gt;<br>\n-- The BLAS backend of choice:Eigen<br>\n-- Brace yourself, we are building NNPACK<br>\n-- Found PythonInterp: /usr/bin/python (found version \"2.7.12\")<br>\n-- Caffe2: Found gflags with new-style gflags target.<br>\n-- Caffe2: Cannot find glog automatically. Using legacy find.<br>\n-- Caffe2: Found glog (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libglog.so)<br>\n-- Failed to find LLVM FileCheck<br>\n-- git Version: v0.0.0<br>\n-- Version: 0.0.0<br>\n-- Performing Test HAVE_STD_REGEX -- success<br>\n-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile<br>\n-- Performing Test HAVE_POSIX_REGEX -- success<br>\n-- Performing Test HAVE_STEADY_CLOCK -- success<br>\n-- Found lmdb    (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/liblmdb.so)<br>\n-- Found LevelDB (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libleveldb.so)<br>\n-- Found Snappy  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libsnappy.so)<br>\n-- Found Numa  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libnuma.so)<br>\n-- Found CUDA: /usr/local/cuda (found suitable exact version \"9.0\")<br>\n-- OpenCV found (/usr/local/share/OpenCV)<br>\nCMake Warning at cmake/Dependencies.cmake:309 (find_package):<br>\nBy not providing \"FindEigen3.cmake\" in CMAKE_MODULE_PATH this project has<br>\nasked CMake to find a package configuration file provided by \"Eigen3\", but<br>\nCMake did not find one.</p>\n<p>Could not find a package configuration file provided by \"Eigen3\" with any<br>\nof the following names:</p>\n<pre><code>Eigen3Config.cmake\neigen3-config.cmake\n</code></pre>\n<p>Add the installation prefix of \"Eigen3\" to CMAKE_PREFIX_PATH or set<br>\n\"Eigen3_DIR\" to a directory containing one of the above files.  If \"Eigen3\"<br>\nprovides a separate development package or SDK, be sure it has been<br>\ninstalled.<br>\nCall Stack (most recent call first):<br>\nCMakeLists.txt:188 (include)</p>\n<p>-- Did not find system Eigen. Using third party subdirectory.<br>\n-- Found PythonInterp: /usr/bin/python (found suitable version \"2.7.12\", minimum required is \"2.7\")<br>\n-- NumPy ver. 1.14.2 found (include: /usr/local/lib/python2.7/dist-packages/numpy/core/include)<br>\n-- Could NOT find pybind11 (missing: pybind11_INCLUDE_DIR)<br>\n-- MPI support found<br>\n-- MPI compile flags:<br>\n-- MPI include path: /usr/lib/openmpi/include/openmpi/opal/mca/event/libevent2021/libevent/usr/lib/openmpi/include/openmpi/opal/mca/event/libevent2021/libevent/include/usr/lib/openmpi/include/usr/lib/openmpi/include/openmpi<br>\n-- MPI LINK flags path:  -Wl,-rpath  -Wl,/usr/lib/openmpi/lib  -Wl,--enable-new-dtags<br>\n-- MPI libraries: /usr/lib/openmpi/lib/libmpi_cxx.so/usr/lib/openmpi/lib/libmpi.so<br>\nCMake Warning at cmake/Dependencies.cmake:364 (message):<br>\nOpenMPI found, but it is not built with CUDA support.<br>\nCall Stack (most recent call first):<br>\nCMakeLists.txt:188 (include)</p>\n<p>-- Found CUDA: /usr/local/cuda (found suitable version \"9.0\", minimum required is \"7.0\")<br>\n-- Caffe2: CUDA detected: 9.0<br>\n-- Found cuDNN: v7.1.2  (include: /usr/local/cuda/include, library: /usr/local/cuda/lib64/libcudnn.so)<br>\n-- Automatic GPU detection returned 6.1 6.1.<br>\n-- Added CUDA NVCC flags for: sm_61<br>\n-- Could NOT find NCCL (missing: NCCL_INCLUDE_DIRS NCCL_LIBRARIES)<br>\n-- Could NOT find CUB (missing: CUB_INCLUDE_DIR)<br>\n-- Could NOT find Gloo (missing: Gloo_INCLUDE_DIR Gloo_LIBRARY)<br>\n-- MPI include path: /usr/lib/openmpi/include/openmpi/opal/mca/event/libevent2021/libevent/usr/lib/openmpi/include/openmpi/opal/mca/event/libevent2021/libevent/include/usr/lib/openmpi/include/usr/lib/openmpi/include/openmpi<br>\n-- MPI libraries: /usr/lib/openmpi/lib/libmpi_cxx.so/usr/lib/openmpi/lib/libmpi.so<br>\n-- CUDA detected: 9.0<br>\n-- Found libcuda: /usr/local/cuda-9.0/lib64/stubs/libcuda.so<br>\n-- Found libnvrtc: /usr/local/cuda-9.0/lib64/libnvrtc.so<br>\n-- GCC 5.4.0: Adding gcc and gcc_s libs to link line<br>\n-- Include NCCL operators<br>\n-- Excluding ideep operators as we are not using ideep<br>\n-- Including image processing operators<br>\n-- Excluding video processing operators due to no opencv<br>\n-- Excluding mkl operators as we are not using mkl<br>\n-- Include Observer library<br>\n-- Using lib/python2.7/dist-packages as python relative installation path<br>\n-- Automatically generating missing <strong>init</strong>.py files.<br>\n-- A previous caffe2 cmake run already created the <strong>init</strong>.py files.<br>\nCMake Warning at CMakeLists.txt:318 (message):<br>\nGenerated cmake files are only fully tested if one builds with system glog,<br>\ngflags, and protobuf.  Other settings may generate files that are not well<br>\ntested.</p>\n<h2>--<br>\n-- ******** Summary ********<br>\n-- General:<br>\n--   CMake version         : 3.5.1<br>\n--   CMake command         : /usr/bin/cmake<br>\n--   Git version           : v0.1.11-8572-g45cdb63<br>\n--   System                : Linux<br>\n--   C++ compiler          : /usr/bin/c++<br>\n--   C++ compiler version  : 5.4.0<br>\n--   BLAS                  : Eigen<br>\n--   CXX flags             :  -fvisibility-inlines-hidden -DONNX_NAMESPACE=onnx_c2 -O2 -fPIC -Wno-narrowing -Wno-invalid-partial-specialization<br>\n--   Build type            : Release<br>\n--   Compile definitions   :</h2>\n<p>--   BUILD_CAFFE2          : ON<br>\n--   BUILD_ATEN            : OFF<br>\n--   BUILD_BINARY          : ON<br>\n--   BUILD_CUSTOM_PROTOBUF : ON<br>\n--     Link local protobuf : ON<br>\n--   BUILD_DOCS            : OFF<br>\n--   BUILD_PYTHON          : ON<br>\n--     Python version      : 2.7.12<br>\n--     Python includes     : /usr/include/python2.7<br>\n--   BUILD_SHARED_LIBS     : ON<br>\n--   BUILD_TEST            : ON<br>\n--   USE_ASAN              : OFF<br>\n--   USE_CUDA              : ON<br>\n--     CUDA static link    : OFF<br>\n--     USE_CUDNN           : ON<br>\n--     CUDA version        : 9.0<br>\n--     cuDNN version       : 7.1.2<br>\n--     CUDA root directory : /usr/local/cuda<br>\n--     CUDA library        : /usr/local/cuda-9.0/lib64/stubs/libcuda.so<br>\n--     cudart library      : /usr/local/cuda/lib64/libcudart_static.a;-pthread;dl;/usr/lib/x86_64-linux-gnu/librt.so<br>\n--     cublas library      : /usr/local/cuda/lib64/libcublas.so;/usr/local/cuda/lib64/libcublas_device.a<br>\n--     cufft library       : /usr/local/cuda/lib64/libcufft.so<br>\n--     curand library      : /usr/local/cuda/lib64/libcurand.so<br>\n--     cuDNN library       : /usr/local/cuda/lib64/libcudnn.so<br>\n--     nvrtc               : /usr/local/cuda-9.0/lib64/libnvrtc.so<br>\n--     CUDA include path   : /usr/local/cuda/include<br>\n--     NVCC executable     : /usr/local/cuda/bin/nvcc<br>\n--     CUDA host compiler  : /usr/bin/cc<br>\n--     USE_TENSORRT        : OFF<br>\n--   USE_ROCM              : OFF<br>\n--   USE_EIGEN_FOR_BLAS    : ON<br>\n--   USE_FFMPEG            : OFF<br>\n--   USE_GFLAGS            : ON<br>\n--   USE_GLOG              : ON<br>\n--   USE_GLOO              : ON<br>\n--     USE_GLOO_IBVERBS    : OFF<br>\n--   USE_LEVELDB           : ON<br>\n--     LevelDB version     : 1.18<br>\n--     Snappy version      : 1.1.3<br>\n--   USE_LITE_PROTO        : OFF<br>\n--   USE_LMDB              : ON<br>\n--     LMDB version        : 0.9.17<br>\n--   USE_METAL             : OFF<br>\n--   USE_MKL               :<br>\n--   USE_MOBILE_OPENGL     : OFF<br>\n--   USE_MPI               : ON<br>\n--   USE_NCCL              : ON<br>\n--     USE_SYSTEM_NCCL     : OFF<br>\n--   USE_NERVANA_GPU       : OFF<br>\n--   USE_NNPACK            : ON<br>\n--   USE_OBSERVERS         : ON<br>\n--   USE_OPENCL            : OFF<br>\n--   USE_OPENCV            : ON<br>\n--     OpenCV version      : 3.4.0<br>\n--   USE_OPENMP            : OFF<br>\n--   USE_PROF              : OFF<br>\n--   USE_REDIS             : OFF<br>\n--   USE_ROCKSDB           : OFF<br>\n--   USE_ZMQ               : OFF<br>\n-- Configuring done<br>\n-- Generating done<br>\n-- Build files have been written to: /home/songzenghui/zee/pytorch/build</p>\n<p>Here is the ERRORs:<br>\n[ 89%] Building CXX object caffe2/CMakeFiles/init_test.dir/core/init_test.cc.o<br>\n[ 89%] Linking CXX executable ../bin/init_test<br>\n[ 89%] Built target init_test<br>\nScanning dependencies of target backend_cutting_test<br>\n[ 89%] Building CXX object caffe2/CMakeFiles/backend_cutting_test.dir/opt/backend_cutting_test.cc.o<br>\n[ 89%] Linking CXX executable ../bin/backend_cutting_test<br>\n[ 89%] Built target backend_cutting_test<br>\nScanning dependencies of target registry_test<br>\n[ 89%] Building CXX object caffe2/CMakeFiles/registry_test.dir/core/registry_test.cc.o<br>\n[ 89%] Linking CXX executable ../bin/registry_test<br>\n[ 89%] Built target registry_test<br>\nScanning dependencies of target pattern_net_transform_test<br>\n[ 89%] Building CXX object caffe2/CMakeFiles/pattern_net_transform_test.dir/transforms/pattern_net_transform_test.cc.o<br>\n[ 89%] Linking CXX executable ../bin/pattern_net_transform_test<br>\n[ 89%] Built target pattern_net_transform_test<br>\nScanning dependencies of target operator_test<br>\n[ 89%] Building CXX object caffe2/CMakeFiles/operator_test.dir/core/operator_test.cc.o<br>\n[ 89%] Linking CXX executable ../bin/operator_test<br>\n[ 89%] Built target operator_test<br>\nScanning dependencies of target smart_tensor_printer_test<br>\n[ 89%] Building CXX object caffe2/CMakeFiles/smart_tensor_printer_test.dir/utils/smart_tensor_printer_test.cc.o<br>\n[ 89%] Linking CXX executable ../bin/smart_tensor_printer_test<br>\n[ 89%] Built target smart_tensor_printer_test<br>\nScanning dependencies of target conv_op_cache_cudnn_test<br>\n[ 89%] Building CXX object caffe2/CMakeFiles/conv_op_cache_cudnn_test.dir/operators/conv_op_cache_cudnn_test.cc.o<br>\n[ 89%] Linking CXX executable ../bin/conv_op_cache_cudnn_test<br>\n[ 89%] Built target conv_op_cache_cudnn_test<br>\nScanning dependencies of target boolean_unmask_ops_test<br>\n[ 89%] Building CXX object caffe2/CMakeFiles/boolean_unmask_ops_test.dir/operators/boolean_unmask_ops_test.cc.o<br>\n[ 89%] Linking CXX executable ../bin/boolean_unmask_ops_test<br>\n[ 89%] Built target boolean_unmask_ops_test<br>\nScanning dependencies of target ssa_test<br>\n[ 89%] Building CXX object caffe2/CMakeFiles/ssa_test.dir/onnx/ssa_test.cc.o<br>\n[ 89%] Linking CXX executable ../bin/ssa_test<br>\n[ 89%] Built target ssa_test<br>\nScanning dependencies of target event_test<br>\n[ 89%] Building CXX object caffe2/CMakeFiles/event_test.dir/core/event_test.cc.o<br>\n[ 89%] Linking CXX executable ../bin/event_test<br>\n[ 89%] Built target event_test<br>\nScanning dependencies of target module_test<br>\n[ 89%] Building CXX object caffe2/CMakeFiles/module_test.dir/core/module_test.cc.o<br>\n[ 89%] Linking CXX executable ../bin/module_test<br>\n[ 89%] Built target module_test<br>\nScanning dependencies of target typeid_test<br>\n[ 89%] Building CXX object caffe2/CMakeFiles/typeid_test.dir/core/typeid_test.cc.o<br>\n[ 89%] Linking CXX executable ../bin/typeid_test<br>\n[ 89%] Built target typeid_test<br>\nScanning dependencies of target parallel_net_test<br>\n[ 89%] Building CXX object caffe2/CMakeFiles/parallel_net_test.dir/core/parallel_net_test.cc.o<br>\n[ 89%] Linking CXX executable ../bin/parallel_net_test<br>\n[ 89%] Built target parallel_net_test<br>\nScanning dependencies of target fixed_divisor_test<br>\n[ 89%] Building CXX object caffe2/CMakeFiles/fixed_divisor_test.dir/utils/fixed_divisor_test.cc.o<br>\n[ 89%] Linking CXX executable ../bin/fixed_divisor_test<br>\n[ 89%] Built target fixed_divisor_test<br>\nScanning dependencies of target blob_test<br>\n[ 89%] Building CXX object caffe2/CMakeFiles/blob_test.dir/core/blob_test.cc.o<br>\n[ 89%] Linking CXX executable ../bin/blob_test<br>\nCMakeFiles/blob_test.dir/core/blob_test.cc.o: In function <code>caffe2::(anonymous namespace)::ContentChunks_Serialization_Test::TestBody()': blob_test.cc:(.text+0x3b356): warning: the use of </code>tmpnam' is dangerous, better use `mkstemp'<br>\n/usr/bin/ld: warning: libgflags.so.2, needed by /usr/lib/x86_64-linux-gnu/libglog.so, may conflict with libgflags.so.2.2<br>\n[ 89%] Built target blob_test<br>\nScanning dependencies of target mpi_gpu_test<br>\n[ 89%] Building CXX object caffe2/CMakeFiles/mpi_gpu_test.dir/mpi/mpi_gpu_test.cc.o<br>\n[ 89%] Linking CXX executable ../bin/mpi_gpu_test<br>\n/usr/bin/ld: CMakeFiles/mpi_gpu_test.dir/mpi/mpi_gpu_test.cc.o: undefined reference to symbol '_ZN3MPI8Datatype4FreeEv'<br>\n//usr/lib/libmpi_cxx.so.1: error adding symbols: DSO missing from command line<br>\ncollect2: error: ld returned 1 exit status<br>\ncaffe2/CMakeFiles/mpi_gpu_test.dir/build.make:110: recipe for target 'bin/mpi_gpu_test' failed<br>\nmake[2]: *** [bin/mpi_gpu_test] Error 1<br>\nCMakeFiles/Makefile2:3406: recipe for target 'caffe2/CMakeFiles/mpi_gpu_test.dir/all' failed<br>\nmake[1]: *** [caffe2/CMakeFiles/mpi_gpu_test.dir/all] Error 2<br>\nMakefile:138: recipe for target 'all' failed<br>\nmake: *** [all] Error 2</p>", "body_text": "When i run sudo make install  to compile ,ERRORs occurs.\nI install the caffe2 from source code Here is my Linux:\n\n\nOS : Ubuntu 16.04\n\n\nCUDA \uff1a 9.0\n\n\nCUDNN : 7.0\nHere is the configure of caffe2 build(the output after running cmake ..):\n\n\n-- Does not need to define long separately.\n-- std::exception_ptr is supported.\n-- NUMA is available\n-- Current compiler supports avx2 extention. Will build perfkernels.\n-- Building using own protobuf under third_party per request.\n-- Use custom protobuf build.\n-- Caffe2 protobuf include directory: $<BUILD_INTERFACE:/home/songzenghui/zee/pytorch/third_party/protobuf/src>$<INSTALL_INTERFACE:include>\n-- The BLAS backend of choice:Eigen\n-- Brace yourself, we are building NNPACK\n-- Found PythonInterp: /usr/bin/python (found version \"2.7.12\")\n-- Caffe2: Found gflags with new-style gflags target.\n-- Caffe2: Cannot find glog automatically. Using legacy find.\n-- Caffe2: Found glog (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libglog.so)\n-- Failed to find LLVM FileCheck\n-- git Version: v0.0.0\n-- Version: 0.0.0\n-- Performing Test HAVE_STD_REGEX -- success\n-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile\n-- Performing Test HAVE_POSIX_REGEX -- success\n-- Performing Test HAVE_STEADY_CLOCK -- success\n-- Found lmdb    (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/liblmdb.so)\n-- Found LevelDB (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libleveldb.so)\n-- Found Snappy  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libsnappy.so)\n-- Found Numa  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libnuma.so)\n-- Found CUDA: /usr/local/cuda (found suitable exact version \"9.0\")\n-- OpenCV found (/usr/local/share/OpenCV)\nCMake Warning at cmake/Dependencies.cmake:309 (find_package):\nBy not providing \"FindEigen3.cmake\" in CMAKE_MODULE_PATH this project has\nasked CMake to find a package configuration file provided by \"Eigen3\", but\nCMake did not find one.\nCould not find a package configuration file provided by \"Eigen3\" with any\nof the following names:\nEigen3Config.cmake\neigen3-config.cmake\n\nAdd the installation prefix of \"Eigen3\" to CMAKE_PREFIX_PATH or set\n\"Eigen3_DIR\" to a directory containing one of the above files.  If \"Eigen3\"\nprovides a separate development package or SDK, be sure it has been\ninstalled.\nCall Stack (most recent call first):\nCMakeLists.txt:188 (include)\n-- Did not find system Eigen. Using third party subdirectory.\n-- Found PythonInterp: /usr/bin/python (found suitable version \"2.7.12\", minimum required is \"2.7\")\n-- NumPy ver. 1.14.2 found (include: /usr/local/lib/python2.7/dist-packages/numpy/core/include)\n-- Could NOT find pybind11 (missing: pybind11_INCLUDE_DIR)\n-- MPI support found\n-- MPI compile flags:\n-- MPI include path: /usr/lib/openmpi/include/openmpi/opal/mca/event/libevent2021/libevent/usr/lib/openmpi/include/openmpi/opal/mca/event/libevent2021/libevent/include/usr/lib/openmpi/include/usr/lib/openmpi/include/openmpi\n-- MPI LINK flags path:  -Wl,-rpath  -Wl,/usr/lib/openmpi/lib  -Wl,--enable-new-dtags\n-- MPI libraries: /usr/lib/openmpi/lib/libmpi_cxx.so/usr/lib/openmpi/lib/libmpi.so\nCMake Warning at cmake/Dependencies.cmake:364 (message):\nOpenMPI found, but it is not built with CUDA support.\nCall Stack (most recent call first):\nCMakeLists.txt:188 (include)\n-- Found CUDA: /usr/local/cuda (found suitable version \"9.0\", minimum required is \"7.0\")\n-- Caffe2: CUDA detected: 9.0\n-- Found cuDNN: v7.1.2  (include: /usr/local/cuda/include, library: /usr/local/cuda/lib64/libcudnn.so)\n-- Automatic GPU detection returned 6.1 6.1.\n-- Added CUDA NVCC flags for: sm_61\n-- Could NOT find NCCL (missing: NCCL_INCLUDE_DIRS NCCL_LIBRARIES)\n-- Could NOT find CUB (missing: CUB_INCLUDE_DIR)\n-- Could NOT find Gloo (missing: Gloo_INCLUDE_DIR Gloo_LIBRARY)\n-- MPI include path: /usr/lib/openmpi/include/openmpi/opal/mca/event/libevent2021/libevent/usr/lib/openmpi/include/openmpi/opal/mca/event/libevent2021/libevent/include/usr/lib/openmpi/include/usr/lib/openmpi/include/openmpi\n-- MPI libraries: /usr/lib/openmpi/lib/libmpi_cxx.so/usr/lib/openmpi/lib/libmpi.so\n-- CUDA detected: 9.0\n-- Found libcuda: /usr/local/cuda-9.0/lib64/stubs/libcuda.so\n-- Found libnvrtc: /usr/local/cuda-9.0/lib64/libnvrtc.so\n-- GCC 5.4.0: Adding gcc and gcc_s libs to link line\n-- Include NCCL operators\n-- Excluding ideep operators as we are not using ideep\n-- Including image processing operators\n-- Excluding video processing operators due to no opencv\n-- Excluding mkl operators as we are not using mkl\n-- Include Observer library\n-- Using lib/python2.7/dist-packages as python relative installation path\n-- Automatically generating missing init.py files.\n-- A previous caffe2 cmake run already created the init.py files.\nCMake Warning at CMakeLists.txt:318 (message):\nGenerated cmake files are only fully tested if one builds with system glog,\ngflags, and protobuf.  Other settings may generate files that are not well\ntested.\n--\n-- ******** Summary ********\n-- General:\n--   CMake version         : 3.5.1\n--   CMake command         : /usr/bin/cmake\n--   Git version           : v0.1.11-8572-g45cdb63\n--   System                : Linux\n--   C++ compiler          : /usr/bin/c++\n--   C++ compiler version  : 5.4.0\n--   BLAS                  : Eigen\n--   CXX flags             :  -fvisibility-inlines-hidden -DONNX_NAMESPACE=onnx_c2 -O2 -fPIC -Wno-narrowing -Wno-invalid-partial-specialization\n--   Build type            : Release\n--   Compile definitions   :\n--   BUILD_CAFFE2          : ON\n--   BUILD_ATEN            : OFF\n--   BUILD_BINARY          : ON\n--   BUILD_CUSTOM_PROTOBUF : ON\n--     Link local protobuf : ON\n--   BUILD_DOCS            : OFF\n--   BUILD_PYTHON          : ON\n--     Python version      : 2.7.12\n--     Python includes     : /usr/include/python2.7\n--   BUILD_SHARED_LIBS     : ON\n--   BUILD_TEST            : ON\n--   USE_ASAN              : OFF\n--   USE_CUDA              : ON\n--     CUDA static link    : OFF\n--     USE_CUDNN           : ON\n--     CUDA version        : 9.0\n--     cuDNN version       : 7.1.2\n--     CUDA root directory : /usr/local/cuda\n--     CUDA library        : /usr/local/cuda-9.0/lib64/stubs/libcuda.so\n--     cudart library      : /usr/local/cuda/lib64/libcudart_static.a;-pthread;dl;/usr/lib/x86_64-linux-gnu/librt.so\n--     cublas library      : /usr/local/cuda/lib64/libcublas.so;/usr/local/cuda/lib64/libcublas_device.a\n--     cufft library       : /usr/local/cuda/lib64/libcufft.so\n--     curand library      : /usr/local/cuda/lib64/libcurand.so\n--     cuDNN library       : /usr/local/cuda/lib64/libcudnn.so\n--     nvrtc               : /usr/local/cuda-9.0/lib64/libnvrtc.so\n--     CUDA include path   : /usr/local/cuda/include\n--     NVCC executable     : /usr/local/cuda/bin/nvcc\n--     CUDA host compiler  : /usr/bin/cc\n--     USE_TENSORRT        : OFF\n--   USE_ROCM              : OFF\n--   USE_EIGEN_FOR_BLAS    : ON\n--   USE_FFMPEG            : OFF\n--   USE_GFLAGS            : ON\n--   USE_GLOG              : ON\n--   USE_GLOO              : ON\n--     USE_GLOO_IBVERBS    : OFF\n--   USE_LEVELDB           : ON\n--     LevelDB version     : 1.18\n--     Snappy version      : 1.1.3\n--   USE_LITE_PROTO        : OFF\n--   USE_LMDB              : ON\n--     LMDB version        : 0.9.17\n--   USE_METAL             : OFF\n--   USE_MKL               :\n--   USE_MOBILE_OPENGL     : OFF\n--   USE_MPI               : ON\n--   USE_NCCL              : ON\n--     USE_SYSTEM_NCCL     : OFF\n--   USE_NERVANA_GPU       : OFF\n--   USE_NNPACK            : ON\n--   USE_OBSERVERS         : ON\n--   USE_OPENCL            : OFF\n--   USE_OPENCV            : ON\n--     OpenCV version      : 3.4.0\n--   USE_OPENMP            : OFF\n--   USE_PROF              : OFF\n--   USE_REDIS             : OFF\n--   USE_ROCKSDB           : OFF\n--   USE_ZMQ               : OFF\n-- Configuring done\n-- Generating done\n-- Build files have been written to: /home/songzenghui/zee/pytorch/build\nHere is the ERRORs:\n[ 89%] Building CXX object caffe2/CMakeFiles/init_test.dir/core/init_test.cc.o\n[ 89%] Linking CXX executable ../bin/init_test\n[ 89%] Built target init_test\nScanning dependencies of target backend_cutting_test\n[ 89%] Building CXX object caffe2/CMakeFiles/backend_cutting_test.dir/opt/backend_cutting_test.cc.o\n[ 89%] Linking CXX executable ../bin/backend_cutting_test\n[ 89%] Built target backend_cutting_test\nScanning dependencies of target registry_test\n[ 89%] Building CXX object caffe2/CMakeFiles/registry_test.dir/core/registry_test.cc.o\n[ 89%] Linking CXX executable ../bin/registry_test\n[ 89%] Built target registry_test\nScanning dependencies of target pattern_net_transform_test\n[ 89%] Building CXX object caffe2/CMakeFiles/pattern_net_transform_test.dir/transforms/pattern_net_transform_test.cc.o\n[ 89%] Linking CXX executable ../bin/pattern_net_transform_test\n[ 89%] Built target pattern_net_transform_test\nScanning dependencies of target operator_test\n[ 89%] Building CXX object caffe2/CMakeFiles/operator_test.dir/core/operator_test.cc.o\n[ 89%] Linking CXX executable ../bin/operator_test\n[ 89%] Built target operator_test\nScanning dependencies of target smart_tensor_printer_test\n[ 89%] Building CXX object caffe2/CMakeFiles/smart_tensor_printer_test.dir/utils/smart_tensor_printer_test.cc.o\n[ 89%] Linking CXX executable ../bin/smart_tensor_printer_test\n[ 89%] Built target smart_tensor_printer_test\nScanning dependencies of target conv_op_cache_cudnn_test\n[ 89%] Building CXX object caffe2/CMakeFiles/conv_op_cache_cudnn_test.dir/operators/conv_op_cache_cudnn_test.cc.o\n[ 89%] Linking CXX executable ../bin/conv_op_cache_cudnn_test\n[ 89%] Built target conv_op_cache_cudnn_test\nScanning dependencies of target boolean_unmask_ops_test\n[ 89%] Building CXX object caffe2/CMakeFiles/boolean_unmask_ops_test.dir/operators/boolean_unmask_ops_test.cc.o\n[ 89%] Linking CXX executable ../bin/boolean_unmask_ops_test\n[ 89%] Built target boolean_unmask_ops_test\nScanning dependencies of target ssa_test\n[ 89%] Building CXX object caffe2/CMakeFiles/ssa_test.dir/onnx/ssa_test.cc.o\n[ 89%] Linking CXX executable ../bin/ssa_test\n[ 89%] Built target ssa_test\nScanning dependencies of target event_test\n[ 89%] Building CXX object caffe2/CMakeFiles/event_test.dir/core/event_test.cc.o\n[ 89%] Linking CXX executable ../bin/event_test\n[ 89%] Built target event_test\nScanning dependencies of target module_test\n[ 89%] Building CXX object caffe2/CMakeFiles/module_test.dir/core/module_test.cc.o\n[ 89%] Linking CXX executable ../bin/module_test\n[ 89%] Built target module_test\nScanning dependencies of target typeid_test\n[ 89%] Building CXX object caffe2/CMakeFiles/typeid_test.dir/core/typeid_test.cc.o\n[ 89%] Linking CXX executable ../bin/typeid_test\n[ 89%] Built target typeid_test\nScanning dependencies of target parallel_net_test\n[ 89%] Building CXX object caffe2/CMakeFiles/parallel_net_test.dir/core/parallel_net_test.cc.o\n[ 89%] Linking CXX executable ../bin/parallel_net_test\n[ 89%] Built target parallel_net_test\nScanning dependencies of target fixed_divisor_test\n[ 89%] Building CXX object caffe2/CMakeFiles/fixed_divisor_test.dir/utils/fixed_divisor_test.cc.o\n[ 89%] Linking CXX executable ../bin/fixed_divisor_test\n[ 89%] Built target fixed_divisor_test\nScanning dependencies of target blob_test\n[ 89%] Building CXX object caffe2/CMakeFiles/blob_test.dir/core/blob_test.cc.o\n[ 89%] Linking CXX executable ../bin/blob_test\nCMakeFiles/blob_test.dir/core/blob_test.cc.o: In function caffe2::(anonymous namespace)::ContentChunks_Serialization_Test::TestBody()': blob_test.cc:(.text+0x3b356): warning: the use of tmpnam' is dangerous, better use `mkstemp'\n/usr/bin/ld: warning: libgflags.so.2, needed by /usr/lib/x86_64-linux-gnu/libglog.so, may conflict with libgflags.so.2.2\n[ 89%] Built target blob_test\nScanning dependencies of target mpi_gpu_test\n[ 89%] Building CXX object caffe2/CMakeFiles/mpi_gpu_test.dir/mpi/mpi_gpu_test.cc.o\n[ 89%] Linking CXX executable ../bin/mpi_gpu_test\n/usr/bin/ld: CMakeFiles/mpi_gpu_test.dir/mpi/mpi_gpu_test.cc.o: undefined reference to symbol '_ZN3MPI8Datatype4FreeEv'\n//usr/lib/libmpi_cxx.so.1: error adding symbols: DSO missing from command line\ncollect2: error: ld returned 1 exit status\ncaffe2/CMakeFiles/mpi_gpu_test.dir/build.make:110: recipe for target 'bin/mpi_gpu_test' failed\nmake[2]: *** [bin/mpi_gpu_test] Error 1\nCMakeFiles/Makefile2:3406: recipe for target 'caffe2/CMakeFiles/mpi_gpu_test.dir/all' failed\nmake[1]: *** [caffe2/CMakeFiles/mpi_gpu_test.dir/all] Error 2\nMakefile:138: recipe for target 'all' failed\nmake: *** [all] Error 2", "body": "When i run `sudo make install ` to compile ,ERRORs occurs.\r\nI install the caffe2 from source code Here is my Linux:\r\n\r\n- OS : Ubuntu 16.04\r\n\r\n- CUDA \uff1a 9.0\r\n\r\n- CUDNN : 7.0\r\nHere is the configure of caffe2 build(the output after running `cmake ..`):\r\n\r\n-- Does not need to define long separately.\r\n-- std::exception_ptr is supported.\r\n-- NUMA is available\r\n-- Current compiler supports avx2 extention. Will build perfkernels.\r\n-- Building using own protobuf under third_party per request.\r\n-- Use custom protobuf build.\r\n-- Caffe2 protobuf include directory: $<BUILD_INTERFACE:/home/songzenghui/zee/pytorch/third_party/protobuf/src>$<INSTALL_INTERFACE:include>\r\n-- The BLAS backend of choice:Eigen\r\n-- Brace yourself, we are building NNPACK\r\n-- Found PythonInterp: /usr/bin/python (found version \"2.7.12\") \r\n-- Caffe2: Found gflags with new-style gflags target.\r\n-- Caffe2: Cannot find glog automatically. Using legacy find.\r\n-- Caffe2: Found glog (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libglog.so)\r\n-- Failed to find LLVM FileCheck\r\n-- git Version: v0.0.0\r\n-- Version: 0.0.0\r\n-- Performing Test HAVE_STD_REGEX -- success\r\n-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile\r\n-- Performing Test HAVE_POSIX_REGEX -- success\r\n-- Performing Test HAVE_STEADY_CLOCK -- success\r\n-- Found lmdb    (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/liblmdb.so)\r\n-- Found LevelDB (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libleveldb.so)\r\n-- Found Snappy  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libsnappy.so)\r\n-- Found Numa  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libnuma.so)\r\n-- Found CUDA: /usr/local/cuda (found suitable exact version \"9.0\") \r\n-- OpenCV found (/usr/local/share/OpenCV)\r\nCMake Warning at cmake/Dependencies.cmake:309 (find_package):\r\n  By not providing \"FindEigen3.cmake\" in CMAKE_MODULE_PATH this project has\r\n  asked CMake to find a package configuration file provided by \"Eigen3\", but\r\n  CMake did not find one.\r\n\r\n  Could not find a package configuration file provided by \"Eigen3\" with any\r\n  of the following names:\r\n\r\n    Eigen3Config.cmake\r\n    eigen3-config.cmake\r\n\r\n  Add the installation prefix of \"Eigen3\" to CMAKE_PREFIX_PATH or set\r\n  \"Eigen3_DIR\" to a directory containing one of the above files.  If \"Eigen3\"\r\n  provides a separate development package or SDK, be sure it has been\r\n  installed.\r\nCall Stack (most recent call first):\r\n  CMakeLists.txt:188 (include)\r\n\r\n\r\n-- Did not find system Eigen. Using third party subdirectory.\r\n-- Found PythonInterp: /usr/bin/python (found suitable version \"2.7.12\", minimum required is \"2.7\") \r\n-- NumPy ver. 1.14.2 found (include: /usr/local/lib/python2.7/dist-packages/numpy/core/include)\r\n-- Could NOT find pybind11 (missing: pybind11_INCLUDE_DIR) \r\n-- MPI support found\r\n-- MPI compile flags: \r\n-- MPI include path: /usr/lib/openmpi/include/openmpi/opal/mca/event/libevent2021/libevent/usr/lib/openmpi/include/openmpi/opal/mca/event/libevent2021/libevent/include/usr/lib/openmpi/include/usr/lib/openmpi/include/openmpi\r\n-- MPI LINK flags path:  -Wl,-rpath  -Wl,/usr/lib/openmpi/lib  -Wl,--enable-new-dtags\r\n-- MPI libraries: /usr/lib/openmpi/lib/libmpi_cxx.so/usr/lib/openmpi/lib/libmpi.so\r\nCMake Warning at cmake/Dependencies.cmake:364 (message):\r\n  OpenMPI found, but it is not built with CUDA support.\r\nCall Stack (most recent call first):\r\n  CMakeLists.txt:188 (include)\r\n\r\n\r\n-- Found CUDA: /usr/local/cuda (found suitable version \"9.0\", minimum required is \"7.0\") \r\n-- Caffe2: CUDA detected: 9.0\r\n-- Found cuDNN: v7.1.2  (include: /usr/local/cuda/include, library: /usr/local/cuda/lib64/libcudnn.so)\r\n-- Automatic GPU detection returned 6.1 6.1.\r\n-- Added CUDA NVCC flags for: sm_61\r\n-- Could NOT find NCCL (missing: NCCL_INCLUDE_DIRS NCCL_LIBRARIES) \r\n-- Could NOT find CUB (missing: CUB_INCLUDE_DIR) \r\n-- Could NOT find Gloo (missing: Gloo_INCLUDE_DIR Gloo_LIBRARY) \r\n-- MPI include path: /usr/lib/openmpi/include/openmpi/opal/mca/event/libevent2021/libevent/usr/lib/openmpi/include/openmpi/opal/mca/event/libevent2021/libevent/include/usr/lib/openmpi/include/usr/lib/openmpi/include/openmpi\r\n-- MPI libraries: /usr/lib/openmpi/lib/libmpi_cxx.so/usr/lib/openmpi/lib/libmpi.so\r\n-- CUDA detected: 9.0\r\n-- Found libcuda: /usr/local/cuda-9.0/lib64/stubs/libcuda.so\r\n-- Found libnvrtc: /usr/local/cuda-9.0/lib64/libnvrtc.so\r\n-- GCC 5.4.0: Adding gcc and gcc_s libs to link line\r\n-- Include NCCL operators\r\n-- Excluding ideep operators as we are not using ideep\r\n-- Including image processing operators\r\n-- Excluding video processing operators due to no opencv\r\n-- Excluding mkl operators as we are not using mkl\r\n-- Include Observer library\r\n-- Using lib/python2.7/dist-packages as python relative installation path\r\n-- Automatically generating missing __init__.py files.\r\n-- A previous caffe2 cmake run already created the __init__.py files.\r\nCMake Warning at CMakeLists.txt:318 (message):\r\n  Generated cmake files are only fully tested if one builds with system glog,\r\n  gflags, and protobuf.  Other settings may generate files that are not well\r\n  tested.\r\n\r\n\r\n-- \r\n-- ******** Summary ********\r\n-- General:\r\n--   CMake version         : 3.5.1\r\n--   CMake command         : /usr/bin/cmake\r\n--   Git version           : v0.1.11-8572-g45cdb63\r\n--   System                : Linux\r\n--   C++ compiler          : /usr/bin/c++\r\n--   C++ compiler version  : 5.4.0\r\n--   BLAS                  : Eigen\r\n--   CXX flags             :  -fvisibility-inlines-hidden -DONNX_NAMESPACE=onnx_c2 -O2 -fPIC -Wno-narrowing -Wno-invalid-partial-specialization\r\n--   Build type            : Release\r\n--   Compile definitions   : \r\n-- \r\n--   BUILD_CAFFE2          : ON\r\n--   BUILD_ATEN            : OFF\r\n--   BUILD_BINARY          : ON\r\n--   BUILD_CUSTOM_PROTOBUF : ON\r\n--     Link local protobuf : ON\r\n--   BUILD_DOCS            : OFF\r\n--   BUILD_PYTHON          : ON\r\n--     Python version      : 2.7.12\r\n--     Python includes     : /usr/include/python2.7\r\n--   BUILD_SHARED_LIBS     : ON\r\n--   BUILD_TEST            : ON\r\n--   USE_ASAN              : OFF\r\n--   USE_CUDA              : ON\r\n--     CUDA static link    : OFF\r\n--     USE_CUDNN           : ON\r\n--     CUDA version        : 9.0\r\n--     cuDNN version       : 7.1.2\r\n--     CUDA root directory : /usr/local/cuda\r\n--     CUDA library        : /usr/local/cuda-9.0/lib64/stubs/libcuda.so\r\n--     cudart library      : /usr/local/cuda/lib64/libcudart_static.a;-pthread;dl;/usr/lib/x86_64-linux-gnu/librt.so\r\n--     cublas library      : /usr/local/cuda/lib64/libcublas.so;/usr/local/cuda/lib64/libcublas_device.a\r\n--     cufft library       : /usr/local/cuda/lib64/libcufft.so\r\n--     curand library      : /usr/local/cuda/lib64/libcurand.so\r\n--     cuDNN library       : /usr/local/cuda/lib64/libcudnn.so\r\n--     nvrtc               : /usr/local/cuda-9.0/lib64/libnvrtc.so\r\n--     CUDA include path   : /usr/local/cuda/include\r\n--     NVCC executable     : /usr/local/cuda/bin/nvcc\r\n--     CUDA host compiler  : /usr/bin/cc\r\n--     USE_TENSORRT        : OFF\r\n--   USE_ROCM              : OFF\r\n--   USE_EIGEN_FOR_BLAS    : ON\r\n--   USE_FFMPEG            : OFF\r\n--   USE_GFLAGS            : ON\r\n--   USE_GLOG              : ON\r\n--   USE_GLOO              : ON\r\n--     USE_GLOO_IBVERBS    : OFF\r\n--   USE_LEVELDB           : ON\r\n--     LevelDB version     : 1.18\r\n--     Snappy version      : 1.1.3\r\n--   USE_LITE_PROTO        : OFF\r\n--   USE_LMDB              : ON\r\n--     LMDB version        : 0.9.17\r\n--   USE_METAL             : OFF\r\n--   USE_MKL               : \r\n--   USE_MOBILE_OPENGL     : OFF\r\n--   USE_MPI               : ON\r\n--   USE_NCCL              : ON\r\n--     USE_SYSTEM_NCCL     : OFF\r\n--   USE_NERVANA_GPU       : OFF\r\n--   USE_NNPACK            : ON\r\n--   USE_OBSERVERS         : ON\r\n--   USE_OPENCL            : OFF\r\n--   USE_OPENCV            : ON\r\n--     OpenCV version      : 3.4.0\r\n--   USE_OPENMP            : OFF\r\n--   USE_PROF              : OFF\r\n--   USE_REDIS             : OFF\r\n--   USE_ROCKSDB           : OFF\r\n--   USE_ZMQ               : OFF\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /home/songzenghui/zee/pytorch/build\r\n\r\nHere is the ERRORs:\r\n[ 89%] Building CXX object caffe2/CMakeFiles/init_test.dir/core/init_test.cc.o\r\n[ 89%] Linking CXX executable ../bin/init_test\r\n[ 89%] Built target init_test\r\nScanning dependencies of target backend_cutting_test\r\n[ 89%] Building CXX object caffe2/CMakeFiles/backend_cutting_test.dir/opt/backend_cutting_test.cc.o\r\n[ 89%] Linking CXX executable ../bin/backend_cutting_test\r\n[ 89%] Built target backend_cutting_test\r\nScanning dependencies of target registry_test\r\n[ 89%] Building CXX object caffe2/CMakeFiles/registry_test.dir/core/registry_test.cc.o\r\n[ 89%] Linking CXX executable ../bin/registry_test\r\n[ 89%] Built target registry_test\r\nScanning dependencies of target pattern_net_transform_test\r\n[ 89%] Building CXX object caffe2/CMakeFiles/pattern_net_transform_test.dir/transforms/pattern_net_transform_test.cc.o\r\n[ 89%] Linking CXX executable ../bin/pattern_net_transform_test\r\n[ 89%] Built target pattern_net_transform_test\r\nScanning dependencies of target operator_test\r\n[ 89%] Building CXX object caffe2/CMakeFiles/operator_test.dir/core/operator_test.cc.o\r\n[ 89%] Linking CXX executable ../bin/operator_test\r\n[ 89%] Built target operator_test\r\nScanning dependencies of target smart_tensor_printer_test\r\n[ 89%] Building CXX object caffe2/CMakeFiles/smart_tensor_printer_test.dir/utils/smart_tensor_printer_test.cc.o\r\n[ 89%] Linking CXX executable ../bin/smart_tensor_printer_test\r\n[ 89%] Built target smart_tensor_printer_test\r\nScanning dependencies of target conv_op_cache_cudnn_test\r\n[ 89%] Building CXX object caffe2/CMakeFiles/conv_op_cache_cudnn_test.dir/operators/conv_op_cache_cudnn_test.cc.o\r\n[ 89%] Linking CXX executable ../bin/conv_op_cache_cudnn_test\r\n[ 89%] Built target conv_op_cache_cudnn_test\r\nScanning dependencies of target boolean_unmask_ops_test\r\n[ 89%] Building CXX object caffe2/CMakeFiles/boolean_unmask_ops_test.dir/operators/boolean_unmask_ops_test.cc.o\r\n[ 89%] Linking CXX executable ../bin/boolean_unmask_ops_test\r\n[ 89%] Built target boolean_unmask_ops_test\r\nScanning dependencies of target ssa_test\r\n[ 89%] Building CXX object caffe2/CMakeFiles/ssa_test.dir/onnx/ssa_test.cc.o\r\n[ 89%] Linking CXX executable ../bin/ssa_test\r\n[ 89%] Built target ssa_test\r\nScanning dependencies of target event_test\r\n[ 89%] Building CXX object caffe2/CMakeFiles/event_test.dir/core/event_test.cc.o\r\n[ 89%] Linking CXX executable ../bin/event_test\r\n[ 89%] Built target event_test\r\nScanning dependencies of target module_test\r\n[ 89%] Building CXX object caffe2/CMakeFiles/module_test.dir/core/module_test.cc.o\r\n[ 89%] Linking CXX executable ../bin/module_test\r\n[ 89%] Built target module_test\r\nScanning dependencies of target typeid_test\r\n[ 89%] Building CXX object caffe2/CMakeFiles/typeid_test.dir/core/typeid_test.cc.o\r\n[ 89%] Linking CXX executable ../bin/typeid_test\r\n[ 89%] Built target typeid_test\r\nScanning dependencies of target parallel_net_test\r\n[ 89%] Building CXX object caffe2/CMakeFiles/parallel_net_test.dir/core/parallel_net_test.cc.o\r\n[ 89%] Linking CXX executable ../bin/parallel_net_test\r\n[ 89%] Built target parallel_net_test\r\nScanning dependencies of target fixed_divisor_test\r\n[ 89%] Building CXX object caffe2/CMakeFiles/fixed_divisor_test.dir/utils/fixed_divisor_test.cc.o\r\n[ 89%] Linking CXX executable ../bin/fixed_divisor_test\r\n[ 89%] Built target fixed_divisor_test\r\nScanning dependencies of target blob_test\r\n[ 89%] Building CXX object caffe2/CMakeFiles/blob_test.dir/core/blob_test.cc.o\r\n[ 89%] Linking CXX executable ../bin/blob_test\r\nCMakeFiles/blob_test.dir/core/blob_test.cc.o: In function `caffe2::(anonymous namespace)::ContentChunks_Serialization_Test::TestBody()':\r\nblob_test.cc:(.text+0x3b356): warning: the use of `tmpnam' is dangerous, better use `mkstemp'\r\n/usr/bin/ld: warning: libgflags.so.2, needed by /usr/lib/x86_64-linux-gnu/libglog.so, may conflict with libgflags.so.2.2\r\n[ 89%] Built target blob_test\r\nScanning dependencies of target mpi_gpu_test\r\n[ 89%] Building CXX object caffe2/CMakeFiles/mpi_gpu_test.dir/mpi/mpi_gpu_test.cc.o\r\n[ 89%] Linking CXX executable ../bin/mpi_gpu_test\r\n/usr/bin/ld: CMakeFiles/mpi_gpu_test.dir/mpi/mpi_gpu_test.cc.o: undefined reference to symbol '_ZN3MPI8Datatype4FreeEv'\r\n//usr/lib/libmpi_cxx.so.1: error adding symbols: DSO missing from command line\r\ncollect2: error: ld returned 1 exit status\r\ncaffe2/CMakeFiles/mpi_gpu_test.dir/build.make:110: recipe for target 'bin/mpi_gpu_test' failed\r\nmake[2]: *** [bin/mpi_gpu_test] Error 1\r\nCMakeFiles/Makefile2:3406: recipe for target 'caffe2/CMakeFiles/mpi_gpu_test.dir/all' failed\r\nmake[1]: *** [caffe2/CMakeFiles/mpi_gpu_test.dir/all] Error 2\r\nMakefile:138: recipe for target 'all' failed\r\nmake: *** [all] Error 2\r\n\r\n"}