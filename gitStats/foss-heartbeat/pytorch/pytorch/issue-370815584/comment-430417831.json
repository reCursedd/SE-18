{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/430417831", "html_url": "https://github.com/pytorch/pytorch/issues/12728#issuecomment-430417831", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12728", "id": 430417831, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDQxNzgzMQ==", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-16T22:05:49Z", "updated_at": "2018-10-16T22:05:49Z", "author_association": "MEMBER", "body_html": "<p>Seem useful. I think <code>itemsize</code> is equivalent to the existing <a href=\"https://pytorch.org/docs/stable/tensors.html?highlight=element_size#torch.Tensor.element_size\" rel=\"nofollow\"><code>element_size()</code></a>.</p>\n<p>I like matching NumPy names, even at the cost of some duplicate functionality. I think it's usually good to keep NumPy properties as properties in PyTorch (e.g. <code>shape</code>, <code>dtype</code>), even if it means that the C++ code can't exactly match the Python code.</p>", "body_text": "Seem useful. I think itemsize is equivalent to the existing element_size().\nI like matching NumPy names, even at the cost of some duplicate functionality. I think it's usually good to keep NumPy properties as properties in PyTorch (e.g. shape, dtype), even if it means that the C++ code can't exactly match the Python code.", "body": "Seem useful. I think `itemsize` is equivalent to the existing [`element_size()`](https://pytorch.org/docs/stable/tensors.html?highlight=element_size#torch.Tensor.element_size). \r\n\r\nI like matching NumPy names, even at the cost of some duplicate functionality. I think it's usually good to keep NumPy properties as properties in PyTorch (e.g. `shape`, `dtype`), even if it means that the C++ code can't exactly match the Python code."}