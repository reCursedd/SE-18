{"url": "https://api.github.com/repos/pytorch/pytorch/issues/14081", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/14081/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/14081/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/14081/events", "html_url": "https://github.com/pytorch/pytorch/pull/14081", "id": 381444178, "node_id": "MDExOlB1bGxSZXF1ZXN0MjMxNDE0MDUw", "number": 14081, "title": "[jit] Add boolean dispatch for function overloading", "user": {"login": "driazati", "id": 9407960, "node_id": "MDQ6VXNlcjk0MDc5NjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9407960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/driazati", "html_url": "https://github.com/driazati", "followers_url": "https://api.github.com/users/driazati/followers", "following_url": "https://api.github.com/users/driazati/following{/other_user}", "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}", "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/driazati/subscriptions", "organizations_url": "https://api.github.com/users/driazati/orgs", "repos_url": "https://api.github.com/users/driazati/repos", "events_url": "https://api.github.com/users/driazati/events{/privacy}", "received_events_url": "https://api.github.com/users/driazati/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 679953983, "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit", "name": "jit", "color": "c5def5", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-16T04:41:28Z", "updated_at": "2018-11-23T15:55:11Z", "closed_at": null, "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/14081", "html_url": "https://github.com/pytorch/pytorch/pull/14081", "diff_url": "https://github.com/pytorch/pytorch/pull/14081.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/14081.patch"}, "body_html": "<p>This PR allows to overload functions based on the value of a parameter (so long as it is a constant). See <code>max_pool1d</code> for an example usage.</p>\n<p>This is the first step in enabling the use of <code>max_pool</code> functions for the standard library that can return <code>Tensor</code> or <code>Tuple[Tensor, Tensor]</code> based on the <code>return_indices</code> flag. This will give the JIT identical results to the Python versions of the functions.</p>\n<p>Depends on <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"382786991\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/14232\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/14232/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/14232\">#14232</a> for <code>Optional[BroadcastingList[T]]</code></p>", "body_text": "This PR allows to overload functions based on the value of a parameter (so long as it is a constant). See max_pool1d for an example usage.\nThis is the first step in enabling the use of max_pool functions for the standard library that can return Tensor or Tuple[Tensor, Tensor] based on the return_indices flag. This will give the JIT identical results to the Python versions of the functions.\nDepends on #14232 for Optional[BroadcastingList[T]]", "body": "This PR allows to overload functions based on the value of a parameter (so long as it is a constant). See `max_pool1d` for an example usage.\r\n\r\nThis is the first step in enabling the use of `max_pool` functions for the standard library that can return `Tensor` or `Tuple[Tensor, Tensor]` based on the `return_indices` flag. This will give the JIT identical results to the Python versions of the functions.\r\n\r\nDepends on #14232 for `Optional[BroadcastingList[T]]`\r\n\r\n\r\n"}