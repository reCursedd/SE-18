{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/365988062", "html_url": "https://github.com/pytorch/pytorch/issues/5252#issuecomment-365988062", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5252", "id": 365988062, "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTk4ODA2Mg==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-15T16:46:40Z", "updated_at": "2018-02-15T16:46:40Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Oops, I guess it's a private discuss. Relevant part:</p>\n<pre><code>if (is_depthwise):\n  ...\nelse if (use_cudnn):\n  ...\nelse:\n  ...\n</code></pre>\n<blockquote>\n<p>This means that every depthwise convolution takes the first branch. However, CuDNN 7 introduced support for efficient grouped/depthwise convolution, and we would like to use that when it\u2019s better - there\u2019s even special code for it in the use_cudnn branch. On my system, CuDNN 7 is about 2x faster than the current path when input_channels == output_channels, but about 3x slower otherwise.</p>\n</blockquote>", "body_text": "Oops, I guess it's a private discuss. Relevant part:\nif (is_depthwise):\n  ...\nelse if (use_cudnn):\n  ...\nelse:\n  ...\n\n\nThis means that every depthwise convolution takes the first branch. However, CuDNN 7 introduced support for efficient grouped/depthwise convolution, and we would like to use that when it\u2019s better - there\u2019s even special code for it in the use_cudnn branch. On my system, CuDNN 7 is about 2x faster than the current path when input_channels == output_channels, but about 3x slower otherwise.", "body": "Oops, I guess it's a private discuss. Relevant part:\r\n\r\n```\r\nif (is_depthwise):\r\n  ...\r\nelse if (use_cudnn):\r\n  ...\r\nelse:\r\n  ...\r\n```\r\n\r\n> This means that every depthwise convolution takes the first branch. However, CuDNN 7 introduced support for efficient grouped/depthwise convolution, and we would like to use that when it\u2019s better - there\u2019s even special code for it in the use_cudnn branch. On my system, CuDNN 7 is about 2x faster than the current path when input_channels == output_channels, but about 3x slower otherwise."}