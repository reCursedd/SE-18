{"url": "https://api.github.com/repos/pytorch/pytorch/issues/12506", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/12506/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12506/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/12506/events", "html_url": "https://github.com/pytorch/pytorch/issues/12506", "id": 368420711, "node_id": "MDU6SXNzdWUzNjg0MjA3MTE=", "number": 12506, "title": "[C++/pytorch] data loading and working with complex data structures with the C++ frontend", "user": {"login": "zeryx", "id": 1892175, "node_id": "MDQ6VXNlcjE4OTIxNzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1892175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zeryx", "html_url": "https://github.com/zeryx", "followers_url": "https://api.github.com/users/zeryx/followers", "following_url": "https://api.github.com/users/zeryx/following{/other_user}", "gists_url": "https://api.github.com/users/zeryx/gists{/gist_id}", "starred_url": "https://api.github.com/users/zeryx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zeryx/subscriptions", "organizations_url": "https://api.github.com/users/zeryx/orgs", "repos_url": "https://api.github.com/users/zeryx/repos", "events_url": "https://api.github.com/users/zeryx/events{/privacy}", "received_events_url": "https://api.github.com/users/zeryx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 917150434, "node_id": "MDU6TGFiZWw5MTcxNTA0MzQ=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/cpp", "name": "cpp", "color": "000000", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2018-10-09T22:18:08Z", "updated_at": "2018-11-22T16:21:47Z", "closed_at": "2018-10-29T18:05:26Z", "author_association": "NONE", "body_html": "<p>Hey folks! I have a question about data manipulation with the C++ frontend. I'm aware that it's right now in alpha, however, I was wondering what the ideal pathway would be for data ingestion in an online, production-ready environment.</p>\n<p>For example, in python I could easily use numpy and PIL to load an image into a ndarray, and convert that directly into a torch tensor.</p>\n<div class=\"highlight highlight-source-python\"><pre>img <span class=\"pl-k\">=</span> Image.open(filename)\n img <span class=\"pl-k\">=</span> np.asarray(img)\nimg <span class=\"pl-k\">=</span> torch.from_numpy(np.asarray(img))</pre></div>\n<p>What would the equivalent of the above look like using the C++ frontend? I was thinking that you would probably want to use openCV, but I'm unclear as to how to migrate a openCV <code>Mat</code> representation to something that the C++ frontend could ingest easily.</p>\n<p>Thanks so much for all your hard work, I'm always amazed by what the pytorch team has been able to accomplish, and this 1.0 release is shaping up to be a great one.</p>", "body_text": "Hey folks! I have a question about data manipulation with the C++ frontend. I'm aware that it's right now in alpha, however, I was wondering what the ideal pathway would be for data ingestion in an online, production-ready environment.\nFor example, in python I could easily use numpy and PIL to load an image into a ndarray, and convert that directly into a torch tensor.\nimg = Image.open(filename)\n img = np.asarray(img)\nimg = torch.from_numpy(np.asarray(img))\nWhat would the equivalent of the above look like using the C++ frontend? I was thinking that you would probably want to use openCV, but I'm unclear as to how to migrate a openCV Mat representation to something that the C++ frontend could ingest easily.\nThanks so much for all your hard work, I'm always amazed by what the pytorch team has been able to accomplish, and this 1.0 release is shaping up to be a great one.", "body": "Hey folks! I have a question about data manipulation with the C++ frontend. I'm aware that it's right now in alpha, however, I was wondering what the ideal pathway would be for data ingestion in an online, production-ready environment.\r\n\r\nFor example, in python I could easily use numpy and PIL to load an image into a ndarray, and convert that directly into a torch tensor.\r\n\r\n```python\r\nimg = Image.open(filename)\r\n img = np.asarray(img)\r\nimg = torch.from_numpy(np.asarray(img))\r\n```\r\n\r\nWhat would the equivalent of the above look like using the C++ frontend? I was thinking that you would probably want to use openCV, but I'm unclear as to how to migrate a openCV `Mat` representation to something that the C++ frontend could ingest easily.\r\n\r\nThanks so much for all your hard work, I'm always amazed by what the pytorch team has been able to accomplish, and this 1.0 release is shaping up to be a great one."}