{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/366690652", "html_url": "https://github.com/pytorch/pytorch/issues/5212#issuecomment-366690652", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5212", "id": 366690652, "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjY5MDY1Mg==", "user": {"login": "ptrblck", "id": 11662379, "node_id": "MDQ6VXNlcjExNjYyMzc5", "avatar_url": "https://avatars3.githubusercontent.com/u/11662379?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptrblck", "html_url": "https://github.com/ptrblck", "followers_url": "https://api.github.com/users/ptrblck/followers", "following_url": "https://api.github.com/users/ptrblck/following{/other_user}", "gists_url": "https://api.github.com/users/ptrblck/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptrblck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptrblck/subscriptions", "organizations_url": "https://api.github.com/users/ptrblck/orgs", "repos_url": "https://api.github.com/users/ptrblck/repos", "events_url": "https://api.github.com/users/ptrblck/events{/privacy}", "received_events_url": "https://api.github.com/users/ptrblck/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-19T13:18:10Z", "updated_at": "2018-02-19T13:18:32Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Sounds reasonable to me.<br>\nThis behavior would be similar to what <code>torch.split</code> returns using an integer for the split size.</p>\n<p><code>x = torch.randn(10, 20)</code><br>\n<code>torch.split(x, 4, 0)</code><br>\nreturns 3 splits of shape<br>\n<code>[4, 20]</code>, <code>[4, 20]</code>, <code>[2, 20]</code>.</p>", "body_text": "Sounds reasonable to me.\nThis behavior would be similar to what torch.split returns using an integer for the split size.\nx = torch.randn(10, 20)\ntorch.split(x, 4, 0)\nreturns 3 splits of shape\n[4, 20], [4, 20], [2, 20].", "body": "Sounds reasonable to me.\r\nThis behavior would be similar to what `torch.split` returns using an integer for the split size.\r\n\r\n``\r\nx = torch.randn(10, 20)\r\n``\r\n``\r\ntorch.split(x, 4, 0)\r\n``\r\nreturns 3 splits of shape\r\n`[4, 20]`, `[4, 20]`, `[2, 20]`."}