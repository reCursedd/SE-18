{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7891", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7891/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7891/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7891/events", "html_url": "https://github.com/pytorch/pytorch/issues/7891", "id": 326901955, "node_id": "MDU6SXNzdWUzMjY5MDE5NTU=", "number": 7891, "title": "[Caffe2] What's the right path of adding backend optimizations?", "user": {"login": "jgong5", "id": 8359223, "node_id": "MDQ6VXNlcjgzNTkyMjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/8359223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgong5", "html_url": "https://github.com/jgong5", "followers_url": "https://api.github.com/users/jgong5/followers", "following_url": "https://api.github.com/users/jgong5/following{/other_user}", "gists_url": "https://api.github.com/users/jgong5/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgong5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgong5/subscriptions", "organizations_url": "https://api.github.com/users/jgong5/orgs", "repos_url": "https://api.github.com/users/jgong5/repos", "events_url": "https://api.github.com/users/jgong5/events{/privacy}", "received_events_url": "https://api.github.com/users/jgong5/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 890282107, "node_id": "MDU6TGFiZWw4OTAyODIxMDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/caffe2", "name": "caffe2", "color": "210aa8", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-28T05:36:27Z", "updated_at": "2018-05-29T13:58:46Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<h2>Issue description</h2>\n<p>I found there are two paths of adding backend optimizations. One is using \"OptimizeForBackend\" from opt/backend_cutting.h and the other is implementing callbacks per OptimizationPass in \"passes.h\". The former works at the NetDef level and is used by TensorRT backend. The latter works on NNModule level (also leveraging NetDef APIs) and is used by ideep backend.</p>\n<p>It seems the former approach, working on NetDef directly, is more straightforward w.r.t API dependencies but the backend implementations need to handle the graph structure themselves. I also noticed that more recent optimizations were added for the latter NNModule path. May I know what path is the preferred one? Thanks.</p>", "body_text": "Issue description\nI found there are two paths of adding backend optimizations. One is using \"OptimizeForBackend\" from opt/backend_cutting.h and the other is implementing callbacks per OptimizationPass in \"passes.h\". The former works at the NetDef level and is used by TensorRT backend. The latter works on NNModule level (also leveraging NetDef APIs) and is used by ideep backend.\nIt seems the former approach, working on NetDef directly, is more straightforward w.r.t API dependencies but the backend implementations need to handle the graph structure themselves. I also noticed that more recent optimizations were added for the latter NNModule path. May I know what path is the preferred one? Thanks.", "body": "## Issue description\r\n\r\nI found there are two paths of adding backend optimizations. One is using \"OptimizeForBackend\" from opt/backend_cutting.h and the other is implementing callbacks per OptimizationPass in \"passes.h\". The former works at the NetDef level and is used by TensorRT backend. The latter works on NNModule level (also leveraging NetDef APIs) and is used by ideep backend.\r\n\r\nIt seems the former approach, working on NetDef directly, is more straightforward w.r.t API dependencies but the backend implementations need to handle the graph structure themselves. I also noticed that more recent optimizations were added for the latter NNModule path. May I know what path is the preferred one? Thanks."}