{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7523", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7523/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7523/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7523/events", "html_url": "https://github.com/pytorch/pytorch/issues/7523", "id": 322525265, "node_id": "MDU6SXNzdWUzMjI1MjUyNjU=", "number": 7523, "title": "[Caffe2] compilation error on nccl with gcc8", "user": {"login": "ShahriarSS", "id": 24262836, "node_id": "MDQ6VXNlcjI0MjYyODM2", "avatar_url": "https://avatars2.githubusercontent.com/u/24262836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShahriarSS", "html_url": "https://github.com/ShahriarSS", "followers_url": "https://api.github.com/users/ShahriarSS/followers", "following_url": "https://api.github.com/users/ShahriarSS/following{/other_user}", "gists_url": "https://api.github.com/users/ShahriarSS/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShahriarSS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShahriarSS/subscriptions", "organizations_url": "https://api.github.com/users/ShahriarSS/orgs", "repos_url": "https://api.github.com/users/ShahriarSS/repos", "events_url": "https://api.github.com/users/ShahriarSS/events{/privacy}", "received_events_url": "https://api.github.com/users/ShahriarSS/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 890282107, "node_id": "MDU6TGFiZWw4OTAyODIxMDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/caffe2", "name": "caffe2", "color": "210aa8", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "pjh5", "id": 6456020, "node_id": "MDQ6VXNlcjY0NTYwMjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6456020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pjh5", "html_url": "https://github.com/pjh5", "followers_url": "https://api.github.com/users/pjh5/followers", "following_url": "https://api.github.com/users/pjh5/following{/other_user}", "gists_url": "https://api.github.com/users/pjh5/gists{/gist_id}", "starred_url": "https://api.github.com/users/pjh5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pjh5/subscriptions", "organizations_url": "https://api.github.com/users/pjh5/orgs", "repos_url": "https://api.github.com/users/pjh5/repos", "events_url": "https://api.github.com/users/pjh5/events{/privacy}", "received_events_url": "https://api.github.com/users/pjh5/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pjh5", "id": 6456020, "node_id": "MDQ6VXNlcjY0NTYwMjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6456020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pjh5", "html_url": "https://github.com/pjh5", "followers_url": "https://api.github.com/users/pjh5/followers", "following_url": "https://api.github.com/users/pjh5/following{/other_user}", "gists_url": "https://api.github.com/users/pjh5/gists{/gist_id}", "starred_url": "https://api.github.com/users/pjh5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pjh5/subscriptions", "organizations_url": "https://api.github.com/users/pjh5/orgs", "repos_url": "https://api.github.com/users/pjh5/repos", "events_url": "https://api.github.com/users/pjh5/events{/privacy}", "received_events_url": "https://api.github.com/users/pjh5/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-05-12T16:41:00Z", "updated_at": "2018-05-17T17:38:25Z", "closed_at": "2018-05-17T17:38:25Z", "author_association": "NONE", "body_html": "<p>hi.I was compiling caffe2 and I ran into a problem. i ran the command below. you can see the results:</p>\n<p>cmake -DCUDA_HOST_COMPILER=/usr/bin/gcc53 -DUSE_OPENMP=ON -DMPI_C_COMPILER=/usr/lib64/openmpi/bin/mpicc -DMPI_CXX_COMPILER=/usr/lib64/openmpi/bin/mpicxx -DCMAKE_DISABLE_FIND_PACKAGE_Eigen3=TRUE -DCMAKE_DISABLE_FIND_PACKAGE_pybind11=TRUE -DCMAKE_DISABLE_FIND_PACKAGE_CUB=TRUE -DCMAKE_DISABLE_FIND_PACKAGE_Gloo=TRUE -DUSE_NATIVE_ARCH=ON ..</p>\n<p>-- The CXX compiler identification is GNU 8.1.1<br>\n-- The C compiler identification is GNU 8.1.1<br>\n-- Check for working CXX compiler: /usr/lib64/ccache/c++<br>\n-- Check for working CXX compiler: /usr/lib64/ccache/c++ -- works<br>\n-- Detecting CXX compiler ABI info<br>\n-- Detecting CXX compiler ABI info - done<br>\n-- Detecting CXX compile features<br>\n-- Detecting CXX compile features - done<br>\n-- Check for working C compiler: /usr/lib64/ccache/cc<br>\n-- Check for working C compiler: /usr/lib64/ccache/cc -- works<br>\n-- Detecting C compiler ABI info<br>\n-- Detecting C compiler ABI info - done<br>\n-- Detecting C compile features<br>\n-- Detecting C compile features - done<br>\n-- Performing Test CAFFE2_LONG_IS_INT32_OR_64<br>\n-- Performing Test CAFFE2_LONG_IS_INT32_OR_64 - Success<br>\n-- Does not need to define long separately.<br>\n-- Performing Test CAFFE2_EXCEPTION_PTR_SUPPORTED<br>\n-- Performing Test CAFFE2_EXCEPTION_PTR_SUPPORTED - Success<br>\n-- std::exception_ptr is supported.<br>\n-- Performing Test CAFFE2_IS_NUMA_AVAILABLE<br>\n-- Performing Test CAFFE2_IS_NUMA_AVAILABLE - Success<br>\n-- NUMA is available<br>\n-- Performing Test CAFFE2_NEED_TO_TURN_OFF_DEPRECATION_WARNING<br>\n-- Performing Test CAFFE2_NEED_TO_TURN_OFF_DEPRECATION_WARNING - Success<br>\n-- Performing Test CAFFE2_COMPILER_SUPPORTS_AVX2_EXTENSIONS<br>\n-- Performing Test CAFFE2_COMPILER_SUPPORTS_AVX2_EXTENSIONS - Success<br>\n-- Current compiler supports avx2 extention. Will build perfkernels.<br>\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_VISIBILITY<br>\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_VISIBILITY - Success<br>\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_INLINE_VISIBILITY<br>\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_INLINE_VISIBILITY - Success<br>\n-- Performing Test COMPILER_SUPPORTS_MARCH_NATIVE<br>\n-- Performing Test COMPILER_SUPPORTS_MARCH_NATIVE - Success<br>\n-- Build type not set - defaulting to Release<br>\n-- Building using own protobuf under third_party per request.<br>\n-- Use custom protobuf build.<br>\n-- Looking for pthread.h<br>\n-- Looking for pthread.h - found<br>\n-- Looking for pthread_create<br>\n-- Looking for pthread_create - not found<br>\n-- Looking for pthread_create in pthreads<br>\n-- Looking for pthread_create in pthreads - not found<br>\n-- Looking for pthread_create in pthread<br>\n-- Looking for pthread_create in pthread - found<br>\n-- Found Threads: TRUE<br>\n-- Caffe2 protobuf include directory: $&lt;BUILD_INTERFACE:/home/shahriar/pytorch/third_party/protobuf/src&gt;$&lt;INSTALL_INTERFACE:include&gt;<br>\n-- Found Git: /usr/bin/git (found version \"2.17.0\")<br>\n-- The BLAS backend of choice:Eigen<br>\n-- Brace yourself, we are building NNPACK<br>\n-- The ASM compiler identification is GNU<br>\n-- Found assembler: /usr/lib64/ccache/cc<br>\n-- Found PythonInterp: /usr/bin/python (found version \"2.7.14\")<br>\n-- Check if compiler accepts -pthread<br>\n-- Check if compiler accepts -pthread - yes<br>\n-- Caffe2: Cannot find gflags automatically. Using legacy find.<br>\n-- Found gflags: /usr/include<br>\n-- Caffe2: Found gflags  (include: /usr/include, library: /usr/lib64/libgflags.so)<br>\n-- Caffe2: Cannot find glog automatically. Using legacy find.<br>\n-- Found glog: /usr/include<br>\n-- Caffe2: Found glog (include: /usr/include, library: /usr/lib64/libglog.so)<br>\n-- Failed to find LLVM FileCheck<br>\n-- git Version: v0.0.0-dirty<br>\n-- Version: 0.0.0<br>\n-- Performing Test HAVE_CXX_FLAG_STD_CXX11<br>\n-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success<br>\n-- Performing Test HAVE_CXX_FLAG_WALL<br>\n-- Performing Test HAVE_CXX_FLAG_WALL - Success<br>\n-- Performing Test HAVE_CXX_FLAG_WEXTRA<br>\n-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success<br>\n-- Performing Test HAVE_CXX_FLAG_WSHADOW<br>\n-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success<br>\n-- Performing Test HAVE_CXX_FLAG_WERROR<br>\n-- Performing Test HAVE_CXX_FLAG_WERROR - Success<br>\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC<br>\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC - Success<br>\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC_ERRORS<br>\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC_ERRORS - Success<br>\n-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32<br>\n-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed<br>\n-- Performing Test HAVE_CXX_FLAG_WFLOAT_EQUAL<br>\n-- Performing Test HAVE_CXX_FLAG_WFLOAT_EQUAL - Success<br>\n-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING<br>\n-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success<br>\n-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING<br>\n-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success<br>\n-- Performing Test HAVE_CXX_FLAG_WD654<br>\n-- Performing Test HAVE_CXX_FLAG_WD654 - Failed<br>\n-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY<br>\n-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed<br>\n-- Performing Test HAVE_CXX_FLAG_COVERAGE<br>\n-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success<br>\n-- Performing Test HAVE_STD_REGEX<br>\n-- Performing Test HAVE_STD_REGEX<br>\n-- Performing Test HAVE_STD_REGEX -- success<br>\n-- Performing Test HAVE_GNU_POSIX_REGEX<br>\n-- Performing Test HAVE_GNU_POSIX_REGEX<br>\n-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile<br>\n-- Performing Test HAVE_POSIX_REGEX<br>\n-- Performing Test HAVE_POSIX_REGEX<br>\n-- Performing Test HAVE_POSIX_REGEX -- success<br>\n-- Performing Test HAVE_STEADY_CLOCK<br>\n-- Performing Test HAVE_STEADY_CLOCK<br>\n-- Performing Test HAVE_STEADY_CLOCK -- success<br>\n-- Found LMDB: /usr/include<br>\n-- Found lmdb    (include: /usr/include, library: /usr/lib64/liblmdb.so)<br>\n-- Found LevelDB: /usr/include<br>\n-- Found LevelDB (include: /usr/include, library: /usr/lib64/libleveldb.so)<br>\n-- Found Snappy: /usr/include<br>\n-- Found Snappy  (include: /usr/include, library: /usr/lib64/libsnappy.so)<br>\n-- Found Numa: /usr/include<br>\n-- Found Numa  (include: /usr/include, library: /usr/lib64/libnuma.so)<br>\n-- OpenCV found (/usr/lib64/OpenCV)<br>\n-- Did not find system Eigen. Using third party subdirectory.<br>\n-- Found PythonInterp: /usr/bin/python (found suitable version \"2.7.14\", minimum required is \"2.7\")<br>\n-- Found PythonLibs: /usr/lib64/libpython2.7.so (found suitable version \"2.7.14\", minimum required is \"2.7\")<br>\n-- Found NumPy: /usr/lib64/python2.7/site-packages/numpy/core/include (found version \"1.14.3\")<br>\n-- NumPy ver. 1.14.3 found (include: /usr/lib64/python2.7/site-packages/numpy/core/include)<br>\n-- Found MPI_C: /usr/lib64/openmpi/lib/libmpi.so (found version \"3.1\")<br>\n-- Found MPI_CXX: /usr/lib64/openmpi/lib/libmpi_cxx.so (found version \"3.1\")<br>\n-- Found MPI: TRUE (found version \"3.1\")<br>\n-- MPI support found<br>\n-- MPI compile flags: -pthread<br>\n-- MPI include path: /usr/include/openmpi-x86_64<br>\n-- MPI LINK flags path: -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -pthread<br>\n-- MPI libraries: /usr/lib64/openmpi/lib/libmpi_cxx.so/usr/lib64/openmpi/lib/libmpi.so<br>\n-- Found OpenMP_C: -fopenmp (found version \"4.5\")<br>\n-- Found OpenMP_CXX: -fopenmp (found version \"4.5\")<br>\n-- Found OpenMP: TRUE (found version \"4.5\")<br>\n-- Adding -fopenmp<br>\n-- Found CUDA: /usr (found suitable version \"9.1\", minimum required is \"7.0\")<br>\n-- Found CUDNN: /usr/include/cuda<br>\n-- Caffe2: CUDA detected: 9.1<br>\n-- Found cuDNN: v7.1.3  (include: /usr/include/cuda, library: /usr/lib64/libcudnn.so)<br>\n-- Automatic GPU detection failed. Building for all known architectures.<br>\n-- Added CUDA NVCC flags for: sm_30 sm_35 sm_50 sm_52 sm_60 sm_61 sm_70<br>\n-- Could NOT find NCCL (missing: NCCL_INCLUDE_DIRS NCCL_LIBRARIES)<br>\n-- MPI include path: /usr/include/openmpi-x86_64<br>\n-- MPI libraries: /usr/lib64/openmpi/lib/libmpi_cxx.so/usr/lib64/openmpi/lib/libmpi.so<br>\n-- CUDA detected: 9.1<br>\n-- Found libcuda: /usr/lib64/libcuda.so<br>\n-- Found libnvrtc: /usr/lib64/libnvrtc.so<br>\n-- Found nccl: /home/shahriar/pytorch/third_party/nccl/build/include<br>\nCMake Warning at cmake/Dependencies.cmake:490 (message):<br>\nmobile opengl is only used in android or ios builds.<br>\nCall Stack (most recent call first):<br>\nCMakeLists.txt:109 (include)</p>\n<p>CMake Warning at cmake/Dependencies.cmake:566 (message):<br>\nMetal is only used in ios builds.<br>\nCall Stack (most recent call first):<br>\nCMakeLists.txt:109 (include)</p>\n<p>-- GCC 8.1.1: Adding gcc and gcc_s libs to link line<br>\n-- Include NCCL operators<br>\n-- Excluding ideep operators as we are not using ideep<br>\n-- Including image processing operators<br>\n-- Excluding video processing operators due to no opencv<br>\n-- Excluding mkl operators as we are not using mkl<br>\n-- Include Observer library<br>\n-- Using lib/python2.7/site-packages as python relative installation path<br>\n-- Automatically generating missing <strong>init</strong>.py files.<br>\nCMake Warning at CMakeLists.txt:228 (message):<br>\nGenerated cmake files are only fully tested if one builds with system glog,<br>\ngflags, and protobuf.  Other settings may generate files that are not well<br>\ntested.</p>\n<h2>--<br>\n-- ******** Summary ********<br>\n-- General:<br>\n--   CMake version         : 3.11.0<br>\n--   CMake command         : /usr/bin/cmake<br>\n--   Git version           : v0.1.11-8176-g604f907bc-dirty<br>\n--   System                : Linux<br>\n--   C++ compiler          : /usr/lib64/ccache/c++<br>\n--   C++ compiler version  : 8.1.1<br>\n--   BLAS                  : Eigen<br>\n--   CXX flags             :  -fvisibility-inlines-hidden -fopenmp -DONNX_NAMESPACE=onnx_c2 -O2 -fPIC -Wno-narrowing -Wno-invalid-partial-specialization<br>\n--   Build type            : Release<br>\n--   Compile definitions   :</h2>\n<p>--   BUILD_BINARY          : ON<br>\n--   BUILD_CUSTOM_PROTOBUF : ON<br>\n--     Link local protobuf : ON<br>\n--   BUILD_DOCS            : OFF<br>\n--   BUILD_PYTHON          : ON<br>\n--     Python version      : 2.7.14<br>\n--     Python includes     : /usr/include/python2.7<br>\n--   BUILD_SHARED_LIBS     : ON<br>\n--   BUILD_TEST            : ON<br>\n--   USE_ATEN              : OFF<br>\n--   USE_ASAN              : OFF<br>\n--   USE_CUDA              : ON<br>\n--     CUDA static link    : OFF<br>\n--     CUDA version        : 9.1<br>\n--     CuDNN version       : 7.1.3<br>\n--     CUDA root directory : /usr<br>\n--     CUDA library        : /usr/lib64/libcuda.so<br>\n--     cudart library      : /usr/lib64/libcudart_static.a;-pthread;dl;/usr/lib64/librt.so<br>\n--     cublas library      : /usr/lib64/libcublas.so;/usr/lib64/libcublas_device.a<br>\n--     curand library      : /usr/lib64/libcurand.so<br>\n--     CuDNN library       : /usr/lib64/libcudnn.so<br>\n--     nvrtc               : /usr/lib64/libnvrtc.so<br>\n--     CUDA include path   : /usr/include/cuda<br>\n--     NVCC executable     : /usr/bin/nvcc<br>\n--     CUDA host compiler  : /usr/bin/gcc53<br>\n--     USE_TENSORRT        : OFF<br>\n--   USE_EIGEN_FOR_BLAS    : 1<br>\n--   USE_FFMPEG            : OFF<br>\n--   USE_GFLAGS            : ON<br>\n--   USE_GLOG              : ON<br>\n--   USE_GLOO              : ON<br>\n--   USE_LEVELDB           : ON<br>\n--     LevelDB version     : 1.20<br>\n--     Snappy version      : 1.1.7<br>\n--   USE_LITE_PROTO        : OFF<br>\n--   USE_LMDB              : ON<br>\n--     LMDB version        : 0.9.22<br>\n--   USE_METAL             : OFF<br>\n--   USE_MKL               :<br>\n--   USE_MOBILE_OPENGL     : OFF<br>\n--   USE_MPI               : ON<br>\n--   USE_NCCL              : ON<br>\n--   USE_NERVANA_GPU       : OFF<br>\n--   USE_NNPACK            : ON<br>\n--   USE_OBSERVERS         : ON<br>\n--   USE_OPENCL            : OFF<br>\n--   USE_OPENCV            : ON<br>\n--     OpenCV version      : 3.4.1<br>\n--   USE_OPENMP            : ON<br>\n--   USE_PROF              : OFF<br>\n--   USE_REDIS             : OFF<br>\n--   USE_ROCKSDB           : OFF<br>\n--   USE_ZMQ               : OFF<br>\n-- Configuring done<br>\n-- Generating done<br>\n-- Build files have been written to: /home/shahriar/pytorch/build</p>\n<p>then I ran the command below to compile and install and it ran into a compile problem:<br>\nsudo make install</p>\n<p>Scanning dependencies of target nccl_external<br>\n[  0%] Creating directories for 'nccl_external'<br>\n[  0%] No download step for 'nccl_external'<br>\n[  0%] No patch step for 'nccl_external'<br>\n[  0%] No update step for 'nccl_external'<br>\n[  0%] No configure step for 'nccl_external'<br>\n[  0%] Performing build step for 'nccl_external'<br>\nCompiling src/libwrap.cu                      &gt; /home/shahriar/pytorch/third_party/nccl/build/obj/libwrap.o<br>\n/usr/include/c++/8/type_traits(1061): error: type name is not allowed</p>\n<p>/usr/include/c++/8/type_traits(1061): error: type name is not allowed</p>\n<p>/usr/include/c++/8/type_traits(1061): error: identifier \"__is_assignable\" is undefined</p>\n<p>/usr/include/c++/8/utility(311): error: pack expansion does not make use of any argument packs</p>\n<p>4 errors detected in the compilation of \"/tmp/tmpxft_00001145_00000000-12_libwrap.compute_70.cpp1.ii\".<br>\nmake[3]: *** [Makefile:138: /home/shahriar/pytorch/third_party/nccl/build/obj/libwrap.o] Error 1<br>\nmake[2]: *** [CMakeFiles/nccl_external.dir/build.make:111: nccl_external-prefix/src/nccl_external-stamp/nccl_external-build] Error 2<br>\nmake[1]: *** [CMakeFiles/Makefile2:68: CMakeFiles/nccl_external.dir/all] Error 2<br>\nmake: *** [Makefile:141: all] Error 2</p>\n<p>I am using fedora 28<br>\nI have compiled it before and it was fine. but when I upgraded from fedora 27 to 28 I ran into this problem.<br>\nI don't know if i'm right but I think that nccl can't be compiled with gcc 8. on fedora 27 i had gcc 7 and when I upgraded gcc 8 was installed.</p>", "body_text": "hi.I was compiling caffe2 and I ran into a problem. i ran the command below. you can see the results:\ncmake -DCUDA_HOST_COMPILER=/usr/bin/gcc53 -DUSE_OPENMP=ON -DMPI_C_COMPILER=/usr/lib64/openmpi/bin/mpicc -DMPI_CXX_COMPILER=/usr/lib64/openmpi/bin/mpicxx -DCMAKE_DISABLE_FIND_PACKAGE_Eigen3=TRUE -DCMAKE_DISABLE_FIND_PACKAGE_pybind11=TRUE -DCMAKE_DISABLE_FIND_PACKAGE_CUB=TRUE -DCMAKE_DISABLE_FIND_PACKAGE_Gloo=TRUE -DUSE_NATIVE_ARCH=ON ..\n-- The CXX compiler identification is GNU 8.1.1\n-- The C compiler identification is GNU 8.1.1\n-- Check for working CXX compiler: /usr/lib64/ccache/c++\n-- Check for working CXX compiler: /usr/lib64/ccache/c++ -- works\n-- Detecting CXX compiler ABI info\n-- Detecting CXX compiler ABI info - done\n-- Detecting CXX compile features\n-- Detecting CXX compile features - done\n-- Check for working C compiler: /usr/lib64/ccache/cc\n-- Check for working C compiler: /usr/lib64/ccache/cc -- works\n-- Detecting C compiler ABI info\n-- Detecting C compiler ABI info - done\n-- Detecting C compile features\n-- Detecting C compile features - done\n-- Performing Test CAFFE2_LONG_IS_INT32_OR_64\n-- Performing Test CAFFE2_LONG_IS_INT32_OR_64 - Success\n-- Does not need to define long separately.\n-- Performing Test CAFFE2_EXCEPTION_PTR_SUPPORTED\n-- Performing Test CAFFE2_EXCEPTION_PTR_SUPPORTED - Success\n-- std::exception_ptr is supported.\n-- Performing Test CAFFE2_IS_NUMA_AVAILABLE\n-- Performing Test CAFFE2_IS_NUMA_AVAILABLE - Success\n-- NUMA is available\n-- Performing Test CAFFE2_NEED_TO_TURN_OFF_DEPRECATION_WARNING\n-- Performing Test CAFFE2_NEED_TO_TURN_OFF_DEPRECATION_WARNING - Success\n-- Performing Test CAFFE2_COMPILER_SUPPORTS_AVX2_EXTENSIONS\n-- Performing Test CAFFE2_COMPILER_SUPPORTS_AVX2_EXTENSIONS - Success\n-- Current compiler supports avx2 extention. Will build perfkernels.\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_VISIBILITY\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_VISIBILITY - Success\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_INLINE_VISIBILITY\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_INLINE_VISIBILITY - Success\n-- Performing Test COMPILER_SUPPORTS_MARCH_NATIVE\n-- Performing Test COMPILER_SUPPORTS_MARCH_NATIVE - Success\n-- Build type not set - defaulting to Release\n-- Building using own protobuf under third_party per request.\n-- Use custom protobuf build.\n-- Looking for pthread.h\n-- Looking for pthread.h - found\n-- Looking for pthread_create\n-- Looking for pthread_create - not found\n-- Looking for pthread_create in pthreads\n-- Looking for pthread_create in pthreads - not found\n-- Looking for pthread_create in pthread\n-- Looking for pthread_create in pthread - found\n-- Found Threads: TRUE\n-- Caffe2 protobuf include directory: $<BUILD_INTERFACE:/home/shahriar/pytorch/third_party/protobuf/src>$<INSTALL_INTERFACE:include>\n-- Found Git: /usr/bin/git (found version \"2.17.0\")\n-- The BLAS backend of choice:Eigen\n-- Brace yourself, we are building NNPACK\n-- The ASM compiler identification is GNU\n-- Found assembler: /usr/lib64/ccache/cc\n-- Found PythonInterp: /usr/bin/python (found version \"2.7.14\")\n-- Check if compiler accepts -pthread\n-- Check if compiler accepts -pthread - yes\n-- Caffe2: Cannot find gflags automatically. Using legacy find.\n-- Found gflags: /usr/include\n-- Caffe2: Found gflags  (include: /usr/include, library: /usr/lib64/libgflags.so)\n-- Caffe2: Cannot find glog automatically. Using legacy find.\n-- Found glog: /usr/include\n-- Caffe2: Found glog (include: /usr/include, library: /usr/lib64/libglog.so)\n-- Failed to find LLVM FileCheck\n-- git Version: v0.0.0-dirty\n-- Version: 0.0.0\n-- Performing Test HAVE_CXX_FLAG_STD_CXX11\n-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success\n-- Performing Test HAVE_CXX_FLAG_WALL\n-- Performing Test HAVE_CXX_FLAG_WALL - Success\n-- Performing Test HAVE_CXX_FLAG_WEXTRA\n-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success\n-- Performing Test HAVE_CXX_FLAG_WSHADOW\n-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success\n-- Performing Test HAVE_CXX_FLAG_WERROR\n-- Performing Test HAVE_CXX_FLAG_WERROR - Success\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC - Success\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC_ERRORS\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC_ERRORS - Success\n-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32\n-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed\n-- Performing Test HAVE_CXX_FLAG_WFLOAT_EQUAL\n-- Performing Test HAVE_CXX_FLAG_WFLOAT_EQUAL - Success\n-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING\n-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success\n-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING\n-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success\n-- Performing Test HAVE_CXX_FLAG_WD654\n-- Performing Test HAVE_CXX_FLAG_WD654 - Failed\n-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY\n-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed\n-- Performing Test HAVE_CXX_FLAG_COVERAGE\n-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success\n-- Performing Test HAVE_STD_REGEX\n-- Performing Test HAVE_STD_REGEX\n-- Performing Test HAVE_STD_REGEX -- success\n-- Performing Test HAVE_GNU_POSIX_REGEX\n-- Performing Test HAVE_GNU_POSIX_REGEX\n-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile\n-- Performing Test HAVE_POSIX_REGEX\n-- Performing Test HAVE_POSIX_REGEX\n-- Performing Test HAVE_POSIX_REGEX -- success\n-- Performing Test HAVE_STEADY_CLOCK\n-- Performing Test HAVE_STEADY_CLOCK\n-- Performing Test HAVE_STEADY_CLOCK -- success\n-- Found LMDB: /usr/include\n-- Found lmdb    (include: /usr/include, library: /usr/lib64/liblmdb.so)\n-- Found LevelDB: /usr/include\n-- Found LevelDB (include: /usr/include, library: /usr/lib64/libleveldb.so)\n-- Found Snappy: /usr/include\n-- Found Snappy  (include: /usr/include, library: /usr/lib64/libsnappy.so)\n-- Found Numa: /usr/include\n-- Found Numa  (include: /usr/include, library: /usr/lib64/libnuma.so)\n-- OpenCV found (/usr/lib64/OpenCV)\n-- Did not find system Eigen. Using third party subdirectory.\n-- Found PythonInterp: /usr/bin/python (found suitable version \"2.7.14\", minimum required is \"2.7\")\n-- Found PythonLibs: /usr/lib64/libpython2.7.so (found suitable version \"2.7.14\", minimum required is \"2.7\")\n-- Found NumPy: /usr/lib64/python2.7/site-packages/numpy/core/include (found version \"1.14.3\")\n-- NumPy ver. 1.14.3 found (include: /usr/lib64/python2.7/site-packages/numpy/core/include)\n-- Found MPI_C: /usr/lib64/openmpi/lib/libmpi.so (found version \"3.1\")\n-- Found MPI_CXX: /usr/lib64/openmpi/lib/libmpi_cxx.so (found version \"3.1\")\n-- Found MPI: TRUE (found version \"3.1\")\n-- MPI support found\n-- MPI compile flags: -pthread\n-- MPI include path: /usr/include/openmpi-x86_64\n-- MPI LINK flags path: -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -pthread\n-- MPI libraries: /usr/lib64/openmpi/lib/libmpi_cxx.so/usr/lib64/openmpi/lib/libmpi.so\n-- Found OpenMP_C: -fopenmp (found version \"4.5\")\n-- Found OpenMP_CXX: -fopenmp (found version \"4.5\")\n-- Found OpenMP: TRUE (found version \"4.5\")\n-- Adding -fopenmp\n-- Found CUDA: /usr (found suitable version \"9.1\", minimum required is \"7.0\")\n-- Found CUDNN: /usr/include/cuda\n-- Caffe2: CUDA detected: 9.1\n-- Found cuDNN: v7.1.3  (include: /usr/include/cuda, library: /usr/lib64/libcudnn.so)\n-- Automatic GPU detection failed. Building for all known architectures.\n-- Added CUDA NVCC flags for: sm_30 sm_35 sm_50 sm_52 sm_60 sm_61 sm_70\n-- Could NOT find NCCL (missing: NCCL_INCLUDE_DIRS NCCL_LIBRARIES)\n-- MPI include path: /usr/include/openmpi-x86_64\n-- MPI libraries: /usr/lib64/openmpi/lib/libmpi_cxx.so/usr/lib64/openmpi/lib/libmpi.so\n-- CUDA detected: 9.1\n-- Found libcuda: /usr/lib64/libcuda.so\n-- Found libnvrtc: /usr/lib64/libnvrtc.so\n-- Found nccl: /home/shahriar/pytorch/third_party/nccl/build/include\nCMake Warning at cmake/Dependencies.cmake:490 (message):\nmobile opengl is only used in android or ios builds.\nCall Stack (most recent call first):\nCMakeLists.txt:109 (include)\nCMake Warning at cmake/Dependencies.cmake:566 (message):\nMetal is only used in ios builds.\nCall Stack (most recent call first):\nCMakeLists.txt:109 (include)\n-- GCC 8.1.1: Adding gcc and gcc_s libs to link line\n-- Include NCCL operators\n-- Excluding ideep operators as we are not using ideep\n-- Including image processing operators\n-- Excluding video processing operators due to no opencv\n-- Excluding mkl operators as we are not using mkl\n-- Include Observer library\n-- Using lib/python2.7/site-packages as python relative installation path\n-- Automatically generating missing init.py files.\nCMake Warning at CMakeLists.txt:228 (message):\nGenerated cmake files are only fully tested if one builds with system glog,\ngflags, and protobuf.  Other settings may generate files that are not well\ntested.\n--\n-- ******** Summary ********\n-- General:\n--   CMake version         : 3.11.0\n--   CMake command         : /usr/bin/cmake\n--   Git version           : v0.1.11-8176-g604f907bc-dirty\n--   System                : Linux\n--   C++ compiler          : /usr/lib64/ccache/c++\n--   C++ compiler version  : 8.1.1\n--   BLAS                  : Eigen\n--   CXX flags             :  -fvisibility-inlines-hidden -fopenmp -DONNX_NAMESPACE=onnx_c2 -O2 -fPIC -Wno-narrowing -Wno-invalid-partial-specialization\n--   Build type            : Release\n--   Compile definitions   :\n--   BUILD_BINARY          : ON\n--   BUILD_CUSTOM_PROTOBUF : ON\n--     Link local protobuf : ON\n--   BUILD_DOCS            : OFF\n--   BUILD_PYTHON          : ON\n--     Python version      : 2.7.14\n--     Python includes     : /usr/include/python2.7\n--   BUILD_SHARED_LIBS     : ON\n--   BUILD_TEST            : ON\n--   USE_ATEN              : OFF\n--   USE_ASAN              : OFF\n--   USE_CUDA              : ON\n--     CUDA static link    : OFF\n--     CUDA version        : 9.1\n--     CuDNN version       : 7.1.3\n--     CUDA root directory : /usr\n--     CUDA library        : /usr/lib64/libcuda.so\n--     cudart library      : /usr/lib64/libcudart_static.a;-pthread;dl;/usr/lib64/librt.so\n--     cublas library      : /usr/lib64/libcublas.so;/usr/lib64/libcublas_device.a\n--     curand library      : /usr/lib64/libcurand.so\n--     CuDNN library       : /usr/lib64/libcudnn.so\n--     nvrtc               : /usr/lib64/libnvrtc.so\n--     CUDA include path   : /usr/include/cuda\n--     NVCC executable     : /usr/bin/nvcc\n--     CUDA host compiler  : /usr/bin/gcc53\n--     USE_TENSORRT        : OFF\n--   USE_EIGEN_FOR_BLAS    : 1\n--   USE_FFMPEG            : OFF\n--   USE_GFLAGS            : ON\n--   USE_GLOG              : ON\n--   USE_GLOO              : ON\n--   USE_LEVELDB           : ON\n--     LevelDB version     : 1.20\n--     Snappy version      : 1.1.7\n--   USE_LITE_PROTO        : OFF\n--   USE_LMDB              : ON\n--     LMDB version        : 0.9.22\n--   USE_METAL             : OFF\n--   USE_MKL               :\n--   USE_MOBILE_OPENGL     : OFF\n--   USE_MPI               : ON\n--   USE_NCCL              : ON\n--   USE_NERVANA_GPU       : OFF\n--   USE_NNPACK            : ON\n--   USE_OBSERVERS         : ON\n--   USE_OPENCL            : OFF\n--   USE_OPENCV            : ON\n--     OpenCV version      : 3.4.1\n--   USE_OPENMP            : ON\n--   USE_PROF              : OFF\n--   USE_REDIS             : OFF\n--   USE_ROCKSDB           : OFF\n--   USE_ZMQ               : OFF\n-- Configuring done\n-- Generating done\n-- Build files have been written to: /home/shahriar/pytorch/build\nthen I ran the command below to compile and install and it ran into a compile problem:\nsudo make install\nScanning dependencies of target nccl_external\n[  0%] Creating directories for 'nccl_external'\n[  0%] No download step for 'nccl_external'\n[  0%] No patch step for 'nccl_external'\n[  0%] No update step for 'nccl_external'\n[  0%] No configure step for 'nccl_external'\n[  0%] Performing build step for 'nccl_external'\nCompiling src/libwrap.cu                      > /home/shahriar/pytorch/third_party/nccl/build/obj/libwrap.o\n/usr/include/c++/8/type_traits(1061): error: type name is not allowed\n/usr/include/c++/8/type_traits(1061): error: type name is not allowed\n/usr/include/c++/8/type_traits(1061): error: identifier \"__is_assignable\" is undefined\n/usr/include/c++/8/utility(311): error: pack expansion does not make use of any argument packs\n4 errors detected in the compilation of \"/tmp/tmpxft_00001145_00000000-12_libwrap.compute_70.cpp1.ii\".\nmake[3]: *** [Makefile:138: /home/shahriar/pytorch/third_party/nccl/build/obj/libwrap.o] Error 1\nmake[2]: *** [CMakeFiles/nccl_external.dir/build.make:111: nccl_external-prefix/src/nccl_external-stamp/nccl_external-build] Error 2\nmake[1]: *** [CMakeFiles/Makefile2:68: CMakeFiles/nccl_external.dir/all] Error 2\nmake: *** [Makefile:141: all] Error 2\nI am using fedora 28\nI have compiled it before and it was fine. but when I upgraded from fedora 27 to 28 I ran into this problem.\nI don't know if i'm right but I think that nccl can't be compiled with gcc 8. on fedora 27 i had gcc 7 and when I upgraded gcc 8 was installed.", "body": "hi.I was compiling caffe2 and I ran into a problem. i ran the command below. you can see the results:\r\n\r\ncmake -DCUDA_HOST_COMPILER=/usr/bin/gcc53 -DUSE_OPENMP=ON -DMPI_C_COMPILER=/usr/lib64/openmpi/bin/mpicc -DMPI_CXX_COMPILER=/usr/lib64/openmpi/bin/mpicxx -DCMAKE_DISABLE_FIND_PACKAGE_Eigen3=TRUE -DCMAKE_DISABLE_FIND_PACKAGE_pybind11=TRUE -DCMAKE_DISABLE_FIND_PACKAGE_CUB=TRUE -DCMAKE_DISABLE_FIND_PACKAGE_Gloo=TRUE -DUSE_NATIVE_ARCH=ON .. \r\n\r\n-- The CXX compiler identification is GNU 8.1.1\r\n-- The C compiler identification is GNU 8.1.1\r\n-- Check for working CXX compiler: /usr/lib64/ccache/c++\r\n-- Check for working CXX compiler: /usr/lib64/ccache/c++ -- works\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\n-- Detecting CXX compile features\r\n-- Detecting CXX compile features - done\r\n-- Check for working C compiler: /usr/lib64/ccache/cc\r\n-- Check for working C compiler: /usr/lib64/ccache/cc -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Performing Test CAFFE2_LONG_IS_INT32_OR_64\r\n-- Performing Test CAFFE2_LONG_IS_INT32_OR_64 - Success\r\n-- Does not need to define long separately.\r\n-- Performing Test CAFFE2_EXCEPTION_PTR_SUPPORTED\r\n-- Performing Test CAFFE2_EXCEPTION_PTR_SUPPORTED - Success\r\n-- std::exception_ptr is supported.\r\n-- Performing Test CAFFE2_IS_NUMA_AVAILABLE\r\n-- Performing Test CAFFE2_IS_NUMA_AVAILABLE - Success\r\n-- NUMA is available\r\n-- Performing Test CAFFE2_NEED_TO_TURN_OFF_DEPRECATION_WARNING\r\n-- Performing Test CAFFE2_NEED_TO_TURN_OFF_DEPRECATION_WARNING - Success\r\n-- Performing Test CAFFE2_COMPILER_SUPPORTS_AVX2_EXTENSIONS\r\n-- Performing Test CAFFE2_COMPILER_SUPPORTS_AVX2_EXTENSIONS - Success\r\n-- Current compiler supports avx2 extention. Will build perfkernels.\r\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_VISIBILITY\r\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_VISIBILITY - Success\r\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_INLINE_VISIBILITY\r\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_INLINE_VISIBILITY - Success\r\n-- Performing Test COMPILER_SUPPORTS_MARCH_NATIVE\r\n-- Performing Test COMPILER_SUPPORTS_MARCH_NATIVE - Success\r\n-- Build type not set - defaulting to Release\r\n-- Building using own protobuf under third_party per request.\r\n-- Use custom protobuf build.\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Looking for pthread_create\r\n-- Looking for pthread_create - not found\r\n-- Looking for pthread_create in pthreads\r\n-- Looking for pthread_create in pthreads - not found\r\n-- Looking for pthread_create in pthread\r\n-- Looking for pthread_create in pthread - found\r\n-- Found Threads: TRUE  \r\n-- Caffe2 protobuf include directory: $<BUILD_INTERFACE:/home/shahriar/pytorch/third_party/protobuf/src>$<INSTALL_INTERFACE:include>\r\n-- Found Git: /usr/bin/git (found version \"2.17.0\") \r\n-- The BLAS backend of choice:Eigen\r\n-- Brace yourself, we are building NNPACK\r\n-- The ASM compiler identification is GNU\r\n-- Found assembler: /usr/lib64/ccache/cc\r\n-- Found PythonInterp: /usr/bin/python (found version \"2.7.14\") \r\n-- Check if compiler accepts -pthread\r\n-- Check if compiler accepts -pthread - yes\r\n-- Caffe2: Cannot find gflags automatically. Using legacy find.\r\n-- Found gflags: /usr/include  \r\n-- Caffe2: Found gflags  (include: /usr/include, library: /usr/lib64/libgflags.so)\r\n-- Caffe2: Cannot find glog automatically. Using legacy find.\r\n-- Found glog: /usr/include  \r\n-- Caffe2: Found glog (include: /usr/include, library: /usr/lib64/libglog.so)\r\n-- Failed to find LLVM FileCheck\r\n-- git Version: v0.0.0-dirty\r\n-- Version: 0.0.0\r\n-- Performing Test HAVE_CXX_FLAG_STD_CXX11\r\n-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success\r\n-- Performing Test HAVE_CXX_FLAG_WALL\r\n-- Performing Test HAVE_CXX_FLAG_WALL - Success\r\n-- Performing Test HAVE_CXX_FLAG_WEXTRA\r\n-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success\r\n-- Performing Test HAVE_CXX_FLAG_WSHADOW\r\n-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success\r\n-- Performing Test HAVE_CXX_FLAG_WERROR\r\n-- Performing Test HAVE_CXX_FLAG_WERROR - Success\r\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC\r\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC - Success\r\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC_ERRORS\r\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC_ERRORS - Success\r\n-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32\r\n-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed\r\n-- Performing Test HAVE_CXX_FLAG_WFLOAT_EQUAL\r\n-- Performing Test HAVE_CXX_FLAG_WFLOAT_EQUAL - Success\r\n-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING\r\n-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success\r\n-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING\r\n-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success\r\n-- Performing Test HAVE_CXX_FLAG_WD654\r\n-- Performing Test HAVE_CXX_FLAG_WD654 - Failed\r\n-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY\r\n-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed\r\n-- Performing Test HAVE_CXX_FLAG_COVERAGE\r\n-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success\r\n-- Performing Test HAVE_STD_REGEX\r\n-- Performing Test HAVE_STD_REGEX\r\n-- Performing Test HAVE_STD_REGEX -- success\r\n-- Performing Test HAVE_GNU_POSIX_REGEX\r\n-- Performing Test HAVE_GNU_POSIX_REGEX\r\n-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile\r\n-- Performing Test HAVE_POSIX_REGEX\r\n-- Performing Test HAVE_POSIX_REGEX\r\n-- Performing Test HAVE_POSIX_REGEX -- success\r\n-- Performing Test HAVE_STEADY_CLOCK\r\n-- Performing Test HAVE_STEADY_CLOCK\r\n-- Performing Test HAVE_STEADY_CLOCK -- success\r\n-- Found LMDB: /usr/include  \r\n-- Found lmdb    (include: /usr/include, library: /usr/lib64/liblmdb.so)\r\n-- Found LevelDB: /usr/include  \r\n-- Found LevelDB (include: /usr/include, library: /usr/lib64/libleveldb.so)\r\n-- Found Snappy: /usr/include  \r\n-- Found Snappy  (include: /usr/include, library: /usr/lib64/libsnappy.so)\r\n-- Found Numa: /usr/include  \r\n-- Found Numa  (include: /usr/include, library: /usr/lib64/libnuma.so)\r\n-- OpenCV found (/usr/lib64/OpenCV)\r\n-- Did not find system Eigen. Using third party subdirectory.\r\n-- Found PythonInterp: /usr/bin/python (found suitable version \"2.7.14\", minimum required is \"2.7\") \r\n-- Found PythonLibs: /usr/lib64/libpython2.7.so (found suitable version \"2.7.14\", minimum required is \"2.7\") \r\n-- Found NumPy: /usr/lib64/python2.7/site-packages/numpy/core/include (found version \"1.14.3\") \r\n-- NumPy ver. 1.14.3 found (include: /usr/lib64/python2.7/site-packages/numpy/core/include)\r\n-- Found MPI_C: /usr/lib64/openmpi/lib/libmpi.so (found version \"3.1\") \r\n-- Found MPI_CXX: /usr/lib64/openmpi/lib/libmpi_cxx.so (found version \"3.1\") \r\n-- Found MPI: TRUE (found version \"3.1\")  \r\n-- MPI support found\r\n-- MPI compile flags: -pthread\r\n-- MPI include path: /usr/include/openmpi-x86_64\r\n-- MPI LINK flags path: -Wl,-rpath -Wl,/usr/lib64/openmpi/lib -Wl,--enable-new-dtags -pthread\r\n-- MPI libraries: /usr/lib64/openmpi/lib/libmpi_cxx.so/usr/lib64/openmpi/lib/libmpi.so\r\n-- Found OpenMP_C: -fopenmp (found version \"4.5\") \r\n-- Found OpenMP_CXX: -fopenmp (found version \"4.5\") \r\n-- Found OpenMP: TRUE (found version \"4.5\")  \r\n-- Adding -fopenmp\r\n-- Found CUDA: /usr (found suitable version \"9.1\", minimum required is \"7.0\") \r\n-- Found CUDNN: /usr/include/cuda  \r\n-- Caffe2: CUDA detected: 9.1\r\n-- Found cuDNN: v7.1.3  (include: /usr/include/cuda, library: /usr/lib64/libcudnn.so)\r\n-- Automatic GPU detection failed. Building for all known architectures.\r\n-- Added CUDA NVCC flags for: sm_30 sm_35 sm_50 sm_52 sm_60 sm_61 sm_70\r\n-- Could NOT find NCCL (missing: NCCL_INCLUDE_DIRS NCCL_LIBRARIES) \r\n-- MPI include path: /usr/include/openmpi-x86_64\r\n-- MPI libraries: /usr/lib64/openmpi/lib/libmpi_cxx.so/usr/lib64/openmpi/lib/libmpi.so\r\n-- CUDA detected: 9.1\r\n-- Found libcuda: /usr/lib64/libcuda.so\r\n-- Found libnvrtc: /usr/lib64/libnvrtc.so\r\n-- Found nccl: /home/shahriar/pytorch/third_party/nccl/build/include  \r\nCMake Warning at cmake/Dependencies.cmake:490 (message):\r\n  mobile opengl is only used in android or ios builds.\r\nCall Stack (most recent call first):\r\n  CMakeLists.txt:109 (include)\r\n\r\n\r\nCMake Warning at cmake/Dependencies.cmake:566 (message):\r\n  Metal is only used in ios builds.\r\nCall Stack (most recent call first):\r\n  CMakeLists.txt:109 (include)\r\n\r\n\r\n-- GCC 8.1.1: Adding gcc and gcc_s libs to link line\r\n-- Include NCCL operators\r\n-- Excluding ideep operators as we are not using ideep\r\n-- Including image processing operators\r\n-- Excluding video processing operators due to no opencv\r\n-- Excluding mkl operators as we are not using mkl\r\n-- Include Observer library\r\n-- Using lib/python2.7/site-packages as python relative installation path\r\n-- Automatically generating missing __init__.py files.\r\nCMake Warning at CMakeLists.txt:228 (message):\r\n  Generated cmake files are only fully tested if one builds with system glog,\r\n  gflags, and protobuf.  Other settings may generate files that are not well\r\n  tested.\r\n\r\n\r\n-- \r\n-- ******** Summary ********\r\n-- General:\r\n--   CMake version         : 3.11.0\r\n--   CMake command         : /usr/bin/cmake\r\n--   Git version           : v0.1.11-8176-g604f907bc-dirty\r\n--   System                : Linux\r\n--   C++ compiler          : /usr/lib64/ccache/c++\r\n--   C++ compiler version  : 8.1.1\r\n--   BLAS                  : Eigen\r\n--   CXX flags             :  -fvisibility-inlines-hidden -fopenmp -DONNX_NAMESPACE=onnx_c2 -O2 -fPIC -Wno-narrowing -Wno-invalid-partial-specialization\r\n--   Build type            : Release\r\n--   Compile definitions   : \r\n-- \r\n--   BUILD_BINARY          : ON\r\n--   BUILD_CUSTOM_PROTOBUF : ON\r\n--     Link local protobuf : ON\r\n--   BUILD_DOCS            : OFF\r\n--   BUILD_PYTHON          : ON\r\n--     Python version      : 2.7.14\r\n--     Python includes     : /usr/include/python2.7\r\n--   BUILD_SHARED_LIBS     : ON\r\n--   BUILD_TEST            : ON\r\n--   USE_ATEN              : OFF\r\n--   USE_ASAN              : OFF\r\n--   USE_CUDA              : ON\r\n--     CUDA static link    : OFF\r\n--     CUDA version        : 9.1\r\n--     CuDNN version       : 7.1.3\r\n--     CUDA root directory : /usr\r\n--     CUDA library        : /usr/lib64/libcuda.so\r\n--     cudart library      : /usr/lib64/libcudart_static.a;-pthread;dl;/usr/lib64/librt.so\r\n--     cublas library      : /usr/lib64/libcublas.so;/usr/lib64/libcublas_device.a\r\n--     curand library      : /usr/lib64/libcurand.so\r\n--     CuDNN library       : /usr/lib64/libcudnn.so\r\n--     nvrtc               : /usr/lib64/libnvrtc.so\r\n--     CUDA include path   : /usr/include/cuda\r\n--     NVCC executable     : /usr/bin/nvcc\r\n--     CUDA host compiler  : /usr/bin/gcc53\r\n--     USE_TENSORRT        : OFF\r\n--   USE_EIGEN_FOR_BLAS    : 1\r\n--   USE_FFMPEG            : OFF\r\n--   USE_GFLAGS            : ON\r\n--   USE_GLOG              : ON\r\n--   USE_GLOO              : ON\r\n--   USE_LEVELDB           : ON\r\n--     LevelDB version     : 1.20\r\n--     Snappy version      : 1.1.7\r\n--   USE_LITE_PROTO        : OFF\r\n--   USE_LMDB              : ON\r\n--     LMDB version        : 0.9.22\r\n--   USE_METAL             : OFF\r\n--   USE_MKL               : \r\n--   USE_MOBILE_OPENGL     : OFF\r\n--   USE_MPI               : ON\r\n--   USE_NCCL              : ON\r\n--   USE_NERVANA_GPU       : OFF\r\n--   USE_NNPACK            : ON\r\n--   USE_OBSERVERS         : ON\r\n--   USE_OPENCL            : OFF\r\n--   USE_OPENCV            : ON\r\n--     OpenCV version      : 3.4.1\r\n--   USE_OPENMP            : ON\r\n--   USE_PROF              : OFF\r\n--   USE_REDIS             : OFF\r\n--   USE_ROCKSDB           : OFF\r\n--   USE_ZMQ               : OFF\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /home/shahriar/pytorch/build\r\n\r\n\r\nthen I ran the command below to compile and install and it ran into a compile problem:\r\nsudo make install\r\n\r\nScanning dependencies of target nccl_external\r\n[  0%] Creating directories for 'nccl_external'\r\n[  0%] No download step for 'nccl_external'\r\n[  0%] No patch step for 'nccl_external'\r\n[  0%] No update step for 'nccl_external'\r\n[  0%] No configure step for 'nccl_external'\r\n[  0%] Performing build step for 'nccl_external'\r\nCompiling src/libwrap.cu                      > /home/shahriar/pytorch/third_party/nccl/build/obj/libwrap.o\r\n/usr/include/c++/8/type_traits(1061): error: type name is not allowed\r\n\r\n/usr/include/c++/8/type_traits(1061): error: type name is not allowed\r\n\r\n/usr/include/c++/8/type_traits(1061): error: identifier \"__is_assignable\" is undefined\r\n\r\n/usr/include/c++/8/utility(311): error: pack expansion does not make use of any argument packs\r\n\r\n4 errors detected in the compilation of \"/tmp/tmpxft_00001145_00000000-12_libwrap.compute_70.cpp1.ii\".\r\nmake[3]: *** [Makefile:138: /home/shahriar/pytorch/third_party/nccl/build/obj/libwrap.o] Error 1\r\nmake[2]: *** [CMakeFiles/nccl_external.dir/build.make:111: nccl_external-prefix/src/nccl_external-stamp/nccl_external-build] Error 2\r\nmake[1]: *** [CMakeFiles/Makefile2:68: CMakeFiles/nccl_external.dir/all] Error 2\r\nmake: *** [Makefile:141: all] Error 2\r\n\r\n\r\nI am using fedora 28\r\nI have compiled it before and it was fine. but when I upgraded from fedora 27 to 28 I ran into this problem.\r\nI don't know if i'm right but I think that nccl can't be compiled with gcc 8. on fedora 27 i had gcc 7 and when I upgraded gcc 8 was installed."}