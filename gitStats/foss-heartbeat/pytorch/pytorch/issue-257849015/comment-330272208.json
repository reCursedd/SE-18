{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/330272208", "html_url": "https://github.com/pytorch/pytorch/issues/2740#issuecomment-330272208", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2740", "id": 330272208, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDI3MjIwOA==", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-18T16:07:59Z", "updated_at": "2017-09-18T16:07:59Z", "author_association": "MEMBER", "body_html": "<p>I think it would be good to change <code>uniform_</code> and <code>torch.rand</code> to return in the <code>[0, 1)</code> range. As <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1454551\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/janchorowski\">@janchorowski</a> pointed out, this is the convention for most random number APIs including Python, NumPy, C++11, Java, Go, and Julia.</p>\n<p>R and MATLAB use the <code>(0, 1)</code> range.</p>", "body_text": "I think it would be good to change uniform_ and torch.rand to return in the [0, 1) range. As @janchorowski pointed out, this is the convention for most random number APIs including Python, NumPy, C++11, Java, Go, and Julia.\nR and MATLAB use the (0, 1) range.", "body": "I think it would be good to change `uniform_` and `torch.rand` to return in the `[0, 1)` range. As @janchorowski pointed out, this is the convention for most random number APIs including Python, NumPy, C++11, Java, Go, and Julia.\r\n\r\nR and MATLAB use the `(0, 1)` range. \r\n\r\n"}