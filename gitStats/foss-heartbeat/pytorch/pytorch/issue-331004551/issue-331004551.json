{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8322", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8322/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8322/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8322/events", "html_url": "https://github.com/pytorch/pytorch/pull/8322", "id": 331004551, "node_id": "MDExOlB1bGxSZXF1ZXN0MTkzODQ3NzU4", "number": 8322, "title": "Implements volumetric (5d) affine grid generation.", "user": {"login": "elistevens", "id": 138016, "node_id": "MDQ6VXNlcjEzODAxNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/138016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elistevens", "html_url": "https://github.com/elistevens", "followers_url": "https://api.github.com/users/elistevens/followers", "following_url": "https://api.github.com/users/elistevens/following{/other_user}", "gists_url": "https://api.github.com/users/elistevens/gists{/gist_id}", "starred_url": "https://api.github.com/users/elistevens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elistevens/subscriptions", "organizations_url": "https://api.github.com/users/elistevens/orgs", "repos_url": "https://api.github.com/users/elistevens/repos", "events_url": "https://api.github.com/users/elistevens/events{/privacy}", "received_events_url": "https://api.github.com/users/elistevens/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 545367190, "node_id": "MDU6TGFiZWw1NDUzNjcxOTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/awaiting%20response", "name": "awaiting response", "color": "5319e7", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2018-06-10T21:35:19Z", "updated_at": "2018-11-23T15:49:23Z", "closed_at": "2018-08-15T18:03:26Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/8322", "html_url": "https://github.com/pytorch/pytorch/pull/8322", "diff_url": "https://github.com/pytorch/pytorch/pull/8322.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/8322.patch"}, "body_html": "<p>I've implemented affine grid generation for volumetric (5d) inputs. The implementation is based off of the spatial implementation, extended by one dimension. I have a few questions about my implementation vs. the existing one that I will add inline.</p>\n<p>I have some extensive test cases for the forward pass here: <a href=\"https://gist.github.com/elistevens/6e3bfb20d8d0652b83bd16b3e911285b\">https://gist.github.com/elistevens/6e3bfb20d8d0652b83bd16b3e911285b</a> However, they use <code>pytest.fixture</code> extensively, so I'm not sure the best way to incorporate them into the pytorch test suite. Suggestions? I have not tested backwards at all.</p>\n<p>Diff probably best viewed with whitespace changes ignored.</p>\n<p>Thanks for considering!</p>", "body_text": "I've implemented affine grid generation for volumetric (5d) inputs. The implementation is based off of the spatial implementation, extended by one dimension. I have a few questions about my implementation vs. the existing one that I will add inline.\nI have some extensive test cases for the forward pass here: https://gist.github.com/elistevens/6e3bfb20d8d0652b83bd16b3e911285b However, they use pytest.fixture extensively, so I'm not sure the best way to incorporate them into the pytorch test suite. Suggestions? I have not tested backwards at all.\nDiff probably best viewed with whitespace changes ignored.\nThanks for considering!", "body": "I've implemented affine grid generation for volumetric (5d) inputs. The implementation is based off of the spatial implementation, extended by one dimension. I have a few questions about my implementation vs. the existing one that I will add inline.\r\n\r\nI have some extensive test cases for the forward pass here: https://gist.github.com/elistevens/6e3bfb20d8d0652b83bd16b3e911285b However, they use `pytest.fixture` extensively, so I'm not sure the best way to incorporate them into the pytorch test suite. Suggestions? I have not tested backwards at all.\r\n\r\nDiff probably best viewed with whitespace changes ignored.\r\n\r\nThanks for considering!"}