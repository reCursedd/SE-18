{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/420326343", "html_url": "https://github.com/pytorch/pytorch/issues/11518#issuecomment-420326343", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11518", "id": 420326343, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDMyNjM0Mw==", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-11T16:01:31Z", "updated_at": "2018-09-11T16:01:31Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=36192189\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jeff-hawke\">@jeff-hawke</a> as a workaround, you can do this:</p>\n<pre><code>TORCH_CUDA_ARCH_LIST=\"6.1;6.2\" python setup.py install\n</code></pre>\n<p>That skips detection entirely and uses the provided architecture values.</p>", "body_text": "@jeff-hawke as a workaround, you can do this:\nTORCH_CUDA_ARCH_LIST=\"6.1;6.2\" python setup.py install\n\nThat skips detection entirely and uses the provided architecture values.", "body": "@jeff-hawke as a workaround, you can do this:\r\n\r\n```\r\nTORCH_CUDA_ARCH_LIST=\"6.1;6.2\" python setup.py install\r\n```\r\n\r\nThat skips detection entirely and uses the provided architecture values."}