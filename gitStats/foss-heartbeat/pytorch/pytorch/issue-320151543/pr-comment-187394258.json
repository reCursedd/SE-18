{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/187394258", "pull_request_review_id": 119166489, "id": 187394258, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzM5NDI1OA==", "diff_hunk": "@@ -45,20 +57,44 @@ class AT_API Context {\n     return *generator;\n   }\n   bool hasMKL() const;\n-  bool hasCUDA() const;\n-  int64_t current_device() const;\n+  bool hasCUDA() const {\n+    return detail::getCUDAHooks().hasCUDA();\n+  }\n+  bool hasCuDNN() const {\n+    return detail::getCUDAHooks().hasCuDNN();\n+  }\n+  int64_t current_device() const {\n+    return detail::getCUDAHooks().current_device();\n+  }\n   // defined in header so that getType has ability to inline\n   // call_once check. getType is called fairly frequently\n   THCState* lazyInitCUDA() {\n     std::call_once(thc_init,[&] {\n-      doInitCUDA();\n+      thc_state = detail::getCUDAHooks().initCUDA();\n+      generator_registry[static_cast<int>(Backend::CUDA)] =\n+        detail::getCUDAHooks().initCUDAGenerator(this);", "path": "aten/src/ATen/Context.h", "position": 68, "original_position": 68, "commit_id": "eb6abd0bc078c77e3ea4f1e8909d2ed494d365b3", "original_commit_id": "eb6abd0bc078c77e3ea4f1e8909d2ed494d365b3", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Can you make sure that this patch doesn't make us initialize the context on a wrong GPU?", "created_at": "2018-05-10T17:07:01Z", "updated_at": "2018-11-23T15:43:54Z", "html_url": "https://github.com/pytorch/pytorch/pull/7275#discussion_r187394258", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7275", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/187394258"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7275#discussion_r187394258"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7275"}}, "body_html": "<p>Can you make sure that this patch doesn't make us initialize the context on a wrong GPU?</p>", "body_text": "Can you make sure that this patch doesn't make us initialize the context on a wrong GPU?"}