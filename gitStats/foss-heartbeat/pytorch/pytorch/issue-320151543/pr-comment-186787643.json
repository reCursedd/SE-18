{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/186787643", "pull_request_review_id": 118429901, "id": 186787643, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Njc4NzY0Mw==", "diff_hunk": "@@ -44,29 +43,23 @@ Tensor batch_norm(\n   }\n \n   bool use_cudnn = false;\n-#if AT_CUDNN_ENABLED()\n   use_cudnn = (input.type().is_cuda()\n                && (input.type().scalarType() != at::kHalf\n                  || weight.type().scalarType() == at::kFloat)\n                && weight.defined() && bias.defined()\n                && ((running_mean.defined() && running_var.defined())\n                  || (!running_mean.defined() && !running_var.defined() && training))\n                && input.size(0) <= 131070\n-               && cudnn_enabled && CUDNN_VERSION >= 5110L);\n-#else\n-  // avoid unused parameter warning\n-  (void)use_cudnn;\n-  (void)cudnn_enabled;\n-#endif\n-\n-#if AT_CUDNN_ENABLED()\n-  if (use_cudnn && eps >= CUDNN_BN_MIN_EPSILON) {\n+               && detail::getCUDAHooks().compiledWithCuDNN()\n+               && cudnn_enabled && detail::getCUDAHooks().versionCuDNN() >= 5110L);\n+\n+  if (use_cudnn && eps >= detail::getCUDAHooks().batchnormMinEpsilonCuDNN()) {\n     return std::get<0>(at::cudnn_batch_norm(", "path": "aten/src/ATen/native/Normalization.cpp", "position": 39, "original_position": 39, "commit_id": "eb6abd0bc078c77e3ea4f1e8909d2ed494d365b3", "original_commit_id": "241f08d67e60910713b5c77eb16f6dac726cece2", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Actually how does that work? Will dynamically loading `ATen_cuda` magically change this symbol? Or do we depend on lazy binding to make sure that this path will simply never be taken if `ATen_cuda` is not loaded, and won't cause missing symbol errors because of that?", "created_at": "2018-05-08T16:26:04Z", "updated_at": "2018-11-23T15:43:41Z", "html_url": "https://github.com/pytorch/pytorch/pull/7275#discussion_r186787643", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7275", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/186787643"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7275#discussion_r186787643"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7275"}}, "body_html": "<p>Actually how does that work? Will dynamically loading <code>ATen_cuda</code> magically change this symbol? Or do we depend on lazy binding to make sure that this path will simply never be taken if <code>ATen_cuda</code> is not loaded, and won't cause missing symbol errors because of that?</p>", "body_text": "Actually how does that work? Will dynamically loading ATen_cuda magically change this symbol? Or do we depend on lazy binding to make sure that this path will simply never be taken if ATen_cuda is not loaded, and won't cause missing symbol errors because of that?"}