{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/378575586", "html_url": "https://github.com/pytorch/pytorch/pull/6110#issuecomment-378575586", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6110", "id": 378575586, "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODU3NTU4Ng==", "user": {"login": "t-vi", "id": 20787943, "node_id": "MDQ6VXNlcjIwNzg3OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/20787943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-vi", "html_url": "https://github.com/t-vi", "followers_url": "https://api.github.com/users/t-vi/followers", "following_url": "https://api.github.com/users/t-vi/following{/other_user}", "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions", "organizations_url": "https://api.github.com/users/t-vi/orgs", "repos_url": "https://api.github.com/users/t-vi/repos", "events_url": "https://api.github.com/users/t-vi/events{/privacy}", "received_events_url": "https://api.github.com/users/t-vi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-04T12:01:05Z", "updated_at": "2018-04-04T12:01:05Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Yes, thank you!<br>\nJust a quick update: I have a version working that uses a generic trilinear routine.<br>\nFor the model case of batch=50, out_features=300, left/right_features=100 and 200, I get a slowdown to 22msec vs. 12msec on CPU. This gets better with larger left/right feature size, but I must admit that it is not as nice as I would like. The memory characteristics are good as in intermediate matrices only have two of the above dimensions.<br>\nThe code currently uses one of the einsum building blocks as a black bock, quite likely, making that explicit again helps for the speed.</p>\n<p>Depending on your plans, I could provide a version as is or wait until the slowdown gets smaller.</p>", "body_text": "Yes, thank you!\nJust a quick update: I have a version working that uses a generic trilinear routine.\nFor the model case of batch=50, out_features=300, left/right_features=100 and 200, I get a slowdown to 22msec vs. 12msec on CPU. This gets better with larger left/right feature size, but I must admit that it is not as nice as I would like. The memory characteristics are good as in intermediate matrices only have two of the above dimensions.\nThe code currently uses one of the einsum building blocks as a black bock, quite likely, making that explicit again helps for the speed.\nDepending on your plans, I could provide a version as is or wait until the slowdown gets smaller.", "body": "Yes, thank you!\r\nJust a quick update: I have a version working that uses a generic trilinear routine.\r\nFor the model case of batch=50, out_features=300, left/right_features=100 and 200, I get a slowdown to 22msec vs. 12msec on CPU. This gets better with larger left/right feature size, but I must admit that it is not as nice as I would like. The memory characteristics are good as in intermediate matrices only have two of the above dimensions.\r\nThe code currently uses one of the einsum building blocks as a black bock, quite likely, making that explicit again helps for the speed.\r\n\r\nDepending on your plans, I could provide a version as is or wait until the slowdown gets smaller.\r\n"}