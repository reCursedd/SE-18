{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/13290", "id": 226778811, "node_id": "MDExOlB1bGxSZXF1ZXN0MjI2Nzc4ODEx", "html_url": "https://github.com/pytorch/pytorch/pull/13290", "diff_url": "https://github.com/pytorch/pytorch/pull/13290.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/13290.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/13290", "number": 13290, "state": "closed", "locked": false, "title": "speed up torch.sparse_mask() cpu kernel", "user": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "body": "- `sparse_mask(D, S)` is useful to implement backward for `sparse_addmm()`\r\n- previous `sparse_mask(D, S)` cpu kernel is not parallelized\r\n- this PR speed up the cpu kernel for two separated cases:\r\n  - `D.dim == S.sparse_dim`: simply parallelize the kernel\r\n  - `D.dim > S.sparse_dim`: simply use CUDA kernel implementation\r\n- performance:\r\n\r\n`D.dim == S.sparse_dim`\r\n```\r\n>>> nnz = 100000\r\n>>> dims = [1000, 1000]\r\n>>> I = torch.cat([torch.randint(0, dims[0], size=(nnz,)), \r\n               torch.randint(0, dims[1], size=(nnz,))], 0).reshape(2, nnz)\r\n>>> V = torch.randn(nnz)\r\n>>> size = torch.Size(dims)\r\n\r\n>>> S = torch.sparse_coo_tensor(I, V, size).coalesce()\r\n>>> D = torch.randn(dims)\r\n\r\n>>> %timeit D.sparse_mask(S)\r\n\r\n======= before change =======\r\n6.4 ms \u00b1 684 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 100 loops each)\r\n\r\n======= after change =======\r\n333 \u00b5s \u00b1 89.5 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\r\n```\r\n\r\n`D.dim > S.sparse_dim`\r\n```\r\n>>> nnz = 100000\r\n>>> dims = [1000, 1000, 2, 2]\r\n>>> I = torch.cat([torch.randint(0, dims[0], size=(nnz,)), \r\n               torch.randint(0, dims[1], size=(nnz,))], 0).reshape(2, nnz)\r\n>>> V = torch.randn(nnz, dims[2], dims[3])\r\n>>> size = torch.Size(dims)\r\n\r\n>>> S = torch.sparse_coo_tensor(I, V, size).coalesce()\r\n>>> D = torch.randn(dims)\r\n%timeit D.sparse_mask(S)\r\n\r\n======= before change =======\r\n495 ms \u00b1 41.7 ms per loop (mean \u00b1 std. dev. of 7 runs, 1 loop each)\r\n\r\n======= after change =======\r\n594 \u00b5s \u00b1 68.9 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\r\n```", "created_at": "2018-10-30T03:17:59Z", "updated_at": "2018-11-23T15:54:28Z", "closed_at": "2018-11-08T04:03:30Z", "merged_at": null, "merge_commit_sha": "eb275c347ece109a7c235de69e8799f732ddb2ba", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13290/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13290/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13290/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/e12531f9d11030b82f31068fba0e4f594ad7ecf9", "head": {"label": "weiyangfb:sparse_mask_parallelize_cpu", "ref": "sparse_mask_parallelize_cpu", "sha": "e12531f9d11030b82f31068fba0e4f594ad7ecf9", "user": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "repo": {"id": 130120335, "node_id": "MDEwOlJlcG9zaXRvcnkxMzAxMjAzMzU=", "name": "pytorch", "full_name": "weiyangfb/pytorch", "private": false, "owner": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/weiyangfb/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": true, "url": "https://api.github.com/repos/weiyangfb/pytorch", "forks_url": "https://api.github.com/repos/weiyangfb/pytorch/forks", "keys_url": "https://api.github.com/repos/weiyangfb/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/weiyangfb/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/weiyangfb/pytorch/teams", "hooks_url": "https://api.github.com/repos/weiyangfb/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/weiyangfb/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/weiyangfb/pytorch/events", "assignees_url": "https://api.github.com/repos/weiyangfb/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/weiyangfb/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/weiyangfb/pytorch/tags", "blobs_url": "https://api.github.com/repos/weiyangfb/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/weiyangfb/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/weiyangfb/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/weiyangfb/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/weiyangfb/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/weiyangfb/pytorch/languages", "stargazers_url": "https://api.github.com/repos/weiyangfb/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/weiyangfb/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/weiyangfb/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/weiyangfb/pytorch/subscription", "commits_url": "https://api.github.com/repos/weiyangfb/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/weiyangfb/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/weiyangfb/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/weiyangfb/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/weiyangfb/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/weiyangfb/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/weiyangfb/pytorch/merges", "archive_url": "https://api.github.com/repos/weiyangfb/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/weiyangfb/pytorch/downloads", "issues_url": "https://api.github.com/repos/weiyangfb/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/weiyangfb/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/weiyangfb/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/weiyangfb/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/weiyangfb/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/weiyangfb/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/weiyangfb/pytorch/deployments", "created_at": "2018-04-18T20:49:19Z", "updated_at": "2018-11-13T06:36:32Z", "pushed_at": "2018-11-21T18:32:11Z", "git_url": "git://github.com/weiyangfb/pytorch.git", "ssh_url": "git@github.com:weiyangfb/pytorch.git", "clone_url": "https://github.com/weiyangfb/pytorch.git", "svn_url": "https://github.com/weiyangfb/pytorch", "homepage": "http://pytorch.org", "size": 85325, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 1, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 1, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "7978ba45ba85d03091b99b375dfb82cf88518c51", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T12:35:43Z", "pushed_at": "2018-11-24T12:42:01Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89656, "stargazers_count": 21589, "watchers_count": 21589, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5153, "mirror_url": null, "archived": false, "open_issues_count": 2197, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5153, "open_issues": 2197, "watchers": 21589, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13290"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13290"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/13290"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/13290/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13290/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13290/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/e12531f9d11030b82f31068fba0e4f594ad7ecf9"}}, "author_association": "CONTRIBUTOR", "body_html": "<ul>\n<li><code>sparse_mask(D, S)</code> is useful to implement backward for <code>sparse_addmm()</code></li>\n<li>previous <code>sparse_mask(D, S)</code> cpu kernel is not parallelized</li>\n<li>this PR speed up the cpu kernel for two separated cases:\n<ul>\n<li><code>D.dim == S.sparse_dim</code>: simply parallelize the kernel</li>\n<li><code>D.dim &gt; S.sparse_dim</code>: simply use CUDA kernel implementation</li>\n</ul>\n</li>\n<li>performance:</li>\n</ul>\n<p><code>D.dim == S.sparse_dim</code></p>\n<pre><code>&gt;&gt;&gt; nnz = 100000\n&gt;&gt;&gt; dims = [1000, 1000]\n&gt;&gt;&gt; I = torch.cat([torch.randint(0, dims[0], size=(nnz,)), \n               torch.randint(0, dims[1], size=(nnz,))], 0).reshape(2, nnz)\n&gt;&gt;&gt; V = torch.randn(nnz)\n&gt;&gt;&gt; size = torch.Size(dims)\n\n&gt;&gt;&gt; S = torch.sparse_coo_tensor(I, V, size).coalesce()\n&gt;&gt;&gt; D = torch.randn(dims)\n\n&gt;&gt;&gt; %timeit D.sparse_mask(S)\n\n======= before change =======\n6.4 ms \u00b1 684 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 100 loops each)\n\n======= after change =======\n333 \u00b5s \u00b1 89.5 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\n</code></pre>\n<p><code>D.dim &gt; S.sparse_dim</code></p>\n<pre><code>&gt;&gt;&gt; nnz = 100000\n&gt;&gt;&gt; dims = [1000, 1000, 2, 2]\n&gt;&gt;&gt; I = torch.cat([torch.randint(0, dims[0], size=(nnz,)), \n               torch.randint(0, dims[1], size=(nnz,))], 0).reshape(2, nnz)\n&gt;&gt;&gt; V = torch.randn(nnz, dims[2], dims[3])\n&gt;&gt;&gt; size = torch.Size(dims)\n\n&gt;&gt;&gt; S = torch.sparse_coo_tensor(I, V, size).coalesce()\n&gt;&gt;&gt; D = torch.randn(dims)\n%timeit D.sparse_mask(S)\n\n======= before change =======\n495 ms \u00b1 41.7 ms per loop (mean \u00b1 std. dev. of 7 runs, 1 loop each)\n\n======= after change =======\n594 \u00b5s \u00b1 68.9 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\n</code></pre>", "body_text": "sparse_mask(D, S) is useful to implement backward for sparse_addmm()\nprevious sparse_mask(D, S) cpu kernel is not parallelized\nthis PR speed up the cpu kernel for two separated cases:\n\nD.dim == S.sparse_dim: simply parallelize the kernel\nD.dim > S.sparse_dim: simply use CUDA kernel implementation\n\n\nperformance:\n\nD.dim == S.sparse_dim\n>>> nnz = 100000\n>>> dims = [1000, 1000]\n>>> I = torch.cat([torch.randint(0, dims[0], size=(nnz,)), \n               torch.randint(0, dims[1], size=(nnz,))], 0).reshape(2, nnz)\n>>> V = torch.randn(nnz)\n>>> size = torch.Size(dims)\n\n>>> S = torch.sparse_coo_tensor(I, V, size).coalesce()\n>>> D = torch.randn(dims)\n\n>>> %timeit D.sparse_mask(S)\n\n======= before change =======\n6.4 ms \u00b1 684 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 100 loops each)\n\n======= after change =======\n333 \u00b5s \u00b1 89.5 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\n\nD.dim > S.sparse_dim\n>>> nnz = 100000\n>>> dims = [1000, 1000, 2, 2]\n>>> I = torch.cat([torch.randint(0, dims[0], size=(nnz,)), \n               torch.randint(0, dims[1], size=(nnz,))], 0).reshape(2, nnz)\n>>> V = torch.randn(nnz, dims[2], dims[3])\n>>> size = torch.Size(dims)\n\n>>> S = torch.sparse_coo_tensor(I, V, size).coalesce()\n>>> D = torch.randn(dims)\n%timeit D.sparse_mask(S)\n\n======= before change =======\n495 ms \u00b1 41.7 ms per loop (mean \u00b1 std. dev. of 7 runs, 1 loop each)\n\n======= after change =======\n594 \u00b5s \u00b1 68.9 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)", "merged": false, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": null, "comments": 4, "review_comments": 7, "maintainer_can_modify": false, "commits": 3, "additions": 99, "deletions": 30, "changed_files": 6}