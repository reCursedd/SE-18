{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/230823862", "pull_request_review_id": 171648591, "id": 230823862, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMDgyMzg2Mg==", "diff_hunk": "@@ -394,35 +424,34 @@ SparseTensor& sparse_mask_out_cpu(SparseTensor& r, const Tensor& t, const Sparse\n     return r;\n   }\n \n-  // NB: Relies on mask._nnz() == 0 test above\n-  auto mask_indices_accessor = mask_indices.accessor<int64_t, 2>();\n-\n   if (dim > sparse_dim) {\n-    // NB: This used to reuse buffers, but I deoptimized it\n-    for (int64_t i = 0; i < r_nnz; i++) {\n-      Tensor srcBuffer = t;\n-      for (int64_t d = 0; d < sparse_dim; d++) {\n-        srcBuffer = srcBuffer.select(0, mask_indices_accessor[d][i]);\n-      }\n-      Tensor dstBuffer = r_values.select(0, i);\n-      dstBuffer.copy_(srcBuffer);\n+\n+    // Get a flattened sparse indices, similar to NOTE [ Flatten Sparse Indices ].\n+    // Keeping this implementation because it is faster than flatten_indices()\n+    LongTensor indices = at::zeros({mask._nnz()}, mask_indices.options());\n+    for (int64_t d = 0; d < mask.sparse_dim(); d++) {\n+      indices.mul_(mask.size(d));\n+      // This used to use a buffer but I deoptimized it", "path": "aten/src/ATen/native/sparse/SparseTensor.cpp", "position": null, "original_position": 70, "commit_id": "e12531f9d11030b82f31068fba0e4f594ad7ecf9", "original_commit_id": "f29777f69111cd541decc8b458c26e4eb9fe8adf", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "This comment is out of date now", "created_at": "2018-11-05T16:43:11Z", "updated_at": "2018-11-23T15:54:17Z", "html_url": "https://github.com/pytorch/pytorch/pull/13290#discussion_r230823862", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13290", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/230823862"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13290#discussion_r230823862"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13290"}}, "body_html": "<p>This comment is out of date now</p>", "body_text": "This comment is out of date now"}