{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223483482", "pull_request_review_id": 162622209, "id": 223483482, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzQ4MzQ4Mg==", "diff_hunk": "@@ -363,6 +346,37 @@ Resolver pythonResolver(ResolutionCallback rcb) {\n   };\n }\n \n+FunctionSchema getSchemaWithDefaults(\n+    std::unordered_map<std::string, py::object>& default_args,\n+    FunctionSchema& schema) {\n+  std::vector<Argument> new_args;\n+  for (auto& arg : schema.arguments) {\n+    auto it = default_args.find(arg.name);\n+    if (it != default_args.end()) {\n+      IValue value = *constantToIValue(it->second);", "path": "torch/csrc/jit/script/init.cpp", "position": null, "original_position": 56, "commit_id": "ad0fd0df8b73298b60bec38f6b30986e498494a2", "original_commit_id": "7bd9670ecc38c2793959ad0d426f15d5b3bbac6b", "user": {"login": "driazati", "id": 9407960, "node_id": "MDQ6VXNlcjk0MDc5NjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9407960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/driazati", "html_url": "https://github.com/driazati", "followers_url": "https://api.github.com/users/driazati/followers", "following_url": "https://api.github.com/users/driazati/following{/other_user}", "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}", "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/driazati/subscriptions", "organizations_url": "https://api.github.com/users/driazati/orgs", "repos_url": "https://api.github.com/users/driazati/repos", "events_url": "https://api.github.com/users/driazati/events{/privacy}", "received_events_url": "https://api.github.com/users/driazati/received_events", "type": "User", "site_admin": false}, "body": "Without type hints the schema I was getting for the functions in `test_default_values_function` looked like this\r\n```\r\nsimple_fn(Tensor x, Tensor a=<default>, Tensor b=<default>, Tensor c=<default>) ->\r\nbool_fn(Tensor x, Tensor a=<default>, Tensor flag=<default>) ->\r\n```\r\nWhich would make `inline IValue toIValue(py::handle obj, const TypePtr& type)` fail since it would try to make an `autograd::Variable` from a scalar.\r\n\r\nI added a check for the correct type + accompanying test for the correct types in the latest commit", "created_at": "2018-10-08T20:11:11Z", "updated_at": "2018-11-23T15:52:36Z", "html_url": "https://github.com/pytorch/pytorch/pull/12345#discussion_r223483482", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12345", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223483482"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12345#discussion_r223483482"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12345"}}, "body_html": "<p>Without type hints the schema I was getting for the functions in <code>test_default_values_function</code> looked like this</p>\n<pre><code>simple_fn(Tensor x, Tensor a=&lt;default&gt;, Tensor b=&lt;default&gt;, Tensor c=&lt;default&gt;) -&gt;\nbool_fn(Tensor x, Tensor a=&lt;default&gt;, Tensor flag=&lt;default&gt;) -&gt;\n</code></pre>\n<p>Which would make <code>inline IValue toIValue(py::handle obj, const TypePtr&amp; type)</code> fail since it would try to make an <code>autograd::Variable</code> from a scalar.</p>\n<p>I added a check for the correct type + accompanying test for the correct types in the latest commit</p>", "body_text": "Without type hints the schema I was getting for the functions in test_default_values_function looked like this\nsimple_fn(Tensor x, Tensor a=<default>, Tensor b=<default>, Tensor c=<default>) ->\nbool_fn(Tensor x, Tensor a=<default>, Tensor flag=<default>) ->\n\nWhich would make inline IValue toIValue(py::handle obj, const TypePtr& type) fail since it would try to make an autograd::Variable from a scalar.\nI added a check for the correct type + accompanying test for the correct types in the latest commit", "in_reply_to_id": 223440532}