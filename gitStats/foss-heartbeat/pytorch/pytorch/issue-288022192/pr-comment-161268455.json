{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/161268455", "pull_request_review_id": 88531734, "id": 161268455, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTI2ODQ1NQ==", "diff_hunk": "@@ -461,6 +461,21 @@ def test_all_any_empty(self):\n         self.assertTrue(x.all())\n         self.assertFalse(x.any())\n \n+    def test_all_any_with_dim(self):\n+        def test(x):\n+            r1 = x.prod(dim=1, keepdim=False)\n+            r2 = x.all(dim=1, keepdim=False)\n+            self.assertEqual(r1.shape, r2.shape)\n+            self.assertTrue((r1 == r2).all())\n+\n+            r3 = x.sum(dim=2, keepdim=True).clamp(0, 1)\n+            r4 = x.any(dim=2, keepdim=True)\n+            self.assertEqual(r3.shape, r4.shape)\n+            self.assertTrue((r3 == r4).all())\n+\n+        test(torch.rand((1, 2, 3, 4)).round().byte())", "path": "test/test_torch.py", "position": null, "original_position": 16, "commit_id": "410f1539a67949710b82abe3257cadd5fbae4db9", "original_commit_id": "b3a6669761a0e7110797fd933abb6aac2945bde0", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "this test is kind of strange because you are picking random numbers, but `x.all` is basically always going to be false and `x.any` always going to be true.  I think it's fine to just hard code a couple of interesting cases.", "created_at": "2018-01-12T16:36:45Z", "updated_at": "2018-11-23T15:38:06Z", "html_url": "https://github.com/pytorch/pytorch/pull/4627#discussion_r161268455", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4627", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/161268455"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4627#discussion_r161268455"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4627"}}, "body_html": "<p>this test is kind of strange because you are picking random numbers, but <code>x.all</code> is basically always going to be false and <code>x.any</code> always going to be true.  I think it's fine to just hard code a couple of interesting cases.</p>", "body_text": "this test is kind of strange because you are picking random numbers, but x.all is basically always going to be false and x.any always going to be true.  I think it's fine to just hard code a couple of interesting cases."}