{"url": "https://api.github.com/repos/pytorch/pytorch/issues/2851", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/2851/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2851/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/2851/events", "html_url": "https://github.com/pytorch/pytorch/issues/2851", "id": 260139828, "node_id": "MDU6SXNzdWUyNjAxMzk4Mjg=", "number": 2851, "title": "register_buffers with None does something strange", "user": {"login": "ddkang", "id": 1894961, "node_id": "MDQ6VXNlcjE4OTQ5NjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1894961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddkang", "html_url": "https://github.com/ddkang", "followers_url": "https://api.github.com/users/ddkang/followers", "following_url": "https://api.github.com/users/ddkang/following{/other_user}", "gists_url": "https://api.github.com/users/ddkang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddkang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddkang/subscriptions", "organizations_url": "https://api.github.com/users/ddkang/orgs", "repos_url": "https://api.github.com/users/ddkang/repos", "events_url": "https://api.github.com/users/ddkang/events{/privacy}", "received_events_url": "https://api.github.com/users/ddkang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-25T02:38:54Z", "updated_at": "2017-09-25T05:43:56Z", "closed_at": "2017-09-25T05:43:56Z", "author_association": "NONE", "body_html": "<p>I may be misinterpreting the intended purpose of register_buffers, but either way I think the behavior is inconsistent here:<br>\n<a href=\"https://pastebin.com/GTa8AZEW\" rel=\"nofollow\">https://pastebin.com/GTa8AZEW</a><br>\n<a href=\"https://pastebin.com/mM7BVw22\" rel=\"nofollow\">https://pastebin.com/mM7BVw22</a></p>\n<p>In both cases, I register a buffer as <code>None</code>. In one case, I attempt to update it via direct assignment, and in another by <strong>setattr</strong>. In both cases, <code>b.indexes</code> prints <code>None</code> but  <code>b.__getattr__('indexes')</code> prints the correct tensor. In both cases <code>assert self.indexes == self.__getattr__('indexes')</code> fails.</p>", "body_text": "I may be misinterpreting the intended purpose of register_buffers, but either way I think the behavior is inconsistent here:\nhttps://pastebin.com/GTa8AZEW\nhttps://pastebin.com/mM7BVw22\nIn both cases, I register a buffer as None. In one case, I attempt to update it via direct assignment, and in another by setattr. In both cases, b.indexes prints None but  b.__getattr__('indexes') prints the correct tensor. In both cases assert self.indexes == self.__getattr__('indexes') fails.", "body": "I may be misinterpreting the intended purpose of register_buffers, but either way I think the behavior is inconsistent here:\r\nhttps://pastebin.com/GTa8AZEW\r\nhttps://pastebin.com/mM7BVw22\r\n\r\nIn both cases, I register a buffer as `None`. In one case, I attempt to update it via direct assignment, and in another by __setattr__. In both cases, `b.indexes` prints `None` but  `b.__getattr__('indexes')` prints the correct tensor. In both cases `assert self.indexes == self.__getattr__('indexes')` fails."}