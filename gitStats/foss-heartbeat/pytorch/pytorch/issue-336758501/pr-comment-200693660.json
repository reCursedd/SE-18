{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/200693660", "pull_request_review_id": 135064344, "id": 200693660, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDY5MzY2MA==", "diff_hunk": "@@ -0,0 +1,102 @@\n+#pragma once\n+\n+#include <cstdint>\n+ \n+/*\n+* A CPU-friendly CUDAStream interface.\n+* \n+* Includes the CUDAStream RAII class and and internal stream API.\n+* \n+* The ATen Context interface should be preferred when working with streams.\n+*/\n+\n+// Forward-declares cudaStream_t to avoid depending on CUDA in CPU builds\n+// Note: this is the internal CUDA runtime typedef for cudaStream_t\n+struct CUstream_st;\n+typedef struct CUstream_st* cudaStream_t;\n+\n+// Forward-declares internals\n+struct CUDAStreamInternals;\n+\n+namespace at {\n+\n+// Pointer-based API (for internal use)\n+// Consumers of streams should generally use ATen/Context to work with them safely\n+CUDAStreamInternals* CUDAStream_getDefaultStreamOnDevice(int64_t device);\n+CUDAStreamInternals* CUDAStream_getDefaultStream();\n+\n+CUDAStreamInternals* CUDAStream_createAndRetainWithOptions(int32_t flags, int32_t priority);\n+\n+CUDAStreamInternals* CUDAStream_getAndRetainCurrentStreamOnDevice(int64_t device);\n+CUDAStreamInternals* CUDAStream_getAndRetainCurrentStream();\n+\n+// Note: these Unsafe gets should NEVER be used and are only here for legacy\n+// purposes. Once those uses are gone they should be removed.\n+CUDAStreamInternals* CUDAStream_getCurrentStreamOnDeviceUnsafe(int64_t device);\n+CUDAStreamInternals* CUDAStream_getCurrentStreamUnsafe();\n+\n+void CUDAStream_setStreamOnDevice(int64_t device, CUDAStreamInternals* internals);\n+void CUDAStream_setStream(CUDAStreamInternals* internals);\n+\n+cudaStream_t CUDAStream_stream(CUDAStreamInternals*);\n+int CUDAStream_device(CUDAStreamInternals*);\n+\n+bool CUDAStream_retain(CUDAStreamInternals*);\n+void CUDAStream_free(CUDAStreamInternals*&);\n+\n+CUDAStreamInternals* CUDAStream_copy(CUDAStreamInternals*);\n+void CUDAStream_move(CUDAStreamInternals*& src, CUDAStreamInternals*& dst);", "path": "aten/src/ATen/CUDAStream.h", "position": null, "original_position": 48, "commit_id": "9e9fab7b728c14fedfe0ff57e0a7ffb55a83b436", "original_commit_id": "618ef924c4f9d0889a9b82fb8f56bb6983348505", "user": {"login": "mruberry", "id": 38511765, "node_id": "MDQ6VXNlcjM4NTExNzY1", "avatar_url": "https://avatars3.githubusercontent.com/u/38511765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mruberry", "html_url": "https://github.com/mruberry", "followers_url": "https://api.github.com/users/mruberry/followers", "following_url": "https://api.github.com/users/mruberry/following{/other_user}", "gists_url": "https://api.github.com/users/mruberry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mruberry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mruberry/subscriptions", "organizations_url": "https://api.github.com/users/mruberry/orgs", "repos_url": "https://api.github.com/users/mruberry/repos", "events_url": "https://api.github.com/users/mruberry/events{/privacy}", "received_events_url": "https://api.github.com/users/mruberry/received_events", "type": "User", "site_admin": false}, "body": "If you're referring to only copy and move I totally agree (it's the 2nd bullet above). Happy to fix that up.", "created_at": "2018-07-06T15:44:55Z", "updated_at": "2018-11-23T15:46:52Z", "html_url": "https://github.com/pytorch/pytorch/pull/8997#discussion_r200693660", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8997", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/200693660"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8997#discussion_r200693660"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8997"}}, "body_html": "<p>If you're referring to only copy and move I totally agree (it's the 2nd bullet above). Happy to fix that up.</p>", "body_text": "If you're referring to only copy and move I totally agree (it's the 2nd bullet above). Happy to fix that up.", "in_reply_to_id": 200650635}