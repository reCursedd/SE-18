{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/402884890", "html_url": "https://github.com/pytorch/pytorch/issues/7092#issuecomment-402884890", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7092", "id": 402884890, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjg4NDg5MA==", "user": {"login": "PetrochukM", "id": 7424737, "node_id": "MDQ6VXNlcjc0MjQ3Mzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7424737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PetrochukM", "html_url": "https://github.com/PetrochukM", "followers_url": "https://api.github.com/users/PetrochukM/followers", "following_url": "https://api.github.com/users/PetrochukM/following{/other_user}", "gists_url": "https://api.github.com/users/PetrochukM/gists{/gist_id}", "starred_url": "https://api.github.com/users/PetrochukM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PetrochukM/subscriptions", "organizations_url": "https://api.github.com/users/PetrochukM/orgs", "repos_url": "https://api.github.com/users/PetrochukM/repos", "events_url": "https://api.github.com/users/PetrochukM/events{/privacy}", "received_events_url": "https://api.github.com/users/PetrochukM/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-05T23:56:48Z", "updated_at": "2018-07-05T23:56:48Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5248122\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ailzhang\">@ailzhang</a> Thanks for your thorough reply, learned something new :)</p>\n<p>Responding to a couple of your points:</p>\n<ul>\n<li>The code base needs to be master/worker because the same script is getting run multiple times; therefore, if an action should only be taken once then it should be assigned to the master worker. Let me know if that does not make sense.</li>\n<li>The performance comparison is between DataParallel and DisitributedDataParallel. The batch size was 32, I checked, both DisitributedDataParallel and DataParallel split the batch size into chunks of 8 across 4 GPUs. DataParallel performance 4x faster.  When I get a free cycle, I'll post a minimal example.</li>\n</ul>", "body_text": "@ailzhang Thanks for your thorough reply, learned something new :)\nResponding to a couple of your points:\n\nThe code base needs to be master/worker because the same script is getting run multiple times; therefore, if an action should only be taken once then it should be assigned to the master worker. Let me know if that does not make sense.\nThe performance comparison is between DataParallel and DisitributedDataParallel. The batch size was 32, I checked, both DisitributedDataParallel and DataParallel split the batch size into chunks of 8 across 4 GPUs. DataParallel performance 4x faster.  When I get a free cycle, I'll post a minimal example.", "body": "\r\n\r\n\r\n@ailzhang Thanks for your thorough reply, learned something new :)\r\n\r\nResponding to a couple of your points:\r\n- The code base needs to be master/worker because the same script is getting run multiple times; therefore, if an action should only be taken once then it should be assigned to the master worker. Let me know if that does not make sense.\r\n- The performance comparison is between DataParallel and DisitributedDataParallel. The batch size was 32, I checked, both DisitributedDataParallel and DataParallel split the batch size into chunks of 8 across 4 GPUs. DataParallel performance 4x faster.  When I get a free cycle, I'll post a minimal example."}