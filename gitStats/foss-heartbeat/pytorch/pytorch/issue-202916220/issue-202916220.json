{"url": "https://api.github.com/repos/pytorch/pytorch/issues/573", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/573/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/573/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/573/events", "html_url": "https://github.com/pytorch/pytorch/issues/573", "id": 202916220, "node_id": "MDU6SXNzdWUyMDI5MTYyMjA=", "number": 573, "title": "cuDNN detection failure at build time", "user": {"login": "thiell", "id": 1494929, "node_id": "MDQ6VXNlcjE0OTQ5Mjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1494929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thiell", "html_url": "https://github.com/thiell", "followers_url": "https://api.github.com/users/thiell/followers", "following_url": "https://api.github.com/users/thiell/following{/other_user}", "gists_url": "https://api.github.com/users/thiell/gists{/gist_id}", "starred_url": "https://api.github.com/users/thiell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thiell/subscriptions", "organizations_url": "https://api.github.com/users/thiell/orgs", "repos_url": "https://api.github.com/users/thiell/repos", "events_url": "https://api.github.com/users/thiell/events{/privacy}", "received_events_url": "https://api.github.com/users/thiell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131849, "node_id": "MDU6TGFiZWw0MjQxMzE4NDk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2017-01-24T19:28:23Z", "updated_at": "2017-01-30T23:27:50Z", "closed_at": "2017-01-26T03:22:32Z", "author_association": "NONE", "body_html": "<p>We had a request from our users to install pytorch on our GPU cluster so I gave it a try and just compiled pytorch with CUDA 8.0.44 and cuDNN 5.1 within anaconda and during ./run_test.sh I can see the following:</p>\n<pre><code>~/anaconda2/lib/python2.7/site-packages/torch/backends/cudnn/__init__.py:60: UserWarning: cuDNN library has been detected, but your pytorch installation was compiled without support for it. You might want to rebuild pytorch, making sure the library is visible to the build system.\n  warnings.warn(\"cuDNN library has been detected, but your pytorch \"\n</code></pre>\n<p>I didn't change the environment between the build process and the tests, meaning the build scripts missed cuDNN detection. It is available in <code>$LD_LIBRARY_PATH</code> though and properly detected by other software installation on our cluster (we use lmod to manage the software environment).</p>\n<p>So it looks like pytorch's cuDNN detection script <code>tools/setup_helpers/cudnn.py</code> doesn't care about the standard environment variables like <code>$LD_LIBRARY_PATH</code> or <code>$CPATH</code>, but simply uses the variables <code>$CUDNN_LIB_DIR</code> and <code>$CUDNN_INCLUDE_DIR</code> (or <code>$CUDA_HOME</code> but we don't install cuDNN in <code>CUDA_HOME</code>):</p>\n<p>tools/setup_helpers/cudnn.py:</p>\n<div class=\"highlight highlight-source-python\"><pre>    lib_paths <span class=\"pl-k\">=</span> <span class=\"pl-c1\">list</span>(<span class=\"pl-c1\">filter</span>(<span class=\"pl-c1\">bool</span>, [\n        os.getenv(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>CUDNN_LIB_DIR<span class=\"pl-pds\">'</span></span>),\n        os.path.join(<span class=\"pl-c1\">CUDA_HOME</span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>lib<span class=\"pl-pds\">'</span></span>),\n        os.path.join(<span class=\"pl-c1\">CUDA_HOME</span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>lib64<span class=\"pl-pds\">'</span></span>),\n        <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/usr/lib/x86_64-linux-gnu/<span class=\"pl-pds\">'</span></span>,\n    ]))</pre></div>\n<p>...</p>\n<p>As a workaround, I will define these non-standard <code>$CUDNN_*</code> before building pytorch, but I wanted to let you know of the build issue.</p>", "body_text": "We had a request from our users to install pytorch on our GPU cluster so I gave it a try and just compiled pytorch with CUDA 8.0.44 and cuDNN 5.1 within anaconda and during ./run_test.sh I can see the following:\n~/anaconda2/lib/python2.7/site-packages/torch/backends/cudnn/__init__.py:60: UserWarning: cuDNN library has been detected, but your pytorch installation was compiled without support for it. You might want to rebuild pytorch, making sure the library is visible to the build system.\n  warnings.warn(\"cuDNN library has been detected, but your pytorch \"\n\nI didn't change the environment between the build process and the tests, meaning the build scripts missed cuDNN detection. It is available in $LD_LIBRARY_PATH though and properly detected by other software installation on our cluster (we use lmod to manage the software environment).\nSo it looks like pytorch's cuDNN detection script tools/setup_helpers/cudnn.py doesn't care about the standard environment variables like $LD_LIBRARY_PATH or $CPATH, but simply uses the variables $CUDNN_LIB_DIR and $CUDNN_INCLUDE_DIR (or $CUDA_HOME but we don't install cuDNN in CUDA_HOME):\ntools/setup_helpers/cudnn.py:\n    lib_paths = list(filter(bool, [\n        os.getenv('CUDNN_LIB_DIR'),\n        os.path.join(CUDA_HOME, 'lib'),\n        os.path.join(CUDA_HOME, 'lib64'),\n        '/usr/lib/x86_64-linux-gnu/',\n    ]))\n...\nAs a workaround, I will define these non-standard $CUDNN_* before building pytorch, but I wanted to let you know of the build issue.", "body": "We had a request from our users to install pytorch on our GPU cluster so I gave it a try and just compiled pytorch with CUDA 8.0.44 and cuDNN 5.1 within anaconda and during ./run_test.sh I can see the following:\r\n\r\n```\r\n~/anaconda2/lib/python2.7/site-packages/torch/backends/cudnn/__init__.py:60: UserWarning: cuDNN library has been detected, but your pytorch installation was compiled without support for it. You might want to rebuild pytorch, making sure the library is visible to the build system.\r\n  warnings.warn(\"cuDNN library has been detected, but your pytorch \"\r\n```\r\n\r\nI didn't change the environment between the build process and the tests, meaning the build scripts missed cuDNN detection. It is available in `$LD_LIBRARY_PATH` though and properly detected by other software installation on our cluster (we use lmod to manage the software environment).\r\n\r\nSo it looks like pytorch's cuDNN detection script `tools/setup_helpers/cudnn.py` doesn't care about the standard environment variables like `$LD_LIBRARY_PATH` or `$CPATH`, but simply uses the variables `$CUDNN_LIB_DIR` and `$CUDNN_INCLUDE_DIR` (or `$CUDA_HOME` but we don't install cuDNN in `CUDA_HOME`):\r\n\r\ntools/setup_helpers/cudnn.py:\r\n```python\r\n    lib_paths = list(filter(bool, [\r\n        os.getenv('CUDNN_LIB_DIR'),\r\n        os.path.join(CUDA_HOME, 'lib'),\r\n        os.path.join(CUDA_HOME, 'lib64'),\r\n        '/usr/lib/x86_64-linux-gnu/',\r\n    ]))\r\n```\r\n\r\n...\r\n\r\nAs a workaround, I will define these non-standard `$CUDNN_*` before building pytorch, but I wanted to let you know of the build issue."}