{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/97301885", "pull_request_review_id": 17905925, "id": 97301885, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk3MzAxODg1", "diff_hunk": "@@ -225,6 +225,14 @@ void cudnn_convolution_forward(\n   size_t workspaceSize;\n   CHECK(cudnnGetConvolutionForwardWorkspaceSize(handle, idesc.desc, wdesc.desc,\n       cdesc.desc, odesc.desc, fwdAlg, &workspaceSize));\n+  size_t memFree;\n+  size_t memTotal;\n+  cudaMemGetInfo(&memFree, &memTotal);", "path": "torch/csrc/cudnn/Conv.cpp", "position": 6, "original_position": 6, "commit_id": "bcaceb4a8a692d28e2aa5e93802e98776d10d659", "original_commit_id": "bcaceb4a8a692d28e2aa5e93802e98776d10d659", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "body": "But I thought that the caching allocator [would free all empty blocks in case of OMM, and then retry the allocation](https://github.com/pytorch/pytorch/blob/master/torch/lib/THC/THCCachingAllocator.cpp#L18-L19)?", "created_at": "2017-01-23T11:47:57Z", "updated_at": "2018-11-23T15:32:16Z", "html_url": "https://github.com/pytorch/pytorch/pull/552#discussion_r97301885", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/552", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/97301885"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/552#discussion_r97301885"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/552"}}, "body_html": "<p>But I thought that the caching allocator <a href=\"https://github.com/pytorch/pytorch/blob/master/torch/lib/THC/THCCachingAllocator.cpp#L18-L19\">would free all empty blocks in case of OMM, and then retry the allocation</a>?</p>", "body_text": "But I thought that the caching allocator would free all empty blocks in case of OMM, and then retry the allocation?", "in_reply_to_id": 97278080}