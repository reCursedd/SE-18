{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/274543801", "html_url": "https://github.com/pytorch/pytorch/pull/552#issuecomment-274543801", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/552", "id": 274543801, "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDU0MzgwMQ==", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-23T16:48:01Z", "updated_at": "2017-01-23T16:48:01Z", "author_association": "MEMBER", "body_html": "<p>In the non-benchmark case we should try to allocate the workspace. If that fails, we should fall back to <code>IMPLICIT_GEMM</code> or whichever algorithm doesn't require a workspace. I don't think we should be looking at the \"free memory\" and guessing whether the allocation will succeed beforehand.</p>\n<p>For the benchmark case, I think we have to switch to the '...AlgorithmEx' API. Last I looked, it was a little tricky because I think you have to guess the maximum workspace size before you call the <code>...FindConvolution...</code> function.</p>", "body_text": "In the non-benchmark case we should try to allocate the workspace. If that fails, we should fall back to IMPLICIT_GEMM or whichever algorithm doesn't require a workspace. I don't think we should be looking at the \"free memory\" and guessing whether the allocation will succeed beforehand.\nFor the benchmark case, I think we have to switch to the '...AlgorithmEx' API. Last I looked, it was a little tricky because I think you have to guess the maximum workspace size before you call the ...FindConvolution... function.", "body": "In the non-benchmark case we should try to allocate the workspace. If that fails, we should fall back to `IMPLICIT_GEMM` or whichever algorithm doesn't require a workspace. I don't think we should be looking at the \"free memory\" and guessing whether the allocation will succeed beforehand.\r\n\r\nFor the benchmark case, I think we have to switch to the '...AlgorithmEx' API. Last I looked, it was a little tricky because I think you have to guess the maximum workspace size before you call the `...FindConvolution...` function."}