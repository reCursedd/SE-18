{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/378708568", "html_url": "https://github.com/pytorch/pytorch/pull/6132#issuecomment-378708568", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6132", "id": 378708568, "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODcwODU2OA==", "user": {"login": "yf225", "id": 4063635, "node_id": "MDQ6VXNlcjQwNjM2MzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/4063635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yf225", "html_url": "https://github.com/yf225", "followers_url": "https://api.github.com/users/yf225/followers", "following_url": "https://api.github.com/users/yf225/following{/other_user}", "gists_url": "https://api.github.com/users/yf225/gists{/gist_id}", "starred_url": "https://api.github.com/users/yf225/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yf225/subscriptions", "organizations_url": "https://api.github.com/users/yf225/orgs", "repos_url": "https://api.github.com/users/yf225/repos", "events_url": "https://api.github.com/users/yf225/events{/privacy}", "received_events_url": "https://api.github.com/users/yf225/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-04T18:58:16Z", "updated_at": "2018-04-04T18:58:16Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> Yes sorry for getting back to this late - I think we should accept it since it gives bigger gains to more compute-intensive models.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=20233731\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mingfeima\">@mingfeima</a> Thanks a lot for the advice! We are moving over to using bare metal machines for CPU performance testing, which allows us to have dedicated CPU cores for running the test suite, so no other process will interrupt the performance benchmarking anymore.</p>\n<p>On the bare metal machines we will measure actual wall-clock time, which will give an accurate estimate of program runtime.</p>\n<p>We probably have to stick with Atom from a cost perspective for our PR cpu perf test, but we plan to run larger perf tests nightly and weekly on Xeon machines in the near future, and the benefits of MKLDNN will definitely show there.</p>", "body_text": "@ezyang Yes sorry for getting back to this late - I think we should accept it since it gives bigger gains to more compute-intensive models.\n@mingfeima Thanks a lot for the advice! We are moving over to using bare metal machines for CPU performance testing, which allows us to have dedicated CPU cores for running the test suite, so no other process will interrupt the performance benchmarking anymore.\nOn the bare metal machines we will measure actual wall-clock time, which will give an accurate estimate of program runtime.\nWe probably have to stick with Atom from a cost perspective for our PR cpu perf test, but we plan to run larger perf tests nightly and weekly on Xeon machines in the near future, and the benefits of MKLDNN will definitely show there.", "body": "@ezyang Yes sorry for getting back to this late - I think we should accept it since it gives bigger gains to more compute-intensive models.\r\n\r\n@mingfeima Thanks a lot for the advice! We are moving over to using bare metal machines for CPU performance testing, which allows us to have dedicated CPU cores for running the test suite, so no other process will interrupt the performance benchmarking anymore. \r\n\r\nOn the bare metal machines we will measure actual wall-clock time, which will give an accurate estimate of program runtime. \r\n\r\nWe probably have to stick with Atom from a cost perspective for our PR cpu perf test, but we plan to run larger perf tests nightly and weekly on Xeon machines in the near future, and the benefits of MKLDNN will definitely show there."}