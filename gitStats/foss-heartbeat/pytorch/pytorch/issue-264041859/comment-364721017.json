{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/364721017", "html_url": "https://github.com/pytorch/pytorch/pull/3043#issuecomment-364721017", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3043", "id": 364721017, "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDcyMTAxNw==", "user": {"login": "wassname", "id": 1103714, "node_id": "MDQ6VXNlcjExMDM3MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1103714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wassname", "html_url": "https://github.com/wassname", "followers_url": "https://api.github.com/users/wassname/followers", "following_url": "https://api.github.com/users/wassname/following{/other_user}", "gists_url": "https://api.github.com/users/wassname/gists{/gist_id}", "starred_url": "https://api.github.com/users/wassname/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wassname/subscriptions", "organizations_url": "https://api.github.com/users/wassname/orgs", "repos_url": "https://api.github.com/users/wassname/repos", "events_url": "https://api.github.com/users/wassname/events{/privacy}", "received_events_url": "https://api.github.com/users/wassname/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-11T04:41:49Z", "updated_at": "2018-02-11T04:43:10Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16152279\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zhFuECL\">@zhFuECL</a> here's a usage example:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torchvision.models <span class=\"pl-k\">as</span> models\nmodel <span class=\"pl-k\">=</span> models.alexnet()\nmodel.summary(<span class=\"pl-v\">input_size</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">224</span>, <span class=\"pl-c1\">224</span>))</pre></div>\n<p>Output:</p>\n<pre><code>_____________________________________________________________\nLayer (type)              Output Shape              Param #                  \n=============================================================\nfeatures.0 (Conv2d)       [None, 64, 55, 55]        23296                    \n_____________________________________________________________\nfeatures.1 (ReLU)         [None, 64, 55, 55]        0                        \n_____________________________________________________________\n....(removed for brevity)...\n_____________________________________________________________\nclassifier.5 (ReLU-)      [None, 4096]              0                        \n_____________________________________________________________\nclassifier.6 (Linear-)    [None, 1000]              4097000                  \n=============================================================\nTotal params: 61100840\nTrainable params: 61100840\nNon-trainable params: 0\n_____________________________________________________________\nNone\n</code></pre>", "body_text": "@zhFuECL here's a usage example:\nimport torchvision.models as models\nmodel = models.alexnet()\nmodel.summary(input_size=(3, 224, 224))\nOutput:\n_____________________________________________________________\nLayer (type)              Output Shape              Param #                  \n=============================================================\nfeatures.0 (Conv2d)       [None, 64, 55, 55]        23296                    \n_____________________________________________________________\nfeatures.1 (ReLU)         [None, 64, 55, 55]        0                        \n_____________________________________________________________\n....(removed for brevity)...\n_____________________________________________________________\nclassifier.5 (ReLU-)      [None, 4096]              0                        \n_____________________________________________________________\nclassifier.6 (Linear-)    [None, 1000]              4097000                  \n=============================================================\nTotal params: 61100840\nTrainable params: 61100840\nNon-trainable params: 0\n_____________________________________________________________\nNone", "body": "@zhFuECL here's a usage example:\r\n\r\n```python\r\nimport torchvision.models as models\r\nmodel = models.alexnet()\r\nmodel.summary(input_size=(3, 224, 224))\r\n```\r\n\r\nOutput:\r\n```\r\n_____________________________________________________________\r\nLayer (type)              Output Shape              Param #                  \r\n=============================================================\r\nfeatures.0 (Conv2d)       [None, 64, 55, 55]        23296                    \r\n_____________________________________________________________\r\nfeatures.1 (ReLU)         [None, 64, 55, 55]        0                        \r\n_____________________________________________________________\r\n....(removed for brevity)...\r\n_____________________________________________________________\r\nclassifier.5 (ReLU-)      [None, 4096]              0                        \r\n_____________________________________________________________\r\nclassifier.6 (Linear-)    [None, 1000]              4097000                  \r\n=============================================================\r\nTotal params: 61100840\r\nTrainable params: 61100840\r\nNon-trainable params: 0\r\n_____________________________________________________________\r\nNone\r\n```"}