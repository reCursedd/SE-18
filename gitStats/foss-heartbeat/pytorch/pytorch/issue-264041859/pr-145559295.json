{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/3043", "id": 145559295, "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ1NTU5Mjk1", "html_url": "https://github.com/pytorch/pytorch/pull/3043", "diff_url": "https://github.com/pytorch/pytorch/pull/3043.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/3043.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3043", "number": 3043, "state": "closed", "locked": false, "title": "[WIP] PyTorch Model Summary", "user": {"login": "isaykatsman", "id": 10509755, "node_id": "MDQ6VXNlcjEwNTA5NzU1", "avatar_url": "https://avatars1.githubusercontent.com/u/10509755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/isaykatsman", "html_url": "https://github.com/isaykatsman", "followers_url": "https://api.github.com/users/isaykatsman/followers", "following_url": "https://api.github.com/users/isaykatsman/following{/other_user}", "gists_url": "https://api.github.com/users/isaykatsman/gists{/gist_id}", "starred_url": "https://api.github.com/users/isaykatsman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/isaykatsman/subscriptions", "organizations_url": "https://api.github.com/users/isaykatsman/orgs", "repos_url": "https://api.github.com/users/isaykatsman/repos", "events_url": "https://api.github.com/users/isaykatsman/events{/privacy}", "received_events_url": "https://api.github.com/users/isaykatsman/received_events", "type": "User", "site_admin": false}, "body": "This is my first PR, would definitely appreciate feedback. Implements functionality requested in #2001 .\r\n\r\nThe summary call requires an input size argument (with no batch dimension), but otherwise behaves exactly like keras model summary. Example:\r\n\r\n```\r\nclass NNTwoLayer(torch.nn.Module):\r\n    def __init__(self, D_in, H, D_out):\r\n        super(NNTwoLayer, self).__init__()\r\n        self.lin1 = torch.nn.Linear(D_in, H)\r\n        self.relu1 = torch.nn.ReLU(inplace=True)\r\n        self.lin2 = torch.nn.Linear(H, D_out)\r\n\r\n    def forward(self, x):\r\n        h_pred = self.lin1(x)\r\n        h_relu = self.relu1(h_pred)\r\n        y_pred = self.lin2(h_relu)\r\n        return y_pred\r\n\r\n#construct a model and print summary\r\nmymodel = NNTwoLayer(1000,100,10)\r\nmymodel.summary([1000])\r\n```\r\n\r\nOutput:\r\n![PyTorch Model Summary](https://i.imgur.com/IVQHIcI.png)", "created_at": "2017-10-09T22:14:11Z", "updated_at": "2018-11-23T15:39:44Z", "closed_at": "2018-02-20T15:30:15Z", "merged_at": null, "merge_commit_sha": "9310f65463af12abf9302c14637992c7c708afc7", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3043/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3043/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3043/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/b7b04c276b0cf406e327d1192f61489b78267488", "head": {"label": "isaykatsman:2001", "ref": "2001", "sha": "b7b04c276b0cf406e327d1192f61489b78267488", "user": {"login": "isaykatsman", "id": 10509755, "node_id": "MDQ6VXNlcjEwNTA5NzU1", "avatar_url": "https://avatars1.githubusercontent.com/u/10509755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/isaykatsman", "html_url": "https://github.com/isaykatsman", "followers_url": "https://api.github.com/users/isaykatsman/followers", "following_url": "https://api.github.com/users/isaykatsman/following{/other_user}", "gists_url": "https://api.github.com/users/isaykatsman/gists{/gist_id}", "starred_url": "https://api.github.com/users/isaykatsman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/isaykatsman/subscriptions", "organizations_url": "https://api.github.com/users/isaykatsman/orgs", "repos_url": "https://api.github.com/users/isaykatsman/repos", "events_url": "https://api.github.com/users/isaykatsman/events{/privacy}", "received_events_url": "https://api.github.com/users/isaykatsman/received_events", "type": "User", "site_admin": false}, "repo": {"id": 100306952, "node_id": "MDEwOlJlcG9zaXRvcnkxMDAzMDY5NTI=", "name": "pytorch", "full_name": "isaykatsman/pytorch", "private": false, "owner": {"login": "isaykatsman", "id": 10509755, "node_id": "MDQ6VXNlcjEwNTA5NzU1", "avatar_url": "https://avatars1.githubusercontent.com/u/10509755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/isaykatsman", "html_url": "https://github.com/isaykatsman", "followers_url": "https://api.github.com/users/isaykatsman/followers", "following_url": "https://api.github.com/users/isaykatsman/following{/other_user}", "gists_url": "https://api.github.com/users/isaykatsman/gists{/gist_id}", "starred_url": "https://api.github.com/users/isaykatsman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/isaykatsman/subscriptions", "organizations_url": "https://api.github.com/users/isaykatsman/orgs", "repos_url": "https://api.github.com/users/isaykatsman/repos", "events_url": "https://api.github.com/users/isaykatsman/events{/privacy}", "received_events_url": "https://api.github.com/users/isaykatsman/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/isaykatsman/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": true, "url": "https://api.github.com/repos/isaykatsman/pytorch", "forks_url": "https://api.github.com/repos/isaykatsman/pytorch/forks", "keys_url": "https://api.github.com/repos/isaykatsman/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/isaykatsman/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/isaykatsman/pytorch/teams", "hooks_url": "https://api.github.com/repos/isaykatsman/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/isaykatsman/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/isaykatsman/pytorch/events", "assignees_url": "https://api.github.com/repos/isaykatsman/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/isaykatsman/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/isaykatsman/pytorch/tags", "blobs_url": "https://api.github.com/repos/isaykatsman/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/isaykatsman/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/isaykatsman/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/isaykatsman/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/isaykatsman/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/isaykatsman/pytorch/languages", "stargazers_url": "https://api.github.com/repos/isaykatsman/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/isaykatsman/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/isaykatsman/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/isaykatsman/pytorch/subscription", "commits_url": "https://api.github.com/repos/isaykatsman/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/isaykatsman/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/isaykatsman/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/isaykatsman/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/isaykatsman/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/isaykatsman/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/isaykatsman/pytorch/merges", "archive_url": "https://api.github.com/repos/isaykatsman/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/isaykatsman/pytorch/downloads", "issues_url": "https://api.github.com/repos/isaykatsman/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/isaykatsman/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/isaykatsman/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/isaykatsman/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/isaykatsman/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/isaykatsman/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/isaykatsman/pytorch/deployments", "created_at": "2017-08-14T20:30:57Z", "updated_at": "2018-02-01T17:21:16Z", "pushed_at": "2018-02-20T06:54:35Z", "git_url": "git://github.com/isaykatsman/pytorch.git", "ssh_url": "git@github.com:isaykatsman/pytorch.git", "clone_url": "https://github.com/isaykatsman/pytorch.git", "svn_url": "https://github.com/isaykatsman/pytorch", "homepage": "http://pytorch.org", "size": 22693, "stargazers_count": 1, "watchers_count": 1, "language": "Python", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 0, "open_issues": 0, "watchers": 1, "default_branch": "master"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "f9d002d9f7c5f9ec1a5f097887b9120a4b0160f1", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T14:27:35Z", "pushed_at": "2018-11-24T12:42:01Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89656, "stargazers_count": 21591, "watchers_count": 21591, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5154, "mirror_url": null, "archived": false, "open_issues_count": 2196, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5154, "open_issues": 2196, "watchers": 21591, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3043"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3043"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/3043"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/3043/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3043/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3043/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/b7b04c276b0cf406e327d1192f61489b78267488"}}, "author_association": "NONE", "body_html": "<p>This is my first PR, would definitely appreciate feedback. Implements functionality requested in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"241202996\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/2001\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/2001/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/2001\">#2001</a> .</p>\n<p>The summary call requires an input size argument (with no batch dimension), but otherwise behaves exactly like keras model summary. Example:</p>\n<pre><code>class NNTwoLayer(torch.nn.Module):\n    def __init__(self, D_in, H, D_out):\n        super(NNTwoLayer, self).__init__()\n        self.lin1 = torch.nn.Linear(D_in, H)\n        self.relu1 = torch.nn.ReLU(inplace=True)\n        self.lin2 = torch.nn.Linear(H, D_out)\n\n    def forward(self, x):\n        h_pred = self.lin1(x)\n        h_relu = self.relu1(h_pred)\n        y_pred = self.lin2(h_relu)\n        return y_pred\n\n#construct a model and print summary\nmymodel = NNTwoLayer(1000,100,10)\nmymodel.summary([1000])\n</code></pre>\n<p>Output:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://camo.githubusercontent.com/dfc09bf223cfd3f306b03d4bd3e42272d38f2e5f/68747470733a2f2f692e696d6775722e636f6d2f495651484963492e706e67\"><img src=\"https://camo.githubusercontent.com/dfc09bf223cfd3f306b03d4bd3e42272d38f2e5f/68747470733a2f2f692e696d6775722e636f6d2f495651484963492e706e67\" alt=\"PyTorch Model Summary\" data-canonical-src=\"https://i.imgur.com/IVQHIcI.png\" style=\"max-width:100%;\"></a></p>", "body_text": "This is my first PR, would definitely appreciate feedback. Implements functionality requested in #2001 .\nThe summary call requires an input size argument (with no batch dimension), but otherwise behaves exactly like keras model summary. Example:\nclass NNTwoLayer(torch.nn.Module):\n    def __init__(self, D_in, H, D_out):\n        super(NNTwoLayer, self).__init__()\n        self.lin1 = torch.nn.Linear(D_in, H)\n        self.relu1 = torch.nn.ReLU(inplace=True)\n        self.lin2 = torch.nn.Linear(H, D_out)\n\n    def forward(self, x):\n        h_pred = self.lin1(x)\n        h_relu = self.relu1(h_pred)\n        y_pred = self.lin2(h_relu)\n        return y_pred\n\n#construct a model and print summary\nmymodel = NNTwoLayer(1000,100,10)\nmymodel.summary([1000])\n\nOutput:", "merged": false, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": null, "comments": 23, "review_comments": 20, "maintainer_can_modify": false, "commits": 7, "additions": 86, "deletions": 0, "changed_files": 1}