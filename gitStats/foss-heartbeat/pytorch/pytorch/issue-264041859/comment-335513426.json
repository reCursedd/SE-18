{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/335513426", "html_url": "https://github.com/pytorch/pytorch/pull/3043#issuecomment-335513426", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3043", "id": 335513426, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTUxMzQyNg==", "user": {"login": "isaykatsman", "id": 10509755, "node_id": "MDQ6VXNlcjEwNTA5NzU1", "avatar_url": "https://avatars1.githubusercontent.com/u/10509755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/isaykatsman", "html_url": "https://github.com/isaykatsman", "followers_url": "https://api.github.com/users/isaykatsman/followers", "following_url": "https://api.github.com/users/isaykatsman/following{/other_user}", "gists_url": "https://api.github.com/users/isaykatsman/gists{/gist_id}", "starred_url": "https://api.github.com/users/isaykatsman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/isaykatsman/subscriptions", "organizations_url": "https://api.github.com/users/isaykatsman/orgs", "repos_url": "https://api.github.com/users/isaykatsman/repos", "events_url": "https://api.github.com/users/isaykatsman/events{/privacy}", "received_events_url": "https://api.github.com/users/isaykatsman/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-10T15:34:31Z", "updated_at": "2017-10-10T15:35:44Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9110200\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fmassa\">@fmassa</a> Thanks for the feedback! To address your additional questions, I suppose the main reasons I placed the printing code in <code>nn.Module</code> was because I saw the <code>__repr__</code> printing code was there already and I am used to being able to call <code>model.summary()</code> on my models. Do you think these reasons for keeping it in <code>nn.Module</code> are sufficient? However, given the size of the summary functionality in LOCs, I can fully understand why it would be reasonable to offload it to <code>contrib</code>. As for the second comment, I think that would be pretty cool as well, but probably for a more verbose, separate \"view tracing\" feature or something. As you said, I think it would be a bit over kill in this case :).</p>", "body_text": "@fmassa Thanks for the feedback! To address your additional questions, I suppose the main reasons I placed the printing code in nn.Module was because I saw the __repr__ printing code was there already and I am used to being able to call model.summary() on my models. Do you think these reasons for keeping it in nn.Module are sufficient? However, given the size of the summary functionality in LOCs, I can fully understand why it would be reasonable to offload it to contrib. As for the second comment, I think that would be pretty cool as well, but probably for a more verbose, separate \"view tracing\" feature or something. As you said, I think it would be a bit over kill in this case :).", "body": "@fmassa Thanks for the feedback! To address your additional questions, I suppose the main reasons I placed the printing code in `nn.Module` was because I saw the `__repr__` printing code was there already and I am used to being able to call `model.summary()` on my models. Do you think these reasons for keeping it in `nn.Module` are sufficient? However, given the size of the summary functionality in LOCs, I can fully understand why it would be reasonable to offload it to `contrib`. As for the second comment, I think that would be pretty cool as well, but probably for a more verbose, separate \"view tracing\" feature or something. As you said, I think it would be a bit over kill in this case :)."}