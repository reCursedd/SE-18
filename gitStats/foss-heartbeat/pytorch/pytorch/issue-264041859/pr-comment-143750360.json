{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/143750360", "pull_request_review_id": 68303334, "id": 143750360, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Mzc1MDM2MA==", "diff_hunk": "@@ -551,6 +551,81 @@ def __repr__(self):\n         tmpstr = tmpstr + ')'\n         return tmpstr\n \n+    def summary(self, input_size):\n+        def register_hook(module):\n+            def hook(module, input, output):\n+                class_name = str(module.__class__).split('.')[-1].split(\"'\")[0]\n+                module_idx = len(summary)\n+                m_key = '%s-%i' % (class_name, module_idx + 1)\n+                summary[m_key] = OrderedDict()\n+                summary[m_key]['input_shape'] = list(input[0].size())\n+                summary[m_key]['input_shape'][0] = None\n+                summary[m_key]['output_shape'] = list(output.size())\n+                summary[m_key]['output_shape'][0] = None\n+\n+                params = 0\n+                if hasattr(module, 'weight'):\n+                    params += torch.prod(torch.LongTensor(list(module.weight.size())))\n+                    if module.weight.requires_grad:\n+                        summary[m_key]['trainable'] = True\n+                    else:\n+                        summary[m_key]['trainable'] = False\n+                if hasattr(module, 'bias'):\n+                    params += torch.prod(torch.LongTensor(list(module.bias.size())))\n+                summary[m_key]['nb_params'] = params\n+\n+            if not isinstance(module, torch.nn.Sequential) and \\", "path": "torch/nn/modules/module.py", "position": null, "original_position": 27, "commit_id": "b7b04c276b0cf406e327d1192f61489b78267488", "original_commit_id": "98a3fdf83d1d345cf8db906f395c8a973961cc6b", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "body": "I'm not sure this is enough to handle cases as the one I mentioned in a comment below. We need to define how exactly we want that information.", "created_at": "2017-10-10T14:45:52Z", "updated_at": "2018-11-23T15:35:12Z", "html_url": "https://github.com/pytorch/pytorch/pull/3043#discussion_r143750360", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3043", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/143750360"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3043#discussion_r143750360"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3043"}}, "body_html": "<p>I'm not sure this is enough to handle cases as the one I mentioned in a comment below. We need to define how exactly we want that information.</p>", "body_text": "I'm not sure this is enough to handle cases as the one I mentioned in a comment below. We need to define how exactly we want that information."}