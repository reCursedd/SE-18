{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/347737678", "html_url": "https://github.com/pytorch/pytorch/pull/3043#issuecomment-347737678", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3043", "id": 347737678, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzczNzY3OA==", "user": {"login": "isaykatsman", "id": 10509755, "node_id": "MDQ6VXNlcjEwNTA5NzU1", "avatar_url": "https://avatars1.githubusercontent.com/u/10509755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/isaykatsman", "html_url": "https://github.com/isaykatsman", "followers_url": "https://api.github.com/users/isaykatsman/followers", "following_url": "https://api.github.com/users/isaykatsman/following{/other_user}", "gists_url": "https://api.github.com/users/isaykatsman/gists{/gist_id}", "starred_url": "https://api.github.com/users/isaykatsman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/isaykatsman/subscriptions", "organizations_url": "https://api.github.com/users/isaykatsman/orgs", "repos_url": "https://api.github.com/users/isaykatsman/repos", "events_url": "https://api.github.com/users/isaykatsman/events{/privacy}", "received_events_url": "https://api.github.com/users/isaykatsman/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-29T02:59:21Z", "updated_at": "2017-11-29T04:58:07Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3186211\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Erotemic\">@Erotemic</a> Yeah, I think it would be nice. Forwarding to obtain sizes is a bit of a janky solution. Overall I'm not sure what the cleanest way would be to implement the <code>output_shape_for</code> functionality. The way it is currently, you would have to maintain the <code>output_shape_for</code> separately as new layers are added which would get rather annoying. Maybe incorporating it directly into <code>nn</code> and requiring each layer to implement an output shape method would be a better way to do it.</p>", "body_text": "@Erotemic Yeah, I think it would be nice. Forwarding to obtain sizes is a bit of a janky solution. Overall I'm not sure what the cleanest way would be to implement the output_shape_for functionality. The way it is currently, you would have to maintain the output_shape_for separately as new layers are added which would get rather annoying. Maybe incorporating it directly into nn and requiring each layer to implement an output shape method would be a better way to do it.", "body": "@Erotemic Yeah, I think it would be nice. Forwarding to obtain sizes is a bit of a janky solution. Overall I'm not sure what the cleanest way would be to implement the `output_shape_for` functionality. The way it is currently, you would have to maintain the `output_shape_for` separately as new layers are added which would get rather annoying. Maybe incorporating it directly into `nn` and requiring each layer to implement an output shape method would be a better way to do it."}