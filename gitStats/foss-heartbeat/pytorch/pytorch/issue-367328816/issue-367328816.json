{"url": "https://api.github.com/repos/pytorch/pytorch/issues/12383", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/12383/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12383/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/12383/events", "html_url": "https://github.com/pytorch/pytorch/issues/12383", "id": 367328816, "node_id": "MDU6SXNzdWUzNjczMjg4MTY=", "number": 12383, "title": "Tricky to query the requires_grad() property of at::Tensor", "user": {"login": "meganset", "id": 26304558, "node_id": "MDQ6VXNlcjI2MzA0NTU4", "avatar_url": "https://avatars0.githubusercontent.com/u/26304558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meganset", "html_url": "https://github.com/meganset", "followers_url": "https://api.github.com/users/meganset/followers", "following_url": "https://api.github.com/users/meganset/following{/other_user}", "gists_url": "https://api.github.com/users/meganset/gists{/gist_id}", "starred_url": "https://api.github.com/users/meganset/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meganset/subscriptions", "organizations_url": "https://api.github.com/users/meganset/orgs", "repos_url": "https://api.github.com/users/meganset/repos", "events_url": "https://api.github.com/users/meganset/events{/privacy}", "received_events_url": "https://api.github.com/users/meganset/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-05T18:54:50Z", "updated_at": "2018-10-08T05:19:41Z", "closed_at": null, "author_association": "NONE", "body_html": "<h2><g-emoji class=\"g-emoji\" alias=\"bug\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f41b.png\">\ud83d\udc1b</g-emoji> Bug</h2>\n<p><code>auto t=at::tensor({1});</code><br>\n<code>t.requires_grad();</code><br>\n<em>at::Error: requires_grad is not implemented for Tensor</em></p>\n<p>this is deliberately inhibited in core/TensorImpl.h<br>\nnot really a bug, but seems an innocent enough question for a tensor to ask of itself.</p>\n<p>can go around via:<br>\n<code>t.options().requires_grad();</code></p>\n<p>but this doesn't get at the tensor's gradient setting:</p>\n<p><code>inline TensorOptions Tensor::options() const {</code><br>\n<code> return TensorOptions().dtype(dtype())</code><br>\n<code>                       .device(device())</code><br>\n<code>                      .layout(layout())</code><br>\n<code>                        .is_variable(is_variable());</code><br>\n<code>}</code></p>\n<p>creating via torch instead means requires_grad() is permitted:<br>\n<code>auto v=torch::tensor({1.0}, at::requires_grad());</code><br>\n<code>v.requires_grad();</code><br>\nbut querying via options is misleading:<br>\n<code>v.options().requires_grad();</code><br>\nwill be always false</p>\n<h2>Additional context</h2>\n<p>(trying to sort out tensors from the at:: functions vs variables from torch:: in the new c++ api)</p>", "body_text": "\ud83d\udc1b Bug\nauto t=at::tensor({1});\nt.requires_grad();\nat::Error: requires_grad is not implemented for Tensor\nthis is deliberately inhibited in core/TensorImpl.h\nnot really a bug, but seems an innocent enough question for a tensor to ask of itself.\ncan go around via:\nt.options().requires_grad();\nbut this doesn't get at the tensor's gradient setting:\ninline TensorOptions Tensor::options() const {\n return TensorOptions().dtype(dtype())\n                       .device(device())\n                      .layout(layout())\n                        .is_variable(is_variable());\n}\ncreating via torch instead means requires_grad() is permitted:\nauto v=torch::tensor({1.0}, at::requires_grad());\nv.requires_grad();\nbut querying via options is misleading:\nv.options().requires_grad();\nwill be always false\nAdditional context\n(trying to sort out tensors from the at:: functions vs variables from torch:: in the new c++ api)", "body": "## \ud83d\udc1b Bug\r\n\r\n`auto t=at::tensor({1});`\r\n `t.requires_grad();`\r\n_at::Error: requires_grad is not implemented for Tensor_\r\n\r\nthis is deliberately inhibited in core/TensorImpl.h \r\nnot really a bug, but seems an innocent enough question for a tensor to ask of itself.\r\n\r\ncan go around via:\r\n`t.options().requires_grad();`\r\n\r\nbut this doesn't get at the tensor's gradient setting:\r\n\r\n`inline TensorOptions Tensor::options() const {`\r\n ` return TensorOptions().dtype(dtype())`\r\n `                       .device(device())`\r\n `                      .layout(layout())`\r\n`                        .is_variable(is_variable());`\r\n`}`\r\n\r\ncreating via torch instead means requires_grad() is permitted:\r\n`auto v=torch::tensor({1.0}, at::requires_grad());`\r\n`v.requires_grad();`\r\nbut querying via options is misleading:\r\n`v.options().requires_grad();`\r\nwill be always false\r\n\r\n## Additional context\r\n\r\n(trying to sort out tensors from the at:: functions vs variables from torch:: in the new c++ api)"}