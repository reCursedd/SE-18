{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7692", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7692/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7692/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7692/events", "html_url": "https://github.com/pytorch/pytorch/issues/7692", "id": 324563665, "node_id": "MDU6SXNzdWUzMjQ1NjM2NjU=", "number": 7692, "title": "[bug] floating precision issue with the dot product between 2 vectors", "user": {"login": "iondel", "id": 19517081, "node_id": "MDQ6VXNlcjE5NTE3MDgx", "avatar_url": "https://avatars1.githubusercontent.com/u/19517081?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iondel", "html_url": "https://github.com/iondel", "followers_url": "https://api.github.com/users/iondel/followers", "following_url": "https://api.github.com/users/iondel/following{/other_user}", "gists_url": "https://api.github.com/users/iondel/gists{/gist_id}", "starred_url": "https://api.github.com/users/iondel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iondel/subscriptions", "organizations_url": "https://api.github.com/users/iondel/orgs", "repos_url": "https://api.github.com/users/iondel/repos", "events_url": "https://api.github.com/users/iondel/events{/privacy}", "received_events_url": "https://api.github.com/users/iondel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-18T21:58:11Z", "updated_at": "2018-05-19T17:27:50Z", "closed_at": "2018-05-19T17:27:08Z", "author_association": "NONE", "body_html": "<p>Hi,</p>\n<p>I came across this problem while using pytorch:</p>\n<p>The dot product between 2 vectors with floating precision can become arbitrarily small/large. This problem does not occur when using the sum and product operation separately:</p>\n<pre><code>v1, v2 = torch.FloatTensor([1., 1.]), torch.FloatTensor([-1., -0.9999999])\nfloat(v1 @ v2), float(torch.sum(v1 * v2))  \n(-3.6893488147419103e+19, -1.9999998807907104)\n</code></pre>\n<p>Dot product with tensors with double precision seems ok:</p>\n<pre><code>v1, v2 = torch.DoubleTensor([1., 1.]), torch.DoubleTensor([-1., -0.9999999])\nfloat(v1 @ v2), float(torch.sum(v1 * v2))\n(-1.9999999000000002, -1.9999999000000002)\n</code></pre>\n<h2>System Info</h2>\n<p>PyTorch version: 0.4.0<br>\nIs debug build: No<br>\nCUDA used to build PyTorch: None</p>\n<p>OS: Mac OSX 10.13.4<br>\nGCC version: Could not collect<br>\nCMake version: Could not collect</p>\n<p>Python version: 3.6<br>\nIs CUDA available: No<br>\nCUDA runtime version: No CUDA<br>\nGPU models and configuration: No CUDA<br>\nNvidia driver version: No CUDA<br>\ncuDNN version: No CUDA</p>\n<p>Versions of relevant libraries:<br>\n[pip] numpy (1.14.0)<br>\n[pip] numpydoc (0.7.0)<br>\n[pip] torch (0.4.0)<br>\n[pip] torchvision (0.2.1)<br>\n[conda] pytorch                   0.4.0           py36_cuda0.0_cudnn0.0_1    pytorch<br>\n[conda] torchvision               0.2.1                    py36_1    pytorch</p>", "body_text": "Hi,\nI came across this problem while using pytorch:\nThe dot product between 2 vectors with floating precision can become arbitrarily small/large. This problem does not occur when using the sum and product operation separately:\nv1, v2 = torch.FloatTensor([1., 1.]), torch.FloatTensor([-1., -0.9999999])\nfloat(v1 @ v2), float(torch.sum(v1 * v2))  \n(-3.6893488147419103e+19, -1.9999998807907104)\n\nDot product with tensors with double precision seems ok:\nv1, v2 = torch.DoubleTensor([1., 1.]), torch.DoubleTensor([-1., -0.9999999])\nfloat(v1 @ v2), float(torch.sum(v1 * v2))\n(-1.9999999000000002, -1.9999999000000002)\n\nSystem Info\nPyTorch version: 0.4.0\nIs debug build: No\nCUDA used to build PyTorch: None\nOS: Mac OSX 10.13.4\nGCC version: Could not collect\nCMake version: Could not collect\nPython version: 3.6\nIs CUDA available: No\nCUDA runtime version: No CUDA\nGPU models and configuration: No CUDA\nNvidia driver version: No CUDA\ncuDNN version: No CUDA\nVersions of relevant libraries:\n[pip] numpy (1.14.0)\n[pip] numpydoc (0.7.0)\n[pip] torch (0.4.0)\n[pip] torchvision (0.2.1)\n[conda] pytorch                   0.4.0           py36_cuda0.0_cudnn0.0_1    pytorch\n[conda] torchvision               0.2.1                    py36_1    pytorch", "body": "Hi, \r\n\r\nI came across this problem while using pytorch:\r\n\r\nThe dot product between 2 vectors with floating precision can become arbitrarily small/large. This problem does not occur when using the sum and product operation separately:\r\n\r\n```\r\nv1, v2 = torch.FloatTensor([1., 1.]), torch.FloatTensor([-1., -0.9999999])\r\nfloat(v1 @ v2), float(torch.sum(v1 * v2))  \r\n(-3.6893488147419103e+19, -1.9999998807907104)\r\n```\r\n\r\nDot product with tensors with double precision seems ok:\r\n\r\n```\r\nv1, v2 = torch.DoubleTensor([1., 1.]), torch.DoubleTensor([-1., -0.9999999])\r\nfloat(v1 @ v2), float(torch.sum(v1 * v2))\r\n(-1.9999999000000002, -1.9999999000000002)\r\n```\r\n\r\n## System Info\r\n\r\nPyTorch version: 0.4.0\r\nIs debug build: No\r\nCUDA used to build PyTorch: None\r\n\r\nOS: Mac OSX 10.13.4\r\nGCC version: Could not collect\r\nCMake version: Could not collect\r\n\r\nPython version: 3.6\r\nIs CUDA available: No\r\nCUDA runtime version: No CUDA\r\nGPU models and configuration: No CUDA\r\nNvidia driver version: No CUDA\r\ncuDNN version: No CUDA\r\n\r\nVersions of relevant libraries:\r\n[pip] numpy (1.14.0)\r\n[pip] numpydoc (0.7.0)\r\n[pip] torch (0.4.0)\r\n[pip] torchvision (0.2.1)\r\n[conda] pytorch                   0.4.0           py36_cuda0.0_cudnn0.0_1    pytorch\r\n[conda] torchvision               0.2.1                    py36_1    pytorch"}