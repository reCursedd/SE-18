{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/6188", "id": 178851589, "node_id": "MDExOlB1bGxSZXF1ZXN0MTc4ODUxNTg5", "html_url": "https://github.com/pytorch/pytorch/pull/6188", "diff_url": "https://github.com/pytorch/pytorch/pull/6188.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/6188.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6188", "number": 6188, "state": "closed", "locked": false, "title": "Modularize ATen cmake.", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "```\r\ncommit 3ed781ebdca37cc3e2cf21389e0974827775ebb6\r\nAuthor: Edward Z. Yang <ezyang@fb.com>\r\nDate:   Mon Apr 2 07:32:13 2018 -0700\r\n\r\n    Towards modularizing ATen cmake.\r\n    \r\n    Right now, ATen is a big, monolithic cmake build system, which means that if\r\n    there are small pieces we want to reuse in other places, it is difficult to use\r\n    them (you essentially have to write a CMakeLists.txt for the relevant component\r\n    from scratch.)\r\n    \r\n    This commit takes a step towards modularizing the cmake.  Specifically, it\r\n    takes the following steps:\r\n    \r\n    - It extracts the common compile flag / feature testing preamble in\r\n      aten/CMakeLists.txt and aten/src/ATen/CMakeLists.txt into a common\r\n      header aten/cmake/Common.cmake.  This makes it easier to reuse this\r\n      header in case we want other entry points to the build system.\r\n    \r\n    - It extracts dependency finding and loading into aten/cmake/LoadFoo.cmake\r\n      files.  This is not the desired end-state (the modern Caffe2 style is\r\n      to make a new-style cmake target for each of our deps which we can\r\n      depend on directly) but it's a good start.\r\n    \r\n    - It splits out avx_mathfun.h and Intrinsics.h into a new package in src\r\n      avx_mathfun, because these headers are depended upon by both TH and\r\n      ATen directly.  I think this might be a temporary state of affairs\r\n      because we will move things out of TH eventually.\r\n    \r\n    - It turns TH into a static library, which will be linked into ATen.  This\r\n      library declares its headers as public interfaces, so they are automatically\r\n      picked up by libraries which depend on it, e.g., ATen proper (and more\r\n      specifically the THC source.)\r\n    \r\n    Testing strategy:\r\n    \r\n        cd aten/src/TH\r\n        mkdir build\r\n        cd build\r\n        cmake ..\r\n        make -j20\r\n    \r\n    TH can be built by itself now.\r\n    \r\n    Signed-off-by: Edward Z. Yang <ezyang@fb.com>\r\n\r\ncommit 4fc4c7d0cf899291bf3d72ad5fb5d14330ef147a\r\nAuthor: Edward Z. Yang <ezyang@fb.com>\r\nDate:   Tue Apr 3 08:20:38 2018 -0700\r\n\r\n    FindCUDA: Make nvcc configurable via CUDA_NVCC_EXECUTABLE env var\r\n    \r\n    Applies upstream cmake FindCUDA patch:\r\n    \r\n        commit 23119366e9d4e56e13c1fdec9dbff5e8f8c55ee5\r\n        Author: Edward Z. Yang <ezyang@fb.com>\r\n        Date:   Wed Mar 28 11:33:56 2018 -0400\r\n    \r\n            FindCUDA: Make nvcc configurable via CUDA_NVCC_EXECUTABLE env var\r\n    \r\n            This is useful if, for example, you want ccache to be used\r\n            for nvcc.  With the current behavior, cmake always picks up\r\n            /usr/local/cuda/bin/nvcc, even if there is a ccache nvcc\r\n            stub in the PATH.  Allowing for CUDA_NVCC_EXECUTABLE lets\r\n            us work around the problem.\r\n    \r\n            Signed-off-by: Edward Z. Yang <ezyang@fb.com>\r\n    \r\n    Signed-off-by: Edward Z. Yang <ezyang@fb.com>\r\n\r\ncommit 7e60e3b0e46e5437490dd99f74b77c0fe6f81840\r\nAuthor: Edward Z. Yang <ezyang@fb.com>\r\nDate:   Tue Apr 3 08:16:00 2018 -0700\r\n\r\n    Remove ATen's copy of FindCUDA\r\n    \r\n    Signed-off-by: Edward Z. Yang <ezyang@fb.com>\r\n```", "created_at": "2018-04-02T14:35:50Z", "updated_at": "2018-11-23T15:41:45Z", "closed_at": "2018-04-24T17:31:11Z", "merged_at": null, "merge_commit_sha": "8bb23ac9ae9c7f42301f3464efbe3912c2ffe92c", "assignee": null, "assignees": [], "requested_reviewers": [{"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6188/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6188/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6188/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/710b938a66e6521d279ce53315a6581144f87d13", "head": {"label": "ezyang:pr/modularize-cmake", "ref": "pr/modularize-cmake", "sha": "710b938a66e6521d279ce53315a6581144f87d13", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "repo": {"id": 101798885, "node_id": "MDEwOlJlcG9zaXRvcnkxMDE3OTg4ODU=", "name": "pytorch", "full_name": "ezyang/pytorch", "private": false, "owner": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/ezyang/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": true, "url": "https://api.github.com/repos/ezyang/pytorch", "forks_url": "https://api.github.com/repos/ezyang/pytorch/forks", "keys_url": "https://api.github.com/repos/ezyang/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/ezyang/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/ezyang/pytorch/teams", "hooks_url": "https://api.github.com/repos/ezyang/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/ezyang/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/ezyang/pytorch/events", "assignees_url": "https://api.github.com/repos/ezyang/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/ezyang/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/ezyang/pytorch/tags", "blobs_url": "https://api.github.com/repos/ezyang/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/ezyang/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/ezyang/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/ezyang/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/ezyang/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/ezyang/pytorch/languages", "stargazers_url": "https://api.github.com/repos/ezyang/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/ezyang/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/ezyang/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/ezyang/pytorch/subscription", "commits_url": "https://api.github.com/repos/ezyang/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/ezyang/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/ezyang/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/ezyang/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/ezyang/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/ezyang/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/ezyang/pytorch/merges", "archive_url": "https://api.github.com/repos/ezyang/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/ezyang/pytorch/downloads", "issues_url": "https://api.github.com/repos/ezyang/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/ezyang/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/ezyang/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/ezyang/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/ezyang/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/ezyang/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/ezyang/pytorch/deployments", "created_at": "2017-08-29T19:28:39Z", "updated_at": "2018-10-29T15:06:40Z", "pushed_at": "2018-11-21T22:30:09Z", "git_url": "git://github.com/ezyang/pytorch.git", "ssh_url": "git@github.com:ezyang/pytorch.git", "clone_url": "https://github.com/ezyang/pytorch.git", "svn_url": "https://github.com/ezyang/pytorch", "homepage": "http://pytorch.org", "size": 88254, "stargazers_count": 1, "watchers_count": 1, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 2, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 0, "open_issues": 2, "watchers": 1, "default_branch": "master"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "87e369111a5defce56b4f0b3fac53970fa0d5462", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T15:34:47Z", "pushed_at": "2018-11-24T12:42:01Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89656, "stargazers_count": 21592, "watchers_count": 21592, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5154, "mirror_url": null, "archived": false, "open_issues_count": 2196, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5154, "open_issues": 2196, "watchers": 21592, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6188"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6188"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/6188"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/6188/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6188/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6188/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/710b938a66e6521d279ce53315a6581144f87d13"}}, "author_association": "CONTRIBUTOR", "body_html": "<pre><code>commit 3ed781ebdca37cc3e2cf21389e0974827775ebb6\nAuthor: Edward Z. Yang &lt;ezyang@fb.com&gt;\nDate:   Mon Apr 2 07:32:13 2018 -0700\n\n    Towards modularizing ATen cmake.\n    \n    Right now, ATen is a big, monolithic cmake build system, which means that if\n    there are small pieces we want to reuse in other places, it is difficult to use\n    them (you essentially have to write a CMakeLists.txt for the relevant component\n    from scratch.)\n    \n    This commit takes a step towards modularizing the cmake.  Specifically, it\n    takes the following steps:\n    \n    - It extracts the common compile flag / feature testing preamble in\n      aten/CMakeLists.txt and aten/src/ATen/CMakeLists.txt into a common\n      header aten/cmake/Common.cmake.  This makes it easier to reuse this\n      header in case we want other entry points to the build system.\n    \n    - It extracts dependency finding and loading into aten/cmake/LoadFoo.cmake\n      files.  This is not the desired end-state (the modern Caffe2 style is\n      to make a new-style cmake target for each of our deps which we can\n      depend on directly) but it's a good start.\n    \n    - It splits out avx_mathfun.h and Intrinsics.h into a new package in src\n      avx_mathfun, because these headers are depended upon by both TH and\n      ATen directly.  I think this might be a temporary state of affairs\n      because we will move things out of TH eventually.\n    \n    - It turns TH into a static library, which will be linked into ATen.  This\n      library declares its headers as public interfaces, so they are automatically\n      picked up by libraries which depend on it, e.g., ATen proper (and more\n      specifically the THC source.)\n    \n    Testing strategy:\n    \n        cd aten/src/TH\n        mkdir build\n        cd build\n        cmake ..\n        make -j20\n    \n    TH can be built by itself now.\n    \n    Signed-off-by: Edward Z. Yang &lt;ezyang@fb.com&gt;\n\ncommit 4fc4c7d0cf899291bf3d72ad5fb5d14330ef147a\nAuthor: Edward Z. Yang &lt;ezyang@fb.com&gt;\nDate:   Tue Apr 3 08:20:38 2018 -0700\n\n    FindCUDA: Make nvcc configurable via CUDA_NVCC_EXECUTABLE env var\n    \n    Applies upstream cmake FindCUDA patch:\n    \n        commit 23119366e9d4e56e13c1fdec9dbff5e8f8c55ee5\n        Author: Edward Z. Yang &lt;ezyang@fb.com&gt;\n        Date:   Wed Mar 28 11:33:56 2018 -0400\n    \n            FindCUDA: Make nvcc configurable via CUDA_NVCC_EXECUTABLE env var\n    \n            This is useful if, for example, you want ccache to be used\n            for nvcc.  With the current behavior, cmake always picks up\n            /usr/local/cuda/bin/nvcc, even if there is a ccache nvcc\n            stub in the PATH.  Allowing for CUDA_NVCC_EXECUTABLE lets\n            us work around the problem.\n    \n            Signed-off-by: Edward Z. Yang &lt;ezyang@fb.com&gt;\n    \n    Signed-off-by: Edward Z. Yang &lt;ezyang@fb.com&gt;\n\ncommit 7e60e3b0e46e5437490dd99f74b77c0fe6f81840\nAuthor: Edward Z. Yang &lt;ezyang@fb.com&gt;\nDate:   Tue Apr 3 08:16:00 2018 -0700\n\n    Remove ATen's copy of FindCUDA\n    \n    Signed-off-by: Edward Z. Yang &lt;ezyang@fb.com&gt;\n</code></pre>", "body_text": "commit 3ed781ebdca37cc3e2cf21389e0974827775ebb6\nAuthor: Edward Z. Yang <ezyang@fb.com>\nDate:   Mon Apr 2 07:32:13 2018 -0700\n\n    Towards modularizing ATen cmake.\n    \n    Right now, ATen is a big, monolithic cmake build system, which means that if\n    there are small pieces we want to reuse in other places, it is difficult to use\n    them (you essentially have to write a CMakeLists.txt for the relevant component\n    from scratch.)\n    \n    This commit takes a step towards modularizing the cmake.  Specifically, it\n    takes the following steps:\n    \n    - It extracts the common compile flag / feature testing preamble in\n      aten/CMakeLists.txt and aten/src/ATen/CMakeLists.txt into a common\n      header aten/cmake/Common.cmake.  This makes it easier to reuse this\n      header in case we want other entry points to the build system.\n    \n    - It extracts dependency finding and loading into aten/cmake/LoadFoo.cmake\n      files.  This is not the desired end-state (the modern Caffe2 style is\n      to make a new-style cmake target for each of our deps which we can\n      depend on directly) but it's a good start.\n    \n    - It splits out avx_mathfun.h and Intrinsics.h into a new package in src\n      avx_mathfun, because these headers are depended upon by both TH and\n      ATen directly.  I think this might be a temporary state of affairs\n      because we will move things out of TH eventually.\n    \n    - It turns TH into a static library, which will be linked into ATen.  This\n      library declares its headers as public interfaces, so they are automatically\n      picked up by libraries which depend on it, e.g., ATen proper (and more\n      specifically the THC source.)\n    \n    Testing strategy:\n    \n        cd aten/src/TH\n        mkdir build\n        cd build\n        cmake ..\n        make -j20\n    \n    TH can be built by itself now.\n    \n    Signed-off-by: Edward Z. Yang <ezyang@fb.com>\n\ncommit 4fc4c7d0cf899291bf3d72ad5fb5d14330ef147a\nAuthor: Edward Z. Yang <ezyang@fb.com>\nDate:   Tue Apr 3 08:20:38 2018 -0700\n\n    FindCUDA: Make nvcc configurable via CUDA_NVCC_EXECUTABLE env var\n    \n    Applies upstream cmake FindCUDA patch:\n    \n        commit 23119366e9d4e56e13c1fdec9dbff5e8f8c55ee5\n        Author: Edward Z. Yang <ezyang@fb.com>\n        Date:   Wed Mar 28 11:33:56 2018 -0400\n    \n            FindCUDA: Make nvcc configurable via CUDA_NVCC_EXECUTABLE env var\n    \n            This is useful if, for example, you want ccache to be used\n            for nvcc.  With the current behavior, cmake always picks up\n            /usr/local/cuda/bin/nvcc, even if there is a ccache nvcc\n            stub in the PATH.  Allowing for CUDA_NVCC_EXECUTABLE lets\n            us work around the problem.\n    \n            Signed-off-by: Edward Z. Yang <ezyang@fb.com>\n    \n    Signed-off-by: Edward Z. Yang <ezyang@fb.com>\n\ncommit 7e60e3b0e46e5437490dd99f74b77c0fe6f81840\nAuthor: Edward Z. Yang <ezyang@fb.com>\nDate:   Tue Apr 3 08:16:00 2018 -0700\n\n    Remove ATen's copy of FindCUDA\n    \n    Signed-off-by: Edward Z. Yang <ezyang@fb.com>", "merged": false, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": null, "comments": 12, "review_comments": 7, "maintainer_can_modify": false, "commits": 5, "additions": 986, "deletions": 805, "changed_files": 54}