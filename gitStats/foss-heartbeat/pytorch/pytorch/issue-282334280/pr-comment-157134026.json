{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/157134026", "pull_request_review_id": 83727701, "id": 157134026, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzEzNDAyNg==", "diff_hunk": "@@ -60,3 +65,37 @@ def enumerate_support(self):\n             Variable or Tensor iterating over dimension 0.\n         \"\"\"\n         raise NotImplementedError\n+\n+    def _extended_shape(self, sample_shape=()):\n+        \"\"\"\n+        Returns the size of the sample returned by the distribution, given\n+        a `sample_shape`. Note, that the batch and event shapes of a distribution\n+        instance are fixed at the time of construction. If this is empty, the\n+        returned shape is upcast to (1,).\n+\n+        Args:\n+            sample_shape (torch.Size): the size of the sample to be drawn.\n+        \"\"\"\n+        shape = sample_shape + self._batch_shape + self._event_shape\n+        if not shape:\n+            shape = (1,)\n+        return shape\n+\n+    def _validate_log_prob_arg(self, value):\n+        \"\"\"\n+        Argument validation for `log_prob` methods. The rightmost dimensions\n+        of a value to be scored via `log_prob` must agree with the distribution's\n+        batch and event shapes.\n+\n+        Args:\n+            value (Tensor or Variable): the tensor whose log probability is to be\n+                computed by the `log_prob` method.\n+        Raises\n+            ValueError: when the rightmost dimensions of `value` do not match the\n+                distribution's batch and event shapes.\n+        \"\"\"\n+        if not isinstance(value, (torch.Tensor, Variable)):", "path": "torch/distributions/distribution.py", "position": null, "original_position": 49, "commit_id": "ba914cea360f1bd18c1da2086370c7d7df5e0bf9", "original_commit_id": "6dad9c3b0c728e1260bedbe2ae7728d46b46d4dc", "user": {"login": "fritzo", "id": 648532, "node_id": "MDQ6VXNlcjY0ODUzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/648532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzo", "html_url": "https://github.com/fritzo", "followers_url": "https://api.github.com/users/fritzo/followers", "following_url": "https://api.github.com/users/fritzo/following{/other_user}", "gists_url": "https://api.github.com/users/fritzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzo/subscriptions", "organizations_url": "https://api.github.com/users/fritzo/orgs", "repos_url": "https://api.github.com/users/fritzo/repos", "events_url": "https://api.github.com/users/fritzo/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzo/received_events", "type": "User", "site_admin": false}, "body": "I think you want `if not (torch.is_tensor(value) or isinstance(value, Variable))`, since `torch.Tensor` is an alias for a single type, rather than a base class.", "created_at": "2017-12-15T06:56:00Z", "updated_at": "2018-11-23T15:37:24Z", "html_url": "https://github.com/pytorch/pytorch/pull/4193#discussion_r157134026", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4193", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/157134026"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4193#discussion_r157134026"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4193"}}, "body_html": "<p>I think you want <code>if not (torch.is_tensor(value) or isinstance(value, Variable))</code>, since <code>torch.Tensor</code> is an alias for a single type, rather than a base class.</p>", "body_text": "I think you want if not (torch.is_tensor(value) or isinstance(value, Variable)), since torch.Tensor is an alias for a single type, rather than a base class."}