{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4193", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4193/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4193/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4193/events", "html_url": "https://github.com/pytorch/pytorch/pull/4193", "id": 282334280, "node_id": "MDExOlB1bGxSZXF1ZXN0MTU4NTMzNDEx", "number": 4193, "title": "Provide full support for distribution shapes", "user": {"login": "neerajprad", "id": 1762463, "node_id": "MDQ6VXNlcjE3NjI0NjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1762463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neerajprad", "html_url": "https://github.com/neerajprad", "followers_url": "https://api.github.com/users/neerajprad/followers", "following_url": "https://api.github.com/users/neerajprad/following{/other_user}", "gists_url": "https://api.github.com/users/neerajprad/gists{/gist_id}", "starred_url": "https://api.github.com/users/neerajprad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neerajprad/subscriptions", "organizations_url": "https://api.github.com/users/neerajprad/orgs", "repos_url": "https://api.github.com/users/neerajprad/repos", "events_url": "https://api.github.com/users/neerajprad/events{/privacy}", "received_events_url": "https://api.github.com/users/neerajprad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-12-15T06:43:08Z", "updated_at": "2018-11-23T15:37:25Z", "closed_at": "2017-12-15T11:41:08Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/4193", "html_url": "https://github.com/pytorch/pytorch/pull/4193", "diff_url": "https://github.com/pytorch/pytorch/pull/4193.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/4193.patch"}, "body_html": "<p>This allows us to support all the distribution shape semantics for sampling and scoring that we have discussed.</p>\n<ul>\n<li>distributions have internal <code>_batch_shape</code> and <code>_event_shape</code> attributes which are set at the time of construction.</li>\n<li>allows for arbitrary sample shapes (removing restriction for only a single dimensional <code>batch_shape</code> argument).</li>\n<li>allows for scoring of arbitrary shaped samples. Some resulting minor change in <code>log_prob</code> methods. One such change is the part that calls <code>torch.multinomial</code> (which only supports up to 2d tensors) in <code>Categorical.log_prob</code>.</li>\n</ul>\n<p><strong>Testing:</strong> Unit test cases added to validate batch/event shapes are correctly determined internally, and the correct shapes for generated samples and log prob scores. Refer to similar <a href=\"https://docs.google.com/spreadsheets/d/11ULwArylCjdlk4qW2tin0dY2jZ5iRQ0xjtQHvTFmFgs/edit?usp=sharing\" rel=\"nofollow\">examples</a> discussed.</p>\n<p><strong>Note:</strong> Some minor changes are not backwards compatible. Refer to the tests.</p>\n<p><strong>Ref:</strong></p>\n<ul>\n<li>Issue <a href=\"https://github.com/probtorch/pytorch/issues/30\" data-hovercard-type=\"issue\" data-hovercard-url=\"/probtorch/pytorch/issues/30/hovercard\">probtorch#30</a></li>\n<li><a href=\"https://docs.google.com/document/d/1wnABg0cdyaVMr-Xqz_brHBwnPJuzTeSk3Oqko2HHSfE/edit?usp=sharing\" rel=\"nofollow\">Distribution design doc</a></li>\n</ul>", "body_text": "This allows us to support all the distribution shape semantics for sampling and scoring that we have discussed.\n\ndistributions have internal _batch_shape and _event_shape attributes which are set at the time of construction.\nallows for arbitrary sample shapes (removing restriction for only a single dimensional batch_shape argument).\nallows for scoring of arbitrary shaped samples. Some resulting minor change in log_prob methods. One such change is the part that calls torch.multinomial (which only supports up to 2d tensors) in Categorical.log_prob.\n\nTesting: Unit test cases added to validate batch/event shapes are correctly determined internally, and the correct shapes for generated samples and log prob scores. Refer to similar examples discussed.\nNote: Some minor changes are not backwards compatible. Refer to the tests.\nRef:\n\nIssue probtorch#30\nDistribution design doc", "body": "This allows us to support all the distribution shape semantics for sampling and scoring that we have discussed. \r\n - distributions have internal `_batch_shape` and `_event_shape` attributes which are set at the time of construction. \r\n - allows for arbitrary sample shapes (removing restriction for only a single dimensional `batch_shape` argument).\r\n - allows for scoring of arbitrary shaped samples. Some resulting minor change in `log_prob` methods. One such change is the part that calls `torch.multinomial` (which only supports up to 2d tensors) in `Categorical.log_prob`.\r\n\r\n**Testing:** Unit test cases added to validate batch/event shapes are correctly determined internally, and the correct shapes for generated samples and log prob scores. Refer to similar [examples](https://docs.google.com/spreadsheets/d/11ULwArylCjdlk4qW2tin0dY2jZ5iRQ0xjtQHvTFmFgs/edit?usp=sharing) discussed.\r\n\r\n**Note:** Some minor changes are not backwards compatible. Refer to the tests.\r\n\r\n**Ref:** \r\n - Issue [probtorch#30](https://github.com/probtorch/pytorch/issues/30)\r\n - [Distribution design doc](https://docs.google.com/document/d/1wnABg0cdyaVMr-Xqz_brHBwnPJuzTeSk3Oqko2HHSfE/edit?usp=sharing)\r\n"}