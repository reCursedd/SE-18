{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/160383957", "pull_request_review_id": 87489208, "id": 160383957, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDM4Mzk1Nw==", "diff_hunk": "@@ -104,7 +104,14 @@ Variable & VariableType::checked_cast(const Type & type, const Tensor & t, const\n     runtime_error(\"Expected a Tensor of type %s but found an undefined Tensor for argument #%d '%s'\",\n         type.toString(), pos, name);\n   }\n-  if (&t.type() != &type && &t.type() != &type.toBackend(toSparse(t.type().backend()))) {\n+\n+  // Not all types have a matching sparse type\n+  Type* sparse_type = &type.toScalarType(ScalarType::Undefined);\n+  try {\n+    sparse_type = &type.toBackend(toSparse(t.type().backend()));\n+  } catch (std::runtime_error &e) { }", "path": "tools/autograd/templates/VariableType.cpp", "position": 10, "original_position": 10, "commit_id": "04f707054ae7118114a72a965455dbf808264acd", "original_commit_id": "04f707054ae7118114a72a965455dbf808264acd", "user": {"login": "ppwwyyxx", "id": 1381301, "node_id": "MDQ6VXNlcjEzODEzMDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1381301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ppwwyyxx", "html_url": "https://github.com/ppwwyyxx", "followers_url": "https://api.github.com/users/ppwwyyxx/followers", "following_url": "https://api.github.com/users/ppwwyyxx/following{/other_user}", "gists_url": "https://api.github.com/users/ppwwyyxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/ppwwyyxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ppwwyyxx/subscriptions", "organizations_url": "https://api.github.com/users/ppwwyyxx/orgs", "repos_url": "https://api.github.com/users/ppwwyyxx/repos", "events_url": "https://api.github.com/users/ppwwyyxx/events{/privacy}", "received_events_url": "https://api.github.com/users/ppwwyyxx/received_events", "type": "User", "site_admin": false}, "body": "I didn't find how to check whether a type has sparse support. The only way I saw possible is to check whether `context.type_registry[backend][type]` is nullptr. Does that sound good enough?", "created_at": "2018-01-09T11:39:40Z", "updated_at": "2018-11-23T15:37:58Z", "html_url": "https://github.com/pytorch/pytorch/pull/4548#discussion_r160383957", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4548", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/160383957"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4548#discussion_r160383957"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4548"}}, "body_html": "<p>I didn't find how to check whether a type has sparse support. The only way I saw possible is to check whether <code>context.type_registry[backend][type]</code> is nullptr. Does that sound good enough?</p>", "body_text": "I didn't find how to check whether a type has sparse support. The only way I saw possible is to check whether context.type_registry[backend][type] is nullptr. Does that sound good enough?", "in_reply_to_id": 160382329}