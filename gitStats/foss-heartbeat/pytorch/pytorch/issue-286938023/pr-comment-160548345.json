{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/160548345", "pull_request_review_id": 87685831, "id": 160548345, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDU0ODM0NQ==", "diff_hunk": "@@ -104,7 +104,14 @@ Variable & VariableType::checked_cast(const Type & type, const Tensor & t, const\n     runtime_error(\"Expected a Tensor of type %s but found an undefined Tensor for argument #%d '%s'\",\n         type.toString(), pos, name);\n   }\n-  if (&t.type() != &type && &t.type() != &type.toBackend(toSparse(t.type().backend()))) {\n+\n+  // Not all types have a matching sparse type\n+  Type* sparse_type = &type.toScalarType(ScalarType::Undefined);\n+  try {\n+    sparse_type = &type.toBackend(toSparse(t.type().backend()));\n+  } catch (std::runtime_error &e) { }", "path": "tools/autograd/templates/VariableType.cpp", "position": 10, "original_position": 10, "commit_id": "04f707054ae7118114a72a965455dbf808264acd", "original_commit_id": "04f707054ae7118114a72a965455dbf808264acd", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "I don't think we want to do it this way. This will add overhead to every PyTorch function.\r\n\r\nWe should fix the unpacking logic (see #4547). I'm not sure it's worth putting too much effort into fixing error messages in a function thats likely to change soon. ", "created_at": "2018-01-09T22:56:55Z", "updated_at": "2018-11-23T15:37:59Z", "html_url": "https://github.com/pytorch/pytorch/pull/4548#discussion_r160548345", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4548", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/160548345"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4548#discussion_r160548345"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4548"}}, "body_html": "<p>I don't think we want to do it this way. This will add overhead to every PyTorch function.</p>\n<p>We should fix the unpacking logic (see <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"286934820\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/4547\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/4547/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/4547\">#4547</a>). I'm not sure it's worth putting too much effort into fixing error messages in a function thats likely to change soon.</p>", "body_text": "I don't think we want to do it this way. This will add overhead to every PyTorch function.\nWe should fix the unpacking logic (see #4547). I'm not sure it's worth putting too much effort into fixing error messages in a function thats likely to change soon.", "in_reply_to_id": 160382329}