{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/318090790", "html_url": "https://github.com/pytorch/pytorch/issues/2213#issuecomment-318090790", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2213", "id": 318090790, "node_id": "MDEyOklzc3VlQ29tbWVudDMxODA5MDc5MA==", "user": {"login": "aosokin", "id": 2099291, "node_id": "MDQ6VXNlcjIwOTkyOTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2099291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aosokin", "html_url": "https://github.com/aosokin", "followers_url": "https://api.github.com/users/aosokin/followers", "following_url": "https://api.github.com/users/aosokin/following{/other_user}", "gists_url": "https://api.github.com/users/aosokin/gists{/gist_id}", "starred_url": "https://api.github.com/users/aosokin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aosokin/subscriptions", "organizations_url": "https://api.github.com/users/aosokin/orgs", "repos_url": "https://api.github.com/users/aosokin/repos", "events_url": "https://api.github.com/users/aosokin/events{/privacy}", "received_events_url": "https://api.github.com/users/aosokin/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-26T15:33:22Z", "updated_at": "2017-07-26T15:34:51Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3768583\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gchanan\">@gchanan</a> with this test the warning is gone, sorry. But, with this</p>\n<pre><code>import torch\nA = torch.rand(5, 4, 1)\nmask = torch.ByteTensor(5, 4).fill_(1)\nB = torch.masked_select(A, mask)\nprint(B.size())\n</code></pre>\n<p>I get warning</p>\n<pre><code>tmp.py:4: UserWarning: self and mask not broadcastable, but have the same number of elements.  Falling back to deprecated pointwise behavior.\n  B = torch.masked_select(A, mask)\n</code></pre>\n<p>and the results is of size <code>torch.Size([20])</code>, which is without broadcasting.<br>\nI did not turn on any special flags.</p>\n<p>I guess the discrepancy between the two is a bug. What is the expected behavior?</p>", "body_text": "@gchanan with this test the warning is gone, sorry. But, with this\nimport torch\nA = torch.rand(5, 4, 1)\nmask = torch.ByteTensor(5, 4).fill_(1)\nB = torch.masked_select(A, mask)\nprint(B.size())\n\nI get warning\ntmp.py:4: UserWarning: self and mask not broadcastable, but have the same number of elements.  Falling back to deprecated pointwise behavior.\n  B = torch.masked_select(A, mask)\n\nand the results is of size torch.Size([20]), which is without broadcasting.\nI did not turn on any special flags.\nI guess the discrepancy between the two is a bug. What is the expected behavior?", "body": "@gchanan with this test the warning is gone, sorry. But, with this\r\n```\r\nimport torch\r\nA = torch.rand(5, 4, 1)\r\nmask = torch.ByteTensor(5, 4).fill_(1)\r\nB = torch.masked_select(A, mask)\r\nprint(B.size())\r\n```\r\nI get warning\r\n```\r\ntmp.py:4: UserWarning: self and mask not broadcastable, but have the same number of elements.  Falling back to deprecated pointwise behavior.\r\n  B = torch.masked_select(A, mask)\r\n```\r\nand the results is of size `torch.Size([20])`, which is without broadcasting.\r\nI did not turn on any special flags.\r\n\r\nI guess the discrepancy between the two is a bug. What is the expected behavior?\r\n\r\n\r\n"}