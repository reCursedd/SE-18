{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/11589", "id": 215054024, "node_id": "MDExOlB1bGxSZXF1ZXN0MjE1MDU0MDI0", "html_url": "https://github.com/pytorch/pytorch/pull/11589", "diff_url": "https://github.com/pytorch/pytorch/pull/11589.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/11589.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11589", "number": 11589, "state": "closed", "locked": false, "title": "Disallow scalar parameters in  Dirichlet and Categorical", "user": {"login": "neerajprad", "id": 1762463, "node_id": "MDQ6VXNlcjE3NjI0NjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1762463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neerajprad", "html_url": "https://github.com/neerajprad", "followers_url": "https://api.github.com/users/neerajprad/followers", "following_url": "https://api.github.com/users/neerajprad/following{/other_user}", "gists_url": "https://api.github.com/users/neerajprad/gists{/gist_id}", "starred_url": "https://api.github.com/users/neerajprad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neerajprad/subscriptions", "organizations_url": "https://api.github.com/users/neerajprad/orgs", "repos_url": "https://api.github.com/users/neerajprad/repos", "events_url": "https://api.github.com/users/neerajprad/events{/privacy}", "received_events_url": "https://api.github.com/users/neerajprad/received_events", "type": "User", "site_admin": false}, "body": "This adds a small check in `Dirichlet` and `Categorical` `__init__` methods to ensure that scalar parameters are not admissible. \r\n\r\n**Motivation**\r\nCurrently, `Dirichlet` throws no error when provided with a scalar parameter, but if we `expand` a scalar instance, it inherits the empty event shape from the original instance and gives unexpected results. \r\n\r\nThe alternative to this check is to promote `event_shape` to be `torch.Size((1,))` if the original instance was a scalar, but that seems to add a bit more complexity (and changes the behavior of `expand` in that it would affect the `event_shape` as well as the `batch_shape` now). Does this seem reasonable? cc. @alicanb, @fritzo. \r\n\r\n```python\r\nIn [4]: d = dist.Dirichlet(torch.tensor(1.))\r\n\r\nIn [5]: d.sample()\r\nOut[5]: tensor(1.0000)\r\n\r\nIn [6]: d.log_prob(d.sample())\r\nOut[6]: tensor(0.)\r\n\r\nIn [7]: e = d.expand([3])\r\n\r\nIn [8]: e.sample()\r\nOut[8]: tensor([0.3953, 0.1797, 0.4250])  # interpreted as events\r\n\r\nIn [9]: e.log_prob(e.sample())\r\nOut[9]: tensor(0.6931)  # wrongly summed out\r\n\r\nIn [10]: e.batch_shape\r\nOut[10]: torch.Size([3])\r\n\r\nIn [11]: e.event_shape\r\nOut[11]: torch.Size([])  # cannot be empty\r\n```\r\n\r\nAdditionally, based on review comments, this removes `real_vector` constraint. This was only being used in `MultivariateNormal`, but I am happy to revert this if we want to keep it around for backwards compatibility.", "created_at": "2018-09-12T18:25:48Z", "updated_at": "2018-11-23T15:51:12Z", "closed_at": "2018-09-14T14:57:03Z", "merged_at": null, "merge_commit_sha": "9cbf3cb4c8bb020b35c9b787934f18ed7ef7827a", "assignee": null, "assignees": [], "requested_reviewers": [{"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11589/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11589/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11589/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/2cb3003973d190c61ce87b70f034d49187d6e121", "head": {"label": "neerajprad:dirichlet-check", "ref": "dirichlet-check", "sha": "2cb3003973d190c61ce87b70f034d49187d6e121", "user": {"login": "neerajprad", "id": 1762463, "node_id": "MDQ6VXNlcjE3NjI0NjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1762463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neerajprad", "html_url": "https://github.com/neerajprad", "followers_url": "https://api.github.com/users/neerajprad/followers", "following_url": "https://api.github.com/users/neerajprad/following{/other_user}", "gists_url": "https://api.github.com/users/neerajprad/gists{/gist_id}", "starred_url": "https://api.github.com/users/neerajprad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neerajprad/subscriptions", "organizations_url": "https://api.github.com/users/neerajprad/orgs", "repos_url": "https://api.github.com/users/neerajprad/repos", "events_url": "https://api.github.com/users/neerajprad/events{/privacy}", "received_events_url": "https://api.github.com/users/neerajprad/received_events", "type": "User", "site_admin": false}, "repo": {"id": 116222814, "node_id": "MDEwOlJlcG9zaXRvcnkxMTYyMjI4MTQ=", "name": "pytorch", "full_name": "neerajprad/pytorch", "private": false, "owner": {"login": "neerajprad", "id": 1762463, "node_id": "MDQ6VXNlcjE3NjI0NjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1762463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neerajprad", "html_url": "https://github.com/neerajprad", "followers_url": "https://api.github.com/users/neerajprad/followers", "following_url": "https://api.github.com/users/neerajprad/following{/other_user}", "gists_url": "https://api.github.com/users/neerajprad/gists{/gist_id}", "starred_url": "https://api.github.com/users/neerajprad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neerajprad/subscriptions", "organizations_url": "https://api.github.com/users/neerajprad/orgs", "repos_url": "https://api.github.com/users/neerajprad/repos", "events_url": "https://api.github.com/users/neerajprad/events{/privacy}", "received_events_url": "https://api.github.com/users/neerajprad/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/neerajprad/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": true, "url": "https://api.github.com/repos/neerajprad/pytorch", "forks_url": "https://api.github.com/repos/neerajprad/pytorch/forks", "keys_url": "https://api.github.com/repos/neerajprad/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/neerajprad/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/neerajprad/pytorch/teams", "hooks_url": "https://api.github.com/repos/neerajprad/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/neerajprad/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/neerajprad/pytorch/events", "assignees_url": "https://api.github.com/repos/neerajprad/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/neerajprad/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/neerajprad/pytorch/tags", "blobs_url": "https://api.github.com/repos/neerajprad/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/neerajprad/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/neerajprad/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/neerajprad/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/neerajprad/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/neerajprad/pytorch/languages", "stargazers_url": "https://api.github.com/repos/neerajprad/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/neerajprad/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/neerajprad/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/neerajprad/pytorch/subscription", "commits_url": "https://api.github.com/repos/neerajprad/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/neerajprad/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/neerajprad/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/neerajprad/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/neerajprad/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/neerajprad/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/neerajprad/pytorch/merges", "archive_url": "https://api.github.com/repos/neerajprad/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/neerajprad/pytorch/downloads", "issues_url": "https://api.github.com/repos/neerajprad/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/neerajprad/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/neerajprad/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/neerajprad/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/neerajprad/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/neerajprad/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/neerajprad/pytorch/deployments", "created_at": "2018-01-04T06:21:53Z", "updated_at": "2018-10-30T20:01:07Z", "pushed_at": "2018-10-30T19:59:29Z", "git_url": "git://github.com/neerajprad/pytorch.git", "ssh_url": "git@github.com:neerajprad/pytorch.git", "clone_url": "https://github.com/neerajprad/pytorch.git", "svn_url": "https://github.com/neerajprad/pytorch", "homepage": "http://pytorch.org", "size": 80991, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "17637f2b03b2dc9a64fb31ff9aafb2503bb05305", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T12:35:43Z", "pushed_at": "2018-11-24T12:42:01Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89656, "stargazers_count": 21589, "watchers_count": 21589, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5153, "mirror_url": null, "archived": false, "open_issues_count": 2197, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5153, "open_issues": 2197, "watchers": 21589, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11589"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11589"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/11589"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/11589/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11589/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11589/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/2cb3003973d190c61ce87b70f034d49187d6e121"}}, "author_association": "CONTRIBUTOR", "body_html": "<p>This adds a small check in <code>Dirichlet</code> and <code>Categorical</code> <code>__init__</code> methods to ensure that scalar parameters are not admissible.</p>\n<p><strong>Motivation</strong><br>\nCurrently, <code>Dirichlet</code> throws no error when provided with a scalar parameter, but if we <code>expand</code> a scalar instance, it inherits the empty event shape from the original instance and gives unexpected results.</p>\n<p>The alternative to this check is to promote <code>event_shape</code> to be <code>torch.Size((1,))</code> if the original instance was a scalar, but that seems to add a bit more complexity (and changes the behavior of <code>expand</code> in that it would affect the <code>event_shape</code> as well as the <code>batch_shape</code> now). Does this seem reasonable? cc. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1093846\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alicanb\">@alicanb</a>, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=648532\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fritzo\">@fritzo</a>.</p>\n<div class=\"highlight highlight-source-python\"><pre>In [<span class=\"pl-c1\">4</span>]: d <span class=\"pl-k\">=</span> dist.Dirichlet(torch.tensor(<span class=\"pl-c1\">1</span>.))\n\nIn [<span class=\"pl-c1\">5</span>]: d.sample()\nOut[<span class=\"pl-c1\">5</span>]: tensor(<span class=\"pl-c1\">1.0000</span>)\n\nIn [<span class=\"pl-c1\">6</span>]: d.log_prob(d.sample())\nOut[<span class=\"pl-c1\">6</span>]: tensor(<span class=\"pl-c1\">0</span>.)\n\nIn [<span class=\"pl-c1\">7</span>]: e <span class=\"pl-k\">=</span> d.expand([<span class=\"pl-c1\">3</span>])\n\nIn [<span class=\"pl-c1\">8</span>]: e.sample()\nOut[<span class=\"pl-c1\">8</span>]: tensor([<span class=\"pl-c1\">0.3953</span>, <span class=\"pl-c1\">0.1797</span>, <span class=\"pl-c1\">0.4250</span>])  <span class=\"pl-c\"><span class=\"pl-c\">#</span> interpreted as events</span>\n\nIn [<span class=\"pl-c1\">9</span>]: e.log_prob(e.sample())\nOut[<span class=\"pl-c1\">9</span>]: tensor(<span class=\"pl-c1\">0.6931</span>)  <span class=\"pl-c\"><span class=\"pl-c\">#</span> wrongly summed out</span>\n\nIn [<span class=\"pl-c1\">10</span>]: e.batch_shape\nOut[<span class=\"pl-c1\">10</span>]: torch.Size([<span class=\"pl-c1\">3</span>])\n\nIn [<span class=\"pl-c1\">11</span>]: e.event_shape\nOut[<span class=\"pl-c1\">11</span>]: torch.Size([])  <span class=\"pl-c\"><span class=\"pl-c\">#</span> cannot be empty</span></pre></div>\n<p>Additionally, based on review comments, this removes <code>real_vector</code> constraint. This was only being used in <code>MultivariateNormal</code>, but I am happy to revert this if we want to keep it around for backwards compatibility.</p>", "body_text": "This adds a small check in Dirichlet and Categorical __init__ methods to ensure that scalar parameters are not admissible.\nMotivation\nCurrently, Dirichlet throws no error when provided with a scalar parameter, but if we expand a scalar instance, it inherits the empty event shape from the original instance and gives unexpected results.\nThe alternative to this check is to promote event_shape to be torch.Size((1,)) if the original instance was a scalar, but that seems to add a bit more complexity (and changes the behavior of expand in that it would affect the event_shape as well as the batch_shape now). Does this seem reasonable? cc. @alicanb, @fritzo.\nIn [4]: d = dist.Dirichlet(torch.tensor(1.))\n\nIn [5]: d.sample()\nOut[5]: tensor(1.0000)\n\nIn [6]: d.log_prob(d.sample())\nOut[6]: tensor(0.)\n\nIn [7]: e = d.expand([3])\n\nIn [8]: e.sample()\nOut[8]: tensor([0.3953, 0.1797, 0.4250])  # interpreted as events\n\nIn [9]: e.log_prob(e.sample())\nOut[9]: tensor(0.6931)  # wrongly summed out\n\nIn [10]: e.batch_shape\nOut[10]: torch.Size([3])\n\nIn [11]: e.event_shape\nOut[11]: torch.Size([])  # cannot be empty\nAdditionally, based on review comments, this removes real_vector constraint. This was only being used in MultivariateNormal, but I am happy to revert this if we want to keep it around for backwards compatibility.", "merged": false, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": null, "comments": 5, "review_comments": 1, "maintainer_can_modify": false, "commits": 4, "additions": 7, "deletions": 1, "changed_files": 2}