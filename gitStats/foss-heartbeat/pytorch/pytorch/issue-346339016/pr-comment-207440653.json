{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207440653", "pull_request_review_id": 143053606, "id": 207440653, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzQ0MDY1Mw==", "diff_hunk": "@@ -63,28 +61,124 @@ void propagateNode(Node* n) {\n   }\n }\n \n+void lowerIf(Block *body, Node * n) {\n+  auto graph = n->owningGraph();\n+  WithInsertPoint insert_point_guard { n };\n+\n+  std::unordered_map<Value*, Value*> value_map;\n+  auto get_value = [&](Value *v) {\n+    auto it = value_map.find(v);\n+    if (it != value_map.end())\n+      return it->second;\n+    return v;\n+  };\n+\n+  for (Node *orig : body->nodes()) {\n+    Node *clone = graph->insertNode(graph->createClone(orig, get_value));", "path": "torch/csrc/jit/passes/constant_propagation.cpp", "position": null, "original_position": 29, "commit_id": "c5f2104925bec35e14f1dc48b07870f49dbabd0d", "original_commit_id": "ae421d1c66858e6588c9ade3b3e77bbc36bb99d2", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "There is no need to clone the nodes when they are in the same graph. You can simply do:\r\n\r\n`orig->insertBefore(n);`\r\n\r\nThis will get rid of the need for the value_map as well.", "created_at": "2018-08-03T04:55:31Z", "updated_at": "2018-11-23T15:48:41Z", "html_url": "https://github.com/pytorch/pytorch/pull/10084#discussion_r207440653", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10084", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207440653"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10084#discussion_r207440653"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10084"}}, "body_html": "<p>There is no need to clone the nodes when they are in the same graph. You can simply do:</p>\n<p><code>orig-&gt;insertBefore(n);</code></p>\n<p>This will get rid of the need for the value_map as well.</p>", "body_text": "There is no need to clone the nodes when they are in the same graph. You can simply do:\norig->insertBefore(n);\nThis will get rid of the need for the value_map as well."}