{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/307076063", "html_url": "https://github.com/pytorch/pytorch/pull/1471#issuecomment-307076063", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1471", "id": 307076063, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzA3NjA2Mw==", "user": {"login": "martinraison", "id": 2560662, "node_id": "MDQ6VXNlcjI1NjA2NjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2560662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinraison", "html_url": "https://github.com/martinraison", "followers_url": "https://api.github.com/users/martinraison/followers", "following_url": "https://api.github.com/users/martinraison/following{/other_user}", "gists_url": "https://api.github.com/users/martinraison/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinraison/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinraison/subscriptions", "organizations_url": "https://api.github.com/users/martinraison/orgs", "repos_url": "https://api.github.com/users/martinraison/repos", "events_url": "https://api.github.com/users/martinraison/events{/privacy}", "received_events_url": "https://api.github.com/users/martinraison/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-08T11:27:16Z", "updated_at": "2017-06-08T11:27:16Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I like <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5702157\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/adamlerer\">@adamlerer</a>'s suggestion! We may still want to provide higher level abstractions like <code>sparse_mask</code>, but implemented directly in Python using <code>linear_indices/view/index_select</code>.</p>\n<p>I'm not sure what the best names would be. I'm just giving some additional suggestions for <code>nelemI</code>/<code>nelemV</code>: <code>isize</code>/<code>vsize</code>, <code>sizeI</code>/<code>sizeV</code>, <code>inumel</code>/<code>vnumel</code>, <code>numelI</code>/<code>numelV</code> (we just want to make sure those things are not confused with <code>nnz</code>, and I think something close to <code>size</code> or <code>numel</code> would fit well with the <code>Tensor</code> API)</p>", "body_text": "I like @adamlerer's suggestion! We may still want to provide higher level abstractions like sparse_mask, but implemented directly in Python using linear_indices/view/index_select.\nI'm not sure what the best names would be. I'm just giving some additional suggestions for nelemI/nelemV: isize/vsize, sizeI/sizeV, inumel/vnumel, numelI/numelV (we just want to make sure those things are not confused with nnz, and I think something close to size or numel would fit well with the Tensor API)", "body": "I like @adamlerer's suggestion! We may still want to provide higher level abstractions like `sparse_mask`, but implemented directly in Python using `linear_indices/view/index_select`.\r\n\r\nI'm not sure what the best names would be. I'm just giving some additional suggestions for `nelemI`/`nelemV`: `isize`/`vsize`, `sizeI`/`sizeV`, `inumel`/`vnumel`, `numelI`/`numelV` (we just want to make sure those things are not confused with `nnz`, and I think something close to `size` or `numel` would fit well with the `Tensor` API)"}