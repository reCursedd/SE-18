{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1685", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1685/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1685/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1685/events", "html_url": "https://github.com/pytorch/pytorch/issues/1685", "id": 232352715, "node_id": "MDU6SXNzdWUyMzIzNTI3MTU=", "number": 1685, "title": "Cuda F.conv2d missing type checks", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-30T19:13:06Z", "updated_at": "2017-06-01T14:06:45Z", "closed_at": "2017-06-01T14:06:45Z", "author_association": "MEMBER", "body_html": "<p>Found by <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1321918\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fhuszar\">@fhuszar</a><br>\nThis is on version '0.1.12_2'</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">import</span> torch.nn.functional <span class=\"pl-k\">as</span> F\n<span class=\"pl-k\">from</span> torch.autograd <span class=\"pl-k\">import</span> Variable\n\na <span class=\"pl-k\">=</span> torch.ones(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">10</span>)\nb <span class=\"pl-k\">=</span> torch.ones(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">3</span>) <span class=\"pl-k\">/</span> <span class=\"pl-c1\">9</span>\n\no <span class=\"pl-k\">=</span> F.conv2d(Variable(a.double()), Variable(b)) <span class=\"pl-c\"><span class=\"pl-c\">#</span> gives error message</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> ships to cuda</span>\na <span class=\"pl-k\">=</span> a.cuda()\nb <span class=\"pl-k\">=</span> b.cuda()\n\no <span class=\"pl-k\">=</span> F.conv2d(Variable(a.double()), Variable(b))\n<span class=\"pl-c1\">print</span>(o)</pre></div>\n<p>which doesn't raise an error, and still outputs a wrong value.</p>\n<pre><code>Variable containing:\n(0 ,0 ,.,.) =\n1.00000e-05 *\n  -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109\n  -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109\n  -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109\n  -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109\n  -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109\n  -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109\n  -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109\n  -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109\n[torch.cuda.DoubleTensor of size 1x1x8x8 (GPU 0)]\n</code></pre>", "body_text": "Found by @fhuszar\nThis is on version '0.1.12_2'\nimport torch\nimport torch.nn.functional as F\nfrom torch.autograd import Variable\n\na = torch.ones(1, 1, 10, 10)\nb = torch.ones(1, 1, 3, 3) / 9\n\no = F.conv2d(Variable(a.double()), Variable(b)) # gives error message\n\n# ships to cuda\na = a.cuda()\nb = b.cuda()\n\no = F.conv2d(Variable(a.double()), Variable(b))\nprint(o)\nwhich doesn't raise an error, and still outputs a wrong value.\nVariable containing:\n(0 ,0 ,.,.) =\n1.00000e-05 *\n  -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109\n  -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109\n  -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109\n  -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109\n  -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109\n  -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109\n  -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109\n  -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109\n[torch.cuda.DoubleTensor of size 1x1x8x8 (GPU 0)]", "body": "Found by @fhuszar\r\nThis is on version '0.1.12_2'\r\n\r\n```python\r\nimport torch\r\nimport torch.nn.functional as F\r\nfrom torch.autograd import Variable\r\n\r\na = torch.ones(1, 1, 10, 10)\r\nb = torch.ones(1, 1, 3, 3) / 9\r\n\r\no = F.conv2d(Variable(a.double()), Variable(b)) # gives error message\r\n\r\n# ships to cuda\r\na = a.cuda()\r\nb = b.cuda()\r\n\r\no = F.conv2d(Variable(a.double()), Variable(b))\r\nprint(o)\r\n```\r\nwhich doesn't raise an error, and still outputs a wrong value.\r\n```\r\nVariable containing:\r\n(0 ,0 ,.,.) =\r\n1.00000e-05 *\r\n  -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109\r\n  -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109\r\n  -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109\r\n  -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109\r\n  -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109\r\n  -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109\r\n  -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109\r\n  -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109 -4.2109\r\n[torch.cuda.DoubleTensor of size 1x1x8x8 (GPU 0)]\r\n```"}