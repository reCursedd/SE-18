{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7720", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7720/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7720/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7720/events", "html_url": "https://github.com/pytorch/pytorch/issues/7720", "id": 324764044, "node_id": "MDU6SXNzdWUzMjQ3NjQwNDQ=", "number": 7720, "title": "use functional.linear to custom a simple layer", "user": {"login": "lith0613", "id": 31385806, "node_id": "MDQ6VXNlcjMxMzg1ODA2", "avatar_url": "https://avatars0.githubusercontent.com/u/31385806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lith0613", "html_url": "https://github.com/lith0613", "followers_url": "https://api.github.com/users/lith0613/followers", "following_url": "https://api.github.com/users/lith0613/following{/other_user}", "gists_url": "https://api.github.com/users/lith0613/gists{/gist_id}", "starred_url": "https://api.github.com/users/lith0613/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lith0613/subscriptions", "organizations_url": "https://api.github.com/users/lith0613/orgs", "repos_url": "https://api.github.com/users/lith0613/repos", "events_url": "https://api.github.com/users/lith0613/events{/privacy}", "received_events_url": "https://api.github.com/users/lith0613/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-21T01:51:15Z", "updated_at": "2018-05-21T02:06:36Z", "closed_at": "2018-05-21T02:06:33Z", "author_association": "NONE", "body_html": "<p>Hi,I try to use functional.linear to custom a simple layer, the weight parameter is combined with two parameters, then the output loss is always nan\uff0cI don\u2019t kown how can I sovle this problem or I can\u2019t do that way. my code is as follows:</p>\n<p>'''code<br>\nclass Linear(nn.Module):<br>\ndef <strong>init</strong>(self, in_dim,out_dim):<br>\nsuper(Linear, self).<strong>init</strong>()<br>\nself.weight1 = nn.Parameter(torch.ones(in_dim,out_dim))<br>\nself.weight2=nn.Parameter(torch.randn(out_dim,in_dim))</p>\n<pre><code>def forward(self, x):\n    return F.linear(x, torch.mm(self.weight1,self.weight2))\n</code></pre>", "body_text": "Hi,I try to use functional.linear to custom a simple layer, the weight parameter is combined with two parameters, then the output loss is always nan\uff0cI don\u2019t kown how can I sovle this problem or I can\u2019t do that way. my code is as follows:\n'''code\nclass Linear(nn.Module):\ndef init(self, in_dim,out_dim):\nsuper(Linear, self).init()\nself.weight1 = nn.Parameter(torch.ones(in_dim,out_dim))\nself.weight2=nn.Parameter(torch.randn(out_dim,in_dim))\ndef forward(self, x):\n    return F.linear(x, torch.mm(self.weight1,self.weight2))", "body": "Hi,I try to use functional.linear to custom a simple layer, the weight parameter is combined with two parameters, then the output loss is always nan\uff0cI don\u2019t kown how can I sovle this problem or I can\u2019t do that way. my code is as follows:\r\n\r\n'''code\r\nclass Linear(nn.Module):\r\n    def __init__(self, in_dim,out_dim):\r\n        super(Linear, self).__init__()\r\n        self.weight1 = nn.Parameter(torch.ones(in_dim,out_dim)) \r\n        self.weight2=nn.Parameter(torch.randn(out_dim,in_dim))\r\n        \r\n    def forward(self, x):\r\n        return F.linear(x, torch.mm(self.weight1,self.weight2))\r\n"}