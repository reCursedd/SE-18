{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/197553885", "pull_request_review_id": 131328398, "id": 197553885, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzU1Mzg4NQ==", "diff_hunk": "@@ -64,7 +64,7 @@ void SparseTensorImpl::set_indices_and_values(const Tensor& indices, const Tenso\n   AT_CHECK(values.type().toSparse() == type(), \"values type must match sparse tensor type\");\n   AT_CHECK(indices.type().scalarType() == kLong);\n   AT_CHECK(indices.type().backend() == values.type().backend());\n-  // TODO: test that device tensors are on is the same\n+  AT_CHECK(!indices.is_cuda() || indices.get_device() == values.get_device());", "path": "aten/src/ATen/SparseTensorImpl.cpp", "position": 5, "original_position": 5, "commit_id": "1a3c38e577f84307b7b6f7c8e49818fde11f343f", "original_commit_id": "d326be0be823da5c43e5ed5162dfdfc63dfb6063", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Device is too precise:\r\n\r\n```\r\n  bool operator==(const Device& other) const noexcept {\r\n    return this->type_ == other.type_ && this->index_ == other.index_;\r\n  }\r\n```\r\n\r\nThe type of indices and values is not the same.", "created_at": "2018-06-22T19:58:08Z", "updated_at": "2018-11-23T15:46:08Z", "html_url": "https://github.com/pytorch/pytorch/pull/8689#discussion_r197553885", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8689", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/197553885"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8689#discussion_r197553885"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8689"}}, "body_html": "<p>Device is too precise:</p>\n<pre><code>  bool operator==(const Device&amp; other) const noexcept {\n    return this-&gt;type_ == other.type_ &amp;&amp; this-&gt;index_ == other.index_;\n  }\n</code></pre>\n<p>The type of indices and values is not the same.</p>", "body_text": "Device is too precise:\n  bool operator==(const Device& other) const noexcept {\n    return this->type_ == other.type_ && this->index_ == other.index_;\n  }\n\nThe type of indices and values is not the same.", "in_reply_to_id": 197485517}