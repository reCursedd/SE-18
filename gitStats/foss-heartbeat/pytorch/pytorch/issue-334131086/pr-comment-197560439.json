{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/197560439", "pull_request_review_id": 131336704, "id": 197560439, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzU2MDQzOQ==", "diff_hunk": "@@ -0,0 +1,131 @@\n+#include <ATen/ATen.h>\n+#include <ATen/SparseTensorImpl.h>\n+\n+#include <TH/THGeneral.h>\n+\n+namespace at { namespace native {\n+\n+// Just for documentary purposes\n+using SparseTensor = Tensor;\n+using LongTensor = Tensor;\n+using IntTensor = Tensor;\n+using SparseType = Type;\n+\n+namespace {\n+\n+// This is an internal utility function for getting at the SparseTensorImpl,\n+// so that we can write sparse tensor specific accessors for special fields\n+// in SparseTensor.  You should only use this for writing low level\n+// setters/getters for SparseTensorImpl fields; otherwise, you should use\n+// the low level setters/getters that were implemented using this.\n+//\n+// This may be called repeatedly, so make sure it's pretty cheap.\n+SparseTensorImpl* _get_sparse_impl(const SparseTensor& self) {\n+  if (!self.is_sparse()) AT_ERROR(\"_internal_get_SparseTensorImpl: not a sparse tensor\");\n+  return static_cast<SparseTensorImpl*>(self.unsafeGetTensorImpl());\n+}\n+\n+// Port of the old THCSTensor_(checkGPU), but it doesn't really belong here\n+// because it is more general\n+// NB: I dropped kernelP2PEnabled support\n+// NB: This only works if the tensors are KNOWN to be CUDA.\n+// TODO: Generalize it so it works on CPU as well\n+inline bool _check_device(ArrayRef<Tensor> ts) {", "path": "aten/src/ATen/native/sparse/SparseUtils.h", "position": 33, "original_position": 33, "commit_id": "1a3c38e577f84307b7b6f7c8e49818fde11f343f", "original_commit_id": "d326be0be823da5c43e5ed5162dfdfc63dfb6063", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "ain't got no time for these aliases lol (More seriously, I hate the TensorList alias, I can never remember if it's a vector or an ArrayRef. I think we should kill it.)", "created_at": "2018-06-22T20:27:08Z", "updated_at": "2018-11-23T15:46:09Z", "html_url": "https://github.com/pytorch/pytorch/pull/8689#discussion_r197560439", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8689", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/197560439"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8689#discussion_r197560439"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8689"}}, "body_html": "<p>ain't got no time for these aliases lol (More seriously, I hate the TensorList alias, I can never remember if it's a vector or an ArrayRef. I think we should kill it.)</p>", "body_text": "ain't got no time for these aliases lol (More seriously, I hate the TensorList alias, I can never remember if it's a vector or an ArrayRef. I think we should kill it.)", "in_reply_to_id": 197488337}