{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/231405866", "pull_request_review_id": 172368352, "id": 231405866, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTQwNTg2Ng==", "diff_hunk": "@@ -74,6 +74,23 @@ inline Value* getValueTrace(const Variable& var) {\n   return it->second;\n }\n \n+inline Value* getNestedValueTrace(const std::shared_ptr<TracingState>& state, const IValue &v) {", "path": "torch/csrc/jit/tracer.h", "position": null, "original_position": 4, "commit_id": "1cd656885bfe9ac5ee3c77d1a181c1320c893a46", "original_commit_id": "4b824e781fecfebb9d8bc684c2db9d0af5b8494b", "user": {"login": "t-vi", "id": 20787943, "node_id": "MDQ6VXNlcjIwNzg3OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/20787943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-vi", "html_url": "https://github.com/t-vi", "followers_url": "https://api.github.com/users/t-vi/followers", "following_url": "https://api.github.com/users/t-vi/following{/other_user}", "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions", "organizations_url": "https://api.github.com/users/t-vi/orgs", "repos_url": "https://api.github.com/users/t-vi/repos", "events_url": "https://api.github.com/users/t-vi/events{/privacy}", "received_events_url": "https://api.github.com/users/t-vi/received_events", "type": "User", "site_admin": false}, "body": "So when I do this, I run into trouble for ambiguous functions calls.\r\nI then tried to add a dummy template parameter to de-prioritize the `IValue` overload. This works for \"regular calls\", but fails when `getValueTrace` is used in fmap driectly as `fmap(value, getValueTrace)`.\r\n\r\nI would need a hint how to do this cleanly.\r\n\r\nThe obvious alternative would be to only offer the `IValue` version and move the body of the `Variable` version to the bottom of that. However, I'm not sure whether that has undesirable implications in the callers (performance or otherwise).\r\n\r\nI've tentatively changed back to using two distinct names, but with your advice, will improve it.", "created_at": "2018-11-07T07:47:13Z", "updated_at": "2018-11-23T15:54:26Z", "html_url": "https://github.com/pytorch/pytorch/pull/13597#discussion_r231405866", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13597", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/231405866"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13597#discussion_r231405866"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13597"}}, "body_html": "<p>So when I do this, I run into trouble for ambiguous functions calls.<br>\nI then tried to add a dummy template parameter to de-prioritize the <code>IValue</code> overload. This works for \"regular calls\", but fails when <code>getValueTrace</code> is used in fmap driectly as <code>fmap(value, getValueTrace)</code>.</p>\n<p>I would need a hint how to do this cleanly.</p>\n<p>The obvious alternative would be to only offer the <code>IValue</code> version and move the body of the <code>Variable</code> version to the bottom of that. However, I'm not sure whether that has undesirable implications in the callers (performance or otherwise).</p>\n<p>I've tentatively changed back to using two distinct names, but with your advice, will improve it.</p>", "body_text": "So when I do this, I run into trouble for ambiguous functions calls.\nI then tried to add a dummy template parameter to de-prioritize the IValue overload. This works for \"regular calls\", but fails when getValueTrace is used in fmap driectly as fmap(value, getValueTrace).\nI would need a hint how to do this cleanly.\nThe obvious alternative would be to only offer the IValue version and move the body of the Variable version to the bottom of that. However, I'm not sure whether that has undesirable implications in the callers (performance or otherwise).\nI've tentatively changed back to using two distinct names, but with your advice, will improve it.", "in_reply_to_id": 231302157}