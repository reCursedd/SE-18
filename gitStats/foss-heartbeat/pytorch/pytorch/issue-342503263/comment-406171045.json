{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/406171045", "html_url": "https://github.com/pytorch/pytorch/pull/9566#issuecomment-406171045", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9566", "id": 406171045, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjE3MTA0NQ==", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-19T06:40:39Z", "updated_at": "2018-07-19T06:40:39Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I am fine with whatever is you want to do in the short term, but we have to have a long term consistency plan here. Adding these op has bad properties, like making <code>torch.zero</code> work in the script but not in python. I also believe that we have the automatic creation of ONNX \"ATen\" ops, even without symbolics, so it will try to export a <code>aten::zero</code> but because caffe2's ATen bindings do not know about these generated ops, they will not work.  We might want to teach the tracer about known equivalents (zero_ &lt;-&gt; zeros_like), and then actually implement the missing equivalents.</p>", "body_text": "I am fine with whatever is you want to do in the short term, but we have to have a long term consistency plan here. Adding these op has bad properties, like making torch.zero work in the script but not in python. I also believe that we have the automatic creation of ONNX \"ATen\" ops, even without symbolics, so it will try to export a aten::zero but because caffe2's ATen bindings do not know about these generated ops, they will not work.  We might want to teach the tracer about known equivalents (zero_ <-> zeros_like), and then actually implement the missing equivalents.", "body": "I am fine with whatever is you want to do in the short term, but we have to have a long term consistency plan here. Adding these op has bad properties, like making `torch.zero` work in the script but not in python. I also believe that we have the automatic creation of ONNX \"ATen\" ops, even without symbolics, so it will try to export a `aten::zero` but because caffe2's ATen bindings do not know about these generated ops, they will not work.  We might want to teach the tracer about known equivalents (zero_ <-> zeros_like), and then actually implement the missing equivalents."}