{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/382479291", "html_url": "https://github.com/pytorch/pytorch/pull/6710#issuecomment-382479291", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6710", "id": 382479291, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjQ3OTI5MQ==", "user": {"login": "bddppq", "id": 9300575, "node_id": "MDQ6VXNlcjkzMDA1NzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/9300575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bddppq", "html_url": "https://github.com/bddppq", "followers_url": "https://api.github.com/users/bddppq/followers", "following_url": "https://api.github.com/users/bddppq/following{/other_user}", "gists_url": "https://api.github.com/users/bddppq/gists{/gist_id}", "starred_url": "https://api.github.com/users/bddppq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bddppq/subscriptions", "organizations_url": "https://api.github.com/users/bddppq/orgs", "repos_url": "https://api.github.com/users/bddppq/repos", "events_url": "https://api.github.com/users/bddppq/events{/privacy}", "received_events_url": "https://api.github.com/users/bddppq/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-18T18:12:21Z", "updated_at": "2018-04-18T18:59:50Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7076961\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/pooyadavoodi\">@pooyadavoodi</a> Thanks for the fix. I was trying to address this in a separate PR <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"315366141\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/6698\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/6698/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/6698\">#6698</a> . Bumping Eigen does solve the include issue, however, there is another issue with CUDA 9.1 that the compiler complains about __hadd can have multiple resolution (see here: <a href=\"https://ci.pytorch.org/jenkins/job/caffe2-builds/job/py2-cuda9.0-cudnn7-windows-build/638/console\" rel=\"nofollow\">https://ci.pytorch.org/jenkins/job/caffe2-builds/job/py2-cuda9.0-cudnn7-windows-build/638/console</a>). I then tried a temporal fix to Eigen <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/bddppq/eigen-git-mirror-fix-__hadd/commit/8e925c3855fca5bdb720e12b7eff8bf32f9d962b/hovercard\" href=\"https://github.com/bddppq/eigen-git-mirror-fix-__hadd/commit/8e925c3855fca5bdb720e12b7eff8bf32f9d962b\">bddppq/eigen-git-mirror-fix-__hadd@<tt>8e925c3</tt></a>, but then it fails with another compilation error on windows saying this is invalid base class <a href=\"https://github.com/pytorch/pytorch/blob/master/caffe2/operators/arg_ops.h#L15\">https://github.com/pytorch/pytorch/blob/master/caffe2/operators/arg_ops.h#L15</a>, plus a lot of our gradient tests failed.<br>\nDo you have a successful CUDA9.1 + Eigen build? If I remember correctly, we used to not use any Eigen stuffs in cuda operators, until recently arg_ops introduced this.</p>", "body_text": "@pooyadavoodi Thanks for the fix. I was trying to address this in a separate PR #6698 . Bumping Eigen does solve the include issue, however, there is another issue with CUDA 9.1 that the compiler complains about __hadd can have multiple resolution (see here: https://ci.pytorch.org/jenkins/job/caffe2-builds/job/py2-cuda9.0-cudnn7-windows-build/638/console). I then tried a temporal fix to Eigen bddppq/eigen-git-mirror-fix-__hadd@8e925c3, but then it fails with another compilation error on windows saying this is invalid base class https://github.com/pytorch/pytorch/blob/master/caffe2/operators/arg_ops.h#L15, plus a lot of our gradient tests failed.\nDo you have a successful CUDA9.1 + Eigen build? If I remember correctly, we used to not use any Eigen stuffs in cuda operators, until recently arg_ops introduced this.", "body": "@pooyadavoodi Thanks for the fix. I was trying to address this in a separate PR #6698 . Bumping Eigen does solve the include issue, however, there is another issue with CUDA 9.1 that the compiler complains about __hadd can have multiple resolution (see here: https://ci.pytorch.org/jenkins/job/caffe2-builds/job/py2-cuda9.0-cudnn7-windows-build/638/console). I then tried a temporal fix to Eigen https://github.com/bddppq/eigen-git-mirror-fix-__hadd/commit/8e925c3855fca5bdb720e12b7eff8bf32f9d962b, but then it fails with another compilation error on windows saying this is invalid base class https://github.com/pytorch/pytorch/blob/master/caffe2/operators/arg_ops.h#L15, plus a lot of our gradient tests failed. \r\nDo you have a successful CUDA9.1 + Eigen build? If I remember correctly, we used to not use any Eigen stuffs in cuda operators, until recently arg_ops introduced this.\r\n"}