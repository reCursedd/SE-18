{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/132331142", "pull_request_review_id": 55400539, "id": 132331142, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMjMzMTE0Mg==", "diff_hunk": "@@ -75,29 +90,44 @@ def getExpandTemplate(self, expand_call, success_code, raise_errors):\n                 \"catch (std::exception &e) {}\\n\" +\n                 \"if(expand_success) {\\n\" +\n                 success_code +\n+                \"\\n}\" +\n                 \"\\n}\\n\")\n         else:\n             return Template(\n+                \"bool try_expand = !\" + same_size_check + \"\\n\" +\n+                \"if (try_expand) {\\n\" +\n                 expand_call + \"\\n\" +\n-                success_code + \"\\n\")\n-\n-    def getOutPlacePreExpand2Template(self, raise_errors):\n-        expand_code = \"\"\"expand_outplace2(LIBRARY_STATE ${arg_op_a}_guard.get(), ${arg_op_other}_guard.get(),\n-                                          ${arg_op_a}, ${arg_op_other},\n-                                          \\\"${op_a}\\\", \\\"${op_other}\\\", !${raise_errors});\"\"\"\n+                success_code + \"\\n\"\n+                \"}\\n\")\n+\n+    def getOutPlacePreExpand2Template(self, type_op_a, type_op_other, raise_errors):\n+        size_check = \"\"\"THSize_isSameSizeAs(${arg_op_a}->size, ${arg_op_a}->nDimension,", "path": "tools/cwrap/plugins/Broadcast.py", "position": 63, "original_position": 63, "commit_id": "bd8fda3a3ffd33e6e75afad3d2055857120a63a8", "original_commit_id": "eca4992cd9feec6df38d293be5792c080567320c", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "It's not necessary; this is just checking if we can early-opt out of the broadcasting code, so it works as if the broadcasting code wasn't there.  So, assuming these operations worked on tensors of same size but different strides, this code should work as well.", "created_at": "2017-08-09T23:18:43Z", "updated_at": "2018-11-23T15:34:19Z", "html_url": "https://github.com/pytorch/pytorch/pull/2364#discussion_r132331142", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2364", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/132331142"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2364#discussion_r132331142"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2364"}}, "body_html": "<p>It's not necessary; this is just checking if we can early-opt out of the broadcasting code, so it works as if the broadcasting code wasn't there.  So, assuming these operations worked on tensors of same size but different strides, this code should work as well.</p>", "body_text": "It's not necessary; this is just checking if we can early-opt out of the broadcasting code, so it works as if the broadcasting code wasn't there.  So, assuming these operations worked on tensors of same size but different strides, this code should work as well.", "in_reply_to_id": 132330745}