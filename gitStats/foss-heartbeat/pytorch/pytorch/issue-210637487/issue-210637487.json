{"url": "https://api.github.com/repos/pytorch/pytorch/issues/872", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/872/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/872/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/872/events", "html_url": "https://github.com/pytorch/pytorch/issues/872", "id": 210637487, "node_id": "MDU6SXNzdWUyMTA2Mzc0ODc=", "number": 872, "title": "Flexible state dict loading for model (or optimizer)", "user": {"login": "ruotianluo", "id": 16023153, "node_id": "MDQ6VXNlcjE2MDIzMTUz", "avatar_url": "https://avatars2.githubusercontent.com/u/16023153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruotianluo", "html_url": "https://github.com/ruotianluo", "followers_url": "https://api.github.com/users/ruotianluo/followers", "following_url": "https://api.github.com/users/ruotianluo/following{/other_user}", "gists_url": "https://api.github.com/users/ruotianluo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruotianluo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruotianluo/subscriptions", "organizations_url": "https://api.github.com/users/ruotianluo/orgs", "repos_url": "https://api.github.com/users/ruotianluo/repos", "events_url": "https://api.github.com/users/ruotianluo/events{/privacy}", "received_events_url": "https://api.github.com/users/ruotianluo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-02-27T23:15:24Z", "updated_at": "2018-11-07T16:18:09Z", "closed_at": "2017-02-28T00:58:19Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Currently, the state dict to load should have exactly the same elements as the state dict of model. However, for some warm start cases, it could be useful if it's allowed to load partially from the pretrained model.</p>\n<p>Do you think there should be a flag control if the rule is strict or not?</p>", "body_text": "Currently, the state dict to load should have exactly the same elements as the state dict of model. However, for some warm start cases, it could be useful if it's allowed to load partially from the pretrained model.\nDo you think there should be a flag control if the rule is strict or not?", "body": "Currently, the state dict to load should have exactly the same elements as the state dict of model. However, for some warm start cases, it could be useful if it's allowed to load partially from the pretrained model.\r\n\r\nDo you think there should be a flag control if the rule is strict or not?"}