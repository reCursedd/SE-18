{"url": "https://api.github.com/repos/pytorch/pytorch/issues/12714", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/12714/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12714/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/12714/events", "html_url": "https://github.com/pytorch/pytorch/pull/12714", "id": 370683226, "node_id": "MDExOlB1bGxSZXF1ZXN0MjIzMzA2MTQ4", "number": 12714, "title": "Using c10 namespace across caffe2.", "user": {"login": "Yangqing", "id": 551151, "node_id": "MDQ6VXNlcjU1MTE1MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/551151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yangqing", "html_url": "https://github.com/Yangqing", "followers_url": "https://api.github.com/users/Yangqing/followers", "following_url": "https://api.github.com/users/Yangqing/following{/other_user}", "gists_url": "https://api.github.com/users/Yangqing/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yangqing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yangqing/subscriptions", "organizations_url": "https://api.github.com/users/Yangqing/orgs", "repos_url": "https://api.github.com/users/Yangqing/repos", "events_url": "https://api.github.com/users/Yangqing/events{/privacy}", "received_events_url": "https://api.github.com/users/Yangqing/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-16T15:57:25Z", "updated_at": "2018-10-17T19:58:36Z", "closed_at": "2018-10-17T19:58:36Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/12714", "html_url": "https://github.com/pytorch/pytorch/pull/12714", "diff_url": "https://github.com/pytorch/pytorch/pull/12714.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/12714.patch"}, "body_html": "<p>Summary:<br>\nThis is a short change to enable c10 namespace in caffe2. We did not enable<br>\nit before due to gflags global variable confusion, but it should have been<br>\nmostly cleaned now. Right now, the plan on record is that namespace caffe2 and<br>\nnamespace aten will fully be supersets of namespace c10.</p>\n<p>Most of the diff is codemod, and only two places of non-codemod is in caffe2/core/common.h, where</p>\n<pre><code>using namespace c10;\n</code></pre>\n<p>is added, and in Flags.h, where instead of creating aliasing variables in c10 namespace, we directly put it in the global namespace to match gflags (and same behavior if gflags is not being built with).</p>\n<p>Reviewed By: dzhulgakov</p>\n<p>Differential Revision: D10390486</p>", "body_text": "Summary:\nThis is a short change to enable c10 namespace in caffe2. We did not enable\nit before due to gflags global variable confusion, but it should have been\nmostly cleaned now. Right now, the plan on record is that namespace caffe2 and\nnamespace aten will fully be supersets of namespace c10.\nMost of the diff is codemod, and only two places of non-codemod is in caffe2/core/common.h, where\nusing namespace c10;\n\nis added, and in Flags.h, where instead of creating aliasing variables in c10 namespace, we directly put it in the global namespace to match gflags (and same behavior if gflags is not being built with).\nReviewed By: dzhulgakov\nDifferential Revision: D10390486", "body": "Summary:\nThis is a short change to enable c10 namespace in caffe2. We did not enable\nit before due to gflags global variable confusion, but it should have been\nmostly cleaned now. Right now, the plan on record is that namespace caffe2 and\nnamespace aten will fully be supersets of namespace c10.\n\nMost of the diff is codemod, and only two places of non-codemod is in caffe2/core/common.h, where\n\n```\nusing namespace c10;\n```\n\nis added, and in Flags.h, where instead of creating aliasing variables in c10 namespace, we directly put it in the global namespace to match gflags (and same behavior if gflags is not being built with).\n\nReviewed By: dzhulgakov\n\nDifferential Revision: D10390486\n"}