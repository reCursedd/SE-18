{"url": "https://api.github.com/repos/pytorch/pytorch/issues/13697", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13697/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13697/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13697/events", "html_url": "https://github.com/pytorch/pytorch/pull/13697", "id": 378503255, "node_id": "MDExOlB1bGxSZXF1ZXN0MjI5MTk0NjA1", "number": 13697, "title": "[jit] Add list() op and re-arrange some builtins", "user": {"login": "driazati", "id": 9407960, "node_id": "MDQ6VXNlcjk0MDc5NjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9407960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/driazati", "html_url": "https://github.com/driazati", "followers_url": "https://api.github.com/users/driazati/followers", "following_url": "https://api.github.com/users/driazati/following{/other_user}", "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}", "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/driazati/subscriptions", "organizations_url": "https://api.github.com/users/driazati/orgs", "repos_url": "https://api.github.com/users/driazati/repos", "events_url": "https://api.github.com/users/driazati/events{/privacy}", "received_events_url": "https://api.github.com/users/driazati/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 679953983, "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit", "name": "jit", "color": "c5def5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-07T22:49:24Z", "updated_at": "2018-11-08T03:49:46Z", "closed_at": "2018-11-08T03:49:46Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/13697", "html_url": "https://github.com/pytorch/pytorch/pull/13697", "diff_url": "https://github.com/pytorch/pytorch/pull/13697.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/13697.patch"}, "body_html": "<p>This PR is a prelude to converting <code>max_unpool1d</code> to weak script</p>\n<ul>\n<li>adds a <code>list()</code> noop (this is just a stand-in for now to appease the compiler, in a (near) future PR this will be made to actually follow Python semantics)</li>\n<li>moves <code>_unwrap_optional</code> and <code>_construct_empty_int_list</code> to<br>\n<code>_jit_internal.py</code> so they can be used from <code>torch.nn</code></li>\n<li>allows passing non-optional values for optional parameters</li>\n</ul>", "body_text": "This PR is a prelude to converting max_unpool1d to weak script\n\nadds a list() noop (this is just a stand-in for now to appease the compiler, in a (near) future PR this will be made to actually follow Python semantics)\nmoves _unwrap_optional and _construct_empty_int_list to\n_jit_internal.py so they can be used from torch.nn\nallows passing non-optional values for optional parameters", "body": "This PR is a prelude to converting `max_unpool1d` to weak script\r\n* adds a `list()` noop (this is just a stand-in for now to appease the compiler, in a (near) future PR this will be made to actually follow Python semantics)\r\n* moves `_unwrap_optional` and `_construct_empty_int_list` to\r\n`_jit_internal.py` so they can be used from `torch.nn`\r\n* allows passing non-optional values for optional parameters\r\n\r\n"}