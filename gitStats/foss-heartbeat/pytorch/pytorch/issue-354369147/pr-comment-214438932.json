{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/214438932", "pull_request_review_id": 151504531, "id": 214438932, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDQzODkzMg==", "diff_hunk": "@@ -5263,8 +5263,7 @@ def test_affine_grid(self):\n             self.assertEqual(out_cpu, out_cuda)\n             self.assertEqual(input_cpu.grad, input_gpu.grad)\n \n-    @unittest.skipIf((not TEST_NUMPY) or (not TEST_SCIPY) or (scipy.__version__ < '1.0.0'),\n-                     \"Scipy v1.0 and/or numpy not found\")\n+    @unittest.skipIf((not TEST_NUMPY) or (not TEST_SCIPY), \"Scipy and/or numpy not found\")", "path": "test/test_nn.py", "position": null, "original_position": 6, "commit_id": "90d765c296bbdf3480b57e102cb4a6780ae4783b", "original_commit_id": "0db8b11a7791d5c6e0efd99535d6b852cca32bff", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "body": "I am 99.9999% sure that `skipIf` isn't implemented like `skipIfNoLapack`. It probably looks like:\r\n```py\r\ndef skipIf(cond, msg):\r\n  if cond:\r\n    return lambda fn: fn\r\n  def skipped(*args, **kwargs):\r\n    raise SkipTest(msg)\r\n  return lambda fn: functools.wraps(fn)(skipped)\r\n```", "created_at": "2018-08-31T18:25:43Z", "updated_at": "2018-11-23T15:50:28Z", "html_url": "https://github.com/pytorch/pytorch/pull/10903#discussion_r214438932", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10903", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/214438932"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10903#discussion_r214438932"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10903"}}, "body_html": "<p>I am 99.9999% sure that <code>skipIf</code> isn't implemented like <code>skipIfNoLapack</code>. It probably looks like:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">skipIf</span>(<span class=\"pl-smi\">cond</span>, <span class=\"pl-smi\">msg</span>):\n  <span class=\"pl-k\">if</span> cond:\n    <span class=\"pl-k\">return</span> <span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">fn</span>: fn\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">skipped</span>(<span class=\"pl-k\">*</span><span class=\"pl-smi\">args</span>, <span class=\"pl-k\">**</span><span class=\"pl-smi\">kwargs</span>):\n    <span class=\"pl-k\">raise</span> SkipTest(msg)\n  <span class=\"pl-k\">return</span> <span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">fn</span>: functools.wraps(fn)(skipped)</pre></div>", "body_text": "I am 99.9999% sure that skipIf isn't implemented like skipIfNoLapack. It probably looks like:\ndef skipIf(cond, msg):\n  if cond:\n    return lambda fn: fn\n  def skipped(*args, **kwargs):\n    raise SkipTest(msg)\n  return lambda fn: functools.wraps(fn)(skipped)", "in_reply_to_id": 213032338}