{"url": "https://api.github.com/repos/pytorch/pytorch/issues/2412", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/2412/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2412/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/2412/events", "html_url": "https://github.com/pytorch/pytorch/issues/2412", "id": 250103883, "node_id": "MDU6SXNzdWUyNTAxMDM4ODM=", "number": 2412, "title": "Cuda advanced indexing", "user": {"login": "mariogeiger", "id": 333780, "node_id": "MDQ6VXNlcjMzMzc4MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/333780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mariogeiger", "html_url": "https://github.com/mariogeiger", "followers_url": "https://api.github.com/users/mariogeiger/followers", "following_url": "https://api.github.com/users/mariogeiger/following{/other_user}", "gists_url": "https://api.github.com/users/mariogeiger/gists{/gist_id}", "starred_url": "https://api.github.com/users/mariogeiger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mariogeiger/subscriptions", "organizations_url": "https://api.github.com/users/mariogeiger/orgs", "repos_url": "https://api.github.com/users/mariogeiger/repos", "events_url": "https://api.github.com/users/mariogeiger/events{/privacy}", "received_events_url": "https://api.github.com/users/mariogeiger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-14T17:50:00Z", "updated_at": "2018-02-02T17:16:03Z", "closed_at": "2017-08-15T06:45:55Z", "author_association": "NONE", "body_html": "<p>Hello,<br>\nThis following feature works on CPU but not on CUDA</p>\n<div class=\"highlight highlight-source-python\"><pre>In [<span class=\"pl-c1\">1</span>]: x <span class=\"pl-k\">=</span> torch.randn(<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">10</span>)\nIn [<span class=\"pl-c1\">2</span>]: idx <span class=\"pl-k\">=</span> torch.LongTensor([<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>])\nIn [<span class=\"pl-c1\">3</span>]: x[:, idx, :]; <span class=\"pl-c\"><span class=\"pl-c\">#</span> works fine</span>\nIn [<span class=\"pl-c1\">4</span>]: x <span class=\"pl-k\">=</span> torch.randn(<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">10</span>).cuda()\nIn [<span class=\"pl-c1\">5</span>]: idx <span class=\"pl-k\">=</span> torch.LongTensor([<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>]).cuda()\nIn [<span class=\"pl-c1\">6</span>]: x[:, idx, :]<span class=\"pl-bu\">;</span>\n<span class=\"pl-ii\">--------------------------------------------------------------------------</span><span class=\"pl-k\">-</span>\n<span class=\"pl-c1\">IndexError</span>                                Traceback (most recent call last)\n<span class=\"pl-k\">&lt;</span>ipython<span class=\"pl-k\">-</span><span class=\"pl-c1\">input</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">12</span><span class=\"pl-k\">-</span>cb39cd34d586<span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>()\n<span class=\"pl-ii\">----</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">1</span> x[:, idx, :]<span class=\"pl-bu\">;</span>\n\n<span class=\"pl-c1\">IndexError</span>: When performing advanced indexing the indexing objects must be LongTensors <span class=\"pl-k\">or</span> convertible to LongTensors</pre></div>", "body_text": "Hello,\nThis following feature works on CPU but not on CUDA\nIn [1]: x = torch.randn(10, 10, 10)\nIn [2]: idx = torch.LongTensor([1,2,3])\nIn [3]: x[:, idx, :]; # works fine\nIn [4]: x = torch.randn(10, 10, 10).cuda()\nIn [5]: idx = torch.LongTensor([1,2,3]).cuda()\nIn [6]: x[:, idx, :];\n---------------------------------------------------------------------------\nIndexError                                Traceback (most recent call last)\n<ipython-input-12-cb39cd34d586> in <module>()\n----> 1 x[:, idx, :];\n\nIndexError: When performing advanced indexing the indexing objects must be LongTensors or convertible to LongTensors", "body": "Hello,\r\nThis following feature works on CPU but not on CUDA\r\n\r\n```python\r\nIn [1]: x = torch.randn(10, 10, 10)\r\nIn [2]: idx = torch.LongTensor([1,2,3])\r\nIn [3]: x[:, idx, :]; # works fine\r\nIn [4]: x = torch.randn(10, 10, 10).cuda()\r\nIn [5]: idx = torch.LongTensor([1,2,3]).cuda()\r\nIn [6]: x[:, idx, :];\r\n---------------------------------------------------------------------------\r\nIndexError                                Traceback (most recent call last)\r\n<ipython-input-12-cb39cd34d586> in <module>()\r\n----> 1 x[:, idx, :];\r\n\r\nIndexError: When performing advanced indexing the indexing objects must be LongTensors or convertible to LongTensors\r\n```"}