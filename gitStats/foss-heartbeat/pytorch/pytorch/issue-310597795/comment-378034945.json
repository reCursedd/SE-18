{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/378034945", "html_url": "https://github.com/pytorch/pytorch/issues/6198#issuecomment-378034945", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6198", "id": 378034945, "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODAzNDk0NQ==", "user": {"login": "ProGamerGov", "id": 10626398, "node_id": "MDQ6VXNlcjEwNjI2Mzk4", "avatar_url": "https://avatars1.githubusercontent.com/u/10626398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ProGamerGov", "html_url": "https://github.com/ProGamerGov", "followers_url": "https://api.github.com/users/ProGamerGov/followers", "following_url": "https://api.github.com/users/ProGamerGov/following{/other_user}", "gists_url": "https://api.github.com/users/ProGamerGov/gists{/gist_id}", "starred_url": "https://api.github.com/users/ProGamerGov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ProGamerGov/subscriptions", "organizations_url": "https://api.github.com/users/ProGamerGov/orgs", "repos_url": "https://api.github.com/users/ProGamerGov/repos", "events_url": "https://api.github.com/users/ProGamerGov/events{/privacy}", "received_events_url": "https://api.github.com/users/ProGamerGov/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-02T20:30:49Z", "updated_at": "2018-04-02T20:30:49Z", "author_association": "NONE", "body_html": "<p>Using <code>.cpu()</code> instead of <code>.cuda()</code>:</p>\n<pre><code>import torch\nimport torch.nn as nn\n\ninput = torch.randn(3,64,64).cpu() #.cuda()\nprint(input.size()) # Works\ntest = input[:, [1,-2], [1,-2]]\nprint(test)\n</code></pre>\n<p>Results in:</p>\n<pre><code>(3L, 64L, 64L)\nTraceback (most recent call last):\n  File \"t.py\", line 6, in &lt;module&gt;\n    test = input[:, [1,-2], [1,-2]]\nRuntimeError: index out of range at /pytorch/torch/lib/TH/generic/THTensorMath.c:277\n</code></pre>", "body_text": "Using .cpu() instead of .cuda():\nimport torch\nimport torch.nn as nn\n\ninput = torch.randn(3,64,64).cpu() #.cuda()\nprint(input.size()) # Works\ntest = input[:, [1,-2], [1,-2]]\nprint(test)\n\nResults in:\n(3L, 64L, 64L)\nTraceback (most recent call last):\n  File \"t.py\", line 6, in <module>\n    test = input[:, [1,-2], [1,-2]]\nRuntimeError: index out of range at /pytorch/torch/lib/TH/generic/THTensorMath.c:277", "body": "Using `.cpu()` instead of `.cuda()`: \r\n\r\n```\r\nimport torch\r\nimport torch.nn as nn\r\n\r\ninput = torch.randn(3,64,64).cpu() #.cuda()\r\nprint(input.size()) # Works\r\ntest = input[:, [1,-2], [1,-2]]\r\nprint(test)\r\n```\r\n\r\nResults in: \r\n\r\n\r\n```\r\n(3L, 64L, 64L)\r\nTraceback (most recent call last):\r\n  File \"t.py\", line 6, in <module>\r\n    test = input[:, [1,-2], [1,-2]]\r\nRuntimeError: index out of range at /pytorch/torch/lib/TH/generic/THTensorMath.c:277\r\n```\r\n\r\n"}