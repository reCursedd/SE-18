{"url": "https://api.github.com/repos/pytorch/pytorch/issues/6198", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6198/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6198/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6198/events", "html_url": "https://github.com/pytorch/pytorch/issues/6198", "id": 310597795, "node_id": "MDU6SXNzdWUzMTA1OTc3OTU=", "number": 6198, "title": "RuntimeError: cuda runtime error (59) : device-side assert triggered at /pytorch/torch/lib/THC/generic/THCTensorCopy.c:70", "user": {"login": "ProGamerGov", "id": 10626398, "node_id": "MDQ6VXNlcjEwNjI2Mzk4", "avatar_url": "https://avatars1.githubusercontent.com/u/10626398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ProGamerGov", "html_url": "https://github.com/ProGamerGov", "followers_url": "https://api.github.com/users/ProGamerGov/followers", "following_url": "https://api.github.com/users/ProGamerGov/following{/other_user}", "gists_url": "https://api.github.com/users/ProGamerGov/gists{/gist_id}", "starred_url": "https://api.github.com/users/ProGamerGov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ProGamerGov/subscriptions", "organizations_url": "https://api.github.com/users/ProGamerGov/orgs", "repos_url": "https://api.github.com/users/ProGamerGov/repos", "events_url": "https://api.github.com/users/ProGamerGov/events{/privacy}", "received_events_url": "https://api.github.com/users/ProGamerGov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-02T20:20:42Z", "updated_at": "2018-04-02T20:46:54Z", "closed_at": "2018-04-02T20:32:21Z", "author_association": "NONE", "body_html": "<ul>\n<li>PyTorch or Caffe2: PyTorch</li>\n<li>OS: Ubuntu: Ubuntu 16.04.3 LTS (GNU/Linux 4.4.0-1038-aws x86_64)</li>\n<li>PyTorch version: 0.3.1</li>\n<li>How you installed PyTorch (conda, pip, source): pip</li>\n<li>Python version: Python 2.7</li>\n<li>CUDA/cuDNN version: Cuda 9, cuDNN v7</li>\n<li>GPU models and configuration: Tesla K80</li>\n<li>GCC version (if compiling from source): N/A</li>\n<li>CMake version: cmake version 3.5.1</li>\n<li>Build command you used (if compiling from source): N/A</li>\n<li>Versions of any other relevant libraries: N/A</li>\n</ul>\n<p>Running this script:</p>\n<pre><code>import torch\nimport torch.nn as nn\n\ninput = torch.randn(3,64,64).cuda()\nprint(input.size()) # Works\ntest = input[:, [1,-2], [1,-2]]\ninput = input.cpu() # Doesn't work.\n</code></pre>\n<p>Will result in this error message:</p>\n<pre><code>(3L, 64L, 64L)\n/pytorch/torch/lib/THC/THCTensorIndex.cu:417: long calculateOffset(IndexType, LinearIndexCalcData&lt;IndexType, Dims&gt;) [with IndexType = unsigned int, Dims = 3U]: block: [0,0,0], thread: [1,0,0] Assertion `indexAtDim &lt; data.baseSizes[dim]` failed.\n/pytorch/torch/lib/THC/THCTensorIndex.cu:417: long calculateOffset(IndexType, LinearIndexCalcData&lt;IndexType, Dims&gt;) [with IndexType = unsigned int, Dims = 3U]: block: [0,0,0], thread: [3,0,0] Assertion `indexAtDim &lt; data.baseSizes[dim]` failed.\n/pytorch/torch/lib/THC/THCTensorIndex.cu:417: long calculateOffset(IndexType, LinearIndexCalcData&lt;IndexType, Dims&gt;) [with IndexType = unsigned int, Dims = 3U]: block: [0,0,0], thread: [5,0,0] Assertion `indexAtDim &lt; data.baseSizes[dim]` failed.\nTHCudaCheck FAIL file=/pytorch/torch/lib/THC/generic/THCTensorCopy.c line=70 error=59 : device-side assert triggered\nTraceback (most recent call last):\n  File \"t.py\", line 7, in &lt;module&gt;\n    input = input.cpu()\n  File \"/usr/local/lib/python2.7/dist-packages/torch/tensor.py\", line 45, in cpu\n    return self.type(getattr(torch, self.__class__.__name__))\n  File \"/usr/local/lib/python2.7/dist-packages/torch/cuda/__init__.py\", line 396, in type\n    return super(_CudaBase, self).type(*args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/torch/_utils.py\", line 38, in _type\n    return new_type(self.size()).copy_(self, async)\nRuntimeError: cuda runtime error (59) : device-side assert triggered at /pytorch/torch/lib/THC/generic/THCTensorCopy.c:70\n</code></pre>\n<p>And running this script:</p>\n<pre><code>import torch\nimport torch.nn as nn\n\ninput = torch.randn(3,64,64).cuda()\nprint(input.size()) # Works\ntest = input[:, [1,-2], [1,-2]]\nprint(test) # Doesn't work\n</code></pre>\n<p>Will result in this error message:</p>\n<pre><code>(3L, 64L, 64L)\n/pytorch/torch/lib/THC/THCTensorIndex.cu:417: long calculateOffset(IndexType, LinearIndexCalcData&lt;IndexType, Dims&gt;) [with IndexType = unsigned int, Dims = 3U]: block: [0,0,0], thread: [1,0,0] Assertion `indexAtDim &lt; data.baseSizes[dim]` failed.\n/pytorch/torch/lib/THC/THCTensorIndex.cu:417: long calculateOffset(IndexType, LinearIndexCalcData&lt;IndexType, Dims&gt;) [with IndexType = unsigned int, Dims = 3U]: block: [0,0,0], thread: [3,0,0] Assertion `indexAtDim &lt; data.baseSizes[dim]` failed.\n/pytorch/torch/lib/THC/THCTensorIndex.cu:417: long calculateOffset(IndexType, LinearIndexCalcData&lt;IndexType, Dims&gt;) [with IndexType = unsigned int, Dims = 3U]: block: [0,0,0], thread: [5,0,0] Assertion `indexAtDim &lt; data.baseSizes[dim]` failed.\nTHCudaCheck FAIL file=/pytorch/torch/lib/THC/generic/THCTensorCopy.c line=70 error=59 : device-side assert triggered\nTraceback (most recent call last):\n  File \"t.py\", line 7, in &lt;module&gt;\n    print(test)\n  File \"/usr/local/lib/python2.7/dist-packages/torch/tensor.py\", line 154, in __str__\n    return _tensor_str._str(self).encode(\n  File \"/usr/local/lib/python2.7/dist-packages/torch/_tensor_str.py\", line 297, in _str\n    strt = _matrix_str(self)\n  File \"/usr/local/lib/python2.7/dist-packages/torch/_tensor_str.py\", line 216, in _matrix_str\n    min_sz=5 if not print_full_mat else 0)\n  File \"/usr/local/lib/python2.7/dist-packages/torch/_tensor_str.py\", line 79, in _number_format\n    tensor = torch.DoubleTensor(tensor.size()).copy_(tensor).abs_().view(tensor.nelement())\nRuntimeError: cuda runtime error (59) : device-side assert triggered at /pytorch/torch/lib/THC/generic/THCTensorCopy.c:70\n</code></pre>", "body_text": "PyTorch or Caffe2: PyTorch\nOS: Ubuntu: Ubuntu 16.04.3 LTS (GNU/Linux 4.4.0-1038-aws x86_64)\nPyTorch version: 0.3.1\nHow you installed PyTorch (conda, pip, source): pip\nPython version: Python 2.7\nCUDA/cuDNN version: Cuda 9, cuDNN v7\nGPU models and configuration: Tesla K80\nGCC version (if compiling from source): N/A\nCMake version: cmake version 3.5.1\nBuild command you used (if compiling from source): N/A\nVersions of any other relevant libraries: N/A\n\nRunning this script:\nimport torch\nimport torch.nn as nn\n\ninput = torch.randn(3,64,64).cuda()\nprint(input.size()) # Works\ntest = input[:, [1,-2], [1,-2]]\ninput = input.cpu() # Doesn't work.\n\nWill result in this error message:\n(3L, 64L, 64L)\n/pytorch/torch/lib/THC/THCTensorIndex.cu:417: long calculateOffset(IndexType, LinearIndexCalcData<IndexType, Dims>) [with IndexType = unsigned int, Dims = 3U]: block: [0,0,0], thread: [1,0,0] Assertion `indexAtDim < data.baseSizes[dim]` failed.\n/pytorch/torch/lib/THC/THCTensorIndex.cu:417: long calculateOffset(IndexType, LinearIndexCalcData<IndexType, Dims>) [with IndexType = unsigned int, Dims = 3U]: block: [0,0,0], thread: [3,0,0] Assertion `indexAtDim < data.baseSizes[dim]` failed.\n/pytorch/torch/lib/THC/THCTensorIndex.cu:417: long calculateOffset(IndexType, LinearIndexCalcData<IndexType, Dims>) [with IndexType = unsigned int, Dims = 3U]: block: [0,0,0], thread: [5,0,0] Assertion `indexAtDim < data.baseSizes[dim]` failed.\nTHCudaCheck FAIL file=/pytorch/torch/lib/THC/generic/THCTensorCopy.c line=70 error=59 : device-side assert triggered\nTraceback (most recent call last):\n  File \"t.py\", line 7, in <module>\n    input = input.cpu()\n  File \"/usr/local/lib/python2.7/dist-packages/torch/tensor.py\", line 45, in cpu\n    return self.type(getattr(torch, self.__class__.__name__))\n  File \"/usr/local/lib/python2.7/dist-packages/torch/cuda/__init__.py\", line 396, in type\n    return super(_CudaBase, self).type(*args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/torch/_utils.py\", line 38, in _type\n    return new_type(self.size()).copy_(self, async)\nRuntimeError: cuda runtime error (59) : device-side assert triggered at /pytorch/torch/lib/THC/generic/THCTensorCopy.c:70\n\nAnd running this script:\nimport torch\nimport torch.nn as nn\n\ninput = torch.randn(3,64,64).cuda()\nprint(input.size()) # Works\ntest = input[:, [1,-2], [1,-2]]\nprint(test) # Doesn't work\n\nWill result in this error message:\n(3L, 64L, 64L)\n/pytorch/torch/lib/THC/THCTensorIndex.cu:417: long calculateOffset(IndexType, LinearIndexCalcData<IndexType, Dims>) [with IndexType = unsigned int, Dims = 3U]: block: [0,0,0], thread: [1,0,0] Assertion `indexAtDim < data.baseSizes[dim]` failed.\n/pytorch/torch/lib/THC/THCTensorIndex.cu:417: long calculateOffset(IndexType, LinearIndexCalcData<IndexType, Dims>) [with IndexType = unsigned int, Dims = 3U]: block: [0,0,0], thread: [3,0,0] Assertion `indexAtDim < data.baseSizes[dim]` failed.\n/pytorch/torch/lib/THC/THCTensorIndex.cu:417: long calculateOffset(IndexType, LinearIndexCalcData<IndexType, Dims>) [with IndexType = unsigned int, Dims = 3U]: block: [0,0,0], thread: [5,0,0] Assertion `indexAtDim < data.baseSizes[dim]` failed.\nTHCudaCheck FAIL file=/pytorch/torch/lib/THC/generic/THCTensorCopy.c line=70 error=59 : device-side assert triggered\nTraceback (most recent call last):\n  File \"t.py\", line 7, in <module>\n    print(test)\n  File \"/usr/local/lib/python2.7/dist-packages/torch/tensor.py\", line 154, in __str__\n    return _tensor_str._str(self).encode(\n  File \"/usr/local/lib/python2.7/dist-packages/torch/_tensor_str.py\", line 297, in _str\n    strt = _matrix_str(self)\n  File \"/usr/local/lib/python2.7/dist-packages/torch/_tensor_str.py\", line 216, in _matrix_str\n    min_sz=5 if not print_full_mat else 0)\n  File \"/usr/local/lib/python2.7/dist-packages/torch/_tensor_str.py\", line 79, in _number_format\n    tensor = torch.DoubleTensor(tensor.size()).copy_(tensor).abs_().view(tensor.nelement())\nRuntimeError: cuda runtime error (59) : device-side assert triggered at /pytorch/torch/lib/THC/generic/THCTensorCopy.c:70", "body": "- PyTorch or Caffe2: PyTorch\r\n- OS: Ubuntu: Ubuntu 16.04.3 LTS (GNU/Linux 4.4.0-1038-aws x86_64)\r\n- PyTorch version: 0.3.1\r\n- How you installed PyTorch (conda, pip, source): pip\r\n- Python version: Python 2.7\r\n- CUDA/cuDNN version: Cuda 9, cuDNN v7\r\n- GPU models and configuration: Tesla K80\r\n- GCC version (if compiling from source): N/A\r\n- CMake version: cmake version 3.5.1\r\n- Build command you used (if compiling from source): N/A\r\n- Versions of any other relevant libraries: N/A\r\n\r\n\r\nRunning this script:\r\n```\r\nimport torch\r\nimport torch.nn as nn\r\n\r\ninput = torch.randn(3,64,64).cuda()\r\nprint(input.size()) # Works\r\ntest = input[:, [1,-2], [1,-2]]\r\ninput = input.cpu() # Doesn't work.\r\n```\r\n\r\nWill result in this error message: \r\n\r\n\r\n```\r\n(3L, 64L, 64L)\r\n/pytorch/torch/lib/THC/THCTensorIndex.cu:417: long calculateOffset(IndexType, LinearIndexCalcData<IndexType, Dims>) [with IndexType = unsigned int, Dims = 3U]: block: [0,0,0], thread: [1,0,0] Assertion `indexAtDim < data.baseSizes[dim]` failed.\r\n/pytorch/torch/lib/THC/THCTensorIndex.cu:417: long calculateOffset(IndexType, LinearIndexCalcData<IndexType, Dims>) [with IndexType = unsigned int, Dims = 3U]: block: [0,0,0], thread: [3,0,0] Assertion `indexAtDim < data.baseSizes[dim]` failed.\r\n/pytorch/torch/lib/THC/THCTensorIndex.cu:417: long calculateOffset(IndexType, LinearIndexCalcData<IndexType, Dims>) [with IndexType = unsigned int, Dims = 3U]: block: [0,0,0], thread: [5,0,0] Assertion `indexAtDim < data.baseSizes[dim]` failed.\r\nTHCudaCheck FAIL file=/pytorch/torch/lib/THC/generic/THCTensorCopy.c line=70 error=59 : device-side assert triggered\r\nTraceback (most recent call last):\r\n  File \"t.py\", line 7, in <module>\r\n    input = input.cpu()\r\n  File \"/usr/local/lib/python2.7/dist-packages/torch/tensor.py\", line 45, in cpu\r\n    return self.type(getattr(torch, self.__class__.__name__))\r\n  File \"/usr/local/lib/python2.7/dist-packages/torch/cuda/__init__.py\", line 396, in type\r\n    return super(_CudaBase, self).type(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/torch/_utils.py\", line 38, in _type\r\n    return new_type(self.size()).copy_(self, async)\r\nRuntimeError: cuda runtime error (59) : device-side assert triggered at /pytorch/torch/lib/THC/generic/THCTensorCopy.c:70\r\n```\r\n\r\n\r\n\r\nAnd running this script: \r\n\r\n```\r\nimport torch\r\nimport torch.nn as nn\r\n\r\ninput = torch.randn(3,64,64).cuda()\r\nprint(input.size()) # Works\r\ntest = input[:, [1,-2], [1,-2]]\r\nprint(test) # Doesn't work\r\n```\r\n\r\nWill result in this error message: \r\n\r\n```\r\n(3L, 64L, 64L)\r\n/pytorch/torch/lib/THC/THCTensorIndex.cu:417: long calculateOffset(IndexType, LinearIndexCalcData<IndexType, Dims>) [with IndexType = unsigned int, Dims = 3U]: block: [0,0,0], thread: [1,0,0] Assertion `indexAtDim < data.baseSizes[dim]` failed.\r\n/pytorch/torch/lib/THC/THCTensorIndex.cu:417: long calculateOffset(IndexType, LinearIndexCalcData<IndexType, Dims>) [with IndexType = unsigned int, Dims = 3U]: block: [0,0,0], thread: [3,0,0] Assertion `indexAtDim < data.baseSizes[dim]` failed.\r\n/pytorch/torch/lib/THC/THCTensorIndex.cu:417: long calculateOffset(IndexType, LinearIndexCalcData<IndexType, Dims>) [with IndexType = unsigned int, Dims = 3U]: block: [0,0,0], thread: [5,0,0] Assertion `indexAtDim < data.baseSizes[dim]` failed.\r\nTHCudaCheck FAIL file=/pytorch/torch/lib/THC/generic/THCTensorCopy.c line=70 error=59 : device-side assert triggered\r\nTraceback (most recent call last):\r\n  File \"t.py\", line 7, in <module>\r\n    print(test)\r\n  File \"/usr/local/lib/python2.7/dist-packages/torch/tensor.py\", line 154, in __str__\r\n    return _tensor_str._str(self).encode(\r\n  File \"/usr/local/lib/python2.7/dist-packages/torch/_tensor_str.py\", line 297, in _str\r\n    strt = _matrix_str(self)\r\n  File \"/usr/local/lib/python2.7/dist-packages/torch/_tensor_str.py\", line 216, in _matrix_str\r\n    min_sz=5 if not print_full_mat else 0)\r\n  File \"/usr/local/lib/python2.7/dist-packages/torch/_tensor_str.py\", line 79, in _number_format\r\n    tensor = torch.DoubleTensor(tensor.size()).copy_(tensor).abs_().view(tensor.nelement())\r\nRuntimeError: cuda runtime error (59) : device-side assert triggered at /pytorch/torch/lib/THC/generic/THCTensorCopy.c:70\r\n```\r\n\r\n\r\n\r\n"}