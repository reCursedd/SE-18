{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/187984747", "pull_request_review_id": 119872144, "id": 187984747, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzk4NDc0Nw==", "diff_hunk": "@@ -0,0 +1,200 @@\n+#include <catch.hpp>\n+\n+#include <torch/torch.h>\n+\n+#include <torch/detail/any.h>\n+#include <torch/nn/modules/any.h>\n+\n+#include <algorithm>\n+#include <string>\n+\n+using namespace torch;\n+using namespace torch::nn;\n+using namespace torch::detail;\n+\n+using Catch::StartsWith;\n+\n+TEST_CASE(\"any\") {\n+  SECTION(\"gets the correct value for the right type\") {\n+    SECTION(\"int\") {\n+      auto any = make_any(5);\n+      // const and non-const types have the same typeid()\n+      REQUIRE(any.try_get<int>() != nullptr);\n+      REQUIRE(any.try_get<const int>() != nullptr);\n+      REQUIRE(any.get<int>() == 5);\n+    }\n+    SECTION(\"const int\") {\n+      auto any = make_any(5);\n+      REQUIRE(any.try_get<const int>() != nullptr);\n+      REQUIRE(any.try_get<int>() != nullptr);\n+      REQUIRE(any.get<const int>() == 5);\n+    }\n+    SECTION(\"const char*\") {\n+      auto any = make_any(\"hello\");\n+      REQUIRE(any.try_get<const char*>() != nullptr);\n+      REQUIRE(any.get<const char*>() == std::string(\"hello\"));\n+    }\n+    SECTION(\"std::string\") {\n+      auto any = make_any(std::string(\"hello\"));\n+      REQUIRE(any.try_get<std::string>() != nullptr);\n+      REQUIRE(any.get<std::string>() == \"hello\");\n+    }\n+    SECTION(\"pointers\") {\n+      std::string s(\"hello\");\n+      std::string* p = &s;\n+      auto any = make_any(p);\n+      REQUIRE(any.try_get<std::string*>() != nullptr);\n+      REQUIRE(*any.get<std::string*>() == \"hello\");\n+    }\n+    SECTION(\"references\") {\n+      std::string s(\"hello\");\n+      const std::string& t = s;\n+      auto any = make_any(t);", "path": "test/cpp/api/any.cpp", "position": null, "original_position": 52, "commit_id": "d4df9b3f7c6dbe1c6852a1352f7fb1854defe454", "original_commit_id": "fe047cffdf6d61f87fd56f978cec286719ac01bc", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "body": "I was kind of regarding it as a black box here", "created_at": "2018-05-14T14:56:53Z", "updated_at": "2018-11-23T15:44:01Z", "html_url": "https://github.com/pytorch/pytorch/pull/7508#discussion_r187984747", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7508", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/187984747"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7508#discussion_r187984747"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7508"}}, "body_html": "<p>I was kind of regarding it as a black box here</p>", "body_text": "I was kind of regarding it as a black box here", "in_reply_to_id": 187787385}