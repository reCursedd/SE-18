{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/390537319", "html_url": "https://github.com/pytorch/pytorch/pull/7508#issuecomment-390537319", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7508", "id": 390537319, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDUzNzMxOQ==", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-21T02:33:54Z", "updated_at": "2018-05-21T02:33:54Z", "author_association": "CONTRIBUTOR", "body_html": "<p>After discussions with <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=370202\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zdevito\">@zdevito</a>, I have turned the <code>Any</code> class, which was sort of general purpose, into a nested class of <code>AnyModule</code>. This reduces its scope and thus solves our discussion about how standardized the <code>Any</code> class needs to be.</p>\n<p>Otherwise, I think this is ready now. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a>, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=2373925\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/smessmer\">@smessmer</a> and <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> (after PTO) please re-review and sign off.</p>", "body_text": "After discussions with @zdevito, I have turned the Any class, which was sort of general purpose, into a nested class of AnyModule. This reduces its scope and thus solves our discussion about how standardized the Any class needs to be.\nOtherwise, I think this is ready now. @apaszke, @smessmer and @ezyang (after PTO) please re-review and sign off.", "body": "After discussions with @zdevito, I have turned the `Any` class, which was sort of general purpose, into a nested class of `AnyModule`. This reduces its scope and thus solves our discussion about how standardized the `Any` class needs to be.\r\n\r\nOtherwise, I think this is ready now. @apaszke, @smessmer and @ezyang (after PTO) please re-review and sign off."}