{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/187787512", "pull_request_review_id": 119641239, "id": 187787512, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc4NzUxMg==", "diff_hunk": "@@ -0,0 +1,215 @@\n+#pragma once\n+\n+#include <torch/detail/any.h>\n+\n+#include <torch/csrc/autograd/variable.h>\n+#include <torch/csrc/utils/memory.h>\n+#include <torch/csrc/utils/variadic.h>\n+\n+#include <memory>\n+#include <type_traits>\n+#include <typeinfo>\n+#include <utility>\n+#include <vector>\n+\n+namespace torch {\n+namespace detail {\n+template <typename Head = void, typename... Tail>\n+void check_not_lvalue_references() {\n+  static_assert(\n+      !std::is_lvalue_reference<Head>::value ||\n+          std::is_const<typename std::remove_reference<Head>::type>::value,\n+      \"Modules stored inside AnyModule must not take (lvalue) references. Use pointers instead.\");\n+  check_not_lvalue_references<Tail...>();\n+}\n+\n+template <>\n+inline void check_not_lvalue_references<void>() {}\n+} // namespace detail\n+\n+namespace nn {\n+\n+/// A class to store a type erasd module, whose `forward()` method can be\n+/// invoked, with dynamic type checking.\n+class AnyModule {", "path": "torch/csrc/api/include/torch/nn/modules/any.h", "position": null, "original_position": 34, "commit_id": "d4df9b3f7c6dbe1c6852a1352f7fb1854defe454", "original_commit_id": "fe047cffdf6d61f87fd56f978cec286719ac01bc", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Do implicit conversions work when I invoke an `AnyModule`?", "created_at": "2018-05-13T02:32:38Z", "updated_at": "2018-11-23T15:43:59Z", "html_url": "https://github.com/pytorch/pytorch/pull/7508#discussion_r187787512", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7508", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/187787512"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7508#discussion_r187787512"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7508"}}, "body_html": "<p>Do implicit conversions work when I invoke an <code>AnyModule</code>?</p>", "body_text": "Do implicit conversions work when I invoke an AnyModule?"}