{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/187982710", "pull_request_review_id": 119869627, "id": 187982710, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzk4MjcxMA==", "diff_hunk": "@@ -0,0 +1,215 @@\n+#pragma once\n+\n+#include <torch/detail/any.h>\n+\n+#include <torch/csrc/autograd/variable.h>\n+#include <torch/csrc/utils/memory.h>\n+#include <torch/csrc/utils/variadic.h>\n+\n+#include <memory>\n+#include <type_traits>\n+#include <typeinfo>\n+#include <utility>\n+#include <vector>\n+\n+namespace torch {\n+namespace detail {\n+template <typename Head = void, typename... Tail>\n+void check_not_lvalue_references() {\n+  static_assert(\n+      !std::is_lvalue_reference<Head>::value ||\n+          std::is_const<typename std::remove_reference<Head>::type>::value,\n+      \"Modules stored inside AnyModule must not take (lvalue) references. Use pointers instead.\");", "path": "torch/csrc/api/include/torch/nn/modules/any.h", "position": null, "original_position": 22, "commit_id": "d4df9b3f7c6dbe1c6852a1352f7fb1854defe454", "original_commit_id": "fe047cffdf6d61f87fd56f978cec286719ac01bc", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "body": "Because in this mechanism we are copying/movying parameters into `Any` objects that live somwhere on the stack, so it would be inherently unsafe to allow users to take lvalue refs to these values, especially since the values are different from the ones they pass into the function call! Should I simplify the error message and add a comment on top?", "created_at": "2018-05-14T14:51:30Z", "updated_at": "2018-11-23T15:44:00Z", "html_url": "https://github.com/pytorch/pytorch/pull/7508#discussion_r187982710", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7508", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/187982710"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7508#discussion_r187982710"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7508"}}, "body_html": "<p>Because in this mechanism we are copying/movying parameters into <code>Any</code> objects that live somwhere on the stack, so it would be inherently unsafe to allow users to take lvalue refs to these values, especially since the values are different from the ones they pass into the function call! Should I simplify the error message and add a comment on top?</p>", "body_text": "Because in this mechanism we are copying/movying parameters into Any objects that live somwhere on the stack, so it would be inherently unsafe to allow users to take lvalue refs to these values, especially since the values are different from the ones they pass into the function call! Should I simplify the error message and add a comment on top?", "in_reply_to_id": 187786936}