{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/188023219", "pull_request_review_id": 119912566, "id": 188023219, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODAyMzIxOQ==", "diff_hunk": "@@ -108,4 +108,50 @@ struct MakeIndices : MakeIndices<N-1, N-1, Is...> {};\n // 0 through N-1.\n template<size_t... Is>\n struct MakeIndices<0, Is...> { using indices = Indices<Is...>; };\n+\n+//===----------------------------------------------------------------------===//\n+//                                 Utilities\n+//===----------------------------------------------------------------------===//\n+\n+template <bool value, typename T = void>\n+using enable_if_t = typename std::enable_if<value, T>::type;\n+\n+template <bool value, typename T = void>\n+using disable_if_t = enable_if_t<!value, T>;\n+\n+template <typename T>\n+using decay_t = typename std::decay<T>::type;", "path": "torch/csrc/utils/variadic.h", "position": 117, "original_position": 16, "commit_id": "d4df9b3f7c6dbe1c6852a1352f7fb1854defe454", "original_commit_id": "2d6b6dc74466732d280aee505915e4387b7f9dc0", "user": {"login": "smessmer", "id": 2373925, "node_id": "MDQ6VXNlcjIzNzM5MjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2373925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smessmer", "html_url": "https://github.com/smessmer", "followers_url": "https://api.github.com/users/smessmer/followers", "following_url": "https://api.github.com/users/smessmer/following{/other_user}", "gists_url": "https://api.github.com/users/smessmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/smessmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smessmer/subscriptions", "organizations_url": "https://api.github.com/users/smessmer/orgs", "repos_url": "https://api.github.com/users/smessmer/repos", "events_url": "https://api.github.com/users/smessmer/events{/privacy}", "received_events_url": "https://api.github.com/users/smessmer/received_events", "type": "User", "site_admin": false}, "body": "Can you only define these if not already present, and if present do `using enable_if_t = std::enable_if_t` instead?", "created_at": "2018-05-14T16:49:58Z", "updated_at": "2018-11-23T15:44:01Z", "html_url": "https://github.com/pytorch/pytorch/pull/7508#discussion_r188023219", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7508", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/188023219"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7508#discussion_r188023219"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7508"}}, "body_html": "<p>Can you only define these if not already present, and if present do <code>using enable_if_t = std::enable_if_t</code> instead?</p>", "body_text": "Can you only define these if not already present, and if present do using enable_if_t = std::enable_if_t instead?"}