{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/390366436", "html_url": "https://github.com/pytorch/pytorch/pull/7508#issuecomment-390366436", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7508", "id": 390366436, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDM2NjQzNg==", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-19T00:54:06Z", "updated_at": "2018-05-19T00:54:06Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I've added a way of giving users nice <code>static_assert</code>s when they try to add a module to <code>Sequential</code> that doesn't have a <code>forward()</code>:</p>\n<pre><code>struct X : public Module {};\nsequential.push_back(X());\n</code></pre>\n<p>gives</p>\n<pre><code>/home/psag/pytorch/pytorch/tools/cpp_build/libtorch/../../../torch/csrc/api/include/torch/nn/modules/sequential.h:98:5:   required from \u2018void torch::nn::Sequential::push_back(M&amp;&amp;) [with M = ____C_A_T_C_H____T_E_S_T____0()::X]\u2019\n/home/psag/pytorch/pytorch/test/cpp/api/sequential.cpp:29:29:   required from here\n/home/psag/pytorch/pytorch/tools/cpp_build/libtorch/../../../torch/csrc/api/include/torch/nn/modules/sequential.h:80:5: error: static assertion failed: Can only add modules with a forward() method to Sequential\n     static_assert(\n</code></pre>", "body_text": "I've added a way of giving users nice static_asserts when they try to add a module to Sequential that doesn't have a forward():\nstruct X : public Module {};\nsequential.push_back(X());\n\ngives\n/home/psag/pytorch/pytorch/tools/cpp_build/libtorch/../../../torch/csrc/api/include/torch/nn/modules/sequential.h:98:5:   required from \u2018void torch::nn::Sequential::push_back(M&&) [with M = ____C_A_T_C_H____T_E_S_T____0()::X]\u2019\n/home/psag/pytorch/pytorch/test/cpp/api/sequential.cpp:29:29:   required from here\n/home/psag/pytorch/pytorch/tools/cpp_build/libtorch/../../../torch/csrc/api/include/torch/nn/modules/sequential.h:80:5: error: static assertion failed: Can only add modules with a forward() method to Sequential\n     static_assert(", "body": "I've added a way of giving users nice `static_assert`s when they try to add a module to `Sequential` that doesn't have a `forward()`:\r\n\r\n```\r\nstruct X : public Module {};\r\nsequential.push_back(X());\r\n```\r\n\r\ngives\r\n\r\n```\r\n/home/psag/pytorch/pytorch/tools/cpp_build/libtorch/../../../torch/csrc/api/include/torch/nn/modules/sequential.h:98:5:   required from \u2018void torch::nn::Sequential::push_back(M&&) [with M = ____C_A_T_C_H____T_E_S_T____0()::X]\u2019\r\n/home/psag/pytorch/pytorch/test/cpp/api/sequential.cpp:29:29:   required from here\r\n/home/psag/pytorch/pytorch/tools/cpp_build/libtorch/../../../torch/csrc/api/include/torch/nn/modules/sequential.h:80:5: error: static assertion failed: Can only add modules with a forward() method to Sequential\r\n     static_assert(\r\n```"}