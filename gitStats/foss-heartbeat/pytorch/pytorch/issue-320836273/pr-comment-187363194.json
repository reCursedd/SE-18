{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/187363194", "pull_request_review_id": 119128589, "id": 187363194, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzM2MzE5NA==", "diff_hunk": "@@ -6261,18 +6261,31 @@ def map_location(storage, loc):\n \n         def load_bytes():\n             with open(test_file_path, 'rb') as f:\n-                data = io.BytesIO(f.read())\n-            return data\n+                return io.BytesIO(f.read())\n \n         fileobject_lambdas = [lambda: test_file_path, load_bytes]\n-        map_locations = [map_location, {'cuda:0': 'cpu'}, 'cpu']\n+        cpu_map_locations = [map_location, {'cuda:0': 'cpu'}, 'cpu', torch.device('cpu')]\n+        gpu_map_locations = [\n+            {'cuda:0': 'cuda:0'},\n+            'cuda',\n+            'cuda:{}'.format(torch.cuda.device_count() - 1),\n+            'cuda:0',\n+            torch.device('cuda'),\n+            torch.device('cuda', 0)\n+        ]\n \n         for fileobject_lambda in fileobject_lambdas:\n-            for map_location in map_locations:\n+            for map_location in cpu_map_locations:\n                 tensor = torch.load(fileobject_lambda(), map_location=map_location)\n                 self.assertIsInstance(tensor, torch.FloatTensor)\n                 self.assertEqual(tensor, torch.FloatTensor([[1.0, 2.0], [3.0, 4.0]]))\n \n+            if torch.cuda.is_available():\n+                for map_location in gpu_map_locations:\n+                    tensor = torch.load(fileobject_lambda(), map_location=map_location)\n+                    self.assertIsInstance(tensor, torch.cuda.FloatTensor)\n+                    self.assertEqual(tensor, torch.cuda.FloatTensor([[1.0, 2.0], [3.0, 4.0]]))", "path": "test/test_torch.py", "position": null, "original_position": 31, "commit_id": "42ca998298e509ba4dca616aa8014d2ed6d097ca", "original_commit_id": "fa1b382e5a781651e019b274cd4182250dcc1493", "user": {"login": "Lalaland", "id": 342233, "node_id": "MDQ6VXNlcjM0MjIzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/342233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lalaland", "html_url": "https://github.com/Lalaland", "followers_url": "https://api.github.com/users/Lalaland/followers", "following_url": "https://api.github.com/users/Lalaland/following{/other_user}", "gists_url": "https://api.github.com/users/Lalaland/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lalaland/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lalaland/subscriptions", "organizations_url": "https://api.github.com/users/Lalaland/orgs", "repos_url": "https://api.github.com/users/Lalaland/repos", "events_url": "https://api.github.com/users/Lalaland/events{/privacy}", "received_events_url": "https://api.github.com/users/Lalaland/received_events", "type": "User", "site_admin": false}, "body": "@apaszke We get the error message: \r\n`device(type='cuda', index=0) != device(type='cuda')` when we do this.\r\n\r\nI'm not sure how valid of an error message this is. Should I change Device.cpp so that index=0 is equivalent to no index?", "created_at": "2018-05-10T15:19:31Z", "updated_at": "2018-11-23T15:43:53Z", "html_url": "https://github.com/pytorch/pytorch/pull/7339#discussion_r187363194", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7339", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/187363194"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7339#discussion_r187363194"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7339"}}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> We get the error message:<br>\n<code>device(type='cuda', index=0) != device(type='cuda')</code> when we do this.</p>\n<p>I'm not sure how valid of an error message this is. Should I change Device.cpp so that index=0 is equivalent to no index?</p>", "body_text": "@apaszke We get the error message:\ndevice(type='cuda', index=0) != device(type='cuda') when we do this.\nI'm not sure how valid of an error message this is. Should I change Device.cpp so that index=0 is equivalent to no index?", "in_reply_to_id": 187360719}