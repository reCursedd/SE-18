{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/187330465", "pull_request_review_id": 119087258, "id": 187330465, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzMzMDQ2NQ==", "diff_hunk": "@@ -6265,14 +6265,32 @@ def load_bytes():\n             return data\n \n         fileobject_lambdas = [lambda: test_file_path, load_bytes]\n-        map_locations = [map_location, {'cuda:0': 'cpu'}, 'cpu']\n+        map_locations = [map_location, {'cuda:0': 'cpu'}, 'cpu', torch.device('cpu')]\n \n         for fileobject_lambda in fileobject_lambdas:\n             for map_location in map_locations:\n                 tensor = torch.load(fileobject_lambda(), map_location=map_location)\n                 self.assertIsInstance(tensor, torch.FloatTensor)\n                 self.assertEqual(tensor, torch.FloatTensor([[1.0, 2.0], [3.0, 4.0]]))\n \n+    @unittest.skipIf(not torch.cuda.is_available(), 'no CUDA')\n+    def test_serialization_map_location_cuda(self):", "path": "test/test_torch.py", "position": null, "original_position": 14, "commit_id": "42ca998298e509ba4dca616aa8014d2ed6d097ca", "original_commit_id": "ec6af39eb1f2c3122720a7465d87fa1ee222c324", "user": {"login": "Lalaland", "id": 342233, "node_id": "MDQ6VXNlcjM0MjIzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/342233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lalaland", "html_url": "https://github.com/Lalaland", "followers_url": "https://api.github.com/users/Lalaland/followers", "following_url": "https://api.github.com/users/Lalaland/following{/other_user}", "gists_url": "https://api.github.com/users/Lalaland/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lalaland/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lalaland/subscriptions", "organizations_url": "https://api.github.com/users/Lalaland/orgs", "repos_url": "https://api.github.com/users/Lalaland/repos", "events_url": "https://api.github.com/users/Lalaland/events{/privacy}", "received_events_url": "https://api.github.com/users/Lalaland/received_events", "type": "User", "site_admin": false}, "body": "I had it as a separate test because I wanted to ensure that it got skipped when CUDA was not available. Merging them is a bit cleaner and I can just use torch.cuda.is_available() inside the test. I added the extra strings you recommended.", "created_at": "2018-05-10T13:33:01Z", "updated_at": "2018-11-23T15:43:50Z", "html_url": "https://github.com/pytorch/pytorch/pull/7339#discussion_r187330465", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7339", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/187330465"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7339#discussion_r187330465"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7339"}}, "body_html": "<p>I had it as a separate test because I wanted to ensure that it got skipped when CUDA was not available. Merging them is a bit cleaner and I can just use torch.cuda.is_available() inside the test. I added the extra strings you recommended.</p>", "body_text": "I had it as a separate test because I wanted to ensure that it got skipped when CUDA was not available. Merging them is a bit cleaner and I can just use torch.cuda.is_available() inside the test. I added the extra strings you recommended.", "in_reply_to_id": 187290055}