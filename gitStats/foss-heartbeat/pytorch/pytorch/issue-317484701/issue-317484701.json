{"url": "https://api.github.com/repos/pytorch/pytorch/issues/6933", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6933/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6933/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6933/events", "html_url": "https://github.com/pytorch/pytorch/issues/6933", "id": 317484701, "node_id": "MDU6SXNzdWUzMTc0ODQ3MDE=", "number": 6933, "title": "The new .to(device) doesn't work with nn.DataParallel", "user": {"login": "pobingwanghai", "id": 5410054, "node_id": "MDQ6VXNlcjU0MTAwNTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5410054?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pobingwanghai", "html_url": "https://github.com/pobingwanghai", "followers_url": "https://api.github.com/users/pobingwanghai/followers", "following_url": "https://api.github.com/users/pobingwanghai/following{/other_user}", "gists_url": "https://api.github.com/users/pobingwanghai/gists{/gist_id}", "starred_url": "https://api.github.com/users/pobingwanghai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pobingwanghai/subscriptions", "organizations_url": "https://api.github.com/users/pobingwanghai/orgs", "repos_url": "https://api.github.com/users/pobingwanghai/repos", "events_url": "https://api.github.com/users/pobingwanghai/events{/privacy}", "received_events_url": "https://api.github.com/users/pobingwanghai/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 545367190, "node_id": "MDU6TGFiZWw1NDUzNjcxOTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/awaiting%20response", "name": "awaiting response", "color": "5319e7", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-04-25T05:37:14Z", "updated_at": "2018-05-14T18:49:20Z", "closed_at": "2018-05-14T18:44:29Z", "author_association": "NONE", "body_html": "<p>the old code:</p>\n<pre><code>model=torch.nn.DataParallel(model,device_ids=range(torch.cuda.device_count()))\n...\n  for input, target in train_loader:\n      input, target = Variable(input), Variable(target)\n      input, target= input.cuda(), target.cuda()\n</code></pre>\n<p>this code works good<br>\nnew code with .to(device)</p>\n<pre><code>model=torch.nn.DataParallel(model,device_ids=range(torch.cuda.device_count()))\n...\n  for input, target in train_loader:\n       input, target = input.to(torch.cuda.current_device()), target.to(torch.cuda.current_device())\n</code></pre>\n<p>the input and target is only on GPU:0</p>", "body_text": "the old code:\nmodel=torch.nn.DataParallel(model,device_ids=range(torch.cuda.device_count()))\n...\n  for input, target in train_loader:\n      input, target = Variable(input), Variable(target)\n      input, target= input.cuda(), target.cuda()\n\nthis code works good\nnew code with .to(device)\nmodel=torch.nn.DataParallel(model,device_ids=range(torch.cuda.device_count()))\n...\n  for input, target in train_loader:\n       input, target = input.to(torch.cuda.current_device()), target.to(torch.cuda.current_device())\n\nthe input and target is only on GPU:0", "body": "the old code:\r\n```\r\nmodel=torch.nn.DataParallel(model,device_ids=range(torch.cuda.device_count()))\r\n...\r\n  for input, target in train_loader:\r\n      input, target = Variable(input), Variable(target)\r\n      input, target= input.cuda(), target.cuda()\r\n```\r\nthis code works good\r\nnew code with .to(device)\r\n```\r\nmodel=torch.nn.DataParallel(model,device_ids=range(torch.cuda.device_count()))\r\n...\r\n  for input, target in train_loader:\r\n       input, target = input.to(torch.cuda.current_device()), target.to(torch.cuda.current_device())\r\n```\r\nthe input and target is only on GPU:0\r\n"}