{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/363855748", "html_url": "https://github.com/pytorch/pytorch/issues/5112#issuecomment-363855748", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5112", "id": 363855748, "node_id": "MDEyOklzc3VlQ29tbWVudDM2Mzg1NTc0OA==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-07T18:01:10Z", "updated_at": "2018-02-07T18:01:10Z", "author_association": "CONTRIBUTOR", "body_html": "<p>This module also reproduces, but less reliably:</p>\n<pre><code>class Test(nn.Module):\n    def __init__(self):\n        super(Test, self).__init__()\n        self.conv4 = nn.Conv2d(16, 160, kernel_size=3)\n        self.conv7 = nn.Conv2d(160, 320, kernel_size=1, stride=2)\n        self.conv8 = nn.Conv2d(320, 320, kernel_size=1)\n        self.conv9 = nn.Conv2d(160, 320, kernel_size=1, stride=2)\n        self.linear = nn.Linear(72000, 10, bias=False)\n    def forward(self, t53):\n        t99 = self.conv4(t53)\n\n        t109 = self.conv7(t99)\n        t119 = self.conv8(t109)\n        t123 = self.conv9(t99)\n        t124 = t123 + t119\n\n        x = t124\n        x = x.view(x.size(0), -1)\n        x = self.linear(x)\n        return x\n</code></pre>", "body_text": "This module also reproduces, but less reliably:\nclass Test(nn.Module):\n    def __init__(self):\n        super(Test, self).__init__()\n        self.conv4 = nn.Conv2d(16, 160, kernel_size=3)\n        self.conv7 = nn.Conv2d(160, 320, kernel_size=1, stride=2)\n        self.conv8 = nn.Conv2d(320, 320, kernel_size=1)\n        self.conv9 = nn.Conv2d(160, 320, kernel_size=1, stride=2)\n        self.linear = nn.Linear(72000, 10, bias=False)\n    def forward(self, t53):\n        t99 = self.conv4(t53)\n\n        t109 = self.conv7(t99)\n        t119 = self.conv8(t109)\n        t123 = self.conv9(t99)\n        t124 = t123 + t119\n\n        x = t124\n        x = x.view(x.size(0), -1)\n        x = self.linear(x)\n        return x", "body": "This module also reproduces, but less reliably:\r\n\r\n```\r\nclass Test(nn.Module):\r\n    def __init__(self):\r\n        super(Test, self).__init__()\r\n        self.conv4 = nn.Conv2d(16, 160, kernel_size=3)\r\n        self.conv7 = nn.Conv2d(160, 320, kernel_size=1, stride=2)\r\n        self.conv8 = nn.Conv2d(320, 320, kernel_size=1)\r\n        self.conv9 = nn.Conv2d(160, 320, kernel_size=1, stride=2)\r\n        self.linear = nn.Linear(72000, 10, bias=False)\r\n    def forward(self, t53):\r\n        t99 = self.conv4(t53)\r\n\r\n        t109 = self.conv7(t99)\r\n        t119 = self.conv8(t109)\r\n        t123 = self.conv9(t99)\r\n        t124 = t123 + t119\r\n\r\n        x = t124\r\n        x = x.view(x.size(0), -1)\r\n        x = self.linear(x)\r\n        return x\r\n```"}