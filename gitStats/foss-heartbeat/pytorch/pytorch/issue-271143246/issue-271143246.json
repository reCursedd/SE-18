{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3482", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3482/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3482/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3482/events", "html_url": "https://github.com/pytorch/pytorch/pull/3482", "id": 271143246, "node_id": "MDExOlB1bGxSZXF1ZXN0MTUwNjQ2OTIy", "number": 3482, "title": "Prevent segfaults from undefined aten tensors", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 742585577, "node_id": "MDU6TGFiZWw3NDI1ODU1Nzc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/0.3", "name": "0.3", "color": "d1c41b", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-03T23:17:42Z", "updated_at": "2018-11-23T15:36:04Z", "closed_at": "2017-11-08T02:28:18Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/3482", "html_url": "https://github.com/pytorch/pytorch/pull/3482", "diff_url": "https://github.com/pytorch/pytorch/pull/3482.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/3482.patch"}, "body_html": "<p>This introduces a singleton UndefinedTensor TensorImpl with UndefinedType that is the starting state of a Tensor with no constructor arguments.  In this way we avoid null pImpls and avoid segfaults without having to if-check each pImpl dereference.  Because we only have a single UndefinedType and don't generate Backend/Scalar pairs, we fake the type registry return to return the UndefinedType if either the Backend or the Scalar is Undefined.</p>", "body_text": "This introduces a singleton UndefinedTensor TensorImpl with UndefinedType that is the starting state of a Tensor with no constructor arguments.  In this way we avoid null pImpls and avoid segfaults without having to if-check each pImpl dereference.  Because we only have a single UndefinedType and don't generate Backend/Scalar pairs, we fake the type registry return to return the UndefinedType if either the Backend or the Scalar is Undefined.", "body": "This introduces a singleton UndefinedTensor TensorImpl with UndefinedType that is the starting state of a Tensor with no constructor arguments.  In this way we avoid null pImpls and avoid segfaults without having to if-check each pImpl dereference.  Because we only have a single UndefinedType and don't generate Backend/Scalar pairs, we fake the type registry return to return the UndefinedType if either the Backend or the Scalar is Undefined."}