{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/148922635", "pull_request_review_id": 74246368, "id": 148922635, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODkyMjYzNQ==", "diff_hunk": "@@ -0,0 +1,52 @@\n+#include \"ATen/ATen.h\"\n+#include <string>\n+\n+using namespace at;\n+\n+#define ASSERT_THROWS(fn, message)                                  \\\n+try {                                                               \\\n+  fn;                                                               \\\n+  assert(false);                                                    \\\n+} catch(std::runtime_error &e) {                                    \\\n+  assert(std::string(e.what()).find(message) != std::string::npos); \\\n+}\n+\n+\n+int main() {\n+  // mainly test ops on undefined tensors don't segfault and give a reasonable errror message.\n+  Tensor und;\n+  Tensor ft = CPU(kFloat).ones({1});\n+\n+  std::cout << und << std::endl;\n+  assert(!und.defined());\n+  assert(std::string(\"UndefinedTensor\") == und.toString());\n+\n+  ASSERT_THROWS(und.strides(), \"strides\");\n+  ASSERT_THROWS(und.dim(), \"dim\");\n+  ASSERT_THROWS(und.assign_(Scalar(5)), \"assign\");\n+  ASSERT_THROWS(und.unsafeGetTH(true), \"unsafeGetTH\");\n+  ASSERT_THROWS(und.add(und), \"add\");\n+  ASSERT_THROWS(und.add(ft), \"add\");\n+  ASSERT_THROWS(ft.add(und), \"add\");\n+  ASSERT_THROWS(und.add(5), \"add\");\n+  ASSERT_THROWS(und.mm(und), \"mm\");\n+\n+  und.toType(und.type());", "path": "aten/src/ATen/test/undefined_tensor_test.cpp", "position": 37, "original_position": 34, "commit_id": "68dddd8d0fb7aa59d1dc9a468fb61bcc6454527a", "original_commit_id": "50dc0bcfee997bda4b497a97b4ea9c5a86f6105b", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "Why do we allow these calls instead of throwing?", "created_at": "2017-11-04T04:18:09Z", "updated_at": "2018-11-23T15:36:01Z", "html_url": "https://github.com/pytorch/pytorch/pull/3482#discussion_r148922635", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3482", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/148922635"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3482#discussion_r148922635"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3482"}}, "body_html": "<p>Why do we allow these calls instead of throwing?</p>", "body_text": "Why do we allow these calls instead of throwing?"}