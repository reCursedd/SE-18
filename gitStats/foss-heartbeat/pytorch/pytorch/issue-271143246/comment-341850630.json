{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/341850630", "html_url": "https://github.com/pytorch/pytorch/pull/3482#issuecomment-341850630", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3482", "id": 341850630, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTg1MDYzMA==", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-03T23:22:45Z", "updated_at": "2017-11-03T23:23:18Z", "author_association": "CONTRIBUTOR", "body_html": "<p>CC <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=370202\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zdevito\">@zdevito</a> this is just meant to be the minimum necessary to prevent segfaults and to have decent error messages for operations on undefined tensors.</p>\n<p>It may have been a better idea to generate all the Undefined types (e.g. SparseCudaUndefinedType) because we could get nice error messages (rather than relying on the base Type implementation), wouldn't have to fake the type registry, and could support things like toCuda(...).  None of those seemed particularly compelling reasons given the tradeoff of more complex codegen and more generated code, but let me know what you think.</p>", "body_text": "CC @zdevito this is just meant to be the minimum necessary to prevent segfaults and to have decent error messages for operations on undefined tensors.\nIt may have been a better idea to generate all the Undefined types (e.g. SparseCudaUndefinedType) because we could get nice error messages (rather than relying on the base Type implementation), wouldn't have to fake the type registry, and could support things like toCuda(...).  None of those seemed particularly compelling reasons given the tradeoff of more complex codegen and more generated code, but let me know what you think.", "body": "CC @zdevito this is just meant to be the minimum necessary to prevent segfaults and to have decent error messages for operations on undefined tensors.\r\n\r\nIt may have been a better idea to generate all the Undefined types (e.g. SparseCudaUndefinedType) because we could get nice error messages (rather than relying on the base Type implementation), wouldn't have to fake the type registry, and could support things like toCuda(...).  None of those seemed particularly compelling reasons given the tradeoff of more complex codegen and more generated code, but let me know what you think."}