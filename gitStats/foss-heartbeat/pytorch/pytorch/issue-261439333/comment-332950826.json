{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/332950826", "html_url": "https://github.com/pytorch/pytorch/issues/2890#issuecomment-332950826", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2890", "id": 332950826, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjk1MDgyNg==", "user": {"login": "rwightman", "id": 5702664, "node_id": "MDQ6VXNlcjU3MDI2NjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5702664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rwightman", "html_url": "https://github.com/rwightman", "followers_url": "https://api.github.com/users/rwightman/followers", "following_url": "https://api.github.com/users/rwightman/following{/other_user}", "gists_url": "https://api.github.com/users/rwightman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rwightman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rwightman/subscriptions", "organizations_url": "https://api.github.com/users/rwightman/orgs", "repos_url": "https://api.github.com/users/rwightman/repos", "events_url": "https://api.github.com/users/rwightman/events{/privacy}", "received_events_url": "https://api.github.com/users/rwightman/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-28T20:13:29Z", "updated_at": "2017-09-28T20:25:51Z", "author_association": "NONE", "body_html": "<p>My instinct when I first had this need was to do it this way, but since then I've generally settled on writing side accessor functions for metadata not related to feeding the input-target tensors for model training or evaluation. You can still do this and use the provided ImageFolder class by inheriting or wrapping and adding the accessors.</p>\n<p>Ie in this case, you can provide a filename accessor based on index that you call if you need those filenames...</p>\n<p>Example:<br>\n<a href=\"https://github.com/rwightman/pytorch-nips2017-attack-example/blob/master/dataset.py#L81\">https://github.com/rwightman/pytorch-nips2017-attack-example/blob/master/dataset.py#L81</a></p>", "body_text": "My instinct when I first had this need was to do it this way, but since then I've generally settled on writing side accessor functions for metadata not related to feeding the input-target tensors for model training or evaluation. You can still do this and use the provided ImageFolder class by inheriting or wrapping and adding the accessors.\nIe in this case, you can provide a filename accessor based on index that you call if you need those filenames...\nExample:\nhttps://github.com/rwightman/pytorch-nips2017-attack-example/blob/master/dataset.py#L81", "body": "My instinct when I first had this need was to do it this way, but since then I've generally settled on writing side accessor functions for metadata not related to feeding the input-target tensors for model training or evaluation. You can still do this and use the provided ImageFolder class by inheriting or wrapping and adding the accessors.\r\n\r\nIe in this case, you can provide a filename accessor based on index that you call if you need those filenames...\r\n\r\nExample:\r\nhttps://github.com/rwightman/pytorch-nips2017-attack-example/blob/master/dataset.py#L81"}