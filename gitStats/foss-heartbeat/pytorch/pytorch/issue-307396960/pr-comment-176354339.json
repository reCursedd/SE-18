{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/176354339", "pull_request_review_id": 106039573, "id": 176354339, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NjM1NDMzOQ==", "diff_hunk": "@@ -542,6 +542,36 @@ def test_multidim(x, dim):\n     def test_dim_reduction(self):\n         self._test_dim_reduction(self, lambda t: t)\n \n+    @unittest.skipIf(not TEST_NUMPY, \"Numpy not found\")\n+    def test_cpu_parallel(self):\n+        # To use parallel branches we'll need to compare on tensors\n+        # that are relatively large. Even if this is run on a single\n+        # core machine these tests will still give you signal on\n+        # the correctness\n+\n+        def _run_test(size):\n+            for dim in range(len(size) + 1):\n+                nv = np.round(np.random.rand(*size))  # 0s and 1s\n+                tv = torch.from_numpy(nv)\n+                # Parallelisim is only used if numel is\n+                # larger than grainsize defined in Parallel.h\n+                self.assertTrue(tv.numel() > 32768)\n+                if dim == len(size):\n+                    nvs = nv.sum()\n+                    tvs = tv.sum()\n+                else:\n+                    nvs = nv.sum(dim)\n+                    tvs = tv.sum(dim)\n+                diff = np.abs(nvs - tvs.numpy()).sum()\n+                self.assertEqual(diff, 0)\n+\n+        sizes = []\n+        sizes += [[2, 3, 3, 3, 3, 2, 2, 3, 2, 3, 2, 3, 3]]\n+        sizes += [[4, 4, 4, 4, 4, 4, 4, 4, 4, 4]]\n+        sizes += [[1, 32 * 8 * 32 * 8]]\n+        sizes += [[1, 32770]]\n+        map(_run_test, sizes)", "path": "test/test_torch.py", "position": 32, "original_position": 32, "commit_id": "bd676a9dd8cd0ca66f79e65fd21e0e670ecd656d", "original_commit_id": "bd676a9dd8cd0ca66f79e65fd21e0e670ecd656d", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "map is lazy in Python3 so this won\u2019t run even a single test :confused:", "created_at": "2018-03-22T09:32:50Z", "updated_at": "2018-11-23T15:41:01Z", "html_url": "https://github.com/pytorch/pytorch/pull/5926#discussion_r176354339", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5926", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/176354339"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5926#discussion_r176354339"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5926"}}, "body_html": "<p>map is lazy in Python3 so this won\u2019t run even a single test <g-emoji class=\"g-emoji\" alias=\"confused\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f615.png\">\ud83d\ude15</g-emoji></p>", "body_text": "map is lazy in Python3 so this won\u2019t run even a single test \ud83d\ude15"}