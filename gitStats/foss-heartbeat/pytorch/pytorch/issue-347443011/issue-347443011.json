{"url": "https://api.github.com/repos/pytorch/pytorch/issues/10209", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10209/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10209/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10209/events", "html_url": "https://github.com/pytorch/pytorch/pull/10209", "id": 347443011, "node_id": "MDExOlB1bGxSZXF1ZXN0MjA2MDY2NDI5", "number": 10209, "title": "Use IntLists rather than THLongStorage for sizes/strides for a number of functions in TH.", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-03T15:34:27Z", "updated_at": "2018-11-23T15:48:42Z", "closed_at": "2018-08-06T16:35:09Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/10209", "html_url": "https://github.com/pytorch/pytorch/pull/10209", "diff_url": "https://github.com/pytorch/pytorch/pull/10209.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/10209.patch"}, "body_html": "<p>This changes setStorage (called by set_), newView (view), and newWithStorage (tensor) as per the title.</p>\n<p>This also allows us to share size inference code between TH and ATen, so I killed e.g. newInferSize in TH; we just use at::infer_size inside of TH now.<br>\nFinally, I reorganized the TH/THC tensor/storage code to more closely match up; e.g. if THC has a non-generic version of a function, TH will as well.</p>\n<p>NOTE: I didn't completely kill THSize, THStride yet because I haven't moved all the functions over yet.  This has the unfortunate effect that we now have both IntList and Storage versions of the same concepts, e.g. there are IntListSize and IntListStride in Declarations.cwrap that pull out the LongStorage-ness, but not the 0-dim-to-1-dim or 0-dim-to-null functionality of THLongStorageView.  Both of these limitations will be addressed in further PRs.</p>", "body_text": "This changes setStorage (called by set_), newView (view), and newWithStorage (tensor) as per the title.\nThis also allows us to share size inference code between TH and ATen, so I killed e.g. newInferSize in TH; we just use at::infer_size inside of TH now.\nFinally, I reorganized the TH/THC tensor/storage code to more closely match up; e.g. if THC has a non-generic version of a function, TH will as well.\nNOTE: I didn't completely kill THSize, THStride yet because I haven't moved all the functions over yet.  This has the unfortunate effect that we now have both IntList and Storage versions of the same concepts, e.g. there are IntListSize and IntListStride in Declarations.cwrap that pull out the LongStorage-ness, but not the 0-dim-to-1-dim or 0-dim-to-null functionality of THLongStorageView.  Both of these limitations will be addressed in further PRs.", "body": "This changes setStorage (called by set_), newView (view), and newWithStorage (tensor) as per the title.\r\n\r\nThis also allows us to share size inference code between TH and ATen, so I killed e.g. newInferSize in TH; we just use at::infer_size inside of TH now.\r\nFinally, I reorganized the TH/THC tensor/storage code to more closely match up; e.g. if THC has a non-generic version of a function, TH will as well.\r\n\r\nNOTE: I didn't completely kill THSize, THStride yet because I haven't moved all the functions over yet.  This has the unfortunate effect that we now have both IntList and Storage versions of the same concepts, e.g. there are IntListSize and IntListStride in Declarations.cwrap that pull out the LongStorage-ness, but not the 0-dim-to-1-dim or 0-dim-to-null functionality of THLongStorageView.  Both of these limitations will be addressed in further PRs."}