{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/410019529", "html_url": "https://github.com/pytorch/pytorch/pull/9960#issuecomment-410019529", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9960", "id": 410019529, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDAxOTUyOQ==", "user": {"login": "rfejgin", "id": 345348, "node_id": "MDQ6VXNlcjM0NTM0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/345348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rfejgin", "html_url": "https://github.com/rfejgin", "followers_url": "https://api.github.com/users/rfejgin/followers", "following_url": "https://api.github.com/users/rfejgin/following{/other_user}", "gists_url": "https://api.github.com/users/rfejgin/gists{/gist_id}", "starred_url": "https://api.github.com/users/rfejgin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rfejgin/subscriptions", "organizations_url": "https://api.github.com/users/rfejgin/orgs", "repos_url": "https://api.github.com/users/rfejgin/repos", "events_url": "https://api.github.com/users/rfejgin/events{/privacy}", "received_events_url": "https://api.github.com/users/rfejgin/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-02T18:13:30Z", "updated_at": "2018-08-02T18:13:30Z", "author_association": "NONE", "body_html": "<p>Thanks Thomas. I agree with you on the root cause. I also like the idea of explicitly checking if the distribution value equals zero, and was having similar thoughts after I posted. The explicit check avoids the need to tune a threshold (or one per type of T), which I've actually tried and found fragile. So your fix looks good to me!</p>\n<p>One minor comment is that I would consider putting the memory allocation fix in a different commit. In the unlikely case that that change causes instability it would be good to be able to separate the two changes.</p>", "body_text": "Thanks Thomas. I agree with you on the root cause. I also like the idea of explicitly checking if the distribution value equals zero, and was having similar thoughts after I posted. The explicit check avoids the need to tune a threshold (or one per type of T), which I've actually tried and found fragile. So your fix looks good to me!\nOne minor comment is that I would consider putting the memory allocation fix in a different commit. In the unlikely case that that change causes instability it would be good to be able to separate the two changes.", "body": "Thanks Thomas. I agree with you on the root cause. I also like the idea of explicitly checking if the distribution value equals zero, and was having similar thoughts after I posted. The explicit check avoids the need to tune a threshold (or one per type of T), which I've actually tried and found fragile. So your fix looks good to me!\r\n\r\nOne minor comment is that I would consider putting the memory allocation fix in a different commit. In the unlikely case that that change causes instability it would be good to be able to separate the two changes."}