{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/409043269", "html_url": "https://github.com/pytorch/pytorch/pull/9960#issuecomment-409043269", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9960", "id": 409043269, "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTA0MzI2OQ==", "user": {"login": "rfejgin", "id": 345348, "node_id": "MDQ6VXNlcjM0NTM0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/345348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rfejgin", "html_url": "https://github.com/rfejgin", "followers_url": "https://api.github.com/users/rfejgin/followers", "following_url": "https://api.github.com/users/rfejgin/following{/other_user}", "gists_url": "https://api.github.com/users/rfejgin/gists{/gist_id}", "starred_url": "https://api.github.com/users/rfejgin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rfejgin/subscriptions", "organizations_url": "https://api.github.com/users/rfejgin/orgs", "repos_url": "https://api.github.com/users/rfejgin/repos", "events_url": "https://api.github.com/users/rfejgin/events{/privacy}", "received_events_url": "https://api.github.com/users/rfejgin/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-30T23:20:18Z", "updated_at": "2018-07-31T01:22:22Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=20787943\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/t-vi\">@t-vi</a>: Thanks for the fix! I've tried it and can confirm that with the fix I am no longer able to reproduce the problem. This is using my own test case which was previously able to cause the problem reliably (regardless of the particular random seed).</p>\n<p>While I'm not able to fully review the fix from an algorithmic point of view, I do suggest to add a comment in the code explaining why we are substituting the uniform samples with (1.0 - uniform_samples) since -- to me -- it's rather non-obvious and depends on stuff that curand does in a different part of the codebase and on implicit assumptions in the code below it.</p>", "body_text": "@t-vi: Thanks for the fix! I've tried it and can confirm that with the fix I am no longer able to reproduce the problem. This is using my own test case which was previously able to cause the problem reliably (regardless of the particular random seed).\nWhile I'm not able to fully review the fix from an algorithmic point of view, I do suggest to add a comment in the code explaining why we are substituting the uniform samples with (1.0 - uniform_samples) since -- to me -- it's rather non-obvious and depends on stuff that curand does in a different part of the codebase and on implicit assumptions in the code below it.", "body": "@t-vi: Thanks for the fix! I've tried it and can confirm that with the fix I am no longer able to reproduce the problem. This is using my own test case which was previously able to cause the problem reliably (regardless of the particular random seed).\r\n\r\nWhile I'm not able to fully review the fix from an algorithmic point of view, I do suggest to add a comment in the code explaining why we are substituting the uniform samples with (1.0 - uniform_samples) since -- to me -- it's rather non-obvious and depends on stuff that curand does in a different part of the codebase and on implicit assumptions in the code below it."}