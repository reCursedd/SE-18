{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/409134389", "html_url": "https://github.com/pytorch/pytorch/pull/9960#issuecomment-409134389", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9960", "id": 409134389, "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTEzNDM4OQ==", "user": {"login": "rfejgin", "id": 345348, "node_id": "MDQ6VXNlcjM0NTM0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/345348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rfejgin", "html_url": "https://github.com/rfejgin", "followers_url": "https://api.github.com/users/rfejgin/followers", "following_url": "https://api.github.com/users/rfejgin/following{/other_user}", "gists_url": "https://api.github.com/users/rfejgin/gists{/gist_id}", "starred_url": "https://api.github.com/users/rfejgin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rfejgin/subscriptions", "organizations_url": "https://api.github.com/users/rfejgin/orgs", "repos_url": "https://api.github.com/users/rfejgin/repos", "events_url": "https://api.github.com/users/rfejgin/events{/privacy}", "received_events_url": "https://api.github.com/users/rfejgin/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-31T08:09:49Z", "updated_at": "2018-07-31T08:09:49Z", "author_association": "NONE", "body_html": "<p>Thanks <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=20787943\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/t-vi\">@t-vi</a> . Do you think the second test in this line still makes sense after this fix?<br>\n<a href=\"https://github.com/t-vi/pytorch/blob/f6eac1b3cfffba97ce5d3ce2d429fbf22a678151/aten/src/THC/THCTensorRandom.cuh#L215\">https://github.com/t-vi/pytorch/blob/f6eac1b3cfffba97ce5d3ce2d429fbf22a678151/aten/src/THC/THCTensorRandom.cuh#L215</a></p>\n<p>It seems like that second condition can now never be true. Also, if the code was originally written to work with samples in the interval (0,1] I wonder why it's testing for sample==0?</p>", "body_text": "Thanks @t-vi . Do you think the second test in this line still makes sense after this fix?\nhttps://github.com/t-vi/pytorch/blob/f6eac1b3cfffba97ce5d3ce2d429fbf22a678151/aten/src/THC/THCTensorRandom.cuh#L215\nIt seems like that second condition can now never be true. Also, if the code was originally written to work with samples in the interval (0,1] I wonder why it's testing for sample==0?", "body": "Thanks @t-vi . Do you think the second test in this line still makes sense after this fix?\r\nhttps://github.com/t-vi/pytorch/blob/f6eac1b3cfffba97ce5d3ce2d429fbf22a678151/aten/src/THC/THCTensorRandom.cuh#L215\r\n\r\nIt seems like that second condition can now never be true. Also, if the code was originally written to work with samples in the interval (0,1] I wonder why it's testing for sample==0? "}