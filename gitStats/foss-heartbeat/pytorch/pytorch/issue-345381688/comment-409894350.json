{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/409894350", "html_url": "https://github.com/pytorch/pytorch/pull/9960#issuecomment-409894350", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9960", "id": 409894350, "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTg5NDM1MA==", "user": {"login": "t-vi", "id": 20787943, "node_id": "MDQ6VXNlcjIwNzg3OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/20787943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-vi", "html_url": "https://github.com/t-vi", "followers_url": "https://api.github.com/users/t-vi/followers", "following_url": "https://api.github.com/users/t-vi/following{/other_user}", "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions", "organizations_url": "https://api.github.com/users/t-vi/orgs", "repos_url": "https://api.github.com/users/t-vi/repos", "events_url": "https://api.github.com/users/t-vi/events{/privacy}", "received_events_url": "https://api.github.com/users/t-vi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-02T11:25:01Z", "updated_at": "2018-08-02T11:25:01Z", "author_association": "CONTRIBUTOR", "body_html": "<p>So to me it looks like this test case captures the essence of <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=345348\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rfejgin\">@rfejgin</a> 's latest example and works as expected with the latest commit.</p>\n<pre><code>import torch\ndist_size = 2048\nbatch_size = 1024\ntorch.cuda.manual_seed(41134)\nweights = torch.zeros(dist_size, device='cuda')\nweights[[1024,1025,1026,1027]] = torch.tensor([0.47056111693382263, 0.568510890007019, 0.5519880056381226, 0.476242333650589], device='cuda')\nweights = weights[None].expand(batch_size, dist_size)\ns = weights.multinomial(1).squeeze(1)\nselected_probs = weights[torch.arange(weights.shape[0]), s]\nassert not (selected_probs==0).any()\n</code></pre>\n<p>If <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=345348\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rfejgin\">@rfejgin</a> is reasonably happy with this, I'll add the above as a test case and remove the not ready yet label.</p>", "body_text": "So to me it looks like this test case captures the essence of @rfejgin 's latest example and works as expected with the latest commit.\nimport torch\ndist_size = 2048\nbatch_size = 1024\ntorch.cuda.manual_seed(41134)\nweights = torch.zeros(dist_size, device='cuda')\nweights[[1024,1025,1026,1027]] = torch.tensor([0.47056111693382263, 0.568510890007019, 0.5519880056381226, 0.476242333650589], device='cuda')\nweights = weights[None].expand(batch_size, dist_size)\ns = weights.multinomial(1).squeeze(1)\nselected_probs = weights[torch.arange(weights.shape[0]), s]\nassert not (selected_probs==0).any()\n\nIf @rfejgin is reasonably happy with this, I'll add the above as a test case and remove the not ready yet label.", "body": "So to me it looks like this test case captures the essence of @rfejgin 's latest example and works as expected with the latest commit.\r\n```\r\nimport torch\r\ndist_size = 2048\r\nbatch_size = 1024\r\ntorch.cuda.manual_seed(41134)\r\nweights = torch.zeros(dist_size, device='cuda')\r\nweights[[1024,1025,1026,1027]] = torch.tensor([0.47056111693382263, 0.568510890007019, 0.5519880056381226, 0.476242333650589], device='cuda')\r\nweights = weights[None].expand(batch_size, dist_size)\r\ns = weights.multinomial(1).squeeze(1)\r\nselected_probs = weights[torch.arange(weights.shape[0]), s]\r\nassert not (selected_probs==0).any()\r\n```\r\n\r\nIf @rfejgin is reasonably happy with this, I'll add the above as a test case and remove the not ready yet label."}