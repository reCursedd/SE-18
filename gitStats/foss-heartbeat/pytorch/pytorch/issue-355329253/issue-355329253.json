{"url": "https://api.github.com/repos/pytorch/pytorch/issues/11024", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11024/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11024/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11024/events", "html_url": "https://github.com/pytorch/pytorch/pull/11024", "id": 355329253, "node_id": "MDExOlB1bGxSZXF1ZXN0MjExODg0MjM5", "number": 11024, "title": "Add has_lapack flag", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-29T20:54:31Z", "updated_at": "2018-08-30T15:13:34Z", "closed_at": "2018-08-30T05:42:26Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/11024", "html_url": "https://github.com/pytorch/pytorch/pull/11024", "diff_url": "https://github.com/pytorch/pytorch/pull/11024.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/11024.patch"}, "body_html": "<p>Currently our <code>skipIfLapack</code> has uses a try-catch block and regex match the error message. It is highly unreliable. This PR adds <code>hasLAPACK</code> and <code>hasMAGMA</code> on ATen context, and expose the flags to python.</p>\n<p>Also fixes refcounting bug with <code>PyModule_AddObject</code>. The method steals reference, but we didn't <code>Py_INCREF</code> in some places before calling it with <code>Py_True</code> or <code>Py_False</code>.</p>", "body_text": "Currently our skipIfLapack has uses a try-catch block and regex match the error message. It is highly unreliable. This PR adds hasLAPACK and hasMAGMA on ATen context, and expose the flags to python.\nAlso fixes refcounting bug with PyModule_AddObject. The method steals reference, but we didn't Py_INCREF in some places before calling it with Py_True or Py_False.", "body": "Currently our `skipIfLapack` has uses a try-catch block and regex match the error message. It is highly unreliable. This PR adds `hasLAPACK` and `hasMAGMA` on ATen context, and expose the flags to python.\r\n\r\nAlso fixes refcounting bug with `PyModule_AddObject`. The method steals reference, but we didn't `Py_INCREF` in some places before calling it with `Py_True` or `Py_False`."}