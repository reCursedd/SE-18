{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/178609976", "pull_request_review_id": 108683491, "id": 178609976, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODYwOTk3Ng==", "diff_hunk": "@@ -0,0 +1,105 @@\n+## @package onnx\n+#Module caffe2.python.trt.transform\n+\n+\"\"\"\n+TensorRT related transformation\n+Note that ONNX-TRT enforce an NCHW input!\n+\"\"\"\n+\n+from __future__ import absolute_import\n+from __future__ import division\n+from __future__ import print_function\n+from __future__ import unicode_literals\n+\n+from caffe2.proto import caffe2_pb2\n+from caffe2.python.onnx.helper import c2_native_run_net, c2_native_run_op\n+import caffe2.python.onnx.frontend as c2_front\n+import caffe2.python._import_c_extension as C\n+import numpy as np\n+\n+def _dim_values_to_list(dim_values):\n+    return [x.dim_value for x in dim_values]\n+\n+\n+def _get_output_shapes(output_value_infos):\n+    names = [x.name for x in output_value_infos]\n+    shapes = [_dim_values_to_list(x.type.tensor_type.shape.dim) for x in output_value_infos]\n+    return dict(zip(names, shapes))\n+\n+\n+def convert_onnx_model_to_trt_op(onnx_model,\n+        max_batch_size=50,\n+        max_workspace_size=2*1024*1024,\n+        verbosity=1,\n+        debug_builder=False):\n+    \"\"\"\n+    Convert the whole ONNX model to a TensorRT C2 op\n+    \"\"\"\n+    trt_str = C.onnx_to_trt_op(onnx_model.SerializeToString(),\n+                               _get_output_shapes(onnx_model.graph.output),\n+                               max_batch_size,\n+                               max_workspace_size,\n+                               verbosity,\n+                               debug_builder)\n+    op = caffe2_pb2.OperatorDef()\n+    op.ParseFromString(trt_str)\n+    return op\n+\n+def _infer_shapes(init_net, pred_net, inputs):", "path": "caffe2/python/trt/transform.py", "position": 55, "original_position": 48, "commit_id": "66758cc2919a2a6add56c6bcda8e33f50c94044b", "original_commit_id": "1051f2359f3ec0a4d7c28794d4a3ea67360bcd3d", "user": {"login": "dzhulgakov", "id": 17890620, "node_id": "MDQ6VXNlcjE3ODkwNjIw", "avatar_url": "https://avatars2.githubusercontent.com/u/17890620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dzhulgakov", "html_url": "https://github.com/dzhulgakov", "followers_url": "https://api.github.com/users/dzhulgakov/followers", "following_url": "https://api.github.com/users/dzhulgakov/following{/other_user}", "gists_url": "https://api.github.com/users/dzhulgakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/dzhulgakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dzhulgakov/subscriptions", "organizations_url": "https://api.github.com/users/dzhulgakov/orgs", "repos_url": "https://api.github.com/users/dzhulgakov/repos", "events_url": "https://api.github.com/users/dzhulgakov/events{/privacy}", "received_events_url": "https://api.github.com/users/dzhulgakov/received_events", "type": "User", "site_admin": false}, "body": "you can also try to invoke C2's shape inference (which is spotty though). See e.g. https://github.com/onnx/onnx-coreml/blob/4aa0b5a819418acc2495be629085f97f32e65208/onnx_coreml/_shapeinference.py#L31", "created_at": "2018-04-02T18:17:55Z", "updated_at": "2018-11-23T15:41:31Z", "html_url": "https://github.com/pytorch/pytorch/pull/6150#discussion_r178609976", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6150", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/178609976"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6150#discussion_r178609976"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6150"}}, "body_html": "<p>you can also try to invoke C2's shape inference (which is spotty though). See e.g. <a href=\"https://github.com/onnx/onnx-coreml/blob/4aa0b5a819418acc2495be629085f97f32e65208/onnx_coreml/_shapeinference.py#L31\">https://github.com/onnx/onnx-coreml/blob/4aa0b5a819418acc2495be629085f97f32e65208/onnx_coreml/_shapeinference.py#L31</a></p>", "body_text": "you can also try to invoke C2's shape inference (which is spotty though). See e.g. https://github.com/onnx/onnx-coreml/blob/4aa0b5a819418acc2495be629085f97f32e65208/onnx_coreml/_shapeinference.py#L31"}