{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/178394952", "pull_request_review_id": 108454024, "id": 178394952, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODM5NDk1Mg==", "diff_hunk": "@@ -0,0 +1,224 @@\n+#include \"caffe2/contrib/tensorrt/tensorrt_op_trt.h\"\n+#include \"caffe2/core/logging.h\"\n+\n+#include <numeric>\n+#include <unordered_map>\n+\n+namespace caffe2 {\n+\n+namespace {\n+// Note that input of trt tensor is in CHW format, while our tensor is NCHW\n+// \\return -1 if there is dimension mismatch between C2 tensor and trt tensor.\n+// Otherwise, return the multiplicaton of CHW dimensions\n+int64_t CheckDims(\n+    const nvinfer1::Dims& nv_dims,\n+    const std::vector<TIndex>& c2_dims) {\n+  if (nv_dims.nbDims + 1 != c2_dims.size()) {\n+    return -1;\n+  }\n+  int64_t chw = 1;\n+  for (int i = 0; i < nv_dims.nbDims; ++i) {\n+    if (nv_dims.d[i] != c2_dims[i + 1]) {\n+      return -1;\n+    }\n+    chw *= nv_dims.d[i];\n+  }\n+  return chw;\n+}\n+\n+} // namespace\n+\n+// Upon construction, we build the inference enigne by deserializing from\n+// protobuf string. And since we know the input/output blobs, we can do the\n+// binding here too.\n+TensorRTOp::TensorRTOp(const OperatorDef& operator_def, Workspace* ws)\n+    : Operator<CUDAContext>(operator_def, ws),\n+      logger_((nvinfer1::ILogger::Severity)(\n+          OperatorBase::GetSingleArgument<int>(\"log_verbosity\", 2))),", "path": "caffe2/contrib/tensorrt/tensorrt_op_trt.cc", "position": null, "original_position": 37, "commit_id": "66758cc2919a2a6add56c6bcda8e33f50c94044b", "original_commit_id": "1051f2359f3ec0a4d7c28794d4a3ea67360bcd3d", "user": {"login": "Maratyszcza", "id": 1093985, "node_id": "MDQ6VXNlcjEwOTM5ODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1093985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Maratyszcza", "html_url": "https://github.com/Maratyszcza", "followers_url": "https://api.github.com/users/Maratyszcza/followers", "following_url": "https://api.github.com/users/Maratyszcza/following{/other_user}", "gists_url": "https://api.github.com/users/Maratyszcza/gists{/gist_id}", "starred_url": "https://api.github.com/users/Maratyszcza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Maratyszcza/subscriptions", "organizations_url": "https://api.github.com/users/Maratyszcza/orgs", "repos_url": "https://api.github.com/users/Maratyszcza/repos", "events_url": "https://api.github.com/users/Maratyszcza/events{/privacy}", "received_events_url": "https://api.github.com/users/Maratyszcza/received_events", "type": "User", "site_admin": false}, "body": "Please use `minloglevel` from here: https://github.com/pytorch/pytorch/blob/a2a28c0ef1d9a433972fe72fa5b0b9b850ccfcaf/caffe2/core/logging.cc#L106", "created_at": "2018-03-30T22:16:54Z", "updated_at": "2018-11-23T15:41:23Z", "html_url": "https://github.com/pytorch/pytorch/pull/6150#discussion_r178394952", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6150", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/178394952"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6150#discussion_r178394952"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6150"}}, "body_html": "<p>Please use <code>minloglevel</code> from here: <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pytorch/pytorch/blob/a2a28c0ef1d9a433972fe72fa5b0b9b850ccfcaf/caffe2/core/logging.cc#L106\">pytorch/caffe2/core/logging.cc</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 106\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pytorch/pytorch/commit/a2a28c0ef1d9a433972fe72fa5b0b9b850ccfcaf\">a2a28c0</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L106\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"106\"></td>\n          <td id=\"LC106\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-en\">CAFFE2_DECLARE_int</span>(minloglevel); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "body_text": "Please use minloglevel from here: \n  \n    \n      pytorch/caffe2/core/logging.cc\n    \n    \n         Line 106\n      in\n      a2a28c0\n    \n    \n    \n    \n\n        \n          \n           CAFFE2_DECLARE_int(minloglevel);"}