{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/143224061", "pull_request_review_id": 67709030, "id": 143224061, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzIyNDA2MQ==", "diff_hunk": "@@ -114,6 +114,19 @@ typedef struct {\n   /*! \\brief The offset in bytes to the beginning pointer to data */\n   uint64_t byte_offset;\n } DLTensor;\n+\n+/*!\n+ * \\ manage memory of DLTensor\n+ */\n+typedef struct {\n+  /*! DLTensor which is being memory managed*/\n+  DLTensor dlTensor;\n+  /* context in which DLTensor is used in framework*/\n+  void * ctx;\n+ /* Destructor signature */\n+  void (*destructor)(void * ctx, void * deleter_arg);\n+} DLManagedTensor;", "path": "torch/lib/ATen/dlpack.h", "position": null, "original_position": 15, "commit_id": "284521837e00213f0f826cfd5b5cb02fe5d796ad", "original_commit_id": "78facc4c5e27fb3c7ea2dd7ad80564c9aaa15bc4", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "The point of `DLManagedTensor` is that you could pass it to another framework (like Caffe2, and not necessarily C++), or vice versa. Unless you're planning to play allocator tricks, there is no portable way to handle this without an internal field. Also CC @zdevito who originally described this design.", "created_at": "2017-10-06T15:40:16Z", "updated_at": "2018-11-23T15:35:05Z", "html_url": "https://github.com/pytorch/pytorch/pull/2998#discussion_r143224061", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2998", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/143224061"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2998#discussion_r143224061"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2998"}}, "body_html": "<p>The point of <code>DLManagedTensor</code> is that you could pass it to another framework (like Caffe2, and not necessarily C++), or vice versa. Unless you're planning to play allocator tricks, there is no portable way to handle this without an internal field. Also CC <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=370202\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zdevito\">@zdevito</a> who originally described this design.</p>", "body_text": "The point of DLManagedTensor is that you could pass it to another framework (like Caffe2, and not necessarily C++), or vice versa. Unless you're planning to play allocator tricks, there is no portable way to handle this without an internal field. Also CC @zdevito who originally described this design.", "in_reply_to_id": 143175560}