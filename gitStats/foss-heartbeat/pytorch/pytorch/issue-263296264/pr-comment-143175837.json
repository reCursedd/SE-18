{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/143175837", "pull_request_review_id": 67650054, "id": 143175837, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzE3NTgzNw==", "diff_hunk": "@@ -537,23 +537,23 @@ PyObject *THPModule_hasDistributed(PyObject *_unused)\n #endif\n }\n \n-void destroy_DLPack_PyCapsule(PyObject * obj) {\n-  delete (DLTensor*)PyCapsule_GetPointer(obj, \"tensor\");\n+void DLPackPyCapsule_destroy(PyObject * obj) {\n+  DLManagedTensor * dlMTensor = (DLManagedTensor*)PyCapsule_GetPointer(obj, \"dltensor\");\n+  dlMTensor->destructor(dlMTensor->ctx, dlMTensor);\n }\n \n PyObject *THPModule_toDLPack(PyObject *_unused, PyObject *data)\n {\n   THPUtils_assert(THPModule_isTensor(data), \"data must be a Tensor\");\n   auto atTensor = torch::createTensor(data);\n-  DLTensor * dlTensor(new DLTensor);\n-  at::toDLPack(atTensor, dlTensor);\n-  return PyCapsule_New(dlTensor, \"tensor\", destroy_DLPack_PyCapsule);\n+  DLManagedTensor* dlMTensor = at::toDLPack(atTensor);\n+  return PyCapsule_New(dlMTensor, \"dltensor\", DLPackPyCapsule_destroy);\n }\n \n PyObject *THPModule_fromDLPack(PyObject *_unused, PyObject *data)\n {\n-  DLTensor * dlTensor = (DLTensor *)PyCapsule_GetPointer(data, \"tensor\");\n-  at::Tensor atensor = at::fromDLPack(dlTensor);\n+  DLManagedTensor * dlMTensor = (DLManagedTensor *)PyCapsule_GetPointer(data, \"dltensor\");\n+  at::Tensor atensor = at::fromDLPack(dlMTensor);", "path": "torch/csrc/Module.cpp", "position": null, "original_position": 27, "commit_id": "284521837e00213f0f826cfd5b5cb02fe5d796ad", "original_commit_id": "78facc4c5e27fb3c7ea2dd7ad80564c9aaa15bc4", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "It seems that this is heavily limiting for this API. From what I understand `from_dlpack` is used to exchange tensors with arbitrary libraries, while in here only things that use `DLManagedTensor` i.e. ATen and PyTorch can exchange them (which does make sense, since we have simpler ways of integrating with ATen).", "created_at": "2017-10-06T12:18:32Z", "updated_at": "2018-11-23T15:35:05Z", "html_url": "https://github.com/pytorch/pytorch/pull/2998#discussion_r143175837", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2998", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/143175837"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2998#discussion_r143175837"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2998"}}, "body_html": "<p>It seems that this is heavily limiting for this API. From what I understand <code>from_dlpack</code> is used to exchange tensors with arbitrary libraries, while in here only things that use <code>DLManagedTensor</code> i.e. ATen and PyTorch can exchange them (which does make sense, since we have simpler ways of integrating with ATen).</p>", "body_text": "It seems that this is heavily limiting for this API. From what I understand from_dlpack is used to exchange tensors with arbitrary libraries, while in here only things that use DLManagedTensor i.e. ATen and PyTorch can exchange them (which does make sense, since we have simpler ways of integrating with ATen)."}