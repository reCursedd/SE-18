{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/143937399", "pull_request_review_id": 68520100, "id": 143937399, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzkzNzM5OQ==", "diff_hunk": "@@ -537,23 +537,23 @@ PyObject *THPModule_hasDistributed(PyObject *_unused)\n #endif\n }\n \n-void destroy_DLPack_PyCapsule(PyObject * obj) {\n-  delete (DLTensor*)PyCapsule_GetPointer(obj, \"tensor\");\n+void DLPackPyCapsule_destroy(PyObject * obj) {\n+  DLManagedTensor * dlMTensor = (DLManagedTensor*)PyCapsule_GetPointer(obj, \"dltensor\");", "path": "torch/csrc/Module.cpp", "position": null, "original_position": 7, "commit_id": "284521837e00213f0f826cfd5b5cb02fe5d796ad", "original_commit_id": "78facc4c5e27fb3c7ea2dd7ad80564c9aaa15bc4", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Hmmm ownership transfer is common in C/C++ interfaces, but I can't think of any Python APIs that work this way. Let's not increase mental overhead for users. I can see people blowing up programs just because they forgot they used a descriptor once, and copying them has almost zero cost for us", "created_at": "2017-10-11T08:05:09Z", "updated_at": "2018-11-23T15:35:14Z", "html_url": "https://github.com/pytorch/pytorch/pull/2998#discussion_r143937399", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2998", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/143937399"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2998#discussion_r143937399"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2998"}}, "body_html": "<p>Hmmm ownership transfer is common in C/C++ interfaces, but I can't think of any Python APIs that work this way. Let's not increase mental overhead for users. I can see people blowing up programs just because they forgot they used a descriptor once, and copying them has almost zero cost for us</p>", "body_text": "Hmmm ownership transfer is common in C/C++ interfaces, but I can't think of any Python APIs that work this way. Let's not increase mental overhead for users. I can see people blowing up programs just because they forgot they used a descriptor once, and copying them has almost zero cost for us", "in_reply_to_id": 143872656}