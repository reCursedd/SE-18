{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/144186099", "pull_request_review_id": 68807193, "id": 144186099, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDE4NjA5OQ==", "diff_hunk": "@@ -114,6 +114,22 @@ typedef struct {\n   /*! \\brief The offset in bytes to the beginning pointer to data */\n   uint64_t byte_offset;\n } DLTensor;\n+\n+/*!\n+ * \\brief C Tensor object, manage memory of DLTensor.\n+ */\n+typedef struct {\n+  /*! \\DLTensor which is being memory managed */\n+  DLTensor dlTensor;\n+  /*! \\brief context in which DLManagedTensor is used in a framework */\n+  void * ctx;\n+  /*! \\brief Destructor signature void (*)(void*) - this should be called to\n+   *   destruct ctx which holds the DLManagedTensor. It can be NULL if there is\n+   *   no way for the caller to provide a reasonable destructor.\n+   */\n+  void (*destructor)(void * ctx) = NULL;", "path": "torch/lib/ATen/dlpack.h", "position": null, "original_position": 17, "commit_id": "284521837e00213f0f826cfd5b5cb02fe5d796ad", "original_commit_id": "7838c0197eaa8cd077bf20918c17cc4edbf9f6e7", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "It's not valid in C. Try running this through your C compiler, e.g., `gcc -c foo.c`:\r\n\r\n```\r\ntypedef struct {\r\n    int (*get_int)() = NULL;\r\n} foo;\r\nint main() {\r\n    return 0;\r\n}\r\n```", "created_at": "2017-10-12T03:16:02Z", "updated_at": "2018-11-23T15:35:15Z", "html_url": "https://github.com/pytorch/pytorch/pull/2998#discussion_r144186099", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2998", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/144186099"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2998#discussion_r144186099"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2998"}}, "body_html": "<p>It's not valid in C. Try running this through your C compiler, e.g., <code>gcc -c foo.c</code>:</p>\n<pre><code>typedef struct {\n    int (*get_int)() = NULL;\n} foo;\nint main() {\n    return 0;\n}\n</code></pre>", "body_text": "It's not valid in C. Try running this through your C compiler, e.g., gcc -c foo.c:\ntypedef struct {\n    int (*get_int)() = NULL;\n} foo;\nint main() {\n    return 0;\n}", "in_reply_to_id": 144068035}