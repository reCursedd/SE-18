{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/334933442", "html_url": "https://github.com/pytorch/pytorch/pull/2998#issuecomment-334933442", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2998", "id": 334933442, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDkzMzQ0Mg==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-07T12:59:01Z", "updated_at": "2017-10-07T13:01:19Z", "author_association": "MEMBER", "body_html": "<p>Creating wrappers is only a matter of</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span> in torch/utils/dlpack.py</span>\n<span class=\"pl-k\">from</span> torch._C <span class=\"pl-k\">import</span> _from_dlpack <span class=\"pl-k\">as</span> from_dlpack\n<span class=\"pl-k\">from</span> torch._C <span class=\"pl-k\">import</span> _to_dlpack <span class=\"pl-k\">as</span> to_dlpack</pre></div>\n<p>And I am sure that these function do not belong in <code>torch.</code> namespace. There are already more than a hundred functions there, and they all are used for math and tensor operations. Anything else goes to submodules, so that it doesn't unnecessarily pollute it. DLPack integration does not belong there (even all CUDA functions have their own packages!).</p>\n<p>I don't understand the argument of having an e2e test. It takes 5 mins to change this. Alternatively, we can leave them private in the way they used to be.</p>", "body_text": "Creating wrappers is only a matter of\n# in torch/utils/dlpack.py\nfrom torch._C import _from_dlpack as from_dlpack\nfrom torch._C import _to_dlpack as to_dlpack\nAnd I am sure that these function do not belong in torch. namespace. There are already more than a hundred functions there, and they all are used for math and tensor operations. Anything else goes to submodules, so that it doesn't unnecessarily pollute it. DLPack integration does not belong there (even all CUDA functions have their own packages!).\nI don't understand the argument of having an e2e test. It takes 5 mins to change this. Alternatively, we can leave them private in the way they used to be.", "body": "Creating wrappers is only a matter of\r\n```python\r\n# in torch/utils/dlpack.py\r\nfrom torch._C import _from_dlpack as from_dlpack\r\nfrom torch._C import _to_dlpack as to_dlpack\r\n```\r\nAnd I am sure that these function do not belong in `torch.` namespace. There are already more than a hundred functions there, and they all are used for math and tensor operations. Anything else goes to submodules, so that it doesn't unnecessarily pollute it. DLPack integration does not belong there (even all CUDA functions have their own packages!).\r\n\r\nI don't understand the argument of having an e2e test. It takes 5 mins to change this. Alternatively, we can leave them private in the way they used to be."}