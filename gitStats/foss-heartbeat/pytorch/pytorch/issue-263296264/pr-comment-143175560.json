{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/143175560", "pull_request_review_id": 67650054, "id": 143175560, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzE3NTU2MA==", "diff_hunk": "@@ -114,6 +114,19 @@ typedef struct {\n   /*! \\brief The offset in bytes to the beginning pointer to data */\n   uint64_t byte_offset;\n } DLTensor;\n+\n+/*!\n+ * \\ manage memory of DLTensor\n+ */\n+typedef struct {\n+  /*! DLTensor which is being memory managed*/\n+  DLTensor dlTensor;\n+  /* context in which DLTensor is used in framework*/\n+  void * ctx;\n+ /* Destructor signature */\n+  void (*destructor)(void * ctx, void * deleter_arg);\n+} DLManagedTensor;", "path": "torch/lib/ATen/dlpack.h", "position": null, "original_position": 15, "commit_id": "284521837e00213f0f826cfd5b5cb02fe5d796ad", "original_commit_id": "78facc4c5e27fb3c7ea2dd7ad80564c9aaa15bc4", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Structs like these usually have a constructor (here `at::toDLPack`), and a C destructor (e.g. `at::DLManagedTensor::destroy` as a static function). It's kind of ugly to use an internal field of a struct to delete it and I think it would be better to have a global destruction function.", "created_at": "2017-10-06T12:17:03Z", "updated_at": "2018-11-23T15:35:05Z", "html_url": "https://github.com/pytorch/pytorch/pull/2998#discussion_r143175560", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2998", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/143175560"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2998#discussion_r143175560"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2998"}}, "body_html": "<p>Structs like these usually have a constructor (here <code>at::toDLPack</code>), and a C destructor (e.g. <code>at::DLManagedTensor::destroy</code> as a static function). It's kind of ugly to use an internal field of a struct to delete it and I think it would be better to have a global destruction function.</p>", "body_text": "Structs like these usually have a constructor (here at::toDLPack), and a C destructor (e.g. at::DLManagedTensor::destroy as a static function). It's kind of ugly to use an internal field of a struct to delete it and I think it would be better to have a global destruction function."}