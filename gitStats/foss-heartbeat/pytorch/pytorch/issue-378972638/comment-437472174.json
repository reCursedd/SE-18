{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/437472174", "html_url": "https://github.com/pytorch/pytorch/issues/13757#issuecomment-437472174", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/13757", "id": 437472174, "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzQ3MjE3NA==", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-09T19:39:17Z", "updated_at": "2018-11-09T19:39:17Z", "author_association": "MEMBER", "body_html": "<p>Thanks for reporting this, especially the repro code.</p>\n<p>The issue is that the MKL library (which we use for matrix-multiplication) is creating and destroying threads for every call to <code>addmm</code> (in nn.Linear). The thread creation is more expensive than the actual matrix-multiplication.</p>\n<p>For now, you can disable this by setting the environment variable <code>MKL_DYNAMIC=false</code>.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a> perhaps we should set <code>mkl_set_dynamic(false)</code> by default during PyTorch initialization if the environment variable isn't set. MKL assumes it's true by default, but I think that's bad for us since we have operations outside of MKL that use OpenMP.</p>", "body_text": "Thanks for reporting this, especially the repro code.\nThe issue is that the MKL library (which we use for matrix-multiplication) is creating and destroying threads for every call to addmm (in nn.Linear). The thread creation is more expensive than the actual matrix-multiplication.\nFor now, you can disable this by setting the environment variable MKL_DYNAMIC=false.\n@soumith perhaps we should set mkl_set_dynamic(false) by default during PyTorch initialization if the environment variable isn't set. MKL assumes it's true by default, but I think that's bad for us since we have operations outside of MKL that use OpenMP.", "body": "Thanks for reporting this, especially the repro code.\r\n\r\nThe issue is that the MKL library (which we use for matrix-multiplication) is creating and destroying threads for every call to `addmm` (in nn.Linear). The thread creation is more expensive than the actual matrix-multiplication.\r\n\r\nFor now, you can disable this by setting the environment variable `MKL_DYNAMIC=false`.\r\n\r\n@soumith perhaps we should set `mkl_set_dynamic(false)` by default during PyTorch initialization if the environment variable isn't set. MKL assumes it's true by default, but I think that's bad for us since we have operations outside of MKL that use OpenMP."}