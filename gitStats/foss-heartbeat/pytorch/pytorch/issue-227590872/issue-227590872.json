{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1525", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1525/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1525/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1525/events", "html_url": "https://github.com/pytorch/pytorch/issues/1525", "id": 227590872, "node_id": "MDU6SXNzdWUyMjc1OTA4NzI=", "number": 1525, "title": "[feature request] Implementing operators for matrix backpropagation", "user": {"login": "yingfeng", "id": 7248, "node_id": "MDQ6VXNlcjcyNDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yingfeng", "html_url": "https://github.com/yingfeng", "followers_url": "https://api.github.com/users/yingfeng/followers", "following_url": "https://api.github.com/users/yingfeng/following{/other_user}", "gists_url": "https://api.github.com/users/yingfeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/yingfeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yingfeng/subscriptions", "organizations_url": "https://api.github.com/users/yingfeng/orgs", "repos_url": "https://api.github.com/users/yingfeng/repos", "events_url": "https://api.github.com/users/yingfeng/events{/privacy}", "received_events_url": "https://api.github.com/users/yingfeng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-05-10T07:33:43Z", "updated_at": "2017-05-10T07:33:43Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>Second order information has been proven to be effective for visual recognition, for example, adding a co-variance layer after the last conv could perform better within several fine-grained image classification task. Matrix backpropagation is one of key fundamental building block to introduce such layers which could perform better than such networks as bilinear according to some benchmarks. As a result, it's very useful to have such operators included into Pytorch.</p>\n<p>[1] C. Ionescu, O. Vantzos, and C. Sminchisescu. Matrix back- propagation for deep networks with structured layers. In ICCV, 2015<br>\n[2] C. Ionescu, O. Vantzos, and C. Sminchisescu. Training deep networks with structured layers by matrix backpropagation. arXiv, abs/1509.07838, 2015</p>", "body_text": "Second order information has been proven to be effective for visual recognition, for example, adding a co-variance layer after the last conv could perform better within several fine-grained image classification task. Matrix backpropagation is one of key fundamental building block to introduce such layers which could perform better than such networks as bilinear according to some benchmarks. As a result, it's very useful to have such operators included into Pytorch.\n[1] C. Ionescu, O. Vantzos, and C. Sminchisescu. Matrix back- propagation for deep networks with structured layers. In ICCV, 2015\n[2] C. Ionescu, O. Vantzos, and C. Sminchisescu. Training deep networks with structured layers by matrix backpropagation. arXiv, abs/1509.07838, 2015", "body": "Second order information has been proven to be effective for visual recognition, for example, adding a co-variance layer after the last conv could perform better within several fine-grained image classification task. Matrix backpropagation is one of key fundamental building block to introduce such layers which could perform better than such networks as bilinear according to some benchmarks. As a result, it's very useful to have such operators included into Pytorch.\r\n\r\n[1] C. Ionescu, O. Vantzos, and C. Sminchisescu. Matrix back- propagation for deep networks with structured layers. In ICCV, 2015\r\n[2] C. Ionescu, O. Vantzos, and C. Sminchisescu. Training deep networks with structured layers by matrix backpropagation. arXiv, abs/1509.07838, 2015"}