{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/191035638", "pull_request_review_id": 123542917, "id": 191035638, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTAzNTYzOA==", "diff_hunk": "@@ -0,0 +1,98 @@\n+#include <cstdlib>\n+#include <iostream>\n+#include <sstream>\n+#include <string>\n+#include <thread>\n+\n+#include \"ProcessGroupMPI.hpp\"\n+\n+void testAllreduce(int iter = 1000) {\n+  auto pg = c10d::ProcessGroupMPI::createProcessGroupMPI();\n+  // Generate inputs\n+  std::vector<std::vector<at::Tensor>> allTensors(iter);\n+  for (auto i = 0; i < iter; ++i) {\n+    auto tensor = at::ones(at::CPU(at::kFloat), {16, 16}) * i;\n+    allTensors[i] = std::vector<at::Tensor>({tensor});\n+  }\n+\n+  std::vector<std::shared_ptr<::c10d::ProcessGroup::Work>> works;\n+  for (auto& tensors : allTensors) {\n+    // Kick off work\n+    std::shared_ptr<::c10d::ProcessGroup::Work> work = pg->allreduce(tensors);\n+    works.push_back(std::move(work));\n+  }\n+\n+  for (auto& work : works) {\n+    // Wait for work to complete\n+    if (!work->wait()) {\n+      std::cerr << \"Exception received: \" << work->exception().what()\n+                << std::endl;\n+      pg->abort();\n+    }\n+  }\n+\n+  // Get the world size\n+  auto worldSize = pg->getSize();\n+\n+  // Verify outputs\n+  for (size_t i = 0; i < iter; ++i) {\n+    const auto expected = worldSize * i;\n+    auto data = allTensors[i][0].data<float>();\n+    for (auto i = 0; i < allTensors[i][0].numel(); ++i) {\n+      if (data[i] != expected) {\n+        throw std::runtime_error(\"BOOM!\");\n+      }\n+    }\n+  }\n+}\n+\n+void testBroadcast(int iter = 10000) {\n+  auto pg = c10d::ProcessGroupMPI::createProcessGroupMPI();\n+  // Generate inputs\n+  std::vector<std::vector<at::Tensor>> allTensors(iter);\n+\n+  for (auto i = 0; i < iter; ++i) {\n+    if (pg->getRank() == 0) {\n+      auto tensor = at::ones(at::CPU(at::kFloat), {16, 16}) * i;\n+      allTensors[i] = std::vector<at::Tensor>({tensor});\n+    } else {\n+      auto tensor = at::zeros(at::CPU(at::kFloat), {16, 16});\n+      allTensors[i] = std::vector<at::Tensor>({tensor});\n+    }\n+  }\n+\n+  std::vector<std::shared_ptr<::c10d::ProcessGroup::Work>> works;\n+  for (auto& tensors : allTensors) {\n+    // Kick off work\n+    std::shared_ptr<::c10d::ProcessGroup::Work> work = pg->broadcast(tensors);\n+    works.push_back(std::move(work));\n+  }\n+\n+  for (auto& work : works) {\n+    // Wait for work to complete\n+    if (!work->wait()) {\n+      std::cerr << \"Exception received: \" << work->exception().what()\n+                << std::endl;\n+      pg->abort();\n+    }\n+  }\n+\n+  // Verify outputs\n+  for (size_t i = 0; i < iter; ++i) {\n+    const auto expected = i;\n+    auto data = allTensors[i][0].data<float>();\n+    for (auto i = 0; i < allTensors[i][0].numel(); ++i) {\n+      if (data[i] != expected) {\n+        throw std::runtime_error(\"BOOM!\");\n+      }\n+    }\n+  }\n+}\n+\n+int main(int argc, char** argv) {\n+  testAllreduce();\n+  testBroadcast();", "path": "torch/lib/c10d/test/ProcessGroupMPITest.cpp", "position": null, "original_position": 94, "commit_id": "3bee9f02c78e069a41c05cea172eca6cc772af55", "original_commit_id": "effc473695f7c7af7f9d56f3c5f427a17e35f760", "user": {"login": "teng-li", "id": 8120856, "node_id": "MDQ6VXNlcjgxMjA4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8120856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teng-li", "html_url": "https://github.com/teng-li", "followers_url": "https://api.github.com/users/teng-li/followers", "following_url": "https://api.github.com/users/teng-li/following{/other_user}", "gists_url": "https://api.github.com/users/teng-li/gists{/gist_id}", "starred_url": "https://api.github.com/users/teng-li/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teng-li/subscriptions", "organizations_url": "https://api.github.com/users/teng-li/orgs", "repos_url": "https://api.github.com/users/teng-li/repos", "events_url": "https://api.github.com/users/teng-li/events{/privacy}", "received_events_url": "https://api.github.com/users/teng-li/received_events", "type": "User", "site_admin": false}, "body": "Ok, now this is added", "created_at": "2018-05-26T01:15:57Z", "updated_at": "2018-11-23T15:44:40Z", "html_url": "https://github.com/pytorch/pytorch/pull/7783#discussion_r191035638", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7783", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/191035638"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7783#discussion_r191035638"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7783"}}, "body_html": "<p>Ok, now this is added</p>", "body_text": "Ok, now this is added", "in_reply_to_id": 190950802}