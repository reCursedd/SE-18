{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7966", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7966/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7966/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7966/events", "html_url": "https://github.com/pytorch/pytorch/issues/7966", "id": 327910084, "node_id": "MDU6SXNzdWUzMjc5MTAwODQ=", "number": 7966, "title": "[bug report] ConvTranspose2d same result with different batch", "user": {"login": "edchengg", "id": 20430102, "node_id": "MDQ6VXNlcjIwNDMwMTAy", "avatar_url": "https://avatars0.githubusercontent.com/u/20430102?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edchengg", "html_url": "https://github.com/edchengg", "followers_url": "https://api.github.com/users/edchengg/followers", "following_url": "https://api.github.com/users/edchengg/following{/other_user}", "gists_url": "https://api.github.com/users/edchengg/gists{/gist_id}", "starred_url": "https://api.github.com/users/edchengg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edchengg/subscriptions", "organizations_url": "https://api.github.com/users/edchengg/orgs", "repos_url": "https://api.github.com/users/edchengg/repos", "events_url": "https://api.github.com/users/edchengg/events{/privacy}", "received_events_url": "https://api.github.com/users/edchengg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-30T21:43:07Z", "updated_at": "2018-05-30T21:53:07Z", "closed_at": "2018-05-30T21:53:07Z", "author_association": "NONE", "body_html": "<h2>Issue description</h2>\n<p>I am trying to use convtranspose to convert a (16,1,1) to (8,4,1)<br>\nhowever, in different batch, the last value are the same. Is this normal?</p>\n<h2>Code example</h2>\n<p>You can get the script and run it with:</p>\n<pre><code>input = autograd.Variable(torch.randn(2, 8, 4, 1))\ndownsample = nn.Conv2d(8, 16, (3,1), stride=(2,1), padding=0)\nupsample = nn.ConvTranspose2d(16, 8, (3,1), stride=(2,1),output_padding=(1,0))\nh = downsample(input)\nprint(input.size())\nprint(h.size()) # (2, 16, 1, 1)\noutput = upsample(h)\nprint(output.size()) # (2, 8, 4, 1)\n\noutput[0,0,:,:]\nVariable containing:\n-0.1138\n0.2510\n0.2639\n0.0946\n[torch.FloatTensor of size 4x1]\noutput[1,0,:,:]\nVariable containing:\n-0.0865\n0.2529\n-0.0836\n0.0946\n[torch.FloatTensor of size 4x1]\n</code></pre>", "body_text": "Issue description\nI am trying to use convtranspose to convert a (16,1,1) to (8,4,1)\nhowever, in different batch, the last value are the same. Is this normal?\nCode example\nYou can get the script and run it with:\ninput = autograd.Variable(torch.randn(2, 8, 4, 1))\ndownsample = nn.Conv2d(8, 16, (3,1), stride=(2,1), padding=0)\nupsample = nn.ConvTranspose2d(16, 8, (3,1), stride=(2,1),output_padding=(1,0))\nh = downsample(input)\nprint(input.size())\nprint(h.size()) # (2, 16, 1, 1)\noutput = upsample(h)\nprint(output.size()) # (2, 8, 4, 1)\n\noutput[0,0,:,:]\nVariable containing:\n-0.1138\n0.2510\n0.2639\n0.0946\n[torch.FloatTensor of size 4x1]\noutput[1,0,:,:]\nVariable containing:\n-0.0865\n0.2529\n-0.0836\n0.0946\n[torch.FloatTensor of size 4x1]", "body": "## Issue description\r\n\r\nI am trying to use convtranspose to convert a (16,1,1) to (8,4,1)\r\nhowever, in different batch, the last value are the same. Is this normal?\r\n\r\n## Code example\r\n\r\nYou can get the script and run it with:\r\n```\r\ninput = autograd.Variable(torch.randn(2, 8, 4, 1))\r\ndownsample = nn.Conv2d(8, 16, (3,1), stride=(2,1), padding=0)\r\nupsample = nn.ConvTranspose2d(16, 8, (3,1), stride=(2,1),output_padding=(1,0))\r\nh = downsample(input)\r\nprint(input.size())\r\nprint(h.size()) # (2, 16, 1, 1)\r\noutput = upsample(h)\r\nprint(output.size()) # (2, 8, 4, 1)\r\n\r\noutput[0,0,:,:]\r\nVariable containing:\r\n-0.1138\r\n0.2510\r\n0.2639\r\n0.0946\r\n[torch.FloatTensor of size 4x1]\r\noutput[1,0,:,:]\r\nVariable containing:\r\n-0.0865\r\n0.2529\r\n-0.0836\r\n0.0946\r\n[torch.FloatTensor of size 4x1]\r\n```\r\n"}