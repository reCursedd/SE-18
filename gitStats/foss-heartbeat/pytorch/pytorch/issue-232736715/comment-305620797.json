{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/305620797", "html_url": "https://github.com/pytorch/pytorch/pull/1691#issuecomment-305620797", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1691", "id": 305620797, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTYyMDc5Nw==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-01T21:07:39Z", "updated_at": "2017-06-01T21:07:39Z", "author_association": "MEMBER", "body_html": "<p>One thing I don't really like about this solution (and what makes my last proposal so complicated), is that it mutates the storages that param tensors use. This is undesired because it silently breaks sharing and can create subtle errors.</p>\n<p>I'd much rather keep the parameters immutable during forward, and keep the caching within the function itself. Another option would be to finally come up with a good API that can change modules in a way that makes them conform to whatever a given backend wants.</p>", "body_text": "One thing I don't really like about this solution (and what makes my last proposal so complicated), is that it mutates the storages that param tensors use. This is undesired because it silently breaks sharing and can create subtle errors.\nI'd much rather keep the parameters immutable during forward, and keep the caching within the function itself. Another option would be to finally come up with a good API that can change modules in a way that makes them conform to whatever a given backend wants.", "body": "One thing I don't really like about this solution (and what makes my last proposal so complicated), is that it mutates the storages that param tensors use. This is undesired because it silently breaks sharing and can create subtle errors. \r\n\r\nI'd much rather keep the parameters immutable during forward, and keep the caching within the function itself. Another option would be to finally come up with a good API that can change modules in a way that makes them conform to whatever a given backend wants."}