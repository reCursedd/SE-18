{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5294", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5294/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5294/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5294/events", "html_url": "https://github.com/pytorch/pytorch/pull/5294", "id": 298065243, "node_id": "MDExOlB1bGxSZXF1ZXN0MTY5ODE4NjQz", "number": 5294, "title": "Configurable flushing denormal numbers on CPU", "user": {"login": "tunz", "id": 7830853, "node_id": "MDQ6VXNlcjc4MzA4NTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/7830853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tunz", "html_url": "https://github.com/tunz", "followers_url": "https://api.github.com/users/tunz/followers", "following_url": "https://api.github.com/users/tunz/following{/other_user}", "gists_url": "https://api.github.com/users/tunz/gists{/gist_id}", "starred_url": "https://api.github.com/users/tunz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tunz/subscriptions", "organizations_url": "https://api.github.com/users/tunz/orgs", "repos_url": "https://api.github.com/users/tunz/repos", "events_url": "https://api.github.com/users/tunz/events{/privacy}", "received_events_url": "https://api.github.com/users/tunz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-18T07:24:59Z", "updated_at": "2018-11-23T15:39:43Z", "closed_at": "2018-02-20T00:23:44Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/5294", "html_url": "https://github.com/pytorch/pytorch/pull/5294", "diff_url": "https://github.com/pytorch/pytorch/pull/5294.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/5294.patch"}, "body_html": "<p>Issue <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"289837299\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/4737\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/4737/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/4737\">#4737</a></p>\n<p>This PR provides a function to enable/disable flush denormal mode on x86 supporting SSE3. Intel is providing this two macros <code>_MM_SET_FLUSH_ZERO_MODE</code> and <code>_MM_SET_DENORMALS_ZERO_MODE</code>, so I used these.</p>\n<p>it seems some old versions of gcc have an issue to prevent the use of intrinsics (<a href=\"https://gcc.gnu.org/bugzilla/show_bug.cgi?id=57202\" rel=\"nofollow\">https://gcc.gnu.org/bugzilla/show_bug.cgi?id=57202</a>), so always add <code>-msse3</code> option.</p>\n<p>I'm not sure if we have to enable this option by default or not, but I think this approach seems reasonable as a first step.</p>", "body_text": "Issue #4737\nThis PR provides a function to enable/disable flush denormal mode on x86 supporting SSE3. Intel is providing this two macros _MM_SET_FLUSH_ZERO_MODE and _MM_SET_DENORMALS_ZERO_MODE, so I used these.\nit seems some old versions of gcc have an issue to prevent the use of intrinsics (https://gcc.gnu.org/bugzilla/show_bug.cgi?id=57202), so always add -msse3 option.\nI'm not sure if we have to enable this option by default or not, but I think this approach seems reasonable as a first step.", "body": "Issue #4737 \r\n\r\nThis PR provides a function to enable/disable flush denormal mode on x86 supporting SSE3. Intel is providing this two macros `_MM_SET_FLUSH_ZERO_MODE` and `_MM_SET_DENORMALS_ZERO_MODE`, so I used these. \r\n\r\nit seems some old versions of gcc have an issue to prevent the use of intrinsics (https://gcc.gnu.org/bugzilla/show_bug.cgi?id=57202), so always add `-msse3` option. \r\n\r\nI'm not sure if we have to enable this option by default or not, but I think this approach seems reasonable as a first step."}