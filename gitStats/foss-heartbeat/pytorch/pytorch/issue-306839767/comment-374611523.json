{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/374611523", "html_url": "https://github.com/pytorch/pytorch/issues/5902#issuecomment-374611523", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5902", "id": 374611523, "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDYxMTUyMw==", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-20T14:10:46Z", "updated_at": "2018-03-20T14:10:46Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=83203\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jseppanen\">@jseppanen</a> if you use Pandas DataFrames, you can use the <code>multiprocessing</code> spawn start method.</p>\n<pre><code>import torch\ntorch.multiprocessing.set_start_method(\"spawn\")\n</code></pre>\n<p>This will not use fork, and hence not use fork-on-write semantics</p>", "body_text": "@jseppanen if you use Pandas DataFrames, you can use the multiprocessing spawn start method.\nimport torch\ntorch.multiprocessing.set_start_method(\"spawn\")\n\nThis will not use fork, and hence not use fork-on-write semantics", "body": "@jseppanen if you use Pandas DataFrames, you can use the `multiprocessing` spawn start method.\r\n\r\n```\r\nimport torch\r\ntorch.multiprocessing.set_start_method(\"spawn\")\r\n```\r\n\r\nThis will not use fork, and hence not use fork-on-write semantics"}