{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4463", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4463/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4463/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4463/events", "html_url": "https://github.com/pytorch/pytorch/pull/4463", "id": 285778858, "node_id": "MDExOlB1bGxSZXF1ZXN0MTYwOTc4MDc2", "number": 4463, "title": "Fix dataloader test_worker_seed", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-01-03T19:02:59Z", "updated_at": "2018-11-23T15:37:48Z", "closed_at": "2018-01-04T03:45:06Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/4463", "html_url": "https://github.com/pytorch/pytorch/pull/4463", "diff_url": "https://github.com/pytorch/pytorch/pull/4463.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/4463.patch"}, "body_html": "<ol>\n<li>Add lock for SynchronizedSeedDataset when incrementing the counter. I mistakenly assumed that <code>mp.Value</code> has atomic <code>+=</code>.</li>\n<li>Add additional os level close stderr for tests that launch failing process. So CI test outputs can be clean.</li>\n</ol>\n<p>Test:<br>\nRun <code>python test_dataloader.py</code> on CI worker for 200 times. No blocks and no messy segfault outputs.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a></p>", "body_text": "Add lock for SynchronizedSeedDataset when incrementing the counter. I mistakenly assumed that mp.Value has atomic +=.\nAdd additional os level close stderr for tests that launch failing process. So CI test outputs can be clean.\n\nTest:\nRun python test_dataloader.py on CI worker for 200 times. No blocks and no messy segfault outputs.\n@ezyang", "body": "1. Add lock for SynchronizedSeedDataset when incrementing the counter. I mistakenly assumed that `mp.Value` has atomic `+=`. \r\n2. Add additional os level close stderr for tests that launch failing process. So CI test outputs can be clean.\r\n\r\nTest:\r\nRun `python test_dataloader.py` on CI worker for 200 times. No blocks and no messy segfault outputs.\r\n\r\n@ezyang \r\n  "}