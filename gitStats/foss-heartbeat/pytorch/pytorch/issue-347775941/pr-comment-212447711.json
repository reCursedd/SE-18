{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/212447711", "pull_request_review_id": 149085864, "id": 212447711, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjQ0NzcxMQ==", "diff_hunk": "@@ -484,66 +484,73 @@ Value* tryMatchArgument(\n   return value;\n }\n \n+at::optional<size_t> findInputWithName(const std::string& name, at::ArrayRef<NamedValue> kwargs) {\n+  for(size_t i = 0; i < kwargs.size(); ++i) {\n+    if(kwargs[i].name() == name)\n+      return i;\n+  }\n+  return at::nullopt;\n+}\n+\n at::optional<std::vector<Value*>> tryMatchSchema(\n   const FunctionSchema& schema,\n   const SourceRange& loc,\n   Graph& graph,\n-  at::ArrayRef<NamedValue> inputs,\n-  at::ArrayRef<NamedValue> attributes,\n+  at::ArrayRef<NamedValue> args,\n+  at::ArrayRef<NamedValue> kwargs,\n   std::ostream& failure_messages) {\n     auto err = [&]() -> std::ostream& {\n       failure_messages << \"\\nfor operator \" << schema << \":\\n\";\n       return failure_messages;\n     };\n \n-    std::vector<at::optional<NamedValue>> positional_inputs(schema.arguments.size(), at::nullopt);\n+    std::vector<Value*> positional_inputs;\n+    std::vector<bool> used_kwarg(kwargs.size(), false);\n \n-    size_t total_inputs = attributes.size() + inputs.size();\n-    if(total_inputs > schema.arguments.size()) {\n-      err() << \"expected at most \" << schema.arguments.size() << \" arguments \"\n-      << \"but found \" << total_inputs << \"\\n\" << loc << \"\\n\";\n-      return at::nullopt;\n-    }\n-    // fill in positional arguments\n-    for(size_t i = 0; i < inputs.size(); ++i) {\n-      positional_inputs[i] = inputs[i];\n-    }\n-    // fill in named arguments\n-    for(const NamedValue& nv : attributes) {\n-      auto idx = schema.argumentIndexWithName(nv.name());\n-      if(!idx) {\n-        err() << \"unknown keyword argument '\" << nv.name() << \"'\\n\" << nv.locOr(loc);\n-        return at::nullopt;\n-      }\n-      if(positional_inputs[*idx]) {\n-        err() << \"argument \" <<  nv.name() << \" specified twice \\n\" << nv.locOr(loc);\n-        return at::nullopt;\n-      }\n-      positional_inputs[*idx] = nv;\n-    }\n-    // fill in default values\n-    for(size_t i = 0; i < positional_inputs.size(); ++i) {\n-      if(positional_inputs[i])\n-        continue;\n-      auto default_value = schema.arguments[i].default_value;\n-      if(!default_value) {\n+    for(size_t i = 0; i < schema.arguments.size(); ++i) {\n+      const auto& arg = schema.arguments[i];\n+      at::optional<NamedValue> v;\n+      if(i < args.size()) {\n+        v = args[i];\n+      } else if(auto idx = findInputWithName(arg.name, kwargs))  {", "path": "torch/csrc/jit/script/compiler.cpp", "position": null, "original_position": 64, "commit_id": "b36b56870e85967cacefb1feeb502858c2a4e0fa", "original_commit_id": "68d196ee1e44d4144afdaf9bb890d09743d98aed", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "It was quadratic before :) (findArgumentWithIndex). Also N=20. Please don't arrest me, quadratic police!", "created_at": "2018-08-23T20:33:18Z", "updated_at": "2018-11-23T15:49:51Z", "html_url": "https://github.com/pytorch/pytorch/pull/10250#discussion_r212447711", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10250", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/212447711"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10250#discussion_r212447711"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10250"}}, "body_html": "<p>It was quadratic before :) (findArgumentWithIndex). Also N=20. Please don't arrest me, quadratic police!</p>", "body_text": "It was quadratic before :) (findArgumentWithIndex). Also N=20. Please don't arrest me, quadratic police!", "in_reply_to_id": 212427838}