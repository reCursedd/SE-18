{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/151806295", "pull_request_review_id": 77581788, "id": 151806295, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTgwNjI5NQ==", "diff_hunk": "@@ -90,18 +97,37 @@ struct CompiledFunction {\n       } catch(const jit::NotImplementedException & ex) {\n         closure_ = std::make_shared<AutogradClosureFactory>(complete_trace.get());\n       }\n+      prepareStageDetails(complete_trace.get());\n+      graph_ = complete_trace->graph;\n       is_ready_ = true;\n       return true;\n     }\n \n+    void prepareStageDetails(TracingState *state) {", "path": "torch/csrc/jit/python_compiled_function.cpp", "position": null, "original_position": 24, "commit_id": "ab30115d73fc12dad20bdf9fabbaaf45d31e2e5b", "original_commit_id": "014c807f4087814fd27e54cbe6aaa1f4a80dfb3c", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "python_compiled_function.cpp is probably not the right place for this. We probably need an object like AutogradClosureFactory that is constructed with a TracingState and then produces AutogradInterpreterFunctions. This wasn't needed before because the only argument to AutogradInterpreterFunction was jit::Code.", "created_at": "2017-11-17T22:41:57Z", "updated_at": "2018-11-23T15:36:39Z", "html_url": "https://github.com/pytorch/pytorch/pull/3760#discussion_r151806295", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3760", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/151806295"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3760#discussion_r151806295"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3760"}}, "body_html": "<p>python_compiled_function.cpp is probably not the right place for this. We probably need an object like AutogradClosureFactory that is constructed with a TracingState and then produces AutogradInterpreterFunctions. This wasn't needed before because the only argument to AutogradInterpreterFunction was jit::Code.</p>", "body_text": "python_compiled_function.cpp is probably not the right place for this. We probably need an object like AutogradClosureFactory that is constructed with a TracingState and then produces AutogradInterpreterFunctions. This wasn't needed before because the only argument to AutogradInterpreterFunction was jit::Code."}