{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/212052577", "pull_request_review_id": 148582031, "id": 212052577, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjA1MjU3Nw==", "diff_hunk": "@@ -0,0 +1,227 @@\n+#include \"torch/csrc/jit/passes/annotate_effects.h\"\n+\n+#include <set>\n+#include \"torch/csrc/jit/passes/dead_code_elimination.h\"\n+\n+namespace torch {\n+namespace jit {\n+namespace {\n+\n+/**\n+ * AnnotateEffects\n+ *\n+ * This pass annotates effectful operations (such as ones that mutate existing\n+ * values) to prevent subsequent passes from re-ordering ops in a way that\n+ * changes the meaning of the program.\n+ *\n+ * It does this by threading a \"world token\" value through nodes that use\n+ * mutable values. This models effects explicitly in the IR and forces all\n+ * annotated nodes to be linearized during optimization.\n+ *\n+ * The world token is threaded directly through any nodes that mutate values.\n+ * For purely functional operators, their node will be \"fenced\" by two\n+ * `prim::MemoryFence` nodes that take world tokens as their input.\n+ */\n+class AnnotateEffectsImpl {\n+ public:\n+  void annotateEffects(Graph* g) {\n+    // TODO(suo): We need to change this so that the world token is an input\n+    // and output of the graph. That would require changing a bunch of interop\n+    // and batching code, so leaving it out for now.\n+    //\n+    // auto curToken = g->addInput(\"world\")->setType(WorldType::get());", "path": "torch/csrc/jit/passes/annotate_effects.cpp", "position": null, "original_position": 32, "commit_id": "fbcf02446753bff536faca7fa093af5f88fc621c", "original_commit_id": "3ab89f73ed99cbea775ac32ed1e502b081356cc5", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "Discussed in person: we can add `g->entryWorld()` and `g->exitWorld()` to the graph. These would not be members of `inputs()` or `outputs()` of the graph but come from separate \"special\" nodes (which, similar to prim::Params, are not in the node list) that are used only to capture effects. ", "created_at": "2018-08-22T18:06:22Z", "updated_at": "2018-11-23T15:49:45Z", "html_url": "https://github.com/pytorch/pytorch/pull/10700#discussion_r212052577", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10700", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/212052577"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10700#discussion_r212052577"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10700"}}, "body_html": "<p>Discussed in person: we can add <code>g-&gt;entryWorld()</code> and <code>g-&gt;exitWorld()</code> to the graph. These would not be members of <code>inputs()</code> or <code>outputs()</code> of the graph but come from separate \"special\" nodes (which, similar to prim::Params, are not in the node list) that are used only to capture effects.</p>", "body_text": "Discussed in person: we can add g->entryWorld() and g->exitWorld() to the graph. These would not be members of inputs() or outputs() of the graph but come from separate \"special\" nodes (which, similar to prim::Params, are not in the node list) that are used only to capture effects."}