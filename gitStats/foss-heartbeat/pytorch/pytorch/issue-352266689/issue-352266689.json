{"url": "https://api.github.com/repos/pytorch/pytorch/issues/10700", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10700/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10700/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10700/events", "html_url": "https://github.com/pytorch/pytorch/pull/10700", "id": 352266689, "node_id": "MDExOlB1bGxSZXF1ZXN0MjA5NjIwNTgz", "number": 10700, "title": "[jit][script] mutable lists", "user": {"login": "suo", "id": 1617424, "node_id": "MDQ6VXNlcjE2MTc0MjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1617424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suo", "html_url": "https://github.com/suo", "followers_url": "https://api.github.com/users/suo/followers", "following_url": "https://api.github.com/users/suo/following{/other_user}", "gists_url": "https://api.github.com/users/suo/gists{/gist_id}", "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suo/subscriptions", "organizations_url": "https://api.github.com/users/suo/orgs", "repos_url": "https://api.github.com/users/suo/repos", "events_url": "https://api.github.com/users/suo/events{/privacy}", "received_events_url": "https://api.github.com/users/suo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 679953983, "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit", "name": "jit", "color": "c5def5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-08-20T19:32:48Z", "updated_at": "2018-11-23T15:52:08Z", "closed_at": "2018-09-28T02:26:41Z", "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/10700", "html_url": "https://github.com/pytorch/pytorch/pull/10700", "diff_url": "https://github.com/pytorch/pytorch/pull/10700.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/10700.patch"}, "body_html": "<p>This PR implements the design that we discussed. Changes:</p>\n<ul>\n<li>Added a World token IValue and type. The IValue is basically a dummy struct for now, in the future we may extend it (say, add thread-local state).</li>\n<li>Effectful ops explicitly declare they are mutable by having World tokens as inputs and outputs in their schema.</li>\n<li>Purely functional ops that use mutable values will get \"fenced\" and the world token will be threaded through the fences</li>\n<li>AnnotateEffects pass which wires up all the world tokens together.</li>\n</ul>", "body_text": "This PR implements the design that we discussed. Changes:\n\nAdded a World token IValue and type. The IValue is basically a dummy struct for now, in the future we may extend it (say, add thread-local state).\nEffectful ops explicitly declare they are mutable by having World tokens as inputs and outputs in their schema.\nPurely functional ops that use mutable values will get \"fenced\" and the world token will be threaded through the fences\nAnnotateEffects pass which wires up all the world tokens together.", "body": "This PR implements the design that we discussed. Changes:\r\n- Added a World token IValue and type. The IValue is basically a dummy struct for now, in the future we may extend it (say, add thread-local state).\r\n- Effectful ops explicitly declare they are mutable by having World tokens as inputs and outputs in their schema.\r\n- Purely functional ops that use mutable values will get \"fenced\" and the world token will be threaded through the fences\r\n- AnnotateEffects pass which wires up all the world tokens together."}