{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/212709756", "pull_request_review_id": 149397759, "id": 212709756, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjcwOTc1Ng==", "diff_hunk": "@@ -394,6 +395,36 @@ static inline bool isIntUsedAsIntList(\n          *arg.type == *ListType::ofInts() && arg.N;\n }\n \n+// Match against against a mutable schema.\n+//\n+// We need to treat mutable schemas differently because the IR explicitly\n+// expresses effects by including a world token in mutable ops. Users do not\n+// know about the world token, so we need to generate a dummy one and add\n+// it to the inputs for schema matching.\n+//\n+// Example:\n+//   append(int[] list, int el)\n+// becomes\n+//   append(World w, int[] list, int el)\n+//\n+// NOTE: The dummy world token has no meaning; the AnnotateEffects pass is\n+// necessary to enforce linearization on effectful ops.\n+at::optional<std::vector<Value*>> tryMatchMutableSchema(\n+    const FunctionSchema& schema,\n+    const SourceRange& loc,\n+    Graph& graph,\n+    at::ArrayRef<NamedValue> inputs,\n+    at::ArrayRef<NamedValue> attributes,\n+    std::ostream& failure_messages) {\n+  JIT_ASSERT(schema.is_mutable);\n+  // Add a dummy world token to be matched against\n+  const auto worldToken = graph.insertConstant(World());", "path": "torch/csrc/jit/script/compiler.cpp", "position": null, "original_position": 34, "commit_id": "fbcf02446753bff536faca7fa093af5f88fc621c", "original_commit_id": "3ab89f73ed99cbea775ac32ed1e502b081356cc5", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "We could probably add a check in `Graph::lint()` that makes sure that there's only a single world token constant", "created_at": "2018-08-24T18:03:35Z", "updated_at": "2018-11-23T15:49:58Z", "html_url": "https://github.com/pytorch/pytorch/pull/10700#discussion_r212709756", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10700", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/212709756"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10700#discussion_r212709756"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10700"}}, "body_html": "<p>We could probably add a check in <code>Graph::lint()</code> that makes sure that there's only a single world token constant</p>", "body_text": "We could probably add a check in Graph::lint() that makes sure that there's only a single world token constant", "in_reply_to_id": 212709434}