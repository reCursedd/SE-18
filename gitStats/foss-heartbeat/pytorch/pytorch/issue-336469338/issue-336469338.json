{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8977", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8977/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8977/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8977/events", "html_url": "https://github.com/pytorch/pytorch/issues/8977", "id": 336469338, "node_id": "MDU6SXNzdWUzMzY0NjkzMzg=", "number": 8977, "title": "add() of sparse tensor has different behaviors in CPU vs CUDA", "user": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-28T04:31:56Z", "updated_at": "2018-06-28T14:45:57Z", "closed_at": "2018-06-28T14:45:57Z", "author_association": "CONTRIBUTOR", "body_html": "<p>add() two sparse tensor in CUDA generates a uncoalesced tensor:</p>\n<pre><code>a = torch.cuda.sparse.DoubleTensor(\n    torch.LongTensor([[0], [1], [2]]).transpose(1, 0).cuda(),\n    torch.FloatTensor([2, 3, 4]).cuda(),\n    torch.Size([3]))\nprint(a + a)\n-----------------------\ntorch.cuda.sparse.FloatTensor of size (3,) with indices:\ntensor([[0, 1, 2, 0, 1, 2]], device='cuda:0')\nand values:\ntensor([2., 3., 4., 2., 3., 4.], device='cuda:0')\n</code></pre>\n<p>add() in CPU generates a coalesced tensor:</p>\n<pre><code>b = torch.sparse.DoubleTensor(\n    torch.LongTensor([[0], [1], [2]]).transpose(1, 0),\n    torch.FloatTensor([2, 3, 4]),\n    torch.Size([3]))\nprint(b + b)\n------------------------\ntorch.sparse.FloatTensor of size (3,) with indices:\ntensor([[0, 1, 2]])\nand values:\ntensor([4., 6., 8.])\n</code></pre>\n<p>Is this intended, or did I miss something?</p>", "body_text": "add() two sparse tensor in CUDA generates a uncoalesced tensor:\na = torch.cuda.sparse.DoubleTensor(\n    torch.LongTensor([[0], [1], [2]]).transpose(1, 0).cuda(),\n    torch.FloatTensor([2, 3, 4]).cuda(),\n    torch.Size([3]))\nprint(a + a)\n-----------------------\ntorch.cuda.sparse.FloatTensor of size (3,) with indices:\ntensor([[0, 1, 2, 0, 1, 2]], device='cuda:0')\nand values:\ntensor([2., 3., 4., 2., 3., 4.], device='cuda:0')\n\nadd() in CPU generates a coalesced tensor:\nb = torch.sparse.DoubleTensor(\n    torch.LongTensor([[0], [1], [2]]).transpose(1, 0),\n    torch.FloatTensor([2, 3, 4]),\n    torch.Size([3]))\nprint(b + b)\n------------------------\ntorch.sparse.FloatTensor of size (3,) with indices:\ntensor([[0, 1, 2]])\nand values:\ntensor([4., 6., 8.])\n\nIs this intended, or did I miss something?", "body": "add() two sparse tensor in CUDA generates a uncoalesced tensor:\r\n```\r\na = torch.cuda.sparse.DoubleTensor(\r\n    torch.LongTensor([[0], [1], [2]]).transpose(1, 0).cuda(),\r\n    torch.FloatTensor([2, 3, 4]).cuda(),\r\n    torch.Size([3]))\r\nprint(a + a)\r\n-----------------------\r\ntorch.cuda.sparse.FloatTensor of size (3,) with indices:\r\ntensor([[0, 1, 2, 0, 1, 2]], device='cuda:0')\r\nand values:\r\ntensor([2., 3., 4., 2., 3., 4.], device='cuda:0')\r\n```\r\n\r\nadd() in CPU generates a coalesced tensor:\r\n```\r\nb = torch.sparse.DoubleTensor(\r\n    torch.LongTensor([[0], [1], [2]]).transpose(1, 0),\r\n    torch.FloatTensor([2, 3, 4]),\r\n    torch.Size([3]))\r\nprint(b + b)\r\n------------------------\r\ntorch.sparse.FloatTensor of size (3,) with indices:\r\ntensor([[0, 1, 2]])\r\nand values:\r\ntensor([4., 6., 8.])\r\n```\r\n\r\nIs this intended, or did I miss something?"}