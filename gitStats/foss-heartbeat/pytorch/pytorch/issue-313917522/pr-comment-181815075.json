{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/181815075", "pull_request_review_id": 112504959, "id": 181815075, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTgxNTA3NQ==", "diff_hunk": "@@ -347,6 +348,71 @@ Caffe2Backend::get_special_operators() const {\n // Special Operator Converters\n //============================\n \n+Caffe2Ops Caffe2Backend::CreateCast(OnnxNode* onnx_node, int opset_version) {\n+  auto c2_op = CommonOnnxNodeToCaffe2Ops(onnx_node, opset_version);\n+\n+  auto onnx_dtype =\n+      onnx_node->attributes.get<int64_t>(\"to\", TensorProto::UNDEFINED);\n+  auto c2_dtype = caffe2::TensorProto::UNDEFINED;\n+  switch (onnx_dtype) {\n+    case ::ONNX_NAMESPACE::TensorProto::FLOAT:\n+      c2_dtype = caffe2::TensorProto::FLOAT;\n+      break;\n+    case ::ONNX_NAMESPACE::TensorProto::UINT8:\n+      c2_dtype = caffe2::TensorProto::UINT8;\n+      break;\n+    case ::ONNX_NAMESPACE::TensorProto::INT8:\n+      c2_dtype = caffe2::TensorProto::INT8;\n+      break;\n+    case ::ONNX_NAMESPACE::TensorProto::UINT16:\n+      c2_dtype = caffe2::TensorProto::UINT16;\n+      break;\n+    case ::ONNX_NAMESPACE::TensorProto::INT16:\n+      c2_dtype = caffe2::TensorProto::INT16;\n+      break;\n+    case ::ONNX_NAMESPACE::TensorProto::INT32:\n+      c2_dtype = caffe2::TensorProto::INT32;\n+      break;\n+    case ::ONNX_NAMESPACE::TensorProto::INT64:\n+      c2_dtype = caffe2::TensorProto::INT64;\n+      break;\n+    case ::ONNX_NAMESPACE::TensorProto::STRING:\n+      c2_dtype = caffe2::TensorProto::STRING;\n+      break;\n+    case ::ONNX_NAMESPACE::TensorProto::BOOL:\n+      c2_dtype = caffe2::TensorProto::BOOL;\n+      break;\n+    case ::ONNX_NAMESPACE::TensorProto::FLOAT16:\n+      c2_dtype = caffe2::TensorProto::FLOAT16;\n+      break;\n+    case ::ONNX_NAMESPACE::TensorProto::DOUBLE:\n+      c2_dtype = caffe2::TensorProto::DOUBLE;\n+      break;\n+    case ::ONNX_NAMESPACE::TensorProto::UINT32:\n+    case ::ONNX_NAMESPACE::TensorProto::UINT64:\n+    case ::ONNX_NAMESPACE::TensorProto::COMPLEX64:\n+    case ::ONNX_NAMESPACE::TensorProto::COMPLEX128:\n+    case ::ONNX_NAMESPACE::TensorProto::UNDEFINED:\n+      c2_dtype = caffe2::TensorProto::UNDEFINED;\n+      break;\n+  };\n+\n+  CAFFE_ENFORCE_NE(\n+      c2_dtype,\n+      caffe2::TensorProto::UNDEFINED,\n+      \"Casting to '\",\n+      onnx_dtype,\n+      \"' dtype is not supported\");\n+\n+  CAFFE_ENFORCE_EQ(\n+      c2_op.ops[0].arg().size(),", "path": "caffe2/onnx/backend.cc", "position": 69, "original_position": 69, "commit_id": "d1f5dd53f39e85d313a1e6f32c5b9d8280c9aee0", "original_commit_id": "d1f5dd53f39e85d313a1e6f32c5b9d8280c9aee0", "user": {"login": "yinghai", "id": 1100089, "node_id": "MDQ6VXNlcjExMDAwODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1100089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yinghai", "html_url": "https://github.com/yinghai", "followers_url": "https://api.github.com/users/yinghai/followers", "following_url": "https://api.github.com/users/yinghai/following{/other_user}", "gists_url": "https://api.github.com/users/yinghai/gists{/gist_id}", "starred_url": "https://api.github.com/users/yinghai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yinghai/subscriptions", "organizations_url": "https://api.github.com/users/yinghai/orgs", "repos_url": "https://api.github.com/users/yinghai/repos", "events_url": "https://api.github.com/users/yinghai/events{/privacy}", "received_events_url": "https://api.github.com/users/yinghai/received_events", "type": "User", "site_admin": false}, "body": "Check `c2_op.ops` is non-empty? ", "created_at": "2018-04-16T16:59:44Z", "updated_at": "2018-11-23T15:42:30Z", "html_url": "https://github.com/pytorch/pytorch/pull/6574#discussion_r181815075", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6574", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/181815075"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6574#discussion_r181815075"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6574"}}, "body_html": "<p>Check <code>c2_op.ops</code> is non-empty?</p>", "body_text": "Check c2_op.ops is non-empty?"}