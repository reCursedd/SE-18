{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/160894653", "pull_request_review_id": 88089492, "id": 160894653, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDg5NDY1Mw==", "diff_hunk": "@@ -289,39 +289,65 @@ static void check_inplace(const Tensor& tensor) {\n   }\n }\n \n-static void rebase_history(Tensor& tensor, std::shared_ptr<Function> grad_fn, int output_nr=0) {\n-  if (!tensor.defined()) {\n-    return;\n+static void check_output_args(const char* name, TensorList tensors) {\n+  // Our logic for modifications to views only works for in-place functions,\n+  // not out=... functions. Checks that no output arguments are views.\n+  for (auto& tensor : tensors) {\n+    if (tensor.defined()) {\n+      auto& var = static_cast<const Variable&>(tensor);\n+      if (var.is_view()) {\n+        at::runtime_error(\n+          \"%s(): output arguments (out=...) must not be views in \"\n+          \"differentiable functions\", name);\n+      }\n+    }\n   }\n-  auto& var = static_cast<Variable&>(tensor);\n-  if (grad_fn) {\n+}\n+\n+static void rebase_history(Tensor& tensor, std::shared_ptr<Function> grad_fn) {\n+  if (grad_fn && tensor.defined()) {\n+    auto& var = static_cast<Variable&>(tensor);\n     grad_fn->num_inputs = 1;\n-    var.rebase_history(output_nr, std::move(grad_fn));\n+    var.rebase_history(0, std::move(grad_fn));\n+  }\n+}\n+\n+static void rebase_history(TensorList tensors, std::shared_ptr<Function> grad_fn) {", "path": "tools/autograd/templates/VariableType.cpp", "position": null, "original_position": 33, "commit_id": "c7b63bd434ccce40348954794518030282ff0ddc", "original_commit_id": "2ff436294709b07373c384c6624382cf7dc9fe19", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Is this ever used? Do we have functions that return multiple outputs and modify all of them? I'm a bit concerned of rebasing with non-zero `output_nr`, do we even support that on views (I remember we used to assume it's always 0)? Is this the reason for `check_output_args`? ", "created_at": "2018-01-11T08:55:17Z", "updated_at": "2018-11-23T15:38:03Z", "html_url": "https://github.com/pytorch/pytorch/pull/4565#discussion_r160894653", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4565", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/160894653"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4565#discussion_r160894653"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4565"}}, "body_html": "<p>Is this ever used? Do we have functions that return multiple outputs and modify all of them? I'm a bit concerned of rebasing with non-zero <code>output_nr</code>, do we even support that on views (I remember we used to assume it's always 0)? Is this the reason for <code>check_output_args</code>?</p>", "body_text": "Is this ever used? Do we have functions that return multiple outputs and modify all of them? I'm a bit concerned of rebasing with non-zero output_nr, do we even support that on views (I remember we used to assume it's always 0)? Is this the reason for check_output_args?"}