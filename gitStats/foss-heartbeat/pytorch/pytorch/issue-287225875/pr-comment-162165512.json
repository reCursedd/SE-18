{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/162165512", "pull_request_review_id": 89575638, "id": 162165512, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MjE2NTUxMg==", "diff_hunk": "@@ -102,16 +102,15 @@ def should_generate_python_binding(declaration):\n         if re.match('^' + pattern + '$', name):\n             return False\n \n+    # TODO: fix handling of SparseTensor. We don't want to generate Python\n+    # bindings to SparseTensor overloads, such as add(Tensor, SparseTensor),\n+    # since the Tensor-based signature already dynamically dispatches correctly.\n+    # However, _sparse_mask only has a SparseTensor signature so we need to bind\n+    # that function.\n     for arg in declaration['arguments']:\n-        if arg['type'] == 'SparseTensor':\n+        if arg['type'] == 'SparseTensor' and declaration['name'] != '_sparse_mask':", "path": "tools/autograd/gen_python_functions.py", "position": null, "original_position": 38, "commit_id": "c7b63bd434ccce40348954794518030282ff0ddc", "original_commit_id": "feea2d48abd5baee3196dbb14ea3dea969266704", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "Not sure what you're asking. `arg['type'] == 'SparseTensor'` appears to be equivalent to `arg['dynamic_type'] == 'SparseTensor'`.\r\n\r\nThere are other functions which have overloads that take `SparseTensor`. They're:  add, add_, add_out. They get called dynamically from the non-SparseMask overload, so we don't want to bind them directly.\r\n\r\nThis is weird, but it's an artifact of the way we handle `SparseTensor` in ATen. It would probably be slightly better if `_sparse_mask` had the static type `Tensor` instead of `SparseTensor`\r\n", "created_at": "2018-01-17T20:10:14Z", "updated_at": "2018-11-23T15:38:16Z", "html_url": "https://github.com/pytorch/pytorch/pull/4565#discussion_r162165512", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4565", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/162165512"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4565#discussion_r162165512"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4565"}}, "body_html": "<p>Not sure what you're asking. <code>arg['type'] == 'SparseTensor'</code> appears to be equivalent to <code>arg['dynamic_type'] == 'SparseTensor'</code>.</p>\n<p>There are other functions which have overloads that take <code>SparseTensor</code>. They're:  add, add_, add_out. They get called dynamically from the non-SparseMask overload, so we don't want to bind them directly.</p>\n<p>This is weird, but it's an artifact of the way we handle <code>SparseTensor</code> in ATen. It would probably be slightly better if <code>_sparse_mask</code> had the static type <code>Tensor</code> instead of <code>SparseTensor</code></p>", "body_text": "Not sure what you're asking. arg['type'] == 'SparseTensor' appears to be equivalent to arg['dynamic_type'] == 'SparseTensor'.\nThere are other functions which have overloads that take SparseTensor. They're:  add, add_, add_out. They get called dynamically from the non-SparseMask overload, so we don't want to bind them directly.\nThis is weird, but it's an artifact of the way we handle SparseTensor in ATen. It would probably be slightly better if _sparse_mask had the static type Tensor instead of SparseTensor", "in_reply_to_id": 162150785}