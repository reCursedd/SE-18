{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/201891318", "pull_request_review_id": 136482080, "id": 201891318, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTg5MTMxOA==", "diff_hunk": "@@ -1,51 +1,377 @@\n #include \"caffe2/opt/optimize_ideep.h\"\n #include \"caffe2/opt/converter.h\"\n #include \"caffe2/opt/fusion.h\"\n-#include \"caffe2/utils/proto_utils.h\"\n+\n+#ifdef CAFFE2_USE_IDEEP\n+#include \"caffe2/ideep/ideep_utils.h\"\n+#endif\n \n namespace caffe2 {\n namespace opt {\n \n using namespace nom;\n \n-void OptimizeForIdeep(repr::NNModule* nn) {\n-  // Conv+Relu fusion\n-  auto should_fuse = [](const repr::Conv& conv) {\n-    const auto annotation = conv.getAnnotation();\n-    if (!annotation || !isa<Caffe2Annotation>(annotation)) {\n-      return false;\n+#ifndef CAFFE2_USE_IDEEP\n+void OptimizeForIdeep(repr::NNModule* nn, caffe2::Workspace* ws, bool training_mode) {\n+  LOG(WARNING) << \"Only support optimizations for IDEEP\";\n+}\n+\n+#else\n+USE_IDEEP_DEF_ALIASES();\n+\n+Blob* getBlob(repr::NNGraph::NodeRef node, caffe2::Workspace* ws) {\n+  auto tensor = repr::nn::get<repr::Tensor>(node);\n+  assert(ws->HasBlob(tensor->getName()) && \"Blob not in workspace\");\n+  return ws->GetBlob(tensor->getName());\n+}\n+\n+template<class T>\n+T* getTensor(Blob* blob) {\n+  assert(blob && \"Blob is invalid\");\n+  if (blob && blob->template IsType<T>()) {\n+    return blob->template GetMutable<T>();\n+  }\n+  return nullptr;\n+}\n+\n+const caffe2::OperatorDef* getOpDef(const repr::NeuralNetOperator& nnOp) {\n+  auto annotation = nnOp.getAnnotation();\n+  if (!annotation || !isa<Caffe2Annotation>(annotation)) {\n+    return nullptr;\n+  }\n+\n+  return dyn_cast<Caffe2Annotation>(annotation)->getOperatorDef();", "path": "caffe2/opt/optimize_ideep.cc", "position": null, "original_position": 50, "commit_id": "aedefb846360ef5234ec8bc895b061f884bc1afe", "original_commit_id": "17a7679bfdbc2b6bb546cb5973965e3081088116", "user": {"login": "gujinghui", "id": 31264804, "node_id": "MDQ6VXNlcjMxMjY0ODA0", "avatar_url": "https://avatars2.githubusercontent.com/u/31264804?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gujinghui", "html_url": "https://github.com/gujinghui", "followers_url": "https://api.github.com/users/gujinghui/followers", "following_url": "https://api.github.com/users/gujinghui/following{/other_user}", "gists_url": "https://api.github.com/users/gujinghui/gists{/gist_id}", "starred_url": "https://api.github.com/users/gujinghui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gujinghui/subscriptions", "organizations_url": "https://api.github.com/users/gujinghui/orgs", "repos_url": "https://api.github.com/users/gujinghui/repos", "events_url": "https://api.github.com/users/gujinghui/events{/privacy}", "received_events_url": "https://api.github.com/users/gujinghui/received_events", "type": "User", "site_admin": false}, "body": "fixed", "created_at": "2018-07-12T02:17:33Z", "updated_at": "2018-11-23T15:47:13Z", "html_url": "https://github.com/pytorch/pytorch/pull/9255#discussion_r201891318", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9255", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/201891318"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9255#discussion_r201891318"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9255"}}, "body_html": "<p>fixed</p>", "body_text": "fixed", "in_reply_to_id": 201803555}