{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/204956961", "pull_request_review_id": 140132646, "id": 204956961, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDk1Njk2MQ==", "diff_hunk": "@@ -260,18 +264,27 @@ struct OperatorRegistry  {\n   // by performing a lookup in the operators_by_sig map.\n   std::unordered_map<std::string, std::shared_ptr<Operator>> operators_by_sig;\n   std::unordered_map<const char *, std::shared_ptr<Operator>> operators_by_sig_literal;\n-  void registerOperator(Operator&& op){\n-    std::lock_guard<std::mutex> guard(lock);\n \n-    Symbol sym = Symbol::fromQualString(op.schema.name);\n-    auto op_ptr = std::make_shared<Operator>(std::move(op));\n-\n-    operators[sym].push_back(op_ptr);\n+  // XXX - caller must be holding lock\n+  void registerPendingOperators() {\n+    for(auto op : to_register) {\n+      Symbol sym = Symbol::fromQualString(op->schema().name);\n+      operators[sym].push_back(op);\n+      operators_by_sig[canonicalSchemaString(op->schema())] = op;\n+    }\n+    to_register.clear();\n+  }\n \n-    operators_by_sig[canonicalSchemaString(op.schema)] = op_ptr;\n+public:\n+  void registerOperator(Operator&& op) {\n+    std::lock_guard<std::mutex> guard(lock);\n+    to_register.push_back(std::make_shared<Operator>(std::move(op)));\n   }\n \n+\n   Operator& lookupByLiteral(const char * name) {\n+    std::lock_guard<std::mutex> guard(lock);", "path": "torch/csrc/jit/operator.cpp", "position": null, "original_position": 44, "commit_id": "ed66b6bd1e79db762a6b2538f4da00622d56869c", "original_commit_id": "1f794591f950f54eb975b14cf80f308d84bf7cc9", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "This lock was missing eventhough operators_by_sig_literal was being written to in this functions. I doubt an uncontended lock will add much overhead here.", "created_at": "2018-07-25T01:11:15Z", "updated_at": "2018-11-23T15:48:03Z", "html_url": "https://github.com/pytorch/pytorch/pull/9801#discussion_r204956961", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9801", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/204956961"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9801#discussion_r204956961"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9801"}}, "body_html": "<p>This lock was missing eventhough operators_by_sig_literal was being written to in this functions. I doubt an uncontended lock will add much overhead here.</p>", "body_text": "This lock was missing eventhough operators_by_sig_literal was being written to in this functions. I doubt an uncontended lock will add much overhead here."}