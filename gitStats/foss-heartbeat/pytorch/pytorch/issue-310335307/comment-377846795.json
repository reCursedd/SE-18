{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/377846795", "html_url": "https://github.com/pytorch/pytorch/pull/6172#issuecomment-377846795", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6172", "id": 377846795, "node_id": "MDEyOklzc3VlQ29tbWVudDM3Nzg0Njc5NQ==", "user": {"login": "fehiepsi", "id": 4736342, "node_id": "MDQ6VXNlcjQ3MzYzNDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/4736342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fehiepsi", "html_url": "https://github.com/fehiepsi", "followers_url": "https://api.github.com/users/fehiepsi/followers", "following_url": "https://api.github.com/users/fehiepsi/following{/other_user}", "gists_url": "https://api.github.com/users/fehiepsi/gists{/gist_id}", "starred_url": "https://api.github.com/users/fehiepsi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fehiepsi/subscriptions", "organizations_url": "https://api.github.com/users/fehiepsi/orgs", "repos_url": "https://api.github.com/users/fehiepsi/repos", "events_url": "https://api.github.com/users/fehiepsi/events{/privacy}", "received_events_url": "https://api.github.com/users/fehiepsi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-02T03:35:15Z", "updated_at": "2018-04-02T03:39:12Z", "author_association": "CONTRIBUTOR", "body_html": "<p>LGTM, thanks for fixing the bug <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=23639302\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vishwakftw\">@vishwakftw</a> ! Just a note that <code>term2</code> computation can be simplified</p>\n<pre><code>term2 = _batch_mm(_batch_inverse(q.scale_tril), p.scale_tril).pow(2).sum(-1)\n</code></pre>\n<p>And I think that you can alo move <code>_batch_mm</code> to the implementation of MultiraviteNormal distribution to simplify precision_matrix and covariance_matrix computation. But this is not necessary. ^^</p>", "body_text": "LGTM, thanks for fixing the bug @vishwakftw ! Just a note that term2 computation can be simplified\nterm2 = _batch_mm(_batch_inverse(q.scale_tril), p.scale_tril).pow(2).sum(-1)\n\nAnd I think that you can alo move _batch_mm to the implementation of MultiraviteNormal distribution to simplify precision_matrix and covariance_matrix computation. But this is not necessary. ^^", "body": "LGTM, thanks for fixing the bug @vishwakftw ! Just a note that `term2` computation can be simplified\r\n```\r\nterm2 = _batch_mm(_batch_inverse(q.scale_tril), p.scale_tril).pow(2).sum(-1)\r\n```\r\nAnd I think that you can alo move `_batch_mm` to the implementation of MultiraviteNormal distribution to simplify precision_matrix and covariance_matrix computation. But this is not necessary. ^^"}