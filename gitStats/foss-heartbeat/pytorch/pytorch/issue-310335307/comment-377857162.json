{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/377857162", "html_url": "https://github.com/pytorch/pytorch/pull/6172#issuecomment-377857162", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6172", "id": 377857162, "node_id": "MDEyOklzc3VlQ29tbWVudDM3Nzg1NzE2Mg==", "user": {"login": "fehiepsi", "id": 4736342, "node_id": "MDQ6VXNlcjQ3MzYzNDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/4736342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fehiepsi", "html_url": "https://github.com/fehiepsi", "followers_url": "https://api.github.com/users/fehiepsi/followers", "following_url": "https://api.github.com/users/fehiepsi/following{/other_user}", "gists_url": "https://api.github.com/users/fehiepsi/gists{/gist_id}", "starred_url": "https://api.github.com/users/fehiepsi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fehiepsi/subscriptions", "organizations_url": "https://api.github.com/users/fehiepsi/orgs", "repos_url": "https://api.github.com/users/fehiepsi/repos", "events_url": "https://api.github.com/users/fehiepsi/events{/privacy}", "received_events_url": "https://api.github.com/users/fehiepsi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-02T05:19:46Z", "updated_at": "2018-04-02T05:19:46Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I really want to use the simplified version of <code>term2</code>, it should be faster in term of speed if only <code>scale_tril</code> is available in two distributions (the mvn's <code>log_prob</code> computation also just depends on <code>scale_tril</code> terms)</p>\n<pre><code>term2 = _batch_mm(_batch_inverse(q.scale_tril), p.scale_tril).pow(2).sum(-1)\n</code></pre>", "body_text": "I really want to use the simplified version of term2, it should be faster in term of speed if only scale_tril is available in two distributions (the mvn's log_prob computation also just depends on scale_tril terms)\nterm2 = _batch_mm(_batch_inverse(q.scale_tril), p.scale_tril).pow(2).sum(-1)", "body": "I really want to use the simplified version of `term2`, it should be faster in term of speed if only `scale_tril` is available in two distributions (the mvn's `log_prob` computation also just depends on `scale_tril` terms)\r\n```\r\nterm2 = _batch_mm(_batch_inverse(q.scale_tril), p.scale_tril).pow(2).sum(-1)\r\n```"}