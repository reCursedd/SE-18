{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4275", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4275/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4275/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4275/events", "html_url": "https://github.com/pytorch/pytorch/issues/4275", "id": 283609096, "node_id": "MDU6SXNzdWUyODM2MDkwOTY=", "number": 4275, "title": "Scan or map_fn function to speed up custom RNN cell runtime", "user": {"login": "windweller", "id": 4699797, "node_id": "MDQ6VXNlcjQ2OTk3OTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/4699797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/windweller", "html_url": "https://github.com/windweller", "followers_url": "https://api.github.com/users/windweller/followers", "following_url": "https://api.github.com/users/windweller/following{/other_user}", "gists_url": "https://api.github.com/users/windweller/gists{/gist_id}", "starred_url": "https://api.github.com/users/windweller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/windweller/subscriptions", "organizations_url": "https://api.github.com/users/windweller/orgs", "repos_url": "https://api.github.com/users/windweller/repos", "events_url": "https://api.github.com/users/windweller/events{/privacy}", "received_events_url": "https://api.github.com/users/windweller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-20T15:54:19Z", "updated_at": "2017-12-20T17:07:53Z", "closed_at": "2017-12-20T16:02:32Z", "author_association": "NONE", "body_html": "<p>Hi,</p>\n<p>I think this is related also to this issue: Zoneout LSTM (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"202634918\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/561\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/561/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/561\">#561</a>)</p>\n<p>There are many instances where a custom RNN cell needs to be used:<br>\nZoneout LSTM, Variational Dropout, etc.</p>\n<p>Also to quote <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"221052363\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/1234\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/1234/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/1234\">#1234</a> Smerity's comment.</p>\n<p>Python is notoriously slow in its for-loop structure, and if a simple function that just executes Lua/C for-loop, even without CUDA optimization, should be faster than Python solutions.</p>\n<p>A function similar to Theano's scan or Tensorflow's map_fn would be very helpful!</p>", "body_text": "Hi,\nI think this is related also to this issue: Zoneout LSTM (#561)\nThere are many instances where a custom RNN cell needs to be used:\nZoneout LSTM, Variational Dropout, etc.\nAlso to quote #1234 Smerity's comment.\nPython is notoriously slow in its for-loop structure, and if a simple function that just executes Lua/C for-loop, even without CUDA optimization, should be faster than Python solutions.\nA function similar to Theano's scan or Tensorflow's map_fn would be very helpful!", "body": "Hi,\r\n\r\nI think this is related also to this issue: Zoneout LSTM (https://github.com/pytorch/pytorch/issues/561)\r\n\r\nThere are many instances where a custom RNN cell needs to be used:\r\nZoneout LSTM, Variational Dropout, etc.\r\n\r\nAlso to quote https://github.com/pytorch/pytorch/pull/1234 Smerity's comment.\r\n\r\nPython is notoriously slow in its for-loop structure, and if a simple function that just executes Lua/C for-loop, even without CUDA optimization, should be faster than Python solutions.\r\n\r\nA function similar to Theano's scan or Tensorflow's map_fn would be very helpful!"}