{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/439216858", "html_url": "https://github.com/pytorch/pytorch/pull/13774#issuecomment-439216858", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/13774", "id": 439216858, "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTIxNjg1OA==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-15T22:41:26Z", "updated_at": "2018-11-15T22:41:26Z", "author_association": "CONTRIBUTOR", "body_html": "<p>But it seems the tests are still failing:</p>\n<pre><code>Nov 09 17:50:06 \nNov 09 17:50:06 =================================== FAILURES ===================================\nNov 09 17:50:06 ___________________________ TestModels.test_densenet ___________________________\nNov 09 17:50:06 \nNov 09 17:50:06 self = &lt;test_models.TestModels testMethod=test_densenet&gt;\nNov 09 17:50:06 \nNov 09 17:50:06     def test_densenet(self):\nNov 09 17:50:06         # Densenet-121 model\nNov 09 17:50:06         x = Variable(torch.randn(BATCH_SIZE, 3, 224, 224).fill_(1.0))\nNov 09 17:50:06 &gt;       self.exportTest(toC(densenet121()), toC(x))\nNov 09 17:50:06 \nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/test_models.py:149: \nNov 09 17:50:06 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/test_models.py:51: in exportTest\nNov 09 17:50:06     verify(model, inputs, backend, rtol=rtol, atol=atol)\nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/verify.py:445: in verify\nNov 09 17:50:06     run(randomize_args(args))\nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/verify.py:425: in run\nNov 09 17:50:06     run_helper(torch_out, args)\nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/verify.py:439: in run_helper\nNov 09 17:50:06     errs.checkAlmostEqual(x.data.cpu().numpy(), y, \"In output {}\".format(i))\nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/verify.py:60: in checkAlmostEqual\nNov 09 17:50:06     self.almostEqualAndThen(x, y, msg, self.addErr)\nNov 09 17:50:06 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nNov 09 17:50:06 \nNov 09 17:50:06 self = &lt;verify.Errors object at 0x7f2ae2da5c50&gt;\nNov 09 17:50:06 x = array([[ 0.11339295,  0.52664566, -0.5282817 , ...,  0.60019535,\nNov 09 17:50:06         -0.70....5219744 , ...,  0.604505  ,\nNov 09 17:50:06         -0.7020387 ,  0.06566978]], dtype=float32)\nNov 09 17:50:06 y = array([[ 0.11339286,  0.5266453 , -0.5282816 , ...,  0.6001954 ,\nNov 09 17:50:06         -0.70....5219741 , ...,  0.60450494,\nNov 09 17:50:06         -0.70203865,  0.06566991]], dtype=float32)\nNov 09 17:50:06 msg = 'In output 0'\nNov 09 17:50:06 k = &lt;bound method Errors.addErr of &lt;verify.Errors object at 0x7f2ae2da5c50&gt;&gt;\nNov 09 17:50:06 \nNov 09 17:50:06     def almostEqualAndThen(self, x, y, msg, k):\nNov 09 17:50:06         \"\"\"\nNov 09 17:50:06             Helper for implementing 'requireAlmostEqual' and 'checkAlmostEqual'.\nNov 09 17:50:06             Upon failure, invokes continuation 'k' with the error message.\nNov 09 17:50:06     \nNov 09 17:50:06             At the moment, only tests on 'numpy.ndarray' are supported.\nNov 09 17:50:06             \"\"\"\nNov 09 17:50:06         if isinstance(x, np.ndarray) and isinstance(y, np.ndarray):\nNov 09 17:50:06             try:\nNov 09 17:50:06 &gt;               np.testing.assert_allclose(x, y, rtol=self.rtol, atol=self.atol, equal_nan=False, verbose=True)\nNov 09 17:50:06 E               AssertionError: \nNov 09 17:50:06 E               Not equal to tolerance rtol=0.01, atol=1e-07\nNov 09 17:50:06 E               \nNov 09 17:50:06 E               (mismatch 0.05%)\nNov 09 17:50:06 E                x: array([ 0.113393,  0.526646, -0.528282, ...,  0.604505, -0.702039,\nNov 09 17:50:06 E                       0.06567 ], dtype=float32)\nNov 09 17:50:06 E                y: array([ 0.113393,  0.526645, -0.528282, ...,  0.604505, -0.702039,\nNov 09 17:50:06 E                       0.06567 ], dtype=float32)\nNov 09 17:50:06 \nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/verify.py:71: AssertionError\nNov 09 17:50:06 ______________________ TestCaffe2BackendEmbed.test_resnet ______________________\nNov 09 17:50:06 \nNov 09 17:50:06 self = &lt;test_pytorch_onnx_caffe2.TestCaffe2BackendEmbed testMethod=test_resnet&gt;\nNov 09 17:50:06 \nNov 09 17:50:06     def test_resnet(self):\nNov 09 17:50:06         state_dict = model_zoo.load_url(model_urls['resnet50'], progress=False)\nNov 09 17:50:06         self.run_model_test(resnet50(), train=False, batch_size=BATCH_SIZE,\nNov 09 17:50:06 &gt;                           state_dict=state_dict, atol=1e-6)\nNov 09 17:50:06 \nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/test_pytorch_onnx_caffe2.py:405: \nNov 09 17:50:06 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/test_pytorch_onnx_caffe2.py:186: in run_model_test\nNov 09 17:50:06     example_outputs=example_outputs)\nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/test_pytorch_onnx_caffe2.py:177: in run_actual_test\nNov 09 17:50:06     verify.verify(model, input, c2, rtol=rtol, atol=atol)\nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/verify.py:445: in verify\nNov 09 17:50:06     run(randomize_args(args))\nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/verify.py:425: in run\nNov 09 17:50:06     run_helper(torch_out, args)\nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/verify.py:439: in run_helper\nNov 09 17:50:06     errs.checkAlmostEqual(x.data.cpu().numpy(), y, \"In output {}\".format(i))\nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/verify.py:60: in checkAlmostEqual\nNov 09 17:50:06     self.almostEqualAndThen(x, y, msg, self.addErr)\nNov 09 17:50:06 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nNov 09 17:50:06 \nNov 09 17:50:06 self = &lt;verify.Errors object at 0x7f2a8e023ed0&gt;\nNov 09 17:50:06 x = array([[-2.312549  , -0.6950716 , -0.26810262, ..., -1.5320209 ,\nNov 09 17:50:06         -1.64....25414407, ..., -1.3733028 ,\nNov 09 17:50:06         -1.3013324 ,  2.2900457 ]], dtype=float32)\nNov 09 17:50:06 y = array([[-2.3125494 , -0.69507074, -0.26810348, ..., -1.5320204 ,\nNov 09 17:50:06         -1.64....254143  , ..., -1.3733065 ,\nNov 09 17:50:06         -1.301334  ,  2.290045  ]], dtype=float32)\nNov 09 17:50:06 msg = 'In output 0'\nNov 09 17:50:06 k = &lt;bound method Errors.addErr of &lt;verify.Errors object at 0x7f2a8e023ed0&gt;&gt;\nNov 09 17:50:06 \nNov 09 17:50:06     def almostEqualAndThen(self, x, y, msg, k):\nNov 09 17:50:06         \"\"\"\nNov 09 17:50:06             Helper for implementing 'requireAlmostEqual' and 'checkAlmostEqual'.\nNov 09 17:50:06             Upon failure, invokes continuation 'k' with the error message.\nNov 09 17:50:06     \nNov 09 17:50:06             At the moment, only tests on 'numpy.ndarray' are supported.\nNov 09 17:50:06             \"\"\"\nNov 09 17:50:06         if isinstance(x, np.ndarray) and isinstance(y, np.ndarray):\nNov 09 17:50:06             try:\nNov 09 17:50:06 &gt;               np.testing.assert_allclose(x, y, rtol=self.rtol, atol=self.atol, equal_nan=False, verbose=True)\nNov 09 17:50:06 E               AssertionError: \nNov 09 17:50:06 E               Not equal to tolerance rtol=0.001, atol=1e-06\nNov 09 17:50:06 E               \nNov 09 17:50:06 E               (mismatch 0.05%)\nNov 09 17:50:06 E                x: array([-2.312549, -0.695072, -0.268103, ..., -1.373303, -1.301332,\nNov 09 17:50:06 E                       2.290046], dtype=float32)\nNov 09 17:50:06 E                y: array([-2.312549, -0.695071, -0.268103, ..., -1.373307, -1.301334,\nNov 09 17:50:06 E                       2.290045], dtype=float32)\nNov 09 17:50:06 \n</code></pre>", "body_text": "But it seems the tests are still failing:\nNov 09 17:50:06 \nNov 09 17:50:06 =================================== FAILURES ===================================\nNov 09 17:50:06 ___________________________ TestModels.test_densenet ___________________________\nNov 09 17:50:06 \nNov 09 17:50:06 self = <test_models.TestModels testMethod=test_densenet>\nNov 09 17:50:06 \nNov 09 17:50:06     def test_densenet(self):\nNov 09 17:50:06         # Densenet-121 model\nNov 09 17:50:06         x = Variable(torch.randn(BATCH_SIZE, 3, 224, 224).fill_(1.0))\nNov 09 17:50:06 >       self.exportTest(toC(densenet121()), toC(x))\nNov 09 17:50:06 \nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/test_models.py:149: \nNov 09 17:50:06 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/test_models.py:51: in exportTest\nNov 09 17:50:06     verify(model, inputs, backend, rtol=rtol, atol=atol)\nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/verify.py:445: in verify\nNov 09 17:50:06     run(randomize_args(args))\nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/verify.py:425: in run\nNov 09 17:50:06     run_helper(torch_out, args)\nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/verify.py:439: in run_helper\nNov 09 17:50:06     errs.checkAlmostEqual(x.data.cpu().numpy(), y, \"In output {}\".format(i))\nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/verify.py:60: in checkAlmostEqual\nNov 09 17:50:06     self.almostEqualAndThen(x, y, msg, self.addErr)\nNov 09 17:50:06 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nNov 09 17:50:06 \nNov 09 17:50:06 self = <verify.Errors object at 0x7f2ae2da5c50>\nNov 09 17:50:06 x = array([[ 0.11339295,  0.52664566, -0.5282817 , ...,  0.60019535,\nNov 09 17:50:06         -0.70....5219744 , ...,  0.604505  ,\nNov 09 17:50:06         -0.7020387 ,  0.06566978]], dtype=float32)\nNov 09 17:50:06 y = array([[ 0.11339286,  0.5266453 , -0.5282816 , ...,  0.6001954 ,\nNov 09 17:50:06         -0.70....5219741 , ...,  0.60450494,\nNov 09 17:50:06         -0.70203865,  0.06566991]], dtype=float32)\nNov 09 17:50:06 msg = 'In output 0'\nNov 09 17:50:06 k = <bound method Errors.addErr of <verify.Errors object at 0x7f2ae2da5c50>>\nNov 09 17:50:06 \nNov 09 17:50:06     def almostEqualAndThen(self, x, y, msg, k):\nNov 09 17:50:06         \"\"\"\nNov 09 17:50:06             Helper for implementing 'requireAlmostEqual' and 'checkAlmostEqual'.\nNov 09 17:50:06             Upon failure, invokes continuation 'k' with the error message.\nNov 09 17:50:06     \nNov 09 17:50:06             At the moment, only tests on 'numpy.ndarray' are supported.\nNov 09 17:50:06             \"\"\"\nNov 09 17:50:06         if isinstance(x, np.ndarray) and isinstance(y, np.ndarray):\nNov 09 17:50:06             try:\nNov 09 17:50:06 >               np.testing.assert_allclose(x, y, rtol=self.rtol, atol=self.atol, equal_nan=False, verbose=True)\nNov 09 17:50:06 E               AssertionError: \nNov 09 17:50:06 E               Not equal to tolerance rtol=0.01, atol=1e-07\nNov 09 17:50:06 E               \nNov 09 17:50:06 E               (mismatch 0.05%)\nNov 09 17:50:06 E                x: array([ 0.113393,  0.526646, -0.528282, ...,  0.604505, -0.702039,\nNov 09 17:50:06 E                       0.06567 ], dtype=float32)\nNov 09 17:50:06 E                y: array([ 0.113393,  0.526645, -0.528282, ...,  0.604505, -0.702039,\nNov 09 17:50:06 E                       0.06567 ], dtype=float32)\nNov 09 17:50:06 \nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/verify.py:71: AssertionError\nNov 09 17:50:06 ______________________ TestCaffe2BackendEmbed.test_resnet ______________________\nNov 09 17:50:06 \nNov 09 17:50:06 self = <test_pytorch_onnx_caffe2.TestCaffe2BackendEmbed testMethod=test_resnet>\nNov 09 17:50:06 \nNov 09 17:50:06     def test_resnet(self):\nNov 09 17:50:06         state_dict = model_zoo.load_url(model_urls['resnet50'], progress=False)\nNov 09 17:50:06         self.run_model_test(resnet50(), train=False, batch_size=BATCH_SIZE,\nNov 09 17:50:06 >                           state_dict=state_dict, atol=1e-6)\nNov 09 17:50:06 \nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/test_pytorch_onnx_caffe2.py:405: \nNov 09 17:50:06 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/test_pytorch_onnx_caffe2.py:186: in run_model_test\nNov 09 17:50:06     example_outputs=example_outputs)\nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/test_pytorch_onnx_caffe2.py:177: in run_actual_test\nNov 09 17:50:06     verify.verify(model, input, c2, rtol=rtol, atol=atol)\nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/verify.py:445: in verify\nNov 09 17:50:06     run(randomize_args(args))\nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/verify.py:425: in run\nNov 09 17:50:06     run_helper(torch_out, args)\nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/verify.py:439: in run_helper\nNov 09 17:50:06     errs.checkAlmostEqual(x.data.cpu().numpy(), y, \"In output {}\".format(i))\nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/verify.py:60: in checkAlmostEqual\nNov 09 17:50:06     self.almostEqualAndThen(x, y, msg, self.addErr)\nNov 09 17:50:06 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nNov 09 17:50:06 \nNov 09 17:50:06 self = <verify.Errors object at 0x7f2a8e023ed0>\nNov 09 17:50:06 x = array([[-2.312549  , -0.6950716 , -0.26810262, ..., -1.5320209 ,\nNov 09 17:50:06         -1.64....25414407, ..., -1.3733028 ,\nNov 09 17:50:06         -1.3013324 ,  2.2900457 ]], dtype=float32)\nNov 09 17:50:06 y = array([[-2.3125494 , -0.69507074, -0.26810348, ..., -1.5320204 ,\nNov 09 17:50:06         -1.64....254143  , ..., -1.3733065 ,\nNov 09 17:50:06         -1.301334  ,  2.290045  ]], dtype=float32)\nNov 09 17:50:06 msg = 'In output 0'\nNov 09 17:50:06 k = <bound method Errors.addErr of <verify.Errors object at 0x7f2a8e023ed0>>\nNov 09 17:50:06 \nNov 09 17:50:06     def almostEqualAndThen(self, x, y, msg, k):\nNov 09 17:50:06         \"\"\"\nNov 09 17:50:06             Helper for implementing 'requireAlmostEqual' and 'checkAlmostEqual'.\nNov 09 17:50:06             Upon failure, invokes continuation 'k' with the error message.\nNov 09 17:50:06     \nNov 09 17:50:06             At the moment, only tests on 'numpy.ndarray' are supported.\nNov 09 17:50:06             \"\"\"\nNov 09 17:50:06         if isinstance(x, np.ndarray) and isinstance(y, np.ndarray):\nNov 09 17:50:06             try:\nNov 09 17:50:06 >               np.testing.assert_allclose(x, y, rtol=self.rtol, atol=self.atol, equal_nan=False, verbose=True)\nNov 09 17:50:06 E               AssertionError: \nNov 09 17:50:06 E               Not equal to tolerance rtol=0.001, atol=1e-06\nNov 09 17:50:06 E               \nNov 09 17:50:06 E               (mismatch 0.05%)\nNov 09 17:50:06 E                x: array([-2.312549, -0.695072, -0.268103, ..., -1.373303, -1.301332,\nNov 09 17:50:06 E                       2.290046], dtype=float32)\nNov 09 17:50:06 E                y: array([-2.312549, -0.695071, -0.268103, ..., -1.373307, -1.301334,\nNov 09 17:50:06 E                       2.290045], dtype=float32)\nNov 09 17:50:06", "body": "But it seems the tests are still failing:\r\n\r\n```\r\nNov 09 17:50:06 \r\nNov 09 17:50:06 =================================== FAILURES ===================================\r\nNov 09 17:50:06 ___________________________ TestModels.test_densenet ___________________________\r\nNov 09 17:50:06 \r\nNov 09 17:50:06 self = <test_models.TestModels testMethod=test_densenet>\r\nNov 09 17:50:06 \r\nNov 09 17:50:06     def test_densenet(self):\r\nNov 09 17:50:06         # Densenet-121 model\r\nNov 09 17:50:06         x = Variable(torch.randn(BATCH_SIZE, 3, 224, 224).fill_(1.0))\r\nNov 09 17:50:06 >       self.exportTest(toC(densenet121()), toC(x))\r\nNov 09 17:50:06 \r\nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/test_models.py:149: \r\nNov 09 17:50:06 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/test_models.py:51: in exportTest\r\nNov 09 17:50:06     verify(model, inputs, backend, rtol=rtol, atol=atol)\r\nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/verify.py:445: in verify\r\nNov 09 17:50:06     run(randomize_args(args))\r\nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/verify.py:425: in run\r\nNov 09 17:50:06     run_helper(torch_out, args)\r\nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/verify.py:439: in run_helper\r\nNov 09 17:50:06     errs.checkAlmostEqual(x.data.cpu().numpy(), y, \"In output {}\".format(i))\r\nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/verify.py:60: in checkAlmostEqual\r\nNov 09 17:50:06     self.almostEqualAndThen(x, y, msg, self.addErr)\r\nNov 09 17:50:06 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\nNov 09 17:50:06 \r\nNov 09 17:50:06 self = <verify.Errors object at 0x7f2ae2da5c50>\r\nNov 09 17:50:06 x = array([[ 0.11339295,  0.52664566, -0.5282817 , ...,  0.60019535,\r\nNov 09 17:50:06         -0.70....5219744 , ...,  0.604505  ,\r\nNov 09 17:50:06         -0.7020387 ,  0.06566978]], dtype=float32)\r\nNov 09 17:50:06 y = array([[ 0.11339286,  0.5266453 , -0.5282816 , ...,  0.6001954 ,\r\nNov 09 17:50:06         -0.70....5219741 , ...,  0.60450494,\r\nNov 09 17:50:06         -0.70203865,  0.06566991]], dtype=float32)\r\nNov 09 17:50:06 msg = 'In output 0'\r\nNov 09 17:50:06 k = <bound method Errors.addErr of <verify.Errors object at 0x7f2ae2da5c50>>\r\nNov 09 17:50:06 \r\nNov 09 17:50:06     def almostEqualAndThen(self, x, y, msg, k):\r\nNov 09 17:50:06         \"\"\"\r\nNov 09 17:50:06             Helper for implementing 'requireAlmostEqual' and 'checkAlmostEqual'.\r\nNov 09 17:50:06             Upon failure, invokes continuation 'k' with the error message.\r\nNov 09 17:50:06     \r\nNov 09 17:50:06             At the moment, only tests on 'numpy.ndarray' are supported.\r\nNov 09 17:50:06             \"\"\"\r\nNov 09 17:50:06         if isinstance(x, np.ndarray) and isinstance(y, np.ndarray):\r\nNov 09 17:50:06             try:\r\nNov 09 17:50:06 >               np.testing.assert_allclose(x, y, rtol=self.rtol, atol=self.atol, equal_nan=False, verbose=True)\r\nNov 09 17:50:06 E               AssertionError: \r\nNov 09 17:50:06 E               Not equal to tolerance rtol=0.01, atol=1e-07\r\nNov 09 17:50:06 E               \r\nNov 09 17:50:06 E               (mismatch 0.05%)\r\nNov 09 17:50:06 E                x: array([ 0.113393,  0.526646, -0.528282, ...,  0.604505, -0.702039,\r\nNov 09 17:50:06 E                       0.06567 ], dtype=float32)\r\nNov 09 17:50:06 E                y: array([ 0.113393,  0.526645, -0.528282, ...,  0.604505, -0.702039,\r\nNov 09 17:50:06 E                       0.06567 ], dtype=float32)\r\nNov 09 17:50:06 \r\nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/verify.py:71: AssertionError\r\nNov 09 17:50:06 ______________________ TestCaffe2BackendEmbed.test_resnet ______________________\r\nNov 09 17:50:06 \r\nNov 09 17:50:06 self = <test_pytorch_onnx_caffe2.TestCaffe2BackendEmbed testMethod=test_resnet>\r\nNov 09 17:50:06 \r\nNov 09 17:50:06     def test_resnet(self):\r\nNov 09 17:50:06         state_dict = model_zoo.load_url(model_urls['resnet50'], progress=False)\r\nNov 09 17:50:06         self.run_model_test(resnet50(), train=False, batch_size=BATCH_SIZE,\r\nNov 09 17:50:06 >                           state_dict=state_dict, atol=1e-6)\r\nNov 09 17:50:06 \r\nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/test_pytorch_onnx_caffe2.py:405: \r\nNov 09 17:50:06 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/test_pytorch_onnx_caffe2.py:186: in run_model_test\r\nNov 09 17:50:06     example_outputs=example_outputs)\r\nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/test_pytorch_onnx_caffe2.py:177: in run_actual_test\r\nNov 09 17:50:06     verify.verify(model, input, c2, rtol=rtol, atol=atol)\r\nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/verify.py:445: in verify\r\nNov 09 17:50:06     run(randomize_args(args))\r\nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/verify.py:425: in run\r\nNov 09 17:50:06     run_helper(torch_out, args)\r\nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/verify.py:439: in run_helper\r\nNov 09 17:50:06     errs.checkAlmostEqual(x.data.cpu().numpy(), y, \"In output {}\".format(i))\r\nNov 09 17:50:06 /var/lib/jenkins/workspace/test/onnx/verify.py:60: in checkAlmostEqual\r\nNov 09 17:50:06     self.almostEqualAndThen(x, y, msg, self.addErr)\r\nNov 09 17:50:06 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\nNov 09 17:50:06 \r\nNov 09 17:50:06 self = <verify.Errors object at 0x7f2a8e023ed0>\r\nNov 09 17:50:06 x = array([[-2.312549  , -0.6950716 , -0.26810262, ..., -1.5320209 ,\r\nNov 09 17:50:06         -1.64....25414407, ..., -1.3733028 ,\r\nNov 09 17:50:06         -1.3013324 ,  2.2900457 ]], dtype=float32)\r\nNov 09 17:50:06 y = array([[-2.3125494 , -0.69507074, -0.26810348, ..., -1.5320204 ,\r\nNov 09 17:50:06         -1.64....254143  , ..., -1.3733065 ,\r\nNov 09 17:50:06         -1.301334  ,  2.290045  ]], dtype=float32)\r\nNov 09 17:50:06 msg = 'In output 0'\r\nNov 09 17:50:06 k = <bound method Errors.addErr of <verify.Errors object at 0x7f2a8e023ed0>>\r\nNov 09 17:50:06 \r\nNov 09 17:50:06     def almostEqualAndThen(self, x, y, msg, k):\r\nNov 09 17:50:06         \"\"\"\r\nNov 09 17:50:06             Helper for implementing 'requireAlmostEqual' and 'checkAlmostEqual'.\r\nNov 09 17:50:06             Upon failure, invokes continuation 'k' with the error message.\r\nNov 09 17:50:06     \r\nNov 09 17:50:06             At the moment, only tests on 'numpy.ndarray' are supported.\r\nNov 09 17:50:06             \"\"\"\r\nNov 09 17:50:06         if isinstance(x, np.ndarray) and isinstance(y, np.ndarray):\r\nNov 09 17:50:06             try:\r\nNov 09 17:50:06 >               np.testing.assert_allclose(x, y, rtol=self.rtol, atol=self.atol, equal_nan=False, verbose=True)\r\nNov 09 17:50:06 E               AssertionError: \r\nNov 09 17:50:06 E               Not equal to tolerance rtol=0.001, atol=1e-06\r\nNov 09 17:50:06 E               \r\nNov 09 17:50:06 E               (mismatch 0.05%)\r\nNov 09 17:50:06 E                x: array([-2.312549, -0.695072, -0.268103, ..., -1.373303, -1.301332,\r\nNov 09 17:50:06 E                       2.290046], dtype=float32)\r\nNov 09 17:50:06 E                y: array([-2.312549, -0.695071, -0.268103, ..., -1.373307, -1.301334,\r\nNov 09 17:50:06 E                       2.290045], dtype=float32)\r\nNov 09 17:50:06 \r\n```"}