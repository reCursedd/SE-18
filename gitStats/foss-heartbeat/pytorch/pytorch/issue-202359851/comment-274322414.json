{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/274322414", "html_url": "https://github.com/pytorch/pytorch/issues/541#issuecomment-274322414", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/541", "id": 274322414, "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDMyMjQxNA==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-22T10:27:28Z", "updated_at": "2017-01-22T10:27:28Z", "author_association": "MEMBER", "body_html": "<p>It will always create a tensor of a corresponding type. It doesn't do a memory copy, and only views onto <code>ndarray</code>'s memory, so it can't use a different data type, or you'd see complete garbage there.</p>\n<p><code>y.dtype</code> is <code>dtype('float64')</code> i.e. <code>double</code>. E.g. this:</p>\n<div class=\"highlight highlight-source-python\"><pre>y <span class=\"pl-k\">=</span> np.array([[<span class=\"pl-c1\">1</span>., <span class=\"pl-c1\">2</span>., <span class=\"pl-c1\">3</span>.],\n              [<span class=\"pl-c1\">4</span>., <span class=\"pl-c1\">5</span>., <span class=\"pl-c1\">6</span>.]], <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>np.int32)\n\ntorch.from_numpy(y)</pre></div>\n<p>gives</p>\n<pre><code> 1  2  3\n 4  5  6\n[torch.IntTensor of size 2x3]\n</code></pre>", "body_text": "It will always create a tensor of a corresponding type. It doesn't do a memory copy, and only views onto ndarray's memory, so it can't use a different data type, or you'd see complete garbage there.\ny.dtype is dtype('float64') i.e. double. E.g. this:\ny = np.array([[1., 2., 3.],\n              [4., 5., 6.]], dtype=np.int32)\n\ntorch.from_numpy(y)\ngives\n 1  2  3\n 4  5  6\n[torch.IntTensor of size 2x3]", "body": "It will always create a tensor of a corresponding type. It doesn't do a memory copy, and only views onto `ndarray`'s memory, so it can't use a different data type, or you'd see complete garbage there.\r\n\r\n`y.dtype` is `dtype('float64')` i.e. `double`. E.g. this:\r\n\r\n```python\r\ny = np.array([[1., 2., 3.],\r\n              [4., 5., 6.]], dtype=np.int32)\r\n\r\ntorch.from_numpy(y)\r\n```\r\n\r\ngives\r\n```\r\n 1  2  3\r\n 4  5  6\r\n[torch.IntTensor of size 2x3]\r\n```"}