{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/182397738", "pull_request_review_id": 113179855, "id": 182397738, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjM5NzczOA==", "diff_hunk": "@@ -586,87 +613,162 @@ def state_dict(self, destination=None, prefix='', keep_vars=False):\n         \"\"\"\n         if destination is None:\n             destination = OrderedDict()\n+            destination._versions = OrderedDict()\n+        if hasattr(destination, '_versions'):\n+            destination._versions[prefix + 'version'] = self._version\n         for name, param in self._parameters.items():\n             if param is not None:\n                 destination[prefix + name] = param if keep_vars else param.data\n         for name, buf in self._buffers.items():\n             if buf is not None:\n                 destination[prefix + name] = buf\n-        for name, module in self._modules.items():\n-            if module is not None:\n-                module.state_dict(destination, prefix + name + '.', keep_vars=keep_vars)\n+        if not no_child:\n+            for name, module in self._modules.items():\n+                if module is not None:\n+                    module.state_dict(destination, prefix + name + '.', keep_vars=keep_vars)\n         return destination\n \n-    def _load_state_dict_key_mismatch(self, full_name, name, is_missing):\n-        r\"\"\"This is called in :meth:`~torch.nn.Module.load_state_dict` when\n-        there is state dict key mismatch in ``strict=True`` mode. This method\n-        can be overridden by subclasses to raise class-specific errors.\n-\n-        When :attr:`is_missing` is ``True``, :attr:`full_name` can not be found in\n-        the dict being loaded. When :attr:`is_missing` is ``False``,\n-        :attr:`full_name` is unexpected in the dict being loaded.\n+    def load_local_state_dict(self, local_state_dict, version, strict):", "path": "torch/nn/modules/module.py", "position": null, "original_position": 95, "commit_id": "051a8e1e9def17d9617615d95745202900890bda", "original_commit_id": "4bea5da8073e121be0817538180a5acc65c8d571", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "I'm not sure if we want to add this to the API just yet. E.g. `_version` is a private attribute, but it is necessary if someone would like to use it. On the other hand, making every `nn.Module` have a `.version` attr doesn't seem nice. Let's just keep it private so it can get into the release quickly, and later we can think of ways to clean it up", "created_at": "2018-04-18T11:47:45Z", "updated_at": "2018-11-23T15:42:43Z", "html_url": "https://github.com/pytorch/pytorch/pull/6639#discussion_r182397738", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6639", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/182397738"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6639#discussion_r182397738"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6639"}}, "body_html": "<p>I'm not sure if we want to add this to the API just yet. E.g. <code>_version</code> is a private attribute, but it is necessary if someone would like to use it. On the other hand, making every <code>nn.Module</code> have a <code>.version</code> attr doesn't seem nice. Let's just keep it private so it can get into the release quickly, and later we can think of ways to clean it up</p>", "body_text": "I'm not sure if we want to add this to the API just yet. E.g. _version is a private attribute, but it is necessary if someone would like to use it. On the other hand, making every nn.Module have a .version attr doesn't seem nice. Let's just keep it private so it can get into the release quickly, and later we can think of ways to clean it up", "in_reply_to_id": 182397413}