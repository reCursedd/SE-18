{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/182475060", "pull_request_review_id": 113277806, "id": 182475060, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjQ3NTA2MA==", "diff_hunk": "@@ -11,22 +13,27 @@ def __init__(self, num_features, eps=1e-5, momentum=0.1, affine=False,\n     def _check_input_dim(self, input):\n         return NotImplemented\n \n-    def _load_state_dict_key_mismatch(self, full_name, name, is_missing):\n-        if not is_missing and not self.track_running_stats and \\\n-                name in ('running_mean', 'running_var'):\n-            raise KeyError(\n-                'Unexpected running stats buffer \"{name}\" in state_dict for '\n-                '{klass} with track_running_stats=False. If you are trying to '\n-                'load a checkpoint saved before 0.4.0, this may be expected '\n-                'because {klass} does not track running stats by default '\n-                'anymore since 0.4.0. If running stats are not used, remove '\n-                'them from state_dict before calling load_state_dict. '\n-                'Otherwise, set track_running_stats=True in {klass} to use '\n-                'running stats. See the documentation of {klass} for more '\n-                'details.'\n-                .format(name=full_name, klass=self.__class__.__name__))\n-        super(_InstanceNorm, self)._load_state_dict_key_mismatch(\n-            full_name, name, is_missing)\n+    def load_local_state_dict(self, local_state_dict, version, strict):\n+        # at version 0: removed running_mean and running_var when\n+        # track_running_stats=False (default)\n+        if version is None and not self.track_running_stats:\n+            running_stats_keys = tuple(k for k in ('running_mean', 'running_var') if k in local_state_dict)\n+            if len(running_stats_keys) > 0:\n+                warnings.warn(\n+                    'Unexpected running stats buffer(s) {names} in state_dict '\n+                    'for {klass} with track_running_stats=False. If you are '\n+                    'trying to load a checkpoint saved before 0.4.0, this may '\n+                    'be expected because {klass} does not track running stats '\n+                    'by default anymore since 0.4.0. These buffers won\\'t be '\n+                    'actually loaded. If these stats are actually needed, set '\n+                    'track_running_stats=True in {klass} to enable running '\n+                    'stats. See the documentation of {klass} for details.'\n+                    .format(names=\" and \".join('\"{}\"'.format(k) for k in running_stats_keys),\n+                            klass=self.__class__.__name__))", "path": "torch/nn/modules/instancenorm.py", "position": null, "original_position": 42, "commit_id": "051a8e1e9def17d9617615d95745202900890bda", "original_commit_id": "4bea5da8073e121be0817538180a5acc65c8d571", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "body": "The more I worked on tutorials code (and my research code), the more I want this to be a warning. So many people will try using community repo code to load existing checkpoints trained with InstanceNorm, and we can't rely on the repos being updated. From the users perspective, they may not be familiar with how state_dict works, or even not very familiar with PyTorch, but just want to run a cool model like neural style transfer. So I really really want to have this as warning.", "created_at": "2018-04-18T15:43:02Z", "updated_at": "2018-11-23T15:42:45Z", "html_url": "https://github.com/pytorch/pytorch/pull/6639#discussion_r182475060", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6639", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/182475060"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6639#discussion_r182475060"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6639"}}, "body_html": "<p>The more I worked on tutorials code (and my research code), the more I want this to be a warning. So many people will try using community repo code to load existing checkpoints trained with InstanceNorm, and we can't rely on the repos being updated. From the users perspective, they may not be familiar with how state_dict works, or even not very familiar with PyTorch, but just want to run a cool model like neural style transfer. So I really really want to have this as warning.</p>", "body_text": "The more I worked on tutorials code (and my research code), the more I want this to be a warning. So many people will try using community repo code to load existing checkpoints trained with InstanceNorm, and we can't rely on the repos being updated. From the users perspective, they may not be familiar with how state_dict works, or even not very familiar with PyTorch, but just want to run a cool model like neural style transfer. So I really really want to have this as warning.", "in_reply_to_id": 182396434}