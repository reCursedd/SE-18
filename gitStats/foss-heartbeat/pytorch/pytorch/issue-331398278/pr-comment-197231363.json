{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/197231363", "pull_request_review_id": 130936202, "id": 197231363, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzIzMTM2Mw==", "diff_hunk": "@@ -421,6 +443,18 @@ auto Engine::evaluate_function(FunctionTask& task) -> void {\n           continue;\n         }\n       }\n+\n+      #ifdef USE_CUDA\n+        // Switches to and syncs with child's stream (if needed)\n+        const auto child_device = output.is_cuda() ? output.get_device() : -1;\n+        auto child_stream = next.function->input_metadata(next.input_nr).stream();\n+        auto_gpu_stream.set(child_device, child_stream);\n+        if (parent_device != -1 && child_device != -1 && parent_stream != child_stream) {\n+          cuda_event.record(parent_stream);", "path": "torch/csrc/autograd/engine.cpp", "position": null, "original_position": 54, "commit_id": "1b56a400c446aabd207a90585845ab81545bbcdd", "original_commit_id": "22005755d16488109039ddeff5a1dad5aeeb457a", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Uh this is not obvious at all, and since it seems like a general purpose struct, I'd rather avoid doing this implicitly. Maybe we could have an `IdempotentCUDAEvent`, or any other name that would signify it's a one-time thing?", "created_at": "2018-06-21T18:17:29Z", "updated_at": "2018-11-23T15:46:02Z", "html_url": "https://github.com/pytorch/pytorch/pull/8354#discussion_r197231363", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8354", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/197231363"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8354#discussion_r197231363"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8354"}}, "body_html": "<p>Uh this is not obvious at all, and since it seems like a general purpose struct, I'd rather avoid doing this implicitly. Maybe we could have an <code>IdempotentCUDAEvent</code>, or any other name that would signify it's a one-time thing?</p>", "body_text": "Uh this is not obvious at all, and since it seems like a general purpose struct, I'd rather avoid doing this implicitly. Maybe we could have an IdempotentCUDAEvent, or any other name that would signify it's a one-time thing?", "in_reply_to_id": 197226770}