{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/8354", "id": 194139376, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk0MTM5Mzc2", "html_url": "https://github.com/pytorch/pytorch/pull/8354", "diff_url": "https://github.com/pytorch/pytorch/pull/8354.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/8354.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8354", "number": 8354, "state": "open", "locked": false, "title": "Updates autograd engine to respect streams set in forward", "user": {"login": "mruberry", "id": 38511765, "node_id": "MDQ6VXNlcjM4NTExNzY1", "avatar_url": "https://avatars3.githubusercontent.com/u/38511765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mruberry", "html_url": "https://github.com/mruberry", "followers_url": "https://api.github.com/users/mruberry/followers", "following_url": "https://api.github.com/users/mruberry/following{/other_user}", "gists_url": "https://api.github.com/users/mruberry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mruberry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mruberry/subscriptions", "organizations_url": "https://api.github.com/users/mruberry/orgs", "repos_url": "https://api.github.com/users/mruberry/repos", "events_url": "https://api.github.com/users/mruberry/events{/privacy}", "received_events_url": "https://api.github.com/users/mruberry/received_events", "type": "User", "site_admin": false}, "body": "This PR addresses issue #7601.\r\n\r\nCurrently models that use streams explicitly in forward have to do a lot of extra work to make backwards respect those streams. This PR extends the (recently added) input tracing (see TypeAndShape) to record the devices and streams of inputs. The autograd engine then uses this metadata to enact the expected stream parallelism without extra work from the user.\r\n\r\nFor example, a model with forward declared like (original example courtesy of @ngimel):\r\n\r\n```\r\ndef forward(self,x):\r\n        x0 = x.clone()\r\n        torch._C._cuda_setStream(self.stream1._cdata)\r\n        y0 = self.fc1(x0)\r\n        self.event1.record(stream = torch.cuda.current_stream())\r\n        \r\n        torch._C._cuda_setStream(self.stream2._cdata)\r\n        y1 = self.fc2(x)\r\n        self.event2.record(stream = torch.cuda.current_stream())\r\n        self.stream2.wait_event(self.event1)\r\n        return y0 + y1\r\n```\r\n\r\ncurrently will backward on a single stream. With this change the kernels will go on the streams they are assigned in forward and both forward and backward will (for appropriate sizes) run the fc1 and fc2 kernels simultaneously.\r\n\r\nThe crux of this change is, as mentioned, an expansion of the TypeAndShape tracing and a relatively simple change to the autograd engine to use cuda events for stream synchronization. To make this efficient I also added a new AutoGPUAndStream class, exposed getting and setting streams on devices, and removed InputBuffer's AutoGPU (it's now redundant). While making these modifications I also fixed AutoGPU to check before setting the GPU when it's destroyed and to use THCudaCheck instead of its custom error handler. These changes mean that an often excessive cudaSetDevice() is not being called when inputs are added to a buffer.\r\n\r\nIn addition to allowing users to easily set and use streams that are respected in both forward and backward, this change may encourage modules to do the same and the expanded tracing might allow further optimizations in the autograd engine. (@apaszke, for example, now after initial enumeration we know the number of devices that will be used by a graph task, which might help provide a sense of the \"level of parallelism\" we should expect.) \r\n\r\n", "created_at": "2018-06-12T00:45:42Z", "updated_at": "2018-11-23T15:46:04Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "6d97cede88f0fdcadd0bf3b4765cfc9ed29d4a52", "assignee": null, "assignees": [], "requested_reviewers": [{"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8354/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8354/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8354/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/1b56a400c446aabd207a90585845ab81545bbcdd", "head": {"label": "mruberry:stream_respect", "ref": "stream_respect", "sha": "1b56a400c446aabd207a90585845ab81545bbcdd", "user": {"login": "mruberry", "id": 38511765, "node_id": "MDQ6VXNlcjM4NTExNzY1", "avatar_url": "https://avatars3.githubusercontent.com/u/38511765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mruberry", "html_url": "https://github.com/mruberry", "followers_url": "https://api.github.com/users/mruberry/followers", "following_url": "https://api.github.com/users/mruberry/following{/other_user}", "gists_url": "https://api.github.com/users/mruberry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mruberry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mruberry/subscriptions", "organizations_url": "https://api.github.com/users/mruberry/orgs", "repos_url": "https://api.github.com/users/mruberry/repos", "events_url": "https://api.github.com/users/mruberry/events{/privacy}", "received_events_url": "https://api.github.com/users/mruberry/received_events", "type": "User", "site_admin": false}, "repo": {"id": 130132886, "node_id": "MDEwOlJlcG9zaXRvcnkxMzAxMzI4ODY=", "name": "pytorch", "full_name": "mruberry/pytorch", "private": false, "owner": {"login": "mruberry", "id": 38511765, "node_id": "MDQ6VXNlcjM4NTExNzY1", "avatar_url": "https://avatars3.githubusercontent.com/u/38511765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mruberry", "html_url": "https://github.com/mruberry", "followers_url": "https://api.github.com/users/mruberry/followers", "following_url": "https://api.github.com/users/mruberry/following{/other_user}", "gists_url": "https://api.github.com/users/mruberry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mruberry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mruberry/subscriptions", "organizations_url": "https://api.github.com/users/mruberry/orgs", "repos_url": "https://api.github.com/users/mruberry/repos", "events_url": "https://api.github.com/users/mruberry/events{/privacy}", "received_events_url": "https://api.github.com/users/mruberry/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/mruberry/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": true, "url": "https://api.github.com/repos/mruberry/pytorch", "forks_url": "https://api.github.com/repos/mruberry/pytorch/forks", "keys_url": "https://api.github.com/repos/mruberry/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/mruberry/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/mruberry/pytorch/teams", "hooks_url": "https://api.github.com/repos/mruberry/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/mruberry/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/mruberry/pytorch/events", "assignees_url": "https://api.github.com/repos/mruberry/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/mruberry/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/mruberry/pytorch/tags", "blobs_url": "https://api.github.com/repos/mruberry/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/mruberry/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/mruberry/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/mruberry/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/mruberry/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/mruberry/pytorch/languages", "stargazers_url": "https://api.github.com/repos/mruberry/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/mruberry/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/mruberry/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/mruberry/pytorch/subscription", "commits_url": "https://api.github.com/repos/mruberry/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/mruberry/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/mruberry/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/mruberry/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/mruberry/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/mruberry/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/mruberry/pytorch/merges", "archive_url": "https://api.github.com/repos/mruberry/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/mruberry/pytorch/downloads", "issues_url": "https://api.github.com/repos/mruberry/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/mruberry/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/mruberry/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/mruberry/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/mruberry/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/mruberry/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/mruberry/pytorch/deployments", "created_at": "2018-04-18T23:24:38Z", "updated_at": "2018-06-07T02:21:06Z", "pushed_at": "2018-11-02T19:48:38Z", "git_url": "git://github.com/mruberry/pytorch.git", "ssh_url": "git@github.com:mruberry/pytorch.git", "clone_url": "https://github.com/mruberry/pytorch.git", "svn_url": "https://github.com/mruberry/pytorch", "homepage": "http://pytorch.org", "size": 82858, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "cf5a21e4a1cd923c82f0089025536368db169481", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T14:27:35Z", "pushed_at": "2018-11-24T12:42:01Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89656, "stargazers_count": 21591, "watchers_count": 21591, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5154, "mirror_url": null, "archived": false, "open_issues_count": 2196, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5154, "open_issues": 2196, "watchers": 21591, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8354"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8354"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/8354"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/8354/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8354/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8354/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/1b56a400c446aabd207a90585845ab81545bbcdd"}}, "author_association": "CONTRIBUTOR", "body_html": "<p>This PR addresses issue <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"323420582\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/7601\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/7601/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/7601\">#7601</a>.</p>\n<p>Currently models that use streams explicitly in forward have to do a lot of extra work to make backwards respect those streams. This PR extends the (recently added) input tracing (see TypeAndShape) to record the devices and streams of inputs. The autograd engine then uses this metadata to enact the expected stream parallelism without extra work from the user.</p>\n<p>For example, a model with forward declared like (original example courtesy of <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=15841449\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ngimel\">@ngimel</a>):</p>\n<pre><code>def forward(self,x):\n        x0 = x.clone()\n        torch._C._cuda_setStream(self.stream1._cdata)\n        y0 = self.fc1(x0)\n        self.event1.record(stream = torch.cuda.current_stream())\n        \n        torch._C._cuda_setStream(self.stream2._cdata)\n        y1 = self.fc2(x)\n        self.event2.record(stream = torch.cuda.current_stream())\n        self.stream2.wait_event(self.event1)\n        return y0 + y1\n</code></pre>\n<p>currently will backward on a single stream. With this change the kernels will go on the streams they are assigned in forward and both forward and backward will (for appropriate sizes) run the fc1 and fc2 kernels simultaneously.</p>\n<p>The crux of this change is, as mentioned, an expansion of the TypeAndShape tracing and a relatively simple change to the autograd engine to use cuda events for stream synchronization. To make this efficient I also added a new AutoGPUAndStream class, exposed getting and setting streams on devices, and removed InputBuffer's AutoGPU (it's now redundant). While making these modifications I also fixed AutoGPU to check before setting the GPU when it's destroyed and to use THCudaCheck instead of its custom error handler. These changes mean that an often excessive cudaSetDevice() is not being called when inputs are added to a buffer.</p>\n<p>In addition to allowing users to easily set and use streams that are respected in both forward and backward, this change may encourage modules to do the same and the expanded tracing might allow further optimizations in the autograd engine. (<a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a>, for example, now after initial enumeration we know the number of devices that will be used by a graph task, which might help provide a sense of the \"level of parallelism\" we should expect.)</p>", "body_text": "This PR addresses issue #7601.\nCurrently models that use streams explicitly in forward have to do a lot of extra work to make backwards respect those streams. This PR extends the (recently added) input tracing (see TypeAndShape) to record the devices and streams of inputs. The autograd engine then uses this metadata to enact the expected stream parallelism without extra work from the user.\nFor example, a model with forward declared like (original example courtesy of @ngimel):\ndef forward(self,x):\n        x0 = x.clone()\n        torch._C._cuda_setStream(self.stream1._cdata)\n        y0 = self.fc1(x0)\n        self.event1.record(stream = torch.cuda.current_stream())\n        \n        torch._C._cuda_setStream(self.stream2._cdata)\n        y1 = self.fc2(x)\n        self.event2.record(stream = torch.cuda.current_stream())\n        self.stream2.wait_event(self.event1)\n        return y0 + y1\n\ncurrently will backward on a single stream. With this change the kernels will go on the streams they are assigned in forward and both forward and backward will (for appropriate sizes) run the fc1 and fc2 kernels simultaneously.\nThe crux of this change is, as mentioned, an expansion of the TypeAndShape tracing and a relatively simple change to the autograd engine to use cuda events for stream synchronization. To make this efficient I also added a new AutoGPUAndStream class, exposed getting and setting streams on devices, and removed InputBuffer's AutoGPU (it's now redundant). While making these modifications I also fixed AutoGPU to check before setting the GPU when it's destroyed and to use THCudaCheck instead of its custom error handler. These changes mean that an often excessive cudaSetDevice() is not being called when inputs are added to a buffer.\nIn addition to allowing users to easily set and use streams that are respected in both forward and backward, this change may encourage modules to do the same and the expanded tracing might allow further optimizations in the autograd engine. (@apaszke, for example, now after initial enumeration we know the number of devices that will be used by a graph task, which might help provide a sense of the \"level of parallelism\" we should expect.)", "merged": false, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": null, "comments": 28, "review_comments": 53, "maintainer_can_modify": true, "commits": 1, "additions": 176, "deletions": 8, "changed_files": 7}