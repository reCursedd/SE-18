{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/195042129", "pull_request_review_id": 128327687, "id": 195042129, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTA0MjEyOQ==", "diff_hunk": "@@ -3,16 +3,37 @@\n #include <ATen/ATen.h>\n #include \"torch/csrc/assertions.h\"\n \n+#ifdef WITH_CUDA\n+  #include \"THC/THCStream.h\"\n+#endif \n+\n namespace torch { namespace autograd {\n \n /// A tensor's type and shape. Each Function records the required type and\n /// shape of its inputs. If is_valid() is false, then the corresponding input\n /// is not used and may be an undefined tensor.\n struct TypeAndShape {\n-  TypeAndShape() : type_(nullptr) {}\n+  static constexpr int NO_DEVICE = -2;\n+\n+  TypeAndShape() : type_{nullptr}, device_{NO_DEVICE} {}", "path": "torch/csrc/autograd/type_and_shape.h", "position": null, "original_position": 17, "commit_id": "1b56a400c446aabd207a90585845ab81545bbcdd", "original_commit_id": "7dd9e9af116357ebf28f049edc4d981686631187", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Also, can we make it constructible from a tensor? This would let us simplify the `add_input_metadata` call to take an `at::Tensor`, and we could avoid changing all the call sites in case of future changes like this one.", "created_at": "2018-06-13T11:08:26Z", "updated_at": "2018-11-23T15:45:26Z", "html_url": "https://github.com/pytorch/pytorch/pull/8354#discussion_r195042129", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8354", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/195042129"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8354#discussion_r195042129"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8354"}}, "body_html": "<p>Also, can we make it constructible from a tensor? This would let us simplify the <code>add_input_metadata</code> call to take an <code>at::Tensor</code>, and we could avoid changing all the call sites in case of future changes like this one.</p>", "body_text": "Also, can we make it constructible from a tensor? This would let us simplify the add_input_metadata call to take an at::Tensor, and we could avoid changing all the call sites in case of future changes like this one.", "in_reply_to_id": 195042002}