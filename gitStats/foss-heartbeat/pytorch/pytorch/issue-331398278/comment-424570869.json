{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/424570869", "html_url": "https://github.com/pytorch/pytorch/pull/8354#issuecomment-424570869", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8354", "id": 424570869, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDU3MDg2OQ==", "user": {"login": "mruberry", "id": 38511765, "node_id": "MDQ6VXNlcjM4NTExNzY1", "avatar_url": "https://avatars3.githubusercontent.com/u/38511765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mruberry", "html_url": "https://github.com/mruberry", "followers_url": "https://api.github.com/users/mruberry/followers", "following_url": "https://api.github.com/users/mruberry/following{/other_user}", "gists_url": "https://api.github.com/users/mruberry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mruberry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mruberry/subscriptions", "organizations_url": "https://api.github.com/users/mruberry/orgs", "repos_url": "https://api.github.com/users/mruberry/repos", "events_url": "https://api.github.com/users/mruberry/events{/privacy}", "received_events_url": "https://api.github.com/users/mruberry/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-26T03:16:48Z", "updated_at": "2018-09-26T04:22:51Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Following <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7799218\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mcarilli\">@mcarilli</a>'s thoughtful analysis, we can certainly make whatever changes are desired, including running the final callbacks on the default streams.</p>\n<p>[unrelated] By the way, reading the code suggests the <del>default</del> final callbacks would be cleared during reentant backwards. Have we tested ddp with reentrant backwards scenarios? I think gradient checkpointing uses reentant backwards, for example. I could propose a fix for this problem, too, in a follow-up PR. [/unrelated]</p>", "body_text": "Following @mcarilli's thoughtful analysis, we can certainly make whatever changes are desired, including running the final callbacks on the default streams.\n[unrelated] By the way, reading the code suggests the default final callbacks would be cleared during reentant backwards. Have we tested ddp with reentrant backwards scenarios? I think gradient checkpointing uses reentant backwards, for example. I could propose a fix for this problem, too, in a follow-up PR. [/unrelated]", "body": "Following @mcarilli's thoughtful analysis, we can certainly make whatever changes are desired, including running the final callbacks on the default streams.\r\n\r\n[unrelated] By the way, reading the code suggests the ~~default~~ final callbacks would be cleared during reentant backwards. Have we tested ddp with reentrant backwards scenarios? I think gradient checkpointing uses reentant backwards, for example. I could propose a fix for this problem, too, in a follow-up PR. [/unrelated]"}