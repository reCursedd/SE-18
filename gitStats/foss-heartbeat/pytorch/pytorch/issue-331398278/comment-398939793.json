{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/398939793", "html_url": "https://github.com/pytorch/pytorch/pull/8354#issuecomment-398939793", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8354", "id": 398939793, "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODkzOTc5Mw==", "user": {"login": "mruberry", "id": 38511765, "node_id": "MDQ6VXNlcjM4NTExNzY1", "avatar_url": "https://avatars3.githubusercontent.com/u/38511765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mruberry", "html_url": "https://github.com/mruberry", "followers_url": "https://api.github.com/users/mruberry/followers", "following_url": "https://api.github.com/users/mruberry/following{/other_user}", "gists_url": "https://api.github.com/users/mruberry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mruberry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mruberry/subscriptions", "organizations_url": "https://api.github.com/users/mruberry/orgs", "repos_url": "https://api.github.com/users/mruberry/repos", "events_url": "https://api.github.com/users/mruberry/events{/privacy}", "received_events_url": "https://api.github.com/users/mruberry/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-21T00:35:11Z", "updated_at": "2018-06-21T01:07:26Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I incorporated the feedback and merged with master. Between taking advantages of changes in master and <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a>'s suggestions I think the code is now in excellent shape. In particular:</p>\n<p>(1) I reverted any changes to auto_gpu.h since it had been updated in master (to DeviceGuard)<br>\n(2) I incorporated a DeviceGuard in AutoGPUStream and extended AutoGPUStream to allow calling set()<br>\n(3) The engine.cpp code was further simplified by an update to input_buffer adding a method that returns an index to its first valid cuda tensor<br>\n(4) I updated the name of CUDAEvent<br>\n(5) I merged the existing out of date metadata check in variable.cpp's set_data with the check I added when attempting to acquire a variable's gradient accumulator<br>\n(6) I simplified the code for checking for out of date metadata by adding a new method to InputMetadata</p>\n<p>There are two failures in the CI and both appear unrelated:</p>\n<p>(1) The failure on caffe2-py2-gcc4.8-ubuntu14.04-test appears to be an unrelated timeout. It is also happening in other PRs.<br>\n(2) The failure on pytorch-macos-10.13-py3 also appears to be an unrelated complaint about data loader. I don't believe the failing test touches any of the changed code, even. This build also appears to be failing in other PRs.</p>", "body_text": "I incorporated the feedback and merged with master. Between taking advantages of changes in master and @apaszke's suggestions I think the code is now in excellent shape. In particular:\n(1) I reverted any changes to auto_gpu.h since it had been updated in master (to DeviceGuard)\n(2) I incorporated a DeviceGuard in AutoGPUStream and extended AutoGPUStream to allow calling set()\n(3) The engine.cpp code was further simplified by an update to input_buffer adding a method that returns an index to its first valid cuda tensor\n(4) I updated the name of CUDAEvent\n(5) I merged the existing out of date metadata check in variable.cpp's set_data with the check I added when attempting to acquire a variable's gradient accumulator\n(6) I simplified the code for checking for out of date metadata by adding a new method to InputMetadata\nThere are two failures in the CI and both appear unrelated:\n(1) The failure on caffe2-py2-gcc4.8-ubuntu14.04-test appears to be an unrelated timeout. It is also happening in other PRs.\n(2) The failure on pytorch-macos-10.13-py3 also appears to be an unrelated complaint about data loader. I don't believe the failing test touches any of the changed code, even. This build also appears to be failing in other PRs.", "body": "I incorporated the feedback and merged with master. Between taking advantages of changes in master and @apaszke's suggestions I think the code is now in excellent shape. In particular:\r\n\r\n(1) I reverted any changes to auto_gpu.h since it had been updated in master (to DeviceGuard)\r\n(2) I incorporated a DeviceGuard in AutoGPUStream and extended AutoGPUStream to allow calling set()\r\n(3) The engine.cpp code was further simplified by an update to input_buffer adding a method that returns an index to its first valid cuda tensor\r\n(4) I updated the name of CUDAEvent\r\n(5) I merged the existing out of date metadata check in variable.cpp's set_data with the check I added when attempting to acquire a variable's gradient accumulator\r\n(6) I simplified the code for checking for out of date metadata by adding a new method to InputMetadata\r\n\r\nThere are two failures in the CI and both appear unrelated:\r\n\r\n(1) The failure on caffe2-py2-gcc4.8-ubuntu14.04-test appears to be an unrelated timeout. It is also happening in other PRs.\r\n(2) The failure on pytorch-macos-10.13-py3 also appears to be an unrelated complaint about data loader. I don't believe the failing test touches any of the changed code, even. This build also appears to be failing in other PRs.\r\n\r\n"}