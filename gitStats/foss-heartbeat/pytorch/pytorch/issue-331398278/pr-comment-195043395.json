{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/195043395", "pull_request_review_id": 128327687, "id": 195043395, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTA0MzM5NQ==", "diff_hunk": "@@ -392,6 +433,53 @@ auto Engine::evaluate_function(FunctionTask& task) -> void {\n       is_ready = true;\n     }\n \n+    // Switches to child's stream for adding to InputBuffer\n+    // If the child's stream is different from the parent's, \n+    // creates (once) an event and has the child wait on it\n+    #ifdef WITH_CUDA\n+      if (next.function->num_inputs() <= 0) {\n+        throw std::runtime_error(std::string(\"child function with no inputs: \" + next.function->name()));\n+      }\n+      \n+      // Sets the child's device and stream\n+      const int child_device = output.is_cuda() ? output.get_device() : - 1;\n+      const TypeAndShape& child_metadata = next.function->input_metadata(next.input_nr);\n+      auto child_stream = child_metadata.stream();\n+\n+      // Handles metadata mismatch\n+      child_stream = \n+        (child_stream != nullptr \n+        && THCStream_device(child_stream) == child_device)\n+        ? child_stream\n+        : nullptr;\n+\n+      AutoGPUStream child_auto_gpu_stream{\n+          child_device\n+        , child_stream};\n+\n+      if (child_stream == nullptr) {\n+        child_stream = auto_gpu_stream.reset_stream();\n+      }\n+\n+      // Sync parent and child streams (only if they both exist)\n+      // CPU -> CPU tasks are synchronized since there is only one CPU thread\n+      // CPU -> GPU and GPU -> CPU tasks must implement their own synchronization\n+      if (parent_stream != nullptr && child_stream != nullptr && parent_stream != child_stream) {\n+        // Creates the event (once)\n+        if(!has_event) {\n+          THCudaCheck(cudaEventCreateWithFlags(&event, cudaEventDisableTiming));\n+          THCudaCheck(cudaEventRecord(event, THCStream_stream(parent_stream)));\n+          has_event = true;\n+        }\n+\n+        // Has the child stream wait for the parent to be complete\n+        THCudaCheck(cudaStreamWaitEvent(\n+          THCStream_stream(child_metadata.stream())\n+        , event\n+        , 0));\n+      }\n+    #endif ", "path": "torch/csrc/autograd/engine.cpp", "position": null, "original_position": 144, "commit_id": "1b56a400c446aabd207a90585845ab81545bbcdd", "original_commit_id": "7dd9e9af116357ebf28f049edc4d981686631187", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Wow, this is complicated. This has to at least become a helper function, because it adds a ton of unnecessary noise to `evaluate_function`.", "created_at": "2018-06-13T11:13:49Z", "updated_at": "2018-11-23T15:45:26Z", "html_url": "https://github.com/pytorch/pytorch/pull/8354#discussion_r195043395", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8354", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/195043395"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8354#discussion_r195043395"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8354"}}, "body_html": "<p>Wow, this is complicated. This has to at least become a helper function, because it adds a ton of unnecessary noise to <code>evaluate_function</code>.</p>", "body_text": "Wow, this is complicated. This has to at least become a helper function, because it adds a ton of unnecessary noise to evaluate_function."}