{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/196554224", "pull_request_review_id": 130129980, "id": 196554224, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NjU1NDIyNA==", "diff_hunk": "@@ -0,0 +1,35 @@\n+#pragma once\n+\n+// RAII struct to to record and wait on CUDA events\n+\n+#ifdef USE_CUDA\n+\n+#include \"cuda.h\"\n+#include \"cuda_runtime.h\"\n+#include <ATen/ATen.h>\n+#include <THC/THC.h>\n+\n+struct AutoCUDAEvent {\n+  AutoCUDAEvent() = default;\n+  ~AutoCUDAEvent() {\n+    if (is_created) THCudaCheck(cudaEventDestroy(event));\n+  }\n+\n+  void record(THCStream* stream) {\n+    if (!is_created) {\n+      THCudaCheck(cudaEventCreateWithFlags(&event, cudaEventDisableTiming));\n+      THCudaCheck(cudaEventRecord(event, THCStream_stream(stream)));\n+      is_created = true;\n+    } \n+  }\n+\n+  void wait_on(THCStream* stream) {", "path": "torch/csrc/utils/auto_cuda_event.h", "position": null, "original_position": 26, "commit_id": "1b56a400c446aabd207a90585845ab81545bbcdd", "original_commit_id": "36598758d04d2104d5604f038ccd5a31b0377fe2", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "This is a bit misleading beacuse `evt.wait_on(stream)` makes `stream` wait on `evt`. How about `evt.block(stream)`?", "created_at": "2018-06-19T19:45:34Z", "updated_at": "2018-11-23T15:45:47Z", "html_url": "https://github.com/pytorch/pytorch/pull/8354#discussion_r196554224", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8354", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/196554224"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8354#discussion_r196554224"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8354"}}, "body_html": "<p>This is a bit misleading beacuse <code>evt.wait_on(stream)</code> makes <code>stream</code> wait on <code>evt</code>. How about <code>evt.block(stream)</code>?</p>", "body_text": "This is a bit misleading beacuse evt.wait_on(stream) makes stream wait on evt. How about evt.block(stream)?"}