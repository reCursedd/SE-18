{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/423780313", "html_url": "https://github.com/pytorch/pytorch/issues/11974#issuecomment-423780313", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11974", "id": 423780313, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzc4MDMxMw==", "user": {"login": "mingminzhen", "id": 6447981, "node_id": "MDQ6VXNlcjY0NDc5ODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/6447981?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mingminzhen", "html_url": "https://github.com/mingminzhen", "followers_url": "https://api.github.com/users/mingminzhen/followers", "following_url": "https://api.github.com/users/mingminzhen/following{/other_user}", "gists_url": "https://api.github.com/users/mingminzhen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mingminzhen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mingminzhen/subscriptions", "organizations_url": "https://api.github.com/users/mingminzhen/orgs", "repos_url": "https://api.github.com/users/mingminzhen/repos", "events_url": "https://api.github.com/users/mingminzhen/events{/privacy}", "received_events_url": "https://api.github.com/users/mingminzhen/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-22T23:24:15Z", "updated_at": "2018-09-22T23:24:15Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a> I want to implement some layers manually for forward and backward. And shared memory is used. So i want to specify the output tensor and grad (shared memory). It can be referred to <a href=\"https://github.com/gpleiss/efficient_densenet_pytorch/blob/noncontiguous/models/densenet_efficient.py\">https://github.com/gpleiss/efficient_densenet_pytorch/blob/noncontiguous/models/densenet_efficient.py</a>, which uses the funciton:</p>\n<pre><code>torch._C._cudnn_convolution_full_forward(\n            input, weight, None, output,\n            self.padding, self.stride, self.dilation,\n            self.groups, cudnn.benchmark)\n\n</code></pre>", "body_text": "@SsnL I want to implement some layers manually for forward and backward. And shared memory is used. So i want to specify the output tensor and grad (shared memory). It can be referred to https://github.com/gpleiss/efficient_densenet_pytorch/blob/noncontiguous/models/densenet_efficient.py, which uses the funciton:\ntorch._C._cudnn_convolution_full_forward(\n            input, weight, None, output,\n            self.padding, self.stride, self.dilation,\n            self.groups, cudnn.benchmark)", "body": "@SsnL I want to implement some layers manually for forward and backward. And shared memory is used. So i want to specify the output tensor and grad (shared memory). It can be referred to https://github.com/gpleiss/efficient_densenet_pytorch/blob/noncontiguous/models/densenet_efficient.py, which uses the funciton:\r\n\r\n```\r\ntorch._C._cudnn_convolution_full_forward(\r\n            input, weight, None, output,\r\n            self.padding, self.stride, self.dilation,\r\n            self.groups, cudnn.benchmark)\r\n\r\n```"}