{"url": "https://api.github.com/repos/pytorch/pytorch/issues/6514", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6514/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6514/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6514/events", "html_url": "https://github.com/pytorch/pytorch/issues/6514", "id": 313439689, "node_id": "MDU6SXNzdWUzMTM0Mzk2ODk=", "number": 6514, "title": "[feature request] Complex multiplication", "user": {"login": "vadimkantorov", "id": 1041752, "node_id": "MDQ6VXNlcjEwNDE3NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1041752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimkantorov", "html_url": "https://github.com/vadimkantorov", "followers_url": "https://api.github.com/users/vadimkantorov/followers", "following_url": "https://api.github.com/users/vadimkantorov/following{/other_user}", "gists_url": "https://api.github.com/users/vadimkantorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimkantorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimkantorov/subscriptions", "organizations_url": "https://api.github.com/users/vadimkantorov/orgs", "repos_url": "https://api.github.com/users/vadimkantorov/repos", "events_url": "https://api.github.com/users/vadimkantorov/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimkantorov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 897288569, "node_id": "MDU6TGFiZWw4OTcyODg1Njk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/pytorch", "name": "pytorch", "color": "f05732", "default": false}, {"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-11T18:34:45Z", "updated_at": "2018-05-14T19:48:33Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>Currently one can do it manually, but it would be nice to have it in core, since FFT functions have landed.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span> for Nx2 tensors</span>\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">complex_multiplication</span>(<span class=\"pl-smi\">t1</span>, <span class=\"pl-smi\">t2</span>):\n  real1, imag1 <span class=\"pl-k\">=</span> t1.t()\n  real2, imag2 <span class=\"pl-k\">=</span> t2.t()\n  <span class=\"pl-k\">return</span> torch.stack([real1 <span class=\"pl-k\">*</span> real2 <span class=\"pl-k\">-</span> imag1 <span class=\"pl-k\">*</span> imag2, real1 <span class=\"pl-k\">*</span> imag2 <span class=\"pl-k\">+</span> imag1 <span class=\"pl-k\">*</span> real2], <span class=\"pl-v\">dim</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>)</pre></div>", "body_text": "Currently one can do it manually, but it would be nice to have it in core, since FFT functions have landed.\n# for Nx2 tensors\ndef complex_multiplication(t1, t2):\n  real1, imag1 = t1.t()\n  real2, imag2 = t2.t()\n  return torch.stack([real1 * real2 - imag1 * imag2, real1 * imag2 + imag1 * real2], dim = -1)", "body": "Currently one can do it manually, but it would be nice to have it in core, since FFT functions have landed.\r\n\r\n```python\r\n# for Nx2 tensors\r\ndef complex_multiplication(t1, t2):\r\n  real1, imag1 = t1.t()\r\n  real2, imag2 = t2.t()\r\n  return torch.stack([real1 * real2 - imag1 * imag2, real1 * imag2 + imag1 * real2], dim = -1)\r\n```\r\n        "}