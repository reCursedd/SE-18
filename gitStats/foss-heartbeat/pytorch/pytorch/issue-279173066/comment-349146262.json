{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/349146262", "html_url": "https://github.com/pytorch/pytorch/pull/4015#issuecomment-349146262", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4015", "id": 349146262, "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTE0NjI2Mg==", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-04T23:46:51Z", "updated_at": "2017-12-04T23:46:51Z", "author_association": "MEMBER", "body_html": "<p><code>share_memory_()</code> is in-place and transparent (all tensors which share the same storage will be moved to shared memory together).</p>\n<p><code>pin_memory()</code> returns a new tensor (or Variable in this case). That means the result should have requires_grad set appropriately and have a <code>grad_fn</code> if necessary.</p>", "body_text": "share_memory_() is in-place and transparent (all tensors which share the same storage will be moved to shared memory together).\npin_memory() returns a new tensor (or Variable in this case). That means the result should have requires_grad set appropriately and have a grad_fn if necessary.", "body": "`share_memory_()` is in-place and transparent (all tensors which share the same storage will be moved to shared memory together).\r\n\r\n`pin_memory()` returns a new tensor (or Variable in this case). That means the result should have requires_grad set appropriately and have a `grad_fn` if necessary."}