{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/328873696", "html_url": "https://github.com/pytorch/pytorch/pull/2697#issuecomment-328873696", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2697", "id": 328873696, "node_id": "MDEyOklzc3VlQ29tbWVudDMyODg3MzY5Ng==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-12T14:39:34Z", "updated_at": "2017-09-12T14:39:34Z", "author_association": "CONTRIBUTOR", "body_html": "<p>So, this doesn't necessarily block this PR, but I just realized that there is another problem with input/output names in onnx_caffe2, and one that is actually reasonably likely to occur in practice. Suppose that the last operation before output is an inplace operation. When the Caffe2 reference implementation transforms the ONNX proto into Caffe2 proto, it rewrites the output names of inplace ops into the same name as the one that was fed in (since the operation was done inplace.)</p>\n<p>Oops! Now you've lost the output name that you carefully put into ONNX.</p>", "body_text": "So, this doesn't necessarily block this PR, but I just realized that there is another problem with input/output names in onnx_caffe2, and one that is actually reasonably likely to occur in practice. Suppose that the last operation before output is an inplace operation. When the Caffe2 reference implementation transforms the ONNX proto into Caffe2 proto, it rewrites the output names of inplace ops into the same name as the one that was fed in (since the operation was done inplace.)\nOops! Now you've lost the output name that you carefully put into ONNX.", "body": "So, this doesn't necessarily block this PR, but I just realized that there is another problem with input/output names in onnx_caffe2, and one that is actually reasonably likely to occur in practice. Suppose that the last operation before output is an inplace operation. When the Caffe2 reference implementation transforms the ONNX proto into Caffe2 proto, it rewrites the output names of inplace ops into the same name as the one that was fed in (since the operation was done inplace.)\r\n\r\nOops! Now you've lost the output name that you carefully put into ONNX."}