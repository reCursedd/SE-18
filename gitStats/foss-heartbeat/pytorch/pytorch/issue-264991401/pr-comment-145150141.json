{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/145150141", "pull_request_review_id": 69907045, "id": 145150141, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTE1MDE0MQ==", "diff_hunk": "@@ -4417,6 +4417,29 @@ def test_inplace_division(self):\n         id_after = id(t)\n         self.assertEqual(id_before, id_after)\n \n+    def test_contiguous(self):\n+        # x has to have batch_size 1 to test contiguous checks\n+        x = torch.randn(1, 16, 5, 5)\n+        assert x.is_contiguous()\n+        stride = list(x.stride())\n+        stride[0] = 20\n+        # change the stride in dimension 0. the tensor is still contiguous because size[0] is 1\n+        x.set_(x.storage(), 0, x.size(), stride)\n+        assert x.is_contiguous()\n+\n+    @unittest.skipIf(not torch.cuda.is_available(), \"CUDA unavailable\")\n+    def test_contiguous_cuda(self):\n+        # x has to have batch_size 1 to test contiguous checks\n+        x = torch.randn(1, 16, 5, 5).cuda()\n+        assert x.is_contiguous()\n+        stride = list(x.stride())\n+        stride[0] = 20\n+        # change the stride in dimension 0. the tensor is still contiguous because size[0] is 1\n+        x.set_(x.storage(), 0, x.size(), stride)\n+        assert x.is_contiguous()\n+        new_x = x.contiguous()\n+        self.assertEqual(new_x.stride(), [400, 25, 5, 1])", "path": "test/test_torch.py", "position": 25, "original_position": 25, "commit_id": "999cd36b2f801b8b45a0d4ca50dd12aa09adf03d", "original_commit_id": "999cd36b2f801b8b45a0d4ca50dd12aa09adf03d", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "body": "I only changed the `newContiguous` behavior for cuda tensors. So for cpu tensors, `x.contiguous().stride()` will still be `[20, 25, 5, 1]` because TH, unlike cudnn, doesn't care about this.", "created_at": "2017-10-17T14:35:56Z", "updated_at": "2018-11-23T15:35:20Z", "html_url": "https://github.com/pytorch/pytorch/pull/3091#discussion_r145150141", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3091", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/145150141"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3091#discussion_r145150141"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3091"}}, "body_html": "<p>I only changed the <code>newContiguous</code> behavior for cuda tensors. So for cpu tensors, <code>x.contiguous().stride()</code> will still be <code>[20, 25, 5, 1]</code> because TH, unlike cudnn, doesn't care about this.</p>", "body_text": "I only changed the newContiguous behavior for cuda tensors. So for cpu tensors, x.contiguous().stride() will still be [20, 25, 5, 1] because TH, unlike cudnn, doesn't care about this.", "in_reply_to_id": 145050574}