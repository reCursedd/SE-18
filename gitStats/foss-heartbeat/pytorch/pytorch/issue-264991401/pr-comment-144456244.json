{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/144456244", "pull_request_review_id": 69115547, "id": 144456244, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDQ1NjI0NA==", "diff_hunk": "@@ -184,12 +184,48 @@ THCTensor *THCTensor_(newClone)(THCState *state, THCTensor *self)\n   return tensor;\n }\n \n+// isContiguous doesn't care about strides for dimensions of size 1. This\n+// variant checks those strides while checking contiguity.\n+// This function is currently only used by newContiguous and not exposed in API.\n+static int THCTensor_(isContiguousDetectOneSizedDimStride)(\n+  THCState *state, THCTensor *self, int *should_update_stride)\n+{\n+  *should_update_stride = 0;\n+  int64_t z = 1;\n+  int d;\n+  for(d = self->nDimension-1; d >= 0; d--)\n+  {\n+    if(self->size[d] != 1)\n+    {\n+      if(self->stride[d] == z)\n+        z *= self->size[d];\n+      else\n+        return 0;\n+    } else if (!(*should_update_stride)) {\n+      *should_update_stride = (self->stride[d] != z);\n+    }\n+  }\n+  return 1;\n+}\n+\n THCTensor *THCTensor_(newContiguous)(THCState *state, THCTensor *self)\n {\n-  if(!THCTensor_(isContiguous)(state, self))\n+  int should_update_stride = 0;\n+  if(!THCTensor_(isContiguousDetectOneSizedDimStride)(state, self, &should_update_stride)) {\n     return THCTensor_(newClone)(state, self);\n-  else\n-  {\n+  }\n+  if (should_update_stride) {\n+    THLongStorage *new_stride = THLongStorage_newWithSize(self->nDimension);\n+    int64_t z = 1;\n+    for(int d = self->nDimension-1; d >= 0; d--)\n+    {\n+      new_stride->data[d] = z;\n+      z *= self->size[d];\n+    }\n+    return THCTensor_(newWithStorage)(state, self->storage, self->storageOffset,\n+                                      THCTensor_(newSizeOf)(state, self),\n+                                      new_stride);", "path": "torch/lib/THC/generic/THCTensor.c", "position": null, "original_position": 47, "commit_id": "999cd36b2f801b8b45a0d4ca50dd12aa09adf03d", "original_commit_id": "cfa4d3af3b3f25c4210f7221e318bab573305456", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "You never free size and stride storages.", "created_at": "2017-10-13T02:55:12Z", "updated_at": "2018-11-23T15:35:15Z", "html_url": "https://github.com/pytorch/pytorch/pull/3091#discussion_r144456244", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3091", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/144456244"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3091#discussion_r144456244"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3091"}}, "body_html": "<p>You never free size and stride storages.</p>", "body_text": "You never free size and stride storages."}