{"url": "https://api.github.com/repos/pytorch/pytorch/issues/239", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/239/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/239/events", "html_url": "https://github.com/pytorch/pytorch/pull/239", "id": 190523314, "node_id": "MDExOlB1bGxSZXF1ZXN0OTQ0OTcyNTA=", "number": 239, "title": "Fix reference cycles in autograd and relax semantics of save_for_backward and backward", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-11-19T22:03:23Z", "updated_at": "2018-11-23T15:31:56Z", "closed_at": "2016-11-21T18:39:55Z", "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/239", "html_url": "https://github.com/pytorch/pytorch/pull/239", "diff_url": "https://github.com/pytorch/pytorch/pull/239.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/239.patch"}, "body_html": "<ol>\n<li>Adds <code>torch.multinomial</code> for CUDA tensors (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"190411698\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/236\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/236/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/236\">#236</a>)</li>\n<li>Fixes reference cycles in autograd (if outputs are saved for backward) (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"190410773\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/235\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/235/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/235\">#235</a>)</li>\n<li><code>save_for_backward</code> now accepts <code>None</code> arguments, and <code>backward</code> can now return too many <code>grad_input</code>s, as long as the excessive values are <code>None</code> (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"189842031\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/221\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/221/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/221\">#221</a>)</li>\n</ol>", "body_text": "Adds torch.multinomial for CUDA tensors (#236)\nFixes reference cycles in autograd (if outputs are saved for backward) (#235)\nsave_for_backward now accepts None arguments, and backward can now return too many grad_inputs, as long as the excessive values are None (#221)", "body": "1. Adds `torch.multinomial` for CUDA tensors (#236)\r\n2. Fixes reference cycles in autograd (if outputs are saved for backward) (#235)\r\n3. `save_for_backward` now accepts `None` arguments, and `backward` can now return too many `grad_input`s, as long as the excessive values are `None` (#221)"}