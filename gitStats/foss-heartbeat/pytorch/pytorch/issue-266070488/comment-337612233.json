{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/337612233", "html_url": "https://github.com/pytorch/pytorch/issues/3146#issuecomment-337612233", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3146", "id": 337612233, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzYxMjIzMw==", "user": {"login": "loudinthecloud", "id": 3178431, "node_id": "MDQ6VXNlcjMxNzg0MzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3178431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/loudinthecloud", "html_url": "https://github.com/loudinthecloud", "followers_url": "https://api.github.com/users/loudinthecloud/followers", "following_url": "https://api.github.com/users/loudinthecloud/following{/other_user}", "gists_url": "https://api.github.com/users/loudinthecloud/gists{/gist_id}", "starred_url": "https://api.github.com/users/loudinthecloud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/loudinthecloud/subscriptions", "organizations_url": "https://api.github.com/users/loudinthecloud/orgs", "repos_url": "https://api.github.com/users/loudinthecloud/repos", "events_url": "https://api.github.com/users/loudinthecloud/events{/privacy}", "received_events_url": "https://api.github.com/users/loudinthecloud/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-18T14:35:06Z", "updated_at": "2017-10-18T14:35:06Z", "author_association": "NONE", "body_html": "<p>I just made sure that the single core test is better not because of Turbo Boost.</p>\n<p>I executed the script as a separate workload on each of the cores:</p>\n<blockquote>\n<p>GOMP_CPU_AFFINITY=\"0\" OMP_NUM_THREADS=1 ./1.py<br>\nGOMP_CPU_AFFINITY=\"1\" OMP_NUM_THREADS=1 ./1.py<br>\nGOMP_CPU_AFFINITY=\"2\" OMP_NUM_THREADS=1 ./1.py<br>\nGOMP_CPU_AFFINITY=\"3\" OMP_NUM_THREADS=1 ./1.py</p>\n</blockquote>\n<p>And the result was slightly worse than single workload on single core:<br>\n<code>Time: 336.240175 us (std: 134.900685 us)</code></p>\n<p>Note that the variance did increase, this may be purely attributed to the CPU as each workload is running in a single thread pinned to a different cpu.</p>", "body_text": "I just made sure that the single core test is better not because of Turbo Boost.\nI executed the script as a separate workload on each of the cores:\n\nGOMP_CPU_AFFINITY=\"0\" OMP_NUM_THREADS=1 ./1.py\nGOMP_CPU_AFFINITY=\"1\" OMP_NUM_THREADS=1 ./1.py\nGOMP_CPU_AFFINITY=\"2\" OMP_NUM_THREADS=1 ./1.py\nGOMP_CPU_AFFINITY=\"3\" OMP_NUM_THREADS=1 ./1.py\n\nAnd the result was slightly worse than single workload on single core:\nTime: 336.240175 us (std: 134.900685 us)\nNote that the variance did increase, this may be purely attributed to the CPU as each workload is running in a single thread pinned to a different cpu.", "body": "I just made sure that the single core test is better not because of Turbo Boost.\r\n\r\nI executed the script as a separate workload on each of the cores:\r\n\r\n> GOMP_CPU_AFFINITY=\"0\" OMP_NUM_THREADS=1 ./1.py\r\n> GOMP_CPU_AFFINITY=\"1\" OMP_NUM_THREADS=1 ./1.py\r\n> GOMP_CPU_AFFINITY=\"2\" OMP_NUM_THREADS=1 ./1.py\r\n> GOMP_CPU_AFFINITY=\"3\" OMP_NUM_THREADS=1 ./1.py\r\n\r\nAnd the result was slightly worse than single workload on single core:\r\n`Time: 336.240175 us (std: 134.900685 us)`\r\n\r\nNote that the variance did increase, this may be purely attributed to the CPU as each workload is running in a single thread pinned to a different cpu."}