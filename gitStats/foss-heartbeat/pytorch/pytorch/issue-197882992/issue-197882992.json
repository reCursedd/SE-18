{"url": "https://api.github.com/repos/pytorch/pytorch/issues/364", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/364/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/364/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/364/events", "html_url": "https://github.com/pytorch/pytorch/pull/364", "id": 197882992, "node_id": "MDExOlB1bGxSZXF1ZXN0OTk1Njk4NDg=", "number": 364, "title": "Accept outputs in out argument", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-12-28T16:51:19Z", "updated_at": "2016-12-29T11:26:00Z", "closed_at": "2016-12-29T11:26:00Z", "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/364", "html_url": "https://github.com/pytorch/pytorch/pull/364", "diff_url": "https://github.com/pytorch/pytorch/pull/364.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/364.patch"}, "body_html": "<div class=\"highlight highlight-source-python\"><pre>torch.add(output, input1, input2)\ntorch.max(values, indices, tensor, <span class=\"pl-c1\">1</span>)</pre></div>\n<p>becomes</p>\n<div class=\"highlight highlight-source-python\"><pre>torch.add(input1, input2, <span class=\"pl-v\">out</span><span class=\"pl-k\">=</span>output)\ntorch.max(tensor, <span class=\"pl-c1\">1</span>, <span class=\"pl-v\">out</span><span class=\"pl-k\">=</span>(values, indices))\na.add(b, <span class=\"pl-v\">out</span><span class=\"pl-k\">=</span>c) <span class=\"pl-c\"><span class=\"pl-c\">#</span> this was not possible before</span></pre></div>\n<p><code>out</code> is a keyword only argument.</p>", "body_text": "torch.add(output, input1, input2)\ntorch.max(values, indices, tensor, 1)\nbecomes\ntorch.add(input1, input2, out=output)\ntorch.max(tensor, 1, out=(values, indices))\na.add(b, out=c) # this was not possible before\nout is a keyword only argument.", "body": "```python\r\ntorch.add(output, input1, input2)\r\ntorch.max(values, indices, tensor, 1)\r\n```\r\nbecomes\r\n```python\r\ntorch.add(input1, input2, out=output)\r\ntorch.max(tensor, 1, out=(values, indices))\r\na.add(b, out=c) # this was not possible before\r\n```\r\n\r\n`out` is a keyword only argument."}