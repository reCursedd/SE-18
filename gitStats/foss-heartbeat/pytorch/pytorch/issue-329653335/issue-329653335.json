{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8176", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8176/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8176/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8176/events", "html_url": "https://github.com/pytorch/pytorch/pull/8176", "id": 329653335, "node_id": "MDExOlB1bGxSZXF1ZXN0MTkyODU4MjAx", "number": 8176, "title": "Replace (non-data) TensorUtils calls with non-generic THCTensor calls.", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-05T22:56:01Z", "updated_at": "2018-11-23T15:45:00Z", "closed_at": "2018-06-06T20:19:40Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/8176", "html_url": "https://github.com/pytorch/pytorch/pull/8176", "diff_url": "https://github.com/pytorch/pytorch/pull/8176.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/8176.patch"}, "body_html": "<p>TensorUtils is templatized on the THTensor type, so to support a single tensor type (like ATen), we need to remove these.</p>\n<p>This PR does the following:</p>\n<ol>\n<li>\n<p>Allows THCTensorTypeUtils.cuh to include THCTensor.hpp.<br>\nThis involves moving includes of it outside of generic/, so we can use the new implementations.</p>\n</li>\n<li>\n<p>Defines a single _THTensor struct and changes THCRealTensor to be a derived type of _THCTensor.<br>\nThis allows us to implement a single non-generic function and avoid static_cast or void * tricks to call it from the generic functions.</p>\n</li>\n<li>\n<p>For functions inside of TensorUtils that don't use data pointers:<br>\na) Implement the functions in (non-generic) THTensor.cpp and declare them in (non-generic) THTensor.hpp.<br>\nb) Have the generic versions call the non-generic versions.<br>\nc) Replace the corresponding TensorUtils::fn call with (non-generic) THTensor_fn.</p>\n</li>\n</ol>", "body_text": "TensorUtils is templatized on the THTensor type, so to support a single tensor type (like ATen), we need to remove these.\nThis PR does the following:\n\n\nAllows THCTensorTypeUtils.cuh to include THCTensor.hpp.\nThis involves moving includes of it outside of generic/, so we can use the new implementations.\n\n\nDefines a single _THTensor struct and changes THCRealTensor to be a derived type of _THCTensor.\nThis allows us to implement a single non-generic function and avoid static_cast or void * tricks to call it from the generic functions.\n\n\nFor functions inside of TensorUtils that don't use data pointers:\na) Implement the functions in (non-generic) THTensor.cpp and declare them in (non-generic) THTensor.hpp.\nb) Have the generic versions call the non-generic versions.\nc) Replace the corresponding TensorUtils::fn call with (non-generic) THTensor_fn.", "body": "TensorUtils is templatized on the THTensor type, so to support a single tensor type (like ATen), we need to remove these.\r\n\r\nThis PR does the following:\r\n1) Allows THCTensorTypeUtils.cuh to include THCTensor.hpp.\r\n   This involves moving includes of it outside of generic/, so we can use the new implementations.\r\n\r\n2) Defines a single _THTensor struct and changes THCRealTensor to be a derived type of _THCTensor.\r\n   This allows us to implement a single non-generic function and avoid static_cast or void * tricks to call it from the generic functions.\r\n\r\n3) For functions inside of TensorUtils that don't use data pointers:\r\n   a) Implement the functions in (non-generic) THTensor.cpp and declare them in (non-generic) THTensor.hpp.\r\n   b) Have the generic versions call the non-generic versions.\r\n   c) Replace the corresponding TensorUtils<THCTensor>::fn call with (non-generic) THTensor_fn.\r\n\r\n"}