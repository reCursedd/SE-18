{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/199773464", "pull_request_review_id": 133955631, "id": 199773464, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTc3MzQ2NA==", "diff_hunk": "@@ -111,4 +118,89 @@ tensor_list2d broadcast_coalesced(TensorList tensors, IntList devices, size_t bu\n   return outputs;\n }\n \n-}}\n+std::vector<at::Tensor> scatter(\n+    const at::Tensor& tensor,\n+    at::IntList devices,\n+    const at::optional<std::vector<int64_t>>& chunk_sizes,\n+    int64_t dim,\n+    const at::optional<std::vector<THCStream*>>& streams) {\n+  std::vector<at::Tensor> chunks;\n+  if (!chunk_sizes) {\n+    chunks = tensor.chunk(/*chunks=*/devices.size(), /*dim=*/dim);\n+  } else {\n+    const int64_t chunk_size_sum =\n+        std::accumulate(chunk_sizes->begin(), chunk_sizes->end(), 0);\n+    // clang-format off\n+    AT_CHECK(\n+      chunk_size_sum == tensor.size(dim),\n+      \"given chunk sizes don't sum up to the tensor's size \",\n+      \"(sum(chunk_sizes) == \", chunk_size_sum,\n+      \", but expected \", tensor.size(dim), \")\");\n+    // clang-format on\n+    chunks.reserve(chunk_sizes->size());\n+    int64_t chunk_start = 0;\n+    for (size_t chunk = 0; chunk < chunk_sizes->size(); ++chunk) {\n+      const int64_t chunk_size = (*chunk_sizes)[chunk];\n+      AT_CHECK(chunk_size > 0, \"Chunk size must be positive\");\n+      chunks.push_back(tensor.narrow(dim, chunk_start, chunk_size));\n+      chunk_start += chunk_size;\n+    }\n+    AT_ASSERT(chunks.size() == chunk_sizes->size());", "path": "torch/csrc/cuda/comm.cpp", "position": 54, "original_position": 58, "commit_id": "90a105a8337f82363bec7105e120ac154dc40d3c", "original_commit_id": "b715be3c80fb894cff5066e51eab39e39425b215", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Well this one is quite easy to prove yourself (you `push_back` at every iteration, there are `chunk_sizes->size()` iters because you never beak out of the loop), but we can leave it if you really want.", "created_at": "2018-07-03T11:32:38Z", "updated_at": "2018-11-23T15:46:42Z", "html_url": "https://github.com/pytorch/pytorch/pull/9117#discussion_r199773464", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9117", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/199773464"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9117#discussion_r199773464"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9117"}}, "body_html": "<p>Well this one is quite easy to prove yourself (you <code>push_back</code> at every iteration, there are <code>chunk_sizes-&gt;size()</code> iters because you never beak out of the loop), but we can leave it if you really want.</p>", "body_text": "Well this one is quite easy to prove yourself (you push_back at every iteration, there are chunk_sizes->size() iters because you never beak out of the loop), but we can leave it if you really want."}