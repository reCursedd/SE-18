{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/420407953", "html_url": "https://github.com/pytorch/pytorch/issues/11516#issuecomment-420407953", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11516", "id": 420407953, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDQwNzk1Mw==", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-11T20:08:33Z", "updated_at": "2018-09-11T20:08:33Z", "author_association": "CONTRIBUTOR", "body_html": "<p>When I was implementing devices in python, I suggested we use <code>DeviceSpec</code> for the unresolved index, leaving <code>Device</code> for the resolved index.  That seems nicer than <code>Device</code> and <code>FullDevice</code>, but other folks didn't like it :).</p>\n<p>As for the above question, if we aren't going to have two types, we should at least have a comparison function that does what <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> suggests, which seems like a common thing you want to know (and it shouldn't be operator==).  Something like <code>resolved_equal</code> or something.</p>", "body_text": "When I was implementing devices in python, I suggested we use DeviceSpec for the unresolved index, leaving Device for the resolved index.  That seems nicer than Device and FullDevice, but other folks didn't like it :).\nAs for the above question, if we aren't going to have two types, we should at least have a comparison function that does what @apaszke suggests, which seems like a common thing you want to know (and it shouldn't be operator==).  Something like resolved_equal or something.", "body": "When I was implementing devices in python, I suggested we use `DeviceSpec` for the unresolved index, leaving `Device` for the resolved index.  That seems nicer than `Device` and `FullDevice`, but other folks didn't like it :).\r\n\r\nAs for the above question, if we aren't going to have two types, we should at least have a comparison function that does what @apaszke suggests, which seems like a common thing you want to know (and it shouldn't be operator==).  Something like `resolved_equal` or something."}