{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7558", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7558/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7558/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7558/events", "html_url": "https://github.com/pytorch/pytorch/pull/7558", "id": 323014595, "node_id": "MDExOlB1bGxSZXF1ZXN0MTg3OTc2MzMz", "number": 7558, "title": "[caffe2][nomnigraph] Add optimize function to opt:: namespace ", "user": {"login": "bwasti", "id": 4842908, "node_id": "MDQ6VXNlcjQ4NDI5MDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/4842908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bwasti", "html_url": "https://github.com/bwasti", "followers_url": "https://api.github.com/users/bwasti/followers", "following_url": "https://api.github.com/users/bwasti/following{/other_user}", "gists_url": "https://api.github.com/users/bwasti/gists{/gist_id}", "starred_url": "https://api.github.com/users/bwasti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bwasti/subscriptions", "organizations_url": "https://api.github.com/users/bwasti/orgs", "repos_url": "https://api.github.com/users/bwasti/repos", "events_url": "https://api.github.com/users/bwasti/events{/privacy}", "received_events_url": "https://api.github.com/users/bwasti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-14T23:20:03Z", "updated_at": "2018-11-23T15:44:05Z", "closed_at": "2018-05-15T22:57:07Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/7558", "html_url": "https://github.com/pytorch/pytorch/pull/7558", "diff_url": "https://github.com/pytorch/pytorch/pull/7558.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/7558.patch"}, "body_html": "<p>opt::optimize takes in a level and optimizes the graph/workspace accordingly.  Adding it to predictor and speed_benchmark arguments</p>\n<p>Also predictor gets opt = 1 by default</p>\n<p>you can test this now with speed benchmark</p>\n<pre><code>bwasti-mbp:~/pytorch/build_android $ adb shell 'cd /data/local/tmp &amp;&amp; /data/local/tmp/speed_benchmark-22693462 --net /data/local/tmp/predict_net.pb --init_net /data/local/tmp/init_net.pb --input data --input_type float --input_dims 1,3,192,192 --warmup 10 --iter 25 --opt 1'\nMain run finished. Milliseconds per iter: 10.8827. Iters per second: 91.8887\nbwasti-mbp:~/pytorch/build_android $ adb shell 'cd /data/local/tmp &amp;&amp; /data/local/tmp/speed_benchmark-22693462 --net /data/local/tmp/predict_net.pb --init_net /data/local/tmp/init_net.pb --input data --input_type float --input_dims 1,3,192,192 --warmup 10 --iter 25 --opt 0'\nMain run finished. Milliseconds per iter: 12.0275. Iters per second: 83.1426\n</code></pre>", "body_text": "opt::optimize takes in a level and optimizes the graph/workspace accordingly.  Adding it to predictor and speed_benchmark arguments\nAlso predictor gets opt = 1 by default\nyou can test this now with speed benchmark\nbwasti-mbp:~/pytorch/build_android $ adb shell 'cd /data/local/tmp && /data/local/tmp/speed_benchmark-22693462 --net /data/local/tmp/predict_net.pb --init_net /data/local/tmp/init_net.pb --input data --input_type float --input_dims 1,3,192,192 --warmup 10 --iter 25 --opt 1'\nMain run finished. Milliseconds per iter: 10.8827. Iters per second: 91.8887\nbwasti-mbp:~/pytorch/build_android $ adb shell 'cd /data/local/tmp && /data/local/tmp/speed_benchmark-22693462 --net /data/local/tmp/predict_net.pb --init_net /data/local/tmp/init_net.pb --input data --input_type float --input_dims 1,3,192,192 --warmup 10 --iter 25 --opt 0'\nMain run finished. Milliseconds per iter: 12.0275. Iters per second: 83.1426", "body": "opt::optimize takes in a level and optimizes the graph/workspace accordingly.  Adding it to predictor and speed_benchmark arguments\r\n\r\nAlso predictor gets opt = 1 by default\r\n\r\nyou can test this now with speed benchmark\r\n```\r\nbwasti-mbp:~/pytorch/build_android $ adb shell 'cd /data/local/tmp && /data/local/tmp/speed_benchmark-22693462 --net /data/local/tmp/predict_net.pb --init_net /data/local/tmp/init_net.pb --input data --input_type float --input_dims 1,3,192,192 --warmup 10 --iter 25 --opt 1'\r\nMain run finished. Milliseconds per iter: 10.8827. Iters per second: 91.8887\r\nbwasti-mbp:~/pytorch/build_android $ adb shell 'cd /data/local/tmp && /data/local/tmp/speed_benchmark-22693462 --net /data/local/tmp/predict_net.pb --init_net /data/local/tmp/init_net.pb --input data --input_type float --input_dims 1,3,192,192 --warmup 10 --iter 25 --opt 0'\r\nMain run finished. Milliseconds per iter: 12.0275. Iters per second: 83.1426\r\n```\r\n"}