{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/333396213", "html_url": "https://github.com/pytorch/pytorch/issues/2906#issuecomment-333396213", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2906", "id": 333396213, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzM5NjIxMw==", "user": {"login": "vadimkantorov", "id": 1041752, "node_id": "MDQ6VXNlcjEwNDE3NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1041752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimkantorov", "html_url": "https://github.com/vadimkantorov", "followers_url": "https://api.github.com/users/vadimkantorov/followers", "following_url": "https://api.github.com/users/vadimkantorov/following{/other_user}", "gists_url": "https://api.github.com/users/vadimkantorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimkantorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimkantorov/subscriptions", "organizations_url": "https://api.github.com/users/vadimkantorov/orgs", "repos_url": "https://api.github.com/users/vadimkantorov/repos", "events_url": "https://api.github.com/users/vadimkantorov/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimkantorov/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-01T18:25:53Z", "updated_at": "2017-10-01T18:25:53Z", "author_association": "NONE", "body_html": "<p>Sure, workarounds exist, an even easier one is: <code>torch.autograd.Variable(torch.zeros_like(variable.data))</code> (will respect CPU/GPU tensor placement).</p>\n<p>This issue is just a suggestion about making tensor / variable API more consistent in this particular case.</p>", "body_text": "Sure, workarounds exist, an even easier one is: torch.autograd.Variable(torch.zeros_like(variable.data)) (will respect CPU/GPU tensor placement).\nThis issue is just a suggestion about making tensor / variable API more consistent in this particular case.", "body": "Sure, workarounds exist, an even easier one is: `torch.autograd.Variable(torch.zeros_like(variable.data))` (will respect CPU/GPU tensor placement).\r\n\r\nThis issue is just a suggestion about making tensor / variable API more consistent in this particular case."}