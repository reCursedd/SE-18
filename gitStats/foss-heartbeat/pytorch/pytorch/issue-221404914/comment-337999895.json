{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/337999895", "html_url": "https://github.com/pytorch/pytorch/issues/1249#issuecomment-337999895", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1249", "id": 337999895, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzk5OTg5NQ==", "user": {"login": "IssamLaradji", "id": 3382128, "node_id": "MDQ6VXNlcjMzODIxMjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/3382128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IssamLaradji", "html_url": "https://github.com/IssamLaradji", "followers_url": "https://api.github.com/users/IssamLaradji/followers", "following_url": "https://api.github.com/users/IssamLaradji/following{/other_user}", "gists_url": "https://api.github.com/users/IssamLaradji/gists{/gist_id}", "starred_url": "https://api.github.com/users/IssamLaradji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IssamLaradji/subscriptions", "organizations_url": "https://api.github.com/users/IssamLaradji/orgs", "repos_url": "https://api.github.com/users/IssamLaradji/repos", "events_url": "https://api.github.com/users/IssamLaradji/events{/privacy}", "received_events_url": "https://api.github.com/users/IssamLaradji/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-19T18:41:41Z", "updated_at": "2017-10-19T19:15:08Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=19438484\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/tommy-qichang\">@tommy-qichang</a></p>\n<ol>\n<li><code>smooth</code> does more than that. You can set smooth to zero and add <code>eps</code> to the denominator to prevent division by zero. However, having a larger smooth value (also known as Laplace smooth, or Additive smooth) can be used to avoid overfitting. The larger the smooth value the closer the following term is to 1 (if everything else is fixed),</li>\n</ol>\n<div class=\"highlight highlight-source-python\"><pre>((<span class=\"pl-c1\">2</span>. <span class=\"pl-k\">*</span> intersection <span class=\"pl-k\">+</span> smooth) <span class=\"pl-k\">/</span>  (iflat.sum() <span class=\"pl-k\">+</span> tflat.sum() <span class=\"pl-k\">+</span> smooth))</pre></div>\n<p>This decreases the penalty obtained from having <code>2*intersection</code> different from <code>iflat.sum() + tflat.sum() </code>. A similar approach is commonly used in Naive Bayes, see equation (119) in these <a href=\"https://nlp.stanford.edu/IR-book/html/htmledition/naive-bayes-text-classification-1.html\" rel=\"nofollow\">notes.</a></p>\n<ol start=\"2\">\n<li>Yah that should be the case, good catch!</li>\n</ol>", "body_text": "@tommy-qichang\n\nsmooth does more than that. You can set smooth to zero and add eps to the denominator to prevent division by zero. However, having a larger smooth value (also known as Laplace smooth, or Additive smooth) can be used to avoid overfitting. The larger the smooth value the closer the following term is to 1 (if everything else is fixed),\n\n((2. * intersection + smooth) /  (iflat.sum() + tflat.sum() + smooth))\nThis decreases the penalty obtained from having 2*intersection different from iflat.sum() + tflat.sum() . A similar approach is commonly used in Naive Bayes, see equation (119) in these notes.\n\nYah that should be the case, good catch!", "body": "@tommy-qichang \r\n1. `smooth` does more than that. You can set smooth to zero and add `eps` to the denominator to prevent division by zero. However, having a larger smooth value (also known as Laplace smooth, or Additive smooth) can be used to avoid overfitting. The larger the smooth value the closer the following term is to 1 (if everything else is fixed),\r\n```python\r\n((2. * intersection + smooth) /  (iflat.sum() + tflat.sum() + smooth))\r\n```\r\nThis decreases the penalty obtained from having `2*intersection` different from `iflat.sum() + tflat.sum() `. A similar approach is commonly used in Naive Bayes, see equation (119) in these [notes.](https://nlp.stanford.edu/IR-book/html/htmledition/naive-bayes-text-classification-1.html)\r\n\r\n2. Yah that should be the case, good catch!"}