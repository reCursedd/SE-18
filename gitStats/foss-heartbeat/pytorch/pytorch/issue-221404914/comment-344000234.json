{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/344000234", "html_url": "https://github.com/pytorch/pytorch/issues/1249#issuecomment-344000234", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1249", "id": 344000234, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDAwMDIzNA==", "user": {"login": "trypag", "id": 13003839, "node_id": "MDQ6VXNlcjEzMDAzODM5", "avatar_url": "https://avatars1.githubusercontent.com/u/13003839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trypag", "html_url": "https://github.com/trypag", "followers_url": "https://api.github.com/users/trypag/followers", "following_url": "https://api.github.com/users/trypag/following{/other_user}", "gists_url": "https://api.github.com/users/trypag/gists{/gist_id}", "starred_url": "https://api.github.com/users/trypag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trypag/subscriptions", "organizations_url": "https://api.github.com/users/trypag/orgs", "repos_url": "https://api.github.com/users/trypag/repos", "events_url": "https://api.github.com/users/trypag/events{/privacy}", "received_events_url": "https://api.github.com/users/trypag/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-13T17:48:00Z", "updated_at": "2017-11-13T17:51:39Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=8496304\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rogertrullo\">@rogertrullo</a> thanks for answering, I have a few questions:</p>\n<ul>\n<li>do you agree this loss is not bounded between 0 and 1 ? I noticed it can go higher than 1.</li>\n<li>I understand that min(-dice) = max(dice), but in this configuration it seems strange, for example if you only optimise with the dice loss, you first start with a negative loss, I have no idea if it will get to 0 eventually, at least for me optimizing only with the dice does not converge.</li>\n<li>With the cross_entropy loss, having <code>loss = ce(output, target) - dice(output, target)</code> we might have a negative loss at some time also.<br>\nThanks :)</li>\n</ul>", "body_text": "@rogertrullo thanks for answering, I have a few questions:\n\ndo you agree this loss is not bounded between 0 and 1 ? I noticed it can go higher than 1.\nI understand that min(-dice) = max(dice), but in this configuration it seems strange, for example if you only optimise with the dice loss, you first start with a negative loss, I have no idea if it will get to 0 eventually, at least for me optimizing only with the dice does not converge.\nWith the cross_entropy loss, having loss = ce(output, target) - dice(output, target) we might have a negative loss at some time also.\nThanks :)", "body": "@rogertrullo thanks for answering, I have a few questions:\r\n- do you agree this loss is not bounded between 0 and 1 ? I noticed it can go higher than 1.\r\n- I understand that min(-dice) = max(dice), but in this configuration it seems strange, for example if you only optimise with the dice loss, you first start with a negative loss, I have no idea if it will get to 0 eventually, at least for me optimizing only with the dice does not converge.\r\n- With the cross_entropy loss, having `loss = ce(output, target) - dice(output, target)` we might have a negative loss at some time also.\r\nThanks :)"}