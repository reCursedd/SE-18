{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/339020295", "html_url": "https://github.com/pytorch/pytorch/issues/1249#issuecomment-339020295", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1249", "id": 339020295, "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTAyMDI5NQ==", "user": {"login": "rogertrullo", "id": 8496304, "node_id": "MDQ6VXNlcjg0OTYzMDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/8496304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogertrullo", "html_url": "https://github.com/rogertrullo", "followers_url": "https://api.github.com/users/rogertrullo/followers", "following_url": "https://api.github.com/users/rogertrullo/following{/other_user}", "gists_url": "https://api.github.com/users/rogertrullo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogertrullo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogertrullo/subscriptions", "organizations_url": "https://api.github.com/users/rogertrullo/orgs", "repos_url": "https://api.github.com/users/rogertrullo/repos", "events_url": "https://api.github.com/users/rogertrullo/events{/privacy}", "received_events_url": "https://api.github.com/users/rogertrullo/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-24T14:59:46Z", "updated_at": "2017-10-24T15:00:33Z", "author_association": "NONE", "body_html": "<p>Hi <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3382128\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/IssamLaradji\">@IssamLaradji</a>, for some reason I never got to reply. I am sorry.<br>\nThese codes are actually doing something very similar but they have small differences:</p>\n<ol>\n<li>\n<p>The Dice ratio in my code follows the definition presented in the paper I mention; (the difference it's in the denominator where you define the union as the sum whereas I use the sum of the squares).</p>\n</li>\n<li>\n<p>Additionally, my code was thought to be used for having 2 channels in the last layer whereas yours takes only one channel (possibly the output of a sigmoid layer).</p>\n</li>\n</ol>\n<p>I just tested your code and mine and theres a difference of the order of 1e-3. I am not really sure why, I think is related to the fact that I basically compute the dice independently for each element in the batch and then divide by the batch size, but not really sure.</p>", "body_text": "Hi @IssamLaradji, for some reason I never got to reply. I am sorry.\nThese codes are actually doing something very similar but they have small differences:\n\n\nThe Dice ratio in my code follows the definition presented in the paper I mention; (the difference it's in the denominator where you define the union as the sum whereas I use the sum of the squares).\n\n\nAdditionally, my code was thought to be used for having 2 channels in the last layer whereas yours takes only one channel (possibly the output of a sigmoid layer).\n\n\nI just tested your code and mine and theres a difference of the order of 1e-3. I am not really sure why, I think is related to the fact that I basically compute the dice independently for each element in the batch and then divide by the batch size, but not really sure.", "body": "Hi @IssamLaradji, for some reason I never got to reply. I am sorry.\r\nThese codes are actually doing something very similar but they have small differences:\r\n\r\n1. The Dice ratio in my code follows the definition presented in the paper I mention; (the difference it's in the denominator where you define the union as the sum whereas I use the sum of the squares).\r\n\r\n2. Additionally, my code was thought to be used for having 2 channels in the last layer whereas yours takes only one channel (possibly the output of a sigmoid layer). \r\n\r\nI just tested your code and mine and theres a difference of the order of 1e-3. I am not really sure why, I think is related to the fact that I basically compute the dice independently for each element in the batch and then divide by the batch size, but not really sure."}