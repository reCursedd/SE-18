{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/418217301", "html_url": "https://github.com/pytorch/pytorch/issues/5544#issuecomment-418217301", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5544", "id": 418217301, "node_id": "MDEyOklzc3VlQ29tbWVudDQxODIxNzMwMQ==", "user": {"login": "samuela", "id": 226872, "node_id": "MDQ6VXNlcjIyNjg3Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/226872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samuela", "html_url": "https://github.com/samuela", "followers_url": "https://api.github.com/users/samuela/followers", "following_url": "https://api.github.com/users/samuela/following{/other_user}", "gists_url": "https://api.github.com/users/samuela/gists{/gist_id}", "starred_url": "https://api.github.com/users/samuela/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samuela/subscriptions", "organizations_url": "https://api.github.com/users/samuela/orgs", "repos_url": "https://api.github.com/users/samuela/repos", "events_url": "https://api.github.com/users/samuela/events{/privacy}", "received_events_url": "https://api.github.com/users/samuela/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-04T01:44:41Z", "updated_at": "2018-09-04T01:56:52Z", "author_association": "CONTRIBUTOR", "body_html": "<p>FWIW this redundancy has always bugged me. For some reason <code>x.shape</code> feels more internal than <code>x.size()</code> but using <code>x.size()</code> also just doesn't look right when doing things like <code>x.size()[-2:]</code>. Still I don't want to be inconsistent and use both.</p>", "body_text": "FWIW this redundancy has always bugged me. For some reason x.shape feels more internal than x.size() but using x.size() also just doesn't look right when doing things like x.size()[-2:]. Still I don't want to be inconsistent and use both.", "body": "FWIW this redundancy has always bugged me. For some reason `x.shape` feels more internal than `x.size()` but using `x.size()` also just doesn't look right when doing things like `x.size()[-2:]`. Still I don't want to be inconsistent and use both."}