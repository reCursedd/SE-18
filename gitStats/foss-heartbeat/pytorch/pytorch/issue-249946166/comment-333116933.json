{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/333116933", "html_url": "https://github.com/pytorch/pytorch/issues/2407#issuecomment-333116933", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2407", "id": 333116933, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzExNjkzMw==", "user": {"login": "yannadani", "id": 11159992, "node_id": "MDQ6VXNlcjExMTU5OTky", "avatar_url": "https://avatars2.githubusercontent.com/u/11159992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannadani", "html_url": "https://github.com/yannadani", "followers_url": "https://api.github.com/users/yannadani/followers", "following_url": "https://api.github.com/users/yannadani/following{/other_user}", "gists_url": "https://api.github.com/users/yannadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannadani/subscriptions", "organizations_url": "https://api.github.com/users/yannadani/orgs", "repos_url": "https://api.github.com/users/yannadani/repos", "events_url": "https://api.github.com/users/yannadani/events{/privacy}", "received_events_url": "https://api.github.com/users/yannadani/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-29T12:47:42Z", "updated_at": "2017-09-29T12:47:42Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a> yes, right. I get it now. But what exactly do you mean by sharing should be preserved?<br>\nOne other issue tangentially related to this post is this: When i try to implement this way, data prefetch and loading is done on CPU, while the network is trained on GPU. Hence, I still seem to have to do a lot of workaround. Do you have any thoughts on this?</p>", "body_text": "@soumith yes, right. I get it now. But what exactly do you mean by sharing should be preserved?\nOne other issue tangentially related to this post is this: When i try to implement this way, data prefetch and loading is done on CPU, while the network is trained on GPU. Hence, I still seem to have to do a lot of workaround. Do you have any thoughts on this?", "body": "@soumith yes, right. I get it now. But what exactly do you mean by sharing should be preserved? \r\nOne other issue tangentially related to this post is this: When i try to implement this way, data prefetch and loading is done on CPU, while the network is trained on GPU. Hence, I still seem to have to do a lot of workaround. Do you have any thoughts on this?"}