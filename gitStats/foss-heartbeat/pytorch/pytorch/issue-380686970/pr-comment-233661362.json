{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/233661362", "pull_request_review_id": 175129615, "id": 233661362, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzY2MTM2Mg==", "diff_hunk": "@@ -158,8 +158,8 @@ __global__ void kernelReduceNoncontigDim_shared\n   IndexType sliceIndex  = blockIdx.x*blockDim.x + threadIdx.x;\n \n   __shared__ int isLastBlockDone;\n-  __shared__ AccT local_reduce[THC_NONCONTIG_REDUCE_BLOCK_SIZE];\n-  AccT* shmem = &local_reduce[threadIdx.x + threadIdx.y*blockDim.x];\n+  extern __shared__ char local_reduce[];\n+  AccT* shmem = &(reinterpret_cast<AccT*>(local_reduce))[threadIdx.x + threadIdx.y*blockDim.x];", "path": "aten/src/THC/THCReduce.cuh", "position": null, "original_position": 7, "commit_id": "ea6b0aaa9f756fdc188ca992453850978fe4071b", "original_commit_id": "0911f41db0dc0a9fdd27c0753329b729128fafb5", "user": {"login": "jjsjann123", "id": 3709243, "node_id": "MDQ6VXNlcjM3MDkyNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3709243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjsjann123", "html_url": "https://github.com/jjsjann123", "followers_url": "https://api.github.com/users/jjsjann123/followers", "following_url": "https://api.github.com/users/jjsjann123/following{/other_user}", "gists_url": "https://api.github.com/users/jjsjann123/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjsjann123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjsjann123/subscriptions", "organizations_url": "https://api.github.com/users/jjsjann123/orgs", "repos_url": "https://api.github.com/users/jjsjann123/repos", "events_url": "https://api.github.com/users/jjsjann123/events{/privacy}", "received_events_url": "https://api.github.com/users/jjsjann123/received_events", "type": "User", "site_admin": false}, "body": "Cleaning the constructor and switching back to static shared memory does the trick. I got lucky with the undocumented default alignment from dynamic shared memory.\r\n\r\nI'll switch back to static so we can have a compile time other than a runtime error.\r\nWill push once the build/test finishes.", "created_at": "2018-11-14T23:28:57Z", "updated_at": "2018-11-23T15:54:52Z", "html_url": "https://github.com/pytorch/pytorch/pull/13967#discussion_r233661362", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13967", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/233661362"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13967#discussion_r233661362"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13967"}}, "body_html": "<p>Cleaning the constructor and switching back to static shared memory does the trick. I got lucky with the undocumented default alignment from dynamic shared memory.</p>\n<p>I'll switch back to static so we can have a compile time other than a runtime error.<br>\nWill push once the build/test finishes.</p>", "body_text": "Cleaning the constructor and switching back to static shared memory does the trick. I got lucky with the undocumented default alignment from dynamic shared memory.\nI'll switch back to static so we can have a compile time other than a runtime error.\nWill push once the build/test finishes.", "in_reply_to_id": 233504901}