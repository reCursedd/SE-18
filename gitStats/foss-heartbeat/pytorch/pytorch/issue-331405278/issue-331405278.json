{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8357", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8357/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8357/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8357/events", "html_url": "https://github.com/pytorch/pytorch/pull/8357", "id": 331405278, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk0MTQ0MTE4", "number": 8357, "title": "[c10d] NCCL python binding and CI test, with bug fixes", "user": {"login": "teng-li", "id": 8120856, "node_id": "MDQ6VXNlcjgxMjA4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8120856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teng-li", "html_url": "https://github.com/teng-li", "followers_url": "https://api.github.com/users/teng-li/followers", "following_url": "https://api.github.com/users/teng-li/following{/other_user}", "gists_url": "https://api.github.com/users/teng-li/gists{/gist_id}", "starred_url": "https://api.github.com/users/teng-li/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teng-li/subscriptions", "organizations_url": "https://api.github.com/users/teng-li/orgs", "repos_url": "https://api.github.com/users/teng-li/repos", "events_url": "https://api.github.com/users/teng-li/events{/privacy}", "received_events_url": "https://api.github.com/users/teng-li/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2018-06-12T01:30:07Z", "updated_at": "2018-11-23T15:45:42Z", "closed_at": "2018-06-19T20:02:40Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/8357", "html_url": "https://github.com/pytorch/pytorch/pull/8357", "diff_url": "https://github.com/pytorch/pytorch/pull/8357.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/8357.patch"}, "body_html": "<p>C10D's process group python binding and CI test.</p>\n<p>Also fixed a bug when multiple process doing NCCL ops on different GPUs, basically the Store Key we needs to be per-ProcessGroup, therefore, added a global trackable process group ID for this purpose and this has been tested.</p>\n<p>Also, let c10d only be built with libc10d.a, and let NCCL and MPI (later) to be optionally built and enabled.</p>\n<p>CI test also works fine.</p>\n<pre><code>$:~/new_pytorch/pytorch/test$ python test_c10d.py\n----------------------------------------------------------------------\nRan 6 tests in 4.381s\n\nOK\n</code></pre>\n<p>TODO: fix the build by automatically detecting and enabling NCCL PG</p>", "body_text": "C10D's process group python binding and CI test.\nAlso fixed a bug when multiple process doing NCCL ops on different GPUs, basically the Store Key we needs to be per-ProcessGroup, therefore, added a global trackable process group ID for this purpose and this has been tested.\nAlso, let c10d only be built with libc10d.a, and let NCCL and MPI (later) to be optionally built and enabled.\nCI test also works fine.\n$:~/new_pytorch/pytorch/test$ python test_c10d.py\n----------------------------------------------------------------------\nRan 6 tests in 4.381s\n\nOK\n\nTODO: fix the build by automatically detecting and enabling NCCL PG", "body": "C10D's process group python binding and CI test.\r\n\r\nAlso fixed a bug when multiple process doing NCCL ops on different GPUs, basically the Store Key we needs to be per-ProcessGroup, therefore, added a global trackable process group ID for this purpose and this has been tested.\r\n\r\nAlso, let c10d only be built with libc10d.a, and let NCCL and MPI (later) to be optionally built and enabled.\r\n\r\nCI test also works fine.\r\n```\r\n$:~/new_pytorch/pytorch/test$ python test_c10d.py\r\n----------------------------------------------------------------------\r\nRan 6 tests in 4.381s\r\n\r\nOK\r\n```\r\n\r\nTODO: fix the build by automatically detecting and enabling NCCL PG"}