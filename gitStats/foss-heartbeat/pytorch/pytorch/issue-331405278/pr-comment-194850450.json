{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/194850450", "pull_request_review_id": 128101215, "id": 194850450, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDg1MDQ1MA==", "diff_hunk": "@@ -148,29 +148,47 @@ const std::exception& ProcessGroupNCCL::WorkNCCL::exception() const {\n       \"isCompleted() and wait() will either succeed or throw\");\n }\n \n+std::unordered_set<ssize_t> ProcessGroupNCCL::processGroups_;\n+ssize_t ProcessGroupNCCL::processGroupCounter_ = -1;\n+\n ProcessGroupNCCL::ProcessGroupNCCL(\n     const std::shared_ptr<Store>& store,\n     int rank,\n     int size)\n     : ProcessGroup(rank, size), store_(store) {\n-  C10D_CUDA_CHECK(cudaGetDeviceCount(&numGPUs_));\n-  thcState_ = ::at::globalContext().lazyInitCUDA();\n+  // C10D_CUDA_CHECK(cudaGetDeviceCount(&numGPUs_));\n+  thcState_ = ::at::globalContext().getTHCState();\n+  if (!thcState_) {\n+    thcState_ = ::at::globalContext().lazyInitCUDA();\n+  }\n+  // Generate the Process Group ID for current PG, this needs to be identical\n+  // for all processes\n+  std::unique_lock<std::mutex>(pgTrackingLock_);\n+  while (true) {\n+    ++processGroupCounter_;\n+    if (processGroups_.count(processGroupCounter_) == 0) {\n+      processGroups_.insert(processGroupCounter_);\n+      processGroupId_ = std::to_string(processGroupCounter_);\n+      return;\n+    }\n+  }\n }\n \n-ProcessGroupNCCL::~ProcessGroupNCCL() {}\n+ProcessGroupNCCL::~ProcessGroupNCCL() {\n+  std::unique_lock<std::mutex>(pgTrackingLock_);\n+  processGroups_.erase(std::stoull(processGroupId_));\n+}\n \n-void ProcessGroupNCCL::broadcastUniqueNCCLId(\n-    const std::string& devicesKey,\n-    ncclUniqueId* ncclId) {\n+void ProcessGroupNCCL::broadcastUniqueNCCLId(ncclUniqueId* ncclId) {\n   // Rank 0 writes to the store as bcast\n   if (rank_ == 0) {\n     auto ncclIdVal = std::vector<uint8_t>(\n         reinterpret_cast<uint8_t*>(ncclId),\n         reinterpret_cast<uint8_t*>(ncclId) + NCCL_UNIQUE_ID_BYTES);\n-    store_->set(devicesKey, ncclIdVal);\n+    store_->set(processGroupId_, ncclIdVal);", "path": "torch/lib/c10d/ProcessGroupNCCL.cpp", "position": null, "original_position": 57, "commit_id": "ac86a8bfe0f243c213b1717abe3e96d5f9682f48", "original_commit_id": "5b7e4ae524d06af4a114b2d57771028167049cb1", "user": {"login": "teng-li", "id": 8120856, "node_id": "MDQ6VXNlcjgxMjA4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8120856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teng-li", "html_url": "https://github.com/teng-li", "followers_url": "https://api.github.com/users/teng-li/followers", "following_url": "https://api.github.com/users/teng-li/following{/other_user}", "gists_url": "https://api.github.com/users/teng-li/gists{/gist_id}", "starred_url": "https://api.github.com/users/teng-li/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teng-li/subscriptions", "organizations_url": "https://api.github.com/users/teng-li/orgs", "repos_url": "https://api.github.com/users/teng-li/repos", "events_url": "https://api.github.com/users/teng-li/events{/privacy}", "received_events_url": "https://api.github.com/users/teng-li/received_events", "type": "User", "site_admin": false}, "body": "The device list won't help here, since they can differ from process to process. I guess we shouldn't cache the NCCL ID in the store anyway since they can only be used one time ", "created_at": "2018-06-12T18:50:26Z", "updated_at": "2018-11-23T15:45:23Z", "html_url": "https://github.com/pytorch/pytorch/pull/8357#discussion_r194850450", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8357", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/194850450"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8357#discussion_r194850450"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8357"}}, "body_html": "<p>The device list won't help here, since they can differ from process to process. I guess we shouldn't cache the NCCL ID in the store anyway since they can only be used one time</p>", "body_text": "The device list won't help here, since they can differ from process to process. I guess we shouldn't cache the NCCL ID in the store anyway since they can only be used one time", "in_reply_to_id": 194819100}