{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5483", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5483/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5483/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5483/events", "html_url": "https://github.com/pytorch/pytorch/pull/5483", "id": 301265664, "node_id": "MDExOlB1bGxSZXF1ZXN0MTcyMTM0NjQ2", "number": 5483, "title": "Enable additional tensor types in Gloo backend", "user": {"login": "myleott", "id": 231798, "node_id": "MDQ6VXNlcjIzMTc5OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/231798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/myleott", "html_url": "https://github.com/myleott", "followers_url": "https://api.github.com/users/myleott/followers", "following_url": "https://api.github.com/users/myleott/following{/other_user}", "gists_url": "https://api.github.com/users/myleott/gists{/gist_id}", "starred_url": "https://api.github.com/users/myleott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/myleott/subscriptions", "organizations_url": "https://api.github.com/users/myleott/orgs", "repos_url": "https://api.github.com/users/myleott/repos", "events_url": "https://api.github.com/users/myleott/events{/privacy}", "received_events_url": "https://api.github.com/users/myleott/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 545367190, "node_id": "MDU6TGFiZWw1NDUzNjcxOTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/awaiting%20response", "name": "awaiting response", "color": "5319e7", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-03-01T03:28:25Z", "updated_at": "2018-11-23T15:40:11Z", "closed_at": "2018-03-15T13:53:25Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/5483", "html_url": "https://github.com/pytorch/pytorch/pull/5483", "diff_url": "https://github.com/pytorch/pytorch/pull/5483.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/5483.patch"}, "body_html": "<p>It seems to work with byte/half/char/int/long tensors:</p>\n<pre><code>import torch.distributed as dist\ndist.init_process_group(init_method='tcp://127.0.0.1:23456', rank=RANK, world_size=2, backend='gloo')\n# rank 0:\nx = (torch.rand(10) * 10).byte().cuda()\ntorch.distributed.broadcast(x, src=0)\n# rank 1:\ny = torch.zeros(10).byte().cuda()\ntorch.distributed.broadcast(y, src=0)\n</code></pre>\n<p>Some relevant context in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"256875611\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/2699\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/2699/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/2699\">#2699</a>.</p>", "body_text": "It seems to work with byte/half/char/int/long tensors:\nimport torch.distributed as dist\ndist.init_process_group(init_method='tcp://127.0.0.1:23456', rank=RANK, world_size=2, backend='gloo')\n# rank 0:\nx = (torch.rand(10) * 10).byte().cuda()\ntorch.distributed.broadcast(x, src=0)\n# rank 1:\ny = torch.zeros(10).byte().cuda()\ntorch.distributed.broadcast(y, src=0)\n\nSome relevant context in #2699.", "body": "It seems to work with byte/half/char/int/long tensors:\r\n\r\n```\r\nimport torch.distributed as dist\r\ndist.init_process_group(init_method='tcp://127.0.0.1:23456', rank=RANK, world_size=2, backend='gloo')\r\n# rank 0:\r\nx = (torch.rand(10) * 10).byte().cuda()\r\ntorch.distributed.broadcast(x, src=0)\r\n# rank 1:\r\ny = torch.zeros(10).byte().cuda()\r\ntorch.distributed.broadcast(y, src=0)\r\n```\r\n\r\nSome relevant context in #2699."}