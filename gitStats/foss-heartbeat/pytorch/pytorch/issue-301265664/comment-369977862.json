{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/369977862", "html_url": "https://github.com/pytorch/pytorch/pull/5483#issuecomment-369977862", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5483", "id": 369977862, "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTk3Nzg2Mg==", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-02T16:43:18Z", "updated_at": "2018-03-02T16:43:18Z", "author_association": "MEMBER", "body_html": "<p>It seems like we should just use the <code>ncclChar</code> type if that's the only one available. I'm not sure if the fudging of types should happen in our call to Gloo with <code>int8_t</code> or Gloo's call to NCCL with <code>uint8_t</code> -&gt; <code>char</code>.</p>\n<p>FWIW, we map ByteTensor to ncclChar in our internal calls to NCCL:<br>\n<div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pytorch/pytorch/blob/23fc2b7e06b9c539f783eb91133b1c521cb4ff9b/torch/csrc/cuda/nccl.cpp#L74\">pytorch/torch/csrc/cuda/nccl.cpp</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 74\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pytorch/pytorch/commit/23fc2b7e06b9c539f783eb91133b1c521cb4ff9b\">23fc2b7</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L74\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"74\"></td>\n          <td id=\"LC74\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">case</span> at::<span class=\"pl-c1\">kChar</span>    : <span class=\"pl-k\">return</span> ncclChar; </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "body_text": "It seems like we should just use the ncclChar type if that's the only one available. I'm not sure if the fudging of types should happen in our call to Gloo with int8_t or Gloo's call to NCCL with uint8_t -> char.\nFWIW, we map ByteTensor to ncclChar in our internal calls to NCCL:\n\n  \n    \n      pytorch/torch/csrc/cuda/nccl.cpp\n    \n    \n         Line 74\n      in\n      23fc2b7\n    \n    \n    \n    \n\n        \n          \n           case at::kChar    : return ncclChar;", "body": "It seems like we should just use the `ncclChar` type if that's the only one available. I'm not sure if the fudging of types should happen in our call to Gloo with `int8_t` or Gloo's call to NCCL with `uint8_t` -> `char`.\r\n\r\nFWIW, we map ByteTensor to ncclChar in our internal calls to NCCL:\r\nhttps://github.com/pytorch/pytorch/blob/23fc2b7e06b9c539f783eb91133b1c521cb4ff9b/torch/csrc/cuda/nccl.cpp#L74"}