{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/374469322", "html_url": "https://github.com/pytorch/pytorch/pull/5585#issuecomment-374469322", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5585", "id": 374469322, "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDQ2OTMyMg==", "user": {"login": "peterjc123", "id": 9998726, "node_id": "MDQ6VXNlcjk5OTg3MjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/9998726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peterjc123", "html_url": "https://github.com/peterjc123", "followers_url": "https://api.github.com/users/peterjc123/followers", "following_url": "https://api.github.com/users/peterjc123/following{/other_user}", "gists_url": "https://api.github.com/users/peterjc123/gists{/gist_id}", "starred_url": "https://api.github.com/users/peterjc123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peterjc123/subscriptions", "organizations_url": "https://api.github.com/users/peterjc123/orgs", "repos_url": "https://api.github.com/users/peterjc123/repos", "events_url": "https://api.github.com/users/peterjc123/events{/privacy}", "received_events_url": "https://api.github.com/users/peterjc123/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-20T04:18:21Z", "updated_at": "2018-03-20T04:18:21Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> Yes, you are right. The problem is that we cannot get the handle(because the ctx object may be already gone) and don't know when to release it when IO completes.<br>\nI don't know exactly which one <code>FileMapping</code> should belong to. It uses memory instead of a hard disk. (using a file is also okay for <code>FileMapping</code>) The <code>file_descriptor</code> works on <code>fork</code> but the <code>FileMapping</code> works on <code>spawn</code>. The file_descriptor is shared through a number(handle) while FileMapping uses the same name to specify the same object.</p>", "body_text": "@apaszke Yes, you are right. The problem is that we cannot get the handle(because the ctx object may be already gone) and don't know when to release it when IO completes.\nI don't know exactly which one FileMapping should belong to. It uses memory instead of a hard disk. (using a file is also okay for FileMapping) The file_descriptor works on fork but the FileMapping works on spawn. The file_descriptor is shared through a number(handle) while FileMapping uses the same name to specify the same object.", "body": "@apaszke Yes, you are right. The problem is that we cannot get the handle(because the ctx object may be already gone) and don't know when to release it when IO completes.\r\nI don't know exactly which one `FileMapping` should belong to. It uses memory instead of a hard disk. (using a file is also okay for `FileMapping`) The `file_descriptor` works on `fork` but the `FileMapping` works on `spawn`. The file_descriptor is shared through a number(handle) while FileMapping uses the same name to specify the same object."}