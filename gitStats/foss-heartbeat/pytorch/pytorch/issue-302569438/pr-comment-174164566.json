{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/174164566", "pull_request_review_id": 103469796, "id": 174164566, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDE2NDU2Ng==", "diff_hunk": "@@ -126,11 +137,125 @@ ptrdiff_t THMapAllocatorContext_size(THMapAllocatorContext *ctx)\n \n void THMapAllocatorContext_free(THMapAllocatorContext *ctx)\n {\n-  if (ctx->filename != unknown_filename)\n+  if (ctx->filename != unknown_filename) {\n     THFree(ctx->filename);\n+#ifdef _WIN32\n+    THFree(ctx->eventname);\n+#endif\n+  }\n   THFree(ctx);\n }\n \n+#ifdef _WIN32\n+typedef struct {\n+  HANDLE event[MAXIMUM_WAIT_OBJECTS];\n+  HANDLE handle[MAXIMUM_WAIT_OBJECTS];\n+  void *data[MAXIMUM_WAIT_OBJECTS];\n+  int nCount;\n+  CRITICAL_SECTION* CriticalSection;\n+  HANDLE event_process;\n+} ReleaseContextList;\n+static ReleaseContextList* context_list;\n+static void AddToList(ReleaseContextList* context_list, HANDLE event, HANDLE handle, void* data) {\n+  EnterCriticalSection(context_list->CriticalSection);\n+\n+  context_list->event[context_list->nCount] = event;\n+  context_list->handle[context_list->nCount] = handle;\n+  context_list->data[context_list->nCount] = data;\n+\n+  THAtomicIncrementRef(&context_list->nCount);\n+  LeaveCriticalSection(context_list->CriticalSection);\n+}\n+static void RemoveFromList(int index, ReleaseContextList* context_list) {\n+  EnterCriticalSection(context_list->CriticalSection);\n+  if (context_list->nCount != 1) {\n+    context_list->event[index] = context_list->event[context_list->nCount - 1];\n+    context_list->handle[index] = context_list->handle[context_list->nCount - 1];\n+    context_list->data[index] = context_list->data[context_list->nCount - 1];\n+  }\n+\n+  context_list->event[context_list->nCount - 1] = INVALID_HANDLE_VALUE;\n+  context_list->handle[context_list->nCount - 1] = INVALID_HANDLE_VALUE;\n+  context_list->data[context_list->nCount - 1] = NULL;\n+\n+  THAtomicDecrementRef(&context_list->nCount);\n+  LeaveCriticalSection(context_list->CriticalSection);\n+}\n+static DWORD WINAPI WaitForReleaseHandle(LPVOID lpParam) {\n+  ReleaseContextList *context_list = (ReleaseContextList *)lpParam;\n+\n+  HANDLE event;\n+  HANDLE handle;\n+  HANDLE event_process;\n+  DWORD dwEvent;\n+  \n+  void *data;\n+\n+  event_process = context_list->event_process;\n+  \n+  WaitForSingleObject(event_process, INFINITE);\n+\n+  while (TRUE) {\n+    \n+    if (THAtomicGet(&context_list->nCount) == 0)\n+      break;\n+\n+    int nCount = THAtomicGet(&context_list->nCount);", "path": "aten/src/TH/THAllocator.c", "position": null, "original_position": 93, "commit_id": "1dfcd28a04e5a1db16da7894f2e2305a5bc41935", "original_commit_id": "daefbf3f441f4a1df015bd68ee01946af0754bb4", "user": {"login": "peterjc123", "id": 9998726, "node_id": "MDQ6VXNlcjk5OTg3MjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/9998726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peterjc123", "html_url": "https://github.com/peterjc123", "followers_url": "https://api.github.com/users/peterjc123/followers", "following_url": "https://api.github.com/users/peterjc123/following{/other_user}", "gists_url": "https://api.github.com/users/peterjc123/gists{/gist_id}", "starred_url": "https://api.github.com/users/peterjc123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peterjc123/subscriptions", "organizations_url": "https://api.github.com/users/peterjc123/orgs", "repos_url": "https://api.github.com/users/peterjc123/repos", "events_url": "https://api.github.com/users/peterjc123/events{/privacy}", "received_events_url": "https://api.github.com/users/peterjc123/received_events", "type": "User", "site_admin": false}, "body": "If I'm not getting wrong, there is currently one daemon thread running this function. So the circumstance you described won't happen. ", "created_at": "2018-03-13T15:02:15Z", "updated_at": "2018-11-23T15:40:41Z", "html_url": "https://github.com/pytorch/pytorch/pull/5585#discussion_r174164566", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5585", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/174164566"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5585#discussion_r174164566"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5585"}}, "body_html": "<p>If I'm not getting wrong, there is currently one daemon thread running this function. So the circumstance you described won't happen.</p>", "body_text": "If I'm not getting wrong, there is currently one daemon thread running this function. So the circumstance you described won't happen.", "in_reply_to_id": 173735254}