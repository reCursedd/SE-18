{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/374265837", "html_url": "https://github.com/pytorch/pytorch/pull/5585#issuecomment-374265837", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5585", "id": 374265837, "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDI2NTgzNw==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-19T16:02:49Z", "updated_at": "2018-03-19T16:04:32Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9998726\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/peterjc123\">@peterjc123</a> Ok, so the issue is that we're only sending the name of the shared object in this file, and this doesn't cause its refcount to increase, so we can't close it until it is opened in another process. Do I understand this correctly?</p>\n<p>Also, is <code>filesystem</code> the only way of multiprocessing we support at the moment, or does <code>file_descriptor</code> work too?</p>", "body_text": "@peterjc123 Ok, so the issue is that we're only sending the name of the shared object in this file, and this doesn't cause its refcount to increase, so we can't close it until it is opened in another process. Do I understand this correctly?\nAlso, is filesystem the only way of multiprocessing we support at the moment, or does file_descriptor work too?", "body": "@peterjc123 Ok, so the issue is that we're only sending the name of the shared object in this file, and this doesn't cause its refcount to increase, so we can't close it until it is opened in another process. Do I understand this correctly?\r\n\r\nAlso, is `filesystem` the only way of multiprocessing we support at the moment, or does `file_descriptor` work too?"}