{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/173117730", "pull_request_review_id": 102250556, "id": 173117730, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzExNzczMA==", "diff_hunk": "@@ -126,11 +137,50 @@ ptrdiff_t THMapAllocatorContext_size(THMapAllocatorContext *ctx)\n \n void THMapAllocatorContext_free(THMapAllocatorContext *ctx)\n {\n-  if (ctx->filename != unknown_filename)\n+  if (ctx->filename != unknown_filename) {\n     THFree(ctx->filename);\n+#ifdef _WIN32\n+    THFree(ctx->eventname);\n+#endif\n+  }\n   THFree(ctx);\n }\n \n+#ifdef _WIN32\n+typedef struct{\n+  HANDLE event;\n+  HANDLE handle;\n+  void *data;\n+} ReleaseContext;\n+static DWORD WINAPI WaitForReleaseHandle(LPVOID lpParam) {\n+  ReleaseContext *cxt = (ReleaseContext *)lpParam;\n+\n+  HANDLE event = cxt->event;\n+  HANDLE handle = cxt->handle;\n+  void *data = cxt->data;\n+\n+  while (TRUE) {\n+    WaitForSingleObject(event, INFINITE);\n+\n+    THMapInfo *info = (THMapInfo*)(((char*)data) - TH_ALLOC_ALIGNMENT);\n+    if (THAtomicGet(&info->refcount) == 0) {", "path": "aten/src/TH/THAllocator.c", "position": null, "original_position": 56, "commit_id": "1dfcd28a04e5a1db16da7894f2e2305a5bc41935", "original_commit_id": "5f6bd87d26b7649d7edd4e4e25d93201505d81d9", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Why do you need to poll on this? The process that sets the even will do it only when it reaches zero, so you don't need to do it again in here, right?", "created_at": "2018-03-08T10:23:26Z", "updated_at": "2018-11-23T15:40:29Z", "html_url": "https://github.com/pytorch/pytorch/pull/5585#discussion_r173117730", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5585", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/173117730"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5585#discussion_r173117730"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5585"}}, "body_html": "<p>Why do you need to poll on this? The process that sets the even will do it only when it reaches zero, so you don't need to do it again in here, right?</p>", "body_text": "Why do you need to poll on this? The process that sets the even will do it only when it reaches zero, so you don't need to do it again in here, right?"}