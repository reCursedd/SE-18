{"url": "https://api.github.com/repos/pytorch/pytorch/issues/11439", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11439/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11439/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11439/events", "html_url": "https://github.com/pytorch/pytorch/issues/11439", "id": 358395831, "node_id": "MDU6SXNzdWUzNTgzOTU4MzE=", "number": 11439, "title": "High leverage TH operations to port to ATen", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-09T17:33:25Z", "updated_at": "2018-09-09T17:33:25Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>Now that the THTensor/THStorage structs live directly in ATen, this unlocks some core tensor operations which we should port to ATen sooner rather than later. Here is an incomplete list:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Copying/tensor conversions, e.g., <code>THByteTensor_copyByte</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Basic storage functionality in <code>THStorage.h</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Basic tensor functionality in <code>THTensor.h</code>. Of particular importance (e.g., these are exercised when you call <code>at::empty()</code>):\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code>THTensor_(newWithSize)</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code>THTensor_(newWithStorage)</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code>THTensor_(setStorageNd)</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code>THTensor_resizeNd</code></li>\n</ul>\n</li>\n</ul>\n<p>Rewrites should NOT use raw pointers (use smart pointers instead). There may also be some macro-level organization that makes sense; for example, it probably doesn't make too much sense for <code>setStorageNd</code> to also know how to allocate storages.</p>", "body_text": "Now that the THTensor/THStorage structs live directly in ATen, this unlocks some core tensor operations which we should port to ATen sooner rather than later. Here is an incomplete list:\n\n Copying/tensor conversions, e.g., THByteTensor_copyByte\n Basic storage functionality in THStorage.h\n Basic tensor functionality in THTensor.h. Of particular importance (e.g., these are exercised when you call at::empty()):\n\n THTensor_(newWithSize)\n THTensor_(newWithStorage)\n THTensor_(setStorageNd)\n THTensor_resizeNd\n\n\n\nRewrites should NOT use raw pointers (use smart pointers instead). There may also be some macro-level organization that makes sense; for example, it probably doesn't make too much sense for setStorageNd to also know how to allocate storages.", "body": "Now that the THTensor/THStorage structs live directly in ATen, this unlocks some core tensor operations which we should port to ATen sooner rather than later. Here is an incomplete list:\r\n\r\n- [ ] Copying/tensor conversions, e.g., `THByteTensor_copyByte`\r\n- [ ] Basic storage functionality in `THStorage.h`\r\n- [ ] Basic tensor functionality in `THTensor.h`. Of particular importance (e.g., these are exercised when you call `at::empty()`):\r\n  - [ ] `THTensor_(newWithSize)`\r\n  - [ ] `THTensor_(newWithStorage)`\r\n  - [ ] `THTensor_(setStorageNd)`\r\n  - [ ] `THTensor_resizeNd`\r\n\r\nRewrites should NOT use raw pointers (use smart pointers instead). There may also be some macro-level organization that makes sense; for example, it probably doesn't make too much sense for `setStorageNd` to also know how to allocate storages."}