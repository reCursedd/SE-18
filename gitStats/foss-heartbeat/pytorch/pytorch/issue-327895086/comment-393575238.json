{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/393575238", "html_url": "https://github.com/pytorch/pytorch/pull/7964#issuecomment-393575238", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7964", "id": 393575238, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzU3NTIzOA==", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-31T15:44:19Z", "updated_at": "2018-05-31T15:44:19Z", "author_association": "CONTRIBUTOR", "body_html": "<p>A couple of microbenchmarks (accessing storage and copying storage):</p>\n<p>before this patch:</p>\n<pre><code>In [5]: %t x[0]\n47.2 ns \u00b1 1.44 ns per loop (mean \u00b1 std. dev. of 7 runs, 10000000 loops each)\n\nIn [13]: %t x.copy_(y)\n338 ns \u00b1 8.41 ns per loop (mean \u00b1 std. dev. of 7 runs, 1000000 loops each)\n</code></pre>\n<p>after this patch:</p>\n<pre><code>In [5]: %t x[0]\n46.3 ns \u00b1 1.55 ns per loop (mean \u00b1 std. dev. of 7 runs, 10000000 loops each)\n\nIn [6]:  %t x.copy_(y)\n326 ns \u00b1 8.66 ns per loop (mean \u00b1 std. dev. of 7 runs, 1000000 loops each)\n</code></pre>\n<p>so within the margin of error.</p>", "body_text": "A couple of microbenchmarks (accessing storage and copying storage):\nbefore this patch:\nIn [5]: %t x[0]\n47.2 ns \u00b1 1.44 ns per loop (mean \u00b1 std. dev. of 7 runs, 10000000 loops each)\n\nIn [13]: %t x.copy_(y)\n338 ns \u00b1 8.41 ns per loop (mean \u00b1 std. dev. of 7 runs, 1000000 loops each)\n\nafter this patch:\nIn [5]: %t x[0]\n46.3 ns \u00b1 1.55 ns per loop (mean \u00b1 std. dev. of 7 runs, 10000000 loops each)\n\nIn [6]:  %t x.copy_(y)\n326 ns \u00b1 8.66 ns per loop (mean \u00b1 std. dev. of 7 runs, 1000000 loops each)\n\nso within the margin of error.", "body": "A couple of microbenchmarks (accessing storage and copying storage):\r\n\r\nbefore this patch:\r\n```\r\nIn [5]: %t x[0]\r\n47.2 ns \u00b1 1.44 ns per loop (mean \u00b1 std. dev. of 7 runs, 10000000 loops each)\r\n\r\nIn [13]: %t x.copy_(y)\r\n338 ns \u00b1 8.41 ns per loop (mean \u00b1 std. dev. of 7 runs, 1000000 loops each)\r\n```\r\nafter this patch:\r\n```\r\nIn [5]: %t x[0]\r\n46.3 ns \u00b1 1.55 ns per loop (mean \u00b1 std. dev. of 7 runs, 10000000 loops each)\r\n\r\nIn [6]:  %t x.copy_(y)\r\n326 ns \u00b1 8.66 ns per loop (mean \u00b1 std. dev. of 7 runs, 1000000 loops each)\r\n```\r\n\r\nso within the margin of error."}