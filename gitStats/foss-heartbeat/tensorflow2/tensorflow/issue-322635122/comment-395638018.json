{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/395638018", "html_url": "https://github.com/tensorflow/tensorflow/issues/19260#issuecomment-395638018", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19260", "id": 395638018, "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTYzODAxOA==", "user": {"login": "rryan", "id": 26527, "node_id": "MDQ6VXNlcjI2NTI3", "avatar_url": "https://avatars3.githubusercontent.com/u/26527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rryan", "html_url": "https://github.com/rryan", "followers_url": "https://api.github.com/users/rryan/followers", "following_url": "https://api.github.com/users/rryan/following{/other_user}", "gists_url": "https://api.github.com/users/rryan/gists{/gist_id}", "starred_url": "https://api.github.com/users/rryan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rryan/subscriptions", "organizations_url": "https://api.github.com/users/rryan/orgs", "repos_url": "https://api.github.com/users/rryan/repos", "events_url": "https://api.github.com/users/rryan/events{/privacy}", "received_events_url": "https://api.github.com/users/rryan/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-08T03:48:48Z", "updated_at": "2018-06-08T03:55:02Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=29803654\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mjmatthews\">@mjmatthews</a></p>\n<p>Yea, the <code>end</code> is just <code>start + 1</code> in this case, so it makes sense the interval is not length 1.<br>\n<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/array_ops.py#L488\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/array_ops.py#L488</a></p>\n<p>Which violates the requirements of shrink_axis_mask:</p>\n<pre><code>If the ith bit of shrink_axis_mask is set, it implies that the ith specification shrinks \nthe dimensionality by 1. begin[i], end[i] and strides[i] must imply a slice of size 1 \nin the dimension. For example in Python one might do foo[:, 3, :] \nwhich would result in shrink_axis_mask equal to 2.\n</code></pre>\n<p>There is a workaround implemented in C++ here:<br>\n<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/util/strided_slice_op.cc#L290-L300\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/util/strided_slice_op.cc#L290-L300</a></p>\n<pre><code>        // If we are shrinking, the end index is now possibly incorrect. In\n        // particular foo[-1] produces sparse_begin = -1, sparse_end = 0.\n        // and canonical puts these to n-1 and 0, which implies a degenerate\n        // interval. Fortunately, it is now safe to re-create end as begin+1.\n        int64 x_fwd = begin_i &lt; 0 ? dim_i + begin_i : begin_i;\n        begin_i = x_fwd;\n        end_i = begin_i + 1;\n</code></pre>\n<p>It's unfortunate, but tf.lite should probably follow suit, right?</p>\n<p>/cc: <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=326106\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/aselle\">@aselle</a></p>", "body_text": "@mjmatthews\nYea, the end is just start + 1 in this case, so it makes sense the interval is not length 1.\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/array_ops.py#L488\nWhich violates the requirements of shrink_axis_mask:\nIf the ith bit of shrink_axis_mask is set, it implies that the ith specification shrinks \nthe dimensionality by 1. begin[i], end[i] and strides[i] must imply a slice of size 1 \nin the dimension. For example in Python one might do foo[:, 3, :] \nwhich would result in shrink_axis_mask equal to 2.\n\nThere is a workaround implemented in C++ here:\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/util/strided_slice_op.cc#L290-L300\n        // If we are shrinking, the end index is now possibly incorrect. In\n        // particular foo[-1] produces sparse_begin = -1, sparse_end = 0.\n        // and canonical puts these to n-1 and 0, which implies a degenerate\n        // interval. Fortunately, it is now safe to re-create end as begin+1.\n        int64 x_fwd = begin_i < 0 ? dim_i + begin_i : begin_i;\n        begin_i = x_fwd;\n        end_i = begin_i + 1;\n\nIt's unfortunate, but tf.lite should probably follow suit, right?\n/cc: @aselle", "body": "@mjmatthews \r\n\r\nYea, the `end` is just `start + 1` in this case, so it makes sense the interval is not length 1.\r\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/array_ops.py#L488\r\n\r\nWhich violates the requirements of shrink_axis_mask:\r\n```\r\nIf the ith bit of shrink_axis_mask is set, it implies that the ith specification shrinks \r\nthe dimensionality by 1. begin[i], end[i] and strides[i] must imply a slice of size 1 \r\nin the dimension. For example in Python one might do foo[:, 3, :] \r\nwhich would result in shrink_axis_mask equal to 2.\r\n```\r\n\r\nThere is a workaround implemented in C++ here:\r\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/util/strided_slice_op.cc#L290-L300\r\n```\r\n        // If we are shrinking, the end index is now possibly incorrect. In\r\n        // particular foo[-1] produces sparse_begin = -1, sparse_end = 0.\r\n        // and canonical puts these to n-1 and 0, which implies a degenerate\r\n        // interval. Fortunately, it is now safe to re-create end as begin+1.\r\n        int64 x_fwd = begin_i < 0 ? dim_i + begin_i : begin_i;\r\n        begin_i = x_fwd;\r\n        end_i = begin_i + 1;\r\n```\r\n\r\nIt's unfortunate, but tf.lite should probably follow suit, right?\r\n\r\n/cc: @aselle "}