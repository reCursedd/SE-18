{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/397053901", "html_url": "https://github.com/tensorflow/tensorflow/issues/19260#issuecomment-397053901", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19260", "id": 397053901, "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzA1MzkwMQ==", "user": {"login": "mjmatthews", "id": 29803654, "node_id": "MDQ6VXNlcjI5ODAzNjU0", "avatar_url": "https://avatars0.githubusercontent.com/u/29803654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjmatthews", "html_url": "https://github.com/mjmatthews", "followers_url": "https://api.github.com/users/mjmatthews/followers", "following_url": "https://api.github.com/users/mjmatthews/following{/other_user}", "gists_url": "https://api.github.com/users/mjmatthews/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjmatthews/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjmatthews/subscriptions", "organizations_url": "https://api.github.com/users/mjmatthews/orgs", "repos_url": "https://api.github.com/users/mjmatthews/repos", "events_url": "https://api.github.com/users/mjmatthews/events{/privacy}", "received_events_url": "https://api.github.com/users/mjmatthews/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-13T19:16:38Z", "updated_at": "2018-06-13T19:16:38Z", "author_association": "NONE", "body_html": "<p>I believe we're ok in the -2 case. The existing code should produce:</p>\n<pre><code>print sess.run(tf.constant([1,2,3,4])[-2:-1:1])\n[3]\n</code></pre>\n<p>I think the s-1 case your pointing out would be for a negative stride, ie:</p>\n<pre><code>print sess.run(tf.constant([1,2,3,4])[0])\nprint sess.run(tf.constant([1,2,3,4])[0:-1:-1])\nprint sess.run(tf.constant([1,2,3,4])[0:  :-1])\n1\n[]\n[1]\n</code></pre>\n<p>but since we pick the stride to be positive, we can always use s+1. These are the one case where the interval crosses zero, causing the logic to differ and requiring the use of end_mask.</p>\n<p>I was unaware of s possibly being a tensor. If we're computing on an element-wise basis, wouldn't we have to set the end_mask as well too? Not quite sure what that would look like.</p>", "body_text": "I believe we're ok in the -2 case. The existing code should produce:\nprint sess.run(tf.constant([1,2,3,4])[-2:-1:1])\n[3]\n\nI think the s-1 case your pointing out would be for a negative stride, ie:\nprint sess.run(tf.constant([1,2,3,4])[0])\nprint sess.run(tf.constant([1,2,3,4])[0:-1:-1])\nprint sess.run(tf.constant([1,2,3,4])[0:  :-1])\n1\n[]\n[1]\n\nbut since we pick the stride to be positive, we can always use s+1. These are the one case where the interval crosses zero, causing the logic to differ and requiring the use of end_mask.\nI was unaware of s possibly being a tensor. If we're computing on an element-wise basis, wouldn't we have to set the end_mask as well too? Not quite sure what that would look like.", "body": "I believe we're ok in the -2 case. The existing code should produce:\r\n```\r\nprint sess.run(tf.constant([1,2,3,4])[-2:-1:1])\r\n[3]\r\n```\r\nI think the s-1 case your pointing out would be for a negative stride, ie:\r\n```\r\nprint sess.run(tf.constant([1,2,3,4])[0])\r\nprint sess.run(tf.constant([1,2,3,4])[0:-1:-1])\r\nprint sess.run(tf.constant([1,2,3,4])[0:  :-1])\r\n1\r\n[]\r\n[1]\r\n```\r\nbut since we pick the stride to be positive, we can always use s+1. These are the one case where the interval crosses zero, causing the logic to differ and requiring the use of end_mask. \r\n\r\nI was unaware of s possibly being a tensor. If we're computing on an element-wise basis, wouldn't we have to set the end_mask as well too? Not quite sure what that would look like."}