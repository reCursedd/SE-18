{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/347832048", "html_url": "https://github.com/tensorflow/tensorflow/issues/14906#issuecomment-347832048", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14906", "id": 347832048, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzgzMjA0OA==", "user": {"login": "Gumilton", "id": 9038746, "node_id": "MDQ6VXNlcjkwMzg3NDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/9038746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gumilton", "html_url": "https://github.com/Gumilton", "followers_url": "https://api.github.com/users/Gumilton/followers", "following_url": "https://api.github.com/users/Gumilton/following{/other_user}", "gists_url": "https://api.github.com/users/Gumilton/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gumilton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gumilton/subscriptions", "organizations_url": "https://api.github.com/users/Gumilton/orgs", "repos_url": "https://api.github.com/users/Gumilton/repos", "events_url": "https://api.github.com/users/Gumilton/events{/privacy}", "received_events_url": "https://api.github.com/users/Gumilton/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-29T11:25:45Z", "updated_at": "2017-11-29T11:25:45Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a> Thanks! This works in splitting them into chunks along time axis. However, if the lengths of the original signals are different, how could we know when to reset the state of LSTM to 0?<br>\nFor example, if we have two batches and each batch size is 1.<br>\n[<br>\n[[[1], [2], [3], [4], [5], [6]]],<br>\n[[[7], [8], [9], [10], [11], [12], [13]]]<br>\n]<br>\nThe only one sample in the first batch is of length 6 while the other one is of length 7. We want reset the state of LSTM to 0 after slicing over the first sample, to make the LSTM state-ful.</p>", "body_text": "@mrry Thanks! This works in splitting them into chunks along time axis. However, if the lengths of the original signals are different, how could we know when to reset the state of LSTM to 0?\nFor example, if we have two batches and each batch size is 1.\n[\n[[[1], [2], [3], [4], [5], [6]]],\n[[[7], [8], [9], [10], [11], [12], [13]]]\n]\nThe only one sample in the first batch is of length 6 while the other one is of length 7. We want reset the state of LSTM to 0 after slicing over the first sample, to make the LSTM state-ful.", "body": "@mrry Thanks! This works in splitting them into chunks along time axis. However, if the lengths of the original signals are different, how could we know when to reset the state of LSTM to 0?\r\nFor example, if we have two batches and each batch size is 1. \r\n[\r\n[[[1], [2], [3], [4], [5], [6]]],\r\n[[[7], [8], [9], [10], [11], [12], [13]]]\r\n]\r\nThe only one sample in the first batch is of length 6 while the other one is of length 7. We want reset the state of LSTM to 0 after slicing over the first sample, to make the LSTM state-ful.\r\n"}