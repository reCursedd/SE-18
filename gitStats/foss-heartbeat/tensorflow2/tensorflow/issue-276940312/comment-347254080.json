{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/347254080", "html_url": "https://github.com/tensorflow/tensorflow/issues/14906#issuecomment-347254080", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14906", "id": 347254080, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzI1NDA4MA==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-27T17:15:35Z", "updated_at": "2017-11-27T17:15:35Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Currently the <code>tf.data</code> APIs all treat the outermost dimension as the batch dimension, both for slicing into elements and for batching. Can you use <code>tf.tranpose()</code> or <code>np.transpose()</code> to reorder the dimensions so that this works for your data?</p>", "body_text": "Currently the tf.data APIs all treat the outermost dimension as the batch dimension, both for slicing into elements and for batching. Can you use tf.tranpose() or np.transpose() to reorder the dimensions so that this works for your data?", "body": "Currently the `tf.data` APIs all treat the outermost dimension as the batch dimension, both for slicing into elements and for batching. Can you use `tf.tranpose()` or `np.transpose()` to reorder the dimensions so that this works for your data?"}