{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18052", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18052/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18052/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18052/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/18052", "id": 309416391, "node_id": "MDExOlB1bGxSZXF1ZXN0MTc4MDc2MjI4", "number": 18052, "title": "Raise a nicer error message when trying to call gradients with while loop", "user": {"login": "imsheridan", "id": 1680977, "node_id": "MDQ6VXNlcjE2ODA5Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1680977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imsheridan", "html_url": "https://github.com/imsheridan", "followers_url": "https://api.github.com/users/imsheridan/followers", "following_url": "https://api.github.com/users/imsheridan/following{/other_user}", "gists_url": "https://api.github.com/users/imsheridan/gists{/gist_id}", "starred_url": "https://api.github.com/users/imsheridan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imsheridan/subscriptions", "organizations_url": "https://api.github.com/users/imsheridan/orgs", "repos_url": "https://api.github.com/users/imsheridan/repos", "events_url": "https://api.github.com/users/imsheridan/events{/privacy}", "received_events_url": "https://api.github.com/users/imsheridan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 419840263, "node_id": "MDU6TGFiZWw0MTk4NDAyNjM=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/awaiting%20testing%20(then%20merge)", "name": "awaiting testing (then merge)", "color": "c2e0c6", "default": false}, {"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-03-28T15:25:55Z", "updated_at": "2018-03-30T01:52:10Z", "closed_at": "2018-03-29T18:11:56Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18052", "html_url": "https://github.com/tensorflow/tensorflow/pull/18052", "diff_url": "https://github.com/tensorflow/tensorflow/pull/18052.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/18052.patch"}, "body_html": "<p>This PR is to <span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #7404.\">fix</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"206696824\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/7404\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/7404/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/7404\">#7404</a>.<br>\nWhen you import a graph with a \"while\" loop, you can't calculate gradients as you could on the original graph. e.g.</p>\n<blockquote>\n<p>import tensorflow as tf<br>\ni=tf.constant(0, name=\"input\")<br>\nout=tf.while_loop(lambda i: tf.less(i,5), lambda i: [tf.add(i,1)], [i], name=\"output\")<br>\ngraph_def = tf.get_default_graph().as_graph_def()</p>\n<p>g = tf.Graph()<br>\nwith g.as_default():<br>\ntf.import_graph_def(graph_def)<br>\ns = tf.Session(graph=g)<br>\ni_imported = g.get_tensor_by_name(\"import/input:0\")<br>\nout_imported = g.get_tensor_by_name(\"import/output/Exit:0\")<br>\ntf.gradients(out_imported, i_imported)</p>\n</blockquote>\n<p>But if you save and restore the metagraph (via <code>tf.train.export_meta_graph</code> and <code>tf.train.import_meta_graph</code>, then you can take the gradient in the restored session. So it's just a problem if you try serializing and importing the GraphDef itself<br>\n/Users/malmaud/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/control_flow_ops.pyc in AddWhileContext(self, op, between_op_list, between_ops)</p>\n<blockquote>\n<p>1102     if grad_state is None:<br>\n1103       # This is a new while loop so create a grad state for it.<br>\n-&gt; 1104       outer_forward_ctxt = forward_ctxt.outer_context<br>\n1105       if outer_forward_ctxt:<br>\n1106         outer_forward_ctxt = outer_forward_ctxt.GetWhileContext()<br>\nAttributeError: 'NoneType' object has no attribute 'outer_context'</p>\n</blockquote>\n<p>As said in above discussion, we needs to raise a nicer error message when trying to call gradients on a while loop, so that users don't have to guess the graph vs. metagraph issue.</p>\n<blockquote>\n<p>I believe that the forward_ctxt object here:<br>\nforward_ctxt.outer_context<br>\nshould have a <a class=\"user-mention\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/Property/hovercard\" href=\"https://github.com/Property\">@Property</a> outer_context; and if no such internal object is set, it can raise a ValueError/InternalError that maybe you're trying to call gradients on a while loop without properly serializing your graph via MetaGraphDef.</p>\n</blockquote>", "body_text": "This PR is to fix #7404.\nWhen you import a graph with a \"while\" loop, you can't calculate gradients as you could on the original graph. e.g.\n\nimport tensorflow as tf\ni=tf.constant(0, name=\"input\")\nout=tf.while_loop(lambda i: tf.less(i,5), lambda i: [tf.add(i,1)], [i], name=\"output\")\ngraph_def = tf.get_default_graph().as_graph_def()\ng = tf.Graph()\nwith g.as_default():\ntf.import_graph_def(graph_def)\ns = tf.Session(graph=g)\ni_imported = g.get_tensor_by_name(\"import/input:0\")\nout_imported = g.get_tensor_by_name(\"import/output/Exit:0\")\ntf.gradients(out_imported, i_imported)\n\nBut if you save and restore the metagraph (via tf.train.export_meta_graph and tf.train.import_meta_graph, then you can take the gradient in the restored session. So it's just a problem if you try serializing and importing the GraphDef itself\n/Users/malmaud/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/control_flow_ops.pyc in AddWhileContext(self, op, between_op_list, between_ops)\n\n1102     if grad_state is None:\n1103       # This is a new while loop so create a grad state for it.\n-> 1104       outer_forward_ctxt = forward_ctxt.outer_context\n1105       if outer_forward_ctxt:\n1106         outer_forward_ctxt = outer_forward_ctxt.GetWhileContext()\nAttributeError: 'NoneType' object has no attribute 'outer_context'\n\nAs said in above discussion, we needs to raise a nicer error message when trying to call gradients on a while loop, so that users don't have to guess the graph vs. metagraph issue.\n\nI believe that the forward_ctxt object here:\nforward_ctxt.outer_context\nshould have a @Property outer_context; and if no such internal object is set, it can raise a ValueError/InternalError that maybe you're trying to call gradients on a while loop without properly serializing your graph via MetaGraphDef.", "body": "This PR is to fix #7404.\r\nWhen you import a graph with a \"while\" loop, you can't calculate gradients as you could on the original graph. e.g.\r\n> import tensorflow as tf\r\n> i=tf.constant(0, name=\"input\")\r\n> out=tf.while_loop(lambda i: tf.less(i,5), lambda i: [tf.add(i,1)], [i], name=\"output\")\r\n> graph_def = tf.get_default_graph().as_graph_def()\r\n> \r\n> g = tf.Graph()\r\n> with g.as_default():\r\n>     tf.import_graph_def(graph_def)\r\n> s = tf.Session(graph=g)\r\n> i_imported = g.get_tensor_by_name(\"import/input:0\")\r\n> out_imported = g.get_tensor_by_name(\"import/output/Exit:0\")\r\n> tf.gradients(out_imported, i_imported)\r\n\r\nBut if you save and restore the metagraph (via `tf.train.export_meta_graph` and `tf.train.import_meta_graph`, then you can take the gradient in the restored session. So it's just a problem if you try serializing and importing the GraphDef itself\r\n/Users/malmaud/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/control_flow_ops.pyc in AddWhileContext(self, op, between_op_list, between_ops)\r\n>    1102     if grad_state is None:\r\n>    1103       # This is a new while loop so create a grad state for it.\r\n> -> 1104       outer_forward_ctxt = forward_ctxt.outer_context\r\n>    1105       if outer_forward_ctxt:\r\n>    1106         outer_forward_ctxt = outer_forward_ctxt.GetWhileContext()\r\n>    AttributeError: 'NoneType' object has no attribute 'outer_context'\r\n\r\nAs said in above discussion, we needs to raise a nicer error message when trying to call gradients on a while loop, so that users don't have to guess the graph vs. metagraph issue.\r\n> I believe that the forward_ctxt object here:\r\n> forward_ctxt.outer_context\r\n> should have a @property outer_context; and if no such internal object is set, it can raise a ValueError/InternalError that maybe you're trying to call gradients on a while loop without properly serializing your graph via MetaGraphDef."}