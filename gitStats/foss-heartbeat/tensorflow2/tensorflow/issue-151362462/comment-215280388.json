{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/215280388", "html_url": "https://github.com/tensorflow/tensorflow/issues/2129#issuecomment-215280388", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2129", "id": 215280388, "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTI4MDM4OA==", "user": {"login": "stephenroller", "id": 31896, "node_id": "MDQ6VXNlcjMxODk2", "avatar_url": "https://avatars2.githubusercontent.com/u/31896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stephenroller", "html_url": "https://github.com/stephenroller", "followers_url": "https://api.github.com/users/stephenroller/followers", "following_url": "https://api.github.com/users/stephenroller/following{/other_user}", "gists_url": "https://api.github.com/users/stephenroller/gists{/gist_id}", "starred_url": "https://api.github.com/users/stephenroller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stephenroller/subscriptions", "organizations_url": "https://api.github.com/users/stephenroller/orgs", "repos_url": "https://api.github.com/users/stephenroller/repos", "events_url": "https://api.github.com/users/stephenroller/events{/privacy}", "received_events_url": "https://api.github.com/users/stephenroller/received_events", "type": "User", "site_admin": false}, "created_at": "2016-04-28T01:23:46Z", "updated_at": "2016-04-28T02:05:31Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I seem to be having this problem too, or maybe the one in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"149698972\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/2034\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/2034/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/2034\">#2034</a>. Tensorflow runs just fine, as long as numpy has already been imported.</p>\n<p>I'm using cuda 7.5, cudnn 5.0, numpy 1.11.0, python 2.7.11, and tensorflow HEAD (<a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/c38157c7cccf4c06e4d0d3f1f72ed490798dcfe5/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/c38157c7cccf4c06e4d0d3f1f72ed490798dcfe5\"><tt>c38157c</tt></a>). Everything was compiled by me.</p>\n<p>Test case</p>\n<pre><code>$ python\nPython 2.7.11 (default, Apr 25 2016, 20:02:17)\n[GCC 4.9.1] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; import tensorflow\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so.7.5 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so.7.5 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so.5.0 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so.7.5 locally\nzsh: segmentation fault (core dumped)  python\n</code></pre>\n<p>But it doesn't crash as long as numpy is imported first:</p>\n<pre><code>$ python\nPython 2.7.11 (default, Apr 25 2016, 20:02:17)\n[GCC 4.9.1] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; import numpy\n&gt;&gt;&gt; import tensorflow\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so.7.5 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so.7.5 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so.5.0 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so.7.5 locally\n&gt;&gt;&gt;\n</code></pre>\n<p>GDB stacktrace of the segfault.</p>\n<pre><code>$ gdb python\nGNU gdb (GDB) Red Hat Enterprise Linux (7.2-83.el6)\nCopyright (C) 2010 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"x86_64-redhat-linux-gnu\".\nFor bug reporting instructions, please see:\n&lt;http://www.gnu.org/software/gdb/bugs/&gt;...\nReading symbols from /work/01813/roller/maverick/packages/python/bin/python...done.\n(gdb) r\nStarting program: /work/01813/roller/maverick/packages/python/bin/python\n\n[Thread debugging using libthread_db enabled]\nPython 2.7.11 (default, Apr 25 2016, 20:02:17)\n[GCC 4.9.1] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt;\n&gt;&gt;&gt; import tensorflow\nwarning: File \"/opt/apps/gcc/4.9.1/lib64/libstdc++.so.6.0.20-gdb.py\" auto-loading has been declined by your `auto-load safe-path' set to \"/usr/share/gdb/auto-load:/usr/lib/debug:/usr/bin/mono-gdb.py\".\nTo enable execution of this file add\n        add-auto-load-safe-path /opt/apps/gcc/4.9.1/lib64/libstdc++.so.6.0.20-gdb.py\nline to your configuration file \"/home/01813/roller/.gdbinit\".\nTo completely disable this security protection add\n        set auto-load safe-path /\nline to your configuration file \"/home/01813/roller/.gdbinit\".\nFor more information about this security protection see the\n\"Auto-loading safe path\" section in the GDB manual.  E.g., run from the shell:\n        info \"(gdb)Auto-loading safe path\"\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so.7.5 locally\nMissing separate debuginfo for /usr/lib64/libcuda.so.1\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so.7.5 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so.5.0 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so.7.5 locally\nDetaching after fork from child process 10971.\nMissing separate debuginfo for /work/01813/roller/maverick/packages/python/lib/python2.7/site-packages/scipy/special/../.libs/libgfortran-ed201abd.so.3.0.0\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x00002aaac9d91a40 in PyArray_API () from /work/01813/roller/maverick/packages/python/lib/python2.7/site-packages/numpy-1.11.0-py2.7-linux-x86_64.egg/numpy/core/multiarray.so\nMissing separate debuginfos, use: debuginfo-install glibc-2.12-1.166.el6_7.1.x86_64 keyutils-libs-1.4-5.el6.x86_64 krb5-libs-1.10.3-42.el6.x86_64 libcom_err-1.41.12-22.el6.x86_64 libselinux-2.0.94-5.8.el6.x86_64 libuuid-2.17.2-12.18.el6.x86_64 ncurses-libs-5.7-4.20090207.el6.x86_64 openssl-1.0.1e-42.el6_7.4.x86_64 readline-6.0-4.el6.x86_64 zlib-1.2.3-29.el6.x86_64\n</code></pre>\n<p>Edit: I tried following the advice of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"138255438\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/1373\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/1373/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/1373\">#1373</a> and reinstalling everything, but it didn't help.</p>", "body_text": "I seem to be having this problem too, or maybe the one in #2034. Tensorflow runs just fine, as long as numpy has already been imported.\nI'm using cuda 7.5, cudnn 5.0, numpy 1.11.0, python 2.7.11, and tensorflow HEAD (c38157c). Everything was compiled by me.\nTest case\n$ python\nPython 2.7.11 (default, Apr 25 2016, 20:02:17)\n[GCC 4.9.1] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import tensorflow\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so.7.5 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so.7.5 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so.5.0 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so.7.5 locally\nzsh: segmentation fault (core dumped)  python\n\nBut it doesn't crash as long as numpy is imported first:\n$ python\nPython 2.7.11 (default, Apr 25 2016, 20:02:17)\n[GCC 4.9.1] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import numpy\n>>> import tensorflow\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so.7.5 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so.7.5 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so.5.0 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so.7.5 locally\n>>>\n\nGDB stacktrace of the segfault.\n$ gdb python\nGNU gdb (GDB) Red Hat Enterprise Linux (7.2-83.el6)\nCopyright (C) 2010 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"x86_64-redhat-linux-gnu\".\nFor bug reporting instructions, please see:\n<http://www.gnu.org/software/gdb/bugs/>...\nReading symbols from /work/01813/roller/maverick/packages/python/bin/python...done.\n(gdb) r\nStarting program: /work/01813/roller/maverick/packages/python/bin/python\n\n[Thread debugging using libthread_db enabled]\nPython 2.7.11 (default, Apr 25 2016, 20:02:17)\n[GCC 4.9.1] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>>\n>>> import tensorflow\nwarning: File \"/opt/apps/gcc/4.9.1/lib64/libstdc++.so.6.0.20-gdb.py\" auto-loading has been declined by your `auto-load safe-path' set to \"/usr/share/gdb/auto-load:/usr/lib/debug:/usr/bin/mono-gdb.py\".\nTo enable execution of this file add\n        add-auto-load-safe-path /opt/apps/gcc/4.9.1/lib64/libstdc++.so.6.0.20-gdb.py\nline to your configuration file \"/home/01813/roller/.gdbinit\".\nTo completely disable this security protection add\n        set auto-load safe-path /\nline to your configuration file \"/home/01813/roller/.gdbinit\".\nFor more information about this security protection see the\n\"Auto-loading safe path\" section in the GDB manual.  E.g., run from the shell:\n        info \"(gdb)Auto-loading safe path\"\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so.7.5 locally\nMissing separate debuginfo for /usr/lib64/libcuda.so.1\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so.7.5 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so.5.0 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so.7.5 locally\nDetaching after fork from child process 10971.\nMissing separate debuginfo for /work/01813/roller/maverick/packages/python/lib/python2.7/site-packages/scipy/special/../.libs/libgfortran-ed201abd.so.3.0.0\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x00002aaac9d91a40 in PyArray_API () from /work/01813/roller/maverick/packages/python/lib/python2.7/site-packages/numpy-1.11.0-py2.7-linux-x86_64.egg/numpy/core/multiarray.so\nMissing separate debuginfos, use: debuginfo-install glibc-2.12-1.166.el6_7.1.x86_64 keyutils-libs-1.4-5.el6.x86_64 krb5-libs-1.10.3-42.el6.x86_64 libcom_err-1.41.12-22.el6.x86_64 libselinux-2.0.94-5.8.el6.x86_64 libuuid-2.17.2-12.18.el6.x86_64 ncurses-libs-5.7-4.20090207.el6.x86_64 openssl-1.0.1e-42.el6_7.4.x86_64 readline-6.0-4.el6.x86_64 zlib-1.2.3-29.el6.x86_64\n\nEdit: I tried following the advice of #1373 and reinstalling everything, but it didn't help.", "body": "I seem to be having this problem too, or maybe the one in #2034. Tensorflow runs just fine, as long as numpy has already been imported.\n\nI'm using cuda 7.5, cudnn 5.0, numpy 1.11.0, python 2.7.11, and tensorflow HEAD (c38157c7cccf4c06e4d0d3f1f72ed490798dcfe5). Everything was compiled by me.\n\nTest case\n\n```\n$ python\nPython 2.7.11 (default, Apr 25 2016, 20:02:17)\n[GCC 4.9.1] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import tensorflow\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so.7.5 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so.7.5 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so.5.0 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so.7.5 locally\nzsh: segmentation fault (core dumped)  python\n```\n\nBut it doesn't crash as long as numpy is imported first:\n\n```\n$ python\nPython 2.7.11 (default, Apr 25 2016, 20:02:17)\n[GCC 4.9.1] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import numpy\n>>> import tensorflow\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so.7.5 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so.7.5 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so.5.0 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so.7.5 locally\n>>>\n```\n\nGDB stacktrace of the segfault.\n\n```\n$ gdb python\nGNU gdb (GDB) Red Hat Enterprise Linux (7.2-83.el6)\nCopyright (C) 2010 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"x86_64-redhat-linux-gnu\".\nFor bug reporting instructions, please see:\n<http://www.gnu.org/software/gdb/bugs/>...\nReading symbols from /work/01813/roller/maverick/packages/python/bin/python...done.\n(gdb) r\nStarting program: /work/01813/roller/maverick/packages/python/bin/python\n\n[Thread debugging using libthread_db enabled]\nPython 2.7.11 (default, Apr 25 2016, 20:02:17)\n[GCC 4.9.1] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>>\n>>> import tensorflow\nwarning: File \"/opt/apps/gcc/4.9.1/lib64/libstdc++.so.6.0.20-gdb.py\" auto-loading has been declined by your `auto-load safe-path' set to \"/usr/share/gdb/auto-load:/usr/lib/debug:/usr/bin/mono-gdb.py\".\nTo enable execution of this file add\n        add-auto-load-safe-path /opt/apps/gcc/4.9.1/lib64/libstdc++.so.6.0.20-gdb.py\nline to your configuration file \"/home/01813/roller/.gdbinit\".\nTo completely disable this security protection add\n        set auto-load safe-path /\nline to your configuration file \"/home/01813/roller/.gdbinit\".\nFor more information about this security protection see the\n\"Auto-loading safe path\" section in the GDB manual.  E.g., run from the shell:\n        info \"(gdb)Auto-loading safe path\"\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so.7.5 locally\nMissing separate debuginfo for /usr/lib64/libcuda.so.1\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so.7.5 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so.5.0 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so.7.5 locally\nDetaching after fork from child process 10971.\nMissing separate debuginfo for /work/01813/roller/maverick/packages/python/lib/python2.7/site-packages/scipy/special/../.libs/libgfortran-ed201abd.so.3.0.0\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x00002aaac9d91a40 in PyArray_API () from /work/01813/roller/maverick/packages/python/lib/python2.7/site-packages/numpy-1.11.0-py2.7-linux-x86_64.egg/numpy/core/multiarray.so\nMissing separate debuginfos, use: debuginfo-install glibc-2.12-1.166.el6_7.1.x86_64 keyutils-libs-1.4-5.el6.x86_64 krb5-libs-1.10.3-42.el6.x86_64 libcom_err-1.41.12-22.el6.x86_64 libselinux-2.0.94-5.8.el6.x86_64 libuuid-2.17.2-12.18.el6.x86_64 ncurses-libs-5.7-4.20090207.el6.x86_64 openssl-1.0.1e-42.el6_7.4.x86_64 readline-6.0-4.el6.x86_64 zlib-1.2.3-29.el6.x86_64\n```\n\nEdit: I tried following the advice of #1373 and reinstalling everything, but it didn't help.\n"}