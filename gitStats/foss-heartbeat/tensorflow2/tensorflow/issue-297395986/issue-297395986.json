{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17037", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17037/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17037/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17037/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17037", "id": 297395986, "node_id": "MDU6SXNzdWUyOTczOTU5ODY=", "number": 17037, "title": "Bug: tf.contrib.learn.Experiment.continuous_train_and_eval does not release GPU memory switching between training and evaluation phases", "user": {"login": "GPhilo", "id": 4441724, "node_id": "MDQ6VXNlcjQ0NDE3MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/4441724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GPhilo", "html_url": "https://github.com/GPhilo", "followers_url": "https://api.github.com/users/GPhilo/followers", "following_url": "https://api.github.com/users/GPhilo/following{/other_user}", "gists_url": "https://api.github.com/users/GPhilo/gists{/gist_id}", "starred_url": "https://api.github.com/users/GPhilo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GPhilo/subscriptions", "organizations_url": "https://api.github.com/users/GPhilo/orgs", "repos_url": "https://api.github.com/users/GPhilo/repos", "events_url": "https://api.github.com/users/GPhilo/events{/privacy}", "received_events_url": "https://api.github.com/users/GPhilo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-02-15T10:31:23Z", "updated_at": "2018-08-15T02:52:54Z", "closed_at": "2018-08-15T02:48:32Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: no</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: windows 10</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.6.0rc0</li>\n<li><strong>Python version</strong>: 3.5</li>\n<li><strong>Bazel version (if compiling from source)</strong>: -</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: -</li>\n<li><strong>CUDA/cuDNN version</strong>: 9.0/7.0.5</li>\n<li><strong>GPU model and memory</strong>: 1080, 8GB</li>\n<li><strong>Exact command to reproduce</strong>: -</li>\n</ul>\n<p>The documentation of <a href=\"https://www.tensorflow.org/api_docs/python/tf/contrib/learn/Experiment#continuous_train_and_eval\" rel=\"nofollow\"><code>continuous_train_and_eval</code></a> says:</p>\n<blockquote>\n<p>the resources (e.g., memory) used by training will be released before evaluation (train_and_evaluate takes double resources)</p>\n</blockquote>\n<p>From the execution logs, however, this doesn't seem to be the case:</p>\n<p><strong>Starting training</strong>:</p>\n<pre><code>2018-02-15 11:06:37.745151: I C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\35\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1208] Found device 0 with properties:\nname: GeForce GTX 1080 major: 6 minor: 1 memoryClockRate(GHz): 1.835\npciBusID: 0000:02:00.0\ntotalMemory: 8.00GiB freeMemory: 6.60GiB\n2018-02-15 11:06:37.764258: I C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\35\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1308] Adding visible gpu devices: 0\n2018-02-15 11:06:39.084140: I C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\35\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:989] Creating TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 6381 MB memory) -&gt; physical GPU (device: 0, name: GeForce GTX 1080, pci bus id: 0000:02:00.0, compute capability: 6.1)\n</code></pre>\n<p><strong>Switching from training to evaluation</strong>:</p>\n<pre><code>2018-02-15 09:12:54.871561: I C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\35\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1308] Adding visible gpu devices: 0\n2018-02-15 09:12:54.871717: I C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\35\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:989] Creating TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 175 MB memory) -&gt; physical GPU (device: 0, name: GeForce GTX 1080, pci bus id: 0000:02:00.0, compute capability: 6.1)\n</code></pre>\n<p><strong>Switching back from evaluation to training</strong>:</p>\n<pre><code>2018-02-14 19:56:50.513663: I C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\35\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1308] Adding visible gpu devices: 0\n2018-02-14 19:56:50.513819: I C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\35\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:989] Creating TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 175 MB memory) -&gt; physical GPU (device: 0, name: GeForce GTX 1080, pci bus id: 0000:02:00.0, compute capability: 6.1)\n</code></pre>\n<p>It seems the function's loop fails to release memory after the first training phase is complete, so the subsequent devices only have 175MBs of memory available. Interestingly, training does experience a reduction in speed, but not as high as I would have expected (with 6GBs of memory available I have about 1.1 steps/second, with 175MBs it's 1.0 steps/second).</p>\n<p>I'm training the standard <code>inception_resnet_v2</code> from <code>slim</code>'s model zoo (batch size is 32, if that information is of any use).</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): no\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): windows 10\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.6.0rc0\nPython version: 3.5\nBazel version (if compiling from source): -\nGCC/Compiler version (if compiling from source): -\nCUDA/cuDNN version: 9.0/7.0.5\nGPU model and memory: 1080, 8GB\nExact command to reproduce: -\n\nThe documentation of continuous_train_and_eval says:\n\nthe resources (e.g., memory) used by training will be released before evaluation (train_and_evaluate takes double resources)\n\nFrom the execution logs, however, this doesn't seem to be the case:\nStarting training:\n2018-02-15 11:06:37.745151: I C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\35\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1208] Found device 0 with properties:\nname: GeForce GTX 1080 major: 6 minor: 1 memoryClockRate(GHz): 1.835\npciBusID: 0000:02:00.0\ntotalMemory: 8.00GiB freeMemory: 6.60GiB\n2018-02-15 11:06:37.764258: I C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\35\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1308] Adding visible gpu devices: 0\n2018-02-15 11:06:39.084140: I C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\35\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:989] Creating TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 6381 MB memory) -> physical GPU (device: 0, name: GeForce GTX 1080, pci bus id: 0000:02:00.0, compute capability: 6.1)\n\nSwitching from training to evaluation:\n2018-02-15 09:12:54.871561: I C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\35\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1308] Adding visible gpu devices: 0\n2018-02-15 09:12:54.871717: I C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\35\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:989] Creating TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 175 MB memory) -> physical GPU (device: 0, name: GeForce GTX 1080, pci bus id: 0000:02:00.0, compute capability: 6.1)\n\nSwitching back from evaluation to training:\n2018-02-14 19:56:50.513663: I C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\35\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1308] Adding visible gpu devices: 0\n2018-02-14 19:56:50.513819: I C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\35\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:989] Creating TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 175 MB memory) -> physical GPU (device: 0, name: GeForce GTX 1080, pci bus id: 0000:02:00.0, compute capability: 6.1)\n\nIt seems the function's loop fails to release memory after the first training phase is complete, so the subsequent devices only have 175MBs of memory available. Interestingly, training does experience a reduction in speed, but not as high as I would have expected (with 6GBs of memory available I have about 1.1 steps/second, with 175MBs it's 1.0 steps/second).\nI'm training the standard inception_resnet_v2 from slim's model zoo (batch size is 32, if that information is of any use).", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: no\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: windows 10\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.6.0rc0\r\n- **Python version**: 3.5\r\n- **Bazel version (if compiling from source)**: -\r\n- **GCC/Compiler version (if compiling from source)**: -\r\n- **CUDA/cuDNN version**: 9.0/7.0.5\r\n- **GPU model and memory**: 1080, 8GB\r\n- **Exact command to reproduce**: -\r\n\r\nThe documentation of [`continuous_train_and_eval`](https://www.tensorflow.org/api_docs/python/tf/contrib/learn/Experiment#continuous_train_and_eval) says:\r\n\r\n> the resources (e.g., memory) used by training will be released before evaluation (train_and_evaluate takes double resources)\r\n\r\nFrom the execution logs, however, this doesn't seem to be the case:\r\n\r\n**Starting training**:\r\n```\r\n2018-02-15 11:06:37.745151: I C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\35\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1208] Found device 0 with properties:\r\nname: GeForce GTX 1080 major: 6 minor: 1 memoryClockRate(GHz): 1.835\r\npciBusID: 0000:02:00.0\r\ntotalMemory: 8.00GiB freeMemory: 6.60GiB\r\n2018-02-15 11:06:37.764258: I C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\35\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1308] Adding visible gpu devices: 0\r\n2018-02-15 11:06:39.084140: I C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\35\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:989] Creating TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 6381 MB memory) -> physical GPU (device: 0, name: GeForce GTX 1080, pci bus id: 0000:02:00.0, compute capability: 6.1)\r\n```\r\n\r\n**Switching from training to evaluation**:\r\n```\r\n2018-02-15 09:12:54.871561: I C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\35\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1308] Adding visible gpu devices: 0\r\n2018-02-15 09:12:54.871717: I C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\35\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:989] Creating TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 175 MB memory) -> physical GPU (device: 0, name: GeForce GTX 1080, pci bus id: 0000:02:00.0, compute capability: 6.1)\r\n```\r\n\r\n**Switching back from evaluation to training**:\r\n```\r\n2018-02-14 19:56:50.513663: I C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\35\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1308] Adding visible gpu devices: 0\r\n2018-02-14 19:56:50.513819: I C:\\tf_jenkins\\workspace\\rel-win\\M\\windows-gpu\\PY\\35\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:989] Creating TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 175 MB memory) -> physical GPU (device: 0, name: GeForce GTX 1080, pci bus id: 0000:02:00.0, compute capability: 6.1)\r\n```\r\n\r\nIt seems the function's loop fails to release memory after the first training phase is complete, so the subsequent devices only have 175MBs of memory available. Interestingly, training does experience a reduction in speed, but not as high as I would have expected (with 6GBs of memory available I have about 1.1 steps/second, with 175MBs it's 1.0 steps/second).\r\n\r\nI'm training the standard `inception_resnet_v2` from `slim`'s model zoo (batch size is 32, if that information is of any use)."}