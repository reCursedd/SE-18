{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/367956687", "html_url": "https://github.com/tensorflow/tensorflow/issues/17037#issuecomment-367956687", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17037", "id": 367956687, "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzk1NjY4Nw==", "user": {"login": "GPhilo", "id": 4441724, "node_id": "MDQ6VXNlcjQ0NDE3MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/4441724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GPhilo", "html_url": "https://github.com/GPhilo", "followers_url": "https://api.github.com/users/GPhilo/followers", "following_url": "https://api.github.com/users/GPhilo/following{/other_user}", "gists_url": "https://api.github.com/users/GPhilo/gists{/gist_id}", "starred_url": "https://api.github.com/users/GPhilo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GPhilo/subscriptions", "organizations_url": "https://api.github.com/users/GPhilo/orgs", "repos_url": "https://api.github.com/users/GPhilo/repos", "events_url": "https://api.github.com/users/GPhilo/events{/privacy}", "received_events_url": "https://api.github.com/users/GPhilo/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-23T09:30:22Z", "updated_at": "2018-02-23T09:30:22Z", "author_association": "NONE", "body_html": "<p>If the allocator doesn't release the memory, I assume the new session created when running evaluation won't have access to it (at least that's what I infer from the log messages). Doesn't this break the specification of <code>continuous_train_and_eval</code>? It's supposed to release the memory before running evaluation (if fact, that's the core difference between this and <code>train_and_eval</code>)</p>", "body_text": "If the allocator doesn't release the memory, I assume the new session created when running evaluation won't have access to it (at least that's what I infer from the log messages). Doesn't this break the specification of continuous_train_and_eval? It's supposed to release the memory before running evaluation (if fact, that's the core difference between this and train_and_eval)", "body": "If the allocator doesn't release the memory, I assume the new session created when running evaluation won't have access to it (at least that's what I infer from the log messages). Doesn't this break the specification of `continuous_train_and_eval`? It's supposed to release the memory before running evaluation (if fact, that's the core difference between this and `train_and_eval`)"}