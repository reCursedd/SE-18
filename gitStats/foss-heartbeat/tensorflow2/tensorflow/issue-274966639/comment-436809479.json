{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/436809479", "html_url": "https://github.com/tensorflow/tensorflow/issues/14663#issuecomment-436809479", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14663", "id": 436809479, "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjgwOTQ3OQ==", "user": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-07T23:00:49Z", "updated_at": "2018-11-07T23:00:49Z", "author_association": "CONTRIBUTOR", "body_html": "<p>This is a pretty nontrivial problem to solve.  We can add some dependency constraints to ensure that at least state dropout is performed in a deterministic way, but input dropout and (possibly) output dropout cannot be enforced this way.</p>\n<p>Probably the best way to ensure we do deterministic randomness inside a while_loop is to use the random ops from <code>tf.contrib.stateless</code> (soon to be moved to core).  This requires a lot more manual management of random seed, and will make the DropoutWrapper more complex.  It's still worth doing, but will require careful thought to do it correctly.</p>\n<p>If anyone is interested in implementing a <code>StatelessDropoutWrapper</code> using these primitives, I am happy to work with you to make it happen.  cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=70511\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/girving\">@girving</a>.</p>", "body_text": "This is a pretty nontrivial problem to solve.  We can add some dependency constraints to ensure that at least state dropout is performed in a deterministic way, but input dropout and (possibly) output dropout cannot be enforced this way.\nProbably the best way to ensure we do deterministic randomness inside a while_loop is to use the random ops from tf.contrib.stateless (soon to be moved to core).  This requires a lot more manual management of random seed, and will make the DropoutWrapper more complex.  It's still worth doing, but will require careful thought to do it correctly.\nIf anyone is interested in implementing a StatelessDropoutWrapper using these primitives, I am happy to work with you to make it happen.  cc @girving.", "body": "This is a pretty nontrivial problem to solve.  We can add some dependency constraints to ensure that at least state dropout is performed in a deterministic way, but input dropout and (possibly) output dropout cannot be enforced this way.\r\n\r\nProbably the best way to ensure we do deterministic randomness inside a while_loop is to use the random ops from `tf.contrib.stateless` (soon to be moved to core).  This requires a lot more manual management of random seed, and will make the DropoutWrapper more complex.  It's still worth doing, but will require careful thought to do it correctly.\r\n\r\nIf anyone is interested in implementing a `StatelessDropoutWrapper` using these primitives, I am happy to work with you to make it happen.  cc @girving."}