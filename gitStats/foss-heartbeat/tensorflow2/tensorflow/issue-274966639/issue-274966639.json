{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14663", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14663/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14663/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14663/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14663", "id": 274966639, "node_id": "MDU6SXNzdWUyNzQ5NjY2Mzk=", "number": 14663, "title": "DropoutWrapper and dynamic_rnn with parallel iterations not reproducible", "user": {"login": "alanhdu", "id": 1914111, "node_id": "MDQ6VXNlcjE5MTQxMTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1914111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhdu", "html_url": "https://github.com/alanhdu", "followers_url": "https://api.github.com/users/alanhdu/followers", "following_url": "https://api.github.com/users/alanhdu/following{/other_user}", "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions", "organizations_url": "https://api.github.com/users/alanhdu/orgs", "repos_url": "https://api.github.com/users/alanhdu/repos", "events_url": "https://api.github.com/users/alanhdu/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhdu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}], "state": "open", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2017-11-17T19:10:56Z", "updated_at": "2018-11-22T18:52:46Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: CPU Binary (pip wheel)</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.4.0-rc1-11-g130a514 1.4.0</li>\n<li><strong>Python version</strong>: 3.6.3 and 3.5.2</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>:<br>\nThe following script fails with an assertion error, even though I've explicitly set the random seed:</li>\n</ul>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">run</span>():\n    tf.reset_default_graph()\n    tf.set_random_seed(<span class=\"pl-c1\">0</span>)\n\n    sess <span class=\"pl-k\">=</span> tf.Session()\n    x <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, [<span class=\"pl-c1\">None</span>, <span class=\"pl-c1\">None</span>, <span class=\"pl-c1\">1</span>])\n    cell <span class=\"pl-k\">=</span> tf.nn.rnn_cell.DropoutWrapper(\n        tf.nn.rnn_cell.LSTMCell(<span class=\"pl-c1\">100</span>), <span class=\"pl-v\">input_keep_prob</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0.5</span>)\n    output, state <span class=\"pl-k\">=</span> tf.nn.dynamic_rnn(\n        cell, x, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32, <span class=\"pl-v\">parallel_iterations</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">100</span>)\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> if parallel_iterations=1, then everything works</span>\n\n    sess.run(tf.global_variables_initializer())\n    <span class=\"pl-k\">return</span> sess.run([output, state], {x: np.arange(<span class=\"pl-c1\">100</span>).reshape(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">100</span>, <span class=\"pl-c1\">1</span>)})\n\no1, (c1, h1) <span class=\"pl-k\">=</span> run()\no2, (c2, h2) <span class=\"pl-k\">=</span> run()\n  \n<span class=\"pl-k\">assert</span> (o1 <span class=\"pl-k\">==</span> o2).all()\n<span class=\"pl-k\">assert</span> (c1 <span class=\"pl-k\">==</span> c2).all()\n<span class=\"pl-k\">assert</span> (h1 <span class=\"pl-k\">==</span> h2).all()</pre></div>\n<h3>Describe the problem</h3>\n<p>It looks like using parallel iterations options creates some non-determinism when using <code>DropoutWrapper</code> (and <code>parallel_iterations=32</code> by default). Ideally, when setting the random seed, all TensorFlow operations should be deterministic and reproducible (or the non-determinism should at least be documented).</p>\n<p>cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=25751555\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/tudorgt\">@tudorgt</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=29709248\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/adamAlnatsheh\">@adamAlnatsheh</a></p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04\nTensorFlow installed from (source or binary): CPU Binary (pip wheel)\nTensorFlow version (use command below): v1.4.0-rc1-11-g130a514 1.4.0\nPython version: 3.6.3 and 3.5.2\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce:\nThe following script fails with an assertion error, even though I've explicitly set the random seed:\n\nimport tensorflow as tf\nimport numpy as np\n\ndef run():\n    tf.reset_default_graph()\n    tf.set_random_seed(0)\n\n    sess = tf.Session()\n    x = tf.placeholder(tf.float32, [None, None, 1])\n    cell = tf.nn.rnn_cell.DropoutWrapper(\n        tf.nn.rnn_cell.LSTMCell(100), input_keep_prob=0.5)\n    output, state = tf.nn.dynamic_rnn(\n        cell, x, dtype=tf.float32, parallel_iterations=100)\n    # if parallel_iterations=1, then everything works\n\n    sess.run(tf.global_variables_initializer())\n    return sess.run([output, state], {x: np.arange(100).reshape(1, 100, 1)})\n\no1, (c1, h1) = run()\no2, (c2, h2) = run()\n  \nassert (o1 == o2).all()\nassert (c1 == c2).all()\nassert (h1 == h2).all()\nDescribe the problem\nIt looks like using parallel iterations options creates some non-determinism when using DropoutWrapper (and parallel_iterations=32 by default). Ideally, when setting the random seed, all TensorFlow operations should be deterministic and reproducible (or the non-determinism should at least be documented).\ncc @tudorgt @adamAlnatsheh", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: CPU Binary (pip wheel)\r\n- **TensorFlow version (use command below)**: v1.4.0-rc1-11-g130a514 1.4.0\r\n- **Python version**: 3.6.3 and 3.5.2\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**:\r\nThe following script fails with an assertion error, even though I've explicitly set the random seed:\r\n```python\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\ndef run():\r\n    tf.reset_default_graph()\r\n    tf.set_random_seed(0)\r\n\r\n    sess = tf.Session()\r\n    x = tf.placeholder(tf.float32, [None, None, 1])\r\n    cell = tf.nn.rnn_cell.DropoutWrapper(\r\n        tf.nn.rnn_cell.LSTMCell(100), input_keep_prob=0.5)\r\n    output, state = tf.nn.dynamic_rnn(\r\n        cell, x, dtype=tf.float32, parallel_iterations=100)\r\n    # if parallel_iterations=1, then everything works\r\n\r\n    sess.run(tf.global_variables_initializer())\r\n    return sess.run([output, state], {x: np.arange(100).reshape(1, 100, 1)})\r\n\r\no1, (c1, h1) = run()\r\no2, (c2, h2) = run()\r\n  \r\nassert (o1 == o2).all()\r\nassert (c1 == c2).all()\r\nassert (h1 == h2).all()\r\n```\r\n\r\n### Describe the problem\r\nIt looks like using parallel iterations options creates some non-determinism when using `DropoutWrapper` (and `parallel_iterations=32` by default). Ideally, when setting the random seed, all TensorFlow operations should be deterministic and reproducible (or the non-determinism should at least be documented).\r\n\r\ncc @tudorgt @adamAlnatsheh"}