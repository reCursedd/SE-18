{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/345492770", "html_url": "https://github.com/tensorflow/tensorflow/issues/14663#issuecomment-345492770", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14663", "id": 345492770, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTQ5Mjc3MA==", "user": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-19T05:11:57Z", "updated_at": "2017-11-19T05:11:57Z", "author_association": "CONTRIBUTOR", "body_html": "<p>if you want exact reproducibility, use the randomness operations in <a href=\"https://www.tensorflow.org/api_docs/python/tf/contrib/stateless\" rel=\"nofollow\"><code>tf.contrib.stateless</code></a>.  You'll still have to feed some function of time (i.e., pass it through your state) in order to get proper random seeds for every time step.</p>\n<p>I agree we should document nondeterminism of the RNGs when the same op is executed within flow control like while loops but without control dependencies to ensure ordering.</p>\n<p>Another question is, can we add some control dependencies in <code>DropoutWrapper</code> to ensure ordered execution of all randomness-generating ops.  The answer is maybe, but it's not high priority because not enough folks have considered this to be an issue - and because adding control dependencies generally slows down execution.  I'll leave it to <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=2533174\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ekelsen\">@ekelsen</a> to see if he wants to rifle through the <code>DropoutWrapper</code> code to ensure consistency of this sort.</p>", "body_text": "if you want exact reproducibility, use the randomness operations in tf.contrib.stateless.  You'll still have to feed some function of time (i.e., pass it through your state) in order to get proper random seeds for every time step.\nI agree we should document nondeterminism of the RNGs when the same op is executed within flow control like while loops but without control dependencies to ensure ordering.\nAnother question is, can we add some control dependencies in DropoutWrapper to ensure ordered execution of all randomness-generating ops.  The answer is maybe, but it's not high priority because not enough folks have considered this to be an issue - and because adding control dependencies generally slows down execution.  I'll leave it to @ekelsen to see if he wants to rifle through the DropoutWrapper code to ensure consistency of this sort.", "body": "if you want exact reproducibility, use the randomness operations in [`tf.contrib.stateless`](https://www.tensorflow.org/api_docs/python/tf/contrib/stateless).  You'll still have to feed some function of time (i.e., pass it through your state) in order to get proper random seeds for every time step.\r\n\r\nI agree we should document nondeterminism of the RNGs when the same op is executed within flow control like while loops but without control dependencies to ensure ordering.\r\n\r\nAnother question is, can we add some control dependencies in `DropoutWrapper` to ensure ordered execution of all randomness-generating ops.  The answer is maybe, but it's not high priority because not enough folks have considered this to be an issue - and because adding control dependencies generally slows down execution.  I'll leave it to @ekelsen to see if he wants to rifle through the `DropoutWrapper` code to ensure consistency of this sort."}