{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/308886194", "html_url": "https://github.com/tensorflow/tensorflow/issues/10722#issuecomment-308886194", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10722", "id": 308886194, "node_id": "MDEyOklzc3VlQ29tbWVudDMwODg4NjE5NA==", "user": {"login": "jaewookchungsc", "id": 19349719, "node_id": "MDQ6VXNlcjE5MzQ5NzE5", "avatar_url": "https://avatars0.githubusercontent.com/u/19349719?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaewookchungsc", "html_url": "https://github.com/jaewookchungsc", "followers_url": "https://api.github.com/users/jaewookchungsc/followers", "following_url": "https://api.github.com/users/jaewookchungsc/following{/other_user}", "gists_url": "https://api.github.com/users/jaewookchungsc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaewookchungsc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaewookchungsc/subscriptions", "organizations_url": "https://api.github.com/users/jaewookchungsc/orgs", "repos_url": "https://api.github.com/users/jaewookchungsc/repos", "events_url": "https://api.github.com/users/jaewookchungsc/events{/privacy}", "received_events_url": "https://api.github.com/users/jaewookchungsc/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-15T22:47:19Z", "updated_at": "2017-06-15T22:47:19Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=326106\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/aselle\">@aselle</a> Thanks for the solution. I tried tf.saturate_cast() and it worked beautifully. So is this an intended behavior? Anyway, I feel that it's really easy for anyone to fall into this pitfall. It would be really great if this behavior is well documented.</p>", "body_text": "@aselle Thanks for the solution. I tried tf.saturate_cast() and it worked beautifully. So is this an intended behavior? Anyway, I feel that it's really easy for anyone to fall into this pitfall. It would be really great if this behavior is well documented.", "body": "@aselle Thanks for the solution. I tried tf.saturate_cast() and it worked beautifully. So is this an intended behavior? Anyway, I feel that it's really easy for anyone to fall into this pitfall. It would be really great if this behavior is well documented."}