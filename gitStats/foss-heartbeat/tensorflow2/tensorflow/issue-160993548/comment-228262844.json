{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/228262844", "html_url": "https://github.com/tensorflow/tensorflow/issues/2940#issuecomment-228262844", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2940", "id": 228262844, "node_id": "MDEyOklzc3VlQ29tbWVudDIyODI2Mjg0NA==", "user": {"login": "peterswang", "id": 10738534, "node_id": "MDQ6VXNlcjEwNzM4NTM0", "avatar_url": "https://avatars3.githubusercontent.com/u/10738534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peterswang", "html_url": "https://github.com/peterswang", "followers_url": "https://api.github.com/users/peterswang/followers", "following_url": "https://api.github.com/users/peterswang/following{/other_user}", "gists_url": "https://api.github.com/users/peterswang/gists{/gist_id}", "starred_url": "https://api.github.com/users/peterswang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peterswang/subscriptions", "organizations_url": "https://api.github.com/users/peterswang/orgs", "repos_url": "https://api.github.com/users/peterswang/repos", "events_url": "https://api.github.com/users/peterswang/events{/privacy}", "received_events_url": "https://api.github.com/users/peterswang/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-24T05:44:33Z", "updated_at": "2016-06-24T05:44:33Z", "author_association": "NONE", "body_html": "<p>Thx for your suggestions, Velkan. I followed the instructions under the Build from Source section of the TF [Download and Setup] page. Compute capability was specified to be '3.0', just that the copy-paste missed that line.</p>\n<p>The Github TF page shows last successful build for Mac OS to be 14 days ago. I just tried building again with a fresh clone from the repo and it crashed at the same place. Actually, bazel apparently invoked Python, which crashed, seemingly while trying to access the CUDA library, perhaps for libcufftw.7.5.dylib?</p>\n<p>If it may be of any help to Martin, below is part of call stack from the crash report:<br>\n...<br>\nCrashed Thread:        0  Dispatch queue: com.apple.main-thread</p>\n<p>Exception Type:        EXC_BAD_ACCESS (SIGSEGV)<br>\nException Codes:       KERN_INVALID_ADDRESS at 0x0000000000000000</p>\n<p>VM Regions Near 0:<br>\n--&gt;<br>\n__TEXT                 000000010aec3000-000000010aec5000 [    8K] r-x/rwx SM=COW  /usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python</p>\n<p>Thread 0 Crashed:: Dispatch queue: com.apple.main-thread<br>\n0   libsystem_c.dylib               0x00007fff8e610152 strlen + 18<br>\n1   _pywrap_tensorflow.so           0x000000010d3e19a2 perftools::gputools::internal::DsoLoader::GetDsoHandle(tensorflow::StringPiece, void**, perftools::gputools::internal::DsoLoader::LoadKind) + 402<br>\n2   _pywrap_tensorflow.so           0x000000010d3e2692 perftools::gputools::internal::DsoLoader::GetLibcudaDsoHandle(void**) + 258<br>\n3   _pywrap_tensorflow.so           0x000000010d0d1f22 std::__1::__function::__func&lt;tensorflow::Status (<em>)(tensorflow::shape_inference::InferenceContext</em>), std::<em><em>1::allocator&lt;tensorflow::Status (<em>)(tensorflow::shape_inference::InferenceContext</em>)&gt;, tensorflow::Status (tensorflow::shape_inference::InferenceContext</em>)&gt;::operator()(tensorflow::shape_inference::InferenceContext</em>&amp;&amp;) + 18<br>\n4   _pywrap_tensorflow.so           0x000000010d3e2f7f perftools::gputools::internal::CachedDsoLoader::FetchHandleResult(std::__1::function&lt;tensorflow::Status (void**)&gt;) + 47<br>\n5   _pywrap_tensorflow.so           0x000000010d3e34e0 perftools::gputools::internal::CachedDsoLoader::GetLibcudaDsoHandle() + 112<br>\n6   _pywrap_tensorflow.so           0x000000010d464fe5 perftools::gputools::initialize_cuda_gpu_executor() + 37<br>\n7   dyld                            0x00007fff60b5a10b ImageLoaderMachO::doModInitFunctions(ImageLoader::LinkContext const&amp;) + 265<br>\n8   dyld                            0x00007fff60b5a284 ImageLoaderMachO::doInitialization(ImageLoader::LinkContext const&amp;) + 40<br>\n9   dyld                            0x00007fff60b568bd ImageLoader::recursiveInitialization(ImageLoader::LinkContext const&amp;, unsigned int, ImageLoader::InitializerTimingList&amp;, ImageLoader::UninitedUpwards&amp;) + 305<br>\n10  dyld                            0x00007fff60b56743 ImageLoader::processInitializers(ImageLoader::LinkContext const&amp;, unsigned int, ImageLoader::InitializerTimingList&amp;, ImageLoader::UninitedUpwards&amp;) + 127<br>\n11  dyld                            0x00007fff60b569b3 ImageLoader::runInitializers(ImageLoader::LinkContext const&amp;, ImageLoader::InitializerTimingList&amp;) + 75<br>\n12  dyld                            0x00007fff60b4beb0 dyld::runInitializers(ImageLoader*) + 89<br>\n13  dyld                            0x00007fff60b53308 dlopen + 555<br>\n14  libdyld.dylib                   0x00007fff8d7ae79c dlopen + 59<br>\n15  org.python.python               0x000000010af807d9 _PyImport_GetDynLoadFunc + 309<br>\n...</p>", "body_text": "Thx for your suggestions, Velkan. I followed the instructions under the Build from Source section of the TF [Download and Setup] page. Compute capability was specified to be '3.0', just that the copy-paste missed that line.\nThe Github TF page shows last successful build for Mac OS to be 14 days ago. I just tried building again with a fresh clone from the repo and it crashed at the same place. Actually, bazel apparently invoked Python, which crashed, seemingly while trying to access the CUDA library, perhaps for libcufftw.7.5.dylib?\nIf it may be of any help to Martin, below is part of call stack from the crash report:\n...\nCrashed Thread:        0  Dispatch queue: com.apple.main-thread\nException Type:        EXC_BAD_ACCESS (SIGSEGV)\nException Codes:       KERN_INVALID_ADDRESS at 0x0000000000000000\nVM Regions Near 0:\n-->\n__TEXT                 000000010aec3000-000000010aec5000 [    8K] r-x/rwx SM=COW  /usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python\nThread 0 Crashed:: Dispatch queue: com.apple.main-thread\n0   libsystem_c.dylib               0x00007fff8e610152 strlen + 18\n1   _pywrap_tensorflow.so           0x000000010d3e19a2 perftools::gputools::internal::DsoLoader::GetDsoHandle(tensorflow::StringPiece, void**, perftools::gputools::internal::DsoLoader::LoadKind) + 402\n2   _pywrap_tensorflow.so           0x000000010d3e2692 perftools::gputools::internal::DsoLoader::GetLibcudaDsoHandle(void**) + 258\n3   _pywrap_tensorflow.so           0x000000010d0d1f22 std::__1::__function::__func<tensorflow::Status ()(tensorflow::shape_inference::InferenceContext), std::1::allocator<tensorflow::Status ()(tensorflow::shape_inference::InferenceContext)>, tensorflow::Status (tensorflow::shape_inference::InferenceContext)>::operator()(tensorflow::shape_inference::InferenceContext&&) + 18\n4   _pywrap_tensorflow.so           0x000000010d3e2f7f perftools::gputools::internal::CachedDsoLoader::FetchHandleResult(std::__1::function<tensorflow::Status (void**)>) + 47\n5   _pywrap_tensorflow.so           0x000000010d3e34e0 perftools::gputools::internal::CachedDsoLoader::GetLibcudaDsoHandle() + 112\n6   _pywrap_tensorflow.so           0x000000010d464fe5 perftools::gputools::initialize_cuda_gpu_executor() + 37\n7   dyld                            0x00007fff60b5a10b ImageLoaderMachO::doModInitFunctions(ImageLoader::LinkContext const&) + 265\n8   dyld                            0x00007fff60b5a284 ImageLoaderMachO::doInitialization(ImageLoader::LinkContext const&) + 40\n9   dyld                            0x00007fff60b568bd ImageLoader::recursiveInitialization(ImageLoader::LinkContext const&, unsigned int, ImageLoader::InitializerTimingList&, ImageLoader::UninitedUpwards&) + 305\n10  dyld                            0x00007fff60b56743 ImageLoader::processInitializers(ImageLoader::LinkContext const&, unsigned int, ImageLoader::InitializerTimingList&, ImageLoader::UninitedUpwards&) + 127\n11  dyld                            0x00007fff60b569b3 ImageLoader::runInitializers(ImageLoader::LinkContext const&, ImageLoader::InitializerTimingList&) + 75\n12  dyld                            0x00007fff60b4beb0 dyld::runInitializers(ImageLoader*) + 89\n13  dyld                            0x00007fff60b53308 dlopen + 555\n14  libdyld.dylib                   0x00007fff8d7ae79c dlopen + 59\n15  org.python.python               0x000000010af807d9 _PyImport_GetDynLoadFunc + 309\n...", "body": "Thx for your suggestions, Velkan. I followed the instructions under the Build from Source section of the TF [Download and Setup] page. Compute capability was specified to be '3.0', just that the copy-paste missed that line.\n\nThe Github TF page shows last successful build for Mac OS to be 14 days ago. I just tried building again with a fresh clone from the repo and it crashed at the same place. Actually, bazel apparently invoked Python, which crashed, seemingly while trying to access the CUDA library, perhaps for libcufftw.7.5.dylib?\n\nIf it may be of any help to Martin, below is part of call stack from the crash report:\n...\nCrashed Thread:        0  Dispatch queue: com.apple.main-thread\n\nException Type:        EXC_BAD_ACCESS (SIGSEGV)\nException Codes:       KERN_INVALID_ADDRESS at 0x0000000000000000\n\nVM Regions Near 0:\n--> \n    __TEXT                 000000010aec3000-000000010aec5000 [    8K] r-x/rwx SM=COW  /usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python\n\nThread 0 Crashed:: Dispatch queue: com.apple.main-thread\n0   libsystem_c.dylib               0x00007fff8e610152 strlen + 18\n1   _pywrap_tensorflow.so           0x000000010d3e19a2 perftools::gputools::internal::DsoLoader::GetDsoHandle(tensorflow::StringPiece, void**, perftools::gputools::internal::DsoLoader::LoadKind) + 402\n2   _pywrap_tensorflow.so           0x000000010d3e2692 perftools::gputools::internal::DsoLoader::GetLibcudaDsoHandle(void**) + 258\n3   _pywrap_tensorflow.so           0x000000010d0d1f22 std::__1::__function::__func<tensorflow::Status (*)(tensorflow::shape_inference::InferenceContext*), std::__1::allocator<tensorflow::Status (*)(tensorflow::shape_inference::InferenceContext*)>, tensorflow::Status (tensorflow::shape_inference::InferenceContext_)>::operator()(tensorflow::shape_inference::InferenceContext_&&) + 18\n4   _pywrap_tensorflow.so           0x000000010d3e2f7f perftools::gputools::internal::CachedDsoLoader::FetchHandleResult(std::__1::function<tensorflow::Status (void**)>) + 47\n5   _pywrap_tensorflow.so           0x000000010d3e34e0 perftools::gputools::internal::CachedDsoLoader::GetLibcudaDsoHandle() + 112\n6   _pywrap_tensorflow.so           0x000000010d464fe5 perftools::gputools::initialize_cuda_gpu_executor() + 37\n7   dyld                            0x00007fff60b5a10b ImageLoaderMachO::doModInitFunctions(ImageLoader::LinkContext const&) + 265\n8   dyld                            0x00007fff60b5a284 ImageLoaderMachO::doInitialization(ImageLoader::LinkContext const&) + 40\n9   dyld                            0x00007fff60b568bd ImageLoader::recursiveInitialization(ImageLoader::LinkContext const&, unsigned int, ImageLoader::InitializerTimingList&, ImageLoader::UninitedUpwards&) + 305\n10  dyld                            0x00007fff60b56743 ImageLoader::processInitializers(ImageLoader::LinkContext const&, unsigned int, ImageLoader::InitializerTimingList&, ImageLoader::UninitedUpwards&) + 127\n11  dyld                            0x00007fff60b569b3 ImageLoader::runInitializers(ImageLoader::LinkContext const&, ImageLoader::InitializerTimingList&) + 75\n12  dyld                            0x00007fff60b4beb0 dyld::runInitializers(ImageLoader*) + 89\n13  dyld                            0x00007fff60b53308 dlopen + 555\n14  libdyld.dylib                   0x00007fff8d7ae79c dlopen + 59\n15  org.python.python               0x000000010af807d9 _PyImport_GetDynLoadFunc + 309\n...\n"}