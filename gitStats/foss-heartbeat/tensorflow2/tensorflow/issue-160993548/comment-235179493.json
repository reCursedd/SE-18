{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/235179493", "html_url": "https://github.com/tensorflow/tensorflow/issues/2940#issuecomment-235179493", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2940", "id": 235179493, "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTE3OTQ5Mw==", "user": {"login": "hbfs", "id": 2048786, "node_id": "MDQ6VXNlcjIwNDg3ODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/2048786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hbfs", "html_url": "https://github.com/hbfs", "followers_url": "https://api.github.com/users/hbfs/followers", "following_url": "https://api.github.com/users/hbfs/following{/other_user}", "gists_url": "https://api.github.com/users/hbfs/gists{/gist_id}", "starred_url": "https://api.github.com/users/hbfs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hbfs/subscriptions", "organizations_url": "https://api.github.com/users/hbfs/orgs", "repos_url": "https://api.github.com/users/hbfs/repos", "events_url": "https://api.github.com/users/hbfs/events{/privacy}", "received_events_url": "https://api.github.com/users/hbfs/received_events", "type": "User", "site_admin": false}, "created_at": "2016-07-26T06:59:30Z", "updated_at": "2016-07-26T07:22:30Z", "author_association": "NONE", "body_html": "<p>I'm also getting a segmentation fault in python.</p>\n<pre><code>$ python test.py\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.7.5.dylib locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcudnn.5.dylib locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.7.5.dylib locally\n[1]    34129 segmentation fault  python test.py\n</code></pre>\n<p>test.py</p>\n<pre><code>import tensorflow as tf\n\n# Creates a graph.\na = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[2, 3], name='a')\nb = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[3, 2], name='b')\nc = tf.matmul(a, b)\n\n# Creates a session with log_device_placement set to True.\nsess = tf.Session(config=tf.ConfigProto(log_device_placement=True))\n\n# Runs the op.\nprint sess.run(c)\n</code></pre>\n<p>System Info:</p>\n<pre><code>Process:               Python [34031]\nPath:                  /usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python\nIdentifier:            Python\nVersion:               2.7.11 (2.7.11)\nCode Type:             X86-64 (Native)\nParent Process:        zsh [33999]\nResponsible:           iTerm2 [508]\n\nOS Version:            Mac OS X 10.11.6 (15G31)\nKernel Version: Darwin 15.6.0\nGraphics: NVIDIA GeForce GTX 960, NVIDIA GeForce GTX 960, PCIe\n</code></pre>\n<p>Stack Trace</p>\n<pre><code>Crashed Thread:        0  Dispatch queue: com.apple.main-thread\n\nException Type:        EXC_BAD_ACCESS (SIGSEGV)\nException Codes:       KERN_INVALID_ADDRESS at 0x0000000000000000\n\nVM Regions Near 0:\n--&gt; \n    __TEXT                 000000010782c000-000000010782e000 [    8K] r-x/rwx SM=COW  /usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python\n\nThread 0 Crashed:: Dispatch queue: com.apple.main-thread\n0   libsystem_c.dylib               0x00007fff8ce51132 strlen + 18\n1   _pywrap_tensorflow.so           0x000000010a02b912 perftools::gputools::internal::DsoLoader::GetDsoHandle(tensorflow::StringPiece, void**, perftools::gputools::internal::DsoLoader::LoadKind) + 402\n2   _pywrap_tensorflow.so           0x000000010a02c602 perftools::gputools::internal::DsoLoader::GetLibcudaDsoHandle(void**) + 258\n3   _pywrap_tensorflow.so           0x0000000109e44002 std::__1::__function::__func&lt;tensorflow::Status (*)(tensorflow::shape_inference::InferenceContext*), std::__1::allocator&lt;tensorflow::Status (*)(tensorflow::shape_inference::InferenceContext*)&gt;, tensorflow::Status (tensorflow::shape_inference::InferenceContext*)&gt;::operator()(tensorflow::shape_inference::InferenceContext*&amp;&amp;) + 18\n4   _pywrap_tensorflow.so           0x000000010a02ceef perftools::gputools::internal::CachedDsoLoader::FetchHandleResult(std::__1::function&lt;tensorflow::Status (void**)&gt;) + 47\n5   _pywrap_tensorflow.so           0x000000010a02d450 perftools::gputools::internal::CachedDsoLoader::GetLibcudaDsoHandle() + 112\n6   _pywrap_tensorflow.so           0x000000010a0b0195 perftools::gputools::initialize_cuda_gpu_executor() + 37\n7   dyld                            0x00007fff6cb8710b ImageLoaderMachO::doModInitFunctions(ImageLoader::LinkContext const&amp;) + 265\n8   dyld                            0x00007fff6cb87284 ImageLoaderMachO::doInitialization(ImageLoader::LinkContext const&amp;) + 40\n9   dyld                            0x00007fff6cb838bd ImageLoader::recursiveInitialization(ImageLoader::LinkContext const&amp;, unsigned int, ImageLoader::InitializerTimingList&amp;, ImageLoader::UninitedUpwards&amp;) + 305\n10  dyld                            0x00007fff6cb83743 ImageLoader::processInitializers(ImageLoader::LinkContext const&amp;, unsigned int, ImageLoader::InitializerTimingList&amp;, ImageLoader::UninitedUpwards&amp;) + 127\n11  dyld                            0x00007fff6cb839b3 ImageLoader::runInitializers(ImageLoader::LinkContext const&amp;, ImageLoader::InitializerTimingList&amp;) + 75\n12  dyld                            0x00007fff6cb78eb0 dyld::runInitializers(ImageLoader*) + 89\n13  dyld                            0x00007fff6cb80308 dlopen + 555\n14  libdyld.dylib                   0x00007fff960d779c dlopen + 59\n15  org.python.python               0x00000001078e7892 _PyImport_GetDynLoadFunc + 309\n...\n</code></pre>\n<p>edit: The issue occurs because the environment variable LD_LIBRARY_PATH is not set. I set it to the same as DYLD_LIBRARY_PATH which resolved the segmentation fault from a null path as discovered above in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"160993548\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/2940\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/2940/hovercard?comment_id=230186665&amp;comment_type=issue_comment\" href=\"https://github.com/tensorflow/tensorflow/issues/2940#issuecomment-230186665\">#2940 (comment)</a> by <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4239191\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Invisibility\">@Invisibility</a> .</p>\n<p>I then encountered this error:</p>\n<pre><code>I tensorflow/stream_executor/dso_loader.cc:102] Couldn't open CUDA library libcuda.1.dylib.\n</code></pre>\n<p>I created a symlink to in <code>/usr/local/cuda/lib</code> with <code>ln -s libcuda.dylib libcuda.1.dylib</code> and now I'm getting a different segmentation fault:</p>\n<pre><code>Crashed Thread:        0  Dispatch queue: com.apple.main-thread\n\nException Type:        EXC_BAD_ACCESS (SIGSEGV)\nException Codes:       EXC_I386_GPFLT\n\nThread 0 Crashed:: Dispatch queue: com.apple.main-thread\n0   _pywrap_tensorflow.so           0x000000010bb73e0b perftools::gputools::StreamExecutor::DeviceMemoryUsage(long long*, long long*) const + 11\n1   _pywrap_tensorflow.so           0x000000010b9587fe tensorflow::GPUMachineManager() + 382\n2   _pywrap_tensorflow.so           0x000000010b9564ce tensorflow::BaseGPUDeviceFactory::GetValidDeviceIds(std::__1::vector&lt;int, std::__1::allocator&lt;int&gt; &gt;*) + 46\n3   _pywrap_tensorflow.so           0x000000010b9562f9 tensorflow::BaseGPUDeviceFactory::CreateDevices(tensorflow::SessionOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::vector&lt;tensorflow::Device*, std::__1::allocator&lt;tensorflow::Device*&gt; &gt;*) + 345\n4   _pywrap_tensorflow.so           0x000000010bae3795 tensorflow::DeviceFactory::AddDevices(tensorflow::SessionOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::vector&lt;tensorflow::Device*, std::__1::allocator&lt;tensorflow::Device*&gt; &gt;*) + 245\n5   _pywrap_tensorflow.so           0x000000010b912c15 tensorflow::DirectSessionFactory::NewSession(tensorflow::SessionOptions const&amp;) + 133\n6   _pywrap_tensorflow.so           0x000000010bb096c8 tensorflow::NewSession(tensorflow::SessionOptions const&amp;, tensorflow::Session**) + 184\n7   _pywrap_tensorflow.so           0x000000010bace8d1 TF_NewSession + 33\n8   _pywrap_tensorflow.so           0x000000010a4845b2 _wrap_TF_NewSession(_object*, _object*) + 162\n9   org.python.python               0x0000000109424f1b PyEval_EvalFrameEx + 27072\n...\n</code></pre>", "body_text": "I'm also getting a segmentation fault in python.\n$ python test.py\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.7.5.dylib locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcudnn.5.dylib locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.7.5.dylib locally\n[1]    34129 segmentation fault  python test.py\n\ntest.py\nimport tensorflow as tf\n\n# Creates a graph.\na = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[2, 3], name='a')\nb = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[3, 2], name='b')\nc = tf.matmul(a, b)\n\n# Creates a session with log_device_placement set to True.\nsess = tf.Session(config=tf.ConfigProto(log_device_placement=True))\n\n# Runs the op.\nprint sess.run(c)\n\nSystem Info:\nProcess:               Python [34031]\nPath:                  /usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python\nIdentifier:            Python\nVersion:               2.7.11 (2.7.11)\nCode Type:             X86-64 (Native)\nParent Process:        zsh [33999]\nResponsible:           iTerm2 [508]\n\nOS Version:            Mac OS X 10.11.6 (15G31)\nKernel Version: Darwin 15.6.0\nGraphics: NVIDIA GeForce GTX 960, NVIDIA GeForce GTX 960, PCIe\n\nStack Trace\nCrashed Thread:        0  Dispatch queue: com.apple.main-thread\n\nException Type:        EXC_BAD_ACCESS (SIGSEGV)\nException Codes:       KERN_INVALID_ADDRESS at 0x0000000000000000\n\nVM Regions Near 0:\n--> \n    __TEXT                 000000010782c000-000000010782e000 [    8K] r-x/rwx SM=COW  /usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python\n\nThread 0 Crashed:: Dispatch queue: com.apple.main-thread\n0   libsystem_c.dylib               0x00007fff8ce51132 strlen + 18\n1   _pywrap_tensorflow.so           0x000000010a02b912 perftools::gputools::internal::DsoLoader::GetDsoHandle(tensorflow::StringPiece, void**, perftools::gputools::internal::DsoLoader::LoadKind) + 402\n2   _pywrap_tensorflow.so           0x000000010a02c602 perftools::gputools::internal::DsoLoader::GetLibcudaDsoHandle(void**) + 258\n3   _pywrap_tensorflow.so           0x0000000109e44002 std::__1::__function::__func<tensorflow::Status (*)(tensorflow::shape_inference::InferenceContext*), std::__1::allocator<tensorflow::Status (*)(tensorflow::shape_inference::InferenceContext*)>, tensorflow::Status (tensorflow::shape_inference::InferenceContext*)>::operator()(tensorflow::shape_inference::InferenceContext*&&) + 18\n4   _pywrap_tensorflow.so           0x000000010a02ceef perftools::gputools::internal::CachedDsoLoader::FetchHandleResult(std::__1::function<tensorflow::Status (void**)>) + 47\n5   _pywrap_tensorflow.so           0x000000010a02d450 perftools::gputools::internal::CachedDsoLoader::GetLibcudaDsoHandle() + 112\n6   _pywrap_tensorflow.so           0x000000010a0b0195 perftools::gputools::initialize_cuda_gpu_executor() + 37\n7   dyld                            0x00007fff6cb8710b ImageLoaderMachO::doModInitFunctions(ImageLoader::LinkContext const&) + 265\n8   dyld                            0x00007fff6cb87284 ImageLoaderMachO::doInitialization(ImageLoader::LinkContext const&) + 40\n9   dyld                            0x00007fff6cb838bd ImageLoader::recursiveInitialization(ImageLoader::LinkContext const&, unsigned int, ImageLoader::InitializerTimingList&, ImageLoader::UninitedUpwards&) + 305\n10  dyld                            0x00007fff6cb83743 ImageLoader::processInitializers(ImageLoader::LinkContext const&, unsigned int, ImageLoader::InitializerTimingList&, ImageLoader::UninitedUpwards&) + 127\n11  dyld                            0x00007fff6cb839b3 ImageLoader::runInitializers(ImageLoader::LinkContext const&, ImageLoader::InitializerTimingList&) + 75\n12  dyld                            0x00007fff6cb78eb0 dyld::runInitializers(ImageLoader*) + 89\n13  dyld                            0x00007fff6cb80308 dlopen + 555\n14  libdyld.dylib                   0x00007fff960d779c dlopen + 59\n15  org.python.python               0x00000001078e7892 _PyImport_GetDynLoadFunc + 309\n...\n\nedit: The issue occurs because the environment variable LD_LIBRARY_PATH is not set. I set it to the same as DYLD_LIBRARY_PATH which resolved the segmentation fault from a null path as discovered above in #2940 (comment) by @Invisibility .\nI then encountered this error:\nI tensorflow/stream_executor/dso_loader.cc:102] Couldn't open CUDA library libcuda.1.dylib.\n\nI created a symlink to in /usr/local/cuda/lib with ln -s libcuda.dylib libcuda.1.dylib and now I'm getting a different segmentation fault:\nCrashed Thread:        0  Dispatch queue: com.apple.main-thread\n\nException Type:        EXC_BAD_ACCESS (SIGSEGV)\nException Codes:       EXC_I386_GPFLT\n\nThread 0 Crashed:: Dispatch queue: com.apple.main-thread\n0   _pywrap_tensorflow.so           0x000000010bb73e0b perftools::gputools::StreamExecutor::DeviceMemoryUsage(long long*, long long*) const + 11\n1   _pywrap_tensorflow.so           0x000000010b9587fe tensorflow::GPUMachineManager() + 382\n2   _pywrap_tensorflow.so           0x000000010b9564ce tensorflow::BaseGPUDeviceFactory::GetValidDeviceIds(std::__1::vector<int, std::__1::allocator<int> >*) + 46\n3   _pywrap_tensorflow.so           0x000000010b9562f9 tensorflow::BaseGPUDeviceFactory::CreateDevices(tensorflow::SessionOptions const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<tensorflow::Device*, std::__1::allocator<tensorflow::Device*> >*) + 345\n4   _pywrap_tensorflow.so           0x000000010bae3795 tensorflow::DeviceFactory::AddDevices(tensorflow::SessionOptions const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<tensorflow::Device*, std::__1::allocator<tensorflow::Device*> >*) + 245\n5   _pywrap_tensorflow.so           0x000000010b912c15 tensorflow::DirectSessionFactory::NewSession(tensorflow::SessionOptions const&) + 133\n6   _pywrap_tensorflow.so           0x000000010bb096c8 tensorflow::NewSession(tensorflow::SessionOptions const&, tensorflow::Session**) + 184\n7   _pywrap_tensorflow.so           0x000000010bace8d1 TF_NewSession + 33\n8   _pywrap_tensorflow.so           0x000000010a4845b2 _wrap_TF_NewSession(_object*, _object*) + 162\n9   org.python.python               0x0000000109424f1b PyEval_EvalFrameEx + 27072\n...", "body": "I'm also getting a segmentation fault in python.\n\n```\n$ python test.py\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.7.5.dylib locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcudnn.5.dylib locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.7.5.dylib locally\n[1]    34129 segmentation fault  python test.py\n```\n\ntest.py\n\n```\nimport tensorflow as tf\n\n# Creates a graph.\na = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[2, 3], name='a')\nb = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[3, 2], name='b')\nc = tf.matmul(a, b)\n\n# Creates a session with log_device_placement set to True.\nsess = tf.Session(config=tf.ConfigProto(log_device_placement=True))\n\n# Runs the op.\nprint sess.run(c)\n```\n\nSystem Info:\n\n```\nProcess:               Python [34031]\nPath:                  /usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python\nIdentifier:            Python\nVersion:               2.7.11 (2.7.11)\nCode Type:             X86-64 (Native)\nParent Process:        zsh [33999]\nResponsible:           iTerm2 [508]\n\nOS Version:            Mac OS X 10.11.6 (15G31)\nKernel Version: Darwin 15.6.0\nGraphics: NVIDIA GeForce GTX 960, NVIDIA GeForce GTX 960, PCIe\n```\n\nStack Trace\n\n```\nCrashed Thread:        0  Dispatch queue: com.apple.main-thread\n\nException Type:        EXC_BAD_ACCESS (SIGSEGV)\nException Codes:       KERN_INVALID_ADDRESS at 0x0000000000000000\n\nVM Regions Near 0:\n--> \n    __TEXT                 000000010782c000-000000010782e000 [    8K] r-x/rwx SM=COW  /usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python\n\nThread 0 Crashed:: Dispatch queue: com.apple.main-thread\n0   libsystem_c.dylib               0x00007fff8ce51132 strlen + 18\n1   _pywrap_tensorflow.so           0x000000010a02b912 perftools::gputools::internal::DsoLoader::GetDsoHandle(tensorflow::StringPiece, void**, perftools::gputools::internal::DsoLoader::LoadKind) + 402\n2   _pywrap_tensorflow.so           0x000000010a02c602 perftools::gputools::internal::DsoLoader::GetLibcudaDsoHandle(void**) + 258\n3   _pywrap_tensorflow.so           0x0000000109e44002 std::__1::__function::__func<tensorflow::Status (*)(tensorflow::shape_inference::InferenceContext*), std::__1::allocator<tensorflow::Status (*)(tensorflow::shape_inference::InferenceContext*)>, tensorflow::Status (tensorflow::shape_inference::InferenceContext*)>::operator()(tensorflow::shape_inference::InferenceContext*&&) + 18\n4   _pywrap_tensorflow.so           0x000000010a02ceef perftools::gputools::internal::CachedDsoLoader::FetchHandleResult(std::__1::function<tensorflow::Status (void**)>) + 47\n5   _pywrap_tensorflow.so           0x000000010a02d450 perftools::gputools::internal::CachedDsoLoader::GetLibcudaDsoHandle() + 112\n6   _pywrap_tensorflow.so           0x000000010a0b0195 perftools::gputools::initialize_cuda_gpu_executor() + 37\n7   dyld                            0x00007fff6cb8710b ImageLoaderMachO::doModInitFunctions(ImageLoader::LinkContext const&) + 265\n8   dyld                            0x00007fff6cb87284 ImageLoaderMachO::doInitialization(ImageLoader::LinkContext const&) + 40\n9   dyld                            0x00007fff6cb838bd ImageLoader::recursiveInitialization(ImageLoader::LinkContext const&, unsigned int, ImageLoader::InitializerTimingList&, ImageLoader::UninitedUpwards&) + 305\n10  dyld                            0x00007fff6cb83743 ImageLoader::processInitializers(ImageLoader::LinkContext const&, unsigned int, ImageLoader::InitializerTimingList&, ImageLoader::UninitedUpwards&) + 127\n11  dyld                            0x00007fff6cb839b3 ImageLoader::runInitializers(ImageLoader::LinkContext const&, ImageLoader::InitializerTimingList&) + 75\n12  dyld                            0x00007fff6cb78eb0 dyld::runInitializers(ImageLoader*) + 89\n13  dyld                            0x00007fff6cb80308 dlopen + 555\n14  libdyld.dylib                   0x00007fff960d779c dlopen + 59\n15  org.python.python               0x00000001078e7892 _PyImport_GetDynLoadFunc + 309\n...\n```\n\nedit: The issue occurs because the environment variable LD_LIBRARY_PATH is not set. I set it to the same as DYLD_LIBRARY_PATH which resolved the segmentation fault from a null path as discovered above in https://github.com/tensorflow/tensorflow/issues/2940#issuecomment-230186665 by @Invisibility .\n\nI then encountered this error: \n\n```\nI tensorflow/stream_executor/dso_loader.cc:102] Couldn't open CUDA library libcuda.1.dylib.\n```\n\nI created a symlink to in `/usr/local/cuda/lib` with `ln -s libcuda.dylib libcuda.1.dylib` and now I'm getting a different segmentation fault:\n\n```\nCrashed Thread:        0  Dispatch queue: com.apple.main-thread\n\nException Type:        EXC_BAD_ACCESS (SIGSEGV)\nException Codes:       EXC_I386_GPFLT\n\nThread 0 Crashed:: Dispatch queue: com.apple.main-thread\n0   _pywrap_tensorflow.so           0x000000010bb73e0b perftools::gputools::StreamExecutor::DeviceMemoryUsage(long long*, long long*) const + 11\n1   _pywrap_tensorflow.so           0x000000010b9587fe tensorflow::GPUMachineManager() + 382\n2   _pywrap_tensorflow.so           0x000000010b9564ce tensorflow::BaseGPUDeviceFactory::GetValidDeviceIds(std::__1::vector<int, std::__1::allocator<int> >*) + 46\n3   _pywrap_tensorflow.so           0x000000010b9562f9 tensorflow::BaseGPUDeviceFactory::CreateDevices(tensorflow::SessionOptions const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<tensorflow::Device*, std::__1::allocator<tensorflow::Device*> >*) + 345\n4   _pywrap_tensorflow.so           0x000000010bae3795 tensorflow::DeviceFactory::AddDevices(tensorflow::SessionOptions const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<tensorflow::Device*, std::__1::allocator<tensorflow::Device*> >*) + 245\n5   _pywrap_tensorflow.so           0x000000010b912c15 tensorflow::DirectSessionFactory::NewSession(tensorflow::SessionOptions const&) + 133\n6   _pywrap_tensorflow.so           0x000000010bb096c8 tensorflow::NewSession(tensorflow::SessionOptions const&, tensorflow::Session**) + 184\n7   _pywrap_tensorflow.so           0x000000010bace8d1 TF_NewSession + 33\n8   _pywrap_tensorflow.so           0x000000010a4845b2 _wrap_TF_NewSession(_object*, _object*) + 162\n9   org.python.python               0x0000000109424f1b PyEval_EvalFrameEx + 27072\n...\n```\n"}