{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/283821430", "html_url": "https://github.com/tensorflow/tensorflow/issues/2940#issuecomment-283821430", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2940", "id": 283821430, "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzgyMTQzMA==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-02T23:54:58Z", "updated_at": "2017-03-02T23:54:58Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Have you tried setting <code>LD_LIBRARY_PATH</code>?<br>\nThere's also this <a href=\"https://github.com/tensorflow/tensorflow/pull/664#issuecomment-170134955\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/664/hovercard\">issue</a> which tracked down similar \"strlen + 18\" to getenv <code>LD_LIBRARY_PATH</code> returning null</p>\n<p>I actually see\u00a0similar <code>strlen + 18</code> with probability 50% on latest MacOS when I create session in GPU TensorFlow with <code>CUDA_VISIBLE_DEVICES</code> set to empty.</p>\n<p>Most likely thing is that there's a piece of code which isn't checking for null pointers, which can happen non-deterministically.  For instance on MacOS, CFStringGetCStringPtr can return null non-deterministically. That output isn't checked for null and I fixed one such place in  <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"166873831\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/3448\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/3448/hovercard\" href=\"https://github.com/tensorflow/tensorflow/pull/3448\">#3448</a> but I see other return values that aren't checked for null, such as output of <code>CFDictionaryGetValue</code> in this <a href=\"https://github.com/tensorflow/tensorflow/blob/73115538fc37dd8967b8531e04a7a1d42f6bada4/tensorflow/stream_executor/cuda/cuda_diagnostics.cc#L325\">line</a></p>", "body_text": "Have you tried setting LD_LIBRARY_PATH?\nThere's also this issue which tracked down similar \"strlen + 18\" to getenv LD_LIBRARY_PATH returning null\nI actually see\u00a0similar strlen + 18 with probability 50% on latest MacOS when I create session in GPU TensorFlow with CUDA_VISIBLE_DEVICES set to empty.\nMost likely thing is that there's a piece of code which isn't checking for null pointers, which can happen non-deterministically.  For instance on MacOS, CFStringGetCStringPtr can return null non-deterministically. That output isn't checked for null and I fixed one such place in  #3448 but I see other return values that aren't checked for null, such as output of CFDictionaryGetValue in this line", "body": "Have you tried setting `LD_LIBRARY_PATH`?\r\nThere's also this [issue](https://github.com/tensorflow/tensorflow/pull/664#issuecomment-170134955) which tracked down similar \"strlen + 18\" to getenv `LD_LIBRARY_PATH` returning null\r\n\r\nI actually see\u00a0similar `strlen + 18` with probability 50% on latest MacOS when I create session in GPU TensorFlow with `CUDA_VISIBLE_DEVICES` set to empty.\r\n\r\nMost likely thing is that there's a piece of code which isn't checking for null pointers, which can happen non-deterministically.  For instance on MacOS, CFStringGetCStringPtr can return null non-deterministically. That output isn't checked for null and I fixed one such place in  https://github.com/tensorflow/tensorflow/pull/3448 but I see other return values that aren't checked for null, such as output of `CFDictionaryGetValue` in this [line](https://github.com/tensorflow/tensorflow/blob/73115538fc37dd8967b8531e04a7a1d42f6bada4/tensorflow/stream_executor/cuda/cuda_diagnostics.cc#L325)\r\n"}