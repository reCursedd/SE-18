{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23179", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23179/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23179/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23179/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23179", "id": 372792628, "node_id": "MDU6SXNzdWUzNzI3OTI2Mjg=", "number": 23179, "title": "Introduce SamplingDatasetOp to TensorFlow", "user": {"login": "delock", "id": 19373651, "node_id": "MDQ6VXNlcjE5MzczNjUx", "avatar_url": "https://avatars2.githubusercontent.com/u/19373651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/delock", "html_url": "https://github.com/delock", "followers_url": "https://api.github.com/users/delock/followers", "following_url": "https://api.github.com/users/delock/following{/other_user}", "gists_url": "https://api.github.com/users/delock/gists{/gist_id}", "starred_url": "https://api.github.com/users/delock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/delock/subscriptions", "organizations_url": "https://api.github.com/users/delock/orgs", "repos_url": "https://api.github.com/users/delock/repos", "events_url": "https://api.github.com/users/delock/events{/privacy}", "received_events_url": "https://api.github.com/users/delock/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097547147, "node_id": "MDU6TGFiZWwxMDk3NTQ3MTQ3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:ops", "name": "comp:ops", "color": "0052cc", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "jsimsa", "id": 1072079, "node_id": "MDQ6VXNlcjEwNzIwNzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1072079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsimsa", "html_url": "https://github.com/jsimsa", "followers_url": "https://api.github.com/users/jsimsa/followers", "following_url": "https://api.github.com/users/jsimsa/following{/other_user}", "gists_url": "https://api.github.com/users/jsimsa/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsimsa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsimsa/subscriptions", "organizations_url": "https://api.github.com/users/jsimsa/orgs", "repos_url": "https://api.github.com/users/jsimsa/repos", "events_url": "https://api.github.com/users/jsimsa/events{/privacy}", "received_events_url": "https://api.github.com/users/jsimsa/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jsimsa", "id": 1072079, "node_id": "MDQ6VXNlcjEwNzIwNzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1072079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsimsa", "html_url": "https://github.com/jsimsa", "followers_url": "https://api.github.com/users/jsimsa/followers", "following_url": "https://api.github.com/users/jsimsa/following{/other_user}", "gists_url": "https://api.github.com/users/jsimsa/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsimsa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsimsa/subscriptions", "organizations_url": "https://api.github.com/users/jsimsa/orgs", "repos_url": "https://api.github.com/users/jsimsa/repos", "events_url": "https://api.github.com/users/jsimsa/events{/privacy}", "received_events_url": "https://api.github.com/users/jsimsa/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 16, "created_at": "2018-10-23T03:31:27Z", "updated_at": "2018-11-15T02:38:39Z", "closed_at": "2018-10-25T20:47:59Z", "author_association": "NONE", "body_html": "<p><em>Please make sure that this is a feature request. As per our <a href=\"https://github.com/tensorflow/tensorflow/blob/master/ISSUES.md\">GitHub Policy</a>, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:feature_template</em></p>\n<p><strong>System information</strong></p>\n<ul>\n<li>TensorFlow version (1.10):</li>\n<li>Are you willing to contribute it (Yes):</li>\n</ul>\n<p><strong>Describe the feature and the current behavior/state.</strong><br>\nI propose to introduce a SamplingDatasetOp to TensorFlow<br>\n<strong>Will this change the current api? How?</strong><br>\nYes.<br>\nUser would be able to create sampling dataset that output a subset of input dataset that is uniformed sampled from input dataset, with sample rate supplied as parameter.<br>\n<code>dataset = dataset.sampling(rate)</code><br>\n<strong>Who will benefit with this feature?</strong><br>\nMinigo training have very slow filling rate. <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"371880079\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/minigo/issues/520\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/minigo/issues/520/hovercard\" href=\"https://github.com/tensorflow/minigo/issues/520\">tensorflow/minigo#520</a><br>\nThis is due to Minigo use a FilterDatasetOp to filter out subset of input data, which has low efficiency.  With sampling dataset, we can implement the sample action inside the sampling dataset op, without call predicate and go through lambda function explicitly, which improves training performance by 1.7x.  More details can be seen in the issue for minigo above.<br>\n<strong>Any Other info.</strong></p>", "body_text": "Please make sure that this is a feature request. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:feature_template\nSystem information\n\nTensorFlow version (1.10):\nAre you willing to contribute it (Yes):\n\nDescribe the feature and the current behavior/state.\nI propose to introduce a SamplingDatasetOp to TensorFlow\nWill this change the current api? How?\nYes.\nUser would be able to create sampling dataset that output a subset of input dataset that is uniformed sampled from input dataset, with sample rate supplied as parameter.\ndataset = dataset.sampling(rate)\nWho will benefit with this feature?\nMinigo training have very slow filling rate. tensorflow/minigo#520\nThis is due to Minigo use a FilterDatasetOp to filter out subset of input data, which has low efficiency.  With sampling dataset, we can implement the sample action inside the sampling dataset op, without call predicate and go through lambda function explicitly, which improves training performance by 1.7x.  More details can be seen in the issue for minigo above.\nAny Other info.", "body": "<em>Please make sure that this is a feature request. As per our [GitHub Policy](https://github.com/tensorflow/tensorflow/blob/master/ISSUES.md), we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:feature_template</em>\r\n\r\n\r\n**System information**\r\n- TensorFlow version (1.10):\r\n- Are you willing to contribute it (Yes):\r\n\r\n\r\n\r\n**Describe the feature and the current behavior/state.**\r\nI propose to introduce a SamplingDatasetOp to TensorFlow\r\n**Will this change the current api? How?**\r\nYes.\r\nUser would be able to create sampling dataset that output a subset of input dataset that is uniformed sampled from input dataset, with sample rate supplied as parameter.\r\n`dataset = dataset.sampling(rate)`\r\n**Who will benefit with this feature?**\r\nMinigo training have very slow filling rate. https://github.com/tensorflow/minigo/issues/520\r\nThis is due to Minigo use a FilterDatasetOp to filter out subset of input data, which has low efficiency.  With sampling dataset, we can implement the sample action inside the sampling dataset op, without call predicate and go through lambda function explicitly, which improves training performance by 1.7x.  More details can be seen in the issue for minigo above.\r\n**Any Other info.**\r\n"}