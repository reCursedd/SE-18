{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/433200107", "html_url": "https://github.com/tensorflow/tensorflow/issues/23179#issuecomment-433200107", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23179", "id": 433200107, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzIwMDEwNw==", "user": {"login": "jsimsa", "id": 1072079, "node_id": "MDQ6VXNlcjEwNzIwNzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1072079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsimsa", "html_url": "https://github.com/jsimsa", "followers_url": "https://api.github.com/users/jsimsa/followers", "following_url": "https://api.github.com/users/jsimsa/following{/other_user}", "gists_url": "https://api.github.com/users/jsimsa/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsimsa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsimsa/subscriptions", "organizations_url": "https://api.github.com/users/jsimsa/orgs", "repos_url": "https://api.github.com/users/jsimsa/repos", "events_url": "https://api.github.com/users/jsimsa/events{/privacy}", "received_events_url": "https://api.github.com/users/jsimsa/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-25T20:47:59Z", "updated_at": "2018-10-25T20:47:59Z", "author_association": "MEMBER", "body_html": "<p>Thank you for providing the example.</p>\n<p>When I run the filter-based pipeline on my workstation, it takes roughly 160 seconds.</p>\n<p>IIUC, the equivalent sampling logic can be implemented using the following pipeline:</p>\n<pre><code>  ds = tf.data.Dataset.range(10000).shuffle(10000)\n  ds = ds.repeat()\n  ds = ds.window(100).flat_map(lambda x: x.take(1))\n  ds = ds.shuffle(buffer_size=100000)\n</code></pre>\n<p>Running this pipeline on my machine takes less than 10 seconds, so I am leaning towards not introducing new API for something that can be implemented within a factor of 2 using the existing API.</p>", "body_text": "Thank you for providing the example.\nWhen I run the filter-based pipeline on my workstation, it takes roughly 160 seconds.\nIIUC, the equivalent sampling logic can be implemented using the following pipeline:\n  ds = tf.data.Dataset.range(10000).shuffle(10000)\n  ds = ds.repeat()\n  ds = ds.window(100).flat_map(lambda x: x.take(1))\n  ds = ds.shuffle(buffer_size=100000)\n\nRunning this pipeline on my machine takes less than 10 seconds, so I am leaning towards not introducing new API for something that can be implemented within a factor of 2 using the existing API.", "body": "Thank you for providing the example.\r\n\r\nWhen I run the filter-based pipeline on my workstation, it takes roughly 160 seconds.\r\n\r\nIIUC, the equivalent sampling logic can be implemented using the following pipeline:\r\n\r\n```\r\n  ds = tf.data.Dataset.range(10000).shuffle(10000)\r\n  ds = ds.repeat()\r\n  ds = ds.window(100).flat_map(lambda x: x.take(1))\r\n  ds = ds.shuffle(buffer_size=100000)\r\n```\r\n\r\nRunning this pipeline on my machine takes less than 10 seconds, so I am leaning towards not introducing new API for something that can be implemented within a factor of 2 using the existing API.\r\n\r\n"}