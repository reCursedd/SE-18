{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/434412724", "html_url": "https://github.com/tensorflow/tensorflow/issues/23179#issuecomment-434412724", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23179", "id": 434412724, "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDQxMjcyNA==", "user": {"login": "jsimsa", "id": 1072079, "node_id": "MDQ6VXNlcjEwNzIwNzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1072079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsimsa", "html_url": "https://github.com/jsimsa", "followers_url": "https://api.github.com/users/jsimsa/followers", "following_url": "https://api.github.com/users/jsimsa/following{/other_user}", "gists_url": "https://api.github.com/users/jsimsa/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsimsa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsimsa/subscriptions", "organizations_url": "https://api.github.com/users/jsimsa/orgs", "repos_url": "https://api.github.com/users/jsimsa/repos", "events_url": "https://api.github.com/users/jsimsa/events{/privacy}", "received_events_url": "https://api.github.com/users/jsimsa/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-30T18:14:43Z", "updated_at": "2018-10-30T18:15:03Z", "author_association": "MEMBER", "body_html": "<p>I am opposed to adding <code>sample</code> to the public tf.data API. It does not add any new functionality.</p>\n<p>As far as I can tell, you want to introduce the transformation because of performance. If that's the case, let me suggest an alternative route. You implement the C++ <code>SampleDataset</code> kernel, but instead of surfacing it in the public API, you also implement  a static optimization that replaces instances of <code>FilterDataset</code> with a \"sampling\" predicate (e.g. <code>lambda x: tf.less(tf.random_uniform([1]), rate)[0])</code>) with <code>SampleDataset</code>. This way, the optimization happens automatically and we do not clutter the API with endpoints that do not provide new functionality.</p>\n<p>For an example of tf.data static optimization, see <a href=\"https://github.com/tensorflow/tensorflow/blob/00ae12ad8bf5c348e4c31448e3922cbaab54cc03/tensorflow/core/grappler/optimizers/data/map_and_batch_fusion.cc\">https://github.com/tensorflow/tensorflow/blob/00ae12ad8bf5c348e4c31448e3922cbaab54cc03/tensorflow/core/grappler/optimizers/data/map_and_batch_fusion.cc</a> (this optimization replaces <code>map(...).batch(...)</code> with <code>map_and_batch(...)</code>, also for the sake of performance).</p>", "body_text": "I am opposed to adding sample to the public tf.data API. It does not add any new functionality.\nAs far as I can tell, you want to introduce the transformation because of performance. If that's the case, let me suggest an alternative route. You implement the C++ SampleDataset kernel, but instead of surfacing it in the public API, you also implement  a static optimization that replaces instances of FilterDataset with a \"sampling\" predicate (e.g. lambda x: tf.less(tf.random_uniform([1]), rate)[0])) with SampleDataset. This way, the optimization happens automatically and we do not clutter the API with endpoints that do not provide new functionality.\nFor an example of tf.data static optimization, see https://github.com/tensorflow/tensorflow/blob/00ae12ad8bf5c348e4c31448e3922cbaab54cc03/tensorflow/core/grappler/optimizers/data/map_and_batch_fusion.cc (this optimization replaces map(...).batch(...) with map_and_batch(...), also for the sake of performance).", "body": "I am opposed to adding `sample` to the public tf.data API. It does not add any new functionality.\r\n\r\nAs far as I can tell, you want to introduce the transformation because of performance. If that's the case, let me suggest an alternative route. You implement the C++ `SampleDataset` kernel, but instead of surfacing it in the public API, you also implement  a static optimization that replaces instances of `FilterDataset` with a \"sampling\" predicate (e.g. `lambda x: tf.less(tf.random_uniform([1]), rate)[0])`) with `SampleDataset`. This way, the optimization happens automatically and we do not clutter the API with endpoints that do not provide new functionality.\r\n\r\nFor an example of tf.data static optimization, see https://github.com/tensorflow/tensorflow/blob/00ae12ad8bf5c348e4c31448e3922cbaab54cc03/tensorflow/core/grappler/optimizers/data/map_and_batch_fusion.cc (this optimization replaces `map(...).batch(...)` with `map_and_batch(...)`, also for the sake of performance)."}