{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/388582030", "html_url": "https://github.com/tensorflow/tensorflow/issues/12948#issuecomment-388582030", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12948", "id": 388582030, "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODU4MjAzMA==", "user": {"login": "ahundt", "id": 55744, "node_id": "MDQ6VXNlcjU1NzQ0", "avatar_url": "https://avatars1.githubusercontent.com/u/55744?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahundt", "html_url": "https://github.com/ahundt", "followers_url": "https://api.github.com/users/ahundt/followers", "following_url": "https://api.github.com/users/ahundt/following{/other_user}", "gists_url": "https://api.github.com/users/ahundt/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahundt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahundt/subscriptions", "organizations_url": "https://api.github.com/users/ahundt/orgs", "repos_url": "https://api.github.com/users/ahundt/repos", "events_url": "https://api.github.com/users/ahundt/events{/privacy}", "received_events_url": "https://api.github.com/users/ahundt/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-12T20:50:40Z", "updated_at": "2018-05-12T20:50:40Z", "author_association": "NONE", "body_html": "<p>Cool! so we could simply add <code>alias_inplace_concat</code> much like <code>alias_inplace_add</code>?</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">alias_inplace_add</span>(<span class=\"pl-smi\">x</span>, <span class=\"pl-smi\">i</span>, <span class=\"pl-smi\">v</span>):\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span>Applies an inplace add on input x at index i with value v. Aliases x.</span>\n<span class=\"pl-s\">  If i is None, x and v must be the same shape. Computes</span>\n<span class=\"pl-s\">    x += v;</span>\n<span class=\"pl-s\">  If i is a scalar, x has a rank 1 higher than v's. Computes</span>\n<span class=\"pl-s\">    x[i, :] += v;</span>\n<span class=\"pl-s\">  Otherwise, x and v must have the same rank. Computes</span>\n<span class=\"pl-s\">    x[i, :] += v;</span>\n<span class=\"pl-s\">  Args:</span>\n<span class=\"pl-s\">    x: A Tensor.</span>\n<span class=\"pl-s\">    i: None, a scalar or a vector.</span>\n<span class=\"pl-s\">    v: A Tensor.</span>\n<span class=\"pl-s\">  Returns:</span>\n<span class=\"pl-s\">    Returns x.</span>\n<span class=\"pl-s\">  <span class=\"pl-pds\">\"\"\"</span></span>\n<span class=\"pl-k\">return</span> _inplace_helper(x, i, v, gen_array_ops.inplace_add)</pre></div>", "body_text": "Cool! so we could simply add alias_inplace_concat much like alias_inplace_add?\ndef alias_inplace_add(x, i, v):\n  \"\"\"Applies an inplace add on input x at index i with value v. Aliases x.\n  If i is None, x and v must be the same shape. Computes\n    x += v;\n  If i is a scalar, x has a rank 1 higher than v's. Computes\n    x[i, :] += v;\n  Otherwise, x and v must have the same rank. Computes\n    x[i, :] += v;\n  Args:\n    x: A Tensor.\n    i: None, a scalar or a vector.\n    v: A Tensor.\n  Returns:\n    Returns x.\n  \"\"\"\nreturn _inplace_helper(x, i, v, gen_array_ops.inplace_add)", "body": "Cool! so we could simply add `alias_inplace_concat` much like `alias_inplace_add`?\r\n\r\n```python\r\n\r\ndef alias_inplace_add(x, i, v):\r\n  \"\"\"Applies an inplace add on input x at index i with value v. Aliases x.\r\n  If i is None, x and v must be the same shape. Computes\r\n    x += v;\r\n  If i is a scalar, x has a rank 1 higher than v's. Computes\r\n    x[i, :] += v;\r\n  Otherwise, x and v must have the same rank. Computes\r\n    x[i, :] += v;\r\n  Args:\r\n    x: A Tensor.\r\n    i: None, a scalar or a vector.\r\n    v: A Tensor.\r\n  Returns:\r\n    Returns x.\r\n  \"\"\"\r\nreturn _inplace_helper(x, i, v, gen_array_ops.inplace_add)\r\n```"}