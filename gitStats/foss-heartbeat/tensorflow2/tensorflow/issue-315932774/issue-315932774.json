{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18696", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18696/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18696/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18696/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18696", "id": 315932774, "node_id": "MDU6SXNzdWUzMTU5MzI3NzQ=", "number": 18696, "title": "Unexpected behavior with Estimator warm start", "user": {"login": "dlsmith", "id": 732028, "node_id": "MDQ6VXNlcjczMjAyOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/732028?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dlsmith", "html_url": "https://github.com/dlsmith", "followers_url": "https://api.github.com/users/dlsmith/followers", "following_url": "https://api.github.com/users/dlsmith/following{/other_user}", "gists_url": "https://api.github.com/users/dlsmith/gists{/gist_id}", "starred_url": "https://api.github.com/users/dlsmith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dlsmith/subscriptions", "organizations_url": "https://api.github.com/users/dlsmith/orgs", "repos_url": "https://api.github.com/users/dlsmith/repos", "events_url": "https://api.github.com/users/dlsmith/events{/privacy}", "received_events_url": "https://api.github.com/users/dlsmith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2018-04-19T15:39:11Z", "updated_at": "2018-08-09T20:57:29Z", "closed_at": "2018-06-26T23:05:23Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Mac OS X 10.12.6</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.7.0</li>\n<li><strong>Python version</strong>: 2.7.14</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>: N/A</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I've run into two issues when using a warm start with the <code>Estimator</code> API (please let me know if you'd like me to file these as separate issues):</p>\n<ol>\n<li>If checkpoints exist in the <code>model_dir</code> then the warm start is overridden when the session is created.</li>\n<li>The warm start is performed on every <code>train</code> call, which means warm starting can't be used in the context of <code>train_and_evaluate</code> (or in a manual loop, unless reinitializing the <code>Estimator</code>).</li>\n</ol>\n<p>I'd be willing (pending corporate CLA) to submit a patch if you can clarify the desired behavior. I would personally expect that:</p>\n<ol>\n<li>Checkpoint restore is skipped on session creation if a warm start was performed.</li>\n<li>The warm start settings would be cleared after the first <code>train</code> call. (However, if this is the desired behavior, looking longer term it seems like warm start settings shouldn't be a property of the <code>Estimator</code> instance.)</li>\n</ol>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Mac OS X 10.12.6\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.7.0\nPython version: 2.7.14\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce: N/A\n\nDescribe the problem\nI've run into two issues when using a warm start with the Estimator API (please let me know if you'd like me to file these as separate issues):\n\nIf checkpoints exist in the model_dir then the warm start is overridden when the session is created.\nThe warm start is performed on every train call, which means warm starting can't be used in the context of train_and_evaluate (or in a manual loop, unless reinitializing the Estimator).\n\nI'd be willing (pending corporate CLA) to submit a patch if you can clarify the desired behavior. I would personally expect that:\n\nCheckpoint restore is skipped on session creation if a warm start was performed.\nThe warm start settings would be cleared after the first train call. (However, if this is the desired behavior, looking longer term it seems like warm start settings shouldn't be a property of the Estimator instance.)", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Mac OS X 10.12.6\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.7.0\r\n- **Python version**: 2.7.14\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: N/A\r\n\r\n### Describe the problem\r\nI've run into two issues when using a warm start with the `Estimator` API (please let me know if you'd like me to file these as separate issues):\r\n1. If checkpoints exist in the `model_dir` then the warm start is overridden when the session is created.\r\n2. The warm start is performed on every `train` call, which means warm starting can't be used in the context of `train_and_evaluate` (or in a manual loop, unless reinitializing the `Estimator`).\r\n\r\nI'd be willing (pending corporate CLA) to submit a patch if you can clarify the desired behavior. I would personally expect that:\r\n1. Checkpoint restore is skipped on session creation if a warm start was performed.\r\n2. The warm start settings would be cleared after the first `train` call. (However, if this is the desired behavior, looking longer term it seems like warm start settings shouldn't be a property of the `Estimator` instance.)\r\n"}