{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/201478753", "html_url": "https://github.com/tensorflow/tensorflow/issues/1642#issuecomment-201478753", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1642", "id": 201478753, "node_id": "MDEyOklzc3VlQ29tbWVudDIwMTQ3ODc1Mw==", "user": {"login": "andrewharp", "id": 3376817, "node_id": "MDQ6VXNlcjMzNzY4MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3376817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewharp", "html_url": "https://github.com/andrewharp", "followers_url": "https://api.github.com/users/andrewharp/followers", "following_url": "https://api.github.com/users/andrewharp/following{/other_user}", "gists_url": "https://api.github.com/users/andrewharp/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewharp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewharp/subscriptions", "organizations_url": "https://api.github.com/users/andrewharp/orgs", "repos_url": "https://api.github.com/users/andrewharp/repos", "events_url": "https://api.github.com/users/andrewharp/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewharp/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-25T20:23:26Z", "updated_at": "2016-03-25T20:23:26Z", "author_association": "MEMBER", "body_html": "<p>I've done some tests of this, and it seems like the Nexus 5X is capable of Nexus 5-comparable performance when the 2 A57 cores help out with the processing. Which, unfortunately, is rarely. The majority of the time the bulk of the processing is done by the slower (but more energy-efficient) A53 cores.</p>\n<p>You can see this behavior if you run a systrace while the demo is running and look for the \"Recognize\" calls. e.g. <code>python $SDK_ROOT/platform-tools/systrace/systrace.py --time=5 -o nexus5x.html sched gfx view wm --app=org.tensorflow.demo</code></p>\n<p>Over 25 runs I saw a min demo inference time of 285ms, a max of 642ms, with an average of 491ms.</p>\n<p>I also looked at the per-operation performance (by compiling with -DLOG_DETAILED_STATS), and found the worst offenders for lower performance by far were the convolutions. For example,                    conv2d2_pre_relu/conv took an average of 40ms on the Nexus 5, but a whopping 106ms on the Nexus 5x.</p>", "body_text": "I've done some tests of this, and it seems like the Nexus 5X is capable of Nexus 5-comparable performance when the 2 A57 cores help out with the processing. Which, unfortunately, is rarely. The majority of the time the bulk of the processing is done by the slower (but more energy-efficient) A53 cores.\nYou can see this behavior if you run a systrace while the demo is running and look for the \"Recognize\" calls. e.g. python $SDK_ROOT/platform-tools/systrace/systrace.py --time=5 -o nexus5x.html sched gfx view wm --app=org.tensorflow.demo\nOver 25 runs I saw a min demo inference time of 285ms, a max of 642ms, with an average of 491ms.\nI also looked at the per-operation performance (by compiling with -DLOG_DETAILED_STATS), and found the worst offenders for lower performance by far were the convolutions. For example,                    conv2d2_pre_relu/conv took an average of 40ms on the Nexus 5, but a whopping 106ms on the Nexus 5x.", "body": "I've done some tests of this, and it seems like the Nexus 5X is capable of Nexus 5-comparable performance when the 2 A57 cores help out with the processing. Which, unfortunately, is rarely. The majority of the time the bulk of the processing is done by the slower (but more energy-efficient) A53 cores.\n\nYou can see this behavior if you run a systrace while the demo is running and look for the \"Recognize\" calls. e.g. `python $SDK_ROOT/platform-tools/systrace/systrace.py --time=5 -o nexus5x.html sched gfx view wm --app=org.tensorflow.demo`\n\nOver 25 runs I saw a min demo inference time of 285ms, a max of 642ms, with an average of 491ms.\n\nI also looked at the per-operation performance (by compiling with -DLOG_DETAILED_STATS), and found the worst offenders for lower performance by far were the convolutions. For example,                    conv2d2_pre_relu/conv took an average of 40ms on the Nexus 5, but a whopping 106ms on the Nexus 5x.\n"}