{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/384830322", "html_url": "https://github.com/tensorflow/tensorflow/issues/18898#issuecomment-384830322", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18898", "id": 384830322, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDgzMDMyMg==", "user": {"login": "samikama", "id": 10539540, "node_id": "MDQ6VXNlcjEwNTM5NTQw", "avatar_url": "https://avatars0.githubusercontent.com/u/10539540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samikama", "html_url": "https://github.com/samikama", "followers_url": "https://api.github.com/users/samikama/followers", "following_url": "https://api.github.com/users/samikama/following{/other_user}", "gists_url": "https://api.github.com/users/samikama/gists{/gist_id}", "starred_url": "https://api.github.com/users/samikama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samikama/subscriptions", "organizations_url": "https://api.github.com/users/samikama/orgs", "repos_url": "https://api.github.com/users/samikama/repos", "events_url": "https://api.github.com/users/samikama/events{/privacy}", "received_events_url": "https://api.github.com/users/samikama/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-27T00:45:35Z", "updated_at": "2018-04-27T00:45:35Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13745902\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/oscarriddle\">@oscarriddle</a> the code above is an example. As written in the comment this is a dummy code just to work the machinery. For real calibration you need to run, as much as you want, with an input data set that is representative of your expected inference input. So you need to replace <code>for _ in range(30): sess.run()</code> with something that passes real data at every iteration. For example if you have a network classifying dogs, pass in pictures of the dogs instead of the same picture like we do to execute the machinery. More pictures you pass, better is the calibration. Let me know if this clarifies it.</p>", "body_text": "@oscarriddle the code above is an example. As written in the comment this is a dummy code just to work the machinery. For real calibration you need to run, as much as you want, with an input data set that is representative of your expected inference input. So you need to replace for _ in range(30): sess.run() with something that passes real data at every iteration. For example if you have a network classifying dogs, pass in pictures of the dogs instead of the same picture like we do to execute the machinery. More pictures you pass, better is the calibration. Let me know if this clarifies it.", "body": "@oscarriddle the code above is an example. As written in the comment this is a dummy code just to work the machinery. For real calibration you need to run, as much as you want, with an input data set that is representative of your expected inference input. So you need to replace `for _ in range(30): sess.run()` with something that passes real data at every iteration. For example if you have a network classifying dogs, pass in pictures of the dogs instead of the same picture like we do to execute the machinery. More pictures you pass, better is the calibration. Let me know if this clarifies it."}