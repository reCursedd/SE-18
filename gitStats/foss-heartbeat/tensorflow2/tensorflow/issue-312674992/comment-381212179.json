{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/381212179", "html_url": "https://github.com/tensorflow/tensorflow/issues/18360#issuecomment-381212179", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18360", "id": 381212179, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTIxMjE3OQ==", "user": {"login": "peastman", "id": 4379786, "node_id": "MDQ6VXNlcjQzNzk3ODY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4379786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peastman", "html_url": "https://github.com/peastman", "followers_url": "https://api.github.com/users/peastman/followers", "following_url": "https://api.github.com/users/peastman/following{/other_user}", "gists_url": "https://api.github.com/users/peastman/gists{/gist_id}", "starred_url": "https://api.github.com/users/peastman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peastman/subscriptions", "organizations_url": "https://api.github.com/users/peastman/orgs", "repos_url": "https://api.github.com/users/peastman/repos", "events_url": "https://api.github.com/users/peastman/events{/privacy}", "received_events_url": "https://api.github.com/users/peastman/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-13T17:48:19Z", "updated_at": "2018-04-13T17:48:19Z", "author_association": "NONE", "body_html": "<p>What would be involved in supporting interoperability with other languages?  I'm willing to look into it if it's not too difficult, though my knowledge of Tensorflow internals is pretty limited.</p>\n<p>I do think there's value in bundling the other APIs with the pip package, since it makes the installation really simple, and then it's guaranteed that every user will have them.  For example, this is how Caffe2 handles it: just <code>conda install caffe2</code>, and you have everything needed for development in both Python and C++.  They even include a CMake configuration script with it, so you don't even need to worry about where libraries and headers have gotten installed.  Just add the line <code>find_package(Caffe2)</code> to your build script, and everything magically works.  It would be great if Tensorflow could make its other interfaces similarly easy to use.</p>", "body_text": "What would be involved in supporting interoperability with other languages?  I'm willing to look into it if it's not too difficult, though my knowledge of Tensorflow internals is pretty limited.\nI do think there's value in bundling the other APIs with the pip package, since it makes the installation really simple, and then it's guaranteed that every user will have them.  For example, this is how Caffe2 handles it: just conda install caffe2, and you have everything needed for development in both Python and C++.  They even include a CMake configuration script with it, so you don't even need to worry about where libraries and headers have gotten installed.  Just add the line find_package(Caffe2) to your build script, and everything magically works.  It would be great if Tensorflow could make its other interfaces similarly easy to use.", "body": "What would be involved in supporting interoperability with other languages?  I'm willing to look into it if it's not too difficult, though my knowledge of Tensorflow internals is pretty limited.\r\n\r\nI do think there's value in bundling the other APIs with the pip package, since it makes the installation really simple, and then it's guaranteed that every user will have them.  For example, this is how Caffe2 handles it: just `conda install caffe2`, and you have everything needed for development in both Python and C++.  They even include a CMake configuration script with it, so you don't even need to worry about where libraries and headers have gotten installed.  Just add the line `find_package(Caffe2)` to your build script, and everything magically works.  It would be great if Tensorflow could make its other interfaces similarly easy to use."}