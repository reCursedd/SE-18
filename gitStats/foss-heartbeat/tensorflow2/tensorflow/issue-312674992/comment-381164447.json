{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/381164447", "html_url": "https://github.com/tensorflow/tensorflow/issues/18360#issuecomment-381164447", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18360", "id": 381164447, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTE2NDQ0Nw==", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-13T15:03:58Z", "updated_at": "2018-04-13T15:03:58Z", "author_association": "MEMBER", "body_html": "<p>Regarding development with other language bindings: Note that we release binary versions of the C and Java APIs with every TensorFlow releases, so they do not have to be built from source. See: <a href=\"https://www.tensorflow.org/install/install_c\" rel=\"nofollow\">https://www.tensorflow.org/install/install_c</a>  and <a href=\"https://www.tensorflow.org/install/install_java\" rel=\"nofollow\">https://www.tensorflow.org/install/install_java</a><br>\nLanguage bindings maintained by others (C#, Rust, Ruby, Julia etc.) typically link against the released C API artifacts and do not have to build from source.</p>\n<p>A note on structure: The way the language bindings are structured is that the core \"framework\" is in <code>libtensorflow_framework.so</code> and then language specific shared libraries that depend on it (e.g., <code>pywrap_tensorflow.so</code> for Python, <code>libtensorflow.so</code> for C, <code>libtensorflow_jni.so</code> for Java etc.).</p>\n<p>We currently do not produce artifacts for the C++ API though. We haven't had the bandwidth to support that yet, though would be great to.</p>\n<p>I don't think it would make sense to include all language bindings with the Python <code>pip</code> package, but I do agree that it would be nice to enable your use-case of writing C++ TensorFlow that interoperates with Python. Alas, nobody is actively working on this at the moment. (BTW, just for completeness, I'm sure you've seen how you can <a href=\"https://www.tensorflow.org/extend/adding_an_op\" rel=\"nofollow\">write custom ops in C++</a> and link them with your Python program?).</p>\n<p>I'm going to mark this as \"Community Support\" for now, given that enabling this use case of writing libraries in other languages and mixing those with Python isn't something we (the TensorFlow team) will have the bandwidth to get to or support in the near future (with the exception of writing new TensorFlow operations, which does work).</p>\n<p>If there is a lot of interest in this feature, we could reprioritize.</p>", "body_text": "Regarding development with other language bindings: Note that we release binary versions of the C and Java APIs with every TensorFlow releases, so they do not have to be built from source. See: https://www.tensorflow.org/install/install_c  and https://www.tensorflow.org/install/install_java\nLanguage bindings maintained by others (C#, Rust, Ruby, Julia etc.) typically link against the released C API artifacts and do not have to build from source.\nA note on structure: The way the language bindings are structured is that the core \"framework\" is in libtensorflow_framework.so and then language specific shared libraries that depend on it (e.g., pywrap_tensorflow.so for Python, libtensorflow.so for C, libtensorflow_jni.so for Java etc.).\nWe currently do not produce artifacts for the C++ API though. We haven't had the bandwidth to support that yet, though would be great to.\nI don't think it would make sense to include all language bindings with the Python pip package, but I do agree that it would be nice to enable your use-case of writing C++ TensorFlow that interoperates with Python. Alas, nobody is actively working on this at the moment. (BTW, just for completeness, I'm sure you've seen how you can write custom ops in C++ and link them with your Python program?).\nI'm going to mark this as \"Community Support\" for now, given that enabling this use case of writing libraries in other languages and mixing those with Python isn't something we (the TensorFlow team) will have the bandwidth to get to or support in the near future (with the exception of writing new TensorFlow operations, which does work).\nIf there is a lot of interest in this feature, we could reprioritize.", "body": "Regarding development with other language bindings: Note that we release binary versions of the C and Java APIs with every TensorFlow releases, so they do not have to be built from source. See: https://www.tensorflow.org/install/install_c  and https://www.tensorflow.org/install/install_java\r\nLanguage bindings maintained by others (C#, Rust, Ruby, Julia etc.) typically link against the released C API artifacts and do not have to build from source.\r\n\r\nA note on structure: The way the language bindings are structured is that the core \"framework\" is in `libtensorflow_framework.so` and then language specific shared libraries that depend on it (e.g., `pywrap_tensorflow.so` for Python, `libtensorflow.so` for C, `libtensorflow_jni.so` for Java etc.).\r\n\r\nWe currently do not produce artifacts for the C++ API though. We haven't had the bandwidth to support that yet, though would be great to.\r\n\r\nI don't think it would make sense to include all language bindings with the Python `pip` package, but I do agree that it would be nice to enable your use-case of writing C++ TensorFlow that interoperates with Python. Alas, nobody is actively working on this at the moment. (BTW, just for completeness, I'm sure you've seen how you can [write custom ops in C++](https://www.tensorflow.org/extend/adding_an_op) and link them with your Python program?).\r\n\r\nI'm going to mark this as \"Community Support\" for now, given that enabling this use case of writing libraries in other languages and mixing those with Python isn't something we (the TensorFlow team) will have the bandwidth to get to or support in the near future (with the exception of writing new TensorFlow operations, which does work).\r\n\r\nIf there is a lot of interest in this feature, we could reprioritize.\r\n\r\n"}