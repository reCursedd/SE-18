{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/183068186", "pull_request_review_id": 113999448, "id": 183068186, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzA2ODE4Ng==", "diff_hunk": "@@ -0,0 +1,105 @@\n+# Copyright 2016 The TensorFlow Authors. All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ==============================================================================\n+\"\"\"Tests for Bijector.\"\"\"\n+\n+from __future__ import absolute_import\n+from __future__ import division\n+from __future__ import print_function\n+\n+import numpy as np\n+\n+from tensorflow.contrib.distributions.python.ops.bijectors.ordered import Ordered\n+from tensorflow.python.framework import dtypes\n+from tensorflow.python.framework import tensor_shape\n+from tensorflow.python.ops import array_ops\n+from tensorflow.python.ops.distributions.bijector_test_util import assert_bijective_and_finite\n+from tensorflow.python.platform import test\n+\n+\n+rng = np.random.RandomState(42)\n+\n+\n+class OrderedBijectorTest(test.TestCase):\n+  \"\"\"Tests correctness of the ordered transformation.\"\"\"\n+\n+  def testBijectorVector(self):", "path": "tensorflow/contrib/distributions/python/kernel_tests/bijectors/ordered_test.py", "position": null, "original_position": 37, "commit_id": "63f4618fbdd653fd19a3663a64da89c476aeb0cd", "original_commit_id": "5c52028c7337baafd8d92d36a29e0fa088393d06", "user": {"login": "srvasude", "id": 1048839, "node_id": "MDQ6VXNlcjEwNDg4Mzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1048839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srvasude", "html_url": "https://github.com/srvasude", "followers_url": "https://api.github.com/users/srvasude/followers", "following_url": "https://api.github.com/users/srvasude/following{/other_user}", "gists_url": "https://api.github.com/users/srvasude/gists{/gist_id}", "starred_url": "https://api.github.com/users/srvasude/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srvasude/subscriptions", "organizations_url": "https://api.github.com/users/srvasude/orgs", "repos_url": "https://api.github.com/users/srvasude/repos", "events_url": "https://api.github.com/users/srvasude/events{/privacy}", "received_events_url": "https://api.github.com/users/srvasude/received_events", "type": "User", "site_admin": false}, "body": "Can you annotate this and the shape test with   @test_util.run_in_graph_and_eager_modes()?\r\n\r\nWe are trying to at least make all new tests as eager compatible as possible (this will require changing .eval() to self.evaluate(...).", "created_at": "2018-04-20T14:27:49Z", "updated_at": "2018-04-25T17:01:45Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/18647#discussion_r183068186", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18647", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/183068186"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/18647#discussion_r183068186"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18647"}}, "body_html": "<p>Can you annotate this and the shape test with   @test_util.run_in_graph_and_eager_modes()?</p>\n<p>We are trying to at least make all new tests as eager compatible as possible (this will require changing .eval() to self.evaluate(...).</p>", "body_text": "Can you annotate this and the shape test with   @test_util.run_in_graph_and_eager_modes()?\nWe are trying to at least make all new tests as eager compatible as possible (this will require changing .eval() to self.evaluate(...)."}