{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/410781706", "html_url": "https://github.com/tensorflow/tensorflow/issues/19568#issuecomment-410781706", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19568", "id": 410781706, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDc4MTcwNg==", "user": {"login": "sharvil", "id": 391004, "node_id": "MDQ6VXNlcjM5MTAwNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/391004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sharvil", "html_url": "https://github.com/sharvil", "followers_url": "https://api.github.com/users/sharvil/followers", "following_url": "https://api.github.com/users/sharvil/following{/other_user}", "gists_url": "https://api.github.com/users/sharvil/gists{/gist_id}", "starred_url": "https://api.github.com/users/sharvil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sharvil/subscriptions", "organizations_url": "https://api.github.com/users/sharvil/orgs", "repos_url": "https://api.github.com/users/sharvil/repos", "events_url": "https://api.github.com/users/sharvil/events{/privacy}", "received_events_url": "https://api.github.com/users/sharvil/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-06T17:13:55Z", "updated_at": "2018-08-06T17:13:55Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5468443\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/raofengyun\">@raofengyun</a> thanks for the suggestion! You're right that eliminating the <code>control_dependency</code> will prevent the lockup from occurring. However, <code>update_ops</code> isn't guaranteed to complete before <code>train_op</code> even if it's placed first in the <code>session.run</code> call unless that control dependency is introduced.</p>\n<p>I've also noticed that the above code snippet runs to completion when executing on CPU.</p>", "body_text": "@raofengyun thanks for the suggestion! You're right that eliminating the control_dependency will prevent the lockup from occurring. However, update_ops isn't guaranteed to complete before train_op even if it's placed first in the session.run call unless that control dependency is introduced.\nI've also noticed that the above code snippet runs to completion when executing on CPU.", "body": "@raofengyun thanks for the suggestion! You're right that eliminating the `control_dependency` will prevent the lockup from occurring. However, `update_ops` isn't guaranteed to complete before `train_op` even if it's placed first in the `session.run` call unless that control dependency is introduced.\r\n\r\nI've also noticed that the above code snippet runs to completion when executing on CPU."}