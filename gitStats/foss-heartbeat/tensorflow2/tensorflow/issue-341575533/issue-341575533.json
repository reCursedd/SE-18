{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20843", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20843/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20843/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20843/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20843", "id": 341575533, "node_id": "MDU6SXNzdWUzNDE1NzU1MzM=", "number": 20843, "title": "Performance decrease in TensorFlow 1.9 for large graphs", "user": {"login": "drasmuss", "id": 1952220, "node_id": "MDQ6VXNlcjE5NTIyMjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1952220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drasmuss", "html_url": "https://github.com/drasmuss", "followers_url": "https://api.github.com/users/drasmuss/followers", "following_url": "https://api.github.com/users/drasmuss/following{/other_user}", "gists_url": "https://api.github.com/users/drasmuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/drasmuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drasmuss/subscriptions", "organizations_url": "https://api.github.com/users/drasmuss/orgs", "repos_url": "https://api.github.com/users/drasmuss/repos", "events_url": "https://api.github.com/users/drasmuss/events{/privacy}", "received_events_url": "https://api.github.com/users/drasmuss/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "sherryy", "id": 12612568, "node_id": "MDQ6VXNlcjEyNjEyNTY4", "avatar_url": "https://avatars0.githubusercontent.com/u/12612568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherryy", "html_url": "https://github.com/sherryy", "followers_url": "https://api.github.com/users/sherryy/followers", "following_url": "https://api.github.com/users/sherryy/following{/other_user}", "gists_url": "https://api.github.com/users/sherryy/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherryy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherryy/subscriptions", "organizations_url": "https://api.github.com/users/sherryy/orgs", "repos_url": "https://api.github.com/users/sherryy/repos", "events_url": "https://api.github.com/users/sherryy/events{/privacy}", "received_events_url": "https://api.github.com/users/sherryy/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherryy", "id": 12612568, "node_id": "MDQ6VXNlcjEyNjEyNTY4", "avatar_url": "https://avatars0.githubusercontent.com/u/12612568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherryy", "html_url": "https://github.com/sherryy", "followers_url": "https://api.github.com/users/sherryy/followers", "following_url": "https://api.github.com/users/sherryy/following{/other_user}", "gists_url": "https://api.github.com/users/sherryy/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherryy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherryy/subscriptions", "organizations_url": "https://api.github.com/users/sherryy/orgs", "repos_url": "https://api.github.com/users/sherryy/repos", "events_url": "https://api.github.com/users/sherryy/events{/privacy}", "received_events_url": "https://api.github.com/users/sherryy/received_events", "type": "User", "site_admin": false}, {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 14, "created_at": "2018-07-16T15:50:00Z", "updated_at": "2018-11-15T17:00:16Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Windows 10</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.9.0/1.8.0</li>\n<li><strong>Python version</strong>: 3.5</li>\n<li><strong>Bazel version (if compiling from source)</strong>: n/a</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: n/a</li>\n<li><strong>CUDA/cuDNN version</strong>: 9.0</li>\n<li><strong>GPU model and memory</strong>: GTX 980 Ti, 6GB</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<pre><code>import time\n\nimport tensorflow as tf\n\nx = tf.zeros((1, 10))\n\nfor i in range(5000):\n    x = tf.layers.dense(x, units=10)\n\nwith tf.Session() as sess:\n    sess.run(tf.global_variables_initializer())\n\n    print(\"a\")\n    start = time.time()\n    sess.run(x)\n    print(time.time() - start)\n\n    print(\"b\")\n    start = time.time()\n    sess.run(x)\n    print(time.time() - start)\n</code></pre>\n<h3>Describe the problem</h3>\n<p>On TensorFlow 1.9, this shows:</p>\n<pre><code>a\n17.57940149307251\nb\n0.09075760841369629\n</code></pre>\n<p>On TensorFlow 1.8, this shows:</p>\n<pre><code>a\n11.689541101455688\nb\n0.08776521682739258\n</code></pre>\n<p>So roughly a 50% increase in run time in TensorFlow 1.9.  Note that this only occurs on the first call to <code>sess.run</code> (\"a\" rather than \"b\"), so I suspect this is some change in the graph optimization step.  So, a couple questions:</p>\n<ol>\n<li>What changed?  I can't find anything obviously related to this in the release notes.</li>\n<li>Is this intended/expected (e.g., some new graph optimization steps were added that increase the initial time, but provide benefits in the long run)?  Or is it just a bug?</li>\n<li>If it is intended, is there some way to optionally disable this new feature if we find that initial build time is dominating the run time?</li>\n</ol>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.9.0/1.8.0\nPython version: 3.5\nBazel version (if compiling from source): n/a\nGCC/Compiler version (if compiling from source): n/a\nCUDA/cuDNN version: 9.0\nGPU model and memory: GTX 980 Ti, 6GB\nExact command to reproduce:\n\nimport time\n\nimport tensorflow as tf\n\nx = tf.zeros((1, 10))\n\nfor i in range(5000):\n    x = tf.layers.dense(x, units=10)\n\nwith tf.Session() as sess:\n    sess.run(tf.global_variables_initializer())\n\n    print(\"a\")\n    start = time.time()\n    sess.run(x)\n    print(time.time() - start)\n\n    print(\"b\")\n    start = time.time()\n    sess.run(x)\n    print(time.time() - start)\n\nDescribe the problem\nOn TensorFlow 1.9, this shows:\na\n17.57940149307251\nb\n0.09075760841369629\n\nOn TensorFlow 1.8, this shows:\na\n11.689541101455688\nb\n0.08776521682739258\n\nSo roughly a 50% increase in run time in TensorFlow 1.9.  Note that this only occurs on the first call to sess.run (\"a\" rather than \"b\"), so I suspect this is some change in the graph optimization step.  So, a couple questions:\n\nWhat changed?  I can't find anything obviously related to this in the release notes.\nIs this intended/expected (e.g., some new graph optimization steps were added that increase the initial time, but provide benefits in the long run)?  Or is it just a bug?\nIf it is intended, is there some way to optionally disable this new feature if we find that initial build time is dominating the run time?", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.9.0/1.8.0\r\n- **Python version**: 3.5\r\n- **Bazel version (if compiling from source)**: n/a\r\n- **GCC/Compiler version (if compiling from source)**: n/a\r\n- **CUDA/cuDNN version**: 9.0\r\n- **GPU model and memory**: GTX 980 Ti, 6GB\r\n- **Exact command to reproduce**:\r\n\r\n```\r\nimport time\r\n\r\nimport tensorflow as tf\r\n\r\nx = tf.zeros((1, 10))\r\n\r\nfor i in range(5000):\r\n    x = tf.layers.dense(x, units=10)\r\n\r\nwith tf.Session() as sess:\r\n    sess.run(tf.global_variables_initializer())\r\n\r\n    print(\"a\")\r\n    start = time.time()\r\n    sess.run(x)\r\n    print(time.time() - start)\r\n\r\n    print(\"b\")\r\n    start = time.time()\r\n    sess.run(x)\r\n    print(time.time() - start)\r\n```\r\n\r\n### Describe the problem\r\nOn TensorFlow 1.9, this shows:\r\n```\r\na\r\n17.57940149307251\r\nb\r\n0.09075760841369629\r\n```\r\nOn TensorFlow 1.8, this shows:\r\n```\r\na\r\n11.689541101455688\r\nb\r\n0.08776521682739258\r\n```\r\nSo roughly a 50% increase in run time in TensorFlow 1.9.  Note that this only occurs on the first call to `sess.run` (\"a\" rather than \"b\"), so I suspect this is some change in the graph optimization step.  So, a couple questions:\r\n\r\n1. What changed?  I can't find anything obviously related to this in the release notes.\r\n2. Is this intended/expected (e.g., some new graph optimization steps were added that increase the initial time, but provide benefits in the long run)?  Or is it just a bug?\r\n3. If it is intended, is there some way to optionally disable this new feature if we find that initial build time is dominating the run time?\r\n\r\n"}