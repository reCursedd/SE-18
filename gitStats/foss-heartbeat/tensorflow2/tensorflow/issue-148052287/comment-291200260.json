{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/291200260", "html_url": "https://github.com/tensorflow/tensorflow/issues/1915#issuecomment-291200260", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1915", "id": 291200260, "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTIwMDI2MA==", "user": {"login": "VinceMarron", "id": 24817118, "node_id": "MDQ6VXNlcjI0ODE3MTE4", "avatar_url": "https://avatars3.githubusercontent.com/u/24817118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VinceMarron", "html_url": "https://github.com/VinceMarron", "followers_url": "https://api.github.com/users/VinceMarron/followers", "following_url": "https://api.github.com/users/VinceMarron/following{/other_user}", "gists_url": "https://api.github.com/users/VinceMarron/gists{/gist_id}", "starred_url": "https://api.github.com/users/VinceMarron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VinceMarron/subscriptions", "organizations_url": "https://api.github.com/users/VinceMarron/orgs", "repos_url": "https://api.github.com/users/VinceMarron/repos", "events_url": "https://api.github.com/users/VinceMarron/events{/privacy}", "received_events_url": "https://api.github.com/users/VinceMarron/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-03T16:41:06Z", "updated_at": "2017-04-03T16:41:06Z", "author_association": "NONE", "body_html": "<p>Hello - Thank you for your work on this project. I really appreciate everything that has gone into it.</p>\n<p>I've noticed that gradients are now provided for the 'self_adjoint_eig' function but they are not for the 'self_adjoint_eigvals'. Using the 'self_adjoint_eig' function and just using the eigenvalues is, of course, a sufficient work-around, but perhaps you would like to resolve this for completeness.</p>\n<p>For example, running:</p>\n<pre><code>import tensorflow as tf\na = tf.random_normal((10000,3))\ncovar = tf.matmul(tf.transpose(a), a)\neigvals, eigvect_holder = tf.self_adjoint_eig(covar)\neigvects = tf.transpose(eigvect_holder)\npure_eigvals = tf.self_adjoint_eigvals(covar)\n\nwith tf.Session() as sess:\n       print(sess.run(eigvals))\n       print(sess.run(eigvects))\n       print(sess.run(pure_eigvals))\n       print(sess.run(tf.gradients(eigvals, a)))\n       print(sess.run(tf.gradients(pure_eigvals, a)))\n</code></pre>\n<p>Results in:</p>\n<p>`[  9719.09765625  10004.32910156  10070.64941406]</p>\n<p>[[-0.27976531 -0.12752065 -0.95156187]<br>\n[-0.9541291   0.14700767  0.26081926]<br>\n[ 0.10662714  0.98088086 -0.16279887]]</p>\n<p>[  9808.58398438  10092.38964844  10352.38378906]</p>\n<p>[array([[-2.07045388,  1.91732657,  0.77774417],<br>\n[-0.6452961 , -3.11206341, -1.97885656],<br>\n[-1.94984984, -0.21588665, -1.53561687],<br>\n...,<br>\n[ 2.76743388,  2.91140604, -1.23593211],<br>\n[-2.70180821, -3.767308  ,  0.29746097],<br>\n[-2.36184692,  0.6249733 ,  0.13678969]], dtype=float32)]</p>\n<hr>\n<p>InvalidArgumentError                      Traceback (most recent call last)<br>\n/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/common_shapes.py in _call_cpp_shape_fn_impl(op, input_tensors_needed, input_tensors_as_shapes_needed, debug_python_shape_fn, require_shape_fn)<br>\n670           graph_def_version, node_def_str, input_shapes, input_tensors,<br>\n--&gt; 671           input_tensors_as_shapes, status)<br>\n672   except errors.InvalidArgumentError as err:</p>\n<p>/home/ubuntu/anaconda3/lib/python3.6/contextlib.py in <strong>exit</strong>(self, type, value, traceback)<br>\n88             try:<br>\n---&gt; 89                 next(self.gen)<br>\n90             except StopIteration:</p>\n<p>/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/errors_impl.py in raise_exception_on_not_ok_status()<br>\n465           compat.as_text(pywrap_tensorflow.TF_Message(status)),<br>\n--&gt; 466           pywrap_tensorflow.TF_GetCode(status))<br>\n467   finally:</p>\n<p>InvalidArgumentError: Shape must be rank 2 but is rank 1 for 'gradients_3/SelfAdjointEigV2_3_grad/MatMul' (op: 'MatMul') with input shapes: [0], [0].</p>\n<p>During handling of the above exception, another exception occurred:</p>\n<p>ValueError                                Traceback (most recent call last)<br>\n in ()<br>\n12     print(sess.run(pure_eigvals))<br>\n13     print(sess.run(tf.gradients(eigvals, a)))<br>\n---&gt; 14     print(sess.run(tf.gradients(pure_eigvals, a)))</p>\n<p>/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/gradients_impl.py in gradients(ys, xs, grad_ys, name, colocate_gradients_with_ops, gate_gradients, aggregation_method)<br>\n480                 # If grad_fn was found, do not use SymbolicGradient even for<br>\n481                 # functions.<br>\n--&gt; 482                 in_grads = grad_fn(op, *out_grads)<br>\n483               else:<br>\n484                 # For function call ops, we add a 'SymbolicGradient'</p>\n<p>/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/linalg_grad.py in _SelfAdjointEigV2Grad(op, grad_e, grad_v)<br>\n203           math_ops.matmul(<br>\n204               array_ops.matrix_diag(grad_e) + f * math_ops.matmul(<br>\n--&gt; 205                   v, grad_v, adjoint_a=True),<br>\n206               v,<br>\n207               adjoint_b=True))</p>\n<p>/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/math_ops.py in matmul(a, b, transpose_a, transpose_b, adjoint_a, adjoint_b, a_is_sparse, b_is_sparse, name)<br>\n1763     else:<br>\n1764       return gen_math_ops._mat_mul(<br>\n-&gt; 1765           a, b, transpose_a=transpose_a, transpose_b=transpose_b, name=name)<br>\n1766<br>\n1767</p>\n<p>/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/gen_math_ops.py in _mat_mul(a, b, transpose_a, transpose_b, name)<br>\n1452   \"\"\"<br>\n1453   result = _op_def_lib.apply_op(\"MatMul\", a=a, b=b, transpose_a=transpose_a,<br>\n-&gt; 1454                                 transpose_b=transpose_b, name=name)<br>\n1455   return result<br>\n1456</p>\n<p>/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py in apply_op(self, op_type_name, name, **keywords)<br>\n761         op = g.create_op(op_type_name, inputs, output_types, name=scope,<br>\n762                          input_types=input_types, attrs=attr_protos,<br>\n--&gt; 763                          op_def=op_def)<br>\n764         if output_structure:<br>\n765           outputs = op.outputs</p>\n<p>/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/ops.py in create_op(self, op_type, inputs, dtypes, input_types, name, attrs, op_def, compute_shapes, compute_device)<br>\n2327                     original_op=self._default_original_op, op_def=op_def)<br>\n2328     if compute_shapes:<br>\n-&gt; 2329       set_shapes_for_outputs(ret)<br>\n2330     self._add_op(ret)<br>\n2331     self._record_op_seen_by_control_dependencies(ret)</p>\n<p>/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/ops.py in set_shapes_for_outputs(op)<br>\n1715       shape_func = _call_cpp_shape_fn_and_require_op<br>\n1716<br>\n-&gt; 1717   shapes = shape_func(op)<br>\n1718   if shapes is None:<br>\n1719     raise RuntimeError(</p>\n<p>/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/ops.py in call_with_requiring(op)<br>\n1665<br>\n1666   def call_with_requiring(op):<br>\n-&gt; 1667     return call_cpp_shape_fn(op, require_shape_fn=True)<br>\n1668<br>\n1669   _call_cpp_shape_fn_and_require_op = call_with_requiring</p>\n<p>/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/common_shapes.py in call_cpp_shape_fn(op, input_tensors_needed, input_tensors_as_shapes_needed, debug_python_shape_fn, require_shape_fn)<br>\n608     res = _call_cpp_shape_fn_impl(op, input_tensors_needed,<br>\n609                                   input_tensors_as_shapes_needed,<br>\n--&gt; 610                                   debug_python_shape_fn, require_shape_fn)<br>\n611     if not isinstance(res, dict):<br>\n612       # Handles the case where _call_cpp_shape_fn_impl calls unknown_shape(op).</p>\n<p>/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/common_shapes.py in _call_cpp_shape_fn_impl(op, input_tensors_needed, input_tensors_as_shapes_needed, debug_python_shape_fn, require_shape_fn)<br>\n674       missing_shape_fn = True<br>\n675     else:<br>\n--&gt; 676       raise ValueError(err.message)<br>\n677<br>\n678   if missing_shape_fn:</p>\n<p>ValueError: Shape must be rank 2 but is rank 1 for 'gradients_3/SelfAdjointEigV2_3_grad/MatMul' (op: 'MatMul') with input shapes: [0], [0].<br>\n`</p>", "body_text": "Hello - Thank you for your work on this project. I really appreciate everything that has gone into it.\nI've noticed that gradients are now provided for the 'self_adjoint_eig' function but they are not for the 'self_adjoint_eigvals'. Using the 'self_adjoint_eig' function and just using the eigenvalues is, of course, a sufficient work-around, but perhaps you would like to resolve this for completeness.\nFor example, running:\nimport tensorflow as tf\na = tf.random_normal((10000,3))\ncovar = tf.matmul(tf.transpose(a), a)\neigvals, eigvect_holder = tf.self_adjoint_eig(covar)\neigvects = tf.transpose(eigvect_holder)\npure_eigvals = tf.self_adjoint_eigvals(covar)\n\nwith tf.Session() as sess:\n       print(sess.run(eigvals))\n       print(sess.run(eigvects))\n       print(sess.run(pure_eigvals))\n       print(sess.run(tf.gradients(eigvals, a)))\n       print(sess.run(tf.gradients(pure_eigvals, a)))\n\nResults in:\n`[  9719.09765625  10004.32910156  10070.64941406]\n[[-0.27976531 -0.12752065 -0.95156187]\n[-0.9541291   0.14700767  0.26081926]\n[ 0.10662714  0.98088086 -0.16279887]]\n[  9808.58398438  10092.38964844  10352.38378906]\n[array([[-2.07045388,  1.91732657,  0.77774417],\n[-0.6452961 , -3.11206341, -1.97885656],\n[-1.94984984, -0.21588665, -1.53561687],\n...,\n[ 2.76743388,  2.91140604, -1.23593211],\n[-2.70180821, -3.767308  ,  0.29746097],\n[-2.36184692,  0.6249733 ,  0.13678969]], dtype=float32)]\n\nInvalidArgumentError                      Traceback (most recent call last)\n/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/common_shapes.py in _call_cpp_shape_fn_impl(op, input_tensors_needed, input_tensors_as_shapes_needed, debug_python_shape_fn, require_shape_fn)\n670           graph_def_version, node_def_str, input_shapes, input_tensors,\n--> 671           input_tensors_as_shapes, status)\n672   except errors.InvalidArgumentError as err:\n/home/ubuntu/anaconda3/lib/python3.6/contextlib.py in exit(self, type, value, traceback)\n88             try:\n---> 89                 next(self.gen)\n90             except StopIteration:\n/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/errors_impl.py in raise_exception_on_not_ok_status()\n465           compat.as_text(pywrap_tensorflow.TF_Message(status)),\n--> 466           pywrap_tensorflow.TF_GetCode(status))\n467   finally:\nInvalidArgumentError: Shape must be rank 2 but is rank 1 for 'gradients_3/SelfAdjointEigV2_3_grad/MatMul' (op: 'MatMul') with input shapes: [0], [0].\nDuring handling of the above exception, another exception occurred:\nValueError                                Traceback (most recent call last)\n in ()\n12     print(sess.run(pure_eigvals))\n13     print(sess.run(tf.gradients(eigvals, a)))\n---> 14     print(sess.run(tf.gradients(pure_eigvals, a)))\n/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/gradients_impl.py in gradients(ys, xs, grad_ys, name, colocate_gradients_with_ops, gate_gradients, aggregation_method)\n480                 # If grad_fn was found, do not use SymbolicGradient even for\n481                 # functions.\n--> 482                 in_grads = grad_fn(op, *out_grads)\n483               else:\n484                 # For function call ops, we add a 'SymbolicGradient'\n/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/linalg_grad.py in _SelfAdjointEigV2Grad(op, grad_e, grad_v)\n203           math_ops.matmul(\n204               array_ops.matrix_diag(grad_e) + f * math_ops.matmul(\n--> 205                   v, grad_v, adjoint_a=True),\n206               v,\n207               adjoint_b=True))\n/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/math_ops.py in matmul(a, b, transpose_a, transpose_b, adjoint_a, adjoint_b, a_is_sparse, b_is_sparse, name)\n1763     else:\n1764       return gen_math_ops._mat_mul(\n-> 1765           a, b, transpose_a=transpose_a, transpose_b=transpose_b, name=name)\n1766\n1767\n/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/gen_math_ops.py in _mat_mul(a, b, transpose_a, transpose_b, name)\n1452   \"\"\"\n1453   result = _op_def_lib.apply_op(\"MatMul\", a=a, b=b, transpose_a=transpose_a,\n-> 1454                                 transpose_b=transpose_b, name=name)\n1455   return result\n1456\n/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py in apply_op(self, op_type_name, name, **keywords)\n761         op = g.create_op(op_type_name, inputs, output_types, name=scope,\n762                          input_types=input_types, attrs=attr_protos,\n--> 763                          op_def=op_def)\n764         if output_structure:\n765           outputs = op.outputs\n/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/ops.py in create_op(self, op_type, inputs, dtypes, input_types, name, attrs, op_def, compute_shapes, compute_device)\n2327                     original_op=self._default_original_op, op_def=op_def)\n2328     if compute_shapes:\n-> 2329       set_shapes_for_outputs(ret)\n2330     self._add_op(ret)\n2331     self._record_op_seen_by_control_dependencies(ret)\n/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/ops.py in set_shapes_for_outputs(op)\n1715       shape_func = _call_cpp_shape_fn_and_require_op\n1716\n-> 1717   shapes = shape_func(op)\n1718   if shapes is None:\n1719     raise RuntimeError(\n/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/ops.py in call_with_requiring(op)\n1665\n1666   def call_with_requiring(op):\n-> 1667     return call_cpp_shape_fn(op, require_shape_fn=True)\n1668\n1669   _call_cpp_shape_fn_and_require_op = call_with_requiring\n/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/common_shapes.py in call_cpp_shape_fn(op, input_tensors_needed, input_tensors_as_shapes_needed, debug_python_shape_fn, require_shape_fn)\n608     res = _call_cpp_shape_fn_impl(op, input_tensors_needed,\n609                                   input_tensors_as_shapes_needed,\n--> 610                                   debug_python_shape_fn, require_shape_fn)\n611     if not isinstance(res, dict):\n612       # Handles the case where _call_cpp_shape_fn_impl calls unknown_shape(op).\n/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/common_shapes.py in _call_cpp_shape_fn_impl(op, input_tensors_needed, input_tensors_as_shapes_needed, debug_python_shape_fn, require_shape_fn)\n674       missing_shape_fn = True\n675     else:\n--> 676       raise ValueError(err.message)\n677\n678   if missing_shape_fn:\nValueError: Shape must be rank 2 but is rank 1 for 'gradients_3/SelfAdjointEigV2_3_grad/MatMul' (op: 'MatMul') with input shapes: [0], [0].\n`", "body": "Hello - Thank you for your work on this project. I really appreciate everything that has gone into it. \r\n\r\nI've noticed that gradients are now provided for the 'self_adjoint_eig' function but they are not for the 'self_adjoint_eigvals'. Using the 'self_adjoint_eig' function and just using the eigenvalues is, of course, a sufficient work-around, but perhaps you would like to resolve this for completeness. \r\n\r\nFor example, running:\r\n\r\n```\r\nimport tensorflow as tf\r\na = tf.random_normal((10000,3))\r\ncovar = tf.matmul(tf.transpose(a), a)\r\neigvals, eigvect_holder = tf.self_adjoint_eig(covar)\r\neigvects = tf.transpose(eigvect_holder)\r\npure_eigvals = tf.self_adjoint_eigvals(covar)\r\n\r\nwith tf.Session() as sess:\r\n       print(sess.run(eigvals))\r\n       print(sess.run(eigvects))\r\n       print(sess.run(pure_eigvals))\r\n       print(sess.run(tf.gradients(eigvals, a)))\r\n       print(sess.run(tf.gradients(pure_eigvals, a)))\r\n```\r\n\r\n\r\nResults in:\r\n\r\n`[  9719.09765625  10004.32910156  10070.64941406]\r\n\r\n[[-0.27976531 -0.12752065 -0.95156187]\r\n [-0.9541291   0.14700767  0.26081926]\r\n [ 0.10662714  0.98088086 -0.16279887]]\r\n\r\n[  9808.58398438  10092.38964844  10352.38378906]\r\n\r\n[array([[-2.07045388,  1.91732657,  0.77774417],\r\n       [-0.6452961 , -3.11206341, -1.97885656],\r\n       [-1.94984984, -0.21588665, -1.53561687],\r\n       ..., \r\n       [ 2.76743388,  2.91140604, -1.23593211],\r\n       [-2.70180821, -3.767308  ,  0.29746097],\r\n       [-2.36184692,  0.6249733 ,  0.13678969]], dtype=float32)]\r\n\r\n---------------------------------------------------------------------------\r\nInvalidArgumentError                      Traceback (most recent call last)\r\n/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/common_shapes.py in _call_cpp_shape_fn_impl(op, input_tensors_needed, input_tensors_as_shapes_needed, debug_python_shape_fn, require_shape_fn)\r\n    670           graph_def_version, node_def_str, input_shapes, input_tensors,\r\n--> 671           input_tensors_as_shapes, status)\r\n    672   except errors.InvalidArgumentError as err:\r\n\r\n/home/ubuntu/anaconda3/lib/python3.6/contextlib.py in __exit__(self, type, value, traceback)\r\n     88             try:\r\n---> 89                 next(self.gen)\r\n     90             except StopIteration:\r\n\r\n/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/errors_impl.py in raise_exception_on_not_ok_status()\r\n    465           compat.as_text(pywrap_tensorflow.TF_Message(status)),\r\n--> 466           pywrap_tensorflow.TF_GetCode(status))\r\n    467   finally:\r\n\r\nInvalidArgumentError: Shape must be rank 2 but is rank 1 for 'gradients_3/SelfAdjointEigV2_3_grad/MatMul' (op: 'MatMul') with input shapes: [0], [0].\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-2-c5ded0c9e625> in <module>()\r\n     12     print(sess.run(pure_eigvals))\r\n     13     print(sess.run(tf.gradients(eigvals, a)))\r\n---> 14     print(sess.run(tf.gradients(pure_eigvals, a)))\r\n\r\n/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/gradients_impl.py in gradients(ys, xs, grad_ys, name, colocate_gradients_with_ops, gate_gradients, aggregation_method)\r\n    480                 # If grad_fn was found, do not use SymbolicGradient even for\r\n    481                 # functions.\r\n--> 482                 in_grads = grad_fn(op, *out_grads)\r\n    483               else:\r\n    484                 # For function call ops, we add a 'SymbolicGradient'\r\n\r\n/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/linalg_grad.py in _SelfAdjointEigV2Grad(op, grad_e, grad_v)\r\n    203           math_ops.matmul(\r\n    204               array_ops.matrix_diag(grad_e) + f * math_ops.matmul(\r\n--> 205                   v, grad_v, adjoint_a=True),\r\n    206               v,\r\n    207               adjoint_b=True))\r\n\r\n/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/math_ops.py in matmul(a, b, transpose_a, transpose_b, adjoint_a, adjoint_b, a_is_sparse, b_is_sparse, name)\r\n   1763     else:\r\n   1764       return gen_math_ops._mat_mul(\r\n-> 1765           a, b, transpose_a=transpose_a, transpose_b=transpose_b, name=name)\r\n   1766 \r\n   1767 \r\n\r\n/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/gen_math_ops.py in _mat_mul(a, b, transpose_a, transpose_b, name)\r\n   1452   \"\"\"\r\n   1453   result = _op_def_lib.apply_op(\"MatMul\", a=a, b=b, transpose_a=transpose_a,\r\n-> 1454                                 transpose_b=transpose_b, name=name)\r\n   1455   return result\r\n   1456 \r\n\r\n/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py in apply_op(self, op_type_name, name, **keywords)\r\n    761         op = g.create_op(op_type_name, inputs, output_types, name=scope,\r\n    762                          input_types=input_types, attrs=attr_protos,\r\n--> 763                          op_def=op_def)\r\n    764         if output_structure:\r\n    765           outputs = op.outputs\r\n\r\n/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/ops.py in create_op(self, op_type, inputs, dtypes, input_types, name, attrs, op_def, compute_shapes, compute_device)\r\n   2327                     original_op=self._default_original_op, op_def=op_def)\r\n   2328     if compute_shapes:\r\n-> 2329       set_shapes_for_outputs(ret)\r\n   2330     self._add_op(ret)\r\n   2331     self._record_op_seen_by_control_dependencies(ret)\r\n\r\n/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/ops.py in set_shapes_for_outputs(op)\r\n   1715       shape_func = _call_cpp_shape_fn_and_require_op\r\n   1716 \r\n-> 1717   shapes = shape_func(op)\r\n   1718   if shapes is None:\r\n   1719     raise RuntimeError(\r\n\r\n/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/ops.py in call_with_requiring(op)\r\n   1665 \r\n   1666   def call_with_requiring(op):\r\n-> 1667     return call_cpp_shape_fn(op, require_shape_fn=True)\r\n   1668 \r\n   1669   _call_cpp_shape_fn_and_require_op = call_with_requiring\r\n\r\n/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/common_shapes.py in call_cpp_shape_fn(op, input_tensors_needed, input_tensors_as_shapes_needed, debug_python_shape_fn, require_shape_fn)\r\n    608     res = _call_cpp_shape_fn_impl(op, input_tensors_needed,\r\n    609                                   input_tensors_as_shapes_needed,\r\n--> 610                                   debug_python_shape_fn, require_shape_fn)\r\n    611     if not isinstance(res, dict):\r\n    612       # Handles the case where _call_cpp_shape_fn_impl calls unknown_shape(op).\r\n\r\n/home/ubuntu/anaconda3/lib/python3.6/site-packages/tensorflow/python/framework/common_shapes.py in _call_cpp_shape_fn_impl(op, input_tensors_needed, input_tensors_as_shapes_needed, debug_python_shape_fn, require_shape_fn)\r\n    674       missing_shape_fn = True\r\n    675     else:\r\n--> 676       raise ValueError(err.message)\r\n    677 \r\n    678   if missing_shape_fn:\r\n\r\nValueError: Shape must be rank 2 but is rank 1 for 'gradients_3/SelfAdjointEigV2_3_grad/MatMul' (op: 'MatMul') with input shapes: [0], [0].\r\n`\r\n"}