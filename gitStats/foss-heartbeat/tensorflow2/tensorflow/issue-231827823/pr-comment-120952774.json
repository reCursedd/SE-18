{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/120952774", "pull_request_review_id": 42962376, "id": 120952774, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMDk1Mjc3NA==", "diff_hunk": "@@ -0,0 +1,148 @@\n+/* Copyright 2017 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+package org.tensorflow.op;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.regex.Pattern;\n+\n+/**\n+ * A class to manage scoped (hierarchical) names for operators.\n+ *\n+ * <p>{@code NameScope} manages hierarchical names where each component in the hierarchy is\n+ * separated by a forward slash {@code '/'}. For instance, {@code nn/Const_72} or {@code\n+ * nn/gradient/assign/init}. Each scope is a subtree in this hierarchy.\n+ *\n+ * <p>Use {@code NameScope} to group related operations within a hierarchy, which for example lets\n+ * tensorboard coalesce nodes for better graph visualizations.\n+ *\n+ * <p>This class is package private, user code creates {@link Scope} which internally delegates\n+ * calls to an underlying {@code NameScope}.\n+ *\n+ * <p>This class is <b>not</b> thread-safe.\n+ */\n+final class NameScope {\n+\n+  NameScope withSubScope(String scopeName) {\n+    checkPattern(NAME_REGEX, scopeName);\n+", "path": "tensorflow/java/src/main/java/org/tensorflow/op/NameScope.java", "position": null, "original_position": 41, "commit_id": "f049c08e7876b0638293c38d9f0aa6af8774a325", "original_commit_id": "29d831e2d45f24585b18db17ecbfad1a8d0c31a8", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "Out of curiosity, why all the blank lines in these short functions?\r\nMaybe this is my C/Go background talking, but compact is better in these cases? :)\r\n\r\n(Feel free to leave as is or change, your call - I was just curious)", "created_at": "2017-06-08T17:42:27Z", "updated_at": "2017-06-09T00:05:47Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/10255#discussion_r120952774", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/10255", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/120952774"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/10255#discussion_r120952774"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/10255"}}, "body_html": "<p>Out of curiosity, why all the blank lines in these short functions?<br>\nMaybe this is my C/Go background talking, but compact is better in these cases? :)</p>\n<p>(Feel free to leave as is or change, your call - I was just curious)</p>", "body_text": "Out of curiosity, why all the blank lines in these short functions?\nMaybe this is my C/Go background talking, but compact is better in these cases? :)\n(Feel free to leave as is or change, your call - I was just curious)"}