{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7235", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7235/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7235/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7235/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7235", "id": 205043000, "node_id": "MDU6SXNzdWUyMDUwNDMwMDA=", "number": 7235, "title": "undefined symbol: clock_gettime on Ubuntu 12.04", "user": {"login": "namrathaurs", "id": 15844738, "node_id": "MDQ6VXNlcjE1ODQ0NzM4", "avatar_url": "https://avatars2.githubusercontent.com/u/15844738?v=4", "gravatar_id": "", "url": "https://api.github.com/users/namrathaurs", "html_url": "https://github.com/namrathaurs", "followers_url": "https://api.github.com/users/namrathaurs/followers", "following_url": "https://api.github.com/users/namrathaurs/following{/other_user}", "gists_url": "https://api.github.com/users/namrathaurs/gists{/gist_id}", "starred_url": "https://api.github.com/users/namrathaurs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/namrathaurs/subscriptions", "organizations_url": "https://api.github.com/users/namrathaurs/orgs", "repos_url": "https://api.github.com/users/namrathaurs/repos", "events_url": "https://api.github.com/users/namrathaurs/events{/privacy}", "received_events_url": "https://api.github.com/users/namrathaurs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jart", "id": 49262, "node_id": "MDQ6VXNlcjQ5MjYy", "avatar_url": "https://avatars1.githubusercontent.com/u/49262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jart", "html_url": "https://github.com/jart", "followers_url": "https://api.github.com/users/jart/followers", "following_url": "https://api.github.com/users/jart/following{/other_user}", "gists_url": "https://api.github.com/users/jart/gists{/gist_id}", "starred_url": "https://api.github.com/users/jart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jart/subscriptions", "organizations_url": "https://api.github.com/users/jart/orgs", "repos_url": "https://api.github.com/users/jart/repos", "events_url": "https://api.github.com/users/jart/events{/privacy}", "received_events_url": "https://api.github.com/users/jart/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jart", "id": 49262, "node_id": "MDQ6VXNlcjQ5MjYy", "avatar_url": "https://avatars1.githubusercontent.com/u/49262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jart", "html_url": "https://github.com/jart", "followers_url": "https://api.github.com/users/jart/followers", "following_url": "https://api.github.com/users/jart/following{/other_user}", "gists_url": "https://api.github.com/users/jart/gists{/gist_id}", "starred_url": "https://api.github.com/users/jart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jart/subscriptions", "organizations_url": "https://api.github.com/users/jart/orgs", "repos_url": "https://api.github.com/users/jart/repos", "events_url": "https://api.github.com/users/jart/events{/privacy}", "received_events_url": "https://api.github.com/users/jart/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2017-02-03T00:53:59Z", "updated_at": "2018-04-23T02:08:33Z", "closed_at": "2017-02-06T19:04:15Z", "author_association": "NONE", "body_html": "<p>NOTE: Only file GitHub issues for bugs and feature requests.  All other topics will be closed.</p>\n<p>For general support from the community, see <a href=\"https://stackoverflow.com/questions/tagged/tensorflow\" rel=\"nofollow\">StackOverflow</a>.<br>\nTo make bugs and feature requests more easy to find and organize, we close issues that are deemed<br>\nout of scope for GitHub Issues and point people to StackOverflow.</p>\n<p>For bugs or installation issues, please provide the following information.<br>\nThe more information you provide, the more easily we will be able to offer<br>\nhelp and advice.</p>\n<h3>What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?</h3>\n<p>Almost every possible workarounds and resolutions that are existing for all of the Tensorflow-related issues that have been discussed on GitHub and StackOverflow have been tried, but the issue still persists. Since, I could not find any discussions or fixes with respect to the particular issue that I am encountering, I thought reaching out to you folks would be the best option that is available, as it would help me learn from the developers themselves.</p>\n<h3>Environment info</h3>\n<p>Operating System: Ubuntu 12.04 LTS 64-bit<br>\nPython : 2.7.3 built on GCC 4.6.3<br>\nTensorflow : 0.12.1, CPU-only version</p>\n<p>Installed version of CUDA and cuDNN:<br>\n(please attach the output of <code>ls -l /path/to/cuda/lib/libcud*</code>): No such file or directory</p>\n<p>Since installing from the binary pip package did not work, I tried installing Tensorflow from source, the details of which are provided below :</p>\n<p>If installed from source, provide</p>\n<ol>\n<li>The commit hash (<code>git rev-parse HEAD</code>) - <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/b5854872a49172e0502856b60cbaedf0df4df087/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/b5854872a49172e0502856b60cbaedf0df4df087\"><tt>b585487</tt></a></li>\n<li>The output of <code>bazel version</code> - 0.4.3</li>\n</ol>\n<h3>If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)</h3>\n<p>~ $ cd /etc<br>\n/etc$ python<br>\nPython 2.7.3 (default, Oct 26 2016, 21:01:49)<br>\n[GCC 4.6.3] on linux2<br>\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>import tensorflow as tf<br>\nTraceback (most recent call last):<br>\nFile \"\", line 1, in <br>\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/<strong>init</strong>.py\", line 24, in <br>\nfrom tensorflow.python import *<br>\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/<strong>init</strong>.py\", line 72, in <br>\nraise ImportError(msg)<br>\nImportError: Traceback (most recent call last):<br>\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/<strong>init</strong>.py\", line 61, in <br>\nfrom tensorflow.python import pywrap_tensorflow<br>\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/pywrap_tensorflow.py\", line 28, in <br>\n_pywrap_tensorflow = swig_import_helper()<br>\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/pywrap_tensorflow.py\", line 24, in swig_import_helper<br>\n_mod = imp.load_module('_pywrap_tensorflow', fp, pathname, description)<br>\nImportError: /usr/local/lib/python2.7/dist-packages/tensorflow/python/_pywrap_tensorflow.so: undefined symbol: clock_gettime</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>Failed to load the native TensorFlow runtime.</p>\n<p>See <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/g3doc/get_started/os_setup.md#import_error\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/g3doc/get_started/os_setup.md#import_error</a></p>\n<p>for some common reasons and solutions.  Include the entire stack trace<br>\nabove this error message when asking for help.</p>\n<blockquote>\n<blockquote>\n<blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n<h3>What other attempted solutions have you tried?</h3>\n<p>The initial point of error was with respect to GLIBC_2.x not being found on my filesystem. With that I started troubleshooting and debugging Tensorflow configuration with the following list of attempted solutions -</p>\n<ol>\n<li>Upgrade of GCC to v4.9</li>\n<li>Upgrade of Bazel to v0.4.3</li>\n<li>Upgrade of protobuf to v</li>\n<li>Bazel installation via binary installer</li>\n<li>Bazel installation via Git Repository clone (<a href=\"https://github.com/bazelbuild/bazel.git\">https://github.com/bazelbuild/bazel.git</a>), followed by a hard reset to a specific HEAD</li>\n<li>Tensorflow installation via the pip package directly using the .whl file</li>\n<li>Tensorflow installation via Git Repository clone (<a href=\"https://github.com/tensorflow/tensorflow\">https://github.com/tensorflow/tensorflow</a>), followed by a hard reset to a specific HEAD</li>\n<li>Bazel build with additional options such as --linkopt '-lrt' --copt '-DGPR_BACKWARDS_COMPATIBILITY_MODE' --conlyopt='-std=c99'</li>\n</ol>\n<h3>Logs or other output that would be helpful</h3>\n<p>(If logs are large, please upload as attachment or provide link).</p>\n<ol>\n<li>Execution of ./configure fetches all external dependencies successfully</li>\n<li>During bazel build, massive number of warning messages regarding deprecation show up on the console. However, build completes successfully with building the pip package</li>\n<li>No errors during bazel-bin execution</li>\n<li>No errors during the .whl file execution either. Successfully installs Tensorflow 0.12.1 with most of the additional requirements like numpy, protobuf, wheel, werkzeug etc., being satisfied (the .whl file is named 'tensorflow-0.12.1-cp27-cp27mu-linux_x86_64.whl')</li>\n</ol>\n<p>I may have missed out on mentioning slight details, but I have tried my best to cover the wide range of fixes that I have been trying on. If in case, you guys have any questions for me, please feel free to reach out as those details might help you better understand the issue being described above.</p>\n<p>Just out of curiosity as it caught my eye, I upgraded my GCC to 4.9 as was mentioned in one of the StackOverflow discussion and updated the symlinks to point to the new version. After which, I performed all of the mentioned solutions that I tried. However, I see that my Python interpreter seems to have been compiled with GCC v4.6.3. Would this be causing any kind of issues with the native runtime not being loaded?</p>\n<p>Thank you so much for helping us out! Looking forward to hear from your end with your inputs on this.</p>\n<p>Adding a fellow colleague <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=22912235\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Nishithhaa\">@Nishithhaa</a> to this discussion as we are facing issues during the configuration and setup of Tensorflow on our machines.</p>", "body_text": "NOTE: Only file GitHub issues for bugs and feature requests.  All other topics will be closed.\nFor general support from the community, see StackOverflow.\nTo make bugs and feature requests more easy to find and organize, we close issues that are deemed\nout of scope for GitHub Issues and point people to StackOverflow.\nFor bugs or installation issues, please provide the following information.\nThe more information you provide, the more easily we will be able to offer\nhelp and advice.\nWhat related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\nAlmost every possible workarounds and resolutions that are existing for all of the Tensorflow-related issues that have been discussed on GitHub and StackOverflow have been tried, but the issue still persists. Since, I could not find any discussions or fixes with respect to the particular issue that I am encountering, I thought reaching out to you folks would be the best option that is available, as it would help me learn from the developers themselves.\nEnvironment info\nOperating System: Ubuntu 12.04 LTS 64-bit\nPython : 2.7.3 built on GCC 4.6.3\nTensorflow : 0.12.1, CPU-only version\nInstalled version of CUDA and cuDNN:\n(please attach the output of ls -l /path/to/cuda/lib/libcud*): No such file or directory\nSince installing from the binary pip package did not work, I tried installing Tensorflow from source, the details of which are provided below :\nIf installed from source, provide\n\nThe commit hash (git rev-parse HEAD) - b585487\nThe output of bazel version - 0.4.3\n\nIf possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\n~ $ cd /etc\n/etc$ python\nPython 2.7.3 (default, Oct 26 2016, 21:01:49)\n[GCC 4.6.3] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n\n\nimport tensorflow as tf\nTraceback (most recent call last):\nFile \"\", line 1, in \nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/init.py\", line 24, in \nfrom tensorflow.python import *\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/init.py\", line 72, in \nraise ImportError(msg)\nImportError: Traceback (most recent call last):\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/init.py\", line 61, in \nfrom tensorflow.python import pywrap_tensorflow\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/pywrap_tensorflow.py\", line 28, in \n_pywrap_tensorflow = swig_import_helper()\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/pywrap_tensorflow.py\", line 24, in swig_import_helper\n_mod = imp.load_module('_pywrap_tensorflow', fp, pathname, description)\nImportError: /usr/local/lib/python2.7/dist-packages/tensorflow/python/_pywrap_tensorflow.so: undefined symbol: clock_gettime\n\n\n\nFailed to load the native TensorFlow runtime.\nSee https://github.com/tensorflow/tensorflow/blob/master/tensorflow/g3doc/get_started/os_setup.md#import_error\nfor some common reasons and solutions.  Include the entire stack trace\nabove this error message when asking for help.\n\n\n\n\n\n\nWhat other attempted solutions have you tried?\nThe initial point of error was with respect to GLIBC_2.x not being found on my filesystem. With that I started troubleshooting and debugging Tensorflow configuration with the following list of attempted solutions -\n\nUpgrade of GCC to v4.9\nUpgrade of Bazel to v0.4.3\nUpgrade of protobuf to v\nBazel installation via binary installer\nBazel installation via Git Repository clone (https://github.com/bazelbuild/bazel.git), followed by a hard reset to a specific HEAD\nTensorflow installation via the pip package directly using the .whl file\nTensorflow installation via Git Repository clone (https://github.com/tensorflow/tensorflow), followed by a hard reset to a specific HEAD\nBazel build with additional options such as --linkopt '-lrt' --copt '-DGPR_BACKWARDS_COMPATIBILITY_MODE' --conlyopt='-std=c99'\n\nLogs or other output that would be helpful\n(If logs are large, please upload as attachment or provide link).\n\nExecution of ./configure fetches all external dependencies successfully\nDuring bazel build, massive number of warning messages regarding deprecation show up on the console. However, build completes successfully with building the pip package\nNo errors during bazel-bin execution\nNo errors during the .whl file execution either. Successfully installs Tensorflow 0.12.1 with most of the additional requirements like numpy, protobuf, wheel, werkzeug etc., being satisfied (the .whl file is named 'tensorflow-0.12.1-cp27-cp27mu-linux_x86_64.whl')\n\nI may have missed out on mentioning slight details, but I have tried my best to cover the wide range of fixes that I have been trying on. If in case, you guys have any questions for me, please feel free to reach out as those details might help you better understand the issue being described above.\nJust out of curiosity as it caught my eye, I upgraded my GCC to 4.9 as was mentioned in one of the StackOverflow discussion and updated the symlinks to point to the new version. After which, I performed all of the mentioned solutions that I tried. However, I see that my Python interpreter seems to have been compiled with GCC v4.6.3. Would this be causing any kind of issues with the native runtime not being loaded?\nThank you so much for helping us out! Looking forward to hear from your end with your inputs on this.\nAdding a fellow colleague @Nishithhaa to this discussion as we are facing issues during the configuration and setup of Tensorflow on our machines.", "body": "NOTE: Only file GitHub issues for bugs and feature requests.  All other topics will be closed.\r\n\r\nFor general support from the community, see [StackOverflow](https://stackoverflow.com/questions/tagged/tensorflow).\r\nTo make bugs and feature requests more easy to find and organize, we close issues that are deemed\r\nout of scope for GitHub Issues and point people to StackOverflow.\r\n\r\nFor bugs or installation issues, please provide the following information.\r\nThe more information you provide, the more easily we will be able to offer\r\nhelp and advice.\r\n\r\n### What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\r\nAlmost every possible workarounds and resolutions that are existing for all of the Tensorflow-related issues that have been discussed on GitHub and StackOverflow have been tried, but the issue still persists. Since, I could not find any discussions or fixes with respect to the particular issue that I am encountering, I thought reaching out to you folks would be the best option that is available, as it would help me learn from the developers themselves.\r\n\r\n\r\n### Environment info\r\nOperating System: Ubuntu 12.04 LTS 64-bit \r\nPython : 2.7.3 built on GCC 4.6.3\r\nTensorflow : 0.12.1, CPU-only version\r\n\r\nInstalled version of CUDA and cuDNN: \r\n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`): No such file or directory\r\n\r\nSince installing from the binary pip package did not work, I tried installing Tensorflow from source, the details of which are provided below :\r\n\r\nIf installed from source, provide \r\n\r\n1. The commit hash (`git rev-parse HEAD`) - b5854872a49172e0502856b60cbaedf0df4df087\r\n2. The output of `bazel version` - 0.4.3\r\n\r\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\r\n~ $ cd /etc\r\n/etc$ python\r\nPython 2.7.3 (default, Oct 26 2016, 21:01:49) \r\n[GCC 4.6.3] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import tensorflow as tf\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/__init__.py\", line 24, in <module>\r\n    from tensorflow.python import *\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/__init__.py\", line 72, in <module>\r\n    raise ImportError(msg)\r\nImportError: Traceback (most recent call last):\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/__init__.py\", line 61, in <module>\r\n    from tensorflow.python import pywrap_tensorflow\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/pywrap_tensorflow.py\", line 28, in <module>\r\n    _pywrap_tensorflow = swig_import_helper()\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/pywrap_tensorflow.py\", line 24, in swig_import_helper\r\n    _mod = imp.load_module('_pywrap_tensorflow', fp, pathname, description)\r\nImportError: /usr/local/lib/python2.7/dist-packages/tensorflow/python/_pywrap_tensorflow.so: undefined symbol: clock_gettime\r\n\r\n\r\nFailed to load the native TensorFlow runtime.\r\n\r\nSee https://github.com/tensorflow/tensorflow/blob/master/tensorflow/g3doc/get_started/os_setup.md#import_error\r\n\r\nfor some common reasons and solutions.  Include the entire stack trace\r\nabove this error message when asking for help.\r\n>>> \r\n\r\n\r\n### What other attempted solutions have you tried?\r\nThe initial point of error was with respect to GLIBC_2.x not being found on my filesystem. With that I started troubleshooting and debugging Tensorflow configuration with the following list of attempted solutions -\r\n1. Upgrade of GCC to v4.9\r\n2. Upgrade of Bazel to v0.4.3\r\n3. Upgrade of protobuf to v\r\n3. Bazel installation via binary installer\r\n4. Bazel installation via Git Repository clone (https://github.com/bazelbuild/bazel.git), followed by a hard reset to a specific HEAD\r\n5. Tensorflow installation via the pip package directly using the .whl file\r\n6. Tensorflow installation via Git Repository clone (https://github.com/tensorflow/tensorflow), followed by a hard reset to a specific HEAD\r\n7. Bazel build with additional options such as --linkopt '-lrt' --copt '-DGPR_BACKWARDS_COMPATIBILITY_MODE' --conlyopt='-std=c99'\r\n\r\n\r\n### Logs or other output that would be helpful\r\n(If logs are large, please upload as attachment or provide link).\r\n1. Execution of ./configure fetches all external dependencies successfully\r\n2. During bazel build, massive number of warning messages regarding deprecation show up on the console. However, build completes successfully with building the pip package\r\n3. No errors during bazel-bin execution\r\n4. No errors during the .whl file execution either. Successfully installs Tensorflow 0.12.1 with most of the additional requirements like numpy, protobuf, wheel, werkzeug etc., being satisfied (the .whl file is named 'tensorflow-0.12.1-cp27-cp27mu-linux_x86_64.whl')\r\n\r\n\r\nI may have missed out on mentioning slight details, but I have tried my best to cover the wide range of fixes that I have been trying on. If in case, you guys have any questions for me, please feel free to reach out as those details might help you better understand the issue being described above.\r\n\r\nJust out of curiosity as it caught my eye, I upgraded my GCC to 4.9 as was mentioned in one of the StackOverflow discussion and updated the symlinks to point to the new version. After which, I performed all of the mentioned solutions that I tried. However, I see that my Python interpreter seems to have been compiled with GCC v4.6.3. Would this be causing any kind of issues with the native runtime not being loaded?\r\n\r\nThank you so much for helping us out! Looking forward to hear from your end with your inputs on this.\r\n\r\n\r\n\r\nAdding a fellow colleague @nishithhaa to this discussion as we are facing issues during the configuration and setup of Tensorflow on our machines.\r\n"}