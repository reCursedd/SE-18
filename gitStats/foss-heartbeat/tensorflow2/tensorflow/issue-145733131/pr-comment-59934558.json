{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/59934558", "pull_request_review_id": null, "id": 59934558, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTM0NTU4", "diff_hunk": "@@ -0,0 +1,58 @@\n+/* Copyright 2015 Google Inc. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+// We define the PY_ARRAY_UNIQUE_SYMBOL in this .cc file and provide an\n+// ImportNumpy function to populate it.\n+#define TF_IMPORT_NUMPY\n+\n+#include \"tf_session_helper.h\"\n+\n+namespace tensorflow {\n+\n+void TF_Run_wrapper(TF_Session* session,\n+                   // Input tensors\n+                   std::vector<std::string> input_tensor_names, std::vector<TF_Tensor*> inputs,\n+                   // Output tensors\n+                   std::vector<std::string> output_tensor_names, std::vector<TF_Tensor*> &outputs,\n+                   // Target nodes\n+                   std::vector<std::string> target_node_names,\n+                   // Output status\n+                   TF_Status* out_status) {\n+ \n+  std::vector<const char*> cstring_input_tensor_names;\n+  std::vector<const char*> cstring_output_tensor_names;\n+  std::vector<const char*> cstring_target_node_names;\n+  for(auto i = 0; i < input_tensor_names.size(); ++i)", "path": "tensorflow/contrib/go/tf_session_helper.cc", "position": null, "original_position": 37, "commit_id": "942760424141d0f5a930982d5e78aaeb05869488", "original_commit_id": "210180befbd05694aa3285fef7d498bbd1be2dcc", "user": {"login": "dave-andersen", "id": 827870, "node_id": "MDQ6VXNlcjgyNzg3MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/827870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dave-andersen", "html_url": "https://github.com/dave-andersen", "followers_url": "https://api.github.com/users/dave-andersen/followers", "following_url": "https://api.github.com/users/dave-andersen/following{/other_user}", "gists_url": "https://api.github.com/users/dave-andersen/gists{/gist_id}", "starred_url": "https://api.github.com/users/dave-andersen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dave-andersen/subscriptions", "organizations_url": "https://api.github.com/users/dave-andersen/orgs", "repos_url": "https://api.github.com/users/dave-andersen/repos", "events_url": "https://api.github.com/users/dave-andersen/events{/privacy}", "received_events_url": "https://api.github.com/users/dave-andersen/received_events", "type": "User", "site_admin": false}, "body": "can these all be c++11-style range loops over the vector?\n\n  for (auto& input_name: input_tensor_names) {\n     cstring_input_tensor_names.push_back(const_cast<char *>input_name.c_str())\n}\n\n(Please do use explicit braces, since it's too long to fit on a single line.)\n((Does it really need the const_cast, since cstring_input_tensor_names is a vector of const char *'s?  This is twitchy - modifying those pointers results in undefined behavior.  I wonder if the const_cast was leftover from before the vectors were defined on consts?))\n", "created_at": "2016-04-15T20:15:06Z", "updated_at": "2016-05-05T08:12:14Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/1771#discussion_r59934558", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/1771", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/59934558"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/1771#discussion_r59934558"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/1771"}}, "body_html": "<p>can these all be c++11-style range loops over the vector?</p>\n<p>for (auto&amp; input_name: input_tensor_names) {<br>\ncstring_input_tensor_names.push_back(const_cast&lt;char *&gt;input_name.c_str())<br>\n}</p>\n<p>(Please do use explicit braces, since it's too long to fit on a single line.)<br>\n((Does it really need the const_cast, since cstring_input_tensor_names is a vector of const char *'s?  This is twitchy - modifying those pointers results in undefined behavior.  I wonder if the const_cast was leftover from before the vectors were defined on consts?))</p>", "body_text": "can these all be c++11-style range loops over the vector?\nfor (auto& input_name: input_tensor_names) {\ncstring_input_tensor_names.push_back(const_cast<char *>input_name.c_str())\n}\n(Please do use explicit braces, since it's too long to fit on a single line.)\n((Does it really need the const_cast, since cstring_input_tensor_names is a vector of const char *'s?  This is twitchy - modifying those pointers results in undefined behavior.  I wonder if the const_cast was leftover from before the vectors were defined on consts?))"}