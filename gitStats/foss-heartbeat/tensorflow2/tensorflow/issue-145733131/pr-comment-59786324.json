{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/59786324", "pull_request_review_id": null, "id": 59786324, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Nzg2MzI0", "diff_hunk": "@@ -0,0 +1,163 @@\n+# TensorFlow for Go\n+\n+This package provides a high-level Go API for TensorFlow, this package\n+provides the necessary tools to create and manipulate Tensors, Variables,\n+Constants as also to build, load and run Graphs.\n+\n+## API documentation\n+* [Session](g3doc/session.md): Encapsulates the environment in which Operation\n+  objects are executed, and Tensor objects are evaluated.\n+* [Graph](g3doc/graph.md): Contains a set of Operations, which represent units\n+  of computation; and Tensors, which represent the units of data that flow\n+  between operations.\n+* [Tensor](g3doc/tensor.md): Typed multi-dimensional array.\n+\n+## Practical Examples\n+\n+##### Python Graph generated and executed on Go\n+\n+This is just an example that shows how to interact with the provided API\n+\n+In order to generate a valid Graph you can use the next Python code\n+\n+```python\n+import tensorflow as tf\n+\n+input1 = tf.placeholder(tf.int64, shape=(2, 2, 2), name='input1')\n+input2 = tf.placeholder(tf.int64, shape=(2, 2, 2), name='input2')\n+output = tf.add(input1, input2, name='output')\n+\n+with tf.Session() as sess:\n+    tf.train.write_graph(sess.graph_def, '/tmp/graph/', 'test_graph.pb', as_text=True)\n+```\n+\n+The previous code prepares two placeholders with names 'input1' and\n+'input2' respectively and other tensor used as output of the addition of the\n+two placeholders. At the end, it dumps the graph as text into a text file with\n+path:\n+'/tmp/graph/test_graph.pb'.\n+\n+From a Go application, you can use the next code to execute the graph:\n+\n+```go\n+package main\n+\n+import (\n+\t\"log\"\n+\n+\t\"github.com/tensorflow/tensorflow/tensorflow/contrib/go\"\n+)\n+\n+func main() {\n+\t// These are the input tensors to be used\n+\tinputSlice1 := [][][]int64{\n+\t\t{\n+\t\t\t{1, 2},\n+\t\t\t{3, 4},\n+\t\t}, {\n+\t\t\t{5, 6},\n+\t\t\t{7, 8},\n+\t\t},\n+\t}\n+\tinputSlice2 := [][][]int64{\n+\t\t{\n+\t\t\t{9, 10},\n+\t\t\t{11, 12},\n+\t\t}, {\n+\t\t\t{13, 14},\n+\t\t\t{15, 16},\n+\t\t},\n+\t}\n+\n+\t// Create the two tensors, the data type is recognized automatically as\n+\t// also the tensor shape from the input slice\n+\tt1, err := tensorflow.NewTensor(inputSlice1)\n+\tif err != nil {\n+\t\tlog.Fatal(\"Problem trying create a new tensor, Error:\", err)\n+\t}\n+\n+\tt2, err := tensorflow.NewTensor(inputSlice2)\n+\tif err != nil {\n+\t\tlog.Fatal(\"Problem trying create a new tensor, Error:\", err)\n+\t}\n+\n+\t// Load the graph from the file that we generated from Python on the\n+\tprevious step\n+\tgraph, err := tensorflow.LoadGraphFromTextFile(\"/tmp/graph/test_graph.pb\")\n+\tif err != nil {\n+\t\tlog.Fatal(\"Problem reading the graph from the text file, Error:\", err)\n+\t}\n+\n+\t// Create the session and extend the Graph\n+\ts, err := tensorflow.NewSession()\n+\tif err := s.ExtendGraph(graph); err != nil {\n+\t\tlog.Fatal(\"Problem extending the Graph, Error:\", err)\n+\t}\n+\n+\tinput := map[string]*tensorflow.Tensor{\n+\t\t\"input1\": t1,\n+\t\t\"input2\": t2,\n+\t}\n+\t// Execute the graph with the two input tensors, and specify the names\n+\t// of the tensors to be returned, for this case just one\n+\tout, err := s.Run(input, []string{\"output\"}, nil)\n+\tif err != nil {\n+\t\tlog.Fatal(\"Problem trying to run the saved graph, Error:\", err)\n+\t}\n+\n+\tif len(out) != 1 {\n+\t\tlog.Fatalf(\"The expected number of outputs is 1 but: %d returned\", len(out))\n+\t}\n+\n+\toutputTensor := out[0]\n+\tfor x := 0; x < outputTensor.Dim(0); x++ {\n+\t\tfor y := 0; y < outputTensor.Dim(1); y++ {\n+\t\t\tfor z := 0; z < outputTensor.Dim(2); z++ {\n+\t\t\t\t// Using GetVal we can access to the corresponding positions of\n+\t\t\t\t// the tensor as if we had been accessing to the positions in a\n+\t\t\t\t// multidimensional array, for instance GetVal(1, 2, 3) is\n+\t\t\t\t// equivalent to array[1][2][3] on a three dimensional array\n+\t\t\t\tval, err := out[0].GetVal(x, y, z)\n+\t\t\t\tif err != nil {\n+\t\t\t\t\tlog.Fatal(\"Error trying to read the output tensor, Error:\", err)\n+\t\t\t\t}\n+\t\t\t\tif val != inputSlice1[x][y][z]+inputSlice2[x][y][z] {\n+\t\t\t\t\tlog.Printf(\n+\t\t\t\t\t\t\"The sum of the two elements: %d + %d doesn't match with the returned value: %d\",\n+\t\t\t\t\t\tinputSlice1[x][y][z], inputSlice2[x][y][z], val)\n+\t\t\t\t}\n+\n+\t\t\t\tlog.Println(\"The value value on coordinates:\", x, y, z, \"is:\", val)\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n+```\n+\n+As you can see from the previous code creates two Tensors to be processed by the", "path": "tensorflow/contrib/go/README.md", "position": null, "original_position": 137, "commit_id": "942760424141d0f5a930982d5e78aaeb05869488", "original_commit_id": "9a2ecbb0a24284a747c34125410f6ecdfe959ee4", "user": {"login": "dave-andersen", "id": 827870, "node_id": "MDQ6VXNlcjgyNzg3MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/827870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dave-andersen", "html_url": "https://github.com/dave-andersen", "followers_url": "https://api.github.com/users/dave-andersen/followers", "following_url": "https://api.github.com/users/dave-andersen/following{/other_user}", "gists_url": "https://api.github.com/users/dave-andersen/gists{/gist_id}", "starred_url": "https://api.github.com/users/dave-andersen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dave-andersen/subscriptions", "organizations_url": "https://api.github.com/users/dave-andersen/orgs", "repos_url": "https://api.github.com/users/dave-andersen/repos", "events_url": "https://api.github.com/users/dave-andersen/events{/privacy}", "received_events_url": "https://api.github.com/users/dave-andersen/received_events", "type": "User", "site_admin": false}, "body": "s/As you can see from//   (-->  \"The previous code ...\")\n", "created_at": "2016-04-14T20:32:26Z", "updated_at": "2016-05-05T08:12:14Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/1771#discussion_r59786324", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/1771", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/59786324"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/1771#discussion_r59786324"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/1771"}}, "body_html": "<p>s/As you can see from//   (--&gt;  \"The previous code ...\")</p>", "body_text": "s/As you can see from//   (-->  \"The previous code ...\")"}