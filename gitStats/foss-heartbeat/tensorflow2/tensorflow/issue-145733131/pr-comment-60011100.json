{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/60011100", "pull_request_review_id": null, "id": 60011100, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDExMTAw", "diff_hunk": "@@ -0,0 +1,553 @@\n+package tensorflow\n+\n+import (\n+\t\"fmt\"\n+\t\"io\"\n+\t\"io/ioutil\"\n+\t\"strings\"\n+\n+\t\"github.com/golang/protobuf/proto\"\n+\n+\tpb \"github.com/tensorflow/tensorflow/tensorflow/contrib/go/proto\"\n+)\n+\n+const (\n+\tcOpsProtobufDefsPath = \"/usr/local/tensorlow/ops.pbtxt\"\n+)\n+\n+// A Graph is the representation of the computation graph.\n+type Graph struct {\n+\tdef *pb.GraphDef\n+\n+\tavailableOps map[string]*pb.OpDef\n+\tconstants    map[string]*Tensor\n+\tvariables    map[string]*Tensor\n+}\n+\n+// A GraphNode is the representation of one of the nodes of the TensorFlow\n+// Graph. A node takes zero or more Tensors, performs some computation, and\n+// produces zero or more Tensors.\n+type GraphNode struct {\n+\tref          *pb.NodeDef\n+\tdef          *pb.NodeDef\n+\toutDataTypes map[string]DataType\n+}\n+\n+// NewGraph returns an initialized instance of the Graph struct.\n+func NewGraph() *Graph {\n+\treturn &Graph{\n+\t\tdef:          new(pb.GraphDef),\n+\t\tavailableOps: make(map[string]*pb.OpDef),\n+\t\tconstants:    make(map[string]*Tensor),\n+\t\tvariables:    make(map[string]*Tensor),\n+\t}\n+}\n+\n+// NewGraphFromReader reads from reader until an error or EOF and loads the\n+// content into a new graph. Use the asText parameter to specify if the graph\n+// from the reader is provided in Text format.\n+func NewGraphFromReader(reader io.Reader, asText bool) (gr *Graph, err error) {", "path": "tensorflow/contrib/go/graph.go", "position": null, "original_position": 49, "commit_id": "942760424141d0f5a930982d5e78aaeb05869488", "original_commit_id": "00bebc14359b800763383e9bcefa0a4cd3b3ddee", "user": {"login": "alonsovidales", "id": 1468785, "node_id": "MDQ6VXNlcjE0Njg3ODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1468785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alonsovidales", "html_url": "https://github.com/alonsovidales", "followers_url": "https://api.github.com/users/alonsovidales/followers", "following_url": "https://api.github.com/users/alonsovidales/following{/other_user}", "gists_url": "https://api.github.com/users/alonsovidales/gists{/gist_id}", "starred_url": "https://api.github.com/users/alonsovidales/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alonsovidales/subscriptions", "organizations_url": "https://api.github.com/users/alonsovidales/orgs", "repos_url": "https://api.github.com/users/alonsovidales/repos", "events_url": "https://api.github.com/users/alonsovidales/events{/privacy}", "received_events_url": "https://api.github.com/users/alonsovidales/received_events", "type": "User", "site_admin": false}, "body": "I added asText based on the [write_graph](https://www.tensorflow.org/versions/r0.8/api_docs/python/train.html#write_graph) python implementation, but in the [import_graph_def](https://www.tensorflow.org/versions/r0.8/api_docs/python/framework.html#import_graph_def) the as_text is not used so I suppose that they are doing as you say, they use auto-detection.\nThe problem is that if we try to unmarshal as text and if it fails using proto.Unmarshal directly is worst in terms of performance and I wouldn't know what error message to return in case of an error, the one from Unmarshal or UnmarshalText. In the other hand could be more easy to understand for the developers.\n\nwhat are your thoughts on this? @tmv @dave-andersen @vrv \n", "created_at": "2016-04-18T06:42:52Z", "updated_at": "2016-05-05T08:12:14Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/1771#discussion_r60011100", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/1771", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/60011100"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/1771#discussion_r60011100"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/1771"}}, "body_html": "<p>I added asText based on the <a href=\"https://www.tensorflow.org/versions/r0.8/api_docs/python/train.html#write_graph\" rel=\"nofollow\">write_graph</a> python implementation, but in the <a href=\"https://www.tensorflow.org/versions/r0.8/api_docs/python/framework.html#import_graph_def\" rel=\"nofollow\">import_graph_def</a> the as_text is not used so I suppose that they are doing as you say, they use auto-detection.<br>\nThe problem is that if we try to unmarshal as text and if it fails using proto.Unmarshal directly is worst in terms of performance and I wouldn't know what error message to return in case of an error, the one from Unmarshal or UnmarshalText. In the other hand could be more easy to understand for the developers.</p>\n<p>what are your thoughts on this? <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=715196\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/TMV\">@TMV</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=827870\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/dave-andersen\">@dave-andersen</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=463737\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vrv\">@vrv</a></p>", "body_text": "I added asText based on the write_graph python implementation, but in the import_graph_def the as_text is not used so I suppose that they are doing as you say, they use auto-detection.\nThe problem is that if we try to unmarshal as text and if it fails using proto.Unmarshal directly is worst in terms of performance and I wouldn't know what error message to return in case of an error, the one from Unmarshal or UnmarshalText. In the other hand could be more easy to understand for the developers.\nwhat are your thoughts on this? @TMV @dave-andersen @vrv"}