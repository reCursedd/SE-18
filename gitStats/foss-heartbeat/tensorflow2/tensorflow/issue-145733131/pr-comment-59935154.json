{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/59935154", "pull_request_review_id": null, "id": 59935154, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTM1MTU0", "diff_hunk": "@@ -0,0 +1,214 @@\n+package main\n+\n+/* Copyright 2015 Google Inc. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+// A minimal but useful Go example showing how to load an Imagenet-style object\n+// recognition TensorFlow model, prepare input images for it, run them through\n+// the graph, and interpret the results.\n+//\n+// It's designed to have as few dependencies and be as clear as possible, so\n+// it's more verbose than it could be in production code. The errors maagement\n+// while building the Graph had been ommited in order to make the code less\n+// verbose, but for production code is recomended to check the returned errors\n+// on each step.\n+//\n+// To use it, run in a working directory with the\n+// learning/brain/tutorials/label_image_go/data/ folder below it: go run\n+// main.go <image_file>, you can use data/ceres_paris.jpg as image file which\n+// contains the image of a Labrador and you should see the top five labels for\n+// the example image output.\n+//\n+// The tensorflow_inception_graph.pb file included by default is created from\n+// Inception.\n+\n+import (\n+\t\"fmt\"\n+\t\"io/ioutil\"\n+\t\"log\"\n+\t\"os\"\n+\t\"strings\"\n+\n+\ttf \"github.com/tensorflow/tensorflow/tensorflow/contrib/go\"\n+)\n+\n+const (\n+\tcInputWidth  = 299\n+\tcInputHeight = 299\n+\tcInputMean   = 128\n+\tcInputStd    = 128\n+\n+\t// cInceptionGraphFile This is the path of the graph who contains the\n+\t// model.\n+\tcInceptionGraphFile = \"tensorflow/examples/label_image_go/data/tensorflow_inception_graph.pb\"\n+\t// cLabelsFile File path that contains a label per line.\n+\tcLabelsFile = \"tensorflow/examples/label_image_go/data/imagenet_comp_graph_label_strings.txt\"\n+\n+\t// cLabelsToShow Amounth of best match labels to be returned per image.\n+\tcLabelsToShow = 5\n+)\n+\n+// readTensorFromImageFile Given an image file name, read in the data, try to\n+// decode it as an image, resize it to the requested size, and then scale the\n+// values as desired.\n+func readTensorFromImageFile(filePath string) *tf.Tensor {\n+\tvar imageReader *tf.GraphNode\n+\n+\tgraph := tf.NewGraph()\n+\n+\t// Load the image file path into the graph as a constant, and read its\n+\t// content.\n+\tfileNameNode, _ := graph.Constant(\"file_name\", filePath)\n+\tfileReader, _ := graph.Op(\"ReadFile\", \"file_reader\", []*tf.GraphNode{fileNameNode}, \"\", nil)\n+\n+\t// Now try to figure out what kind of file it is and decode it.\n+\tif filePath[len(filePath)-4:] == \".png\" {", "path": "tensorflow/examples/label_image_go/main.go", "position": null, "original_position": 77, "commit_id": "942760424141d0f5a930982d5e78aaeb05869488", "original_commit_id": "210180befbd05694aa3285fef7d498bbd1be2dcc", "user": {"login": "dave-andersen", "id": 827870, "node_id": "MDQ6VXNlcjgyNzg3MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/827870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dave-andersen", "html_url": "https://github.com/dave-andersen", "followers_url": "https://api.github.com/users/dave-andersen/followers", "following_url": "https://api.github.com/users/dave-andersen/following{/other_user}", "gists_url": "https://api.github.com/users/dave-andersen/gists{/gist_id}", "starred_url": "https://api.github.com/users/dave-andersen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dave-andersen/subscriptions", "organizations_url": "https://api.github.com/users/dave-andersen/orgs", "repos_url": "https://api.github.com/users/dave-andersen/repos", "events_url": "https://api.github.com/users/dave-andersen/events{/privacy}", "received_events_url": "https://api.github.com/users/dave-andersen/received_events", "type": "User", "site_admin": false}, "body": "suggest\nimport path/filepath\nif filepath.Ext(filePath) == \".png\"   (does the right thing if, e.g., the file path is less than 4 characters.)  \n\nActually, reading a little further, I'd suggest a switch on strings.ToLower(filepath.Ext(filePath))\n\".png\"\n\".jpg\", \".jpeg\"\ndefault  (error return)\n\nthat way you can get rid of the \"Assume\" comment and make it a little more robust without a lot of work.\n", "created_at": "2016-04-15T20:19:54Z", "updated_at": "2016-05-05T08:12:14Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/1771#discussion_r59935154", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/1771", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/59935154"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/1771#discussion_r59935154"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/1771"}}, "body_html": "<p>suggest<br>\nimport path/filepath<br>\nif filepath.Ext(filePath) == \".png\"   (does the right thing if, e.g., the file path is less than 4 characters.)</p>\n<p>Actually, reading a little further, I'd suggest a switch on strings.ToLower(filepath.Ext(filePath))<br>\n\".png\"<br>\n\".jpg\", \".jpeg\"<br>\ndefault  (error return)</p>\n<p>that way you can get rid of the \"Assume\" comment and make it a little more robust without a lot of work.</p>", "body_text": "suggest\nimport path/filepath\nif filepath.Ext(filePath) == \".png\"   (does the right thing if, e.g., the file path is less than 4 characters.)\nActually, reading a little further, I'd suggest a switch on strings.ToLower(filepath.Ext(filePath))\n\".png\"\n\".jpg\", \".jpeg\"\ndefault  (error return)\nthat way you can get rid of the \"Assume\" comment and make it a little more robust without a lot of work."}