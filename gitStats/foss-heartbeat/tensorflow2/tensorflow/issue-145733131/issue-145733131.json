{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1771", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1771/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1771/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1771/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/1771", "id": 145733131, "node_id": "MDExOlB1bGxSZXF1ZXN0NjUxNzI3MzM=", "number": 1771, "title": "Go API", "user": {"login": "alonsovidales", "id": 1468785, "node_id": "MDQ6VXNlcjE0Njg3ODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1468785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alonsovidales", "html_url": "https://github.com/alonsovidales", "followers_url": "https://api.github.com/users/alonsovidales/followers", "following_url": "https://api.github.com/users/alonsovidales/following{/other_user}", "gists_url": "https://api.github.com/users/alonsovidales/gists{/gist_id}", "starred_url": "https://api.github.com/users/alonsovidales/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alonsovidales/subscriptions", "organizations_url": "https://api.github.com/users/alonsovidales/orgs", "repos_url": "https://api.github.com/users/alonsovidales/repos", "events_url": "https://api.github.com/users/alonsovidales/events{/privacy}", "received_events_url": "https://api.github.com/users/alonsovidales/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 300136613, "node_id": "MDU6TGFiZWwzMDAxMzY2MTM=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20no", "name": "cla: no", "color": "eb6420", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "dave-andersen", "id": 827870, "node_id": "MDQ6VXNlcjgyNzg3MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/827870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dave-andersen", "html_url": "https://github.com/dave-andersen", "followers_url": "https://api.github.com/users/dave-andersen/followers", "following_url": "https://api.github.com/users/dave-andersen/following{/other_user}", "gists_url": "https://api.github.com/users/dave-andersen/gists{/gist_id}", "starred_url": "https://api.github.com/users/dave-andersen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dave-andersen/subscriptions", "organizations_url": "https://api.github.com/users/dave-andersen/orgs", "repos_url": "https://api.github.com/users/dave-andersen/repos", "events_url": "https://api.github.com/users/dave-andersen/events{/privacy}", "received_events_url": "https://api.github.com/users/dave-andersen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dave-andersen", "id": 827870, "node_id": "MDQ6VXNlcjgyNzg3MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/827870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dave-andersen", "html_url": "https://github.com/dave-andersen", "followers_url": "https://api.github.com/users/dave-andersen/followers", "following_url": "https://api.github.com/users/dave-andersen/following{/other_user}", "gists_url": "https://api.github.com/users/dave-andersen/gists{/gist_id}", "starred_url": "https://api.github.com/users/dave-andersen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dave-andersen/subscriptions", "organizations_url": "https://api.github.com/users/dave-andersen/orgs", "repos_url": "https://api.github.com/users/dave-andersen/repos", "events_url": "https://api.github.com/users/dave-andersen/events{/privacy}", "received_events_url": "https://api.github.com/users/dave-andersen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 64, "created_at": "2016-04-04T16:20:36Z", "updated_at": "2016-05-23T19:38:56Z", "closed_at": "2016-05-23T19:29:10Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/1771", "html_url": "https://github.com/tensorflow/tensorflow/pull/1771", "diff_url": "https://github.com/tensorflow/tensorflow/pull/1771.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/1771.patch"}, "body_html": "<p>Hello,<br>\nDuring the last weeks I have been working on this implementation of the Go API. <strong>This is still a work in progress</strong>, I'm doing this PR just to show what I'm working on and to get feedback.</p>\n<p>I forked from <a href=\"https://github.com/tmc/tensorflow/tree/go_bindings\">https://github.com/tmc/tensorflow/tree/go_bindings</a> where the bindings was implemented by Travis Cline. This Go library allows to interact with the tensors in an easy way from Go being able to create, populate and retrieve the content from the tensors. This library also provides the API for Graph generation from Go, create sessions, run this graphs and so on. The goal is to achieve the same functionality provided by the C++ API.</p>\n<p>In order to show how the API works, I updated the label_image example with an implementation using the <a href=\"https://github.com/alonsovidales/tensorflow/tree/go_bindings_tensors/tensorflow/examples/label_image_go\">Go API</a> and I also updated the <a href=\"https://github.com/alonsovidales/tensorflow/blob/go_bindings_tensors/tensorflow/g3doc/tutorials/image_recognition/index.md#usage-with-the-go-api\">tutorial</a></p>\n<p>I'm trying to keep all the code covered with tests, I still have to cover some corner cases and functionality like the data type recognition for the graph, etc.<br>\nBy the moment the supported Tensor data types are:</p>\n<ul>\n<li>TF_FLOAT</li>\n<li>TF_DOUBLE</li>\n<li>TF_INT32</li>\n<li>TF_UINT8</li>\n<li>TF_UINT32</li>\n<li>TF_INT16</li>\n<li>TF_INT8</li>\n<li>TF_STRING</li>\n<li>TF_INT64</li>\n<li>TF_BOOL<br>\nI'm planing to add support for TF_QINT* TF_BFLOAT16 and TF_COMPLEX soon.</li>\n</ul>\n<p>I have some doubts:</p>\n<ul>\n<li>Would it be better to add the API docu as md in tensorflow/g3doc/ , or just with GoDoc it would be enough? Having the docu on the MarkDown files could be better for the people without too much experience on Go, but having the docu on GoDocs is going to be updated in an easiest way and the Go developers are more used to read the documentation on GoDoc format. We can also keep it in both places, or just add a link from the MarkDown docu to GoDoc.</li>\n<li>In order to get the definition for all the available operations I'm loading this info from tensorflow/core/ops/ops.pbtxt . The problem is that I'm doing this <a href=\"https://github.com/alonsovidales/tensorflow/blob/go_bindings_tensors/tensorflow/go/gen.go#L3\">cp of the file from go gen</a>. I think that this problem could be approached on three different ways:\n<ul>\n<li>\n<ol>\n<li>Converting ops.pbtxt into a .go file: converting the content into a constant string we don't need to move this file, this option will remove this dependency, but if the file changes it will requiere to regenerate the libs that shouldn't be too much problem, we could even generate Go code for each operation so we don't need to parse the file and it would improve the performance.</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>Using something like the TF_GetOpList function used by Python in order to retrieve this info from the C++ API. This would add more dependencies from the Go to the C++ API, that is not a mayor issue but will requiere to prepare a new method or modify the original since TF_GetOpList depends on the Python libs.</li>\n</ol>\n</li>\n<li>\n<ol start=\"3\">\n<li>As I'm doing right now, just copying the file. At least for a first iteration this could be a good option since it makes more easy to work with the code.</li>\n</ol>\n</li>\n</ul>\n</li>\n<li>Regarding to the installation, I'm not sure if keep using \"go generate\" or Bazel, Go generate is more or less the standar for Go projects, but Bazel is what TensorFlow is using. I think that I'm going to change to Bazel so I can avoid things like <a href=\"https://github.com/alonsovidales/tensorflow/blob/go_bindings_tensors/tensorflow/go/gen.go#L1\">bazel from Go</a> but I'm not sure if this is the best approach.</li>\n</ul>\n<p>I would be really grateful if you could please take a look at the code and let me know your thoughts, what I'm missing, how can I improve it, etc.</p>\n<p>Thanks!</p>\n<p>Related ticket: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115914766\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/10\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/10/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/10\">#10</a></p>", "body_text": "Hello,\nDuring the last weeks I have been working on this implementation of the Go API. This is still a work in progress, I'm doing this PR just to show what I'm working on and to get feedback.\nI forked from https://github.com/tmc/tensorflow/tree/go_bindings where the bindings was implemented by Travis Cline. This Go library allows to interact with the tensors in an easy way from Go being able to create, populate and retrieve the content from the tensors. This library also provides the API for Graph generation from Go, create sessions, run this graphs and so on. The goal is to achieve the same functionality provided by the C++ API.\nIn order to show how the API works, I updated the label_image example with an implementation using the Go API and I also updated the tutorial\nI'm trying to keep all the code covered with tests, I still have to cover some corner cases and functionality like the data type recognition for the graph, etc.\nBy the moment the supported Tensor data types are:\n\nTF_FLOAT\nTF_DOUBLE\nTF_INT32\nTF_UINT8\nTF_UINT32\nTF_INT16\nTF_INT8\nTF_STRING\nTF_INT64\nTF_BOOL\nI'm planing to add support for TF_QINT* TF_BFLOAT16 and TF_COMPLEX soon.\n\nI have some doubts:\n\nWould it be better to add the API docu as md in tensorflow/g3doc/ , or just with GoDoc it would be enough? Having the docu on the MarkDown files could be better for the people without too much experience on Go, but having the docu on GoDocs is going to be updated in an easiest way and the Go developers are more used to read the documentation on GoDoc format. We can also keep it in both places, or just add a link from the MarkDown docu to GoDoc.\nIn order to get the definition for all the available operations I'm loading this info from tensorflow/core/ops/ops.pbtxt . The problem is that I'm doing this cp of the file from go gen. I think that this problem could be approached on three different ways:\n\n\n\nConverting ops.pbtxt into a .go file: converting the content into a constant string we don't need to move this file, this option will remove this dependency, but if the file changes it will requiere to regenerate the libs that shouldn't be too much problem, we could even generate Go code for each operation so we don't need to parse the file and it would improve the performance.\n\n\n\n\nUsing something like the TF_GetOpList function used by Python in order to retrieve this info from the C++ API. This would add more dependencies from the Go to the C++ API, that is not a mayor issue but will requiere to prepare a new method or modify the original since TF_GetOpList depends on the Python libs.\n\n\n\n\nAs I'm doing right now, just copying the file. At least for a first iteration this could be a good option since it makes more easy to work with the code.\n\n\n\n\nRegarding to the installation, I'm not sure if keep using \"go generate\" or Bazel, Go generate is more or less the standar for Go projects, but Bazel is what TensorFlow is using. I think that I'm going to change to Bazel so I can avoid things like bazel from Go but I'm not sure if this is the best approach.\n\nI would be really grateful if you could please take a look at the code and let me know your thoughts, what I'm missing, how can I improve it, etc.\nThanks!\nRelated ticket: #10", "body": "Hello,\nDuring the last weeks I have been working on this implementation of the Go API. **This is still a work in progress**, I'm doing this PR just to show what I'm working on and to get feedback.\n\nI forked from https://github.com/tmc/tensorflow/tree/go_bindings where the bindings was implemented by Travis Cline. This Go library allows to interact with the tensors in an easy way from Go being able to create, populate and retrieve the content from the tensors. This library also provides the API for Graph generation from Go, create sessions, run this graphs and so on. The goal is to achieve the same functionality provided by the C++ API.\n\nIn order to show how the API works, I updated the label_image example with an implementation using the [Go API](https://github.com/alonsovidales/tensorflow/tree/go_bindings_tensors/tensorflow/examples/label_image_go) and I also updated the [tutorial](https://github.com/alonsovidales/tensorflow/blob/go_bindings_tensors/tensorflow/g3doc/tutorials/image_recognition/index.md#usage-with-the-go-api)\n\nI'm trying to keep all the code covered with tests, I still have to cover some corner cases and functionality like the data type recognition for the graph, etc.\nBy the moment the supported Tensor data types are:\n- TF_FLOAT\n- TF_DOUBLE\n- TF_INT32\n- TF_UINT8\n- TF_UINT32\n- TF_INT16\n- TF_INT8\n- TF_STRING\n- TF_INT64\n- TF_BOOL\n  I'm planing to add support for TF_QINT\\* TF_BFLOAT16 and TF_COMPLEX soon.\n\nI have some doubts:\n- Would it be better to add the API docu as md in tensorflow/g3doc/ , or just with GoDoc it would be enough? Having the docu on the MarkDown files could be better for the people without too much experience on Go, but having the docu on GoDocs is going to be updated in an easiest way and the Go developers are more used to read the documentation on GoDoc format. We can also keep it in both places, or just add a link from the MarkDown docu to GoDoc.\n- In order to get the definition for all the available operations I'm loading this info from tensorflow/core/ops/ops.pbtxt . The problem is that I'm doing this [cp of the file from go gen](https://github.com/alonsovidales/tensorflow/blob/go_bindings_tensors/tensorflow/go/gen.go#L3). I think that this problem could be approached on three different ways:\n  - 1. Converting ops.pbtxt into a .go file: converting the content into a constant string we don't need to move this file, this option will remove this dependency, but if the file changes it will requiere to regenerate the libs that shouldn't be too much problem, we could even generate Go code for each operation so we don't need to parse the file and it would improve the performance.\n  - 2. Using something like the TF_GetOpList function used by Python in order to retrieve this info from the C++ API. This would add more dependencies from the Go to the C++ API, that is not a mayor issue but will requiere to prepare a new method or modify the original since TF_GetOpList depends on the Python libs.\n  - 3. As I'm doing right now, just copying the file. At least for a first iteration this could be a good option since it makes more easy to work with the code.\n- Regarding to the installation, I'm not sure if keep using \\\"go generate\\\" or Bazel, Go generate is more or less the standar for Go projects, but Bazel is what TensorFlow is using. I think that I'm going to change to Bazel so I can avoid things like [bazel from Go](https://github.com/alonsovidales/tensorflow/blob/go_bindings_tensors/tensorflow/go/gen.go#L1) but I'm not sure if this is the best approach.\n\nI would be really grateful if you could please take a look at the code and let me know your thoughts, what I'm missing, how can I improve it, etc.\n\nThanks!\n\nRelated ticket: #10 \n"}