{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/211451790", "html_url": "https://github.com/tensorflow/tensorflow/pull/1771#issuecomment-211451790", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1771", "id": 211451790, "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTQ1MTc5MA==", "user": {"login": "tmc", "id": 3977, "node_id": "MDQ6VXNlcjM5Nzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmc", "html_url": "https://github.com/tmc", "followers_url": "https://api.github.com/users/tmc/followers", "following_url": "https://api.github.com/users/tmc/following{/other_user}", "gists_url": "https://api.github.com/users/tmc/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmc/subscriptions", "organizations_url": "https://api.github.com/users/tmc/orgs", "repos_url": "https://api.github.com/users/tmc/repos", "events_url": "https://api.github.com/users/tmc/events{/privacy}", "received_events_url": "https://api.github.com/users/tmc/received_events", "type": "User", "site_admin": false}, "created_at": "2016-04-18T16:16:24Z", "updated_at": "2016-04-18T16:16:24Z", "author_association": "NONE", "body_html": "<p>I'm not convinced these named result parameters are helpful:</p>\n<div class=\"highlight highlight-source-go\"><pre>    <span class=\"pl-k\">func</span> <span class=\"pl-en\">NewGraphFromReader</span>(<span class=\"pl-v\">reader</span> <span class=\"pl-v\">io</span>.<span class=\"pl-v\">Reader</span>, <span class=\"pl-v\">asText</span> <span class=\"pl-v\">bool</span>) (<span class=\"pl-v\">gr</span> *<span class=\"pl-v\">Graph</span>, <span class=\"pl-v\">err</span> <span class=\"pl-v\">error</span>)\n    func (gr *Graph) Constant(name string, data interface{}) (op *GraphNode, err <span class=\"pl-k\">error</span>)\n    <span class=\"pl-k\">func</span> (<span class=\"pl-v\">gr</span> *<span class=\"pl-v\">Graph</span>) <span class=\"pl-v\">Op</span>(opName string, name string, input []*GraphNode, device string, attrs map[string]interface{}) (node *GraphNode, err <span class=\"pl-k\">error</span>)</pre></div>\n<p>vs</p>\n<div class=\"highlight highlight-source-go\"><pre>    <span class=\"pl-k\">func</span> <span class=\"pl-en\">NewGraphFromReader</span>(<span class=\"pl-v\">reader</span> <span class=\"pl-v\">io</span>.<span class=\"pl-v\">Reader</span>, <span class=\"pl-v\">asText</span> <span class=\"pl-v\">bool</span>) (*<span class=\"pl-v\">Graph</span>, <span class=\"pl-v\">error</span>)\n    func (gr *Graph) Constant(name string, data interface{}) (*GraphNode, <span class=\"pl-k\">error</span>)\n    <span class=\"pl-k\">func</span> (<span class=\"pl-v\">gr</span> *<span class=\"pl-v\">Graph</span>) <span class=\"pl-v\">Op</span>(opName string, name string, input []*GraphNode, device string, attrs map[string]interface{}) (*GraphNode, <span class=\"pl-k\">error</span>)</pre></div>", "body_text": "I'm not convinced these named result parameters are helpful:\n    func NewGraphFromReader(reader io.Reader, asText bool) (gr *Graph, err error)\n    func (gr *Graph) Constant(name string, data interface{}) (op *GraphNode, err error)\n    func (gr *Graph) Op(opName string, name string, input []*GraphNode, device string, attrs map[string]interface{}) (node *GraphNode, err error)\nvs\n    func NewGraphFromReader(reader io.Reader, asText bool) (*Graph, error)\n    func (gr *Graph) Constant(name string, data interface{}) (*GraphNode, error)\n    func (gr *Graph) Op(opName string, name string, input []*GraphNode, device string, attrs map[string]interface{}) (*GraphNode, error)", "body": "I'm not convinced these named result parameters are helpful:\n\n``` go\n    func NewGraphFromReader(reader io.Reader, asText bool) (gr *Graph, err error)\n    func (gr *Graph) Constant(name string, data interface{}) (op *GraphNode, err error)\n    func (gr *Graph) Op(opName string, name string, input []*GraphNode, device string, attrs map[string]interface{}) (node *GraphNode, err error)\n```\n\nvs\n\n``` go\n    func NewGraphFromReader(reader io.Reader, asText bool) (*Graph, error)\n    func (gr *Graph) Constant(name string, data interface{}) (*GraphNode, error)\n    func (gr *Graph) Op(opName string, name string, input []*GraphNode, device string, attrs map[string]interface{}) (*GraphNode, error)\n```\n"}