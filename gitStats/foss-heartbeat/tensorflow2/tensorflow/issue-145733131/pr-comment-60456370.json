{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/60456370", "pull_request_review_id": null, "id": 60456370, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDU2Mzcw", "diff_hunk": "@@ -0,0 +1,558 @@\n+package tensorflow\n+\n+import (\n+\t\"fmt\"\n+\t\"io\"\n+\t\"io/ioutil\"\n+\t\"strings\"\n+\n+\t\"github.com/golang/protobuf/proto\"\n+\n+\tpb \"github.com/tensorflow/tensorflow/tensorflow/contrib/go/proto\"\n+)\n+\n+const (\n+\tcOpsProtobufDefsPath = \"/usr/local/tensorlow/ops.pbtxt\"\n+)\n+\n+// A Graph is the representation of the computation graph.\n+type Graph struct {\n+\tdef *pb.GraphDef\n+\n+\tavailableOps map[string]*pb.OpDef\n+\tconstants    map[string]*Tensor\n+\tvariables    map[string]*Tensor\n+}\n+\n+// A GraphNode is the representation of one of the nodes of the TensorFlow\n+// Graph. A node takes zero or more Tensors, performs some computation, and\n+// produces zero or more Tensors.\n+type GraphNode struct {\n+\tref          *pb.NodeDef\n+\tdef          *pb.NodeDef\n+\toutDataTypes map[string]DataType\n+}\n+\n+// NewGraph returns an initialized instance of the Graph struct.\n+func NewGraph() *Graph {\n+\treturn &Graph{\n+\t\tdef:          new(pb.GraphDef),\n+\t\tavailableOps: make(map[string]*pb.OpDef),\n+\t\tconstants:    make(map[string]*Tensor),\n+\t\tvariables:    make(map[string]*Tensor),\n+\t}\n+}\n+\n+// NewGraphFromReader reads from reader until an error or EOF and loads the\n+// content into a new graph. Use the asText parameter to specify if the graph\n+// from the reader is provided in Text format.\n+func NewGraphFromReader(reader io.Reader, asText bool) (*Graph, error) {\n+\tgraphStr, err := ioutil.ReadAll(reader)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\n+\tgr := NewGraph()\n+\tif asText {\n+\t\terr = proto.UnmarshalText(string(graphStr), gr.def)\n+\t} else {\n+\t\terr = proto.Unmarshal(graphStr, gr.def)\n+\t}\n+\n+\treturn gr, err\n+}\n+\n+// Op adds a new Node to the Graph with the specified operation, this function", "path": "tensorflow/contrib/go/graph.go", "position": null, "original_position": 65, "commit_id": "942760424141d0f5a930982d5e78aaeb05869488", "original_commit_id": "8c4d16548d6b4414c8c3ccfcff41fde0f56f83c9", "user": {"login": "dave-andersen", "id": 827870, "node_id": "MDQ6VXNlcjgyNzg3MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/827870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dave-andersen", "html_url": "https://github.com/dave-andersen", "followers_url": "https://api.github.com/users/dave-andersen/followers", "following_url": "https://api.github.com/users/dave-andersen/following{/other_user}", "gists_url": "https://api.github.com/users/dave-andersen/gists{/gist_id}", "starred_url": "https://api.github.com/users/dave-andersen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dave-andersen/subscriptions", "organizations_url": "https://api.github.com/users/dave-andersen/orgs", "repos_url": "https://api.github.com/users/dave-andersen/repos", "events_url": "https://api.github.com/users/dave-andersen/events{/privacy}", "received_events_url": "https://api.github.com/users/dave-andersen/received_events", "type": "User", "site_admin": false}, "body": "specified operation.  This function\n...\ns/is not be present/is missing/\n", "created_at": "2016-04-20T17:53:56Z", "updated_at": "2016-05-05T08:12:14Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/1771#discussion_r60456370", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/1771", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/60456370"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/1771#discussion_r60456370"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/1771"}}, "body_html": "<p>specified operation.  This function<br>\n...<br>\ns/is not be present/is missing/</p>", "body_text": "specified operation.  This function\n...\ns/is not be present/is missing/"}