{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/59951192", "pull_request_review_id": null, "id": 59951192, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTUxMTky", "diff_hunk": "@@ -0,0 +1,570 @@\n+package tensorflow\n+\n+import (\n+\t\"bytes\"\n+\t\"fmt\"\n+\t\"io/ioutil\"\n+\t\"strings\"\n+\n+\t\"github.com/golang/protobuf/proto\"\n+\n+\tpb \"github.com/tensorflow/tensorflow/tensorflow/contrib/go/proto\"\n+)\n+\n+const (\n+\tcOpsProtobufDefsPath = \"/usr/local/tensorlow/ops.pbtxt\"\n+)\n+\n+// Graph Representation of the computation graph.\n+type Graph struct {\n+\tdef *pb.GraphDef\n+\n+\tavailableOps map[string]*pb.OpDef\n+\tconstants    map[string]*Tensor\n+\tvariables    map[string]*Tensor\n+}\n+\n+// GraphNode Representation of one of the nodes of the TensorFlow Graph.\n+// A node takes zero or more Tensors, performs some computation, and\n+// produces zero or more Tensors.\n+type GraphNode struct {\n+\tref          *pb.NodeDef\n+\tdef          *pb.NodeDef\n+\toutDataTypes map[string]DataType\n+}\n+\n+// NewGraph Returns an initialized instance of the Graph struct.\n+func NewGraph() *Graph {\n+\treturn &Graph{\n+\t\tdef:          new(pb.GraphDef),\n+\t\tavailableOps: make(map[string]*pb.OpDef),\n+\t\tconstants:    make(map[string]*Tensor),\n+\t\tvariables:    make(map[string]*Tensor),\n+\t}\n+}\n+\n+// NewGraphFromText Returns a new graph populated with the deserialization of\n+// the provided graph string.\n+func NewGraphFromText(graphStr string) (gr *Graph, err error) {\n+\tgr = NewGraph()\n+\terr = proto.UnmarshalText(graphStr, gr.def)\n+\n+\treturn\n+}\n+\n+// LoadGraphFromFile Loads a Graph from the file on the specified path.\n+func LoadGraphFromFile(path string) (gr *Graph, err error) {\n+\tgraphStr, err := ioutil.ReadFile(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\n+\tgr = NewGraph()\n+\terr = proto.Unmarshal(graphStr, gr.def)\n+\n+\treturn\n+}", "path": "tensorflow/contrib/go/graph.go", "position": null, "original_position": 66, "commit_id": "942760424141d0f5a930982d5e78aaeb05869488", "original_commit_id": "a6e723f10b171f649213ce400b75c63e72a8912d", "user": {"login": "alonsovidales", "id": 1468785, "node_id": "MDQ6VXNlcjE0Njg3ODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1468785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alonsovidales", "html_url": "https://github.com/alonsovidales", "followers_url": "https://api.github.com/users/alonsovidales/followers", "following_url": "https://api.github.com/users/alonsovidales/following{/other_user}", "gists_url": "https://api.github.com/users/alonsovidales/gists{/gist_id}", "starred_url": "https://api.github.com/users/alonsovidales/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alonsovidales/subscriptions", "organizations_url": "https://api.github.com/users/alonsovidales/orgs", "repos_url": "https://api.github.com/users/alonsovidales/repos", "events_url": "https://api.github.com/users/alonsovidales/events{/privacy}", "received_events_url": "https://api.github.com/users/alonsovidales/received_events", "type": "User", "site_admin": false}, "body": ":+1: that would be useful, I'm going to add it \n", "created_at": "2016-04-15T22:43:43Z", "updated_at": "2016-05-05T08:12:14Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/1771#discussion_r59951192", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/1771", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/59951192"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/1771#discussion_r59951192"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/1771"}}, "body_html": "<p><g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji> that would be useful, I'm going to add it</p>", "body_text": "\ud83d\udc4d that would be useful, I'm going to add it"}