{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8193", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8193/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8193/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8193/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8193", "id": 212696365, "node_id": "MDU6SXNzdWUyMTI2OTYzNjU=", "number": 8193, "title": "malfunction of tf.device() on Windows", "user": {"login": "YOUNGING", "id": 12063725, "node_id": "MDQ6VXNlcjEyMDYzNzI1", "avatar_url": "https://avatars2.githubusercontent.com/u/12063725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YOUNGING", "html_url": "https://github.com/YOUNGING", "followers_url": "https://api.github.com/users/YOUNGING/followers", "following_url": "https://api.github.com/users/YOUNGING/following{/other_user}", "gists_url": "https://api.github.com/users/YOUNGING/gists{/gist_id}", "starred_url": "https://api.github.com/users/YOUNGING/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YOUNGING/subscriptions", "organizations_url": "https://api.github.com/users/YOUNGING/orgs", "repos_url": "https://api.github.com/users/YOUNGING/repos", "events_url": "https://api.github.com/users/YOUNGING/events{/privacy}", "received_events_url": "https://api.github.com/users/YOUNGING/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-08T10:31:46Z", "updated_at": "2017-03-08T17:32:35Z", "closed_at": "2017-03-08T17:32:35Z", "author_association": "NONE", "body_html": "<p>tf.device('/gpu:0') fail to run the model on only gpu0, other gpus will be occupied as well. As a result, all the memory of all gpu cards on my server are filled. By setting 'config.gpu_options.visible_device_list = \"0\"', the model will run on gpu0 only.</p>\n<p>BTW, only the memory of other gpus are filled, no actual computation is performed on them, all the computation is performed on gpu0.</p>\n<p>Anyone who can tell me what's going on is sincerely appreciated.</p>\n<h3>Environment info</h3>\n<p>Operating System: Windows Server 2012 R2<br>\nCUDA: 8.0<br>\nNO cuDNN</p>\n<ol>\n<li>A link to the pip package you installed:<br>\nusing 'pip install tensorflow-gpu' to install</li>\n<li>The output from <code>python -c \"import tensorflow; print(tensorflow.__version__)\"</code>.<br>\n1.0.1</li>\n</ol>\n<h3>What other attempted solutions have you tried?</h3>\n<p>config = tf.ConfigProto()<br>\nconfig.gpu_options.visible_device_list = '0'</p>\n<p>using 'config' to open a session, the graph will only run on '/gpu:0';</p>", "body_text": "tf.device('/gpu:0') fail to run the model on only gpu0, other gpus will be occupied as well. As a result, all the memory of all gpu cards on my server are filled. By setting 'config.gpu_options.visible_device_list = \"0\"', the model will run on gpu0 only.\nBTW, only the memory of other gpus are filled, no actual computation is performed on them, all the computation is performed on gpu0.\nAnyone who can tell me what's going on is sincerely appreciated.\nEnvironment info\nOperating System: Windows Server 2012 R2\nCUDA: 8.0\nNO cuDNN\n\nA link to the pip package you installed:\nusing 'pip install tensorflow-gpu' to install\nThe output from python -c \"import tensorflow; print(tensorflow.__version__)\".\n1.0.1\n\nWhat other attempted solutions have you tried?\nconfig = tf.ConfigProto()\nconfig.gpu_options.visible_device_list = '0'\nusing 'config' to open a session, the graph will only run on '/gpu:0';", "body": "tf.device('/gpu:0') fail to run the model on only gpu0, other gpus will be occupied as well. As a result, all the memory of all gpu cards on my server are filled. By setting 'config.gpu_options.visible_device_list = \"0\"', the model will run on gpu0 only.\r\n\r\nBTW, only the memory of other gpus are filled, no actual computation is performed on them, all the computation is performed on gpu0.\r\n\r\nAnyone who can tell me what's going on is sincerely appreciated.\r\n\r\n\r\n### Environment info\r\nOperating System: Windows Server 2012 R2\r\nCUDA: 8.0\r\nNO cuDNN\r\n\r\n1. A link to the pip package you installed:\r\nusing 'pip install tensorflow-gpu' to install\r\n2. The output from `python -c \"import tensorflow; print(tensorflow.__version__)\"`.\r\n1.0.1\r\n\r\n### What other attempted solutions have you tried?\r\nconfig = tf.ConfigProto()\r\nconfig.gpu_options.visible_device_list = '0'\r\n\r\nusing 'config' to open a session, the graph will only run on '/gpu:0';"}