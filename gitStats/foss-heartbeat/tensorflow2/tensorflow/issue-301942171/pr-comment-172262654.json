{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/172262654", "pull_request_review_id": 100958331, "id": 172262654, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MjI2MjY1NA==", "diff_hunk": "@@ -38,14 +41,21 @@ TRTEngineOp::TRTEngineOp(OpKernelConstruction* context) : OpKernel(context) {\n   OP_REQUIRES_OK(context, context->GetAttr(\"output_nodes\", &output_nodes_));\n \n   // TODO(samikama) runtime should be taken from a resourcemanager as well.\n-  // Only engine should be in the op and context and runtime should be taken\n-  // from resourcemanager\n-  nvinfer1::IRuntime* infer = nvinfer1::createInferRuntime(logger);\n+  //  Only engine should be in the op and context and runtime should be taken\n+  //  from resourcemanager\n+\n+  // TODO(jie): cudaSetDevice make sure trt engine is allocated on the same\n+  //  gpu where the input/output is also located.\n+  int gpu_id = context->device()->tensorflow_gpu_device_info()->gpu_id;\n+  cudaSetDevice(gpu_id);\n+  int device;\n+  cudaGetDevice(&device);\n+  if (gpu_id != device) LOG(FATAL) << \"set device failed!\";\n+\n+  IRuntime* infer = nvinfer1::createInferRuntime(gLogger);\n   trt_engine_ptr_.reset(infer->deserializeCudaEngine(\n       serialized_engine.c_str(), serialized_engine.size(), nullptr));\n-\n   trt_execution_context_ptr_.reset(trt_engine_ptr_->createExecutionContext());\n-  // Runtime is safe to delete after engine creation", "path": "tensorflow/contrib/tensorrt/kernels/trt_engine_op.cc", "position": null, "original_position": 36, "commit_id": "5dac9182ddec67a98199129e09bd2980b0077e65", "original_commit_id": "32d44ae7ded94a435559cdd4c7e224ea07e7c03f", "user": {"login": "aaroey", "id": 31743510, "node_id": "MDQ6VXNlcjMxNzQzNTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/31743510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaroey", "html_url": "https://github.com/aaroey", "followers_url": "https://api.github.com/users/aaroey/followers", "following_url": "https://api.github.com/users/aaroey/following{/other_user}", "gists_url": "https://api.github.com/users/aaroey/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaroey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaroey/subscriptions", "organizations_url": "https://api.github.com/users/aaroey/orgs", "repos_url": "https://api.github.com/users/aaroey/repos", "events_url": "https://api.github.com/users/aaroey/events{/privacy}", "received_events_url": "https://api.github.com/users/aaroey/received_events", "type": "User", "site_admin": false}, "body": "Add back this comment?", "created_at": "2018-03-05T17:18:33Z", "updated_at": "2018-03-06T23:33:29Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/17391#discussion_r172262654", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/17391", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/172262654"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/17391#discussion_r172262654"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/17391"}}, "body_html": "<p>Add back this comment?</p>", "body_text": "Add back this comment?"}