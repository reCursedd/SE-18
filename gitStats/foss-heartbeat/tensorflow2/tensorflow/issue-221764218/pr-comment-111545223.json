{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/111545223", "pull_request_review_id": 32799377, "id": 111545223, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMTU0NTIyMw==", "diff_hunk": "@@ -183,12 +190,12 @@ sh_binary(\n     srcs = [\"include/jemalloc/internal/size_classes.sh\"],\n )\n \n-# Size classes for Linux x86_64. Update if adding builds for other\n+# Size classes for Linux x86_64 and ppc64le. Update if adding builds for other\n # architectures. See size_classes.sh for details on the arguments.\n genrule(\n     name = \"size_classes_h\",\n     outs = [\"include/jemalloc/internal/size_classes.h\"],\n-    cmd = \"$(location :size_classes_sh) \\\"3 4\\\" 3 12 2 >$@\",\n+    cmd = \"if [ $$(uname -p) = ppc64le ]; then $(location :size_classes_sh) \\\"3 4\\\" 3 16 2 >$@; else $(location :size_classes_sh) \\\"3 4\\\" 3 12 2 >$@; fi\",", "path": "third_party/jemalloc.BUILD", "position": null, "original_position": 25, "commit_id": "3ca0bffda0a54b00d78fa6b97907ff57af3f5abc", "original_commit_id": "f87795ada24e80ac831ed9499e7af98f002058ce", "user": {"login": "npanpaliya", "id": 14196089, "node_id": "MDQ6VXNlcjE0MTk2MDg5", "avatar_url": "https://avatars3.githubusercontent.com/u/14196089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/npanpaliya", "html_url": "https://github.com/npanpaliya", "followers_url": "https://api.github.com/users/npanpaliya/followers", "following_url": "https://api.github.com/users/npanpaliya/following{/other_user}", "gists_url": "https://api.github.com/users/npanpaliya/gists{/gist_id}", "starred_url": "https://api.github.com/users/npanpaliya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/npanpaliya/subscriptions", "organizations_url": "https://api.github.com/users/npanpaliya/orgs", "repos_url": "https://api.github.com/users/npanpaliya/repos", "events_url": "https://api.github.com/users/npanpaliya/events{/privacy}", "received_events_url": "https://api.github.com/users/npanpaliya/received_events", "type": "User", "site_admin": false}, "body": "I tried avoiding uname here as it won't work on windows. Tried to use $(TARGET_CPU) which gives correct value on command line \"ppc\" but not when this file is executed. That time, it takes \"local\" as the cpu value defined in crosstool.tpl file. I'll update this code if anyone has any better suggestions other than using uname to detect architecture.", "created_at": "2017-04-14T08:19:49Z", "updated_at": "2017-04-17T17:58:23Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/9214#discussion_r111545223", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9214", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/111545223"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/9214#discussion_r111545223"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9214"}}, "body_html": "<p>I tried avoiding uname here as it won't work on windows. Tried to use $(TARGET_CPU) which gives correct value on command line \"ppc\" but not when this file is executed. That time, it takes \"local\" as the cpu value defined in crosstool.tpl file. I'll update this code if anyone has any better suggestions other than using uname to detect architecture.</p>", "body_text": "I tried avoiding uname here as it won't work on windows. Tried to use $(TARGET_CPU) which gives correct value on command line \"ppc\" but not when this file is executed. That time, it takes \"local\" as the cpu value defined in crosstool.tpl file. I'll update this code if anyone has any better suggestions other than using uname to detect architecture."}