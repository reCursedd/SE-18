{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/105047114", "pull_request_review_id": 25906501, "id": 105047114, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNTA0NzExNA==", "diff_hunk": "@@ -0,0 +1,107 @@\n+\"\"\"\n+create-datafiles.py - tool to create a windows def file to export\n+  symbols from tensorflow.dll to enable tf.load_library().\n+  Because the linker allows only 64K sumbols to be exported per dll\n+  we filter the symbols down to the essentials. The regular expressions\n+  we use for this are specific to tensorflow.\n+\n+  TODO: this seems to work fine but there is an issue with exporting\n+  'const char * const' and importing it from a user_ops. The problem is\n+   on the importing end and using __declspec(dllimport) works around it.\n+\"\"\"\n+import argparse\n+import io\n+import os\n+import re\n+import sys\n+import tempfile\n+from subprocess import Popen, PIPE\n+\n+# external tools we use that come with visual studio sdk\n+# we assume that the caller has the correct PATH to the sdk\n+UNDNAME = \"undname.exe\"\n+DUMPBIN = \"dumpbin.exe\"\n+\n+# exclude if matched\n+EXCLUDE_RE = re.compile(r\"deleting destructor|::internal::\")\n+\n+# include if matched before exclude\n+INCLUDEPRE_RE = re.compile(r\"tensorflow::internal::LogMessage|\" +\n+                           r\"tensorflow::internal::CheckOpMessageBuilder\")\n+\n+# include if matched after exclude\n+INCLUDE_RE = re.compile(r\"^(TF_\\w*)$|\" +\n+                        r\"tensorflow::|\" +\n+                        r\"functor::|\" +\n+                        r\"perftools::gputools\")\n+\n+\n+def get_args():\n+    \"\"\"Parse command line.\"\"\"\n+    parser = argparse.ArgumentParser()\n+    parser.add_argument(\"--input\", help=\"input library\", required=True)\n+    parser.add_argument(\"--output\", help=\"output deffile\", required=True)\n+    args = parser.parse_args()\n+    return args\n+\n+\n+def main():\n+    \"\"\"main.\"\"\"\n+    args = get_args()\n+\n+    # Pipe dumpbin to extract all linkable symbols from a lib.\n+    # Good symbols are collected in candidates and also written to\n+    # a temp file.\n+    candidates = []\n+    tmpfile = tempfile.NamedTemporaryFile(mode=\"w\", delete=False)\n+    proc = Popen([DUMPBIN, \"/nologo\", \"/linkermember:1\", args.input], stdout=PIPE)\n+    for line in io.TextIOWrapper(proc.stdout, encoding=\"utf-8\"):\n+        cols = line.split()\n+        if len(cols) < 2:\n+            continue\n+        sym = cols[1]\n+        tmpfile.file.write(sym + \"\\n\")\n+        candidates.append(sym)\n+    tmpfile.file.close()\n+    proc.wait()", "path": "tensorflow/contrib/cmake/tools/create_deffile.py", "position": null, "original_position": 66, "commit_id": "166bdf1cd00f06c9f3e6ec0aff756e6bb7d4d841", "original_commit_id": "95209770f0ddaab69e4701ca2cde86204b6d5d87", "user": {"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}, "body": "Check return code?", "created_at": "2017-03-08T22:59:41Z", "updated_at": "2017-03-10T01:12:40Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/8217#discussion_r105047114", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/8217", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/105047114"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/8217#discussion_r105047114"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/8217"}}, "body_html": "<p>Check return code?</p>", "body_text": "Check return code?"}