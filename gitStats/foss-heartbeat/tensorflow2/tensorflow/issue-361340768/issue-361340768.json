{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22347", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22347/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22347/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22347/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22347", "id": 361340768, "node_id": "MDU6SXNzdWUzNjEzNDA3Njg=", "number": 22347, "title": "Bug in tf.import_graph_def for Graph Editor", "user": {"login": "jrbtaylor", "id": 15191858, "node_id": "MDQ6VXNlcjE1MTkxODU4", "avatar_url": "https://avatars3.githubusercontent.com/u/15191858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrbtaylor", "html_url": "https://github.com/jrbtaylor", "followers_url": "https://api.github.com/users/jrbtaylor/followers", "following_url": "https://api.github.com/users/jrbtaylor/following{/other_user}", "gists_url": "https://api.github.com/users/jrbtaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrbtaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrbtaylor/subscriptions", "organizations_url": "https://api.github.com/users/jrbtaylor/orgs", "repos_url": "https://api.github.com/users/jrbtaylor/repos", "events_url": "https://api.github.com/users/jrbtaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/jrbtaylor/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "purpledog", "id": 724322, "node_id": "MDQ6VXNlcjcyNDMyMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/724322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/purpledog", "html_url": "https://github.com/purpledog", "followers_url": "https://api.github.com/users/purpledog/followers", "following_url": "https://api.github.com/users/purpledog/following{/other_user}", "gists_url": "https://api.github.com/users/purpledog/gists{/gist_id}", "starred_url": "https://api.github.com/users/purpledog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/purpledog/subscriptions", "organizations_url": "https://api.github.com/users/purpledog/orgs", "repos_url": "https://api.github.com/users/purpledog/repos", "events_url": "https://api.github.com/users/purpledog/events{/privacy}", "received_events_url": "https://api.github.com/users/purpledog/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "purpledog", "id": 724322, "node_id": "MDQ6VXNlcjcyNDMyMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/724322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/purpledog", "html_url": "https://github.com/purpledog", "followers_url": "https://api.github.com/users/purpledog/followers", "following_url": "https://api.github.com/users/purpledog/following{/other_user}", "gists_url": "https://api.github.com/users/purpledog/gists{/gist_id}", "starred_url": "https://api.github.com/users/purpledog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/purpledog/subscriptions", "organizations_url": "https://api.github.com/users/purpledog/orgs", "repos_url": "https://api.github.com/users/purpledog/repos", "events_url": "https://api.github.com/users/purpledog/events{/privacy}", "received_events_url": "https://api.github.com/users/purpledog/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-09-18T14:44:28Z", "updated_at": "2018-09-24T16:04:28Z", "closed_at": "2018-09-19T15:02:52Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: see example below</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Ubuntu 16.04</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: N/A</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.8</li>\n<li><strong>Python version</strong>: 3.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: 9.0</li>\n<li><strong>GPU model and memory</strong>: Titan X</li>\n<li><strong>Exact command to reproduce</strong>: see example below</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I'm trying to export and then later import a subset of my graph after using the graph editor for network pruning (such that I get only the pruned network left at the end). I've written two toy examples to illustrate the problem as simply as possible: example 1 (below) works, I can define two subgraphs that share only their input, grab the graphdef for one, clear the graph and restore only the subgraph I want; example 2 (below) tries to do the same thing but uses the graph editor to replace the weights (as in the pruning case) and grab the new subgraph.</p>\n<h3>Source code / logs</h3>\n<p><strong>Example 1:</strong></p>\n<pre><code>import tensorflow as tf\n\nx = tf.placeholder(tf.float32, [], 'x')\nw = tf.Variable([3.], dtype=tf.float32, name='w')\ny = tf.multiply(x, w, name='y')\n\nw_1 = tf.Variable([1.], dtype=tf.float32, name='w_1')\ny_1 = tf.multiply(x, w_1, name='y_1')\n\nsubgraph = tf.graph_util.extract_sub_graph(tf.get_default_graph().as_graph_def(), [y_1.op.name])\nprint(type(subgraph))\ntf.reset_default_graph()\n_ = tf.import_graph_def(subgraph)\n\nprint(tf.contrib.graph_editor.get_tensors(tf.get_default_graph()))\n</code></pre>\n<p>this prints, as expected:</p>\n<blockquote>\n<p>&lt;class 'tensorflow.core.framework.graph_pb2.GraphDef'&gt;<br>\n[&lt;tf.Tensor 'import/w_1:0' shape=(1,) dtype=float32_ref&gt;, &lt;tf.Tensor 'import/w_1/read:0' shape=(1,) dtype=float32&gt;, &lt;tf.Tensor 'import/x_1:0' shape=() dtype=float32&gt;, &lt;tf.Tensor 'import/y_1:0' shape=(1,) dtype=float32&gt;]</p>\n</blockquote>\n<p><strong>Example 2:</strong></p>\n<pre><code>import tensorflow as tf\n\nx = tf.placeholder(tf.float32, [], 'x')\nw = tf.Variable([3.], dtype=tf.float32, name='w')\ny = tf.multiply(x, w, 'y')\n\nw_1 = tf.Variable([2.], dtype=tf.float32, name='w_1')\ny_1 = tf.contrib.graph_editor.graph_replace(y, {w.op.outputs[0]: w_1.op.outputs[0]})\n\nsubgraph = tf.graph_util.extract_sub_graph(tf.get_default_graph().as_graph_def(), [y_1.op.name])\nprint(type(subgraph))\ntf.reset_default_graph()\n_ = tf.import_graph_def(subgraph)\n\nprint(tf.contrib.graph_editor.get_tensors(tf.get_default_graph()))\n</code></pre>\n<p>Edit: fixed typo in example 2, error is now:</p>\n<blockquote>\n<p>ValueError: Node 'w/read_1' expects to be colocated with unknown node 'w'</p>\n</blockquote>\n<p>The notable difference in the subgraph graphdefs is the line <code>s: \"loc:@w\"</code> under node <code>w/read_1</code>, which indicates the root cause is likely in the graph editor (considering that's the only difference between the two examples). Tagging <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=724322\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/purpledog\">@purpledog</a> for input on the graph editor setting the attribute of that node.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): see example below\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): 1.8\nPython version: 3.6\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: 9.0\nGPU model and memory: Titan X\nExact command to reproduce: see example below\n\nDescribe the problem\nI'm trying to export and then later import a subset of my graph after using the graph editor for network pruning (such that I get only the pruned network left at the end). I've written two toy examples to illustrate the problem as simply as possible: example 1 (below) works, I can define two subgraphs that share only their input, grab the graphdef for one, clear the graph and restore only the subgraph I want; example 2 (below) tries to do the same thing but uses the graph editor to replace the weights (as in the pruning case) and grab the new subgraph.\nSource code / logs\nExample 1:\nimport tensorflow as tf\n\nx = tf.placeholder(tf.float32, [], 'x')\nw = tf.Variable([3.], dtype=tf.float32, name='w')\ny = tf.multiply(x, w, name='y')\n\nw_1 = tf.Variable([1.], dtype=tf.float32, name='w_1')\ny_1 = tf.multiply(x, w_1, name='y_1')\n\nsubgraph = tf.graph_util.extract_sub_graph(tf.get_default_graph().as_graph_def(), [y_1.op.name])\nprint(type(subgraph))\ntf.reset_default_graph()\n_ = tf.import_graph_def(subgraph)\n\nprint(tf.contrib.graph_editor.get_tensors(tf.get_default_graph()))\n\nthis prints, as expected:\n\n<class 'tensorflow.core.framework.graph_pb2.GraphDef'>\n[<tf.Tensor 'import/w_1:0' shape=(1,) dtype=float32_ref>, <tf.Tensor 'import/w_1/read:0' shape=(1,) dtype=float32>, <tf.Tensor 'import/x_1:0' shape=() dtype=float32>, <tf.Tensor 'import/y_1:0' shape=(1,) dtype=float32>]\n\nExample 2:\nimport tensorflow as tf\n\nx = tf.placeholder(tf.float32, [], 'x')\nw = tf.Variable([3.], dtype=tf.float32, name='w')\ny = tf.multiply(x, w, 'y')\n\nw_1 = tf.Variable([2.], dtype=tf.float32, name='w_1')\ny_1 = tf.contrib.graph_editor.graph_replace(y, {w.op.outputs[0]: w_1.op.outputs[0]})\n\nsubgraph = tf.graph_util.extract_sub_graph(tf.get_default_graph().as_graph_def(), [y_1.op.name])\nprint(type(subgraph))\ntf.reset_default_graph()\n_ = tf.import_graph_def(subgraph)\n\nprint(tf.contrib.graph_editor.get_tensors(tf.get_default_graph()))\n\nEdit: fixed typo in example 2, error is now:\n\nValueError: Node 'w/read_1' expects to be colocated with unknown node 'w'\n\nThe notable difference in the subgraph graphdefs is the line s: \"loc:@w\" under node w/read_1, which indicates the root cause is likely in the graph editor (considering that's the only difference between the two examples). Tagging @purpledog for input on the graph editor setting the attribute of that node.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: see example below\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: N/A\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.8\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: 9.0\r\n- **GPU model and memory**: Titan X\r\n- **Exact command to reproduce**: see example below\r\n\r\n### Describe the problem\r\nI'm trying to export and then later import a subset of my graph after using the graph editor for network pruning (such that I get only the pruned network left at the end). I've written two toy examples to illustrate the problem as simply as possible: example 1 (below) works, I can define two subgraphs that share only their input, grab the graphdef for one, clear the graph and restore only the subgraph I want; example 2 (below) tries to do the same thing but uses the graph editor to replace the weights (as in the pruning case) and grab the new subgraph.\r\n\r\n### Source code / logs\r\n**Example 1:**\r\n```\r\nimport tensorflow as tf\r\n\r\nx = tf.placeholder(tf.float32, [], 'x')\r\nw = tf.Variable([3.], dtype=tf.float32, name='w')\r\ny = tf.multiply(x, w, name='y')\r\n\r\nw_1 = tf.Variable([1.], dtype=tf.float32, name='w_1')\r\ny_1 = tf.multiply(x, w_1, name='y_1')\r\n\r\nsubgraph = tf.graph_util.extract_sub_graph(tf.get_default_graph().as_graph_def(), [y_1.op.name])\r\nprint(type(subgraph))\r\ntf.reset_default_graph()\r\n_ = tf.import_graph_def(subgraph)\r\n\r\nprint(tf.contrib.graph_editor.get_tensors(tf.get_default_graph()))\r\n```\r\nthis prints, as expected:\r\n> <class 'tensorflow.core.framework.graph_pb2.GraphDef'>\r\n> [<tf.Tensor 'import/w_1:0' shape=(1,) dtype=float32_ref>, <tf.Tensor 'import/w_1/read:0' shape=(1,) dtype=float32>, <tf.Tensor 'import/x_1:0' shape=() dtype=float32>, <tf.Tensor 'import/y_1:0' shape=(1,) dtype=float32>]\r\n\r\n**Example 2:**\r\n```\r\nimport tensorflow as tf\r\n\r\nx = tf.placeholder(tf.float32, [], 'x')\r\nw = tf.Variable([3.], dtype=tf.float32, name='w')\r\ny = tf.multiply(x, w, 'y')\r\n\r\nw_1 = tf.Variable([2.], dtype=tf.float32, name='w_1')\r\ny_1 = tf.contrib.graph_editor.graph_replace(y, {w.op.outputs[0]: w_1.op.outputs[0]})\r\n\r\nsubgraph = tf.graph_util.extract_sub_graph(tf.get_default_graph().as_graph_def(), [y_1.op.name])\r\nprint(type(subgraph))\r\ntf.reset_default_graph()\r\n_ = tf.import_graph_def(subgraph)\r\n\r\nprint(tf.contrib.graph_editor.get_tensors(tf.get_default_graph()))\r\n```\r\nEdit: fixed typo in example 2, error is now:\r\n\r\n> ValueError: Node 'w/read_1' expects to be colocated with unknown node 'w'\r\n\r\nThe notable difference in the subgraph graphdefs is the line `s: \"loc:@w\"` under node `w/read_1`, which indicates the root cause is likely in the graph editor (considering that's the only difference between the two examples). Tagging @purpledog for input on the graph editor setting the attribute of that node."}