{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/354942090", "html_url": "https://github.com/tensorflow/tensorflow/issues/12701#issuecomment-354942090", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12701", "id": 354942090, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDk0MjA5MA==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-03T05:57:33Z", "updated_at": "2018-01-03T05:57:33Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Catching up on old issues: I agree that it would be useful to log more information on an error, without crashing the pipeline. I'm marking this as \"contributions welcome\" in the hope that somebody has ideas in this space.</p>\n<p>A couple of notes:</p>\n<ul>\n<li>We now have room for unsupported <code>Dataset</code> transformations using <code>Dataset.apply()</code> and custom transformation functions in the <code>tf.contrib.data</code> module\u2014indeed, the <code>tf.contrib.data.Dataset.ignore_errors()</code> method has been deprecated in favor of <code>tf.contrib.data.ignore_errors()</code>\u2014so it would be easier to experiment with different APIs, if somebody wants to contribute one.</li>\n<li>Similarly, there is some experimental code for aggregating metadata in <a href=\"https://github.com/tensorflow/tensorflow/blob/136697ecdc64b5171522fb7f89cfe51a02f0f1c1/tensorflow/contrib/data/python/ops/stats_ops.py\"><code>tensorflow/contrib/data/python/ops/stats_ops.py</code></a> and it might be appropriate to log error information there.</li>\n</ul>", "body_text": "Catching up on old issues: I agree that it would be useful to log more information on an error, without crashing the pipeline. I'm marking this as \"contributions welcome\" in the hope that somebody has ideas in this space.\nA couple of notes:\n\nWe now have room for unsupported Dataset transformations using Dataset.apply() and custom transformation functions in the tf.contrib.data module\u2014indeed, the tf.contrib.data.Dataset.ignore_errors() method has been deprecated in favor of tf.contrib.data.ignore_errors()\u2014so it would be easier to experiment with different APIs, if somebody wants to contribute one.\nSimilarly, there is some experimental code for aggregating metadata in tensorflow/contrib/data/python/ops/stats_ops.py and it might be appropriate to log error information there.", "body": "Catching up on old issues: I agree that it would be useful to log more information on an error, without crashing the pipeline. I'm marking this as \"contributions welcome\" in the hope that somebody has ideas in this space.\r\n\r\nA couple of notes: \r\n\r\n* We now have room for unsupported `Dataset` transformations using `Dataset.apply()` and custom transformation functions in the `tf.contrib.data` module\u2014indeed, the `tf.contrib.data.Dataset.ignore_errors()` method has been deprecated in favor of `tf.contrib.data.ignore_errors()`\u2014so it would be easier to experiment with different APIs, if somebody wants to contribute one.\r\n* Similarly, there is some experimental code for aggregating metadata in [`tensorflow/contrib/data/python/ops/stats_ops.py`](https://github.com/tensorflow/tensorflow/blob/136697ecdc64b5171522fb7f89cfe51a02f0f1c1/tensorflow/contrib/data/python/ops/stats_ops.py) and it might be appropriate to log error information there."}