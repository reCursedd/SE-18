{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/363126160", "html_url": "https://github.com/tensorflow/tensorflow/issues/15122#issuecomment-363126160", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15122", "id": 363126160, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzEyNjE2MA==", "user": {"login": "andrehentz", "id": 25754898, "node_id": "MDQ6VXNlcjI1NzU0ODk4", "avatar_url": "https://avatars3.githubusercontent.com/u/25754898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrehentz", "html_url": "https://github.com/andrehentz", "followers_url": "https://api.github.com/users/andrehentz/followers", "following_url": "https://api.github.com/users/andrehentz/following{/other_user}", "gists_url": "https://api.github.com/users/andrehentz/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrehentz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrehentz/subscriptions", "organizations_url": "https://api.github.com/users/andrehentz/orgs", "repos_url": "https://api.github.com/users/andrehentz/repos", "events_url": "https://api.github.com/users/andrehentz/events{/privacy}", "received_events_url": "https://api.github.com/users/andrehentz/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-05T15:51:14Z", "updated_at": "2018-02-05T15:51:49Z", "author_association": "CONTRIBUTOR", "body_html": "<p>While full quantized training is still in the works, retraining an existing quantized mobilenet (currently only  mobilenet_1.0_224_quantized) should work. You can follow the step in <a href=\"https://codelabs.developers.google.com/codelabs/tensorflow-for-poets/\" rel=\"nofollow\">TensorFlow for Poets</a> which I reproduce (slightly modified) here:</p>\n<pre><code>ARCHITECTURE=mobilenet_1.0_224_quantized                                                           \nDATA_DIR=~/tensorflow-for-poets-2/tf_files                                                         \nTRAINING_DIR=/tmp/tf_files                                                                         \n                                                                                                   \npython tensorflow/tensorflow/examples/image_retraining/retrain.py \\                                \n  --bottleneck_dir=$TRAINING_DIR/bottlenecks \\                                                     \n  --how_many_training_steps=500 \\                                                                  \n  --model_dir=$TRAINING_DIR/models \\                                                               \n  --summaries_dir=$TRAINING_DIR/training_summaries/\"${ARCHITECTURE}\" \\                             \n  --output_graph=$TRAINING_DIR/retrained_graph.pb \\                                                \n  --output_labels=$TRAINING_DIR/retrained_labels.txt \\                                             \n  --architecture=\"${ARCHITECTURE}\" \\                                                               \n  --image_dir=$DATA_DIR/flower_photos  \n\nrm -f /$TRAINING_DIR/${ARCHITECTURE}.tflite                              \n                        \ntensorflow/bazel-bin/tensorflow/contrib/lite/toco/toco \\                                           \n  --input_file=$TRAINING_DIR/retrained_graph.pb \\                                                  \n  --input_format=TENSORFLOW_GRAPHDEF \\                                                             \n  --output_format=TFLITE \\                                                                         \n  --output_file=/$TRAINING_DIR/${ARCHITECTURE}.tflite \\                                            \n  --inference_type=QUANTIZED_UINT8 \\                                                               \n  --input_array=Placeholder \\                                                                      \n  --output_array=final_result \\                                                                    \n  --input_shape=1,224,224,3 \\                                                                      \n  --mean_value=128 \\                                                                               \n  --std_value=128                                                                                  \n</code></pre>\n<p>That should create two files:</p>\n<pre><code>/tmp/tf_files/mobilenet_1.0_224_quantized.tflite\n/tmp/tf_files/retrained_labels.txt\n</code></pre>\n<p>which you can use in the original demo app.</p>\n<p>For floating-point inference the link given by <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=10347096\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ecrasy\">@ecrasy</a> should work.</p>", "body_text": "While full quantized training is still in the works, retraining an existing quantized mobilenet (currently only  mobilenet_1.0_224_quantized) should work. You can follow the step in TensorFlow for Poets which I reproduce (slightly modified) here:\nARCHITECTURE=mobilenet_1.0_224_quantized                                                           \nDATA_DIR=~/tensorflow-for-poets-2/tf_files                                                         \nTRAINING_DIR=/tmp/tf_files                                                                         \n                                                                                                   \npython tensorflow/tensorflow/examples/image_retraining/retrain.py \\                                \n  --bottleneck_dir=$TRAINING_DIR/bottlenecks \\                                                     \n  --how_many_training_steps=500 \\                                                                  \n  --model_dir=$TRAINING_DIR/models \\                                                               \n  --summaries_dir=$TRAINING_DIR/training_summaries/\"${ARCHITECTURE}\" \\                             \n  --output_graph=$TRAINING_DIR/retrained_graph.pb \\                                                \n  --output_labels=$TRAINING_DIR/retrained_labels.txt \\                                             \n  --architecture=\"${ARCHITECTURE}\" \\                                                               \n  --image_dir=$DATA_DIR/flower_photos  \n\nrm -f /$TRAINING_DIR/${ARCHITECTURE}.tflite                              \n                        \ntensorflow/bazel-bin/tensorflow/contrib/lite/toco/toco \\                                           \n  --input_file=$TRAINING_DIR/retrained_graph.pb \\                                                  \n  --input_format=TENSORFLOW_GRAPHDEF \\                                                             \n  --output_format=TFLITE \\                                                                         \n  --output_file=/$TRAINING_DIR/${ARCHITECTURE}.tflite \\                                            \n  --inference_type=QUANTIZED_UINT8 \\                                                               \n  --input_array=Placeholder \\                                                                      \n  --output_array=final_result \\                                                                    \n  --input_shape=1,224,224,3 \\                                                                      \n  --mean_value=128 \\                                                                               \n  --std_value=128                                                                                  \n\nThat should create two files:\n/tmp/tf_files/mobilenet_1.0_224_quantized.tflite\n/tmp/tf_files/retrained_labels.txt\n\nwhich you can use in the original demo app.\nFor floating-point inference the link given by @ecrasy should work.", "body": "While full quantized training is still in the works, retraining an existing quantized mobilenet (currently only  mobilenet_1.0_224_quantized) should work. You can follow the step in [TensorFlow for Poets](https://codelabs.developers.google.com/codelabs/tensorflow-for-poets/) which I reproduce (slightly modified) here:\r\n\r\n```\r\nARCHITECTURE=mobilenet_1.0_224_quantized                                                           \r\nDATA_DIR=~/tensorflow-for-poets-2/tf_files                                                         \r\nTRAINING_DIR=/tmp/tf_files                                                                         \r\n                                                                                                   \r\npython tensorflow/tensorflow/examples/image_retraining/retrain.py \\                                \r\n  --bottleneck_dir=$TRAINING_DIR/bottlenecks \\                                                     \r\n  --how_many_training_steps=500 \\                                                                  \r\n  --model_dir=$TRAINING_DIR/models \\                                                               \r\n  --summaries_dir=$TRAINING_DIR/training_summaries/\"${ARCHITECTURE}\" \\                             \r\n  --output_graph=$TRAINING_DIR/retrained_graph.pb \\                                                \r\n  --output_labels=$TRAINING_DIR/retrained_labels.txt \\                                             \r\n  --architecture=\"${ARCHITECTURE}\" \\                                                               \r\n  --image_dir=$DATA_DIR/flower_photos  \r\n\r\nrm -f /$TRAINING_DIR/${ARCHITECTURE}.tflite                              \r\n                        \r\ntensorflow/bazel-bin/tensorflow/contrib/lite/toco/toco \\                                           \r\n  --input_file=$TRAINING_DIR/retrained_graph.pb \\                                                  \r\n  --input_format=TENSORFLOW_GRAPHDEF \\                                                             \r\n  --output_format=TFLITE \\                                                                         \r\n  --output_file=/$TRAINING_DIR/${ARCHITECTURE}.tflite \\                                            \r\n  --inference_type=QUANTIZED_UINT8 \\                                                               \r\n  --input_array=Placeholder \\                                                                      \r\n  --output_array=final_result \\                                                                    \r\n  --input_shape=1,224,224,3 \\                                                                      \r\n  --mean_value=128 \\                                                                               \r\n  --std_value=128                                                                                  \r\n```\r\n\r\nThat should create two files:\r\n```\r\n/tmp/tf_files/mobilenet_1.0_224_quantized.tflite\r\n/tmp/tf_files/retrained_labels.txt\r\n```\r\nwhich you can use in the original demo app.\r\n\r\nFor floating-point inference the link given by @ecrasy should work.\r\n"}