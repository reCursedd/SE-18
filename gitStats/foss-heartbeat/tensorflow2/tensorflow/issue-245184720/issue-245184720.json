{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11723", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11723/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11723/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11723/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/11723", "id": 245184720, "node_id": "MDU6SXNzdWUyNDUxODQ3MjA=", "number": 11723, "title": "tf.nn.sparse_softmax_cross_entropy_with_logits raise Segmentation fault", "user": {"login": "hxsnow10", "id": 5416620, "node_id": "MDQ6VXNlcjU0MTY2MjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/5416620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hxsnow10", "html_url": "https://github.com/hxsnow10", "followers_url": "https://api.github.com/users/hxsnow10/followers", "following_url": "https://api.github.com/users/hxsnow10/following{/other_user}", "gists_url": "https://api.github.com/users/hxsnow10/gists{/gist_id}", "starred_url": "https://api.github.com/users/hxsnow10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hxsnow10/subscriptions", "organizations_url": "https://api.github.com/users/hxsnow10/orgs", "repos_url": "https://api.github.com/users/hxsnow10/repos", "events_url": "https://api.github.com/users/hxsnow10/events{/privacy}", "received_events_url": "https://api.github.com/users/hxsnow10/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-07-24T19:30:39Z", "updated_at": "2017-07-27T08:48:30Z", "closed_at": "2017-07-26T19:15:42Z", "author_association": "NONE", "body_html": "<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\ncode from tensorflow/nmt</li>\n<li><strong>OS Platform and Distribution</strong>:centos 7</li>\n<li><strong>TensorFlow installed from</strong>:pip install</li>\n<li><strong>TensorFlow version</strong>:('v1.2.0-5-g435cdfc', '1.2.1')</li>\n<li><strong>Python version</strong>: 2.7.5</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>:without gpu</li>\n<li><strong>GPU model and memory</strong>:None</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<p>You can collect some of this information using our environment capture script:<br>\n<a href=\"https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\">https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh</a></p>\n<h3>Describe the problem</h3>\n<p>As the code pointed, tf.nn.sparse_softmax_cross_entropy_with_logits seems supporting less size tensor than tf.nn.softmax_cross_entropy_with_logits. At least, do shape check rather than Segmenation fault error.</p>\n<h3>Source code / logs</h3>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\nlabels<span class=\"pl-k\">=</span>tf.placeholder(tf.int32, [<span class=\"pl-c1\">None</span>,<span class=\"pl-c1\">128</span>])\nlogits<span class=\"pl-k\">=</span>tf.placeholder(tf.float32, [<span class=\"pl-c1\">None</span>,<span class=\"pl-c1\">128</span>,<span class=\"pl-c1\">600000</span>])\ncrossent1<span class=\"pl-k\">=</span>tf.nn.sparse_softmax_cross_entropy_with_logits(<span class=\"pl-v\">labels</span><span class=\"pl-k\">=</span>labels, <span class=\"pl-v\">logits</span><span class=\"pl-k\">=</span>logits)\nlabels_one_hot<span class=\"pl-k\">=</span>tf.one_hot(labels, <span class=\"pl-c1\">600000</span>, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.int32)\ncrossent2 <span class=\"pl-k\">=</span> tf.nn.softmax_cross_entropy_with_logits(<span class=\"pl-v\">labels</span><span class=\"pl-k\">=</span>labels_one_hot, <span class=\"pl-v\">logits</span><span class=\"pl-k\">=</span>logits)\nlogits_data<span class=\"pl-k\">=</span>np.random.rand(<span class=\"pl-c1\">39</span>,<span class=\"pl-c1\">128</span>,<span class=\"pl-c1\">600000</span>)\nlabels_data<span class=\"pl-k\">=</span>np.random.randint(<span class=\"pl-c1\">600000</span>,<span class=\"pl-v\">size</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">39</span>,<span class=\"pl-c1\">128</span>))\nfd<span class=\"pl-k\">=</span>{logits:logits_data, labels:labels_data}\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    sess.run([crossent2], <span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>fd)\n    <span class=\"pl-c1\">print</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>OK2<span class=\"pl-pds\">'</span></span> <span class=\"pl-c\"><span class=\"pl-c\">#</span> OK2</span>\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    sess.run([crossent1], <span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>fd)\n    <span class=\"pl-c1\">print</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>OK1<span class=\"pl-pds\">'</span></span> <span class=\"pl-c\"><span class=\"pl-c\">#</span>Segmentation fault</span></pre></div>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\ncode from tensorflow/nmt\nOS Platform and Distribution:centos 7\nTensorFlow installed from:pip install\nTensorFlow version:('v1.2.0-5-g435cdfc', '1.2.1')\nPython version: 2.7.5\nBazel version (if compiling from source):\nCUDA/cuDNN version:without gpu\nGPU model and memory:None\nExact command to reproduce:\n\nYou can collect some of this information using our environment capture script:\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\nDescribe the problem\nAs the code pointed, tf.nn.sparse_softmax_cross_entropy_with_logits seems supporting less size tensor than tf.nn.softmax_cross_entropy_with_logits. At least, do shape check rather than Segmenation fault error.\nSource code / logs\nimport tensorflow as tf\nimport numpy as np\nlabels=tf.placeholder(tf.int32, [None,128])\nlogits=tf.placeholder(tf.float32, [None,128,600000])\ncrossent1=tf.nn.sparse_softmax_cross_entropy_with_logits(labels=labels, logits=logits)\nlabels_one_hot=tf.one_hot(labels, 600000, dtype=tf.int32)\ncrossent2 = tf.nn.softmax_cross_entropy_with_logits(labels=labels_one_hot, logits=logits)\nlogits_data=np.random.rand(39,128,600000)\nlabels_data=np.random.randint(600000,size=(39,128))\nfd={logits:logits_data, labels:labels_data}\nwith tf.Session() as sess:\n    sess.run([crossent2], feed_dict=fd)\n    print 'OK2' # OK2\nwith tf.Session() as sess:\n    sess.run([crossent1], feed_dict=fd)\n    print 'OK1' #Segmentation fault", "body": "------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\ncode from tensorflow/nmt\r\n- **OS Platform and Distribution**:centos 7\r\n- **TensorFlow installed from**:pip install\r\n- **TensorFlow version**:('v1.2.0-5-g435cdfc', '1.2.1')\r\n- **Python version**: 2.7.5\r\n- **Bazel version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:without gpu\r\n- **GPU model and memory**:None\r\n- **Exact command to reproduce**:\r\n\r\nYou can collect some of this information using our environment capture script:\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\n### Describe the problem\r\nAs the code pointed, tf.nn.sparse_softmax_cross_entropy_with_logits seems supporting less size tensor than tf.nn.softmax_cross_entropy_with_logits. At least, do shape check rather than Segmenation fault error.\r\n\r\n### Source code / logs\r\n```python\r\nimport tensorflow as tf\r\nimport numpy as np\r\nlabels=tf.placeholder(tf.int32, [None,128])\r\nlogits=tf.placeholder(tf.float32, [None,128,600000])\r\ncrossent1=tf.nn.sparse_softmax_cross_entropy_with_logits(labels=labels, logits=logits)\r\nlabels_one_hot=tf.one_hot(labels, 600000, dtype=tf.int32)\r\ncrossent2 = tf.nn.softmax_cross_entropy_with_logits(labels=labels_one_hot, logits=logits)\r\nlogits_data=np.random.rand(39,128,600000)\r\nlabels_data=np.random.randint(600000,size=(39,128))\r\nfd={logits:logits_data, labels:labels_data}\r\nwith tf.Session() as sess:\r\n    sess.run([crossent2], feed_dict=fd)\r\n    print 'OK2' # OK2\r\nwith tf.Session() as sess:\r\n    sess.run([crossent1], feed_dict=fd)\r\n    print 'OK1' #Segmentation fault\r\n```\r\n"}