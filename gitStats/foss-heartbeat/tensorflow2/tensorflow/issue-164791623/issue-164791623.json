{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3267", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3267/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3267/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3267/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3267", "id": 164791623, "node_id": "MDU6SXNzdWUxNjQ3OTE2MjM=", "number": 3267, "title": "TensorBoard: gracefully handle deleted event files", "user": {"login": "akors", "id": 3023492, "node_id": "MDQ6VXNlcjMwMjM0OTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3023492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akors", "html_url": "https://github.com/akors", "followers_url": "https://api.github.com/users/akors/followers", "following_url": "https://api.github.com/users/akors/following{/other_user}", "gists_url": "https://api.github.com/users/akors/gists{/gist_id}", "starred_url": "https://api.github.com/users/akors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akors/subscriptions", "organizations_url": "https://api.github.com/users/akors/orgs", "repos_url": "https://api.github.com/users/akors/repos", "events_url": "https://api.github.com/users/akors/events{/privacy}", "received_events_url": "https://api.github.com/users/akors/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 284285184, "node_id": "MDU6TGFiZWwyODQyODUxODQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:tensorboard", "name": "comp:tensorboard", "color": "0052cc", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "decentralion", "id": 1400023, "node_id": "MDQ6VXNlcjE0MDAwMjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1400023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/decentralion", "html_url": "https://github.com/decentralion", "followers_url": "https://api.github.com/users/decentralion/followers", "following_url": "https://api.github.com/users/decentralion/following{/other_user}", "gists_url": "https://api.github.com/users/decentralion/gists{/gist_id}", "starred_url": "https://api.github.com/users/decentralion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/decentralion/subscriptions", "organizations_url": "https://api.github.com/users/decentralion/orgs", "repos_url": "https://api.github.com/users/decentralion/repos", "events_url": "https://api.github.com/users/decentralion/events{/privacy}", "received_events_url": "https://api.github.com/users/decentralion/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "decentralion", "id": 1400023, "node_id": "MDQ6VXNlcjE0MDAwMjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1400023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/decentralion", "html_url": "https://github.com/decentralion", "followers_url": "https://api.github.com/users/decentralion/followers", "following_url": "https://api.github.com/users/decentralion/following{/other_user}", "gists_url": "https://api.github.com/users/decentralion/gists{/gist_id}", "starred_url": "https://api.github.com/users/decentralion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/decentralion/subscriptions", "organizations_url": "https://api.github.com/users/decentralion/orgs", "repos_url": "https://api.github.com/users/decentralion/repos", "events_url": "https://api.github.com/users/decentralion/events{/privacy}", "received_events_url": "https://api.github.com/users/decentralion/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2016-07-11T09:09:34Z", "updated_at": "2017-04-10T10:29:22Z", "closed_at": "2017-01-24T00:01:46Z", "author_association": "NONE", "body_html": "<p>Hi!</p>\n<p>At the moment, TensorBoard at firstignores the deletion of folders and event files inside the log directory, and displays them as though they were there. Then at some later time (i can't tell what triggers it), it starts throwing exceptions, like</p>\n<pre><code>  File \"bla/lib/python3.5/site-packages/tensorflow/python/platform/gfile.py\", line 379, in ListDirectory\n    files = os.listdir(directory)\nFileNotFoundError: [Errno 2] No such file or directory: 'bla/dataset-test/logs/watch/dbg/test'\n</code></pre>\n<p>However, sometimes a cleanup is required, and unused runs have to be deleted. This is not possible under the current version.</p>\n<p>The workaround of restarting TensorBoard every time that a run is deleted is <strong>very</strong> unsatisfying, because loading a log directory with several (long) runs takes forever\u2122.</p>\n<p>Would it be possible to implement the handling of deleted session files and directories in TensorBoard?</p>", "body_text": "Hi!\nAt the moment, TensorBoard at firstignores the deletion of folders and event files inside the log directory, and displays them as though they were there. Then at some later time (i can't tell what triggers it), it starts throwing exceptions, like\n  File \"bla/lib/python3.5/site-packages/tensorflow/python/platform/gfile.py\", line 379, in ListDirectory\n    files = os.listdir(directory)\nFileNotFoundError: [Errno 2] No such file or directory: 'bla/dataset-test/logs/watch/dbg/test'\n\nHowever, sometimes a cleanup is required, and unused runs have to be deleted. This is not possible under the current version.\nThe workaround of restarting TensorBoard every time that a run is deleted is very unsatisfying, because loading a log directory with several (long) runs takes forever\u2122.\nWould it be possible to implement the handling of deleted session files and directories in TensorBoard?", "body": "Hi!\n\nAt the moment, TensorBoard at firstignores the deletion of folders and event files inside the log directory, and displays them as though they were there. Then at some later time (i can't tell what triggers it), it starts throwing exceptions, like\n\n```\n  File \"bla/lib/python3.5/site-packages/tensorflow/python/platform/gfile.py\", line 379, in ListDirectory\n    files = os.listdir(directory)\nFileNotFoundError: [Errno 2] No such file or directory: 'bla/dataset-test/logs/watch/dbg/test'\n```\n\nHowever, sometimes a cleanup is required, and unused runs have to be deleted. This is not possible under the current version.\n\nThe workaround of restarting TensorBoard every time that a run is deleted is **very** unsatisfying, because loading a log directory with several (long) runs takes forever\u2122.\n\nWould it be possible to implement the handling of deleted session files and directories in TensorBoard?\n"}