{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/411892057", "html_url": "https://github.com/tensorflow/tensorflow/pull/21509#issuecomment-411892057", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21509", "id": 411892057, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTg5MjA1Nw==", "user": {"login": "ispirmustafa", "id": 19293677, "node_id": "MDQ6VXNlcjE5MjkzNjc3", "avatar_url": "https://avatars1.githubusercontent.com/u/19293677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ispirmustafa", "html_url": "https://github.com/ispirmustafa", "followers_url": "https://api.github.com/users/ispirmustafa/followers", "following_url": "https://api.github.com/users/ispirmustafa/following{/other_user}", "gists_url": "https://api.github.com/users/ispirmustafa/gists{/gist_id}", "starred_url": "https://api.github.com/users/ispirmustafa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ispirmustafa/subscriptions", "organizations_url": "https://api.github.com/users/ispirmustafa/orgs", "repos_url": "https://api.github.com/users/ispirmustafa/repos", "events_url": "https://api.github.com/users/ispirmustafa/events{/privacy}", "received_events_url": "https://api.github.com/users/ispirmustafa/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-09T20:48:56Z", "updated_at": "2018-08-09T20:48:56Z", "author_association": "CONTRIBUTOR", "body_html": "<p>feature importance seems very similar to predict. It's better to have an op which we can run.<br>\nalso from ux perspective the return dictionary should be explainable based on inputs. For example how does this implementation handle if user have numeric vector feature, indicator_column, ...? Is the connection clear between returned feature importance dictionary and given feature-columns?</p>", "body_text": "feature importance seems very similar to predict. It's better to have an op which we can run.\nalso from ux perspective the return dictionary should be explainable based on inputs. For example how does this implementation handle if user have numeric vector feature, indicator_column, ...? Is the connection clear between returned feature importance dictionary and given feature-columns?", "body": "feature importance seems very similar to predict. It's better to have an op which we can run.\r\nalso from ux perspective the return dictionary should be explainable based on inputs. For example how does this implementation handle if user have numeric vector feature, indicator_column, ...? Is the connection clear between returned feature importance dictionary and given feature-columns?"}