{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/411978223", "html_url": "https://github.com/tensorflow/tensorflow/pull/21509#issuecomment-411978223", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21509", "id": 411978223, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTk3ODIyMw==", "user": {"login": "facaiy", "id": 1112263, "node_id": "MDQ6VXNlcjExMTIyNjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1112263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facaiy", "html_url": "https://github.com/facaiy", "followers_url": "https://api.github.com/users/facaiy/followers", "following_url": "https://api.github.com/users/facaiy/following{/other_user}", "gists_url": "https://api.github.com/users/facaiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/facaiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facaiy/subscriptions", "organizations_url": "https://api.github.com/users/facaiy/orgs", "repos_url": "https://api.github.com/users/facaiy/repos", "events_url": "https://api.github.com/users/facaiy/events{/privacy}", "received_events_url": "https://api.github.com/users/facaiy/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-10T05:20:48Z", "updated_at": "2018-08-10T05:20:48Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4313109\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/nataliaponomareva\">@nataliaponomareva</a> Thanks for your comments.</p>\n<ol>\n<li>\n<p>I think there are at least three solutions:</p>\n<ul>\n<li>add <code>calculate_feature_importances</code> method as shown in the PR. We need to construct graph and session by ourselves (yes, like <code>predict</code> method, thank <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=19293677\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ispirmustafa\">@ispirmustafa</a>)</li>\n<li>add <code>with_feature_importances</code> argument for <code>train</code> method, and print feature importances when training is finished. I think we can create a subclass of SessionHook and implement its <code>end</code> method.</li>\n<li>write a file when exporting (the same way it is done in contrib). I have no idea of how to implement it? Hack <code>export_savedmodel</code> of Estimator?</li>\n</ul>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7509742\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/dvdbisong\">@dvdbisong</a> as user, which one of them is convenient for you?<br>\n<a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=19293677\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ispirmustafa\">@ispirmustafa</a> How do you think?</p>\n</li>\n</ol>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=19293677\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ispirmustafa\">@ispirmustafa</a></p>\n<blockquote>\n<p>feature importance seems very similar to predict.</p>\n</blockquote>\n<p>Yes, the only difference is that feature importance cannot invoke <code>_call_model_fn</code> due to lacking of input_fn.</p>\n<blockquote>\n<p>dictionary should be explainable based on inputs.</p>\n</blockquote>\n<p>Good question. It sounds great if we can connect feature importance dictionary with given feature-columns directly. I will look into it and submit proposal later. Thanks.</p>", "body_text": "@nataliaponomareva Thanks for your comments.\n\n\nI think there are at least three solutions:\n\nadd calculate_feature_importances method as shown in the PR. We need to construct graph and session by ourselves (yes, like predict method, thank @ispirmustafa)\nadd with_feature_importances argument for train method, and print feature importances when training is finished. I think we can create a subclass of SessionHook and implement its end method.\nwrite a file when exporting (the same way it is done in contrib). I have no idea of how to implement it? Hack export_savedmodel of Estimator?\n\n@dvdbisong as user, which one of them is convenient for you?\n@ispirmustafa How do you think?\n\n\n@ispirmustafa\n\nfeature importance seems very similar to predict.\n\nYes, the only difference is that feature importance cannot invoke _call_model_fn due to lacking of input_fn.\n\ndictionary should be explainable based on inputs.\n\nGood question. It sounds great if we can connect feature importance dictionary with given feature-columns directly. I will look into it and submit proposal later. Thanks.", "body": "@nataliaponomareva Thanks for your comments.\r\n\r\n1. I think there are at least three solutions:  \r\n   + add `calculate_feature_importances` method as shown in the PR. We need to construct graph and session by ourselves (yes, like `predict` method, thank @ispirmustafa)\r\n   + add `with_feature_importances` argument for `train` method, and print feature importances when training is finished. I think we can create a subclass of SessionHook and implement its `end` method.\r\n   + write a file when exporting (the same way it is done in contrib). I have no idea of how to implement it? Hack `export_savedmodel` of Estimator?\r\n  \r\n   @dvdbisong as user, which one of them is convenient for you? \r\n   @ispirmustafa How do you think?\r\n\r\n@ispirmustafa \r\n\r\n> feature importance seems very similar to predict.\r\n\r\nYes, the only difference is that feature importance cannot invoke `_call_model_fn` due to lacking of input_fn.\r\n\r\n> dictionary should be explainable based on inputs.\r\n\r\nGood question. It sounds great if we can connect feature importance dictionary with given feature-columns directly. I will look into it and submit proposal later. Thanks."}