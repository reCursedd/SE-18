{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/412115191", "html_url": "https://github.com/tensorflow/tensorflow/pull/21509#issuecomment-412115191", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21509", "id": 412115191, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjExNTE5MQ==", "user": {"login": "nataliaponomareva", "id": 4313109, "node_id": "MDQ6VXNlcjQzMTMxMDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4313109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nataliaponomareva", "html_url": "https://github.com/nataliaponomareva", "followers_url": "https://api.github.com/users/nataliaponomareva/followers", "following_url": "https://api.github.com/users/nataliaponomareva/following{/other_user}", "gists_url": "https://api.github.com/users/nataliaponomareva/gists{/gist_id}", "starred_url": "https://api.github.com/users/nataliaponomareva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nataliaponomareva/subscriptions", "organizations_url": "https://api.github.com/users/nataliaponomareva/orgs", "repos_url": "https://api.github.com/users/nataliaponomareva/repos", "events_url": "https://api.github.com/users/nataliaponomareva/events{/privacy}", "received_events_url": "https://api.github.com/users/nataliaponomareva/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-10T15:19:41Z", "updated_at": "2018-08-10T15:34:45Z", "author_association": "NONE", "body_html": "<p>Global Feature importances are <strong>not</strong> similar to predict - they don't depend on the data you feed at this point, they dependend only on already trained model</p>\n<p>Among your proposed solutions, I like the option 2 the least (printing the feature importances). It might be hard to go through the logs and look where it printed, and imagine you didn't save the log but have an already a trained model.<br>\nHowever the hook might work - we might have a param given to an estimator, that when set, adds a hook that writes the file with feature importances somewhere in model dir. This is akin to writing importances in export strategy, but without having to create a custom strategy<br>\nCalculate feature importances method might work too, but i am slightly leaning towards a hook that will write a file for later examination<br>\nAlso, regarding feature importances vs feature columns - we can use the the method akin _calculate_num_features to get back the name of the feature based on feature id. For categorical columns, we will need to output info about feature column and feature value, but it is all there</p>", "body_text": "Global Feature importances are not similar to predict - they don't depend on the data you feed at this point, they dependend only on already trained model\nAmong your proposed solutions, I like the option 2 the least (printing the feature importances). It might be hard to go through the logs and look where it printed, and imagine you didn't save the log but have an already a trained model.\nHowever the hook might work - we might have a param given to an estimator, that when set, adds a hook that writes the file with feature importances somewhere in model dir. This is akin to writing importances in export strategy, but without having to create a custom strategy\nCalculate feature importances method might work too, but i am slightly leaning towards a hook that will write a file for later examination\nAlso, regarding feature importances vs feature columns - we can use the the method akin _calculate_num_features to get back the name of the feature based on feature id. For categorical columns, we will need to output info about feature column and feature value, but it is all there", "body": "Global Feature importances are **not** similar to predict - they don't depend on the data you feed at this point, they dependend only on already trained model\r\n\r\nAmong your proposed solutions, I like the option 2 the least (printing the feature importances). It might be hard to go through the logs and look where it printed, and imagine you didn't save the log but have an already a trained model.\r\nHowever the hook might work - we might have a param given to an estimator, that when set, adds a hook that writes the file with feature importances somewhere in model dir. This is akin to writing importances in export strategy, but without having to create a custom strategy\r\nCalculate feature importances method might work too, but i am slightly leaning towards a hook that will write a file for later examination\r\nAlso, regarding feature importances vs feature columns - we can use the the method akin _calculate_num_features to get back the name of the feature based on feature id. For categorical columns, we will need to output info about feature column and feature value, but it is all there"}