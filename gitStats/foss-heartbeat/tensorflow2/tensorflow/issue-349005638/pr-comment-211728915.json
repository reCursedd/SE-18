{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/211728915", "pull_request_review_id": 148204058, "id": 211728915, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTcyODkxNQ==", "diff_hunk": "@@ -544,6 +550,615 @@ def testTrainEvaluateAndPredictWithOnlyIndicatorColumn(self):\n     self.assertEqual(1, ensemble.trees[0].nodes[0].bucketized_split.feature_id)\n     self.assertEqual(0, ensemble.trees[0].nodes[0].bucketized_split.threshold)\n \n+  def testFeatureImportancesWithTrainedEnsemble(self):\n+    input_fn = _make_train_input_fn(is_classification=True)\n+\n+    est = boosted_trees.BoostedTreesClassifier(\n+        feature_columns=self._feature_columns,\n+        n_batches_per_layer=1,\n+        n_trees=2,\n+        max_depth=5)\n+\n+    # It will stop after 5 steps because of the max depth and num trees.\n+    num_steps = 100\n+    # Train for a few steps, and validate final checkpoint.\n+    est.train(input_fn, steps=num_steps)\n+\n+    feature_names_expected = ['f_0_bucketized', 'f_2_bucketized', 'f_1_bucketized']\n+\n+    feature_names, importances = est.experimental_feature_importances(normalize=False)\n+    self.assertAllEqual(feature_names_expected, feature_names)\n+    self.assertAllClose([0.833933, 0.606342, 0.0], importances)\n+\n+    feature_names, importances = est.experimental_feature_importances(normalize=True)\n+    self.assertAllEqual(feature_names_expected, feature_names)\n+    self.assertAllClose([0.579010, 0.420990, 0.0], importances)\n+\n+  def testFeatureImportancesOnEmtpyEnsemble(self):", "path": "tensorflow/python/estimator/canned/boosted_trees_test.py", "position": null, "original_position": 55, "commit_id": "046c74c8e7c68aaa726977dd6e8a2523f854f9cc", "original_commit_id": "73c8cbb413029cf3e540e99b883ae89f4b08fc11", "user": {"login": "nataliaponomareva", "id": 4313109, "node_id": "MDQ6VXNlcjQzMTMxMDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4313109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nataliaponomareva", "html_url": "https://github.com/nataliaponomareva", "followers_url": "https://api.github.com/users/nataliaponomareva/followers", "following_url": "https://api.github.com/users/nataliaponomareva/following{/other_user}", "gists_url": "https://api.github.com/users/nataliaponomareva/gists{/gist_id}", "starred_url": "https://api.github.com/users/nataliaponomareva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nataliaponomareva/subscriptions", "organizations_url": "https://api.github.com/users/nataliaponomareva/orgs", "repos_url": "https://api.github.com/users/nataliaponomareva/repos", "events_url": "https://api.github.com/users/nataliaponomareva/events{/privacy}", "received_events_url": "https://api.github.com/users/nataliaponomareva/received_events", "type": "User", "site_admin": false}, "body": "empty", "created_at": "2018-08-21T19:24:11Z", "updated_at": "2018-09-19T22:45:29Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/21509#discussion_r211728915", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21509", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/211728915"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/21509#discussion_r211728915"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21509"}}, "body_html": "<p>empty</p>", "body_text": "empty"}