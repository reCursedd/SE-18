{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/209699817", "pull_request_review_id": 145758212, "id": 209699817, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTY5OTgxNw==", "diff_hunk": "@@ -910,8 +938,97 @@ def _create_regression_head(label_dimension, weight_column=None):\n   # pylint: enable=protected-access\n \n \n+def _compute_feature_importance_for_tree(tree, num_features, normalize):\n+  importances = np.zeros(num_features)\n+\n+  for node in tree.nodes:\n+    node_type = node.WhichOneof('node')\n+    if node_type == 'bucketized_split':\n+      feature_id = node.bucketized_split.feature_id\n+      importances[feature_id] += node.metadata.gain\n+    elif node_type == 'leaf':\n+      assert node.metadata.gain == 0\n+    else:\n+      raise ValueError('Unexpected split type %s', node_type)\n+\n+  if normalize:\n+    normalizer = np.sum(importances)\n+    if normalizer > 0.0:", "path": "tensorflow/python/estimator/canned/boosted_trees.py", "position": null, "original_position": 83, "commit_id": "046c74c8e7c68aaa726977dd6e8a2523f854f9cc", "original_commit_id": "7ad604778ed69303458145376f2b6ec403fc5345", "user": {"login": "nataliaponomareva", "id": 4313109, "node_id": "MDQ6VXNlcjQzMTMxMDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4313109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nataliaponomareva", "html_url": "https://github.com/nataliaponomareva", "followers_url": "https://api.github.com/users/nataliaponomareva/followers", "following_url": "https://api.github.com/users/nataliaponomareva/following{/other_user}", "gists_url": "https://api.github.com/users/nataliaponomareva/gists{/gist_id}", "starred_url": "https://api.github.com/users/nataliaponomareva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nataliaponomareva/subscriptions", "organizations_url": "https://api.github.com/users/nataliaponomareva/orgs", "repos_url": "https://api.github.com/users/nataliaponomareva/repos", "events_url": "https://api.github.com/users/nataliaponomareva/events{/privacy}", "received_events_url": "https://api.github.com/users/nataliaponomareva/received_events", "type": "User", "site_admin": false}, "body": "Hm i am not sure that normalizing on a tree basis makes sense. Consider this\r\ntrees 1: f1: gain 100, f2: gain 15\r\ntree 2: f1: gain 0.1 , f2: gain 10\r\n\r\nf1 total gain : 100.1, f2 total gain 25 => f1 is 0.80016, f2 is 0.1998401\r\nwhen normalizing per tree:\r\nf1 0.8695652 f2: 0.1304348\r\nf1:  0.00990099 f2: 0.990099\r\nTotal when per tree: f1:0.8794662 f2:1.120534 -> they are again unnormalized. U can take average but then ur importances are f1:0.4397 and f2:0.560267 - which is a lot different from what you would get when normalizing over all ensemble", "created_at": "2018-08-13T17:50:32Z", "updated_at": "2018-09-19T22:45:29Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/21509#discussion_r209699817", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21509", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/209699817"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/21509#discussion_r209699817"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21509"}}, "body_html": "<p>Hm i am not sure that normalizing on a tree basis makes sense. Consider this<br>\ntrees 1: f1: gain 100, f2: gain 15<br>\ntree 2: f1: gain 0.1 , f2: gain 10</p>\n<p>f1 total gain : 100.1, f2 total gain 25 =&gt; f1 is 0.80016, f2 is 0.1998401<br>\nwhen normalizing per tree:<br>\nf1 0.8695652 f2: 0.1304348<br>\nf1:  0.00990099 f2: 0.990099<br>\nTotal when per tree: f1:0.8794662 f2:1.120534 -&gt; they are again unnormalized. U can take average but then ur importances are f1:0.4397 and f2:0.560267 - which is a lot different from what you would get when normalizing over all ensemble</p>", "body_text": "Hm i am not sure that normalizing on a tree basis makes sense. Consider this\ntrees 1: f1: gain 100, f2: gain 15\ntree 2: f1: gain 0.1 , f2: gain 10\nf1 total gain : 100.1, f2 total gain 25 => f1 is 0.80016, f2 is 0.1998401\nwhen normalizing per tree:\nf1 0.8695652 f2: 0.1304348\nf1:  0.00990099 f2: 0.990099\nTotal when per tree: f1:0.8794662 f2:1.120534 -> they are again unnormalized. U can take average but then ur importances are f1:0.4397 and f2:0.560267 - which is a lot different from what you would get when normalizing over all ensemble"}