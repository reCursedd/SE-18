{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10648", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10648/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10648/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10648/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10648", "id": 235232998, "node_id": "MDU6SXNzdWUyMzUyMzI5OTg=", "number": 10648, "title": "Segmentation Fault (core dumped) on exit from unit test that imports `tf.contrib.rnn`", "user": {"login": "freakanth", "id": 3948628, "node_id": "MDQ6VXNlcjM5NDg2Mjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/3948628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/freakanth", "html_url": "https://github.com/freakanth", "followers_url": "https://api.github.com/users/freakanth/followers", "following_url": "https://api.github.com/users/freakanth/following{/other_user}", "gists_url": "https://api.github.com/users/freakanth/gists{/gist_id}", "starred_url": "https://api.github.com/users/freakanth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/freakanth/subscriptions", "organizations_url": "https://api.github.com/users/freakanth/orgs", "repos_url": "https://api.github.com/users/freakanth/repos", "events_url": "https://api.github.com/users/freakanth/events{/privacy}", "received_events_url": "https://api.github.com/users/freakanth/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-06-12T13:29:11Z", "updated_at": "2017-09-12T13:07:19Z", "closed_at": "2017-09-12T13:06:42Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 14.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.0.0</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.4.4</li>\n<li><strong>CUDA/cuDNN version</strong>: 8.0/5110</li>\n<li><strong>GPU model and memory</strong>: GeForce GTX 980 Ti</li>\n<li><strong>Exact command to reproduce</strong>: <code>python -m unittest discover -s tests -p \"example_test.py\"</code>(see below for details)</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I am running Tensorflow code from within the Python <code>unittest</code> module. The individual unit-tests, each of which train a specific architecture, run successfully with an OK. However, I observed that given the above described system configuration, I receive a <code>Segmentation Fault (core dumped)</code> just before the program exits. And this leads to the overall test being marked as <code>FAIL</code> (despite the individual tests passing).</p>\n<p>On further investigation, I observed that the segmentation fault can be prevented from occurring by preventing the <code>tensorflow/contrib/rnn/python/ops/_gru_ops.so</code> file from being loaded by the <code>load_op_library</code> function inside <code>tensorflow.contrib.rnn.python.ops.gru_ops</code></p>\n<h3>Source code / logs</h3>\n<p>Say I have a folder <code>my_code</code> that contains a <code>tests</code> folder where my unit-tests are all located. The error can be reproduced by running an <code>example_test.py</code> (given below) within the <code>unittest</code> module using the call <code>python -m unittest discover -s tests -p \"example_test.py\" from within the </code>my_code<code>directory. The file</code>my_code/tests/example_tests.py` contains the following:</p>\n<pre><code>import unittest                               \nimport tensorflow as tf                       \n                                              \nclass SomeTestClass(unittest.TestCase): \n    \"\"\"Some docstring.\"\"\"              \n                                              \n    def test_something(self):          \n        print(\"Testing something...\\n\")\n        print tf.contrib.rnn.LSTMCell         \n        session = tf.Session()                \n        session.close()                       \n</code></pre>\n<p>Note that the error occurs only when both <code>session</code> is created and there is a reference to <code>tf.contrib.rnn</code>.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 14.04\nTensorFlow installed from (source or binary): Source\nTensorFlow version (use command below): 1.0.0\nBazel version (if compiling from source): 0.4.4\nCUDA/cuDNN version: 8.0/5110\nGPU model and memory: GeForce GTX 980 Ti\nExact command to reproduce: python -m unittest discover -s tests -p \"example_test.py\"(see below for details)\n\nDescribe the problem\nI am running Tensorflow code from within the Python unittest module. The individual unit-tests, each of which train a specific architecture, run successfully with an OK. However, I observed that given the above described system configuration, I receive a Segmentation Fault (core dumped) just before the program exits. And this leads to the overall test being marked as FAIL (despite the individual tests passing).\nOn further investigation, I observed that the segmentation fault can be prevented from occurring by preventing the tensorflow/contrib/rnn/python/ops/_gru_ops.so file from being loaded by the load_op_library function inside tensorflow.contrib.rnn.python.ops.gru_ops\nSource code / logs\nSay I have a folder my_code that contains a tests folder where my unit-tests are all located. The error can be reproduced by running an example_test.py (given below) within the unittest module using the call python -m unittest discover -s tests -p \"example_test.py\" from within the my_codedirectory. The filemy_code/tests/example_tests.py` contains the following:\nimport unittest                               \nimport tensorflow as tf                       \n                                              \nclass SomeTestClass(unittest.TestCase): \n    \"\"\"Some docstring.\"\"\"              \n                                              \n    def test_something(self):          \n        print(\"Testing something...\\n\")\n        print tf.contrib.rnn.LSTMCell         \n        session = tf.Session()                \n        session.close()                       \n\nNote that the error occurs only when both session is created and there is a reference to tf.contrib.rnn.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 14.04\r\n- **TensorFlow installed from (source or binary)**: Source\r\n- **TensorFlow version (use command below)**: 1.0.0\r\n- **Bazel version (if compiling from source)**: 0.4.4\r\n- **CUDA/cuDNN version**: 8.0/5110\r\n- **GPU model and memory**: GeForce GTX 980 Ti\r\n- **Exact command to reproduce**: `python -m unittest discover -s tests -p \"example_test.py\"`(see below for details)\r\n\r\n### Describe the problem\r\nI am running Tensorflow code from within the Python `unittest` module. The individual unit-tests, each of which train a specific architecture, run successfully with an OK. However, I observed that given the above described system configuration, I receive a `Segmentation Fault (core dumped)` just before the program exits. And this leads to the overall test being marked as `FAIL` (despite the individual tests passing).\r\n\r\nOn further investigation, I observed that the segmentation fault can be prevented from occurring by preventing the `tensorflow/contrib/rnn/python/ops/_gru_ops.so` file from being loaded by the `load_op_library` function inside `tensorflow.contrib.rnn.python.ops.gru_ops`\r\n\r\n### Source code / logs\r\nSay I have a folder `my_code` that contains a `tests` folder where my unit-tests are all located. The error can be reproduced by running an `example_test.py` (given below) within the `unittest` module using the call `python -m unittest discover -s tests -p \"example_test.py\" from within the `my_code` directory. The file `my_code/tests/example_tests.py` contains the following:\r\n\r\n```\r\nimport unittest                               \r\nimport tensorflow as tf                       \r\n                                              \r\nclass SomeTestClass(unittest.TestCase): \r\n    \"\"\"Some docstring.\"\"\"              \r\n                                              \r\n    def test_something(self):          \r\n        print(\"Testing something...\\n\")\r\n        print tf.contrib.rnn.LSTMCell         \r\n        session = tf.Session()                \r\n        session.close()                       \r\n```\r\n\r\nNote that the error occurs only when both `session` is created and there is a reference to `tf.contrib.rnn`."}