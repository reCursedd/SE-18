{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9034", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9034/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9034/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9034/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9034", "id": 220064773, "node_id": "MDU6SXNzdWUyMjAwNjQ3NzM=", "number": 9034, "title": "Computing 2nd-order tf.gradients of tensors throws Exception when used with batch_norm", "user": {"login": "shaform", "id": 367172, "node_id": "MDQ6VXNlcjM2NzE3Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/367172?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shaform", "html_url": "https://github.com/shaform", "followers_url": "https://api.github.com/users/shaform/followers", "following_url": "https://api.github.com/users/shaform/following{/other_user}", "gists_url": "https://api.github.com/users/shaform/gists{/gist_id}", "starred_url": "https://api.github.com/users/shaform/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shaform/subscriptions", "organizations_url": "https://api.github.com/users/shaform/orgs", "repos_url": "https://api.github.com/users/shaform/repos", "events_url": "https://api.github.com/users/shaform/events{/privacy}", "received_events_url": "https://api.github.com/users/shaform/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2017-04-06T23:38:14Z", "updated_at": "2017-06-16T21:08:36Z", "closed_at": "2017-06-16T21:08:35Z", "author_association": "NONE", "body_html": "<h3>Describe the problem clearly</h3>\n<p>If the <code>updates_collections</code> of a <code>batch_norm</code> layer is set other than <code>tf.GraphKeys.UPDATE_OPS</code>, it is no longer possible to compute 2nd-order <code>tf.gradients</code> with respect to the weights of a <code>fully_connected</code> layer.</p>\n<p>p.s. It is okay when <code>updates_collections</code> is set as <code>tf.GraphKeys.UPDATE_OPS</code>. I think <code>updates_collections</code> should not affect the ability to compute gradients?</p>\n<h3>Environments</h3>\n<ul>\n<li>Ubuntu 16.04 64bit</li>\n<li>Python 3.6.0 |Anaconda 4.3.1 (64-bit)| (default, Dec 23 2016, 12:22:00)</li>\n<li>[GCC 4.4.7 20120313 (Red Hat 4.4.7-1)] on linux</li>\n<li>tensorflow-gpu 1.0.1 installed from pip</li>\n<li>libcublas.so.8.0, libcudnn.so.5, libcufft.so.8.0,  libcuda.so.1, libcurand.so.8.0</li>\n</ul>\n<h3>Source Code</h3>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    X <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, [<span class=\"pl-c1\">None</span>, <span class=\"pl-c1\">2</span>])\n    is_training <span class=\"pl-k\">=</span> tf.placeholder(tf.bool, [], <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>is_training<span class=\"pl-pds\">'</span></span>)\n\n    outputs <span class=\"pl-k\">=</span> tf.contrib.layers.fully_connected(<span class=\"pl-v\">inputs</span><span class=\"pl-k\">=</span>X, <span class=\"pl-v\">num_outputs</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>)\n    outputs <span class=\"pl-k\">=</span> tf.contrib.layers.batch_norm(\n        <span class=\"pl-v\">inputs</span><span class=\"pl-k\">=</span>outputs,\n        <span class=\"pl-v\">is_training</span><span class=\"pl-k\">=</span>is_training,\n        <span class=\"pl-v\">updates_collections</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>bad_collections<span class=\"pl-pds\">'</span></span>)\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> get gradients of X with respect to outputs values</span>\n    grads <span class=\"pl-k\">=</span> tf.gradients(outputs, [\n        X,\n    ])[<span class=\"pl-c1\">0</span>]\n    bad_vars <span class=\"pl-k\">=</span> tf.get_collection(tf.GraphKeys.<span class=\"pl-c1\">TRAINABLE_VARIABLES</span>)\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> get gradients of weights with respect to gradients of X</span>\n    bad_grads <span class=\"pl-k\">=</span> tf.gradients(grads, bad_vars) <span class=\"pl-c\"><span class=\"pl-c\">#</span> this line</span></pre></div>\n<h2>Logs</h2>\n<pre><code>Traceback (most recent call last):\n  File \"test.py\", line 18, in &lt;module&gt;\n    bad_grads = tf.gradients(grads, bad_vars)\n  File \"$HOME/anaconda2/envs/tf/lib/python3.6/site-packages/tensorflow/python/ops/gradients_impl.py\", line 474, in gradients\n    out_grads[i] = control_flow_ops.ZerosLikeOutsideLoop(op, i)\n  File \"$HOME/anaconda2/envs/tf/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 1303, in ZerosLikeOutsideLoop\n    pred = op_ctxt.pred\nAttributeError: 'NoneType' object has no attribute 'pred'\n</code></pre>", "body_text": "Describe the problem clearly\nIf the updates_collections of a batch_norm layer is set other than tf.GraphKeys.UPDATE_OPS, it is no longer possible to compute 2nd-order tf.gradients with respect to the weights of a fully_connected layer.\np.s. It is okay when updates_collections is set as tf.GraphKeys.UPDATE_OPS. I think updates_collections should not affect the ability to compute gradients?\nEnvironments\n\nUbuntu 16.04 64bit\nPython 3.6.0 |Anaconda 4.3.1 (64-bit)| (default, Dec 23 2016, 12:22:00)\n[GCC 4.4.7 20120313 (Red Hat 4.4.7-1)] on linux\ntensorflow-gpu 1.0.1 installed from pip\nlibcublas.so.8.0, libcudnn.so.5, libcufft.so.8.0,  libcuda.so.1, libcurand.so.8.0\n\nSource Code\nimport tensorflow as tf\n\nwith tf.Session() as sess:\n    X = tf.placeholder(tf.float32, [None, 2])\n    is_training = tf.placeholder(tf.bool, [], name='is_training')\n\n    outputs = tf.contrib.layers.fully_connected(inputs=X, num_outputs=1)\n    outputs = tf.contrib.layers.batch_norm(\n        inputs=outputs,\n        is_training=is_training,\n        updates_collections='bad_collections')\n    # get gradients of X with respect to outputs values\n    grads = tf.gradients(outputs, [\n        X,\n    ])[0]\n    bad_vars = tf.get_collection(tf.GraphKeys.TRAINABLE_VARIABLES)\n    # get gradients of weights with respect to gradients of X\n    bad_grads = tf.gradients(grads, bad_vars) # this line\nLogs\nTraceback (most recent call last):\n  File \"test.py\", line 18, in <module>\n    bad_grads = tf.gradients(grads, bad_vars)\n  File \"$HOME/anaconda2/envs/tf/lib/python3.6/site-packages/tensorflow/python/ops/gradients_impl.py\", line 474, in gradients\n    out_grads[i] = control_flow_ops.ZerosLikeOutsideLoop(op, i)\n  File \"$HOME/anaconda2/envs/tf/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 1303, in ZerosLikeOutsideLoop\n    pred = op_ctxt.pred\nAttributeError: 'NoneType' object has no attribute 'pred'", "body": "### Describe the problem clearly\r\n\r\nIf the `updates_collections` of a `batch_norm` layer is set other than `tf.GraphKeys.UPDATE_OPS`, it is no longer possible to compute 2nd-order `tf.gradients` with respect to the weights of a `fully_connected` layer.\r\n\r\np.s. It is okay when `updates_collections` is set as `tf.GraphKeys.UPDATE_OPS`. I think `updates_collections` should not affect the ability to compute gradients?\r\n\r\n### Environments\r\n\r\n- Ubuntu 16.04 64bit\r\n- Python 3.6.0 |Anaconda 4.3.1 (64-bit)| (default, Dec 23 2016, 12:22:00) \r\n- [GCC 4.4.7 20120313 (Red Hat 4.4.7-1)] on linux\r\n- tensorflow-gpu 1.0.1 installed from pip\r\n- libcublas.so.8.0, libcudnn.so.5, libcufft.so.8.0,  libcuda.so.1, libcurand.so.8.0\r\n\r\n### Source Code\r\n```python\r\nimport tensorflow as tf\r\n\r\nwith tf.Session() as sess:\r\n    X = tf.placeholder(tf.float32, [None, 2])\r\n    is_training = tf.placeholder(tf.bool, [], name='is_training')\r\n\r\n    outputs = tf.contrib.layers.fully_connected(inputs=X, num_outputs=1)\r\n    outputs = tf.contrib.layers.batch_norm(\r\n        inputs=outputs,\r\n        is_training=is_training,\r\n        updates_collections='bad_collections')\r\n    # get gradients of X with respect to outputs values\r\n    grads = tf.gradients(outputs, [\r\n        X,\r\n    ])[0]\r\n    bad_vars = tf.get_collection(tf.GraphKeys.TRAINABLE_VARIABLES)\r\n    # get gradients of weights with respect to gradients of X\r\n    bad_grads = tf.gradients(grads, bad_vars) # this line\r\n```\r\n\r\n## Logs\r\n```\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 18, in <module>\r\n    bad_grads = tf.gradients(grads, bad_vars)\r\n  File \"$HOME/anaconda2/envs/tf/lib/python3.6/site-packages/tensorflow/python/ops/gradients_impl.py\", line 474, in gradients\r\n    out_grads[i] = control_flow_ops.ZerosLikeOutsideLoop(op, i)\r\n  File \"$HOME/anaconda2/envs/tf/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 1303, in ZerosLikeOutsideLoop\r\n    pred = op_ctxt.pred\r\nAttributeError: 'NoneType' object has no attribute 'pred'\r\n```"}