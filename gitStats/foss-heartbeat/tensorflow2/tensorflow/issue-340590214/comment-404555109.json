{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/404555109", "html_url": "https://github.com/tensorflow/tensorflow/issues/20732#issuecomment-404555109", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20732", "id": 404555109, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDU1NTEwOQ==", "user": {"login": "CaoManhDat", "id": 258872, "node_id": "MDQ6VXNlcjI1ODg3Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/258872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CaoManhDat", "html_url": "https://github.com/CaoManhDat", "followers_url": "https://api.github.com/users/CaoManhDat/followers", "following_url": "https://api.github.com/users/CaoManhDat/following{/other_user}", "gists_url": "https://api.github.com/users/CaoManhDat/gists{/gist_id}", "starred_url": "https://api.github.com/users/CaoManhDat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CaoManhDat/subscriptions", "organizations_url": "https://api.github.com/users/CaoManhDat/orgs", "repos_url": "https://api.github.com/users/CaoManhDat/repos", "events_url": "https://api.github.com/users/CaoManhDat/events{/privacy}", "received_events_url": "https://api.github.com/users/CaoManhDat/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-12T15:36:34Z", "updated_at": "2018-07-12T15:36:34Z", "author_association": "NONE", "body_html": "<p>I got the same issue when tried to load a trained model of <a href=\"https://github.com/tensorflow/models/tree/master/tutorials/rnn/ptb\">PTB Rnn</a></p>\n<p>Tensorflow-gpu - 1.8.0<br>\nThe code used for loading model</p>\n<pre><code>with tf.Session() as sess:\n  new_saver = tf.train.import_meta_graph('./trained_model/model.ckpt-24672.meta')\n  new_saver.restore(sess, tf.train.latest_checkpoint('./trained_model'))\n</code></pre>\n<p>Error log</p>\n<pre><code>---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\n&lt;ipython-input-3-63da410a664c&gt; in &lt;module&gt;()\n      1 with tf.Session() as sess:\n----&gt; 2   new_saver = tf.train.import_meta_graph('./trained_model/model.ckpt-24672.meta')\n      3   new_saver.restore(sess, tf.train.latest_checkpoint('./trained_model'))\n\n/home/caomanhdat/.local/lib/python2.7/site-packages/tensorflow/python/training/saver.pyc in import_meta_graph(meta_graph_or_file, clear_devices, import_scope, **kwargs)\n   1953       clear_devices=clear_devices,\n   1954       import_scope=import_scope,\n-&gt; 1955       **kwargs)\n   1956 \n   1957   if meta_graph_def.HasField(\"saver_def\"):\n\n/home/caomanhdat/.local/lib/python2.7/site-packages/tensorflow/python/framework/meta_graph.pyc in import_scoped_meta_graph(meta_graph_or_file, clear_devices, graph, import_scope, input_map, unbound_inputs_col_name, restore_collections_predicate)\n    741         name=(import_scope or scope_to_prepend_to_names),\n    742         input_map=input_map,\n--&gt; 743         producer_op_list=producer_op_list)\n    744 \n    745     # Restores all the other collections.\n\n/home/caomanhdat/.local/lib/python2.7/site-packages/tensorflow/python/util/deprecation.pyc in new_func(*args, **kwargs)\n    430                 'in a future version' if date is None else ('after %s' % date),\n    431                 instructions)\n--&gt; 432       return func(*args, **kwargs)\n    433     return tf_decorator.make_decorator(func, new_func, 'deprecated',\n    434                                        _add_deprecated_arg_notice_to_docstring(\n\n/home/caomanhdat/.local/lib/python2.7/site-packages/tensorflow/python/framework/importer.pyc in import_graph_def(graph_def, input_map, return_elements, name, op_dict, producer_op_list)\n    458   if producer_op_list is not None:\n    459     # TODO(skyewm): make a copy of graph_def so we're not mutating the argument?\n--&gt; 460     _RemoveDefaultAttrs(op_dict, producer_op_list, graph_def)\n    461 \n    462   graph = ops.get_default_graph()\n\n/home/caomanhdat/.local/lib/python2.7/site-packages/tensorflow/python/framework/importer.pyc in _RemoveDefaultAttrs(op_dict, producer_op_list, graph_def)\n    225     # Remove any default attr values that aren't in op_def.\n    226     if node.op in producer_op_dict:\n--&gt; 227       op_def = op_dict[node.op]\n    228       producer_op_def = producer_op_dict[node.op]\n    229       # We make a copy of node.attr to iterate through since we may modify\n\nKeyError: u'LSTMBlockCell'\n</code></pre>", "body_text": "I got the same issue when tried to load a trained model of PTB Rnn\nTensorflow-gpu - 1.8.0\nThe code used for loading model\nwith tf.Session() as sess:\n  new_saver = tf.train.import_meta_graph('./trained_model/model.ckpt-24672.meta')\n  new_saver.restore(sess, tf.train.latest_checkpoint('./trained_model'))\n\nError log\n---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\n<ipython-input-3-63da410a664c> in <module>()\n      1 with tf.Session() as sess:\n----> 2   new_saver = tf.train.import_meta_graph('./trained_model/model.ckpt-24672.meta')\n      3   new_saver.restore(sess, tf.train.latest_checkpoint('./trained_model'))\n\n/home/caomanhdat/.local/lib/python2.7/site-packages/tensorflow/python/training/saver.pyc in import_meta_graph(meta_graph_or_file, clear_devices, import_scope, **kwargs)\n   1953       clear_devices=clear_devices,\n   1954       import_scope=import_scope,\n-> 1955       **kwargs)\n   1956 \n   1957   if meta_graph_def.HasField(\"saver_def\"):\n\n/home/caomanhdat/.local/lib/python2.7/site-packages/tensorflow/python/framework/meta_graph.pyc in import_scoped_meta_graph(meta_graph_or_file, clear_devices, graph, import_scope, input_map, unbound_inputs_col_name, restore_collections_predicate)\n    741         name=(import_scope or scope_to_prepend_to_names),\n    742         input_map=input_map,\n--> 743         producer_op_list=producer_op_list)\n    744 \n    745     # Restores all the other collections.\n\n/home/caomanhdat/.local/lib/python2.7/site-packages/tensorflow/python/util/deprecation.pyc in new_func(*args, **kwargs)\n    430                 'in a future version' if date is None else ('after %s' % date),\n    431                 instructions)\n--> 432       return func(*args, **kwargs)\n    433     return tf_decorator.make_decorator(func, new_func, 'deprecated',\n    434                                        _add_deprecated_arg_notice_to_docstring(\n\n/home/caomanhdat/.local/lib/python2.7/site-packages/tensorflow/python/framework/importer.pyc in import_graph_def(graph_def, input_map, return_elements, name, op_dict, producer_op_list)\n    458   if producer_op_list is not None:\n    459     # TODO(skyewm): make a copy of graph_def so we're not mutating the argument?\n--> 460     _RemoveDefaultAttrs(op_dict, producer_op_list, graph_def)\n    461 \n    462   graph = ops.get_default_graph()\n\n/home/caomanhdat/.local/lib/python2.7/site-packages/tensorflow/python/framework/importer.pyc in _RemoveDefaultAttrs(op_dict, producer_op_list, graph_def)\n    225     # Remove any default attr values that aren't in op_def.\n    226     if node.op in producer_op_dict:\n--> 227       op_def = op_dict[node.op]\n    228       producer_op_def = producer_op_dict[node.op]\n    229       # We make a copy of node.attr to iterate through since we may modify\n\nKeyError: u'LSTMBlockCell'", "body": "I got the same issue when tried to load a trained model of [PTB Rnn](https://github.com/tensorflow/models/tree/master/tutorials/rnn/ptb)\r\n\r\nTensorflow-gpu - 1.8.0\r\nThe code used for loading model\r\n```\r\nwith tf.Session() as sess:\r\n  new_saver = tf.train.import_meta_graph('./trained_model/model.ckpt-24672.meta')\r\n  new_saver.restore(sess, tf.train.latest_checkpoint('./trained_model'))\r\n```\r\n\r\nError log\r\n```\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\n<ipython-input-3-63da410a664c> in <module>()\r\n      1 with tf.Session() as sess:\r\n----> 2   new_saver = tf.train.import_meta_graph('./trained_model/model.ckpt-24672.meta')\r\n      3   new_saver.restore(sess, tf.train.latest_checkpoint('./trained_model'))\r\n\r\n/home/caomanhdat/.local/lib/python2.7/site-packages/tensorflow/python/training/saver.pyc in import_meta_graph(meta_graph_or_file, clear_devices, import_scope, **kwargs)\r\n   1953       clear_devices=clear_devices,\r\n   1954       import_scope=import_scope,\r\n-> 1955       **kwargs)\r\n   1956 \r\n   1957   if meta_graph_def.HasField(\"saver_def\"):\r\n\r\n/home/caomanhdat/.local/lib/python2.7/site-packages/tensorflow/python/framework/meta_graph.pyc in import_scoped_meta_graph(meta_graph_or_file, clear_devices, graph, import_scope, input_map, unbound_inputs_col_name, restore_collections_predicate)\r\n    741         name=(import_scope or scope_to_prepend_to_names),\r\n    742         input_map=input_map,\r\n--> 743         producer_op_list=producer_op_list)\r\n    744 \r\n    745     # Restores all the other collections.\r\n\r\n/home/caomanhdat/.local/lib/python2.7/site-packages/tensorflow/python/util/deprecation.pyc in new_func(*args, **kwargs)\r\n    430                 'in a future version' if date is None else ('after %s' % date),\r\n    431                 instructions)\r\n--> 432       return func(*args, **kwargs)\r\n    433     return tf_decorator.make_decorator(func, new_func, 'deprecated',\r\n    434                                        _add_deprecated_arg_notice_to_docstring(\r\n\r\n/home/caomanhdat/.local/lib/python2.7/site-packages/tensorflow/python/framework/importer.pyc in import_graph_def(graph_def, input_map, return_elements, name, op_dict, producer_op_list)\r\n    458   if producer_op_list is not None:\r\n    459     # TODO(skyewm): make a copy of graph_def so we're not mutating the argument?\r\n--> 460     _RemoveDefaultAttrs(op_dict, producer_op_list, graph_def)\r\n    461 \r\n    462   graph = ops.get_default_graph()\r\n\r\n/home/caomanhdat/.local/lib/python2.7/site-packages/tensorflow/python/framework/importer.pyc in _RemoveDefaultAttrs(op_dict, producer_op_list, graph_def)\r\n    225     # Remove any default attr values that aren't in op_def.\r\n    226     if node.op in producer_op_dict:\r\n--> 227       op_def = op_dict[node.op]\r\n    228       producer_op_def = producer_op_dict[node.op]\r\n    229       # We make a copy of node.attr to iterate through since we may modify\r\n\r\nKeyError: u'LSTMBlockCell'\r\n```"}