{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/422956901", "html_url": "https://github.com/tensorflow/tensorflow/issues/22326#issuecomment-422956901", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22326", "id": 422956901, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjk1NjkwMQ==", "user": {"login": "nvcastet", "id": 26874160, "node_id": "MDQ6VXNlcjI2ODc0MTYw", "avatar_url": "https://avatars2.githubusercontent.com/u/26874160?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nvcastet", "html_url": "https://github.com/nvcastet", "followers_url": "https://api.github.com/users/nvcastet/followers", "following_url": "https://api.github.com/users/nvcastet/following{/other_user}", "gists_url": "https://api.github.com/users/nvcastet/gists{/gist_id}", "starred_url": "https://api.github.com/users/nvcastet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nvcastet/subscriptions", "organizations_url": "https://api.github.com/users/nvcastet/orgs", "repos_url": "https://api.github.com/users/nvcastet/repos", "events_url": "https://api.github.com/users/nvcastet/events{/privacy}", "received_events_url": "https://api.github.com/users/nvcastet/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-19T21:00:47Z", "updated_at": "2018-09-19T21:00:47Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1647833\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yuefengz\">@yuefengz</a> : In the code line you referred in your last comment, what about replacing<br>\n<code>collective_instance_key = self._collective_keys.get_instance_key(key_id=kwargs[\"name\"])</code> with <code>collective_instance_key = self._collective_keys.get_instance_key()</code>? In this case, we get a different id for each new variable. Also, each replica of the same variable inside a worker still gets the same key because in the following code we loop over the devices using same key.</p>", "body_text": "@yuefengz : In the code line you referred in your last comment, what about replacing\ncollective_instance_key = self._collective_keys.get_instance_key(key_id=kwargs[\"name\"]) with collective_instance_key = self._collective_keys.get_instance_key()? In this case, we get a different id for each new variable. Also, each replica of the same variable inside a worker still gets the same key because in the following code we loop over the devices using same key.", "body": "@yuefengz : In the code line you referred in your last comment, what about replacing\r\n`collective_instance_key = self._collective_keys.get_instance_key(key_id=kwargs[\"name\"])` with `collective_instance_key = self._collective_keys.get_instance_key()`? In this case, we get a different id for each new variable. Also, each replica of the same variable inside a worker still gets the same key because in the following code we loop over the devices using same key."}