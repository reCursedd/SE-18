{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17095", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17095/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17095/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17095/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17095", "id": 298014176, "node_id": "MDU6SXNzdWUyOTgwMTQxNzY=", "number": 17095, "title": "tensorflow_self_check.py needs updates for CUD 9.0 to look for cudnn64_7.dll", "user": {"login": "jrbrearley", "id": 32575796, "node_id": "MDQ6VXNlcjMyNTc1Nzk2", "avatar_url": "https://avatars2.githubusercontent.com/u/32575796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrbrearley", "html_url": "https://github.com/jrbrearley", "followers_url": "https://api.github.com/users/jrbrearley/followers", "following_url": "https://api.github.com/users/jrbrearley/following{/other_user}", "gists_url": "https://api.github.com/users/jrbrearley/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrbrearley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrbrearley/subscriptions", "organizations_url": "https://api.github.com/users/jrbrearley/orgs", "repos_url": "https://api.github.com/users/jrbrearley/repos", "events_url": "https://api.github.com/users/jrbrearley/events{/privacy}", "received_events_url": "https://api.github.com/users/jrbrearley/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-17T15:52:54Z", "updated_at": "2018-03-09T16:38:43Z", "closed_at": "2018-03-09T16:38:43Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Win 7</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: pip.exe install --upgrade tensorflow-gpu</li>\n<li><strong>TensorFlow version (use command below)</strong>:  b'unknown' '1.5.0'</li>\n<li><strong>Python version</strong>: 3.6.4</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: 9.0</li>\n<li><strong>GPU model and memory</strong>: NVIDIA GeForce GTX 660</li>\n<li><strong>Exact command to reproduce</strong>:tensorflow_self_check.py</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>The current tensorflow_self_check.py script needs updates for CUDA 9.0 for use with tensorflow 1.5.0.</p>\n<p>I followed the script error messages and suggestions and removed CUDA 9.0 and installed the older CUDA 8.0 and the requisite cudnn64_6.dll. The script told me that I had all the required .dll, but tensorflow was still not working and to go file a bug report.</p>\n<p>When I manually did \"import tensorflow\" and followed the detailed error messages, I realized that tensorflow 1.5.0 really does support CUDA 9.0 and really does want cudnn64_7.dll, see below.</p>\n<p>ImportError: Could not find 'cudnn64_7.dll'. TensorFlow requires that this DLL be installed in a directory that is named in your %PATH% environment variable. Note that installing cuDNN is a separate step from installing CUDA, and this DLL is often found in a different directory from the CUDA DLLs. You may install the necessary DLL by downloading cuDNN 7 from this URL: <a href=\"https://developer.nvidia.com/cudnn\" rel=\"nofollow\">https://developer.nvidia.com/cudnn</a></p>\n<p>With CUD 9.0 and cudnn64_7.dll installed, tensorflow 1.5.0 is working, GPU is enabled. The tensorflow_self_check.py needs an update to look for cudnn64_7.dll. Maybe also get rid of code that looks for older dll versions?</p>\n<h3>Source code / logs</h3>\n<p>N/A</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Win 7\nTensorFlow installed from (source or binary): pip.exe install --upgrade tensorflow-gpu\nTensorFlow version (use command below):  b'unknown' '1.5.0'\nPython version: 3.6.4\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: 9.0\nGPU model and memory: NVIDIA GeForce GTX 660\nExact command to reproduce:tensorflow_self_check.py\n\nDescribe the problem\nThe current tensorflow_self_check.py script needs updates for CUDA 9.0 for use with tensorflow 1.5.0.\nI followed the script error messages and suggestions and removed CUDA 9.0 and installed the older CUDA 8.0 and the requisite cudnn64_6.dll. The script told me that I had all the required .dll, but tensorflow was still not working and to go file a bug report.\nWhen I manually did \"import tensorflow\" and followed the detailed error messages, I realized that tensorflow 1.5.0 really does support CUDA 9.0 and really does want cudnn64_7.dll, see below.\nImportError: Could not find 'cudnn64_7.dll'. TensorFlow requires that this DLL be installed in a directory that is named in your %PATH% environment variable. Note that installing cuDNN is a separate step from installing CUDA, and this DLL is often found in a different directory from the CUDA DLLs. You may install the necessary DLL by downloading cuDNN 7 from this URL: https://developer.nvidia.com/cudnn\nWith CUD 9.0 and cudnn64_7.dll installed, tensorflow 1.5.0 is working, GPU is enabled. The tensorflow_self_check.py needs an update to look for cudnn64_7.dll. Maybe also get rid of code that looks for older dll versions?\nSource code / logs\nN/A", "body": "\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Win 7\r\n- **TensorFlow installed from (source or binary)**: pip.exe install --upgrade tensorflow-gpu\r\n- **TensorFlow version (use command below)**:  b'unknown' '1.5.0'\r\n- **Python version**: 3.6.4\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: 9.0\r\n- **GPU model and memory**: NVIDIA GeForce GTX 660\r\n- **Exact command to reproduce**:tensorflow_self_check.py\r\n\r\n### Describe the problem\r\nThe current tensorflow_self_check.py script needs updates for CUDA 9.0 for use with tensorflow 1.5.0. \r\n\r\nI followed the script error messages and suggestions and removed CUDA 9.0 and installed the older CUDA 8.0 and the requisite cudnn64_6.dll. The script told me that I had all the required .dll, but tensorflow was still not working and to go file a bug report.\r\n\r\nWhen I manually did \"import tensorflow\" and followed the detailed error messages, I realized that tensorflow 1.5.0 really does support CUDA 9.0 and really does want cudnn64_7.dll, see below.\r\n\r\nImportError: Could not find 'cudnn64_7.dll'. TensorFlow requires that this DLL be installed in a directory that is named in your %PATH% environment variable. Note that installing cuDNN is a separate step from installing CUDA, and this DLL is often found in a different directory from the CUDA DLLs. You may install the necessary DLL by downloading cuDNN 7 from this URL: https://developer.nvidia.com/cudnn\r\n\r\nWith CUD 9.0 and cudnn64_7.dll installed, tensorflow 1.5.0 is working, GPU is enabled. The tensorflow_self_check.py needs an update to look for cudnn64_7.dll. Maybe also get rid of code that looks for older dll versions?\r\n\r\n### Source code / logs\r\nN/A\r\n"}