{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20157", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20157/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20157/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20157/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20157", "id": 334225597, "node_id": "MDU6SXNzdWUzMzQyMjU1OTc=", "number": 20157, "title": "TensorRT integration doesn't optimize conv2d_transpose", "user": {"login": "qinyao-he", "id": 6523975, "node_id": "MDQ6VXNlcjY1MjM5NzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6523975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qinyao-he", "html_url": "https://github.com/qinyao-he", "followers_url": "https://api.github.com/users/qinyao-he/followers", "following_url": "https://api.github.com/users/qinyao-he/following{/other_user}", "gists_url": "https://api.github.com/users/qinyao-he/gists{/gist_id}", "starred_url": "https://api.github.com/users/qinyao-he/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qinyao-he/subscriptions", "organizations_url": "https://api.github.com/users/qinyao-he/orgs", "repos_url": "https://api.github.com/users/qinyao-he/repos", "events_url": "https://api.github.com/users/qinyao-he/events{/privacy}", "received_events_url": "https://api.github.com/users/qinyao-he/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "smit-hinsu", "id": 1990079, "node_id": "MDQ6VXNlcjE5OTAwNzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1990079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smit-hinsu", "html_url": "https://github.com/smit-hinsu", "followers_url": "https://api.github.com/users/smit-hinsu/followers", "following_url": "https://api.github.com/users/smit-hinsu/following{/other_user}", "gists_url": "https://api.github.com/users/smit-hinsu/gists{/gist_id}", "starred_url": "https://api.github.com/users/smit-hinsu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smit-hinsu/subscriptions", "organizations_url": "https://api.github.com/users/smit-hinsu/orgs", "repos_url": "https://api.github.com/users/smit-hinsu/repos", "events_url": "https://api.github.com/users/smit-hinsu/events{/privacy}", "received_events_url": "https://api.github.com/users/smit-hinsu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "smit-hinsu", "id": 1990079, "node_id": "MDQ6VXNlcjE5OTAwNzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1990079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smit-hinsu", "html_url": "https://github.com/smit-hinsu", "followers_url": "https://api.github.com/users/smit-hinsu/followers", "following_url": "https://api.github.com/users/smit-hinsu/following{/other_user}", "gists_url": "https://api.github.com/users/smit-hinsu/gists{/gist_id}", "starred_url": "https://api.github.com/users/smit-hinsu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smit-hinsu/subscriptions", "organizations_url": "https://api.github.com/users/smit-hinsu/orgs", "repos_url": "https://api.github.com/users/smit-hinsu/repos", "events_url": "https://api.github.com/users/smit-hinsu/events{/privacy}", "received_events_url": "https://api.github.com/users/smit-hinsu/received_events", "type": "User", "site_admin": false}, {"login": "aaroey", "id": 31743510, "node_id": "MDQ6VXNlcjMxNzQzNTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/31743510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaroey", "html_url": "https://github.com/aaroey", "followers_url": "https://api.github.com/users/aaroey/followers", "following_url": "https://api.github.com/users/aaroey/following{/other_user}", "gists_url": "https://api.github.com/users/aaroey/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaroey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaroey/subscriptions", "organizations_url": "https://api.github.com/users/aaroey/orgs", "repos_url": "https://api.github.com/users/aaroey/repos", "events_url": "https://api.github.com/users/aaroey/events{/privacy}", "received_events_url": "https://api.github.com/users/aaroey/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 23, "created_at": "2018-06-20T19:52:35Z", "updated_at": "2018-11-14T05:30:11Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nYes.</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nUbuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\nSource. Build toward TensorRT 3.0.4.</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\n1.7</li>\n<li><strong>Python version</strong>:<br>\n2.7.12</li>\n<li><strong>Bazel version (if compiling from source)</strong>:<br>\n0.11.1</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:<br>\n5.4.0</li>\n<li><strong>CUDA/cuDNN version</strong>:<br>\nCUDA 9.0, cuDNN 7.1.4</li>\n<li><strong>GPU model and memory</strong>:<br>\nNVIDIA 1080 Ti</li>\n<li><strong>Exact command to reproduce</strong>:<br>\nFirst train a example model use <a href=\"https://gist.github.com/qinyao-he/573254f8e225a09114b7408cc1c984aa\">mnist_conv_deconv.py</a><br>\nThen use tensorflow built-in tools to freeze the graph:</li>\n</ul>\n<pre><code>python -m tensorflow.python.tools.freeze_graph --input_graph log/graph.pbtxt --input_checkpoint log/model.ckpt-20000 --output_node_names L2Loss --output_graph log/freeze_graph.pb\n</code></pre>\n<p>Finally use <a href=\"https://gist.github.com/qinyao-he/28ddedb7f561bb3cb4ba880833f14a89\">tensorrt.py</a> to optimize the graph use TensorRT engine.</p>\n<h3>Describe the problem</h3>\n<p>The original graph contains 4 convolution and 4 deconvolution layers.<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/6523975/41680987-1e912d1e-7488-11e8-8a25-6f8e112cc2e6.png\"><img width=\"179\" alt=\"snipaste_2018-06-20_12-39-15\" src=\"https://user-images.githubusercontent.com/6523975/41680987-1e912d1e-7488-11e8-8a25-6f8e112cc2e6.png\" style=\"max-width:100%;\"></a></p>\n<p>After optimizing, convolution layers was converted into trt_op (successfully optimized by TensorRT), while all deconvolution layers (conv2d_transpose) remains unchanged.<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/6523975/41681041-4bba6a08-7488-11e8-970c-2773fedea98a.png\"><img width=\"244\" alt=\"snipaste_2018-06-20_12-39-46\" src=\"https://user-images.githubusercontent.com/6523975/41681041-4bba6a08-7488-11e8-970c-2773fedea98a.png\" style=\"max-width:100%;\"></a></p>\n<p>I think TensorRT support deconvolution as shown in their official guide <a href=\"https://docs.nvidia.com/deeplearning/sdk/tensorrt-developer-guide/index.html\" rel=\"nofollow\">TensorRT Developer Guide</a></p>\n<blockquote>\n<p>TensorFlow<br>\nThe following list describes the operations that are supported in a TensorFlow framework.<br>\nPlaceholder<br>\nConst<br>\nAdd, Sub, Mul, Div, Minimum and Maximum<br>\nBiasAdd<br>\nNegative, Abs, Sqrt, Rsqrt, Pow, Exp and Log<br>\nFusedBatchNorm<br>\nReLU, TanH, Sigmoid<br>\nSoftMax<br>\nMean<br>\nConcatV2<br>\nReshape<br>\nTranspose<br>\nConv2D<br>\nDepthwiseConv2dNative<br>\nConvTranspose2D<br>\nMaxPool<br>\nAvgPool<br>\nPad is supported if followed by one of these TensorFlow layers: Conv2D, DepthwiseConv2dNative, MaxPool, and AvgPool</p>\n</blockquote>\n<p>So is there any problem in tensorflow integrations?</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nYes.\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nUbuntu 16.04\nTensorFlow installed from (source or binary):\nSource. Build toward TensorRT 3.0.4.\nTensorFlow version (use command below):\n1.7\nPython version:\n2.7.12\nBazel version (if compiling from source):\n0.11.1\nGCC/Compiler version (if compiling from source):\n5.4.0\nCUDA/cuDNN version:\nCUDA 9.0, cuDNN 7.1.4\nGPU model and memory:\nNVIDIA 1080 Ti\nExact command to reproduce:\nFirst train a example model use mnist_conv_deconv.py\nThen use tensorflow built-in tools to freeze the graph:\n\npython -m tensorflow.python.tools.freeze_graph --input_graph log/graph.pbtxt --input_checkpoint log/model.ckpt-20000 --output_node_names L2Loss --output_graph log/freeze_graph.pb\n\nFinally use tensorrt.py to optimize the graph use TensorRT engine.\nDescribe the problem\nThe original graph contains 4 convolution and 4 deconvolution layers.\n\nAfter optimizing, convolution layers was converted into trt_op (successfully optimized by TensorRT), while all deconvolution layers (conv2d_transpose) remains unchanged.\n\nI think TensorRT support deconvolution as shown in their official guide TensorRT Developer Guide\n\nTensorFlow\nThe following list describes the operations that are supported in a TensorFlow framework.\nPlaceholder\nConst\nAdd, Sub, Mul, Div, Minimum and Maximum\nBiasAdd\nNegative, Abs, Sqrt, Rsqrt, Pow, Exp and Log\nFusedBatchNorm\nReLU, TanH, Sigmoid\nSoftMax\nMean\nConcatV2\nReshape\nTranspose\nConv2D\nDepthwiseConv2dNative\nConvTranspose2D\nMaxPool\nAvgPool\nPad is supported if followed by one of these TensorFlow layers: Conv2D, DepthwiseConv2dNative, MaxPool, and AvgPool\n\nSo is there any problem in tensorflow integrations?", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nUbuntu 16.04\r\n- **TensorFlow installed from (source or binary)**:\r\nSource. Build toward TensorRT 3.0.4.\r\n- **TensorFlow version (use command below)**:\r\n1.7\r\n- **Python version**: \r\n2.7.12\r\n- **Bazel version (if compiling from source)**:\r\n0.11.1\r\n- **GCC/Compiler version (if compiling from source)**:\r\n5.4.0\r\n- **CUDA/cuDNN version**:\r\nCUDA 9.0, cuDNN 7.1.4\r\n- **GPU model and memory**:\r\nNVIDIA 1080 Ti\r\n- **Exact command to reproduce**:\r\nFirst train a example model use [mnist_conv_deconv.py](https://gist.github.com/qinyao-he/573254f8e225a09114b7408cc1c984aa)\r\nThen use tensorflow built-in tools to freeze the graph:\r\n```\r\npython -m tensorflow.python.tools.freeze_graph --input_graph log/graph.pbtxt --input_checkpoint log/model.ckpt-20000 --output_node_names L2Loss --output_graph log/freeze_graph.pb\r\n```\r\nFinally use [tensorrt.py](https://gist.github.com/qinyao-he/28ddedb7f561bb3cb4ba880833f14a89) to optimize the graph use TensorRT engine.\r\n\r\n### Describe the problem\r\nThe original graph contains 4 convolution and 4 deconvolution layers.\r\n<img width=\"179\" alt=\"snipaste_2018-06-20_12-39-15\" src=\"https://user-images.githubusercontent.com/6523975/41680987-1e912d1e-7488-11e8-8a25-6f8e112cc2e6.png\">\r\n\r\nAfter optimizing, convolution layers was converted into trt_op (successfully optimized by TensorRT), while all deconvolution layers (conv2d_transpose) remains unchanged.\r\n<img width=\"244\" alt=\"snipaste_2018-06-20_12-39-46\" src=\"https://user-images.githubusercontent.com/6523975/41681041-4bba6a08-7488-11e8-970c-2773fedea98a.png\">\r\n\r\nI think TensorRT support deconvolution as shown in their official guide [TensorRT Developer Guide](https://docs.nvidia.com/deeplearning/sdk/tensorrt-developer-guide/index.html)\r\n\r\n> TensorFlow\r\n> The following list describes the operations that are supported in a TensorFlow framework.\r\n> Placeholder\r\n> Const\r\n> Add, Sub, Mul, Div, Minimum and Maximum\r\n> BiasAdd\r\n> Negative, Abs, Sqrt, Rsqrt, Pow, Exp and Log\r\n> FusedBatchNorm\r\n> ReLU, TanH, Sigmoid\r\n> SoftMax\r\n> Mean\r\n> ConcatV2\r\n> Reshape\r\n> Transpose\r\n> Conv2D\r\n> DepthwiseConv2dNative\r\n> ConvTranspose2D\r\n> MaxPool\r\n> AvgPool\r\n> Pad is supported if followed by one of these TensorFlow layers: Conv2D, DepthwiseConv2dNative, MaxPool, and AvgPool\r\n\r\nSo is there any problem in tensorflow integrations?"}