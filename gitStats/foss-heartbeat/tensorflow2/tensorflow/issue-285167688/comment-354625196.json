{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/354625196", "html_url": "https://github.com/tensorflow/tensorflow/issues/15722#issuecomment-354625196", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15722", "id": 354625196, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDYyNTE5Ng==", "user": {"login": "ahundt", "id": 55744, "node_id": "MDQ6VXNlcjU1NzQ0", "avatar_url": "https://avatars1.githubusercontent.com/u/55744?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahundt", "html_url": "https://github.com/ahundt", "followers_url": "https://api.github.com/users/ahundt/followers", "following_url": "https://api.github.com/users/ahundt/following{/other_user}", "gists_url": "https://api.github.com/users/ahundt/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahundt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahundt/subscriptions", "organizations_url": "https://api.github.com/users/ahundt/orgs", "repos_url": "https://api.github.com/users/ahundt/repos", "events_url": "https://api.github.com/users/ahundt/events{/privacy}", "received_events_url": "https://api.github.com/users/ahundt/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-31T21:50:44Z", "updated_at": "2018-02-06T05:59:23Z", "author_association": "NONE", "body_html": "<p>I believe I've got it working, there isn't a bug, but the APIs were simply not clear about the preconditions and postconditions of each function. Here is a summary, please correct me if I misunderstood:</p>\n<p><a href=\"https://www.tensorflow.org/api_guides/python/image#Image_Adjustments\" rel=\"nofollow\">tf image adjustments guide</a> APIs:</p>\n<ol>\n<li>Given raw RGB image with values in the range <code>[0, 255]</code></li>\n<li>divide by 255, output values are in <code>[0, 1]</code> range.</li>\n<li>expected input range of the image augmentation functions is <code>[0, 1]</code>, they can be called at this point if training, skip otherwise</li>\n<li>subtract 0.5 from that output and multiply by 2 to get a range of <code>[-1, 1]</code></li>\n<li>The expected input range when you actually feed the data to the various pretrained neural networks in the model zoo is <code>[-1, 1]</code>.</li>\n</ol>\n<p>for <a href=\"https://github.com/keras-team/keras/blob/master/keras/applications/imagenet_utils.py#L72\">keras preprocess_input()</a> in <code>tf</code> mode:</p>\n<ol>\n<li>Input is a raw RGB 0-255 image and output is <code>[-1, 1]</code>\n<ul>\n<li>if it is inference time this can be fed directly to networks and in that case you are done.</li>\n</ul>\n</li>\n<li>If you wanted to utilize tf augmentation you must divide by 2 and add 0.5, to put values in <code>[0, 1]</code> range.</li>\n<li>apply the augmentation from <a href=\"https://www.tensorflow.org/api_guides/python/image#Image_Adjustments\" rel=\"nofollow\">tf image adjustments guide</a> APIs</li>\n<li>subtract 0.5 from that output and multiply by 2 to get a range of <code>[-1, 1]</code></li>\n<li>perform training step</li>\n</ol>\n<p>Perhaps this can be noted clearly in these APIs?</p>", "body_text": "I believe I've got it working, there isn't a bug, but the APIs were simply not clear about the preconditions and postconditions of each function. Here is a summary, please correct me if I misunderstood:\ntf image adjustments guide APIs:\n\nGiven raw RGB image with values in the range [0, 255]\ndivide by 255, output values are in [0, 1] range.\nexpected input range of the image augmentation functions is [0, 1], they can be called at this point if training, skip otherwise\nsubtract 0.5 from that output and multiply by 2 to get a range of [-1, 1]\nThe expected input range when you actually feed the data to the various pretrained neural networks in the model zoo is [-1, 1].\n\nfor keras preprocess_input() in tf mode:\n\nInput is a raw RGB 0-255 image and output is [-1, 1]\n\nif it is inference time this can be fed directly to networks and in that case you are done.\n\n\nIf you wanted to utilize tf augmentation you must divide by 2 and add 0.5, to put values in [0, 1] range.\napply the augmentation from tf image adjustments guide APIs\nsubtract 0.5 from that output and multiply by 2 to get a range of [-1, 1]\nperform training step\n\nPerhaps this can be noted clearly in these APIs?", "body": "I believe I've got it working, there isn't a bug, but the APIs were simply not clear about the preconditions and postconditions of each function. Here is a summary, please correct me if I misunderstood:\r\n\r\n[tf image adjustments guide](https://www.tensorflow.org/api_guides/python/image#Image_Adjustments) APIs:\r\n\r\n1. Given raw RGB image with values in the range `[0, 255]` \r\n2. divide by 255, output values are in `[0, 1]` range.\r\n3. expected input range of the image augmentation functions is `[0, 1]`, they can be called at this point if training, skip otherwise\r\n4. subtract 0.5 from that output and multiply by 2 to get a range of `[-1, 1]`\r\n5. The expected input range when you actually feed the data to the various pretrained neural networks in the model zoo is `[-1, 1]`.\r\n\r\nfor [keras preprocess_input()](https://github.com/keras-team/keras/blob/master/keras/applications/imagenet_utils.py#L72) in `tf` mode:\r\n\r\n1. Input is a raw RGB 0-255 image and output is `[-1, 1]`\r\n    - if it is inference time this can be fed directly to networks and in that case you are done.\r\n2. If you wanted to utilize tf augmentation you must divide by 2 and add 0.5, to put values in `[0, 1]` range.\r\n3. apply the augmentation from [tf image adjustments guide](https://www.tensorflow.org/api_guides/python/image#Image_Adjustments) APIs\r\n4. subtract 0.5 from that output and multiply by 2 to get a range of `[-1, 1]`\r\n5. perform training step\r\n\r\n\r\nPerhaps this can be noted clearly in these APIs?"}