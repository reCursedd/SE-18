{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23698", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23698/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23698/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23698/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23698", "id": 380048116, "node_id": "MDU6SXNzdWUzODAwNDgxMTY=", "number": 23698, "title": "InvalidArgumentError: indices[26,0] = 5001 is not in [0, 5001)  ( at Training Error in Image Captioning with attention Google Colab)", "user": {"login": "AKI-github", "id": 16523781, "node_id": "MDQ6VXNlcjE2NTIzNzgx", "avatar_url": "https://avatars2.githubusercontent.com/u/16523781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AKI-github", "html_url": "https://github.com/AKI-github", "followers_url": "https://api.github.com/users/AKI-github/followers", "following_url": "https://api.github.com/users/AKI-github/following{/other_user}", "gists_url": "https://api.github.com/users/AKI-github/gists{/gist_id}", "starred_url": "https://api.github.com/users/AKI-github/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AKI-github/subscriptions", "organizations_url": "https://api.github.com/users/AKI-github/orgs", "repos_url": "https://api.github.com/users/AKI-github/repos", "events_url": "https://api.github.com/users/AKI-github/events{/privacy}", "received_events_url": "https://api.github.com/users/AKI-github/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1105108936, "node_id": "MDU6TGFiZWwxMTA1MTA4OTM2", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:model", "name": "comp:model", "color": "0052cc", "default": false}], "state": "open", "locked": false, "assignee": {"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-11-13T03:52:52Z", "updated_at": "2018-11-15T15:46:41Z", "closed_at": null, "author_association": "NONE", "body_html": "<p><em>Please make sure that this is a build/installation issue. As per our <a href=\"https://github.com/tensorflow/tensorflow/blob/master/ISSUES.md\">GitHub Policy</a>, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:build_template</em></p>\n<p><strong>System information</strong><br>\nGoogle Colab<br>\nimage_captioning_with_attention.ipynb</p>\n<p><strong>Describe the problem</strong><br>\nInvalidArgumentError: indices[26,0] = 5001 is not in [0, 5001)  in Training phase.</p>\n<p><strong>Provide the exact sequence of commands / steps that you executed before running into the problem</strong></p>\n<h2>This is all error message.</h2>\n<p>InvalidArgumentError                      Traceback (most recent call last)<br>\n in ()<br>\n19             for i in range(1, target.shape[1]):<br>\n20                 # passing the features through the decoder<br>\n---&gt; 21                 predictions, hidden, _ = decoder(dec_input, features, hidden)<br>\n22<br>\n23                 loss += loss_function(target[:, i], predictions)</p>\n<p>/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/base_layer.py in <strong>call</strong>(self, inputs, *args, **kwargs)<br>\n755       if not in_deferred_mode:<br>\n756         self._in_call = True<br>\n--&gt; 757         outputs = self.call(inputs, *args, **kwargs)<br>\n758         self._in_call = False<br>\n759         if outputs is None:</p>\n<p> in call(self, x, features, hidden)<br>\n16<br>\n17     # x shape after passing through embedding == (batch_size, 1, embedding_dim)<br>\n---&gt; 18     x = self.embedding(x)<br>\n19<br>\n20     # x shape after concatenation == (batch_size, 1, embedding_dim + hidden_size)</p>\n<p>/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/base_layer.py in <strong>call</strong>(self, inputs, *args, **kwargs)<br>\n755       if not in_deferred_mode:<br>\n756         self._in_call = True<br>\n--&gt; 757         outputs = self.call(inputs, *args, **kwargs)<br>\n758         self._in_call = False<br>\n759         if outputs is None:</p>\n<p>/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/layers/embeddings.py in call(self, inputs)<br>\n175     if dtype != 'int32' and dtype != 'int64':<br>\n176       inputs = math_ops.cast(inputs, 'int32')<br>\n--&gt; 177     out = embedding_ops.embedding_lookup(self.embeddings, inputs)<br>\n178     return out<br>\n179</p>\n<p>/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/embedding_ops.py in embedding_lookup(params, ids, partition_strategy, name, validate_indices, max_norm)<br>\n311       name=name,<br>\n312       max_norm=max_norm,<br>\n--&gt; 313       transform_fn=None)<br>\n314<br>\n315</p>\n<p>/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/embedding_ops.py in _embedding_lookup_and_transform(params, ids, partition_strategy, name, max_norm, transform_fn)<br>\n131     if np == 1 and (not transform_fn or ids.get_shape().ndims == 1):<br>\n132       with ops.colocate_with(params[0]):<br>\n--&gt; 133         result = _clip(array_ops.gather(params[0], ids, name=name),<br>\n134                        ids, max_norm)<br>\n135         if transform_fn:</p>\n<p>/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/array_ops.py in gather(<em><strong>failed resolving arguments</strong></em>)<br>\n2671     # TODO(apassos) find a less bad way of detecting resource variables without<br>\n2672     # introducing a circular dependency.<br>\n-&gt; 2673     return params.sparse_read(indices, name=name)<br>\n2674   except AttributeError:<br>\n2675     return gen_array_ops.gather_v2(params, indices, axis, name=name)</p>\n<p>/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/resource_variable_ops.py in sparse_read(self, indices, name)<br>\n756         tape.variable_accessed(self)<br>\n757       value = gen_resource_variable_ops.resource_gather(<br>\n--&gt; 758           self._handle, indices, dtype=self._dtype, name=name)<br>\n759     return array_ops.identity(value)<br>\n760</p>\n<p>/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/gen_resource_variable_ops.py in resource_gather(resource, indices, dtype, validate_indices, name)<br>\n611       else:<br>\n612         message = e.message<br>\n--&gt; 613       _six.raise_from(_core._status_to_exception(e.code, message), None)<br>\n614<br>\n615</p>\n<p>/usr/local/lib/python3.6/dist-packages/six.py in raise_from(value, from_value)</p>\n<p>InvalidArgumentError: indices[26,0] = 5001 is not in [0, 5001) [Op:ResourceGather] name: rnn__decoder/embedding/embedding_lookup/</p>", "body_text": "Please make sure that this is a build/installation issue. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:build_template\nSystem information\nGoogle Colab\nimage_captioning_with_attention.ipynb\nDescribe the problem\nInvalidArgumentError: indices[26,0] = 5001 is not in [0, 5001)  in Training phase.\nProvide the exact sequence of commands / steps that you executed before running into the problem\nThis is all error message.\nInvalidArgumentError                      Traceback (most recent call last)\n in ()\n19             for i in range(1, target.shape[1]):\n20                 # passing the features through the decoder\n---> 21                 predictions, hidden, _ = decoder(dec_input, features, hidden)\n22\n23                 loss += loss_function(target[:, i], predictions)\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/base_layer.py in call(self, inputs, *args, **kwargs)\n755       if not in_deferred_mode:\n756         self._in_call = True\n--> 757         outputs = self.call(inputs, *args, **kwargs)\n758         self._in_call = False\n759         if outputs is None:\n in call(self, x, features, hidden)\n16\n17     # x shape after passing through embedding == (batch_size, 1, embedding_dim)\n---> 18     x = self.embedding(x)\n19\n20     # x shape after concatenation == (batch_size, 1, embedding_dim + hidden_size)\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/base_layer.py in call(self, inputs, *args, **kwargs)\n755       if not in_deferred_mode:\n756         self._in_call = True\n--> 757         outputs = self.call(inputs, *args, **kwargs)\n758         self._in_call = False\n759         if outputs is None:\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/layers/embeddings.py in call(self, inputs)\n175     if dtype != 'int32' and dtype != 'int64':\n176       inputs = math_ops.cast(inputs, 'int32')\n--> 177     out = embedding_ops.embedding_lookup(self.embeddings, inputs)\n178     return out\n179\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/embedding_ops.py in embedding_lookup(params, ids, partition_strategy, name, validate_indices, max_norm)\n311       name=name,\n312       max_norm=max_norm,\n--> 313       transform_fn=None)\n314\n315\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/embedding_ops.py in _embedding_lookup_and_transform(params, ids, partition_strategy, name, max_norm, transform_fn)\n131     if np == 1 and (not transform_fn or ids.get_shape().ndims == 1):\n132       with ops.colocate_with(params[0]):\n--> 133         result = _clip(array_ops.gather(params[0], ids, name=name),\n134                        ids, max_norm)\n135         if transform_fn:\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/array_ops.py in gather(failed resolving arguments)\n2671     # TODO(apassos) find a less bad way of detecting resource variables without\n2672     # introducing a circular dependency.\n-> 2673     return params.sparse_read(indices, name=name)\n2674   except AttributeError:\n2675     return gen_array_ops.gather_v2(params, indices, axis, name=name)\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/resource_variable_ops.py in sparse_read(self, indices, name)\n756         tape.variable_accessed(self)\n757       value = gen_resource_variable_ops.resource_gather(\n--> 758           self._handle, indices, dtype=self._dtype, name=name)\n759     return array_ops.identity(value)\n760\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/gen_resource_variable_ops.py in resource_gather(resource, indices, dtype, validate_indices, name)\n611       else:\n612         message = e.message\n--> 613       _six.raise_from(_core._status_to_exception(e.code, message), None)\n614\n615\n/usr/local/lib/python3.6/dist-packages/six.py in raise_from(value, from_value)\nInvalidArgumentError: indices[26,0] = 5001 is not in [0, 5001) [Op:ResourceGather] name: rnn__decoder/embedding/embedding_lookup/", "body": "<em>Please make sure that this is a build/installation issue. As per our [GitHub Policy](https://github.com/tensorflow/tensorflow/blob/master/ISSUES.md), we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:build_template</em>\r\n\r\n**System information**\r\nGoogle Colab\r\nimage_captioning_with_attention.ipynb\r\n\r\n\r\n**Describe the problem**\r\nInvalidArgumentError: indices[26,0] = 5001 is not in [0, 5001)  in Training phase.\r\n\r\n**Provide the exact sequence of commands / steps that you executed before running into the problem**\r\n\r\nThis is all error message.\r\n---------------------------------------------------------------------------\r\nInvalidArgumentError                      Traceback (most recent call last)\r\n<ipython-input-30-03bc9960ded7> in <module>()\r\n     19             for i in range(1, target.shape[1]):\r\n     20                 # passing the features through the decoder\r\n---> 21                 predictions, hidden, _ = decoder(dec_input, features, hidden)\r\n     22 \r\n     23                 loss += loss_function(target[:, i], predictions)\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/base_layer.py in __call__(self, inputs, *args, **kwargs)\r\n    755       if not in_deferred_mode:\r\n    756         self._in_call = True\r\n--> 757         outputs = self.call(inputs, *args, **kwargs)\r\n    758         self._in_call = False\r\n    759         if outputs is None:\r\n\r\n<ipython-input-23-b844d20e3fc2> in call(self, x, features, hidden)\r\n     16 \r\n     17     # x shape after passing through embedding == (batch_size, 1, embedding_dim)\r\n---> 18     x = self.embedding(x)\r\n     19 \r\n     20     # x shape after concatenation == (batch_size, 1, embedding_dim + hidden_size)\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/base_layer.py in __call__(self, inputs, *args, **kwargs)\r\n    755       if not in_deferred_mode:\r\n    756         self._in_call = True\r\n--> 757         outputs = self.call(inputs, *args, **kwargs)\r\n    758         self._in_call = False\r\n    759         if outputs is None:\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/layers/embeddings.py in call(self, inputs)\r\n    175     if dtype != 'int32' and dtype != 'int64':\r\n    176       inputs = math_ops.cast(inputs, 'int32')\r\n--> 177     out = embedding_ops.embedding_lookup(self.embeddings, inputs)\r\n    178     return out\r\n    179 \r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/embedding_ops.py in embedding_lookup(params, ids, partition_strategy, name, validate_indices, max_norm)\r\n    311       name=name,\r\n    312       max_norm=max_norm,\r\n--> 313       transform_fn=None)\r\n    314 \r\n    315 \r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/embedding_ops.py in _embedding_lookup_and_transform(params, ids, partition_strategy, name, max_norm, transform_fn)\r\n    131     if np == 1 and (not transform_fn or ids.get_shape().ndims == 1):\r\n    132       with ops.colocate_with(params[0]):\r\n--> 133         result = _clip(array_ops.gather(params[0], ids, name=name),\r\n    134                        ids, max_norm)\r\n    135         if transform_fn:\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/array_ops.py in gather(***failed resolving arguments***)\r\n   2671     # TODO(apassos) find a less bad way of detecting resource variables without\r\n   2672     # introducing a circular dependency.\r\n-> 2673     return params.sparse_read(indices, name=name)\r\n   2674   except AttributeError:\r\n   2675     return gen_array_ops.gather_v2(params, indices, axis, name=name)\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/resource_variable_ops.py in sparse_read(self, indices, name)\r\n    756         tape.variable_accessed(self)\r\n    757       value = gen_resource_variable_ops.resource_gather(\r\n--> 758           self._handle, indices, dtype=self._dtype, name=name)\r\n    759     return array_ops.identity(value)\r\n    760 \r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/gen_resource_variable_ops.py in resource_gather(resource, indices, dtype, validate_indices, name)\r\n    611       else:\r\n    612         message = e.message\r\n--> 613       _six.raise_from(_core._status_to_exception(e.code, message), None)\r\n    614 \r\n    615 \r\n\r\n/usr/local/lib/python3.6/dist-packages/six.py in raise_from(value, from_value)\r\n\r\nInvalidArgumentError: indices[26,0] = 5001 is not in [0, 5001) [Op:ResourceGather] name: rnn__decoder/embedding/embedding_lookup/\r\n"}