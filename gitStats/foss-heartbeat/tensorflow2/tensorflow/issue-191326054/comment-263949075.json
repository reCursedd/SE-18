{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/263949075", "html_url": "https://github.com/tensorflow/tensorflow/pull/5813#issuecomment-263949075", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5813", "id": 263949075, "node_id": "MDEyOklzc3VlQ29tbWVudDI2Mzk0OTA3NQ==", "user": {"login": "Syndrome777", "id": 6788909, "node_id": "MDQ6VXNlcjY3ODg5MDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6788909?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Syndrome777", "html_url": "https://github.com/Syndrome777", "followers_url": "https://api.github.com/users/Syndrome777/followers", "following_url": "https://api.github.com/users/Syndrome777/following{/other_user}", "gists_url": "https://api.github.com/users/Syndrome777/gists{/gist_id}", "starred_url": "https://api.github.com/users/Syndrome777/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Syndrome777/subscriptions", "organizations_url": "https://api.github.com/users/Syndrome777/orgs", "repos_url": "https://api.github.com/users/Syndrome777/repos", "events_url": "https://api.github.com/users/Syndrome777/events{/privacy}", "received_events_url": "https://api.github.com/users/Syndrome777/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-30T18:10:45Z", "updated_at": "2016-11-30T18:14:00Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I'm so sorry that I don't have GPU now. But I have tested this PR in CPU locally. The tests of CPU are passed.<br>\nI read the test log and the failure is strange for this PR. The GPU test is okay at last time. So  is it possible that the error of <code>failed to allocate GPU memory</code> is caused by the new commit? In my opinion, this PR will not cause <code>shape_ops_test</code>'s error like below. Do you agree with me ?</p>\n<div class=\"highlight highlight-source-python\"><pre>  <span class=\"pl-k\">def</span> <span class=\"pl-en\">_compareShapeSparse</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">x_np</span>, <span class=\"pl-smi\">use_gpu</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>):\n    np_ans <span class=\"pl-k\">=</span> np.array(np.shape(x_np))\n    x_tf, unused_nnz <span class=\"pl-k\">=</span> _sparsify(x_np)\n    <span class=\"pl-k\">with</span> <span class=\"pl-c1\">self</span>.test_session(<span class=\"pl-v\">use_gpu</span><span class=\"pl-k\">=</span>use_gpu):\n      tf_ans <span class=\"pl-k\">=</span> tf.shape(x_tf)\n      result <span class=\"pl-k\">=</span> tf_ans.eval()\n    <span class=\"pl-c1\">self</span>.assertAllEqual(np_ans, result)\n    <span class=\"pl-c1\">self</span>.assertShapeEqual(np_ans, tf_ans)</pre></div>", "body_text": "I'm so sorry that I don't have GPU now. But I have tested this PR in CPU locally. The tests of CPU are passed.\nI read the test log and the failure is strange for this PR. The GPU test is okay at last time. So  is it possible that the error of failed to allocate GPU memory is caused by the new commit? In my opinion, this PR will not cause shape_ops_test's error like below. Do you agree with me ?\n  def _compareShapeSparse(self, x_np, use_gpu=False):\n    np_ans = np.array(np.shape(x_np))\n    x_tf, unused_nnz = _sparsify(x_np)\n    with self.test_session(use_gpu=use_gpu):\n      tf_ans = tf.shape(x_tf)\n      result = tf_ans.eval()\n    self.assertAllEqual(np_ans, result)\n    self.assertShapeEqual(np_ans, tf_ans)", "body": "I'm so sorry that I don't have GPU now. But I have tested this PR in CPU locally. The tests of CPU are passed.\r\nI read the test log and the failure is strange for this PR. The GPU test is okay at last time. So  is it possible that the error of `failed to allocate GPU memory` is caused by the new commit? In my opinion, this PR will not cause `shape_ops_test`'s error like below. Do you agree with me ? \r\n```python\r\n  def _compareShapeSparse(self, x_np, use_gpu=False):\r\n    np_ans = np.array(np.shape(x_np))\r\n    x_tf, unused_nnz = _sparsify(x_np)\r\n    with self.test_session(use_gpu=use_gpu):\r\n      tf_ans = tf.shape(x_tf)\r\n      result = tf_ans.eval()\r\n    self.assertAllEqual(np_ans, result)\r\n    self.assertShapeEqual(np_ans, tf_ans)\r\n```"}