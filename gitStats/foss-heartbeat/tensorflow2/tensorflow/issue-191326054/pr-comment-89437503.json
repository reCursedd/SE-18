{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/89437503", "pull_request_review_id": 9982575, "id": 89437503, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg5NDM3NTAz", "diff_hunk": "@@ -42,12 +42,13 @@\n from tensorflow.python.framework import ops\n from tensorflow.python.ops import array_ops\n from tensorflow.python.ops import variables\n+from tensorflow.python.ops import variable_scope\n \n \n def _create_slot_var(primary, val, scope):\n   \"\"\"Helper function for creating a slot variable.\"\"\"\n \n-  slot = variables.Variable(val, name=scope, trainable=False)\n+  slot = variable_scope.get_variable(scope, initializer=val, trainable=False)", "path": "tensorflow/python/training/slot_creator.py", "position": 11, "original_position": 11, "commit_id": "3cb6d632f5585e0ab093d4c2a0b3695f32c15557", "original_commit_id": "02ae644d249969447343429d220d7fc0f52b40aa", "user": {"login": "lukaszkaiser", "id": 684901, "node_id": "MDQ6VXNlcjY4NDkwMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/684901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukaszkaiser", "html_url": "https://github.com/lukaszkaiser", "followers_url": "https://api.github.com/users/lukaszkaiser/followers", "following_url": "https://api.github.com/users/lukaszkaiser/following{/other_user}", "gists_url": "https://api.github.com/users/lukaszkaiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukaszkaiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukaszkaiser/subscriptions", "organizations_url": "https://api.github.com/users/lukaszkaiser/orgs", "repos_url": "https://api.github.com/users/lukaszkaiser/repos", "events_url": "https://api.github.com/users/lukaszkaiser/events{/privacy}", "received_events_url": "https://api.github.com/users/lukaszkaiser/received_events", "type": "User", "site_admin": false}, "body": "After reading the explanation above, I have some worries that some people will be hit by this change, e.g., they will not be able to create 2 optimizers of the same kind because they'll get reuse errors.\r\n\r\nThat's an edge case, but I think it could be avoided by putting a variable scope with default name around this get_variable call. Is this called only from the method below? If so, then let's replace the current\r\n\"ops.name_scope(socpe_name + \"/\")\" with \"variable_scope.variable_scope(None, primary.op.name)\"\r\nand then use name instead of the joint scope_name.\r\n\r\nDoes this sound reasonable?", "created_at": "2016-11-24T05:30:34Z", "updated_at": "2016-12-01T03:46:45Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/5813#discussion_r89437503", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/5813", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/89437503"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/5813#discussion_r89437503"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/5813"}}, "body_html": "<p>After reading the explanation above, I have some worries that some people will be hit by this change, e.g., they will not be able to create 2 optimizers of the same kind because they'll get reuse errors.</p>\n<p>That's an edge case, but I think it could be avoided by putting a variable scope with default name around this get_variable call. Is this called only from the method below? If so, then let's replace the current<br>\n\"ops.name_scope(socpe_name + \"/\")\" with \"variable_scope.variable_scope(None, primary.op.name)\"<br>\nand then use name instead of the joint scope_name.</p>\n<p>Does this sound reasonable?</p>", "body_text": "After reading the explanation above, I have some worries that some people will be hit by this change, e.g., they will not be able to create 2 optimizers of the same kind because they'll get reuse errors.\nThat's an edge case, but I think it could be avoided by putting a variable scope with default name around this get_variable call. Is this called only from the method below? If so, then let's replace the current\n\"ops.name_scope(socpe_name + \"/\")\" with \"variable_scope.variable_scope(None, primary.op.name)\"\nand then use name instead of the joint scope_name.\nDoes this sound reasonable?"}