{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21121", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21121/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21121/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21121/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21121", "id": 344342397, "node_id": "MDU6SXNzdWUzNDQzNDIzOTc=", "number": 21121, "title": "add_to_collection does not update trainable attribute", "user": {"login": "godspeed1989", "id": 2350713, "node_id": "MDQ6VXNlcjIzNTA3MTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/2350713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/godspeed1989", "html_url": "https://github.com/godspeed1989", "followers_url": "https://api.github.com/users/godspeed1989/followers", "following_url": "https://api.github.com/users/godspeed1989/following{/other_user}", "gists_url": "https://api.github.com/users/godspeed1989/gists{/gist_id}", "starred_url": "https://api.github.com/users/godspeed1989/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/godspeed1989/subscriptions", "organizations_url": "https://api.github.com/users/godspeed1989/orgs", "repos_url": "https://api.github.com/users/godspeed1989/repos", "events_url": "https://api.github.com/users/godspeed1989/events{/privacy}", "received_events_url": "https://api.github.com/users/godspeed1989/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "michaelisard", "id": 5376757, "node_id": "MDQ6VXNlcjUzNzY3NTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5376757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelisard", "html_url": "https://github.com/michaelisard", "followers_url": "https://api.github.com/users/michaelisard/followers", "following_url": "https://api.github.com/users/michaelisard/following{/other_user}", "gists_url": "https://api.github.com/users/michaelisard/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelisard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelisard/subscriptions", "organizations_url": "https://api.github.com/users/michaelisard/orgs", "repos_url": "https://api.github.com/users/michaelisard/repos", "events_url": "https://api.github.com/users/michaelisard/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelisard/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "michaelisard", "id": 5376757, "node_id": "MDQ6VXNlcjUzNzY3NTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5376757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelisard", "html_url": "https://github.com/michaelisard", "followers_url": "https://api.github.com/users/michaelisard/followers", "following_url": "https://api.github.com/users/michaelisard/following{/other_user}", "gists_url": "https://api.github.com/users/michaelisard/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelisard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelisard/subscriptions", "organizations_url": "https://api.github.com/users/michaelisard/orgs", "repos_url": "https://api.github.com/users/michaelisard/repos", "events_url": "https://api.github.com/users/michaelisard/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelisard/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-07-25T08:26:34Z", "updated_at": "2018-07-26T16:03:01Z", "closed_at": "2018-07-26T16:03:00Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: yes</li>\n<li><strong>OS Platform and Distribution</strong>: ArchLinux</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>:1.9.0-2</li>\n<li><strong>Python version</strong>:3.6.6</li>\n<li><strong>CUDA/cuDNN version</strong>: 9.2.148-1 / 7.1.4-1</li>\n<li><strong>GPU model and memory</strong>: GTX 1080 Ti</li>\n<li><strong>Exact command to reproduce</strong>: python test.py</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Use <code>tf.add_to_collection</code> to add nontrainable variable to <code>tf.GraphKeys.TRAINABLE_VARIABLES</code> collection. The <code>trainable</code> attribute of variable is stiil False.</p>\n<h3>Source code / logs</h3>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\n<span class=\"pl-k\">with</span> tf.name_scope(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>some_scope1<span class=\"pl-pds\">'</span></span>):\n    a <span class=\"pl-k\">=</span> tf.Variable(<span class=\"pl-v\">initial_value</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>)\n    b <span class=\"pl-k\">=</span> tf.Variable(<span class=\"pl-v\">initial_value</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">2</span>, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>b<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">trainable</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>)\n    c <span class=\"pl-k\">=</span> tf.Variable(<span class=\"pl-v\">initial_value</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">3</span>, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>c<span class=\"pl-pds\">'</span></span>)\n\n<span class=\"pl-k\">with</span> tf.name_scope(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>some_scope2<span class=\"pl-pds\">'</span></span>):\n    d <span class=\"pl-k\">=</span> tf.Variable(<span class=\"pl-v\">initial_value</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">4</span>, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>d<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">trainable</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>)\n    e <span class=\"pl-k\">=</span> tf.Variable(<span class=\"pl-v\">initial_value</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">5</span>, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>e<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">trainable</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>)\n    f <span class=\"pl-k\">=</span> tf.Variable(<span class=\"pl-v\">initial_value</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">6</span>, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>f<span class=\"pl-pds\">'</span></span>)\n\nh <span class=\"pl-k\">=</span> tf.Variable(<span class=\"pl-v\">initial_value</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">8</span>, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>h<span class=\"pl-pds\">'</span></span>)\n\n<span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>-------GLOBAL_VARIABLES-------<span class=\"pl-pds\">'</span></span>)\n<span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> tf.get_collection(tf.GraphKeys.<span class=\"pl-c1\">GLOBAL_VARIABLES</span>, <span class=\"pl-v\">scope</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>some_scope<span class=\"pl-pds\">'</span></span>):\n    <span class=\"pl-c1\">print</span>(i.name, i)   <span class=\"pl-c\"><span class=\"pl-c\">#</span> i.name if you want just a name</span>\n\n<span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>-------TRAINABLE_VARIABLES 1-------<span class=\"pl-pds\">'</span></span>)\n<span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> tf.get_collection(tf.GraphKeys.<span class=\"pl-c1\">TRAINABLE_VARIABLES</span>, <span class=\"pl-v\">scope</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>some_scope<span class=\"pl-pds\">'</span></span>):\n    <span class=\"pl-c1\">print</span>(i.name, i)   <span class=\"pl-c\"><span class=\"pl-c\">#</span> i.name if you want just a name</span>\n\n<span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>-------Set ALL to Trainable------<span class=\"pl-pds\">'</span></span>)\n<span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> tf.get_collection(tf.GraphKeys.<span class=\"pl-c1\">GLOBAL_VARIABLES</span>, <span class=\"pl-v\">scope</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>some_scope<span class=\"pl-pds\">'</span></span>):\n    tf.add_to_collection(tf.GraphKeys.<span class=\"pl-c1\">TRAINABLE_VARIABLES</span>, i)\n\n<span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>-------TRAINABLE_VARIABLES 2-------<span class=\"pl-pds\">'</span></span>)\n<span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> tf.get_collection(tf.GraphKeys.<span class=\"pl-c1\">TRAINABLE_VARIABLES</span>, <span class=\"pl-v\">scope</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>some_scope<span class=\"pl-pds\">'</span></span>):\n    <span class=\"pl-c1\">print</span>(i.name, i, i.trainable)   <span class=\"pl-c\"><span class=\"pl-c\">#</span> i.name if you want just a name</span>\n\n<span class=\"pl-s\"><span class=\"pl-pds\">'''</span></span>\n<span class=\"pl-s\">-------GLOBAL_VARIABLES-------</span>\n<span class=\"pl-s\">some_scope1/a:0 &lt;tf.Variable 'some_scope1/a:0' shape=() dtype=int32_ref&gt;</span>\n<span class=\"pl-s\">some_scope1/b:0 &lt;tf.Variable 'some_scope1/b:0' shape=() dtype=int32_ref&gt;</span>\n<span class=\"pl-s\">some_scope1/c:0 &lt;tf.Variable 'some_scope1/c:0' shape=() dtype=int32_ref&gt;</span>\n<span class=\"pl-s\">some_scope2/d:0 &lt;tf.Variable 'some_scope2/d:0' shape=() dtype=int32_ref&gt;</span>\n<span class=\"pl-s\">some_scope2/e:0 &lt;tf.Variable 'some_scope2/e:0' shape=() dtype=int32_ref&gt;</span>\n<span class=\"pl-s\">some_scope2/f:0 &lt;tf.Variable 'some_scope2/f:0' shape=() dtype=int32_ref&gt;</span>\n<span class=\"pl-s\">-------TRAINABLE_VARIABLES 1-------</span>\n<span class=\"pl-s\">some_scope1/a:0 &lt;tf.Variable 'some_scope1/a:0' shape=() dtype=int32_ref&gt;</span>\n<span class=\"pl-s\">some_scope1/c:0 &lt;tf.Variable 'some_scope1/c:0' shape=() dtype=int32_ref&gt;</span>\n<span class=\"pl-s\">some_scope2/f:0 &lt;tf.Variable 'some_scope2/f:0' shape=() dtype=int32_ref&gt;</span>\n<span class=\"pl-s\">-------Set ALL to Trainable------</span>\n<span class=\"pl-s\">-------TRAINABLE_VARIABLES 2-------</span>\n<span class=\"pl-s\">some_scope1/a:0 &lt;tf.Variable 'some_scope1/a:0' shape=() dtype=int32_ref&gt; True</span>\n<span class=\"pl-s\">some_scope1/c:0 &lt;tf.Variable 'some_scope1/c:0' shape=() dtype=int32_ref&gt; True</span>\n<span class=\"pl-s\">some_scope2/f:0 &lt;tf.Variable 'some_scope2/f:0' shape=() dtype=int32_ref&gt; True</span>\n<span class=\"pl-s\">some_scope1/a:0 &lt;tf.Variable 'some_scope1/a:0' shape=() dtype=int32_ref&gt; True</span>\n<span class=\"pl-s\">some_scope1/b:0 &lt;tf.Variable 'some_scope1/b:0' shape=() dtype=int32_ref&gt; False</span>\n<span class=\"pl-s\">some_scope1/c:0 &lt;tf.Variable 'some_scope1/c:0' shape=() dtype=int32_ref&gt; True</span>\n<span class=\"pl-s\">some_scope2/d:0 &lt;tf.Variable 'some_scope2/d:0' shape=() dtype=int32_ref&gt; False</span>\n<span class=\"pl-s\">some_scope2/e:0 &lt;tf.Variable 'some_scope2/e:0' shape=() dtype=int32_ref&gt; False</span>\n<span class=\"pl-s\">some_scope2/f:0 &lt;tf.Variable 'some_scope2/f:0' shape=() dtype=int32_ref&gt; True</span>\n<span class=\"pl-s\"><span class=\"pl-pds\">'''</span></span></pre></div>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\nOS Platform and Distribution: ArchLinux\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below):1.9.0-2\nPython version:3.6.6\nCUDA/cuDNN version: 9.2.148-1 / 7.1.4-1\nGPU model and memory: GTX 1080 Ti\nExact command to reproduce: python test.py\n\nDescribe the problem\nUse tf.add_to_collection to add nontrainable variable to tf.GraphKeys.TRAINABLE_VARIABLES collection. The trainable attribute of variable is stiil False.\nSource code / logs\nimport tensorflow as tf\n\nwith tf.name_scope('some_scope1'):\n    a = tf.Variable(initial_value=1, name='a')\n    b = tf.Variable(initial_value=2, name='b', trainable=False)\n    c = tf.Variable(initial_value=3, name='c')\n\nwith tf.name_scope('some_scope2'):\n    d = tf.Variable(initial_value=4, name='d', trainable=False)\n    e = tf.Variable(initial_value=5, name='e', trainable=False)\n    f = tf.Variable(initial_value=6, name='f')\n\nh = tf.Variable(initial_value=8, name='h')\n\nprint('-------GLOBAL_VARIABLES-------')\nfor i in tf.get_collection(tf.GraphKeys.GLOBAL_VARIABLES, scope='some_scope'):\n    print(i.name, i)   # i.name if you want just a name\n\nprint('-------TRAINABLE_VARIABLES 1-------')\nfor i in tf.get_collection(tf.GraphKeys.TRAINABLE_VARIABLES, scope='some_scope'):\n    print(i.name, i)   # i.name if you want just a name\n\nprint('-------Set ALL to Trainable------')\nfor i in tf.get_collection(tf.GraphKeys.GLOBAL_VARIABLES, scope='some_scope'):\n    tf.add_to_collection(tf.GraphKeys.TRAINABLE_VARIABLES, i)\n\nprint('-------TRAINABLE_VARIABLES 2-------')\nfor i in tf.get_collection(tf.GraphKeys.TRAINABLE_VARIABLES, scope='some_scope'):\n    print(i.name, i, i.trainable)   # i.name if you want just a name\n\n'''\n-------GLOBAL_VARIABLES-------\nsome_scope1/a:0 <tf.Variable 'some_scope1/a:0' shape=() dtype=int32_ref>\nsome_scope1/b:0 <tf.Variable 'some_scope1/b:0' shape=() dtype=int32_ref>\nsome_scope1/c:0 <tf.Variable 'some_scope1/c:0' shape=() dtype=int32_ref>\nsome_scope2/d:0 <tf.Variable 'some_scope2/d:0' shape=() dtype=int32_ref>\nsome_scope2/e:0 <tf.Variable 'some_scope2/e:0' shape=() dtype=int32_ref>\nsome_scope2/f:0 <tf.Variable 'some_scope2/f:0' shape=() dtype=int32_ref>\n-------TRAINABLE_VARIABLES 1-------\nsome_scope1/a:0 <tf.Variable 'some_scope1/a:0' shape=() dtype=int32_ref>\nsome_scope1/c:0 <tf.Variable 'some_scope1/c:0' shape=() dtype=int32_ref>\nsome_scope2/f:0 <tf.Variable 'some_scope2/f:0' shape=() dtype=int32_ref>\n-------Set ALL to Trainable------\n-------TRAINABLE_VARIABLES 2-------\nsome_scope1/a:0 <tf.Variable 'some_scope1/a:0' shape=() dtype=int32_ref> True\nsome_scope1/c:0 <tf.Variable 'some_scope1/c:0' shape=() dtype=int32_ref> True\nsome_scope2/f:0 <tf.Variable 'some_scope2/f:0' shape=() dtype=int32_ref> True\nsome_scope1/a:0 <tf.Variable 'some_scope1/a:0' shape=() dtype=int32_ref> True\nsome_scope1/b:0 <tf.Variable 'some_scope1/b:0' shape=() dtype=int32_ref> False\nsome_scope1/c:0 <tf.Variable 'some_scope1/c:0' shape=() dtype=int32_ref> True\nsome_scope2/d:0 <tf.Variable 'some_scope2/d:0' shape=() dtype=int32_ref> False\nsome_scope2/e:0 <tf.Variable 'some_scope2/e:0' shape=() dtype=int32_ref> False\nsome_scope2/f:0 <tf.Variable 'some_scope2/f:0' shape=() dtype=int32_ref> True\n'''", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution**: ArchLinux\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**:1.9.0-2\r\n- **Python version**:3.6.6\r\n- **CUDA/cuDNN version**: 9.2.148-1 / 7.1.4-1\r\n- **GPU model and memory**: GTX 1080 Ti\r\n- **Exact command to reproduce**: python test.py\r\n\r\n### Describe the problem\r\nUse `tf.add_to_collection` to add nontrainable variable to `tf.GraphKeys.TRAINABLE_VARIABLES` collection. The `trainable` attribute of variable is stiil False.\r\n\r\n\r\n### Source code / logs\r\n```python\r\nimport tensorflow as tf\r\n\r\nwith tf.name_scope('some_scope1'):\r\n    a = tf.Variable(initial_value=1, name='a')\r\n    b = tf.Variable(initial_value=2, name='b', trainable=False)\r\n    c = tf.Variable(initial_value=3, name='c')\r\n\r\nwith tf.name_scope('some_scope2'):\r\n    d = tf.Variable(initial_value=4, name='d', trainable=False)\r\n    e = tf.Variable(initial_value=5, name='e', trainable=False)\r\n    f = tf.Variable(initial_value=6, name='f')\r\n\r\nh = tf.Variable(initial_value=8, name='h')\r\n\r\nprint('-------GLOBAL_VARIABLES-------')\r\nfor i in tf.get_collection(tf.GraphKeys.GLOBAL_VARIABLES, scope='some_scope'):\r\n    print(i.name, i)   # i.name if you want just a name\r\n\r\nprint('-------TRAINABLE_VARIABLES 1-------')\r\nfor i in tf.get_collection(tf.GraphKeys.TRAINABLE_VARIABLES, scope='some_scope'):\r\n    print(i.name, i)   # i.name if you want just a name\r\n\r\nprint('-------Set ALL to Trainable------')\r\nfor i in tf.get_collection(tf.GraphKeys.GLOBAL_VARIABLES, scope='some_scope'):\r\n    tf.add_to_collection(tf.GraphKeys.TRAINABLE_VARIABLES, i)\r\n\r\nprint('-------TRAINABLE_VARIABLES 2-------')\r\nfor i in tf.get_collection(tf.GraphKeys.TRAINABLE_VARIABLES, scope='some_scope'):\r\n    print(i.name, i, i.trainable)   # i.name if you want just a name\r\n\r\n'''\r\n-------GLOBAL_VARIABLES-------\r\nsome_scope1/a:0 <tf.Variable 'some_scope1/a:0' shape=() dtype=int32_ref>\r\nsome_scope1/b:0 <tf.Variable 'some_scope1/b:0' shape=() dtype=int32_ref>\r\nsome_scope1/c:0 <tf.Variable 'some_scope1/c:0' shape=() dtype=int32_ref>\r\nsome_scope2/d:0 <tf.Variable 'some_scope2/d:0' shape=() dtype=int32_ref>\r\nsome_scope2/e:0 <tf.Variable 'some_scope2/e:0' shape=() dtype=int32_ref>\r\nsome_scope2/f:0 <tf.Variable 'some_scope2/f:0' shape=() dtype=int32_ref>\r\n-------TRAINABLE_VARIABLES 1-------\r\nsome_scope1/a:0 <tf.Variable 'some_scope1/a:0' shape=() dtype=int32_ref>\r\nsome_scope1/c:0 <tf.Variable 'some_scope1/c:0' shape=() dtype=int32_ref>\r\nsome_scope2/f:0 <tf.Variable 'some_scope2/f:0' shape=() dtype=int32_ref>\r\n-------Set ALL to Trainable------\r\n-------TRAINABLE_VARIABLES 2-------\r\nsome_scope1/a:0 <tf.Variable 'some_scope1/a:0' shape=() dtype=int32_ref> True\r\nsome_scope1/c:0 <tf.Variable 'some_scope1/c:0' shape=() dtype=int32_ref> True\r\nsome_scope2/f:0 <tf.Variable 'some_scope2/f:0' shape=() dtype=int32_ref> True\r\nsome_scope1/a:0 <tf.Variable 'some_scope1/a:0' shape=() dtype=int32_ref> True\r\nsome_scope1/b:0 <tf.Variable 'some_scope1/b:0' shape=() dtype=int32_ref> False\r\nsome_scope1/c:0 <tf.Variable 'some_scope1/c:0' shape=() dtype=int32_ref> True\r\nsome_scope2/d:0 <tf.Variable 'some_scope2/d:0' shape=() dtype=int32_ref> False\r\nsome_scope2/e:0 <tf.Variable 'some_scope2/e:0' shape=() dtype=int32_ref> False\r\nsome_scope2/f:0 <tf.Variable 'some_scope2/f:0' shape=() dtype=int32_ref> True\r\n'''\r\n```"}