{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/240522258", "html_url": "https://github.com/tensorflow/tensorflow/issues/3879#issuecomment-240522258", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3879", "id": 240522258, "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDUyMjI1OA==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2016-08-17T19:34:51Z", "updated_at": "2016-08-17T19:34:51Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Which version are you using?</p>\n<p>I'm running 0.10rc0 and the output is always the same. \"tf.constant\" got<br>\nrefactored between 0.9 and 0.10, maybe that's related</p>\n<p>[0, 101, 101]<br>\n[0, 202, 202]<br>\n[0, 203, 203]<br>\n[0, 204, 204]<br>\n[0, 304, 304]<br>\n[0, 405, 405]<br>\n[0, 506, 506]<br>\n[0, 607, 607]<br>\n[0, 708, 708]<br>\n[0, 709, 709]</p>\n<p>On Wed, Aug 17, 2016 at 11:51 AM, danfei <a href=\"mailto:notifications@github.com\">notifications@github.com</a> wrote:</p>\n<blockquote>\n<p>Consider the following code:</p>\n<p>import tensorflow as tf</p>\n<p>with tf.variable_scope('a'):<br>\na = tf.get_variable('v', [], initializer=tf.constant_initializer(0),<br>\ndtype=tf.int32)<br>\na_assign = a.assign(a+100)</p>\n<p>with tf.variable_scope('a', reuse=True):<br>\nb = tf.get_variable('v', [], initializer=tf.constant_initializer(0),<br>\ndtype=tf.int32)<br>\nb_assign = b.assign(b+1)</p>\n<p>with tf.control_dependencies([a_assign, b_assign]):<br>\nc = tf.constant(0)</p>\n<p>sess = tf.InteractiveSession()<br>\nsess.run(tf.initialize_all_variables())<br>\nprint(sess.run([c, a, b]))</p>\n<p>I expected this piece of code to return [0, 101, 101], but instead it<br>\nreturns [0, 100, 100].</p>\n<p>When I run the \"print(sess.run([c, a, b]))\" line 10 times, the outputs are:</p>\n<p>[0, 100, 100]<br>\n[0, 200, 200]<br>\n[0, 201, 201]<br>\n[0, 202, 202]<br>\n[0, 303, 303]<br>\n[0, 403, 403]<br>\n[0, 404, 404]<br>\n[0, 405, 405]<br>\n[0, 406, 406]<br>\n[0, 506, 506]</p>\n<p>Then I re-ran the program again and the outputs are:</p>\n<p>[0, 1, 1]<br>\n[0, 2, 2]<br>\n[0, 3, 3]<br>\n[0, 4, 4]<br>\n[0, 5, 5]<br>\n[0, 6, 6]<br>\n[0, 7, 7]<br>\n[0, 8, 8]<br>\n[0, 108, 108]<br>\n[0, 208, 208]</p>\n<p>So it seems like in this case tf.control_dependencies randomly executes<br>\neither a_assign or b_assign and not both at each sess.run. Could anyone<br>\nexplain this behavior?<br>\nEnvironment info</p>\n<p>Operating System:<br>\nUbuntu 14.04<br>\nInstalled version of CUDA and cuDNN:<br>\n-rw-r--r-- 1 root root 189170 Jun 6 15:17 /usr/local/cuda/lib/<br>\nlibcudadevrt.a<br>\nlrwxrwxrwx 1 root root 16 Jun 6 15:17 /usr/local/cuda/lib/libcudart.so -&gt;<br>\nlibcudart.so.7.5<br>\nlrwxrwxrwx 1 root root 19 Jun 6 15:17 /usr/local/cuda/lib/libcudart.so.7.5<br>\n-&gt; libcudart.so.7.5.18<br>\n-rwxr-xr-x 1 root root 311596 Jun 6 15:17 /usr/local/cuda/lib/libcudart.<br>\nso.7.5.18<br>\n-rw-r--r-- 1 root root 558020 Jun 6 15:17 /usr/local/cuda/lib/libcudart_<br>\nstatic.a</p>\n<p>TensorFlow version 0.9.0</p>\n<p>\u2014<br>\nYou are receiving this because you are subscribed to this thread.<br>\nReply to this email directly, view it on GitHub<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"171732525\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/3879\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/3879/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/3879\">#3879</a>, or mute the thread<br>\n<a href=\"https://github.com/notifications/unsubscribe-auth/AABaHMmMcEEJiav2UuQ4F0s8hEJE5kVtks5qg1hFgaJpZM4JmxLT\">https://github.com/notifications/unsubscribe-auth/AABaHMmMcEEJiav2UuQ4F0s8hEJE5kVtks5qg1hFgaJpZM4JmxLT</a><br>\n.</p>\n</blockquote>", "body_text": "Which version are you using?\nI'm running 0.10rc0 and the output is always the same. \"tf.constant\" got\nrefactored between 0.9 and 0.10, maybe that's related\n[0, 101, 101]\n[0, 202, 202]\n[0, 203, 203]\n[0, 204, 204]\n[0, 304, 304]\n[0, 405, 405]\n[0, 506, 506]\n[0, 607, 607]\n[0, 708, 708]\n[0, 709, 709]\nOn Wed, Aug 17, 2016 at 11:51 AM, danfei notifications@github.com wrote:\n\nConsider the following code:\nimport tensorflow as tf\nwith tf.variable_scope('a'):\na = tf.get_variable('v', [], initializer=tf.constant_initializer(0),\ndtype=tf.int32)\na_assign = a.assign(a+100)\nwith tf.variable_scope('a', reuse=True):\nb = tf.get_variable('v', [], initializer=tf.constant_initializer(0),\ndtype=tf.int32)\nb_assign = b.assign(b+1)\nwith tf.control_dependencies([a_assign, b_assign]):\nc = tf.constant(0)\nsess = tf.InteractiveSession()\nsess.run(tf.initialize_all_variables())\nprint(sess.run([c, a, b]))\nI expected this piece of code to return [0, 101, 101], but instead it\nreturns [0, 100, 100].\nWhen I run the \"print(sess.run([c, a, b]))\" line 10 times, the outputs are:\n[0, 100, 100]\n[0, 200, 200]\n[0, 201, 201]\n[0, 202, 202]\n[0, 303, 303]\n[0, 403, 403]\n[0, 404, 404]\n[0, 405, 405]\n[0, 406, 406]\n[0, 506, 506]\nThen I re-ran the program again and the outputs are:\n[0, 1, 1]\n[0, 2, 2]\n[0, 3, 3]\n[0, 4, 4]\n[0, 5, 5]\n[0, 6, 6]\n[0, 7, 7]\n[0, 8, 8]\n[0, 108, 108]\n[0, 208, 208]\nSo it seems like in this case tf.control_dependencies randomly executes\neither a_assign or b_assign and not both at each sess.run. Could anyone\nexplain this behavior?\nEnvironment info\nOperating System:\nUbuntu 14.04\nInstalled version of CUDA and cuDNN:\n-rw-r--r-- 1 root root 189170 Jun 6 15:17 /usr/local/cuda/lib/\nlibcudadevrt.a\nlrwxrwxrwx 1 root root 16 Jun 6 15:17 /usr/local/cuda/lib/libcudart.so ->\nlibcudart.so.7.5\nlrwxrwxrwx 1 root root 19 Jun 6 15:17 /usr/local/cuda/lib/libcudart.so.7.5\n-> libcudart.so.7.5.18\n-rwxr-xr-x 1 root root 311596 Jun 6 15:17 /usr/local/cuda/lib/libcudart.\nso.7.5.18\n-rw-r--r-- 1 root root 558020 Jun 6 15:17 /usr/local/cuda/lib/libcudart_\nstatic.a\nTensorFlow version 0.9.0\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\n#3879, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AABaHMmMcEEJiav2UuQ4F0s8hEJE5kVtks5qg1hFgaJpZM4JmxLT\n.", "body": "Which version are you using?\n\nI'm running 0.10rc0 and the output is always the same. \"tf.constant\" got\nrefactored between 0.9 and 0.10, maybe that's related\n\n[0, 101, 101]\n[0, 202, 202]\n[0, 203, 203]\n[0, 204, 204]\n[0, 304, 304]\n[0, 405, 405]\n[0, 506, 506]\n[0, 607, 607]\n[0, 708, 708]\n[0, 709, 709]\n\nOn Wed, Aug 17, 2016 at 11:51 AM, danfei notifications@github.com wrote:\n\n> Consider the following code:\n> \n> import tensorflow as tf\n> \n> with tf.variable_scope('a'):\n> a = tf.get_variable('v', [], initializer=tf.constant_initializer(0),\n> dtype=tf.int32)\n> a_assign = a.assign(a+100)\n> \n> with tf.variable_scope('a', reuse=True):\n> b = tf.get_variable('v', [], initializer=tf.constant_initializer(0),\n> dtype=tf.int32)\n> b_assign = b.assign(b+1)\n> \n> with tf.control_dependencies([a_assign, b_assign]):\n> c = tf.constant(0)\n> \n> sess = tf.InteractiveSession()\n> sess.run(tf.initialize_all_variables())\n> print(sess.run([c, a, b]))\n> \n> I expected this piece of code to return [0, 101, 101], but instead it\n> returns [0, 100, 100].\n> \n> When I run the \"print(sess.run([c, a, b]))\" line 10 times, the outputs are:\n> \n> [0, 100, 100]\n> [0, 200, 200]\n> [0, 201, 201]\n> [0, 202, 202]\n> [0, 303, 303]\n> [0, 403, 403]\n> [0, 404, 404]\n> [0, 405, 405]\n> [0, 406, 406]\n> [0, 506, 506]\n> \n> Then I re-ran the program again and the outputs are:\n> \n> [0, 1, 1]\n> [0, 2, 2]\n> [0, 3, 3]\n> [0, 4, 4]\n> [0, 5, 5]\n> [0, 6, 6]\n> [0, 7, 7]\n> [0, 8, 8]\n> [0, 108, 108]\n> [0, 208, 208]\n> \n> So it seems like in this case tf.control_dependencies randomly executes\n> either a_assign or b_assign and not both at each sess.run. Could anyone\n> explain this behavior?\n> Environment info\n> \n> Operating System:\n> Ubuntu 14.04\n> Installed version of CUDA and cuDNN:\n> -rw-r--r-- 1 root root 189170 Jun 6 15:17 /usr/local/cuda/lib/\n> libcudadevrt.a\n> lrwxrwxrwx 1 root root 16 Jun 6 15:17 /usr/local/cuda/lib/libcudart.so ->\n> libcudart.so.7.5\n> lrwxrwxrwx 1 root root 19 Jun 6 15:17 /usr/local/cuda/lib/libcudart.so.7.5\n> -> libcudart.so.7.5.18\n> -rwxr-xr-x 1 root root 311596 Jun 6 15:17 /usr/local/cuda/lib/libcudart.\n> so.7.5.18\n> -rw-r--r-- 1 root root 558020 Jun 6 15:17 /usr/local/cuda/lib/libcudart_\n> static.a\n> \n> TensorFlow version 0.9.0\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/tensorflow/tensorflow/issues/3879, or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AABaHMmMcEEJiav2UuQ4F0s8hEJE5kVtks5qg1hFgaJpZM4JmxLT\n> .\n"}