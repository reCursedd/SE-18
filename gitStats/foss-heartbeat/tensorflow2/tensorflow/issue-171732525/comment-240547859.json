{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/240547859", "html_url": "https://github.com/tensorflow/tensorflow/issues/3879#issuecomment-240547859", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3879", "id": 240547859, "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDU0Nzg1OQ==", "user": {"login": "danfeiX", "id": 5679196, "node_id": "MDQ6VXNlcjU2NzkxOTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/5679196?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danfeiX", "html_url": "https://github.com/danfeiX", "followers_url": "https://api.github.com/users/danfeiX/followers", "following_url": "https://api.github.com/users/danfeiX/following{/other_user}", "gists_url": "https://api.github.com/users/danfeiX/gists{/gist_id}", "starred_url": "https://api.github.com/users/danfeiX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danfeiX/subscriptions", "organizations_url": "https://api.github.com/users/danfeiX/orgs", "repos_url": "https://api.github.com/users/danfeiX/repos", "events_url": "https://api.github.com/users/danfeiX/events{/privacy}", "received_events_url": "https://api.github.com/users/danfeiX/received_events", "type": "User", "site_admin": false}, "created_at": "2016-08-17T21:04:34Z", "updated_at": "2016-08-17T21:12:13Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=23068\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yaroslavvb\">@yaroslavvb</a> Thanks!</p>\n<p>I tried both 0.9 and 0.10. The behavior still persists.<br>\na.py:</p>\n<pre><code>import tensorflow as tf\nprint(tf.__version__)\n\nwith tf.variable_scope('a'):\n    a = tf.get_variable('v', [], initializer=tf.constant_initializer(0), dtype=tf.int32)\n    a_assign = a.assign(a+100)\n\nwith tf.variable_scope('a', reuse=True):\n    b = tf.get_variable('v', [], initializer=tf.constant_initializer(0), dtype=tf.int32)\n    b_assign = b.assign(b+1)\n\nwith tf.control_dependencies([a_assign, b_assign]):\n    c = tf.constant(0)\n\nsess = tf.InteractiveSession()\nsess.run(tf.initialize_all_variables())\nfor _ in range(10):\n    print(sess.run([c, a, b]))\n</code></pre>\n<p>$ python a.py</p>\n<p>0.10.0rc0<br>\n[0, 1, 1]<br>\n[0, 2, 2]<br>\n[0, 3, 3]<br>\n[0, 103, 103]<br>\n[0, 203, 203]<br>\n[0, 204, 204]<br>\n[0, 305, 305]<br>\n[0, 405, 405]<br>\n[0, 406, 406]<br>\n[0, 506, 506]</p>\n<p>$ python a.py</p>\n<p>0.10.0rc0<br>\n[0, 100, 100]<br>\n[0, 201, 201]<br>\n[0, 302, 302]<br>\n[0, 303, 303]<br>\n[0, 304, 304]<br>\n[0, 305, 305]<br>\n[0, 306, 306]<br>\n[0, 406, 406]<br>\n[0, 407, 407]<br>\n[0, 507, 507]</p>\n<p>Also, shouldn't it always execute a_assign and b_assign at each sess.run? It seems like your output also shows that tf.control_dependencies randomly picks a_assign, b_assign, or both.</p>", "body_text": "@yaroslavvb Thanks!\nI tried both 0.9 and 0.10. The behavior still persists.\na.py:\nimport tensorflow as tf\nprint(tf.__version__)\n\nwith tf.variable_scope('a'):\n    a = tf.get_variable('v', [], initializer=tf.constant_initializer(0), dtype=tf.int32)\n    a_assign = a.assign(a+100)\n\nwith tf.variable_scope('a', reuse=True):\n    b = tf.get_variable('v', [], initializer=tf.constant_initializer(0), dtype=tf.int32)\n    b_assign = b.assign(b+1)\n\nwith tf.control_dependencies([a_assign, b_assign]):\n    c = tf.constant(0)\n\nsess = tf.InteractiveSession()\nsess.run(tf.initialize_all_variables())\nfor _ in range(10):\n    print(sess.run([c, a, b]))\n\n$ python a.py\n0.10.0rc0\n[0, 1, 1]\n[0, 2, 2]\n[0, 3, 3]\n[0, 103, 103]\n[0, 203, 203]\n[0, 204, 204]\n[0, 305, 305]\n[0, 405, 405]\n[0, 406, 406]\n[0, 506, 506]\n$ python a.py\n0.10.0rc0\n[0, 100, 100]\n[0, 201, 201]\n[0, 302, 302]\n[0, 303, 303]\n[0, 304, 304]\n[0, 305, 305]\n[0, 306, 306]\n[0, 406, 406]\n[0, 407, 407]\n[0, 507, 507]\nAlso, shouldn't it always execute a_assign and b_assign at each sess.run? It seems like your output also shows that tf.control_dependencies randomly picks a_assign, b_assign, or both.", "body": "@yaroslavvb Thanks!\n\nI tried both 0.9 and 0.10. The behavior still persists. \na.py:\n\n```\nimport tensorflow as tf\nprint(tf.__version__)\n\nwith tf.variable_scope('a'):\n    a = tf.get_variable('v', [], initializer=tf.constant_initializer(0), dtype=tf.int32)\n    a_assign = a.assign(a+100)\n\nwith tf.variable_scope('a', reuse=True):\n    b = tf.get_variable('v', [], initializer=tf.constant_initializer(0), dtype=tf.int32)\n    b_assign = b.assign(b+1)\n\nwith tf.control_dependencies([a_assign, b_assign]):\n    c = tf.constant(0)\n\nsess = tf.InteractiveSession()\nsess.run(tf.initialize_all_variables())\nfor _ in range(10):\n    print(sess.run([c, a, b]))\n```\n\n$ python a.py\n\n0.10.0rc0\n[0, 1, 1]\n[0, 2, 2]\n[0, 3, 3]\n[0, 103, 103]\n[0, 203, 203]\n[0, 204, 204]\n[0, 305, 305]\n[0, 405, 405]\n[0, 406, 406]\n[0, 506, 506]\n\n$ python a.py\n\n0.10.0rc0\n[0, 100, 100]\n[0, 201, 201]\n[0, 302, 302]\n[0, 303, 303]\n[0, 304, 304]\n[0, 305, 305]\n[0, 306, 306]\n[0, 406, 406]\n[0, 407, 407]\n[0, 507, 507]\n\nAlso, shouldn't it always execute a_assign and b_assign at each sess.run? It seems like your output also shows that tf.control_dependencies randomly picks a_assign, b_assign, or both.\n"}