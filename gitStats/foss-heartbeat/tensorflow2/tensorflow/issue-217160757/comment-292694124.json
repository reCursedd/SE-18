{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/292694124", "html_url": "https://github.com/tensorflow/tensorflow/issues/8744#issuecomment-292694124", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8744", "id": 292694124, "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjY5NDEyNA==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-08T04:27:32Z", "updated_at": "2017-04-08T04:27:32Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I haven't read the paper in depth, but from a quick skim of the paper you could implement the update rule as a <code>tf.train.Optimizer</code> subclass, and the asynchronous execution would be provided by whatever training loop the user used. (It would presumably \"work\" in a synchronous case as well, because <em>w<sub>t</sub></em> \u2013 <em>w<sub>bak</sub></em> would be zero, and hence it would devolve into classic SGD.)</p>", "body_text": "I haven't read the paper in depth, but from a quick skim of the paper you could implement the update rule as a tf.train.Optimizer subclass, and the asynchronous execution would be provided by whatever training loop the user used. (It would presumably \"work\" in a synchronous case as well, because wt \u2013 wbak would be zero, and hence it would devolve into classic SGD.)", "body": "I haven't read the paper in depth, but from a quick skim of the paper you could implement the update rule as a `tf.train.Optimizer` subclass, and the asynchronous execution would be provided by whatever training loop the user used. (It would presumably \"work\" in a synchronous case as well, because *w<sub>t</sub>* &ndash; *w<sub>bak</sub>* would be zero, and hence it would devolve into classic SGD.)"}