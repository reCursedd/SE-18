{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/332113622", "html_url": "https://github.com/tensorflow/tensorflow/issues/12453#issuecomment-332113622", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12453", "id": 332113622, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjExMzYyMg==", "user": {"login": "lipixun", "id": 12741165, "node_id": "MDQ6VXNlcjEyNzQxMTY1", "avatar_url": "https://avatars0.githubusercontent.com/u/12741165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lipixun", "html_url": "https://github.com/lipixun", "followers_url": "https://api.github.com/users/lipixun/followers", "following_url": "https://api.github.com/users/lipixun/following{/other_user}", "gists_url": "https://api.github.com/users/lipixun/gists{/gist_id}", "starred_url": "https://api.github.com/users/lipixun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lipixun/subscriptions", "organizations_url": "https://api.github.com/users/lipixun/orgs", "repos_url": "https://api.github.com/users/lipixun/repos", "events_url": "https://api.github.com/users/lipixun/events{/privacy}", "received_events_url": "https://api.github.com/users/lipixun/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-26T07:41:09Z", "updated_at": "2017-09-26T07:41:09Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13562803\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ilya-edrenkin\">@ilya-edrenkin</a> Ooops, no. My fault, I didn't read the above codes carefully. Applying<code>reduce_sum</code> instead of <code>reduce_mean</code> to masked loss values can avoid <code>nan</code> error.</p>", "body_text": "@ilya-edrenkin Ooops, no. My fault, I didn't read the above codes carefully. Applyingreduce_sum instead of reduce_mean to masked loss values can avoid nan error.", "body": "@ilya-edrenkin Ooops, no. My fault, I didn't read the above codes carefully. Applying`reduce_sum` instead of `reduce_mean` to masked loss values can avoid `nan` error.\r\n"}