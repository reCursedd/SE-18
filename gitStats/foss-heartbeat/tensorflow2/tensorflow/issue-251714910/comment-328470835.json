{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/328470835", "html_url": "https://github.com/tensorflow/tensorflow/issues/12453#issuecomment-328470835", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12453", "id": 328470835, "node_id": "MDEyOklzc3VlQ29tbWVudDMyODQ3MDgzNQ==", "user": {"login": "ilya-edrenkin", "id": 13562803, "node_id": "MDQ6VXNlcjEzNTYyODAz", "avatar_url": "https://avatars2.githubusercontent.com/u/13562803?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilya-edrenkin", "html_url": "https://github.com/ilya-edrenkin", "followers_url": "https://api.github.com/users/ilya-edrenkin/followers", "following_url": "https://api.github.com/users/ilya-edrenkin/following{/other_user}", "gists_url": "https://api.github.com/users/ilya-edrenkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilya-edrenkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilya-edrenkin/subscriptions", "organizations_url": "https://api.github.com/users/ilya-edrenkin/orgs", "repos_url": "https://api.github.com/users/ilya-edrenkin/repos", "events_url": "https://api.github.com/users/ilya-edrenkin/events{/privacy}", "received_events_url": "https://api.github.com/users/ilya-edrenkin/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-11T09:18:49Z", "updated_at": "2017-09-11T09:18:49Z", "author_association": "CONTRIBUTOR", "body_html": "<blockquote>\n<p>I think special-casing the optimizers is the right answer here. This code you wrote can be moved into C++ kernels (added initially in contrib) if you see a performance regression.<br>\nTensorFlow distinguishes between not differentiable and differentiable but 0 gradient. Trying to further refine this distinction feels like a losing battle to me with a static computation graph.</p>\n</blockquote>\n<p>Dear <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5061\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alextp\">@alextp</a>: I agree that adding special values for nonexisting gradients would cause a mess. Is my understanding correct that you are fine with using all-zero-gradient-tensor as a special case signifying that this gradient tensor should be ignored?<br>\nIf yes, I can add this behaviour to tensorflow. What would be the best way to do it?</p>\n<ol>\n<li>Add a separate optimizer to contrib?</li>\n<li>Add it as an optional behaviour to the existing optimizers?</li>\n<li>Add it as the default behaviour to the existing optimizers?</li>\n</ol>\n<p>Thank you!</p>", "body_text": "I think special-casing the optimizers is the right answer here. This code you wrote can be moved into C++ kernels (added initially in contrib) if you see a performance regression.\nTensorFlow distinguishes between not differentiable and differentiable but 0 gradient. Trying to further refine this distinction feels like a losing battle to me with a static computation graph.\n\nDear @alextp: I agree that adding special values for nonexisting gradients would cause a mess. Is my understanding correct that you are fine with using all-zero-gradient-tensor as a special case signifying that this gradient tensor should be ignored?\nIf yes, I can add this behaviour to tensorflow. What would be the best way to do it?\n\nAdd a separate optimizer to contrib?\nAdd it as an optional behaviour to the existing optimizers?\nAdd it as the default behaviour to the existing optimizers?\n\nThank you!", "body": " >I think special-casing the optimizers is the right answer here. This code you wrote can be moved into C++ kernels (added initially in contrib) if you see a performance regression.\r\n>TensorFlow distinguishes between not differentiable and differentiable but 0 gradient. Trying to further refine this distinction feels like a losing battle to me with a static computation graph.\r\n\r\nDear @alextp: I agree that adding special values for nonexisting gradients would cause a mess. Is my understanding correct that you are fine with using all-zero-gradient-tensor as a special case signifying that this gradient tensor should be ignored?\r\nIf yes, I can add this behaviour to tensorflow. What would be the best way to do it?\r\n1) Add a separate optimizer to contrib?\r\n2) Add it as an optional behaviour to the existing optimizers?\r\n3) Add it as the default behaviour to the existing optimizers?\r\n\r\nThank you!"}