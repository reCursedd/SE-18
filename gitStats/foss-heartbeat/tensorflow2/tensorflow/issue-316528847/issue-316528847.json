{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18763", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18763/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18763/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18763/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18763", "id": 316528847, "node_id": "MDU6SXNzdWUzMTY1Mjg4NDc=", "number": 18763, "title": "Multiple Classes fails in Eager Mode (\"tf.keras.Model\")", "user": {"login": "sml0820", "id": 2887242, "node_id": "MDQ6VXNlcjI4ODcyNDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2887242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sml0820", "html_url": "https://github.com/sml0820", "followers_url": "https://api.github.com/users/sml0820/followers", "following_url": "https://api.github.com/users/sml0820/following{/other_user}", "gists_url": "https://api.github.com/users/sml0820/gists{/gist_id}", "starred_url": "https://api.github.com/users/sml0820/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sml0820/subscriptions", "organizations_url": "https://api.github.com/users/sml0820/orgs", "repos_url": "https://api.github.com/users/sml0820/repos", "events_url": "https://api.github.com/users/sml0820/events{/privacy}", "received_events_url": "https://api.github.com/users/sml0820/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-04-21T21:57:29Z", "updated_at": "2018-04-22T23:22:41Z", "closed_at": "2018-04-22T23:22:41Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nNo</li>\n<li><strong>Bazel version</strong>:<br>\nN/A</li>\n<li><strong>CUDA/cuDNN version</strong>:<br>\nN/A</li>\n<li><strong>GPU model and memory</strong>:<br>\nN/A</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nTried on MacOS using tensorflow as well as Linux Ubuntu 16.04 using tensorflow-gpu</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\nInstalled utilizing pip</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\n1.7</li>\n<li><strong>Python version</strong>:<br>\n3.6</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<pre><code>import tensorflow as tf  \nimport tensorflow.contrib.eager as tfe  \n\ntfe.enable_eager_execution()\n\nclass CustomLayer(tf.keras.Model):\n    def __init__(self):\n        super(CustomLayer, self).__init__()\n        print(\"blah\")\n\nclass CustomNetwork(tf.keras.Model):\n    def __init__(self):\n        super(CustomNetwork, self).__init__()\n        self.custom_layers = CustomLayer()\n\n    def forward(self, x, y=None):\n        x = self.custom_layers(x)\n\nCustomNetwork().forward(tf.convert_to_tensor([1]))\n</code></pre>\n<h3>Describe the problem</h3>\n<p>Trying to utilize multiple classes fails in tensorflow eager mode utilizing \"tf.keras.Model\". If I change \"tf.keras.Model\" to \"tfe.Network\" it works - keep in mind I am utilizing tensorflow 1.7.  The error I get running the above code results in the error below:</p>\n<h3>Source code / logs</h3>\n<pre><code>blah\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n&lt;ipython-input-12-9afa9b91ddef&gt; in &lt;module&gt;()\n----&gt; 1 CustomNetwork().forward(tf.convert_to_tensor([1]))\n\n&lt;ipython-input-11-484119102aec&gt; in forward(self, x, y)\n      5 \n      6     def forward(self, x, y=None):\n----&gt; 7         x = self.custom_layers(x)\n\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/keras/_impl/keras/engine/base_layer.py in __call__(self, inputs, **kwargs)\n    237     \"\"\"\n    238     # Actually call the layer (optionally building it).\n--&gt; 239     output = super(Layer, self).__call__(inputs, **kwargs)\n    240     if context.executing_eagerly():\n    241       return output\n\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/layers/base.py in __call__(self, inputs, *args, **kwargs)\n    712 \n    713         if not in_deferred_mode:\n--&gt; 714           outputs = self.call(inputs, *args, **kwargs)\n    715           if outputs is None:\n    716             raise ValueError('A layer\\'s `call` method should return a Tensor '\n\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/keras/_impl/keras/engine/network.py in call(self, inputs, training, mask)\n    635     outputs, _ = self._run_internal_graph(inputs,\n    636                                           training=training,\n--&gt; 637                                           mask=masks)\n    638     return outputs\n    639 \n\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/keras/_impl/keras/engine/network.py in _run_internal_graph(self, inputs, training, mask)\n    770     # does not return a list the same size as `call`\n    771     tensor_map = {}\n--&gt; 772     for x, y, mask in zip(self.inputs, inputs, masks):\n    773       tensor_map[str(id(x))] = (y, mask)\n    774 \n\nTypeError: zip argument #1 must support iteration\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nNo\nBazel version:\nN/A\nCUDA/cuDNN version:\nN/A\nGPU model and memory:\nN/A\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nTried on MacOS using tensorflow as well as Linux Ubuntu 16.04 using tensorflow-gpu\nTensorFlow installed from (source or binary):\nInstalled utilizing pip\nTensorFlow version (use command below):\n1.7\nPython version:\n3.6\nExact command to reproduce:\n\nimport tensorflow as tf  \nimport tensorflow.contrib.eager as tfe  \n\ntfe.enable_eager_execution()\n\nclass CustomLayer(tf.keras.Model):\n    def __init__(self):\n        super(CustomLayer, self).__init__()\n        print(\"blah\")\n\nclass CustomNetwork(tf.keras.Model):\n    def __init__(self):\n        super(CustomNetwork, self).__init__()\n        self.custom_layers = CustomLayer()\n\n    def forward(self, x, y=None):\n        x = self.custom_layers(x)\n\nCustomNetwork().forward(tf.convert_to_tensor([1]))\n\nDescribe the problem\nTrying to utilize multiple classes fails in tensorflow eager mode utilizing \"tf.keras.Model\". If I change \"tf.keras.Model\" to \"tfe.Network\" it works - keep in mind I am utilizing tensorflow 1.7.  The error I get running the above code results in the error below:\nSource code / logs\nblah\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-12-9afa9b91ddef> in <module>()\n----> 1 CustomNetwork().forward(tf.convert_to_tensor([1]))\n\n<ipython-input-11-484119102aec> in forward(self, x, y)\n      5 \n      6     def forward(self, x, y=None):\n----> 7         x = self.custom_layers(x)\n\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/keras/_impl/keras/engine/base_layer.py in __call__(self, inputs, **kwargs)\n    237     \"\"\"\n    238     # Actually call the layer (optionally building it).\n--> 239     output = super(Layer, self).__call__(inputs, **kwargs)\n    240     if context.executing_eagerly():\n    241       return output\n\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/layers/base.py in __call__(self, inputs, *args, **kwargs)\n    712 \n    713         if not in_deferred_mode:\n--> 714           outputs = self.call(inputs, *args, **kwargs)\n    715           if outputs is None:\n    716             raise ValueError('A layer\\'s `call` method should return a Tensor '\n\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/keras/_impl/keras/engine/network.py in call(self, inputs, training, mask)\n    635     outputs, _ = self._run_internal_graph(inputs,\n    636                                           training=training,\n--> 637                                           mask=masks)\n    638     return outputs\n    639 \n\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/keras/_impl/keras/engine/network.py in _run_internal_graph(self, inputs, training, mask)\n    770     # does not return a list the same size as `call`\n    771     tensor_map = {}\n--> 772     for x, y, mask in zip(self.inputs, inputs, masks):\n    773       tensor_map[str(id(x))] = (y, mask)\n    774 \n\nTypeError: zip argument #1 must support iteration", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nNo \r\n- **Bazel version**:\r\nN/A\r\n- **CUDA/cuDNN version**:\r\nN/A\r\n- **GPU model and memory**:\r\nN/A\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nTried on MacOS using tensorflow as well as Linux Ubuntu 16.04 using tensorflow-gpu\r\n- **TensorFlow installed from (source or binary)**:\r\nInstalled utilizing pip\r\n- **TensorFlow version (use command below)**:\r\n1.7\r\n- **Python version**: \r\n3.6\r\n- **Exact command to reproduce**:\r\n```\r\nimport tensorflow as tf  \r\nimport tensorflow.contrib.eager as tfe  \r\n\r\ntfe.enable_eager_execution()\r\n\r\nclass CustomLayer(tf.keras.Model):\r\n    def __init__(self):\r\n        super(CustomLayer, self).__init__()\r\n        print(\"blah\")\r\n\r\nclass CustomNetwork(tf.keras.Model):\r\n    def __init__(self):\r\n        super(CustomNetwork, self).__init__()\r\n        self.custom_layers = CustomLayer()\r\n\r\n    def forward(self, x, y=None):\r\n        x = self.custom_layers(x)\r\n\r\nCustomNetwork().forward(tf.convert_to_tensor([1]))\r\n```\r\n\r\n### Describe the problem\r\nTrying to utilize multiple classes fails in tensorflow eager mode utilizing \"tf.keras.Model\". If I change \"tf.keras.Model\" to \"tfe.Network\" it works - keep in mind I am utilizing tensorflow 1.7.  The error I get running the above code results in the error below:\r\n\r\n### Source code / logs\r\n```\r\nblah\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-12-9afa9b91ddef> in <module>()\r\n----> 1 CustomNetwork().forward(tf.convert_to_tensor([1]))\r\n\r\n<ipython-input-11-484119102aec> in forward(self, x, y)\r\n      5 \r\n      6     def forward(self, x, y=None):\r\n----> 7         x = self.custom_layers(x)\r\n\r\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/keras/_impl/keras/engine/base_layer.py in __call__(self, inputs, **kwargs)\r\n    237     \"\"\"\r\n    238     # Actually call the layer (optionally building it).\r\n--> 239     output = super(Layer, self).__call__(inputs, **kwargs)\r\n    240     if context.executing_eagerly():\r\n    241       return output\r\n\r\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/layers/base.py in __call__(self, inputs, *args, **kwargs)\r\n    712 \r\n    713         if not in_deferred_mode:\r\n--> 714           outputs = self.call(inputs, *args, **kwargs)\r\n    715           if outputs is None:\r\n    716             raise ValueError('A layer\\'s `call` method should return a Tensor '\r\n\r\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/keras/_impl/keras/engine/network.py in call(self, inputs, training, mask)\r\n    635     outputs, _ = self._run_internal_graph(inputs,\r\n    636                                           training=training,\r\n--> 637                                           mask=masks)\r\n    638     return outputs\r\n    639 \r\n\r\n~/anaconda3/lib/python3.6/site-packages/tensorflow/python/keras/_impl/keras/engine/network.py in _run_internal_graph(self, inputs, training, mask)\r\n    770     # does not return a list the same size as `call`\r\n    771     tensor_map = {}\r\n--> 772     for x, y, mask in zip(self.inputs, inputs, masks):\r\n    773       tensor_map[str(id(x))] = (y, mask)\r\n    774 \r\n\r\nTypeError: zip argument #1 must support iteration\r\n```\r\n"}