{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14034", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14034/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14034/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14034/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14034", "id": 269132764, "node_id": "MDU6SXNzdWUyNjkxMzI3NjQ=", "number": 14034, "title": "Segmentation fault when using Intel MKL with np.linalg.svd", "user": {"login": "freud14", "id": 1090012, "node_id": "MDQ6VXNlcjEwOTAwMTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1090012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/freud14", "html_url": "https://github.com/freud14", "followers_url": "https://api.github.com/users/freud14/followers", "following_url": "https://api.github.com/users/freud14/following{/other_user}", "gists_url": "https://api.github.com/users/freud14/gists{/gist_id}", "starred_url": "https://api.github.com/users/freud14/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/freud14/subscriptions", "organizations_url": "https://api.github.com/users/freud14/orgs", "repos_url": "https://api.github.com/users/freud14/repos", "events_url": "https://api.github.com/users/freud14/events{/privacy}", "received_events_url": "https://api.github.com/users/freud14/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2017-10-27T14:47:34Z", "updated_at": "2018-02-08T20:57:25Z", "closed_at": "2018-02-08T20:57:25Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<p>I am running this on the <a href=\"https://docs.computecanada.ca/wiki/Graham\" rel=\"nofollow\">Graham supercomputer</a> of Compute Canada. I tested the bug on computation nodes but it also appears on login nodes without GPUs.</p>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux - CentOS 7</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Custom build with Intel MKL I guess?</li>\n<li><strong>TensorFlow version (use command below)</strong>: b'v1.3.0-0-g9e76bf3' 1.3.0</li>\n<li><strong>Python version</strong>: Python 3.5.2 (default, Jun 25 2016, 21:38:40) [GCC 5.4.0] on linux</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>: 7.5</li>\n<li><strong>GPU model and memory</strong>: Tesla P100</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<pre><code>import numpy as np\nimport tensorflow as tf\n\na = np.ones((64,256))\nu, _, v = np.linalg.svd(a, full_matrices=False)\n</code></pre>\n<p>Without the <code>import tensorflow as tf</code>, the bug doesn't appear.</p>\n<p>You can collect some of this information using our environment capture script:</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\">https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh</a></p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/files/1422363/tf_env.txt\">tf_env.txt</a></p>\n<h3>Describe the problem</h3>\n<p>So basically, when using Intel MKL with the python code above you get a segmentation fault. Without the <code>import tensorflow as tf</code>, the bug doesn't appear. Strangely, when I change the size of the 2nd axis of matrix <code>a</code> to below 201, it works (at some point that I tested, it was 188). When setting the shape of the matrix <code>a</code> to something bigger like <code>(64,256)</code>, it just using all CPUs without returning anything as if it was in a deadlock or something. When setting <code>MKL_NUM_THREADS</code> to 1, both bugs disappear. This bug report seems related to all of these issues: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"221932893\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/9234\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/9234/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/9234\">#9234</a> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"257198247\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/13004\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/13004/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/13004\">#13004</a> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"245186676\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/11724\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/11724/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/11724\">#11724</a> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"229660072\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/10005\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/10005/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/10005\">#10005</a>. They are not identical to this problem but really similar so this bug report is just to let you know another symptom related to the same problem.</p>\n<h3>Source code / logs</h3>\n<p><a href=\"https://github.com/tensorflow/tensorflow/files/1422363/tf_env.txt\">tf_env.txt</a><br>\n<a href=\"https://github.com/tensorflow/tensorflow/files/1422365/gdb_segfault.txt\">gdb_segfault.txt</a></p>", "body_text": "System information\nI am running this on the Graham supercomputer of Compute Canada. I tested the bug on computation nodes but it also appears on login nodes without GPUs.\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux - CentOS 7\nTensorFlow installed from (source or binary): Custom build with Intel MKL I guess?\nTensorFlow version (use command below): b'v1.3.0-0-g9e76bf3' 1.3.0\nPython version: Python 3.5.2 (default, Jun 25 2016, 21:38:40) [GCC 5.4.0] on linux\nBazel version (if compiling from source):\nCUDA/cuDNN version: 7.5\nGPU model and memory: Tesla P100\nExact command to reproduce:\n\nimport numpy as np\nimport tensorflow as tf\n\na = np.ones((64,256))\nu, _, v = np.linalg.svd(a, full_matrices=False)\n\nWithout the import tensorflow as tf, the bug doesn't appear.\nYou can collect some of this information using our environment capture script:\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\ntf_env.txt\nDescribe the problem\nSo basically, when using Intel MKL with the python code above you get a segmentation fault. Without the import tensorflow as tf, the bug doesn't appear. Strangely, when I change the size of the 2nd axis of matrix a to below 201, it works (at some point that I tested, it was 188). When setting the shape of the matrix a to something bigger like (64,256), it just using all CPUs without returning anything as if it was in a deadlock or something. When setting MKL_NUM_THREADS to 1, both bugs disappear. This bug report seems related to all of these issues: #9234 #13004 #11724 #10005. They are not identical to this problem but really similar so this bug report is just to let you know another symptom related to the same problem.\nSource code / logs\ntf_env.txt\ngdb_segfault.txt", "body": "### System information\r\n\r\nI am running this on the [Graham supercomputer](https://docs.computecanada.ca/wiki/Graham) of Compute Canada. I tested the bug on computation nodes but it also appears on login nodes without GPUs.\r\n\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux - CentOS 7\r\n- **TensorFlow installed from (source or binary)**: Custom build with Intel MKL I guess?\r\n- **TensorFlow version (use command below)**: b'v1.3.0-0-g9e76bf3' 1.3.0\r\n- **Python version**: Python 3.5.2 (default, Jun 25 2016, 21:38:40) [GCC 5.4.0] on linux\r\n- **Bazel version (if compiling from source)**:\r\n- **CUDA/cuDNN version**: 7.5\r\n- **GPU model and memory**: Tesla P100\r\n- **Exact command to reproduce**:\r\n\r\n```\r\nimport numpy as np\r\nimport tensorflow as tf\r\n\r\na = np.ones((64,256))\r\nu, _, v = np.linalg.svd(a, full_matrices=False)\r\n```\r\n\r\nWithout the `import tensorflow as tf`, the bug doesn't appear.\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\n[tf_env.txt](https://github.com/tensorflow/tensorflow/files/1422363/tf_env.txt)\r\n\r\n\r\n### Describe the problem\r\n\r\nSo basically, when using Intel MKL with the python code above you get a segmentation fault. Without the `import tensorflow as tf`, the bug doesn't appear. Strangely, when I change the size of the 2nd axis of matrix `a` to below 201, it works (at some point that I tested, it was 188). When setting the shape of the matrix `a` to something bigger like `(64,256)`, it just using all CPUs without returning anything as if it was in a deadlock or something. When setting `MKL_NUM_THREADS` to 1, both bugs disappear. This bug report seems related to all of these issues: https://github.com/tensorflow/tensorflow/issues/9234 https://github.com/tensorflow/tensorflow/issues/13004 https://github.com/tensorflow/tensorflow/issues/11724 https://github.com/tensorflow/tensorflow/issues/10005. They are not identical to this problem but really similar so this bug report is just to let you know another symptom related to the same problem. \r\n\r\n\r\n### Source code / logs\r\n\r\n[tf_env.txt](https://github.com/tensorflow/tensorflow/files/1422363/tf_env.txt)\r\n[gdb_segfault.txt](https://github.com/tensorflow/tensorflow/files/1422365/gdb_segfault.txt)\r\n\r\n"}