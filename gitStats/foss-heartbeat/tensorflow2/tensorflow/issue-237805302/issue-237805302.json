{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10978", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10978/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10978/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10978/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/10978", "id": 237805302, "node_id": "MDExOlB1bGxSZXF1ZXN0MTI2OTYyNzMz", "number": 10978, "title": "[OpenCL] Provides SYCL kernels for 3D pooling (#97)", "user": {"login": "lukeiwanski", "id": 8373795, "node_id": "MDQ6VXNlcjgzNzM3OTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8373795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukeiwanski", "html_url": "https://github.com/lukeiwanski", "followers_url": "https://api.github.com/users/lukeiwanski/followers", "following_url": "https://api.github.com/users/lukeiwanski/following{/other_user}", "gists_url": "https://api.github.com/users/lukeiwanski/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukeiwanski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukeiwanski/subscriptions", "organizations_url": "https://api.github.com/users/lukeiwanski/orgs", "repos_url": "https://api.github.com/users/lukeiwanski/repos", "events_url": "https://api.github.com/users/lukeiwanski/events{/privacy}", "received_events_url": "https://api.github.com/users/lukeiwanski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "benoitsteiner", "id": 6969686, "node_id": "MDQ6VXNlcjY5Njk2ODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6969686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benoitsteiner", "html_url": "https://github.com/benoitsteiner", "followers_url": "https://api.github.com/users/benoitsteiner/followers", "following_url": "https://api.github.com/users/benoitsteiner/following{/other_user}", "gists_url": "https://api.github.com/users/benoitsteiner/gists{/gist_id}", "starred_url": "https://api.github.com/users/benoitsteiner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benoitsteiner/subscriptions", "organizations_url": "https://api.github.com/users/benoitsteiner/orgs", "repos_url": "https://api.github.com/users/benoitsteiner/repos", "events_url": "https://api.github.com/users/benoitsteiner/events{/privacy}", "received_events_url": "https://api.github.com/users/benoitsteiner/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "benoitsteiner", "id": 6969686, "node_id": "MDQ6VXNlcjY5Njk2ODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6969686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benoitsteiner", "html_url": "https://github.com/benoitsteiner", "followers_url": "https://api.github.com/users/benoitsteiner/followers", "following_url": "https://api.github.com/users/benoitsteiner/following{/other_user}", "gists_url": "https://api.github.com/users/benoitsteiner/gists{/gist_id}", "starred_url": "https://api.github.com/users/benoitsteiner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benoitsteiner/subscriptions", "organizations_url": "https://api.github.com/users/benoitsteiner/orgs", "repos_url": "https://api.github.com/users/benoitsteiner/repos", "events_url": "https://api.github.com/users/benoitsteiner/events{/privacy}", "received_events_url": "https://api.github.com/users/benoitsteiner/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2017-06-22T10:48:39Z", "updated_at": "2017-08-03T09:41:21Z", "closed_at": "2017-08-02T23:34:43Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/10978", "html_url": "https://github.com/tensorflow/tensorflow/pull/10978", "diff_url": "https://github.com/tensorflow/tensorflow/pull/10978.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/10978.patch"}, "body_html": "<ul>\n<li>[OpenCL] Adds SYCL kernels for 3D pooling</li>\n</ul>\n<p>Uses simple SYCL kernels to provide implementations for all 3D pooling<br>\nops currently in use. These kernels pass the tests, but haven't really<br>\nbeen optimized.</p>\n<p>These need benchmarking to compare with Eigen and CPU kernels.</p>\n<ul>\n<li>[OpenCL] Refactors SYCL kernels to use parameter struct</li>\n</ul>\n<p>Moves a lot of the functor parameters into a separate data struct, with<br>\nthe aim of simplifying the functor code.</p>\n<ul>\n<li>[OpenCL] Removes extra fetching of tensor dimensions</li>\n</ul>\n<p>We already had the tensor dimensions passed into<br>\nLaunchMaxPooling3dGradOP, so don't need to fetch them from the<br>\ntensor.</p>\n<ul>\n<li>[OpenCL] Renames SYCL 3D pooling kernels</li>\n</ul>\n<p>Adds '3D' to kernel names.</p>\n<ul>\n<li>\n<p>[OpenCL] Adds 3D pooling SYCL kernel documentation</p>\n</li>\n<li>\n<p>[OpenCL] Adds guards around SYCLDevice typedef</p>\n</li>\n<li>\n<p>[OpenCL] Use forward input for SYCL MaxPool3DGradGrad</p>\n</li>\n</ul>\n<p>When we had a mix of SYCL and CPU kernels the forward_input would break<br>\nand cause computation problems. Now that we have SYCL kernels for all 3D<br>\npooling operations, this is not a problem.</p>\n<ul>\n<li>\n<p>[OpenCL] Reformats SYCL 3D pooling code</p>\n</li>\n<li>\n<p>[OpenCL] Moves SYCL utils into separate header</p>\n</li>\n<li>\n<p>[OpenCL] Simplifies SYCL Pool param contructors</p>\n</li>\n</ul>\n<p>Instead of each constructor initialising the data, simplifies the<br>\nconstructors to call the first constructor.</p>", "body_text": "[OpenCL] Adds SYCL kernels for 3D pooling\n\nUses simple SYCL kernels to provide implementations for all 3D pooling\nops currently in use. These kernels pass the tests, but haven't really\nbeen optimized.\nThese need benchmarking to compare with Eigen and CPU kernels.\n\n[OpenCL] Refactors SYCL kernels to use parameter struct\n\nMoves a lot of the functor parameters into a separate data struct, with\nthe aim of simplifying the functor code.\n\n[OpenCL] Removes extra fetching of tensor dimensions\n\nWe already had the tensor dimensions passed into\nLaunchMaxPooling3dGradOP, so don't need to fetch them from the\ntensor.\n\n[OpenCL] Renames SYCL 3D pooling kernels\n\nAdds '3D' to kernel names.\n\n\n[OpenCL] Adds 3D pooling SYCL kernel documentation\n\n\n[OpenCL] Adds guards around SYCLDevice typedef\n\n\n[OpenCL] Use forward input for SYCL MaxPool3DGradGrad\n\n\nWhen we had a mix of SYCL and CPU kernels the forward_input would break\nand cause computation problems. Now that we have SYCL kernels for all 3D\npooling operations, this is not a problem.\n\n\n[OpenCL] Reformats SYCL 3D pooling code\n\n\n[OpenCL] Moves SYCL utils into separate header\n\n\n[OpenCL] Simplifies SYCL Pool param contructors\n\n\nInstead of each constructor initialising the data, simplifies the\nconstructors to call the first constructor.", "body": "* [OpenCL] Adds SYCL kernels for 3D pooling\r\n\r\nUses simple SYCL kernels to provide implementations for all 3D pooling\r\nops currently in use. These kernels pass the tests, but haven't really\r\nbeen optimized.\r\n\r\nThese need benchmarking to compare with Eigen and CPU kernels.\r\n\r\n* [OpenCL] Refactors SYCL kernels to use parameter struct\r\n\r\nMoves a lot of the functor parameters into a separate data struct, with\r\nthe aim of simplifying the functor code.\r\n\r\n* [OpenCL] Removes extra fetching of tensor dimensions\r\n\r\nWe already had the tensor dimensions passed into\r\nLaunchMaxPooling3dGradOP, so don't need to fetch them from the\r\ntensor.\r\n\r\n* [OpenCL] Renames SYCL 3D pooling kernels\r\n\r\nAdds '3D' to kernel names.\r\n\r\n* [OpenCL] Adds 3D pooling SYCL kernel documentation\r\n\r\n* [OpenCL] Adds guards around SYCLDevice typedef\r\n\r\n* [OpenCL] Use forward input for SYCL MaxPool3DGradGrad\r\n\r\nWhen we had a mix of SYCL and CPU kernels the forward_input would break\r\nand cause computation problems. Now that we have SYCL kernels for all 3D\r\npooling operations, this is not a problem.\r\n\r\n* [OpenCL] Reformats SYCL 3D pooling code\r\n\r\n* [OpenCL] Moves SYCL utils into separate header\r\n\r\n* [OpenCL] Simplifies SYCL Pool param contructors\r\n\r\nInstead of each constructor initialising the data, simplifies the\r\nconstructors to call the first constructor."}