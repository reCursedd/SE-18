{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/246762800", "html_url": "https://github.com/tensorflow/tensorflow/issues/4101#issuecomment-246762800", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4101", "id": 246762800, "node_id": "MDEyOklzc3VlQ29tbWVudDI0Njc2MjgwMA==", "user": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-13T17:42:34Z", "updated_at": "2016-09-13T17:42:34Z", "author_association": "MEMBER", "body_html": "<p>To answer your question about the auto-diff engine: The engine itself only knows how to apply the chain rule to compose the \"gradients\" of entire ops to derive the gradient of all trainable variables in a model w.r.t. the loss:</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/gradients.py#L307\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/gradients.py#L307</a></p>\n<p>The entire gradient for matrix operations is computed in whole by hand-written gradient functions and then composed. See, e.g. <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/linalg_grad.py#L33\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/linalg_grad.py#L33</a></p>\n<p>The algebraic simplifications you do in your derivation simply cannot be done automatically in the current system, and would require manually writing a function for the gradient of log-determinant (or your entire log-likelihood function). That being said, I'm taking a second look at the linear solvers to see if perhaps adding a few steps of iterative refinement would help with the accuracy of the gradients.</p>", "body_text": "To answer your question about the auto-diff engine: The engine itself only knows how to apply the chain rule to compose the \"gradients\" of entire ops to derive the gradient of all trainable variables in a model w.r.t. the loss:\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/gradients.py#L307\nThe entire gradient for matrix operations is computed in whole by hand-written gradient functions and then composed. See, e.g. https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/linalg_grad.py#L33\nThe algebraic simplifications you do in your derivation simply cannot be done automatically in the current system, and would require manually writing a function for the gradient of log-determinant (or your entire log-likelihood function). That being said, I'm taking a second look at the linear solvers to see if perhaps adding a few steps of iterative refinement would help with the accuracy of the gradients.", "body": "To answer your question about the auto-diff engine: The engine itself only knows how to apply the chain rule to compose the \"gradients\" of entire ops to derive the gradient of all trainable variables in a model w.r.t. the loss:\n\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/gradients.py#L307\n\nThe entire gradient for matrix operations is computed in whole by hand-written gradient functions and then composed. See, e.g. https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/linalg_grad.py#L33\n\nThe algebraic simplifications you do in your derivation simply cannot be done automatically in the current system, and would require manually writing a function for the gradient of log-determinant (or your entire log-likelihood function). That being said, I'm taking a second look at the linear solvers to see if perhaps adding a few steps of iterative refinement would help with the accuracy of the gradients.\n"}