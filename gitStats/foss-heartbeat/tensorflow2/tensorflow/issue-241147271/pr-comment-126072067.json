{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/126072067", "pull_request_review_id": 48522243, "id": 126072067, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNjA3MjA2Nw==", "diff_hunk": "@@ -266,6 +266,13 @@ def setUp(self):\n     self._ClearCachedSession()\n     random.seed(random_seed.DEFAULT_GRAPH_SEED)\n     np.random.seed(random_seed.DEFAULT_GRAPH_SEED)\n+    # Note: The following line is necessary because some test methods may error\n+    # out from within nested graph contexts (e.g., via assertRaises and\n+    # assertRaisesRegexp), which may leave ops._default_graph_stack non-empty\n+    # under certain versions of Python. That would cause\n+    # ops.reset_default_graph() to throw an exception if the stack were not\n+    # cleared first.", "path": "tensorflow/python/framework/test_util.py", "position": 9, "original_position": 9, "commit_id": "f8cd1283e541f8f0366d3816091d144fcafc786a", "original_commit_id": "f8cd1283e541f8f0366d3816091d144fcafc786a", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "body": "I'm still confused on why `ops._default_graph_stack` can be non-empty after an exception, since the `finally:` block in the default graph context manager should still execute, right?\r\n\r\nIf not, is it possible we have a bug in that context manager?", "created_at": "2017-07-07T05:30:34Z", "updated_at": "2017-07-07T05:30:43Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/11340#discussion_r126072067", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11340", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/126072067"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/11340#discussion_r126072067"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11340"}}, "body_html": "<p>I'm still confused on why <code>ops._default_graph_stack</code> can be non-empty after an exception, since the <code>finally:</code> block in the default graph context manager should still execute, right?</p>\n<p>If not, is it possible we have a bug in that context manager?</p>", "body_text": "I'm still confused on why ops._default_graph_stack can be non-empty after an exception, since the finally: block in the default graph context manager should still execute, right?\nIf not, is it possible we have a bug in that context manager?"}