{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5390", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5390/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5390/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5390/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/5390", "id": 187226730, "node_id": "MDU6SXNzdWUxODcyMjY3MzA=", "number": 5390, "title": "tf.variable_scope() does not allow variables to be defined for individual towers under a scope, in tensorflow/tensorflow/contrib/slim/python/slim/nets/inception_v3.py", "user": {"login": "pranavvm26", "id": 12427390, "node_id": "MDQ6VXNlcjEyNDI3Mzkw", "avatar_url": "https://avatars2.githubusercontent.com/u/12427390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pranavvm26", "html_url": "https://github.com/pranavvm26", "followers_url": "https://api.github.com/users/pranavvm26/followers", "following_url": "https://api.github.com/users/pranavvm26/following{/other_user}", "gists_url": "https://api.github.com/users/pranavvm26/gists{/gist_id}", "starred_url": "https://api.github.com/users/pranavvm26/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pranavvm26/subscriptions", "organizations_url": "https://api.github.com/users/pranavvm26/orgs", "repos_url": "https://api.github.com/users/pranavvm26/repos", "events_url": "https://api.github.com/users/pranavvm26/events{/privacy}", "received_events_url": "https://api.github.com/users/pranavvm26/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "sguada", "id": 1766524, "node_id": "MDQ6VXNlcjE3NjY1MjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1766524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sguada", "html_url": "https://github.com/sguada", "followers_url": "https://api.github.com/users/sguada/followers", "following_url": "https://api.github.com/users/sguada/following{/other_user}", "gists_url": "https://api.github.com/users/sguada/gists{/gist_id}", "starred_url": "https://api.github.com/users/sguada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sguada/subscriptions", "organizations_url": "https://api.github.com/users/sguada/orgs", "repos_url": "https://api.github.com/users/sguada/repos", "events_url": "https://api.github.com/users/sguada/events{/privacy}", "received_events_url": "https://api.github.com/users/sguada/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sguada", "id": 1766524, "node_id": "MDQ6VXNlcjE3NjY1MjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1766524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sguada", "html_url": "https://github.com/sguada", "followers_url": "https://api.github.com/users/sguada/followers", "following_url": "https://api.github.com/users/sguada/following{/other_user}", "gists_url": "https://api.github.com/users/sguada/gists{/gist_id}", "starred_url": "https://api.github.com/users/sguada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sguada/subscriptions", "organizations_url": "https://api.github.com/users/sguada/orgs", "repos_url": "https://api.github.com/users/sguada/repos", "events_url": "https://api.github.com/users/sguada/events{/privacy}", "received_events_url": "https://api.github.com/users/sguada/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 14, "created_at": "2016-11-04T00:42:45Z", "updated_at": "2017-09-12T13:06:52Z", "closed_at": "2017-09-12T13:06:16Z", "author_association": "NONE", "body_html": "<p>I have been working with inception_v3 model from past few weeks and I came across this issue with the inception model defined under tensorflow/tensorflow/contrib/slim/python/slim/nets/inception_v3.py.</p>\n<p>This newer inception model cannot create variables for individual towers in a multi-gpu environment defined under a tower scope and fails with the following error:</p>\n<p><strong>ValueError: Variable tower_1//Conv2d_1a_3x3/weights does not exist, or was not created with tf.get_variable(). Did you mean to set reuse=None in VarScope?</strong></p>\n<p>The source of this error stems from defining logits with scope, as follows,</p>\n<pre><code>logits = inception.inception_v3(inputs=images, num_classes=num_classes,\n                                          is_training=is_training,\n                                          dropout_keep_prob=dropout_rate,\n                                          reuse=None,\n                                          scope=scope)\n</code></pre>\n<p>The aforementioned error arises despite setting reuse=None.</p>\n<p>Suppose, scope isn't defined,</p>\n<pre><code>logits = inception.inception_v3(inputs=images, num_classes=num_classes,\n                                                is_training=is_training,\n                                                dropout_keep_prob=dropout_rate)\n</code></pre>\n<p>logits layer then builds for multiple GPUs, in my training environment without ending up with a ValueError. The model was indeed designed to be defined without a scope? My investigation of the code showed that the source of this error arises from the following 2 lines within ..slim/nets/inception_v3.py file,</p>\n<pre><code>   with tf.variable_scope(scope, 'InceptionV3', [inputs, num_classes],\n                                                reuse=reuse) as scope:\n  \n   with tf.variable_scope(scope, 'InceptionV3', [inputs]):\n</code></pre>\n<p>Tower variables are successfully created for the first tower (or a single GPU) whilst failing to creating the same variables for remaining towers (remainder of GPUs), with a 'scope' defined, the model ends up producing a ValueError. As one of the workarounds, I began using this model without defining a scope for tower creation in multi-gpu environment.</p>\n<p>OPTIONAL WORKAROUND:</p>\n<p>As an optional workaround, I figured changing the way the variables are defined by changing variable definition from <strong>with tf.variable_scope</strong> to  <strong>with tf.name_scope</strong>. This seems to have fixed the ValueError issue. I'm now able to define logits for 'n' GPU setting, with \"scope\" as a functional parameter (the towers and their respective variables are successfully created for each of the several available GPUs, in a multi-GPU setting). Also, as an added bonus I did observe that the \"graph\" view on tensorboard looked more organized and nicely segmented in contrast to the default code (default code is the one that made use of <strong>with tf.variable_scope</strong>). Please let me know if this is indeed an existing issue with this newer inception_v3 model or am I doing something wrong in the way I am defining my logits layer.</p>\n<p>I am confident, I am following the right steps because,</p>\n<ol>\n<li>My model seems to train and test perfectly without a scope defined while using the default inception_v3.py to build the logits,</li>\n<li>My model seems to train and test perfectly after replacing variable_scope with name_scope and passing individual tower scope as an argument to build the logits layer.</li>\n<li>I am following the same methodology used in the following code, <a href=\"https://github.com/tensorflow/models/blob/master/inception/inception/inception_train.py\">https://github.com/tensorflow/models/blob/master/inception/inception/inception_train.py</a> to define my logits layers for multiple towers in the tower_loss function of my train file.</li>\n</ol>\n<p>Any inputs would be much appreciated,</p>", "body_text": "I have been working with inception_v3 model from past few weeks and I came across this issue with the inception model defined under tensorflow/tensorflow/contrib/slim/python/slim/nets/inception_v3.py.\nThis newer inception model cannot create variables for individual towers in a multi-gpu environment defined under a tower scope and fails with the following error:\nValueError: Variable tower_1//Conv2d_1a_3x3/weights does not exist, or was not created with tf.get_variable(). Did you mean to set reuse=None in VarScope?\nThe source of this error stems from defining logits with scope, as follows,\nlogits = inception.inception_v3(inputs=images, num_classes=num_classes,\n                                          is_training=is_training,\n                                          dropout_keep_prob=dropout_rate,\n                                          reuse=None,\n                                          scope=scope)\n\nThe aforementioned error arises despite setting reuse=None.\nSuppose, scope isn't defined,\nlogits = inception.inception_v3(inputs=images, num_classes=num_classes,\n                                                is_training=is_training,\n                                                dropout_keep_prob=dropout_rate)\n\nlogits layer then builds for multiple GPUs, in my training environment without ending up with a ValueError. The model was indeed designed to be defined without a scope? My investigation of the code showed that the source of this error arises from the following 2 lines within ..slim/nets/inception_v3.py file,\n   with tf.variable_scope(scope, 'InceptionV3', [inputs, num_classes],\n                                                reuse=reuse) as scope:\n  \n   with tf.variable_scope(scope, 'InceptionV3', [inputs]):\n\nTower variables are successfully created for the first tower (or a single GPU) whilst failing to creating the same variables for remaining towers (remainder of GPUs), with a 'scope' defined, the model ends up producing a ValueError. As one of the workarounds, I began using this model without defining a scope for tower creation in multi-gpu environment.\nOPTIONAL WORKAROUND:\nAs an optional workaround, I figured changing the way the variables are defined by changing variable definition from with tf.variable_scope to  with tf.name_scope. This seems to have fixed the ValueError issue. I'm now able to define logits for 'n' GPU setting, with \"scope\" as a functional parameter (the towers and their respective variables are successfully created for each of the several available GPUs, in a multi-GPU setting). Also, as an added bonus I did observe that the \"graph\" view on tensorboard looked more organized and nicely segmented in contrast to the default code (default code is the one that made use of with tf.variable_scope). Please let me know if this is indeed an existing issue with this newer inception_v3 model or am I doing something wrong in the way I am defining my logits layer.\nI am confident, I am following the right steps because,\n\nMy model seems to train and test perfectly without a scope defined while using the default inception_v3.py to build the logits,\nMy model seems to train and test perfectly after replacing variable_scope with name_scope and passing individual tower scope as an argument to build the logits layer.\nI am following the same methodology used in the following code, https://github.com/tensorflow/models/blob/master/inception/inception/inception_train.py to define my logits layers for multiple towers in the tower_loss function of my train file.\n\nAny inputs would be much appreciated,", "body": "I have been working with inception_v3 model from past few weeks and I came across this issue with the inception model defined under tensorflow/tensorflow/contrib/slim/python/slim/nets/inception_v3.py. \r\n\r\nThis newer inception model cannot create variables for individual towers in a multi-gpu environment defined under a tower scope and fails with the following error:\r\n\r\n**ValueError: Variable tower_1//Conv2d_1a_3x3/weights does not exist, or was not created with tf.get_variable(). Did you mean to set reuse=None in VarScope?**\r\n\r\nThe source of this error stems from defining logits with scope, as follows,\r\n\r\n    logits = inception.inception_v3(inputs=images, num_classes=num_classes,\r\n                                              is_training=is_training,\r\n                                              dropout_keep_prob=dropout_rate,\r\n                                              reuse=None,\r\n                                              scope=scope)\r\n\r\nThe aforementioned error arises despite setting reuse=None. \r\n\r\nSuppose, scope isn't defined,\r\n\r\n    logits = inception.inception_v3(inputs=images, num_classes=num_classes,\r\n                                                    is_training=is_training,\r\n                                                    dropout_keep_prob=dropout_rate)\r\n\r\nlogits layer then builds for multiple GPUs, in my training environment without ending up with a ValueError. The model was indeed designed to be defined without a scope? My investigation of the code showed that the source of this error arises from the following 2 lines within ..slim/nets/inception_v3.py file, \r\n\r\n       with tf.variable_scope(scope, 'InceptionV3', [inputs, num_classes],\r\n                                                    reuse=reuse) as scope:\r\n      \r\n       with tf.variable_scope(scope, 'InceptionV3', [inputs]):\r\n\r\nTower variables are successfully created for the first tower (or a single GPU) whilst failing to creating the same variables for remaining towers (remainder of GPUs), with a 'scope' defined, the model ends up producing a ValueError. As one of the workarounds, I began using this model without defining a scope for tower creation in multi-gpu environment.\r\n\r\nOPTIONAL WORKAROUND:\r\n\r\nAs an optional workaround, I figured changing the way the variables are defined by changing variable definition from **with tf.variable_scope** to  **with tf.name_scope**. This seems to have fixed the ValueError issue. I'm now able to define logits for 'n' GPU setting, with \"scope\" as a functional parameter (the towers and their respective variables are successfully created for each of the several available GPUs, in a multi-GPU setting). Also, as an added bonus I did observe that the \"graph\" view on tensorboard looked more organized and nicely segmented in contrast to the default code (default code is the one that made use of **with tf.variable_scope**). Please let me know if this is indeed an existing issue with this newer inception_v3 model or am I doing something wrong in the way I am defining my logits layer. \r\n\r\nI am confident, I am following the right steps because,\r\n\r\n1. My model seems to train and test perfectly without a scope defined while using the default inception_v3.py to build the logits,\r\n2. My model seems to train and test perfectly after replacing variable_scope with name_scope and passing individual tower scope as an argument to build the logits layer.\r\n3. I am following the same methodology used in the following code, https://github.com/tensorflow/models/blob/master/inception/inception/inception_train.py to define my logits layers for multiple towers in the tower_loss function of my train file.\r\n\r\nAny inputs would be much appreciated,"}