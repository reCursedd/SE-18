{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/261060158", "html_url": "https://github.com/tensorflow/tensorflow/issues/5390#issuecomment-261060158", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5390", "id": 261060158, "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTA2MDE1OA==", "user": {"login": "pranavvm26", "id": 12427390, "node_id": "MDQ6VXNlcjEyNDI3Mzkw", "avatar_url": "https://avatars2.githubusercontent.com/u/12427390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pranavvm26", "html_url": "https://github.com/pranavvm26", "followers_url": "https://api.github.com/users/pranavvm26/followers", "following_url": "https://api.github.com/users/pranavvm26/following{/other_user}", "gists_url": "https://api.github.com/users/pranavvm26/gists{/gist_id}", "starred_url": "https://api.github.com/users/pranavvm26/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pranavvm26/subscriptions", "organizations_url": "https://api.github.com/users/pranavvm26/orgs", "repos_url": "https://api.github.com/users/pranavvm26/repos", "events_url": "https://api.github.com/users/pranavvm26/events{/privacy}", "received_events_url": "https://api.github.com/users/pranavvm26/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-16T20:21:02Z", "updated_at": "2016-11-16T20:28:01Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1766524\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/sguada\">@sguada</a></p>\n<blockquote>\n<p>The error comes because you are passing the name_scope TOWER_1 as a variable_scope to inception_v3, just don't pass any scope, it would use the proper inception_v3 scope by default.</p>\n</blockquote>\n<p>It does, but should the functionality of passing scope towards creation of logits layer be available to us ? Doesn't it help with the creation of separate op-variables under individual GPU tower ? Similar to the instance mentioned in the comments - a GPU system with the lack of P2P connectivity?</p>\n<p>Also, the root cause of this issue seems to stem from the way the variables are created within the inception_v3.py under the umbrella of variable scope. Changing it from variable_scope to name_scope does not error out the same way and the \"net\" works as designed (from my testing).</p>\n<p>Also, as I mentioned earlier the graph looks more modular too (similar to how the graph looked in the deprecated/older inception with slim).</p>\n<p>Do you foresee any issues with changing variable_scope to name_scope ?</p>\n<p>Thanks.</p>", "body_text": "@sguada\n\nThe error comes because you are passing the name_scope TOWER_1 as a variable_scope to inception_v3, just don't pass any scope, it would use the proper inception_v3 scope by default.\n\nIt does, but should the functionality of passing scope towards creation of logits layer be available to us ? Doesn't it help with the creation of separate op-variables under individual GPU tower ? Similar to the instance mentioned in the comments - a GPU system with the lack of P2P connectivity?\nAlso, the root cause of this issue seems to stem from the way the variables are created within the inception_v3.py under the umbrella of variable scope. Changing it from variable_scope to name_scope does not error out the same way and the \"net\" works as designed (from my testing).\nAlso, as I mentioned earlier the graph looks more modular too (similar to how the graph looked in the deprecated/older inception with slim).\nDo you foresee any issues with changing variable_scope to name_scope ?\nThanks.", "body": "@sguada \n\n> The error comes because you are passing the name_scope TOWER_1 as a variable_scope to inception_v3, just don't pass any scope, it would use the proper inception_v3 scope by default.\n\nIt does, but should the functionality of passing scope towards creation of logits layer be available to us ? Doesn't it help with the creation of separate op-variables under individual GPU tower ? Similar to the instance mentioned in the comments - a GPU system with the lack of P2P connectivity?\n\nAlso, the root cause of this issue seems to stem from the way the variables are created within the inception_v3.py under the umbrella of variable scope. Changing it from variable_scope to name_scope does not error out the same way and the \"net\" works as designed (from my testing).\n\nAlso, as I mentioned earlier the graph looks more modular too (similar to how the graph looked in the deprecated/older inception with slim).\n\nDo you foresee any issues with changing variable_scope to name_scope ?  \n\nThanks.\n"}