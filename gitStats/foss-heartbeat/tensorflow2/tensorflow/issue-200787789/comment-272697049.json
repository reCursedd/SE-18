{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/272697049", "html_url": "https://github.com/tensorflow/tensorflow/issues/6845#issuecomment-272697049", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6845", "id": 272697049, "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjY5NzA0OQ==", "user": {"login": "ericyue", "id": 918889, "node_id": "MDQ6VXNlcjkxODg4OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/918889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericyue", "html_url": "https://github.com/ericyue", "followers_url": "https://api.github.com/users/ericyue/followers", "following_url": "https://api.github.com/users/ericyue/following{/other_user}", "gists_url": "https://api.github.com/users/ericyue/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericyue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericyue/subscriptions", "organizations_url": "https://api.github.com/users/ericyue/orgs", "repos_url": "https://api.github.com/users/ericyue/repos", "events_url": "https://api.github.com/users/ericyue/events{/privacy}", "received_events_url": "https://api.github.com/users/ericyue/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-15T14:02:20Z", "updated_at": "2017-01-15T14:02:20Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=23068\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yaroslavvb\">@yaroslavvb</a>   hi, I tried as you said to try benchmarking just the enqueuing part of the pipeline, the result is 7058records/s on my macbook.<br>\nI'm using a large min_after_dequeue to ensure 5 seconds can not load all the records.</p>\n<pre><code>    num1 = sess.run(\"shuffle_batch/random_shuffle_queue_Size:0\")\n    start_time = datetime.datetime.now(pytz.timezone('Asia/Shanghai'))\n    threads = tf.train.start_queue_runners(coord=coord, sess=sess)\n    time.sleep(5)\n    end_time = datetime.datetime.now(pytz.timezone('Asia/Shanghai'))\n    sec = (end_time - start_time).total_seconds()\n    num2 = sess.run(\"shuffle_batch/random_shuffle_queue_Size:0\")\n    speed = (num2-num1)/sec\n</code></pre>", "body_text": "@yaroslavvb   hi, I tried as you said to try benchmarking just the enqueuing part of the pipeline, the result is 7058records/s on my macbook.\nI'm using a large min_after_dequeue to ensure 5 seconds can not load all the records.\n    num1 = sess.run(\"shuffle_batch/random_shuffle_queue_Size:0\")\n    start_time = datetime.datetime.now(pytz.timezone('Asia/Shanghai'))\n    threads = tf.train.start_queue_runners(coord=coord, sess=sess)\n    time.sleep(5)\n    end_time = datetime.datetime.now(pytz.timezone('Asia/Shanghai'))\n    sec = (end_time - start_time).total_seconds()\n    num2 = sess.run(\"shuffle_batch/random_shuffle_queue_Size:0\")\n    speed = (num2-num1)/sec", "body": "@yaroslavvb   hi, I tried as you said to try benchmarking just the enqueuing part of the pipeline, the result is 7058records/s on my macbook.\r\nI'm using a large min_after_dequeue to ensure 5 seconds can not load all the records.\r\n```\r\n    num1 = sess.run(\"shuffle_batch/random_shuffle_queue_Size:0\")\r\n    start_time = datetime.datetime.now(pytz.timezone('Asia/Shanghai'))\r\n    threads = tf.train.start_queue_runners(coord=coord, sess=sess)\r\n    time.sleep(5)\r\n    end_time = datetime.datetime.now(pytz.timezone('Asia/Shanghai'))\r\n    sec = (end_time - start_time).total_seconds()\r\n    num2 = sess.run(\"shuffle_batch/random_shuffle_queue_Size:0\")\r\n    speed = (num2-num1)/sec\r\n```"}