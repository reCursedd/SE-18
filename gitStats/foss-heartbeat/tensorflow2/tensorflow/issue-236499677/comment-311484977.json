{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/311484977", "html_url": "https://github.com/tensorflow/tensorflow/issues/10766#issuecomment-311484977", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10766", "id": 311484977, "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTQ4NDk3Nw==", "user": {"login": "jakedailey1", "id": 15854626, "node_id": "MDQ6VXNlcjE1ODU0NjI2", "avatar_url": "https://avatars1.githubusercontent.com/u/15854626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakedailey1", "html_url": "https://github.com/jakedailey1", "followers_url": "https://api.github.com/users/jakedailey1/followers", "following_url": "https://api.github.com/users/jakedailey1/following{/other_user}", "gists_url": "https://api.github.com/users/jakedailey1/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakedailey1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakedailey1/subscriptions", "organizations_url": "https://api.github.com/users/jakedailey1/orgs", "repos_url": "https://api.github.com/users/jakedailey1/repos", "events_url": "https://api.github.com/users/jakedailey1/events{/privacy}", "received_events_url": "https://api.github.com/users/jakedailey1/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-27T21:04:13Z", "updated_at": "2017-06-27T21:04:13Z", "author_association": "NONE", "body_html": "<p>Also fails when <code>gradients()</code> calculated for loss w.r.t. weights drawn from <code>MultivariateNormalDiag()</code> (in my case with the help of <code>contrib.bayesflow.stochastic_tensor.StochasticTensor</code>). Using <code>Normal()</code> appears to be a (slower) workaround.</p>", "body_text": "Also fails when gradients() calculated for loss w.r.t. weights drawn from MultivariateNormalDiag() (in my case with the help of contrib.bayesflow.stochastic_tensor.StochasticTensor). Using Normal() appears to be a (slower) workaround.", "body": "Also fails when `gradients()` calculated for loss w.r.t. weights drawn from `MultivariateNormalDiag()` (in my case with the help of `contrib.bayesflow.stochastic_tensor.StochasticTensor`). Using `Normal()` appears to be a (slower) workaround."}