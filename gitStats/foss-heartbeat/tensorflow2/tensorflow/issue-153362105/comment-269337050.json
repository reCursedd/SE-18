{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/269337050", "html_url": "https://github.com/tensorflow/tensorflow/issues/2245#issuecomment-269337050", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2245", "id": 269337050, "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTMzNzA1MA==", "user": {"login": "Arsakes", "id": 129146, "node_id": "MDQ6VXNlcjEyOTE0Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/129146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Arsakes", "html_url": "https://github.com/Arsakes", "followers_url": "https://api.github.com/users/Arsakes/followers", "following_url": "https://api.github.com/users/Arsakes/following{/other_user}", "gists_url": "https://api.github.com/users/Arsakes/gists{/gist_id}", "starred_url": "https://api.github.com/users/Arsakes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Arsakes/subscriptions", "organizations_url": "https://api.github.com/users/Arsakes/orgs", "repos_url": "https://api.github.com/users/Arsakes/repos", "events_url": "https://api.github.com/users/Arsakes/events{/privacy}", "received_events_url": "https://api.github.com/users/Arsakes/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-27T15:02:41Z", "updated_at": "2016-12-27T15:57:32Z", "author_association": "NONE", "body_html": "<p>If you use <code>extract_sub_graph()</code> you risk that it'll \"break\" the graph (the resulting subgraph would be useless).</p>\n<p>A <strong>variable</strong> consist of few nodes and there is no single node that has an outgoing connection to each other.<br>\n_Thanks to this fact <code>export_sub_graph()</code> breaks variable structure and effectivly removes variable from graph.<br>\nIs there a smart way around it? (I didn't try explicitely listing all the nodes for each variable used by source graph - but this wouldn't be super efficient and clean).</p>\n<p>One should construct graph extraction function in a way it preserves higher order structures (variables) too.<br>\nNot only singular graph nodes.</p>", "body_text": "If you use extract_sub_graph() you risk that it'll \"break\" the graph (the resulting subgraph would be useless).\nA variable consist of few nodes and there is no single node that has an outgoing connection to each other.\n_Thanks to this fact export_sub_graph() breaks variable structure and effectivly removes variable from graph.\nIs there a smart way around it? (I didn't try explicitely listing all the nodes for each variable used by source graph - but this wouldn't be super efficient and clean).\nOne should construct graph extraction function in a way it preserves higher order structures (variables) too.\nNot only singular graph nodes.", "body": "If you use `extract_sub_graph()` you risk that it'll \"break\" the graph (the resulting subgraph would be useless).\r\n\r\nA **variable** consist of few nodes and there is no single node that has an outgoing connection to each other. \r\n_Thanks to this fact `export_sub_graph()` breaks variable structure and effectivly removes variable from graph. \r\nIs there a smart way around it? (I didn't try explicitely listing all the nodes for each variable used by source graph - but this wouldn't be super efficient and clean).\r\n\r\nOne should construct graph extraction function in a way it preserves higher order structures (variables) too.\r\nNot only singular graph nodes."}