{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/110925057", "pull_request_review_id": 32131418, "id": 110925057, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDkyNTA1Nw==", "diff_hunk": "@@ -1859,3 +1859,115 @@ def __call__(self, inputs, state, scope=None):\n       new_state = core_rnn_cell.LSTMStateTuple(new_c, new_h)\n \n       return new_h, new_state\n+\n+class BasicConvLSTMCell(core_rnn_cell.RNNCell):\n+  \"\"\"Basic Convolutional LSTM recurrent network cell.\n+\n+  https://arxiv.org/pdf/1506.04214v1.pdf\n+  \"\"\"\n+\n+  def __init__(self,\n+               shape,\n+               filter_size,\n+               num_features,\n+               forget_bias=1.0,\n+               activation=math_ops.tanh,\n+               reuse=None):\n+    \"\"\"Initialize the basic Conv LSTM cell.\n+    Args:\n+      shape: int tuple thats the height and width of the cell\n+      filter_size: int tuple thats the height and width of the filter\n+      num_features: int thats the depth of the cell \n+      forget_bias: float, The bias added to forget gates (see above).\n+      input_size: Deprecated and unused.\n+      state_is_tuple: If True, accepted and returned states are 2-tuples of\n+        the `c_state` and `m_state`.  If False, they are concatenated\n+        along the column axis.  The latter behavior will soon be deprecated.\n+      activation: Activation function of the inner states.\n+    \"\"\"\n+    self._shape = shape \n+    self._filter_size = filter_size\n+    self._num_features = num_features \n+    self._forget_bias = forget_bias\n+    self._reuse = reuse\n+    self._activation = activation\n+\n+  @property\n+  def state_size(self):\n+    return core_rnn_cell.LSTMStateTuple(self._shape, self._shape)\n+\n+  @property\n+  def output_size(self):\n+    return self._shape\n+\n+  def zero_state(self, batch_size, dtype):\n+    shape = self._shape \n+    num_features = self._num_features\n+    zero_c = array_ops.zeros([batch_size, shape[0], shape[1], num_features], dtype=dtype)\n+    zero_h = array_ops.zeros([batch_size, shape[0], shape[1], num_features], dtype=dtype)\n+    zero_state = core_rnn_cell.LSTMStateTuple(zero_c, zero_h)\n+    return zero_state\n+\n+  def __call__(self, inputs, state, scope=None):\n+    \"\"\"Long short-term memory cell (LSTM).\"\"\"\n+    with vs.variable_scope(scope or \"conv_lstm_cell\", reuse=self._reuse):  # \"BasicLSTMCell\"\n+      # Parameters of gates are concatenated into one multiply for efficiency.\n+      (c, h) = state\n+\n+      concat = _conv_linear([inputs, h], self._filter_size, self._num_features * 4, True)", "path": "tensorflow/contrib/rnn/python/ops/rnn_cell.py", "position": null, "original_position": 59, "commit_id": "a884a920d776b48310a79cf82fa7813fe24451df", "original_commit_id": "3e99f7440f86bfd5536cededb298d7e768439497", "user": {"login": "carlthome", "id": 1595907, "node_id": "MDQ6VXNlcjE1OTU5MDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1595907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlthome", "html_url": "https://github.com/carlthome", "followers_url": "https://api.github.com/users/carlthome/followers", "following_url": "https://api.github.com/users/carlthome/following{/other_user}", "gists_url": "https://api.github.com/users/carlthome/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlthome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlthome/subscriptions", "organizations_url": "https://api.github.com/users/carlthome/orgs", "repos_url": "https://api.github.com/users/carlthome/repos", "events_url": "https://api.github.com/users/carlthome/events{/privacy}", "received_events_url": "https://api.github.com/users/carlthome/received_events", "type": "User", "site_admin": false}, "body": "If `self._num_features` is 1, will the gates be created? I think the minimum should be 4 here, no?", "created_at": "2017-04-11T14:57:06Z", "updated_at": "2017-08-07T15:19:17Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/8891#discussion_r110925057", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/8891", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/110925057"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/8891#discussion_r110925057"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/8891"}}, "body_html": "<p>If <code>self._num_features</code> is 1, will the gates be created? I think the minimum should be 4 here, no?</p>", "body_text": "If self._num_features is 1, will the gates be created? I think the minimum should be 4 here, no?"}