{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/348602561", "html_url": "https://github.com/tensorflow/tensorflow/issues/14887#issuecomment-348602561", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14887", "id": 348602561, "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODYwMjU2MQ==", "user": {"login": "YoelShoshan", "id": 7043815, "node_id": "MDQ6VXNlcjcwNDM4MTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7043815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YoelShoshan", "html_url": "https://github.com/YoelShoshan", "followers_url": "https://api.github.com/users/YoelShoshan/followers", "following_url": "https://api.github.com/users/YoelShoshan/following{/other_user}", "gists_url": "https://api.github.com/users/YoelShoshan/gists{/gist_id}", "starred_url": "https://api.github.com/users/YoelShoshan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YoelShoshan/subscriptions", "organizations_url": "https://api.github.com/users/YoelShoshan/orgs", "repos_url": "https://api.github.com/users/YoelShoshan/repos", "events_url": "https://api.github.com/users/YoelShoshan/events{/privacy}", "received_events_url": "https://api.github.com/users/YoelShoshan/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-01T20:11:12Z", "updated_at": "2017-12-01T20:16:32Z", "author_association": "NONE", "body_html": "<p>Also, few more thoughts about the API.<br>\nFor a first phase, having only the mentioned decode_compressed() operation will be great and completely usable.</p>\n<p>Thinking about how it may advance in the future, the following could be helpful as well:</p>\n<ul>\n<li>\n<p>A matching \"compress\" tensorflow operation. Possibly with a parameter describing the compression method (which may only allow compression_method=tf.compression.DEFLATE for a long time)</p>\n</li>\n<li>\n<p>In case there's support for more than one compression format, I believe that decode_compressed(...) should read the file header and deduce the compression format by itself, but in case it's not feasible due to some reason, then we'll need to provide compression_method=tf.compression.DEFLATE as an additional argument.</p>\n</li>\n</ul>", "body_text": "Also, few more thoughts about the API.\nFor a first phase, having only the mentioned decode_compressed() operation will be great and completely usable.\nThinking about how it may advance in the future, the following could be helpful as well:\n\n\nA matching \"compress\" tensorflow operation. Possibly with a parameter describing the compression method (which may only allow compression_method=tf.compression.DEFLATE for a long time)\n\n\nIn case there's support for more than one compression format, I believe that decode_compressed(...) should read the file header and deduce the compression format by itself, but in case it's not feasible due to some reason, then we'll need to provide compression_method=tf.compression.DEFLATE as an additional argument.", "body": "Also, few more thoughts about the API.\r\nFor a first phase, having only the mentioned decode_compressed() operation will be great and completely usable.\r\n\r\nThinking about how it may advance in the future, the following could be helpful as well:\r\n\r\n* A matching \"compress\" tensorflow operation. Possibly with a parameter describing the compression method (which may only allow compression_method=tf.compression.DEFLATE for a long time)\r\n\r\n* In case there's support for more than one compression format, I believe that decode_compressed(...) should read the file header and deduce the compression format by itself, but in case it's not feasible due to some reason, then we'll need to provide compression_method=tf.compression.DEFLATE as an additional argument.\r\n\r\n"}