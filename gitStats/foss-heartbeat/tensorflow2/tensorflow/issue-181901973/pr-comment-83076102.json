{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/83076102", "pull_request_review_id": 3940825, "id": 83076102, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgzMDc2MTAy", "diff_hunk": "@@ -301,15 +306,16 @@ def __init__(self, queue, ev_writer, flush_secs):\n     \"\"\"\n     threading.Thread.__init__(self)\n     self.daemon = True\n+    self._stop_flag = False\n     self._queue = queue\n     self._ev_writer = ev_writer\n     self._flush_secs = flush_secs\n     # The first event will be flushed immediately.\n     self._next_event_flush_time = 0\n \n-  def run(self):\n+  def _run(self):\n     while True:\n-      event = self._queue.get()\n+      event = self._queue.get(False)", "path": "tensorflow/python/summary/summary_iterator.py", "position": 67, "original_position": 31, "commit_id": "17ac36d8d88da3a691eda9f6c3d5739fc2888194", "original_commit_id": "e7a0767e1a494d8aa7f772df70a26c40e988be53", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "body": "Calling `self._queue.get(False)` when the queue is empty will result in this thread busy-waiting for a new element (or for the queue to be closed), which will have unacceptable performance.\n\nInstead of relying on exceptions, can you implement the sentinel object version?\n", "created_at": "2016-10-12T19:04:31Z", "updated_at": "2016-10-16T11:02:14Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/4860#discussion_r83076102", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/4860", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/83076102"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/4860#discussion_r83076102"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/4860"}}, "body_html": "<p>Calling <code>self._queue.get(False)</code> when the queue is empty will result in this thread busy-waiting for a new element (or for the queue to be closed), which will have unacceptable performance.</p>\n<p>Instead of relying on exceptions, can you implement the sentinel object version?</p>", "body_text": "Calling self._queue.get(False) when the queue is empty will result in this thread busy-waiting for a new element (or for the queue to be closed), which will have unacceptable performance.\nInstead of relying on exceptions, can you implement the sentinel object version?"}