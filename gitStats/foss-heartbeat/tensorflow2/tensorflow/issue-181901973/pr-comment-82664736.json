{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/82664736", "pull_request_review_id": 3553109, "id": 82664736, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgyNjY0NzM2", "diff_hunk": "@@ -0,0 +1,43 @@\n+# pylint: disable=g-bad-file-header\n+# Copyright 2016 The TensorFlow Authors. All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ==============================================================================\n+\"\"\"Tests for Runner.\"\"\"\n+\n+from __future__ import absolute_import\n+from __future__ import division\n+from __future__ import print_function\n+\n+import tempfile\n+import threading\n+\n+import tensorflow as tf\n+\n+from tensorflow.python.framework import ops\n+from tensorflow.python.summary.summary_iterator import SummaryWriter\n+\n+\n+class SummaryWriterTest(tf.test.TestCase):\n+  \"\"\"SummaryWriter tests.\"\"\"\n+\n+  def testLoggerThreadExit(self):\n+    writer = SummaryWriter(tempfile.mkdtemp(), graph=ops.get_default_graph())\n+    previous_thread_count = threading.active_count()\n+    writer.close()\n+    current_thread_count = threading.active_count()\n+    self.assertTrue(previous_thread_count + 1 == current_thread_count)\n+", "path": "tensorflow/contrib/learn/python/learn/tests/summary_writer_test.py", "position": null, "original_position": 40, "commit_id": "17ac36d8d88da3a691eda9f6c3d5739fc2888194", "original_commit_id": "65a4bf0c96061c50f9e0da1a5328df21a364c7d3", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "body": "Could you please add a test that calls `stop()` on the main thread, while a separate thread calls `add_event()` (and catches the appropriate exception when the queue is closed)? For bonus points, please then read back the written log, and ensure that the expected events are found within.\n", "created_at": "2016-10-10T19:07:08Z", "updated_at": "2016-10-16T11:02:14Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/4860#discussion_r82664736", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/4860", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/82664736"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/4860#discussion_r82664736"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/4860"}}, "body_html": "<p>Could you please add a test that calls <code>stop()</code> on the main thread, while a separate thread calls <code>add_event()</code> (and catches the appropriate exception when the queue is closed)? For bonus points, please then read back the written log, and ensure that the expected events are found within.</p>", "body_text": "Could you please add a test that calls stop() on the main thread, while a separate thread calls add_event() (and catches the appropriate exception when the queue is closed)? For bonus points, please then read back the written log, and ensure that the expected events are found within."}