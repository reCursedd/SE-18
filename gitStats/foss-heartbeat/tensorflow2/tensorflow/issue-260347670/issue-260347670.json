{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13295", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13295/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13295/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13295/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/13295", "id": 260347670, "node_id": "MDU6SXNzdWUyNjAzNDc2NzA=", "number": 13295, "title": "Pre-built binaries with symbol information?", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2017-09-25T17:01:49Z", "updated_at": "2018-01-03T00:27:02Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>What you you guys think about providing CI version of TensorFlow with built-in symbol information? This would make it easier to report bugs.</p>\n<p>I believe the following is sufficient to get optimized version with symbol tables.<br>\n<code>blaze build --cxxopt=-g2 --linkopt=-g2 --strip never -c opt</code></p>\n<p>My current problem is that I'm occasionally hitting segfaults due to <code>tensorflow::strings::FloatToBuffer</code>. I can't reproduce this in any small example. If there were a version of tf with symbol tables, I could just gdb on the core file and do <code>info locals</code> to get the value of offending float that causes the crash.</p>\n<pre><code>#0  0x00007ffb54a4941d in std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, float&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, float&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node(unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long) const ()\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\n#1  0x00007ffb5745b76e in float tensorflow::(anonymous namespace)::locale_independent_strtonum&lt;float&gt;(char const*, char const**) ()\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\n#2  0x00007ffb5745bf4c in tensorflow::strings::safe_strtof(char const*, float*)\n    ()\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\n#3  0x00007ffb5745bfe9 in tensorflow::strings::FloatToBuffer(float, char*) ()\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\n#4  0x00007ffb5735d7ce in tensorflow::Tensor::SummarizeValue[abi:cxx11](long long) const ()\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\n#5  0x00007ffb5735e3b5 in tensorflow::Tensor::DebugString[abi:cxx11]() const ()\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\n#6  0x00007ffb572f21ab in tensorflow::(anonymous namespace)::SummarizeTensor(tensorflow::TensorProto const&amp;) ()\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\n#7  0x00007ffb572f5529 in tensorflow::SummarizeAttrValue[abi:cxx11](tensorflow::AttrValue const&amp;) ()\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\n#8  0x00007ffb57322b9d in tensorflow::SummarizeAttrsHelper(tensorflow::AttrSlice, tensorflow::StringPiece) ()\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\n#9  0x00007ffb573231f3 in tensorflow::SummarizeNodeDef[abi:cxx11](tensorflow::NodeDef const&amp;) ()\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\n#10 0x00007ffb5732332f in tensorflow::SummarizeNode[abi:cxx11](tensorflow::Node const&amp;) ()\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\n#11 0x00007ffb55fc7886 in tensorflow::(anonymous namespace)::ExecutorState::Process(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long) ()\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\n#12 0x00007ffb55fc93cf in std::_Function_handler&lt;void (), tensorflow::(anonymous namespace)::ExecutorState::ScheduleReady(tensorflow::gtl::InlinedVector&lt;tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, 8&gt; const&amp;, tensorflow::(anonymous namespace)::ExecutorState::TaggedNodeReadyQueue*)::{lambda()#1}&gt;::_M_invoke(std::_Any_data const&amp;) ()\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\n#13 0x00007ffb57442c51 in Eigen::NonBlockingThreadPoolTempl&lt;tensorflow::thread::EigenEnvironment&gt;::WorkerLoop(int) ()\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\n#14 0x00007ffb57440d37 in std::_Function_handler&lt;void (), tensorflow::thread::EigenEnvironment::CreateThread(std::function&lt;void ()&gt;)::{lambda()#1}&gt;::_M_invoke(std::_Any_data const&amp;) ()\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\n#15 0x00007ffb6174c260 in ?? ()\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/scipy/sparse/../../../../libstdc++.so.6\n#16 0x00007ffb6d9926ba in start_thread (arg=0x7ffaa4906700)\n    at pthread_create.c:333\n#17 0x00007ffb6cdb03dd in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\n\n</code></pre>", "body_text": "What you you guys think about providing CI version of TensorFlow with built-in symbol information? This would make it easier to report bugs.\nI believe the following is sufficient to get optimized version with symbol tables.\nblaze build --cxxopt=-g2 --linkopt=-g2 --strip never -c opt\nMy current problem is that I'm occasionally hitting segfaults due to tensorflow::strings::FloatToBuffer. I can't reproduce this in any small example. If there were a version of tf with symbol tables, I could just gdb on the core file and do info locals to get the value of offending float that causes the crash.\n#0  0x00007ffb54a4941d in std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const ()\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\n#1  0x00007ffb5745b76e in float tensorflow::(anonymous namespace)::locale_independent_strtonum<float>(char const*, char const**) ()\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\n#2  0x00007ffb5745bf4c in tensorflow::strings::safe_strtof(char const*, float*)\n    ()\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\n#3  0x00007ffb5745bfe9 in tensorflow::strings::FloatToBuffer(float, char*) ()\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\n#4  0x00007ffb5735d7ce in tensorflow::Tensor::SummarizeValue[abi:cxx11](long long) const ()\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\n#5  0x00007ffb5735e3b5 in tensorflow::Tensor::DebugString[abi:cxx11]() const ()\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\n#6  0x00007ffb572f21ab in tensorflow::(anonymous namespace)::SummarizeTensor(tensorflow::TensorProto const&) ()\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\n#7  0x00007ffb572f5529 in tensorflow::SummarizeAttrValue[abi:cxx11](tensorflow::AttrValue const&) ()\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\n#8  0x00007ffb57322b9d in tensorflow::SummarizeAttrsHelper(tensorflow::AttrSlice, tensorflow::StringPiece) ()\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\n#9  0x00007ffb573231f3 in tensorflow::SummarizeNodeDef[abi:cxx11](tensorflow::NodeDef const&) ()\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\n#10 0x00007ffb5732332f in tensorflow::SummarizeNode[abi:cxx11](tensorflow::Node const&) ()\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\n#11 0x00007ffb55fc7886 in tensorflow::(anonymous namespace)::ExecutorState::Process(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long) ()\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\n#12 0x00007ffb55fc93cf in std::_Function_handler<void (), tensorflow::(anonymous namespace)::ExecutorState::ScheduleReady(tensorflow::gtl::InlinedVector<tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, 8> const&, tensorflow::(anonymous namespace)::ExecutorState::TaggedNodeReadyQueue*)::{lambda()#1}>::_M_invoke(std::_Any_data const&) ()\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\n#13 0x00007ffb57442c51 in Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::WorkerLoop(int) ()\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\n#14 0x00007ffb57440d37 in std::_Function_handler<void (), tensorflow::thread::EigenEnvironment::CreateThread(std::function<void ()>)::{lambda()#1}>::_M_invoke(std::_Any_data const&) ()\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\n#15 0x00007ffb6174c260 in ?? ()\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/scipy/sparse/../../../../libstdc++.so.6\n#16 0x00007ffb6d9926ba in start_thread (arg=0x7ffaa4906700)\n    at pthread_create.c:333\n#17 0x00007ffb6cdb03dd in clone ()\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109", "body": "What you you guys think about providing CI version of TensorFlow with built-in symbol information? This would make it easier to report bugs.\r\n\r\nI believe the following is sufficient to get optimized version with symbol tables.\r\n`blaze build --cxxopt=-g2 --linkopt=-g2 --strip never -c opt`\r\n\r\nMy current problem is that I'm occasionally hitting segfaults due to `tensorflow::strings::FloatToBuffer`. I can't reproduce this in any small example. If there were a version of tf with symbol tables, I could just gdb on the core file and do `info locals` to get the value of offending float that causes the crash.\r\n\r\n```\r\n#0  0x00007ffb54a4941d in std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const ()\r\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#1  0x00007ffb5745b76e in float tensorflow::(anonymous namespace)::locale_independent_strtonum<float>(char const*, char const**) ()\r\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#2  0x00007ffb5745bf4c in tensorflow::strings::safe_strtof(char const*, float*)\r\n    ()\r\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#3  0x00007ffb5745bfe9 in tensorflow::strings::FloatToBuffer(float, char*) ()\r\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#4  0x00007ffb5735d7ce in tensorflow::Tensor::SummarizeValue[abi:cxx11](long long) const ()\r\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#5  0x00007ffb5735e3b5 in tensorflow::Tensor::DebugString[abi:cxx11]() const ()\r\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#6  0x00007ffb572f21ab in tensorflow::(anonymous namespace)::SummarizeTensor(tensorflow::TensorProto const&) ()\r\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#7  0x00007ffb572f5529 in tensorflow::SummarizeAttrValue[abi:cxx11](tensorflow::AttrValue const&) ()\r\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#8  0x00007ffb57322b9d in tensorflow::SummarizeAttrsHelper(tensorflow::AttrSlice, tensorflow::StringPiece) ()\r\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#9  0x00007ffb573231f3 in tensorflow::SummarizeNodeDef[abi:cxx11](tensorflow::NodeDef const&) ()\r\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#10 0x00007ffb5732332f in tensorflow::SummarizeNode[abi:cxx11](tensorflow::Node const&) ()\r\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#11 0x00007ffb55fc7886 in tensorflow::(anonymous namespace)::ExecutorState::Process(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long) ()\r\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#12 0x00007ffb55fc93cf in std::_Function_handler<void (), tensorflow::(anonymous namespace)::ExecutorState::ScheduleReady(tensorflow::gtl::InlinedVector<tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, 8> const&, tensorflow::(anonymous namespace)::ExecutorState::TaggedNodeReadyQueue*)::{lambda()#1}>::_M_invoke(std::_Any_data const&) ()\r\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#13 0x00007ffb57442c51 in Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::WorkerLoop(int) ()\r\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#14 0x00007ffb57440d37 in std::_Function_handler<void (), tensorflow::thread::EigenEnvironment::CreateThread(std::function<void ()>)::{lambda()#1}>::_M_invoke(std::_Any_data const&) ()\r\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/tensorflow/python/_pywrap_tensorflow_internal.so\r\n#15 0x00007ffb6174c260 in ?? ()\r\n   from /home/yaroslav/anaconda3/envs/sep22/lib/python3.5/site-packages/scipy/sparse/../../../../libstdc++.so.6\r\n#16 0x00007ffb6d9926ba in start_thread (arg=0x7ffaa4906700)\r\n    at pthread_create.c:333\r\n#17 0x00007ffb6cdb03dd in clone ()\r\n    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\n```"}