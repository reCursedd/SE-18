{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19671", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19671/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19671/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19671/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19671", "id": 328179203, "node_id": "MDU6SXNzdWUzMjgxNzkyMDM=", "number": 19671, "title": "Variables may live longer than they suppose to on Eager Execution", "user": {"login": "julesbayet", "id": 38664274, "node_id": "MDQ6VXNlcjM4NjY0Mjc0", "avatar_url": "https://avatars3.githubusercontent.com/u/38664274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/julesbayet", "html_url": "https://github.com/julesbayet", "followers_url": "https://api.github.com/users/julesbayet/followers", "following_url": "https://api.github.com/users/julesbayet/following{/other_user}", "gists_url": "https://api.github.com/users/julesbayet/gists{/gist_id}", "starred_url": "https://api.github.com/users/julesbayet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/julesbayet/subscriptions", "organizations_url": "https://api.github.com/users/julesbayet/orgs", "repos_url": "https://api.github.com/users/julesbayet/repos", "events_url": "https://api.github.com/users/julesbayet/events{/privacy}", "received_events_url": "https://api.github.com/users/julesbayet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 736653459, "node_id": "MDU6TGFiZWw3MzY2NTM0NTk=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:eager", "name": "comp:eager", "color": "0052cc", "default": false}], "state": "open", "locked": false, "assignee": {"login": "jaingaurav", "id": 84372, "node_id": "MDQ6VXNlcjg0Mzcy", "avatar_url": "https://avatars1.githubusercontent.com/u/84372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaingaurav", "html_url": "https://github.com/jaingaurav", "followers_url": "https://api.github.com/users/jaingaurav/followers", "following_url": "https://api.github.com/users/jaingaurav/following{/other_user}", "gists_url": "https://api.github.com/users/jaingaurav/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaingaurav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaingaurav/subscriptions", "organizations_url": "https://api.github.com/users/jaingaurav/orgs", "repos_url": "https://api.github.com/users/jaingaurav/repos", "events_url": "https://api.github.com/users/jaingaurav/events{/privacy}", "received_events_url": "https://api.github.com/users/jaingaurav/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jaingaurav", "id": 84372, "node_id": "MDQ6VXNlcjg0Mzcy", "avatar_url": "https://avatars1.githubusercontent.com/u/84372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaingaurav", "html_url": "https://github.com/jaingaurav", "followers_url": "https://api.github.com/users/jaingaurav/followers", "following_url": "https://api.github.com/users/jaingaurav/following{/other_user}", "gists_url": "https://api.github.com/users/jaingaurav/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaingaurav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaingaurav/subscriptions", "organizations_url": "https://api.github.com/users/jaingaurav/orgs", "repos_url": "https://api.github.com/users/jaingaurav/repos", "events_url": "https://api.github.com/users/jaingaurav/events{/privacy}", "received_events_url": "https://api.github.com/users/jaingaurav/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2018-05-31T15:09:43Z", "updated_at": "2018-11-19T17:06:54Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.7.0</li>\n<li><strong>Python version</strong>: 3.6</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Using tensorflow EagerExecution. According to the documentation :</p>\n<blockquote>\n<p>During eager execution the lifetime of state objects is determined by the lifetime of their corresponding Python object.</p>\n</blockquote>\n<p>I have some trouble with how tensorflow handle memory. I would like to remove tensors from my memory after each iteration on this toy example. The results are shown in the chart.</p>\n<p>I have tried with Variables and with simple tensors. tf.assign doesn't do the job. More and more memory is used. It might be normal in order to be able to compute the gradient. But, if I apply some dummy optimizer at the end of each iteration, the memory isn't not released (more precisely, it happens sometimes but the global trend is that the memory use is growing).</p>\n<p>I haven't found any API to deal with that yet.</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/38664274/40790405-c17a6b2c-64ec-11e8-8a35-361885acd44a.PNG\"><img src=\"https://user-images.githubusercontent.com/38664274/40790405-c17a6b2c-64ec-11e8-8a35-361885acd44a.PNG\" alt=\"stackoverflow\" style=\"max-width:100%;\"></a></p>\n<h3>Source code / logs</h3>\n<pre><code>import tensorflow as tf\nimport tensorflow.contrib.eager as tfe\nimport numpy as np\nimport time as ti\n\n\ntf.enable_eager_execution()\n\nfor i in range(150):\n    all_subject=tfe.Variable(np.random.rand(200, 500), dtype=tf.float32)\n    tf.assign(all_subject, np.random.rand(200,500) )\n    ti.sleep(1.0)\n    del all_subject\n    ti.sleep(0.5)\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): 1.7.0\nPython version: 3.6\n\nDescribe the problem\nUsing tensorflow EagerExecution. According to the documentation :\n\nDuring eager execution the lifetime of state objects is determined by the lifetime of their corresponding Python object.\n\nI have some trouble with how tensorflow handle memory. I would like to remove tensors from my memory after each iteration on this toy example. The results are shown in the chart.\nI have tried with Variables and with simple tensors. tf.assign doesn't do the job. More and more memory is used. It might be normal in order to be able to compute the gradient. But, if I apply some dummy optimizer at the end of each iteration, the memory isn't not released (more precisely, it happens sometimes but the global trend is that the memory use is growing).\nI haven't found any API to deal with that yet.\n\nSource code / logs\nimport tensorflow as tf\nimport tensorflow.contrib.eager as tfe\nimport numpy as np\nimport time as ti\n\n\ntf.enable_eager_execution()\n\nfor i in range(150):\n    all_subject=tfe.Variable(np.random.rand(200, 500), dtype=tf.float32)\n    tf.assign(all_subject, np.random.rand(200,500) )\n    ti.sleep(1.0)\n    del all_subject\n    ti.sleep(0.5)", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.7.0\r\n- **Python version**: 3.6\r\n\r\n\r\n### Describe the problem\r\n\r\nUsing tensorflow EagerExecution. According to the documentation :\r\n\r\n> During eager execution the lifetime of state objects is determined by the lifetime of their corresponding Python object.\r\n\r\nI have some trouble with how tensorflow handle memory. I would like to remove tensors from my memory after each iteration on this toy example. The results are shown in the chart.\r\n\r\nI have tried with Variables and with simple tensors. tf.assign doesn't do the job. More and more memory is used. It might be normal in order to be able to compute the gradient. But, if I apply some dummy optimizer at the end of each iteration, the memory isn't not released (more precisely, it happens sometimes but the global trend is that the memory use is growing).\r\n\r\nI haven't found any API to deal with that yet.\r\n\r\n\r\n![stackoverflow](https://user-images.githubusercontent.com/38664274/40790405-c17a6b2c-64ec-11e8-8a35-361885acd44a.PNG)\r\n\r\n\r\n### Source code / logs\r\n\r\n```\r\nimport tensorflow as tf\r\nimport tensorflow.contrib.eager as tfe\r\nimport numpy as np\r\nimport time as ti\r\n\r\n\r\ntf.enable_eager_execution()\r\n\r\nfor i in range(150):\r\n    all_subject=tfe.Variable(np.random.rand(200, 500), dtype=tf.float32)\r\n    tf.assign(all_subject, np.random.rand(200,500) )\r\n    ti.sleep(1.0)\r\n    del all_subject\r\n    ti.sleep(0.5)\r\n```"}