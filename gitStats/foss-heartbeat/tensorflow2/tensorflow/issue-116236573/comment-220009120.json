{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/220009120", "html_url": "https://github.com/tensorflow/tensorflow/issues/110#issuecomment-220009120", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/110", "id": 220009120, "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDAwOTEyMA==", "user": {"login": "trungnt13", "id": 1390402, "node_id": "MDQ6VXNlcjEzOTA0MDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1390402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trungnt13", "html_url": "https://github.com/trungnt13", "followers_url": "https://api.github.com/users/trungnt13/followers", "following_url": "https://api.github.com/users/trungnt13/following{/other_user}", "gists_url": "https://api.github.com/users/trungnt13/gists{/gist_id}", "starred_url": "https://api.github.com/users/trungnt13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trungnt13/subscriptions", "organizations_url": "https://api.github.com/users/trungnt13/orgs", "repos_url": "https://api.github.com/users/trungnt13/repos", "events_url": "https://api.github.com/users/trungnt13/events{/privacy}", "received_events_url": "https://api.github.com/users/trungnt13/received_events", "type": "User", "site_admin": false}, "created_at": "2016-05-18T12:18:55Z", "updated_at": "2016-05-18T12:22:51Z", "author_association": "NONE", "body_html": "<p>Our administrator managed to run pip installed tensorflow package on RHEL 6.7 server (without building bazel and tensorflow source), the core idea is get separated newer version of GLIBC version:</p>\n<ul>\n<li>mkdir glibc</li>\n<li>cd $!</li>\n<li>wget <a href=\"http://launchpadlibrarian.net/137699828/libc6_2.17-0ubuntu5_amd64.deb\" rel=\"nofollow\">http://launchpadlibrarian.net/137699828/libc6_2.17-0ubuntu5_amd64.deb</a></li>\n<li>wget <a href=\"http://launchpadlibrarian.net/137699829/libc6-dev_2.17-0ubuntu5_amd64.deb\" rel=\"nofollow\">http://launchpadlibrarian.net/137699829/libc6-dev_2.17-0ubuntu5_amd64.deb</a></li>\n<li>ar p libc6_2.17-0ubuntu5_amd64.deb data.tar.gz | tar zx</li>\n<li>ar p libc6-dev_2.17-0ubuntu5_amd64.deb data.tar.gz | tar zx</li>\n<li>libcroot=/path/to/glibc/lib/x86_64-linux-gnu</li>\n<li><strong>LD_LIBRARY_PATH=$libcroot:$LD_LIBRARY_PATH</strong>  <em>$libcroot/ld-2.17.so</em>  <strong>$(which python)</strong></li>\n</ul>\n<p>Fast test:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\nhello <span class=\"pl-k\">=</span> tf.constant(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Hello, TensorFlow!<span class=\"pl-pds\">'</span></span>)\nsess <span class=\"pl-k\">=</span> tf.Session()\n<span class=\"pl-c1\">print</span>(sess.run(hello))\na <span class=\"pl-k\">=</span> tf.constant(<span class=\"pl-c1\">10</span>)\nb <span class=\"pl-k\">=</span> tf.constant(<span class=\"pl-c1\">32</span>)\n<span class=\"pl-c1\">print</span>(sess.run(a <span class=\"pl-k\">+</span> b))</pre></div>\n<p><strong>Note</strong>: this approach is only for running python scripts, remember that, every time you add $libcroot to your path all the shell commands are corrupted (i.e you cannot use <em>ls</em>, <em>cd</em> ...). You might use <strong>bash -l</strong>, or screen, or byobu before you try this so you don't mess up your own session.</p>", "body_text": "Our administrator managed to run pip installed tensorflow package on RHEL 6.7 server (without building bazel and tensorflow source), the core idea is get separated newer version of GLIBC version:\n\nmkdir glibc\ncd $!\nwget http://launchpadlibrarian.net/137699828/libc6_2.17-0ubuntu5_amd64.deb\nwget http://launchpadlibrarian.net/137699829/libc6-dev_2.17-0ubuntu5_amd64.deb\nar p libc6_2.17-0ubuntu5_amd64.deb data.tar.gz | tar zx\nar p libc6-dev_2.17-0ubuntu5_amd64.deb data.tar.gz | tar zx\nlibcroot=/path/to/glibc/lib/x86_64-linux-gnu\nLD_LIBRARY_PATH=$libcroot:$LD_LIBRARY_PATH  $libcroot/ld-2.17.so  $(which python)\n\nFast test:\nimport tensorflow as tf\nhello = tf.constant('Hello, TensorFlow!')\nsess = tf.Session()\nprint(sess.run(hello))\na = tf.constant(10)\nb = tf.constant(32)\nprint(sess.run(a + b))\nNote: this approach is only for running python scripts, remember that, every time you add $libcroot to your path all the shell commands are corrupted (i.e you cannot use ls, cd ...). You might use bash -l, or screen, or byobu before you try this so you don't mess up your own session.", "body": "Our administrator managed to run pip installed tensorflow package on RHEL 6.7 server (without building bazel and tensorflow source), the core idea is get separated newer version of GLIBC version:\n- mkdir glibc\n- cd $! \n- wget http://launchpadlibrarian.net/137699828/libc6_2.17-0ubuntu5_amd64.deb\n- wget http://launchpadlibrarian.net/137699829/libc6-dev_2.17-0ubuntu5_amd64.deb\n- ar p libc6_2.17-0ubuntu5_amd64.deb data.tar.gz | tar zx\n- ar p libc6-dev_2.17-0ubuntu5_amd64.deb data.tar.gz | tar zx\n- libcroot=/path/to/glibc/lib/x86_64-linux-gnu\n- **LD_LIBRARY_PATH=$libcroot:$LD_LIBRARY_PATH**  _$libcroot/ld-2.17.so_  **$(which python)**\n\nFast test:\n\n``` python\nimport tensorflow as tf\nhello = tf.constant('Hello, TensorFlow!')\nsess = tf.Session()\nprint(sess.run(hello))\na = tf.constant(10)\nb = tf.constant(32)\nprint(sess.run(a + b))\n```\n\n**Note**: this approach is only for running python scripts, remember that, every time you add $libcroot to your path all the shell commands are corrupted (i.e you cannot use _ls_, _cd_ ...). You might use **bash -l**, or screen, or byobu before you try this so you don't mess up your own session.\n"}