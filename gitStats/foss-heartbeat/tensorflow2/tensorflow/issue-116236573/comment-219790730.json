{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/219790730", "html_url": "https://github.com/tensorflow/tensorflow/issues/110#issuecomment-219790730", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/110", "id": 219790730, "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTc5MDczMA==", "user": {"login": "rdipietro", "id": 5150559, "node_id": "MDQ6VXNlcjUxNTA1NTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5150559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdipietro", "html_url": "https://github.com/rdipietro", "followers_url": "https://api.github.com/users/rdipietro/followers", "following_url": "https://api.github.com/users/rdipietro/following{/other_user}", "gists_url": "https://api.github.com/users/rdipietro/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdipietro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdipietro/subscriptions", "organizations_url": "https://api.github.com/users/rdipietro/orgs", "repos_url": "https://api.github.com/users/rdipietro/repos", "events_url": "https://api.github.com/users/rdipietro/events{/privacy}", "received_events_url": "https://api.github.com/users/rdipietro/received_events", "type": "User", "site_admin": false}, "created_at": "2016-05-17T17:23:59Z", "updated_at": "2016-05-17T17:25:40Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Update: Previous process was for a commit after release 7.</p>\n<p>Here are necessary changes for commit <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/1d4fd06ea9fa8fa0bae38f5919e4e47a3633cd34/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/1d4fd06ea9fa8fa0bae38f5919e4e47a3633cd34\"><tt>1d4fd06</tt></a>, which is after release 8:</p>\n<ol>\n<li>You need Bazel 0.2.x. As of this writing, with appropriate environment variables, Bazel at HEAD compiles simply with <code>./compile.sh</code>. Thank you <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3721087\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/damienmg\">@damienmg</a> !</li>\n<li>You still need to make the above changes to the TensorFlow files, including the changes to <code>CROSSTOOL</code> etc. (For some reason the bazel auto config doesn't work here.)</li>\n<li>Edit <code>third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc</code><br>\nand replace <code>#!/usr/bin/env python2.7</code> with<br>\n<code>#!/usr/bin/env /full/path/to/python2.7</code>. This is a hack to avoid bazel's confined environment from failing to pick up our custom Python location.</li>\n<li>Edit <code>bazel-out/host/bin/tensorflow/swig</code> and add<br>\n<code>export LD_LIBRARY_PATH=custom:paths:$LD_LIBRARY_PATH</code><br>\nbefore <code>swig</code> is run. Otherwise <code>swig</code> won't find libraries that exist in our <code>LD_LIBRARY_PATH</code>. This is another hack to get around the confined environment.</li>\n<li>Use the same <code>bazel build</code> command from above: <code>bazel build -c opt --config=cuda --linkopt '-lrt' --copt=\"-DGPR_BACKWARDS_COMPATIBILITY_MODE\" --conlyopt=\"-std=c99\" //tensorflow/tools/pip_package:build_pip_package</code></li>\n<li><code>cd bazel-bin/tensorflow/tools/pip_package/build_pip_package.runfiles</code> and <code>cp -r __main__/* .</code>. This is a hack associated with <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"149914823\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/2040\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/2040/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/2040\">#2040</a>.</li>\n<li>Finally we can <code>bazel-bin/tensorflow/tools/pip_package/build_pip_package ~/tensorflow_pkg</code>, and</li>\n<li><code>pip install ~/tensorflow_pkg/*</code></li>\n</ol>", "body_text": "Update: Previous process was for a commit after release 7.\nHere are necessary changes for commit 1d4fd06, which is after release 8:\n\nYou need Bazel 0.2.x. As of this writing, with appropriate environment variables, Bazel at HEAD compiles simply with ./compile.sh. Thank you @damienmg !\nYou still need to make the above changes to the TensorFlow files, including the changes to CROSSTOOL etc. (For some reason the bazel auto config doesn't work here.)\nEdit third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc\nand replace #!/usr/bin/env python2.7 with\n#!/usr/bin/env /full/path/to/python2.7. This is a hack to avoid bazel's confined environment from failing to pick up our custom Python location.\nEdit bazel-out/host/bin/tensorflow/swig and add\nexport LD_LIBRARY_PATH=custom:paths:$LD_LIBRARY_PATH\nbefore swig is run. Otherwise swig won't find libraries that exist in our LD_LIBRARY_PATH. This is another hack to get around the confined environment.\nUse the same bazel build command from above: bazel build -c opt --config=cuda --linkopt '-lrt' --copt=\"-DGPR_BACKWARDS_COMPATIBILITY_MODE\" --conlyopt=\"-std=c99\" //tensorflow/tools/pip_package:build_pip_package\ncd bazel-bin/tensorflow/tools/pip_package/build_pip_package.runfiles and cp -r __main__/* .. This is a hack associated with #2040.\nFinally we can bazel-bin/tensorflow/tools/pip_package/build_pip_package ~/tensorflow_pkg, and\npip install ~/tensorflow_pkg/*", "body": "Update: Previous process was for a commit after release 7.\n\nHere are necessary changes for commit 1d4fd06, which is after release 8:\n1. You need Bazel 0.2.x. As of this writing, with appropriate environment variables, Bazel at HEAD compiles simply with `./compile.sh`. Thank you @damienmg !\n2. You still need to make the above changes to the TensorFlow files, including the changes to `CROSSTOOL` etc. (For some reason the bazel auto config doesn't work here.)\n3. Edit `third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc`\n   and replace `#!/usr/bin/env python2.7` with\n   `#!/usr/bin/env /full/path/to/python2.7`. This is a hack to avoid bazel's confined environment from failing to pick up our custom Python location.\n4. Edit `bazel-out/host/bin/tensorflow/swig` and add\n   `export LD_LIBRARY_PATH=custom:paths:$LD_LIBRARY_PATH`\n   before `swig` is run. Otherwise `swig` won't find libraries that exist in our `LD_LIBRARY_PATH`. This is another hack to get around the confined environment.\n5. Use the same `bazel build` command from above: `bazel build -c opt --config=cuda --linkopt '-lrt' --copt=\"-DGPR_BACKWARDS_COMPATIBILITY_MODE\" --conlyopt=\"-std=c99\" //tensorflow/tools/pip_package:build_pip_package`\n6. `cd bazel-bin/tensorflow/tools/pip_package/build_pip_package.runfiles` and `cp -r __main__/* .`. This is a hack associated with https://github.com/tensorflow/tensorflow/issues/2040.\n7. Finally we can `bazel-bin/tensorflow/tools/pip_package/build_pip_package ~/tensorflow_pkg`, and\n8. `pip install ~/tensorflow_pkg/*`\n"}