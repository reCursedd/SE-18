{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/118509351", "pull_request_review_id": 40307139, "id": 118509351, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExODUwOTM1MQ==", "diff_hunk": "@@ -95,6 +95,40 @@ func TestMultipleGeneratedOps(t *testing.T) {\n \t}\n }\n \n+func TestScopeWithGraph(t *testing.T) {\n+\ts1 := NewScope()\n+\n+\tvar hello interface{} = \"hello\"\n+\ttensor1, _ := tf.NewTensor(hello)\n+\ts1.AddOperation(tf.OpSpec{", "path": "tensorflow/go/op/scope_test.go", "position": null, "original_position": 9, "commit_id": "8d3f717232b51030e66e20c0a94aa00d464cfdba", "original_commit_id": "2552870cc5be13fa80fee437f4551c3e0eccd6d6", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "Any particular reason to avoid the the `Const` method used in other tests in this file?\r\nSo this could be as simple as:\r\n\r\n```go\r\ns1 := NewScope()\r\nConst(s1, \"hello\")\r\ngraph, err := s1.Finalize()\r\nif err != nil {\r\n  t.Fatal(err)\r\n}\r\n\r\ns2 := NewScopeWithGraph(graph)\r\nConst(s2, \"world\")\r\nif err := s2.Err(); err != nil {\r\n  t.Fatal(err)\r\n}\r\n```", "created_at": "2017-05-25T15:17:05Z", "updated_at": "2017-05-25T21:52:32Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/10084#discussion_r118509351", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/10084", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/118509351"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/10084#discussion_r118509351"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/10084"}}, "body_html": "<p>Any particular reason to avoid the the <code>Const</code> method used in other tests in this file?<br>\nSo this could be as simple as:</p>\n<div class=\"highlight highlight-source-go\"><pre><span class=\"pl-smi\">s1</span> <span class=\"pl-k\">:=</span> <span class=\"pl-c1\">NewScope</span>()\n<span class=\"pl-c1\">Const</span>(s1, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>hello<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-smi\">graph</span>, <span class=\"pl-smi\">err</span> <span class=\"pl-k\">:=</span> s1.<span class=\"pl-c1\">Finalize</span>()\n<span class=\"pl-k\">if</span> err != <span class=\"pl-c1\">nil</span> {\n  t.<span class=\"pl-c1\">Fatal</span>(err)\n}\n\n<span class=\"pl-smi\">s2</span> <span class=\"pl-k\">:=</span> <span class=\"pl-c1\">NewScopeWithGraph</span>(graph)\n<span class=\"pl-c1\">Const</span>(s2, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>world<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-k\">if</span> <span class=\"pl-smi\">err</span> <span class=\"pl-k\">:=</span> s2.<span class=\"pl-c1\">Err</span>(); err != <span class=\"pl-c1\">nil</span> {\n  t.<span class=\"pl-c1\">Fatal</span>(err)\n}</pre></div>", "body_text": "Any particular reason to avoid the the Const method used in other tests in this file?\nSo this could be as simple as:\ns1 := NewScope()\nConst(s1, \"hello\")\ngraph, err := s1.Finalize()\nif err != nil {\n  t.Fatal(err)\n}\n\ns2 := NewScopeWithGraph(graph)\nConst(s2, \"world\")\nif err := s2.Err(); err != nil {\n  t.Fatal(err)\n}"}