{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/344815072", "html_url": "https://github.com/tensorflow/tensorflow/issues/14490#issuecomment-344815072", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14490", "id": 344815072, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDgxNTA3Mg==", "user": {"login": "gauss-clb", "id": 11674304, "node_id": "MDQ6VXNlcjExNjc0MzA0", "avatar_url": "https://avatars2.githubusercontent.com/u/11674304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gauss-clb", "html_url": "https://github.com/gauss-clb", "followers_url": "https://api.github.com/users/gauss-clb/followers", "following_url": "https://api.github.com/users/gauss-clb/following{/other_user}", "gists_url": "https://api.github.com/users/gauss-clb/gists{/gist_id}", "starred_url": "https://api.github.com/users/gauss-clb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gauss-clb/subscriptions", "organizations_url": "https://api.github.com/users/gauss-clb/orgs", "repos_url": "https://api.github.com/users/gauss-clb/repos", "events_url": "https://api.github.com/users/gauss-clb/events{/privacy}", "received_events_url": "https://api.github.com/users/gauss-clb/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-16T04:49:51Z", "updated_at": "2017-11-16T04:57:26Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=19293677\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ispirmustafa\">@ispirmustafa</a>  I have re-checked code, it will output <code>assert</code> error.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">streaming_mean_weight_test</span>():\n    <span class=\"pl-s\"><span class=\"pl-pds\">'''</span></span>\n<span class=\"pl-s\">        Average by weight</span>\n<span class=\"pl-s\">    <span class=\"pl-pds\">'''</span></span>\n    values <span class=\"pl-k\">=</span> tf.constant([[<span class=\"pl-c1\">1.0</span>, <span class=\"pl-c1\">2.0</span>], [<span class=\"pl-c1\">3.3</span>, <span class=\"pl-c1\">2.5</span>]])\n    weights <span class=\"pl-k\">=</span> tf.constant([[<span class=\"pl-c1\">0.3</span>, <span class=\"pl-k\">-</span><span class=\"pl-c1\">3.1</span>], [<span class=\"pl-k\">-</span><span class=\"pl-c1\">1.3</span>, <span class=\"pl-c1\">1.2</span>]])\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span>weights = tf.constant([[0.3, 3.1], [-1.3, 1.2]])</span>\n    mean_value, update_op <span class=\"pl-k\">=</span> tf.contrib.metrics.streaming_mean(values, <span class=\"pl-v\">weights</span><span class=\"pl-k\">=</span>weights)\n    tf_weight_mean <span class=\"pl-k\">=</span> tf.truediv(tf.reduce_sum(tf.multiply(values, weights)), tf.reduce_sum(weights))\n    <span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n        tf.local_variables_initializer().run()\n        <span class=\"pl-c1\">print</span>(update_op.eval())\n        _mean_value <span class=\"pl-k\">=</span> mean_value.eval()\n        _tf_weight_mean <span class=\"pl-k\">=</span> tf_weight_mean.eval()\n        <span class=\"pl-c1\">print</span>(_mean_value)\n        <span class=\"pl-c1\">print</span>(_tf_weight_mean)\n    <span class=\"pl-k\">assert</span> np.all(np.isclose(_mean_value, _tf_weight_mean)), <span class=\"pl-s\"><span class=\"pl-pds\">'</span>streaming_mean_weight_test is wrong!<span class=\"pl-pds\">'</span></span>\n\n\n<span class=\"pl-k\">if</span> <span class=\"pl-c1\">__name__</span> <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>__main__<span class=\"pl-pds\">'</span></span>:\n    streaming_mean_weight_test()</pre></div>", "body_text": "@ispirmustafa  I have re-checked code, it will output assert error.\nimport tensorflow as tf\nimport numpy as np\n\ndef streaming_mean_weight_test():\n    '''\n        Average by weight\n    '''\n    values = tf.constant([[1.0, 2.0], [3.3, 2.5]])\n    weights = tf.constant([[0.3, -3.1], [-1.3, 1.2]])\n    #weights = tf.constant([[0.3, 3.1], [-1.3, 1.2]])\n    mean_value, update_op = tf.contrib.metrics.streaming_mean(values, weights=weights)\n    tf_weight_mean = tf.truediv(tf.reduce_sum(tf.multiply(values, weights)), tf.reduce_sum(weights))\n    with tf.Session() as sess:\n        tf.local_variables_initializer().run()\n        print(update_op.eval())\n        _mean_value = mean_value.eval()\n        _tf_weight_mean = tf_weight_mean.eval()\n        print(_mean_value)\n        print(_tf_weight_mean)\n    assert np.all(np.isclose(_mean_value, _tf_weight_mean)), 'streaming_mean_weight_test is wrong!'\n\n\nif __name__ == '__main__':\n    streaming_mean_weight_test()", "body": "@ispirmustafa  I have re-checked code, it will output `assert` error.\r\n\r\n```python\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\ndef streaming_mean_weight_test():\r\n    '''\r\n        Average by weight\r\n    '''\r\n    values = tf.constant([[1.0, 2.0], [3.3, 2.5]])\r\n    weights = tf.constant([[0.3, -3.1], [-1.3, 1.2]])\r\n    #weights = tf.constant([[0.3, 3.1], [-1.3, 1.2]])\r\n    mean_value, update_op = tf.contrib.metrics.streaming_mean(values, weights=weights)\r\n    tf_weight_mean = tf.truediv(tf.reduce_sum(tf.multiply(values, weights)), tf.reduce_sum(weights))\r\n    with tf.Session() as sess:\r\n        tf.local_variables_initializer().run()\r\n        print(update_op.eval())\r\n        _mean_value = mean_value.eval()\r\n        _tf_weight_mean = tf_weight_mean.eval()\r\n        print(_mean_value)\r\n        print(_tf_weight_mean)\r\n    assert np.all(np.isclose(_mean_value, _tf_weight_mean)), 'streaming_mean_weight_test is wrong!'\r\n\r\n\r\nif __name__ == '__main__':\r\n    streaming_mean_weight_test()\r\n```\r\n\r\n"}