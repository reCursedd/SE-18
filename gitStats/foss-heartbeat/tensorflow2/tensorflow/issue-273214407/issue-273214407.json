{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14490", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14490/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14490/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14490/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14490", "id": 273214407, "node_id": "MDU6SXNzdWUyNzMyMTQ0MDc=", "number": 14490, "title": "tf.contrib.metrics.streaming_mean", "user": {"login": "gauss-clb", "id": 11674304, "node_id": "MDQ6VXNlcjExNjc0MzA0", "avatar_url": "https://avatars2.githubusercontent.com/u/11674304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gauss-clb", "html_url": "https://github.com/gauss-clb", "followers_url": "https://api.github.com/users/gauss-clb/followers", "following_url": "https://api.github.com/users/gauss-clb/following{/other_user}", "gists_url": "https://api.github.com/users/gauss-clb/gists{/gist_id}", "starred_url": "https://api.github.com/users/gauss-clb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gauss-clb/subscriptions", "organizations_url": "https://api.github.com/users/gauss-clb/orgs", "repos_url": "https://api.github.com/users/gauss-clb/repos", "events_url": "https://api.github.com/users/gauss-clb/events{/privacy}", "received_events_url": "https://api.github.com/users/gauss-clb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ispirmustafa", "id": 19293677, "node_id": "MDQ6VXNlcjE5MjkzNjc3", "avatar_url": "https://avatars1.githubusercontent.com/u/19293677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ispirmustafa", "html_url": "https://github.com/ispirmustafa", "followers_url": "https://api.github.com/users/ispirmustafa/followers", "following_url": "https://api.github.com/users/ispirmustafa/following{/other_user}", "gists_url": "https://api.github.com/users/ispirmustafa/gists{/gist_id}", "starred_url": "https://api.github.com/users/ispirmustafa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ispirmustafa/subscriptions", "organizations_url": "https://api.github.com/users/ispirmustafa/orgs", "repos_url": "https://api.github.com/users/ispirmustafa/repos", "events_url": "https://api.github.com/users/ispirmustafa/events{/privacy}", "received_events_url": "https://api.github.com/users/ispirmustafa/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ispirmustafa", "id": 19293677, "node_id": "MDQ6VXNlcjE5MjkzNjc3", "avatar_url": "https://avatars1.githubusercontent.com/u/19293677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ispirmustafa", "html_url": "https://github.com/ispirmustafa", "followers_url": "https://api.github.com/users/ispirmustafa/followers", "following_url": "https://api.github.com/users/ispirmustafa/following{/other_user}", "gists_url": "https://api.github.com/users/ispirmustafa/gists{/gist_id}", "starred_url": "https://api.github.com/users/ispirmustafa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ispirmustafa/subscriptions", "organizations_url": "https://api.github.com/users/ispirmustafa/orgs", "repos_url": "https://api.github.com/users/ispirmustafa/repos", "events_url": "https://api.github.com/users/ispirmustafa/events{/privacy}", "received_events_url": "https://api.github.com/users/ispirmustafa/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2017-11-12T09:06:59Z", "updated_at": "2017-11-29T16:44:38Z", "closed_at": "2017-11-29T16:44:38Z", "author_association": "NONE", "body_html": "<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">streaming_mean_weight_test</span>():\n    <span class=\"pl-s\"><span class=\"pl-pds\">'''</span></span>\n<span class=\"pl-s\">        Average by weight</span>\n<span class=\"pl-s\">    <span class=\"pl-pds\">'''</span></span>\n    values <span class=\"pl-k\">=</span> tf.constant([[<span class=\"pl-c1\">1.0</span>, <span class=\"pl-c1\">2.0</span>], [<span class=\"pl-c1\">3.3</span>, <span class=\"pl-c1\">2.5</span>]])\n    weights <span class=\"pl-k\">=</span> tf.constant([[<span class=\"pl-c1\">0.3</span>, <span class=\"pl-c1\">3.1</span>], [<span class=\"pl-k\">-</span><span class=\"pl-c1\">1.3</span>, <span class=\"pl-c1\">1.2</span>]])\n    mean_value, update_op <span class=\"pl-k\">=</span> tf.contrib.metrics.streaming_mean(values, <span class=\"pl-v\">weights</span><span class=\"pl-k\">=</span>weights)\n    tf_weight_mean <span class=\"pl-k\">=</span> tf.truediv(tf.reduce_sum(tf.multiply(values, weights)), tf.reduce_sum(weights))\n    <span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n        tf.local_variables_initializer().run()\n        <span class=\"pl-c1\">print</span>(update_op.eval())\n        _mean_value <span class=\"pl-k\">=</span> mean_value.eval()\n        _tf_weight_mean <span class=\"pl-k\">=</span> tf_weight_mean.eval()\n        <span class=\"pl-c1\">print</span>(_mean_value)\n        <span class=\"pl-c1\">print</span>(_tf_weight_mean)\n    <span class=\"pl-k\">assert</span> np.all(np.isclose(_mean_value, _tf_weight_mean)), <span class=\"pl-s\"><span class=\"pl-pds\">'</span>streaming_mean_weight_test is wrong!<span class=\"pl-pds\">'</span></span></pre></div>\n<p>It works well. But when I use <code>weights = tf.constant([[0.3, -3.1], [-1.3, 1.2]])</code> instead of weights above,<br>\nIt can't work, <code>_mean_value=0.0</code>, what's  wrong?</p>", "body_text": "def streaming_mean_weight_test():\n    '''\n        Average by weight\n    '''\n    values = tf.constant([[1.0, 2.0], [3.3, 2.5]])\n    weights = tf.constant([[0.3, 3.1], [-1.3, 1.2]])\n    mean_value, update_op = tf.contrib.metrics.streaming_mean(values, weights=weights)\n    tf_weight_mean = tf.truediv(tf.reduce_sum(tf.multiply(values, weights)), tf.reduce_sum(weights))\n    with tf.Session() as sess:\n        tf.local_variables_initializer().run()\n        print(update_op.eval())\n        _mean_value = mean_value.eval()\n        _tf_weight_mean = tf_weight_mean.eval()\n        print(_mean_value)\n        print(_tf_weight_mean)\n    assert np.all(np.isclose(_mean_value, _tf_weight_mean)), 'streaming_mean_weight_test is wrong!'\nIt works well. But when I use weights = tf.constant([[0.3, -3.1], [-1.3, 1.2]]) instead of weights above,\nIt can't work, _mean_value=0.0, what's  wrong?", "body": "```python\r\ndef streaming_mean_weight_test():\r\n    '''\r\n        Average by weight\r\n    '''\r\n    values = tf.constant([[1.0, 2.0], [3.3, 2.5]])\r\n    weights = tf.constant([[0.3, 3.1], [-1.3, 1.2]])\r\n    mean_value, update_op = tf.contrib.metrics.streaming_mean(values, weights=weights)\r\n    tf_weight_mean = tf.truediv(tf.reduce_sum(tf.multiply(values, weights)), tf.reduce_sum(weights))\r\n    with tf.Session() as sess:\r\n        tf.local_variables_initializer().run()\r\n        print(update_op.eval())\r\n        _mean_value = mean_value.eval()\r\n        _tf_weight_mean = tf_weight_mean.eval()\r\n        print(_mean_value)\r\n        print(_tf_weight_mean)\r\n    assert np.all(np.isclose(_mean_value, _tf_weight_mean)), 'streaming_mean_weight_test is wrong!'\r\n```\r\nIt works well. But when I use `weights = tf.constant([[0.3, -3.1], [-1.3, 1.2]])` instead of weights above,\r\nIt can't work, `_mean_value=0.0`, what's  wrong?\r\n"}