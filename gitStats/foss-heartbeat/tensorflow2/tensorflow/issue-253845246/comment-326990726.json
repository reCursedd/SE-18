{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/326990726", "html_url": "https://github.com/tensorflow/tensorflow/issues/12694#issuecomment-326990726", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12694", "id": 326990726, "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjk5MDcyNg==", "user": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-04T15:43:09Z", "updated_at": "2017-09-04T15:43:09Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Because queues are multithreaded, you have no guarantees about ordering, at all.  This particular case seems to fit within the \"vagaries of concurrency on your particular system\".  If you want proper ordering, use tf.contrib.data primitives in tf 1.3.  they're much easier to use and provide reproducible sequences.</p>", "body_text": "Because queues are multithreaded, you have no guarantees about ordering, at all.  This particular case seems to fit within the \"vagaries of concurrency on your particular system\".  If you want proper ordering, use tf.contrib.data primitives in tf 1.3.  they're much easier to use and provide reproducible sequences.", "body": "Because queues are multithreaded, you have no guarantees about ordering, at all.  This particular case seems to fit within the \"vagaries of concurrency on your particular system\".  If you want proper ordering, use tf.contrib.data primitives in tf 1.3.  they're much easier to use and provide reproducible sequences."}