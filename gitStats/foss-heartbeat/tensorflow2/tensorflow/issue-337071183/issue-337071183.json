{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20421", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20421/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20421/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20421/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20421", "id": 337071183, "node_id": "MDU6SXNzdWUzMzcwNzExODM=", "number": 20421, "title": "Guidelines to have a working C API (libtensorflow.so) on FreeBSD 11.1", "user": {"login": "jjourdin", "id": 7642198, "node_id": "MDQ6VXNlcjc2NDIxOTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/7642198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjourdin", "html_url": "https://github.com/jjourdin", "followers_url": "https://api.github.com/users/jjourdin/followers", "following_url": "https://api.github.com/users/jjourdin/following{/other_user}", "gists_url": "https://api.github.com/users/jjourdin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjourdin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjourdin/subscriptions", "organizations_url": "https://api.github.com/users/jjourdin/orgs", "repos_url": "https://api.github.com/users/jjourdin/repos", "events_url": "https://api.github.com/users/jjourdin/events{/privacy}", "received_events_url": "https://api.github.com/users/jjourdin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-29T17:02:43Z", "updated_at": "2018-09-01T09:17:09Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: FreeBSD-11.1</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: github branch r1.9</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.15.0</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: clang (llvm40)</li>\n<li><strong>Exact command to reproduce</strong>: bazel build //tensorflow:libtensorflow.so</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Tensorflow does not compile out of the box on FreeBSD-11.1 systems. I provide here the workarounds and adjustements i've done for compiling it. This is not perfect but I can run TensorFlow C programs on FreeBSD without problem.</p>\n<p>I hope it can be useful for someone.</p>\n<h3>Source code / logs</h3>\n<p>The following <code>static_cast&lt;int64&gt;</code> generates an error at compile time in tensorflow/core/platform/env.cc, line 350: <code>int32 tid = static_cast&lt;int32&gt;(static_cast&lt;int64&gt;(pthread_self()));</code></p>\n<p>static_cast from 'pthread_t' (aka 'pthread *') to 'int64' (aka 'long long') is not allowed</p>\n<p>As a workaround I used:<br>\n<code>int32 tid = (int32)((int64)(pthread_self()));</code></p>\n<p>A non-existing header file on FreeBSD is included in tensorflow/core/platform/posix/posix_file_system.cc, line 22:</p>\n<pre><code>#if !defined(__APPLE__)\n#include &lt;sys/sendfile.h&gt;\n#endif\n</code></pre>\n<p>I replaced this code with:</p>\n<pre><code>#if defined(__linux__) &amp;&amp; !defined(__ANDROID__)\n#include &lt;sys/sendfile.h&gt;\n#endif\n</code></pre>\n<p>At link time there are undefined references to backtrace() and backtrace_symbols_fd() functions in tensorflow/core/platform/*. This is because the <strong>LD flag <code>-lexecinfo</code> is missing in linker options</strong></p>\n<p>At last, under FreeBSD, the \"libdl\" library does not exists. So the <strong>LD flag <code>-ldl</code> should be removed from linker options</strong>.</p>", "body_text": "System information\n\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): FreeBSD-11.1\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): github branch r1.9\nBazel version (if compiling from source): 0.15.0\nGCC/Compiler version (if compiling from source): clang (llvm40)\nExact command to reproduce: bazel build //tensorflow:libtensorflow.so\n\nDescribe the problem\nTensorflow does not compile out of the box on FreeBSD-11.1 systems. I provide here the workarounds and adjustements i've done for compiling it. This is not perfect but I can run TensorFlow C programs on FreeBSD without problem.\nI hope it can be useful for someone.\nSource code / logs\nThe following static_cast<int64> generates an error at compile time in tensorflow/core/platform/env.cc, line 350: int32 tid = static_cast<int32>(static_cast<int64>(pthread_self()));\nstatic_cast from 'pthread_t' (aka 'pthread *') to 'int64' (aka 'long long') is not allowed\nAs a workaround I used:\nint32 tid = (int32)((int64)(pthread_self()));\nA non-existing header file on FreeBSD is included in tensorflow/core/platform/posix/posix_file_system.cc, line 22:\n#if !defined(__APPLE__)\n#include <sys/sendfile.h>\n#endif\n\nI replaced this code with:\n#if defined(__linux__) && !defined(__ANDROID__)\n#include <sys/sendfile.h>\n#endif\n\nAt link time there are undefined references to backtrace() and backtrace_symbols_fd() functions in tensorflow/core/platform/*. This is because the LD flag -lexecinfo is missing in linker options\nAt last, under FreeBSD, the \"libdl\" library does not exists. So the LD flag -ldl should be removed from linker options.", "body": "### System information\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: FreeBSD-11.1\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: github branch r1.9\r\n- **Bazel version (if compiling from source)**: 0.15.0\r\n- **GCC/Compiler version (if compiling from source)**: clang (llvm40)\r\n- **Exact command to reproduce**: bazel build //tensorflow:libtensorflow.so\r\n\r\n### Describe the problem\r\nTensorflow does not compile out of the box on FreeBSD-11.1 systems. I provide here the workarounds and adjustements i've done for compiling it. This is not perfect but I can run TensorFlow C programs on FreeBSD without problem. \r\n\r\nI hope it can be useful for someone.\r\n\r\n### Source code / logs\r\n\r\nThe following `static_cast<int64>` generates an error at compile time in tensorflow/core/platform/env.cc, line 350: `int32 tid = static_cast<int32>(static_cast<int64>(pthread_self()));`\r\n\r\nstatic_cast from 'pthread_t' (aka 'pthread *') to 'int64' (aka 'long long') is not allowed\r\n\r\nAs a workaround I used:\r\n`int32 tid = (int32)((int64)(pthread_self()));` \r\n\r\nA non-existing header file on FreeBSD is included in tensorflow/core/platform/posix/posix_file_system.cc, line 22:\r\n```\r\n#if !defined(__APPLE__)\r\n#include <sys/sendfile.h>\r\n#endif\r\n```\r\nI replaced this code with:\r\n```\r\n#if defined(__linux__) && !defined(__ANDROID__)\r\n#include <sys/sendfile.h>\r\n#endif\r\n```\r\n\r\nAt link time there are undefined references to backtrace() and backtrace_symbols_fd() functions in tensorflow/core/platform/*. This is because the **LD flag `-lexecinfo` is missing in linker options**\r\n\r\nAt last, under FreeBSD, the \"libdl\" library does not exists. So the **LD flag `-ldl` should be removed from linker options**.\r\n\r\n"}