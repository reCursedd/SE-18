{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/362649877", "html_url": "https://github.com/tensorflow/tensorflow/issues/16627#issuecomment-362649877", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16627", "id": 362649877, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjY0OTg3Nw==", "user": {"login": "noammor", "id": 4738203, "node_id": "MDQ6VXNlcjQ3MzgyMDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/4738203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noammor", "html_url": "https://github.com/noammor", "followers_url": "https://api.github.com/users/noammor/followers", "following_url": "https://api.github.com/users/noammor/following{/other_user}", "gists_url": "https://api.github.com/users/noammor/gists{/gist_id}", "starred_url": "https://api.github.com/users/noammor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noammor/subscriptions", "organizations_url": "https://api.github.com/users/noammor/orgs", "repos_url": "https://api.github.com/users/noammor/repos", "events_url": "https://api.github.com/users/noammor/events{/privacy}", "received_events_url": "https://api.github.com/users/noammor/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-02T17:26:57Z", "updated_at": "2018-02-02T17:26:57Z", "author_association": "NONE", "body_html": "<p>I can confirm that <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=2096611\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jingraham\">@jingraham</a> 's workaround fixes the issue. I ended up using this function, since I need to be able to load the placeholders by name:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">placeholder</span>(<span class=\"pl-k\">**</span><span class=\"pl-smi\">kwargs</span>):\n    name <span class=\"pl-k\">=</span> kwargs[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>name<span class=\"pl-pds\">'</span></span>]\n    <span class=\"pl-k\">del</span> kwargs[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>name<span class=\"pl-pds\">'</span></span>]\n\n    tf_placeholder <span class=\"pl-k\">=</span> tf.placeholder(<span class=\"pl-k\">**</span>kwargs)\n    <span class=\"pl-k\">return</span> tf.identity(tf_placeholder, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span>name)</pre></div>", "body_text": "I can confirm that @jingraham 's workaround fixes the issue. I ended up using this function, since I need to be able to load the placeholders by name:\ndef placeholder(**kwargs):\n    name = kwargs['name']\n    del kwargs['name']\n\n    tf_placeholder = tf.placeholder(**kwargs)\n    return tf.identity(tf_placeholder, name=name)", "body": "I can confirm that @jingraham 's workaround fixes the issue. I ended up using this function, since I need to be able to load the placeholders by name:\r\n\r\n```python\r\ndef placeholder(**kwargs):\r\n    name = kwargs['name']\r\n    del kwargs['name']\r\n\r\n    tf_placeholder = tf.placeholder(**kwargs)\r\n    return tf.identity(tf_placeholder, name=name)\r\n```"}