{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/218617593", "html_url": "https://github.com/tensorflow/tensorflow/pull/2187#issuecomment-218617593", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2187", "id": 218617593, "node_id": "MDEyOklzc3VlQ29tbWVudDIxODYxNzU5Mw==", "user": {"login": "samjabrahams", "id": 11607205, "node_id": "MDQ6VXNlcjExNjA3MjA1", "avatar_url": "https://avatars0.githubusercontent.com/u/11607205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samjabrahams", "html_url": "https://github.com/samjabrahams", "followers_url": "https://api.github.com/users/samjabrahams/followers", "following_url": "https://api.github.com/users/samjabrahams/following{/other_user}", "gists_url": "https://api.github.com/users/samjabrahams/gists{/gist_id}", "starred_url": "https://api.github.com/users/samjabrahams/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samjabrahams/subscriptions", "organizations_url": "https://api.github.com/users/samjabrahams/orgs", "repos_url": "https://api.github.com/users/samjabrahams/repos", "events_url": "https://api.github.com/users/samjabrahams/events{/privacy}", "received_events_url": "https://api.github.com/users/samjabrahams/received_events", "type": "User", "site_admin": false}, "created_at": "2016-05-11T23:14:43Z", "updated_at": "2016-05-11T23:14:43Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I've pushed the next WIP commit. Here's the summary:</p>\n<ul>\n<li>Refactored the various kernel registration macros</li>\n<li>Changed generic typename <code>I</code> to <code>TI</code></li>\n<li>Added support for int8, int16, int32, and uint8 for the <code>indices</code> parameter</li>\n<li>Separated out test for various indices types into <code>testIndicesTypes</code></li>\n<li>Added base test for string support - <em>not passing</em></li>\n<li>Adjusted Python wrapper to maintain backwards compatibility. If <code>dtype</code> is not passed in, <code>one_hot</code>'s output will now take on the dtype of <code>on_value</code> and/or <code>off_value</code> (instead of converting to <code>float32</code>).\n<ul>\n<li>If none of <code>on_value</code>, <code>off_value</code>, or <code>dtype</code> is provided, the output will be of type <code>float32</code></li>\n</ul>\n</li>\n</ul>\n<hr>\n<p>I'm having trouble getting strings to work properly. In <a href=\"https://github.com/tensorflow/tensorflow/pull/2187/files#diff-305762e23976349d47a199ab48ded4e4R309\">the current, simple string test</a>, I get the following error:</p>\n<pre><code>AssertionError: Shape mismatch: expected (3, 3), got ().\n</code></pre>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1794715\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ebrevdo\">@ebrevdo</a> Thoughts, when you get the chance?</p>", "body_text": "I've pushed the next WIP commit. Here's the summary:\n\nRefactored the various kernel registration macros\nChanged generic typename I to TI\nAdded support for int8, int16, int32, and uint8 for the indices parameter\nSeparated out test for various indices types into testIndicesTypes\nAdded base test for string support - not passing\nAdjusted Python wrapper to maintain backwards compatibility. If dtype is not passed in, one_hot's output will now take on the dtype of on_value and/or off_value (instead of converting to float32).\n\nIf none of on_value, off_value, or dtype is provided, the output will be of type float32\n\n\n\n\nI'm having trouble getting strings to work properly. In the current, simple string test, I get the following error:\nAssertionError: Shape mismatch: expected (3, 3), got ().\n\n@ebrevdo Thoughts, when you get the chance?", "body": "I've pushed the next WIP commit. Here's the summary:\n- Refactored the various kernel registration macros\n- Changed generic typename `I` to `TI`\n- Added support for int8, int16, int32, and uint8 for the `indices` parameter\n- Separated out test for various indices types into `testIndicesTypes`\n- Added base test for string support - _not passing_\n- Adjusted Python wrapper to maintain backwards compatibility. If `dtype` is not passed in, `one_hot`'s output will now take on the dtype of `on_value` and/or `off_value` (instead of converting to `float32`).\n  - If none of `on_value`, `off_value`, or `dtype` is provided, the output will be of type `float32`\n\n---\n\nI'm having trouble getting strings to work properly. In [the current, simple string test](https://github.com/tensorflow/tensorflow/pull/2187/files#diff-305762e23976349d47a199ab48ded4e4R309), I get the following error:\n\n```\nAssertionError: Shape mismatch: expected (3, 3), got ().\n```\n\n@ebrevdo Thoughts, when you get the chance?\n"}