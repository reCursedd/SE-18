{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/63645290", "pull_request_review_id": null, "id": 63645290, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzNjQ1Mjkw", "diff_hunk": "@@ -1908,20 +1938,51 @@ def one_hot(indices, depth, on_value=1, off_value=0,\n     output: The one-hot tensor.\n \n   Raises:\n-    TypeError: If dtype is `tf.string`\n+    TypeError: If dtype of either `on_value` or `off_value` don't match `dtype`\n+    TypeError: If dtype of `on_value` and `off_value` don't match one another\n   \"\"\"\n-  # Check for bad dtype specification\n-  if dtype == dtypes.string:\n-    raise TypeError(\"dtype must be a numeric type\")\n-\n   with ops.op_scope([indices, depth, on_value, off_value,\n             axis, dtype], name, \"one_hot\") as name:\n-    on_value = ops.convert_to_tensor(on_value, dtype=dtype, name=\"on_value\")\n-    off_value = ops.convert_to_tensor(off_value, dtype=dtype, name=\"off_value\")\n-    indices = ops.convert_to_tensor(indices, dtype=dtypes.int64, name=\"indices\")\n-    depth = ops.convert_to_tensor(depth, dtype=dtypes.int32, name=\"depth\")\n-    return gen_array_ops._one_hot(indices, depth, on_value, off_value, axis,\n-                                  name)\n+    on_exists = on_value is not None\n+    off_exists = off_value is not None\n+\n+    on_dtype = ops.convert_to_tensor(on_value).dtype.base_dtype if on_exists \\\n+                  else None\n+    off_dtype = ops.convert_to_tensor(off_value).dtype.base_dtype if off_exists\\\n+                  else None\n+    \n+    if on_exists or off_exists:\n+      if dtype is not None:\n+        # Ensure provided on_value and/or off_value match dtype\n+        if (on_exists and on_dtype != dtype):\n+          raise TypeError(\"dtype {0} of on_value does not match \" \\\n+                          \"dtype parameter {1}\".format(on_dtype, dtype))\n+        if (off_exists and off_dtype != dtype): \n+          raise TypeError(\"dtype {0} of off_value does not match \" \\\n+                          \"dtype parameter {1}\".format(off_dtype, dtype))\n+      else:\n+        # dtype not provided: automatically assign it\n+        dtype = on_dtype if on_exists else off_dtype\n+    elif dtype is None:\n+      # None of on_value, off_value, or dtype provided. Default dtype to float32\n+      dtype = dtypes.float32\n+    \n+    if not on_exists:\n+      # on_value not provided: assign to value 1 of type dtype\n+      on_value = ops.convert_to_tensor(1, dtype, name=\"on_value\")\n+      on_dtype = dtype\n+    if not off_exists:\n+      # off_value not provided: assign to value 0 of type dtype\n+      off_value = ops.convert_to_tensor(0, dtype, name=\"off_value\")\n+      off_dtype = dtype\n+\n+    if on_dtype != off_dtype:\n+      raise TypeError(\"dtype {0} of on_value does not match \" \\\n+                      \"dtype {1} of off_value\".format(on_dtype, off_dtype))\n+\n+    depth = gen_math_ops.cast(depth, dtypes.int32, name=\"depth\")", "path": "tensorflow/python/ops/array_ops.py", "position": null, "original_position": 121, "commit_id": "325f7369becc9ffc32be285a9bdc728ada158418", "original_commit_id": "c1ca121e1c9e35f915b1e805cf784709b8813f27", "user": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "body": "do you still need this cast?\n\nhow about this: depth should be the same type as indices, and in the C++ and op signature its type can be TI. here just cast to indices.dtype\n", "created_at": "2016-05-18T05:04:10Z", "updated_at": "2016-05-22T07:31:30Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/2187#discussion_r63645290", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/2187", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/63645290"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/2187#discussion_r63645290"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/2187"}}, "body_html": "<p>do you still need this cast?</p>\n<p>how about this: depth should be the same type as indices, and in the C++ and op signature its type can be TI. here just cast to indices.dtype</p>", "body_text": "do you still need this cast?\nhow about this: depth should be the same type as indices, and in the C++ and op signature its type can be TI. here just cast to indices.dtype"}