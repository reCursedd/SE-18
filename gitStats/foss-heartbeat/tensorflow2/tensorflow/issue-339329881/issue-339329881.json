{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20639", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20639/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20639/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20639/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20639", "id": 339329881, "node_id": "MDU6SXNzdWUzMzkzMjk4ODE=", "number": 20639, "title": "Assignment inside while loop affected by concurrency", "user": {"login": "mohanr", "id": 367258, "node_id": "MDQ6VXNlcjM2NzI1OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/367258?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mohanr", "html_url": "https://github.com/mohanr", "followers_url": "https://api.github.com/users/mohanr/followers", "following_url": "https://api.github.com/users/mohanr/following{/other_user}", "gists_url": "https://api.github.com/users/mohanr/gists{/gist_id}", "starred_url": "https://api.github.com/users/mohanr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mohanr/subscriptions", "organizations_url": "https://api.github.com/users/mohanr/orgs", "repos_url": "https://api.github.com/users/mohanr/repos", "events_url": "https://api.github.com/users/mohanr/events{/privacy}", "received_events_url": "https://api.github.com/users/mohanr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-07-09T07:11:56Z", "updated_at": "2018-07-17T14:57:17Z", "closed_at": "2018-07-17T14:57:16Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nYes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nWindows 8 (CPU)</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\nBinary</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\n1.2.1</li>\n<li><strong>Python version</strong>:<br>\nPython 3.6.5 |Anaconda</li>\n<li><strong>Bazel version</strong>:<br>\nN/A</li>\n<li><strong>CUDA/cuDNN version</strong>:<br>\nN/A</li>\n<li><strong>GPU model and memory</strong>:<br>\nN/A</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<p>No gpu</p>\n<h3>Describe the problem</h3>\n<p>I wrote this code to answer a SO question but then realized the results are inconsistent probably due to the concurrency involved. The correct answer is returned repeatedly a few times but then very randomly. All other answers are wrong.<br>\nI have also read about a switch that turns off concurrent execution but generally the concurrency API and the memory model take care of almost all cases without the involvement of the programmer. In the case of Java it is <a href=\"http://download.oracle.com/otndocs/jcp/memory_model-1.0-pfd-spec-oth-JSpec/\" rel=\"nofollow\">JMM</a></p>\n<p>It isn't clear whether this is concurrency or parallelism ?</p>\n<h3>Source code / logs</h3>\n<pre><code>import tensorflow as tf\n\nv = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]\nn = len(v)\na1 = tf.Variable(v, name = 'a')\n\ndef cond(i, _):\n    return i &lt; n\n\ns = tf.InteractiveSession()\ns.run(tf.global_variables_initializer())\n\ndef body( i, _):\n    x = a1[i-1]\n    y = a1[i-2]\n    z = tf.add(x,y)\n    op = a1[i].assign( tf.add(x,y) )\n    increment = tf.add(i, 1)\n    return increment, op\n\nprint(s.run(tf.while_loop(cond, body, [2, a1])))\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nYes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nWindows 8 (CPU)\nTensorFlow installed from (source or binary):\nBinary\nTensorFlow version (use command below):\n1.2.1\nPython version:\nPython 3.6.5 |Anaconda\nBazel version:\nN/A\nCUDA/cuDNN version:\nN/A\nGPU model and memory:\nN/A\nExact command to reproduce:\n\nNo gpu\nDescribe the problem\nI wrote this code to answer a SO question but then realized the results are inconsistent probably due to the concurrency involved. The correct answer is returned repeatedly a few times but then very randomly. All other answers are wrong.\nI have also read about a switch that turns off concurrent execution but generally the concurrency API and the memory model take care of almost all cases without the involvement of the programmer. In the case of Java it is JMM\nIt isn't clear whether this is concurrency or parallelism ?\nSource code / logs\nimport tensorflow as tf\n\nv = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]\nn = len(v)\na1 = tf.Variable(v, name = 'a')\n\ndef cond(i, _):\n    return i < n\n\ns = tf.InteractiveSession()\ns.run(tf.global_variables_initializer())\n\ndef body( i, _):\n    x = a1[i-1]\n    y = a1[i-2]\n    z = tf.add(x,y)\n    op = a1[i].assign( tf.add(x,y) )\n    increment = tf.add(i, 1)\n    return increment, op\n\nprint(s.run(tf.while_loop(cond, body, [2, a1])))", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n      Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\n        Windows 8 (CPU)\r\n- **TensorFlow installed from (source or binary)**:\r\n        Binary\r\n- **TensorFlow version (use command below)**:\r\n       1.2.1\r\n- **Python version**: \r\n      Python 3.6.5 |Anaconda\r\n- **Bazel version**: \r\n    N/A\r\n- **CUDA/cuDNN version**:\r\n      N/A\r\n- **GPU model and memory**:\r\n     N/A\r\n- **Exact command to reproduce**:\r\n\r\nNo gpu\r\n\r\n### Describe the problem\r\n\r\nI wrote this code to answer a SO question but then realized the results are inconsistent probably due to the concurrency involved. The correct answer is returned repeatedly a few times but then very randomly. All other answers are wrong.\r\nI have also read about a switch that turns off concurrent execution but generally the concurrency API and the memory model take care of almost all cases without the involvement of the programmer. In the case of Java it is [JMM](http://download.oracle.com/otndocs/jcp/memory_model-1.0-pfd-spec-oth-JSpec/)\r\n\r\nIt isn't clear whether this is concurrency or parallelism ?\r\n\r\n\r\n### Source code / logs\r\n\r\n```\r\nimport tensorflow as tf\r\n\r\nv = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\nn = len(v)\r\na1 = tf.Variable(v, name = 'a')\r\n\r\ndef cond(i, _):\r\n    return i < n\r\n\r\ns = tf.InteractiveSession()\r\ns.run(tf.global_variables_initializer())\r\n\r\ndef body( i, _):\r\n    x = a1[i-1]\r\n    y = a1[i-2]\r\n    z = tf.add(x,y)\r\n    op = a1[i].assign( tf.add(x,y) )\r\n    increment = tf.add(i, 1)\r\n    return increment, op\r\n\r\nprint(s.run(tf.while_loop(cond, body, [2, a1])))\r\n```\r\n"}