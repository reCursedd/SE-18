{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/268061087", "html_url": "https://github.com/tensorflow/tensorflow/issues/6399#issuecomment-268061087", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6399", "id": 268061087, "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODA2MTA4Nw==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-19T19:52:37Z", "updated_at": "2016-12-20T00:10:33Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Constants are special in that their value is inlined into the graph, so the value is defined before session is created. Functionality like static shape-inference relies on this to figure out shapes before the first run call. If you allow constants to be undefined until the first session run, that would complicate that logic. Also, how would you deal with single Graph, but multiple Session objects? Currently constant is in the graph, so the value is unambiguous.</p>\n<p>What if you create two sessions and evaluate the \"constant\". Would the \"constant\" value be the one initialized in the current session, or will it transfer the value of constant from the other session? If latter, that would need a store that's shared between Sessions, which is a lot like variables.</p>\n<p>So you could implement the functionality you want by using variables. Use <code>collections=[]</code> to exempt the variable from <code>tf.initialize_all_variables</code> and run the initializer manually</p>\n<pre><code>queue1 = tf.FIFOQueue(capacity=10, dtypes=[tf.int32], shapes=[()])\nsess = tf.Session()\nsess.run(queue1.enqueue(1))\na = tf.Variable(queue1.dequeue(), collections=[])\nsess.run(a.initializer)\n\n</code></pre>", "body_text": "Constants are special in that their value is inlined into the graph, so the value is defined before session is created. Functionality like static shape-inference relies on this to figure out shapes before the first run call. If you allow constants to be undefined until the first session run, that would complicate that logic. Also, how would you deal with single Graph, but multiple Session objects? Currently constant is in the graph, so the value is unambiguous.\nWhat if you create two sessions and evaluate the \"constant\". Would the \"constant\" value be the one initialized in the current session, or will it transfer the value of constant from the other session? If latter, that would need a store that's shared between Sessions, which is a lot like variables.\nSo you could implement the functionality you want by using variables. Use collections=[] to exempt the variable from tf.initialize_all_variables and run the initializer manually\nqueue1 = tf.FIFOQueue(capacity=10, dtypes=[tf.int32], shapes=[()])\nsess = tf.Session()\nsess.run(queue1.enqueue(1))\na = tf.Variable(queue1.dequeue(), collections=[])\nsess.run(a.initializer)", "body": "Constants are special in that their value is inlined into the graph, so the value is defined before session is created. Functionality like static shape-inference relies on this to figure out shapes before the first run call. If you allow constants to be undefined until the first session run, that would complicate that logic. Also, how would you deal with single Graph, but multiple Session objects? Currently constant is in the graph, so the value is unambiguous.\r\n\r\nWhat if you create two sessions and evaluate the \"constant\". Would the \"constant\" value be the one initialized in the current session, or will it transfer the value of constant from the other session? If latter, that would need a store that's shared between Sessions, which is a lot like variables.\r\n\r\nSo you could implement the functionality you want by using variables. Use `collections=[]` to exempt the variable from `tf.initialize_all_variables` and run the initializer manually\r\n\r\n```\r\nqueue1 = tf.FIFOQueue(capacity=10, dtypes=[tf.int32], shapes=[()])\r\nsess = tf.Session()\r\nsess.run(queue1.enqueue(1))\r\na = tf.Variable(queue1.dequeue(), collections=[])\r\nsess.run(a.initializer)\r\n\r\n```"}