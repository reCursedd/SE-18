{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/145875567", "pull_request_review_id": 70740925, "id": 145875567, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTg3NTU2Nw==", "diff_hunk": "@@ -252,7 +252,7 @@ def _FilterInt(v):\n def _FilterFloat(v):\n   if isinstance(v, (list, tuple)):\n     return _FirstNotNone([_FilterFloat(x) for x in v])\n-  return None if isinstance(v, compat.real_types) else _NotNone(v)\n+  return None if isinstance(v, compat.real_types) or v is None else _NotNone(v)", "path": "tensorflow/python/framework/tensor_util.py", "position": null, "original_position": 5, "commit_id": "d0d7576bb8f6a259771eb838a2f4b616562b687e", "original_commit_id": "46fa50e1d8ec80a3dd6ae207c2b8714b776097a3", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "body": "I'd defer further to @josh11b, since he wrote the original code that intentionally raises an exception (albeit perhaps not with the message intended) when `None` is present in a `tf.float32` or `tf.float64` constant. It looks like `tf.float16` slipped through the cracks when it was added, and we defer to NumPy semantics.\r\n\r\n(My 2 cents: NumPy parity seems worth trying to achieve here, since I don't think it comes at a cost to backwards compatibility. However, I'm not sure what all the consequences of the change would be.)", "created_at": "2017-10-20T04:11:38Z", "updated_at": "2017-11-05T02:13:55Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/13834#discussion_r145875567", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13834", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/145875567"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/13834#discussion_r145875567"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13834"}}, "body_html": "<p>I'd defer further to <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=15258583\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/josh11b\">@josh11b</a>, since he wrote the original code that intentionally raises an exception (albeit perhaps not with the message intended) when <code>None</code> is present in a <code>tf.float32</code> or <code>tf.float64</code> constant. It looks like <code>tf.float16</code> slipped through the cracks when it was added, and we defer to NumPy semantics.</p>\n<p>(My 2 cents: NumPy parity seems worth trying to achieve here, since I don't think it comes at a cost to backwards compatibility. However, I'm not sure what all the consequences of the change would be.)</p>", "body_text": "I'd defer further to @josh11b, since he wrote the original code that intentionally raises an exception (albeit perhaps not with the message intended) when None is present in a tf.float32 or tf.float64 constant. It looks like tf.float16 slipped through the cracks when it was added, and we defer to NumPy semantics.\n(My 2 cents: NumPy parity seems worth trying to achieve here, since I don't think it comes at a cost to backwards compatibility. However, I'm not sure what all the consequences of the change would be.)", "in_reply_to_id": 145866804}