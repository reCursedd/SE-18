{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/379479593", "html_url": "https://github.com/tensorflow/tensorflow/issues/17356#issuecomment-379479593", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17356", "id": 379479593, "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTQ3OTU5Mw==", "user": {"login": "yanghoonkim", "id": 9985986, "node_id": "MDQ6VXNlcjk5ODU5ODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/9985986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanghoonkim", "html_url": "https://github.com/yanghoonkim", "followers_url": "https://api.github.com/users/yanghoonkim/followers", "following_url": "https://api.github.com/users/yanghoonkim/following{/other_user}", "gists_url": "https://api.github.com/users/yanghoonkim/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanghoonkim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanghoonkim/subscriptions", "organizations_url": "https://api.github.com/users/yanghoonkim/orgs", "repos_url": "https://api.github.com/users/yanghoonkim/repos", "events_url": "https://api.github.com/users/yanghoonkim/events{/privacy}", "received_events_url": "https://api.github.com/users/yanghoonkim/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-07T15:57:24Z", "updated_at": "2018-04-07T15:57:24Z", "author_association": "NONE", "body_html": "<p>Oh, I found that I only checked the following link:<br>\n<a href=\"https://www.tensorflow.org/versions/r1.4/extend/estimators\" rel=\"nofollow\">https://www.tensorflow.org/versions/r1.4/extend/estimators</a><br>\nAnd in the link, <code>lables</code> in <code>model_fn</code> is only explained as:</p>\n<blockquote>\n<p>labels: A Tensor containing the labels passed to the model via input_fn. Will be empty for predict() calls, as these are the values the model will infer.</p>\n</blockquote>\n<p>So did i make such a suggestion.</p>\n<blockquote>\n<ul>\n<li>labels: This is the second item returned from the input_fn passed to train, evaluate, and predict. This should be a single Tensor or dict of same (for multi-head models).</li>\n</ul>\n</blockquote>\n<p>So this means that I can have multiple objective functions and different dimensions of label values? e.g.  the label of the first objective function with 5 dimension vector and the label of the second objective function with 2 dimension vector.</p>", "body_text": "Oh, I found that I only checked the following link:\nhttps://www.tensorflow.org/versions/r1.4/extend/estimators\nAnd in the link, lables in model_fn is only explained as:\n\nlabels: A Tensor containing the labels passed to the model via input_fn. Will be empty for predict() calls, as these are the values the model will infer.\n\nSo did i make such a suggestion.\n\n\nlabels: This is the second item returned from the input_fn passed to train, evaluate, and predict. This should be a single Tensor or dict of same (for multi-head models).\n\n\nSo this means that I can have multiple objective functions and different dimensions of label values? e.g.  the label of the first objective function with 5 dimension vector and the label of the second objective function with 2 dimension vector.", "body": "Oh, I found that I only checked the following link:\r\nhttps://www.tensorflow.org/versions/r1.4/extend/estimators\r\nAnd in the link, `lables` in `model_fn` is only explained as:\r\n\r\n> labels: A Tensor containing the labels passed to the model via input_fn. Will be empty for predict() calls, as these are the values the model will infer.\r\n\r\nSo did i make such a suggestion.\r\n\r\n> * labels: This is the second item returned from the input_fn passed to train, evaluate, and predict. This should be a single Tensor or dict of same (for multi-head models). \r\n\r\nSo this means that I can have multiple objective functions and different dimensions of label values? e.g.  the label of the first objective function with 5 dimension vector and the label of the second objective function with 2 dimension vector."}