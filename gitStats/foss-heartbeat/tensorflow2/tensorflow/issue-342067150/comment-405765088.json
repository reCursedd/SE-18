{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/405765088", "html_url": "https://github.com/tensorflow/tensorflow/issues/20891#issuecomment-405765088", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20891", "id": 405765088, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTc2NTA4OA==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-17T23:59:08Z", "updated_at": "2018-07-17T23:59:08Z", "author_association": "CONTRIBUTOR", "body_html": "<p><code>tf.Session.as_default()</code> doesn't close the session when you exit the context:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\nc <span class=\"pl-k\">=</span> tf.constant(<span class=\"pl-c1\">42</span>)\nsess <span class=\"pl-k\">=</span> tf.Session()\n\n<span class=\"pl-k\">with</span> sess.as_default():\n  <span class=\"pl-k\">assert</span> c.eval() <span class=\"pl-k\">==</span> <span class=\"pl-c1\">42</span>\n\n<span class=\"pl-k\">assert</span> tf.get_default_session() <span class=\"pl-k\">is</span> <span class=\"pl-c1\">None</span>\n\n<span class=\"pl-k\">with</span> sess.as_default():\n  <span class=\"pl-k\">assert</span> c.eval() <span class=\"pl-k\">==</span> <span class=\"pl-c1\">42</span>\n\nsess.close()</pre></div>\n<p>I don't think we need a flag here, because you can always use an explicit <code>sess.close()</code>. If you really need the second context to close on (e.g.) an exception, you can use the following:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\nc <span class=\"pl-k\">=</span> tf.constant(<span class=\"pl-c1\">42</span>)\nsess <span class=\"pl-k\">=</span> tf.Session()\n\n<span class=\"pl-k\">with</span> sess.as_default():\n  <span class=\"pl-k\">assert</span> c.eval() <span class=\"pl-k\">==</span> <span class=\"pl-c1\">42</span>\n\n<span class=\"pl-k\">assert</span> tf.get_default_session() <span class=\"pl-k\">is</span> <span class=\"pl-c1\">None</span>\n\n<span class=\"pl-k\">with</span> sess:  <span class=\"pl-c\"><span class=\"pl-c\">#</span> <span class=\"pl-k\">NOTE</span>: Using a session with no `.as_default()` as a context will auto-close on exit.</span>\n  <span class=\"pl-k\">assert</span> c.eval() <span class=\"pl-k\">==</span> <span class=\"pl-c1\">42</span></pre></div>", "body_text": "tf.Session.as_default() doesn't close the session when you exit the context:\nimport tensorflow as tf\n\nc = tf.constant(42)\nsess = tf.Session()\n\nwith sess.as_default():\n  assert c.eval() == 42\n\nassert tf.get_default_session() is None\n\nwith sess.as_default():\n  assert c.eval() == 42\n\nsess.close()\nI don't think we need a flag here, because you can always use an explicit sess.close(). If you really need the second context to close on (e.g.) an exception, you can use the following:\nimport tensorflow as tf\n\nc = tf.constant(42)\nsess = tf.Session()\n\nwith sess.as_default():\n  assert c.eval() == 42\n\nassert tf.get_default_session() is None\n\nwith sess:  # NOTE: Using a session with no `.as_default()` as a context will auto-close on exit.\n  assert c.eval() == 42", "body": "`tf.Session.as_default()` doesn't close the session when you exit the context:\r\n\r\n```python\r\nimport tensorflow as tf\r\n\r\nc = tf.constant(42)\r\nsess = tf.Session()\r\n\r\nwith sess.as_default():\r\n  assert c.eval() == 42\r\n\r\nassert tf.get_default_session() is None\r\n\r\nwith sess.as_default():\r\n  assert c.eval() == 42\r\n\r\nsess.close()\r\n```\r\n\r\nI don't think we need a flag here, because you can always use an explicit `sess.close()`. If you really need the second context to close on (e.g.) an exception, you can use the following:\r\n\r\n```python\r\nimport tensorflow as tf\r\n\r\nc = tf.constant(42)\r\nsess = tf.Session()\r\n\r\nwith sess.as_default():\r\n  assert c.eval() == 42\r\n\r\nassert tf.get_default_session() is None\r\n\r\nwith sess:  # NOTE: Using a session with no `.as_default()` as a context will auto-close on exit.\r\n  assert c.eval() == 42\r\n```"}