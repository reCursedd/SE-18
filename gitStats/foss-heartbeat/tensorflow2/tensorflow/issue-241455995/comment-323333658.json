{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/323333658", "html_url": "https://github.com/tensorflow/tensorflow/pull/11377#issuecomment-323333658", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11377", "id": 323333658, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzMzMzY1OA==", "user": {"login": "theflofly", "id": 3902382, "node_id": "MDQ6VXNlcjM5MDIzODI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3902382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theflofly", "html_url": "https://github.com/theflofly", "followers_url": "https://api.github.com/users/theflofly/followers", "following_url": "https://api.github.com/users/theflofly/following{/other_user}", "gists_url": "https://api.github.com/users/theflofly/gists{/gist_id}", "starred_url": "https://api.github.com/users/theflofly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theflofly/subscriptions", "organizations_url": "https://api.github.com/users/theflofly/orgs", "repos_url": "https://api.github.com/users/theflofly/repos", "events_url": "https://api.github.com/users/theflofly/events{/privacy}", "received_events_url": "https://api.github.com/users/theflofly/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-18T11:52:04Z", "updated_at": "2017-08-18T11:52:27Z", "author_association": "CONTRIBUTOR", "body_html": "<p><strong>[UNRELATED TO THE PR]</strong></p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5977844\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/dguerra\">@dguerra</a>: I see :). It is because you are creating the Assign node after the call to AddSymbolicGradients, as it is not here during the gradient graph creation, there is no problem.</p>\n<p>Put it right after the declaration of W and it will not work anymore. Was it on purpose or random luck ?</p>\n<p>My code for a var looks more like:</p>\n<pre><code>\n// weights init\nauto w1 = Variable(scope, {3, 3}, DT_FLOAT);\nauto assign_w1 = Assign(scope, w1, Const(scope, {{0.1f, 0.1f, 0.1f}, {0.2f, 0.2f, 0.2f}, {0.2f, 0.2f, 0.2f}}));\n</code></pre>\n<p>In that case it does not work, so I'll make a PR anyway. I don't know where we could talk about that, I'll add <strong>[UNRELATED TO THE PR]</strong> before my comments, so that the person reviewing the PR will focus on important ones.</p>", "body_text": "[UNRELATED TO THE PR]\n@dguerra: I see :). It is because you are creating the Assign node after the call to AddSymbolicGradients, as it is not here during the gradient graph creation, there is no problem.\nPut it right after the declaration of W and it will not work anymore. Was it on purpose or random luck ?\nMy code for a var looks more like:\n\n// weights init\nauto w1 = Variable(scope, {3, 3}, DT_FLOAT);\nauto assign_w1 = Assign(scope, w1, Const(scope, {{0.1f, 0.1f, 0.1f}, {0.2f, 0.2f, 0.2f}, {0.2f, 0.2f, 0.2f}}));\n\nIn that case it does not work, so I'll make a PR anyway. I don't know where we could talk about that, I'll add [UNRELATED TO THE PR] before my comments, so that the person reviewing the PR will focus on important ones.", "body": "**[UNRELATED TO THE PR]**\r\n\r\n@dguerra: I see :). It is because you are creating the Assign node after the call to AddSymbolicGradients, as it is not here during the gradient graph creation, there is no problem.\r\n\r\nPut it right after the declaration of W and it will not work anymore. Was it on purpose or random luck ?\r\n\r\nMy code for a var looks more like:\r\n\r\n```\r\n\r\n// weights init\r\nauto w1 = Variable(scope, {3, 3}, DT_FLOAT);\r\nauto assign_w1 = Assign(scope, w1, Const(scope, {{0.1f, 0.1f, 0.1f}, {0.2f, 0.2f, 0.2f}, {0.2f, 0.2f, 0.2f}}));\r\n```\r\nIn that case it does not work, so I'll make a PR anyway. I don't know where we could talk about that, I'll add **[UNRELATED TO THE PR]** before my comments, so that the person reviewing the PR will focus on important ones."}