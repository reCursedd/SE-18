{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/323362737", "html_url": "https://github.com/tensorflow/tensorflow/pull/11377#issuecomment-323362737", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11377", "id": 323362737, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzM2MjczNw==", "user": {"login": "theflofly", "id": 3902382, "node_id": "MDQ6VXNlcjM5MDIzODI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3902382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theflofly", "html_url": "https://github.com/theflofly", "followers_url": "https://api.github.com/users/theflofly/followers", "following_url": "https://api.github.com/users/theflofly/following{/other_user}", "gists_url": "https://api.github.com/users/theflofly/gists{/gist_id}", "starred_url": "https://api.github.com/users/theflofly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theflofly/subscriptions", "organizations_url": "https://api.github.com/users/theflofly/orgs", "repos_url": "https://api.github.com/users/theflofly/repos", "events_url": "https://api.github.com/users/theflofly/events{/privacy}", "received_events_url": "https://api.github.com/users/theflofly/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-18T14:04:26Z", "updated_at": "2017-08-18T14:04:26Z", "author_association": "CONTRIBUTOR", "body_html": "<p><strong>[UNRELATED TO THE PR]</strong></p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5977844\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/dguerra\">@dguerra</a>: Did you try <a href=\"https://www.tensorflow.org/api_docs/cc/class/tensorflow/ops/random-normal\" rel=\"nofollow\">https://www.tensorflow.org/api_docs/cc/class/tensorflow/ops/random-normal</a> ?</p>\n<p>In python we call <code>w1 = tf.Variable(tf.random_normal([3, 3]), name=\"W1\")</code> and if you read the code, it says \"This constructor creates both a <code>variable</code> Op and an <code>assign</code> Op to set the<br>\nvariable to its initial value.\". So the Var an Assign op are added to the graph at the same level, not after the gradients call.<br>\nI agree the init run on the apply ops must be done before the run on the graph (and only once). A Variable Op in C++ that create a Var + Assign would be nice, so would be the same kind of mechanism: <code>tf.global_variables_initializer()</code>.</p>", "body_text": "[UNRELATED TO THE PR]\n@dguerra: Did you try https://www.tensorflow.org/api_docs/cc/class/tensorflow/ops/random-normal ?\nIn python we call w1 = tf.Variable(tf.random_normal([3, 3]), name=\"W1\") and if you read the code, it says \"This constructor creates both a variable Op and an assign Op to set the\nvariable to its initial value.\". So the Var an Assign op are added to the graph at the same level, not after the gradients call.\nI agree the init run on the apply ops must be done before the run on the graph (and only once). A Variable Op in C++ that create a Var + Assign would be nice, so would be the same kind of mechanism: tf.global_variables_initializer().", "body": "**[UNRELATED TO THE PR]**\r\n\r\n@dguerra: Did you try https://www.tensorflow.org/api_docs/cc/class/tensorflow/ops/random-normal ?\r\n\r\nIn python we call `w1 = tf.Variable(tf.random_normal([3, 3]), name=\"W1\")` and if you read the code, it says \"This constructor creates both a `variable` Op and an `assign` Op to set the\r\n    variable to its initial value.\". So the Var an Assign op are added to the graph at the same level, not after the gradients call.\r\nI agree the init run on the apply ops must be done before the run on the graph (and only once). A Variable Op in C++ that create a Var + Assign would be nice, so would be the same kind of mechanism: `tf.global_variables_initializer()`."}