{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/323294080", "html_url": "https://github.com/tensorflow/tensorflow/pull/11377#issuecomment-323294080", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11377", "id": 323294080, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzI5NDA4MA==", "user": {"login": "dguerra", "id": 5977844, "node_id": "MDQ6VXNlcjU5Nzc4NDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5977844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dguerra", "html_url": "https://github.com/dguerra", "followers_url": "https://api.github.com/users/dguerra/followers", "following_url": "https://api.github.com/users/dguerra/following{/other_user}", "gists_url": "https://api.github.com/users/dguerra/gists{/gist_id}", "starred_url": "https://api.github.com/users/dguerra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dguerra/subscriptions", "organizations_url": "https://api.github.com/users/dguerra/orgs", "repos_url": "https://api.github.com/users/dguerra/repos", "events_url": "https://api.github.com/users/dguerra/events{/privacy}", "received_events_url": "https://api.github.com/users/dguerra/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-18T08:31:47Z", "updated_at": "2017-08-18T08:31:47Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3902382\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/theflofly\">@theflofly</a> It works well now for me. I tried both methods: AddSymbolicGradients and explicit gradient formula and it gives same results. In my example \"Assign\" node is only called once for initialization so not need to go through it when backpropagating the error. I will go now for a neural network with few layers and then convolutional nets to see what happens</p>", "body_text": "@theflofly It works well now for me. I tried both methods: AddSymbolicGradients and explicit gradient formula and it gives same results. In my example \"Assign\" node is only called once for initialization so not need to go through it when backpropagating the error. I will go now for a neural network with few layers and then convolutional nets to see what happens", "body": "@theflofly It works well now for me. I tried both methods: AddSymbolicGradients and explicit gradient formula and it gives same results. In my example \"Assign\" node is only called once for initialization so not need to go through it when backpropagating the error. I will go now for a neural network with few layers and then convolutional nets to see what happens"}