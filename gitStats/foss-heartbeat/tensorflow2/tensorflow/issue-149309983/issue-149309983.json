{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2011", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2011/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2011/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2011/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/2011", "id": 149309983, "node_id": "MDU6SXNzdWUxNDkzMDk5ODM=", "number": 2011, "title": "mod operation missing on GPU", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "benoitsteiner", "id": 6969686, "node_id": "MDQ6VXNlcjY5Njk2ODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6969686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benoitsteiner", "html_url": "https://github.com/benoitsteiner", "followers_url": "https://api.github.com/users/benoitsteiner/followers", "following_url": "https://api.github.com/users/benoitsteiner/following{/other_user}", "gists_url": "https://api.github.com/users/benoitsteiner/gists{/gist_id}", "starred_url": "https://api.github.com/users/benoitsteiner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benoitsteiner/subscriptions", "organizations_url": "https://api.github.com/users/benoitsteiner/orgs", "repos_url": "https://api.github.com/users/benoitsteiner/repos", "events_url": "https://api.github.com/users/benoitsteiner/events{/privacy}", "received_events_url": "https://api.github.com/users/benoitsteiner/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "benoitsteiner", "id": 6969686, "node_id": "MDQ6VXNlcjY5Njk2ODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6969686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benoitsteiner", "html_url": "https://github.com/benoitsteiner", "followers_url": "https://api.github.com/users/benoitsteiner/followers", "following_url": "https://api.github.com/users/benoitsteiner/following{/other_user}", "gists_url": "https://api.github.com/users/benoitsteiner/gists{/gist_id}", "starred_url": "https://api.github.com/users/benoitsteiner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benoitsteiner/subscriptions", "organizations_url": "https://api.github.com/users/benoitsteiner/orgs", "repos_url": "https://api.github.com/users/benoitsteiner/repos", "events_url": "https://api.github.com/users/benoitsteiner/events{/privacy}", "received_events_url": "https://api.github.com/users/benoitsteiner/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2016-04-19T00:28:07Z", "updated_at": "2016-05-27T04:05:18Z", "closed_at": "2016-05-27T04:05:18Z", "author_association": "CONTRIBUTOR", "body_html": "<p>To verify:</p>\n<pre><code>\ndef run_summarize(run_metadata):\n  print \"***\"\n  for device in run_metadata.step_stats.dev_stats:\n    print device.device\n    for node_stats in device.node_stats:\n      print '   ', node_stats.node_name\n\ndef sessrun(*arglist, **dictlist):\n  run_options = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)\n  run_metadata = tf.RunMetadata()\n  dictlist['options'] = run_options\n  dictlist['run_metadata'] = run_metadata\n  result = tf.get_default_session().run(*arglist, **dictlist)\n  run_summarize(run_metadata)\n  return result\n\ntf.reset_default_graph()\nsess = create_session()\na = tf.constant(10)\nb = tf.constant(5)\nc = a%b\nsessrun(c)\n\n***\n/job:localhost/replica:0/task:0/cpu:0\n    _SOURCE\n    mod\n    _SINK\n/job:localhost/replica:0/task:0/gpu:0\n    _SOURCE\n    Const_1\n    Const\n    _SINK\n</code></pre>", "body_text": "To verify:\n\ndef run_summarize(run_metadata):\n  print \"***\"\n  for device in run_metadata.step_stats.dev_stats:\n    print device.device\n    for node_stats in device.node_stats:\n      print '   ', node_stats.node_name\n\ndef sessrun(*arglist, **dictlist):\n  run_options = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)\n  run_metadata = tf.RunMetadata()\n  dictlist['options'] = run_options\n  dictlist['run_metadata'] = run_metadata\n  result = tf.get_default_session().run(*arglist, **dictlist)\n  run_summarize(run_metadata)\n  return result\n\ntf.reset_default_graph()\nsess = create_session()\na = tf.constant(10)\nb = tf.constant(5)\nc = a%b\nsessrun(c)\n\n***\n/job:localhost/replica:0/task:0/cpu:0\n    _SOURCE\n    mod\n    _SINK\n/job:localhost/replica:0/task:0/gpu:0\n    _SOURCE\n    Const_1\n    Const\n    _SINK", "body": "To verify:\n\n```\n\ndef run_summarize(run_metadata):\n  print \"***\"\n  for device in run_metadata.step_stats.dev_stats:\n    print device.device\n    for node_stats in device.node_stats:\n      print '   ', node_stats.node_name\n\ndef sessrun(*arglist, **dictlist):\n  run_options = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)\n  run_metadata = tf.RunMetadata()\n  dictlist['options'] = run_options\n  dictlist['run_metadata'] = run_metadata\n  result = tf.get_default_session().run(*arglist, **dictlist)\n  run_summarize(run_metadata)\n  return result\n\ntf.reset_default_graph()\nsess = create_session()\na = tf.constant(10)\nb = tf.constant(5)\nc = a%b\nsessrun(c)\n\n***\n/job:localhost/replica:0/task:0/cpu:0\n    _SOURCE\n    mod\n    _SINK\n/job:localhost/replica:0/task:0/gpu:0\n    _SOURCE\n    Const_1\n    Const\n    _SINK\n```\n"}