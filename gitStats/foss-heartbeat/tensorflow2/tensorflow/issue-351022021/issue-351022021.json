{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21641", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21641/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21641/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21641/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/21641", "id": 351022021, "node_id": "MDExOlB1bGxSZXF1ZXN0MjA4NzIyMjY4", "number": 21641, "title": "Added some missing int32 GPU kernel registrations.", "user": {"login": "eaplatanios", "id": 1294940, "node_id": "MDQ6VXNlcjEyOTQ5NDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1294940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eaplatanios", "html_url": "https://github.com/eaplatanios", "followers_url": "https://api.github.com/users/eaplatanios/followers", "following_url": "https://api.github.com/users/eaplatanios/following{/other_user}", "gists_url": "https://api.github.com/users/eaplatanios/gists{/gist_id}", "starred_url": "https://api.github.com/users/eaplatanios/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eaplatanios/subscriptions", "organizations_url": "https://api.github.com/users/eaplatanios/orgs", "repos_url": "https://api.github.com/users/eaplatanios/repos", "events_url": "https://api.github.com/users/eaplatanios/events{/privacy}", "received_events_url": "https://api.github.com/users/eaplatanios/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}, {"id": 474725938, "node_id": "MDU6TGFiZWw0NzQ3MjU5Mzg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stalled", "name": "stalled", "color": "d4c5f9", "default": false}, {"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "open", "locked": false, "assignee": {"login": "protoget", "id": 5117188, "node_id": "MDQ6VXNlcjUxMTcxODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5117188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/protoget", "html_url": "https://github.com/protoget", "followers_url": "https://api.github.com/users/protoget/followers", "following_url": "https://api.github.com/users/protoget/following{/other_user}", "gists_url": "https://api.github.com/users/protoget/gists{/gist_id}", "starred_url": "https://api.github.com/users/protoget/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/protoget/subscriptions", "organizations_url": "https://api.github.com/users/protoget/orgs", "repos_url": "https://api.github.com/users/protoget/repos", "events_url": "https://api.github.com/users/protoget/events{/privacy}", "received_events_url": "https://api.github.com/users/protoget/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "protoget", "id": 5117188, "node_id": "MDQ6VXNlcjUxMTcxODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5117188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/protoget", "html_url": "https://github.com/protoget", "followers_url": "https://api.github.com/users/protoget/followers", "following_url": "https://api.github.com/users/protoget/following{/other_user}", "gists_url": "https://api.github.com/users/protoget/gists{/gist_id}", "starred_url": "https://api.github.com/users/protoget/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/protoget/subscriptions", "organizations_url": "https://api.github.com/users/protoget/orgs", "repos_url": "https://api.github.com/users/protoget/repos", "events_url": "https://api.github.com/users/protoget/events{/privacy}", "received_events_url": "https://api.github.com/users/protoget/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-08-16T01:20:56Z", "updated_at": "2018-11-10T18:50:21Z", "closed_at": null, "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21641", "html_url": "https://github.com/tensorflow/tensorflow/pull/21641", "diff_url": "https://github.com/tensorflow/tensorflow/pull/21641.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/21641.patch"}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5061\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alextp\">@alextp</a> This helps prevent some performance degradation when allowing soft placement. The issue is that gradient updates are often colocated with the variables they are applied to. When using resource variables, the missing int32 kernel registrations can cause the whole colocation group to be placed on the CPU incurring a big performance penalty. The added int32 kernel registrations follow the same \"fake\" GPU kernel pattern used in various places (such as the \"Concat\" and \"ConcatV2\" ops, for example).</p>", "body_text": "@alextp This helps prevent some performance degradation when allowing soft placement. The issue is that gradient updates are often colocated with the variables they are applied to. When using resource variables, the missing int32 kernel registrations can cause the whole colocation group to be placed on the CPU incurring a big performance penalty. The added int32 kernel registrations follow the same \"fake\" GPU kernel pattern used in various places (such as the \"Concat\" and \"ConcatV2\" ops, for example).", "body": "@alextp This helps prevent some performance degradation when allowing soft placement. The issue is that gradient updates are often colocated with the variables they are applied to. When using resource variables, the missing int32 kernel registrations can cause the whole colocation group to be placed on the CPU incurring a big performance penalty. The added int32 kernel registrations follow the same \"fake\" GPU kernel pattern used in various places (such as the \"Concat\" and \"ConcatV2\" ops, for example)."}