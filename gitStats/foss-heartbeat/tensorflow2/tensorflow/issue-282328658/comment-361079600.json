{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/361079600", "html_url": "https://github.com/tensorflow/tensorflow/issues/15383#issuecomment-361079600", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15383", "id": 361079600, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTA3OTYwMA==", "user": {"login": "petertulala", "id": 613623, "node_id": "MDQ6VXNlcjYxMzYyMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/613623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petertulala", "html_url": "https://github.com/petertulala", "followers_url": "https://api.github.com/users/petertulala/followers", "following_url": "https://api.github.com/users/petertulala/following{/other_user}", "gists_url": "https://api.github.com/users/petertulala/gists{/gist_id}", "starred_url": "https://api.github.com/users/petertulala/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petertulala/subscriptions", "organizations_url": "https://api.github.com/users/petertulala/orgs", "repos_url": "https://api.github.com/users/petertulala/repos", "events_url": "https://api.github.com/users/petertulala/events{/privacy}", "received_events_url": "https://api.github.com/users/petertulala/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-28T17:25:03Z", "updated_at": "2018-01-28T17:29:42Z", "author_association": "NONE", "body_html": "<p>Are plans to implement this? It would simplify the model, because currently it is very difficult to manipulate with a saved a graph without placeholders for inputs.</p>\n<p>For example, currently there are two different discriminators created (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"280987411\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/15271\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/15271/hovercard?comment_id=350994299&amp;comment_type=issue_comment\" href=\"https://github.com/tensorflow/tensorflow/issues/15271#issuecomment-350994299\">#15271 (comment)</a>) - one for real and one for fake data.</p>\n<p>When I want to save the model and use the trained discriminator later with custom data, I have to create a third discriminator before saving with a placeholder as follows:</p>\n<pre><code>disc_in = tf.placeholder(tf.float32, name='disc_in', shape=(None, 28, 28, 1))\nwith tf.variable_scope(gan_model.discriminator_scope, reuse=True):\n    gan_model.discriminator_and_aux_fn(disc_in, None)\n</code></pre>\n<p>So I end up with 3 different discriminators in the model. If TFGAN would use placeholders, we would need only one discriminator in the model.</p>", "body_text": "Are plans to implement this? It would simplify the model, because currently it is very difficult to manipulate with a saved a graph without placeholders for inputs.\nFor example, currently there are two different discriminators created (#15271 (comment)) - one for real and one for fake data.\nWhen I want to save the model and use the trained discriminator later with custom data, I have to create a third discriminator before saving with a placeholder as follows:\ndisc_in = tf.placeholder(tf.float32, name='disc_in', shape=(None, 28, 28, 1))\nwith tf.variable_scope(gan_model.discriminator_scope, reuse=True):\n    gan_model.discriminator_and_aux_fn(disc_in, None)\n\nSo I end up with 3 different discriminators in the model. If TFGAN would use placeholders, we would need only one discriminator in the model.", "body": "Are plans to implement this? It would simplify the model, because currently it is very difficult to manipulate with a saved a graph without placeholders for inputs.\r\n\r\nFor example, currently there are two different discriminators created (https://github.com/tensorflow/tensorflow/issues/15271#issuecomment-350994299) - one for real and one for fake data.\r\n\r\nWhen I want to save the model and use the trained discriminator later with custom data, I have to create a third discriminator before saving with a placeholder as follows:\r\n\r\n```\r\ndisc_in = tf.placeholder(tf.float32, name='disc_in', shape=(None, 28, 28, 1))\r\nwith tf.variable_scope(gan_model.discriminator_scope, reuse=True):\r\n    gan_model.discriminator_and_aux_fn(disc_in, None)\r\n```\r\n\r\nSo I end up with 3 different discriminators in the model. If TFGAN would use placeholders, we would need only one discriminator in the model."}