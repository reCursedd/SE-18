{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23052", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23052/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23052/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23052/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23052", "id": 371239299, "node_id": "MDU6SXNzdWUzNzEyMzkyOTk=", "number": 23052, "title": "Tensorflow not Compatible with Python 3.7 ", "user": {"login": "ivaylogb", "id": 6346037, "node_id": "MDQ6VXNlcjYzNDYwMzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/6346037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivaylogb", "html_url": "https://github.com/ivaylogb", "followers_url": "https://api.github.com/users/ivaylogb/followers", "following_url": "https://api.github.com/users/ivaylogb/following{/other_user}", "gists_url": "https://api.github.com/users/ivaylogb/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivaylogb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivaylogb/subscriptions", "organizations_url": "https://api.github.com/users/ivaylogb/orgs", "repos_url": "https://api.github.com/users/ivaylogb/repos", "events_url": "https://api.github.com/users/ivaylogb/events{/privacy}", "received_events_url": "https://api.github.com/users/ivaylogb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "harshini-gadige", "id": 42781361, "node_id": "MDQ6VXNlcjQyNzgxMzYx", "avatar_url": "https://avatars1.githubusercontent.com/u/42781361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harshini-gadige", "html_url": "https://github.com/harshini-gadige", "followers_url": "https://api.github.com/users/harshini-gadige/followers", "following_url": "https://api.github.com/users/harshini-gadige/following{/other_user}", "gists_url": "https://api.github.com/users/harshini-gadige/gists{/gist_id}", "starred_url": "https://api.github.com/users/harshini-gadige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harshini-gadige/subscriptions", "organizations_url": "https://api.github.com/users/harshini-gadige/orgs", "repos_url": "https://api.github.com/users/harshini-gadige/repos", "events_url": "https://api.github.com/users/harshini-gadige/events{/privacy}", "received_events_url": "https://api.github.com/users/harshini-gadige/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "harshini-gadige", "id": 42781361, "node_id": "MDQ6VXNlcjQyNzgxMzYx", "avatar_url": "https://avatars1.githubusercontent.com/u/42781361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harshini-gadige", "html_url": "https://github.com/harshini-gadige", "followers_url": "https://api.github.com/users/harshini-gadige/followers", "following_url": "https://api.github.com/users/harshini-gadige/following{/other_user}", "gists_url": "https://api.github.com/users/harshini-gadige/gists{/gist_id}", "starred_url": "https://api.github.com/users/harshini-gadige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harshini-gadige/subscriptions", "organizations_url": "https://api.github.com/users/harshini-gadige/orgs", "repos_url": "https://api.github.com/users/harshini-gadige/repos", "events_url": "https://api.github.com/users/harshini-gadige/events{/privacy}", "received_events_url": "https://api.github.com/users/harshini-gadige/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-10-17T19:48:24Z", "updated_at": "2018-10-25T01:24:43Z", "closed_at": "2018-10-18T16:38:26Z", "author_association": "NONE", "body_html": "<p>Please go to Stack Overflow for help and support:</p>\n<p><a href=\"https://stackoverflow.com/questions/tagged/tensorflow\" rel=\"nofollow\">https://stackoverflow.com/questions/tagged/tensorflow</a></p>\n<p>If you open a GitHub issue, here is our policy:</p>\n<ol>\n<li>It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).</li>\n<li>The form below must be filled out.</li>\n<li>It shouldn't be a TensorBoard issue. Those go <a href=\"https://github.com/tensorflow/tensorboard/issues\">here</a>.</li>\n</ol>\n<p><strong>Here's why we have that policy</strong>: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.</p>\n<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: N/A</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: OS 10.13.4</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: N/A</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source (whole package)</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.10.1</li>\n<li><strong>Python version</strong>: 3.7</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:</li>\n</ul>\n<p>Apple LLVM version 9.1.0 (clang-902.0.39.1)<br>\nTarget: x86_64-apple-darwin17.5.0<br>\nThread model: posix<br>\nInstalledDir: /Library/Developer/CommandLineTools/usr/bin</p>\n<ul>\n<li>\n<p><strong>CUDA/cuDNN version</strong>: N/A</p>\n</li>\n<li>\n<p><strong>GPU model and memory</strong>: N/A</p>\n</li>\n<li>\n<p><strong>Exact command to reproduce</strong>:</p>\n</li>\n</ul>\n<p>run the following below:</p>\n<p>import numpy as np<br>\nimport tensorflow as tf<br>\nimport tensorflow</p>\n<p>from tensorflow import keras<br>\nfrom keras.models import Sequential<br>\nfrom keras.layers import Embedding</p>\n<p>model = Sequential()<br>\nmodel.add(Embedding(5, 2, input_length=5))</p>\n<p>You can collect some of this information using our environment capture script:</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\">https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh</a></p>\n<p>You can obtain the TensorFlow version with:</p>\n<div class=\"highlight highlight-source-shell\"><pre>python -c <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)<span class=\"pl-pds\">\"</span></span></pre></div>\n<h3>Describe the problem</h3>\n<p>Describe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.</p>\n<p>So it appears Tensorflow doesn't play nicely with Python 3.7 - there is a source issue when I run ANY tensorflow or keras command using python 3.7 (but runs perfectly fine with earlier versions of python - reverted back and everything ran perfectly fine).</p>\n<p>Here are all the relevant files with environment (it actually errors out when running in p3.7)</p>\n<p>files using 3.7:</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/files/2488938/broken-old-tf_env.txt\">broken-old-tf_env.txt</a><br>\n<a href=\"https://github.com/tensorflow/tensorflow/files/2488939/broken-tf_env.txt\">broken-tf_env.txt</a></p>\n<p>normal env:</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/files/2488954/old-tf_env.txt\">old-tf_env.txt</a><br>\n<a href=\"https://github.com/tensorflow/tensorflow/files/2488958/tf_env.txt\">tf_env.txt</a></p>\n<h3>Source code / logs</h3>\n<p>Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.</p>\n<p>Here is the trace error message - this exact message occurs when attempting to run ANY keras or tf command using python 3.7:</p>\n<p>(for test case, honestly even the most simple lines will cause the break - try;</p>\n<p>embeddings = tf.Variable(tf.random_uniform([vocabulary_size, embedding_size], -1.0, 1.0))</p>\n<p>Or for keras:</p>\n<p>model = Sequential()<br>\nmodel.add(Embedding(10000, 50, input_length=3334))</p>\n<h2>Error message:</h2>\n<p>UnboundLocalError                         Traceback (most recent call last)<br>\n in ()<br>\n6 embedding_size = 100<br>\n7<br>\n----&gt; 8 embeddings = tf.Variable(tf.random_uniform([vocabulary_size, embedding_size], -1.0, 1.0))<br>\n9 nce_weights = tf.Variable(tf.truncated_normal([vocabulary_size, embedding_size], stddev=1.0 / math.sqrt(embedding_size)))<br>\n10 nce_biases = tf.Variable(tf.zeros([vocabulary_size]))</p>\n<p>~/.local/share/virtualenvs/embedded-feature-extraction-o8pNKOHv/lib/python3.7/site-packages/tensorflow/python/ops/random_ops.py in random_uniform(shape, minval, maxval, dtype, seed, name)<br>\n233   with ops.name_scope(name, \"random_uniform\", [shape, minval, maxval]) as name:<br>\n234     shape = _ShapeTensor(shape)<br>\n--&gt; 235     minval = ops.convert_to_tensor(minval, dtype=dtype, name=\"min\")<br>\n236     maxval = ops.convert_to_tensor(maxval, dtype=dtype, name=\"max\")<br>\n237     seed1, seed2 = random_seed.get_seed(seed)</p>\n<p>~/.local/share/virtualenvs/embedded-feature-extraction-o8pNKOHv/lib/python3.7/site-packages/tensorflow/python/framework/ops.py in convert_to_tensor(value, dtype, name, preferred_dtype)<br>\n996       name=name,<br>\n997       preferred_dtype=preferred_dtype,<br>\n--&gt; 998       as_ref=False)<br>\n999<br>\n1000</p>\n<p>~/.local/share/virtualenvs/embedded-feature-extraction-o8pNKOHv/lib/python3.7/site-packages/tensorflow/python/framework/ops.py in internal_convert_to_tensor(value, dtype, name, as_ref, preferred_dtype, ctx)<br>\n1092<br>\n1093     if ret is None:<br>\n-&gt; 1094       ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)<br>\n1095<br>\n1096     if ret is NotImplemented:</p>\n<p>~/.local/share/virtualenvs/embedded-feature-extraction-o8pNKOHv/lib/python3.7/site-packages/tensorflow/python/framework/constant_op.py in _constant_tensor_conversion_function(v, dtype, name, as_ref)<br>\n215                                          as_ref=False):<br>\n216   _ = as_ref<br>\n--&gt; 217   return constant(v, dtype=dtype, name=name)<br>\n218<br>\n219</p>\n<p>~/.local/share/virtualenvs/embedded-feature-extraction-o8pNKOHv/lib/python3.7/site-packages/tensorflow/python/framework/constant_op.py in constant(value, dtype, shape, name, verify_shape)<br>\n194   tensor_value.tensor.CopyFrom(<br>\n195       tensor_util.make_tensor_proto(<br>\n--&gt; 196           value, dtype=dtype, shape=shape, verify_shape=verify_shape))<br>\n197   dtype_value = attr_value_pb2.AttrValue(type=tensor_value.tensor.dtype)<br>\n198   const_tensor = g.create_op(</p>\n<p>~/.local/share/virtualenvs/embedded-feature-extraction-o8pNKOHv/lib/python3.7/site-packages/tensorflow/python/framework/tensor_util.py in make_tensor_proto(values, dtype, shape, verify_shape)<br>\n534     raise TypeError(<br>\n535         \"Element type not supported in TensorProto: %s\" % numpy_dtype.name)<br>\n--&gt; 536   append_fn(tensor_proto, proto_values)<br>\n537<br>\n538   return tensor_proto</p>\n<p>tensorflow/python/framework/fast_tensor_util.pyx in tensorflow.python.framework.fast_tensor_util.AppendFloat32ArrayToTensorProto()</p>\n<p>~/.local/share/virtualenvs/embedded-feature-extraction-o8pNKOHv/lib/python3.7/site-packages/google/protobuf/internal/containers.py in append(<em><strong>failed resolving arguments</strong></em>)<br>\n249   def append(self, value):<br>\n250     \"\"\"Appends an item to the list. Similar to list.append().\"\"\"<br>\n--&gt; 251     self._values.append(self._type_checker.CheckValue(value))<br>\n252     if not self._message_listener.dirty:<br>\n253       self._message_listener.Modified()</p>\n<p>UnboundLocalError: local variable 'self' referenced before assignment</p>", "body_text": "Please go to Stack Overflow for help and support:\nhttps://stackoverflow.com/questions/tagged/tensorflow\nIf you open a GitHub issue, here is our policy:\n\nIt must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\nThe form below must be filled out.\nIt shouldn't be a TensorBoard issue. Those go here.\n\nHere's why we have that policy: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\n\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): N/A\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): OS 10.13.4\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A\nTensorFlow installed from (source or binary): source (whole package)\nTensorFlow version (use command below): 1.10.1\nPython version: 3.7\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source):\n\nApple LLVM version 9.1.0 (clang-902.0.39.1)\nTarget: x86_64-apple-darwin17.5.0\nThread model: posix\nInstalledDir: /Library/Developer/CommandLineTools/usr/bin\n\n\nCUDA/cuDNN version: N/A\n\n\nGPU model and memory: N/A\n\n\nExact command to reproduce:\n\n\nrun the following below:\nimport numpy as np\nimport tensorflow as tf\nimport tensorflow\nfrom tensorflow import keras\nfrom keras.models import Sequential\nfrom keras.layers import Embedding\nmodel = Sequential()\nmodel.add(Embedding(5, 2, input_length=5))\nYou can collect some of this information using our environment capture script:\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\nYou can obtain the TensorFlow version with:\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\nDescribe the problem\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\nSo it appears Tensorflow doesn't play nicely with Python 3.7 - there is a source issue when I run ANY tensorflow or keras command using python 3.7 (but runs perfectly fine with earlier versions of python - reverted back and everything ran perfectly fine).\nHere are all the relevant files with environment (it actually errors out when running in p3.7)\nfiles using 3.7:\nbroken-old-tf_env.txt\nbroken-tf_env.txt\nnormal env:\nold-tf_env.txt\ntf_env.txt\nSource code / logs\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\nHere is the trace error message - this exact message occurs when attempting to run ANY keras or tf command using python 3.7:\n(for test case, honestly even the most simple lines will cause the break - try;\nembeddings = tf.Variable(tf.random_uniform([vocabulary_size, embedding_size], -1.0, 1.0))\nOr for keras:\nmodel = Sequential()\nmodel.add(Embedding(10000, 50, input_length=3334))\nError message:\nUnboundLocalError                         Traceback (most recent call last)\n in ()\n6 embedding_size = 100\n7\n----> 8 embeddings = tf.Variable(tf.random_uniform([vocabulary_size, embedding_size], -1.0, 1.0))\n9 nce_weights = tf.Variable(tf.truncated_normal([vocabulary_size, embedding_size], stddev=1.0 / math.sqrt(embedding_size)))\n10 nce_biases = tf.Variable(tf.zeros([vocabulary_size]))\n~/.local/share/virtualenvs/embedded-feature-extraction-o8pNKOHv/lib/python3.7/site-packages/tensorflow/python/ops/random_ops.py in random_uniform(shape, minval, maxval, dtype, seed, name)\n233   with ops.name_scope(name, \"random_uniform\", [shape, minval, maxval]) as name:\n234     shape = _ShapeTensor(shape)\n--> 235     minval = ops.convert_to_tensor(minval, dtype=dtype, name=\"min\")\n236     maxval = ops.convert_to_tensor(maxval, dtype=dtype, name=\"max\")\n237     seed1, seed2 = random_seed.get_seed(seed)\n~/.local/share/virtualenvs/embedded-feature-extraction-o8pNKOHv/lib/python3.7/site-packages/tensorflow/python/framework/ops.py in convert_to_tensor(value, dtype, name, preferred_dtype)\n996       name=name,\n997       preferred_dtype=preferred_dtype,\n--> 998       as_ref=False)\n999\n1000\n~/.local/share/virtualenvs/embedded-feature-extraction-o8pNKOHv/lib/python3.7/site-packages/tensorflow/python/framework/ops.py in internal_convert_to_tensor(value, dtype, name, as_ref, preferred_dtype, ctx)\n1092\n1093     if ret is None:\n-> 1094       ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n1095\n1096     if ret is NotImplemented:\n~/.local/share/virtualenvs/embedded-feature-extraction-o8pNKOHv/lib/python3.7/site-packages/tensorflow/python/framework/constant_op.py in _constant_tensor_conversion_function(v, dtype, name, as_ref)\n215                                          as_ref=False):\n216   _ = as_ref\n--> 217   return constant(v, dtype=dtype, name=name)\n218\n219\n~/.local/share/virtualenvs/embedded-feature-extraction-o8pNKOHv/lib/python3.7/site-packages/tensorflow/python/framework/constant_op.py in constant(value, dtype, shape, name, verify_shape)\n194   tensor_value.tensor.CopyFrom(\n195       tensor_util.make_tensor_proto(\n--> 196           value, dtype=dtype, shape=shape, verify_shape=verify_shape))\n197   dtype_value = attr_value_pb2.AttrValue(type=tensor_value.tensor.dtype)\n198   const_tensor = g.create_op(\n~/.local/share/virtualenvs/embedded-feature-extraction-o8pNKOHv/lib/python3.7/site-packages/tensorflow/python/framework/tensor_util.py in make_tensor_proto(values, dtype, shape, verify_shape)\n534     raise TypeError(\n535         \"Element type not supported in TensorProto: %s\" % numpy_dtype.name)\n--> 536   append_fn(tensor_proto, proto_values)\n537\n538   return tensor_proto\ntensorflow/python/framework/fast_tensor_util.pyx in tensorflow.python.framework.fast_tensor_util.AppendFloat32ArrayToTensorProto()\n~/.local/share/virtualenvs/embedded-feature-extraction-o8pNKOHv/lib/python3.7/site-packages/google/protobuf/internal/containers.py in append(failed resolving arguments)\n249   def append(self, value):\n250     \"\"\"Appends an item to the list. Similar to list.append().\"\"\"\n--> 251     self._values.append(self._type_checker.CheckValue(value))\n252     if not self._message_listener.dirty:\n253       self._message_listener.Modified()\nUnboundLocalError: local variable 'self' referenced before assignment", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: N/A\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: OS 10.13.4\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: N/A\r\n- **TensorFlow installed from (source or binary)**: source (whole package)\r\n- **TensorFlow version (use command below)**: 1.10.1\r\n- **Python version**: 3.7\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**:\r\n\r\nApple LLVM version 9.1.0 (clang-902.0.39.1)\r\nTarget: x86_64-apple-darwin17.5.0\r\nThread model: posix\r\nInstalledDir: /Library/Developer/CommandLineTools/usr/bin\r\n\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n\r\n\r\n- **Exact command to reproduce**: \r\n\r\nrun the following below:\r\n\r\nimport numpy as np\r\nimport tensorflow as tf\r\nimport tensorflow \r\n\r\nfrom tensorflow import keras\r\nfrom keras.models import Sequential\r\nfrom keras.layers import Embedding\r\n\r\nmodel = Sequential()\r\nmodel.add(Embedding(5, 2, input_length=5))\r\n\r\n\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with:\r\n\r\n```bash\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n```\r\n\r\n### Describe the problem\r\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\r\n\r\nSo it appears Tensorflow doesn't play nicely with Python 3.7 - there is a source issue when I run ANY tensorflow or keras command using python 3.7 (but runs perfectly fine with earlier versions of python - reverted back and everything ran perfectly fine). \r\n\r\nHere are all the relevant files with environment (it actually errors out when running in p3.7) \r\n\r\nfiles using 3.7:\r\n\r\n[broken-old-tf_env.txt](https://github.com/tensorflow/tensorflow/files/2488938/broken-old-tf_env.txt)\r\n[broken-tf_env.txt](https://github.com/tensorflow/tensorflow/files/2488939/broken-tf_env.txt)\r\n\r\nnormal env:\r\n\r\n[old-tf_env.txt](https://github.com/tensorflow/tensorflow/files/2488954/old-tf_env.txt)\r\n[tf_env.txt](https://github.com/tensorflow/tensorflow/files/2488958/tf_env.txt)\r\n\r\n\r\n\r\n\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n\r\nHere is the trace error message - this exact message occurs when attempting to run ANY keras or tf command using python 3.7:\r\n\r\n(for test case, honestly even the most simple lines will cause the break - try;\r\n\r\nembeddings = tf.Variable(tf.random_uniform([vocabulary_size, embedding_size], -1.0, 1.0))\r\n\r\nOr for keras:\r\n\r\nmodel = Sequential()\r\nmodel.add(Embedding(10000, 50, input_length=3334))\r\n\r\n\r\nError message:\r\n---------------------------------------------------------------------------\r\nUnboundLocalError                         Traceback (most recent call last)\r\n<ipython-input-2-e17e94177b7f> in <module>()\r\n      6 embedding_size = 100\r\n      7 \r\n----> 8 embeddings = tf.Variable(tf.random_uniform([vocabulary_size, embedding_size], -1.0, 1.0))\r\n      9 nce_weights = tf.Variable(tf.truncated_normal([vocabulary_size, embedding_size], stddev=1.0 / math.sqrt(embedding_size)))\r\n     10 nce_biases = tf.Variable(tf.zeros([vocabulary_size]))\r\n\r\n~/.local/share/virtualenvs/embedded-feature-extraction-o8pNKOHv/lib/python3.7/site-packages/tensorflow/python/ops/random_ops.py in random_uniform(shape, minval, maxval, dtype, seed, name)\r\n    233   with ops.name_scope(name, \"random_uniform\", [shape, minval, maxval]) as name:\r\n    234     shape = _ShapeTensor(shape)\r\n--> 235     minval = ops.convert_to_tensor(minval, dtype=dtype, name=\"min\")\r\n    236     maxval = ops.convert_to_tensor(maxval, dtype=dtype, name=\"max\")\r\n    237     seed1, seed2 = random_seed.get_seed(seed)\r\n\r\n~/.local/share/virtualenvs/embedded-feature-extraction-o8pNKOHv/lib/python3.7/site-packages/tensorflow/python/framework/ops.py in convert_to_tensor(value, dtype, name, preferred_dtype)\r\n    996       name=name,\r\n    997       preferred_dtype=preferred_dtype,\r\n--> 998       as_ref=False)\r\n    999 \r\n   1000 \r\n\r\n~/.local/share/virtualenvs/embedded-feature-extraction-o8pNKOHv/lib/python3.7/site-packages/tensorflow/python/framework/ops.py in internal_convert_to_tensor(value, dtype, name, as_ref, preferred_dtype, ctx)\r\n   1092 \r\n   1093     if ret is None:\r\n-> 1094       ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n   1095 \r\n   1096     if ret is NotImplemented:\r\n\r\n~/.local/share/virtualenvs/embedded-feature-extraction-o8pNKOHv/lib/python3.7/site-packages/tensorflow/python/framework/constant_op.py in _constant_tensor_conversion_function(v, dtype, name, as_ref)\r\n    215                                          as_ref=False):\r\n    216   _ = as_ref\r\n--> 217   return constant(v, dtype=dtype, name=name)\r\n    218 \r\n    219 \r\n\r\n~/.local/share/virtualenvs/embedded-feature-extraction-o8pNKOHv/lib/python3.7/site-packages/tensorflow/python/framework/constant_op.py in constant(value, dtype, shape, name, verify_shape)\r\n    194   tensor_value.tensor.CopyFrom(\r\n    195       tensor_util.make_tensor_proto(\r\n--> 196           value, dtype=dtype, shape=shape, verify_shape=verify_shape))\r\n    197   dtype_value = attr_value_pb2.AttrValue(type=tensor_value.tensor.dtype)\r\n    198   const_tensor = g.create_op(\r\n\r\n~/.local/share/virtualenvs/embedded-feature-extraction-o8pNKOHv/lib/python3.7/site-packages/tensorflow/python/framework/tensor_util.py in make_tensor_proto(values, dtype, shape, verify_shape)\r\n    534     raise TypeError(\r\n    535         \"Element type not supported in TensorProto: %s\" % numpy_dtype.name)\r\n--> 536   append_fn(tensor_proto, proto_values)\r\n    537 \r\n    538   return tensor_proto\r\n\r\ntensorflow/python/framework/fast_tensor_util.pyx in tensorflow.python.framework.fast_tensor_util.AppendFloat32ArrayToTensorProto()\r\n\r\n~/.local/share/virtualenvs/embedded-feature-extraction-o8pNKOHv/lib/python3.7/site-packages/google/protobuf/internal/containers.py in append(***failed resolving arguments***)\r\n    249   def append(self, value):\r\n    250     \"\"\"Appends an item to the list. Similar to list.append().\"\"\"\r\n--> 251     self._values.append(self._type_checker.CheckValue(value))\r\n    252     if not self._message_listener.dirty:\r\n    253       self._message_listener.Modified()\r\n\r\nUnboundLocalError: local variable 'self' referenced before assignment\r\n"}