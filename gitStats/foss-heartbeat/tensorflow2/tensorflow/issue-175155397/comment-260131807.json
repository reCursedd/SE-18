{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/260131807", "html_url": "https://github.com/tensorflow/tensorflow/pull/4222#issuecomment-260131807", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4222", "id": 260131807, "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDEzMTgwNw==", "user": {"login": "samjabrahams", "id": 11607205, "node_id": "MDQ6VXNlcjExNjA3MjA1", "avatar_url": "https://avatars0.githubusercontent.com/u/11607205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samjabrahams", "html_url": "https://github.com/samjabrahams", "followers_url": "https://api.github.com/users/samjabrahams/followers", "following_url": "https://api.github.com/users/samjabrahams/following{/other_user}", "gists_url": "https://api.github.com/users/samjabrahams/gists{/gist_id}", "starred_url": "https://api.github.com/users/samjabrahams/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samjabrahams/subscriptions", "organizations_url": "https://api.github.com/users/samjabrahams/orgs", "repos_url": "https://api.github.com/users/samjabrahams/repos", "events_url": "https://api.github.com/users/samjabrahams/events{/privacy}", "received_events_url": "https://api.github.com/users/samjabrahams/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-12T16:26:25Z", "updated_at": "2016-11-12T16:26:25Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The different shaped output definitely seems a bit clunky. Couple options (which may or may not be any less clunky):</p>\n<ol>\n<li>Return <code>tf.squeeze(tf.decode_gif(...))</code>. Since the <code>decode_gif</code> option always has three color channels, this will return a 3-D tensor for single-framed gifs (assuming the image is larger than 1x1) and 4-D tensors otherwise. If <code>decode_gif</code> ever gets an option for number of color channels, this will have to be modified.</li>\n<li>Reshape the png and jpeg results to be 4-D. This keeps it consistent, but means that this Op requires a different workflow to the standard <code>decode_png</code> and <code>decode_jpeg</code></li>\n<li>Remove the <code>decode_gif</code> portion</li>\n<li>Leave it as is and have the end user figure it out.</li>\n</ol>\n<p>For the growing number of parameters: I could use <code>**kwargs</code> and either let the user look up the options, or just leave the options out of the function signature but include them in the documentation.</p>", "body_text": "The different shaped output definitely seems a bit clunky. Couple options (which may or may not be any less clunky):\n\nReturn tf.squeeze(tf.decode_gif(...)). Since the decode_gif option always has three color channels, this will return a 3-D tensor for single-framed gifs (assuming the image is larger than 1x1) and 4-D tensors otherwise. If decode_gif ever gets an option for number of color channels, this will have to be modified.\nReshape the png and jpeg results to be 4-D. This keeps it consistent, but means that this Op requires a different workflow to the standard decode_png and decode_jpeg\nRemove the decode_gif portion\nLeave it as is and have the end user figure it out.\n\nFor the growing number of parameters: I could use **kwargs and either let the user look up the options, or just leave the options out of the function signature but include them in the documentation.", "body": "The different shaped output definitely seems a bit clunky. Couple options (which may or may not be any less clunky):\n1. Return `tf.squeeze(tf.decode_gif(...))`. Since the `decode_gif` option always has three color channels, this will return a 3-D tensor for single-framed gifs (assuming the image is larger than 1x1) and 4-D tensors otherwise. If `decode_gif` ever gets an option for number of color channels, this will have to be modified.\n2. Reshape the png and jpeg results to be 4-D. This keeps it consistent, but means that this Op requires a different workflow to the standard `decode_png` and `decode_jpeg`\n3. Remove the `decode_gif` portion \n4. Leave it as is and have the end user figure it out.\n\nFor the growing number of parameters: I could use `**kwargs` and either let the user look up the options, or just leave the options out of the function signature but include them in the documentation.\n"}