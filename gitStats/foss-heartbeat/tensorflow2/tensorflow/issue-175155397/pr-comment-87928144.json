{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/87928144", "pull_request_review_id": 8518916, "id": 87928144, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg3OTI4MTQ0", "diff_hunk": "@@ -1388,6 +1391,66 @@ def _crop_and_resize_shape(op):\n ops.RegisterShape('NonMaxSuppression')(common_shapes.call_cpp_shape_fn)\n \n \n+def decode_image(contents, channels=None, ratio=None, fancy_upscaling=None,\n+                 try_recover_truncated=None, acceptable_fraction=None,\n+                 name=None):\n+  \"\"\"Convenience function for `decode_gif`, `decode_jpeg`, and `decode_png`.\n+  Detects whether an image is a GIF, JPEG, or PNG, and performs the appropriate \n+  operation to convert the input bytes `string` into a `Tensor` of type `uint8`.\n+\n+  Note: `decode_gif` returns a 4-D array `[num_frames, height, width, 3]`, as \n+  opposed to `decode_jpeg` and `decode_png`, which return 3-D arrays \n+  `[height, width, num_channels]`. Make sure to take this into account when \n+  constructing your graph if you are intermixing GIF files with JPEG and/or PNG \n+  files.\n+\n+  Args:\n+    contents: 0-D `string`. The encoded image bytes.\n+    channels: Number of color channels for the decoded image.\n+    ratio: Downscaling ratio (only used when decoding JPEG images)\n+    fancy_upscaling: If true use a slower but nicer upscaling of the chroma \n+      planes (yuv420/422 JPEG images only).\n+    try_recover_truncated: If true, try to recover an image from truncated input\n+      (only used when decoding JPEG images).\n+    acceptable_fraction: The minimum required fraction of lines before a \n+      truncated input is accepted (only used when decoding JPEG images).\n+  \n+  Returns:\n+    `Tensor` with type `uint8`. Shape `[height, width, num_channels]` for JPEG \n+      and PNG images. Shape `[num_frames, height, width, 3]` for GIF images.\n+  \"\"\"\n+  with ops.name_scope(name, 'decode_image') as scope:\n+    def _gif():\n+      return gen_image_ops.decode_gif(contents)", "path": "tensorflow/python/ops/image_ops.py", "position": null, "original_position": 51, "commit_id": "30a964bda83860f7398189669c3cd44afed1c0d8", "original_commit_id": "9f2f2f2ab1dd174e8de128ae7f568b76273dde2b", "user": {"login": "samjabrahams", "id": 11607205, "node_id": "MDQ6VXNlcjExNjA3MjA1", "avatar_url": "https://avatars0.githubusercontent.com/u/11607205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samjabrahams", "html_url": "https://github.com/samjabrahams", "followers_url": "https://api.github.com/users/samjabrahams/followers", "following_url": "https://api.github.com/users/samjabrahams/following{/other_user}", "gists_url": "https://api.github.com/users/samjabrahams/gists{/gist_id}", "starred_url": "https://api.github.com/users/samjabrahams/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samjabrahams/subscriptions", "organizations_url": "https://api.github.com/users/samjabrahams/orgs", "repos_url": "https://api.github.com/users/samjabrahams/repos", "events_url": "https://api.github.com/users/samjabrahams/events{/privacy}", "received_events_url": "https://api.github.com/users/samjabrahams/received_events", "type": "User", "site_admin": false}, "body": "I had to do the channels check with another assert message due to how `cond` runs it's function parameters. It seems like the Op-returning functions (`_gif`, `_png`,`_jpeg`) all run at Op creation time, which means that `_jpeg` gets unhappy when `channels` is 4 (granted, the user should probably just be using `decode_png` at that point). How does `if channels is not None and channels not in (0, 1, 3)`, throw an error at the beginning sound?\n", "created_at": "2016-11-15T00:55:39Z", "updated_at": "2016-11-30T21:00:32Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/4222#discussion_r87928144", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/4222", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/87928144"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/4222#discussion_r87928144"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/4222"}}, "body_html": "<p>I had to do the channels check with another assert message due to how <code>cond</code> runs it's function parameters. It seems like the Op-returning functions (<code>_gif</code>, <code>_png</code>,<code>_jpeg</code>) all run at Op creation time, which means that <code>_jpeg</code> gets unhappy when <code>channels</code> is 4 (granted, the user should probably just be using <code>decode_png</code> at that point). How does <code>if channels is not None and channels not in (0, 1, 3)</code>, throw an error at the beginning sound?</p>", "body_text": "I had to do the channels check with another assert message due to how cond runs it's function parameters. It seems like the Op-returning functions (_gif, _png,_jpeg) all run at Op creation time, which means that _jpeg gets unhappy when channels is 4 (granted, the user should probably just be using decode_png at that point). How does if channels is not None and channels not in (0, 1, 3), throw an error at the beginning sound?", "in_reply_to_id": 87888896}