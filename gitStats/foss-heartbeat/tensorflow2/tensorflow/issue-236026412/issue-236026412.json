{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10714", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10714/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10714/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10714/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10714", "id": 236026412, "node_id": "MDU6SXNzdWUyMzYwMjY0MTI=", "number": 10714, "title": "undefined symbol error when loading zero_out custom op", "user": {"login": "bbouffaut", "id": 7842724, "node_id": "MDQ6VXNlcjc4NDI3MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7842724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bbouffaut", "html_url": "https://github.com/bbouffaut", "followers_url": "https://api.github.com/users/bbouffaut/followers", "following_url": "https://api.github.com/users/bbouffaut/following{/other_user}", "gists_url": "https://api.github.com/users/bbouffaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/bbouffaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bbouffaut/subscriptions", "organizations_url": "https://api.github.com/users/bbouffaut/orgs", "repos_url": "https://api.github.com/users/bbouffaut/repos", "events_url": "https://api.github.com/users/bbouffaut/events{/privacy}", "received_events_url": "https://api.github.com/users/bbouffaut/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-14T22:21:29Z", "updated_at": "2017-06-22T16:17:51Z", "closed_at": "2017-06-22T16:17:51Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Implement zero_out custom op as defined in tensorflow tutorial</strong>: no custom code at all</li>\n<li><strong>OS Platform and Distribution</strong>: Ubuntu 16.04.2 LTS (Xenial Xerus) / 4.4.0-75-generic <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"116139237\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/96\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/96/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/96\">#96</a>-Ubuntu SMP Thu Apr 20 09:56:33 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.1.0-rc2 / v1.1.0-rc2-817-geb11d6b</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.4.5</li>\n<li><strong>CUDA/cuDNN version</strong>: None</li>\n<li><strong>GPU model and memory</strong>: None</li>\n</ul>\n<h3>The problem</h3>\n<p>Undefined symbol error when using zero_out custom op. It appears after I follow the tensorflow tutorial:</p>\n<p>$ bazel build --config opt //tensorflow/core/user_ops:zero_out.so is OK</p>\n<blockquote>\n<p>____Loading complete.  Analyzing...<br>\n____Found 1 target...<br>\n____Building...<br>\n____[0 / 1] BazelWorkspaceStatusAction stable-status.txt<br>\nTarget //tensorflow/core/user_ops:zero_out.so up-to-date:<br>\nbazel-bin/tensorflow/core/user_ops/zero_out.so<br>\n____Elapsed time: 0.464s, Critical Path: 0.01s</p>\n</blockquote>\n<p>$ python zero_output_op_test.py**:</p>\n<blockquote>\n<p>======================================================================<br>\nERROR: testZeroOut (<strong>main</strong>.ZeroOutTest)<br>\nTraceback (most recent call last):<br>\nFile \"zero_out_op_test.py\", line 5, in testZeroOut<br>\nzero_out_module = tf.load_op_library('/srv/workspace/tensorflow/bazel-bin/tensorflow/core/user_ops/zero_out.so')<br>\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/load_library.py\", line 64, in load_op_library<br>\nNone, None, error_msg, error_code)<br>\nNotFoundError: /srv/workspace/tensorflow/bazel-bin/tensorflow/core/user_ops/zero_out.so: undefined symbol: _ZN10tensorflow8internal21CheckOpMessageBuilder9NewStringB5cxx11Ev<br>\nRan 2 tests in 0.040s<br>\nFAILED (errors=1)</p>\n</blockquote>\n<h3>Source code / logs</h3>\n<ul>\n<li><strong>zero_out.cc</strong>:</li>\n</ul>\n<pre><code>#include \"tensorflow/core/framework/op.h\"\n#include \"tensorflow/core/framework/shape_inference.h\"\n#include \"tensorflow/core/framework/op_kernel.h\"\n\nusing namespace tensorflow;\n\nclass ZeroOutOp : public OpKernel {\n public:\n  explicit ZeroOutOp(OpKernelConstruction* context) : OpKernel(context) {}\n\n  void Compute(OpKernelContext* context) override {\n    // Grab the input tensor\n    const Tensor&amp; input_tensor = context-&gt;input(0);\n    auto input = input_tensor.flat&lt;int32&gt;();\n\n    // Create an output tensor\n    Tensor* output_tensor = NULL;\n    OP_REQUIRES_OK(context, context-&gt;allocate_output(0, input_tensor.shape(),\n                                                     &amp;output_tensor));\n    auto output = output_tensor-&gt;flat&lt;int32&gt;();\n\n    // Set all but the first element of the output tensor to 0.\n    const int N = input.size();\n    for (int i = 1; i &lt; N; i++) {\n      output(i) = 0;\n    }\n\n    // Preserve the first input value if possible.\n    if (N &gt; 0) output(0) = input(0);\n  }\n};\n\nREGISTER_OP(\"ZeroOut\")\n    .Input(\"to_zero: int32\")\n    .Output(\"zeroed: int32\")\n    .SetShapeFn([](::tensorflow::shape_inference::InferenceContext* c) {\n      c-&gt;set_output(0, c-&gt;input(0));\n      return Status::OK();\n    });\n\nREGISTER_KERNEL_BUILDER(Name(\"ZeroOut\").Device(DEVICE_CPU), ZeroOutOp);\n</code></pre>\n<p>-<strong>BUILD</strong>:</p>\n<pre><code>load(\"//tensorflow:tensorflow.bzl\", \"tf_custom_op_library\")\n\ntf_custom_op_library(\n    name = \"zero_out.so\",\n    srcs = [\"zero_out.cc\"],\n)\n</code></pre>\n<p>-<strong>zero_out_op_test.py</strong>:</p>\n<pre lang=\"import\" data-meta=\"tensorflow as tf\"><code>\nclass ZeroOutTest(tf.test.TestCase):\n  def testZeroOut(self):\n    zero_out_module = tf.load_op_library('zero_out.so')\n    with self.test_session():\n      result = zero_out_module.zero_out([5, 4, 3, 2, 1])\n      self.assertAllEqual(result.eval(), [5, 0, 0, 0, 0])\n\nif __name__ == \"__main__\":\n  tf.test.main()\n</code></pre>", "body_text": "System information\n\nImplement zero_out custom op as defined in tensorflow tutorial: no custom code at all\nOS Platform and Distribution: Ubuntu 16.04.2 LTS (Xenial Xerus) / 4.4.0-75-generic #96-Ubuntu SMP Thu Apr 20 09:56:33 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): 1.1.0-rc2 / v1.1.0-rc2-817-geb11d6b\nBazel version (if compiling from source): 0.4.5\nCUDA/cuDNN version: None\nGPU model and memory: None\n\nThe problem\nUndefined symbol error when using zero_out custom op. It appears after I follow the tensorflow tutorial:\n$ bazel build --config opt //tensorflow/core/user_ops:zero_out.so is OK\n\n____Loading complete.  Analyzing...\n____Found 1 target...\n____Building...\n____[0 / 1] BazelWorkspaceStatusAction stable-status.txt\nTarget //tensorflow/core/user_ops:zero_out.so up-to-date:\nbazel-bin/tensorflow/core/user_ops/zero_out.so\n____Elapsed time: 0.464s, Critical Path: 0.01s\n\n$ python zero_output_op_test.py**:\n\n======================================================================\nERROR: testZeroOut (main.ZeroOutTest)\nTraceback (most recent call last):\nFile \"zero_out_op_test.py\", line 5, in testZeroOut\nzero_out_module = tf.load_op_library('/srv/workspace/tensorflow/bazel-bin/tensorflow/core/user_ops/zero_out.so')\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/load_library.py\", line 64, in load_op_library\nNone, None, error_msg, error_code)\nNotFoundError: /srv/workspace/tensorflow/bazel-bin/tensorflow/core/user_ops/zero_out.so: undefined symbol: _ZN10tensorflow8internal21CheckOpMessageBuilder9NewStringB5cxx11Ev\nRan 2 tests in 0.040s\nFAILED (errors=1)\n\nSource code / logs\n\nzero_out.cc:\n\n#include \"tensorflow/core/framework/op.h\"\n#include \"tensorflow/core/framework/shape_inference.h\"\n#include \"tensorflow/core/framework/op_kernel.h\"\n\nusing namespace tensorflow;\n\nclass ZeroOutOp : public OpKernel {\n public:\n  explicit ZeroOutOp(OpKernelConstruction* context) : OpKernel(context) {}\n\n  void Compute(OpKernelContext* context) override {\n    // Grab the input tensor\n    const Tensor& input_tensor = context->input(0);\n    auto input = input_tensor.flat<int32>();\n\n    // Create an output tensor\n    Tensor* output_tensor = NULL;\n    OP_REQUIRES_OK(context, context->allocate_output(0, input_tensor.shape(),\n                                                     &output_tensor));\n    auto output = output_tensor->flat<int32>();\n\n    // Set all but the first element of the output tensor to 0.\n    const int N = input.size();\n    for (int i = 1; i < N; i++) {\n      output(i) = 0;\n    }\n\n    // Preserve the first input value if possible.\n    if (N > 0) output(0) = input(0);\n  }\n};\n\nREGISTER_OP(\"ZeroOut\")\n    .Input(\"to_zero: int32\")\n    .Output(\"zeroed: int32\")\n    .SetShapeFn([](::tensorflow::shape_inference::InferenceContext* c) {\n      c->set_output(0, c->input(0));\n      return Status::OK();\n    });\n\nREGISTER_KERNEL_BUILDER(Name(\"ZeroOut\").Device(DEVICE_CPU), ZeroOutOp);\n\n-BUILD:\nload(\"//tensorflow:tensorflow.bzl\", \"tf_custom_op_library\")\n\ntf_custom_op_library(\n    name = \"zero_out.so\",\n    srcs = [\"zero_out.cc\"],\n)\n\n-zero_out_op_test.py:\n\nclass ZeroOutTest(tf.test.TestCase):\n  def testZeroOut(self):\n    zero_out_module = tf.load_op_library('zero_out.so')\n    with self.test_session():\n      result = zero_out_module.zero_out([5, 4, 3, 2, 1])\n      self.assertAllEqual(result.eval(), [5, 0, 0, 0, 0])\n\nif __name__ == \"__main__\":\n  tf.test.main()", "body": "### System information\r\n- **Implement zero_out custom op as defined in tensorflow tutorial**: no custom code at all\r\n- **OS Platform and Distribution**: Ubuntu 16.04.2 LTS (Xenial Xerus) / 4.4.0-75-generic #96-Ubuntu SMP Thu Apr 20 09:56:33 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux \r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.1.0-rc2 / v1.1.0-rc2-817-geb11d6b\r\n- **Bazel version (if compiling from source)**: 0.4.5\r\n- **CUDA/cuDNN version**: None\r\n- **GPU model and memory**: None\r\n\r\n### The problem\r\nUndefined symbol error when using zero_out custom op. It appears after I follow the tensorflow tutorial:\r\n\r\n$ bazel build --config opt //tensorflow/core/user_ops:zero_out.so is OK\r\n> ____Loading complete.  Analyzing...\r\n____Found 1 target...\r\n____Building...\r\n____[0 / 1] BazelWorkspaceStatusAction stable-status.txt\r\nTarget //tensorflow/core/user_ops:zero_out.so up-to-date:\r\n  bazel-bin/tensorflow/core/user_ops/zero_out.so\r\n____Elapsed time: 0.464s, Critical Path: 0.01s\r\n\r\n$ python zero_output_op_test.py**:\r\n>======================================================================\r\nERROR: testZeroOut (__main__.ZeroOutTest)\r\nTraceback (most recent call last):\r\n  File \"zero_out_op_test.py\", line 5, in testZeroOut\r\n    zero_out_module = tf.load_op_library('/srv/workspace/tensorflow/bazel-bin/tensorflow/core/user_ops/zero_out.so')\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/load_library.py\", line 64, in load_op_library\r\n    None, None, error_msg, error_code)\r\nNotFoundError: /srv/workspace/tensorflow/bazel-bin/tensorflow/core/user_ops/zero_out.so: undefined symbol: _ZN10tensorflow8internal21CheckOpMessageBuilder9NewStringB5cxx11Ev\r\nRan 2 tests in 0.040s\r\nFAILED (errors=1)\r\n\r\n### Source code / logs\r\n- **zero_out.cc**:\r\n```\r\n#include \"tensorflow/core/framework/op.h\"\r\n#include \"tensorflow/core/framework/shape_inference.h\"\r\n#include \"tensorflow/core/framework/op_kernel.h\"\r\n\r\nusing namespace tensorflow;\r\n\r\nclass ZeroOutOp : public OpKernel {\r\n public:\r\n  explicit ZeroOutOp(OpKernelConstruction* context) : OpKernel(context) {}\r\n\r\n  void Compute(OpKernelContext* context) override {\r\n    // Grab the input tensor\r\n    const Tensor& input_tensor = context->input(0);\r\n    auto input = input_tensor.flat<int32>();\r\n\r\n    // Create an output tensor\r\n    Tensor* output_tensor = NULL;\r\n    OP_REQUIRES_OK(context, context->allocate_output(0, input_tensor.shape(),\r\n                                                     &output_tensor));\r\n    auto output = output_tensor->flat<int32>();\r\n\r\n    // Set all but the first element of the output tensor to 0.\r\n    const int N = input.size();\r\n    for (int i = 1; i < N; i++) {\r\n      output(i) = 0;\r\n    }\r\n\r\n    // Preserve the first input value if possible.\r\n    if (N > 0) output(0) = input(0);\r\n  }\r\n};\r\n\r\nREGISTER_OP(\"ZeroOut\")\r\n    .Input(\"to_zero: int32\")\r\n    .Output(\"zeroed: int32\")\r\n    .SetShapeFn([](::tensorflow::shape_inference::InferenceContext* c) {\r\n      c->set_output(0, c->input(0));\r\n      return Status::OK();\r\n    });\r\n\r\nREGISTER_KERNEL_BUILDER(Name(\"ZeroOut\").Device(DEVICE_CPU), ZeroOutOp);\r\n```\r\n\r\n-**BUILD**:\r\n```\r\nload(\"//tensorflow:tensorflow.bzl\", \"tf_custom_op_library\")\r\n\r\ntf_custom_op_library(\r\n    name = \"zero_out.so\",\r\n    srcs = [\"zero_out.cc\"],\r\n)\r\n```\r\n-**zero_out_op_test.py**:\r\n```import tensorflow as tf\r\n\r\nclass ZeroOutTest(tf.test.TestCase):\r\n  def testZeroOut(self):\r\n    zero_out_module = tf.load_op_library('zero_out.so')\r\n    with self.test_session():\r\n      result = zero_out_module.zero_out([5, 4, 3, 2, 1])\r\n      self.assertAllEqual(result.eval(), [5, 0, 0, 0, 0])\r\n\r\nif __name__ == \"__main__\":\r\n  tf.test.main()\r\n```\r\n\r\n\r\n"}