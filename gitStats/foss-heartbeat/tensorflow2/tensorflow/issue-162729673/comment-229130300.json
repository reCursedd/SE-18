{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/229130300", "html_url": "https://github.com/tensorflow/tensorflow/issues/3080#issuecomment-229130300", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3080", "id": 229130300, "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTEzMDMwMA==", "user": {"login": "andydavis1", "id": 15696327, "node_id": "MDQ6VXNlcjE1Njk2MzI3", "avatar_url": "https://avatars0.githubusercontent.com/u/15696327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andydavis1", "html_url": "https://github.com/andydavis1", "followers_url": "https://api.github.com/users/andydavis1/followers", "following_url": "https://api.github.com/users/andydavis1/following{/other_user}", "gists_url": "https://api.github.com/users/andydavis1/gists{/gist_id}", "starred_url": "https://api.github.com/users/andydavis1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andydavis1/subscriptions", "organizations_url": "https://api.github.com/users/andydavis1/orgs", "repos_url": "https://api.github.com/users/andydavis1/repos", "events_url": "https://api.github.com/users/andydavis1/events{/privacy}", "received_events_url": "https://api.github.com/users/andydavis1/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-28T17:58:33Z", "updated_at": "2016-06-28T17:58:33Z", "author_association": "MEMBER", "body_html": "<p>My guess here is that in your first example (where you initialize the variables from the output of numpy random), that this forces the GraphDef to have a large Constant tensor nodes (to contain the 2MB of random data needed to initialize the Variables). For the second case, it does not need to \"inline\" the Variable initialization data into the graph, because this data is generated when the graph is run.</p>", "body_text": "My guess here is that in your first example (where you initialize the variables from the output of numpy random), that this forces the GraphDef to have a large Constant tensor nodes (to contain the 2MB of random data needed to initialize the Variables). For the second case, it does not need to \"inline\" the Variable initialization data into the graph, because this data is generated when the graph is run.", "body": "My guess here is that in your first example (where you initialize the variables from the output of numpy random), that this forces the GraphDef to have a large Constant tensor nodes (to contain the 2MB of random data needed to initialize the Variables). For the second case, it does not need to \"inline\" the Variable initialization data into the graph, because this data is generated when the graph is run.\n"}