{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/382913085", "html_url": "https://github.com/tensorflow/tensorflow/issues/18394#issuecomment-382913085", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18394", "id": 382913085, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjkxMzA4NQ==", "user": {"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-19T23:34:43Z", "updated_at": "2018-04-19T23:34:43Z", "author_association": "MEMBER", "body_html": "<p>That works for the single worker case, but with multiple workers, all of them need to know to stop running. We have an implementation of this, basically, we have the eval worker check if it wants to stop after running eval. If it wants to stop, it sets a REQUEST_STOP variable on the parameter server. The other workers run a Hook which checks this variables and stop if a stop has been requested.</p>", "body_text": "That works for the single worker case, but with multiple workers, all of them need to know to stop running. We have an implementation of this, basically, we have the eval worker check if it wants to stop after running eval. If it wants to stop, it sets a REQUEST_STOP variable on the parameter server. The other workers run a Hook which checks this variables and stop if a stop has been requested.", "body": "That works for the single worker case, but with multiple workers, all of them need to know to stop running. We have an implementation of this, basically, we have the eval worker check if it wants to stop after running eval. If it wants to stop, it sets a REQUEST_STOP variable on the parameter server. The other workers run a Hook which checks this variables and stop if a stop has been requested."}