{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/421140188", "html_url": "https://github.com/tensorflow/tensorflow/issues/18394#issuecomment-421140188", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18394", "id": 421140188, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTE0MDE4OA==", "user": {"login": "mihi-r", "id": 37024793, "node_id": "MDQ6VXNlcjM3MDI0Nzkz", "avatar_url": "https://avatars1.githubusercontent.com/u/37024793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mihi-r", "html_url": "https://github.com/mihi-r", "followers_url": "https://api.github.com/users/mihi-r/followers", "following_url": "https://api.github.com/users/mihi-r/following{/other_user}", "gists_url": "https://api.github.com/users/mihi-r/gists{/gist_id}", "starred_url": "https://api.github.com/users/mihi-r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mihi-r/subscriptions", "organizations_url": "https://api.github.com/users/mihi-r/orgs", "repos_url": "https://api.github.com/users/mihi-r/repos", "events_url": "https://api.github.com/users/mihi-r/events{/privacy}", "received_events_url": "https://api.github.com/users/mihi-r/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-13T20:21:23Z", "updated_at": "2018-09-13T20:21:23Z", "author_association": "NONE", "body_html": "<p>I've been experimenting with the early stopping hooks for estimators recently introduced in TensorFlow 1.10, however, it seems like it's not doing anything.</p>\n<p>Here's what I have written:</p>\n<pre><code>classifier = tf.estimator.Estimator(\n    model_fn=model_fn, \n    model_dir=f\"./artifacts/{file_time}/checkpoints/\")\n\nos.makedirs(classifier.eval_dir())\n\nearly_stopping = tf.contrib.estimator.stop_if_no_decrease_hook(\n    classifier,\n    metric_name=\"loss\",\n    max_steps_without_decrease=100)\n\nclassifier.train(\n    input_fn=lambda:train_input_fn(file_time),\n    steps=40000,\n    hooks=[early_stopping]\n)\n</code></pre>\n<p>The training starts, but the training is never stopped by the hook, instead, it continues to train until the steps defined in <code>classifier.train</code>. When it's logging to the console, I can see that the loss hasn't decreased any further. I've also tried setting the <code>run_every_steps</code> to 100. Any ideas of what I may be doing wrong here?</p>", "body_text": "I've been experimenting with the early stopping hooks for estimators recently introduced in TensorFlow 1.10, however, it seems like it's not doing anything.\nHere's what I have written:\nclassifier = tf.estimator.Estimator(\n    model_fn=model_fn, \n    model_dir=f\"./artifacts/{file_time}/checkpoints/\")\n\nos.makedirs(classifier.eval_dir())\n\nearly_stopping = tf.contrib.estimator.stop_if_no_decrease_hook(\n    classifier,\n    metric_name=\"loss\",\n    max_steps_without_decrease=100)\n\nclassifier.train(\n    input_fn=lambda:train_input_fn(file_time),\n    steps=40000,\n    hooks=[early_stopping]\n)\n\nThe training starts, but the training is never stopped by the hook, instead, it continues to train until the steps defined in classifier.train. When it's logging to the console, I can see that the loss hasn't decreased any further. I've also tried setting the run_every_steps to 100. Any ideas of what I may be doing wrong here?", "body": "I've been experimenting with the early stopping hooks for estimators recently introduced in TensorFlow 1.10, however, it seems like it's not doing anything.\r\n\r\nHere's what I have written:\r\n```\r\nclassifier = tf.estimator.Estimator(\r\n    model_fn=model_fn, \r\n    model_dir=f\"./artifacts/{file_time}/checkpoints/\")\r\n\r\nos.makedirs(classifier.eval_dir())\r\n\r\nearly_stopping = tf.contrib.estimator.stop_if_no_decrease_hook(\r\n    classifier,\r\n    metric_name=\"loss\",\r\n    max_steps_without_decrease=100)\r\n\r\nclassifier.train(\r\n    input_fn=lambda:train_input_fn(file_time),\r\n    steps=40000,\r\n    hooks=[early_stopping]\r\n)\r\n```\r\nThe training starts, but the training is never stopped by the hook, instead, it continues to train until the steps defined in `classifier.train`. When it's logging to the console, I can see that the loss hasn't decreased any further. I've also tried setting the `run_every_steps` to 100. Any ideas of what I may be doing wrong here?"}