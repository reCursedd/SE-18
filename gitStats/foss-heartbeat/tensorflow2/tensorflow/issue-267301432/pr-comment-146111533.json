{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/146111533", "pull_request_review_id": 71013355, "id": 146111533, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NjExMTUzMw==", "diff_hunk": "@@ -94,3 +94,42 @@ endif()\n if(WIN32)\n   add_dependencies(tensorflow tensorflow_static)\n endif(WIN32)\n+\n+install(TARGETS tensorflow\n+        RUNTIME DESTINATION bin\n+        LIBRARY DESTINATION lib\n+        ARCHIVE DESTINATION lib)\n+\n+# install headers\n+get_property(include_dirs DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY INCLUDE_DIRECTORIES)\n+# remove root directories, since they contain everything\n+list(REMOVE_DUPLICATES include_dirs)\n+list(REMOVE_ITEM include_dirs ${tensorflow_source_dir} ${CMAKE_CURRENT_BINARY_DIR})\n+# append core tensorflow header dirs and binary dir where generated headers reside", "path": "tensorflow/contrib/cmake/tf_shared_lib.cmake", "position": null, "original_position": 15, "commit_id": "40dc62f7721a674f8a6017339e2440370456ab00", "original_commit_id": "4c70b0d8d7050102a45702dc6b122da956363c78", "user": {"login": "Slonegg", "id": 2404864, "node_id": "MDQ6VXNlcjI0MDQ4NjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2404864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Slonegg", "html_url": "https://github.com/Slonegg", "followers_url": "https://api.github.com/users/Slonegg/followers", "following_url": "https://api.github.com/users/Slonegg/following{/other_user}", "gists_url": "https://api.github.com/users/Slonegg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Slonegg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Slonegg/subscriptions", "organizations_url": "https://api.github.com/users/Slonegg/orgs", "repos_url": "https://api.github.com/users/Slonegg/repos", "events_url": "https://api.github.com/users/Slonegg/events{/privacy}", "received_events_url": "https://api.github.com/users/Slonegg/received_events", "type": "User", "site_admin": false}, "body": "Thanks @mrry for the quick review. Since I was not quite sure which headers to install and it probably depends on the CMake options I've created universal solution which just installs all the headers used by tensorflow package with same directory structure. This way you also don't need to worry about adjusting this code when tensorflow package is changed. If you confirm that it is unlikely that more packages will be added to public headers set, then I'll try to restrict amount of headers installed. I know for sure that Eigen, Protobuf, nsync and protobuf generated headers are needed to compile trivial C++ program using tensorflow.", "created_at": "2017-10-21T18:05:04Z", "updated_at": "2017-10-26T00:18:31Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/13867#discussion_r146111533", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13867", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/146111533"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/13867#discussion_r146111533"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13867"}}, "body_html": "<p>Thanks <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a> for the quick review. Since I was not quite sure which headers to install and it probably depends on the CMake options I've created universal solution which just installs all the headers used by tensorflow package with same directory structure. This way you also don't need to worry about adjusting this code when tensorflow package is changed. If you confirm that it is unlikely that more packages will be added to public headers set, then I'll try to restrict amount of headers installed. I know for sure that Eigen, Protobuf, nsync and protobuf generated headers are needed to compile trivial C++ program using tensorflow.</p>", "body_text": "Thanks @mrry for the quick review. Since I was not quite sure which headers to install and it probably depends on the CMake options I've created universal solution which just installs all the headers used by tensorflow package with same directory structure. This way you also don't need to worry about adjusting this code when tensorflow package is changed. If you confirm that it is unlikely that more packages will be added to public headers set, then I'll try to restrict amount of headers installed. I know for sure that Eigen, Protobuf, nsync and protobuf generated headers are needed to compile trivial C++ program using tensorflow.", "in_reply_to_id": 146110278}