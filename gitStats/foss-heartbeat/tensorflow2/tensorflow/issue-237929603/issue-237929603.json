{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10992", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10992/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10992/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10992/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10992", "id": 237929603, "node_id": "MDU6SXNzdWUyMzc5Mjk2MDM=", "number": 10992, "title": "Feature request: RNN BeamSearchDecoder with Mixture Density Networks For Continuous Truth Values", "user": {"login": "rickyhan", "id": 1768528, "node_id": "MDQ6VXNlcjE3Njg1Mjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1768528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rickyhan", "html_url": "https://github.com/rickyhan", "followers_url": "https://api.github.com/users/rickyhan/followers", "following_url": "https://api.github.com/users/rickyhan/following{/other_user}", "gists_url": "https://api.github.com/users/rickyhan/gists{/gist_id}", "starred_url": "https://api.github.com/users/rickyhan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rickyhan/subscriptions", "organizations_url": "https://api.github.com/users/rickyhan/orgs", "repos_url": "https://api.github.com/users/rickyhan/repos", "events_url": "https://api.github.com/users/rickyhan/events{/privacy}", "received_events_url": "https://api.github.com/users/rickyhan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-22T18:15:04Z", "updated_at": "2018-01-04T22:25:48Z", "closed_at": "2018-01-04T22:25:48Z", "author_association": "NONE", "body_html": "<p>For continuous data, there are 3 options to run a beam search when decoding:</p>\n<ol>\n<li>This is a workaround. Quantize continuous truth values into into either one-hot vector or embedding, effectively transforming the regression into a classification problem.</li>\n<li>Use a mixture density model with N Gaussian mixtures. When decoding, sample top <code>beam_width</code> mixtures.</li>\n<li>Use the SOTA method described in this paper: <a href=\"https://arxiv.org/pdf/1612.01474.pdf\" rel=\"nofollow\">https://arxiv.org/pdf/1612.01474.pdf</a></li>\n</ol>\n<p>Of course, the preferred method is number 3.</p>\n<p>With a graph similar to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"236247461\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/10736\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/10736/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/10736\">#10736</a>, how can such a decoder be implemented?</p>\n<p>My suggestion is to create a separate decoder subclass that specifically handle this situtation to avoid confusion.</p>", "body_text": "For continuous data, there are 3 options to run a beam search when decoding:\n\nThis is a workaround. Quantize continuous truth values into into either one-hot vector or embedding, effectively transforming the regression into a classification problem.\nUse a mixture density model with N Gaussian mixtures. When decoding, sample top beam_width mixtures.\nUse the SOTA method described in this paper: https://arxiv.org/pdf/1612.01474.pdf\n\nOf course, the preferred method is number 3.\nWith a graph similar to #10736, how can such a decoder be implemented?\nMy suggestion is to create a separate decoder subclass that specifically handle this situtation to avoid confusion.", "body": "For continuous data, there are 3 options to run a beam search when decoding:\r\n\r\n1. This is a workaround. Quantize continuous truth values into into either one-hot vector or embedding, effectively transforming the regression into a classification problem.\r\n2. Use a mixture density model with N Gaussian mixtures. When decoding, sample top `beam_width` mixtures.\r\n3. Use the SOTA method described in this paper: https://arxiv.org/pdf/1612.01474.pdf\r\n\r\nOf course, the preferred method is number 3.\r\n\r\nWith a graph similar to https://github.com/tensorflow/tensorflow/issues/10736, how can such a decoder be implemented?\r\n\r\nMy suggestion is to create a separate decoder subclass that specifically handle this situtation to avoid confusion."}