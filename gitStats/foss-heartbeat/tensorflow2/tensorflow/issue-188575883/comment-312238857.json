{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/312238857", "html_url": "https://github.com/tensorflow/tensorflow/issues/5522#issuecomment-312238857", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5522", "id": 312238857, "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjIzODg1Nw==", "user": {"login": "cournape", "id": 25111, "node_id": "MDQ6VXNlcjI1MTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/25111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cournape", "html_url": "https://github.com/cournape", "followers_url": "https://api.github.com/users/cournape/followers", "following_url": "https://api.github.com/users/cournape/following{/other_user}", "gists_url": "https://api.github.com/users/cournape/gists{/gist_id}", "starred_url": "https://api.github.com/users/cournape/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cournape/subscriptions", "organizations_url": "https://api.github.com/users/cournape/orgs", "repos_url": "https://api.github.com/users/cournape/repos", "events_url": "https://api.github.com/users/cournape/events{/privacy}", "received_events_url": "https://api.github.com/users/cournape/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-30T10:57:34Z", "updated_at": "2017-06-30T10:57:34Z", "author_association": "NONE", "body_html": "<p>FWIW, I have seen similar issues w/ a custom built bazel 0.5.1 on Rhel 6, and the issue was a dangling bazel process. If I make sure no bazel process is alive before I do configure, the issue goes away. Unfortunately, doing configure seems to always keep one dangling bazel process :(</p>\n<p>Platforms details:</p>\n<ul>\n<li>rhel 6.5 on x86_64</li>\n<li>bazel 0.5.1 built against rhel 6's openjdk 1.8.0</li>\n<li>configure run as follows: <code>yes \"\" | ./configure</code></li>\n<li>the operation hanging is always bazel clean.</li>\n</ul>\n<p>It always appear when trying to configure a second time, and one can fixes the hang of bazel clean by either  <code>rm -rf ~/.cache/bazel</code> or killing the hanging bazel process.</p>\n<p>Doing an strance on bazel clean shows that otherwise, bazel clean tries to connect to localhost, and hangs around there (I can get a full trace if that is deemed useful)</p>", "body_text": "FWIW, I have seen similar issues w/ a custom built bazel 0.5.1 on Rhel 6, and the issue was a dangling bazel process. If I make sure no bazel process is alive before I do configure, the issue goes away. Unfortunately, doing configure seems to always keep one dangling bazel process :(\nPlatforms details:\n\nrhel 6.5 on x86_64\nbazel 0.5.1 built against rhel 6's openjdk 1.8.0\nconfigure run as follows: yes \"\" | ./configure\nthe operation hanging is always bazel clean.\n\nIt always appear when trying to configure a second time, and one can fixes the hang of bazel clean by either  rm -rf ~/.cache/bazel or killing the hanging bazel process.\nDoing an strance on bazel clean shows that otherwise, bazel clean tries to connect to localhost, and hangs around there (I can get a full trace if that is deemed useful)", "body": "FWIW, I have seen similar issues w/ a custom built bazel 0.5.1 on Rhel 6, and the issue was a dangling bazel process. If I make sure no bazel process is alive before I do configure, the issue goes away. Unfortunately, doing configure seems to always keep one dangling bazel process :(\r\n\r\nPlatforms details:\r\n\r\n* rhel 6.5 on x86_64\r\n* bazel 0.5.1 built against rhel 6's openjdk 1.8.0\r\n* configure run as follows: `yes \"\" | ./configure`\r\n* the operation hanging is always bazel clean.\r\n\r\nIt always appear when trying to configure a second time, and one can fixes the hang of bazel clean by either  `rm -rf ~/.cache/bazel` or killing the hanging bazel process.\r\n\r\nDoing an strance on bazel clean shows that otherwise, bazel clean tries to connect to localhost, and hangs around there (I can get a full trace if that is deemed useful)"}