{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22066", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22066/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22066/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22066/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22066", "id": 356973989, "node_id": "MDU6SXNzdWUzNTY5NzM5ODk=", "number": 22066, "title": "`true_positives` returned Variable rather than Tensor or Operation as update_op in \"call_for_each_tower\"", "user": {"login": "dave-msk", "id": 20377823, "node_id": "MDQ6VXNlcjIwMzc3ODIz", "avatar_url": "https://avatars0.githubusercontent.com/u/20377823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dave-msk", "html_url": "https://github.com/dave-msk", "followers_url": "https://api.github.com/users/dave-msk/followers", "following_url": "https://api.github.com/users/dave-msk/following{/other_user}", "gists_url": "https://api.github.com/users/dave-msk/gists{/gist_id}", "starred_url": "https://api.github.com/users/dave-msk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dave-msk/subscriptions", "organizations_url": "https://api.github.com/users/dave-msk/orgs", "repos_url": "https://api.github.com/users/dave-msk/repos", "events_url": "https://api.github.com/users/dave-msk/events{/privacy}", "received_events_url": "https://api.github.com/users/dave-msk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 996845227, "node_id": "MDU6TGFiZWw5OTY4NDUyMjc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:dist-strat", "name": "comp:dist-strat", "color": "0052cc", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "josh11b", "id": 15258583, "node_id": "MDQ6VXNlcjE1MjU4NTgz", "avatar_url": "https://avatars0.githubusercontent.com/u/15258583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh11b", "html_url": "https://github.com/josh11b", "followers_url": "https://api.github.com/users/josh11b/followers", "following_url": "https://api.github.com/users/josh11b/following{/other_user}", "gists_url": "https://api.github.com/users/josh11b/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh11b/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh11b/subscriptions", "organizations_url": "https://api.github.com/users/josh11b/orgs", "repos_url": "https://api.github.com/users/josh11b/repos", "events_url": "https://api.github.com/users/josh11b/events{/privacy}", "received_events_url": "https://api.github.com/users/josh11b/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "josh11b", "id": 15258583, "node_id": "MDQ6VXNlcjE1MjU4NTgz", "avatar_url": "https://avatars0.githubusercontent.com/u/15258583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh11b", "html_url": "https://github.com/josh11b", "followers_url": "https://api.github.com/users/josh11b/followers", "following_url": "https://api.github.com/users/josh11b/following{/other_user}", "gists_url": "https://api.github.com/users/josh11b/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh11b/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh11b/subscriptions", "organizations_url": "https://api.github.com/users/josh11b/orgs", "repos_url": "https://api.github.com/users/josh11b/repos", "events_url": "https://api.github.com/users/josh11b/events{/privacy}", "received_events_url": "https://api.github.com/users/josh11b/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2018-09-04T20:58:59Z", "updated_at": "2018-10-13T12:37:03Z", "closed_at": "2018-10-13T12:37:03Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Please go to Stack Overflow for help and support:</p>\n<p><a href=\"https://stackoverflow.com/questions/tagged/tensorflow\" rel=\"nofollow\">https://stackoverflow.com/questions/tagged/tensorflow</a></p>\n<p>If you open a GitHub issue, here is our policy:</p>\n<ol>\n<li>It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).</li>\n<li>The form below must be filled out.</li>\n<li>It shouldn't be a TensorBoard issue. Those go <a href=\"https://github.com/tensorflow/tensorboard/issues\">here</a>.</li>\n</ol>\n<p><strong>Here's why we have that policy</strong>: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.</p>\n<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: N/A</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.10.1</li>\n<li><strong>Python version</strong>: 3.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.16.1</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: 5.4.0</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">fn</span>():\n  c1 <span class=\"pl-k\">=</span> tf.constant([<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">0</span>,<span class=\"pl-c1\">0</span>])\n  c2 <span class=\"pl-k\">=</span> tf.constant([<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">0</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">0</span>])\n  tp, op <span class=\"pl-k\">=</span> tf.metrics.true_positives(c1, c2)\n  <span class=\"pl-c1\">print</span>(tp)\n  <span class=\"pl-c1\">print</span>(op)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Without DistributionStrategy</span>\nfn()\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Outputs:</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Tensor(\"true_positives/Identity:0\", shape=(), dtype=float32)</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Tensor(\"true_positives/AssignAdd:0\", shape=(), dtype=float32_ref)</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> With DistributionStrategy</span>\nds <span class=\"pl-k\">=</span> tf.contrib.distribute.OneDeviceStrategy(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/cpu:0<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-k\">with</span> ds.scope():\n  ds.call_for_each_tower(fn)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Outputs:</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Tensor(\"true_positives_1/Identity:0\", shape=(), dtype=float32, device=/device:CPU:0)</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> &lt;tf.Variable 'true_positives_1/AssignAddVariableOp' shape=() dtype=float32&gt;</span></pre></div>\n<p>You can collect some of this information using our environment capture script:</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\">https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh</a></p>\n<p>You can obtain the TensorFlow version with</p>\n<p>python -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"</p>\n<h3>Describe the problem</h3>\n<p>Describe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.</p>\n<p>While using Estimator, we define the metrics in the <code>model_fn</code>, and pass it to the <code>EstimatorSpec</code> as <code>eval_metric_ops</code>. The <code>EstimatorSpec</code> raises an error regarding the <code>update_op</code> returned by <code>tf.metrics.true_positives</code> as it is neither a Tensor or an Operation when it is called through <code>ds.call_for_each_tower</code> in a <code>with ds.scope():</code> block. It appears that this originates from the <code>count</code> variable returned from <code>metric_variable</code> not having a reference dtype, which causes <code>state_ops.add_assign</code> to return <code>ref.assign_add</code> straight, without any Tensor wrapping. This makes it impossible to include <code>true_positives</code> in the <code>model_fn</code> code if a distribution strategy is to be used with Estimator. The situation holds also for <code>true_negatives</code>, <code>false_positives</code> and <code>false_negatives</code>.</p>\n<h3>Source code / logs</h3>\n<p>Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.</p>", "body_text": "Please go to Stack Overflow for help and support:\nhttps://stackoverflow.com/questions/tagged/tensorflow\nIf you open a GitHub issue, here is our policy:\n\nIt must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\nThe form below must be filled out.\nIt shouldn't be a TensorBoard issue. Those go here.\n\nHere's why we have that policy: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\n\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A\nTensorFlow installed from (source or binary): Source\nTensorFlow version (use command below): 1.10.1\nPython version: 3.6\nBazel version (if compiling from source): 0.16.1\nGCC/Compiler version (if compiling from source): 5.4.0\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce:\n\ndef fn():\n  c1 = tf.constant([1,1,0,0])\n  c2 = tf.constant([1,0,1,0])\n  tp, op = tf.metrics.true_positives(c1, c2)\n  print(tp)\n  print(op)\n\n# Without DistributionStrategy\nfn()\n# Outputs:\n# Tensor(\"true_positives/Identity:0\", shape=(), dtype=float32)\n# Tensor(\"true_positives/AssignAdd:0\", shape=(), dtype=float32_ref)\n\n# With DistributionStrategy\nds = tf.contrib.distribute.OneDeviceStrategy(\"/cpu:0\")\nwith ds.scope():\n  ds.call_for_each_tower(fn)\n# Outputs:\n# Tensor(\"true_positives_1/Identity:0\", shape=(), dtype=float32, device=/device:CPU:0)\n# <tf.Variable 'true_positives_1/AssignAddVariableOp' shape=() dtype=float32>\nYou can collect some of this information using our environment capture script:\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\nYou can obtain the TensorFlow version with\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\nDescribe the problem\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\nWhile using Estimator, we define the metrics in the model_fn, and pass it to the EstimatorSpec as eval_metric_ops. The EstimatorSpec raises an error regarding the update_op returned by tf.metrics.true_positives as it is neither a Tensor or an Operation when it is called through ds.call_for_each_tower in a with ds.scope(): block. It appears that this originates from the count variable returned from metric_variable not having a reference dtype, which causes state_ops.add_assign to return ref.assign_add straight, without any Tensor wrapping. This makes it impossible to include true_positives in the model_fn code if a distribution strategy is to be used with Estimator. The situation holds also for true_negatives, false_positives and false_negatives.\nSource code / logs\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: N/A\r\n- **TensorFlow installed from (source or binary)**: Source\r\n- **TensorFlow version (use command below)**: 1.10.1\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: 0.16.1\r\n- **GCC/Compiler version (if compiling from source)**: 5.4.0\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**:\r\n```python\r\ndef fn():\r\n  c1 = tf.constant([1,1,0,0])\r\n  c2 = tf.constant([1,0,1,0])\r\n  tp, op = tf.metrics.true_positives(c1, c2)\r\n  print(tp)\r\n  print(op)\r\n\r\n# Without DistributionStrategy\r\nfn()\r\n# Outputs:\r\n# Tensor(\"true_positives/Identity:0\", shape=(), dtype=float32)\r\n# Tensor(\"true_positives/AssignAdd:0\", shape=(), dtype=float32_ref)\r\n\r\n# With DistributionStrategy\r\nds = tf.contrib.distribute.OneDeviceStrategy(\"/cpu:0\")\r\nwith ds.scope():\r\n  ds.call_for_each_tower(fn)\r\n# Outputs:\r\n# Tensor(\"true_positives_1/Identity:0\", shape=(), dtype=float32, device=/device:CPU:0)\r\n# <tf.Variable 'true_positives_1/AssignAddVariableOp' shape=() dtype=float32>\r\n```\r\n\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\r\n\r\nWhile using Estimator, we define the metrics in the `model_fn`, and pass it to the `EstimatorSpec` as `eval_metric_ops`. The `EstimatorSpec` raises an error regarding the `update_op` returned by `tf.metrics.true_positives` as it is neither a Tensor or an Operation when it is called through `ds.call_for_each_tower` in a `with ds.scope():` block. It appears that this originates from the `count` variable returned from `metric_variable` not having a reference dtype, which causes `state_ops.add_assign` to return `ref.assign_add` straight, without any Tensor wrapping. This makes it impossible to include `true_positives` in the `model_fn` code if a distribution strategy is to be used with Estimator. The situation holds also for `true_negatives`, `false_positives` and `false_negatives`.\r\n\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n"}