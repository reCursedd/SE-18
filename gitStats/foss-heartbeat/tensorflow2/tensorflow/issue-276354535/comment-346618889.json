{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/346618889", "html_url": "https://github.com/tensorflow/tensorflow/issues/14834#issuecomment-346618889", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14834", "id": 346618889, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjYxODg4OQ==", "user": {"login": "facaiy", "id": 1112263, "node_id": "MDQ6VXNlcjExMTIyNjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1112263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facaiy", "html_url": "https://github.com/facaiy", "followers_url": "https://api.github.com/users/facaiy/followers", "following_url": "https://api.github.com/users/facaiy/following{/other_user}", "gists_url": "https://api.github.com/users/facaiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/facaiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facaiy/subscriptions", "organizations_url": "https://api.github.com/users/facaiy/orgs", "repos_url": "https://api.github.com/users/facaiy/repos", "events_url": "https://api.github.com/users/facaiy/events{/privacy}", "received_events_url": "https://api.github.com/users/facaiy/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-23T13:30:41Z", "updated_at": "2017-11-23T13:30:41Z", "author_association": "MEMBER", "body_html": "<p>The API of <code>tf.metrics.auc</code> says that it is an <strong>approximate</strong> AUC via a Riemann sum. So I expect that the results will be a slightly different:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">from</span> sklearn.metrics <span class=\"pl-k\">import</span> roc_auc_score\ny_true <span class=\"pl-k\">=</span> np.array([<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>])\ny_scores <span class=\"pl-k\">=</span> np.array([<span class=\"pl-c1\">0.1</span>, <span class=\"pl-c1\">0.4</span>, <span class=\"pl-c1\">0.35</span>, <span class=\"pl-c1\">0.8</span>])\n<span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>sklearn auc: <span class=\"pl-c1\">{}</span><span class=\"pl-pds\">\"</span></span>.format(roc_auc_score(y_true, y_scores)))\n\n<span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\nauc, update_op <span class=\"pl-k\">=</span> tf.metrics.auc(y_true, y_scores)\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    sess.run(tf.local_variables_initializer())\n    <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>tf auc: <span class=\"pl-c1\">{}</span><span class=\"pl-pds\">\"</span></span>.format(sess.run([auc, update_op])))</pre></div>\n<div class=\"highlight highlight-source-shell\"><pre><span class=\"pl-k\">~</span>/Downloads \u276f\u276f\u276f python test.py\nsklearn auc: 0.75\ntf auc: [0.74999976, 0.74999976]</pre></div>", "body_text": "The API of tf.metrics.auc says that it is an approximate AUC via a Riemann sum. So I expect that the results will be a slightly different:\nimport numpy as np\nfrom sklearn.metrics import roc_auc_score\ny_true = np.array([0, 0, 1, 1])\ny_scores = np.array([0.1, 0.4, 0.35, 0.8])\nprint(\"sklearn auc: {}\".format(roc_auc_score(y_true, y_scores)))\n\nimport tensorflow as tf\nauc, update_op = tf.metrics.auc(y_true, y_scores)\nwith tf.Session() as sess:\n    sess.run(tf.local_variables_initializer())\n    print(\"tf auc: {}\".format(sess.run([auc, update_op])))\n~/Downloads \u276f\u276f\u276f python test.py\nsklearn auc: 0.75\ntf auc: [0.74999976, 0.74999976]", "body": "The API of `tf.metrics.auc` says that it is an **approximate** AUC via a Riemann sum. So I expect that the results will be a slightly different:\r\n\r\n```python\r\nimport numpy as np\r\nfrom sklearn.metrics import roc_auc_score\r\ny_true = np.array([0, 0, 1, 1])\r\ny_scores = np.array([0.1, 0.4, 0.35, 0.8])\r\nprint(\"sklearn auc: {}\".format(roc_auc_score(y_true, y_scores)))\r\n\r\nimport tensorflow as tf\r\nauc, update_op = tf.metrics.auc(y_true, y_scores)\r\nwith tf.Session() as sess:\r\n    sess.run(tf.local_variables_initializer())\r\n    print(\"tf auc: {}\".format(sess.run([auc, update_op])))\r\n```\r\n\r\n```bash\r\n~/Downloads \u276f\u276f\u276f python test.py\r\nsklearn auc: 0.75\r\ntf auc: [0.74999976, 0.74999976]\r\n```"}