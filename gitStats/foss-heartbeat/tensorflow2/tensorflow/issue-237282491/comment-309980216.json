{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/309980216", "html_url": "https://github.com/tensorflow/tensorflow/issues/10857#issuecomment-309980216", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10857", "id": 309980216, "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTk4MDIxNg==", "user": {"login": "zhangyaobit", "id": 1034716, "node_id": "MDQ6VXNlcjEwMzQ3MTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1034716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyaobit", "html_url": "https://github.com/zhangyaobit", "followers_url": "https://api.github.com/users/zhangyaobit/followers", "following_url": "https://api.github.com/users/zhangyaobit/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyaobit/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyaobit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyaobit/subscriptions", "organizations_url": "https://api.github.com/users/zhangyaobit/orgs", "repos_url": "https://api.github.com/users/zhangyaobit/repos", "events_url": "https://api.github.com/users/zhangyaobit/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyaobit/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-21T06:50:49Z", "updated_at": "2017-06-21T07:26:00Z", "author_association": "CONTRIBUTOR", "body_html": "<p>It may make sense to simply forward the population mean and variance to the second and third outputs of FusedBatchNorm when fused=Tue. There is no performance penalty for this, since it is a forwarding instead of a copy.</p>\n<p>Before this feature is implemented, you can modify the code <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/nn_impl.py#L815\">here</a>  to set batch_mean and batch_variance to mean and variance when is_training is False. And change op.output[3] and op.outputs[4] respectively to [1] and [2] <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/nn_grad.py#L667\">here</a>. Note that doing this on the python side may introduce actual copies (a slight performance penalty), so it is not as ideal as making this change on the C++ side (for example, use forwarding like <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/cwise_op_select.cc#L101\">this</a>); but this should get you most of the GPU performance.</p>\n<p>Please let me know if you think this proposed solution would (or would not) work for you.</p>", "body_text": "It may make sense to simply forward the population mean and variance to the second and third outputs of FusedBatchNorm when fused=Tue. There is no performance penalty for this, since it is a forwarding instead of a copy.\nBefore this feature is implemented, you can modify the code here  to set batch_mean and batch_variance to mean and variance when is_training is False. And change op.output[3] and op.outputs[4] respectively to [1] and [2] here. Note that doing this on the python side may introduce actual copies (a slight performance penalty), so it is not as ideal as making this change on the C++ side (for example, use forwarding like this); but this should get you most of the GPU performance.\nPlease let me know if you think this proposed solution would (or would not) work for you.", "body": "It may make sense to simply forward the population mean and variance to the second and third outputs of FusedBatchNorm when fused=Tue. There is no performance penalty for this, since it is a forwarding instead of a copy.\r\n\r\nBefore this feature is implemented, you can modify the code [here](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/nn_impl.py#L815)  to set batch_mean and batch_variance to mean and variance when is_training is False. And change op.output[3] and op.outputs[4] respectively to [1] and [2] [here](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/nn_grad.py#L667). Note that doing this on the python side may introduce actual copies (a slight performance penalty), so it is not as ideal as making this change on the C++ side (for example, use forwarding like [this](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/cwise_op_select.cc#L101)); but this should get you most of the GPU performance.\r\n\r\nPlease let me know if you think this proposed solution would (or would not) work for you."}