{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/294050791", "html_url": "https://github.com/tensorflow/tensorflow/issues/9205#issuecomment-294050791", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9205", "id": 294050791, "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDA1MDc5MQ==", "user": {"login": "jart", "id": 49262, "node_id": "MDQ6VXNlcjQ5MjYy", "avatar_url": "https://avatars1.githubusercontent.com/u/49262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jart", "html_url": "https://github.com/jart", "followers_url": "https://api.github.com/users/jart/followers", "following_url": "https://api.github.com/users/jart/following{/other_user}", "gists_url": "https://api.github.com/users/jart/gists{/gist_id}", "starred_url": "https://api.github.com/users/jart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jart/subscriptions", "organizations_url": "https://api.github.com/users/jart/orgs", "repos_url": "https://api.github.com/users/jart/repos", "events_url": "https://api.github.com/users/jart/events{/privacy}", "received_events_url": "https://api.github.com/users/jart/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-13T23:56:22Z", "updated_at": "2017-04-13T23:56:22Z", "author_association": "MEMBER", "body_html": "<p><em>Note: Please let us triagers take care of tagging team members for you.</em></p>\n<p>I'm noticing that the example code breaks the contract mentioned in session.h:</p>\n<div class=\"highlight highlight-source-c\"><pre><span class=\"pl-c\"><span class=\"pl-c\">//</span>/ A Session allows concurrent calls to Run(), though a Session must</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>/ be created / extended by a single thread.</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>/</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>/ Only one thread must call Close(), and Close() must only be called</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>/ after all other calls to Run() have returned.</span></pre></div>\n<p>IIUC tf.Session is meant to be <a href=\"https://www.tensorflow.org/programmers_guide/threading_and_queues\" rel=\"nofollow\">thread safe</a> in the sense that you're allowed to use a tf.Session object from multiple threads. I'm not aware of the documentation making any promises for thread safety with multiple tf.Session objects. There's also parameters like <a href=\"http://stackoverflow.com/questions/34389945/changing-the-number-of-threads-in-tensorflow-on-cifar10\" rel=\"nofollow\">intra_op_parallelism_threads</a> that can help scale sessions to multiple threads.</p>\n<p>Does your example work if the session objects are creating within the spawned threads, rather than being created in the main thread and handed off?</p>\n<p>If not, then what is your use case for having multiple sessions running in parallel?</p>", "body_text": "Note: Please let us triagers take care of tagging team members for you.\nI'm noticing that the example code breaks the contract mentioned in session.h:\n/// A Session allows concurrent calls to Run(), though a Session must\n/// be created / extended by a single thread.\n///\n/// Only one thread must call Close(), and Close() must only be called\n/// after all other calls to Run() have returned.\nIIUC tf.Session is meant to be thread safe in the sense that you're allowed to use a tf.Session object from multiple threads. I'm not aware of the documentation making any promises for thread safety with multiple tf.Session objects. There's also parameters like intra_op_parallelism_threads that can help scale sessions to multiple threads.\nDoes your example work if the session objects are creating within the spawned threads, rather than being created in the main thread and handed off?\nIf not, then what is your use case for having multiple sessions running in parallel?", "body": "*Note: Please let us triagers take care of tagging team members for you.*\r\n\r\nI'm noticing that the example code breaks the contract mentioned in session.h:\r\n\r\n```c\r\n/// A Session allows concurrent calls to Run(), though a Session must\r\n/// be created / extended by a single thread.\r\n///\r\n/// Only one thread must call Close(), and Close() must only be called\r\n/// after all other calls to Run() have returned.\r\n```\r\n\r\nIIUC tf.Session is meant to be [thread safe](https://www.tensorflow.org/programmers_guide/threading_and_queues) in the sense that you're allowed to use a tf.Session object from multiple threads. I'm not aware of the documentation making any promises for thread safety with multiple tf.Session objects. There's also parameters like [intra_op_parallelism_threads](http://stackoverflow.com/questions/34389945/changing-the-number-of-threads-in-tensorflow-on-cifar10) that can help scale sessions to multiple threads.\r\n\r\nDoes your example work if the session objects are creating within the spawned threads, rather than being created in the main thread and handed off?\r\n\r\nIf not, then what is your use case for having multiple sessions running in parallel?"}