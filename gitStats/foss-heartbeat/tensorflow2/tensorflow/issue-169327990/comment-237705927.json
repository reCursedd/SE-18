{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/237705927", "html_url": "https://github.com/tensorflow/tensorflow/issues/3640#issuecomment-237705927", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3640", "id": 237705927, "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzcwNTkyNw==", "user": {"login": "leachim", "id": 2598597, "node_id": "MDQ6VXNlcjI1OTg1OTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/2598597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leachim", "html_url": "https://github.com/leachim", "followers_url": "https://api.github.com/users/leachim/followers", "following_url": "https://api.github.com/users/leachim/following{/other_user}", "gists_url": "https://api.github.com/users/leachim/gists{/gist_id}", "starred_url": "https://api.github.com/users/leachim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leachim/subscriptions", "organizations_url": "https://api.github.com/users/leachim/orgs", "repos_url": "https://api.github.com/users/leachim/repos", "events_url": "https://api.github.com/users/leachim/events{/privacy}", "received_events_url": "https://api.github.com/users/leachim/received_events", "type": "User", "site_admin": false}, "created_at": "2016-08-04T22:44:17Z", "updated_at": "2016-08-04T22:44:17Z", "author_association": "NONE", "body_html": "<p>I am very sorry, in my haste, I seem to have given you a bad toy example. Very strangely, in my setup if I execute a slightly modified example from above, I get different hashes:<br>\n<code>example = tf.train.Example(features=tf.train.Features(feature={ 'x1': _bytes_feature(seq_x1), 'x2': _bytes_feature(seq_x2), 'x3': _bytes_feature(seq_x2), }))</code><br>\nIt seems that the protobuf is identical though, I have attached an example of the printed output of example (with x1,x2,x3), for which I obtain identical hashes for the protobuf in all runs.<br>\n<code>print(example) &gt; test.txt</code><br>\n<a href=\"https://github.com/tensorflow/tensorflow/files/402820/test.txt\">test.txt</a></p>\n<p>md5sum test.tfrecords test.txt<br>\n1630f4da9a52856ac31e84fd482aebe0  test.tfrecords<br>\n9e9cda7528deb2e7aa358b39c56b2f1d  test.txt</p>\n<p>md5sum test.tfrecords test.txt<br>\ne0af3c621d636f147e91582a00cc0834  test.tfrecords<br>\n9e9cda7528deb2e7aa358b39c56b2f1d  test.txt</p>\n<p>The hashes for the tfrecords file start to repeat themselves as well. I am not entirely sure, whether a similar pattern happens for the x1, x2 case, with lower frequency, though.</p>\n<p>Can this be a problem in the following line then?<br>\n<code>writer.write(example.SerializeToString())</code></p>\n<p>Can you reproduce the issue with the updated example?<br>\nI could also try with a more up-to-date version of tensorflow alternatively.</p>", "body_text": "I am very sorry, in my haste, I seem to have given you a bad toy example. Very strangely, in my setup if I execute a slightly modified example from above, I get different hashes:\nexample = tf.train.Example(features=tf.train.Features(feature={ 'x1': _bytes_feature(seq_x1), 'x2': _bytes_feature(seq_x2), 'x3': _bytes_feature(seq_x2), }))\nIt seems that the protobuf is identical though, I have attached an example of the printed output of example (with x1,x2,x3), for which I obtain identical hashes for the protobuf in all runs.\nprint(example) > test.txt\ntest.txt\nmd5sum test.tfrecords test.txt\n1630f4da9a52856ac31e84fd482aebe0  test.tfrecords\n9e9cda7528deb2e7aa358b39c56b2f1d  test.txt\nmd5sum test.tfrecords test.txt\ne0af3c621d636f147e91582a00cc0834  test.tfrecords\n9e9cda7528deb2e7aa358b39c56b2f1d  test.txt\nThe hashes for the tfrecords file start to repeat themselves as well. I am not entirely sure, whether a similar pattern happens for the x1, x2 case, with lower frequency, though.\nCan this be a problem in the following line then?\nwriter.write(example.SerializeToString())\nCan you reproduce the issue with the updated example?\nI could also try with a more up-to-date version of tensorflow alternatively.", "body": "I am very sorry, in my haste, I seem to have given you a bad toy example. Very strangely, in my setup if I execute a slightly modified example from above, I get different hashes: \n`\nexample = tf.train.Example(features=tf.train.Features(feature={\n'x1': _bytes_feature(seq_x1),\n'x2': _bytes_feature(seq_x2),\n'x3': _bytes_feature(seq_x2),\n}))\n`\nIt seems that the protobuf is identical though, I have attached an example of the printed output of example (with x1,x2,x3), for which I obtain identical hashes for the protobuf in all runs. \n`print(example) > test.txt`\n[test.txt](https://github.com/tensorflow/tensorflow/files/402820/test.txt)\n\nmd5sum test.tfrecords test.txt\n1630f4da9a52856ac31e84fd482aebe0  test.tfrecords\n9e9cda7528deb2e7aa358b39c56b2f1d  test.txt\n\nmd5sum test.tfrecords test.txt\ne0af3c621d636f147e91582a00cc0834  test.tfrecords\n9e9cda7528deb2e7aa358b39c56b2f1d  test.txt\n\nThe hashes for the tfrecords file start to repeat themselves as well. I am not entirely sure, whether a similar pattern happens for the x1, x2 case, with lower frequency, though. \n\nCan this be a problem in the following line then? \n`writer.write(example.SerializeToString())`\n\nCan you reproduce the issue with the updated example? \nI could also try with a more up-to-date version of tensorflow alternatively. \n"}