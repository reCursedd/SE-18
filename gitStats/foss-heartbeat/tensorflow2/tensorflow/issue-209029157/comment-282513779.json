{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/282513779", "html_url": "https://github.com/tensorflow/tensorflow/issues/7719#issuecomment-282513779", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7719", "id": 282513779, "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjUxMzc3OQ==", "user": {"login": "cooijmanstim", "id": 206920, "node_id": "MDQ6VXNlcjIwNjkyMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/206920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cooijmanstim", "html_url": "https://github.com/cooijmanstim", "followers_url": "https://api.github.com/users/cooijmanstim/followers", "following_url": "https://api.github.com/users/cooijmanstim/following{/other_user}", "gists_url": "https://api.github.com/users/cooijmanstim/gists{/gist_id}", "starred_url": "https://api.github.com/users/cooijmanstim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cooijmanstim/subscriptions", "organizations_url": "https://api.github.com/users/cooijmanstim/orgs", "repos_url": "https://api.github.com/users/cooijmanstim/repos", "events_url": "https://api.github.com/users/cooijmanstim/events{/privacy}", "received_events_url": "https://api.github.com/users/cooijmanstim/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-25T21:29:46Z", "updated_at": "2017-02-25T21:30:31Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5105569\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/suiyuan2009\">@suiyuan2009</a> Indeed I set it up that way, and I would argue that it's an implementation detail leaking through. User code shouldn't have to muck with strings (i.e. <code>+ \"/\"</code>) when they have a reference to the Actual VariableScope object to which they want to constrain their selection.</p>", "body_text": "@suiyuan2009 Indeed I set it up that way, and I would argue that it's an implementation detail leaking through. User code shouldn't have to muck with strings (i.e. + \"/\") when they have a reference to the Actual VariableScope object to which they want to constrain their selection.", "body": "@suiyuan2009 Indeed I set it up that way, and I would argue that it's an implementation detail leaking through. User code shouldn't have to muck with strings (i.e. `+ \"/\"`) when they have a reference to the Actual VariableScope object to which they want to constrain their selection."}