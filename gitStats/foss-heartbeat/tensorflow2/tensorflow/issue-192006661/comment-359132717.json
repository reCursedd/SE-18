{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/359132717", "html_url": "https://github.com/tensorflow/tensorflow/issues/5902#issuecomment-359132717", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5902", "id": 359132717, "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTEzMjcxNw==", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-20T01:20:03Z", "updated_at": "2018-01-20T01:20:03Z", "author_association": "MEMBER", "body_html": "<p>A proper implementation would likely involve some interface changes as well (perhaps the <code>Tensor</code> object in C++ should also point to the device/allocator that backs its <code>TensorBuffer</code>). There is nobody actively working on this at this time. If anyone would like to contribute a change, we'd be welcoming of that (perhaps make sense to discuss the plan before sending a PR though).</p>\n<p>A hacky workaround might be to create dummy input/output operations that avoid the copying. For example, the <code>Tensor</code> object provided to <code>Session::Run</code> might just contain enough metadata for the kernel to materialize a <code>Tensor</code> object referencing the GPU memory of interest.</p>", "body_text": "A proper implementation would likely involve some interface changes as well (perhaps the Tensor object in C++ should also point to the device/allocator that backs its TensorBuffer). There is nobody actively working on this at this time. If anyone would like to contribute a change, we'd be welcoming of that (perhaps make sense to discuss the plan before sending a PR though).\nA hacky workaround might be to create dummy input/output operations that avoid the copying. For example, the Tensor object provided to Session::Run might just contain enough metadata for the kernel to materialize a Tensor object referencing the GPU memory of interest.", "body": "A proper implementation would likely involve some interface changes as well (perhaps the `Tensor` object in C++ should also point to the device/allocator that backs its `TensorBuffer`). There is nobody actively working on this at this time. If anyone would like to contribute a change, we'd be welcoming of that (perhaps make sense to discuss the plan before sending a PR though).\r\n\r\nA hacky workaround might be to create dummy input/output operations that avoid the copying. For example, the `Tensor` object provided to `Session::Run` might just contain enough metadata for the kernel to materialize a `Tensor` object referencing the GPU memory of interest."}