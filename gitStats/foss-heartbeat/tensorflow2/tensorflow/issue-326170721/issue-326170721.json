{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19535", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19535/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19535/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19535/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19535", "id": 326170721, "node_id": "MDU6SXNzdWUzMjYxNzA3MjE=", "number": 19535, "title": "TensorRT: Invalid graph after calibration -> inference graph transformation", "user": {"login": "yegord", "id": 1595829, "node_id": "MDQ6VXNlcjE1OTU4Mjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1595829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yegord", "html_url": "https://github.com/yegord", "followers_url": "https://api.github.com/users/yegord/followers", "following_url": "https://api.github.com/users/yegord/following{/other_user}", "gists_url": "https://api.github.com/users/yegord/gists{/gist_id}", "starred_url": "https://api.github.com/users/yegord/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yegord/subscriptions", "organizations_url": "https://api.github.com/users/yegord/orgs", "repos_url": "https://api.github.com/users/yegord/repos", "events_url": "https://api.github.com/users/yegord/events{/privacy}", "received_events_url": "https://api.github.com/users/yegord/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-05-24T15:19:24Z", "updated_at": "2018-06-09T03:29:00Z", "closed_at": "2018-06-09T03:29:00Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nNo.</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nLinux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\nSource.</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\n1.8</li>\n<li><strong>Python version</strong>:<br>\n2.7.12</li>\n<li><strong>Bazel version (if compiling from source)</strong>:<br>\n0.13.0</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:<br>\ngcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.9)</li>\n<li><strong>CUDA/cuDNN version</strong>:<br>\n9.0.176/7.0.5.15</li>\n<li><strong>GPU model and memory</strong>:<br>\n1080 Ti</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>It seems that <code>tf.contrib.tensorrt</code> may incorrectly redirect edges when transforming an INT8 calibration node into an engine node. The current implementation, for each output node, searches the first edge from this output node [1] and redirects only this edge to point from the newly created engine node [2]. If the output node has multiple outgoing edges, then only the first one is redirected, and the remaining edges still use the output node as the source. As a result, after the output node is deleted, the graph becomes invalid and the graphdef generated by <code>tf.contrib.tensorrt.calib_graph_to_infer_graph</code> cannot be loaded (e.g., using <code>TF_GraphImportGraphDef</code>) due to errors like this: <code>Node 'Shape_4': Unknown input node 'group1/block1/Relu'</code>. (In this case, <code>group1/block1/Relu</code> had two edges in the original graph: to some convolution node and to <code>Shape_4</code>; the first edge was updated, the second one was not and caused the error.)</p>\n<p>[1] <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/717aa746e7e915cba9ce36df424d05642fbe8cd7/tensorflow/contrib/tensorrt/convert/convert_nodes.cc#L2191\">tensorflow/tensorflow/contrib/tensorrt/convert/convert_nodes.cc</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 2191\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/717aa746e7e915cba9ce36df424d05642fbe8cd7\">717aa74</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L2191\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"2191\"></td>\n          <td id=\"LC2191\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">break</span>; </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<br>\n[2] <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/717aa746e7e915cba9ce36df424d05642fbe8cd7/tensorflow/contrib/tensorrt/convert/convert_nodes.cc#L2258\">tensorflow/tensorflow/contrib/tensorrt/convert/convert_nodes.cc</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 2258\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/717aa746e7e915cba9ce36df424d05642fbe8cd7\">717aa74</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L2258\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"2258\"></td>\n          <td id=\"LC2258\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">for</span> (<span class=\"pl-c1\">size_t</span> i = <span class=\"pl-c1\">0</span>; i &lt; out_edges.<span class=\"pl-c1\">size</span>(); i++) { </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nNo.\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nLinux Ubuntu 16.04\nTensorFlow installed from (source or binary):\nSource.\nTensorFlow version (use command below):\n1.8\nPython version:\n2.7.12\nBazel version (if compiling from source):\n0.13.0\nGCC/Compiler version (if compiling from source):\ngcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.9)\nCUDA/cuDNN version:\n9.0.176/7.0.5.15\nGPU model and memory:\n1080 Ti\nExact command to reproduce:\n\nDescribe the problem\nIt seems that tf.contrib.tensorrt may incorrectly redirect edges when transforming an INT8 calibration node into an engine node. The current implementation, for each output node, searches the first edge from this output node [1] and redirects only this edge to point from the newly created engine node [2]. If the output node has multiple outgoing edges, then only the first one is redirected, and the remaining edges still use the output node as the source. As a result, after the output node is deleted, the graph becomes invalid and the graphdef generated by tf.contrib.tensorrt.calib_graph_to_infer_graph cannot be loaded (e.g., using TF_GraphImportGraphDef) due to errors like this: Node 'Shape_4': Unknown input node 'group1/block1/Relu'. (In this case, group1/block1/Relu had two edges in the original graph: to some convolution node and to Shape_4; the first edge was updated, the second one was not and caused the error.)\n[1] \n  \n    \n      tensorflow/tensorflow/contrib/tensorrt/convert/convert_nodes.cc\n    \n    \n         Line 2191\n      in\n      717aa74\n    \n    \n    \n    \n\n        \n          \n           break; \n        \n    \n  \n\n\n[2] \n  \n    \n      tensorflow/tensorflow/contrib/tensorrt/convert/convert_nodes.cc\n    \n    \n         Line 2258\n      in\n      717aa74\n    \n    \n    \n    \n\n        \n          \n           for (size_t i = 0; i < out_edges.size(); i++) {", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nNo.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nLinux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**:\r\nSource.\r\n- **TensorFlow version (use command below)**:\r\n1.8\r\n- **Python version**: \r\n2.7.12\r\n- **Bazel version (if compiling from source)**:\r\n0.13.0\r\n- **GCC/Compiler version (if compiling from source)**:\r\ngcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.9)\r\n- **CUDA/cuDNN version**:\r\n9.0.176/7.0.5.15\r\n- **GPU model and memory**:\r\n1080 Ti\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\n\r\nIt seems that `tf.contrib.tensorrt` may incorrectly redirect edges when transforming an INT8 calibration node into an engine node. The current implementation, for each output node, searches the first edge from this output node [1] and redirects only this edge to point from the newly created engine node [2]. If the output node has multiple outgoing edges, then only the first one is redirected, and the remaining edges still use the output node as the source. As a result, after the output node is deleted, the graph becomes invalid and the graphdef generated by `tf.contrib.tensorrt.calib_graph_to_infer_graph` cannot be loaded (e.g., using `TF_GraphImportGraphDef`) due to errors like this: `Node 'Shape_4': Unknown input node 'group1/block1/Relu'`. (In this case, `group1/block1/Relu` had two edges in the original graph: to some convolution node and to `Shape_4`; the first edge was updated, the second one was not and caused the error.)\r\n\r\n[1] https://github.com/tensorflow/tensorflow/blob/717aa746e7e915cba9ce36df424d05642fbe8cd7/tensorflow/contrib/tensorrt/convert/convert_nodes.cc#L2191\r\n[2] https://github.com/tensorflow/tensorflow/blob/717aa746e7e915cba9ce36df424d05642fbe8cd7/tensorflow/contrib/tensorrt/convert/convert_nodes.cc#L2258"}