{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/194553479", "pull_request_review_id": 127713645, "id": 194553479, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDU1MzQ3OQ==", "diff_hunk": "@@ -31,31 +34,62 @@ limitations under the License.\n namespace tensorflow {\n namespace tensorrt {\n class Logger;\n-\n+class TRTInt8Calibrator;\n+class TRTCalibrationResource;\n+class AsyncHelper;\n //  TODO(Sami): Remove this file?\n-class TRTEngineOp : public OpKernel {\n+class TRTEngineOp : public AsyncOpKernel {\n  public:\n   explicit TRTEngineOp(OpKernelConstruction* context);\n \n-  void Compute(OpKernelContext* context) override;\n+  void ComputeAsync(OpKernelContext* context,\n+                    tensorflow::AsyncOpKernel::DoneCallback done) override;\n   ~TRTEngineOp();\n \n  private:\n   template <typename T>\n   struct Destroyer {\n-    void operator()(T* d) { d->destroy(); }\n+    void operator()(T* d) {\n+      if (d) d->destroy();\n+    }\n   };\n \n-  template <typename T>\n-  using destroyed_ptr = std::unique_ptr<T, Destroyer<T>>;\n-  destroyed_ptr<nvinfer1::ICudaEngine> trt_engine_ptr_;\n-  // TODO(samikama): context should go to a resource manager!\n-  destroyed_ptr<nvinfer1::IExecutionContext> trt_execution_context_ptr_;\n+  tensorflow::Status ConstructFunctionHandle(tensorflow::OpKernelContext* ctx);\n+  void ExecuteNativeSegment(tensorflow::OpKernelContext* ctx, AsyncHelper* ah);\n+  tensorflow::Status AllocateCalibrationResources(\n+      tensorflow::OpKernelContext* ctx,\n+      tensorflow::tensorrt::TRTCalibrationResource** cr);\n \n+  // TODO(samikama): context should go to a resource manager!\n+  // std::shared_ptr<nvinfer1::IExecutionContext> get_execution_context(\n+  //     int batch_size);\n+  typedef std::pair<std::shared_ptr<nvinfer1::ICudaEngine>,\n+                    std::shared_ptr<nvinfer1::IExecutionContext>>\n+      EngineCtxPair;\n+  EngineCtxPair get_engine(int batch_size, OpKernelContext* ctx,\n+                           bool ignore_dim_change = true);\n+\n+  std::unordered_map<int, EngineCtxPair> engine_map;", "path": "tensorflow/contrib/tensorrt/kernels/trt_engine_op.h", "position": null, "original_position": 60, "commit_id": "4631936e61651101932073197c08b600006530a3", "original_commit_id": "d5aaf3fa4a4851abc6a0e5600474f7674f1adb93", "user": {"login": "aaroey", "id": 31743510, "node_id": "MDQ6VXNlcjMxNzQzNTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/31743510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaroey", "html_url": "https://github.com/aaroey", "followers_url": "https://api.github.com/users/aaroey/followers", "following_url": "https://api.github.com/users/aaroey/following{/other_user}", "gists_url": "https://api.github.com/users/aaroey/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaroey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaroey/subscriptions", "organizations_url": "https://api.github.com/users/aaroey/orgs", "repos_url": "https://api.github.com/users/aaroey/repos", "events_url": "https://api.github.com/users/aaroey/events{/privacy}", "received_events_url": "https://api.github.com/users/aaroey/received_events", "type": "User", "site_admin": false}, "body": "Also please add comments.", "created_at": "2018-06-11T21:27:08Z", "updated_at": "2018-06-21T22:23:14Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/19871#discussion_r194553479", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19871", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/194553479"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/19871#discussion_r194553479"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19871"}}, "body_html": "<p>Also please add comments.</p>", "body_text": "Also please add comments.", "in_reply_to_id": 194552748}