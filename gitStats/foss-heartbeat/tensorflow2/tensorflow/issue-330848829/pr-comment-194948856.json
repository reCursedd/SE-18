{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/194948856", "pull_request_review_id": 128218675, "id": 194948856, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDk0ODg1Ng==", "diff_hunk": "@@ -318,96 +119,503 @@ tensorflow::Status BuildNodeMap(\n }\n \n }  // namespace\n+// Function to get calibration from ResourceMgr and put them into nodedef.\n tensorflow::Status ConvertCalibGraphToInferGraph(\n     const tensorflow::GraphDef& graph_def, tensorflow::GraphDef* infer_graph) {\n   VLOG(0) << \"Starting Calib Conversion\";\n-  tensorflow::Graph graph(tensorflow::OpRegistry::Global());\n-  TF_RETURN_IF_ERROR(tensorflow::ConvertGraphDefToGraph(\n-      tensorflow::GraphConstructorOptions(), graph_def, &graph));\n-  //  get calib nodes\n-  std::vector<tensorflow::Node*> calib_nodes;\n-  std::vector<tensorflow::Node*> topo_order;\n-  tensorflow::GetPostOrder(graph, &topo_order);\n-  for (auto rit = topo_order.rbegin(); rit != topo_order.rend(); ++rit) {\n-    auto node = *rit;\n-    if (node->type_string() == \"TRTCalibOp\") {\n-      VLOG(1) << \"Found Calib Node \" << node->name();\n-      calib_nodes.push_back(node);\n+  infer_graph->CopyFrom(graph_def);\n+  auto trt_rm = tensorflow::tensorrt::TRTResourceManager::instance();\n+  auto calib_rm = trt_rm->getManager(\"TRTCalibration\");\n+  int num_nodes = infer_graph->node_size();\n+  for (int i = 0; i < num_nodes; ++i) {", "path": "tensorflow/contrib/tensorrt/convert/convert_graph.cc", "position": null, "original_position": 315, "commit_id": "4631936e61651101932073197c08b600006530a3", "original_commit_id": "565640eae327b092edf43613f77ba5ab0747d20d", "user": {"login": "samikama", "id": 10539540, "node_id": "MDQ6VXNlcjEwNTM5NTQw", "avatar_url": "https://avatars0.githubusercontent.com/u/10539540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samikama", "html_url": "https://github.com/samikama", "followers_url": "https://api.github.com/users/samikama/followers", "following_url": "https://api.github.com/users/samikama/following{/other_user}", "gists_url": "https://api.github.com/users/samikama/gists{/gist_id}", "starred_url": "https://api.github.com/users/samikama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samikama/subscriptions", "organizations_url": "https://api.github.com/users/samikama/orgs", "repos_url": "https://api.github.com/users/samikama/repos", "events_url": "https://api.github.com/users/samikama/events{/privacy}", "received_events_url": "https://api.github.com/users/samikama/received_events", "type": "User", "site_admin": false}, "body": "This one is a two-pass approach. In previous case we were updating connections and removing nodes as we add TRTEngineOps thus some connections were getting lost if they are absorbed in other engines. If we start from RTO, connecting edges of the upstream nodes were updated before we absorb them into engines. Here we first collect connections of the engines and then start putting in nodes.", "created_at": "2018-06-13T03:42:38Z", "updated_at": "2018-06-21T22:23:15Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/19871#discussion_r194948856", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19871", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/194948856"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/19871#discussion_r194948856"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19871"}}, "body_html": "<p>This one is a two-pass approach. In previous case we were updating connections and removing nodes as we add TRTEngineOps thus some connections were getting lost if they are absorbed in other engines. If we start from RTO, connecting edges of the upstream nodes were updated before we absorb them into engines. Here we first collect connections of the engines and then start putting in nodes.</p>", "body_text": "This one is a two-pass approach. In previous case we were updating connections and removing nodes as we add TRTEngineOps thus some connections were getting lost if they are absorbed in other engines. If we start from RTO, connecting edges of the upstream nodes were updated before we absorb them into engines. Here we first collect connections of the engines and then start putting in nodes.", "in_reply_to_id": 194903400}