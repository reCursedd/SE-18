{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/340419774", "html_url": "https://github.com/tensorflow/tensorflow/issues/5777#issuecomment-340419774", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5777", "id": 340419774, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDQxOTc3NA==", "user": {"login": "denzp", "id": 747869, "node_id": "MDQ6VXNlcjc0Nzg2OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/747869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denzp", "html_url": "https://github.com/denzp", "followers_url": "https://api.github.com/users/denzp/followers", "following_url": "https://api.github.com/users/denzp/following{/other_user}", "gists_url": "https://api.github.com/users/denzp/gists{/gist_id}", "starred_url": "https://api.github.com/users/denzp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denzp/subscriptions", "organizations_url": "https://api.github.com/users/denzp/orgs", "repos_url": "https://api.github.com/users/denzp/repos", "events_url": "https://api.github.com/users/denzp/events{/privacy}", "received_events_url": "https://api.github.com/users/denzp/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-30T11:41:36Z", "updated_at": "2017-10-30T11:41:36Z", "author_association": "NONE", "body_html": "<p>A solution that works for me is a systemd service that kills all CUDA consuming processes and restarts <code>nvidia-docker</code> (since I use tensorflow inside docker conteiner).</p>\n<pre><code>$ nvidia-smi -q | grep \"Driver Version\"\n\nDriver Version: 387.12\n</code></pre>\n<p>And the service itself:</p>\n<pre><code>[Unit]\nDescription=Kill processes with initialized CUDA before sleep\nBefore=sleep.target\nStopWhenUnneeded=yes\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\nExecStart=/usr/bin/zsh -c 'nvidia-smi pmon -c 1 | awk \\'$3 == \"C\" { system(\"kill -9 \" $2) }\\''\nExecStart=/usr/bin/systemctl stop nvidia-docker.service\nExecStop=/usr/bin/systemctl start nvidia-docker.service\n\n[Install]\nWantedBy=sleep.target\n</code></pre>", "body_text": "A solution that works for me is a systemd service that kills all CUDA consuming processes and restarts nvidia-docker (since I use tensorflow inside docker conteiner).\n$ nvidia-smi -q | grep \"Driver Version\"\n\nDriver Version: 387.12\n\nAnd the service itself:\n[Unit]\nDescription=Kill processes with initialized CUDA before sleep\nBefore=sleep.target\nStopWhenUnneeded=yes\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\nExecStart=/usr/bin/zsh -c 'nvidia-smi pmon -c 1 | awk \\'$3 == \"C\" { system(\"kill -9 \" $2) }\\''\nExecStart=/usr/bin/systemctl stop nvidia-docker.service\nExecStop=/usr/bin/systemctl start nvidia-docker.service\n\n[Install]\nWantedBy=sleep.target", "body": "A solution that works for me is a systemd service that kills all CUDA consuming processes and restarts `nvidia-docker` (since I use tensorflow inside docker conteiner).\r\n\r\n```\r\n$ nvidia-smi -q | grep \"Driver Version\"\r\n\r\nDriver Version: 387.12\r\n```\r\n\r\nAnd the service itself:\r\n```\r\n[Unit]\r\nDescription=Kill processes with initialized CUDA before sleep\r\nBefore=sleep.target\r\nStopWhenUnneeded=yes\r\n\r\n[Service]\r\nType=oneshot\r\nRemainAfterExit=yes\r\nExecStart=/usr/bin/zsh -c 'nvidia-smi pmon -c 1 | awk \\'$3 == \"C\" { system(\"kill -9 \" $2) }\\''\r\nExecStart=/usr/bin/systemctl stop nvidia-docker.service\r\nExecStop=/usr/bin/systemctl start nvidia-docker.service\r\n\r\n[Install]\r\nWantedBy=sleep.target\r\n```"}