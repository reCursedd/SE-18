{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9795", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9795/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9795/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9795/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9795", "id": 227359996, "node_id": "MDU6SXNzdWUyMjczNTk5OTY=", "number": 9795, "title": "Custom configuration of tf.estimator.Estimator - unfavorable change on tf1.1", "user": {"login": "roi-f", "id": 23639139, "node_id": "MDQ6VXNlcjIzNjM5MTM5", "avatar_url": "https://avatars0.githubusercontent.com/u/23639139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roi-f", "html_url": "https://github.com/roi-f", "followers_url": "https://api.github.com/users/roi-f/followers", "following_url": "https://api.github.com/users/roi-f/following{/other_user}", "gists_url": "https://api.github.com/users/roi-f/gists{/gist_id}", "starred_url": "https://api.github.com/users/roi-f/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roi-f/subscriptions", "organizations_url": "https://api.github.com/users/roi-f/orgs", "repos_url": "https://api.github.com/users/roi-f/repos", "events_url": "https://api.github.com/users/roi-f/events{/privacy}", "received_events_url": "https://api.github.com/users/roi-f/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "xiejw", "id": 1184671, "node_id": "MDQ6VXNlcjExODQ2NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1184671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiejw", "html_url": "https://github.com/xiejw", "followers_url": "https://api.github.com/users/xiejw/followers", "following_url": "https://api.github.com/users/xiejw/following{/other_user}", "gists_url": "https://api.github.com/users/xiejw/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiejw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiejw/subscriptions", "organizations_url": "https://api.github.com/users/xiejw/orgs", "repos_url": "https://api.github.com/users/xiejw/repos", "events_url": "https://api.github.com/users/xiejw/events{/privacy}", "received_events_url": "https://api.github.com/users/xiejw/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "xiejw", "id": 1184671, "node_id": "MDQ6VXNlcjExODQ2NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1184671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiejw", "html_url": "https://github.com/xiejw", "followers_url": "https://api.github.com/users/xiejw/followers", "following_url": "https://api.github.com/users/xiejw/following{/other_user}", "gists_url": "https://api.github.com/users/xiejw/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiejw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiejw/subscriptions", "organizations_url": "https://api.github.com/users/xiejw/orgs", "repos_url": "https://api.github.com/users/xiejw/repos", "events_url": "https://api.github.com/users/xiejw/events{/privacy}", "received_events_url": "https://api.github.com/users/xiejw/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2017-05-09T13:04:59Z", "updated_at": "2017-05-11T21:01:46Z", "closed_at": "2017-05-11T21:01:46Z", "author_association": "NONE", "body_html": "<p>This is a feature request, following a change in behavior from TF1.0 to TF1.1.</p>\n<hr>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: yes.</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Debian GNU/Linux 8 (jessie) 64-bit</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: installed using pip</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.1.0-rc0-61-g1ec6ed5</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>:<br>\nmy_estimator = tf.estimator.Estimator(<br>\nmodel_fn = my_model_fn,<br>\nmodel_dir = my_model_dir,<br>\nconfig=tf.contrib.learn.RunConfig(<br>\nsave_checkpoints_steps=20,<br>\nsave_checkpoints_secs=None,<br>\nsave_summary_steps=40,<br>\n)<br>\n)</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>on tf version 1.0 we could easily configure the checkpoint dump (and more) of tf.contrib.learn.Estimator, as stated above: by sending as an input to the estimator tf.contrib.learn.RunConfig with the desired configuration.<br>\non tf version 1.1 this became more complex: the above (and more) configurations in RunConfig are static, and changing them requires either changing the original tf code, or maybe creating a class inheriting from tf.estimator.RunConfig to serve as the config for the estimator.</p>\n<h3>Source code / logs</h3>\n<p>in tf.estimator.RunConfig (v1.1), e.g.:<br>\n<a class=\"user-mention\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/Property/hovercard\" href=\"https://github.com/Property\">@Property</a><br>\ndef save_checkpoints_secs(self):<br>\nreturn 600</p>\n<p>in tf.contrib.learn.RunConfig (v1.0, yet supported on tf1.1):<br>\n<a class=\"user-mention\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/Property/hovercard\" href=\"https://github.com/Property\">@Property</a><br>\ndef save_checkpoints_secs(self):<br>\nreturn self._save_checkpoints_secs</p>", "body_text": "This is a feature request, following a change in behavior from TF1.0 to TF1.1.\n\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes.\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Debian GNU/Linux 8 (jessie) 64-bit\nTensorFlow installed from (source or binary): installed using pip\nTensorFlow version (use command below): v1.1.0-rc0-61-g1ec6ed5\nBazel version (if compiling from source):\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce:\nmy_estimator = tf.estimator.Estimator(\nmodel_fn = my_model_fn,\nmodel_dir = my_model_dir,\nconfig=tf.contrib.learn.RunConfig(\nsave_checkpoints_steps=20,\nsave_checkpoints_secs=None,\nsave_summary_steps=40,\n)\n)\n\nDescribe the problem\non tf version 1.0 we could easily configure the checkpoint dump (and more) of tf.contrib.learn.Estimator, as stated above: by sending as an input to the estimator tf.contrib.learn.RunConfig with the desired configuration.\non tf version 1.1 this became more complex: the above (and more) configurations in RunConfig are static, and changing them requires either changing the original tf code, or maybe creating a class inheriting from tf.estimator.RunConfig to serve as the config for the estimator.\nSource code / logs\nin tf.estimator.RunConfig (v1.1), e.g.:\n@Property\ndef save_checkpoints_secs(self):\nreturn 600\nin tf.contrib.learn.RunConfig (v1.0, yet supported on tf1.1):\n@Property\ndef save_checkpoints_secs(self):\nreturn self._save_checkpoints_secs", "body": "This is a feature request, following a change in behavior from TF1.0 to TF1.1.\r\n\r\n------------------------\r\n\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Debian GNU/Linux 8 (jessie) 64-bit\r\n- **TensorFlow installed from (source or binary)**: installed using pip\r\n- **TensorFlow version (use command below)**: v1.1.0-rc0-61-g1ec6ed5\r\n- **Bazel version (if compiling from source)**:\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: \r\n    my_estimator = tf.estimator.Estimator(\\\r\n        model_fn = my_model_fn, \r\n        model_dir = my_model_dir,\r\n        config=tf.contrib.learn.RunConfig(\r\n            save_checkpoints_steps=20,\r\n            save_checkpoints_secs=None,\r\n            save_summary_steps=40,\r\n        )\r\n    )\r\n\r\n### Describe the problem\r\non tf version 1.0 we could easily configure the checkpoint dump (and more) of tf.contrib.learn.Estimator, as stated above: by sending as an input to the estimator tf.contrib.learn.RunConfig with the desired configuration.\r\non tf version 1.1 this became more complex: the above (and more) configurations in RunConfig are static, and changing them requires either changing the original tf code, or maybe creating a class inheriting from tf.estimator.RunConfig to serve as the config for the estimator.\r\n\r\n### Source code / logs\r\nin tf.estimator.RunConfig (v1.1), e.g.:\r\n  @property\r\n  def save_checkpoints_secs(self):\r\n    return 600\r\n\r\nin tf.contrib.learn.RunConfig (v1.0, yet supported on tf1.1):\r\n  @property\r\n  def save_checkpoints_secs(self):\r\n    return self._save_checkpoints_secs\r\n"}