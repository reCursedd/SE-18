{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/368713477", "html_url": "https://github.com/tensorflow/tensorflow/issues/5987#issuecomment-368713477", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5987", "id": 368713477, "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODcxMzQ3Nw==", "user": {"login": "mixuala", "id": 31947245, "node_id": "MDQ6VXNlcjMxOTQ3MjQ1", "avatar_url": "https://avatars0.githubusercontent.com/u/31947245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mixuala", "html_url": "https://github.com/mixuala", "followers_url": "https://api.github.com/users/mixuala/followers", "following_url": "https://api.github.com/users/mixuala/following{/other_user}", "gists_url": "https://api.github.com/users/mixuala/gists{/gist_id}", "starred_url": "https://api.github.com/users/mixuala/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mixuala/subscriptions", "organizations_url": "https://api.github.com/users/mixuala/orgs", "repos_url": "https://api.github.com/users/mixuala/repos", "events_url": "https://api.github.com/users/mixuala/events{/privacy}", "received_events_url": "https://api.github.com/users/mixuala/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-27T01:26:46Z", "updated_at": "2018-02-27T01:26:46Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=15338760\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/liavassif\">@liavassif</a></p>\n<blockquote>\n<p>At the training part in each epoch run:<br>\nsess.run(is_training.assign(True))<br>\nand at the validation:<br>\nsess.run(is_training.assign(False))</p>\n</blockquote>\n<p>this seems like an interesting approach. can you give a more complete example? I'm not sure how to use <code>feed_dict</code> to feed the different train/val inputs into the same model and reuse weights</p>", "body_text": "@liavassif\n\nAt the training part in each epoch run:\nsess.run(is_training.assign(True))\nand at the validation:\nsess.run(is_training.assign(False))\n\nthis seems like an interesting approach. can you give a more complete example? I'm not sure how to use feed_dict to feed the different train/val inputs into the same model and reuse weights", "body": "@liavassif \r\n\r\n> At the training part in each epoch run:\r\nsess.run(is_training.assign(True))\r\nand at the validation:\r\nsess.run(is_training.assign(False))\r\n\r\nthis seems like an interesting approach. can you give a more complete example? I'm not sure how to use `feed_dict` to feed the different train/val inputs into the same model and reuse weights"}