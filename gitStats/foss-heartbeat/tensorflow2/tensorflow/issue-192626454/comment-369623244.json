{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/369623244", "html_url": "https://github.com/tensorflow/tensorflow/issues/5987#issuecomment-369623244", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5987", "id": 369623244, "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTYyMzI0NA==", "user": {"login": "liavassif", "id": 15338760, "node_id": "MDQ6VXNlcjE1MzM4NzYw", "avatar_url": "https://avatars1.githubusercontent.com/u/15338760?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liavassif", "html_url": "https://github.com/liavassif", "followers_url": "https://api.github.com/users/liavassif/followers", "following_url": "https://api.github.com/users/liavassif/following{/other_user}", "gists_url": "https://api.github.com/users/liavassif/gists{/gist_id}", "starred_url": "https://api.github.com/users/liavassif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liavassif/subscriptions", "organizations_url": "https://api.github.com/users/liavassif/orgs", "repos_url": "https://api.github.com/users/liavassif/repos", "events_url": "https://api.github.com/users/liavassif/events{/privacy}", "received_events_url": "https://api.github.com/users/liavassif/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-01T15:14:08Z", "updated_at": "2018-03-01T15:14:08Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=31947245\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mixuala\">@mixuala</a><br>\nAfter using sess.run() to set the is_training variable, the rest is just the usual mini-batch approach (at train or at validation).</p>\n<pre><code>        # is_train should be True when training and False for validation\n        sess.run(is_training.assign(is_train))\n        for batchid in range(batchN):\n            if is_train:\n                  cur_batch = get_batch_train(batchid)\n            else:\n                  cur_batch = get_batch_test(batchid)\n            run_results = sess.run(ops_train, feed_dict=cur_batch)\n</code></pre>", "body_text": "@mixuala\nAfter using sess.run() to set the is_training variable, the rest is just the usual mini-batch approach (at train or at validation).\n        # is_train should be True when training and False for validation\n        sess.run(is_training.assign(is_train))\n        for batchid in range(batchN):\n            if is_train:\n                  cur_batch = get_batch_train(batchid)\n            else:\n                  cur_batch = get_batch_test(batchid)\n            run_results = sess.run(ops_train, feed_dict=cur_batch)", "body": "@mixuala \r\nAfter using sess.run() to set the is_training variable, the rest is just the usual mini-batch approach (at train or at validation).\r\n```\r\n        # is_train should be True when training and False for validation\r\n        sess.run(is_training.assign(is_train))\r\n        for batchid in range(batchN):\r\n            if is_train:\r\n                  cur_batch = get_batch_train(batchid)\r\n            else:\r\n                  cur_batch = get_batch_test(batchid)\r\n            run_results = sess.run(ops_train, feed_dict=cur_batch)\r\n```\r\n"}