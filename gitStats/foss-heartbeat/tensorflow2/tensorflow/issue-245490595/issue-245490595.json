{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11758", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11758/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11758/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11758/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/11758", "id": 245490595, "node_id": "MDU6SXNzdWUyNDU0OTA1OTU=", "number": 11758, "title": "Unexpected behavior in tf.contrib.distributions.Categorical", "user": {"login": "mbchang", "id": 6439365, "node_id": "MDQ6VXNlcjY0MzkzNjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/6439365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbchang", "html_url": "https://github.com/mbchang", "followers_url": "https://api.github.com/users/mbchang/followers", "following_url": "https://api.github.com/users/mbchang/following{/other_user}", "gists_url": "https://api.github.com/users/mbchang/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbchang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbchang/subscriptions", "organizations_url": "https://api.github.com/users/mbchang/orgs", "repos_url": "https://api.github.com/users/mbchang/repos", "events_url": "https://api.github.com/users/mbchang/events{/privacy}", "received_events_url": "https://api.github.com/users/mbchang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-07-25T18:23:05Z", "updated_at": "2017-12-20T22:37:42Z", "closed_at": "2017-12-20T22:37:42Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Mac OS X 10.12.3</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.2.0</li>\n<li><strong>Python version</strong>: 2.7.10</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>: CPU</li>\n<li><strong>GPU model and memory</strong>: CPU</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<pre><code>&gt;&gt;&gt; import tensorflow as tf\n&gt;&gt;&gt; sess = tf.Session()\n&gt;&gt;&gt; t = tf.contrib.distributions.Categorical(probs=[0.0,0.0,0.0])\n&gt;&gt;&gt; print(sess.run(t.sample([1])))\n&gt;&gt;&gt; [3]  # outside the support of the distribution!\n</code></pre>\n<h3>Describe the problem</h3>\n<p>I wonder if this is a bug or if this is a design choice to have <code>tf.contrib.distributions.Categorical</code> output a number outside the support of the distribution if all of the probabilities are 0. In any case, it would be helpful to throw an error when all probabilities are 0, rather than output a number that doesn't work.</p>\n<h3>Source code / logs</h3>\n<p>See above.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Mac OS X 10.12.3\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.2.0\nPython version: 2.7.10\nBazel version (if compiling from source):\nCUDA/cuDNN version: CPU\nGPU model and memory: CPU\nExact command to reproduce:\n\n>>> import tensorflow as tf\n>>> sess = tf.Session()\n>>> t = tf.contrib.distributions.Categorical(probs=[0.0,0.0,0.0])\n>>> print(sess.run(t.sample([1])))\n>>> [3]  # outside the support of the distribution!\n\nDescribe the problem\nI wonder if this is a bug or if this is a design choice to have tf.contrib.distributions.Categorical output a number outside the support of the distribution if all of the probabilities are 0. In any case, it would be helpful to throw an error when all probabilities are 0, rather than output a number that doesn't work.\nSource code / logs\nSee above.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Mac OS X 10.12.3\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.2.0\r\n- **Python version**: 2.7.10\r\n- **Bazel version (if compiling from source)**:\r\n- **CUDA/cuDNN version**: CPU\r\n- **GPU model and memory**: CPU\r\n- **Exact command to reproduce**:\r\n```\r\n>>> import tensorflow as tf\r\n>>> sess = tf.Session()\r\n>>> t = tf.contrib.distributions.Categorical(probs=[0.0,0.0,0.0])\r\n>>> print(sess.run(t.sample([1])))\r\n>>> [3]  # outside the support of the distribution!\r\n```\r\n\r\n### Describe the problem\r\nI wonder if this is a bug or if this is a design choice to have `tf.contrib.distributions.Categorical` output a number outside the support of the distribution if all of the probabilities are 0. In any case, it would be helpful to throw an error when all probabilities are 0, rather than output a number that doesn't work.\r\n\r\n### Source code / logs\r\nSee above.\r\n"}