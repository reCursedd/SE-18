{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19360", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19360/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19360/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19360/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19360", "id": 324173918, "node_id": "MDU6SXNzdWUzMjQxNzM5MTg=", "number": 19360, "title": "tf.split's -1 support doesn't handle zero dimensions", "user": {"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2018-05-17T20:28:10Z", "updated_at": "2018-08-09T23:49:48Z", "closed_at": "2018-08-09T23:49:48Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes.</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Colab</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Colab</li>\n<li><strong>TensorFlow version (use command below)</strong>: ('unknown', '1.7.0') and 1.8.0</li>\n<li><strong>Python version</strong>: 3.6.3</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>: <code>tf.split(tf.zeros([0]), [0, -1], axis=-1)</code></li>\n</ul>\n<h3>Describe the problem</h3>\n<p>The variable size version of <code>tf.split</code> (<code>SplitV</code> in C++) allows one of the sizes to be -1.  The corresponding output will expand as necessary so that the total output size matches the input.</p>\n<p>Unfortunately, the -1 support currently assumes the -1 dimension corresponds to <strong>positive</strong> size.  It should handle zero as well.  E.g., this should work, but it doesn't:</p>\n<pre><code>&gt;&gt;&gt; tf.split(tf.zeros([0]), [0, -1], axis=-1)\nTraceback (most recent call last):\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 1592, in _create_c_op\n    c_op = c_api.TF_FinishOperation(op_desc)\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Sum of output sizes must match the size of the original Tensor along the split dimension or the sum of the positive sizes must be less if it contains a -1 for 'split_3' (op: 'SplitV') with input shapes: [0], [2], [] and with computed input tensors: input[1] = &lt;0 -1&gt;, input[2] = &lt;-1&gt;.\n</code></pre>\n<p>By comparison, the positive case works fine:</p>\n<pre><code>&gt;&gt;&gt; tf.split(tf.zeros([1]), [0, -1], axis=-1)\n[&lt;tf.Tensor 'split_4:0' shape=(0,) dtype=float32&gt;, &lt;tf.Tensor 'split_4:1' shape=(?,) dtype=float32&gt;]\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes.\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Colab\nTensorFlow installed from (source or binary): Colab\nTensorFlow version (use command below): ('unknown', '1.7.0') and 1.8.0\nPython version: 3.6.3\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce: tf.split(tf.zeros([0]), [0, -1], axis=-1)\n\nDescribe the problem\nThe variable size version of tf.split (SplitV in C++) allows one of the sizes to be -1.  The corresponding output will expand as necessary so that the total output size matches the input.\nUnfortunately, the -1 support currently assumes the -1 dimension corresponds to positive size.  It should handle zero as well.  E.g., this should work, but it doesn't:\n>>> tf.split(tf.zeros([0]), [0, -1], axis=-1)\nTraceback (most recent call last):\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 1592, in _create_c_op\n    c_op = c_api.TF_FinishOperation(op_desc)\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Sum of output sizes must match the size of the original Tensor along the split dimension or the sum of the positive sizes must be less if it contains a -1 for 'split_3' (op: 'SplitV') with input shapes: [0], [2], [] and with computed input tensors: input[1] = <0 -1>, input[2] = <-1>.\n\nBy comparison, the positive case works fine:\n>>> tf.split(tf.zeros([1]), [0, -1], axis=-1)\n[<tf.Tensor 'split_4:0' shape=(0,) dtype=float32>, <tf.Tensor 'split_4:1' shape=(?,) dtype=float32>]", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Colab\r\n- **TensorFlow installed from (source or binary)**: Colab\r\n- **TensorFlow version (use command below)**: ('unknown', '1.7.0') and 1.8.0\r\n- **Python version**: 3.6.3\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: `tf.split(tf.zeros([0]), [0, -1], axis=-1)`\r\n\r\n### Describe the problem\r\nThe variable size version of `tf.split` (`SplitV` in C++) allows one of the sizes to be -1.  The corresponding output will expand as necessary so that the total output size matches the input.\r\n\r\nUnfortunately, the -1 support currently assumes the -1 dimension corresponds to **positive** size.  It should handle zero as well.  E.g., this should work, but it doesn't:\r\n\r\n```\r\n>>> tf.split(tf.zeros([0]), [0, -1], axis=-1)\r\nTraceback (most recent call last):\r\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 1592, in _create_c_op\r\n    c_op = c_api.TF_FinishOperation(op_desc)\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Sum of output sizes must match the size of the original Tensor along the split dimension or the sum of the positive sizes must be less if it contains a -1 for 'split_3' (op: 'SplitV') with input shapes: [0], [2], [] and with computed input tensors: input[1] = <0 -1>, input[2] = <-1>.\r\n```\r\n\r\nBy comparison, the positive case works fine:\r\n\r\n```\r\n>>> tf.split(tf.zeros([1]), [0, -1], axis=-1)\r\n[<tf.Tensor 'split_4:0' shape=(0,) dtype=float32>, <tf.Tensor 'split_4:1' shape=(?,) dtype=float32>]\r\n```"}