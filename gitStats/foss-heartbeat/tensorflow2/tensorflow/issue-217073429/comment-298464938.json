{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/298464938", "html_url": "https://github.com/tensorflow/tensorflow/pull/8728#issuecomment-298464938", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8728", "id": 298464938, "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODQ2NDkzOA==", "user": {"login": "vrv", "id": 463737, "node_id": "MDQ6VXNlcjQ2MzczNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/463737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrv", "html_url": "https://github.com/vrv", "followers_url": "https://api.github.com/users/vrv/followers", "following_url": "https://api.github.com/users/vrv/following{/other_user}", "gists_url": "https://api.github.com/users/vrv/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrv/subscriptions", "organizations_url": "https://api.github.com/users/vrv/orgs", "repos_url": "https://api.github.com/users/vrv/repos", "events_url": "https://api.github.com/users/vrv/events{/privacy}", "received_events_url": "https://api.github.com/users/vrv/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-02T00:08:17Z", "updated_at": "2017-05-02T00:08:17Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=966348\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/tillahoffmann\">@tillahoffmann</a> I think given the extra zmq dependency, and the lack of clarity for exactly how the core system would use this, I'd prefer to keep the core code slim.</p>\n<p>Because this is a nicely self-contained op, this is actually a great candidate to release / deploy as a custom, external operation via load_library.  If this op becomes popular, we can then assess the tradeoff of adding it to the core vs. the additional dependency / portability issues it creates.  It'll hopefully also be more clear why this op is even useful (and for example, why we wouldn't want an alternative to zeromq instead).  Without more context / use patterns, it's hard to know :).</p>\n<p>I'm going to close this for now, but feel free to ping me or open an issue to discuss this further.</p>", "body_text": "@tillahoffmann I think given the extra zmq dependency, and the lack of clarity for exactly how the core system would use this, I'd prefer to keep the core code slim.\nBecause this is a nicely self-contained op, this is actually a great candidate to release / deploy as a custom, external operation via load_library.  If this op becomes popular, we can then assess the tradeoff of adding it to the core vs. the additional dependency / portability issues it creates.  It'll hopefully also be more clear why this op is even useful (and for example, why we wouldn't want an alternative to zeromq instead).  Without more context / use patterns, it's hard to know :).\nI'm going to close this for now, but feel free to ping me or open an issue to discuss this further.", "body": "@tillahoffmann I think given the extra zmq dependency, and the lack of clarity for exactly how the core system would use this, I'd prefer to keep the core code slim.\r\n\r\nBecause this is a nicely self-contained op, this is actually a great candidate to release / deploy as a custom, external operation via load_library.  If this op becomes popular, we can then assess the tradeoff of adding it to the core vs. the additional dependency / portability issues it creates.  It'll hopefully also be more clear why this op is even useful (and for example, why we wouldn't want an alternative to zeromq instead).  Without more context / use patterns, it's hard to know :).\r\n\r\nI'm going to close this for now, but feel free to ping me or open an issue to discuss this further."}