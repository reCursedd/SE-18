{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/291234064", "html_url": "https://github.com/tensorflow/tensorflow/pull/8728#issuecomment-291234064", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8728", "id": 291234064, "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTIzNDA2NA==", "user": {"login": "tillahoffmann", "id": 966348, "node_id": "MDQ6VXNlcjk2NjM0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/966348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tillahoffmann", "html_url": "https://github.com/tillahoffmann", "followers_url": "https://api.github.com/users/tillahoffmann/followers", "following_url": "https://api.github.com/users/tillahoffmann/following{/other_user}", "gists_url": "https://api.github.com/users/tillahoffmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/tillahoffmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tillahoffmann/subscriptions", "organizations_url": "https://api.github.com/users/tillahoffmann/orgs", "repos_url": "https://api.github.com/users/tillahoffmann/repos", "events_url": "https://api.github.com/users/tillahoffmann/events{/privacy}", "received_events_url": "https://api.github.com/users/tillahoffmann/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-03T18:38:39Z", "updated_at": "2017-04-03T18:38:39Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a>, thanks for the feedback. I'm happy to leave this PR open and iterate on the design here unless you have a strong preference to merge into <code>tf.contrib</code> first.</p>\n<ol>\n<li>I'll have a look into splitting the op into a state and an accessor as suggested (do you have a particular state/op combination in mind that is most closely related?). For now, I will hold off until we've heard from <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=577277\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/martinwicke\">@martinwicke</a> regarding the legal aspects.</li>\n<li>Yes, <code>zmq_msg_recv</code> does indeed block. Once 1. is addressed, I will move the accessor to an async op.</li>\n</ol>", "body_text": "@mrry, thanks for the feedback. I'm happy to leave this PR open and iterate on the design here unless you have a strong preference to merge into tf.contrib first.\n\nI'll have a look into splitting the op into a state and an accessor as suggested (do you have a particular state/op combination in mind that is most closely related?). For now, I will hold off until we've heard from @martinwicke regarding the legal aspects.\nYes, zmq_msg_recv does indeed block. Once 1. is addressed, I will move the accessor to an async op.", "body": "@mrry, thanks for the feedback. I'm happy to leave this PR open and iterate on the design here unless you have a strong preference to merge into `tf.contrib` first.\r\n\r\n1. I'll have a look into splitting the op into a state and an accessor as suggested (do you have a particular state/op combination in mind that is most closely related?). For now, I will hold off until we've heard from @martinwicke regarding the legal aspects.\r\n2. Yes, `zmq_msg_recv` does indeed block. Once 1. is addressed, I will move the accessor to an async op."}