{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/112552643", "pull_request_review_id": 33877757, "id": 112552643, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMjU1MjY0Mw==", "diff_hunk": "@@ -0,0 +1,108 @@\n+/* Copyright 2017 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+// See docs in ../ops/io_ops.cc.\n+\n+#include <memory>\n+#include <zmq.h>\n+#include \"tensorflow/core/framework/op_kernel.h\"\n+#include \"tensorflow/core/framework/tensor_shape.h\"\n+#include \"tensorflow/core/lib/core/errors.h\"\n+\n+namespace tensorflow {\n+\n+class PollZmqOp : public AsyncOpKernel {\n+ public:\n+  explicit PollZmqOp(OpKernelConstruction* context) : AsyncOpKernel(context) {\n+    OP_REQUIRES_OK(context, context->GetAttr(\"address\", &address_));\n+    OP_REQUIRES_OK(context, context->GetAttr(\"timeout\", &timeout_));\n+    // Create a context and connect a REQ socket\n+    context_ = zmq_ctx_new();\n+    OP_REQUIRES(context, context_ != nullptr,\n+                errors::Internal(\"Failed to initialize context.\"));\n+    socket_ = zmq_socket(context_, ZMQ_REQ);\n+    OP_REQUIRES(context, socket_ != nullptr,\n+                errors::Internal(\"Failed to initialize socket.\"));\n+    OP_REQUIRES(context,\n+                zmq_setsockopt(socket_, ZMQ_RCVTIMEO,\n+                               &timeout_, sizeof(timeout_)) == 0,\n+                errors::Internal(\"Failed to set timeout.\"));\n+    OP_REQUIRES(context, zmq_connect(socket_, &address_[0]) == 0,\n+                errors::Internal(\"Failed to connect to \", address_, \".\"));", "path": "tensorflow/contrib/io/kernels/zmq_op.cc", "position": 43, "original_position": 43, "commit_id": "d70ab8bd61f5dae7ab26713b4f12f9231b244f82", "original_commit_id": "557cadb5bf0170599aeaf46b9713654a0ea0445f", "user": {"login": "tillahoffmann", "id": 966348, "node_id": "MDQ6VXNlcjk2NjM0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/966348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tillahoffmann", "html_url": "https://github.com/tillahoffmann", "followers_url": "https://api.github.com/users/tillahoffmann/followers", "following_url": "https://api.github.com/users/tillahoffmann/following{/other_user}", "gists_url": "https://api.github.com/users/tillahoffmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/tillahoffmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tillahoffmann/subscriptions", "organizations_url": "https://api.github.com/users/tillahoffmann/orgs", "repos_url": "https://api.github.com/users/tillahoffmann/repos", "events_url": "https://api.github.com/users/tillahoffmann/events{/privacy}", "received_events_url": "https://api.github.com/users/tillahoffmann/received_events", "type": "User", "site_admin": false}, "body": "[`zmq_connect`](http://api.zeromq.org/4-2:zmq-connect) does not usually block. From the docs:\r\n\r\n> [F]or most transports and socket types the connection is not performed immediately but as needed by \u00d8MQ. [...] The first exception is when using the inproc:// transport: you must call zmq_bind() before calling zmq_connect(). The second exception are ZMQ_PAIR sockets, which do not automatically reconnect to endpoints.", "created_at": "2017-04-20T20:26:46Z", "updated_at": "2017-04-20T20:26:46Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/8728#discussion_r112552643", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/8728", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/112552643"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/8728#discussion_r112552643"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/8728"}}, "body_html": "<p><a href=\"http://api.zeromq.org/4-2:zmq-connect\" rel=\"nofollow\"><code>zmq_connect</code></a> does not usually block. From the docs:</p>\n<blockquote>\n<p>[F]or most transports and socket types the connection is not performed immediately but as needed by \u00d8MQ. [...] The first exception is when using the inproc:// transport: you must call zmq_bind() before calling zmq_connect(). The second exception are ZMQ_PAIR sockets, which do not automatically reconnect to endpoints.</p>\n</blockquote>", "body_text": "zmq_connect does not usually block. From the docs:\n\n[F]or most transports and socket types the connection is not performed immediately but as needed by \u00d8MQ. [...] The first exception is when using the inproc:// transport: you must call zmq_bind() before calling zmq_connect(). The second exception are ZMQ_PAIR sockets, which do not automatically reconnect to endpoints.", "in_reply_to_id": 112364640}