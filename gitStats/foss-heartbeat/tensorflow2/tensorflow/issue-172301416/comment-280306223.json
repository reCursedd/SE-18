{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/280306223", "html_url": "https://github.com/tensorflow/tensorflow/issues/3945#issuecomment-280306223", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3945", "id": 280306223, "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDMwNjIyMw==", "user": {"login": "balancap", "id": 4094436, "node_id": "MDQ6VXNlcjQwOTQ0MzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/4094436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/balancap", "html_url": "https://github.com/balancap", "followers_url": "https://api.github.com/users/balancap/followers", "following_url": "https://api.github.com/users/balancap/following{/other_user}", "gists_url": "https://api.github.com/users/balancap/gists{/gist_id}", "starred_url": "https://api.github.com/users/balancap/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/balancap/subscriptions", "organizations_url": "https://api.github.com/users/balancap/orgs", "repos_url": "https://api.github.com/users/balancap/repos", "events_url": "https://api.github.com/users/balancap/events{/privacy}", "received_events_url": "https://api.github.com/users/balancap/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-16T11:29:25Z", "updated_at": "2017-02-16T11:29:25Z", "author_association": "NONE", "body_html": "<p>If I may, should <code>tf.select / where</code> not be able to support more general broadcasting?<br>\nIgnoring the casting problem, it is completely equivalent to the operation <code>cond * t  + (1  - cond) * e</code> which supports much more general input shapes. For instance, I find it quite useful when <code>t</code> is a Tensor and <code>e</code> a scalar for performing a simple update of some values in the former.</p>", "body_text": "If I may, should tf.select / where not be able to support more general broadcasting?\nIgnoring the casting problem, it is completely equivalent to the operation cond * t  + (1  - cond) * e which supports much more general input shapes. For instance, I find it quite useful when t is a Tensor and e a scalar for performing a simple update of some values in the former.", "body": "If I may, should `tf.select / where` not be able to support more general broadcasting? \r\nIgnoring the casting problem, it is completely equivalent to the operation `cond * t  + (1  - cond) * e` which supports much more general input shapes. For instance, I find it quite useful when `t` is a Tensor and `e` a scalar for performing a simple update of some values in the former. \r\n"}