{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3882", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3882/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3882/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3882/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3882", "id": 171747128, "node_id": "MDU6SXNzdWUxNzE3NDcxMjg=", "number": 3882, "title": "dynamic_rnn time_major=False does not support rank>3 input", "user": {"login": "hhexiy", "id": 1202342, "node_id": "MDQ6VXNlcjEyMDIzNDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1202342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhexiy", "html_url": "https://github.com/hhexiy", "followers_url": "https://api.github.com/users/hhexiy/followers", "following_url": "https://api.github.com/users/hhexiy/following{/other_user}", "gists_url": "https://api.github.com/users/hhexiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhexiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhexiy/subscriptions", "organizations_url": "https://api.github.com/users/hhexiy/orgs", "repos_url": "https://api.github.com/users/hhexiy/repos", "events_url": "https://api.github.com/users/hhexiy/events{/privacy}", "received_events_url": "https://api.github.com/users/hhexiy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2016-08-17T20:02:39Z", "updated_at": "2017-06-16T17:52:31Z", "closed_at": "2017-06-16T17:52:31Z", "author_association": "NONE", "body_html": "<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/33b336ada58529d5e0398feea423785f1c3d57c1/tensorflow/python/ops/rnn.py#L782\">tensorflow/tensorflow/python/ops/rnn.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 782\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/33b336ada58529d5e0398feea423785f1c3d57c1\">33b336a</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L782\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"782\"></td>\n          <td id=\"LC782\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> flat_input <span class=\"pl-k\">=</span> <span class=\"pl-c1\">tuple</span>(array_ops.transpose(input_, [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">2</span>]) </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<pre><code>flat_input = tuple(array_ops.transpose(input_, [1, 0, 2])\nfor input_ in flat_input)\n</code></pre>\n<p>Here seems we can only transpose matrix of size batch_size * time_size * input_size. It doesn't work if my input at each time step is a matrix.<br>\nIn torch you can just specify the two dimensions (0 and 1 here) to be swapped instead of perm. Is there a similar functionality?</p>", "body_text": "tensorflow/tensorflow/python/ops/rnn.py\n    \n    \n         Line 782\n      in\n      33b336a\n    \n    \n    \n    \n\n        \n          \n           flat_input = tuple(array_ops.transpose(input_, [1, 0, 2]) \n        \n    \n  \n\n\nflat_input = tuple(array_ops.transpose(input_, [1, 0, 2])\nfor input_ in flat_input)\n\nHere seems we can only transpose matrix of size batch_size * time_size * input_size. It doesn't work if my input at each time step is a matrix.\nIn torch you can just specify the two dimensions (0 and 1 here) to be swapped instead of perm. Is there a similar functionality?", "body": "https://github.com/tensorflow/tensorflow/blob/33b336ada58529d5e0398feea423785f1c3d57c1/tensorflow/python/ops/rnn.py#L782\n\n```\nflat_input = tuple(array_ops.transpose(input_, [1, 0, 2])\nfor input_ in flat_input)\n```\n\nHere seems we can only transpose matrix of size batch_size \\* time_size \\* input_size. It doesn't work if my input at each time step is a matrix.\nIn torch you can just specify the two dimensions (0 and 1 here) to be swapped instead of perm. Is there a similar functionality?\n"}