{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/51435842", "pull_request_review_id": null, "id": 51435842, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM1ODQy", "diff_hunk": "@@ -0,0 +1,142 @@\n+#!/usr/bin/env bash\n+# Copyright 2016 Google Inc. All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ==============================================================================\n+\n+# Build the Python PIP installation package for TensorFlow\n+# and run the Python unit tests from the source code on the installation\n+#\n+# When executing the Python unit tests, the script obeys three environment\n+# variables: PY_TEST_WHITELIST, PY_TEST_BLACKLIST and PY_TEST_GPU_BLACKLIST\n+#\n+# To select only a subset of the Python tests to run, set the environment\n+# variable PY_TEST_WHITELIST, e.g.,\n+#   PY_TEST_WHITELIST=\"tensorflow/python/kernel_tests/shape_ops_test.py\"\n+# Separate the tests with a colon (:). Leave this environment variable empty\n+# to disable the whitelist.\n+#\n+# You can also ignore a set of the tests by using the environment variable\n+# PY_TEST_BLACKLIST. For example, you can include in PY_TEST_BLACKLIST the\n+# tests that depend on Python modules in TensorFlow source that are not\n+# exported publicly.\n+#\n+# In addition, you can put blacklist for only GPU build inthe environment\n+# variable PY_TEST_GPU_BLACKLIST.\n+#\n+\n+echo \"PY_TEST_BLACKLIST: ${PY_TEST_BLACKLIST}\"", "path": "tensorflow/tools/ci_build/builds/test_on_install.sh", "position": null, "original_position": 38, "commit_id": "da2202dec6befe480b5bae3971a0c5cab15d74ea", "original_commit_id": "c65665cf5fce4b7cb1ea8f8d713e12e11330b125", "user": {"login": "caisq", "id": 16824702, "node_id": "MDQ6VXNlcjE2ODI0NzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/16824702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caisq", "html_url": "https://github.com/caisq", "followers_url": "https://api.github.com/users/caisq/followers", "following_url": "https://api.github.com/users/caisq/following{/other_user}", "gists_url": "https://api.github.com/users/caisq/gists{/gist_id}", "starred_url": "https://api.github.com/users/caisq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caisq/subscriptions", "organizations_url": "https://api.github.com/users/caisq/orgs", "repos_url": "https://api.github.com/users/caisq/repos", "events_url": "https://api.github.com/users/caisq/events{/privacy}", "received_events_url": "https://api.github.com/users/caisq/received_events", "type": "User", "site_admin": false}, "body": "In total, there are five tests that failed for the CPU PIP install test:\n1) tensorflow/python/tools/freeze_graph_test.py\n2) tensorflow/python/ops/image_ops_test.py\n3) tensorflow/python/framework/ops_test.py\n4) tensorflow/python/util/protobuf/compare_test.py\n5) tensorflow/python/framework/device_test.py\n\n1 is fixed by copying the tensorflow/python/tools folder, which is not included in the installation by default, to the PIP installation destination package.\n2 is fixed by copying some JPEG and PNG images for test to the working directory for testing. \n\nI added the fixes for 1 and 2 to test_on_install.sh. \n\n3-5 cannot be fixed easily. 3 depends on \"test_ops\", which is defined in a C++ file wrapped as a .py file through the Bazel rule \u201ctf_gen_ops_wrapper_py\u201d. 4 depends on a similar thing defined outside Python (compare_test_pb2). 5 depends on external things as well (CheckValid and ToString).\n\nI do think having the capability to skip some tests will come in handy. \n", "created_at": "2016-02-01T15:58:06Z", "updated_at": "2016-02-04T04:43:38Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/939#discussion_r51435842", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/939", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/51435842"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/939#discussion_r51435842"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/939"}}, "body_html": "<p>In total, there are five tests that failed for the CPU PIP install test:</p>\n<ol>\n<li>tensorflow/python/tools/freeze_graph_test.py</li>\n<li>tensorflow/python/ops/image_ops_test.py</li>\n<li>tensorflow/python/framework/ops_test.py</li>\n<li>tensorflow/python/util/protobuf/compare_test.py</li>\n<li>tensorflow/python/framework/device_test.py</li>\n</ol>\n<p>1 is fixed by copying the tensorflow/python/tools folder, which is not included in the installation by default, to the PIP installation destination package.<br>\n2 is fixed by copying some JPEG and PNG images for test to the working directory for testing.</p>\n<p>I added the fixes for 1 and 2 to test_on_install.sh.</p>\n<p>3-5 cannot be fixed easily. 3 depends on \"test_ops\", which is defined in a C++ file wrapped as a .py file through the Bazel rule \u201ctf_gen_ops_wrapper_py\u201d. 4 depends on a similar thing defined outside Python (compare_test_pb2). 5 depends on external things as well (CheckValid and ToString).</p>\n<p>I do think having the capability to skip some tests will come in handy.</p>", "body_text": "In total, there are five tests that failed for the CPU PIP install test:\n\ntensorflow/python/tools/freeze_graph_test.py\ntensorflow/python/ops/image_ops_test.py\ntensorflow/python/framework/ops_test.py\ntensorflow/python/util/protobuf/compare_test.py\ntensorflow/python/framework/device_test.py\n\n1 is fixed by copying the tensorflow/python/tools folder, which is not included in the installation by default, to the PIP installation destination package.\n2 is fixed by copying some JPEG and PNG images for test to the working directory for testing.\nI added the fixes for 1 and 2 to test_on_install.sh.\n3-5 cannot be fixed easily. 3 depends on \"test_ops\", which is defined in a C++ file wrapped as a .py file through the Bazel rule \u201ctf_gen_ops_wrapper_py\u201d. 4 depends on a similar thing defined outside Python (compare_test_pb2). 5 depends on external things as well (CheckValid and ToString).\nI do think having the capability to skip some tests will come in handy."}