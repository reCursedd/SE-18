{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/166146835", "html_url": "https://github.com/tensorflow/tensorflow/pull/546#issuecomment-166146835", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/546", "id": 166146835, "node_id": "MDEyOklzc3VlQ29tbWVudDE2NjE0NjgzNQ==", "user": {"login": "vrv", "id": 463737, "node_id": "MDQ6VXNlcjQ2MzczNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/463737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrv", "html_url": "https://github.com/vrv", "followers_url": "https://api.github.com/users/vrv/followers", "following_url": "https://api.github.com/users/vrv/following{/other_user}", "gists_url": "https://api.github.com/users/vrv/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrv/subscriptions", "organizations_url": "https://api.github.com/users/vrv/orgs", "repos_url": "https://api.github.com/users/vrv/repos", "events_url": "https://api.github.com/users/vrv/events{/privacy}", "received_events_url": "https://api.github.com/users/vrv/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-20T18:49:50Z", "updated_at": "2015-12-20T18:49:50Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hmm, not that I know of.  We want to add 'parameterized test' support to the python unit tests to make this easy.  Alternatively, you could make the base class a test harness that takes in one type, and then instantiate one class for each type being tested, so that the name of the class tells you which type failed.</p>\n<p>That being said, it's probably fine for now to leave it as is, since we do this type of test in a bunch of other files.  Thanks for making these changes!</p>\n<p>I'll take a closer look tomorrow.</p>", "body_text": "Hmm, not that I know of.  We want to add 'parameterized test' support to the python unit tests to make this easy.  Alternatively, you could make the base class a test harness that takes in one type, and then instantiate one class for each type being tested, so that the name of the class tells you which type failed.\nThat being said, it's probably fine for now to leave it as is, since we do this type of test in a bunch of other files.  Thanks for making these changes!\nI'll take a closer look tomorrow.", "body": "Hmm, not that I know of.  We want to add 'parameterized test' support to the python unit tests to make this easy.  Alternatively, you could make the base class a test harness that takes in one type, and then instantiate one class for each type being tested, so that the name of the class tells you which type failed.\n\nThat being said, it's probably fine for now to leave it as is, since we do this type of test in a bunch of other files.  Thanks for making these changes!\n\nI'll take a closer look tomorrow.\n"}