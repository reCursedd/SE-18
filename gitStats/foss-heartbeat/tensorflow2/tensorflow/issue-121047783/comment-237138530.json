{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/237138530", "html_url": "https://github.com/tensorflow/tensorflow/issues/446#issuecomment-237138530", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/446", "id": 237138530, "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzEzODUzMA==", "user": {"login": "joshburkart", "id": 3888181, "node_id": "MDQ6VXNlcjM4ODgxODE=", "avatar_url": "https://avatars2.githubusercontent.com/u/3888181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshburkart", "html_url": "https://github.com/joshburkart", "followers_url": "https://api.github.com/users/joshburkart/followers", "following_url": "https://api.github.com/users/joshburkart/following{/other_user}", "gists_url": "https://api.github.com/users/joshburkart/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshburkart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshburkart/subscriptions", "organizations_url": "https://api.github.com/users/joshburkart/orgs", "repos_url": "https://api.github.com/users/joshburkart/repos", "events_url": "https://api.github.com/users/joshburkart/events{/privacy}", "received_events_url": "https://api.github.com/users/joshburkart/received_events", "type": "User", "site_admin": false}, "created_at": "2016-08-03T04:54:12Z", "updated_at": "2016-08-03T04:55:15Z", "author_association": "NONE", "body_html": "<p>Whoa! Please ignore my previous completely incorrect post. Forgot that I actually did implement this in a reasonable way the first time. :P The callback does in fact get arbitrary fetches as appropriate-shaped arrays. So here's an example where the callback receives the loss itself (but it could receive any other tensor in the graph):</p>\n<div class=\"highlight highlight-source-python\"><pre>loss <span class=\"pl-k\">=</span> <span class=\"pl-c1\">...</span>\n\ni <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">callback</span>(<span class=\"pl-smi\">loss</span>):\n  <span class=\"pl-k\">nonlocal</span> i\n  <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Loss evaluation #<span class=\"pl-pds\">'</span></span>, i, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>, loss:<span class=\"pl-pds\">'</span></span>, loss)\n  i <span class=\"pl-k\">+=</span> <span class=\"pl-c1\">1</span>\n\nscipy_optimizer <span class=\"pl-k\">=</span>  tf.contrib.opt.ScipyOptimizerInterface(loss)\nscipy_optimizer.minimize(session, <span class=\"pl-v\">fetches</span><span class=\"pl-k\">=</span>[loss], <span class=\"pl-v\">loss_callback</span><span class=\"pl-k\">=</span>callback)</pre></div>\n<p>I should really rename <code>fetches</code> to <code>callback_fetches</code>, since this is confusing...</p>", "body_text": "Whoa! Please ignore my previous completely incorrect post. Forgot that I actually did implement this in a reasonable way the first time. :P The callback does in fact get arbitrary fetches as appropriate-shaped arrays. So here's an example where the callback receives the loss itself (but it could receive any other tensor in the graph):\nloss = ...\n\ni = 0\ndef callback(loss):\n  nonlocal i\n  print('Loss evaluation #', i, ', loss:', loss)\n  i += 1\n\nscipy_optimizer =  tf.contrib.opt.ScipyOptimizerInterface(loss)\nscipy_optimizer.minimize(session, fetches=[loss], loss_callback=callback)\nI should really rename fetches to callback_fetches, since this is confusing...", "body": "Whoa! Please ignore my previous completely incorrect post. Forgot that I actually did implement this in a reasonable way the first time. :P The callback does in fact get arbitrary fetches as appropriate-shaped arrays. So here's an example where the callback receives the loss itself (but it could receive any other tensor in the graph):\n\n``` python\nloss = ...\n\ni = 0\ndef callback(loss):\n  nonlocal i\n  print('Loss evaluation #', i, ', loss:', loss)\n  i += 1\n\nscipy_optimizer =  tf.contrib.opt.ScipyOptimizerInterface(loss)\nscipy_optimizer.minimize(session, fetches=[loss], loss_callback=callback)\n```\n\nI should really rename `fetches` to `callback_fetches`, since this is confusing...\n"}