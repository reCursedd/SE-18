{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/345559782", "html_url": "https://github.com/tensorflow/tensorflow/issues/446#issuecomment-345559782", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/446", "id": 345559782, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTU1OTc4Mg==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-19T23:34:22Z", "updated_at": "2017-11-19T23:34:45Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=510896\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/debasish83\">@debasish83</a> I've implemented l-BFGS in TensorFlow <a href=\"https://github.com/yaroslavvb/stuff/blob/master/eager_lbfgs/eager_lbfgs.py\">here</a>.</p>\n<p>Some benchmarks are <a href=\"https://medium.com/@yaroslavvb/tensorflow-meets-pytorch-with-eager-mode-714cce161e6c\" rel=\"nofollow\">here</a>. It's not as performant as it could be, but <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5061\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alextp\">@alextp</a> and friends are working on optimizing the underlying framework.</p>\n<p>One thing that should significantly speed up implementation above is to reduce Python/TensorFlow round-trips by replacing inner python loops (two-step recursion) with defuns, something like this (h/t <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=19335798\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/agarwal-ashish\">@agarwal-ashish</a>)</p>\n<pre><code>def f(k, q, *args):\n  old_dirs = args[:k]\n  ro = args[k:2*k]\n  old_steps = args[2*k:3*k]\n  for i in range(k-1, -1, -1):\n    al = dot(old_dirs[i], q) * ro[i]\n    q = q - al * old_steps[i]\n  return q\n\n@function.defun\ndef g(q, *args):\n  return f(100, q, *args)\n\n q = -g\n  if k == 100:\n    q = g(q, *(old_dirs + ro + old_steps))\n  else:\n    q = f(k, q, *(old_dirs + ro + old_steps))\n\n</code></pre>", "body_text": "@debasish83 I've implemented l-BFGS in TensorFlow here.\nSome benchmarks are here. It's not as performant as it could be, but @alextp and friends are working on optimizing the underlying framework.\nOne thing that should significantly speed up implementation above is to reduce Python/TensorFlow round-trips by replacing inner python loops (two-step recursion) with defuns, something like this (h/t @agarwal-ashish)\ndef f(k, q, *args):\n  old_dirs = args[:k]\n  ro = args[k:2*k]\n  old_steps = args[2*k:3*k]\n  for i in range(k-1, -1, -1):\n    al = dot(old_dirs[i], q) * ro[i]\n    q = q - al * old_steps[i]\n  return q\n\n@function.defun\ndef g(q, *args):\n  return f(100, q, *args)\n\n q = -g\n  if k == 100:\n    q = g(q, *(old_dirs + ro + old_steps))\n  else:\n    q = f(k, q, *(old_dirs + ro + old_steps))", "body": "@debasish83 I've implemented l-BFGS in TensorFlow [here](https://github.com/yaroslavvb/stuff/blob/master/eager_lbfgs/eager_lbfgs.py).\r\n\r\nSome benchmarks are [here](https://medium.com/@yaroslavvb/tensorflow-meets-pytorch-with-eager-mode-714cce161e6c). It's not as performant as it could be, but @alextp and friends are working on optimizing the underlying framework.\r\n\r\nOne thing that should significantly speed up implementation above is to reduce Python/TensorFlow round-trips by replacing inner python loops (two-step recursion) with defuns, something like this (h/t @agarwal-ashish)\r\n\r\n```\r\ndef f(k, q, *args):\r\n  old_dirs = args[:k]\r\n  ro = args[k:2*k]\r\n  old_steps = args[2*k:3*k]\r\n  for i in range(k-1, -1, -1):\r\n    al = dot(old_dirs[i], q) * ro[i]\r\n    q = q - al * old_steps[i]\r\n  return q\r\n\r\n@function.defun\r\ndef g(q, *args):\r\n  return f(100, q, *args)\r\n\r\n q = -g\r\n  if k == 100:\r\n    q = g(q, *(old_dirs + ro + old_steps))\r\n  else:\r\n    q = f(k, q, *(old_dirs + ro + old_steps))\r\n\r\n```"}