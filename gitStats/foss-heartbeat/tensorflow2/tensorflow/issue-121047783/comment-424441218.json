{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/424441218", "html_url": "https://github.com/tensorflow/tensorflow/issues/446#issuecomment-424441218", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/446", "id": 424441218, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQ0MTIxOA==", "user": {"login": "cslr", "id": 12224221, "node_id": "MDQ6VXNlcjEyMjI0MjIx", "avatar_url": "https://avatars1.githubusercontent.com/u/12224221?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cslr", "html_url": "https://github.com/cslr", "followers_url": "https://api.github.com/users/cslr/followers", "following_url": "https://api.github.com/users/cslr/following{/other_user}", "gists_url": "https://api.github.com/users/cslr/gists{/gist_id}", "starred_url": "https://api.github.com/users/cslr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cslr/subscriptions", "organizations_url": "https://api.github.com/users/cslr/orgs", "repos_url": "https://api.github.com/users/cslr/repos", "events_url": "https://api.github.com/users/cslr/events{/privacy}", "received_events_url": "https://api.github.com/users/cslr/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-25T17:57:03Z", "updated_at": "2018-09-25T17:57:03Z", "author_association": "NONE", "body_html": "<p>I have implemented L-BFGS optimizer in my dinrhiw2 C++ machine learning library. When implemented well line search doesn't take that much time and seem to be get results equally fast than with first order optimizers. For some problems L-BFGS can seem to be able to side-step some local minimas and get better results.</p>\n<p><a href=\"https://github.com/cslr/dinrhiw2/blob/RBM_test/src/math/LBFGS.cpp\">https://github.com/cslr/dinrhiw2/blob/RBM_test/src/math/LBFGS.cpp</a></p>", "body_text": "I have implemented L-BFGS optimizer in my dinrhiw2 C++ machine learning library. When implemented well line search doesn't take that much time and seem to be get results equally fast than with first order optimizers. For some problems L-BFGS can seem to be able to side-step some local minimas and get better results.\nhttps://github.com/cslr/dinrhiw2/blob/RBM_test/src/math/LBFGS.cpp", "body": "I have implemented L-BFGS optimizer in my dinrhiw2 C++ machine learning library. When implemented well line search doesn't take that much time and seem to be get results equally fast than with first order optimizers. For some problems L-BFGS can seem to be able to side-step some local minimas and get better results.\r\n\r\nhttps://github.com/cslr/dinrhiw2/blob/RBM_test/src/math/LBFGS.cpp"}