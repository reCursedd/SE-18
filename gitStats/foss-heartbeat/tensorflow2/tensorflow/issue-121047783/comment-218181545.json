{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/218181545", "html_url": "https://github.com/tensorflow/tensorflow/issues/446#issuecomment-218181545", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/446", "id": 218181545, "node_id": "MDEyOklzc3VlQ29tbWVudDIxODE4MTU0NQ==", "user": {"login": "darrengarvey", "id": 260360, "node_id": "MDQ6VXNlcjI2MDM2MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/260360?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrengarvey", "html_url": "https://github.com/darrengarvey", "followers_url": "https://api.github.com/users/darrengarvey/followers", "following_url": "https://api.github.com/users/darrengarvey/following{/other_user}", "gists_url": "https://api.github.com/users/darrengarvey/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrengarvey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrengarvey/subscriptions", "organizations_url": "https://api.github.com/users/darrengarvey/orgs", "repos_url": "https://api.github.com/users/darrengarvey/repos", "events_url": "https://api.github.com/users/darrengarvey/events{/privacy}", "received_events_url": "https://api.github.com/users/darrengarvey/received_events", "type": "User", "site_admin": false}, "created_at": "2016-05-10T14:49:45Z", "updated_at": "2016-05-10T14:49:45Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I had a question to the authors on testing an implementation of this.</p>\n<p>For the other optimisers like Adam there is a python function that does the equivalent optimisation and then the test checks that the real implementation comes up with the same result. That seems reasonable given how simple the other optimisers are, but what about something more involved like L-BFGS-B?</p>\n<p>The implementation could be compared to what scipy gets, but then again bringing in scipy as a dependency just for the sake of one test seemed, well, excessive. A full Python implementation just for the tests seems brittle as the Python implementation could just as easily be buggy. Perhaps a pure python implementation is the way to go?</p>", "body_text": "I had a question to the authors on testing an implementation of this.\nFor the other optimisers like Adam there is a python function that does the equivalent optimisation and then the test checks that the real implementation comes up with the same result. That seems reasonable given how simple the other optimisers are, but what about something more involved like L-BFGS-B?\nThe implementation could be compared to what scipy gets, but then again bringing in scipy as a dependency just for the sake of one test seemed, well, excessive. A full Python implementation just for the tests seems brittle as the Python implementation could just as easily be buggy. Perhaps a pure python implementation is the way to go?", "body": "I had a question to the authors on testing an implementation of this.\n\nFor the other optimisers like Adam there is a python function that does the equivalent optimisation and then the test checks that the real implementation comes up with the same result. That seems reasonable given how simple the other optimisers are, but what about something more involved like L-BFGS-B?\n\nThe implementation could be compared to what scipy gets, but then again bringing in scipy as a dependency just for the sake of one test seemed, well, excessive. A full Python implementation just for the tests seems brittle as the Python implementation could just as easily be buggy. Perhaps a pure python implementation is the way to go?\n"}