{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/168351323", "html_url": "https://github.com/tensorflow/tensorflow/issues/446#issuecomment-168351323", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/446", "id": 168351323, "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODM1MTMyMw==", "user": {"login": "joshburkart", "id": 3888181, "node_id": "MDQ6VXNlcjM4ODgxODE=", "avatar_url": "https://avatars2.githubusercontent.com/u/3888181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshburkart", "html_url": "https://github.com/joshburkart", "followers_url": "https://api.github.com/users/joshburkart/followers", "following_url": "https://api.github.com/users/joshburkart/following{/other_user}", "gists_url": "https://api.github.com/users/joshburkart/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshburkart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshburkart/subscriptions", "organizations_url": "https://api.github.com/users/joshburkart/orgs", "repos_url": "https://api.github.com/users/joshburkart/repos", "events_url": "https://api.github.com/users/joshburkart/events{/privacy}", "received_events_url": "https://api.github.com/users/joshburkart/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-01T23:52:51Z", "updated_at": "2016-01-01T23:52:51Z", "author_association": "NONE", "body_html": "<p>Putting in a full implementation of L-BFGS seems like a nontrivial task, but a first step could be introducing some sort of line search functionality, which could be an option to <code>GradientDescentOptimizer</code> as well when in full-batch (no-dropout) mode?</p>\n<p>Perhaps there could be e.g. a <code>FullBatchOptimizer</code> base class that implements line searches, with a virtual function <code>StepDirection</code> to compute line search directions (which could then be implemented separately for gradient descent, conjugate gradient, L-BFGS, etc.)?</p>\n<p>Thoughts?</p>", "body_text": "Putting in a full implementation of L-BFGS seems like a nontrivial task, but a first step could be introducing some sort of line search functionality, which could be an option to GradientDescentOptimizer as well when in full-batch (no-dropout) mode?\nPerhaps there could be e.g. a FullBatchOptimizer base class that implements line searches, with a virtual function StepDirection to compute line search directions (which could then be implemented separately for gradient descent, conjugate gradient, L-BFGS, etc.)?\nThoughts?", "body": "Putting in a full implementation of L-BFGS seems like a nontrivial task, but a first step could be introducing some sort of line search functionality, which could be an option to `GradientDescentOptimizer` as well when in full-batch (no-dropout) mode?\n\nPerhaps there could be e.g. a `FullBatchOptimizer` base class that implements line searches, with a virtual function `StepDirection` to compute line search directions (which could then be implemented separately for gradient descent, conjugate gradient, L-BFGS, etc.)?\n\nThoughts?\n"}