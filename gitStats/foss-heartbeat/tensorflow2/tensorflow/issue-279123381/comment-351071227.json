{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/351071227", "html_url": "https://github.com/tensorflow/tensorflow/issues/15103#issuecomment-351071227", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15103", "id": 351071227, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTA3MTIyNw==", "user": {"login": "VinceMarron", "id": 24817118, "node_id": "MDQ6VXNlcjI0ODE3MTE4", "avatar_url": "https://avatars3.githubusercontent.com/u/24817118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VinceMarron", "html_url": "https://github.com/VinceMarron", "followers_url": "https://api.github.com/users/VinceMarron/followers", "following_url": "https://api.github.com/users/VinceMarron/following{/other_user}", "gists_url": "https://api.github.com/users/VinceMarron/gists{/gist_id}", "starred_url": "https://api.github.com/users/VinceMarron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VinceMarron/subscriptions", "organizations_url": "https://api.github.com/users/VinceMarron/orgs", "repos_url": "https://api.github.com/users/VinceMarron/repos", "events_url": "https://api.github.com/users/VinceMarron/events{/privacy}", "received_events_url": "https://api.github.com/users/VinceMarron/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-12T14:43:07Z", "updated_at": "2017-12-12T14:43:07Z", "author_association": "NONE", "body_html": "<p>Both of these result in error:</p>\n<pre><code>import tensorflow as tf\nimport tensorflow.contrib.eager as tfe\n\ntfe.enable_eager_execution()\n\nframe_length=256\nframe_step=64\n\n\nsignal = tf.constant(tf.random_uniform((1,16000), minval=-1, maxval=1))\n\nwith tf.device('/gpu:0'):\n  frames = tf.contrib.signal.frame(signal.gpu(), frame_length=frame_length, \n                                  frame_step=frame_step)\n    \nprint(frames[0, :2, :2], frames.shape)\n</code></pre>\n<blockquote>\n<p>InvalidArgumentError                      Traceback (most recent call last)<br>\n in ()<br>\n12 with tf.device('/gpu:0'):<br>\n13   frames = tf.contrib.signal.frame(signal.gpu(), frame_length=frame_length,<br>\n---&gt; 14                                   frame_step=frame_step)<br>\n15<br>\n16 print(frames[0, :2, :2], frames.shape)</p>\n<p>~/anaconda3/envs/tf_source/lib/python3.5/site-packages/tensorflow/contrib/signal/python/ops/shape_ops.py in frame(signal, frame_length, frame_step, pad_end, pad_value, axis, name)<br>\n183<br>\n184     frames = array_ops.reshape(<br>\n--&gt; 185         array_ops.gather(subframes, selector, axis=axis),<br>\n186         array_ops.concat([outer_dimensions, [num_frames, frame_length],<br>\n187                           inner_dimensions], 0))</p>\n<p>~/anaconda3/envs/tf_source/lib/python3.5/site-packages/tensorflow/python/ops/array_ops.py in gather(params, indices, validate_indices, name, axis)<br>\n2587         params, indices, validate_indices=validate_indices, name=name)<br>\n2588   else:<br>\n-&gt; 2589     return gen_array_ops.gather_v2(params, indices, axis, name=name)<br>\n2590<br>\n2591</p>\n<p>~/anaconda3/envs/tf_source/lib/python3.5/site-packages/tensorflow/python/ops/gen_array_ops.py in gather_v2(params, indices, axis, name)<br>\n2052               _attr_Taxis)<br>\n2053     _result = _execute.execute(b\"GatherV2\", 1, inputs=_inputs_flat,<br>\n-&gt; 2054                                attrs=_attrs, ctx=_ctx, name=name)<br>\n2055   _execute.record_gradient(<br>\n2056       \"GatherV2\", _inputs_flat, _attrs, _result, name)</p>\n<p>~/anaconda3/envs/tf_source/lib/python3.5/site-packages/tensorflow/python/eager/execute.py in quick_execute(op_name, num_outputs, inputs, attrs, ctx, name)<br>\n64     else:<br>\n65       message = e.message<br>\n---&gt; 66     six.raise_from(core._status_to_exception(e.code, message), None)<br>\n67   # pylint: enable=protected-access<br>\n68   return tensors</p>\n<p>~/.local/lib/python3.5/site-packages/six.py in raise_from(value, from_value)</p>\n<p>InvalidArgumentError: Tensors on conflicting devices: cannot compute GatherV2 as input <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115886302\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/1\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/1/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/1\">#1</a> was expected to be on /job:localhost/replica:0/task:0/device:GPU:0 but is actually on /job:localhost/replica:0/task:0/device:CPU:0 (operation running on /job:localhost/replica:0/task:0/device:GPU:0) Tensors can be copied explicitly using .gpu() or .cpu(), or transparently copied by using tfe.enable_eager_execution(tfe.DEVICE_PLACEMENT_SILENT). Copying tensors between devices may slow down your model [Op:GatherV2]</p>\n</blockquote>\n<pre><code>import tensorflow as tf\nimport tensorflow.contrib.eager as tfe\n\ntfe.enable_eager_execution()\n\nframe_length=256\nframe_step=64\n\n\nwith tf.device('/gpu:0'):\n  frames = tf.contrib.signal.frame(tf.constant(tf.random_uniform((1,16000), minval=-1, maxval=1)), \n                                   frame_length=frame_length, \n                                   frame_step=frame_step)\n    \nprint(frames[0, :2, :2], frames.shape)\n</code></pre>\n<blockquote>\n<p>InvalidArgumentError                      Traceback (most recent call last)<br>\n in ()<br>\n11   frames = tf.contrib.signal.frame(tf.constant(tf.random_uniform((1,16000), minval=-1, maxval=1)),<br>\n12                                    frame_length=frame_length,<br>\n---&gt; 13                                    frame_step=frame_step)<br>\n14<br>\n15 print(frames[0, :2, :2], frames.shape)</p>\n<p>~/anaconda3/envs/tf_source/lib/python3.5/site-packages/tensorflow/contrib/signal/python/ops/shape_ops.py in frame(signal, frame_length, frame_step, pad_end, pad_value, axis, name)<br>\n183<br>\n184     frames = array_ops.reshape(<br>\n--&gt; 185         array_ops.gather(subframes, selector, axis=axis),<br>\n186         array_ops.concat([outer_dimensions, [num_frames, frame_length],<br>\n187                           inner_dimensions], 0))</p>\n<p>~/anaconda3/envs/tf_source/lib/python3.5/site-packages/tensorflow/python/ops/array_ops.py in gather(params, indices, validate_indices, name, axis)<br>\n2587         params, indices, validate_indices=validate_indices, name=name)<br>\n2588   else:<br>\n-&gt; 2589     return gen_array_ops.gather_v2(params, indices, axis, name=name)<br>\n2590<br>\n2591</p>\n<p>~/anaconda3/envs/tf_source/lib/python3.5/site-packages/tensorflow/python/ops/gen_array_ops.py in gather_v2(params, indices, axis, name)<br>\n2052               _attr_Taxis)<br>\n2053     _result = _execute.execute(b\"GatherV2\", 1, inputs=_inputs_flat,<br>\n-&gt; 2054                                attrs=_attrs, ctx=_ctx, name=name)<br>\n2055   _execute.record_gradient(<br>\n2056       \"GatherV2\", _inputs_flat, _attrs, _result, name)</p>\n<p>~/anaconda3/envs/tf_source/lib/python3.5/site-packages/tensorflow/python/eager/execute.py in quick_execute(op_name, num_outputs, inputs, attrs, ctx, name)<br>\n64     else:<br>\n65       message = e.message<br>\n---&gt; 66     six.raise_from(core._status_to_exception(e.code, message), None)<br>\n67   # pylint: enable=protected-access<br>\n68   return tensors</p>\n<p>~/.local/lib/python3.5/site-packages/six.py in raise_from(value, from_value)</p>\n<p>InvalidArgumentError: Tensors on conflicting devices: cannot compute GatherV2 as input <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115886302\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/1\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/1/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/1\">#1</a> was expected to be on /job:localhost/replica:0/task:0/device:GPU:0 but is actually on /job:localhost/replica:0/task:0/device:CPU:0 (operation running on /job:localhost/replica:0/task:0/device:GPU:0) Tensors can be copied explicitly using .gpu() or .cpu(), or transparently copied by using tfe.enable_eager_execution(tfe.DEVICE_PLACEMENT_SILENT). Copying tensors between devices may slow down your model [Op:GatherV2]</p>\n</blockquote>\n<p>Setting 'tfe.enable_eager_execution(device_policy=tfe.DEVICE_PLACEMENT_SILENT)' is an obvious and effective 'bandaid' but it would be nice to figure out the root of the problem.  Are the 'subframes' from <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/signal/python/ops/shape_ops.py\">tf.contrib.signal.frame</a> being forced to CPU for some reason?</p>", "body_text": "Both of these result in error:\nimport tensorflow as tf\nimport tensorflow.contrib.eager as tfe\n\ntfe.enable_eager_execution()\n\nframe_length=256\nframe_step=64\n\n\nsignal = tf.constant(tf.random_uniform((1,16000), minval=-1, maxval=1))\n\nwith tf.device('/gpu:0'):\n  frames = tf.contrib.signal.frame(signal.gpu(), frame_length=frame_length, \n                                  frame_step=frame_step)\n    \nprint(frames[0, :2, :2], frames.shape)\n\n\nInvalidArgumentError                      Traceback (most recent call last)\n in ()\n12 with tf.device('/gpu:0'):\n13   frames = tf.contrib.signal.frame(signal.gpu(), frame_length=frame_length,\n---> 14                                   frame_step=frame_step)\n15\n16 print(frames[0, :2, :2], frames.shape)\n~/anaconda3/envs/tf_source/lib/python3.5/site-packages/tensorflow/contrib/signal/python/ops/shape_ops.py in frame(signal, frame_length, frame_step, pad_end, pad_value, axis, name)\n183\n184     frames = array_ops.reshape(\n--> 185         array_ops.gather(subframes, selector, axis=axis),\n186         array_ops.concat([outer_dimensions, [num_frames, frame_length],\n187                           inner_dimensions], 0))\n~/anaconda3/envs/tf_source/lib/python3.5/site-packages/tensorflow/python/ops/array_ops.py in gather(params, indices, validate_indices, name, axis)\n2587         params, indices, validate_indices=validate_indices, name=name)\n2588   else:\n-> 2589     return gen_array_ops.gather_v2(params, indices, axis, name=name)\n2590\n2591\n~/anaconda3/envs/tf_source/lib/python3.5/site-packages/tensorflow/python/ops/gen_array_ops.py in gather_v2(params, indices, axis, name)\n2052               _attr_Taxis)\n2053     _result = _execute.execute(b\"GatherV2\", 1, inputs=_inputs_flat,\n-> 2054                                attrs=_attrs, ctx=_ctx, name=name)\n2055   _execute.record_gradient(\n2056       \"GatherV2\", _inputs_flat, _attrs, _result, name)\n~/anaconda3/envs/tf_source/lib/python3.5/site-packages/tensorflow/python/eager/execute.py in quick_execute(op_name, num_outputs, inputs, attrs, ctx, name)\n64     else:\n65       message = e.message\n---> 66     six.raise_from(core._status_to_exception(e.code, message), None)\n67   # pylint: enable=protected-access\n68   return tensors\n~/.local/lib/python3.5/site-packages/six.py in raise_from(value, from_value)\nInvalidArgumentError: Tensors on conflicting devices: cannot compute GatherV2 as input #1 was expected to be on /job:localhost/replica:0/task:0/device:GPU:0 but is actually on /job:localhost/replica:0/task:0/device:CPU:0 (operation running on /job:localhost/replica:0/task:0/device:GPU:0) Tensors can be copied explicitly using .gpu() or .cpu(), or transparently copied by using tfe.enable_eager_execution(tfe.DEVICE_PLACEMENT_SILENT). Copying tensors between devices may slow down your model [Op:GatherV2]\n\nimport tensorflow as tf\nimport tensorflow.contrib.eager as tfe\n\ntfe.enable_eager_execution()\n\nframe_length=256\nframe_step=64\n\n\nwith tf.device('/gpu:0'):\n  frames = tf.contrib.signal.frame(tf.constant(tf.random_uniform((1,16000), minval=-1, maxval=1)), \n                                   frame_length=frame_length, \n                                   frame_step=frame_step)\n    \nprint(frames[0, :2, :2], frames.shape)\n\n\nInvalidArgumentError                      Traceback (most recent call last)\n in ()\n11   frames = tf.contrib.signal.frame(tf.constant(tf.random_uniform((1,16000), minval=-1, maxval=1)),\n12                                    frame_length=frame_length,\n---> 13                                    frame_step=frame_step)\n14\n15 print(frames[0, :2, :2], frames.shape)\n~/anaconda3/envs/tf_source/lib/python3.5/site-packages/tensorflow/contrib/signal/python/ops/shape_ops.py in frame(signal, frame_length, frame_step, pad_end, pad_value, axis, name)\n183\n184     frames = array_ops.reshape(\n--> 185         array_ops.gather(subframes, selector, axis=axis),\n186         array_ops.concat([outer_dimensions, [num_frames, frame_length],\n187                           inner_dimensions], 0))\n~/anaconda3/envs/tf_source/lib/python3.5/site-packages/tensorflow/python/ops/array_ops.py in gather(params, indices, validate_indices, name, axis)\n2587         params, indices, validate_indices=validate_indices, name=name)\n2588   else:\n-> 2589     return gen_array_ops.gather_v2(params, indices, axis, name=name)\n2590\n2591\n~/anaconda3/envs/tf_source/lib/python3.5/site-packages/tensorflow/python/ops/gen_array_ops.py in gather_v2(params, indices, axis, name)\n2052               _attr_Taxis)\n2053     _result = _execute.execute(b\"GatherV2\", 1, inputs=_inputs_flat,\n-> 2054                                attrs=_attrs, ctx=_ctx, name=name)\n2055   _execute.record_gradient(\n2056       \"GatherV2\", _inputs_flat, _attrs, _result, name)\n~/anaconda3/envs/tf_source/lib/python3.5/site-packages/tensorflow/python/eager/execute.py in quick_execute(op_name, num_outputs, inputs, attrs, ctx, name)\n64     else:\n65       message = e.message\n---> 66     six.raise_from(core._status_to_exception(e.code, message), None)\n67   # pylint: enable=protected-access\n68   return tensors\n~/.local/lib/python3.5/site-packages/six.py in raise_from(value, from_value)\nInvalidArgumentError: Tensors on conflicting devices: cannot compute GatherV2 as input #1 was expected to be on /job:localhost/replica:0/task:0/device:GPU:0 but is actually on /job:localhost/replica:0/task:0/device:CPU:0 (operation running on /job:localhost/replica:0/task:0/device:GPU:0) Tensors can be copied explicitly using .gpu() or .cpu(), or transparently copied by using tfe.enable_eager_execution(tfe.DEVICE_PLACEMENT_SILENT). Copying tensors between devices may slow down your model [Op:GatherV2]\n\nSetting 'tfe.enable_eager_execution(device_policy=tfe.DEVICE_PLACEMENT_SILENT)' is an obvious and effective 'bandaid' but it would be nice to figure out the root of the problem.  Are the 'subframes' from tf.contrib.signal.frame being forced to CPU for some reason?", "body": "Both of these result in error:\r\n\r\n```\r\nimport tensorflow as tf\r\nimport tensorflow.contrib.eager as tfe\r\n\r\ntfe.enable_eager_execution()\r\n\r\nframe_length=256\r\nframe_step=64\r\n\r\n\r\nsignal = tf.constant(tf.random_uniform((1,16000), minval=-1, maxval=1))\r\n\r\nwith tf.device('/gpu:0'):\r\n  frames = tf.contrib.signal.frame(signal.gpu(), frame_length=frame_length, \r\n                                  frame_step=frame_step)\r\n    \r\nprint(frames[0, :2, :2], frames.shape)\r\n```\r\n\r\n> InvalidArgumentError                      Traceback (most recent call last)\r\n> <ipython-input-1-0e43d1db52a4> in <module>()\r\n>      12 with tf.device('/gpu:0'):\r\n>      13   frames = tf.contrib.signal.frame(signal.gpu(), frame_length=frame_length, \r\n> ---> 14                                   frame_step=frame_step)\r\n>      15 \r\n>      16 print(frames[0, :2, :2], frames.shape)\r\n> \r\n> ~/anaconda3/envs/tf_source/lib/python3.5/site-packages/tensorflow/contrib/signal/python/ops/shape_ops.py in frame(signal, frame_length, frame_step, pad_end, pad_value, axis, name)\r\n>     183 \r\n>     184     frames = array_ops.reshape(\r\n> --> 185         array_ops.gather(subframes, selector, axis=axis),\r\n>     186         array_ops.concat([outer_dimensions, [num_frames, frame_length],\r\n>     187                           inner_dimensions], 0))\r\n> \r\n> ~/anaconda3/envs/tf_source/lib/python3.5/site-packages/tensorflow/python/ops/array_ops.py in gather(params, indices, validate_indices, name, axis)\r\n>    2587         params, indices, validate_indices=validate_indices, name=name)\r\n>    2588   else:\r\n> -> 2589     return gen_array_ops.gather_v2(params, indices, axis, name=name)\r\n>    2590 \r\n>    2591 \r\n> \r\n> ~/anaconda3/envs/tf_source/lib/python3.5/site-packages/tensorflow/python/ops/gen_array_ops.py in gather_v2(params, indices, axis, name)\r\n>    2052               _attr_Taxis)\r\n>    2053     _result = _execute.execute(b\"GatherV2\", 1, inputs=_inputs_flat,\r\n> -> 2054                                attrs=_attrs, ctx=_ctx, name=name)\r\n>    2055   _execute.record_gradient(\r\n>    2056       \"GatherV2\", _inputs_flat, _attrs, _result, name)\r\n> \r\n> ~/anaconda3/envs/tf_source/lib/python3.5/site-packages/tensorflow/python/eager/execute.py in quick_execute(op_name, num_outputs, inputs, attrs, ctx, name)\r\n>      64     else:\r\n>      65       message = e.message\r\n> ---> 66     six.raise_from(core._status_to_exception(e.code, message), None)\r\n>      67   # pylint: enable=protected-access\r\n>      68   return tensors\r\n> \r\n> ~/.local/lib/python3.5/site-packages/six.py in raise_from(value, from_value)\r\n> \r\n> InvalidArgumentError: Tensors on conflicting devices: cannot compute GatherV2 as input #1 was expected to be on /job:localhost/replica:0/task:0/device:GPU:0 but is actually on /job:localhost/replica:0/task:0/device:CPU:0 (operation running on /job:localhost/replica:0/task:0/device:GPU:0) Tensors can be copied explicitly using .gpu() or .cpu(), or transparently copied by using tfe.enable_eager_execution(tfe.DEVICE_PLACEMENT_SILENT). Copying tensors between devices may slow down your model [Op:GatherV2]\r\n\r\n\r\n```\r\nimport tensorflow as tf\r\nimport tensorflow.contrib.eager as tfe\r\n\r\ntfe.enable_eager_execution()\r\n\r\nframe_length=256\r\nframe_step=64\r\n\r\n\r\nwith tf.device('/gpu:0'):\r\n  frames = tf.contrib.signal.frame(tf.constant(tf.random_uniform((1,16000), minval=-1, maxval=1)), \r\n                                   frame_length=frame_length, \r\n                                   frame_step=frame_step)\r\n    \r\nprint(frames[0, :2, :2], frames.shape)\r\n```\r\n\r\n> \r\n> InvalidArgumentError                      Traceback (most recent call last)\r\n> <ipython-input-1-629cf1159aad> in <module>()\r\n>      11   frames = tf.contrib.signal.frame(tf.constant(tf.random_uniform((1,16000), minval=-1, maxval=1)), \r\n>      12                                    frame_length=frame_length,\r\n> ---> 13                                    frame_step=frame_step)\r\n>      14 \r\n>      15 print(frames[0, :2, :2], frames.shape)\r\n> \r\n> ~/anaconda3/envs/tf_source/lib/python3.5/site-packages/tensorflow/contrib/signal/python/ops/shape_ops.py in frame(signal, frame_length, frame_step, pad_end, pad_value, axis, name)\r\n>     183 \r\n>     184     frames = array_ops.reshape(\r\n> --> 185         array_ops.gather(subframes, selector, axis=axis),\r\n>     186         array_ops.concat([outer_dimensions, [num_frames, frame_length],\r\n>     187                           inner_dimensions], 0))\r\n> \r\n> ~/anaconda3/envs/tf_source/lib/python3.5/site-packages/tensorflow/python/ops/array_ops.py in gather(params, indices, validate_indices, name, axis)\r\n>    2587         params, indices, validate_indices=validate_indices, name=name)\r\n>    2588   else:\r\n> -> 2589     return gen_array_ops.gather_v2(params, indices, axis, name=name)\r\n>    2590 \r\n>    2591 \r\n> \r\n> ~/anaconda3/envs/tf_source/lib/python3.5/site-packages/tensorflow/python/ops/gen_array_ops.py in gather_v2(params, indices, axis, name)\r\n>    2052               _attr_Taxis)\r\n>    2053     _result = _execute.execute(b\"GatherV2\", 1, inputs=_inputs_flat,\r\n> -> 2054                                attrs=_attrs, ctx=_ctx, name=name)\r\n>    2055   _execute.record_gradient(\r\n>    2056       \"GatherV2\", _inputs_flat, _attrs, _result, name)\r\n> \r\n> ~/anaconda3/envs/tf_source/lib/python3.5/site-packages/tensorflow/python/eager/execute.py in quick_execute(op_name, num_outputs, inputs, attrs, ctx, name)\r\n>      64     else:\r\n>      65       message = e.message\r\n> ---> 66     six.raise_from(core._status_to_exception(e.code, message), None)\r\n>      67   # pylint: enable=protected-access\r\n>      68   return tensors\r\n> \r\n> ~/.local/lib/python3.5/site-packages/six.py in raise_from(value, from_value)\r\n> \r\n> InvalidArgumentError: Tensors on conflicting devices: cannot compute GatherV2 as input #1 was expected to be on /job:localhost/replica:0/task:0/device:GPU:0 but is actually on /job:localhost/replica:0/task:0/device:CPU:0 (operation running on /job:localhost/replica:0/task:0/device:GPU:0) Tensors can be copied explicitly using .gpu() or .cpu(), or transparently copied by using tfe.enable_eager_execution(tfe.DEVICE_PLACEMENT_SILENT). Copying tensors between devices may slow down your model [Op:GatherV2]\r\n\r\nSetting 'tfe.enable_eager_execution(device_policy=tfe.DEVICE_PLACEMENT_SILENT)' is an obvious and effective 'bandaid' but it would be nice to figure out the root of the problem.  Are the 'subframes' from [tf.contrib.signal.frame](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/signal/python/ops/shape_ops.py) being forced to CPU for some reason?"}