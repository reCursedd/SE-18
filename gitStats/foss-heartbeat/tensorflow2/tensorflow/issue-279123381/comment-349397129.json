{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/349397129", "html_url": "https://github.com/tensorflow/tensorflow/issues/15103#issuecomment-349397129", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15103", "id": 349397129, "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTM5NzEyOQ==", "user": {"login": "VinceMarron", "id": 24817118, "node_id": "MDQ6VXNlcjI0ODE3MTE4", "avatar_url": "https://avatars3.githubusercontent.com/u/24817118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VinceMarron", "html_url": "https://github.com/VinceMarron", "followers_url": "https://api.github.com/users/VinceMarron/followers", "following_url": "https://api.github.com/users/VinceMarron/following{/other_user}", "gists_url": "https://api.github.com/users/VinceMarron/gists{/gist_id}", "starred_url": "https://api.github.com/users/VinceMarron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VinceMarron/subscriptions", "organizations_url": "https://api.github.com/users/VinceMarron/orgs", "repos_url": "https://api.github.com/users/VinceMarron/repos", "events_url": "https://api.github.com/users/VinceMarron/events{/privacy}", "received_events_url": "https://api.github.com/users/VinceMarron/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-05T18:31:07Z", "updated_at": "2017-12-05T18:31:07Z", "author_association": "NONE", "body_html": "<p>Gotcha. Thanks for looking into this <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16018\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/asimshankar\">@asimshankar</a> . My error on assuming it was related to eager.</p>\n<p>I looked into contributing a general resolution but I don't think I have the know-how in terms of Tensorflow structure and C. What I can provide is a framework for implementing it in terms of real (tf.float32) operations that are implemented on gpu - <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/cwise_op_cos.cc\">cwise_op_cos</a> and <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/cwise_op_exp.cc\">cwise_op_exp</a></p>\n<pre><code>import tensorflow as tf\nimport tensorflow.contrib.eager as tfe\ntfe.enable_eager_execution()\n\na=tf.random_normal([1], dtype=tf.float32)\nb=tf.random_normal([1], dtype=tf.float32)\n\ncomplex_num = tf.complex(a,b)\ncpu_exp_complex_num = tf.exp(complex_num) #complex calc on cpu\ngpu_exp_complex_num = tf.complex(tf.exp(a)*tf.cos(b), tf.exp(a)*tf.sin(b)) #complex calc on gpu\n\nassert cpu_exp_complex_num.numpy() == gpu_exp_complex_num.numpy()\n</code></pre>\n<p>I'm not sure if that is helpful or already obvious but I'd be happy to assist an effort to implement this.</p>", "body_text": "Gotcha. Thanks for looking into this @asimshankar . My error on assuming it was related to eager.\nI looked into contributing a general resolution but I don't think I have the know-how in terms of Tensorflow structure and C. What I can provide is a framework for implementing it in terms of real (tf.float32) operations that are implemented on gpu - cwise_op_cos and cwise_op_exp\nimport tensorflow as tf\nimport tensorflow.contrib.eager as tfe\ntfe.enable_eager_execution()\n\na=tf.random_normal([1], dtype=tf.float32)\nb=tf.random_normal([1], dtype=tf.float32)\n\ncomplex_num = tf.complex(a,b)\ncpu_exp_complex_num = tf.exp(complex_num) #complex calc on cpu\ngpu_exp_complex_num = tf.complex(tf.exp(a)*tf.cos(b), tf.exp(a)*tf.sin(b)) #complex calc on gpu\n\nassert cpu_exp_complex_num.numpy() == gpu_exp_complex_num.numpy()\n\nI'm not sure if that is helpful or already obvious but I'd be happy to assist an effort to implement this.", "body": "Gotcha. Thanks for looking into this @asimshankar . My error on assuming it was related to eager. \r\n\r\nI looked into contributing a general resolution but I don't think I have the know-how in terms of Tensorflow structure and C. What I can provide is a framework for implementing it in terms of real (tf.float32) operations that are implemented on gpu - [cwise_op_cos](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/cwise_op_cos.cc) and [cwise_op_exp](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/cwise_op_exp.cc)\r\n\r\n\r\n```\r\nimport tensorflow as tf\r\nimport tensorflow.contrib.eager as tfe\r\ntfe.enable_eager_execution()\r\n\r\na=tf.random_normal([1], dtype=tf.float32)\r\nb=tf.random_normal([1], dtype=tf.float32)\r\n\r\ncomplex_num = tf.complex(a,b)\r\ncpu_exp_complex_num = tf.exp(complex_num) #complex calc on cpu\r\ngpu_exp_complex_num = tf.complex(tf.exp(a)*tf.cos(b), tf.exp(a)*tf.sin(b)) #complex calc on gpu\r\n\r\nassert cpu_exp_complex_num.numpy() == gpu_exp_complex_num.numpy()\r\n```\r\n\r\nI'm not sure if that is helpful or already obvious but I'd be happy to assist an effort to implement this. "}