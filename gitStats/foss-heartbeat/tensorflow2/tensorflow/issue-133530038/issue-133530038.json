{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1093", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1093/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1093/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1093/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/1093", "id": 133530038, "node_id": "MDU6SXNzdWUxMzM1MzAwMzg=", "number": 1093, "title": "Gradient computation through while loop", "user": {"login": "Styrke", "id": 1035167, "node_id": "MDQ6VXNlcjEwMzUxNjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1035167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Styrke", "html_url": "https://github.com/Styrke", "followers_url": "https://api.github.com/users/Styrke/followers", "following_url": "https://api.github.com/users/Styrke/following{/other_user}", "gists_url": "https://api.github.com/users/Styrke/gists{/gist_id}", "starred_url": "https://api.github.com/users/Styrke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Styrke/subscriptions", "organizations_url": "https://api.github.com/users/Styrke/orgs", "repos_url": "https://api.github.com/users/Styrke/repos", "events_url": "https://api.github.com/users/Styrke/events{/privacy}", "received_events_url": "https://api.github.com/users/Styrke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2016-02-14T10:53:07Z", "updated_at": "2016-03-13T04:00:47Z", "closed_at": "2016-03-13T04:00:47Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Computation of gradients through a simple while op doesn't seem to work:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">from</span> tensorflow.python.ops <span class=\"pl-k\">import</span> control_flow_ops\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">cond</span>(<span class=\"pl-smi\">i</span>, <span class=\"pl-smi\">var</span>):\n    <span class=\"pl-k\">return</span> tf.less(i, <span class=\"pl-c1\">1</span>)\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">body</span>(<span class=\"pl-smi\">i</span>, <span class=\"pl-smi\">var</span>):\n    <span class=\"pl-k\">return</span> [tf.add(i, <span class=\"pl-c1\">1</span>), var]\n\ni <span class=\"pl-k\">=</span> tf.constant(<span class=\"pl-c1\">0</span>)\nvar <span class=\"pl-k\">=</span> tf.Variable(tf.constant(<span class=\"pl-c1\">2</span>.))\n\n_, var <span class=\"pl-k\">=</span> control_flow_ops.While(cond, body, [i, var])\n\nout <span class=\"pl-k\">=</span> var<span class=\"pl-k\">*</span>var\n\noptimizer <span class=\"pl-k\">=</span> tf.train.GradientDescentOptimizer(<span class=\"pl-c1\">.9</span>)\noptimizer_op <span class=\"pl-k\">=</span> optimizer.minimize(out)\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    tf.initialize_all_variables().run()\n    <span class=\"pl-c1\">print</span> sess.run([out, optimizer_op])\n    <span class=\"pl-c1\">print</span> sess.run([out, optimizer_op])\n    <span class=\"pl-c1\">print</span> sess.run([out, optimizer_op])</pre></div>\n<p>gives the following result:</p>\n<pre><code>[4.0, None]\n[4.0, None]\n[4.0, None]\n</code></pre>\n<p>Whereas commenting out the while op on line 13 gives:</p>\n<pre><code>[4.0, None]\n[2.5599997, None]\n[1.6383994, None]\n</code></pre>\n<p>Since the while op here only iterates once, and doesn't really do anything, I would expect that the result should be the same with or without it.</p>\n<p>I know that the while operator is not officially documented or supported, but the wording in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"123597444\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/593\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/593/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/593\">#593</a> made me believe that computation of gradients through a single simple loop was likely to work. (Why experiment with nested loops if single loops didn't work)</p>", "body_text": "Computation of gradients through a simple while op doesn't seem to work:\nimport tensorflow as tf\nfrom tensorflow.python.ops import control_flow_ops\n\ndef cond(i, var):\n    return tf.less(i, 1)\n\ndef body(i, var):\n    return [tf.add(i, 1), var]\n\ni = tf.constant(0)\nvar = tf.Variable(tf.constant(2.))\n\n_, var = control_flow_ops.While(cond, body, [i, var])\n\nout = var*var\n\noptimizer = tf.train.GradientDescentOptimizer(.9)\noptimizer_op = optimizer.minimize(out)\n\nwith tf.Session() as sess:\n    tf.initialize_all_variables().run()\n    print sess.run([out, optimizer_op])\n    print sess.run([out, optimizer_op])\n    print sess.run([out, optimizer_op])\ngives the following result:\n[4.0, None]\n[4.0, None]\n[4.0, None]\n\nWhereas commenting out the while op on line 13 gives:\n[4.0, None]\n[2.5599997, None]\n[1.6383994, None]\n\nSince the while op here only iterates once, and doesn't really do anything, I would expect that the result should be the same with or without it.\nI know that the while operator is not officially documented or supported, but the wording in #593 made me believe that computation of gradients through a single simple loop was likely to work. (Why experiment with nested loops if single loops didn't work)", "body": "Computation of gradients through a simple while op doesn't seem to work:\n\n``` python\nimport tensorflow as tf\nfrom tensorflow.python.ops import control_flow_ops\n\ndef cond(i, var):\n    return tf.less(i, 1)\n\ndef body(i, var):\n    return [tf.add(i, 1), var]\n\ni = tf.constant(0)\nvar = tf.Variable(tf.constant(2.))\n\n_, var = control_flow_ops.While(cond, body, [i, var])\n\nout = var*var\n\noptimizer = tf.train.GradientDescentOptimizer(.9)\noptimizer_op = optimizer.minimize(out)\n\nwith tf.Session() as sess:\n    tf.initialize_all_variables().run()\n    print sess.run([out, optimizer_op])\n    print sess.run([out, optimizer_op])\n    print sess.run([out, optimizer_op])\n```\n\ngives the following result:\n\n```\n[4.0, None]\n[4.0, None]\n[4.0, None]\n```\n\nWhereas commenting out the while op on line 13 gives:\n\n```\n[4.0, None]\n[2.5599997, None]\n[1.6383994, None]\n```\n\nSince the while op here only iterates once, and doesn't really do anything, I would expect that the result should be the same with or without it.\n\nI know that the while operator is not officially documented or supported, but the wording in #593 made me believe that computation of gradients through a single simple loop was likely to work. (Why experiment with nested loops if single loops didn't work)\n"}