{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21675", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21675/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21675/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21675/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21675", "id": 351521728, "node_id": "MDU6SXNzdWUzNTE1MjE3Mjg=", "number": 21675, "title": "op type not registered 'DenseToDenseSetOperation' when running tfcompile", "user": {"login": "mehditlili", "id": 7859307, "node_id": "MDQ6VXNlcjc4NTkzMDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/7859307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mehditlili", "html_url": "https://github.com/mehditlili", "followers_url": "https://api.github.com/users/mehditlili/followers", "following_url": "https://api.github.com/users/mehditlili/following{/other_user}", "gists_url": "https://api.github.com/users/mehditlili/gists{/gist_id}", "starred_url": "https://api.github.com/users/mehditlili/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mehditlili/subscriptions", "organizations_url": "https://api.github.com/users/mehditlili/orgs", "repos_url": "https://api.github.com/users/mehditlili/repos", "events_url": "https://api.github.com/users/mehditlili/events{/privacy}", "received_events_url": "https://api.github.com/users/mehditlili/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-08-17T09:25:15Z", "updated_at": "2018-11-12T10:15:19Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes (code from maskrcnn, and export.py to freeze my model)</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Ubuntu 16.04</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: Laptop</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Source</li>\n<li><strong>TensorFlow version (use command below)</strong>: ('v1.9.0-rc2-2314-g3a99980', '1.10.0')</li>\n<li><strong>Python version</strong>: 2.7</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.16.1</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: 5.4.0 20160609</li>\n<li><strong>CUDA/cuDNN version</strong>: no cuda</li>\n<li><strong>GPU model and memory</strong>:  Geforce GT 730M, 1Gb memory</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<p><code>bazel-bin/tensorflow/compiler/aot/tfcompile --graph=/home/mehdi/Desktop/data/resnet101_model.pb --config=/home/mehdi/Desktop/data/config.pbtxt --cpp_class=\"foo::bar\" --out_function_object=\"./out_model.o\" --out_header=\"./out.h\" --out_metadata_object=\"./out_helper.o\"</code></p>\n<p>I have been testing <a href=\"https://github.com/matterport/Mask_RCNN\">mask rcnn</a> in order to do object detection and segmentation on images. It worked quite well and now I am trying to export my model to a standalone binary that can be used without having to install tensorflow on my target system. In order to do this I tried to use tfcompile. The first step was to take my .h5 keras model and converted it to a frozen tf .pb file. I used <a href=\"https://github.com/ericj974/Mask_RCNN/blob/master/scripts/export.py\">this script</a> that was especially written to convert mask rcnn models. I then downloaded the source code of tensorflow, compiled it by running</p>\n<p><code>bazel build --config=opt //tensorflow/tools/pip_package:build_pip_package --jobs 3</code></p>\n<p>before that, I set support XLA JIT to true when running configure.<br>\nAfter compilation was done I installed tensorflow and it was importable from python.</p>\n<p>Then in order to compile my model I run:<br>\n<code>bazel-bin/tensorflow/compiler/aot/tfcompile --graph=/home/mehdi/Desktop/data/resnet101_model.pb --config=/home/mehdi/Desktop/data/config.pbtxt --cpp_class=\"foo::bar\" --out_function_object=\"./out_model.o\" --out_header=\"./out.h\" --out_metadata_object=\"./out_helper.o\"</code></p>\n<p>where resnet101_model.pb is the result of running export.py on my keras .h5 model.<br>\nconfig.pgtxt is as follows:</p>\n<pre><code># Each feed is a positional input argument for the generated function.  The order\n# of each entry matches the order of each input argument.  Here \u201cx_hold\u201d and \u201cy_hold\u201d\n# refer to the names of placeholder nodes defined in the graph.\nfeed {\n  id { node_name: \"input_image\" }\n  shape {\n    dim { size: 320 }\n    dim { size: 320 }\n    dim { size: 4 }\n  }\n}\n\n# Each fetch is a positional output argument for the generated function.  The order\n# of each entry matches the order of each output argument.  Here \u201cx_y_prod\u201d\n# refers to the name of a matmul node defined in the graph.\nfetch {\n  id { node_name: \"mrcnn_mask/Reshape_1\" }\n}\n</code></pre>\n<p>Unfortunately I can't upload my model as Github only allows 10Mb. But <a href=\"https://github.com/matterport/Mask_RCNN/releases\">here</a> is a similar model trained on the same network  (mask_rcnn_balloon.h5)</p>\n<p>tfcompile fails with the following error:</p>\n<p><code>2018-08-16 12:38:27.078016: F tensorflow/compiler/aot/tfcompile_main.cc:150] Non-OK-status: status status: Not found: Op type not registered 'DenseToDenseSetOperation' in binary running on mehdi-t440p. Make sure the Op and Kernel are registered in the binary running in this process. Note that if you are loading a saved graph which used ops from tf.contrib, accessing (e.g.) tf.contrib.resampler should be done before importing the graph, as contrib ops are lazily registered when the module is first accessed. Aborted</code></p>\n<p>This is difficult to understand for me as DenseToDenseSetIOperation is existing and registered in tensorflow/core/ops/set_ops.cc (line 35).<br>\nI searched for tutorials or documentation, even watched the video presentation made by tensorflow guys, but there is no troubleshooting support anywhere. So I thought Github is the right place for this kind of problem.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes (code from maskrcnn, and export.py to freeze my model)\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: Laptop\nTensorFlow installed from (source or binary): Source\nTensorFlow version (use command below): ('v1.9.0-rc2-2314-g3a99980', '1.10.0')\nPython version: 2.7\nBazel version (if compiling from source): 0.16.1\nGCC/Compiler version (if compiling from source): 5.4.0 20160609\nCUDA/cuDNN version: no cuda\nGPU model and memory:  Geforce GT 730M, 1Gb memory\nExact command to reproduce:\n\nbazel-bin/tensorflow/compiler/aot/tfcompile --graph=/home/mehdi/Desktop/data/resnet101_model.pb --config=/home/mehdi/Desktop/data/config.pbtxt --cpp_class=\"foo::bar\" --out_function_object=\"./out_model.o\" --out_header=\"./out.h\" --out_metadata_object=\"./out_helper.o\"\nI have been testing mask rcnn in order to do object detection and segmentation on images. It worked quite well and now I am trying to export my model to a standalone binary that can be used without having to install tensorflow on my target system. In order to do this I tried to use tfcompile. The first step was to take my .h5 keras model and converted it to a frozen tf .pb file. I used this script that was especially written to convert mask rcnn models. I then downloaded the source code of tensorflow, compiled it by running\nbazel build --config=opt //tensorflow/tools/pip_package:build_pip_package --jobs 3\nbefore that, I set support XLA JIT to true when running configure.\nAfter compilation was done I installed tensorflow and it was importable from python.\nThen in order to compile my model I run:\nbazel-bin/tensorflow/compiler/aot/tfcompile --graph=/home/mehdi/Desktop/data/resnet101_model.pb --config=/home/mehdi/Desktop/data/config.pbtxt --cpp_class=\"foo::bar\" --out_function_object=\"./out_model.o\" --out_header=\"./out.h\" --out_metadata_object=\"./out_helper.o\"\nwhere resnet101_model.pb is the result of running export.py on my keras .h5 model.\nconfig.pgtxt is as follows:\n# Each feed is a positional input argument for the generated function.  The order\n# of each entry matches the order of each input argument.  Here \u201cx_hold\u201d and \u201cy_hold\u201d\n# refer to the names of placeholder nodes defined in the graph.\nfeed {\n  id { node_name: \"input_image\" }\n  shape {\n    dim { size: 320 }\n    dim { size: 320 }\n    dim { size: 4 }\n  }\n}\n\n# Each fetch is a positional output argument for the generated function.  The order\n# of each entry matches the order of each output argument.  Here \u201cx_y_prod\u201d\n# refers to the name of a matmul node defined in the graph.\nfetch {\n  id { node_name: \"mrcnn_mask/Reshape_1\" }\n}\n\nUnfortunately I can't upload my model as Github only allows 10Mb. But here is a similar model trained on the same network  (mask_rcnn_balloon.h5)\ntfcompile fails with the following error:\n2018-08-16 12:38:27.078016: F tensorflow/compiler/aot/tfcompile_main.cc:150] Non-OK-status: status status: Not found: Op type not registered 'DenseToDenseSetOperation' in binary running on mehdi-t440p. Make sure the Op and Kernel are registered in the binary running in this process. Note that if you are loading a saved graph which used ops from tf.contrib, accessing (e.g.) tf.contrib.resampler should be done before importing the graph, as contrib ops are lazily registered when the module is first accessed. Aborted\nThis is difficult to understand for me as DenseToDenseSetIOperation is existing and registered in tensorflow/core/ops/set_ops.cc (line 35).\nI searched for tutorials or documentation, even watched the video presentation made by tensorflow guys, but there is no troubleshooting support anywhere. So I thought Github is the right place for this kind of problem.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes (code from maskrcnn, and export.py to freeze my model)\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: Laptop\r\n- **TensorFlow installed from (source or binary)**: Source\r\n- **TensorFlow version (use command below)**: ('v1.9.0-rc2-2314-g3a99980', '1.10.0')\r\n- **Python version**: 2.7\r\n- **Bazel version (if compiling from source)**: 0.16.1\r\n- **GCC/Compiler version (if compiling from source)**: 5.4.0 20160609\r\n- **CUDA/cuDNN version**: no cuda\r\n- **GPU model and memory**:  Geforce GT 730M, 1Gb memory\r\n- **Exact command to reproduce**: \r\n\r\n`bazel-bin/tensorflow/compiler/aot/tfcompile --graph=/home/mehdi/Desktop/data/resnet101_model.pb --config=/home/mehdi/Desktop/data/config.pbtxt --cpp_class=\"foo::bar\" --out_function_object=\"./out_model.o\" --out_header=\"./out.h\" --out_metadata_object=\"./out_helper.o\"`\r\n\r\nI have been testing [mask rcnn](https://github.com/matterport/Mask_RCNN) in order to do object detection and segmentation on images. It worked quite well and now I am trying to export my model to a standalone binary that can be used without having to install tensorflow on my target system. In order to do this I tried to use tfcompile. The first step was to take my .h5 keras model and converted it to a frozen tf .pb file. I used [this script](https://github.com/ericj974/Mask_RCNN/blob/master/scripts/export.py) that was especially written to convert mask rcnn models. I then downloaded the source code of tensorflow, compiled it by running\r\n\r\n`bazel build --config=opt //tensorflow/tools/pip_package:build_pip_package --jobs 3`\r\n\r\nbefore that, I set support XLA JIT to true when running configure.\r\nAfter compilation was done I installed tensorflow and it was importable from python.\r\n\r\nThen in order to compile my model I run:\r\n`bazel-bin/tensorflow/compiler/aot/tfcompile --graph=/home/mehdi/Desktop/data/resnet101_model.pb --config=/home/mehdi/Desktop/data/config.pbtxt --cpp_class=\"foo::bar\" --out_function_object=\"./out_model.o\" --out_header=\"./out.h\" --out_metadata_object=\"./out_helper.o\"`\r\n\r\nwhere resnet101_model.pb is the result of running export.py on my keras .h5 model.\r\nconfig.pgtxt is as follows:\r\n\r\n```\r\n# Each feed is a positional input argument for the generated function.  The order\r\n# of each entry matches the order of each input argument.  Here \u201cx_hold\u201d and \u201cy_hold\u201d\r\n# refer to the names of placeholder nodes defined in the graph.\r\nfeed {\r\n  id { node_name: \"input_image\" }\r\n  shape {\r\n    dim { size: 320 }\r\n    dim { size: 320 }\r\n    dim { size: 4 }\r\n  }\r\n}\r\n\r\n# Each fetch is a positional output argument for the generated function.  The order\r\n# of each entry matches the order of each output argument.  Here \u201cx_y_prod\u201d\r\n# refers to the name of a matmul node defined in the graph.\r\nfetch {\r\n  id { node_name: \"mrcnn_mask/Reshape_1\" }\r\n}\r\n```\r\n\r\nUnfortunately I can't upload my model as Github only allows 10Mb. But [here](https://github.com/matterport/Mask_RCNN/releases) is a similar model trained on the same network  (mask_rcnn_balloon.h5)\r\n\r\ntfcompile fails with the following error:\r\n\r\n`2018-08-16 12:38:27.078016: F tensorflow/compiler/aot/tfcompile_main.cc:150] Non-OK-status: status status: Not found: Op type not registered 'DenseToDenseSetOperation' in binary running on mehdi-t440p. Make sure the Op and Kernel are registered in the binary running in this process. Note that if you are loading a saved graph which used ops from tf.contrib, accessing (e.g.) tf.contrib.resampler should be done before importing the graph, as contrib ops are lazily registered when the module is first accessed. Aborted`\r\n\r\nThis is difficult to understand for me as DenseToDenseSetIOperation is existing and registered in tensorflow/core/ops/set_ops.cc (line 35).\r\nI searched for tutorials or documentation, even watched the video presentation made by tensorflow guys, but there is no troubleshooting support anywhere. So I thought Github is the right place for this kind of problem.\r\n\r\n\r\n\r\n"}