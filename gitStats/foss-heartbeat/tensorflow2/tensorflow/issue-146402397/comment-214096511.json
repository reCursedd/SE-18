{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/214096511", "html_url": "https://github.com/tensorflow/tensorflow/issues/1797#issuecomment-214096511", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1797", "id": 214096511, "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDA5NjUxMQ==", "user": {"login": "meereeum", "id": 7970350, "node_id": "MDQ6VXNlcjc5NzAzNTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/7970350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meereeum", "html_url": "https://github.com/meereeum", "followers_url": "https://api.github.com/users/meereeum/followers", "following_url": "https://api.github.com/users/meereeum/following{/other_user}", "gists_url": "https://api.github.com/users/meereeum/gists{/gist_id}", "starred_url": "https://api.github.com/users/meereeum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meereeum/subscriptions", "organizations_url": "https://api.github.com/users/meereeum/orgs", "repos_url": "https://api.github.com/users/meereeum/repos", "events_url": "https://api.github.com/users/meereeum/events{/privacy}", "received_events_url": "https://api.github.com/users/meereeum/received_events", "type": "User", "site_admin": false}, "created_at": "2016-04-25T02:29:22Z", "updated_at": "2016-04-25T02:29:22Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=10446514\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gaohuazuo\">@gaohuazuo</a> hmmm that assert statement returns True (as long as you are consistent about <code>vscope</code> vs <code>vs</code>); however...</p>\n<pre><code>with tf.variable_scope('foo') as vs:\n    x = tf.Variable([1])\nwith tf.variable_scope(vs) as vs_:\n    assert vs.name == vs_.name\n    y = tf.Variable([1])\nx.name\n&gt;&gt;&gt; u'foo/Variable:0'\ny.name\n&gt;&gt;&gt; u'foo_1/Variable:0'\n</code></pre>\n<p>with corresponding non-overlapping name-scopes in tensorboard. This is not changed by passing <code>reuse = True</code>.</p>", "body_text": "@gaohuazuo hmmm that assert statement returns True (as long as you are consistent about vscope vs vs); however...\nwith tf.variable_scope('foo') as vs:\n    x = tf.Variable([1])\nwith tf.variable_scope(vs) as vs_:\n    assert vs.name == vs_.name\n    y = tf.Variable([1])\nx.name\n>>> u'foo/Variable:0'\ny.name\n>>> u'foo_1/Variable:0'\n\nwith corresponding non-overlapping name-scopes in tensorboard. This is not changed by passing reuse = True.", "body": "@gaohuazuo hmmm that assert statement returns True (as long as you are consistent about `vscope` vs `vs`); however...\n\n```\nwith tf.variable_scope('foo') as vs:\n    x = tf.Variable([1])\nwith tf.variable_scope(vs) as vs_:\n    assert vs.name == vs_.name\n    y = tf.Variable([1])\nx.name\n>>> u'foo/Variable:0'\ny.name\n>>> u'foo_1/Variable:0'\n```\n\nwith corresponding non-overlapping name-scopes in tensorboard. This is not changed by passing `reuse = True`.\n"}