{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/323408260", "html_url": "https://github.com/tensorflow/tensorflow/issues/12384#issuecomment-323408260", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12384", "id": 323408260, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzQwODI2MA==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-18T17:05:04Z", "updated_at": "2017-08-18T17:05:04Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=22096916\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/HC-2016\">@HC-2016</a> Can you share a complete reproduction for the problem?  Based on your last comment, it sounds like you are fetching tensors from both \"before\" and \"after\" the <code>tf.train.batch()</code> in the same <code>sess.run()</code> call. This will lead to some input values being consumed before they get to be batched. Unfortunately this kind of error is hard for TensorFlow to detect, since the <code>sess.run()</code>  call doesn't know anything about the queue-runner structure.</p>\n<p>(As an aside, the <code>tf.contrib.data</code> API might be useful in preventing this kind of bug. It also has better facilities for getting a deterministic execution order, even when shuffling is used.)</p>", "body_text": "@HC-2016 Can you share a complete reproduction for the problem?  Based on your last comment, it sounds like you are fetching tensors from both \"before\" and \"after\" the tf.train.batch() in the same sess.run() call. This will lead to some input values being consumed before they get to be batched. Unfortunately this kind of error is hard for TensorFlow to detect, since the sess.run()  call doesn't know anything about the queue-runner structure.\n(As an aside, the tf.contrib.data API might be useful in preventing this kind of bug. It also has better facilities for getting a deterministic execution order, even when shuffling is used.)", "body": "@HC-2016 Can you share a complete reproduction for the problem?  Based on your last comment, it sounds like you are fetching tensors from both \"before\" and \"after\" the `tf.train.batch()` in the same `sess.run()` call. This will lead to some input values being consumed before they get to be batched. Unfortunately this kind of error is hard for TensorFlow to detect, since the `sess.run()`  call doesn't know anything about the queue-runner structure.\r\n\r\n(As an aside, the `tf.contrib.data` API might be useful in preventing this kind of bug. It also has better facilities for getting a deterministic execution order, even when shuffling is used.)"}