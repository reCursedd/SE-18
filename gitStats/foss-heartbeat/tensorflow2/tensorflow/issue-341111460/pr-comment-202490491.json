{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/202490491", "pull_request_review_id": 137209810, "id": 202490491, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjQ5MDQ5MQ==", "diff_hunk": "@@ -20,18 +20,72 @@ limitations under the License.\n #ifndef TENSORFLOW_STREAM_EXECUTOR_DEVICE_DESCRIPTION_H_\n #define TENSORFLOW_STREAM_EXECUTOR_DEVICE_DESCRIPTION_H_\n \n+#include <iostream>\n #include <map>\n #include <memory>\n-#include \"tensorflow/stream_executor/platform/port.h\"\n \n+#include \"tensorflow/core/lib/strings/numbers.h\"\n+#include \"tensorflow/core/lib/strings/str_util.h\"\n+#include \"tensorflow/core/platform/default/logging.h\"\n #include \"tensorflow/stream_executor/launch_dim.h\"\n+#include \"tensorflow/stream_executor/lib/numbers.h\"\n+#include \"tensorflow/stream_executor/lib/statusor.h\"\n+#include \"tensorflow/stream_executor/lib/stringpiece.h\"\n+#include \"tensorflow/stream_executor/platform/logging.h\"\n #include \"tensorflow/stream_executor/platform/port.h\"\n \n namespace stream_executor {\n namespace internal {\n class DeviceDescriptionBuilder;\n }  // namespace internal\n \n+// Device hardware version\n+//\n+// On CUDA platform it holds major and minor compute capability.\n+//\n+// On ROCm platform the major version is the AMDGCN ISA version, minor version\n+// is zero.\n+struct DeviceVersion {\n+  // Initialize from version_name in the form of \"3.5\"\n+  static port::StatusOr<DeviceVersion> Parse(port::StringPiece version_name) {\n+    int major_part = 0, minor_part = 0;\n+    size_t dot_pos = version_name.find('.');\n+    CHECK(dot_pos != string::npos)\n+        << \"Illegal version name: [\" << version_name << \"]\";\n+    port::StringPiece major_str = version_name.substr(0, dot_pos);\n+    CHECK(port::safe_strto32(major_str.data(), &major_part))\n+        << \"Illegal version name: [\" << version_name << \"]\";\n+    port::StringPiece minor_str = version_name.substr(dot_pos + 1);\n+    CHECK(port::safe_strto32(minor_str.data(), &minor_part))\n+        << \"Illegal version name: [\" << version_name << \"]\";\n+    return DeviceVersion(major_part, minor_part);", "path": "tensorflow/stream_executor/device_description.h", "position": null, "original_position": 43, "commit_id": "b83018dc4ea2db666e510ce112c003de2e3715a7", "original_commit_id": "e7c9cf0925b8859c80fea30911b81183ada9f357", "user": {"login": "jlebar", "id": 150663, "node_id": "MDQ6VXNlcjE1MDY2Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/150663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlebar", "html_url": "https://github.com/jlebar", "followers_url": "https://api.github.com/users/jlebar/followers", "following_url": "https://api.github.com/users/jlebar/following{/other_user}", "gists_url": "https://api.github.com/users/jlebar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlebar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlebar/subscriptions", "organizations_url": "https://api.github.com/users/jlebar/orgs", "repos_url": "https://api.github.com/users/jlebar/repos", "events_url": "https://api.github.com/users/jlebar/events{/privacy}", "received_events_url": "https://api.github.com/users/jlebar/received_events", "type": "User", "site_admin": false}, "body": "The idea was to return an error rather than CHECK (which is a fatal runtime assertion).\r\n\r\nYou'd probably want to return FailedPreconditionError, see stream_executor/lib/status.h.", "created_at": "2018-07-13T22:53:07Z", "updated_at": "2018-09-01T02:18:59Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/20786#discussion_r202490491", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/20786", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/202490491"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/20786#discussion_r202490491"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/20786"}}, "body_html": "<p>The idea was to return an error rather than CHECK (which is a fatal runtime assertion).</p>\n<p>You'd probably want to return FailedPreconditionError, see stream_executor/lib/status.h.</p>", "body_text": "The idea was to return an error rather than CHECK (which is a fatal runtime assertion).\nYou'd probably want to return FailedPreconditionError, see stream_executor/lib/status.h."}