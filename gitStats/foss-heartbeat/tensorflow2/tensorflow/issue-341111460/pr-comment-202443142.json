{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/202443142", "pull_request_review_id": 137147239, "id": 202443142, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjQ0MzE0Mg==", "diff_hunk": "@@ -113,28 +115,29 @@ static string GetLibdeviceFilename(const string& libdevice_dir_path,\n \n // Gets the GPU name as it's known to LLVM for a given compute capability.  If\n // we see an unrecognized compute capability, we return \"sm_30\".\n-static string GetSmName(std::pair<int, int> compute_capability) {\n-  static auto* m = new std::map<std::pair<int, int>, int>({{{2, 0}, 20},\n-                                                           {{2, 1}, 21},\n-                                                           {{3, 0}, 30},\n-                                                           {{3, 2}, 32},\n-                                                           {{3, 5}, 35},\n-                                                           {{3, 7}, 37},\n-                                                           {{5, 0}, 50},\n-                                                           {{5, 2}, 52},\n-                                                           {{5, 3}, 53},\n-                                                           {{6, 0}, 60},\n-                                                           {{6, 1}, 61},\n-                                                           {{6, 2}, 62},\n+static string GetSmName(se::DeviceVersion compute_capability) {\n+  static auto* m = new std::map<se::DeviceVersion, int>({{{2, 0}, 20},\n+                                                         {{2, 1}, 21},\n+                                                         {{3, 0}, 30},\n+                                                         {{3, 2}, 32},\n+                                                         {{3, 5}, 35},\n+                                                         {{3, 7}, 37},\n+                                                         {{5, 0}, 50},\n+                                                         {{5, 2}, 52},\n+                                                         {{5, 3}, 53},\n+                                                         {{6, 0}, 60},\n+                                                         {{6, 1}, 61},\n+                                                         {{6, 2}, 62},\n                     // TODO: Change this to 70 once LLVM NVPTX supports it\n-                                                           {{7, 0}, 60}});\n+                                                         {{7, 0}, 60}});\n   int sm_version = 30;\n   auto it = m->find(compute_capability);\n   if (it != m->end()) {\n     sm_version = it->second;\n   } else {\n-    LOG(WARNING) << \"Unknown compute capability (\" << compute_capability.first\n-                 << \", \" << compute_capability.second << \") .\"\n+    LOG(WARNING) << \"Unknown compute capability (\"\n+                 << compute_capability.major_part << \", \"\n+                 << compute_capability.minor_part << \") .\"", "path": "tensorflow/compiler/xla/service/gpu/llvm_gpu_backend/gpu_backend_lib.cc", "position": null, "original_position": 100, "commit_id": "b83018dc4ea2db666e510ce112c003de2e3715a7", "original_commit_id": "b709e39bd6df69840c8a595a2b7c41756e47bb39", "user": {"login": "jlebar", "id": 150663, "node_id": "MDQ6VXNlcjE1MDY2Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/150663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlebar", "html_url": "https://github.com/jlebar", "followers_url": "https://api.github.com/users/jlebar/followers", "following_url": "https://api.github.com/users/jlebar/following{/other_user}", "gists_url": "https://api.github.com/users/jlebar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlebar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlebar/subscriptions", "organizations_url": "https://api.github.com/users/jlebar/orgs", "repos_url": "https://api.github.com/users/jlebar/repos", "events_url": "https://api.github.com/users/jlebar/events{/privacy}", "received_events_url": "https://api.github.com/users/jlebar/received_events", "type": "User", "site_admin": false}, "body": "It looks like your workflow may be set up to clang-format the entirety of every file you touch.  That adds unnecessary whitespace changes like this one, and the GetLibdeviceFilename change below, making patches harder to read.\r\n\r\nWhat most of us use is the `git-clang-format` script available here: https://github.com/llvm-mirror/clang/blob/master/tools/clang-format/git-clang-format", "created_at": "2018-07-13T18:54:32Z", "updated_at": "2018-09-01T02:18:59Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/20786#discussion_r202443142", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/20786", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/202443142"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/20786#discussion_r202443142"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/20786"}}, "body_html": "<p>It looks like your workflow may be set up to clang-format the entirety of every file you touch.  That adds unnecessary whitespace changes like this one, and the GetLibdeviceFilename change below, making patches harder to read.</p>\n<p>What most of us use is the <code>git-clang-format</code> script available here: <a href=\"https://github.com/llvm-mirror/clang/blob/master/tools/clang-format/git-clang-format\">https://github.com/llvm-mirror/clang/blob/master/tools/clang-format/git-clang-format</a></p>", "body_text": "It looks like your workflow may be set up to clang-format the entirety of every file you touch.  That adds unnecessary whitespace changes like this one, and the GetLibdeviceFilename change below, making patches harder to read.\nWhat most of us use is the git-clang-format script available here: https://github.com/llvm-mirror/clang/blob/master/tools/clang-format/git-clang-format"}