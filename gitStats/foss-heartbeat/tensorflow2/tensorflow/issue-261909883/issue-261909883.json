{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13429", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13429/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13429/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13429/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/13429", "id": 261909883, "node_id": "MDU6SXNzdWUyNjE5MDk4ODM=", "number": 13429, "title": "Name/variable scopes of tensorflow.python.layers.base.Layer", "user": {"login": "kzm4269", "id": 7009040, "node_id": "MDQ6VXNlcjcwMDkwNDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/7009040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kzm4269", "html_url": "https://github.com/kzm4269", "followers_url": "https://api.github.com/users/kzm4269/followers", "following_url": "https://api.github.com/users/kzm4269/following{/other_user}", "gists_url": "https://api.github.com/users/kzm4269/gists{/gist_id}", "starred_url": "https://api.github.com/users/kzm4269/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kzm4269/subscriptions", "organizations_url": "https://api.github.com/users/kzm4269/orgs", "repos_url": "https://api.github.com/users/kzm4269/repos", "events_url": "https://api.github.com/users/kzm4269/events{/privacy}", "received_events_url": "https://api.github.com/users/kzm4269/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 24, "created_at": "2017-10-01T11:34:37Z", "updated_at": "2017-12-19T23:31:50Z", "closed_at": "2017-12-19T23:31:50Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.3.0</li>\n<li><strong>Python version</strong>: 3.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>: N/A</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>This is a tiny code that creates layers and connects them in series.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">from</span> tensorflow.python.layers.base <span class=\"pl-k\">import</span> Layer\n\n\n<span class=\"pl-k\">class</span> <span class=\"pl-en\">A</span>(<span class=\"pl-e\">Layer</span>):\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">build</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">input_shape</span>):\n        <span class=\"pl-c1\">self</span>.v <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>.add_variable(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>v<span class=\"pl-pds\">'</span></span>, (), tf.float32)\n        <span class=\"pl-c1\">self</span>.built <span class=\"pl-k\">=</span> <span class=\"pl-c1\">True</span>\n    \n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">call</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">inputs</span>):\n        <span class=\"pl-k\">return</span> <span class=\"pl-c1\">self</span>.v <span class=\"pl-k\">*</span> inputs\n    \n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Case 1</span>\n<span class=\"pl-k\">with</span> tf.Graph().as_default() <span class=\"pl-k\">as</span> graph:\n    x <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, (), <span class=\"pl-s\"><span class=\"pl-pds\">'</span>x<span class=\"pl-pds\">'</span></span>)\n   \n    out <span class=\"pl-k\">=</span> x\n    out <span class=\"pl-k\">=</span> A()(out)\n    out <span class=\"pl-k\">=</span> A()(out)\n    out <span class=\"pl-k\">=</span> A()(out)\n    \n    tf.summary.FileWriter(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>/tmp/tensorboard/1<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">graph</span><span class=\"pl-k\">=</span>graph).close()\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Case 2</span>\n<span class=\"pl-k\">with</span> tf.Graph().as_default() <span class=\"pl-k\">as</span> graph:\n    x <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, (), <span class=\"pl-s\"><span class=\"pl-pds\">'</span>x<span class=\"pl-pds\">'</span></span>)\n   \n    out <span class=\"pl-k\">=</span> x\n    out <span class=\"pl-k\">=</span> A(<span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>)(out)\n    out <span class=\"pl-k\">=</span> A(<span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>a_1<span class=\"pl-pds\">'</span></span>)(out)\n    out <span class=\"pl-k\">=</span> A(<span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>a_2<span class=\"pl-pds\">'</span></span>)(out)\n    \n    tf.summary.FileWriter(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>/tmp/tensorboard/2<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">graph</span><span class=\"pl-k\">=</span>graph).close()\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Case 3</span>\n<span class=\"pl-k\">with</span> tf.Graph().as_default() <span class=\"pl-k\">as</span> graph:\n    x <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, (), <span class=\"pl-s\"><span class=\"pl-pds\">'</span>x<span class=\"pl-pds\">'</span></span>)\n   \n    out <span class=\"pl-k\">=</span> x\n    out <span class=\"pl-k\">=</span> A(<span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>a_1<span class=\"pl-pds\">'</span></span>)(out)\n    out <span class=\"pl-k\">=</span> A(<span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>a_2<span class=\"pl-pds\">'</span></span>)(out)\n    out <span class=\"pl-k\">=</span> A(<span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>a_3<span class=\"pl-pds\">'</span></span>)(out)\n    \n    tf.summary.FileWriter(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>/tmp/tensorboard/3<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">graph</span><span class=\"pl-k\">=</span>graph).close()</pre></div>\n<h4>Results</h4>\n<p>Other than case 3, an unexpected graph is generated.<br>\nIs this a bug?</p>\n<ul>\n<li>Case 1</li>\n</ul>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/7009040/31054076-b290a772-a6e5-11e7-8e6a-2d97420b5e0e.png\"><img alt=\"result\" height=\"450\" src=\"https://user-images.githubusercontent.com/7009040/31054076-b290a772-a6e5-11e7-8e6a-2d97420b5e0e.png\" style=\"max-width:100%;\"></a></p>\n<ul>\n<li>Case 2</li>\n</ul>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/7009040/31054078-b2a7ca7e-a6e5-11e7-9a17-805fd56e6ea7.png\"><img alt=\"result\" height=\"450\" src=\"https://user-images.githubusercontent.com/7009040/31054078-b2a7ca7e-a6e5-11e7-9a17-805fd56e6ea7.png\" style=\"max-width:100%;\"></a></p>\n<ul>\n<li>Case 3</li>\n</ul>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/7009040/31054077-b291b7c0-a6e5-11e7-9256-be7c986094ec.png\"><img alt=\"result\" height=\"450\" src=\"https://user-images.githubusercontent.com/7009040/31054077-b291b7c0-a6e5-11e7-9256-be7c986094ec.png\" style=\"max-width:100%;\"></a></p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.3.0\nPython version: 3.6\nBazel version (if compiling from source): N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce: N/A\n\nDescribe the problem\nThis is a tiny code that creates layers and connects them in series.\nimport tensorflow as tf\nfrom tensorflow.python.layers.base import Layer\n\n\nclass A(Layer):\n    def build(self, input_shape):\n        self.v = self.add_variable('v', (), tf.float32)\n        self.built = True\n    \n    def call(self, inputs):\n        return self.v * inputs\n    \n\n# Case 1\nwith tf.Graph().as_default() as graph:\n    x = tf.placeholder(tf.float32, (), 'x')\n   \n    out = x\n    out = A()(out)\n    out = A()(out)\n    out = A()(out)\n    \n    tf.summary.FileWriter('/tmp/tensorboard/1', graph=graph).close()\n\n# Case 2\nwith tf.Graph().as_default() as graph:\n    x = tf.placeholder(tf.float32, (), 'x')\n   \n    out = x\n    out = A(name='a')(out)\n    out = A(name='a_1')(out)\n    out = A(name='a_2')(out)\n    \n    tf.summary.FileWriter('/tmp/tensorboard/2', graph=graph).close()\n\n# Case 3\nwith tf.Graph().as_default() as graph:\n    x = tf.placeholder(tf.float32, (), 'x')\n   \n    out = x\n    out = A(name='a_1')(out)\n    out = A(name='a_2')(out)\n    out = A(name='a_3')(out)\n    \n    tf.summary.FileWriter('/tmp/tensorboard/3', graph=graph).close()\nResults\nOther than case 3, an unexpected graph is generated.\nIs this a bug?\n\nCase 1\n\n\n\nCase 2\n\n\n\nCase 3", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.3.0\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: N/A\r\n\r\n### Describe the problem\r\n\r\nThis is a tiny code that creates layers and connects them in series.\r\n\r\n```python\r\nimport tensorflow as tf\r\nfrom tensorflow.python.layers.base import Layer\r\n\r\n\r\nclass A(Layer):\r\n    def build(self, input_shape):\r\n        self.v = self.add_variable('v', (), tf.float32)\r\n        self.built = True\r\n    \r\n    def call(self, inputs):\r\n        return self.v * inputs\r\n    \r\n\r\n# Case 1\r\nwith tf.Graph().as_default() as graph:\r\n    x = tf.placeholder(tf.float32, (), 'x')\r\n   \r\n    out = x\r\n    out = A()(out)\r\n    out = A()(out)\r\n    out = A()(out)\r\n    \r\n    tf.summary.FileWriter('/tmp/tensorboard/1', graph=graph).close()\r\n\r\n# Case 2\r\nwith tf.Graph().as_default() as graph:\r\n    x = tf.placeholder(tf.float32, (), 'x')\r\n   \r\n    out = x\r\n    out = A(name='a')(out)\r\n    out = A(name='a_1')(out)\r\n    out = A(name='a_2')(out)\r\n    \r\n    tf.summary.FileWriter('/tmp/tensorboard/2', graph=graph).close()\r\n\r\n# Case 3\r\nwith tf.Graph().as_default() as graph:\r\n    x = tf.placeholder(tf.float32, (), 'x')\r\n   \r\n    out = x\r\n    out = A(name='a_1')(out)\r\n    out = A(name='a_2')(out)\r\n    out = A(name='a_3')(out)\r\n    \r\n    tf.summary.FileWriter('/tmp/tensorboard/3', graph=graph).close()\r\n```\r\n\r\n#### Results\r\n\r\nOther than case 3, an unexpected graph is generated.\r\nIs this a bug?\r\n\r\n- Case 1\r\n\r\n<img alt=\"result\" height=\"450\" src=\"https://user-images.githubusercontent.com/7009040/31054076-b290a772-a6e5-11e7-8e6a-2d97420b5e0e.png\">\r\n\r\n- Case 2\r\n\r\n<img alt=\"result\" height=\"450\" src=\"https://user-images.githubusercontent.com/7009040/31054078-b2a7ca7e-a6e5-11e7-9a17-805fd56e6ea7.png\">\r\n\r\n- Case 3\r\n\r\n<img alt=\"result\" height=\"450\" src=\"https://user-images.githubusercontent.com/7009040/31054077-b291b7c0-a6e5-11e7-9256-be7c986094ec.png\">"}