{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/334991322", "html_url": "https://github.com/tensorflow/tensorflow/issues/13429#issuecomment-334991322", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13429", "id": 334991322, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDk5MTMyMg==", "user": {"login": "facaiy", "id": 1112263, "node_id": "MDQ6VXNlcjExMTIyNjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1112263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facaiy", "html_url": "https://github.com/facaiy", "followers_url": "https://api.github.com/users/facaiy/followers", "following_url": "https://api.github.com/users/facaiy/following{/other_user}", "gists_url": "https://api.github.com/users/facaiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/facaiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facaiy/subscriptions", "organizations_url": "https://api.github.com/users/facaiy/orgs", "repos_url": "https://api.github.com/users/facaiy/repos", "events_url": "https://api.github.com/users/facaiy/events{/privacy}", "received_events_url": "https://api.github.com/users/facaiy/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-08T08:27:53Z", "updated_at": "2017-10-08T08:27:53Z", "author_association": "MEMBER", "body_html": "<p>To help clarify our problem, I write a simpler version for <code>tf.layers.Layer</code>.  Please notice that  <code>a_1</code> name scope has been created in 1st layer. That's why for 2nd layer, name scope must start from <code>a_2</code>, while variable scope is from <code>a_1</code> (inconsistent scopes).</p>\n<h3>code</h3>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">print_tensors</span>():\n    <span class=\"pl-c1\">print</span>(tf.constant([<span class=\"pl-c1\">1</span>], <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>t_const<span class=\"pl-pds\">\"</span></span>))\n    <span class=\"pl-c1\">print</span>(tf.Variable([<span class=\"pl-c1\">1</span>], <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>t_var<span class=\"pl-pds\">\"</span></span>))\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">print_scope</span>():\n    <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>variable_scope: <span class=\"pl-c1\">{}</span>, name_scope: <span class=\"pl-c1\">{}</span><span class=\"pl-pds\">\"</span></span>.format(tf.get_variable_scope().name, tf.contrib.framework.get_name_scope()))\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">layer</span>(<span class=\"pl-smi\">name</span>):\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> `base._set_scope` method</span>\n    <span class=\"pl-k\">with</span> tf.variable_scope(<span class=\"pl-c1\">None</span>, <span class=\"pl-v\">default_name</span><span class=\"pl-k\">=</span>name) <span class=\"pl-k\">as</span> scope:\n        s <span class=\"pl-k\">=</span> scope\n        print_scope()\n\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> `base.add_variable` and `base.__call__` method</span>\n    <span class=\"pl-k\">with</span> tf.variable_scope(s) <span class=\"pl-k\">as</span> ss:\n        <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>---------------------<span class=\"pl-pds\">\"</span></span>)\n        <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>before using original_name_scope:<span class=\"pl-pds\">\"</span></span>)\n        print_scope()\n        <span class=\"pl-k\">with</span> tf.name_scope(ss.original_name_scope) <span class=\"pl-k\">as</span> n:\n            <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>after using original_name_scope:<span class=\"pl-pds\">\"</span></span>)\n            print_scope()\n\n<span class=\"pl-k\">with</span> tf.Graph().as_default() <span class=\"pl-k\">as</span> graph:\n    <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1st layer:<span class=\"pl-pds\">\"</span></span>)\n    a <span class=\"pl-k\">=</span> layer(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>a<span class=\"pl-pds\">\"</span></span>)\n    <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\n</span>===============================<span class=\"pl-cce\">\\n</span><span class=\"pl-pds\">\"</span></span>)\n    <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>2nd layer:<span class=\"pl-pds\">\"</span></span>)\n    a_1 <span class=\"pl-k\">=</span> layer(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>a<span class=\"pl-pds\">\"</span></span>)\n    <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\n</span>===============================<span class=\"pl-cce\">\\n</span><span class=\"pl-pds\">\"</span></span>)\n    <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>3rd layer:<span class=\"pl-pds\">\"</span></span>)\n    a_2 <span class=\"pl-k\">=</span> layer(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>a<span class=\"pl-pds\">\"</span></span>)</pre></div>\n<h3>logs</h3>\n<pre><code>1st layer:\nvariable_scope: a, name_scope: a\n---------------------\nbefore using original_name_scope:\nvariable_scope: a, name_scope: a_1\nafter using original_name_scope:\nvariable_scope: a, name_scope: a\n\n===============================\n\n2nd layer:\nvariable_scope: a_1, name_scope: a_2\n---------------------\nbefore using original_name_scope:\nvariable_scope: a_1, name_scope: a_1_1\nafter using original_name_scope:\nvariable_scope: a_1, name_scope: a_2\n\n===============================\n\n3rd layer:\nvariable_scope: a_2, name_scope: a_3\n---------------------\nbefore using original_name_scope:\nvariable_scope: a_2, name_scope: a_2_1\nafter using original_name_scope:\nvariable_scope: a_2, name_scope: a_3\n</code></pre>", "body_text": "To help clarify our problem, I write a simpler version for tf.layers.Layer.  Please notice that  a_1 name scope has been created in 1st layer. That's why for 2nd layer, name scope must start from a_2, while variable scope is from a_1 (inconsistent scopes).\ncode\nimport tensorflow as tf\n\ndef print_tensors():\n    print(tf.constant([1], name=\"t_const\"))\n    print(tf.Variable([1], name=\"t_var\"))\n\ndef print_scope():\n    print(\"variable_scope: {}, name_scope: {}\".format(tf.get_variable_scope().name, tf.contrib.framework.get_name_scope()))\n\ndef layer(name):\n    # `base._set_scope` method\n    with tf.variable_scope(None, default_name=name) as scope:\n        s = scope\n        print_scope()\n\n    # `base.add_variable` and `base.__call__` method\n    with tf.variable_scope(s) as ss:\n        print(\"---------------------\")\n        print(\"before using original_name_scope:\")\n        print_scope()\n        with tf.name_scope(ss.original_name_scope) as n:\n            print(\"after using original_name_scope:\")\n            print_scope()\n\nwith tf.Graph().as_default() as graph:\n    print(\"1st layer:\")\n    a = layer(\"a\")\n    print(\"\\n===============================\\n\")\n    print(\"2nd layer:\")\n    a_1 = layer(\"a\")\n    print(\"\\n===============================\\n\")\n    print(\"3rd layer:\")\n    a_2 = layer(\"a\")\nlogs\n1st layer:\nvariable_scope: a, name_scope: a\n---------------------\nbefore using original_name_scope:\nvariable_scope: a, name_scope: a_1\nafter using original_name_scope:\nvariable_scope: a, name_scope: a\n\n===============================\n\n2nd layer:\nvariable_scope: a_1, name_scope: a_2\n---------------------\nbefore using original_name_scope:\nvariable_scope: a_1, name_scope: a_1_1\nafter using original_name_scope:\nvariable_scope: a_1, name_scope: a_2\n\n===============================\n\n3rd layer:\nvariable_scope: a_2, name_scope: a_3\n---------------------\nbefore using original_name_scope:\nvariable_scope: a_2, name_scope: a_2_1\nafter using original_name_scope:\nvariable_scope: a_2, name_scope: a_3", "body": "To help clarify our problem, I write a simpler version for `tf.layers.Layer`.  Please notice that  `a_1` name scope has been created in 1st layer. That's why for 2nd layer, name scope must start from `a_2`, while variable scope is from `a_1` (inconsistent scopes).\r\n\r\n### code\r\n```python\r\nimport tensorflow as tf\r\n\r\ndef print_tensors():\r\n    print(tf.constant([1], name=\"t_const\"))\r\n    print(tf.Variable([1], name=\"t_var\"))\r\n\r\ndef print_scope():\r\n    print(\"variable_scope: {}, name_scope: {}\".format(tf.get_variable_scope().name, tf.contrib.framework.get_name_scope()))\r\n\r\ndef layer(name):\r\n    # `base._set_scope` method\r\n    with tf.variable_scope(None, default_name=name) as scope:\r\n        s = scope\r\n        print_scope()\r\n\r\n    # `base.add_variable` and `base.__call__` method\r\n    with tf.variable_scope(s) as ss:\r\n        print(\"---------------------\")\r\n        print(\"before using original_name_scope:\")\r\n        print_scope()\r\n        with tf.name_scope(ss.original_name_scope) as n:\r\n            print(\"after using original_name_scope:\")\r\n            print_scope()\r\n\r\nwith tf.Graph().as_default() as graph:\r\n    print(\"1st layer:\")\r\n    a = layer(\"a\")\r\n    print(\"\\n===============================\\n\")\r\n    print(\"2nd layer:\")\r\n    a_1 = layer(\"a\")\r\n    print(\"\\n===============================\\n\")\r\n    print(\"3rd layer:\")\r\n    a_2 = layer(\"a\")\r\n```\r\n\r\n### logs\r\n```\r\n1st layer:\r\nvariable_scope: a, name_scope: a\r\n---------------------\r\nbefore using original_name_scope:\r\nvariable_scope: a, name_scope: a_1\r\nafter using original_name_scope:\r\nvariable_scope: a, name_scope: a\r\n\r\n===============================\r\n\r\n2nd layer:\r\nvariable_scope: a_1, name_scope: a_2\r\n---------------------\r\nbefore using original_name_scope:\r\nvariable_scope: a_1, name_scope: a_1_1\r\nafter using original_name_scope:\r\nvariable_scope: a_1, name_scope: a_2\r\n\r\n===============================\r\n\r\n3rd layer:\r\nvariable_scope: a_2, name_scope: a_3\r\n---------------------\r\nbefore using original_name_scope:\r\nvariable_scope: a_2, name_scope: a_2_1\r\nafter using original_name_scope:\r\nvariable_scope: a_2, name_scope: a_3\r\n```"}