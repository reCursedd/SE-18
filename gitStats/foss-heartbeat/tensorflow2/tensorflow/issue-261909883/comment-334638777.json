{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/334638777", "html_url": "https://github.com/tensorflow/tensorflow/issues/13429#issuecomment-334638777", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13429", "id": 334638777, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDYzODc3Nw==", "user": {"login": "facaiy", "id": 1112263, "node_id": "MDQ6VXNlcjExMTIyNjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1112263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facaiy", "html_url": "https://github.com/facaiy", "followers_url": "https://api.github.com/users/facaiy/followers", "following_url": "https://api.github.com/users/facaiy/following{/other_user}", "gists_url": "https://api.github.com/users/facaiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/facaiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facaiy/subscriptions", "organizations_url": "https://api.github.com/users/facaiy/orgs", "repos_url": "https://api.github.com/users/facaiy/repos", "events_url": "https://api.github.com/users/facaiy/events{/privacy}", "received_events_url": "https://api.github.com/users/facaiy/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-06T01:57:24Z", "updated_at": "2017-10-06T01:58:11Z", "author_association": "MEMBER", "body_html": "<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/b58c89129894618ab28a023fb2b2e610bbbdcf81/tensorflow/python/layers/base.py#L527-L530\">tensorflow/tensorflow/python/layers/base.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 527 to 530\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/b58c89129894618ab28a023fb2b2e610bbbdcf81\">b58c891</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L527\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"527\"></td>\n          <td id=\"LC527\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">with</span> vs.variable_scope( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L528\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"528\"></td>\n          <td id=\"LC528\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-c1\">self</span>._scope, <span class=\"pl-v\">reuse</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">self</span>.built <span class=\"pl-k\">or</span> <span class=\"pl-c1\">self</span>._reuse)) <span class=\"pl-k\">as</span> scope: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L529\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"529\"></td>\n          <td id=\"LC529\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">with</span> ops.name_scope(scope.original_name_scope): </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L530\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"530\"></td>\n          <td id=\"LC530\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-k\">if</span> <span class=\"pl-k\">not</span> <span class=\"pl-c1\">self</span>.built: </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<pre><code>self._scope: dense\nself._scope.original_name_scope: dense/\n\nself._scope: dense_1\nself._scope.original_name_scope: dense_2/\n\nself._scope: dense_2\nself._scope.original_name_scope: dense_3/\n</code></pre>\n<p>As we known, <code>get_variable(xxx)</code> only uses <code>variable_scope</code> as prefix.<br>\nI believe that the bug is from the inconsistency between <code>variable_scope</code> and <code>name_scope</code>, which really surprises me.<br>\nI guess that it is critical to find why <code>name_scope</code> jumps over <code>dense_1</code>.</p>", "body_text": "tensorflow/tensorflow/python/layers/base.py\n    \n    \n        Lines 527 to 530\n      in\n      b58c891\n    \n    \n    \n    \n\n        \n          \n           with vs.variable_scope( \n        \n\n        \n          \n               self._scope, reuse=(self.built or self._reuse)) as scope: \n        \n\n        \n          \n             with ops.name_scope(scope.original_name_scope): \n        \n\n        \n          \n               if not self.built: \n        \n    \n  \n\n\nself._scope: dense\nself._scope.original_name_scope: dense/\n\nself._scope: dense_1\nself._scope.original_name_scope: dense_2/\n\nself._scope: dense_2\nself._scope.original_name_scope: dense_3/\n\nAs we known, get_variable(xxx) only uses variable_scope as prefix.\nI believe that the bug is from the inconsistency between variable_scope and name_scope, which really surprises me.\nI guess that it is critical to find why name_scope jumps over dense_1.", "body": "https://github.com/tensorflow/tensorflow/blob/b58c89129894618ab28a023fb2b2e610bbbdcf81/tensorflow/python/layers/base.py#L527-L530\r\n\r\n```\r\nself._scope: dense\r\nself._scope.original_name_scope: dense/\r\n\r\nself._scope: dense_1\r\nself._scope.original_name_scope: dense_2/\r\n\r\nself._scope: dense_2\r\nself._scope.original_name_scope: dense_3/\r\n```\r\n\r\nAs we known, `get_variable(xxx)` only uses `variable_scope` as prefix.\r\nI believe that the bug is from the inconsistency between `variable_scope` and `name_scope`, which really surprises me.\r\nI guess that it is critical to find why `name_scope` jumps over `dense_1`.\r\n"}