{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/356334856", "html_url": "https://github.com/tensorflow/tensorflow/issues/15620#issuecomment-356334856", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15620", "id": 356334856, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjMzNDg1Ng==", "user": {"login": "andrehentz", "id": 25754898, "node_id": "MDQ6VXNlcjI1NzU0ODk4", "avatar_url": "https://avatars3.githubusercontent.com/u/25754898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrehentz", "html_url": "https://github.com/andrehentz", "followers_url": "https://api.github.com/users/andrehentz/followers", "following_url": "https://api.github.com/users/andrehentz/following{/other_user}", "gists_url": "https://api.github.com/users/andrehentz/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrehentz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrehentz/subscriptions", "organizations_url": "https://api.github.com/users/andrehentz/orgs", "repos_url": "https://api.github.com/users/andrehentz/repos", "events_url": "https://api.github.com/users/andrehentz/events{/privacy}", "received_events_url": "https://api.github.com/users/andrehentz/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-09T16:23:10Z", "updated_at": "2018-01-09T16:23:33Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The limitation is a bit artificial at this point. I'll have a fix for that soon. In the meantime, you can try the following changes to kernels/l2norm.cc:</p>\n<pre><code>46,47c46\n&lt;   // TODO(ahentz): Our current implementations rely on the inputs being 4D.\n&lt;   TF_LITE_ENSURE_EQ(context, NumDimensions(input), 4);\n---\n&gt;   TF_LITE_ENSURE(context, NumDimensions(input) &lt;= 4);\n57,62c56\n&lt;   TfLiteIntArray* output_size = TfLiteIntArrayCreate(4);\n&lt;   output_size-&gt;data[0] = input-&gt;dims-&gt;data[0];\n&lt;   output_size-&gt;data[1] = input-&gt;dims-&gt;data[1];\n&lt;   output_size-&gt;data[2] = input-&gt;dims-&gt;data[2];\n&lt;   output_size-&gt;data[3] = input-&gt;dims-&gt;data[3];\n&lt;\n---\n&gt;   TfLiteIntArray* output_size = TfLiteIntArrayCopy(input-&gt;dims);\n</code></pre>", "body_text": "The limitation is a bit artificial at this point. I'll have a fix for that soon. In the meantime, you can try the following changes to kernels/l2norm.cc:\n46,47c46\n<   // TODO(ahentz): Our current implementations rely on the inputs being 4D.\n<   TF_LITE_ENSURE_EQ(context, NumDimensions(input), 4);\n---\n>   TF_LITE_ENSURE(context, NumDimensions(input) <= 4);\n57,62c56\n<   TfLiteIntArray* output_size = TfLiteIntArrayCreate(4);\n<   output_size->data[0] = input->dims->data[0];\n<   output_size->data[1] = input->dims->data[1];\n<   output_size->data[2] = input->dims->data[2];\n<   output_size->data[3] = input->dims->data[3];\n<\n---\n>   TfLiteIntArray* output_size = TfLiteIntArrayCopy(input->dims);", "body": "The limitation is a bit artificial at this point. I'll have a fix for that soon. In the meantime, you can try the following changes to kernels/l2norm.cc:\r\n\r\n```\r\n46,47c46\r\n<   // TODO(ahentz): Our current implementations rely on the inputs being 4D.\r\n<   TF_LITE_ENSURE_EQ(context, NumDimensions(input), 4);\r\n---\r\n>   TF_LITE_ENSURE(context, NumDimensions(input) <= 4);\r\n57,62c56\r\n<   TfLiteIntArray* output_size = TfLiteIntArrayCreate(4);\r\n<   output_size->data[0] = input->dims->data[0];\r\n<   output_size->data[1] = input->dims->data[1];\r\n<   output_size->data[2] = input->dims->data[2];\r\n<   output_size->data[3] = input->dims->data[3];\r\n<\r\n---\r\n>   TfLiteIntArray* output_size = TfLiteIntArrayCopy(input->dims);\r\n```\r\n\r\n  "}