{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/355559229", "html_url": "https://github.com/tensorflow/tensorflow/pull/15466#issuecomment-355559229", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15466", "id": 355559229, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTU1OTIyOQ==", "user": {"login": "rongjiecomputer", "id": 13115060, "node_id": "MDQ6VXNlcjEzMTE1MDYw", "avatar_url": "https://avatars2.githubusercontent.com/u/13115060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rongjiecomputer", "html_url": "https://github.com/rongjiecomputer", "followers_url": "https://api.github.com/users/rongjiecomputer/followers", "following_url": "https://api.github.com/users/rongjiecomputer/following{/other_user}", "gists_url": "https://api.github.com/users/rongjiecomputer/gists{/gist_id}", "starred_url": "https://api.github.com/users/rongjiecomputer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rongjiecomputer/subscriptions", "organizations_url": "https://api.github.com/users/rongjiecomputer/orgs", "repos_url": "https://api.github.com/users/rongjiecomputer/repos", "events_url": "https://api.github.com/users/rongjiecomputer/events{/privacy}", "received_events_url": "https://api.github.com/users/rongjiecomputer/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-05T13:51:26Z", "updated_at": "2018-01-05T13:51:26Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Quite a lot of open-sourced Google code that runs on Windows use <code>PLATFORM_WINDOWS</code> and <code>COMPILER_MSVC</code>.</p>\n<p>However, a few Google projects will define <code>COMPILER_MSVC</code> <em>in header file</em>, not build script (<a href=\"https://cs.chromium.org/search/?q=%22%23define+COMPILER_MSVC%22+OR+%22define+V8_CC_MSVC%22&amp;type=cs\" rel=\"nofollow\">https://cs.chromium.org/search/?q=%22%23define+COMPILER_MSVC%22+OR+%22define+V8_CC_MSVC%22&amp;type=cs</a>)</p>\n<p>Other open-sourced projects like zlib and icu that needs to support many compilers simply rely on <code>_MSC_VER</code> and <code>_WIN32</code> in source files and still have no issue. (<a href=\"https://cs.chromium.org/search/?q=_MSC_VER+OR+_WIN32&amp;type=cs\" rel=\"nofollow\">https://cs.chromium.org/search/?q=_MSC_VER+OR+_WIN32&amp;type=cs</a>)</p>\n<p>Note:</p>\n<ul>\n<li><code>_WIN32</code> is defined in all Windows compilers targeting 32-bit and 64-bit, including Mingw[64] GCC, Mingw[64] Clang, MSVC Clang (<code>clang-cl</code>) and pure MSVC (<code>cl</code>).</li>\n<li><code>_WIN64</code> is defined in all Windows compilers targeting 64-bit, including Mingw64 GCC, Mingw64 Clang, MSVC Clang (<code>clang-cl</code>) and pure MSVC (<code>cl</code>).</li>\n<li><code>_MSC_VER</code> is defined in all MSVC-compatible compilers, including MSVC Clang (<code>clang-cl</code>) and pure MSVC (<code>cl</code>).</li>\n</ul>\n<p>GCC and Clang cross compilers on Linux and Mac OS targeting Windows will also define <code>_WIN32</code>, <code>_WIN64</code> and <code>_MSC_VER</code> according to the above rules. Directly relying on these macros will not break cross compilation.</p>", "body_text": "Quite a lot of open-sourced Google code that runs on Windows use PLATFORM_WINDOWS and COMPILER_MSVC.\nHowever, a few Google projects will define COMPILER_MSVC in header file, not build script (https://cs.chromium.org/search/?q=%22%23define+COMPILER_MSVC%22+OR+%22define+V8_CC_MSVC%22&type=cs)\nOther open-sourced projects like zlib and icu that needs to support many compilers simply rely on _MSC_VER and _WIN32 in source files and still have no issue. (https://cs.chromium.org/search/?q=_MSC_VER+OR+_WIN32&type=cs)\nNote:\n\n_WIN32 is defined in all Windows compilers targeting 32-bit and 64-bit, including Mingw[64] GCC, Mingw[64] Clang, MSVC Clang (clang-cl) and pure MSVC (cl).\n_WIN64 is defined in all Windows compilers targeting 64-bit, including Mingw64 GCC, Mingw64 Clang, MSVC Clang (clang-cl) and pure MSVC (cl).\n_MSC_VER is defined in all MSVC-compatible compilers, including MSVC Clang (clang-cl) and pure MSVC (cl).\n\nGCC and Clang cross compilers on Linux and Mac OS targeting Windows will also define _WIN32, _WIN64 and _MSC_VER according to the above rules. Directly relying on these macros will not break cross compilation.", "body": "Quite a lot of open-sourced Google code that runs on Windows use `PLATFORM_WINDOWS` and `COMPILER_MSVC`.\r\n\r\nHowever, a few Google projects will define `COMPILER_MSVC` *in header file*, not build script (https://cs.chromium.org/search/?q=%22%23define+COMPILER_MSVC%22+OR+%22define+V8_CC_MSVC%22&type=cs)\r\n\r\nOther open-sourced projects like zlib and icu that needs to support many compilers simply rely on `_MSC_VER` and `_WIN32` in source files and still have no issue. (https://cs.chromium.org/search/?q=_MSC_VER+OR+_WIN32&type=cs)\r\n\r\nNote:\r\n\r\n- `_WIN32` is defined in all Windows compilers targeting 32-bit and 64-bit, including Mingw[64] GCC, Mingw[64] Clang, MSVC Clang (`clang-cl`) and pure MSVC (`cl`).\r\n- `_WIN64` is defined in all Windows compilers targeting 64-bit, including Mingw64 GCC, Mingw64 Clang, MSVC Clang (`clang-cl`) and pure MSVC (`cl`).\r\n- `_MSC_VER` is defined in all MSVC-compatible compilers, including MSVC Clang (`clang-cl`) and pure MSVC (`cl`).\r\n\r\nGCC and Clang cross compilers on Linux and Mac OS targeting Windows will also define `_WIN32`, `_WIN64` and `_MSC_VER` according to the above rules. Directly relying on these macros will not break cross compilation."}