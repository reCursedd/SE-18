{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/353058492", "html_url": "https://github.com/tensorflow/tensorflow/issues/9201#issuecomment-353058492", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9201", "id": 353058492, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzA1ODQ5Mg==", "user": {"login": "Belval", "id": 5399488, "node_id": "MDQ6VXNlcjUzOTk0ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5399488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Belval", "html_url": "https://github.com/Belval", "followers_url": "https://api.github.com/users/Belval/followers", "following_url": "https://api.github.com/users/Belval/following{/other_user}", "gists_url": "https://api.github.com/users/Belval/gists{/gist_id}", "starred_url": "https://api.github.com/users/Belval/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Belval/subscriptions", "organizations_url": "https://api.github.com/users/Belval/orgs", "repos_url": "https://api.github.com/users/Belval/repos", "events_url": "https://api.github.com/users/Belval/events{/privacy}", "received_events_url": "https://api.github.com/users/Belval/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-20T13:07:42Z", "updated_at": "2017-12-20T13:07:42Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7721540\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/TimZaman\">@TimZaman</a></p>\n<p>It's not, but it really isn't a priority as you can (I know it's ugly)</p>\n<pre><code>os.environ[\"CUDA_VISIBLE_DEVICES\"] = ''\n\n# Code that uses Tensorflow without GPU\n\nos.environ[\"CUDA_VISIBLE_DEVICES\"] = '0'\n</code></pre>\n<p>If you want you could also wrap the whole thing in a decorator:</p>\n<pre><code>import os\n\ndef cpu_only():\n    def _method_wrapper(function):\n        def wrap(*args, **kwargs):\n            os.environ[\"CUDA_VISIBLE_DEVICES\"] = ''\n            ret = function(*args, **kwargs)\n            os.environ[\"CUDA_VISIBLE_DEVICES\"] = '0'\n            return ret\n            wrap.__doc__ = function.__doc__\n            wrap.__name__ = function.__name__\n        return wrap\n    return _method_wrapper\n</code></pre>\n<p>Someone might work on it one day but I wouldn't hold my breath</p>", "body_text": "@TimZaman\nIt's not, but it really isn't a priority as you can (I know it's ugly)\nos.environ[\"CUDA_VISIBLE_DEVICES\"] = ''\n\n# Code that uses Tensorflow without GPU\n\nos.environ[\"CUDA_VISIBLE_DEVICES\"] = '0'\n\nIf you want you could also wrap the whole thing in a decorator:\nimport os\n\ndef cpu_only():\n    def _method_wrapper(function):\n        def wrap(*args, **kwargs):\n            os.environ[\"CUDA_VISIBLE_DEVICES\"] = ''\n            ret = function(*args, **kwargs)\n            os.environ[\"CUDA_VISIBLE_DEVICES\"] = '0'\n            return ret\n            wrap.__doc__ = function.__doc__\n            wrap.__name__ = function.__name__\n        return wrap\n    return _method_wrapper\n\nSomeone might work on it one day but I wouldn't hold my breath", "body": "@TimZaman \r\n\r\nIt's not, but it really isn't a priority as you can (I know it's ugly)\r\n\r\n    os.environ[\"CUDA_VISIBLE_DEVICES\"] = ''\r\n\r\n    # Code that uses Tensorflow without GPU\r\n\r\n    os.environ[\"CUDA_VISIBLE_DEVICES\"] = '0'\r\n\r\nIf you want you could also wrap the whole thing in a decorator:\r\n\r\n    import os\r\n\r\n    def cpu_only():\r\n        def _method_wrapper(function):\r\n            def wrap(*args, **kwargs):\r\n                os.environ[\"CUDA_VISIBLE_DEVICES\"] = ''\r\n                ret = function(*args, **kwargs)\r\n                os.environ[\"CUDA_VISIBLE_DEVICES\"] = '0'\r\n                return ret\r\n                wrap.__doc__ = function.__doc__\r\n                wrap.__name__ = function.__name__\r\n            return wrap\r\n        return _method_wrapper\r\n\r\nSomeone might work on it one day but I wouldn't hold my breath"}