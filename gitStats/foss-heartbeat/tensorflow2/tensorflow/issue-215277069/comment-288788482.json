{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/288788482", "html_url": "https://github.com/tensorflow/tensorflow/pull/8537#issuecomment-288788482", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8537", "id": 288788482, "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODc4ODQ4Mg==", "user": {"login": "sugyan", "id": 80381, "node_id": "MDQ6VXNlcjgwMzgx", "avatar_url": "https://avatars2.githubusercontent.com/u/80381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sugyan", "html_url": "https://github.com/sugyan", "followers_url": "https://api.github.com/users/sugyan/followers", "following_url": "https://api.github.com/users/sugyan/following{/other_user}", "gists_url": "https://api.github.com/users/sugyan/gists{/gist_id}", "starred_url": "https://api.github.com/users/sugyan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sugyan/subscriptions", "organizations_url": "https://api.github.com/users/sugyan/orgs", "repos_url": "https://api.github.com/users/sugyan/repos", "events_url": "https://api.github.com/users/sugyan/events{/privacy}", "received_events_url": "https://api.github.com/users/sugyan/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-23T17:01:14Z", "updated_at": "2017-03-23T17:01:14Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I am sorry for a miscellaneous pull-request with no test code.<br>\nI just pointed out a programming mistake.</p>\n<p>I read the code and checked its behavior, but in <code>normalization.py</code>,<code> axis</code> in initializer is a single integer and <code>len(reduction_axes)</code> is always equal to <code>len(input_shape) - 1</code>, so the calculation results will be exactly the same regardless of the value of <code>needs_broadcast</code>...<br>\nI'm wondering if this variable is really necessary.</p>", "body_text": "I am sorry for a miscellaneous pull-request with no test code.\nI just pointed out a programming mistake.\nI read the code and checked its behavior, but in normalization.py, axis in initializer is a single integer and len(reduction_axes) is always equal to len(input_shape) - 1, so the calculation results will be exactly the same regardless of the value of needs_broadcast...\nI'm wondering if this variable is really necessary.", "body": "I am sorry for a miscellaneous pull-request with no test code.\r\nI just pointed out a programming mistake.\r\n\r\nI read the code and checked its behavior, but in `normalization.py`,` axis` in initializer is a single integer and `len(reduction_axes)` is always equal to `len(input_shape) - 1`, so the calculation results will be exactly the same regardless of the value of `needs_broadcast`...\r\nI'm wondering if this variable is really necessary."}