{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21787", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21787/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21787/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21787/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21787", "id": 352832094, "node_id": "MDU6SXNzdWUzNTI4MzIwOTQ=", "number": 21787, "title": "tflite runs much slower than tfmobile ...", "user": {"login": "jiarenyf", "id": 12405578, "node_id": "MDQ6VXNlcjEyNDA1NTc4", "avatar_url": "https://avatars2.githubusercontent.com/u/12405578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiarenyf", "html_url": "https://github.com/jiarenyf", "followers_url": "https://api.github.com/users/jiarenyf/followers", "following_url": "https://api.github.com/users/jiarenyf/following{/other_user}", "gists_url": "https://api.github.com/users/jiarenyf/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiarenyf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiarenyf/subscriptions", "organizations_url": "https://api.github.com/users/jiarenyf/orgs", "repos_url": "https://api.github.com/users/jiarenyf/repos", "events_url": "https://api.github.com/users/jiarenyf/events{/privacy}", "received_events_url": "https://api.github.com/users/jiarenyf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750616506, "node_id": "MDU6TGFiZWw3NTA2MTY1MDY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:lite", "name": "comp:lite", "color": "0052cc", "default": false}], "state": "open", "locked": false, "assignee": {"login": "shashishekhar", "id": 1162712, "node_id": "MDQ6VXNlcjExNjI3MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1162712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shashishekhar", "html_url": "https://github.com/shashishekhar", "followers_url": "https://api.github.com/users/shashishekhar/followers", "following_url": "https://api.github.com/users/shashishekhar/following{/other_user}", "gists_url": "https://api.github.com/users/shashishekhar/gists{/gist_id}", "starred_url": "https://api.github.com/users/shashishekhar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shashishekhar/subscriptions", "organizations_url": "https://api.github.com/users/shashishekhar/orgs", "repos_url": "https://api.github.com/users/shashishekhar/repos", "events_url": "https://api.github.com/users/shashishekhar/events{/privacy}", "received_events_url": "https://api.github.com/users/shashishekhar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shashishekhar", "id": 1162712, "node_id": "MDQ6VXNlcjExNjI3MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1162712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shashishekhar", "html_url": "https://github.com/shashishekhar", "followers_url": "https://api.github.com/users/shashishekhar/followers", "following_url": "https://api.github.com/users/shashishekhar/following{/other_user}", "gists_url": "https://api.github.com/users/shashishekhar/gists{/gist_id}", "starred_url": "https://api.github.com/users/shashishekhar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shashishekhar/subscriptions", "organizations_url": "https://api.github.com/users/shashishekhar/orgs", "repos_url": "https://api.github.com/users/shashishekhar/repos", "events_url": "https://api.github.com/users/shashishekhar/events{/privacy}", "received_events_url": "https://api.github.com/users/shashishekhar/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2018-08-22T07:22:08Z", "updated_at": "2018-11-16T23:23:13Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Ubuntu14.04</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: Xiaomi 8</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.10</li>\n<li><strong>Python version</strong>:</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>: 9.0 / 7.1</li>\n<li><strong>GPU model and memory</strong>:</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I test performance of tf-mobile, tf-lite, tf-mobile-int8, tf-lite-int8 on android, and I find that the speed of tf-lite is much slower than tf-mobile.</p>\n<ol>\n<li>\n<p>I use <code>freeze_graph</code> to generate <code>A.pb</code> file from <code>checkpoint</code> for testing tf-mobile performance.</p>\n</li>\n<li>\n<p>I use <code>toco_convert</code> to convert <code>A.pb</code> file to <code>A.tflite</code> file for for testing tf-lite performance.</p>\n</li>\n<li>\n<p>I use <code>transform_graph</code> to get quantitative <code>AQ.pb</code> file from <code>A.pb</code> file for testing tf-mobile int8 performance.</p>\n</li>\n<li>\n<p>I train a model with the same architecture by adding the line <code>tf.contrib.quantize.create_training_graph()</code>  and get the <code>checkpoint</code> file. Then I replace the line with <code>tf.contrib.quantize.create_eval_graph()</code> to generate the <code>A.pbtxt</code> file, and use <code>checkpoint</code> file and <code>A.pbtxt</code> file to get <code>A8.pb</code> with fake quantization nodes. Finally, I use <code>toco_convert</code> to get the <code>A8.tflite</code> file.</p>\n</li>\n<li>\n<p>I test the performance with these 4 files on android, each runs several times for inference on the same image, and the result is listed below:</p>\n</li>\n</ol>\n<p>tf-mobile:           357ms per image<br>\ntf-mobile int8:    356ms per image<br>\ntf-lite:                 844ms per image<br>\ntf-lite int8;          571ms per image</p>\n<p><strong>I wonder why tf-lite is much slower than tf-mobile.</strong></p>\n<p>PS: the model architecture only contains: CONV+BN+RELU, RESHAPE, FULLY-CONTECT ops.</p>\n<p>The features shape from CONV+BN+RELU is [B,T,C], then I reshape it to [-1,C] and go on to the fc layer, then reshape the out with shape [B*T,K] to [B,T,K], which is the final result I expected.</p>\n<p><strong>I wonder is the reshape op the brings the worse performance ?</strong></p>\n<p><strong>Thank you very much ...</strong></p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu14.04\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: Xiaomi 8\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.10\nPython version:\nBazel version (if compiling from source):\nGCC/Compiler version (if compiling from source):\nCUDA/cuDNN version: 9.0 / 7.1\nGPU model and memory:\nExact command to reproduce:\n\nDescribe the problem\nI test performance of tf-mobile, tf-lite, tf-mobile-int8, tf-lite-int8 on android, and I find that the speed of tf-lite is much slower than tf-mobile.\n\n\nI use freeze_graph to generate A.pb file from checkpoint for testing tf-mobile performance.\n\n\nI use toco_convert to convert A.pb file to A.tflite file for for testing tf-lite performance.\n\n\nI use transform_graph to get quantitative AQ.pb file from A.pb file for testing tf-mobile int8 performance.\n\n\nI train a model with the same architecture by adding the line tf.contrib.quantize.create_training_graph()  and get the checkpoint file. Then I replace the line with tf.contrib.quantize.create_eval_graph() to generate the A.pbtxt file, and use checkpoint file and A.pbtxt file to get A8.pb with fake quantization nodes. Finally, I use toco_convert to get the A8.tflite file.\n\n\nI test the performance with these 4 files on android, each runs several times for inference on the same image, and the result is listed below:\n\n\ntf-mobile:           357ms per image\ntf-mobile int8:    356ms per image\ntf-lite:                 844ms per image\ntf-lite int8;          571ms per image\nI wonder why tf-lite is much slower than tf-mobile.\nPS: the model architecture only contains: CONV+BN+RELU, RESHAPE, FULLY-CONTECT ops.\nThe features shape from CONV+BN+RELU is [B,T,C], then I reshape it to [-1,C] and go on to the fc layer, then reshape the out with shape [B*T,K] to [B,T,K], which is the final result I expected.\nI wonder is the reshape op the brings the worse performance ?\nThank you very much ...", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu14.04\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: Xiaomi 8\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.10\r\n- **Python version**:\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**: 9.0 / 7.1\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\n\r\nI test performance of tf-mobile, tf-lite, tf-mobile-int8, tf-lite-int8 on android, and I find that the speed of tf-lite is much slower than tf-mobile.\r\n\r\n1. I use `freeze_graph` to generate `A.pb` file from `checkpoint` for testing tf-mobile performance.\r\n\r\n2. I use `toco_convert` to convert `A.pb` file to `A.tflite` file for for testing tf-lite performance.\r\n\r\n3. I use `transform_graph` to get quantitative `AQ.pb` file from `A.pb` file for testing tf-mobile int8 performance.\r\n\r\n4. I train a model with the same architecture by adding the line `tf.contrib.quantize.create_training_graph()`  and get the `checkpoint` file. Then I replace the line with `tf.contrib.quantize.create_eval_graph()` to generate the `A.pbtxt` file, and use `checkpoint` file and `A.pbtxt` file to get `A8.pb` with fake quantization nodes. Finally, I use `toco_convert` to get the `A8.tflite` file.\r\n\r\n5. I test the performance with these 4 files on android, each runs several times for inference on the same image, and the result is listed below:\r\n\r\ntf-mobile:           357ms per image\r\ntf-mobile int8:    356ms per image\r\ntf-lite:                 844ms per image\r\ntf-lite int8;          571ms per image\r\n\r\n**I wonder why tf-lite is much slower than tf-mobile.**\r\n\r\nPS: the model architecture only contains: CONV+BN+RELU, RESHAPE, FULLY-CONTECT ops.\r\n\r\nThe features shape from CONV+BN+RELU is [B,T,C], then I reshape it to [-1,C] and go on to the fc layer, then reshape the out with shape [B*T,K] to [B,T,K], which is the final result I expected.\r\n\r\n**I wonder is the reshape op the brings the worse performance ?**\r\n\r\n**Thank you very much ...**\r\n\r\n"}