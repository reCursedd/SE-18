{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22295", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22295/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22295/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22295/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22295", "id": 360577737, "node_id": "MDU6SXNzdWUzNjA1Nzc3Mzc=", "number": 22295, "title": "Allow grads to be scaled by tensors in tf.contrib.layers.optimize_loss()", "user": {"login": "markostam", "id": 14855383, "node_id": "MDQ6VXNlcjE0ODU1Mzgz", "avatar_url": "https://avatars2.githubusercontent.com/u/14855383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markostam", "html_url": "https://github.com/markostam", "followers_url": "https://api.github.com/users/markostam/followers", "following_url": "https://api.github.com/users/markostam/following{/other_user}", "gists_url": "https://api.github.com/users/markostam/gists{/gist_id}", "starred_url": "https://api.github.com/users/markostam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markostam/subscriptions", "organizations_url": "https://api.github.com/users/markostam/orgs", "repos_url": "https://api.github.com/users/markostam/repos", "events_url": "https://api.github.com/users/markostam/events{/privacy}", "received_events_url": "https://api.github.com/users/markostam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "robieta", "id": 13089297, "node_id": "MDQ6VXNlcjEzMDg5Mjk3", "avatar_url": "https://avatars0.githubusercontent.com/u/13089297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robieta", "html_url": "https://github.com/robieta", "followers_url": "https://api.github.com/users/robieta/followers", "following_url": "https://api.github.com/users/robieta/following{/other_user}", "gists_url": "https://api.github.com/users/robieta/gists{/gist_id}", "starred_url": "https://api.github.com/users/robieta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robieta/subscriptions", "organizations_url": "https://api.github.com/users/robieta/orgs", "repos_url": "https://api.github.com/users/robieta/repos", "events_url": "https://api.github.com/users/robieta/events{/privacy}", "received_events_url": "https://api.github.com/users/robieta/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "robieta", "id": 13089297, "node_id": "MDQ6VXNlcjEzMDg5Mjk3", "avatar_url": "https://avatars0.githubusercontent.com/u/13089297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robieta", "html_url": "https://github.com/robieta", "followers_url": "https://api.github.com/users/robieta/followers", "following_url": "https://api.github.com/users/robieta/following{/other_user}", "gists_url": "https://api.github.com/users/robieta/gists{/gist_id}", "starred_url": "https://api.github.com/users/robieta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robieta/subscriptions", "organizations_url": "https://api.github.com/users/robieta/orgs", "repos_url": "https://api.github.com/users/robieta/repos", "events_url": "https://api.github.com/users/robieta/events{/privacy}", "received_events_url": "https://api.github.com/users/robieta/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-09-15T21:32:12Z", "updated_at": "2018-09-24T18:22:52Z", "closed_at": "2018-09-24T18:22:52Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>:</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.8</li>\n<li><strong>Python version</strong>: 2.7</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>:</li>\n<li><strong>GPU model and memory</strong>: TitanX Pascal</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<h3>Describe the problem</h3>\n<p><code>tf.contrib.layers.optimize_loss()</code> currently allows gradient multipliers by passing a <code>gradient_multipliers</code> dictionary of <code>{variable_name: multiplier}</code> where <code>multiplier</code> is a python float. It would be useful to allow <code>multiplier</code> to be tensor so that gradient scaling could be, for example, tied to global_step.</p>\n<p>It seems like this could easily be implemented  by not pushing the multiplier to a constant in <code>_multiply_gradients</code> function at <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/e37baff90ed84faef679bbf1e785e6790fd2739d/tensorflow/contrib/layers/python/layers/optimizers.py#L436-L437\">tensorflow/tensorflow/contrib/layers/python/layers/optimizers.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 436 to 437\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/e37baff90ed84faef679bbf1e785e6790fd2739d\">e37baff</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L436\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"436\"></td>\n          <td id=\"LC436\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> multiplier <span class=\"pl-k\">=</span> constant_op.constant( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L437\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"437\"></td>\n          <td id=\"LC437\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     gradient_multipliers[key], <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>dtypes.float32) </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>Is there a reason why the dict shouldn't contain tensors that I'm overlooking?</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.8\nPython version: 2.7\nBazel version (if compiling from source):\nGCC/Compiler version (if compiling from source):\nCUDA/cuDNN version:\nGPU model and memory: TitanX Pascal\nExact command to reproduce:\n\nDescribe the problem\ntf.contrib.layers.optimize_loss() currently allows gradient multipliers by passing a gradient_multipliers dictionary of {variable_name: multiplier} where multiplier is a python float. It would be useful to allow multiplier to be tensor so that gradient scaling could be, for example, tied to global_step.\nIt seems like this could easily be implemented  by not pushing the multiplier to a constant in _multiply_gradients function at \n  \n    \n      tensorflow/tensorflow/contrib/layers/python/layers/optimizers.py\n    \n    \n        Lines 436 to 437\n      in\n      e37baff\n    \n    \n    \n    \n\n        \n          \n           multiplier = constant_op.constant( \n        \n\n        \n          \n               gradient_multipliers[key], dtype=dtypes.float32) \n        \n    \n  \n\n\nIs there a reason why the dict shouldn't contain tensors that I'm overlooking?", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: \r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.8\r\n- **Python version**: 2.7\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**: \r\n- **GPU model and memory**: TitanX Pascal\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\n\r\n`tf.contrib.layers.optimize_loss()` currently allows gradient multipliers by passing a `gradient_multipliers` dictionary of `{variable_name: multiplier}` where `multiplier` is a python float. It would be useful to allow `multiplier` to be tensor so that gradient scaling could be, for example, tied to global_step.\r\n\r\nIt seems like this could easily be implemented  by not pushing the multiplier to a constant in `_multiply_gradients` function at https://github.com/tensorflow/tensorflow/blob/e37baff90ed84faef679bbf1e785e6790fd2739d/tensorflow/contrib/layers/python/layers/optimizers.py#L436-L437\r\n\r\nIs there a reason why the dict shouldn't contain tensors that I'm overlooking?"}