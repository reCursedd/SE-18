{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17120", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17120/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17120/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17120/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17120", "id": 298168650, "node_id": "MDU6SXNzdWUyOTgxNjg2NTA=", "number": 17120, "title": "Imagenet classification with VGG16 pretrained weights (Keras interface) doesnt seem to work", "user": {"login": "bsguru84", "id": 7951746, "node_id": "MDQ6VXNlcjc5NTE3NDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/7951746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bsguru84", "html_url": "https://github.com/bsguru84", "followers_url": "https://api.github.com/users/bsguru84/followers", "following_url": "https://api.github.com/users/bsguru84/following{/other_user}", "gists_url": "https://api.github.com/users/bsguru84/gists{/gist_id}", "starred_url": "https://api.github.com/users/bsguru84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bsguru84/subscriptions", "organizations_url": "https://api.github.com/users/bsguru84/orgs", "repos_url": "https://api.github.com/users/bsguru84/repos", "events_url": "https://api.github.com/users/bsguru84/events{/privacy}", "received_events_url": "https://api.github.com/users/bsguru84/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-19T05:56:03Z", "updated_at": "2018-02-19T20:54:07Z", "closed_at": "2018-02-19T20:54:05Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Windows 10</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.5.0</li>\n<li><strong>Python version</strong>: 3.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>: Described below in detail</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I tried to use VGG16 image net classifier which is given through keras interface in tensorflow (tf.keras.applications.VGG16) by grabbing the graph given by Keras and then using it. But it doesn't seem to work.</p>\n<p>I thought it might be issue with how I am using it ,but after thinking over it a lot I have concluded that this might an issue with Tensorflow. I had posed about it on SO at <a href=\"https://stackoverflow.com/questions/48850537/issue-with-imagenet-classification-with-vgg16-pretrained-weights\" rel=\"nofollow\">https://stackoverflow.com/questions/48850537/issue-with-imagenet-classification-with-vgg16-pretrained-weights</a></p>\n<h3>Source code / logs</h3>\n<pre><code>import tensorflow as tf\nimport numpy as np\nfrom PIL import Image\nfrom tensorflow.python.keras._impl.keras.applications import imagenet_utils\n\n\nmodel = tf.keras.applications.VGG16()\nVGG = model.graph\n\nVGG.get_operations()\ninput = VGG.get_tensor_by_name(\"input_1:0\")\noutput = VGG.get_tensor_by_name(\"predictions/Softmax:0\")\nprint(input)\nprint(output)\n\nI = Image.open(\"Elephant.jpg\")\nnew_img = I.resize((224,224))\nimage_array = np.array(new_img)[:, :, 0:3]\nimage_array = np.expand_dims(image_array, axis=0)\nimage_array = image_array.astype(np.float32)\nimage_array = image_array/255\n\n\nwith tf.Session(graph=VGG) as sess:\n    init_op = tf.global_variables_initializer()\n    sess.run(init_op)\n    pred = (sess.run(output,{input:image_array}))\n    print(imagenet_utils.decode_predictions(pred))\n</code></pre>\n<p>And below is the result I get when run:</p>\n<p><strong>Tensor(\"input_1:0\", shape=(?, 224, 224, 3), dtype=float32)<br>\nTensor(\"predictions/Softmax:0\", shape=(?, 1000), dtype=float32)</strong></p>\n<p><strong>[[('n02281406', 'sulphur_butterfly', 0.0022673723), ('n01882714', 'koala', 0.0021256246), ('n04325704', 'stole', 0.0020583202), ('n01496331', 'electric_ray', 0.0020416214), ('n01797886', 'ruffed_grouse', 0.0020229272)]]</strong></p>\n<p>Clearly the classfication results are not the one expected.</p>\n<p>Also If I dont run init_op for global variable initializing I get an error <strong>Attempting to use uninitialized value block1_conv1/bias</strong></p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10\nTensorFlow installed from (source or binary): Binary\nTensorFlow version (use command below): 1.5.0\nPython version: 3.6\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce: Described below in detail\n\nDescribe the problem\nI tried to use VGG16 image net classifier which is given through keras interface in tensorflow (tf.keras.applications.VGG16) by grabbing the graph given by Keras and then using it. But it doesn't seem to work.\nI thought it might be issue with how I am using it ,but after thinking over it a lot I have concluded that this might an issue with Tensorflow. I had posed about it on SO at https://stackoverflow.com/questions/48850537/issue-with-imagenet-classification-with-vgg16-pretrained-weights\nSource code / logs\nimport tensorflow as tf\nimport numpy as np\nfrom PIL import Image\nfrom tensorflow.python.keras._impl.keras.applications import imagenet_utils\n\n\nmodel = tf.keras.applications.VGG16()\nVGG = model.graph\n\nVGG.get_operations()\ninput = VGG.get_tensor_by_name(\"input_1:0\")\noutput = VGG.get_tensor_by_name(\"predictions/Softmax:0\")\nprint(input)\nprint(output)\n\nI = Image.open(\"Elephant.jpg\")\nnew_img = I.resize((224,224))\nimage_array = np.array(new_img)[:, :, 0:3]\nimage_array = np.expand_dims(image_array, axis=0)\nimage_array = image_array.astype(np.float32)\nimage_array = image_array/255\n\n\nwith tf.Session(graph=VGG) as sess:\n    init_op = tf.global_variables_initializer()\n    sess.run(init_op)\n    pred = (sess.run(output,{input:image_array}))\n    print(imagenet_utils.decode_predictions(pred))\n\nAnd below is the result I get when run:\nTensor(\"input_1:0\", shape=(?, 224, 224, 3), dtype=float32)\nTensor(\"predictions/Softmax:0\", shape=(?, 1000), dtype=float32)\n[[('n02281406', 'sulphur_butterfly', 0.0022673723), ('n01882714', 'koala', 0.0021256246), ('n04325704', 'stole', 0.0020583202), ('n01496331', 'electric_ray', 0.0020416214), ('n01797886', 'ruffed_grouse', 0.0020229272)]]\nClearly the classfication results are not the one expected.\nAlso If I dont run init_op for global variable initializing I get an error Attempting to use uninitialized value block1_conv1/bias", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10\r\n- **TensorFlow installed from (source or binary)**: Binary\r\n- **TensorFlow version (use command below)**: 1.5.0\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: Described below in detail\r\n\r\n### Describe the problem\r\nI tried to use VGG16 image net classifier which is given through keras interface in tensorflow (tf.keras.applications.VGG16) by grabbing the graph given by Keras and then using it. But it doesn't seem to work.   \r\n\r\nI thought it might be issue with how I am using it ,but after thinking over it a lot I have concluded that this might an issue with Tensorflow. I had posed about it on SO at https://stackoverflow.com/questions/48850537/issue-with-imagenet-classification-with-vgg16-pretrained-weights\r\n\r\n### Source code / logs\r\n```\r\nimport tensorflow as tf\r\nimport numpy as np\r\nfrom PIL import Image\r\nfrom tensorflow.python.keras._impl.keras.applications import imagenet_utils\r\n\r\n\r\nmodel = tf.keras.applications.VGG16()\r\nVGG = model.graph\r\n\r\nVGG.get_operations()\r\ninput = VGG.get_tensor_by_name(\"input_1:0\")\r\noutput = VGG.get_tensor_by_name(\"predictions/Softmax:0\")\r\nprint(input)\r\nprint(output)\r\n\r\nI = Image.open(\"Elephant.jpg\")\r\nnew_img = I.resize((224,224))\r\nimage_array = np.array(new_img)[:, :, 0:3]\r\nimage_array = np.expand_dims(image_array, axis=0)\r\nimage_array = image_array.astype(np.float32)\r\nimage_array = image_array/255\r\n\r\n\r\nwith tf.Session(graph=VGG) as sess:\r\n    init_op = tf.global_variables_initializer()\r\n    sess.run(init_op)\r\n    pred = (sess.run(output,{input:image_array}))\r\n    print(imagenet_utils.decode_predictions(pred))\r\n```\r\nAnd below is the result I get when run:  \r\n\r\n**Tensor(\"input_1:0\", shape=(?, 224, 224, 3), dtype=float32)\r\nTensor(\"predictions/Softmax:0\", shape=(?, 1000), dtype=float32)**\r\n\r\n**[[('n02281406', 'sulphur_butterfly', 0.0022673723), ('n01882714', 'koala', 0.0021256246), ('n04325704', 'stole', 0.0020583202), ('n01496331', 'electric_ray', 0.0020416214), ('n01797886', 'ruffed_grouse', 0.0020229272)]]**\r\n\r\nClearly the classfication results are not the one expected.  \r\n\r\nAlso If I dont run init_op for global variable initializing I get an error **Attempting to use uninitialized value block1_conv1/bias**"}