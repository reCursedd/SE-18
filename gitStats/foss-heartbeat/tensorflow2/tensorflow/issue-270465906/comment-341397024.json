{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/341397024", "html_url": "https://github.com/tensorflow/tensorflow/issues/14164#issuecomment-341397024", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14164", "id": 341397024, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTM5NzAyNA==", "user": {"login": "botev", "id": 1889878, "node_id": "MDQ6VXNlcjE4ODk4Nzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1889878?v=4", "gravatar_id": "", "url": "https://api.github.com/users/botev", "html_url": "https://github.com/botev", "followers_url": "https://api.github.com/users/botev/followers", "following_url": "https://api.github.com/users/botev/following{/other_user}", "gists_url": "https://api.github.com/users/botev/gists{/gist_id}", "starred_url": "https://api.github.com/users/botev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/botev/subscriptions", "organizations_url": "https://api.github.com/users/botev/orgs", "repos_url": "https://api.github.com/users/botev/repos", "events_url": "https://api.github.com/users/botev/events{/privacy}", "received_events_url": "https://api.github.com/users/botev/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-02T11:46:05Z", "updated_at": "2017-11-02T11:46:05Z", "author_association": "NONE", "body_html": "<p>So, I wanted to use a <code>tfe.Network</code> which defines, for instance, the Normalizing Flow of an Autoencoder. I have another network for the inference network. Now at this point, you can technically just have another net on top where these are part of, which I don't. Nevertheless, since I use the VAE inside an RL algorithm, that last bit is scoped, as so far in most code people and me included have used more of the functional interface. I understand that you can pretty much change any place where you used a scope to having a class, however, I was hoping that we can start the transition from using our old models to using <code>tfe.Network</code> without having to refactor 100% of our code. However, for that to happen we do need scopes to work otherwise the only option for changing is refactor everything is it just crashes.</p>\n<p>And yes that is the exception. I think this is useful for people trying to move into the suggested framework, but still have old code using scopes, which we don't want to recode all. Hope that gives some motive for removing the restriction. Could you maybe as well elaborate a bit more on why the restriction is there so we can try to understand what could be the issues of removing it?</p>", "body_text": "So, I wanted to use a tfe.Network which defines, for instance, the Normalizing Flow of an Autoencoder. I have another network for the inference network. Now at this point, you can technically just have another net on top where these are part of, which I don't. Nevertheless, since I use the VAE inside an RL algorithm, that last bit is scoped, as so far in most code people and me included have used more of the functional interface. I understand that you can pretty much change any place where you used a scope to having a class, however, I was hoping that we can start the transition from using our old models to using tfe.Network without having to refactor 100% of our code. However, for that to happen we do need scopes to work otherwise the only option for changing is refactor everything is it just crashes.\nAnd yes that is the exception. I think this is useful for people trying to move into the suggested framework, but still have old code using scopes, which we don't want to recode all. Hope that gives some motive for removing the restriction. Could you maybe as well elaborate a bit more on why the restriction is there so we can try to understand what could be the issues of removing it?", "body": "So, I wanted to use a `tfe.Network` which defines, for instance, the Normalizing Flow of an Autoencoder. I have another network for the inference network. Now at this point, you can technically just have another net on top where these are part of, which I don't. Nevertheless, since I use the VAE inside an RL algorithm, that last bit is scoped, as so far in most code people and me included have used more of the functional interface. I understand that you can pretty much change any place where you used a scope to having a class, however, I was hoping that we can start the transition from using our old models to using `tfe.Network` without having to refactor 100% of our code. However, for that to happen we do need scopes to work otherwise the only option for changing is refactor everything is it just crashes. \r\n\r\nAnd yes that is the exception. I think this is useful for people trying to move into the suggested framework, but still have old code using scopes, which we don't want to recode all. Hope that gives some motive for removing the restriction. Could you maybe as well elaborate a bit more on why the restriction is there so we can try to understand what could be the issues of removing it?"}