{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21955", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21955/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21955/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21955/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21955", "id": 355254729, "node_id": "MDU6SXNzdWUzNTUyNTQ3Mjk=", "number": 21955, "title": "tf.stack on windows gives wrong result", "user": {"login": "DanielMorales9", "id": 3338120, "node_id": "MDQ6VXNlcjMzMzgxMjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3338120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DanielMorales9", "html_url": "https://github.com/DanielMorales9", "followers_url": "https://api.github.com/users/DanielMorales9/followers", "following_url": "https://api.github.com/users/DanielMorales9/following{/other_user}", "gists_url": "https://api.github.com/users/DanielMorales9/gists{/gist_id}", "starred_url": "https://api.github.com/users/DanielMorales9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DanielMorales9/subscriptions", "organizations_url": "https://api.github.com/users/DanielMorales9/orgs", "repos_url": "https://api.github.com/users/DanielMorales9/repos", "events_url": "https://api.github.com/users/DanielMorales9/events{/privacy}", "received_events_url": "https://api.github.com/users/DanielMorales9/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-08-29T17:12:50Z", "updated_at": "2018-09-04T16:52:52Z", "closed_at": "2018-09-04T16:52:52Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li>Custom code:</li>\n<li>Windows 7 x64:</li>\n<li>Anaconda distributed</li>\n<li>Tensorflow version 1.8.0:</li>\n<li>python 3.6.0 :</li>\n<li>CUDA  V9.0.176 /cuDNN 7.0:</li>\n<li>NVIDIA QUADRO K1100M :</li>\n</ul>\n<h3>The problem</h3>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\nn_users <span class=\"pl-k\">=</span> tf.placeholder(<span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.int64, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>[], <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>n_users<span class=\"pl-pds\">'</span></span>)\nn_items <span class=\"pl-k\">=</span> tf.placeholder(<span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.int64, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>[], <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>n_items<span class=\"pl-pds\">'</span></span>)\nshape <span class=\"pl-k\">=</span> tf.stack([n_users, n_items])\n\nsess <span class=\"pl-k\">=</span> tf.Session()\nsess.run(shape, <span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>{n_users: <span class=\"pl-c1\">100</span>, n_items: <span class=\"pl-c1\">100</span>})\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> array([-4631544634021885188,  4529727110648879041], dtype=int64)</span></pre></div>\n<p>It seems that it overflows.</p>\n<p>I also tried by using np.int64 instead of python native integers and it gives:<br>\narray([ 10, 4357074203494797000], dtype=int64).<br>\nIt works if I define int32 placeholders.</p>", "body_text": "System information\n\nCustom code:\nWindows 7 x64:\nAnaconda distributed\nTensorflow version 1.8.0:\npython 3.6.0 :\nCUDA  V9.0.176 /cuDNN 7.0:\nNVIDIA QUADRO K1100M :\n\nThe problem\nimport tensorflow as tf\nn_users = tf.placeholder(dtype=tf.int64, shape=[], name='n_users')\nn_items = tf.placeholder(dtype=tf.int64, shape=[], name='n_items')\nshape = tf.stack([n_users, n_items])\n\nsess = tf.Session()\nsess.run(shape, feed_dict={n_users: 100, n_items: 100})\n# array([-4631544634021885188,  4529727110648879041], dtype=int64)\nIt seems that it overflows.\nI also tried by using np.int64 instead of python native integers and it gives:\narray([ 10, 4357074203494797000], dtype=int64).\nIt works if I define int32 placeholders.", "body": "### System information\r\n- Custom code:\r\n- Windows 7 x64:\r\n- Anaconda distributed\r\n- Tensorflow version 1.8.0:\r\n- python 3.6.0 :\r\n- CUDA  V9.0.176 /cuDNN 7.0:\r\n- NVIDIA QUADRO K1100M :\r\n\r\n### The problem\r\n``````python\r\nimport tensorflow as tf\r\nn_users = tf.placeholder(dtype=tf.int64, shape=[], name='n_users')\r\nn_items = tf.placeholder(dtype=tf.int64, shape=[], name='n_items')\r\nshape = tf.stack([n_users, n_items])\r\n\r\nsess = tf.Session()\r\nsess.run(shape, feed_dict={n_users: 100, n_items: 100})\r\n# array([-4631544634021885188,  4529727110648879041], dtype=int64)\r\n``````\r\nIt seems that it overflows. \r\n\r\nI also tried by using np.int64 instead of python native integers and it gives: \r\narray([ 10, 4357074203494797000], dtype=int64). \r\nIt works if I define int32 placeholders. "}