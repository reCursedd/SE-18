{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6131", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6131/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6131/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6131/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/6131", "id": 193911976, "node_id": "MDU6SXNzdWUxOTM5MTE5NzY=", "number": 6131, "title": "tf.get_session_tensor awkwardness", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-12-06T23:07:23Z", "updated_at": "2017-06-23T15:56:53Z", "closed_at": "2017-06-23T15:56:52Z", "author_association": "CONTRIBUTOR", "body_html": "<p><code>tf.get_session_tensor()</code> op constructor is unique in that it needs to be passed output of a session.run call. IE, when you are setting up your graph structure and don't have a relevant handle, you need to do something like this</p>\n<pre><code>dummy_handle = sess.run(tf.get_session_handle(tf.constant(1, dtype=dt)))\ntensor_holder, tensor = tf.get_session_tensor(dummy_handle, dtype=dt)\n\n</code></pre>\n<p>This means that it's incompatible with workflow of \"create graph -&gt; finalize graph -&gt; run ops\" (like when using Supervisor which finalizes graph at the end of <code>init</code>). It seems the reason was to figure out which device the tensor would live on. Would it make sense to have it take device from the current graph context instead of a live tensor handle?</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=2342391\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yuanbyu\">@yuanbyu</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=229914\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/keveman\">@keveman</a></p>", "body_text": "tf.get_session_tensor() op constructor is unique in that it needs to be passed output of a session.run call. IE, when you are setting up your graph structure and don't have a relevant handle, you need to do something like this\ndummy_handle = sess.run(tf.get_session_handle(tf.constant(1, dtype=dt)))\ntensor_holder, tensor = tf.get_session_tensor(dummy_handle, dtype=dt)\n\n\nThis means that it's incompatible with workflow of \"create graph -> finalize graph -> run ops\" (like when using Supervisor which finalizes graph at the end of init). It seems the reason was to figure out which device the tensor would live on. Would it make sense to have it take device from the current graph context instead of a live tensor handle?\n@yuanbyu @keveman", "body": "`tf.get_session_tensor()` op constructor is unique in that it needs to be passed output of a session.run call. IE, when you are setting up your graph structure and don't have a relevant handle, you need to do something like this\r\n\r\n```\r\ndummy_handle = sess.run(tf.get_session_handle(tf.constant(1, dtype=dt)))\r\ntensor_holder, tensor = tf.get_session_tensor(dummy_handle, dtype=dt)\r\n\r\n```\r\nThis means that it's incompatible with workflow of \"create graph -> finalize graph -> run ops\" (like when using Supervisor which finalizes graph at the end of `init`). It seems the reason was to figure out which device the tensor would live on. Would it make sense to have it take device from the current graph context instead of a live tensor handle?\r\n\r\n@yuanbyu @keveman "}