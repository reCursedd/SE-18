{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/278889300", "html_url": "https://github.com/tensorflow/tensorflow/issues/654#issuecomment-278889300", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/654", "id": 278889300, "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODg4OTMwMA==", "user": {"login": "Syndrome777", "id": 6788909, "node_id": "MDQ6VXNlcjY3ODg5MDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6788909?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Syndrome777", "html_url": "https://github.com/Syndrome777", "followers_url": "https://api.github.com/users/Syndrome777/followers", "following_url": "https://api.github.com/users/Syndrome777/following{/other_user}", "gists_url": "https://api.github.com/users/Syndrome777/gists{/gist_id}", "starred_url": "https://api.github.com/users/Syndrome777/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Syndrome777/subscriptions", "organizations_url": "https://api.github.com/users/Syndrome777/orgs", "repos_url": "https://api.github.com/users/Syndrome777/repos", "events_url": "https://api.github.com/users/Syndrome777/events{/privacy}", "received_events_url": "https://api.github.com/users/Syndrome777/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-10T08:48:47Z", "updated_at": "2017-02-10T09:39:09Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hi, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=17009658\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/pbhatia243\">@pbhatia243</a></p>\n<p>Thank you for your repo. It's a good extension.<br>\nBut as <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=252225\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/nikitakit\">@nikitakit</a> says, it seems that your code in Neural Conversion Models repo is not the complete Beam Search. It may be a solution between the argmax greedy method and Beam Search. <strong>And worse still, it will always get wrong responses.</strong></p>\n<div class=\"highlight highlight-source-python\"><pre>    symbols <span class=\"pl-k\">=</span> indices <span class=\"pl-k\">%</span> num_symbols <span class=\"pl-c\"><span class=\"pl-c\">#</span> Which word in vocabulary.</span>\n    beam_parent <span class=\"pl-k\">=</span> indices <span class=\"pl-k\">//</span> num_symbols <span class=\"pl-c\"><span class=\"pl-c\">#</span> Which hypothesis it came from.</span></pre></div>\n<p>When the beam_parent is changed with the previous time stamp, we must reset the state of RNN in this beam path. Then using this state and this input to inference the output.<br>\nIf we don't reset the state, the decoding processing will be in the different beam paths. Do you think so?</p>\n<p>As the normal Beam Search method, the state of the decoder is pruned step by step. It need to reset the state of RNN during decoding.</p>\n<p>Could you add a step to reset the state by the beam_parent in your code?</p>", "body_text": "Hi, @pbhatia243\nThank you for your repo. It's a good extension.\nBut as @nikitakit says, it seems that your code in Neural Conversion Models repo is not the complete Beam Search. It may be a solution between the argmax greedy method and Beam Search. And worse still, it will always get wrong responses.\n    symbols = indices % num_symbols # Which word in vocabulary.\n    beam_parent = indices // num_symbols # Which hypothesis it came from.\nWhen the beam_parent is changed with the previous time stamp, we must reset the state of RNN in this beam path. Then using this state and this input to inference the output.\nIf we don't reset the state, the decoding processing will be in the different beam paths. Do you think so?\nAs the normal Beam Search method, the state of the decoder is pruned step by step. It need to reset the state of RNN during decoding.\nCould you add a step to reset the state by the beam_parent in your code?", "body": "Hi, @pbhatia243 \r\n\r\nThank you for your repo. It's a good extension.\r\nBut as @nikitakit says, it seems that your code in Neural Conversion Models repo is not the complete Beam Search. It may be a solution between the argmax greedy method and Beam Search. **And worse still, it will always get wrong responses.**\r\n```python\r\n    symbols = indices % num_symbols # Which word in vocabulary.\r\n    beam_parent = indices // num_symbols # Which hypothesis it came from.\r\n```\r\nWhen the beam_parent is changed with the previous time stamp, we must reset the state of RNN in this beam path. Then using this state and this input to inference the output. \r\nIf we don't reset the state, the decoding processing will be in the different beam paths. Do you think so?\r\n\r\nAs the normal Beam Search method, the state of the decoder is pruned step by step. It need to reset the state of RNN during decoding.\r\n\r\nCould you add a step to reset the state by the beam_parent in your code?"}