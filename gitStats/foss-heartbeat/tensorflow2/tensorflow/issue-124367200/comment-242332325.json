{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/242332325", "html_url": "https://github.com/tensorflow/tensorflow/issues/654#issuecomment-242332325", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/654", "id": 242332325, "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjMzMjMyNQ==", "user": {"login": "DogNick", "id": 3367917, "node_id": "MDQ6VXNlcjMzNjc5MTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/3367917?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DogNick", "html_url": "https://github.com/DogNick", "followers_url": "https://api.github.com/users/DogNick/followers", "following_url": "https://api.github.com/users/DogNick/following{/other_user}", "gists_url": "https://api.github.com/users/DogNick/gists{/gist_id}", "starred_url": "https://api.github.com/users/DogNick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DogNick/subscriptions", "organizations_url": "https://api.github.com/users/DogNick/orgs", "repos_url": "https://api.github.com/users/DogNick/repos", "events_url": "https://api.github.com/users/DogNick/events{/privacy}", "received_events_url": "https://api.github.com/users/DogNick/received_events", "type": "User", "site_admin": false}, "created_at": "2016-08-25T09:40:54Z", "updated_at": "2016-08-25T09:47:41Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=17009658\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/pbhatia243\">@pbhatia243</a> Hi<br>\nI have read your code <a href=\"url\">https://github.com/pbhatia243/Neural_Conversation_Models/blob/master/my_seq2seq.py#L729</a> for beam_search, and I got several questions maybe you can shed some light on that<br>\n1)line 119<br>\n<code>emb_prev  = tf.reshape(emb_prev,[beam_size,embedding_size])</code>, it seams that <code>emb_prev</code> has a shape of [batch_size * beam_size, embedding_size] before reshape, which i thought might lead to a reshape failure. But if it works , would you explain that for me ?</p>\n<ol start=\"2\">\n<li>line 100<br>\n<code>probs = tf.reshape(probs + log_beam_probs[-1], [-1, beam_size * num_symbols])</code></li>\n</ol>\n<p>As i considered, only when the probs matrix is in beam-major order could this reshape work well,<br>\nlike:<br>\nbatch0_beam0_symbol_vec<br>\nbatch0_beam1_symbol_vec<br>\nbatch0_beam2_symbol_vec<br>\n....<br>\nBut i found that in line  668 - 670</p>\n<pre><code>for kk in range(beam_size):\n      states.append(state)\nstate = tf.reshape(tf.concat(0, states), [-1, state_size])\n</code></pre>\n<p>the  <code>state</code> is constructed in a seemly batch-major manner, which can't be align to the probs (which come from last cell output that takes the concatenation of state and x as input)<br>\nis there anything i missed?</p>", "body_text": "@pbhatia243 Hi\nI have read your code https://github.com/pbhatia243/Neural_Conversation_Models/blob/master/my_seq2seq.py#L729 for beam_search, and I got several questions maybe you can shed some light on that\n1)line 119\nemb_prev  = tf.reshape(emb_prev,[beam_size,embedding_size]), it seams that emb_prev has a shape of [batch_size * beam_size, embedding_size] before reshape, which i thought might lead to a reshape failure. But if it works , would you explain that for me ?\n\nline 100\nprobs = tf.reshape(probs + log_beam_probs[-1], [-1, beam_size * num_symbols])\n\nAs i considered, only when the probs matrix is in beam-major order could this reshape work well,\nlike:\nbatch0_beam0_symbol_vec\nbatch0_beam1_symbol_vec\nbatch0_beam2_symbol_vec\n....\nBut i found that in line  668 - 670\nfor kk in range(beam_size):\n      states.append(state)\nstate = tf.reshape(tf.concat(0, states), [-1, state_size])\n\nthe  state is constructed in a seemly batch-major manner, which can't be align to the probs (which come from last cell output that takes the concatenation of state and x as input)\nis there anything i missed?", "body": "@pbhatia243 Hi\nI have read your code [https://github.com/pbhatia243/Neural_Conversation_Models/blob/master/my_seq2seq.py#L729](url) for beam_search, and I got several questions maybe you can shed some light on that\n1)line 119\n`emb_prev  = tf.reshape(emb_prev,[beam_size,embedding_size])`, it seams that `emb_prev` has a shape of [batch_size \\* beam_size, embedding_size] before reshape, which i thought might lead to a reshape failure. But if it works , would you explain that for me ?\n\n2) line 100\n`probs = tf.reshape(probs + log_beam_probs[-1],\n                               [-1, beam_size * num_symbols])`  \n\n As i considered, only when the probs matrix is in beam-major order could this reshape work well, \nlike:\nbatch0_beam0_symbol_vec\nbatch0_beam1_symbol_vec\nbatch0_beam2_symbol_vec\n....\nBut i found that in line  668 - 670\n\n```\nfor kk in range(beam_size):\n      states.append(state)\nstate = tf.reshape(tf.concat(0, states), [-1, state_size])\n```\n\nthe  `state` is constructed in a seemly batch-major manner, which can't be align to the probs (which come from last cell output that takes the concatenation of state and x as input) \nis there anything i missed?\n"}