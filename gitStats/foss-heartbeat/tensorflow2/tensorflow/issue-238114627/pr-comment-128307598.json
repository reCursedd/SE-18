{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/128307598", "pull_request_review_id": 50975187, "id": 128307598, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyODMwNzU5OA==", "diff_hunk": "@@ -169,10 +169,18 @@ def __call__(self):\n         current_epoch=self._epoch,\n         total_epochs=self._num_epochs)\n \n+    # Get sorted indices and remember how to reorder output.\n+    # This allows for the use of h5py databases which require ordered indexing.\n+    sorted_integer_indexes, reorder_indexes = zip(\n+        *sorted([(value, index)\n+                 for index, value in enumerate(integer_indexes)]))\n+    sorted_integer_indexes = list(sorted_integer_indexes)\n+    reorder_indexes = list(reorder_indexes)\n+\n     self._trav = (integer_indexes[-1] + 1) % self._max\n     feed_dict = {self._index_placeholder: integer_indexes}\n     cols = [\n-        column[integer_indexes]\n+        column[sorted_integer_indexes][reorder_indexes]", "path": "tensorflow/python/estimator/inputs/queues/feeding_functions.py", "position": 17, "original_position": 16, "commit_id": "b84d44de0ec341d6151434c717e31a5729169ec9", "original_commit_id": "fed30674be2b3c4fb7bab4b6689a8fdf6bda66e8", "user": {"login": "xiejw", "id": 1184671, "node_id": "MDQ6VXNlcjExODQ2NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1184671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiejw", "html_url": "https://github.com/xiejw", "followers_url": "https://api.github.com/users/xiejw/followers", "following_url": "https://api.github.com/users/xiejw/following{/other_user}", "gists_url": "https://api.github.com/users/xiejw/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiejw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiejw/subscriptions", "organizations_url": "https://api.github.com/users/xiejw/orgs", "repos_url": "https://api.github.com/users/xiejw/repos", "events_url": "https://api.github.com/users/xiejw/events{/privacy}", "received_events_url": "https://api.github.com/users/xiejw/received_events", "type": "User", "site_admin": false}, "body": "After digging into details, I think this line has a bug. You meant to put the elements into position reorder_indexes, but instead, here it is getting the elements from position reorder_indexes. I should catch this earlier. Sorry.\r\n\r\n(I was also worrying about performance if this line does the expected assigning). \r\n\r\nOne mini example could be:\r\n\r\n>>> a = np.array([10, 20, 30, 40])\r\n>>> i = [0, 1, 2, 3, 0, 1, 2, 3]                                                                                                                                                                                                                                                                                              \r\n>>> a[i]\r\narray([10, 20, 30, 40, 10, 20, 30, 40])\r\n>>> sorted_integer_indexes, reorder_indexes = zip(*sorted([(value, index) for index, value in enumerate(i)]))\r\n>>> sorted_integer_indexes = list(sorted_integer_indexes)\r\n>>> reorder_indexes = list(reorder_indexes)\r\n>>> reorder_indexes\r\n[0, 4, 1, 5, 2, 6, 3, 7]\r\n>>> a[sorted_integer_indexes][reorder_indexes]\r\narray([10, 30, 10, 30, 20, 40, 20, 40])\r\n", "created_at": "2017-07-19T17:06:56Z", "updated_at": "2017-07-20T09:10:38Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/11010#discussion_r128307598", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11010", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/128307598"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/11010#discussion_r128307598"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11010"}}, "body_html": "<p>After digging into details, I think this line has a bug. You meant to put the elements into position reorder_indexes, but instead, here it is getting the elements from position reorder_indexes. I should catch this earlier. Sorry.</p>\n<p>(I was also worrying about performance if this line does the expected assigning).</p>\n<p>One mini example could be:</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>a = np.array([10, 20, 30, 40])<br>\ni = [0, 1, 2, 3, 0, 1, 2, 3]<br>\na[i]<br>\narray([10, 20, 30, 40, 10, 20, 30, 40])<br>\nsorted_integer_indexes, reorder_indexes = zip(*sorted([(value, index) for index, value in enumerate(i)]))<br>\nsorted_integer_indexes = list(sorted_integer_indexes)<br>\nreorder_indexes = list(reorder_indexes)<br>\nreorder_indexes<br>\n[0, 4, 1, 5, 2, 6, 3, 7]<br>\na[sorted_integer_indexes][reorder_indexes]<br>\narray([10, 30, 10, 30, 20, 40, 20, 40])</p>\n</blockquote>\n</blockquote>\n</blockquote>", "body_text": "After digging into details, I think this line has a bug. You meant to put the elements into position reorder_indexes, but instead, here it is getting the elements from position reorder_indexes. I should catch this earlier. Sorry.\n(I was also worrying about performance if this line does the expected assigning).\nOne mini example could be:\n\n\n\na = np.array([10, 20, 30, 40])\ni = [0, 1, 2, 3, 0, 1, 2, 3]\na[i]\narray([10, 20, 30, 40, 10, 20, 30, 40])\nsorted_integer_indexes, reorder_indexes = zip(*sorted([(value, index) for index, value in enumerate(i)]))\nsorted_integer_indexes = list(sorted_integer_indexes)\nreorder_indexes = list(reorder_indexes)\nreorder_indexes\n[0, 4, 1, 5, 2, 6, 3, 7]\na[sorted_integer_indexes][reorder_indexes]\narray([10, 30, 10, 30, 20, 40, 20, 40])"}