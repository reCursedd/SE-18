{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/130202027", "pull_request_review_id": 53056830, "id": 130202027, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDIwMjAyNw==", "diff_hunk": "@@ -541,6 +541,9 @@ def pow(x, y, name=None):\n     A `Tensor`.\n   \"\"\"\n   with ops.name_scope(name, \"Pow\", [x]) as name:\n+    if 'int' in str(x.dtype):\n+      tf.assert_negative(y,", "path": "tensorflow/python/ops/math_ops.py", "position": null, "original_position": 5, "commit_id": "26ae4b572bcc916d9219714483da41bbe894b0b0", "original_commit_id": "f97200e86d1333e5f7341fe678a5de0c0e66e11a", "user": {"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}, "body": "don't you mean tf.assert_positive here?\r\nalso, I don't think this strategy will work. You need to make sure that there is not any negative exponents for example.\r\nfor example this will hang but doesn't have a consistent tf.assert_positive() or negative()\r\n\r\nI'd start by writing a set of unit tests you want to prevent from haing i.e.\r\n```\r\nsess.run(tf.pow([5,2],[-2,3]))\r\nsess.run(tf.pow([5,2],[2,-3]))\r\nsess.run(tf.pow([5,2],-3))\r\n```", "created_at": "2017-07-28T23:02:55Z", "updated_at": "2017-07-29T21:59:33Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/11852#discussion_r130202027", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11852", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/130202027"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/11852#discussion_r130202027"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11852"}}, "body_html": "<p>don't you mean tf.assert_positive here?<br>\nalso, I don't think this strategy will work. You need to make sure that there is not any negative exponents for example.<br>\nfor example this will hang but doesn't have a consistent tf.assert_positive() or negative()</p>\n<p>I'd start by writing a set of unit tests you want to prevent from haing i.e.</p>\n<pre><code>sess.run(tf.pow([5,2],[-2,3]))\nsess.run(tf.pow([5,2],[2,-3]))\nsess.run(tf.pow([5,2],-3))\n</code></pre>", "body_text": "don't you mean tf.assert_positive here?\nalso, I don't think this strategy will work. You need to make sure that there is not any negative exponents for example.\nfor example this will hang but doesn't have a consistent tf.assert_positive() or negative()\nI'd start by writing a set of unit tests you want to prevent from haing i.e.\nsess.run(tf.pow([5,2],[-2,3]))\nsess.run(tf.pow([5,2],[2,-3]))\nsess.run(tf.pow([5,2],-3))"}