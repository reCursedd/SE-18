{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10265", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10265/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10265/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10265/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10265", "id": 231893294, "node_id": "MDU6SXNzdWUyMzE4OTMyOTQ=", "number": 10265, "title": "Possible Bug: tensorflow.cholesky_solve", "user": {"login": "jim24", "id": 8779890, "node_id": "MDQ6VXNlcjg3Nzk4OTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/8779890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jim24", "html_url": "https://github.com/jim24", "followers_url": "https://api.github.com/users/jim24/followers", "following_url": "https://api.github.com/users/jim24/following{/other_user}", "gists_url": "https://api.github.com/users/jim24/gists{/gist_id}", "starred_url": "https://api.github.com/users/jim24/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jim24/subscriptions", "organizations_url": "https://api.github.com/users/jim24/orgs", "repos_url": "https://api.github.com/users/jim24/repos", "events_url": "https://api.github.com/users/jim24/events{/privacy}", "received_events_url": "https://api.github.com/users/jim24/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-05-28T20:46:14Z", "updated_at": "2017-11-14T06:03:11Z", "closed_at": "2017-11-14T06:03:11Z", "author_association": "NONE", "body_html": "<p>I wrote a script to compare the output of a very simple linear system with simple matrix inversion a la <a href=\"https://www.tensorflow.org/versions/r0.11/api_docs/python/math_ops/matrix_math_functions#matrix_inverse\" rel=\"nofollow\">tensorflow.matrix_inverse</a>, the non-cholesky based matrix equation solver <a href=\"https://www.tensorflow.org/versions/r0.11/api_docs/python/math_ops/matrix_math_functions#matrix_solve\" rel=\"nofollow\">tensorflow.matrix_solve</a>, and <a href=\"https://www.tensorflow.org/versions/r0.11/api_docs/python/math_ops/matrix_math_functions#cholesky_solve\" rel=\"nofollow\">tensorflow.cholesky_solve</a>.</p>\n<p>According to my understanding of the docs I've linked, these three cases should all yield a solution of the <code>I/2</code>, but this is not the case for <code>tensorflow.cholesky_solve</code>. Perhaps I'm misunderstanding the docs?</p>\n<pre><code>import tensorflow as tf\n\nI = tf.eye(2, dtype=tf.float32)\nX = 2 * tf.eye(2, dtype=tf.float32)\nX_inv = tf.matrix_inverse(X)\nX_solve = tf.matrix_solve(X, I)\nX_chol_solve = tf.cholesky_solve(tf.cholesky(X), I)\n\nwith tf.Session() as sess:\n    for x in [X_inv, X_solve, X_chol_solve]:\n        print('{}:\\n{}'.format(x.name, sess.run(x)))\n        print\n</code></pre>\n<p>yielding output:</p>\n<pre><code>MatrixInverse:0:\n[[ 0.5  0. ]\n [ 0.   0.5]]\n\nMatrixSolve:0:\n[[ 0.5  0. ]\n [ 0.   0.5]]\n\ncholesky_solve/MatrixTriangularSolve_1:0:\n[[ 1.  0.]\n [ 0.  1.]]    \n\nProcess finished with exit code 0\n</code></pre>\n<h3>System information</h3>\n<ul>\n<li><strong>OS: Ubuntu 16.04 xenial</strong></li>\n<li><strong>Kernel: x86_64 Linux 4.8.0-52-generic</strong></li>\n<li><strong>TensorFlow installed from binary</strong></li>\n<li><strong>TensorFlow version ('v1.1.0-rc0-61-g1ec6ed5', '1.1.0')</strong></li>\n<li><strong>Cuda compilation tools, release 8.0, V8.0.61</strong></li>\n<li><strong>GTX 1070 8GB</strong></li>\n</ul>", "body_text": "I wrote a script to compare the output of a very simple linear system with simple matrix inversion a la tensorflow.matrix_inverse, the non-cholesky based matrix equation solver tensorflow.matrix_solve, and tensorflow.cholesky_solve.\nAccording to my understanding of the docs I've linked, these three cases should all yield a solution of the I/2, but this is not the case for tensorflow.cholesky_solve. Perhaps I'm misunderstanding the docs?\nimport tensorflow as tf\n\nI = tf.eye(2, dtype=tf.float32)\nX = 2 * tf.eye(2, dtype=tf.float32)\nX_inv = tf.matrix_inverse(X)\nX_solve = tf.matrix_solve(X, I)\nX_chol_solve = tf.cholesky_solve(tf.cholesky(X), I)\n\nwith tf.Session() as sess:\n    for x in [X_inv, X_solve, X_chol_solve]:\n        print('{}:\\n{}'.format(x.name, sess.run(x)))\n        print\n\nyielding output:\nMatrixInverse:0:\n[[ 0.5  0. ]\n [ 0.   0.5]]\n\nMatrixSolve:0:\n[[ 0.5  0. ]\n [ 0.   0.5]]\n\ncholesky_solve/MatrixTriangularSolve_1:0:\n[[ 1.  0.]\n [ 0.  1.]]    \n\nProcess finished with exit code 0\n\nSystem information\n\nOS: Ubuntu 16.04 xenial\nKernel: x86_64 Linux 4.8.0-52-generic\nTensorFlow installed from binary\nTensorFlow version ('v1.1.0-rc0-61-g1ec6ed5', '1.1.0')\nCuda compilation tools, release 8.0, V8.0.61\nGTX 1070 8GB", "body": "I wrote a script to compare the output of a very simple linear system with simple matrix inversion a la [tensorflow.matrix_inverse](https://www.tensorflow.org/versions/r0.11/api_docs/python/math_ops/matrix_math_functions#matrix_inverse), the non-cholesky based matrix equation solver [tensorflow.matrix_solve](https://www.tensorflow.org/versions/r0.11/api_docs/python/math_ops/matrix_math_functions#matrix_solve), and [tensorflow.cholesky_solve](https://www.tensorflow.org/versions/r0.11/api_docs/python/math_ops/matrix_math_functions#cholesky_solve).\r\n\r\nAccording to my understanding of the docs I've linked, these three cases should all yield a solution of the `I/2`, but this is not the case for `tensorflow.cholesky_solve`. Perhaps I'm misunderstanding the docs? \r\n\r\n    import tensorflow as tf\r\n    \r\n    I = tf.eye(2, dtype=tf.float32)\r\n    X = 2 * tf.eye(2, dtype=tf.float32)\r\n    X_inv = tf.matrix_inverse(X)\r\n    X_solve = tf.matrix_solve(X, I)\r\n    X_chol_solve = tf.cholesky_solve(tf.cholesky(X), I)\r\n    \r\n    with tf.Session() as sess:\r\n        for x in [X_inv, X_solve, X_chol_solve]:\r\n            print('{}:\\n{}'.format(x.name, sess.run(x)))\r\n            print\r\n\r\nyielding output:\r\n\r\n    MatrixInverse:0:\r\n    [[ 0.5  0. ]\r\n     [ 0.   0.5]]\r\n    \r\n    MatrixSolve:0:\r\n    [[ 0.5  0. ]\r\n     [ 0.   0.5]]\r\n    \r\n    cholesky_solve/MatrixTriangularSolve_1:0:\r\n    [[ 1.  0.]\r\n     [ 0.  1.]]    \r\n    \r\n    Process finished with exit code 0\r\n\r\n### System information\r\n- **OS: Ubuntu 16.04 xenial**\r\n- **Kernel: x86_64 Linux 4.8.0-52-generic**\r\n- **TensorFlow installed from binary**\r\n- **TensorFlow version ('v1.1.0-rc0-61-g1ec6ed5', '1.1.0')**\r\n- **Cuda compilation tools, release 8.0, V8.0.61**\r\n- **GTX 1070 8GB**\r\n\r\n\r\n\r\n"}