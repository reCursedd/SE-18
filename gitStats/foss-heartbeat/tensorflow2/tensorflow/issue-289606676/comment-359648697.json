{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/359648697", "html_url": "https://github.com/tensorflow/tensorflow/pull/16220#issuecomment-359648697", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16220", "id": 359648697, "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTY0ODY5Nw==", "user": {"login": "lspvic", "id": 4335658, "node_id": "MDQ6VXNlcjQzMzU2NTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/4335658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lspvic", "html_url": "https://github.com/lspvic", "followers_url": "https://api.github.com/users/lspvic/followers", "following_url": "https://api.github.com/users/lspvic/following{/other_user}", "gists_url": "https://api.github.com/users/lspvic/gists{/gist_id}", "starred_url": "https://api.github.com/users/lspvic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lspvic/subscriptions", "organizations_url": "https://api.github.com/users/lspvic/orgs", "repos_url": "https://api.github.com/users/lspvic/repos", "events_url": "https://api.github.com/users/lspvic/events{/privacy}", "received_events_url": "https://api.github.com/users/lspvic/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-23T02:11:01Z", "updated_at": "2018-01-23T02:11:01Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16907534\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rmlarsen\">@rmlarsen</a><br>\nI also found a problem with the previous check code on <code>axes</code>, which needs <code>axes&gt;= 1</code>.</p>\n<pre><code>      if axes &lt; 1:\n        raise ValueError(\"'axes' must be at least 1.\")\n</code></pre>\n<p>However, <code>axes=0</code> is also correct in numpy meaning tensor outer product a \u2297 b in <a href=\"https://docs.scipy.org/doc/numpy-1.13.0/reference/generated/numpy.tensordot.html\" rel=\"nofollow\">np.tensordot</a>. Moreover,<br>\nthe equivalent <code>axes=[[], []]</code> is  correctly behaved in current tensorflow code. So, I change the code<br>\nto</p>\n<pre><code>      if axes &lt; 0:\n        raise ValueError(\"'axes' must be at least 0.\")\n</code></pre>\n<p>And also, checks that <code>axes</code> less equal than the ndim of tensor's shape for meaning of the last or first N dimensions.</p>\n<p>Another doubt on that <code>np.tensordot</code> has a default <code>axes=2</code>  for tensor double contraction, is it necessary to change the <code>tf.tensordot</code> behavior more like numpy?</p>", "body_text": "@rmlarsen\nI also found a problem with the previous check code on axes, which needs axes>= 1.\n      if axes < 1:\n        raise ValueError(\"'axes' must be at least 1.\")\n\nHowever, axes=0 is also correct in numpy meaning tensor outer product a \u2297 b in np.tensordot. Moreover,\nthe equivalent axes=[[], []] is  correctly behaved in current tensorflow code. So, I change the code\nto\n      if axes < 0:\n        raise ValueError(\"'axes' must be at least 0.\")\n\nAnd also, checks that axes less equal than the ndim of tensor's shape for meaning of the last or first N dimensions.\nAnother doubt on that np.tensordot has a default axes=2  for tensor double contraction, is it necessary to change the tf.tensordot behavior more like numpy?", "body": "@rmlarsen \r\nI also found a problem with the previous check code on `axes`, which needs `axes>= 1`. \r\n```\r\n      if axes < 1:\r\n        raise ValueError(\"'axes' must be at least 1.\")\r\n```\r\nHowever, `axes=0` is also correct in numpy meaning tensor outer product a \u2297 b in [np.tensordot](https://docs.scipy.org/doc/numpy-1.13.0/reference/generated/numpy.tensordot.html). Moreover,\r\nthe equivalent `axes=[[], []]` is  correctly behaved in current tensorflow code. So, I change the code \r\nto\r\n```\r\n      if axes < 0:\r\n        raise ValueError(\"'axes' must be at least 0.\")\r\n```\r\nAnd also, checks that `axes` less equal than the ndim of tensor's shape for meaning of the last or first N dimensions.\r\n\r\n\r\nAnother doubt on that `np.tensordot` has a default `axes=2`  for tensor double contraction, is it necessary to change the `tf.tensordot` behavior more like numpy?"}