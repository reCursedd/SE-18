{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/225665499", "html_url": "https://github.com/tensorflow/tensorflow/issues/2781#issuecomment-225665499", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2781", "id": 225665499, "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTY2NTQ5OQ==", "user": {"login": "kingtaurus", "id": 2761482, "node_id": "MDQ6VXNlcjI3NjE0ODI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2761482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kingtaurus", "html_url": "https://github.com/kingtaurus", "followers_url": "https://api.github.com/users/kingtaurus/followers", "following_url": "https://api.github.com/users/kingtaurus/following{/other_user}", "gists_url": "https://api.github.com/users/kingtaurus/gists{/gist_id}", "starred_url": "https://api.github.com/users/kingtaurus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kingtaurus/subscriptions", "organizations_url": "https://api.github.com/users/kingtaurus/orgs", "repos_url": "https://api.github.com/users/kingtaurus/repos", "events_url": "https://api.github.com/users/kingtaurus/events{/privacy}", "received_events_url": "https://api.github.com/users/kingtaurus/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-13T18:21:35Z", "updated_at": "2016-06-13T18:32:36Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=849162\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/connormclaud\">@connormclaud</a> There is <strong>bug</strong> in your code. You are only running the learning step once every 100 batches (your indentation level means that it will be executed during the <strong><code>if</code></strong> statement);</p>\n<pre><code>        for i in range(20000):\n            batch = mnist.train.next_batch(50)\n            if i % 100 == 0:\n                train_accuracy = accuracy.eval(\n                    feed_dict={\n                        x:batch[0], y_: batch[1], keep_prob: 1.0})\n                print(\"step %d, training accuracy %g\"%(i, train_accuracy))\n                train_step.run(\n                    feed_dict={x: batch[0], y_: batch[1], keep_prob: 0.5})\n</code></pre>\n<p>Should be:</p>\n<pre><code>        for i in range(20000):\n            batch = mnist.train.next_batch(50)\n            train_step.run(\n                    feed_dict={x: batch[0], y_: batch[1], keep_prob: 0.5})\n            if i % 100 == 0:\n                train_accuracy = accuracy.eval(\n                    feed_dict={\n                        x:batch[0], y_: batch[1], keep_prob: 1.0})\n                print(\"step %d, training accuracy %g\"%(i, train_accuracy))\n</code></pre>", "body_text": "@connormclaud There is bug in your code. You are only running the learning step once every 100 batches (your indentation level means that it will be executed during the if statement);\n        for i in range(20000):\n            batch = mnist.train.next_batch(50)\n            if i % 100 == 0:\n                train_accuracy = accuracy.eval(\n                    feed_dict={\n                        x:batch[0], y_: batch[1], keep_prob: 1.0})\n                print(\"step %d, training accuracy %g\"%(i, train_accuracy))\n                train_step.run(\n                    feed_dict={x: batch[0], y_: batch[1], keep_prob: 0.5})\n\nShould be:\n        for i in range(20000):\n            batch = mnist.train.next_batch(50)\n            train_step.run(\n                    feed_dict={x: batch[0], y_: batch[1], keep_prob: 0.5})\n            if i % 100 == 0:\n                train_accuracy = accuracy.eval(\n                    feed_dict={\n                        x:batch[0], y_: batch[1], keep_prob: 1.0})\n                print(\"step %d, training accuracy %g\"%(i, train_accuracy))", "body": "@connormclaud There is **bug** in your code. You are only running the learning step once every 100 batches (your indentation level means that it will be executed during the **`if`** statement);\n\n```\n        for i in range(20000):\n            batch = mnist.train.next_batch(50)\n            if i % 100 == 0:\n                train_accuracy = accuracy.eval(\n                    feed_dict={\n                        x:batch[0], y_: batch[1], keep_prob: 1.0})\n                print(\"step %d, training accuracy %g\"%(i, train_accuracy))\n                train_step.run(\n                    feed_dict={x: batch[0], y_: batch[1], keep_prob: 0.5})\n```\n\nShould be:\n\n```\n        for i in range(20000):\n            batch = mnist.train.next_batch(50)\n            train_step.run(\n                    feed_dict={x: batch[0], y_: batch[1], keep_prob: 0.5})\n            if i % 100 == 0:\n                train_accuracy = accuracy.eval(\n                    feed_dict={\n                        x:batch[0], y_: batch[1], keep_prob: 1.0})\n                print(\"step %d, training accuracy %g\"%(i, train_accuracy))\n```\n"}