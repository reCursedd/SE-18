{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/240219295", "html_url": "https://github.com/tensorflow/tensorflow/issues/3854#issuecomment-240219295", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3854", "id": 240219295, "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDIxOTI5NQ==", "user": {"login": "sherrym", "id": 12770037, "node_id": "MDQ6VXNlcjEyNzcwMDM3", "avatar_url": "https://avatars0.githubusercontent.com/u/12770037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherrym", "html_url": "https://github.com/sherrym", "followers_url": "https://api.github.com/users/sherrym/followers", "following_url": "https://api.github.com/users/sherrym/following{/other_user}", "gists_url": "https://api.github.com/users/sherrym/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherrym/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherrym/subscriptions", "organizations_url": "https://api.github.com/users/sherrym/orgs", "repos_url": "https://api.github.com/users/sherrym/repos", "events_url": "https://api.github.com/users/sherrym/events{/privacy}", "received_events_url": "https://api.github.com/users/sherrym/received_events", "type": "User", "site_admin": false}, "created_at": "2016-08-16T19:58:47Z", "updated_at": "2016-08-16T19:58:47Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hi <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9464836\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/shawnjhenry\">@shawnjhenry</a> . 0.10.0rc0 has the older implementation where self_adjoint_eig returns a single value. The documentation you are reading online is the live version with this particular change:</p>\n<h1></h1>\n<p>Changes {batch_}self_adjoint_eig ops to return eigenvalues and eigenv\u2026<br>\n\u2026ectors as separate outputs. This is implemented as a new set of kernels SelfAdjointEigV2 and BatchSelfAdjointEigV2. {batch_}self_adjoint_eig become Python wrappers that call the new kernels.</p>\n<p>Adds new ops self_adjoint_eigvals and batch_self_adjoint_eigvals that compute the eigenvalues but not the eigenvectors, which is faster and uses less memory than computing both.</p>\n<p>NOTICE: This changes the public API and TensorFlow models calling tf.self_adjoint_eig or tf.batch_self_adjoint_eig from Python will most likely break. Models saved as serialized graphs should be unaffected.</p>\n<p>This CL also cleans up the python shape inference functions in linalg_ops.py a bit.</p>\n<h1>Change: 129390113</h1>\n<p>So you code will work as you expect with the next release.</p>", "body_text": "Hi @shawnjhenry . 0.10.0rc0 has the older implementation where self_adjoint_eig returns a single value. The documentation you are reading online is the live version with this particular change:\n\nChanges {batch_}self_adjoint_eig ops to return eigenvalues and eigenv\u2026\n\u2026ectors as separate outputs. This is implemented as a new set of kernels SelfAdjointEigV2 and BatchSelfAdjointEigV2. {batch_}self_adjoint_eig become Python wrappers that call the new kernels.\nAdds new ops self_adjoint_eigvals and batch_self_adjoint_eigvals that compute the eigenvalues but not the eigenvectors, which is faster and uses less memory than computing both.\nNOTICE: This changes the public API and TensorFlow models calling tf.self_adjoint_eig or tf.batch_self_adjoint_eig from Python will most likely break. Models saved as serialized graphs should be unaffected.\nThis CL also cleans up the python shape inference functions in linalg_ops.py a bit.\nChange: 129390113\nSo you code will work as you expect with the next release.", "body": "Hi @shawnjhenry . 0.10.0rc0 has the older implementation where self_adjoint_eig returns a single value. The documentation you are reading online is the live version with this particular change:\n\n# \n\nChanges {batch_}self_adjoint_eig ops to return eigenvalues and eigenv\u2026\n\u2026ectors as separate outputs. This is implemented as a new set of kernels SelfAdjointEigV2 and BatchSelfAdjointEigV2. {batch_}self_adjoint_eig become Python wrappers that call the new kernels.\n\nAdds new ops self_adjoint_eigvals and batch_self_adjoint_eigvals that compute the eigenvalues but not the eigenvectors, which is faster and uses less memory than computing both.\n\nNOTICE: This changes the public API and TensorFlow models calling tf.self_adjoint_eig or tf.batch_self_adjoint_eig from Python will most likely break. Models saved as serialized graphs should be unaffected.\n\nThis CL also cleans up the python shape inference functions in linalg_ops.py a bit.\n\n# Change: 129390113\n\nSo you code will work as you expect with the next release.\n"}