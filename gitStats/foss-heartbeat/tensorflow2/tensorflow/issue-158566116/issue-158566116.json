{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2671", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2671/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2671/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2671/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/2671", "id": 158566116, "node_id": "MDU6SXNzdWUxNTg1NjYxMTY=", "number": 2671, "title": "image_retraining example creates inconsistently named nodes when run multiple times", "user": {"login": "kuza55", "id": 387986, "node_id": "MDQ6VXNlcjM4Nzk4Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/387986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kuza55", "html_url": "https://github.com/kuza55", "followers_url": "https://api.github.com/users/kuza55/followers", "following_url": "https://api.github.com/users/kuza55/following{/other_user}", "gists_url": "https://api.github.com/users/kuza55/gists{/gist_id}", "starred_url": "https://api.github.com/users/kuza55/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kuza55/subscriptions", "organizations_url": "https://api.github.com/users/kuza55/orgs", "repos_url": "https://api.github.com/users/kuza55/repos", "events_url": "https://api.github.com/users/kuza55/events{/privacy}", "received_events_url": "https://api.github.com/users/kuza55/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-05T17:59:38Z", "updated_at": "2016-09-10T05:38:20Z", "closed_at": "2016-06-07T18:08:03Z", "author_association": "NONE", "body_html": "<p>I don't know if this is a thing you want to support, but I've been running the image_retraining example from Jupyter like so:</p>\n<p>FLAGS._parse_flags()<br>\nFLAGS.image_dir = '/data/corpus'<br>\nFLAGS.output_graph = '/data/output_graph4.pb'<br>\nFLAGS.output_labels = '/data/output_labels4.txt'<br>\nFLAGS.bottleneck_dir = '/data/bottleneck/'<br>\nFLAGS.model_dir = '/data/imagenet/'</p>\n<p>main('')</p>\n<p>Unlike the example, I end up running the example multiple times in the same python process, and .: in the same default graph, so everything after the first run is badly named when output, i.e. instead of being named DecodeJpeg, I found DecodeJpeg_3</p>\n<p>Adding tf.reset_default_graph() to the top of main fixes this.</p>", "body_text": "I don't know if this is a thing you want to support, but I've been running the image_retraining example from Jupyter like so:\nFLAGS._parse_flags()\nFLAGS.image_dir = '/data/corpus'\nFLAGS.output_graph = '/data/output_graph4.pb'\nFLAGS.output_labels = '/data/output_labels4.txt'\nFLAGS.bottleneck_dir = '/data/bottleneck/'\nFLAGS.model_dir = '/data/imagenet/'\nmain('')\nUnlike the example, I end up running the example multiple times in the same python process, and .: in the same default graph, so everything after the first run is badly named when output, i.e. instead of being named DecodeJpeg, I found DecodeJpeg_3\nAdding tf.reset_default_graph() to the top of main fixes this.", "body": "I don't know if this is a thing you want to support, but I've been running the image_retraining example from Jupyter like so:\n\nFLAGS._parse_flags()\nFLAGS.image_dir = '/data/corpus'\nFLAGS.output_graph = '/data/output_graph4.pb'\nFLAGS.output_labels = '/data/output_labels4.txt'\nFLAGS.bottleneck_dir = '/data/bottleneck/'\nFLAGS.model_dir = '/data/imagenet/'\n\nmain('')\n\nUnlike the example, I end up running the example multiple times in the same python process, and .: in the same default graph, so everything after the first run is badly named when output, i.e. instead of being named DecodeJpeg, I found DecodeJpeg_3\n\nAdding tf.reset_default_graph() to the top of main fixes this.\n"}