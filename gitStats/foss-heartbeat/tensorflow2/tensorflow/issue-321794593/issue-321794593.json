{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19191", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19191/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19191/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19191/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19191", "id": 321794593, "node_id": "MDU6SXNzdWUzMjE3OTQ1OTM=", "number": 19191, "title": "GPU cannot use in C++ API when using libtensorflow_cc.so", "user": {"login": "xiaowenhe", "id": 28335784, "node_id": "MDQ6VXNlcjI4MzM1Nzg0", "avatar_url": "https://avatars3.githubusercontent.com/u/28335784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiaowenhe", "html_url": "https://github.com/xiaowenhe", "followers_url": "https://api.github.com/users/xiaowenhe/followers", "following_url": "https://api.github.com/users/xiaowenhe/following{/other_user}", "gists_url": "https://api.github.com/users/xiaowenhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiaowenhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiaowenhe/subscriptions", "organizations_url": "https://api.github.com/users/xiaowenhe/orgs", "repos_url": "https://api.github.com/users/xiaowenhe/repos", "events_url": "https://api.github.com/users/xiaowenhe/events{/privacy}", "received_events_url": "https://api.github.com/users/xiaowenhe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2018-05-10T03:09:55Z", "updated_at": "2018-05-21T04:46:25Z", "closed_at": "2018-05-21T04:46:25Z", "author_association": "NONE", "body_html": "<p>My purpose is using C++ api with libtensorflow_cc.so for detection.</p>\n<p>First , compile the libtensorflow_cc.so.<br>\nI do like;<br>\n1   ./configure.       I choose CUDA support, and cuda 9.1 and cudnn 7 is used.<br>\n2 bazel the tensorflow .     bazel build -c opt --config=cuda //tensorlfow:libtensorflow_cc.so.<br>\nAt last ,complete sucessfully.</p>\n<p>My code like:</p>\n<p>#include &lt;tensorflow/core/protobuf/meta_graph.pb.h&gt;<br>\n#include &lt;tensorflow/core/public/session.h&gt;<br>\n#include &lt;tensorflow/core/graph/default_device.h&gt;<br>\n#include &lt;tensorflow/core/graph/graph_def_builder.h&gt;</p>\n<p>tensorflow::GraphDef GraphDef;<br>\ntensorflow::Session* Session = nullptr;</p>\n<p>1 void LoadGraph()<br>\n2 {<br>\n3 // Read in the protobuf graph we exported<br>\n4 tensorflow::Status Status;<br>\n5<br>\n6 Status = tensorflow::ReadBinaryProto(tensorflow::Env::Default(), \"my_model.pb\", &amp;GraphDef);<br>\n7 if (!Status.ok())<br>\n8 {<br>\n9 printf(\"Error reading graph definition from %s: %s\\n\", \"my_model.pb\", Status.ToString().c_str());<br>\n10 return false;<br>\n11 }<br>\n12<br>\n13 Session = tensorflow::NewSession(tensorflow::SessionOptions());<br>\n14 if (Session == nullptr)<br>\n15 {<br>\n16 printf(\"Could not create Tensorflow session.\\n\");<br>\n17 return false;<br>\n18 }<br>\n19<br>\n20 graph::SetDefaultDevice(\"/device:GPU:0\",&amp;GraphDef);</p>\n<p>21 // Add the graph to the session<br>\n22 Status = Session-&gt;Create(GraphDef);<br>\n23 if (!Status.ok())<br>\n24 {<br>\n25 printf(\"Error creating graph: %s\\n\", Status.ToString().c_str());<br>\n26 return false;<br>\n27 }<br>\n28 }</p>\n<p>But the code will be get an error.   The line 25 will be run.  That is say in line 23, Status.ok() = false.</p>\n<p>Segmentation fault(core dumped)..   I do not know how to deal with it.</p>\n<p>Can anyone help me? Thank you very much!  Please to me soon !</p>", "body_text": "My purpose is using C++ api with libtensorflow_cc.so for detection.\nFirst , compile the libtensorflow_cc.so.\nI do like;\n1   ./configure.       I choose CUDA support, and cuda 9.1 and cudnn 7 is used.\n2 bazel the tensorflow .     bazel build -c opt --config=cuda //tensorlfow:libtensorflow_cc.so.\nAt last ,complete sucessfully.\nMy code like:\n#include <tensorflow/core/protobuf/meta_graph.pb.h>\n#include <tensorflow/core/public/session.h>\n#include <tensorflow/core/graph/default_device.h>\n#include <tensorflow/core/graph/graph_def_builder.h>\ntensorflow::GraphDef GraphDef;\ntensorflow::Session* Session = nullptr;\n1 void LoadGraph()\n2 {\n3 // Read in the protobuf graph we exported\n4 tensorflow::Status Status;\n5\n6 Status = tensorflow::ReadBinaryProto(tensorflow::Env::Default(), \"my_model.pb\", &GraphDef);\n7 if (!Status.ok())\n8 {\n9 printf(\"Error reading graph definition from %s: %s\\n\", \"my_model.pb\", Status.ToString().c_str());\n10 return false;\n11 }\n12\n13 Session = tensorflow::NewSession(tensorflow::SessionOptions());\n14 if (Session == nullptr)\n15 {\n16 printf(\"Could not create Tensorflow session.\\n\");\n17 return false;\n18 }\n19\n20 graph::SetDefaultDevice(\"/device:GPU:0\",&GraphDef);\n21 // Add the graph to the session\n22 Status = Session->Create(GraphDef);\n23 if (!Status.ok())\n24 {\n25 printf(\"Error creating graph: %s\\n\", Status.ToString().c_str());\n26 return false;\n27 }\n28 }\nBut the code will be get an error.   The line 25 will be run.  That is say in line 23, Status.ok() = false.\nSegmentation fault(core dumped)..   I do not know how to deal with it.\nCan anyone help me? Thank you very much!  Please to me soon !", "body": "My purpose is using C++ api with libtensorflow_cc.so for detection. \r\n\r\nFirst , compile the libtensorflow_cc.so. \r\nI do like;\r\n1   ./configure.       I choose CUDA support, and cuda 9.1 and cudnn 7 is used.\r\n2 bazel the tensorflow .     bazel build -c opt --config=cuda //tensorlfow:libtensorflow_cc.so.\r\nAt last ,complete sucessfully.\r\n\r\nMy code like:\r\n\r\n#include <tensorflow/core/protobuf/meta_graph.pb.h>\r\n#include <tensorflow/core/public/session.h>\r\n#include <tensorflow/core/graph/default_device.h>\r\n#include <tensorflow/core/graph/graph_def_builder.h>\r\n\r\ntensorflow::GraphDef GraphDef;\r\ntensorflow::Session* Session = nullptr;\r\n\r\n1 void LoadGraph()\r\n2 {\r\n3 // Read in the protobuf graph we exported\r\n4 tensorflow::Status Status;\r\n5\r\n6 Status = tensorflow::ReadBinaryProto(tensorflow::Env::Default(), \"my_model.pb\", &GraphDef);\r\n7 if (!Status.ok())\r\n8 {\r\n9 printf(\"Error reading graph definition from %s: %s\\n\", \"my_model.pb\", Status.ToString().c_str());\r\n10 return false;\r\n11 }\r\n12\r\n13 Session = tensorflow::NewSession(tensorflow::SessionOptions());\r\n14 if (Session == nullptr)\r\n15 {\r\n16 printf(\"Could not create Tensorflow session.\\n\");\r\n17 return false;\r\n18 }\r\n19\r\n20 graph::SetDefaultDevice(\"/device:GPU:0\",&GraphDef);\r\n\r\n21 // Add the graph to the session\r\n22 Status = Session->Create(GraphDef);\r\n23 if (!Status.ok())\r\n24 {\r\n25 printf(\"Error creating graph: %s\\n\", Status.ToString().c_str());\r\n26 return false;\r\n27 }\r\n28 }\r\n\r\nBut the code will be get an error.   The line 25 will be run.  That is say in line 23, Status.ok() = false.\r\n\r\nSegmentation fault(core dumped)..   I do not know how to deal with it.\r\n\r\nCan anyone help me? Thank you very much!  Please to me soon !\r\n\r\n"}