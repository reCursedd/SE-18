{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/215046538", "html_url": "https://github.com/tensorflow/tensorflow/issues/2046#issuecomment-215046538", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2046", "id": 215046538, "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTA0NjUzOA==", "user": {"login": "amrmousa", "id": 12843423, "node_id": "MDQ6VXNlcjEyODQzNDIz", "avatar_url": "https://avatars1.githubusercontent.com/u/12843423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amrmousa", "html_url": "https://github.com/amrmousa", "followers_url": "https://api.github.com/users/amrmousa/followers", "following_url": "https://api.github.com/users/amrmousa/following{/other_user}", "gists_url": "https://api.github.com/users/amrmousa/gists{/gist_id}", "starred_url": "https://api.github.com/users/amrmousa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amrmousa/subscriptions", "organizations_url": "https://api.github.com/users/amrmousa/orgs", "repos_url": "https://api.github.com/users/amrmousa/repos", "events_url": "https://api.github.com/users/amrmousa/events{/privacy}", "received_events_url": "https://api.github.com/users/amrmousa/received_events", "type": "User", "site_admin": false}, "created_at": "2016-04-27T10:47:12Z", "updated_at": "2016-04-27T10:47:12Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1324660\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/doubler\">@doubler</a> I think this is the fast one, because the documentation page states that:</p>\n<p>\"TensorFlow pip package depends on protobuf pip package version 3.0.0b2. Protobuf's pip package downloaded from PyPI (when running pip install protobuf) is a Python only library, that has Python implementations of proto serialization/deserialization which can be 10x-50x slower than the C++ implementation. Protobuf also supports a binary extension for the Python package that contains fast C++ based proto parsing. This extension is not available in the standard Python only PIP package. We have created a custom binary pip package for protobuf that contains the binary extension.\"</p>\n<p>And later it says:</p>\n<p>\"Note that the binary pip package already has support for protobuf larger than 64MB, that should fix errors such as these\"</p>\n<p>So, I understand that the fast c++ one is the only one that does not have the 64MB limit.</p>", "body_text": "@doubler I think this is the fast one, because the documentation page states that:\n\"TensorFlow pip package depends on protobuf pip package version 3.0.0b2. Protobuf's pip package downloaded from PyPI (when running pip install protobuf) is a Python only library, that has Python implementations of proto serialization/deserialization which can be 10x-50x slower than the C++ implementation. Protobuf also supports a binary extension for the Python package that contains fast C++ based proto parsing. This extension is not available in the standard Python only PIP package. We have created a custom binary pip package for protobuf that contains the binary extension.\"\nAnd later it says:\n\"Note that the binary pip package already has support for protobuf larger than 64MB, that should fix errors such as these\"\nSo, I understand that the fast c++ one is the only one that does not have the 64MB limit.", "body": "@doubler I think this is the fast one, because the documentation page states that:\n\n\"TensorFlow pip package depends on protobuf pip package version 3.0.0b2. Protobuf's pip package downloaded from PyPI (when running pip install protobuf) is a Python only library, that has Python implementations of proto serialization/deserialization which can be 10x-50x slower than the C++ implementation. Protobuf also supports a binary extension for the Python package that contains fast C++ based proto parsing. This extension is not available in the standard Python only PIP package. We have created a custom binary pip package for protobuf that contains the binary extension.\"\n\nAnd later it says:\n\n\"Note that the binary pip package already has support for protobuf larger than 64MB, that should fix errors such as these\"\n\nSo, I understand that the fast c++ one is the only one that does not have the 64MB limit.\n"}