{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7380", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7380/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7380/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7380/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7380", "id": 206464811, "node_id": "MDU6SXNzdWUyMDY0NjQ4MTE=", "number": 7380, "title": "[Discussion] Limit the exported symbols from _pywrap_tensorflow.so", "user": {"login": "llhe", "id": 192829, "node_id": "MDQ6VXNlcjE5MjgyOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/192829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llhe", "html_url": "https://github.com/llhe", "followers_url": "https://api.github.com/users/llhe/followers", "following_url": "https://api.github.com/users/llhe/following{/other_user}", "gists_url": "https://api.github.com/users/llhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/llhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llhe/subscriptions", "organizations_url": "https://api.github.com/users/llhe/orgs", "repos_url": "https://api.github.com/users/llhe/repos", "events_url": "https://api.github.com/users/llhe/events{/privacy}", "received_events_url": "https://api.github.com/users/llhe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-02-09T10:35:27Z", "updated_at": "2017-08-18T02:31:58Z", "closed_at": "2017-02-10T03:35:54Z", "author_association": "CONTRIBUTOR", "body_html": "<p>TensorFlow statically links many fundamental libraries and exported all their symbols, this can cause version conflict for other modules outside of TensorFlow which links against a different version library, see <a href=\"http://stackoverflow.com/questions/12666248/elf-dynamic-loader-symbol-lookup-ordering\" rel=\"nofollow\">the symbol lookup rules</a>.</p>\n<p>For example, I have a script which involves TensorFlow and matplotlib. Just start a Python CLI and execute:</p>\n<pre><code>import tensorflow af tf\nimport matplotlib.pyplot as plt\n# ...\nplt.show()\n</code></pre>\n<p>The matplotlib may links to libpng symbols from _pywrap_tensorflow.so instead of libpng even though the only installed libpng is the correct one. And it will complains and fails:</p>\n<pre><code>libpng warning: Application was compiled with png.h from libpng-1.6.21\nlibpng warning: Application  is  running with png.c from libpng-1.2.53\nlibpng error: Incompatible libpng version in application and library\n</code></pre>\n<p>Similar to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"148160839\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/1927\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/1927/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/1927\">#1927</a> and <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"148131185\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/1924\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/1924/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/1924\">#1924</a></p>\n<p>Fortunately, we have a clear interface, the SWIG APIs. So we may consider only exporting these symbols, <a href=\"https://www.gnu.org/software/gnulib/manual/html_node/Exported-Symbols-of-Shared-Libraries.html\" rel=\"nofollow\">here is the guide</a>.</p>\n<p>This also applies to other shared libraries like libtensorflow.so which export C/C++ interfaces.</p>", "body_text": "TensorFlow statically links many fundamental libraries and exported all their symbols, this can cause version conflict for other modules outside of TensorFlow which links against a different version library, see the symbol lookup rules.\nFor example, I have a script which involves TensorFlow and matplotlib. Just start a Python CLI and execute:\nimport tensorflow af tf\nimport matplotlib.pyplot as plt\n# ...\nplt.show()\n\nThe matplotlib may links to libpng symbols from _pywrap_tensorflow.so instead of libpng even though the only installed libpng is the correct one. And it will complains and fails:\nlibpng warning: Application was compiled with png.h from libpng-1.6.21\nlibpng warning: Application  is  running with png.c from libpng-1.2.53\nlibpng error: Incompatible libpng version in application and library\n\nSimilar to #1927 and #1924\nFortunately, we have a clear interface, the SWIG APIs. So we may consider only exporting these symbols, here is the guide.\nThis also applies to other shared libraries like libtensorflow.so which export C/C++ interfaces.", "body": "TensorFlow statically links many fundamental libraries and exported all their symbols, this can cause version conflict for other modules outside of TensorFlow which links against a different version library, see [the symbol lookup rules](http://stackoverflow.com/questions/12666248/elf-dynamic-loader-symbol-lookup-ordering).\r\n\r\nFor example, I have a script which involves TensorFlow and matplotlib. Just start a Python CLI and execute:\r\n```\r\nimport tensorflow af tf\r\nimport matplotlib.pyplot as plt\r\n# ...\r\nplt.show()\r\n```\r\nThe matplotlib may links to libpng symbols from _pywrap_tensorflow.so instead of libpng even though the only installed libpng is the correct one. And it will complains and fails:\r\n```\r\nlibpng warning: Application was compiled with png.h from libpng-1.6.21\r\nlibpng warning: Application  is  running with png.c from libpng-1.2.53\r\nlibpng error: Incompatible libpng version in application and library\r\n```\r\nSimilar to #1927 and #1924\r\n\r\nFortunately, we have a clear interface, the SWIG APIs. So we may consider only exporting these symbols, [here is the guide](https://www.gnu.org/software/gnulib/manual/html_node/Exported-Symbols-of-Shared-Libraries.html).\r\n\r\nThis also applies to other shared libraries like libtensorflow.so which export C/C++ interfaces."}