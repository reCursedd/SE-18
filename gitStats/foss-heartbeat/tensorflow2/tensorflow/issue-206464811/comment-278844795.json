{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/278844795", "html_url": "https://github.com/tensorflow/tensorflow/issues/7380#issuecomment-278844795", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7380", "id": 278844795, "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODg0NDc5NQ==", "user": {"login": "llhe", "id": 192829, "node_id": "MDQ6VXNlcjE5MjgyOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/192829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llhe", "html_url": "https://github.com/llhe", "followers_url": "https://api.github.com/users/llhe/followers", "following_url": "https://api.github.com/users/llhe/following{/other_user}", "gists_url": "https://api.github.com/users/llhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/llhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llhe/subscriptions", "organizations_url": "https://api.github.com/users/llhe/orgs", "repos_url": "https://api.github.com/users/llhe/repos", "events_url": "https://api.github.com/users/llhe/events{/privacy}", "received_events_url": "https://api.github.com/users/llhe/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-10T02:58:49Z", "updated_at": "2017-02-10T03:03:14Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=23068\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yaroslavvb\">@yaroslavvb</a> I checked the official _pywrap_tensorflow.so, it exports expected symbols, so it should not be the cause. Also checked CUDA  library</p>\n<pre><code>find /usr/local/cuda/lib64/ -name *cu*.so -exec nm -D {} \\; | grep \" T \"\n</code></pre>\n<p>Generally, only symbols prefixed cu are exported except some fftw symbols which should also be expected I guess (and also the official opencv is not linked with fftw?):</p>\n<pre><code>0000000000008610 T fftw_cleanup\n0000000000008590 T fftw_cost\n0000000000008ef0 T fftw_destroy_plan\n0000000000009260 T fftw_execute\n0000000000009250 T fftw_execute_dft\n0000000000009230 T fftw_execute_dft_c2r\n0000000000009240 T fftw_execute_dft_r2c\n0000000000008d60 T fftw_export_wisdom_to_file\n0000000000008620 T fftwf_cleanup\n00000000000085a0 T fftwf_cost\n0000000000008f80 T fftwf_destroy_plan\n0000000000009210 T fftwf_execute\n0000000000009200 T fftwf_execute_dft\n00000000000091e0 T fftwf_execute_dft_c2r\n00000000000091f0 T fftwf_execute_dft_r2c\n0000000000008ee0 T fftwf_export_wisdom_to_file\n00000000000085e0 T fftwf_flops\n0000000000008630 T fftwf_free\n000000000000c7a0 T fftwf_import_wisdom_from_file\n00000000000085b0 T fftw_flops\n0000000000008650 T fftwf_malloc\n000000000000bd50 T fftwf_plan_dft\n000000000000c490 T fftwf_plan_dft_1d\n000000000000c230 T fftwf_plan_dft_2d\n000000000000bfb0 T fftwf_plan_dft_3d\n000000000000bcf0 T fftwf_plan_dft_c2r\n000000000000c450 T fftwf_plan_dft_c2r_1d\n000000000000c1d0 T fftwf_plan_dft_c2r_2d\n000000000000bf50 T fftwf_plan_dft_c2r_3d\n000000000000bd20 T fftwf_plan_dft_r2c\n000000000000c470 T fftwf_plan_dft_r2c_1d\n000000000000c200 T fftwf_plan_dft_r2c_2d\n000000000000bf80 T fftwf_plan_dft_r2c_3d\n000000000000a350 T fftwf_plan_guru_dft\n0000000000009fd0 T fftwf_plan_guru_dft_c2r\n000000000000a190 T fftwf_plan_guru_dft_r2c\n000000000000b5e0 T fftwf_plan_many_dft\n000000000000b500 T fftwf_plan_many_dft_c2r\n000000000000b570 T fftwf_plan_many_dft_r2c\n0000000000008d50 T fftwf_print_plan\n0000000000008640 T fftw_free\n0000000000008580 T fftwf_set_timelimit\n000000000000c5d0 T fftw_import_wisdom_from_file\n0000000000008660 T fftw_malloc\n000000000000be80 T fftw_plan_dft\n000000000000c5b0 T fftw_plan_dft_1d\n000000000000c370 T fftw_plan_dft_2d\n000000000000c0f0 T fftw_plan_dft_3d\n000000000000be20 T fftw_plan_dft_c2r\n000000000000c570 T fftw_plan_dft_c2r_1d\n000000000000c310 T fftw_plan_dft_c2r_2d\n000000000000c090 T fftw_plan_dft_c2r_3d\n000000000000be50 T fftw_plan_dft_r2c\n000000000000c590 T fftw_plan_dft_r2c_1d\n000000000000c340 T fftw_plan_dft_r2c_2d\n000000000000c0c0 T fftw_plan_dft_r2c_3d\n000000000000a8c0 T fftw_plan_guru_dft\n000000000000a520 T fftw_plan_guru_dft_c2r\n000000000000a6f0 T fftw_plan_guru_dft_r2c\n000000000000b730 T fftw_plan_many_dft\n000000000000b650 T fftw_plan_many_dft_c2r\n000000000000b6c0 T fftw_plan_many_dft_r2c\n0000000000008c20 T fftw_print_plan\n0000000000008570 T fftw_set_timelimit\n</code></pre>\n<p><code>nm</code> is nice tool to verify the shared libraries symbols.</p>", "body_text": "@yaroslavvb I checked the official _pywrap_tensorflow.so, it exports expected symbols, so it should not be the cause. Also checked CUDA  library\nfind /usr/local/cuda/lib64/ -name *cu*.so -exec nm -D {} \\; | grep \" T \"\n\nGenerally, only symbols prefixed cu are exported except some fftw symbols which should also be expected I guess (and also the official opencv is not linked with fftw?):\n0000000000008610 T fftw_cleanup\n0000000000008590 T fftw_cost\n0000000000008ef0 T fftw_destroy_plan\n0000000000009260 T fftw_execute\n0000000000009250 T fftw_execute_dft\n0000000000009230 T fftw_execute_dft_c2r\n0000000000009240 T fftw_execute_dft_r2c\n0000000000008d60 T fftw_export_wisdom_to_file\n0000000000008620 T fftwf_cleanup\n00000000000085a0 T fftwf_cost\n0000000000008f80 T fftwf_destroy_plan\n0000000000009210 T fftwf_execute\n0000000000009200 T fftwf_execute_dft\n00000000000091e0 T fftwf_execute_dft_c2r\n00000000000091f0 T fftwf_execute_dft_r2c\n0000000000008ee0 T fftwf_export_wisdom_to_file\n00000000000085e0 T fftwf_flops\n0000000000008630 T fftwf_free\n000000000000c7a0 T fftwf_import_wisdom_from_file\n00000000000085b0 T fftw_flops\n0000000000008650 T fftwf_malloc\n000000000000bd50 T fftwf_plan_dft\n000000000000c490 T fftwf_plan_dft_1d\n000000000000c230 T fftwf_plan_dft_2d\n000000000000bfb0 T fftwf_plan_dft_3d\n000000000000bcf0 T fftwf_plan_dft_c2r\n000000000000c450 T fftwf_plan_dft_c2r_1d\n000000000000c1d0 T fftwf_plan_dft_c2r_2d\n000000000000bf50 T fftwf_plan_dft_c2r_3d\n000000000000bd20 T fftwf_plan_dft_r2c\n000000000000c470 T fftwf_plan_dft_r2c_1d\n000000000000c200 T fftwf_plan_dft_r2c_2d\n000000000000bf80 T fftwf_plan_dft_r2c_3d\n000000000000a350 T fftwf_plan_guru_dft\n0000000000009fd0 T fftwf_plan_guru_dft_c2r\n000000000000a190 T fftwf_plan_guru_dft_r2c\n000000000000b5e0 T fftwf_plan_many_dft\n000000000000b500 T fftwf_plan_many_dft_c2r\n000000000000b570 T fftwf_plan_many_dft_r2c\n0000000000008d50 T fftwf_print_plan\n0000000000008640 T fftw_free\n0000000000008580 T fftwf_set_timelimit\n000000000000c5d0 T fftw_import_wisdom_from_file\n0000000000008660 T fftw_malloc\n000000000000be80 T fftw_plan_dft\n000000000000c5b0 T fftw_plan_dft_1d\n000000000000c370 T fftw_plan_dft_2d\n000000000000c0f0 T fftw_plan_dft_3d\n000000000000be20 T fftw_plan_dft_c2r\n000000000000c570 T fftw_plan_dft_c2r_1d\n000000000000c310 T fftw_plan_dft_c2r_2d\n000000000000c090 T fftw_plan_dft_c2r_3d\n000000000000be50 T fftw_plan_dft_r2c\n000000000000c590 T fftw_plan_dft_r2c_1d\n000000000000c340 T fftw_plan_dft_r2c_2d\n000000000000c0c0 T fftw_plan_dft_r2c_3d\n000000000000a8c0 T fftw_plan_guru_dft\n000000000000a520 T fftw_plan_guru_dft_c2r\n000000000000a6f0 T fftw_plan_guru_dft_r2c\n000000000000b730 T fftw_plan_many_dft\n000000000000b650 T fftw_plan_many_dft_c2r\n000000000000b6c0 T fftw_plan_many_dft_r2c\n0000000000008c20 T fftw_print_plan\n0000000000008570 T fftw_set_timelimit\n\nnm is nice tool to verify the shared libraries symbols.", "body": "@yaroslavvb I checked the official _pywrap_tensorflow.so, it exports expected symbols, so it should not be the cause. Also checked CUDA  library\r\n```\r\nfind /usr/local/cuda/lib64/ -name *cu*.so -exec nm -D {} \\; | grep \" T \"\r\n```\r\nGenerally, only symbols prefixed cu are exported except some fftw symbols which should also be expected I guess (and also the official opencv is not linked with fftw?):\r\n```\r\n0000000000008610 T fftw_cleanup\r\n0000000000008590 T fftw_cost\r\n0000000000008ef0 T fftw_destroy_plan\r\n0000000000009260 T fftw_execute\r\n0000000000009250 T fftw_execute_dft\r\n0000000000009230 T fftw_execute_dft_c2r\r\n0000000000009240 T fftw_execute_dft_r2c\r\n0000000000008d60 T fftw_export_wisdom_to_file\r\n0000000000008620 T fftwf_cleanup\r\n00000000000085a0 T fftwf_cost\r\n0000000000008f80 T fftwf_destroy_plan\r\n0000000000009210 T fftwf_execute\r\n0000000000009200 T fftwf_execute_dft\r\n00000000000091e0 T fftwf_execute_dft_c2r\r\n00000000000091f0 T fftwf_execute_dft_r2c\r\n0000000000008ee0 T fftwf_export_wisdom_to_file\r\n00000000000085e0 T fftwf_flops\r\n0000000000008630 T fftwf_free\r\n000000000000c7a0 T fftwf_import_wisdom_from_file\r\n00000000000085b0 T fftw_flops\r\n0000000000008650 T fftwf_malloc\r\n000000000000bd50 T fftwf_plan_dft\r\n000000000000c490 T fftwf_plan_dft_1d\r\n000000000000c230 T fftwf_plan_dft_2d\r\n000000000000bfb0 T fftwf_plan_dft_3d\r\n000000000000bcf0 T fftwf_plan_dft_c2r\r\n000000000000c450 T fftwf_plan_dft_c2r_1d\r\n000000000000c1d0 T fftwf_plan_dft_c2r_2d\r\n000000000000bf50 T fftwf_plan_dft_c2r_3d\r\n000000000000bd20 T fftwf_plan_dft_r2c\r\n000000000000c470 T fftwf_plan_dft_r2c_1d\r\n000000000000c200 T fftwf_plan_dft_r2c_2d\r\n000000000000bf80 T fftwf_plan_dft_r2c_3d\r\n000000000000a350 T fftwf_plan_guru_dft\r\n0000000000009fd0 T fftwf_plan_guru_dft_c2r\r\n000000000000a190 T fftwf_plan_guru_dft_r2c\r\n000000000000b5e0 T fftwf_plan_many_dft\r\n000000000000b500 T fftwf_plan_many_dft_c2r\r\n000000000000b570 T fftwf_plan_many_dft_r2c\r\n0000000000008d50 T fftwf_print_plan\r\n0000000000008640 T fftw_free\r\n0000000000008580 T fftwf_set_timelimit\r\n000000000000c5d0 T fftw_import_wisdom_from_file\r\n0000000000008660 T fftw_malloc\r\n000000000000be80 T fftw_plan_dft\r\n000000000000c5b0 T fftw_plan_dft_1d\r\n000000000000c370 T fftw_plan_dft_2d\r\n000000000000c0f0 T fftw_plan_dft_3d\r\n000000000000be20 T fftw_plan_dft_c2r\r\n000000000000c570 T fftw_plan_dft_c2r_1d\r\n000000000000c310 T fftw_plan_dft_c2r_2d\r\n000000000000c090 T fftw_plan_dft_c2r_3d\r\n000000000000be50 T fftw_plan_dft_r2c\r\n000000000000c590 T fftw_plan_dft_r2c_1d\r\n000000000000c340 T fftw_plan_dft_r2c_2d\r\n000000000000c0c0 T fftw_plan_dft_r2c_3d\r\n000000000000a8c0 T fftw_plan_guru_dft\r\n000000000000a520 T fftw_plan_guru_dft_c2r\r\n000000000000a6f0 T fftw_plan_guru_dft_r2c\r\n000000000000b730 T fftw_plan_many_dft\r\n000000000000b650 T fftw_plan_many_dft_c2r\r\n000000000000b6c0 T fftw_plan_many_dft_r2c\r\n0000000000008c20 T fftw_print_plan\r\n0000000000008570 T fftw_set_timelimit\r\n```\r\n`nm` is nice tool to verify the shared libraries symbols."}