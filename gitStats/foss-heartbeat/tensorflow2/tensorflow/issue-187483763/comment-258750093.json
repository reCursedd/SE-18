{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/258750093", "html_url": "https://github.com/tensorflow/tensorflow/pull/5410#issuecomment-258750093", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5410", "id": 258750093, "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODc1MDA5Mw==", "user": {"login": "guschmue", "id": 22941064, "node_id": "MDQ6VXNlcjIyOTQxMDY0", "avatar_url": "https://avatars3.githubusercontent.com/u/22941064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guschmue", "html_url": "https://github.com/guschmue", "followers_url": "https://api.github.com/users/guschmue/followers", "following_url": "https://api.github.com/users/guschmue/following{/other_user}", "gists_url": "https://api.github.com/users/guschmue/gists{/gist_id}", "starred_url": "https://api.github.com/users/guschmue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guschmue/subscriptions", "organizations_url": "https://api.github.com/users/guschmue/orgs", "repos_url": "https://api.github.com/users/guschmue/repos", "events_url": "https://api.github.com/users/guschmue/events{/privacy}", "received_events_url": "https://api.github.com/users/guschmue/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-07T05:25:31Z", "updated_at": "2016-11-07T05:25:31Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Here is what I use which is working with a virtual env. The only trick is that you need to use always the same python.exe. (the variables that are not defined in the script are set globally in Jenkins, things like<br>\n%SWIG_EXECUTABLE% ...).<br>\nHope that helps.</p>\n<p>call \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\\amd64\\vcvars64.bat\"<br>\nset PreferredToolArchitecture=x64<br>\nset rel=Release<br>\nset PYTHON_EXECUTABLE=C:\\Anaconda3\\envs\\pyrel\\python.exe</p>\n<p>cd %WORKSPACE%\\tensorflow\\contrib\\cmake<br>\nmkdir build<br>\ncd build<br>\ncmake .. -A x64 -DCMAKE_BUILD_TYPE=%rel% -DPYTHON_EXECUTABLE=%PYTHON_EXECUTABLE% -DPYTHON_LIBRARIES=%PYTHON_LIBRARIES% -DSWIG_EXECUTABLE=%SWIG_EXECUTABLE% -Dtensorflow_BUILD_PYTHON_TESTS=ON</p>\n<p>MSBuild /p:Configuration=%rel% tf_python_build_pip_package.vcxproj</p>\n<p>%PYTHON_EXECUTABLE% -m pip install --upgrade %WORKSPACE%\\tensorflow\\contrib\\cmake\\build\\tf_python\\dist\\tensorflow-0.11.0rc2_cmake_experimental-py3-none-any.whl<br>\nctest -C %rel%</p>", "body_text": "Here is what I use which is working with a virtual env. The only trick is that you need to use always the same python.exe. (the variables that are not defined in the script are set globally in Jenkins, things like\n%SWIG_EXECUTABLE% ...).\nHope that helps.\ncall \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\\amd64\\vcvars64.bat\"\nset PreferredToolArchitecture=x64\nset rel=Release\nset PYTHON_EXECUTABLE=C:\\Anaconda3\\envs\\pyrel\\python.exe\ncd %WORKSPACE%\\tensorflow\\contrib\\cmake\nmkdir build\ncd build\ncmake .. -A x64 -DCMAKE_BUILD_TYPE=%rel% -DPYTHON_EXECUTABLE=%PYTHON_EXECUTABLE% -DPYTHON_LIBRARIES=%PYTHON_LIBRARIES% -DSWIG_EXECUTABLE=%SWIG_EXECUTABLE% -Dtensorflow_BUILD_PYTHON_TESTS=ON\nMSBuild /p:Configuration=%rel% tf_python_build_pip_package.vcxproj\n%PYTHON_EXECUTABLE% -m pip install --upgrade %WORKSPACE%\\tensorflow\\contrib\\cmake\\build\\tf_python\\dist\\tensorflow-0.11.0rc2_cmake_experimental-py3-none-any.whl\nctest -C %rel%", "body": "Here is what I use which is working with a virtual env. The only trick is that you need to use always the same python.exe. (the variables that are not defined in the script are set globally in Jenkins, things like \n%SWIG_EXECUTABLE% ...).\nHope that helps.\n\ncall \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\\amd64\\vcvars64.bat\"\nset PreferredToolArchitecture=x64\nset rel=Release\nset PYTHON_EXECUTABLE=C:\\Anaconda3\\envs\\pyrel\\python.exe\n\ncd %WORKSPACE%\\tensorflow\\contrib\\cmake\nmkdir build\ncd build\ncmake .. -A x64 -DCMAKE_BUILD_TYPE=%rel% -DPYTHON_EXECUTABLE=%PYTHON_EXECUTABLE% -DPYTHON_LIBRARIES=%PYTHON_LIBRARIES% -DSWIG_EXECUTABLE=%SWIG_EXECUTABLE% -Dtensorflow_BUILD_PYTHON_TESTS=ON\n\nMSBuild /p:Configuration=%rel% tf_python_build_pip_package.vcxproj\n\n%PYTHON_EXECUTABLE% -m pip install --upgrade %WORKSPACE%\\tensorflow\\contrib\\cmake\\build\\tf_python\\dist\\tensorflow-0.11.0rc2_cmake_experimental-py3-none-any.whl\nctest -C %rel%\n"}