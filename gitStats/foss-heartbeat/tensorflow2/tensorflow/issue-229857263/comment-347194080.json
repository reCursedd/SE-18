{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/347194080", "html_url": "https://github.com/tensorflow/tensorflow/issues/10021#issuecomment-347194080", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10021", "id": 347194080, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzE5NDA4MA==", "user": {"login": "dickreuter", "id": 1256318, "node_id": "MDQ6VXNlcjEyNTYzMTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1256318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dickreuter", "html_url": "https://github.com/dickreuter", "followers_url": "https://api.github.com/users/dickreuter/followers", "following_url": "https://api.github.com/users/dickreuter/following{/other_user}", "gists_url": "https://api.github.com/users/dickreuter/gists{/gist_id}", "starred_url": "https://api.github.com/users/dickreuter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dickreuter/subscriptions", "organizations_url": "https://api.github.com/users/dickreuter/orgs", "repos_url": "https://api.github.com/users/dickreuter/repos", "events_url": "https://api.github.com/users/dickreuter/events{/privacy}", "received_events_url": "https://api.github.com/users/dickreuter/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-27T14:17:09Z", "updated_at": "2017-11-27T14:17:09Z", "author_association": "NONE", "body_html": "<p>In my loss function I would like to weight each sample differently and in each sample, each category should be weighted differently as well depending on the outcome. Meaning if in a cross entropy the one_hot is correctly specified, a different weight needs to be applied than when the output is incorrect. So I would need two weights per category. A tensor with rank 3. One dimension for the samples, a second dimension for the amount of classes (let's assume just one output neuron for simplicity), and a third dimension that differentiates between correct and incorrect match for that one binary output neuron.</p>\n<p>Is there any way to do that with one of the above loss functions?</p>", "body_text": "In my loss function I would like to weight each sample differently and in each sample, each category should be weighted differently as well depending on the outcome. Meaning if in a cross entropy the one_hot is correctly specified, a different weight needs to be applied than when the output is incorrect. So I would need two weights per category. A tensor with rank 3. One dimension for the samples, a second dimension for the amount of classes (let's assume just one output neuron for simplicity), and a third dimension that differentiates between correct and incorrect match for that one binary output neuron.\nIs there any way to do that with one of the above loss functions?", "body": "In my loss function I would like to weight each sample differently and in each sample, each category should be weighted differently as well depending on the outcome. Meaning if in a cross entropy the one_hot is correctly specified, a different weight needs to be applied than when the output is incorrect. So I would need two weights per category. A tensor with rank 3. One dimension for the samples, a second dimension for the amount of classes (let's assume just one output neuron for simplicity), and a third dimension that differentiates between correct and incorrect match for that one binary output neuron.\r\n\r\nIs there any way to do that with one of the above loss functions?"}