{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/295610604", "html_url": "https://github.com/tensorflow/tensorflow/issues/8604#issuecomment-295610604", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8604", "id": 295610604, "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTYxMDYwNA==", "user": {"login": "albertz", "id": 59132, "node_id": "MDQ6VXNlcjU5MTMy", "avatar_url": "https://avatars0.githubusercontent.com/u/59132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albertz", "html_url": "https://github.com/albertz", "followers_url": "https://api.github.com/users/albertz/followers", "following_url": "https://api.github.com/users/albertz/following{/other_user}", "gists_url": "https://api.github.com/users/albertz/gists{/gist_id}", "starred_url": "https://api.github.com/users/albertz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albertz/subscriptions", "organizations_url": "https://api.github.com/users/albertz/orgs", "repos_url": "https://api.github.com/users/albertz/repos", "events_url": "https://api.github.com/users/albertz/events{/privacy}", "received_events_url": "https://api.github.com/users/albertz/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-20T07:32:53Z", "updated_at": "2017-04-20T07:32:53Z", "author_association": "NONE", "body_html": "<p>Note that there is also a bug with the name scope (\"while/while/\"), I guess because there might be some variable_scope/name_scope mixup. I see the same bug in the same situation (<code>InvalidArgumentError: The node 'output/rec/orth_embed/b/Assign' has inputs from different frames. The input 'output/rec/orth_embed/Const' is in frame 'output/rec/while/output/rec/while/'. The input 'output/rec/orth_embed/b' is in frame ''.</code>).</p>\n<p>Is it possible to set the frame as a scope? Then the variable creation could look like this:</p>\n<pre><code>with tf.frame_scope(''):\n  w = tf.Variable(tf.constant(1))\n</code></pre>\n<p>I don't see a reason why not to create the variables inside the loop. It can make some code easier (in my current case, I don't really see a good option to avoid that).</p>\n<p>I guess the problem is only because of the Assign-Op and the Const-Op which are assigned to the while-frame?</p>", "body_text": "Note that there is also a bug with the name scope (\"while/while/\"), I guess because there might be some variable_scope/name_scope mixup. I see the same bug in the same situation (InvalidArgumentError: The node 'output/rec/orth_embed/b/Assign' has inputs from different frames. The input 'output/rec/orth_embed/Const' is in frame 'output/rec/while/output/rec/while/'. The input 'output/rec/orth_embed/b' is in frame ''.).\nIs it possible to set the frame as a scope? Then the variable creation could look like this:\nwith tf.frame_scope(''):\n  w = tf.Variable(tf.constant(1))\n\nI don't see a reason why not to create the variables inside the loop. It can make some code easier (in my current case, I don't really see a good option to avoid that).\nI guess the problem is only because of the Assign-Op and the Const-Op which are assigned to the while-frame?", "body": "Note that there is also a bug with the name scope (\"while/while/\"), I guess because there might be some variable_scope/name_scope mixup. I see the same bug in the same situation (`InvalidArgumentError: The node 'output/rec/orth_embed/b/Assign' has inputs from different frames. The input 'output/rec/orth_embed/Const' is in frame 'output/rec/while/output/rec/while/'. The input 'output/rec/orth_embed/b' is in frame ''.`).\r\n\r\nIs it possible to set the frame as a scope? Then the variable creation could look like this:\r\n```\r\nwith tf.frame_scope(''):\r\n  w = tf.Variable(tf.constant(1))\r\n```\r\n\r\nI don't see a reason why not to create the variables inside the loop. It can make some code easier (in my current case, I don't really see a good option to avoid that).\r\n\r\nI guess the problem is only because of the Assign-Op and the Const-Op which are assigned to the while-frame?"}