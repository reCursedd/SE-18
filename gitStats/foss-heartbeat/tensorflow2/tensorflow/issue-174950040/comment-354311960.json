{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/354311960", "html_url": "https://github.com/tensorflow/tensorflow/issues/4193#issuecomment-354311960", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4193", "id": 354311960, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDMxMTk2MA==", "user": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-28T16:07:10Z", "updated_at": "2017-12-28T16:07:10Z", "author_association": "CONTRIBUTOR", "body_html": "<div class=\"email-fragment\">You could try adding float64 support to TF's CTC loss kernel.</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On Wed, Dec 27, 2017, 2:30 PM Andrew Stepanov ***@***.***&gt; wrote:\n Apparently, cudnnCTCLoss suffers from the same numerical instability in\n gradients. Here\n &lt;<a href=\"https://github.com/standy66/cudnn7-ctc-loss-test/blob/master/example.cpp\">https://github.com/standy66/cudnn7-ctc-loss-test/blob/master/example.cpp</a>&gt;\n is the sample code that I wrote. So far, all three CTC loss implementations\n that I checked (tf's, cudnn's and warp-ctc) are unsuitable for sequences\n with length &gt; 5000 because of these bogus gradients.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"174950040\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/4193\" href=\"https://github.com/tensorflow/tensorflow/issues/4193#issuecomment-354187083\">#4193 (comment)</a>&gt;,\n or mute the thread\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/ABtim76YqurPQa1EoOSh3KUoPGRQP5VOks5tEsT4gaJpZM4J0ik6\">https://github.com/notifications/unsubscribe-auth/ABtim76YqurPQa1EoOSh3KUoPGRQP5VOks5tEsT4gaJpZM4J0ik6</a>&gt;\n .\n</div>\n<div class=\"email-fragment\"></div>\n</div>", "body_text": "You could try adding float64 support to TF's CTC loss kernel.\n\u2026\nOn Wed, Dec 27, 2017, 2:30 PM Andrew Stepanov ***@***.***> wrote:\n Apparently, cudnnCTCLoss suffers from the same numerical instability in\n gradients. Here\n <https://github.com/standy66/cudnn7-ctc-loss-test/blob/master/example.cpp>\n is the sample code that I wrote. So far, all three CTC loss implementations\n that I checked (tf's, cudnn's and warp-ctc) are unsuitable for sequences\n with length > 5000 because of these bogus gradients.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#4193 (comment)>,\n or mute the thread\n <https://github.com/notifications/unsubscribe-auth/ABtim76YqurPQa1EoOSh3KUoPGRQP5VOks5tEsT4gaJpZM4J0ik6>\n .", "body": "You could try adding float64 support to TF's CTC loss kernel.\n\nOn Wed, Dec 27, 2017, 2:30 PM Andrew Stepanov <notifications@github.com>\nwrote:\n\n> Apparently, cudnnCTCLoss suffers from the same numerical instability in\n> gradients. Here\n> <https://github.com/standy66/cudnn7-ctc-loss-test/blob/master/example.cpp>\n> is the sample code that I wrote. So far, all three CTC loss implementations\n> that I checked (tf's, cudnn's and warp-ctc) are unsuitable for sequences\n> with length > 5000 because of these bogus gradients.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/issues/4193#issuecomment-354187083>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABtim76YqurPQa1EoOSh3KUoPGRQP5VOks5tEsT4gaJpZM4J0ik6>\n> .\n>\n"}