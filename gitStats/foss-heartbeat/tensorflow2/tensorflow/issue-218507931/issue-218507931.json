{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8870", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8870/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8870/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8870/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8870", "id": 218507931, "node_id": "MDU6SXNzdWUyMTg1MDc5MzE=", "number": 8870, "title": "Bugs when dequeue a 3-D input tensor from FIFOQueue", "user": {"login": "zzw922cn", "id": 11649939, "node_id": "MDQ6VXNlcjExNjQ5OTM5", "avatar_url": "https://avatars3.githubusercontent.com/u/11649939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zzw922cn", "html_url": "https://github.com/zzw922cn", "followers_url": "https://api.github.com/users/zzw922cn/followers", "following_url": "https://api.github.com/users/zzw922cn/following{/other_user}", "gists_url": "https://api.github.com/users/zzw922cn/gists{/gist_id}", "starred_url": "https://api.github.com/users/zzw922cn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zzw922cn/subscriptions", "organizations_url": "https://api.github.com/users/zzw922cn/orgs", "repos_url": "https://api.github.com/users/zzw922cn/repos", "events_url": "https://api.github.com/users/zzw922cn/events{/privacy}", "received_events_url": "https://api.github.com/users/zzw922cn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2017-03-31T13:49:16Z", "updated_at": "2017-04-05T13:49:49Z", "closed_at": "2017-04-05T13:49:49Z", "author_association": "NONE", "body_html": "<div class=\"highlight highlight-source-python\"><pre>x <span class=\"pl-k\">=</span> tf.random_normal([time_length, batch_size, feature_size], <span class=\"pl-v\">mean</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0</span>, <span class=\"pl-v\">stddev</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span># prepare data</span>\nq <span class=\"pl-k\">=</span> tf.FIFOQueue(<span class=\"pl-v\">capacity</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">4</span>, <span class=\"pl-v\">dtypes</span><span class=\"pl-k\">=</span>tf.float32) \nenqueue_op <span class=\"pl-k\">=</span> q.enqueue(x)\nnum_threads <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1</span> \nqr <span class=\"pl-k\">=</span> tf.train.QueueRunner(q, [enqueue_op] <span class=\"pl-k\">*</span> num_threads)\ntf.train.add_queue_runner(qr)\ninputs <span class=\"pl-k\">=</span> q.dequeue() </pre></div>\n<p>As above code shows, when I use FIFOQueue and Cordinator to do input pipeline, the input is a 3-D tensor variable, but when I dequeue it from the FIFOQueue, errors comes:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c1\">ValueError</span>: as_list() <span class=\"pl-k\">is</span> <span class=\"pl-k\">not</span> defined on an unknown TensorShape.</pre></div>\n<p>Thus, I go to the source code of FIFOQueue, I found that FIFOQueue.enqueue method doesn't use a shape function. So, I add a line of code as following, it works well.</p>\n<div class=\"highlight highlight-source-python\"><pre>x <span class=\"pl-k\">=</span> tf.random_normal([time_length, batch_size, feature_size], <span class=\"pl-v\">mean</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0</span>, <span class=\"pl-v\">stddev</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span># prepare data</span>\nq <span class=\"pl-k\">=</span> tf.FIFOQueue(<span class=\"pl-v\">capacity</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">4</span>, <span class=\"pl-v\">dtypes</span><span class=\"pl-k\">=</span>tf.float32) \nenqueue_op <span class=\"pl-k\">=</span> q.enqueue(x)\nnum_threads <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1</span> \nqr <span class=\"pl-k\">=</span> tf.train.QueueRunner(q, [enqueue_op] <span class=\"pl-k\">*</span> num_threads)\ntf.train.add_queue_runner(qr)\ninputs <span class=\"pl-k\">=</span> q.dequeue() \ninputs.set_shape(x.get_shape())</pre></div>\n<p>But if I change my input from 3-D tensor into 2-D tensor, the code runs very well without set_shape function manually. So I want to know why my 3-D input tensor can't work well but 2-D tensor input work well? Can the source code of FIFOQueue or QueueBase support shape function?</p>", "body_text": "x = tf.random_normal([time_length, batch_size, feature_size], mean=0, stddev=1)\n## prepare data\nq = tf.FIFOQueue(capacity=4, dtypes=tf.float32) \nenqueue_op = q.enqueue(x)\nnum_threads = 1 \nqr = tf.train.QueueRunner(q, [enqueue_op] * num_threads)\ntf.train.add_queue_runner(qr)\ninputs = q.dequeue() \nAs above code shows, when I use FIFOQueue and Cordinator to do input pipeline, the input is a 3-D tensor variable, but when I dequeue it from the FIFOQueue, errors comes:\nValueError: as_list() is not defined on an unknown TensorShape.\nThus, I go to the source code of FIFOQueue, I found that FIFOQueue.enqueue method doesn't use a shape function. So, I add a line of code as following, it works well.\nx = tf.random_normal([time_length, batch_size, feature_size], mean=0, stddev=1)\n\n## prepare data\nq = tf.FIFOQueue(capacity=4, dtypes=tf.float32) \nenqueue_op = q.enqueue(x)\nnum_threads = 1 \nqr = tf.train.QueueRunner(q, [enqueue_op] * num_threads)\ntf.train.add_queue_runner(qr)\ninputs = q.dequeue() \ninputs.set_shape(x.get_shape())\nBut if I change my input from 3-D tensor into 2-D tensor, the code runs very well without set_shape function manually. So I want to know why my 3-D input tensor can't work well but 2-D tensor input work well? Can the source code of FIFOQueue or QueueBase support shape function?", "body": "```python\r\nx = tf.random_normal([time_length, batch_size, feature_size], mean=0, stddev=1)\r\n## prepare data\r\nq = tf.FIFOQueue(capacity=4, dtypes=tf.float32) \r\nenqueue_op = q.enqueue(x)\r\nnum_threads = 1 \r\nqr = tf.train.QueueRunner(q, [enqueue_op] * num_threads)\r\ntf.train.add_queue_runner(qr)\r\ninputs = q.dequeue() \r\n```\r\nAs above code shows, when I use FIFOQueue and Cordinator to do input pipeline, the input is a 3-D tensor variable, but when I dequeue it from the FIFOQueue, errors comes:\r\n```python\r\nValueError: as_list() is not defined on an unknown TensorShape.\r\n```\r\n\r\nThus, I go to the source code of FIFOQueue, I found that FIFOQueue.enqueue method doesn't use a shape function. So, I add a line of code as following, it works well.\r\n```python\r\nx = tf.random_normal([time_length, batch_size, feature_size], mean=0, stddev=1)\r\n\r\n## prepare data\r\nq = tf.FIFOQueue(capacity=4, dtypes=tf.float32) \r\nenqueue_op = q.enqueue(x)\r\nnum_threads = 1 \r\nqr = tf.train.QueueRunner(q, [enqueue_op] * num_threads)\r\ntf.train.add_queue_runner(qr)\r\ninputs = q.dequeue() \r\ninputs.set_shape(x.get_shape())\r\n```\r\n\r\nBut if I change my input from 3-D tensor into 2-D tensor, the code runs very well without set_shape function manually. So I want to know why my 3-D input tensor can't work well but 2-D tensor input work well? Can the source code of FIFOQueue or QueueBase support shape function? "}