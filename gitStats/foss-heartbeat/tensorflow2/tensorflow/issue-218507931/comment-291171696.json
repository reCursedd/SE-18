{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/291171696", "html_url": "https://github.com/tensorflow/tensorflow/issues/8870#issuecomment-291171696", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8870", "id": 291171696, "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTE3MTY5Ng==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-03T15:06:43Z", "updated_at": "2017-04-03T15:06:43Z", "author_association": "CONTRIBUTOR", "body_html": "<p>This doesn't sound like a bug (in the queues, at least). The actual error is in the <code>tf.nn.bidirectional_dynamic_rnn()</code> code, which does not seem to support inputs with unknown shape; the solution is to provide more static shape information.</p>\n<p>When you create a <code>tf.FIFOQueue</code> with no <code>shapes</code> argument, you are allowing the queue to store tensors of <em>any</em> shape. Therefore, since when you create the <code>q.dequeue()</code> op we don't know exactly which tensors will be dequeued, we have to give it an unknown shape.</p>\n<p>By calling <code>inputs.set_shape(x.get_shape())</code> you are asserting that all elements have a particular shape. You could have done the same thing by creating the queue as:</p>\n<div class=\"highlight highlight-source-python\"><pre>q <span class=\"pl-k\">=</span> tf.FIFOQueue(<span class=\"pl-v\">capacity</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">4</span>, <span class=\"pl-v\">dtypes</span><span class=\"pl-k\">=</span>tf.float32, <span class=\"pl-v\">shapes</span><span class=\"pl-k\">=</span>x.get_shape())</pre></div>", "body_text": "This doesn't sound like a bug (in the queues, at least). The actual error is in the tf.nn.bidirectional_dynamic_rnn() code, which does not seem to support inputs with unknown shape; the solution is to provide more static shape information.\nWhen you create a tf.FIFOQueue with no shapes argument, you are allowing the queue to store tensors of any shape. Therefore, since when you create the q.dequeue() op we don't know exactly which tensors will be dequeued, we have to give it an unknown shape.\nBy calling inputs.set_shape(x.get_shape()) you are asserting that all elements have a particular shape. You could have done the same thing by creating the queue as:\nq = tf.FIFOQueue(capacity=4, dtypes=tf.float32, shapes=x.get_shape())", "body": "This doesn't sound like a bug (in the queues, at least). The actual error is in the `tf.nn.bidirectional_dynamic_rnn()` code, which does not seem to support inputs with unknown shape; the solution is to provide more static shape information.\r\n\r\nWhen you create a `tf.FIFOQueue` with no `shapes` argument, you are allowing the queue to store tensors of *any* shape. Therefore, since when you create the `q.dequeue()` op we don't know exactly which tensors will be dequeued, we have to give it an unknown shape.\r\n\r\nBy calling `inputs.set_shape(x.get_shape())` you are asserting that all elements have a particular shape. You could have done the same thing by creating the queue as:\r\n\r\n```python\r\nq = tf.FIFOQueue(capacity=4, dtypes=tf.float32, shapes=x.get_shape())\r\n```"}