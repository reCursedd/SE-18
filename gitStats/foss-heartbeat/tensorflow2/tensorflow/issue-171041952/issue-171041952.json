{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3801", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3801/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3801/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3801/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3801", "id": 171041952, "node_id": "MDU6SXNzdWUxNzEwNDE5NTI=", "number": 3801, "title": "Unclear documentation on dynamic_rnn vs rnn for efficient dynamic sequence length computation", "user": {"login": "lingz", "id": 3147213, "node_id": "MDQ6VXNlcjMxNDcyMTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3147213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lingz", "html_url": "https://github.com/lingz", "followers_url": "https://api.github.com/users/lingz/followers", "following_url": "https://api.github.com/users/lingz/following{/other_user}", "gists_url": "https://api.github.com/users/lingz/gists{/gist_id}", "starred_url": "https://api.github.com/users/lingz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lingz/subscriptions", "organizations_url": "https://api.github.com/users/lingz/orgs", "repos_url": "https://api.github.com/users/lingz/repos", "events_url": "https://api.github.com/users/lingz/events{/privacy}", "received_events_url": "https://api.github.com/users/lingz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2016-08-14T04:37:16Z", "updated_at": "2016-08-19T16:24:46Z", "closed_at": "2016-08-19T16:24:46Z", "author_association": "CONTRIBUTOR", "body_html": "<p>It looks like from the latest documentation that <code>rnn</code> performs early stopping for dynamic length sequences whereas <code>dynamic_rnn</code> does not? This would seem to be the reverse of the intuition.</p>\n<p>So it looks like in commit <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/855d3b56014780a90143b3e0c0865334b188c2df/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/855d3b56014780a90143b3e0c0865334b188c2df\"><tt>855d3b5</tt></a>, the definition of <code>dynamic_rnn</code> was changed from:</p>\n<blockquote>\n<p>The parameter <code>sequence_length</code> is required and dynamic calculation is<br>\nautomatically performed.</p>\n</blockquote>\n<p>to:</p>\n<blockquote>\n<p>The parameter <code>sequence_length</code> is optional and is used to copy-through state<br>\nand zero-out outputs when past a batch element's sequence length. So it's more<br>\nfor correctness than performance, unlike in rnn().</p>\n</blockquote>\n<p>Whereas the <code>rnn</code> documentation states:</p>\n<blockquote>\n<p>If the sequence_length vector is provided, dynamic calculation is performed.<br>\nThis method of calculation does not compute the RNN steps past the maximum<br>\nsequence length of the minibatch (thus saving computational time),</p>\n</blockquote>\n<p>For me this makes it very unclear. In this context, does <code>rnn</code> do \"more dynamic\" unrolling than <code>dynamic_rnn</code> because it actually uses sequence_length to stop early. So if I want to do efficient variable length sequences dynamically, I should use <code>rnn</code> instead of <code>dynamic_rnn</code>.</p>\n<p>In this case, what does <code>dynamic_rnn</code> actually do (what is \"dynamic unrolling\" explicitly defined), except for accept input in a different format?</p>", "body_text": "It looks like from the latest documentation that rnn performs early stopping for dynamic length sequences whereas dynamic_rnn does not? This would seem to be the reverse of the intuition.\nSo it looks like in commit 855d3b5, the definition of dynamic_rnn was changed from:\n\nThe parameter sequence_length is required and dynamic calculation is\nautomatically performed.\n\nto:\n\nThe parameter sequence_length is optional and is used to copy-through state\nand zero-out outputs when past a batch element's sequence length. So it's more\nfor correctness than performance, unlike in rnn().\n\nWhereas the rnn documentation states:\n\nIf the sequence_length vector is provided, dynamic calculation is performed.\nThis method of calculation does not compute the RNN steps past the maximum\nsequence length of the minibatch (thus saving computational time),\n\nFor me this makes it very unclear. In this context, does rnn do \"more dynamic\" unrolling than dynamic_rnn because it actually uses sequence_length to stop early. So if I want to do efficient variable length sequences dynamically, I should use rnn instead of dynamic_rnn.\nIn this case, what does dynamic_rnn actually do (what is \"dynamic unrolling\" explicitly defined), except for accept input in a different format?", "body": "It looks like from the latest documentation that `rnn` performs early stopping for dynamic length sequences whereas `dynamic_rnn` does not? This would seem to be the reverse of the intuition. \n\nSo it looks like in commit 855d3b56014780a90143b3e0c0865334b188c2df, the definition of `dynamic_rnn` was changed from:\n\n> The parameter `sequence_length` is required and dynamic calculation is\n> automatically performed.\n\nto:\n\n>  The parameter `sequence_length` is optional and is used to copy-through state\n>  and zero-out outputs when past a batch element's sequence length. So it's more\n>  for correctness than performance, unlike in rnn().\n\nWhereas the `rnn` documentation states:\n\n>   If the sequence_length vector is provided, dynamic calculation is performed.\n>   This method of calculation does not compute the RNN steps past the maximum\n>   sequence length of the minibatch (thus saving computational time),\n\nFor me this makes it very unclear. In this context, does `rnn` do \"more dynamic\" unrolling than `dynamic_rnn` because it actually uses sequence_length to stop early. So if I want to do efficient variable length sequences dynamically, I should use `rnn` instead of `dynamic_rnn`. \n\nIn this case, what does `dynamic_rnn` actually do (what is \"dynamic unrolling\" explicitly defined), except for accept input in a different format?\n"}