{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/372071976", "html_url": "https://github.com/tensorflow/tensorflow/issues/17390#issuecomment-372071976", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17390", "id": 372071976, "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjA3MTk3Ng==", "user": {"login": "up-to-you", "id": 18654738, "node_id": "MDQ6VXNlcjE4NjU0NzM4", "avatar_url": "https://avatars1.githubusercontent.com/u/18654738?v=4", "gravatar_id": "", "url": "https://api.github.com/users/up-to-you", "html_url": "https://github.com/up-to-you", "followers_url": "https://api.github.com/users/up-to-you/followers", "following_url": "https://api.github.com/users/up-to-you/following{/other_user}", "gists_url": "https://api.github.com/users/up-to-you/gists{/gist_id}", "starred_url": "https://api.github.com/users/up-to-you/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/up-to-you/subscriptions", "organizations_url": "https://api.github.com/users/up-to-you/orgs", "repos_url": "https://api.github.com/users/up-to-you/repos", "events_url": "https://api.github.com/users/up-to-you/events{/privacy}", "received_events_url": "https://api.github.com/users/up-to-you/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-10T22:25:20Z", "updated_at": "2018-03-10T22:37:26Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=10109534\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/karllessard\">@karllessard</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16018\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/asimshankar\">@asimshankar</a> regarding the information you provided (thanks a lot !), i think its better to emphasize efforts on model training maturity, using Java API. In this case we have advantages of both worlds :</p>\n<ol>\n<li>declaring model using full-fledged, short, readable Python syntax</li>\n<li>training NN and inference with Java, using its performance, multithreading, big-data collaboration etc.</li>\n</ol>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16018\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/asimshankar\">@asimshankar</a> can you please provide video / source link, from where does this slides come ?</p>", "body_text": "@karllessard @asimshankar regarding the information you provided (thanks a lot !), i think its better to emphasize efforts on model training maturity, using Java API. In this case we have advantages of both worlds :\n\ndeclaring model using full-fledged, short, readable Python syntax\ntraining NN and inference with Java, using its performance, multithreading, big-data collaboration etc.\n\n@asimshankar can you please provide video / source link, from where does this slides come ?", "body": "@karllessard @asimshankar regarding the information you provided (thanks a lot !), i think its better to emphasize efforts on model training maturity, using Java API. In this case we have advantages of both worlds : \r\n1. declaring model using full-fledged, short, readable Python syntax\r\n2. training NN and inference with Java, using its performance, multithreading, big-data collaboration etc.\r\n\r\n@asimshankar can you please provide video / source link, from where does this slides come ?"}