{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/389687357", "html_url": "https://github.com/tensorflow/tensorflow/issues/17390#issuecomment-389687357", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17390", "id": 389687357, "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTY4NzM1Nw==", "user": {"login": "arnaghizadeh", "id": 3886854, "node_id": "MDQ6VXNlcjM4ODY4NTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/3886854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arnaghizadeh", "html_url": "https://github.com/arnaghizadeh", "followers_url": "https://api.github.com/users/arnaghizadeh/followers", "following_url": "https://api.github.com/users/arnaghizadeh/following{/other_user}", "gists_url": "https://api.github.com/users/arnaghizadeh/gists{/gist_id}", "starred_url": "https://api.github.com/users/arnaghizadeh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arnaghizadeh/subscriptions", "organizations_url": "https://api.github.com/users/arnaghizadeh/orgs", "repos_url": "https://api.github.com/users/arnaghizadeh/repos", "events_url": "https://api.github.com/users/arnaghizadeh/events{/privacy}", "received_events_url": "https://api.github.com/users/arnaghizadeh/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-16T22:35:14Z", "updated_at": "2018-05-16T22:35:14Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=10109534\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/karllessard\">@karllessard</a> From my limited understanding, what they are doing is that they have integrated Tensorflow eager mode with the swift compiler so there is no need to create graphs, the graphs are created by compiler itself. The end result is a very natural integration of Tensorflow with Swift language which is much more pleasant to work with than what we have in python. Even with its eager mode, the Tensorflow of python does not seem to be a match with this design. From what I could tell, they also provided a better version of the Numpy (with Tensors) for the swift language in a natural way. If next to the API that you are working on, something like this can be implemented for e.g., Kotlin that will be a blast.</p>", "body_text": "@karllessard From my limited understanding, what they are doing is that they have integrated Tensorflow eager mode with the swift compiler so there is no need to create graphs, the graphs are created by compiler itself. The end result is a very natural integration of Tensorflow with Swift language which is much more pleasant to work with than what we have in python. Even with its eager mode, the Tensorflow of python does not seem to be a match with this design. From what I could tell, they also provided a better version of the Numpy (with Tensors) for the swift language in a natural way. If next to the API that you are working on, something like this can be implemented for e.g., Kotlin that will be a blast.", "body": "@karllessard From my limited understanding, what they are doing is that they have integrated Tensorflow eager mode with the swift compiler so there is no need to create graphs, the graphs are created by compiler itself. The end result is a very natural integration of Tensorflow with Swift language which is much more pleasant to work with than what we have in python. Even with its eager mode, the Tensorflow of python does not seem to be a match with this design. From what I could tell, they also provided a better version of the Numpy (with Tensors) for the swift language in a natural way. If next to the API that you are working on, something like this can be implemented for e.g., Kotlin that will be a blast."}