{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/395062517", "html_url": "https://github.com/tensorflow/tensorflow/issues/17390#issuecomment-395062517", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17390", "id": 395062517, "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTA2MjUxNw==", "user": {"login": "karllessard", "id": 10109534, "node_id": "MDQ6VXNlcjEwMTA5NTM0", "avatar_url": "https://avatars3.githubusercontent.com/u/10109534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karllessard", "html_url": "https://github.com/karllessard", "followers_url": "https://api.github.com/users/karllessard/followers", "following_url": "https://api.github.com/users/karllessard/following{/other_user}", "gists_url": "https://api.github.com/users/karllessard/gists{/gist_id}", "starred_url": "https://api.github.com/users/karllessard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karllessard/subscriptions", "organizations_url": "https://api.github.com/users/karllessard/orgs", "repos_url": "https://api.github.com/users/karllessard/repos", "events_url": "https://api.github.com/users/karllessard/events{/privacy}", "received_events_url": "https://api.github.com/users/karllessard/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-06T13:10:00Z", "updated_at": "2018-06-06T13:31:21Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hi guys, please let me reiterate my thoughts on this.</p>\n<p>I think JavaCPP can be a useful addition to the current Java client but I would keep its usage internal. It perfectly fits as a replacement to the actual JNI bridge, being more flexible and probably more performant. But I would stick to a thin layer of pure-Java for classes that are exposed publicly, so we can easily introduce Java-specific features, like generics, and have more control over the API in general.</p>\n<p>That being said, I don't want to sound dramatic but I think that open-source development is all about collaboration and not competition. Competition is a complete no-fit. Our goal is to develop the best Java client for TensorFlow, no matter how, and we should merge all of our efforts towards this end only. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3328023\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/saudet\">@saudet</a>, if you can't agree with this, then I don't think I can help you much here. BTW, you say that you get no reply from me but I can't recall or find any question or request from you.</p>", "body_text": "Hi guys, please let me reiterate my thoughts on this.\nI think JavaCPP can be a useful addition to the current Java client but I would keep its usage internal. It perfectly fits as a replacement to the actual JNI bridge, being more flexible and probably more performant. But I would stick to a thin layer of pure-Java for classes that are exposed publicly, so we can easily introduce Java-specific features, like generics, and have more control over the API in general.\nThat being said, I don't want to sound dramatic but I think that open-source development is all about collaboration and not competition. Competition is a complete no-fit. Our goal is to develop the best Java client for TensorFlow, no matter how, and we should merge all of our efforts towards this end only. @saudet, if you can't agree with this, then I don't think I can help you much here. BTW, you say that you get no reply from me but I can't recall or find any question or request from you.", "body": "Hi guys, please let me reiterate my thoughts on this.\r\n\r\nI think JavaCPP can be a useful addition to the current Java client but I would keep its usage internal. It perfectly fits as a replacement to the actual JNI bridge, being more flexible and probably more performant. But I would stick to a thin layer of pure-Java for classes that are exposed publicly, so we can easily introduce Java-specific features, like generics, and have more control over the API in general.\r\n\r\nThat being said, I don't want to sound dramatic but I think that open-source development is all about collaboration and not competition. Competition is a complete no-fit. Our goal is to develop the best Java client for TensorFlow, no matter how, and we should merge all of our efforts towards this end only. @saudet, if you can't agree with this, then I don't think I can help you much here. BTW, you say that you get no reply from me but I can't recall or find any question or request from you."}