{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/395952460", "html_url": "https://github.com/tensorflow/tensorflow/issues/17390#issuecomment-395952460", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17390", "id": 395952460, "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTk1MjQ2MA==", "user": {"login": "saudet", "id": 3328023, "node_id": "MDQ6VXNlcjMzMjgwMjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3328023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saudet", "html_url": "https://github.com/saudet", "followers_url": "https://api.github.com/users/saudet/followers", "following_url": "https://api.github.com/users/saudet/following{/other_user}", "gists_url": "https://api.github.com/users/saudet/gists{/gist_id}", "starred_url": "https://api.github.com/users/saudet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saudet/subscriptions", "organizations_url": "https://api.github.com/users/saudet/orgs", "repos_url": "https://api.github.com/users/saudet/repos", "events_url": "https://api.github.com/users/saudet/events{/privacy}", "received_events_url": "https://api.github.com/users/saudet/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-09T08:52:36Z", "updated_at": "2018-06-09T08:52:36Z", "author_association": "NONE", "body_html": "<p>My point isn't about what the end user API should look like, it's about how to get there. There is no need to change what's already been done for the API at all. But you've spend over 2 years hacking in C++ and forcing contributors like <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=10109534\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/karllessard\">@karllessard</a> to contribute in C++. Why not let them contribute to the effort by doing it in Java? We can use the C/C++ API of TensorFlow or of anything else like MXNet for that matter, from Java. Why does no one (other than Skymind) does it that way? I don't know, why should I know? I spend a lot of time arguing about that, but never got a satisfying answer. If no one does something, does it automatically make it wrong?</p>\n<p>TensorFlow could have a  policy to do as much as possible in C++, sure, I guess, but you should make that clear if that's the case. Is it the case?</p>", "body_text": "My point isn't about what the end user API should look like, it's about how to get there. There is no need to change what's already been done for the API at all. But you've spend over 2 years hacking in C++ and forcing contributors like @karllessard to contribute in C++. Why not let them contribute to the effort by doing it in Java? We can use the C/C++ API of TensorFlow or of anything else like MXNet for that matter, from Java. Why does no one (other than Skymind) does it that way? I don't know, why should I know? I spend a lot of time arguing about that, but never got a satisfying answer. If no one does something, does it automatically make it wrong?\nTensorFlow could have a  policy to do as much as possible in C++, sure, I guess, but you should make that clear if that's the case. Is it the case?", "body": "My point isn't about what the end user API should look like, it's about how to get there. There is no need to change what's already been done for the API at all. But you've spend over 2 years hacking in C++ and forcing contributors like @karllessard to contribute in C++. Why not let them contribute to the effort by doing it in Java? We can use the C/C++ API of TensorFlow or of anything else like MXNet for that matter, from Java. Why does no one (other than Skymind) does it that way? I don't know, why should I know? I spend a lot of time arguing about that, but never got a satisfying answer. If no one does something, does it automatically make it wrong?\r\n\r\nTensorFlow could have a  policy to do as much as possible in C++, sure, I guess, but you should make that clear if that's the case. Is it the case?"}