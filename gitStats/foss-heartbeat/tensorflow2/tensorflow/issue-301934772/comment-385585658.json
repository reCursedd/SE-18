{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/385585658", "html_url": "https://github.com/tensorflow/tensorflow/issues/17390#issuecomment-385585658", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17390", "id": 385585658, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTU4NTY1OA==", "user": {"login": "karllessard", "id": 10109534, "node_id": "MDQ6VXNlcjEwMTA5NTM0", "avatar_url": "https://avatars3.githubusercontent.com/u/10109534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karllessard", "html_url": "https://github.com/karllessard", "followers_url": "https://api.github.com/users/karllessard/followers", "following_url": "https://api.github.com/users/karllessard/following{/other_user}", "gists_url": "https://api.github.com/users/karllessard/gists{/gist_id}", "starred_url": "https://api.github.com/users/karllessard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karllessard/subscriptions", "organizations_url": "https://api.github.com/users/karllessard/orgs", "repos_url": "https://api.github.com/users/karllessard/repos", "events_url": "https://api.github.com/users/karllessard/events{/privacy}", "received_events_url": "https://api.github.com/users/karllessard/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-01T02:39:44Z", "updated_at": "2018-05-01T02:39:44Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=18654738\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/up-to-you\">@up-to-you</a> : Well, I haven't look too deeply in the Python code but it looks like it's invoking the core utility <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/lib/io/record_writer.h\"><code>RecordWriter</code></a> to accomplish the task of writing data. We should probably do the same by writing a new <a href=\"https://github.com/tensorflow/tensorflow/tree/master/tensorflow/java/src/main/native\">JNI binding</a> for it.</p>\n<p>Then, for supporting the <code>Example</code> format, I guess we could generate classes out of the <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/example/example.proto\">protocol messages</a> using a <a href=\"https://github.com/google/protobuf/blob/master/examples/BUILD\"><code>java_proto_library</code> rule</a> and maybe wrap their usage in a <code>ExampleBuilder</code> object?</p>", "body_text": "@up-to-you : Well, I haven't look too deeply in the Python code but it looks like it's invoking the core utility RecordWriter to accomplish the task of writing data. We should probably do the same by writing a new JNI binding for it.\nThen, for supporting the Example format, I guess we could generate classes out of the protocol messages using a java_proto_library rule and maybe wrap their usage in a ExampleBuilder object?", "body": "@up-to-you : Well, I haven't look too deeply in the Python code but it looks like it's invoking the core utility [`RecordWriter`](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/lib/io/record_writer.h) to accomplish the task of writing data. We should probably do the same by writing a new [JNI binding](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/java/src/main/native) for it.\r\n\r\nThen, for supporting the `Example` format, I guess we could generate classes out of the [protocol messages](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/example/example.proto) using a [`java_proto_library` rule](https://github.com/google/protobuf/blob/master/examples/BUILD) and maybe wrap their usage in a `ExampleBuilder` object? "}