{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/389514113", "html_url": "https://github.com/tensorflow/tensorflow/issues/17390#issuecomment-389514113", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17390", "id": 389514113, "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTUxNDExMw==", "user": {"login": "karllessard", "id": 10109534, "node_id": "MDQ6VXNlcjEwMTA5NTM0", "avatar_url": "https://avatars3.githubusercontent.com/u/10109534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karllessard", "html_url": "https://github.com/karllessard", "followers_url": "https://api.github.com/users/karllessard/followers", "following_url": "https://api.github.com/users/karllessard/following{/other_user}", "gists_url": "https://api.github.com/users/karllessard/gists{/gist_id}", "starred_url": "https://api.github.com/users/karllessard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karllessard/subscriptions", "organizations_url": "https://api.github.com/users/karllessard/orgs", "repos_url": "https://api.github.com/users/karllessard/repos", "events_url": "https://api.github.com/users/karllessard/events{/privacy}", "received_events_url": "https://api.github.com/users/karllessard/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-16T13:15:22Z", "updated_at": "2018-05-16T13:15:22Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hi <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3886854\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/arnaghizadeh\">@arnaghizadeh</a> , even if <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"310686537\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/18192\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/18192/hovercard\" href=\"https://github.com/tensorflow/tensorflow/pull/18192\">#18192</a> has been commited and that you can build a graph out of it, the work is still in progress and only curious developers should make use of those wrappers right now. To have a fully-compliant graph building API, there is two more tasks to be completed:</p>\n<ol>\n<li>Generate the API classes that exposes those wrappers in a builder fashion. This is what will allow you to write clean code like</li>\n</ol>\n<div class=\"highlight highlight-source-java\"><pre>ops<span class=\"pl-k\">.</span>add(ops<span class=\"pl-k\">.</span>unique(s, <span class=\"pl-smi\">Long</span><span class=\"pl-k\">.</span>class)<span class=\"pl-k\">.</span>y(), ops<span class=\"pl-k\">.</span>constant(<span class=\"pl-c1\">4</span>));</pre></div>\n<p>where right now, you'll need to do something more verbose like</p>\n<div class=\"highlight highlight-source-java\"><pre><span class=\"pl-smi\">Add</span><span class=\"pl-k\">.</span>create(scope, <span class=\"pl-smi\">Unique</span><span class=\"pl-k\">.</span>create(scope, x, <span class=\"pl-smi\">Long</span><span class=\"pl-k\">.</span>class)<span class=\"pl-k\">.</span>y(), <span class=\"pl-smi\">Constant</span><span class=\"pl-k\">.</span>create(scope, <span class=\"pl-c1\">4</span>));</pre></div>\n<p>I was working on that PR last week and it is now ready to be reviewed (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"323464634\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/19309\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/19309/hovercard\" href=\"https://github.com/tensorflow/tensorflow/pull/19309\">#19309</a>)</p>\n<ol start=\"2\">\n<li>Categorise the generated operations wrappers. Right now, all ~800 wrappers are output under the same package, which makes it hard to use, I find. I'll check with <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16018\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/asimshankar\">@asimshankar</a> how they should be divided into groups but the end goal is to have something like:</li>\n</ol>\n<div class=\"highlight highlight-source-java\"><pre>ops<span class=\"pl-k\">.</span>math()<span class=\"pl-k\">.</span>add(ops<span class=\"pl-k\">.</span>array()<span class=\"pl-k\">.</span>unique(s, <span class=\"pl-smi\">Long</span><span class=\"pl-k\">.</span>class)<span class=\"pl-k\">.</span>y(), ops<span class=\"pl-k\">.</span>constant(<span class=\"pl-c1\">4</span>));</pre></div>\n<p>When those two tasks will be completed, I'll write down an example on how to use the new API, thanks for your patience!</p>", "body_text": "Hi @arnaghizadeh , even if #18192 has been commited and that you can build a graph out of it, the work is still in progress and only curious developers should make use of those wrappers right now. To have a fully-compliant graph building API, there is two more tasks to be completed:\n\nGenerate the API classes that exposes those wrappers in a builder fashion. This is what will allow you to write clean code like\n\nops.add(ops.unique(s, Long.class).y(), ops.constant(4));\nwhere right now, you'll need to do something more verbose like\nAdd.create(scope, Unique.create(scope, x, Long.class).y(), Constant.create(scope, 4));\nI was working on that PR last week and it is now ready to be reviewed (#19309)\n\nCategorise the generated operations wrappers. Right now, all ~800 wrappers are output under the same package, which makes it hard to use, I find. I'll check with @asimshankar how they should be divided into groups but the end goal is to have something like:\n\nops.math().add(ops.array().unique(s, Long.class).y(), ops.constant(4));\nWhen those two tasks will be completed, I'll write down an example on how to use the new API, thanks for your patience!", "body": "Hi @arnaghizadeh , even if #18192 has been commited and that you can build a graph out of it, the work is still in progress and only curious developers should make use of those wrappers right now. To have a fully-compliant graph building API, there is two more tasks to be completed:\r\n1. Generate the API classes that exposes those wrappers in a builder fashion. This is what will allow you to write clean code like\r\n```java\r\nops.add(ops.unique(s, Long.class).y(), ops.constant(4));\r\n```\r\nwhere right now, you'll need to do something more verbose like\r\n```java\r\nAdd.create(scope, Unique.create(scope, x, Long.class).y(), Constant.create(scope, 4));\r\n```\r\nI was working on that PR last week and it is now ready to be reviewed (#19309)\r\n\r\n2. Categorise the generated operations wrappers. Right now, all ~800 wrappers are output under the same package, which makes it hard to use, I find. I'll check with @asimshankar how they should be divided into groups but the end goal is to have something like:\r\n```java\r\nops.math().add(ops.array().unique(s, Long.class).y(), ops.constant(4));\r\n```\r\nWhen those two tasks will be completed, I'll write down an example on how to use the new API, thanks for your patience!"}