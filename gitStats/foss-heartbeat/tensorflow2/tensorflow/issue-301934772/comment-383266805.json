{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/383266805", "html_url": "https://github.com/tensorflow/tensorflow/issues/17390#issuecomment-383266805", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17390", "id": 383266805, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzI2NjgwNQ==", "user": {"login": "saudet", "id": 3328023, "node_id": "MDQ6VXNlcjMzMjgwMjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3328023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saudet", "html_url": "https://github.com/saudet", "followers_url": "https://api.github.com/users/saudet/followers", "following_url": "https://api.github.com/users/saudet/following{/other_user}", "gists_url": "https://api.github.com/users/saudet/gists{/gist_id}", "starred_url": "https://api.github.com/users/saudet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saudet/subscriptions", "organizations_url": "https://api.github.com/users/saudet/orgs", "repos_url": "https://api.github.com/users/saudet/repos", "events_url": "https://api.github.com/users/saudet/events{/privacy}", "received_events_url": "https://api.github.com/users/saudet/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-21T04:25:38Z", "updated_at": "2018-04-21T04:25:38Z", "author_association": "NONE", "body_html": "<p>In any case, my point is that if we could offer developers the option of contributing code in Java instead of having them write most of the plumbing in C++, TensorFlow would get a much wider adoption from the Java community. Many Python developers can also write code in C++, but this is not typically the case of Java developers.</p>\n<p>It's also one of the big differences between SWIG and JavaCPP. With SWIG, developers are forced to code in both C++ and the \"scripting language\" (Python, Java, etc). Instead, JavaCPP maps the C++ API wholesale, offering a complete and usable Java interface, without any need to write or make adjustments to the C++ code. BTW, if anyone knows of an alternative to access the full C++ API of TensorFlow from Java (or from any other platform for that matter, in C#, Go, Rust, JavaScript, etc), please let me know: I would welcome competition! :)</p>", "body_text": "In any case, my point is that if we could offer developers the option of contributing code in Java instead of having them write most of the plumbing in C++, TensorFlow would get a much wider adoption from the Java community. Many Python developers can also write code in C++, but this is not typically the case of Java developers.\nIt's also one of the big differences between SWIG and JavaCPP. With SWIG, developers are forced to code in both C++ and the \"scripting language\" (Python, Java, etc). Instead, JavaCPP maps the C++ API wholesale, offering a complete and usable Java interface, without any need to write or make adjustments to the C++ code. BTW, if anyone knows of an alternative to access the full C++ API of TensorFlow from Java (or from any other platform for that matter, in C#, Go, Rust, JavaScript, etc), please let me know: I would welcome competition! :)", "body": "In any case, my point is that if we could offer developers the option of contributing code in Java instead of having them write most of the plumbing in C++, TensorFlow would get a much wider adoption from the Java community. Many Python developers can also write code in C++, but this is not typically the case of Java developers.\r\n\r\nIt's also one of the big differences between SWIG and JavaCPP. With SWIG, developers are forced to code in both C++ and the \"scripting language\" (Python, Java, etc). Instead, JavaCPP maps the C++ API wholesale, offering a complete and usable Java interface, without any need to write or make adjustments to the C++ code. BTW, if anyone knows of an alternative to access the full C++ API of TensorFlow from Java (or from any other platform for that matter, in C#, Go, Rust, JavaScript, etc), please let me know: I would welcome competition! :)"}