{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/338340936", "html_url": "https://github.com/tensorflow/tensorflow/issues/13826#issuecomment-338340936", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13826", "id": 338340936, "node_id": "MDEyOklzc3VlQ29tbWVudDMzODM0MDkzNg==", "user": {"login": "andydavis1", "id": 15696327, "node_id": "MDQ6VXNlcjE1Njk2MzI3", "avatar_url": "https://avatars0.githubusercontent.com/u/15696327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andydavis1", "html_url": "https://github.com/andydavis1", "followers_url": "https://api.github.com/users/andydavis1/followers", "following_url": "https://api.github.com/users/andydavis1/following{/other_user}", "gists_url": "https://api.github.com/users/andydavis1/gists{/gist_id}", "starred_url": "https://api.github.com/users/andydavis1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andydavis1/subscriptions", "organizations_url": "https://api.github.com/users/andydavis1/orgs", "repos_url": "https://api.github.com/users/andydavis1/repos", "events_url": "https://api.github.com/users/andydavis1/events{/privacy}", "received_events_url": "https://api.github.com/users/andydavis1/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-20T22:57:44Z", "updated_at": "2017-10-20T22:57:44Z", "author_association": "MEMBER", "body_html": "<p>Again, maybe I'm missing something, but your initial cases make sense to me. If the induction variable update is a integer in the loop body, then it cannot compute a gradient and so returns None. However, if the induction variable it a float it can compute a gradient and so returns one. This seems \"working as intended\", no?</p>", "body_text": "Again, maybe I'm missing something, but your initial cases make sense to me. If the induction variable update is a integer in the loop body, then it cannot compute a gradient and so returns None. However, if the induction variable it a float it can compute a gradient and so returns one. This seems \"working as intended\", no?", "body": "Again, maybe I'm missing something, but your initial cases make sense to me. If the induction variable update is a integer in the loop body, then it cannot compute a gradient and so returns None. However, if the induction variable it a float it can compute a gradient and so returns one. This seems \"working as intended\", no?"}