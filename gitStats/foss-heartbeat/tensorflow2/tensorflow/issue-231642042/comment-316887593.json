{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/316887593", "html_url": "https://github.com/tensorflow/tensorflow/issues/10220#issuecomment-316887593", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10220", "id": 316887593, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjg4NzU5Mw==", "user": {"login": "gdahlm", "id": 1113240, "node_id": "MDQ6VXNlcjExMTMyNDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1113240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gdahlm", "html_url": "https://github.com/gdahlm", "followers_url": "https://api.github.com/users/gdahlm/followers", "following_url": "https://api.github.com/users/gdahlm/following{/other_user}", "gists_url": "https://api.github.com/users/gdahlm/gists{/gist_id}", "starred_url": "https://api.github.com/users/gdahlm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gdahlm/subscriptions", "organizations_url": "https://api.github.com/users/gdahlm/orgs", "repos_url": "https://api.github.com/users/gdahlm/repos", "events_url": "https://api.github.com/users/gdahlm/events{/privacy}", "received_events_url": "https://api.github.com/users/gdahlm/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-21T02:50:43Z", "updated_at": "2017-07-21T02:50:43Z", "author_association": "NONE", "body_html": "<p>Switching back to <code>gcc-4.9</code> only fixes the issue because it doesn't have the intrinsic for avx512 yet.</p>\n<p>Something in the GPU code is including <code>immintrin.h</code> which now includes the new avx512 instructions for hardware enablement.</p>\n<p>gcc-5  5.4.1-11ubuntu2  is the version on my machine, and it doesn't matter if I add/remove MKL, XLA or any other options it will compile fine.  And yes I can compile with gcc-4.9 but it doesn't even natively support skylake let alone AVX512 instructions.</p>\n<p>My C++ is rusty and bazel is new to me, but it seems like some work on includes in  <code>tensorflow/core/platform/platform.h</code></p>\n<p>Nvidia technically supports GCC 5.4 which would should this problem, and it is a problem with llvm 3.8.1 too as it also includes these intrinsic types with an include of immintrin.h.</p>\n<p>I wish I wasn't so rusty or I would help to get access to these instructions but from looking around the  real options seem to be either pull out the inclusion of the gcc intrinsics from cudacc code or adding explicit casts for the new types.</p>", "body_text": "Switching back to gcc-4.9 only fixes the issue because it doesn't have the intrinsic for avx512 yet.\nSomething in the GPU code is including immintrin.h which now includes the new avx512 instructions for hardware enablement.\ngcc-5  5.4.1-11ubuntu2  is the version on my machine, and it doesn't matter if I add/remove MKL, XLA or any other options it will compile fine.  And yes I can compile with gcc-4.9 but it doesn't even natively support skylake let alone AVX512 instructions.\nMy C++ is rusty and bazel is new to me, but it seems like some work on includes in  tensorflow/core/platform/platform.h\nNvidia technically supports GCC 5.4 which would should this problem, and it is a problem with llvm 3.8.1 too as it also includes these intrinsic types with an include of immintrin.h.\nI wish I wasn't so rusty or I would help to get access to these instructions but from looking around the  real options seem to be either pull out the inclusion of the gcc intrinsics from cudacc code or adding explicit casts for the new types.", "body": "Switching back to `gcc-4.9` only fixes the issue because it doesn't have the intrinsic for avx512 yet.\r\n\r\nSomething in the GPU code is including `immintrin.h` which now includes the new avx512 instructions for hardware enablement. \r\n\r\ngcc-5  5.4.1-11ubuntu2  is the version on my machine, and it doesn't matter if I add/remove MKL, XLA or any other options it will compile fine.  And yes I can compile with gcc-4.9 but it doesn't even natively support skylake let alone AVX512 instructions.\r\n\r\nMy C++ is rusty and bazel is new to me, but it seems like some work on includes in  `tensorflow/core/platform/platform.h` \r\n\r\nNvidia technically supports GCC 5.4 which would should this problem, and it is a problem with llvm 3.8.1 too as it also includes these intrinsic types with an include of immintrin.h.\r\n\r\nI wish I wasn't so rusty or I would help to get access to these instructions but from looking around the  real options seem to be either pull out the inclusion of the gcc intrinsics from cudacc code or adding explicit casts for the new types.\r\n\r\n"}