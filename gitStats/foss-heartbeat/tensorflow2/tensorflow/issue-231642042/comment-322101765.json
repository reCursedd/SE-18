{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/322101765", "html_url": "https://github.com/tensorflow/tensorflow/issues/10220#issuecomment-322101765", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10220", "id": 322101765, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjEwMTc2NQ==", "user": {"login": "tfboyd", "id": 23486130, "node_id": "MDQ6VXNlcjIzNDg2MTMw", "avatar_url": "https://avatars1.githubusercontent.com/u/23486130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tfboyd", "html_url": "https://github.com/tfboyd", "followers_url": "https://api.github.com/users/tfboyd/followers", "following_url": "https://api.github.com/users/tfboyd/following{/other_user}", "gists_url": "https://api.github.com/users/tfboyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tfboyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tfboyd/subscriptions", "organizations_url": "https://api.github.com/users/tfboyd/orgs", "repos_url": "https://api.github.com/users/tfboyd/repos", "events_url": "https://api.github.com/users/tfboyd/events{/privacy}", "received_events_url": "https://api.github.com/users/tfboyd/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-14T05:12:39Z", "updated_at": "2017-08-14T05:12:39Z", "author_association": "MEMBER", "body_html": "<p>Stress before saying something that is likely not useful.  I do not recall building from head in the past few weeks.  Sharing what I have done recently, which I doubt is helpful but it is the only info I have that has a remote chance of being helpful.</p>\n<p>I built 1.3.0rc2  multiple times on a stock 16.04 setup (on AWS) with AVX2,  CUDA 8 and cuDNN 6 .  I did not use the CUDA 8 Patch 2 (which I can say performs poorly for inception3 and Resnet and possibly others on K80s even more so as I scaled from 1 to 8 GPUs. No idea why (maybe I did something wrong) and I did not try other GPUs for 1 GPU is seemed the same).</p>\n<p>The version of Bazel I use is 0.5.1.  I do not think that matters just sharing exactly what I was using.  I would NOT use 0.5.3 although I think the problem was fixed.</p>\n<p>I normally build with this command and the only option I add during the <code>./configure</code> that is not default is CUDA.<br>\n<code>bazel build -c opt --copt=-march=\"haswell\" --config=cuda //tensorflow/tools/pip_package:build_pip_package</code></p>", "body_text": "Stress before saying something that is likely not useful.  I do not recall building from head in the past few weeks.  Sharing what I have done recently, which I doubt is helpful but it is the only info I have that has a remote chance of being helpful.\nI built 1.3.0rc2  multiple times on a stock 16.04 setup (on AWS) with AVX2,  CUDA 8 and cuDNN 6 .  I did not use the CUDA 8 Patch 2 (which I can say performs poorly for inception3 and Resnet and possibly others on K80s even more so as I scaled from 1 to 8 GPUs. No idea why (maybe I did something wrong) and I did not try other GPUs for 1 GPU is seemed the same).\nThe version of Bazel I use is 0.5.1.  I do not think that matters just sharing exactly what I was using.  I would NOT use 0.5.3 although I think the problem was fixed.\nI normally build with this command and the only option I add during the ./configure that is not default is CUDA.\nbazel build -c opt --copt=-march=\"haswell\" --config=cuda //tensorflow/tools/pip_package:build_pip_package", "body": "Stress before saying something that is likely not useful.  I do not recall building from head in the past few weeks.  Sharing what I have done recently, which I doubt is helpful but it is the only info I have that has a remote chance of being helpful.  \r\n\r\nI built 1.3.0rc2  multiple times on a stock 16.04 setup (on AWS) with AVX2,  CUDA 8 and cuDNN 6 .  I did not use the CUDA 8 Patch 2 (which I can say performs poorly for inception3 and Resnet and possibly others on K80s even more so as I scaled from 1 to 8 GPUs. No idea why (maybe I did something wrong) and I did not try other GPUs for 1 GPU is seemed the same).\r\n\r\nThe version of Bazel I use is 0.5.1.  I do not think that matters just sharing exactly what I was using.  I would NOT use 0.5.3 although I think the problem was fixed.\r\n\r\nI normally build with this command and the only option I add during the `./configure` that is not default is CUDA.\r\n`bazel build -c opt --copt=-march=\"haswell\" --config=cuda //tensorflow/tools/pip_package:build_pip_package`\r\n"}