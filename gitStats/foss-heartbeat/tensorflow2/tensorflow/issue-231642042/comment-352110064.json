{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/352110064", "html_url": "https://github.com/tensorflow/tensorflow/issues/10220#issuecomment-352110064", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10220", "id": 352110064, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjExMDA2NA==", "user": {"login": "fischman", "id": 114212, "node_id": "MDQ6VXNlcjExNDIxMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/114212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fischman", "html_url": "https://github.com/fischman", "followers_url": "https://api.github.com/users/fischman/followers", "following_url": "https://api.github.com/users/fischman/following{/other_user}", "gists_url": "https://api.github.com/users/fischman/gists{/gist_id}", "starred_url": "https://api.github.com/users/fischman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fischman/subscriptions", "organizations_url": "https://api.github.com/users/fischman/orgs", "repos_url": "https://api.github.com/users/fischman/repos", "events_url": "https://api.github.com/users/fischman/events{/privacy}", "received_events_url": "https://api.github.com/users/fischman/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-15T20:57:42Z", "updated_at": "2017-12-15T20:57:42Z", "author_association": "NONE", "body_html": "<p>I think the problem here is that gcc-5.5 shipped with avx512*intrin.h headers that switched to using <code>void*</code> and <code>const void*</code> (<a href=\"https://gcc.gnu.org/bugzilla/show_bug.cgi?id=76731\" rel=\"nofollow\">https://gcc.gnu.org/bugzilla/show_bug.cgi?id=76731</a>) but without switching the builtins to do the same.  This is why 5.4 works but 5.5 breaks.  The tensorflow r1.4 build at least can be unbroken for 5.5 by locally rolling back the above change with e.g.:</p>\n<div class=\"highlight highlight-source-shell\"><pre><span class=\"pl-k\">for</span> <span class=\"pl-smi\">f</span> <span class=\"pl-k\">in</span> avx512fintrin.h avx512pfintrin.h avx512vlintrin.h<span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span>\n   curl -H <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>User-Agent:Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36<span class=\"pl-pds\">\"</span></span> -o <span class=\"pl-smi\">$f</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>https://gcc.gnu.org/viewcvs/gcc/branches/gcc-5-branch/gcc/config/i386/<span class=\"pl-smi\">${f}</span>?view=co&amp;revision=245536&amp;content-type=text%2Fplain&amp;pathrev=245536<span class=\"pl-pds\">\"</span></span>\n<span class=\"pl-k\">done</span> <span class=\"pl-k\">&amp;&amp;</span> mv avx512<span class=\"pl-k\">*</span>intrin.h  /usr/lib/gcc/x86_64-linux-gnu/5/include/</pre></div>\n<p>This is a terrible idea (who knows what else it's rolling back? are you really cherrypicking 3 random files out of an entire release? and so on) and nobody should do it, of course.</p>\n<p>But maybe, if you're trying to build tensorflow for GPU (so require nvcc, so require GCC &lt; 6) inside an ubuntu:17.10 docker image (so don't have an apt-get'able gcc-5.4 option), this might be useful.</p>", "body_text": "I think the problem here is that gcc-5.5 shipped with avx512*intrin.h headers that switched to using void* and const void* (https://gcc.gnu.org/bugzilla/show_bug.cgi?id=76731) but without switching the builtins to do the same.  This is why 5.4 works but 5.5 breaks.  The tensorflow r1.4 build at least can be unbroken for 5.5 by locally rolling back the above change with e.g.:\nfor f in avx512fintrin.h avx512pfintrin.h avx512vlintrin.h; do\n   curl -H \"User-Agent:Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36\" -o $f \"https://gcc.gnu.org/viewcvs/gcc/branches/gcc-5-branch/gcc/config/i386/${f}?view=co&revision=245536&content-type=text%2Fplain&pathrev=245536\"\ndone && mv avx512*intrin.h  /usr/lib/gcc/x86_64-linux-gnu/5/include/\nThis is a terrible idea (who knows what else it's rolling back? are you really cherrypicking 3 random files out of an entire release? and so on) and nobody should do it, of course.\nBut maybe, if you're trying to build tensorflow for GPU (so require nvcc, so require GCC < 6) inside an ubuntu:17.10 docker image (so don't have an apt-get'able gcc-5.4 option), this might be useful.", "body": "I think the problem here is that gcc-5.5 shipped with avx512\\*intrin.h headers that switched to using `void*` and `const void*` (https://gcc.gnu.org/bugzilla/show_bug.cgi?id=76731) but without switching the builtins to do the same.  This is why 5.4 works but 5.5 breaks.  The tensorflow r1.4 build at least can be unbroken for 5.5 by locally rolling back the above change with e.g.:\r\n```shell\r\nfor f in avx512fintrin.h avx512pfintrin.h avx512vlintrin.h; do\r\n   curl -H \"User-Agent:Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36\" -o $f \"https://gcc.gnu.org/viewcvs/gcc/branches/gcc-5-branch/gcc/config/i386/${f}?view=co&revision=245536&content-type=text%2Fplain&pathrev=245536\"\r\ndone && mv avx512*intrin.h  /usr/lib/gcc/x86_64-linux-gnu/5/include/\r\n```\r\nThis is a terrible idea (who knows what else it's rolling back? are you really cherrypicking 3 random files out of an entire release? and so on) and nobody should do it, of course.\r\n\r\nBut maybe, if you're trying to build tensorflow for GPU (so require nvcc, so require GCC < 6) inside an ubuntu:17.10 docker image (so don't have an apt-get'able gcc-5.4 option), this might be useful."}