{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/407246103", "html_url": "https://github.com/tensorflow/tensorflow/issues/20273#issuecomment-407246103", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20273", "id": 407246103, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzI0NjEwMw==", "user": {"login": "qlzh727", "id": 5118881, "node_id": "MDQ6VXNlcjUxMTg4ODE=", "avatar_url": "https://avatars3.githubusercontent.com/u/5118881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qlzh727", "html_url": "https://github.com/qlzh727", "followers_url": "https://api.github.com/users/qlzh727/followers", "following_url": "https://api.github.com/users/qlzh727/following{/other_user}", "gists_url": "https://api.github.com/users/qlzh727/gists{/gist_id}", "starred_url": "https://api.github.com/users/qlzh727/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qlzh727/subscriptions", "organizations_url": "https://api.github.com/users/qlzh727/orgs", "repos_url": "https://api.github.com/users/qlzh727/repos", "events_url": "https://api.github.com/users/qlzh727/events{/privacy}", "received_events_url": "https://api.github.com/users/qlzh727/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-24T01:00:35Z", "updated_at": "2018-07-24T01:00:35Z", "author_association": "MEMBER", "body_html": "<p>\"A possible feature request: would it be possible to have a high-level wrapper that makes this choice automatically based on the availability of a CUDA device, saving and restoring weights accordingly? This should be possible with tf.test.is_gpu_available(cuda_only=True)\"</p>\n<p>We are actually trying to unify the API for this exact direction. Basically the new API will figure out the best choice implementation for user based on the available hardware, and user don't have to specify whether its CuDNN or CPU implementation in the code. Currently we are still in the design stage, and will post more results when the APIs are finalized. The new API will probably be available as part of the change in Tensorflow 2.0.</p>", "body_text": "\"A possible feature request: would it be possible to have a high-level wrapper that makes this choice automatically based on the availability of a CUDA device, saving and restoring weights accordingly? This should be possible with tf.test.is_gpu_available(cuda_only=True)\"\nWe are actually trying to unify the API for this exact direction. Basically the new API will figure out the best choice implementation for user based on the available hardware, and user don't have to specify whether its CuDNN or CPU implementation in the code. Currently we are still in the design stage, and will post more results when the APIs are finalized. The new API will probably be available as part of the change in Tensorflow 2.0.", "body": "\"A possible feature request: would it be possible to have a high-level wrapper that makes this choice automatically based on the availability of a CUDA device, saving and restoring weights accordingly? This should be possible with tf.test.is_gpu_available(cuda_only=True)\"\r\n\r\nWe are actually trying to unify the API for this exact direction. Basically the new API will figure out the best choice implementation for user based on the available hardware, and user don't have to specify whether its CuDNN or CPU implementation in the code. Currently we are still in the design stage, and will post more results when the APIs are finalized. The new API will probably be available as part of the change in Tensorflow 2.0."}