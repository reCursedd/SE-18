{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/348649139", "html_url": "https://github.com/tensorflow/tensorflow/issues/14788#issuecomment-348649139", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14788", "id": 348649139, "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODY0OTEzOQ==", "user": {"login": "facaiy", "id": 1112263, "node_id": "MDQ6VXNlcjExMTIyNjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1112263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facaiy", "html_url": "https://github.com/facaiy", "followers_url": "https://api.github.com/users/facaiy/followers", "following_url": "https://api.github.com/users/facaiy/following{/other_user}", "gists_url": "https://api.github.com/users/facaiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/facaiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facaiy/subscriptions", "organizations_url": "https://api.github.com/users/facaiy/orgs", "repos_url": "https://api.github.com/users/facaiy/repos", "events_url": "https://api.github.com/users/facaiy/events{/privacy}", "received_events_url": "https://api.github.com/users/facaiy/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-02T00:19:25Z", "updated_at": "2017-12-02T00:20:46Z", "author_association": "MEMBER", "body_html": "<p>At first I think a variable is not a tensor until I see the official document:</p>\n<p><a href=\"https://www.tensorflow.org/programmers_guide/tensors\" rel=\"nofollow\">Tensors - Programmers' Guide</a></p>\n<blockquote>\n<p>Some types of tensors are special, and these will be covered in other units of the Programmer's guide. The main ones are:</p>\n<blockquote>\n<pre><code> tf.Variable\n tf.Constant\n tf.Placeholder\n tf.SparseTensor\n</code></pre>\n</blockquote>\n</blockquote>\n<p>If I understand it correctly, there are only one kind of <code>Tensor</code> in C++ side (except of sparse case): it can be mutable or immutable which depends on <code>dtype</code>. However, it is not that simple in Python side:</p>\n<ul>\n<li><code>tf.Constant</code> return immutable <code>tf.Tensor</code>.</li>\n<li><code>tf.Variable</code> doesn't return <code>tf.Tensor</code>, however they are treated as same class in most cases, say <code>tf.add</code>. I think <code>tf.Variable</code> is a wrapper for mutable <code>tf.Tensor</code>, right?</li>\n</ul>\n<p>It seems that doc of <code>tf.Print</code> is accurate as <code>tf.identity</code>, what confuse us is how to regard <code>tf.Variable</code>: is it a tensor or not?</p>\n<blockquote>\n<p>tf.Print:</p>\n<blockquote>\n<p>Returns:<br>\nSame tensor as input_.</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>tf.identity:</p>\n<blockquote>\n<p>Returns:<br>\nA Tensor. Has the same type as input.</p>\n</blockquote>\n</blockquote>", "body_text": "At first I think a variable is not a tensor until I see the official document:\nTensors - Programmers' Guide\n\nSome types of tensors are special, and these will be covered in other units of the Programmer's guide. The main ones are:\n\n tf.Variable\n tf.Constant\n tf.Placeholder\n tf.SparseTensor\n\n\n\nIf I understand it correctly, there are only one kind of Tensor in C++ side (except of sparse case): it can be mutable or immutable which depends on dtype. However, it is not that simple in Python side:\n\ntf.Constant return immutable tf.Tensor.\ntf.Variable doesn't return tf.Tensor, however they are treated as same class in most cases, say tf.add. I think tf.Variable is a wrapper for mutable tf.Tensor, right?\n\nIt seems that doc of tf.Print is accurate as tf.identity, what confuse us is how to regard tf.Variable: is it a tensor or not?\n\ntf.Print:\n\nReturns:\nSame tensor as input_.\n\n\n\ntf.identity:\n\nReturns:\nA Tensor. Has the same type as input.", "body": "At first I think a variable is not a tensor until I see the official document:\r\n\r\n[Tensors - Programmers' Guide](https://www.tensorflow.org/programmers_guide/tensors)\r\n> Some types of tensors are special, and these will be covered in other units of the Programmer's guide. The main ones are:\r\n>>      tf.Variable\r\n>>      tf.Constant\r\n>>      tf.Placeholder\r\n>>      tf.SparseTensor\r\n\r\nIf I understand it correctly, there are only one kind of `Tensor` in C++ side (except of sparse case): it can be mutable or immutable which depends on `dtype`. However, it is not that simple in Python side:\r\n- `tf.Constant` return immutable `tf.Tensor`.\r\n- `tf.Variable` doesn't return `tf.Tensor`, however they are treated as same class in most cases, say `tf.add`. I think `tf.Variable` is a wrapper for mutable `tf.Tensor`, right?\r\n\r\nIt seems that doc of `tf.Print` is accurate as `tf.identity`, what confuse us is how to regard `tf.Variable`: is it a tensor or not?\r\n\r\n> tf.Print:\r\n>> Returns:\r\n>> Same tensor as input_.\r\n\r\n> tf.identity:\r\n>> Returns:\r\n>> A Tensor. Has the same type as input."}