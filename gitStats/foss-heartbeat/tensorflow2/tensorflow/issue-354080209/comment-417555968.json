{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/417555968", "html_url": "https://github.com/tensorflow/tensorflow/issues/21881#issuecomment-417555968", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21881", "id": 417555968, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzU1NTk2OA==", "user": {"login": "Coderx7", "id": 5382892, "node_id": "MDQ6VXNlcjUzODI4OTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5382892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Coderx7", "html_url": "https://github.com/Coderx7", "followers_url": "https://api.github.com/users/Coderx7/followers", "following_url": "https://api.github.com/users/Coderx7/following{/other_user}", "gists_url": "https://api.github.com/users/Coderx7/gists{/gist_id}", "starred_url": "https://api.github.com/users/Coderx7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Coderx7/subscriptions", "organizations_url": "https://api.github.com/users/Coderx7/orgs", "repos_url": "https://api.github.com/users/Coderx7/repos", "events_url": "https://api.github.com/users/Coderx7/events{/privacy}", "received_events_url": "https://api.github.com/users/Coderx7/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-31T05:29:11Z", "updated_at": "2018-08-31T05:29:11Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=23486130\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/tfboyd\">@tfboyd</a> : Thanks a lot for the interest. here is what you asked for  : <a href=\"https://github.com/Coderx7/TF_Pytorch_testbed\">TF_Pytorch_testbed</a><br>\nFor the  timing just look at the  elapsed time since the previous epoch consider these two:</p>\n<pre><code>==&gt;&gt;[2018-08-19 00:00:26] [Epoch=000/450] [Need: 00:00:00] [learning_rate=0.100000] [Best : Accuracy=0.00, Error=100.00]\n  Epoch: [000][000/500]   Time 1.345 (1.345)   Data 0.089 (0.089)   Loss 4.8846 (4.8846)   Prec@1 0.000 (0.000)   Prec@5 4.000 (4.000)   [2018-08-19 00:00:28]\n  Epoch: [000][200/500]   Time 0.089 (0.096)   Data 0.000 (0.001)   Loss 4.0047 (4.3586)   Prec@1 6.000 (3.771)   Prec@5 28.000 (14.930)   [2018-08-19 00:00:46]\n  Epoch: [000][400/500]   Time 0.089 (0.093)   Data 0.000 (0.000)   Loss 3.9328 (4.1781)   Prec@1 9.000 (5.519)   Prec@5 26.000 (20.142)   [2018-08-19 00:01:04]\n  **Train** Prec@1 6.352 Prec@5 22.334 Error@1 93.648\n  **Test** Prec@1 8.520 Prec@5 31.600 Error@1 91.480\n\n==&gt;&gt;[2018-08-19 00:01:17] [Epoch=001/450] [Need: 06:07:54] [learning_rate=0.100000] [Best : Accuracy=8.52, Error=91.48]\n  Epoch: [001][000/500]   Time 0.128 (0.128)   Data 0.086 (0.086)   Loss 3.7810 (3.7810)   Prec@1 9.000 (9.000)   Prec@5 34.000 (34.000)   [2018-08-19 00:01:17]\n  Epoch: [001][200/500]   Time 0.090 (0.090)   Data 0.000 (0.001)   Loss 3.5385 (3.7109)   Prec@1 18.000 (11.517)   Prec@5 39.000 (34.861)   [2018-08-19 00:01:35]\n  Epoch: [001][400/500]   Time 0.088 (0.090)   Data 0.000 (0.000)   Loss 3.6088 (3.6151)   Prec@1 11.000 (13.274)   Prec@5 34.000 (38.102)   [2018-08-19 00:01:54]\n  **Train** Prec@1 14.048 Prec@5 39.416 Error@1 85.952\n  **Test** Prec@1 19.110 Prec@5 45.950 Error@1 80.890\n</code></pre>\n<p>here :</p>\n<pre><code>==&gt;&gt;[2018-08-19 00:00:26] [Epoch=000/450]  \n==&gt;&gt;[2018-08-19 00:01:17] [Epoch=001/450]  \n</code></pre>\n<p>from <code>00:00:26 </code> to <code>00:01:17</code> which is 51 seconds.</p>", "body_text": "@tfboyd : Thanks a lot for the interest. here is what you asked for  : TF_Pytorch_testbed\nFor the  timing just look at the  elapsed time since the previous epoch consider these two:\n==>>[2018-08-19 00:00:26] [Epoch=000/450] [Need: 00:00:00] [learning_rate=0.100000] [Best : Accuracy=0.00, Error=100.00]\n  Epoch: [000][000/500]   Time 1.345 (1.345)   Data 0.089 (0.089)   Loss 4.8846 (4.8846)   Prec@1 0.000 (0.000)   Prec@5 4.000 (4.000)   [2018-08-19 00:00:28]\n  Epoch: [000][200/500]   Time 0.089 (0.096)   Data 0.000 (0.001)   Loss 4.0047 (4.3586)   Prec@1 6.000 (3.771)   Prec@5 28.000 (14.930)   [2018-08-19 00:00:46]\n  Epoch: [000][400/500]   Time 0.089 (0.093)   Data 0.000 (0.000)   Loss 3.9328 (4.1781)   Prec@1 9.000 (5.519)   Prec@5 26.000 (20.142)   [2018-08-19 00:01:04]\n  **Train** Prec@1 6.352 Prec@5 22.334 Error@1 93.648\n  **Test** Prec@1 8.520 Prec@5 31.600 Error@1 91.480\n\n==>>[2018-08-19 00:01:17] [Epoch=001/450] [Need: 06:07:54] [learning_rate=0.100000] [Best : Accuracy=8.52, Error=91.48]\n  Epoch: [001][000/500]   Time 0.128 (0.128)   Data 0.086 (0.086)   Loss 3.7810 (3.7810)   Prec@1 9.000 (9.000)   Prec@5 34.000 (34.000)   [2018-08-19 00:01:17]\n  Epoch: [001][200/500]   Time 0.090 (0.090)   Data 0.000 (0.001)   Loss 3.5385 (3.7109)   Prec@1 18.000 (11.517)   Prec@5 39.000 (34.861)   [2018-08-19 00:01:35]\n  Epoch: [001][400/500]   Time 0.088 (0.090)   Data 0.000 (0.000)   Loss 3.6088 (3.6151)   Prec@1 11.000 (13.274)   Prec@5 34.000 (38.102)   [2018-08-19 00:01:54]\n  **Train** Prec@1 14.048 Prec@5 39.416 Error@1 85.952\n  **Test** Prec@1 19.110 Prec@5 45.950 Error@1 80.890\n\nhere :\n==>>[2018-08-19 00:00:26] [Epoch=000/450]  \n==>>[2018-08-19 00:01:17] [Epoch=001/450]  \n\nfrom 00:00:26  to 00:01:17 which is 51 seconds.", "body": "@tfboyd : Thanks a lot for the interest. here is what you asked for  : [TF_Pytorch_testbed](https://github.com/Coderx7/TF_Pytorch_testbed )  \r\nFor the  timing just look at the  elapsed time since the previous epoch consider these two: \r\n```\r\n==>>[2018-08-19 00:00:26] [Epoch=000/450] [Need: 00:00:00] [learning_rate=0.100000] [Best : Accuracy=0.00, Error=100.00]\r\n  Epoch: [000][000/500]   Time 1.345 (1.345)   Data 0.089 (0.089)   Loss 4.8846 (4.8846)   Prec@1 0.000 (0.000)   Prec@5 4.000 (4.000)   [2018-08-19 00:00:28]\r\n  Epoch: [000][200/500]   Time 0.089 (0.096)   Data 0.000 (0.001)   Loss 4.0047 (4.3586)   Prec@1 6.000 (3.771)   Prec@5 28.000 (14.930)   [2018-08-19 00:00:46]\r\n  Epoch: [000][400/500]   Time 0.089 (0.093)   Data 0.000 (0.000)   Loss 3.9328 (4.1781)   Prec@1 9.000 (5.519)   Prec@5 26.000 (20.142)   [2018-08-19 00:01:04]\r\n  **Train** Prec@1 6.352 Prec@5 22.334 Error@1 93.648\r\n  **Test** Prec@1 8.520 Prec@5 31.600 Error@1 91.480\r\n\r\n==>>[2018-08-19 00:01:17] [Epoch=001/450] [Need: 06:07:54] [learning_rate=0.100000] [Best : Accuracy=8.52, Error=91.48]\r\n  Epoch: [001][000/500]   Time 0.128 (0.128)   Data 0.086 (0.086)   Loss 3.7810 (3.7810)   Prec@1 9.000 (9.000)   Prec@5 34.000 (34.000)   [2018-08-19 00:01:17]\r\n  Epoch: [001][200/500]   Time 0.090 (0.090)   Data 0.000 (0.001)   Loss 3.5385 (3.7109)   Prec@1 18.000 (11.517)   Prec@5 39.000 (34.861)   [2018-08-19 00:01:35]\r\n  Epoch: [001][400/500]   Time 0.088 (0.090)   Data 0.000 (0.000)   Loss 3.6088 (3.6151)   Prec@1 11.000 (13.274)   Prec@5 34.000 (38.102)   [2018-08-19 00:01:54]\r\n  **Train** Prec@1 14.048 Prec@5 39.416 Error@1 85.952\r\n  **Test** Prec@1 19.110 Prec@5 45.950 Error@1 80.890\r\n```\r\n\r\nhere : \r\n```\r\n==>>[2018-08-19 00:00:26] [Epoch=000/450]  \r\n==>>[2018-08-19 00:01:17] [Epoch=001/450]  \r\n```\r\nfrom `00:00:26 ` to `00:01:17` which is 51 seconds.\r\n"}