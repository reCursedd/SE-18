{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/362228866", "html_url": "https://github.com/tensorflow/tensorflow/issues/16584#issuecomment-362228866", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16584", "id": 362228866, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjIyODg2Ng==", "user": {"login": "volvador", "id": 15655730, "node_id": "MDQ6VXNlcjE1NjU1NzMw", "avatar_url": "https://avatars1.githubusercontent.com/u/15655730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/volvador", "html_url": "https://github.com/volvador", "followers_url": "https://api.github.com/users/volvador/followers", "following_url": "https://api.github.com/users/volvador/following{/other_user}", "gists_url": "https://api.github.com/users/volvador/gists{/gist_id}", "starred_url": "https://api.github.com/users/volvador/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/volvador/subscriptions", "organizations_url": "https://api.github.com/users/volvador/orgs", "repos_url": "https://api.github.com/users/volvador/repos", "events_url": "https://api.github.com/users/volvador/events{/privacy}", "received_events_url": "https://api.github.com/users/volvador/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-01T10:47:45Z", "updated_at": "2018-02-01T10:47:45Z", "author_association": "NONE", "body_html": "<p>Thank you. I think it is <code>trainable_weights</code> instead of <code>trainable_variables</code><br>\nInspired by your answer this is what I did</p>\n<pre><code>clone_ops = []\nfor i, src in enumerate(model.trainable_weights):\n      op = tf.assign(clone_model.trainable_weights[i], src)\n      clone_ops.append(op)\n</code></pre>\n<p>and then when I want to clone the weights</p>\n<pre><code>for op in clone_ops:\n    session.run(op)\n</code></pre>", "body_text": "Thank you. I think it is trainable_weights instead of trainable_variables\nInspired by your answer this is what I did\nclone_ops = []\nfor i, src in enumerate(model.trainable_weights):\n      op = tf.assign(clone_model.trainable_weights[i], src)\n      clone_ops.append(op)\n\nand then when I want to clone the weights\nfor op in clone_ops:\n    session.run(op)", "body": "Thank you. I think it is `trainable_weights` instead of `trainable_variables` \r\nInspired by your answer this is what I did \r\n\r\n    clone_ops = []\r\n    for i, src in enumerate(model.trainable_weights):\r\n          op = tf.assign(clone_model.trainable_weights[i], src)\r\n          clone_ops.append(op)\r\n\r\nand then when I want to clone the weights\r\n\r\n    for op in clone_ops:\r\n        session.run(op)\r\n"}