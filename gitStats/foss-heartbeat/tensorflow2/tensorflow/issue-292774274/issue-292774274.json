{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16584", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16584/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16584/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16584/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16584", "id": 292774274, "node_id": "MDU6SXNzdWUyOTI3NzQyNzQ=", "number": 16584, "title": "TensorFlow op to copy weights of Keras model", "user": {"login": "volvador", "id": 15655730, "node_id": "MDQ6VXNlcjE1NjU1NzMw", "avatar_url": "https://avatars1.githubusercontent.com/u/15655730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/volvador", "html_url": "https://github.com/volvador", "followers_url": "https://api.github.com/users/volvador/followers", "following_url": "https://api.github.com/users/volvador/following{/other_user}", "gists_url": "https://api.github.com/users/volvador/gists{/gist_id}", "starred_url": "https://api.github.com/users/volvador/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/volvador/subscriptions", "organizations_url": "https://api.github.com/users/volvador/orgs", "repos_url": "https://api.github.com/users/volvador/repos", "events_url": "https://api.github.com/users/volvador/events{/privacy}", "received_events_url": "https://api.github.com/users/volvador/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-01-30T13:00:44Z", "updated_at": "2018-02-01T19:16:30Z", "closed_at": "2018-02-01T12:38:21Z", "author_association": "NONE", "body_html": "<p>I am doing a distributed calibration of an LSTM model (keras 2.0 + TensorFlow 1.0)</p>\n<pre><code>with tf.device(tf.train.replica_device_setter(...):\n      model = ##create model by keras\n      clone_model = ## create the same model by keras but now a stateful one\n</code></pre>\n<p>after calibration, I want my chief worker to use the clone_model, copy the weights the calibration reached in model, and make predictions on some test set, but simply calling</p>\n<pre><code> clone_model.set_weights(model.get_weights())\n</code></pre>\n<p>does not work.<br>\nI understand I need to define this weight copy as an op and then call session(run) of that op</p>\n<p>Can you please help with a TensorFlow op copying weights of a keras model to another (identical architecture) Keras model?</p>", "body_text": "I am doing a distributed calibration of an LSTM model (keras 2.0 + TensorFlow 1.0)\nwith tf.device(tf.train.replica_device_setter(...):\n      model = ##create model by keras\n      clone_model = ## create the same model by keras but now a stateful one\n\nafter calibration, I want my chief worker to use the clone_model, copy the weights the calibration reached in model, and make predictions on some test set, but simply calling\n clone_model.set_weights(model.get_weights())\n\ndoes not work.\nI understand I need to define this weight copy as an op and then call session(run) of that op\nCan you please help with a TensorFlow op copying weights of a keras model to another (identical architecture) Keras model?", "body": "I am doing a distributed calibration of an LSTM model (keras 2.0 + TensorFlow 1.0)\r\n\r\n    with tf.device(tf.train.replica_device_setter(...):\r\n          model = ##create model by keras\r\n          clone_model = ## create the same model by keras but now a stateful one\r\n\r\nafter calibration, I want my chief worker to use the clone_model, copy the weights the calibration reached in model, and make predictions on some test set, but simply calling\r\n\r\n     clone_model.set_weights(model.get_weights())\r\n\r\ndoes not work.\r\nI understand I need to define this weight copy as an op and then call session(run) of that op\r\n\r\nCan you please help with a TensorFlow op copying weights of a keras model to another (identical architecture) Keras model?\r\n\r\n"}