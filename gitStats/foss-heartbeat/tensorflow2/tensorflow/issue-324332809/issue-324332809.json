{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19376", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19376/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19376/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19376/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19376", "id": 324332809, "node_id": "MDU6SXNzdWUzMjQzMzI4MDk=", "number": 19376, "title": "The channel dimension of the inputs is `None` when tf.layers.conv2d after tf.slice with tf.shape instead of constant value", "user": {"login": "Giangblackk", "id": 10430725, "node_id": "MDQ6VXNlcjEwNDMwNzI1", "avatar_url": "https://avatars1.githubusercontent.com/u/10430725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Giangblackk", "html_url": "https://github.com/Giangblackk", "followers_url": "https://api.github.com/users/Giangblackk/followers", "following_url": "https://api.github.com/users/Giangblackk/following{/other_user}", "gists_url": "https://api.github.com/users/Giangblackk/gists{/gist_id}", "starred_url": "https://api.github.com/users/Giangblackk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Giangblackk/subscriptions", "organizations_url": "https://api.github.com/users/Giangblackk/orgs", "repos_url": "https://api.github.com/users/Giangblackk/repos", "events_url": "https://api.github.com/users/Giangblackk/events{/privacy}", "received_events_url": "https://api.github.com/users/Giangblackk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-05-18T09:19:12Z", "updated_at": "2018-11-15T19:01:44Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>Here is my sample code to test the case:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n\n<span class=\"pl-k\">if</span> <span class=\"pl-c1\">__name__</span> <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>__main__<span class=\"pl-pds\">'</span></span>:\n    n_channel <span class=\"pl-k\">=</span> <span class=\"pl-c1\">3</span>\n    n_layer <span class=\"pl-k\">=</span> <span class=\"pl-c1\">5</span>\n    input_tensor <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">None</span>, <span class=\"pl-c1\">None</span>, <span class=\"pl-c1\">None</span>, n_channel])\n    input_image <span class=\"pl-k\">=</span> np.random.rand(<span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">512</span>, <span class=\"pl-c1\">512</span>,n_channel)\n\n    <span class=\"pl-c1\">slice</span> <span class=\"pl-k\">=</span> tf.slice(input_tensor, [<span class=\"pl-c1\">0</span>,<span class=\"pl-c1\">0</span>,<span class=\"pl-c1\">0</span>,<span class=\"pl-c1\">0</span>], [<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>, tf.shape(input_tensor)[<span class=\"pl-c1\">1</span>], tf.shape(input_tensor)[<span class=\"pl-c1\">2</span>], <span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>])\n    conv <span class=\"pl-k\">=</span> tf.layers.conv2d(<span class=\"pl-c1\">slice</span>,<span class=\"pl-v\">filters</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">16</span>,<span class=\"pl-v\">kernel_size</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">3</span>,<span class=\"pl-v\">strides</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>,<span class=\"pl-v\">padding</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>valid<span class=\"pl-pds\">'</span></span>)\n\n    <span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n        sess.run(tf.global_variables_initializer())\n        output_image <span class=\"pl-k\">=</span> sess.run(conv,<span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>{input_tensor:input_image})\n    <span class=\"pl-c1\">print</span>(output_image.shape)</pre></div>\n<p>Here is the error:</p>\n<div class=\"highlight highlight-text-python-traceback\"><pre>Traceback (most recent call last):\n  File <span class=\"pl-s\">\"test_concat_then_conv.py\"</span>, line <span class=\"pl-c1\">11</span>, in <span class=\"pl-en\">&lt;module&gt;</span>\n    conv <span class=\"pl-k\">=</span> tf.layers.conv2d(<span class=\"pl-c1\">slice</span>,<span class=\"pl-v\">filters</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">16</span>,<span class=\"pl-v\">kernel_size</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">3</span>,<span class=\"pl-v\">strides</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>,<span class=\"pl-v\">padding</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>valid<span class=\"pl-pds\">'</span></span>)\n  File <span class=\"pl-s\">\"/home/python3.6/site-packages/tensorflow/python/layers/convolutional.py\"</span>, line <span class=\"pl-c1\">619</span>, in <span class=\"pl-en\">conv2d</span>\n    <span class=\"pl-k\">return</span> layer.apply(inputs)\n  File <span class=\"pl-s\">\"/home/lib/python3.6/site-packages/tensorflow/python/layers/base.py\"</span>, line <span class=\"pl-c1\">825</span>, in <span class=\"pl-en\">apply</span>\n    <span class=\"pl-k\">return</span> <span class=\"pl-c1\">self</span>.<span class=\"pl-c1\">__call__</span>(inputs, <span class=\"pl-k\">*</span>args, <span class=\"pl-k\">**</span>kwargs)\n  File <span class=\"pl-s\">\"/home/lib/python3.6/site-packages/tensorflow/python/layers/base.py\"</span>, line <span class=\"pl-c1\">696</span>, in <span class=\"pl-en\">__call__</span>\n    <span class=\"pl-c1\">self</span>.build(input_shapes)\n  File <span class=\"pl-s\">\"/home/lib/python3.6/site-packages/tensorflow/python/layers/convolutional.py\"</span>, line <span class=\"pl-c1\">133</span>, in <span class=\"pl-en\">build</span>\n    <span class=\"pl-k\">raise</span> <span class=\"pl-c1\">ValueError</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>The channel dimension of the inputs <span class=\"pl-pds\">'</span></span>\n<span class=\"pl-en\">ValueError</span>: <span class=\"pl-s\">The channel dimension of the inputs should be defined. Found `None`.</span></pre></div>\n<p>This happen only when I used <code>tf.layers.conv2d</code>. It works with <code>tf.nn.conv2d</code>.<br>\nI wonder what is the root of this problem?</p>", "body_text": "Here is my sample code to test the case:\nimport tensorflow as tf\nimport numpy as np\n\nif __name__ == '__main__':\n    n_channel = 3\n    n_layer = 5\n    input_tensor = tf.placeholder(tf.float32, shape=[None, None, None, n_channel])\n    input_image = np.random.rand(4, 512, 512,n_channel)\n\n    slice = tf.slice(input_tensor, [0,0,0,0], [-1, tf.shape(input_tensor)[1], tf.shape(input_tensor)[2], -1])\n    conv = tf.layers.conv2d(slice,filters=16,kernel_size=3,strides=1,padding='valid')\n\n    with tf.Session() as sess:\n        sess.run(tf.global_variables_initializer())\n        output_image = sess.run(conv,feed_dict={input_tensor:input_image})\n    print(output_image.shape)\nHere is the error:\nTraceback (most recent call last):\n  File \"test_concat_then_conv.py\", line 11, in <module>\n    conv = tf.layers.conv2d(slice,filters=16,kernel_size=3,strides=1,padding='valid')\n  File \"/home/python3.6/site-packages/tensorflow/python/layers/convolutional.py\", line 619, in conv2d\n    return layer.apply(inputs)\n  File \"/home/lib/python3.6/site-packages/tensorflow/python/layers/base.py\", line 825, in apply\n    return self.__call__(inputs, *args, **kwargs)\n  File \"/home/lib/python3.6/site-packages/tensorflow/python/layers/base.py\", line 696, in __call__\n    self.build(input_shapes)\n  File \"/home/lib/python3.6/site-packages/tensorflow/python/layers/convolutional.py\", line 133, in build\n    raise ValueError('The channel dimension of the inputs '\nValueError: The channel dimension of the inputs should be defined. Found `None`.\nThis happen only when I used tf.layers.conv2d. It works with tf.nn.conv2d.\nI wonder what is the root of this problem?", "body": "Here is my sample code to test the case:\r\n```python\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\nif __name__ == '__main__':\r\n    n_channel = 3\r\n    n_layer = 5\r\n    input_tensor = tf.placeholder(tf.float32, shape=[None, None, None, n_channel])\r\n    input_image = np.random.rand(4, 512, 512,n_channel)\r\n\r\n    slice = tf.slice(input_tensor, [0,0,0,0], [-1, tf.shape(input_tensor)[1], tf.shape(input_tensor)[2], -1])\r\n    conv = tf.layers.conv2d(slice,filters=16,kernel_size=3,strides=1,padding='valid')\r\n\r\n    with tf.Session() as sess:\r\n        sess.run(tf.global_variables_initializer())\r\n        output_image = sess.run(conv,feed_dict={input_tensor:input_image})\r\n    print(output_image.shape)\r\n```\r\nHere is the error:\r\n```python-traceback\r\nTraceback (most recent call last):\r\n  File \"test_concat_then_conv.py\", line 11, in <module>\r\n    conv = tf.layers.conv2d(slice,filters=16,kernel_size=3,strides=1,padding='valid')\r\n  File \"/home/python3.6/site-packages/tensorflow/python/layers/convolutional.py\", line 619, in conv2d\r\n    return layer.apply(inputs)\r\n  File \"/home/lib/python3.6/site-packages/tensorflow/python/layers/base.py\", line 825, in apply\r\n    return self.__call__(inputs, *args, **kwargs)\r\n  File \"/home/lib/python3.6/site-packages/tensorflow/python/layers/base.py\", line 696, in __call__\r\n    self.build(input_shapes)\r\n  File \"/home/lib/python3.6/site-packages/tensorflow/python/layers/convolutional.py\", line 133, in build\r\n    raise ValueError('The channel dimension of the inputs '\r\nValueError: The channel dimension of the inputs should be defined. Found `None`.\r\n```\r\nThis happen only when I used `tf.layers.conv2d`. It works with `tf.nn.conv2d`.\r\nI wonder what is the root of this problem?"}