{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6647", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6647/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6647/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6647/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/6647", "id": 198854810, "node_id": "MDU6SXNzdWUxOTg4NTQ4MTA=", "number": 6647, "title": "TypeError: Cannot create initializer for non-floating point type.", "user": {"login": "eromoe", "id": 3938751, "node_id": "MDQ6VXNlcjM5Mzg3NTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3938751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eromoe", "html_url": "https://github.com/eromoe", "followers_url": "https://api.github.com/users/eromoe/followers", "following_url": "https://api.github.com/users/eromoe/following{/other_user}", "gists_url": "https://api.github.com/users/eromoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/eromoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eromoe/subscriptions", "organizations_url": "https://api.github.com/users/eromoe/orgs", "repos_url": "https://api.github.com/users/eromoe/repos", "events_url": "https://api.github.com/users/eromoe/events{/privacy}", "received_events_url": "https://api.github.com/users/eromoe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2017-01-05T01:31:22Z", "updated_at": "2017-02-07T05:16:23Z", "closed_at": "2017-02-07T05:16:23Z", "author_association": "NONE", "body_html": "<h3>Environment info</h3>\n<p>Operating System:<br>\ntensorflow docker(ubuntu 14.04)</p>\n<h3>Version</h3>\n<p>tensorflow (0.12.1)/ tensorflow-gpu (0.12.1)</p>\n<h3>If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)</h3>\n<p>From official example:<br>\n<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/learn/text_classification_character_rnn.py\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/learn/text_classification_character_rnn.py</a></p>\n<h3>Logs or other output that would be helpful</h3>\n<p>(If logs are large, please upload as attachment or provide link).</p>\n<h1>tensorflow-gpu (0.12.1)</h1>\n<p>default dataset  'dbpedia' and my data set both get</p>\n<pre><code>WARNING:tensorflow:Using temporary folder as model directory: /tmp/tmpUlkI0V\nINFO:tensorflow:Using default config.\nINFO:tensorflow:Using config: {'save_summary_steps': 100, '_num_ps_replicas': 0, '_task_type': None, '_environment': 'local', '_is_chief': True, 'save_checkpoints_secs': 600, '_cluster_spec': &lt;tensorflow.python.training.server_lib.ClusterSpec object at 0x7f26f2317750&gt;, 'tf_config': gpu_options {\n  per_process_gpu_memory_fraction: 1\n}\n, '_task_id': 0, 'tf_random_seed': None, 'keep_checkpoint_every_n_hours': 10000, '_evaluation_master': '', 'save_checkpoints_steps': None, '_master': '', 'keep_checkpoint_max': 5}\nWARNING:tensorflow:From &lt;ipython-input-1-f55d1ba92119&gt;:85 in main.: calling fit (from tensorflow.contrib.learn.python.learn.estimators.estimator) with x is deprecated and will be removed after 2016-12-01.\nInstructions for updating:\nEstimator is decoupled from Scikit Learn interface by moving into\nseparate class SKCompat. Arguments x, y and batch_size are only\navailable in the SKCompat class, Estimator will only accept input_fn.\nExample conversion:\n  est = Estimator(...) -&gt; est = SKCompat(Estimator(...))\nWARNING:tensorflow:From &lt;ipython-input-1-f55d1ba92119&gt;:85 in main.: calling fit (from tensorflow.contrib.learn.python.learn.estimators.estimator) with y is deprecated and will be removed after 2016-12-01.\nInstructions for updating:\nEstimator is decoupled from Scikit Learn interface by moving into\nseparate class SKCompat. Arguments x, y and batch_size are only\navailable in the SKCompat class, Estimator will only accept input_fn.\nExample conversion:\n  est = Estimator(...) -&gt; est = SKCompat(Estimator(...))\n\n\nTypeErrorTraceback (most recent call last)\n&lt;ipython-input-1-f55d1ba92119&gt; in &lt;module&gt;()\n     93 \n     94 \n---&gt; 95 tf.app.run(main=main)\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.pyc in run(main, argv)\n     41   # Call the main function, passing through any arguments\n     42   # to the final program.\n---&gt; 43   sys.exit(main(sys.argv[:1] + flags_passthrough))\n\n&lt;ipython-input-1-f55d1ba92119&gt; in main(unused_argv)\n     83 \n     84   # Train and predict\n---&gt; 85   classifier.fit(x_train, y_train, steps=100)\n     86   y_predicted = [\n     87       p['class'] for p in classifier.predict(\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/util/deprecation.pyc in new_func(*args, **kwargs)\n    189             _call_location(), decorator_utils.get_qualified_name(func),\n    190             func.__module__, arg_name, date, instructions)\n--&gt; 191       return func(*args, **kwargs)\n    192     new_func.__doc__ = _add_deprecated_arg_notice_to_docstring(\n    193         func.__doc__, date, instructions)\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.pyc in fit(self, x, y, input_fn, steps, batch_size, monitors, max_steps)\n    353                              steps=steps,\n    354                              monitors=monitors,\n--&gt; 355                              max_steps=max_steps)\n    356     logging.info('Loss for final step: %s.', loss)\n    357     return self\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.pyc in _train_model(self, input_fn, steps, feed_fn, init_op, init_feed_fn, init_fn, device_fn, monitors, log_every_steps, fail_on_nan_loss, max_steps)\n    697       # cases, but will soon be deleted after the subclasses are updated.\n    698       # TODO(b/32664904): Update subclasses and delete the else-statement.\n--&gt; 699       train_ops = self._get_train_ops(features, labels)\n    700       if isinstance(train_ops, model_fn_lib.ModelFnOps):  # Default signature\n    701         train_op = train_ops.train_op\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.pyc in _get_train_ops(self, features, labels)\n   1050       `ModelFnOps` object.\n   1051     \"\"\"\n-&gt; 1052     return self._call_model_fn(features, labels, model_fn_lib.ModeKeys.TRAIN)\n   1053 \n   1054   def _get_eval_ops(self, features, labels, metrics):\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.pyc in _call_model_fn(self, features, labels, mode)\n   1021         model_fn_results = self._model_fn(features, labels, mode=mode)\n   1022     else:\n-&gt; 1023       model_fn_results = self._model_fn(features, labels)\n   1024 \n   1025     if isinstance(model_fn_results, model_fn_lib.ModelFnOps):\n\n&lt;ipython-input-1-f55d1ba92119&gt; in char_cnn_model(features, target)\n     31     # Apply Convolution filtering on input sequence.\n     32     conv1 = tf.contrib.layers.convolution2d(\n---&gt; 33         byte_list, N_FILTERS, FILTER_SHAPE1, padding='VALID')\n     34     # Add a RELU for non linearity.\n     35     conv1 = tf.nn.relu(conv1)\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/framework/python/ops/arg_scope.pyc in func_with_args(*args, **kwargs)\n    175       current_args = current_scope[key_func].copy()\n    176       current_args.update(kwargs)\n--&gt; 177     return func(*args, **current_args)\n    178   _add_op(func)\n    179   setattr(func_with_args, '_key_op', _key_op(func))\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/layers/python/layers/layers.pyc in convolution(inputs, num_outputs, kernel_size, stride, padding, data_format, rate, activation_fn, normalizer_fn, normalizer_params, weights_initializer, weights_regularizer, biases_initializer, biases_regularizer, reuse, variables_collections, outputs_collections, trainable, scope)\n    838                                        regularizer=weights_regularizer,\n    839                                        collections=weights_collections,\n--&gt; 840                                        trainable=trainable)\n    841     outputs = nn.convolution(input=inputs,\n    842                              filter=weights,\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/framework/python/ops/arg_scope.pyc in func_with_args(*args, **kwargs)\n    175       current_args = current_scope[key_func].copy()\n    176       current_args.update(kwargs)\n--&gt; 177     return func(*args, **current_args)\n    178   _add_op(func)\n    179   setattr(func_with_args, '_key_op', _key_op(func))\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/framework/python/ops/variables.pyc in model_variable(name, shape, dtype, initializer, regularizer, trainable, collections, caching_device, device)\n    242                   initializer=initializer, regularizer=regularizer,\n    243                   trainable=trainable, collections=collections,\n--&gt; 244                   caching_device=caching_device, device=device)\n    245 \n    246 \n\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/framework/python/ops/arg_scope.pyc in func_with_args(*args, **kwargs)\n    175       current_args = current_scope[key_func].copy()\n    176       current_args.update(kwargs)\n--&gt; 177     return func(*args, **current_args)\n    178   _add_op(func)\n    179   setattr(func_with_args, '_key_op', _key_op(func))\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/framework/python/ops/variables.pyc in variable(name, shape, dtype, initializer, regularizer, trainable, collections, caching_device, device)\n    206                                        trainable=trainable,\n    207                                        collections=collections,\n--&gt; 208                                        caching_device=caching_device)\n    209 \n    210 \n\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/variable_scope.pyc in get_variable(name, shape, dtype, initializer, regularizer, trainable, collections, caching_device, partitioner, validate_shape, custom_getter)\n   1022       collections=collections, caching_device=caching_device,\n   1023       partitioner=partitioner, validate_shape=validate_shape,\n-&gt; 1024       custom_getter=custom_getter)\n   1025 \n   1026 \n\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/variable_scope.pyc in get_variable(self, var_store, name, shape, dtype, initializer, regularizer, trainable, collections, caching_device, partitioner, validate_shape, custom_getter)\n    848           collections=collections, caching_device=caching_device,\n    849           partitioner=partitioner, validate_shape=validate_shape,\n--&gt; 850           custom_getter=custom_getter)\n    851 \n    852   def _get_partitioned_variable(self,\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/variable_scope.pyc in get_variable(self, name, shape, dtype, initializer, regularizer, reuse, trainable, collections, caching_device, partitioner, validate_shape, custom_getter)\n    344           reuse=reuse, trainable=trainable, collections=collections,\n    345           caching_device=caching_device, partitioner=partitioner,\n--&gt; 346           validate_shape=validate_shape)\n    347 \n    348   def _get_partitioned_variable(\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/variable_scope.pyc in _true_getter(name, shape, dtype, initializer, regularizer, reuse, trainable, collections, caching_device, partitioner, validate_shape)\n    329           initializer=initializer, regularizer=regularizer, reuse=reuse,\n    330           trainable=trainable, collections=collections,\n--&gt; 331           caching_device=caching_device, validate_shape=validate_shape)\n    332 \n    333     if custom_getter is not None:\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/variable_scope.pyc in _get_single_variable(self, name, shape, dtype, initializer, regularizer, partition_info, reuse, trainable, collections, caching_device, validate_shape)\n    675         dtype=variable_dtype,\n    676         validate_shape=validate_shape,\n--&gt; 677         expected_shape=shape)\n    678     self._vars[name] = v\n    679     logging.vlog(1, \"Created variable %s with shape %s and init %s\", v.name,\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/variables.pyc in __init__(self, initial_value, trainable, collections, validate_shape, caching_device, name, variable_def, dtype, expected_shape, import_scope)\n    222           name=name,\n    223           dtype=dtype,\n--&gt; 224           expected_shape=expected_shape)\n    225 \n    226   def __str__(self):\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/variables.pyc in _init_from_args(self, initial_value, trainable, collections, validate_shape, caching_device, name, dtype, expected_shape)\n    325               # with the variable itself.\n    326               self._initial_value = ops.convert_to_tensor(\n--&gt; 327                   initial_value(), name=\"initial_value\", dtype=dtype)\n    328               assert_expected_shape()\n    329 \n\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/variable_scope.pyc in &lt;lambda&gt;()\n    663       else:\n    664         init_val = lambda: initializer(\n--&gt; 665             shape.as_list(), dtype=dtype, partition_info=partition_info)\n    666         variable_dtype = dtype.base_dtype\n    667 \n\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/layers/python/layers/initializers.pyc in _initializer(shape, dtype, partition_info)\n    118     \"\"\"Initializer function.\"\"\"\n    119     if not dtype.is_floating:\n--&gt; 120       raise TypeError('Cannot create initializer for non-floating point type.')\n    121     # Estimating fan_in and fan_out is not possible to do perfectly, but we try.\n    122     # This is the right thing for matrix multiply and convolutions.\n\nTypeError: Cannot create initializer for non-floating point type.\n\n</code></pre>", "body_text": "Environment info\nOperating System:\ntensorflow docker(ubuntu 14.04)\nVersion\ntensorflow (0.12.1)/ tensorflow-gpu (0.12.1)\nIf possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\nFrom official example:\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/learn/text_classification_character_rnn.py\nLogs or other output that would be helpful\n(If logs are large, please upload as attachment or provide link).\ntensorflow-gpu (0.12.1)\ndefault dataset  'dbpedia' and my data set both get\nWARNING:tensorflow:Using temporary folder as model directory: /tmp/tmpUlkI0V\nINFO:tensorflow:Using default config.\nINFO:tensorflow:Using config: {'save_summary_steps': 100, '_num_ps_replicas': 0, '_task_type': None, '_environment': 'local', '_is_chief': True, 'save_checkpoints_secs': 600, '_cluster_spec': <tensorflow.python.training.server_lib.ClusterSpec object at 0x7f26f2317750>, 'tf_config': gpu_options {\n  per_process_gpu_memory_fraction: 1\n}\n, '_task_id': 0, 'tf_random_seed': None, 'keep_checkpoint_every_n_hours': 10000, '_evaluation_master': '', 'save_checkpoints_steps': None, '_master': '', 'keep_checkpoint_max': 5}\nWARNING:tensorflow:From <ipython-input-1-f55d1ba92119>:85 in main.: calling fit (from tensorflow.contrib.learn.python.learn.estimators.estimator) with x is deprecated and will be removed after 2016-12-01.\nInstructions for updating:\nEstimator is decoupled from Scikit Learn interface by moving into\nseparate class SKCompat. Arguments x, y and batch_size are only\navailable in the SKCompat class, Estimator will only accept input_fn.\nExample conversion:\n  est = Estimator(...) -> est = SKCompat(Estimator(...))\nWARNING:tensorflow:From <ipython-input-1-f55d1ba92119>:85 in main.: calling fit (from tensorflow.contrib.learn.python.learn.estimators.estimator) with y is deprecated and will be removed after 2016-12-01.\nInstructions for updating:\nEstimator is decoupled from Scikit Learn interface by moving into\nseparate class SKCompat. Arguments x, y and batch_size are only\navailable in the SKCompat class, Estimator will only accept input_fn.\nExample conversion:\n  est = Estimator(...) -> est = SKCompat(Estimator(...))\n\n\nTypeErrorTraceback (most recent call last)\n<ipython-input-1-f55d1ba92119> in <module>()\n     93 \n     94 \n---> 95 tf.app.run(main=main)\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.pyc in run(main, argv)\n     41   # Call the main function, passing through any arguments\n     42   # to the final program.\n---> 43   sys.exit(main(sys.argv[:1] + flags_passthrough))\n\n<ipython-input-1-f55d1ba92119> in main(unused_argv)\n     83 \n     84   # Train and predict\n---> 85   classifier.fit(x_train, y_train, steps=100)\n     86   y_predicted = [\n     87       p['class'] for p in classifier.predict(\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/util/deprecation.pyc in new_func(*args, **kwargs)\n    189             _call_location(), decorator_utils.get_qualified_name(func),\n    190             func.__module__, arg_name, date, instructions)\n--> 191       return func(*args, **kwargs)\n    192     new_func.__doc__ = _add_deprecated_arg_notice_to_docstring(\n    193         func.__doc__, date, instructions)\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.pyc in fit(self, x, y, input_fn, steps, batch_size, monitors, max_steps)\n    353                              steps=steps,\n    354                              monitors=monitors,\n--> 355                              max_steps=max_steps)\n    356     logging.info('Loss for final step: %s.', loss)\n    357     return self\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.pyc in _train_model(self, input_fn, steps, feed_fn, init_op, init_feed_fn, init_fn, device_fn, monitors, log_every_steps, fail_on_nan_loss, max_steps)\n    697       # cases, but will soon be deleted after the subclasses are updated.\n    698       # TODO(b/32664904): Update subclasses and delete the else-statement.\n--> 699       train_ops = self._get_train_ops(features, labels)\n    700       if isinstance(train_ops, model_fn_lib.ModelFnOps):  # Default signature\n    701         train_op = train_ops.train_op\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.pyc in _get_train_ops(self, features, labels)\n   1050       `ModelFnOps` object.\n   1051     \"\"\"\n-> 1052     return self._call_model_fn(features, labels, model_fn_lib.ModeKeys.TRAIN)\n   1053 \n   1054   def _get_eval_ops(self, features, labels, metrics):\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.pyc in _call_model_fn(self, features, labels, mode)\n   1021         model_fn_results = self._model_fn(features, labels, mode=mode)\n   1022     else:\n-> 1023       model_fn_results = self._model_fn(features, labels)\n   1024 \n   1025     if isinstance(model_fn_results, model_fn_lib.ModelFnOps):\n\n<ipython-input-1-f55d1ba92119> in char_cnn_model(features, target)\n     31     # Apply Convolution filtering on input sequence.\n     32     conv1 = tf.contrib.layers.convolution2d(\n---> 33         byte_list, N_FILTERS, FILTER_SHAPE1, padding='VALID')\n     34     # Add a RELU for non linearity.\n     35     conv1 = tf.nn.relu(conv1)\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/framework/python/ops/arg_scope.pyc in func_with_args(*args, **kwargs)\n    175       current_args = current_scope[key_func].copy()\n    176       current_args.update(kwargs)\n--> 177     return func(*args, **current_args)\n    178   _add_op(func)\n    179   setattr(func_with_args, '_key_op', _key_op(func))\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/layers/python/layers/layers.pyc in convolution(inputs, num_outputs, kernel_size, stride, padding, data_format, rate, activation_fn, normalizer_fn, normalizer_params, weights_initializer, weights_regularizer, biases_initializer, biases_regularizer, reuse, variables_collections, outputs_collections, trainable, scope)\n    838                                        regularizer=weights_regularizer,\n    839                                        collections=weights_collections,\n--> 840                                        trainable=trainable)\n    841     outputs = nn.convolution(input=inputs,\n    842                              filter=weights,\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/framework/python/ops/arg_scope.pyc in func_with_args(*args, **kwargs)\n    175       current_args = current_scope[key_func].copy()\n    176       current_args.update(kwargs)\n--> 177     return func(*args, **current_args)\n    178   _add_op(func)\n    179   setattr(func_with_args, '_key_op', _key_op(func))\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/framework/python/ops/variables.pyc in model_variable(name, shape, dtype, initializer, regularizer, trainable, collections, caching_device, device)\n    242                   initializer=initializer, regularizer=regularizer,\n    243                   trainable=trainable, collections=collections,\n--> 244                   caching_device=caching_device, device=device)\n    245 \n    246 \n\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/framework/python/ops/arg_scope.pyc in func_with_args(*args, **kwargs)\n    175       current_args = current_scope[key_func].copy()\n    176       current_args.update(kwargs)\n--> 177     return func(*args, **current_args)\n    178   _add_op(func)\n    179   setattr(func_with_args, '_key_op', _key_op(func))\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/framework/python/ops/variables.pyc in variable(name, shape, dtype, initializer, regularizer, trainable, collections, caching_device, device)\n    206                                        trainable=trainable,\n    207                                        collections=collections,\n--> 208                                        caching_device=caching_device)\n    209 \n    210 \n\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/variable_scope.pyc in get_variable(name, shape, dtype, initializer, regularizer, trainable, collections, caching_device, partitioner, validate_shape, custom_getter)\n   1022       collections=collections, caching_device=caching_device,\n   1023       partitioner=partitioner, validate_shape=validate_shape,\n-> 1024       custom_getter=custom_getter)\n   1025 \n   1026 \n\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/variable_scope.pyc in get_variable(self, var_store, name, shape, dtype, initializer, regularizer, trainable, collections, caching_device, partitioner, validate_shape, custom_getter)\n    848           collections=collections, caching_device=caching_device,\n    849           partitioner=partitioner, validate_shape=validate_shape,\n--> 850           custom_getter=custom_getter)\n    851 \n    852   def _get_partitioned_variable(self,\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/variable_scope.pyc in get_variable(self, name, shape, dtype, initializer, regularizer, reuse, trainable, collections, caching_device, partitioner, validate_shape, custom_getter)\n    344           reuse=reuse, trainable=trainable, collections=collections,\n    345           caching_device=caching_device, partitioner=partitioner,\n--> 346           validate_shape=validate_shape)\n    347 \n    348   def _get_partitioned_variable(\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/variable_scope.pyc in _true_getter(name, shape, dtype, initializer, regularizer, reuse, trainable, collections, caching_device, partitioner, validate_shape)\n    329           initializer=initializer, regularizer=regularizer, reuse=reuse,\n    330           trainable=trainable, collections=collections,\n--> 331           caching_device=caching_device, validate_shape=validate_shape)\n    332 \n    333     if custom_getter is not None:\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/variable_scope.pyc in _get_single_variable(self, name, shape, dtype, initializer, regularizer, partition_info, reuse, trainable, collections, caching_device, validate_shape)\n    675         dtype=variable_dtype,\n    676         validate_shape=validate_shape,\n--> 677         expected_shape=shape)\n    678     self._vars[name] = v\n    679     logging.vlog(1, \"Created variable %s with shape %s and init %s\", v.name,\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/variables.pyc in __init__(self, initial_value, trainable, collections, validate_shape, caching_device, name, variable_def, dtype, expected_shape, import_scope)\n    222           name=name,\n    223           dtype=dtype,\n--> 224           expected_shape=expected_shape)\n    225 \n    226   def __str__(self):\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/variables.pyc in _init_from_args(self, initial_value, trainable, collections, validate_shape, caching_device, name, dtype, expected_shape)\n    325               # with the variable itself.\n    326               self._initial_value = ops.convert_to_tensor(\n--> 327                   initial_value(), name=\"initial_value\", dtype=dtype)\n    328               assert_expected_shape()\n    329 \n\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/variable_scope.pyc in <lambda>()\n    663       else:\n    664         init_val = lambda: initializer(\n--> 665             shape.as_list(), dtype=dtype, partition_info=partition_info)\n    666         variable_dtype = dtype.base_dtype\n    667 \n\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/layers/python/layers/initializers.pyc in _initializer(shape, dtype, partition_info)\n    118     \"\"\"Initializer function.\"\"\"\n    119     if not dtype.is_floating:\n--> 120       raise TypeError('Cannot create initializer for non-floating point type.')\n    121     # Estimating fan_in and fan_out is not possible to do perfectly, but we try.\n    122     # This is the right thing for matrix multiply and convolutions.\n\nTypeError: Cannot create initializer for non-floating point type.", "body": "### Environment info\r\nOperating System:\r\ntensorflow docker(ubuntu 14.04)\r\n\r\n### Version\r\ntensorflow (0.12.1)/ tensorflow-gpu (0.12.1)\r\n\r\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\r\n\r\nFrom official example:\r\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/learn/text_classification_character_rnn.py\r\n\r\n### Logs or other output that would be helpful\r\n(If logs are large, please upload as attachment or provide link).\r\n\r\n# tensorflow-gpu (0.12.1)\r\n\r\ndefault dataset  'dbpedia' and my data set both get\r\n```\r\nWARNING:tensorflow:Using temporary folder as model directory: /tmp/tmpUlkI0V\r\nINFO:tensorflow:Using default config.\r\nINFO:tensorflow:Using config: {'save_summary_steps': 100, '_num_ps_replicas': 0, '_task_type': None, '_environment': 'local', '_is_chief': True, 'save_checkpoints_secs': 600, '_cluster_spec': <tensorflow.python.training.server_lib.ClusterSpec object at 0x7f26f2317750>, 'tf_config': gpu_options {\r\n  per_process_gpu_memory_fraction: 1\r\n}\r\n, '_task_id': 0, 'tf_random_seed': None, 'keep_checkpoint_every_n_hours': 10000, '_evaluation_master': '', 'save_checkpoints_steps': None, '_master': '', 'keep_checkpoint_max': 5}\r\nWARNING:tensorflow:From <ipython-input-1-f55d1ba92119>:85 in main.: calling fit (from tensorflow.contrib.learn.python.learn.estimators.estimator) with x is deprecated and will be removed after 2016-12-01.\r\nInstructions for updating:\r\nEstimator is decoupled from Scikit Learn interface by moving into\r\nseparate class SKCompat. Arguments x, y and batch_size are only\r\navailable in the SKCompat class, Estimator will only accept input_fn.\r\nExample conversion:\r\n  est = Estimator(...) -> est = SKCompat(Estimator(...))\r\nWARNING:tensorflow:From <ipython-input-1-f55d1ba92119>:85 in main.: calling fit (from tensorflow.contrib.learn.python.learn.estimators.estimator) with y is deprecated and will be removed after 2016-12-01.\r\nInstructions for updating:\r\nEstimator is decoupled from Scikit Learn interface by moving into\r\nseparate class SKCompat. Arguments x, y and batch_size are only\r\navailable in the SKCompat class, Estimator will only accept input_fn.\r\nExample conversion:\r\n  est = Estimator(...) -> est = SKCompat(Estimator(...))\r\n\r\n\r\nTypeErrorTraceback (most recent call last)\r\n<ipython-input-1-f55d1ba92119> in <module>()\r\n     93 \r\n     94 \r\n---> 95 tf.app.run(main=main)\r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.pyc in run(main, argv)\r\n     41   # Call the main function, passing through any arguments\r\n     42   # to the final program.\r\n---> 43   sys.exit(main(sys.argv[:1] + flags_passthrough))\r\n\r\n<ipython-input-1-f55d1ba92119> in main(unused_argv)\r\n     83 \r\n     84   # Train and predict\r\n---> 85   classifier.fit(x_train, y_train, steps=100)\r\n     86   y_predicted = [\r\n     87       p['class'] for p in classifier.predict(\r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/util/deprecation.pyc in new_func(*args, **kwargs)\r\n    189             _call_location(), decorator_utils.get_qualified_name(func),\r\n    190             func.__module__, arg_name, date, instructions)\r\n--> 191       return func(*args, **kwargs)\r\n    192     new_func.__doc__ = _add_deprecated_arg_notice_to_docstring(\r\n    193         func.__doc__, date, instructions)\r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.pyc in fit(self, x, y, input_fn, steps, batch_size, monitors, max_steps)\r\n    353                              steps=steps,\r\n    354                              monitors=monitors,\r\n--> 355                              max_steps=max_steps)\r\n    356     logging.info('Loss for final step: %s.', loss)\r\n    357     return self\r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.pyc in _train_model(self, input_fn, steps, feed_fn, init_op, init_feed_fn, init_fn, device_fn, monitors, log_every_steps, fail_on_nan_loss, max_steps)\r\n    697       # cases, but will soon be deleted after the subclasses are updated.\r\n    698       # TODO(b/32664904): Update subclasses and delete the else-statement.\r\n--> 699       train_ops = self._get_train_ops(features, labels)\r\n    700       if isinstance(train_ops, model_fn_lib.ModelFnOps):  # Default signature\r\n    701         train_op = train_ops.train_op\r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.pyc in _get_train_ops(self, features, labels)\r\n   1050       `ModelFnOps` object.\r\n   1051     \"\"\"\r\n-> 1052     return self._call_model_fn(features, labels, model_fn_lib.ModeKeys.TRAIN)\r\n   1053 \r\n   1054   def _get_eval_ops(self, features, labels, metrics):\r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.pyc in _call_model_fn(self, features, labels, mode)\r\n   1021         model_fn_results = self._model_fn(features, labels, mode=mode)\r\n   1022     else:\r\n-> 1023       model_fn_results = self._model_fn(features, labels)\r\n   1024 \r\n   1025     if isinstance(model_fn_results, model_fn_lib.ModelFnOps):\r\n\r\n<ipython-input-1-f55d1ba92119> in char_cnn_model(features, target)\r\n     31     # Apply Convolution filtering on input sequence.\r\n     32     conv1 = tf.contrib.layers.convolution2d(\r\n---> 33         byte_list, N_FILTERS, FILTER_SHAPE1, padding='VALID')\r\n     34     # Add a RELU for non linearity.\r\n     35     conv1 = tf.nn.relu(conv1)\r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/framework/python/ops/arg_scope.pyc in func_with_args(*args, **kwargs)\r\n    175       current_args = current_scope[key_func].copy()\r\n    176       current_args.update(kwargs)\r\n--> 177     return func(*args, **current_args)\r\n    178   _add_op(func)\r\n    179   setattr(func_with_args, '_key_op', _key_op(func))\r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/layers/python/layers/layers.pyc in convolution(inputs, num_outputs, kernel_size, stride, padding, data_format, rate, activation_fn, normalizer_fn, normalizer_params, weights_initializer, weights_regularizer, biases_initializer, biases_regularizer, reuse, variables_collections, outputs_collections, trainable, scope)\r\n    838                                        regularizer=weights_regularizer,\r\n    839                                        collections=weights_collections,\r\n--> 840                                        trainable=trainable)\r\n    841     outputs = nn.convolution(input=inputs,\r\n    842                              filter=weights,\r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/framework/python/ops/arg_scope.pyc in func_with_args(*args, **kwargs)\r\n    175       current_args = current_scope[key_func].copy()\r\n    176       current_args.update(kwargs)\r\n--> 177     return func(*args, **current_args)\r\n    178   _add_op(func)\r\n    179   setattr(func_with_args, '_key_op', _key_op(func))\r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/framework/python/ops/variables.pyc in model_variable(name, shape, dtype, initializer, regularizer, trainable, collections, caching_device, device)\r\n    242                   initializer=initializer, regularizer=regularizer,\r\n    243                   trainable=trainable, collections=collections,\r\n--> 244                   caching_device=caching_device, device=device)\r\n    245 \r\n    246 \r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/framework/python/ops/arg_scope.pyc in func_with_args(*args, **kwargs)\r\n    175       current_args = current_scope[key_func].copy()\r\n    176       current_args.update(kwargs)\r\n--> 177     return func(*args, **current_args)\r\n    178   _add_op(func)\r\n    179   setattr(func_with_args, '_key_op', _key_op(func))\r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/framework/python/ops/variables.pyc in variable(name, shape, dtype, initializer, regularizer, trainable, collections, caching_device, device)\r\n    206                                        trainable=trainable,\r\n    207                                        collections=collections,\r\n--> 208                                        caching_device=caching_device)\r\n    209 \r\n    210 \r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/variable_scope.pyc in get_variable(name, shape, dtype, initializer, regularizer, trainable, collections, caching_device, partitioner, validate_shape, custom_getter)\r\n   1022       collections=collections, caching_device=caching_device,\r\n   1023       partitioner=partitioner, validate_shape=validate_shape,\r\n-> 1024       custom_getter=custom_getter)\r\n   1025 \r\n   1026 \r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/variable_scope.pyc in get_variable(self, var_store, name, shape, dtype, initializer, regularizer, trainable, collections, caching_device, partitioner, validate_shape, custom_getter)\r\n    848           collections=collections, caching_device=caching_device,\r\n    849           partitioner=partitioner, validate_shape=validate_shape,\r\n--> 850           custom_getter=custom_getter)\r\n    851 \r\n    852   def _get_partitioned_variable(self,\r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/variable_scope.pyc in get_variable(self, name, shape, dtype, initializer, regularizer, reuse, trainable, collections, caching_device, partitioner, validate_shape, custom_getter)\r\n    344           reuse=reuse, trainable=trainable, collections=collections,\r\n    345           caching_device=caching_device, partitioner=partitioner,\r\n--> 346           validate_shape=validate_shape)\r\n    347 \r\n    348   def _get_partitioned_variable(\r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/variable_scope.pyc in _true_getter(name, shape, dtype, initializer, regularizer, reuse, trainable, collections, caching_device, partitioner, validate_shape)\r\n    329           initializer=initializer, regularizer=regularizer, reuse=reuse,\r\n    330           trainable=trainable, collections=collections,\r\n--> 331           caching_device=caching_device, validate_shape=validate_shape)\r\n    332 \r\n    333     if custom_getter is not None:\r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/variable_scope.pyc in _get_single_variable(self, name, shape, dtype, initializer, regularizer, partition_info, reuse, trainable, collections, caching_device, validate_shape)\r\n    675         dtype=variable_dtype,\r\n    676         validate_shape=validate_shape,\r\n--> 677         expected_shape=shape)\r\n    678     self._vars[name] = v\r\n    679     logging.vlog(1, \"Created variable %s with shape %s and init %s\", v.name,\r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/variables.pyc in __init__(self, initial_value, trainable, collections, validate_shape, caching_device, name, variable_def, dtype, expected_shape, import_scope)\r\n    222           name=name,\r\n    223           dtype=dtype,\r\n--> 224           expected_shape=expected_shape)\r\n    225 \r\n    226   def __str__(self):\r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/variables.pyc in _init_from_args(self, initial_value, trainable, collections, validate_shape, caching_device, name, dtype, expected_shape)\r\n    325               # with the variable itself.\r\n    326               self._initial_value = ops.convert_to_tensor(\r\n--> 327                   initial_value(), name=\"initial_value\", dtype=dtype)\r\n    328               assert_expected_shape()\r\n    329 \r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/variable_scope.pyc in <lambda>()\r\n    663       else:\r\n    664         init_val = lambda: initializer(\r\n--> 665             shape.as_list(), dtype=dtype, partition_info=partition_info)\r\n    666         variable_dtype = dtype.base_dtype\r\n    667 \r\n\r\n/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/layers/python/layers/initializers.pyc in _initializer(shape, dtype, partition_info)\r\n    118     \"\"\"Initializer function.\"\"\"\r\n    119     if not dtype.is_floating:\r\n--> 120       raise TypeError('Cannot create initializer for non-floating point type.')\r\n    121     # Estimating fan_in and fan_out is not possible to do perfectly, but we try.\r\n    122     # This is the right thing for matrix multiply and convolutions.\r\n\r\nTypeError: Cannot create initializer for non-floating point type.\r\n\r\n```\r\n"}