{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/292701072", "html_url": "https://github.com/tensorflow/tensorflow/issues/136#issuecomment-292701072", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/136", "id": 292701072, "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjcwMTA3Mg==", "user": {"login": "ChinChangYang", "id": 2770271, "node_id": "MDQ6VXNlcjI3NzAyNzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2770271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChinChangYang", "html_url": "https://github.com/ChinChangYang", "followers_url": "https://api.github.com/users/ChinChangYang/followers", "following_url": "https://api.github.com/users/ChinChangYang/following{/other_user}", "gists_url": "https://api.github.com/users/ChinChangYang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChinChangYang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChinChangYang/subscriptions", "organizations_url": "https://api.github.com/users/ChinChangYang/orgs", "repos_url": "https://api.github.com/users/ChinChangYang/repos", "events_url": "https://api.github.com/users/ChinChangYang/events{/privacy}", "received_events_url": "https://api.github.com/users/ChinChangYang/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-08T07:28:16Z", "updated_at": "2017-04-08T07:43:11Z", "author_association": "NONE", "body_html": "<p>I am doing similar things as <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=22410510\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Shuto050505\">@Shuto050505</a> did here, but I compute the mean of accuracy for each batch in all test data. Replace the following line:</p>\n<pre><code>print(\"test accuracy %g\"%accuracy.eval(feed_dict={ \n      x: mnist.test.images, y_: mnist.test.labels, keep_prob: 1.0}))\n</code></pre>\n<p>by this:</p>\n<pre><code>batch_size = 50\nbatch_num = int(mnist.test.num_examples / batch_size)\ntest_accuracy = 0\n    \nfor i in range(batch_num):\n    batch = mnist.test.next_batch(batch_size)\n    test_accuracy += accuracy.eval(feed_dict={x: batch[0],\n                                              y_: batch[1],\n                                              keep_prob: 1.0})\n\ntest_accuracy /= batch_num\nprint(\"test accuracy %g\"%test_accuracy)\n</code></pre>\n<p>I will get the mean of test accuracy <code>test accuracy 0.9922</code>.</p>\n<p><em>EDIT: Updated accuracy with corrected training process</em></p>", "body_text": "I am doing similar things as @Shuto050505 did here, but I compute the mean of accuracy for each batch in all test data. Replace the following line:\nprint(\"test accuracy %g\"%accuracy.eval(feed_dict={ \n      x: mnist.test.images, y_: mnist.test.labels, keep_prob: 1.0}))\n\nby this:\nbatch_size = 50\nbatch_num = int(mnist.test.num_examples / batch_size)\ntest_accuracy = 0\n    \nfor i in range(batch_num):\n    batch = mnist.test.next_batch(batch_size)\n    test_accuracy += accuracy.eval(feed_dict={x: batch[0],\n                                              y_: batch[1],\n                                              keep_prob: 1.0})\n\ntest_accuracy /= batch_num\nprint(\"test accuracy %g\"%test_accuracy)\n\nI will get the mean of test accuracy test accuracy 0.9922.\nEDIT: Updated accuracy with corrected training process", "body": "I am doing similar things as @Shuto050505 did here, but I compute the mean of accuracy for each batch in all test data. Replace the following line:\r\n\r\n```\r\nprint(\"test accuracy %g\"%accuracy.eval(feed_dict={ \r\n      x: mnist.test.images, y_: mnist.test.labels, keep_prob: 1.0}))\r\n```\r\n\r\nby this:\r\n\r\n```\r\nbatch_size = 50\r\nbatch_num = int(mnist.test.num_examples / batch_size)\r\ntest_accuracy = 0\r\n    \r\nfor i in range(batch_num):\r\n    batch = mnist.test.next_batch(batch_size)\r\n    test_accuracy += accuracy.eval(feed_dict={x: batch[0],\r\n                                              y_: batch[1],\r\n                                              keep_prob: 1.0})\r\n\r\ntest_accuracy /= batch_num\r\nprint(\"test accuracy %g\"%test_accuracy)\r\n````\r\n\r\nI will get the mean of test accuracy `test accuracy 0.9922`.\r\n\r\n_EDIT: Updated accuracy with corrected training process_"}