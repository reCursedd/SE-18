{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18243", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18243/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18243/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18243/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18243", "id": 311349846, "node_id": "MDU6SXNzdWUzMTEzNDk4NDY=", "number": 18243, "title": "TensorFlow verbose logging is too verbose even at level 1", "user": {"login": "samikama", "id": 10539540, "node_id": "MDQ6VXNlcjEwNTM5NTQw", "avatar_url": "https://avatars0.githubusercontent.com/u/10539540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samikama", "html_url": "https://github.com/samikama", "followers_url": "https://api.github.com/users/samikama/followers", "following_url": "https://api.github.com/users/samikama/following{/other_user}", "gists_url": "https://api.github.com/users/samikama/gists{/gist_id}", "starred_url": "https://api.github.com/users/samikama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samikama/subscriptions", "organizations_url": "https://api.github.com/users/samikama/orgs", "repos_url": "https://api.github.com/users/samikama/repos", "events_url": "https://api.github.com/users/samikama/events{/privacy}", "received_events_url": "https://api.github.com/users/samikama/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-04-04T18:55:05Z", "updated_at": "2018-04-11T17:30:58Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>Hello,</p>\n<p>This is more of a feature request than an issue. Currently there is no convention on verbose logging of TensorFlow with VLOG() levels. This is making it pretty useless for development purposes. For example at  TF_CPP_MIN_VLOG_LEVEL=1, tensorflow/core/framework/log_memory.cc is printing all allocations and de-allocations which are spamming the log with hundreds of messages if not thousands per second. on the other hand tensorflow/core/common_runtime/graph_execution_state.cc is dumping nodedefs to the log file which sometimes contain the input data, creating hundreds of megabytes of strings as outputs . Similarly extremely verbose output is printed even at the verbosity level 1 making levels useless and logs unusable other than a few tiny example cases probably.</p>\n<p>It would be nice to establish some conventions for logging levels on number of messages per second or amount of data printed to the log. Something in the lines of<br>\n0 &lt; level 1 &lt;= 0.1 msg/s<br>\n0.1 msg/s &lt;= level 2 &lt;= ~1-2 msg/s<br>\n1-2msg/s &lt;= level 3 &lt;= ~5-10 msg/s<br>\n.... and similarly for amount of information printed in the logs.</p>\n<p>But the best solution would be to have a more advanced logging structure that would allow users to selectively enable or disable different logging levels for each module but I don't know how hard would it be to implement.</p>\n<p>I am creating this issue to bring this feature/improvement request into attention.</p>\n<p>Thanks,<br>\nSami</p>", "body_text": "Hello,\nThis is more of a feature request than an issue. Currently there is no convention on verbose logging of TensorFlow with VLOG() levels. This is making it pretty useless for development purposes. For example at  TF_CPP_MIN_VLOG_LEVEL=1, tensorflow/core/framework/log_memory.cc is printing all allocations and de-allocations which are spamming the log with hundreds of messages if not thousands per second. on the other hand tensorflow/core/common_runtime/graph_execution_state.cc is dumping nodedefs to the log file which sometimes contain the input data, creating hundreds of megabytes of strings as outputs . Similarly extremely verbose output is printed even at the verbosity level 1 making levels useless and logs unusable other than a few tiny example cases probably.\nIt would be nice to establish some conventions for logging levels on number of messages per second or amount of data printed to the log. Something in the lines of\n0 < level 1 <= 0.1 msg/s\n0.1 msg/s <= level 2 <= ~1-2 msg/s\n1-2msg/s <= level 3 <= ~5-10 msg/s\n.... and similarly for amount of information printed in the logs.\nBut the best solution would be to have a more advanced logging structure that would allow users to selectively enable or disable different logging levels for each module but I don't know how hard would it be to implement.\nI am creating this issue to bring this feature/improvement request into attention.\nThanks,\nSami", "body": "Hello,\r\n\r\nThis is more of a feature request than an issue. Currently there is no convention on verbose logging of TensorFlow with VLOG() levels. This is making it pretty useless for development purposes. For example at  TF_CPP_MIN_VLOG_LEVEL=1, tensorflow/core/framework/log_memory.cc is printing all allocations and de-allocations which are spamming the log with hundreds of messages if not thousands per second. on the other hand tensorflow/core/common_runtime/graph_execution_state.cc is dumping nodedefs to the log file which sometimes contain the input data, creating hundreds of megabytes of strings as outputs . Similarly extremely verbose output is printed even at the verbosity level 1 making levels useless and logs unusable other than a few tiny example cases probably. \r\n\r\nIt would be nice to establish some conventions for logging levels on number of messages per second or amount of data printed to the log. Something in the lines of\r\n0 < level 1 <= 0.1 msg/s\r\n0.1 msg/s <= level 2 <= ~1-2 msg/s\r\n1-2msg/s <= level 3 <= ~5-10 msg/s\r\n.... and similarly for amount of information printed in the logs.\r\n\r\nBut the best solution would be to have a more advanced logging structure that would allow users to selectively enable or disable different logging levels for each module but I don't know how hard would it be to implement. \r\n\r\nI am creating this issue to bring this feature/improvement request into attention.\r\n\r\nThanks,\r\nSami\r\n"}