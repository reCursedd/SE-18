{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/235419397", "html_url": "https://github.com/tensorflow/tensorflow/issues/3420#issuecomment-235419397", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3420", "id": 235419397, "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTQxOTM5Nw==", "user": {"login": "avostryakov", "id": 174194, "node_id": "MDQ6VXNlcjE3NDE5NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/174194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avostryakov", "html_url": "https://github.com/avostryakov", "followers_url": "https://api.github.com/users/avostryakov/followers", "following_url": "https://api.github.com/users/avostryakov/following{/other_user}", "gists_url": "https://api.github.com/users/avostryakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/avostryakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avostryakov/subscriptions", "organizations_url": "https://api.github.com/users/avostryakov/orgs", "repos_url": "https://api.github.com/users/avostryakov/repos", "events_url": "https://api.github.com/users/avostryakov/events{/privacy}", "received_events_url": "https://api.github.com/users/avostryakov/received_events", "type": "User", "site_admin": false}, "created_at": "2016-07-26T22:00:29Z", "updated_at": "2016-07-26T22:00:29Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=124146\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ASDen\">@ASDen</a> Thank you! I'm just trying to make my code faster. A simple architecture with embedding layer, 2 LSTM layers with dynamic_rnn (sequence_length is None) + classification on top of last hidden state works 30% slower than the same architecture on theano+lasagne. I thought that tensorflow 0.9 was optimized enough.</p>", "body_text": "@ASDen Thank you! I'm just trying to make my code faster. A simple architecture with embedding layer, 2 LSTM layers with dynamic_rnn (sequence_length is None) + classification on top of last hidden state works 30% slower than the same architecture on theano+lasagne. I thought that tensorflow 0.9 was optimized enough.", "body": "@ASDen Thank you! I'm just trying to make my code faster. A simple architecture with embedding layer, 2 LSTM layers with dynamic_rnn (sequence_length is None) + classification on top of last hidden state works 30% slower than the same architecture on theano+lasagne. I thought that tensorflow 0.9 was optimized enough.\n"}