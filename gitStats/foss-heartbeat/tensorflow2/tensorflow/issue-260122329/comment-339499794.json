{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/339499794", "html_url": "https://github.com/tensorflow/tensorflow/pull/13282#issuecomment-339499794", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13282", "id": 339499794, "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTQ5OTc5NA==", "user": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-25T22:59:48Z", "updated_at": "2017-10-25T22:59:48Z", "author_association": "CONTRIBUTOR", "body_html": "<div class=\"email-fragment\">I'd prefer not making any more changes to the TensorArray API.  Can all the\nlogic be done in tf.foldl and tf.foldr?</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On Thu, Oct 12, 2017 at 1:34 PM, Yong Tang ***@***.***&gt; wrote:\n <a class=\"user-mention\" href=\"https://github.com/mrry\">@mrry</a> &lt;<a href=\"https://github.com/mrry\">https://github.com/mrry</a>&gt; <a class=\"user-mention\" href=\"https://github.com/ebrevdo\">@ebrevdo</a> &lt;<a href=\"https://github.com/ebrevdo\">https://github.com/ebrevdo</a>&gt; I\n looked into the way map_fn handles nested structures. However, it seems\n that map_fn-like method (and scan) expects the same (nested) structure\n for all elems along dimension 0. But this is not the case raised in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"247823207\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/12019\" href=\"https://github.com/tensorflow/tensorflow/issues/12019\">#12019</a>\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"247823207\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/12019\" href=\"https://github.com/tensorflow/tensorflow/issues/12019\">#12019</a>&gt;.\n\n In <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"247823207\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/12019\" href=\"https://github.com/tensorflow/tensorflow/issues/12019\">#12019</a> &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"247823207\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/12019\" href=\"https://github.com/tensorflow/tensorflow/issues/12019\">#12019</a>&gt;, the\n input was\n\n def concat2(A, B):\n     return tf.concat([A, B], axis=0)\n\n A = tf.constant([[10,10]])             # A.shape =&gt; (1,2)\n B = tf.constant([[20, 20], [30, 30]])  # B.shape =&gt; (2,2)\n\n print(concat2(A, B).eval())              # =&gt; [[10, 10], [20, 20], [30, 30]]\n print(tf.foldr(concat2, [A, B]).eval())  # =&gt; ERROR!\n\n My understanding is that the above scenario will not be compatible with\n nested structure as map_fn.\n\n For that I am thinking we might consider:\n\n    - Update the tf.foldl and tf.foldr to support map_fn-like operations\n    that allows nested structure.\n    - Add method foldl and foldr to TensorArray so that tensors with\n    different shapes could be supported.\n\n Let me know if the above makes sense or not. If it does, then I can update\n this PR for nested structure support of tf.foldl and tf.foldr, and create\n another PR to address <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"247823207\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/12019\" href=\"https://github.com/tensorflow/tensorflow/issues/12019\">#12019</a>\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"247823207\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/12019\" href=\"https://github.com/tensorflow/tensorflow/issues/12019\">#12019</a>&gt; with foldl and\n foldr to TensorArray.\n\n /cc <a class=\"user-mention\" href=\"https://github.com/edgimar\">@edgimar</a> &lt;<a href=\"https://github.com/edgimar\">https://github.com/edgimar</a>&gt;\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"260122329\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/13282\" href=\"https://github.com/tensorflow/tensorflow/pull/13282#issuecomment-336257619\">#13282 (comment)</a>&gt;,\n or mute the thread\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/ABtimx3PhXGCS-a1f8OnFSDDcYsBIIIOks5srnfXgaJpZM4PiDxC\">https://github.com/notifications/unsubscribe-auth/ABtimx3PhXGCS-a1f8OnFSDDcYsBIIIOks5srnfXgaJpZM4PiDxC</a>&gt;\n .\n</div>\n<div class=\"email-fragment\"></div>\n</div>", "body_text": "I'd prefer not making any more changes to the TensorArray API.  Can all the\nlogic be done in tf.foldl and tf.foldr?\n\u2026\nOn Thu, Oct 12, 2017 at 1:34 PM, Yong Tang ***@***.***> wrote:\n @mrry <https://github.com/mrry> @ebrevdo <https://github.com/ebrevdo> I\n looked into the way map_fn handles nested structures. However, it seems\n that map_fn-like method (and scan) expects the same (nested) structure\n for all elems along dimension 0. But this is not the case raised in #12019\n <#12019>.\n\n In #12019 <#12019>, the\n input was\n\n def concat2(A, B):\n     return tf.concat([A, B], axis=0)\n\n A = tf.constant([[10,10]])             # A.shape => (1,2)\n B = tf.constant([[20, 20], [30, 30]])  # B.shape => (2,2)\n\n print(concat2(A, B).eval())              # => [[10, 10], [20, 20], [30, 30]]\n print(tf.foldr(concat2, [A, B]).eval())  # => ERROR!\n\n My understanding is that the above scenario will not be compatible with\n nested structure as map_fn.\n\n For that I am thinking we might consider:\n\n    - Update the tf.foldl and tf.foldr to support map_fn-like operations\n    that allows nested structure.\n    - Add method foldl and foldr to TensorArray so that tensors with\n    different shapes could be supported.\n\n Let me know if the above makes sense or not. If it does, then I can update\n this PR for nested structure support of tf.foldl and tf.foldr, and create\n another PR to address #12019\n <#12019> with foldl and\n foldr to TensorArray.\n\n /cc @edgimar <https://github.com/edgimar>\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#13282 (comment)>,\n or mute the thread\n <https://github.com/notifications/unsubscribe-auth/ABtimx3PhXGCS-a1f8OnFSDDcYsBIIIOks5srnfXgaJpZM4PiDxC>\n .", "body": "I'd prefer not making any more changes to the TensorArray API.  Can all the\nlogic be done in tf.foldl and tf.foldr?\n\nOn Thu, Oct 12, 2017 at 1:34 PM, Yong Tang <notifications@github.com> wrote:\n\n> @mrry <https://github.com/mrry> @ebrevdo <https://github.com/ebrevdo> I\n> looked into the way map_fn handles nested structures. However, it seems\n> that map_fn-like method (and scan) expects the same (nested) structure\n> for all elems along dimension 0. But this is not the case raised in #12019\n> <https://github.com/tensorflow/tensorflow/issues/12019>.\n>\n> In #12019 <https://github.com/tensorflow/tensorflow/issues/12019>, the\n> input was\n>\n> def concat2(A, B):\n>     return tf.concat([A, B], axis=0)\n>\n> A = tf.constant([[10,10]])             # A.shape => (1,2)\n> B = tf.constant([[20, 20], [30, 30]])  # B.shape => (2,2)\n>\n> print(concat2(A, B).eval())              # => [[10, 10], [20, 20], [30, 30]]\n> print(tf.foldr(concat2, [A, B]).eval())  # => ERROR!\n>\n> My understanding is that the above scenario will not be compatible with\n> nested structure as map_fn.\n>\n> For that I am thinking we might consider:\n>\n>    - Update the tf.foldl and tf.foldr to support map_fn-like operations\n>    that allows nested structure.\n>    - Add method foldl and foldr to TensorArray so that tensors with\n>    different shapes could be supported.\n>\n> Let me know if the above makes sense or not. If it does, then I can update\n> this PR for nested structure support of tf.foldl and tf.foldr, and create\n> another PR to address #12019\n> <https://github.com/tensorflow/tensorflow/issues/12019> with foldl and\n> foldr to TensorArray.\n>\n> /cc @edgimar <https://github.com/edgimar>\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/pull/13282#issuecomment-336257619>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABtimx3PhXGCS-a1f8OnFSDDcYsBIIIOks5srnfXgaJpZM4PiDxC>\n> .\n>\n"}