{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21970", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21970/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21970/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21970/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/21970", "id": 355514908, "node_id": "MDExOlB1bGxSZXF1ZXN0MjEyMDI0MDM5", "number": 21970, "title": "tf.errors.OpError and its subclasses are pickleable", "user": {"login": "superbobry", "id": 185856, "node_id": "MDQ6VXNlcjE4NTg1Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/185856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/superbobry", "html_url": "https://github.com/superbobry", "followers_url": "https://api.github.com/users/superbobry/followers", "following_url": "https://api.github.com/users/superbobry/following{/other_user}", "gists_url": "https://api.github.com/users/superbobry/gists{/gist_id}", "starred_url": "https://api.github.com/users/superbobry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/superbobry/subscriptions", "organizations_url": "https://api.github.com/users/superbobry/orgs", "repos_url": "https://api.github.com/users/superbobry/repos", "events_url": "https://api.github.com/users/superbobry/events{/privacy}", "received_events_url": "https://api.github.com/users/superbobry/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}, {"id": 987666414, "node_id": "MDU6TGFiZWw5ODc2NjY0MTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/ready%20to%20pull", "name": "ready to pull", "color": "2cd643", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "aaroey", "id": 31743510, "node_id": "MDQ6VXNlcjMxNzQzNTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/31743510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaroey", "html_url": "https://github.com/aaroey", "followers_url": "https://api.github.com/users/aaroey/followers", "following_url": "https://api.github.com/users/aaroey/following{/other_user}", "gists_url": "https://api.github.com/users/aaroey/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaroey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaroey/subscriptions", "organizations_url": "https://api.github.com/users/aaroey/orgs", "repos_url": "https://api.github.com/users/aaroey/repos", "events_url": "https://api.github.com/users/aaroey/events{/privacy}", "received_events_url": "https://api.github.com/users/aaroey/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aaroey", "id": 31743510, "node_id": "MDQ6VXNlcjMxNzQzNTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/31743510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaroey", "html_url": "https://github.com/aaroey", "followers_url": "https://api.github.com/users/aaroey/followers", "following_url": "https://api.github.com/users/aaroey/following{/other_user}", "gists_url": "https://api.github.com/users/aaroey/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaroey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaroey/subscriptions", "organizations_url": "https://api.github.com/users/aaroey/orgs", "repos_url": "https://api.github.com/users/aaroey/repos", "events_url": "https://api.github.com/users/aaroey/events{/privacy}", "received_events_url": "https://api.github.com/users/aaroey/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-08-30T10:05:00Z", "updated_at": "2018-08-31T21:45:36Z", "closed_at": "2018-08-31T21:45:36Z", "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21970", "html_url": "https://github.com/tensorflow/tensorflow/pull/21970", "diff_url": "https://github.com/tensorflow/tensorflow/pull/21970.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/21970.patch"}, "body_html": "<p>The builtin <code>BaseException</code> class defines a generic <code>__reduce__</code> method which assumes that the <code>args</code> attribute corresponds to constructor arguments. See <code>BaseException_reduce</code> in <a href=\"https://github.com/python/cpython/blob/master/Objects/exceptions.c#L129\">Objects/exceptions.c</a>. <code>tf.errors.OpError</code> keeps args empty and therefore cannot be pickled via <code>BaseException.__reduce__</code>. This commit fixes  the issue by defining <code>OpError.__reduce__</code>.</p>\n<p>Side question: is there a reason <code>tf.errors.OpError</code> does not pass its arguments to the <code>Exception</code> constructor to make them available via <code>args</code> and in the repr?</p>", "body_text": "The builtin BaseException class defines a generic __reduce__ method which assumes that the args attribute corresponds to constructor arguments. See BaseException_reduce in Objects/exceptions.c. tf.errors.OpError keeps args empty and therefore cannot be pickled via BaseException.__reduce__. This commit fixes  the issue by defining OpError.__reduce__.\nSide question: is there a reason tf.errors.OpError does not pass its arguments to the Exception constructor to make them available via args and in the repr?", "body": "The builtin `BaseException` class defines a generic `__reduce__` method which assumes that the `args` attribute corresponds to constructor arguments. See `BaseException_reduce` in [Objects/exceptions.c](https://github.com/python/cpython/blob/master/Objects/exceptions.c#L129). `tf.errors.OpError` keeps args empty and therefore cannot be pickled via `BaseException.__reduce__`. This commit fixes  the issue by defining `OpError.__reduce__`.\r\n\r\nSide question: is there a reason `tf.errors.OpError` does not pass its arguments to the `Exception` constructor to make them available via `args` and in the repr?"}