{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/120215994", "pull_request_review_id": 42160360, "id": 120215994, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMDIxNTk5NA==", "diff_hunk": "@@ -616,6 +616,38 @@ inline void ForwarMklTensorInToOut(OpKernelContext* context,\n   }\n }\n \n+inline void MklNHWCToNCHW(const Tensor& input, Tensor** output) {\n+  const float* buf_in = input.flat<float>().data();\n+  float* buf_out = (*output)->flat<float>().data();\n+\n+  int64 N = input.dim_size(0);\n+  int64 H = input.dim_size(1);\n+  int64 W = input.dim_size(2);\n+  int64 C = input.dim_size(3);\n+  int64 stride_n = H*W*C;\n+# pragma omp parallel for num_threads(16)\n+  for (int64 n = 0; n < N; ++n) {\n+    mkl_somatcopy('R', 'T', H*W, C, 1, buf_in + n*stride_n, C,\n+        buf_out + n*stride_n, H*W);\n+  }\n+}\n+\n+inline void MklNCHWToNHWC(const Tensor& input, Tensor** output) {\n+  const float* buf_in = input.flat<float>().data();\n+  float* buf_out = (*output)->flat<float>().data();\n+\n+  int64 N = (*output)->dim_size(0);\n+  int64 H = (*output)->dim_size(1);\n+  int64 W = (*output)->dim_size(2);\n+  int64 C = (*output)->dim_size(3);\n+  int64 stride_n = H*W*C;\n+# pragma omp parallel for num_threads(16)", "path": "tensorflow/core/util/mkl_util.h", "position": 42, "original_position": 38, "commit_id": "af0019038082113ecc4d274850845a16ad518837", "original_commit_id": "a79b740f74648d430b8cd99d46c5bd9957c268c2", "user": {"login": "andydavis1", "id": 15696327, "node_id": "MDQ6VXNlcjE1Njk2MzI3", "avatar_url": "https://avatars0.githubusercontent.com/u/15696327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andydavis1", "html_url": "https://github.com/andydavis1", "followers_url": "https://api.github.com/users/andydavis1/followers", "following_url": "https://api.github.com/users/andydavis1/following{/other_user}", "gists_url": "https://api.github.com/users/andydavis1/gists{/gist_id}", "starred_url": "https://api.github.com/users/andydavis1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andydavis1/subscriptions", "organizations_url": "https://api.github.com/users/andydavis1/orgs", "repos_url": "https://api.github.com/users/andydavis1/repos", "events_url": "https://api.github.com/users/andydavis1/events{/privacy}", "received_events_url": "https://api.github.com/users/andydavis1/received_events", "type": "User", "site_admin": false}, "body": "Is there a way to set the number of openmp threads dynamically?", "created_at": "2017-06-05T21:34:56Z", "updated_at": "2017-06-07T19:01:25Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/10295#discussion_r120215994", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/10295", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/120215994"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/10295#discussion_r120215994"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/10295"}}, "body_html": "<p>Is there a way to set the number of openmp threads dynamically?</p>", "body_text": "Is there a way to set the number of openmp threads dynamically?"}