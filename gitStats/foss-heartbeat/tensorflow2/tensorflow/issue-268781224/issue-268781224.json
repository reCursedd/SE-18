{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13999", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13999/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13999/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13999/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/13999", "id": 268781224, "node_id": "MDU6SXNzdWUyNjg3ODEyMjQ=", "number": 13999, "title": "Memory Leak While Reading from TFRecord", "user": {"login": "Mahdizade", "id": 5513062, "node_id": "MDQ6VXNlcjU1MTMwNjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5513062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mahdizade", "html_url": "https://github.com/Mahdizade", "followers_url": "https://api.github.com/users/Mahdizade/followers", "following_url": "https://api.github.com/users/Mahdizade/following{/other_user}", "gists_url": "https://api.github.com/users/Mahdizade/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mahdizade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mahdizade/subscriptions", "organizations_url": "https://api.github.com/users/Mahdizade/orgs", "repos_url": "https://api.github.com/users/Mahdizade/repos", "events_url": "https://api.github.com/users/Mahdizade/events{/privacy}", "received_events_url": "https://api.github.com/users/Mahdizade/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2017-10-26T14:25:34Z", "updated_at": "2017-11-01T12:39:07Z", "closed_at": "2017-10-30T23:42:45Z", "author_association": "NONE", "body_html": "<h3>Problem</h3>\n<p>As I mentioned in <a href=\"https://github.com/tensorflow/tensorflow/issues/6599\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/6599/hovercard\">my previous issue</a>, I have memory leak in my code. Finally I can write a sample code that can reproduce the problem.</p>\n<h3>Source code</h3>\n<pre><code>import os\nimport random\n\nimport psutil\nimport tensorflow as tf\n\n\ndef get_tf_example(inputs, outputs):\n    example = tf.train.Example(features=tf.train.Features(feature={\n        'inputs': tf.train.Feature(int64_list=tf.train.Int64List(value=inputs)),\n        'outputs': tf.train.Feature(int64_list=tf.train.Int64List(value=outputs))\n        }))\n    return example.SerializeToString()\n\n\ndef memory():\n    pid = os.getpid()\n    py = psutil.Process(pid)\n    memory_use = py.memory_info()[0]/2.**30\n    print('memory use:', memory_use)\n\n\ndef main():\n    tfrecord_file = tf.python_io.TFRecordWriter('data.tfrecord')\n    for i in range(10000):\n        random_numbers = [random.randint(0, 100) for _ in range(10)]\n        without_an_element = filter(lambda e: e != 100, random_numbers)\n        tf_example = get_tf_example(random_numbers, without_an_element)\n        tfrecord_file.write(tf_example)\n    tfrecord_file.close()\n\n    filename_queue = tf.train.string_input_producer(['data.tfrecord'])\n    reader = tf.TFRecordReader()\n    _, serialized_example = reader.read(filename_queue)\n    features = tf.parse_single_example(\n        serialized_example,\n        features={\n            'inputs': tf.FixedLenFeature(10, dtype=tf.int64),\n            'outputs': tf.VarLenFeature(dtype=tf.int64)\n        })\n    images, labels = tf.train.shuffle_batch([features['inputs'], features['outputs']], batch_size=100, capacity=200,\n                                            min_after_dequeue=100)\n    sess = tf.Session()\n\n    coord = tf.train.Coordinator()\n    threads = tf.train.start_queue_runners(sess=sess, coord=coord)\n\n    for i in range(10000):\n        _ = sess.run(images)\n        if (i+1) % 100 == 0:\n            memory()\n\n    coord.request_stop()\n    coord.join(threads)\n\n\nif __name__ == '__main__':\n    main()\n</code></pre>\n<h3>logs</h3>\n<pre><code>('memory use:', 0.1137542724609375)\n('memory use:', 0.11678314208984375)\n('memory use:', 0.11930084228515625)\n('memory use:', 0.12792205810546875)\n('memory use:', 0.13238525390625)\n('memory use:', 0.135406494140625)\n('memory use:', 0.13817596435546875)\n('memory use:', 0.14484786987304688)\n('memory use:', 0.1512603759765625)\n('memory use:', 0.15402984619140625)\n('memory use:', 0.15654754638671875)\n('memory use:', 0.16101455688476562)\n('memory use:', 0.17060470581054688)\n('memory use:', 0.17287063598632812)\n('memory use:', 0.17589187622070312)\n('memory use:', 0.18036270141601562)\n('memory use:', 0.18872833251953125)\n('memory use:', 0.19124221801757812)\n('memory use:', 0.19401168823242188)\n('memory use:', 0.19848251342773438)\n('memory use:', 0.20489883422851562)\n('memory use:', 0.20936203002929688)\n('memory use:', 0.21213150024414062)\n('memory use:', 0.21490097045898438)\n('memory use:', 0.22327041625976562)\n('memory use:', 0.22988128662109375)\n('memory use:', 0.232147216796875)\n('memory use:', 0.23491668701171875)\n('memory use:', 0.23967361450195312)\n('memory use:', 0.2477874755859375)\n('memory use:', 0.2508087158203125)\n('memory use:', 0.2528228759765625)\n('memory use:', 0.2577934265136719)\n('memory use:', 0.2661628723144531)\n('memory use:', 0.2686767578125)\n('memory use:', 0.27144622802734375)\n('memory use:', 0.2759132385253906)\n('memory use:', 0.2823295593261719)\n('memory use:', 0.28704833984375)\n('memory use:', 0.2895660400390625)\n('memory use:', 0.2940330505371094)\n('memory use:', 0.30095672607421875)\n('memory use:', 0.30516815185546875)\n('memory use:', 0.30768585205078125)\n('memory use:', 0.3126564025878906)\n('memory use:', 0.31687164306640625)\n('memory use:', 0.3235435485839844)\n('memory use:', 0.32605743408203125)\n('memory use:', 0.3305244445800781)\n('memory use:', 0.3332939147949219)\n('memory use:', 0.3397102355957031)\n('memory use:', 0.34417724609375)\n('memory use:', 0.3529624938964844)\n('memory use:', 0.3552284240722656)\n('memory use:', 0.36199188232421875)\n('memory use:', 0.3664588928222656)\n('memory use:', 0.37117767333984375)\n('memory use:', 0.373443603515625)\n('memory use:', 0.3801116943359375)\n('memory use:', 0.38458251953125)\n('memory use:', 0.3892974853515625)\n('memory use:', 0.3923187255859375)\n('memory use:', 0.3982391357421875)\n('memory use:', 0.40125274658203125)\n('memory use:', 0.4074211120605469)\n('memory use:', 0.410186767578125)\n('memory use:', 0.4146575927734375)\n('memory use:', 0.41912078857421875)\n('memory use:', 0.4257926940917969)\n('memory use:', 0.4280548095703125)\n('memory use:', 0.4310760498046875)\n('memory use:', 0.4372406005859375)\n('memory use:', 0.44196319580078125)\n('memory use:', 0.446929931640625)\n('memory use:', 0.44919586181640625)\n('memory use:', 0.45586395263671875)\n('memory use:', 0.4581298828125)\n('memory use:', 0.46504974365234375)\n('memory use:', 0.467315673828125)\n('memory use:', 0.4739875793457031)\n('memory use:', 0.47650146484375)\n('memory use:', 0.48291778564453125)\n('memory use:', 0.485687255859375)\n('memory use:', 0.4921112060546875)\n('memory use:', 0.49462127685546875)\n('memory use:', 0.5015411376953125)\n('memory use:', 0.5038070678710938)\n('memory use:', 0.5085296630859375)\n('memory use:', 0.5129928588867188)\n('memory use:', 0.5174598693847656)\n('memory use:', 0.522430419921875)\n('memory use:', 0.5246963500976562)\n('memory use:', 0.5313644409179688)\n('memory use:', 0.5355796813964844)\n('memory use:', 0.5404815673828125)\n('memory use:', 0.5429954528808594)\n('memory use:', 0.5494194030761719)\n('memory use:', 0.5541419982910156)\n('memory use:', 0.5586051940917969)\n('memory use:', 0.5611228942871094)\n</code></pre>\n<p>I can't find the reason. Many thanks for your consideration.</p>\n<h3>System information</h3>\n<ul>\n<li><strong>OS Platform and Distribution</strong>: Linux Ubuntu 14.04</li>\n<li><strong>TensorFlow installed from</strong>: binary</li>\n<li><strong>TensorFlow version</strong>: ('v1.3.0-rc2-20-g0787eee', '1.3.0')</li>\n<li><strong>Python version</strong>: 2.7.6</li>\n<li><strong>CUDA/cuDNN version</strong>: NA</li>\n<li><strong>GPU model and memory</strong>: NA</li>\n</ul>", "body_text": "Problem\nAs I mentioned in my previous issue, I have memory leak in my code. Finally I can write a sample code that can reproduce the problem.\nSource code\nimport os\nimport random\n\nimport psutil\nimport tensorflow as tf\n\n\ndef get_tf_example(inputs, outputs):\n    example = tf.train.Example(features=tf.train.Features(feature={\n        'inputs': tf.train.Feature(int64_list=tf.train.Int64List(value=inputs)),\n        'outputs': tf.train.Feature(int64_list=tf.train.Int64List(value=outputs))\n        }))\n    return example.SerializeToString()\n\n\ndef memory():\n    pid = os.getpid()\n    py = psutil.Process(pid)\n    memory_use = py.memory_info()[0]/2.**30\n    print('memory use:', memory_use)\n\n\ndef main():\n    tfrecord_file = tf.python_io.TFRecordWriter('data.tfrecord')\n    for i in range(10000):\n        random_numbers = [random.randint(0, 100) for _ in range(10)]\n        without_an_element = filter(lambda e: e != 100, random_numbers)\n        tf_example = get_tf_example(random_numbers, without_an_element)\n        tfrecord_file.write(tf_example)\n    tfrecord_file.close()\n\n    filename_queue = tf.train.string_input_producer(['data.tfrecord'])\n    reader = tf.TFRecordReader()\n    _, serialized_example = reader.read(filename_queue)\n    features = tf.parse_single_example(\n        serialized_example,\n        features={\n            'inputs': tf.FixedLenFeature(10, dtype=tf.int64),\n            'outputs': tf.VarLenFeature(dtype=tf.int64)\n        })\n    images, labels = tf.train.shuffle_batch([features['inputs'], features['outputs']], batch_size=100, capacity=200,\n                                            min_after_dequeue=100)\n    sess = tf.Session()\n\n    coord = tf.train.Coordinator()\n    threads = tf.train.start_queue_runners(sess=sess, coord=coord)\n\n    for i in range(10000):\n        _ = sess.run(images)\n        if (i+1) % 100 == 0:\n            memory()\n\n    coord.request_stop()\n    coord.join(threads)\n\n\nif __name__ == '__main__':\n    main()\n\nlogs\n('memory use:', 0.1137542724609375)\n('memory use:', 0.11678314208984375)\n('memory use:', 0.11930084228515625)\n('memory use:', 0.12792205810546875)\n('memory use:', 0.13238525390625)\n('memory use:', 0.135406494140625)\n('memory use:', 0.13817596435546875)\n('memory use:', 0.14484786987304688)\n('memory use:', 0.1512603759765625)\n('memory use:', 0.15402984619140625)\n('memory use:', 0.15654754638671875)\n('memory use:', 0.16101455688476562)\n('memory use:', 0.17060470581054688)\n('memory use:', 0.17287063598632812)\n('memory use:', 0.17589187622070312)\n('memory use:', 0.18036270141601562)\n('memory use:', 0.18872833251953125)\n('memory use:', 0.19124221801757812)\n('memory use:', 0.19401168823242188)\n('memory use:', 0.19848251342773438)\n('memory use:', 0.20489883422851562)\n('memory use:', 0.20936203002929688)\n('memory use:', 0.21213150024414062)\n('memory use:', 0.21490097045898438)\n('memory use:', 0.22327041625976562)\n('memory use:', 0.22988128662109375)\n('memory use:', 0.232147216796875)\n('memory use:', 0.23491668701171875)\n('memory use:', 0.23967361450195312)\n('memory use:', 0.2477874755859375)\n('memory use:', 0.2508087158203125)\n('memory use:', 0.2528228759765625)\n('memory use:', 0.2577934265136719)\n('memory use:', 0.2661628723144531)\n('memory use:', 0.2686767578125)\n('memory use:', 0.27144622802734375)\n('memory use:', 0.2759132385253906)\n('memory use:', 0.2823295593261719)\n('memory use:', 0.28704833984375)\n('memory use:', 0.2895660400390625)\n('memory use:', 0.2940330505371094)\n('memory use:', 0.30095672607421875)\n('memory use:', 0.30516815185546875)\n('memory use:', 0.30768585205078125)\n('memory use:', 0.3126564025878906)\n('memory use:', 0.31687164306640625)\n('memory use:', 0.3235435485839844)\n('memory use:', 0.32605743408203125)\n('memory use:', 0.3305244445800781)\n('memory use:', 0.3332939147949219)\n('memory use:', 0.3397102355957031)\n('memory use:', 0.34417724609375)\n('memory use:', 0.3529624938964844)\n('memory use:', 0.3552284240722656)\n('memory use:', 0.36199188232421875)\n('memory use:', 0.3664588928222656)\n('memory use:', 0.37117767333984375)\n('memory use:', 0.373443603515625)\n('memory use:', 0.3801116943359375)\n('memory use:', 0.38458251953125)\n('memory use:', 0.3892974853515625)\n('memory use:', 0.3923187255859375)\n('memory use:', 0.3982391357421875)\n('memory use:', 0.40125274658203125)\n('memory use:', 0.4074211120605469)\n('memory use:', 0.410186767578125)\n('memory use:', 0.4146575927734375)\n('memory use:', 0.41912078857421875)\n('memory use:', 0.4257926940917969)\n('memory use:', 0.4280548095703125)\n('memory use:', 0.4310760498046875)\n('memory use:', 0.4372406005859375)\n('memory use:', 0.44196319580078125)\n('memory use:', 0.446929931640625)\n('memory use:', 0.44919586181640625)\n('memory use:', 0.45586395263671875)\n('memory use:', 0.4581298828125)\n('memory use:', 0.46504974365234375)\n('memory use:', 0.467315673828125)\n('memory use:', 0.4739875793457031)\n('memory use:', 0.47650146484375)\n('memory use:', 0.48291778564453125)\n('memory use:', 0.485687255859375)\n('memory use:', 0.4921112060546875)\n('memory use:', 0.49462127685546875)\n('memory use:', 0.5015411376953125)\n('memory use:', 0.5038070678710938)\n('memory use:', 0.5085296630859375)\n('memory use:', 0.5129928588867188)\n('memory use:', 0.5174598693847656)\n('memory use:', 0.522430419921875)\n('memory use:', 0.5246963500976562)\n('memory use:', 0.5313644409179688)\n('memory use:', 0.5355796813964844)\n('memory use:', 0.5404815673828125)\n('memory use:', 0.5429954528808594)\n('memory use:', 0.5494194030761719)\n('memory use:', 0.5541419982910156)\n('memory use:', 0.5586051940917969)\n('memory use:', 0.5611228942871094)\n\nI can't find the reason. Many thanks for your consideration.\nSystem information\n\nOS Platform and Distribution: Linux Ubuntu 14.04\nTensorFlow installed from: binary\nTensorFlow version: ('v1.3.0-rc2-20-g0787eee', '1.3.0')\nPython version: 2.7.6\nCUDA/cuDNN version: NA\nGPU model and memory: NA", "body": "### Problem\r\nAs I mentioned in [my previous issue](https://github.com/tensorflow/tensorflow/issues/6599), I have memory leak in my code. Finally I can write a sample code that can reproduce the problem.\r\n\r\n### Source code\r\n```\r\nimport os\r\nimport random\r\n\r\nimport psutil\r\nimport tensorflow as tf\r\n\r\n\r\ndef get_tf_example(inputs, outputs):\r\n    example = tf.train.Example(features=tf.train.Features(feature={\r\n        'inputs': tf.train.Feature(int64_list=tf.train.Int64List(value=inputs)),\r\n        'outputs': tf.train.Feature(int64_list=tf.train.Int64List(value=outputs))\r\n        }))\r\n    return example.SerializeToString()\r\n\r\n\r\ndef memory():\r\n    pid = os.getpid()\r\n    py = psutil.Process(pid)\r\n    memory_use = py.memory_info()[0]/2.**30\r\n    print('memory use:', memory_use)\r\n\r\n\r\ndef main():\r\n    tfrecord_file = tf.python_io.TFRecordWriter('data.tfrecord')\r\n    for i in range(10000):\r\n        random_numbers = [random.randint(0, 100) for _ in range(10)]\r\n        without_an_element = filter(lambda e: e != 100, random_numbers)\r\n        tf_example = get_tf_example(random_numbers, without_an_element)\r\n        tfrecord_file.write(tf_example)\r\n    tfrecord_file.close()\r\n\r\n    filename_queue = tf.train.string_input_producer(['data.tfrecord'])\r\n    reader = tf.TFRecordReader()\r\n    _, serialized_example = reader.read(filename_queue)\r\n    features = tf.parse_single_example(\r\n        serialized_example,\r\n        features={\r\n            'inputs': tf.FixedLenFeature(10, dtype=tf.int64),\r\n            'outputs': tf.VarLenFeature(dtype=tf.int64)\r\n        })\r\n    images, labels = tf.train.shuffle_batch([features['inputs'], features['outputs']], batch_size=100, capacity=200,\r\n                                            min_after_dequeue=100)\r\n    sess = tf.Session()\r\n\r\n    coord = tf.train.Coordinator()\r\n    threads = tf.train.start_queue_runners(sess=sess, coord=coord)\r\n\r\n    for i in range(10000):\r\n        _ = sess.run(images)\r\n        if (i+1) % 100 == 0:\r\n            memory()\r\n\r\n    coord.request_stop()\r\n    coord.join(threads)\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\n### logs\r\n```\r\n('memory use:', 0.1137542724609375)\r\n('memory use:', 0.11678314208984375)\r\n('memory use:', 0.11930084228515625)\r\n('memory use:', 0.12792205810546875)\r\n('memory use:', 0.13238525390625)\r\n('memory use:', 0.135406494140625)\r\n('memory use:', 0.13817596435546875)\r\n('memory use:', 0.14484786987304688)\r\n('memory use:', 0.1512603759765625)\r\n('memory use:', 0.15402984619140625)\r\n('memory use:', 0.15654754638671875)\r\n('memory use:', 0.16101455688476562)\r\n('memory use:', 0.17060470581054688)\r\n('memory use:', 0.17287063598632812)\r\n('memory use:', 0.17589187622070312)\r\n('memory use:', 0.18036270141601562)\r\n('memory use:', 0.18872833251953125)\r\n('memory use:', 0.19124221801757812)\r\n('memory use:', 0.19401168823242188)\r\n('memory use:', 0.19848251342773438)\r\n('memory use:', 0.20489883422851562)\r\n('memory use:', 0.20936203002929688)\r\n('memory use:', 0.21213150024414062)\r\n('memory use:', 0.21490097045898438)\r\n('memory use:', 0.22327041625976562)\r\n('memory use:', 0.22988128662109375)\r\n('memory use:', 0.232147216796875)\r\n('memory use:', 0.23491668701171875)\r\n('memory use:', 0.23967361450195312)\r\n('memory use:', 0.2477874755859375)\r\n('memory use:', 0.2508087158203125)\r\n('memory use:', 0.2528228759765625)\r\n('memory use:', 0.2577934265136719)\r\n('memory use:', 0.2661628723144531)\r\n('memory use:', 0.2686767578125)\r\n('memory use:', 0.27144622802734375)\r\n('memory use:', 0.2759132385253906)\r\n('memory use:', 0.2823295593261719)\r\n('memory use:', 0.28704833984375)\r\n('memory use:', 0.2895660400390625)\r\n('memory use:', 0.2940330505371094)\r\n('memory use:', 0.30095672607421875)\r\n('memory use:', 0.30516815185546875)\r\n('memory use:', 0.30768585205078125)\r\n('memory use:', 0.3126564025878906)\r\n('memory use:', 0.31687164306640625)\r\n('memory use:', 0.3235435485839844)\r\n('memory use:', 0.32605743408203125)\r\n('memory use:', 0.3305244445800781)\r\n('memory use:', 0.3332939147949219)\r\n('memory use:', 0.3397102355957031)\r\n('memory use:', 0.34417724609375)\r\n('memory use:', 0.3529624938964844)\r\n('memory use:', 0.3552284240722656)\r\n('memory use:', 0.36199188232421875)\r\n('memory use:', 0.3664588928222656)\r\n('memory use:', 0.37117767333984375)\r\n('memory use:', 0.373443603515625)\r\n('memory use:', 0.3801116943359375)\r\n('memory use:', 0.38458251953125)\r\n('memory use:', 0.3892974853515625)\r\n('memory use:', 0.3923187255859375)\r\n('memory use:', 0.3982391357421875)\r\n('memory use:', 0.40125274658203125)\r\n('memory use:', 0.4074211120605469)\r\n('memory use:', 0.410186767578125)\r\n('memory use:', 0.4146575927734375)\r\n('memory use:', 0.41912078857421875)\r\n('memory use:', 0.4257926940917969)\r\n('memory use:', 0.4280548095703125)\r\n('memory use:', 0.4310760498046875)\r\n('memory use:', 0.4372406005859375)\r\n('memory use:', 0.44196319580078125)\r\n('memory use:', 0.446929931640625)\r\n('memory use:', 0.44919586181640625)\r\n('memory use:', 0.45586395263671875)\r\n('memory use:', 0.4581298828125)\r\n('memory use:', 0.46504974365234375)\r\n('memory use:', 0.467315673828125)\r\n('memory use:', 0.4739875793457031)\r\n('memory use:', 0.47650146484375)\r\n('memory use:', 0.48291778564453125)\r\n('memory use:', 0.485687255859375)\r\n('memory use:', 0.4921112060546875)\r\n('memory use:', 0.49462127685546875)\r\n('memory use:', 0.5015411376953125)\r\n('memory use:', 0.5038070678710938)\r\n('memory use:', 0.5085296630859375)\r\n('memory use:', 0.5129928588867188)\r\n('memory use:', 0.5174598693847656)\r\n('memory use:', 0.522430419921875)\r\n('memory use:', 0.5246963500976562)\r\n('memory use:', 0.5313644409179688)\r\n('memory use:', 0.5355796813964844)\r\n('memory use:', 0.5404815673828125)\r\n('memory use:', 0.5429954528808594)\r\n('memory use:', 0.5494194030761719)\r\n('memory use:', 0.5541419982910156)\r\n('memory use:', 0.5586051940917969)\r\n('memory use:', 0.5611228942871094)\r\n```\r\n\r\nI can't find the reason. Many thanks for your consideration.\r\n\r\n### System information\r\n- **OS Platform and Distribution**: Linux Ubuntu 14.04\r\n- **TensorFlow installed from**: binary\r\n- **TensorFlow version**: ('v1.3.0-rc2-20-g0787eee', '1.3.0')\r\n- **Python version**: 2.7.6\r\n- **CUDA/cuDNN version**: NA\r\n- **GPU model and memory**: NA\r\n"}