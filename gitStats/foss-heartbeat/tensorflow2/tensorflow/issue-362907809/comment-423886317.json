{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/423886317", "html_url": "https://github.com/tensorflow/tensorflow/issues/22470#issuecomment-423886317", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22470", "id": 423886317, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzg4NjMxNw==", "user": {"login": "yongtang", "id": 6932348, "node_id": "MDQ6VXNlcjY5MzIzNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6932348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yongtang", "html_url": "https://github.com/yongtang", "followers_url": "https://api.github.com/users/yongtang/followers", "following_url": "https://api.github.com/users/yongtang/following{/other_user}", "gists_url": "https://api.github.com/users/yongtang/gists{/gist_id}", "starred_url": "https://api.github.com/users/yongtang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yongtang/subscriptions", "organizations_url": "https://api.github.com/users/yongtang/orgs", "repos_url": "https://api.github.com/users/yongtang/repos", "events_url": "https://api.github.com/users/yongtang/events{/privacy}", "received_events_url": "https://api.github.com/users/yongtang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-24T06:33:50Z", "updated_at": "2018-09-24T06:33:50Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4527536\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/tranhungnghiep\">@tranhungnghiep</a> It looks like the issue only happens when tf.keras.regularizers.l2(l=0.) is used. In that case <code>regularization = 0.</code> is returned directly. Otherwise it should be fine:<br>\n<div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/609b2ce3fe8ebecf4031670b8c2186468369b0ba/tensorflow/python/keras/regularizers.py#L56-L62\">tensorflow/tensorflow/python/keras/regularizers.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 56 to 62\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/609b2ce3fe8ebecf4031670b8c2186468369b0ba\">609b2ce</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L56\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"56\"></td>\n          <td id=\"LC56\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">def</span> <span class=\"pl-c1\">__call__</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">x</span>): </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L57\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"57\"></td>\n          <td id=\"LC57\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   regularization <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>. </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L58\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"58\"></td>\n          <td id=\"LC58\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">if</span> <span class=\"pl-c1\">self</span>.l1: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L59\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"59\"></td>\n          <td id=\"LC59\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     regularization <span class=\"pl-k\">+=</span> math_ops.reduce_sum(<span class=\"pl-c1\">self</span>.l1 <span class=\"pl-k\">*</span> math_ops.abs(x)) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L60\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"60\"></td>\n          <td id=\"LC60\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">if</span> <span class=\"pl-c1\">self</span>.l2: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L61\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"61\"></td>\n          <td id=\"LC61\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     regularization <span class=\"pl-k\">+=</span> math_ops.reduce_sum(<span class=\"pl-c1\">self</span>.l2 <span class=\"pl-k\">*</span> math_ops.square(x)) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L62\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"62\"></td>\n          <td id=\"LC62\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">return</span> regularization </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>Created a PR <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"363027047\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/22478\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/22478/hovercard\" href=\"https://github.com/tensorflow/tensorflow/pull/22478\">#22478</a> for the fix.</p>", "body_text": "@tranhungnghiep It looks like the issue only happens when tf.keras.regularizers.l2(l=0.) is used. In that case regularization = 0. is returned directly. Otherwise it should be fine:\n\n  \n    \n      tensorflow/tensorflow/python/keras/regularizers.py\n    \n    \n        Lines 56 to 62\n      in\n      609b2ce\n    \n    \n    \n    \n\n        \n          \n           def __call__(self, x): \n        \n\n        \n          \n             regularization = 0. \n        \n\n        \n          \n             if self.l1: \n        \n\n        \n          \n               regularization += math_ops.reduce_sum(self.l1 * math_ops.abs(x)) \n        \n\n        \n          \n             if self.l2: \n        \n\n        \n          \n               regularization += math_ops.reduce_sum(self.l2 * math_ops.square(x)) \n        \n\n        \n          \n             return regularization \n        \n    \n  \n\n\nCreated a PR #22478 for the fix.", "body": "@tranhungnghiep It looks like the issue only happens when tf.keras.regularizers.l2(l=0.) is used. In that case `regularization = 0.` is returned directly. Otherwise it should be fine:\r\nhttps://github.com/tensorflow/tensorflow/blob/609b2ce3fe8ebecf4031670b8c2186468369b0ba/tensorflow/python/keras/regularizers.py#L56-L62\r\n\r\nCreated a PR #22478 for the fix."}