{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/416657135", "html_url": "https://github.com/tensorflow/tensorflow/issues/21331#issuecomment-416657135", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21331", "id": 416657135, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjY1NzEzNQ==", "user": {"login": "vrv", "id": 463737, "node_id": "MDQ6VXNlcjQ2MzczNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/463737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrv", "html_url": "https://github.com/vrv", "followers_url": "https://api.github.com/users/vrv/followers", "following_url": "https://api.github.com/users/vrv/following{/other_user}", "gists_url": "https://api.github.com/users/vrv/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrv/subscriptions", "organizations_url": "https://api.github.com/users/vrv/orgs", "repos_url": "https://api.github.com/users/vrv/repos", "events_url": "https://api.github.com/users/vrv/events{/privacy}", "received_events_url": "https://api.github.com/users/vrv/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-28T16:42:30Z", "updated_at": "2018-08-28T16:42:56Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Try: <a href=\"https://www.tensorflow.org/api_docs/python/tf/image/grayscale_to_rgb\" rel=\"nofollow\">https://www.tensorflow.org/api_docs/python/tf/image/grayscale_to_rgb</a></p>\n<p>If your BMP is 1 channel, then you need an API like that to convert it.</p>\n<p>Something I've done in the past is to conditionally convert the image to 3 channels by using that API if the output is 1 channel, as a post-processing step.</p>\n<pre><code>image = tf.cond(tf.shape(image)[2] == 1, lambda: tf.image.grayscale_to_rgb(image), lambda: image)\n</code></pre>", "body_text": "Try: https://www.tensorflow.org/api_docs/python/tf/image/grayscale_to_rgb\nIf your BMP is 1 channel, then you need an API like that to convert it.\nSomething I've done in the past is to conditionally convert the image to 3 channels by using that API if the output is 1 channel, as a post-processing step.\nimage = tf.cond(tf.shape(image)[2] == 1, lambda: tf.image.grayscale_to_rgb(image), lambda: image)", "body": "Try: https://www.tensorflow.org/api_docs/python/tf/image/grayscale_to_rgb\r\n\r\nIf your BMP is 1 channel, then you need an API like that to convert it.  \r\n\r\nSomething I've done in the past is to conditionally convert the image to 3 channels by using that API if the output is 1 channel, as a post-processing step.\r\n\r\n    image = tf.cond(tf.shape(image)[2] == 1, lambda: tf.image.grayscale_to_rgb(image), lambda: image)"}