{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/223827671", "html_url": "https://github.com/tensorflow/tensorflow/issues/208#issuecomment-223827671", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/208", "id": 223827671, "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzgyNzY3MQ==", "user": {"login": "rdipietro", "id": 5150559, "node_id": "MDQ6VXNlcjUxNTA1NTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5150559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdipietro", "html_url": "https://github.com/rdipietro", "followers_url": "https://api.github.com/users/rdipietro/followers", "following_url": "https://api.github.com/users/rdipietro/following{/other_user}", "gists_url": "https://api.github.com/users/rdipietro/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdipietro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdipietro/subscriptions", "organizations_url": "https://api.github.com/users/rdipietro/orgs", "repos_url": "https://api.github.com/users/rdipietro/repos", "events_url": "https://api.github.com/users/rdipietro/events{/privacy}", "received_events_url": "https://api.github.com/users/rdipietro/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-05T18:05:56Z", "updated_at": "2016-06-05T18:05:56Z", "author_association": "CONTRIBUTOR", "body_html": "<p>You can see <a href=\"https://github.com/rdipietro/miccai-2016-surgical-activity-rec/blob/master/train_and_eval.ipynb\">here</a> for a more complex example, with a batch size &gt; 1. But you'll need to either a) write not-so-clean code that's efficient (as they do in TensorFlow officially) or b) write clean code that is less efficient (this is what I do; I just wrap shorter sequences in time until all sequences are the same length, which simultaneously makes short sequences \"count\" just as much loss wise as long sequences).</p>", "body_text": "You can see here for a more complex example, with a batch size > 1. But you'll need to either a) write not-so-clean code that's efficient (as they do in TensorFlow officially) or b) write clean code that is less efficient (this is what I do; I just wrap shorter sequences in time until all sequences are the same length, which simultaneously makes short sequences \"count\" just as much loss wise as long sequences).", "body": "You can see [here](https://github.com/rdipietro/miccai-2016-surgical-activity-rec/blob/master/train_and_eval.ipynb) for a more complex example, with a batch size > 1. But you'll need to either a) write not-so-clean code that's efficient (as they do in TensorFlow officially) or b) write clean code that is less efficient (this is what I do; I just wrap shorter sequences in time until all sequences are the same length, which simultaneously makes short sequences \"count\" just as much loss wise as long sequences).\n"}