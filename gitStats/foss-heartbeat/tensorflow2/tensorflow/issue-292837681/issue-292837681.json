{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16588", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16588/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16588/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16588/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16588", "id": 292837681, "node_id": "MDU6SXNzdWUyOTI4Mzc2ODE=", "number": 16588, "title": "IllegalArgumentException: Retval[0] does not have value", "user": {"login": "rimidalv", "id": 1157911, "node_id": "MDQ6VXNlcjExNTc5MTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1157911?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rimidalv", "html_url": "https://github.com/rimidalv", "followers_url": "https://api.github.com/users/rimidalv/followers", "following_url": "https://api.github.com/users/rimidalv/following{/other_user}", "gists_url": "https://api.github.com/users/rimidalv/gists{/gist_id}", "starred_url": "https://api.github.com/users/rimidalv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rimidalv/subscriptions", "organizations_url": "https://api.github.com/users/rimidalv/orgs", "repos_url": "https://api.github.com/users/rimidalv/repos", "events_url": "https://api.github.com/users/rimidalv/events{/privacy}", "received_events_url": "https://api.github.com/users/rimidalv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "andrewharp", "id": 3376817, "node_id": "MDQ6VXNlcjMzNzY4MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3376817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewharp", "html_url": "https://github.com/andrewharp", "followers_url": "https://api.github.com/users/andrewharp/followers", "following_url": "https://api.github.com/users/andrewharp/following{/other_user}", "gists_url": "https://api.github.com/users/andrewharp/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewharp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewharp/subscriptions", "organizations_url": "https://api.github.com/users/andrewharp/orgs", "repos_url": "https://api.github.com/users/andrewharp/repos", "events_url": "https://api.github.com/users/andrewharp/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewharp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "andrewharp", "id": 3376817, "node_id": "MDQ6VXNlcjMzNzY4MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3376817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewharp", "html_url": "https://github.com/andrewharp", "followers_url": "https://api.github.com/users/andrewharp/followers", "following_url": "https://api.github.com/users/andrewharp/following{/other_user}", "gists_url": "https://api.github.com/users/andrewharp/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewharp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewharp/subscriptions", "organizations_url": "https://api.github.com/users/andrewharp/orgs", "repos_url": "https://api.github.com/users/andrewharp/repos", "events_url": "https://api.github.com/users/andrewharp/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewharp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-01-30T16:00:53Z", "updated_at": "2018-02-06T13:11:39Z", "closed_at": "2018-02-06T13:11:39Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li>\n<p><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</p>\n</li>\n<li>\n<p><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: iMac (27-inch, Late 2013) OS: 10.13.3 (17D47)</p>\n</li>\n<li>\n<p><strong>TensorFlow installed from (source or binary)</strong>: Source</p>\n</li>\n<li>\n<p><strong>TensorFlow version (use command below)</strong>:  Using TensorFlow backend.<br>\n1.5.0-rc1</p>\n</li>\n<li>\n<p><strong>Python version</strong>: Python 3.6.4</p>\n</li>\n<li>\n<p><strong>Bazel version (if compiling from source)</strong>:<br>\nBuild label: 0.9.0-homebrew<br>\nBuild target: bazel-out/darwin-opt/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar<br>\nBuild time: Sun Jul 12 12:24:01 +49936 (1513677414241)<br>\nBuild timestamp: 1513677414241<br>\nBuild timestamp as int: 1513677414241</p>\n</li>\n<li>\n<p><strong>GCC/Compiler version (if compiling from source)</strong>: Xcode 9.2<br>\nBuild version 9C40b</p>\n</li>\n<li>\n<p><strong>CUDA/cuDNN version</strong>: No (CPU only)</p>\n</li>\n<li>\n<p><strong>GPU model and memory</strong>: No</p>\n</li>\n<li>\n<p><strong>Exact command to reproduce</strong>:</p>\n</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Describe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.</p>\n<p>if I add GRU or LSTM to my code and try to export this model to Android I have got the exception:</p>\n<pre><code>Successfully loaded model from 'file:///android_asset/frozen_opt.pb'\n01-30 07:45:35.424 25635-25635/ru.rimidalv.tensorflow I/TensorFlowImageClassif: Read 24 labels, output layer size is 32\n01-30 07:45:35.424 25635-25635/ru.rimidalv.tensorflow I/tensorflow: ClassifierActivity: Camera orientation relative to screen canvas: 90\n01-30 07:45:35.424 25635-25635/ru.rimidalv.tensorflow I/tensorflow: ClassifierActivity: Initializing at size 640x480\n01-30 07:45:35.424 25635-25635/ru.rimidalv.tensorflow E/art: No implementation found for void ru.rimidalv.tensorflow.env.ImageUtils.convertYUV420SPToARGB8888(byte[], int[], int, int, boolean) (tried Java_ru_rimidalv_tensorflow_env_ImageUtils_convertYUV420SPToARGB8888 and Java_ru_rimidalv_tensorflow_env_ImageUtils_convertYUV420SPToARGB8888___3B_3IIIZ)\n01-30 07:45:35.424 25635-25635/ru.rimidalv.tensorflow W/tensorflow: ImageUtils: Native YUV420SP -&gt; RGB implementation not found, falling back to Java implementation\n01-30 07:45:35.714 25635-25666/ru.rimidalv.tensorflow E/TensorFlowInferenceInterface: Failed to run TensorFlow inference with inputs:[the_input], outputs:[softmax/truediv]\n01-30 07:45:35.714 25635-25666/ru.rimidalv.tensorflow E/AndroidRuntime: FATAL EXCEPTION: inference\n                                                                        Process: ru.rimidalv.tensorflow, PID: 25635\n                                                                        java.lang.IllegalArgumentException: Retval[0] does not have value\n                                                                            at org.tensorflow.Session.run(Native Method)\n                                                                            at org.tensorflow.Session.access$100(Session.java:48)\n                                                                            at org.tensorflow.Session$Runner.runHelper(Session.java:298)\n                                                                            at org.tensorflow.Session$Runner.run(Session.java:248)\n                                                                            at org.tensorflow.contrib.android.TensorFlowInferenceInterface.run(TensorFlowInferenceInterface.java:230)\n                                                                            at org.tensorflow.contrib.android.TensorFlowInferenceInterface.run(TensorFlowInferenceInterface.java:197)\n                                                                            at ru.rimidalv.tensorflow.TensorFlowImageClassifier.recognizeImage(TensorFlowImageClassifier.java:171)\n                                                                            at ru.rimidalv.tensorflow.ClassifierActivity$2.run(ClassifierActivity.java:175)\n                                                                            at android.os.Handler.handleCallback(Handler.java:739)\n                                                                            at android.os.Handler.dispatchMessage(Handler.java:95)\n                                                                            at android.os.Looper.loop(Looper.java:158)\n                                                                            at android.os.HandlerThread.run(HandlerThread.java:61)\n</code></pre>\n<p>code to export my model:</p>\n<pre><code>bazel build tensorflow/python/tools:freeze_graph\nbazel-bin/tensorflow/python/tools/freeze_graph \\\n--input_graph=$PB_MAIN/protobuf_path.pbtxt \\\n--input_checkpoint=$PB_MAIN/checkpoint_path.ckpt \\\n--output_graph=$PB_MAIN/frozen_graph.pb \\\n--output_node_names=softmax/truediv \\\n</code></pre>\n<p>and than</p>\n<pre><code>!bazel build tensorflow/tools/graph_transforms:transform_graph\n!bazel-bin/tensorflow/tools/graph_transforms/transform_graph \\\n--in_graph=$PB_MAIN/frozen_graph.pb \\\n--out_graph=$PB_MAIN/frozen_opt.pb \\\n--inputs='the_input:0' \\\n--outputs='softmax/truediv:0' \\\n--transforms='add_default_attributes strip_unused_nodes(type=float, shape=\"-1,128,64,1\") remove_nodes(op=Identity, op=CheckNumerics) fold_constants(ignore_errors=true) fold_batch_norms fold_old_batch_norms quantize_nodes round_weights strip_unused_nodes sort_by_execution_order'\n</code></pre>\n<h3>Source code / logs</h3>\n<p>My model:</p>\n<div class=\"highlight highlight-source-python\"><pre>    input_shape <span class=\"pl-k\">=</span> (<span class=\"pl-c1\">128</span>, <span class=\"pl-c1\">64</span>, <span class=\"pl-c1\">1</span>)\n    latent_dim <span class=\"pl-k\">=</span> <span class=\"pl-c1\">128</span>\n    decoder_inputs <span class=\"pl-k\">=</span> Input(<span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(input_shape), <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>the_input<span class=\"pl-pds\">'</span></span>)\n    conv_to_rnn_dims <span class=\"pl-k\">=</span> (<span class=\"pl-c1\">32</span>, <span class=\"pl-c1\">128</span><span class=\"pl-k\">*</span><span class=\"pl-c1\">2</span> )\n    inner <span class=\"pl-k\">=</span> Reshape(<span class=\"pl-v\">target_shape</span><span class=\"pl-k\">=</span>conv_to_rnn_dims, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>reshape<span class=\"pl-pds\">'</span></span>)(decoder_inputs)\n    inner <span class=\"pl-k\">=</span> GRU(latent_dim, <span class=\"pl-v\">return_sequences</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>, <span class=\"pl-v\">kernel_initializer</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>he_normal<span class=\"pl-pds\">'</span></span>)(inner)\n    decoder_dense <span class=\"pl-k\">=</span> Dense(<span class=\"pl-c1\">10</span>, <span class=\"pl-v\">activation</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>softmax<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>softmax<span class=\"pl-pds\">\"</span></span>)(inner)\n    model <span class=\"pl-k\">=</span> Model(<span class=\"pl-v\">inputs</span><span class=\"pl-k\">=</span>[decoder_inputs], <span class=\"pl-v\">outputs</span><span class=\"pl-k\">=</span>decoder_dense)\n    model.compile(<span class=\"pl-v\">loss</span><span class=\"pl-k\">=</span>{<span class=\"pl-s\"><span class=\"pl-pds\">'</span>softmax<span class=\"pl-pds\">'</span></span>: <span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">y_true</span>, <span class=\"pl-smi\">y_pred</span>: y_pred}, <span class=\"pl-v\">optimizer</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>adam<span class=\"pl-pds\">\"</span></span>)</pre></div>\n<p>Save the model:</p>\n<div class=\"highlight highlight-source-python\"><pre>    K.set_learning_phase(<span class=\"pl-c1\">0</span>)\n    model <span class=\"pl-k\">=</span> load_model(os.path.join(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>model_data<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>model.h5<span class=\"pl-pds\">'</span></span>), <span class=\"pl-v\">compile</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>)\n    model.load_weights(os.path.join(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>model_data<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>weights00.h5<span class=\"pl-pds\">'</span></span>))\n    sess <span class=\"pl-k\">=</span> K.get_session()\n   \n    protobuf_path <span class=\"pl-k\">=</span> os.path.join(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>tf-exports<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>protobuf_path.pbtxt<span class=\"pl-pds\">'</span></span>)\n    checkpoint_path <span class=\"pl-k\">=</span> os.path.join(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>tf-exports<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>checkpoint_path.ckpt<span class=\"pl-pds\">'</span></span>)\n\n    tf.train.write_graph(sess.graph_def, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>.<span class=\"pl-pds\">'</span></span>, protobuf_path)\n\n    saver <span class=\"pl-k\">=</span> tf.train.Saver()\n    saver.save(sess, <span class=\"pl-v\">save_path</span> <span class=\"pl-k\">=</span> checkpoint_path)\n</pre></div>", "body_text": "System information\n\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\n\n\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): iMac (27-inch, Late 2013) OS: 10.13.3 (17D47)\n\n\nTensorFlow installed from (source or binary): Source\n\n\nTensorFlow version (use command below):  Using TensorFlow backend.\n1.5.0-rc1\n\n\nPython version: Python 3.6.4\n\n\nBazel version (if compiling from source):\nBuild label: 0.9.0-homebrew\nBuild target: bazel-out/darwin-opt/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\nBuild time: Sun Jul 12 12:24:01 +49936 (1513677414241)\nBuild timestamp: 1513677414241\nBuild timestamp as int: 1513677414241\n\n\nGCC/Compiler version (if compiling from source): Xcode 9.2\nBuild version 9C40b\n\n\nCUDA/cuDNN version: No (CPU only)\n\n\nGPU model and memory: No\n\n\nExact command to reproduce:\n\n\nDescribe the problem\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\nif I add GRU or LSTM to my code and try to export this model to Android I have got the exception:\nSuccessfully loaded model from 'file:///android_asset/frozen_opt.pb'\n01-30 07:45:35.424 25635-25635/ru.rimidalv.tensorflow I/TensorFlowImageClassif: Read 24 labels, output layer size is 32\n01-30 07:45:35.424 25635-25635/ru.rimidalv.tensorflow I/tensorflow: ClassifierActivity: Camera orientation relative to screen canvas: 90\n01-30 07:45:35.424 25635-25635/ru.rimidalv.tensorflow I/tensorflow: ClassifierActivity: Initializing at size 640x480\n01-30 07:45:35.424 25635-25635/ru.rimidalv.tensorflow E/art: No implementation found for void ru.rimidalv.tensorflow.env.ImageUtils.convertYUV420SPToARGB8888(byte[], int[], int, int, boolean) (tried Java_ru_rimidalv_tensorflow_env_ImageUtils_convertYUV420SPToARGB8888 and Java_ru_rimidalv_tensorflow_env_ImageUtils_convertYUV420SPToARGB8888___3B_3IIIZ)\n01-30 07:45:35.424 25635-25635/ru.rimidalv.tensorflow W/tensorflow: ImageUtils: Native YUV420SP -> RGB implementation not found, falling back to Java implementation\n01-30 07:45:35.714 25635-25666/ru.rimidalv.tensorflow E/TensorFlowInferenceInterface: Failed to run TensorFlow inference with inputs:[the_input], outputs:[softmax/truediv]\n01-30 07:45:35.714 25635-25666/ru.rimidalv.tensorflow E/AndroidRuntime: FATAL EXCEPTION: inference\n                                                                        Process: ru.rimidalv.tensorflow, PID: 25635\n                                                                        java.lang.IllegalArgumentException: Retval[0] does not have value\n                                                                            at org.tensorflow.Session.run(Native Method)\n                                                                            at org.tensorflow.Session.access$100(Session.java:48)\n                                                                            at org.tensorflow.Session$Runner.runHelper(Session.java:298)\n                                                                            at org.tensorflow.Session$Runner.run(Session.java:248)\n                                                                            at org.tensorflow.contrib.android.TensorFlowInferenceInterface.run(TensorFlowInferenceInterface.java:230)\n                                                                            at org.tensorflow.contrib.android.TensorFlowInferenceInterface.run(TensorFlowInferenceInterface.java:197)\n                                                                            at ru.rimidalv.tensorflow.TensorFlowImageClassifier.recognizeImage(TensorFlowImageClassifier.java:171)\n                                                                            at ru.rimidalv.tensorflow.ClassifierActivity$2.run(ClassifierActivity.java:175)\n                                                                            at android.os.Handler.handleCallback(Handler.java:739)\n                                                                            at android.os.Handler.dispatchMessage(Handler.java:95)\n                                                                            at android.os.Looper.loop(Looper.java:158)\n                                                                            at android.os.HandlerThread.run(HandlerThread.java:61)\n\ncode to export my model:\nbazel build tensorflow/python/tools:freeze_graph\nbazel-bin/tensorflow/python/tools/freeze_graph \\\n--input_graph=$PB_MAIN/protobuf_path.pbtxt \\\n--input_checkpoint=$PB_MAIN/checkpoint_path.ckpt \\\n--output_graph=$PB_MAIN/frozen_graph.pb \\\n--output_node_names=softmax/truediv \\\n\nand than\n!bazel build tensorflow/tools/graph_transforms:transform_graph\n!bazel-bin/tensorflow/tools/graph_transforms/transform_graph \\\n--in_graph=$PB_MAIN/frozen_graph.pb \\\n--out_graph=$PB_MAIN/frozen_opt.pb \\\n--inputs='the_input:0' \\\n--outputs='softmax/truediv:0' \\\n--transforms='add_default_attributes strip_unused_nodes(type=float, shape=\"-1,128,64,1\") remove_nodes(op=Identity, op=CheckNumerics) fold_constants(ignore_errors=true) fold_batch_norms fold_old_batch_norms quantize_nodes round_weights strip_unused_nodes sort_by_execution_order'\n\nSource code / logs\nMy model:\n    input_shape = (128, 64, 1)\n    latent_dim = 128\n    decoder_inputs = Input(shape=(input_shape), name='the_input')\n    conv_to_rnn_dims = (32, 128*2 )\n    inner = Reshape(target_shape=conv_to_rnn_dims, name='reshape')(decoder_inputs)\n    inner = GRU(latent_dim, return_sequences=True, kernel_initializer='he_normal')(inner)\n    decoder_dense = Dense(10, activation='softmax', name=\"softmax\")(inner)\n    model = Model(inputs=[decoder_inputs], outputs=decoder_dense)\n    model.compile(loss={'softmax': lambda y_true, y_pred: y_pred}, optimizer=\"adam\")\nSave the model:\n    K.set_learning_phase(0)\n    model = load_model(os.path.join('model_data', 'model.h5'), compile=False)\n    model.load_weights(os.path.join('model_data', 'weights00.h5'))\n    sess = K.get_session()\n   \n    protobuf_path = os.path.join('tf-exports', 'protobuf_path.pbtxt')\n    checkpoint_path = os.path.join('tf-exports', 'checkpoint_path.ckpt')\n\n    tf.train.write_graph(sess.graph_def, '.', protobuf_path)\n\n    saver = tf.train.Saver()\n    saver.save(sess, save_path = checkpoint_path)", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: iMac (27-inch, Late 2013) OS: 10.13.3 (17D47)\r\n- **TensorFlow installed from (source or binary)**: Source\r\n- **TensorFlow version (use command below)**:  Using TensorFlow backend.\r\n1.5.0-rc1\r\n- **Python version**: Python 3.6.4\r\n- **Bazel version (if compiling from source)**: \r\nBuild label: 0.9.0-homebrew\r\nBuild target: bazel-out/darwin-opt/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\r\nBuild time: Sun Jul 12 12:24:01 +49936 (1513677414241)\r\nBuild timestamp: 1513677414241\r\nBuild timestamp as int: 1513677414241\r\n\r\n- **GCC/Compiler version (if compiling from source)**: Xcode 9.2\r\nBuild version 9C40b\r\n- **CUDA/cuDNN version**: No (CPU only)\r\n- **GPU model and memory**: No\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\r\n\r\nif I add GRU or LSTM to my code and try to export this model to Android I have got the exception:\r\n```\r\nSuccessfully loaded model from 'file:///android_asset/frozen_opt.pb'\r\n01-30 07:45:35.424 25635-25635/ru.rimidalv.tensorflow I/TensorFlowImageClassif: Read 24 labels, output layer size is 32\r\n01-30 07:45:35.424 25635-25635/ru.rimidalv.tensorflow I/tensorflow: ClassifierActivity: Camera orientation relative to screen canvas: 90\r\n01-30 07:45:35.424 25635-25635/ru.rimidalv.tensorflow I/tensorflow: ClassifierActivity: Initializing at size 640x480\r\n01-30 07:45:35.424 25635-25635/ru.rimidalv.tensorflow E/art: No implementation found for void ru.rimidalv.tensorflow.env.ImageUtils.convertYUV420SPToARGB8888(byte[], int[], int, int, boolean) (tried Java_ru_rimidalv_tensorflow_env_ImageUtils_convertYUV420SPToARGB8888 and Java_ru_rimidalv_tensorflow_env_ImageUtils_convertYUV420SPToARGB8888___3B_3IIIZ)\r\n01-30 07:45:35.424 25635-25635/ru.rimidalv.tensorflow W/tensorflow: ImageUtils: Native YUV420SP -> RGB implementation not found, falling back to Java implementation\r\n01-30 07:45:35.714 25635-25666/ru.rimidalv.tensorflow E/TensorFlowInferenceInterface: Failed to run TensorFlow inference with inputs:[the_input], outputs:[softmax/truediv]\r\n01-30 07:45:35.714 25635-25666/ru.rimidalv.tensorflow E/AndroidRuntime: FATAL EXCEPTION: inference\r\n                                                                        Process: ru.rimidalv.tensorflow, PID: 25635\r\n                                                                        java.lang.IllegalArgumentException: Retval[0] does not have value\r\n                                                                            at org.tensorflow.Session.run(Native Method)\r\n                                                                            at org.tensorflow.Session.access$100(Session.java:48)\r\n                                                                            at org.tensorflow.Session$Runner.runHelper(Session.java:298)\r\n                                                                            at org.tensorflow.Session$Runner.run(Session.java:248)\r\n                                                                            at org.tensorflow.contrib.android.TensorFlowInferenceInterface.run(TensorFlowInferenceInterface.java:230)\r\n                                                                            at org.tensorflow.contrib.android.TensorFlowInferenceInterface.run(TensorFlowInferenceInterface.java:197)\r\n                                                                            at ru.rimidalv.tensorflow.TensorFlowImageClassifier.recognizeImage(TensorFlowImageClassifier.java:171)\r\n                                                                            at ru.rimidalv.tensorflow.ClassifierActivity$2.run(ClassifierActivity.java:175)\r\n                                                                            at android.os.Handler.handleCallback(Handler.java:739)\r\n                                                                            at android.os.Handler.dispatchMessage(Handler.java:95)\r\n                                                                            at android.os.Looper.loop(Looper.java:158)\r\n                                                                            at android.os.HandlerThread.run(HandlerThread.java:61)\r\n```\r\n\r\ncode to export my model:\r\n\r\n```\r\nbazel build tensorflow/python/tools:freeze_graph\r\nbazel-bin/tensorflow/python/tools/freeze_graph \\\r\n--input_graph=$PB_MAIN/protobuf_path.pbtxt \\\r\n--input_checkpoint=$PB_MAIN/checkpoint_path.ckpt \\\r\n--output_graph=$PB_MAIN/frozen_graph.pb \\\r\n--output_node_names=softmax/truediv \\\r\n```\r\nand than\r\n\r\n```\r\n!bazel build tensorflow/tools/graph_transforms:transform_graph\r\n!bazel-bin/tensorflow/tools/graph_transforms/transform_graph \\\r\n--in_graph=$PB_MAIN/frozen_graph.pb \\\r\n--out_graph=$PB_MAIN/frozen_opt.pb \\\r\n--inputs='the_input:0' \\\r\n--outputs='softmax/truediv:0' \\\r\n--transforms='add_default_attributes strip_unused_nodes(type=float, shape=\"-1,128,64,1\") remove_nodes(op=Identity, op=CheckNumerics) fold_constants(ignore_errors=true) fold_batch_norms fold_old_batch_norms quantize_nodes round_weights strip_unused_nodes sort_by_execution_order'\r\n```\r\n\r\n\r\n### Source code / logs\r\nMy model:\r\n\r\n```python\r\n    input_shape = (128, 64, 1)\r\n    latent_dim = 128\r\n    decoder_inputs = Input(shape=(input_shape), name='the_input')\r\n    conv_to_rnn_dims = (32, 128*2 )\r\n    inner = Reshape(target_shape=conv_to_rnn_dims, name='reshape')(decoder_inputs)\r\n    inner = GRU(latent_dim, return_sequences=True, kernel_initializer='he_normal')(inner)\r\n    decoder_dense = Dense(10, activation='softmax', name=\"softmax\")(inner)\r\n    model = Model(inputs=[decoder_inputs], outputs=decoder_dense)\r\n    model.compile(loss={'softmax': lambda y_true, y_pred: y_pred}, optimizer=\"adam\")\r\n```\r\n\r\nSave the model:\r\n\r\n```python\r\n\r\n    K.set_learning_phase(0)\r\n    model = load_model(os.path.join('model_data', 'model.h5'), compile=False)\r\n    model.load_weights(os.path.join('model_data', 'weights00.h5'))\r\n    sess = K.get_session()\r\n   \r\n    protobuf_path = os.path.join('tf-exports', 'protobuf_path.pbtxt')\r\n    checkpoint_path = os.path.join('tf-exports', 'checkpoint_path.ckpt')\r\n\r\n    tf.train.write_graph(sess.graph_def, '.', protobuf_path)\r\n\r\n    saver = tf.train.Saver()\r\n    saver.save(sess, save_path = checkpoint_path)\r\n\r\n```\r\n"}