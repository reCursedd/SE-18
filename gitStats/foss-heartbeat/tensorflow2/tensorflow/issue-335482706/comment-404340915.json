{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/404340915", "html_url": "https://github.com/tensorflow/tensorflow/issues/20280#issuecomment-404340915", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20280", "id": 404340915, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDM0MDkxNQ==", "user": {"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-11T23:24:08Z", "updated_at": "2018-07-11T23:24:08Z", "author_association": "MEMBER", "body_html": "<p>This would be an opportunity to create two packages: tensorflow-core, which only installs tensorflow (and which may in fact result in some tensorflow python endpoints not working) and tensorflow (which is a virtual package that has dependencies on tensorflow-core and tensorboard. In the future, we may split tensorflow-core into more packages.</p>\n<p>I am not fundamentally opposed to this, but</p>\n<ul>\n<li>there haven't been terribly compelling reasons (beyond uninstalling after installing, there are other <a href=\"https://stackoverflow.com/questions/33441033/pip-install-to-custom-target-directory-and-exclude-specific-dependencies\" rel=\"nofollow\">ugly methods</a> to exclude dependencies during installation)</li>\n<li>some functionality in TensorFlow does depend on TensorBoard. All of the imports are guarded and should not lead to defects beyond the actual things that won't work, but we'd like to distribute a fully functional version. This can be fixed/minimized further.</li>\n</ul>\n<p>Most importantly though, I am hesitant to offer another package that people will come to depend on for a fixed set of functionality. For example, I wouldn't want people to get used to tensorflow-core coming with Estimators. We're in the process of separating tf.estimator into its own package. In the future, more such splits may happen (kernel libraries, ops libraries), and I think the exact dependency tree of all those packages needs to be an implementation detail. Maybe that's ok by calling them tensorflow_private_seekrit_kernels_do_not_depend_directly_on_this, but I think depending directly on this is exactly what you want to do.</p>\n<p>I think a tensorflow-server-only package which only contains what you need to run a tensorflow server is really what you want? As in, none of the Python API either?</p>", "body_text": "This would be an opportunity to create two packages: tensorflow-core, which only installs tensorflow (and which may in fact result in some tensorflow python endpoints not working) and tensorflow (which is a virtual package that has dependencies on tensorflow-core and tensorboard. In the future, we may split tensorflow-core into more packages.\nI am not fundamentally opposed to this, but\n\nthere haven't been terribly compelling reasons (beyond uninstalling after installing, there are other ugly methods to exclude dependencies during installation)\nsome functionality in TensorFlow does depend on TensorBoard. All of the imports are guarded and should not lead to defects beyond the actual things that won't work, but we'd like to distribute a fully functional version. This can be fixed/minimized further.\n\nMost importantly though, I am hesitant to offer another package that people will come to depend on for a fixed set of functionality. For example, I wouldn't want people to get used to tensorflow-core coming with Estimators. We're in the process of separating tf.estimator into its own package. In the future, more such splits may happen (kernel libraries, ops libraries), and I think the exact dependency tree of all those packages needs to be an implementation detail. Maybe that's ok by calling them tensorflow_private_seekrit_kernels_do_not_depend_directly_on_this, but I think depending directly on this is exactly what you want to do.\nI think a tensorflow-server-only package which only contains what you need to run a tensorflow server is really what you want? As in, none of the Python API either?", "body": "This would be an opportunity to create two packages: tensorflow-core, which only installs tensorflow (and which may in fact result in some tensorflow python endpoints not working) and tensorflow (which is a virtual package that has dependencies on tensorflow-core and tensorboard. In the future, we may split tensorflow-core into more packages.\r\n\r\nI am not fundamentally opposed to this, but \r\n\r\n* there haven't been terribly compelling reasons (beyond uninstalling after installing, there are other [ugly methods](https://stackoverflow.com/questions/33441033/pip-install-to-custom-target-directory-and-exclude-specific-dependencies) to exclude dependencies during installation)\r\n* some functionality in TensorFlow does depend on TensorBoard. All of the imports are guarded and should not lead to defects beyond the actual things that won't work, but we'd like to distribute a fully functional version. This can be fixed/minimized further.\r\n\r\nMost importantly though, I am hesitant to offer another package that people will come to depend on for a fixed set of functionality. For example, I wouldn't want people to get used to tensorflow-core coming with Estimators. We're in the process of separating tf.estimator into its own package. In the future, more such splits may happen (kernel libraries, ops libraries), and I think the exact dependency tree of all those packages needs to be an implementation detail. Maybe that's ok by calling them tensorflow_private_seekrit_kernels_do_not_depend_directly_on_this, but I think depending directly on this is exactly what you want to do.\r\n\r\nI think a tensorflow-server-only package which only contains what you need to run a tensorflow server is really what you want? As in, none of the Python API either?"}