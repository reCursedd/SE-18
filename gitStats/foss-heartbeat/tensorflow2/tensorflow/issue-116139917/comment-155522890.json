{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/155522890", "html_url": "https://github.com/tensorflow/tensorflow/issues/97#issuecomment-155522890", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/97", "id": 155522890, "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTUyMjg5MA==", "user": {"login": "vkuznet", "id": 125138, "node_id": "MDQ6VXNlcjEyNTEzOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/125138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vkuznet", "html_url": "https://github.com/vkuznet", "followers_url": "https://api.github.com/users/vkuznet/followers", "following_url": "https://api.github.com/users/vkuznet/following{/other_user}", "gists_url": "https://api.github.com/users/vkuznet/gists{/gist_id}", "starred_url": "https://api.github.com/users/vkuznet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vkuznet/subscriptions", "organizations_url": "https://api.github.com/users/vkuznet/orgs", "repos_url": "https://api.github.com/users/vkuznet/repos", "events_url": "https://api.github.com/users/vkuznet/events{/privacy}", "received_events_url": "https://api.github.com/users/vkuznet/received_events", "type": "User", "site_admin": false}, "created_at": "2015-11-10T18:27:24Z", "updated_at": "2015-11-10T18:27:24Z", "author_association": "NONE", "body_html": "<p>Thanks, this works if I pass session to eval too.<br>\nHere is working example for those who are interested:</p>\n<pre><code>import input_data\nimport tensorflow as tf\nmnist = input_data.read_data_sets('MNIST_data', one_hot=True)\nx = tf.placeholder(\"float\", shape=[None, 784])\nW = tf.Variable(tf.zeros([784,10]))\nb = tf.Variable(tf.zeros([10]))\ny = tf.nn.softmax(tf.matmul(x,W) + b)\ny_ = tf.placeholder(\"float\", shape=[None, 10])\ncross_entropy = -tf.reduce_sum(y_*tf.log(y))\ntrain_step = tf.train.GradientDescentOptimizer(0.01).minimize(cross_entropy)\n# train data and get results for batches\ninit = tf.initialize_all_variables()\nsess = tf.Session()\nsess.run(init)\n# train the data\nfor i in range(10):\n    batch_xs, batch_ys = mnist.train.next_batch(100)\n    sess.run(train_step, feed_dict={x: batch_xs, y_: batch_ys})\ncorrect_prediction = tf.equal(tf.argmax(y,1), tf.argmax(y_,1))\naccuracy = tf.reduce_mean(tf.cast(correct_prediction, \"float\"))\nprint \"accuracy\", sess.run(accuracy, feed_dict={x: mnist.test.images, y_: mnist.test.labels})\nprediction=tf.argmax(y,1)\nprint \"predictions\", prediction.eval(feed_dict={x: mnist.test.images}, session=sess)\n</code></pre>\n<p>On  0, pannous <a href=\"mailto:notifications@github.com\">notifications@github.com</a> wrote:</p>\n<blockquote>\n<p>the array of numbers is returned by eval / run method:</p>\n<pre><code>prediction=tf.argmax(y,1)\nprint prediction.eval(feed_dict={x: mnist.test.images})\n</code></pre>\n<hr>\n<p>Reply to this email directly or view it on GitHub:<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"116139917\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/97\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/97/hovercard?comment_id=155518360&amp;comment_type=issue_comment\" href=\"https://github.com/tensorflow/tensorflow/issues/97#issuecomment-155518360\">#97 (comment)</a></p>\n</blockquote>", "body_text": "Thanks, this works if I pass session to eval too.\nHere is working example for those who are interested:\nimport input_data\nimport tensorflow as tf\nmnist = input_data.read_data_sets('MNIST_data', one_hot=True)\nx = tf.placeholder(\"float\", shape=[None, 784])\nW = tf.Variable(tf.zeros([784,10]))\nb = tf.Variable(tf.zeros([10]))\ny = tf.nn.softmax(tf.matmul(x,W) + b)\ny_ = tf.placeholder(\"float\", shape=[None, 10])\ncross_entropy = -tf.reduce_sum(y_*tf.log(y))\ntrain_step = tf.train.GradientDescentOptimizer(0.01).minimize(cross_entropy)\n# train data and get results for batches\ninit = tf.initialize_all_variables()\nsess = tf.Session()\nsess.run(init)\n# train the data\nfor i in range(10):\n    batch_xs, batch_ys = mnist.train.next_batch(100)\n    sess.run(train_step, feed_dict={x: batch_xs, y_: batch_ys})\ncorrect_prediction = tf.equal(tf.argmax(y,1), tf.argmax(y_,1))\naccuracy = tf.reduce_mean(tf.cast(correct_prediction, \"float\"))\nprint \"accuracy\", sess.run(accuracy, feed_dict={x: mnist.test.images, y_: mnist.test.labels})\nprediction=tf.argmax(y,1)\nprint \"predictions\", prediction.eval(feed_dict={x: mnist.test.images}, session=sess)\n\nOn  0, pannous notifications@github.com wrote:\n\nthe array of numbers is returned by eval / run method:\nprediction=tf.argmax(y,1)\nprint prediction.eval(feed_dict={x: mnist.test.images})\n\n\nReply to this email directly or view it on GitHub:\n#97 (comment)", "body": "Thanks, this works if I pass session to eval too.\nHere is working example for those who are interested:\n\n```\nimport input_data\nimport tensorflow as tf\nmnist = input_data.read_data_sets('MNIST_data', one_hot=True)\nx = tf.placeholder(\"float\", shape=[None, 784])\nW = tf.Variable(tf.zeros([784,10]))\nb = tf.Variable(tf.zeros([10]))\ny = tf.nn.softmax(tf.matmul(x,W) + b)\ny_ = tf.placeholder(\"float\", shape=[None, 10])\ncross_entropy = -tf.reduce_sum(y_*tf.log(y))\ntrain_step = tf.train.GradientDescentOptimizer(0.01).minimize(cross_entropy)\n# train data and get results for batches\ninit = tf.initialize_all_variables()\nsess = tf.Session()\nsess.run(init)\n# train the data\nfor i in range(10):\n    batch_xs, batch_ys = mnist.train.next_batch(100)\n    sess.run(train_step, feed_dict={x: batch_xs, y_: batch_ys})\ncorrect_prediction = tf.equal(tf.argmax(y,1), tf.argmax(y_,1))\naccuracy = tf.reduce_mean(tf.cast(correct_prediction, \"float\"))\nprint \"accuracy\", sess.run(accuracy, feed_dict={x: mnist.test.images, y_: mnist.test.labels})\nprediction=tf.argmax(y,1)\nprint \"predictions\", prediction.eval(feed_dict={x: mnist.test.images}, session=sess)\n```\n\nOn  0, pannous notifications@github.com wrote:\n\n> the array of numbers is returned by eval / run method:\n> \n> ```\n> prediction=tf.argmax(y,1)\n> print prediction.eval(feed_dict={x: mnist.test.images})\n> ```\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/tensorflow/tensorflow/issues/97#issuecomment-155518360\n"}