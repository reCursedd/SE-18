{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/375215363", "html_url": "https://github.com/tensorflow/tensorflow/issues/13370#issuecomment-375215363", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13370", "id": 375215363, "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTIxNTM2Mw==", "user": {"login": "aforslow", "id": 17109848, "node_id": "MDQ6VXNlcjE3MTA5ODQ4", "avatar_url": "https://avatars1.githubusercontent.com/u/17109848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aforslow", "html_url": "https://github.com/aforslow", "followers_url": "https://api.github.com/users/aforslow/followers", "following_url": "https://api.github.com/users/aforslow/following{/other_user}", "gists_url": "https://api.github.com/users/aforslow/gists{/gist_id}", "starred_url": "https://api.github.com/users/aforslow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aforslow/subscriptions", "organizations_url": "https://api.github.com/users/aforslow/orgs", "repos_url": "https://api.github.com/users/aforslow/repos", "events_url": "https://api.github.com/users/aforslow/events{/privacy}", "received_events_url": "https://api.github.com/users/aforslow/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-22T08:24:29Z", "updated_at": "2018-03-22T08:24:29Z", "author_association": "NONE", "body_html": "<p>Any updates on this issue? I just stumbled upon this problem in tensorflow 1.6.0. It feels logical to allow for conditional labelling.</p>\n<p>My workaround now is, thanks to Lee-L-Boyd, to save the summaries in different collections in the conditional functions, i.e. <code>summary_lib.scalar(plot_name, val, collections=['train'])</code> and then use the <code>merged_summary = tf.summary.merge_all('train')</code> functionality. I suppose it is possible to create multiple merged summaries that collects from your conditional's collections. These could then be added to the same writer as different summaries. This is a workaround, however, and it would be a lot more logical to just provide functionality for conditional labelling.</p>", "body_text": "Any updates on this issue? I just stumbled upon this problem in tensorflow 1.6.0. It feels logical to allow for conditional labelling.\nMy workaround now is, thanks to Lee-L-Boyd, to save the summaries in different collections in the conditional functions, i.e. summary_lib.scalar(plot_name, val, collections=['train']) and then use the merged_summary = tf.summary.merge_all('train') functionality. I suppose it is possible to create multiple merged summaries that collects from your conditional's collections. These could then be added to the same writer as different summaries. This is a workaround, however, and it would be a lot more logical to just provide functionality for conditional labelling.", "body": "Any updates on this issue? I just stumbled upon this problem in tensorflow 1.6.0. It feels logical to allow for conditional labelling.\r\n\r\nMy workaround now is, thanks to Lee-L-Boyd, to save the summaries in different collections in the conditional functions, i.e. `summary_lib.scalar(plot_name, val, collections=['train'])` and then use the `merged_summary = tf.summary.merge_all('train')` functionality. I suppose it is possible to create multiple merged summaries that collects from your conditional's collections. These could then be added to the same writer as different summaries. This is a workaround, however, and it would be a lot more logical to just provide functionality for conditional labelling."}