{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/333188363", "html_url": "https://github.com/tensorflow/tensorflow/issues/13370#issuecomment-333188363", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13370", "id": 333188363, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzE4ODM2Mw==", "user": {"login": "Lee-L-Boyd", "id": 1906742, "node_id": "MDQ6VXNlcjE5MDY3NDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1906742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lee-L-Boyd", "html_url": "https://github.com/Lee-L-Boyd", "followers_url": "https://api.github.com/users/Lee-L-Boyd/followers", "following_url": "https://api.github.com/users/Lee-L-Boyd/following{/other_user}", "gists_url": "https://api.github.com/users/Lee-L-Boyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lee-L-Boyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lee-L-Boyd/subscriptions", "organizations_url": "https://api.github.com/users/Lee-L-Boyd/orgs", "repos_url": "https://api.github.com/users/Lee-L-Boyd/repos", "events_url": "https://api.github.com/users/Lee-L-Boyd/events{/privacy}", "received_events_url": "https://api.github.com/users/Lee-L-Boyd/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-29T17:30:24Z", "updated_at": "2017-09-29T17:30:37Z", "author_association": "NONE", "body_html": "<pre><code>Solved:\n    #For whatever reason don't try to instantiate the summary inside of the conditional\n</code></pre>\n<p>text_summary_1 = tf.summary.text(\"TRUE\", text)<br>\ntext_summary_2 = tf.summary.text(\"FALSE\", text)<br>\ntext_summary = tf.cond( rightness, lambda: text_summary_1, lambda: text_summary_2 )</p>", "body_text": "Solved:\n    #For whatever reason don't try to instantiate the summary inside of the conditional\n\ntext_summary_1 = tf.summary.text(\"TRUE\", text)\ntext_summary_2 = tf.summary.text(\"FALSE\", text)\ntext_summary = tf.cond( rightness, lambda: text_summary_1, lambda: text_summary_2 )", "body": "\tSolved:\r\n        #For whatever reason don't try to instantiate the summary inside of the conditional\r\ntext_summary_1 = tf.summary.text(\"TRUE\", text)\r\n\ttext_summary_2 = tf.summary.text(\"FALSE\", text)\r\n\ttext_summary = tf.cond( rightness, lambda: text_summary_1, lambda: text_summary_2 )"}