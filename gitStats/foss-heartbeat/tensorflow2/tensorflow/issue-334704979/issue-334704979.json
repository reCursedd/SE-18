{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20207", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20207/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20207/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20207/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/20207", "id": 334704979, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk2NjEwNDk1", "number": 20207, "title": "Build sqlite3 with json1 extension", "user": {"login": "TimZaman", "id": 7721540, "node_id": "MDQ6VXNlcjc3MjE1NDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7721540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimZaman", "html_url": "https://github.com/TimZaman", "followers_url": "https://api.github.com/users/TimZaman/followers", "following_url": "https://api.github.com/users/TimZaman/following{/other_user}", "gists_url": "https://api.github.com/users/TimZaman/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimZaman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimZaman/subscriptions", "organizations_url": "https://api.github.com/users/TimZaman/orgs", "repos_url": "https://api.github.com/users/TimZaman/repos", "events_url": "https://api.github.com/users/TimZaman/events{/privacy}", "received_events_url": "https://api.github.com/users/TimZaman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 419840263, "node_id": "MDU6TGFiZWw0MTk4NDAyNjM=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/awaiting%20testing%20(then%20merge)", "name": "awaiting testing (then merge)", "color": "c2e0c6", "default": false}, {"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "qlzh727", "id": 5118881, "node_id": "MDQ6VXNlcjUxMTg4ODE=", "avatar_url": "https://avatars3.githubusercontent.com/u/5118881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qlzh727", "html_url": "https://github.com/qlzh727", "followers_url": "https://api.github.com/users/qlzh727/followers", "following_url": "https://api.github.com/users/qlzh727/following{/other_user}", "gists_url": "https://api.github.com/users/qlzh727/gists{/gist_id}", "starred_url": "https://api.github.com/users/qlzh727/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qlzh727/subscriptions", "organizations_url": "https://api.github.com/users/qlzh727/orgs", "repos_url": "https://api.github.com/users/qlzh727/repos", "events_url": "https://api.github.com/users/qlzh727/events{/privacy}", "received_events_url": "https://api.github.com/users/qlzh727/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "qlzh727", "id": 5118881, "node_id": "MDQ6VXNlcjUxMTg4ODE=", "avatar_url": "https://avatars3.githubusercontent.com/u/5118881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qlzh727", "html_url": "https://github.com/qlzh727", "followers_url": "https://api.github.com/users/qlzh727/followers", "following_url": "https://api.github.com/users/qlzh727/following{/other_user}", "gists_url": "https://api.github.com/users/qlzh727/gists{/gist_id}", "starred_url": "https://api.github.com/users/qlzh727/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qlzh727/subscriptions", "organizations_url": "https://api.github.com/users/qlzh727/orgs", "repos_url": "https://api.github.com/users/qlzh727/repos", "events_url": "https://api.github.com/users/qlzh727/events{/privacy}", "received_events_url": "https://api.github.com/users/qlzh727/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-06-22T00:32:02Z", "updated_at": "2018-06-22T19:02:19Z", "closed_at": "2018-06-22T19:02:19Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/20207", "html_url": "https://github.com/tensorflow/tensorflow/pull/20207", "diff_url": "https://github.com/tensorflow/tensorflow/pull/20207.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/20207.patch"}, "body_html": "<p>Builds of SQLite by default often with with the <a href=\"https://www.sqlite.org/json1.html\" rel=\"nofollow\">builtin json1 Extension enabled</a>.</p>\n<p>E.g. the <code>libsqlite3-dev</code> enables this (as used in TF's CI!) or sqlite3 that comes with Python has this enabled.</p>\n<p>For TF, this impacts TF's <a href=\"https://www.tensorflow.org/api_docs/python/tf/contrib/data/SqlDataset\" rel=\"nofollow\">SqlDataset reader</a>:</p>\n<p>For example, if you have a field that contains a json-encoded list <code>[1,2,3]</code> or dictionary <code>{ 'foo': 'bar'}</code>, you can simply extract those f.e. in your SQL Query:</p>\n<div class=\"highlight highlight-source-sql\"><pre>json_extract(data, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>$.foo<span class=\"pl-pds\">'</span></span>)</pre></div>\n<p>I think this is very useful for cases where you have f.e. a variable list of classes <code>['car', 'boat']</code> or (a variable number of) coordinates (e.g. polygons, bounding boxes) and you want to save them in one encoded field: e.g. <code>\"[[0.0, 1.0, 2.0, 2.0], ..]\"</code></p>\n<p>The added code simply adds the flag to enable json1, and a test to make sure it works.</p>", "body_text": "Builds of SQLite by default often with with the builtin json1 Extension enabled.\nE.g. the libsqlite3-dev enables this (as used in TF's CI!) or sqlite3 that comes with Python has this enabled.\nFor TF, this impacts TF's SqlDataset reader:\nFor example, if you have a field that contains a json-encoded list [1,2,3] or dictionary { 'foo': 'bar'}, you can simply extract those f.e. in your SQL Query:\njson_extract(data, '$.foo')\nI think this is very useful for cases where you have f.e. a variable list of classes ['car', 'boat'] or (a variable number of) coordinates (e.g. polygons, bounding boxes) and you want to save them in one encoded field: e.g. \"[[0.0, 1.0, 2.0, 2.0], ..]\"\nThe added code simply adds the flag to enable json1, and a test to make sure it works.", "body": "Builds of SQLite by default often with with the [builtin json1 Extension enabled](https://www.sqlite.org/json1.html).\r\n\r\nE.g. the `libsqlite3-dev` enables this (as used in TF's CI!) or sqlite3 that comes with Python has this enabled.\r\n\r\nFor TF, this impacts TF's [SqlDataset reader](https://www.tensorflow.org/api_docs/python/tf/contrib/data/SqlDataset):\r\n\r\nFor example, if you have a field that contains a json-encoded list `[1,2,3]` or dictionary `{ 'foo': 'bar'}`, you can simply extract those f.e. in your SQL Query:\r\n```sql\r\njson_extract(data, '$.foo')\r\n```\r\n\r\nI think this is very useful for cases where you have f.e. a variable list of classes `['car', 'boat']` or (a variable number of) coordinates (e.g. polygons, bounding boxes) and you want to save them in one encoded field: e.g. `\"[[0.0, 1.0, 2.0, 2.0], ..]\"`\r\n\r\nThe added code simply adds the flag to enable json1, and a test to make sure it works."}