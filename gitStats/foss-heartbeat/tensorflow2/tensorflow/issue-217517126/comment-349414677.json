{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/349414677", "html_url": "https://github.com/tensorflow/tensorflow/issues/8773#issuecomment-349414677", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8773", "id": 349414677, "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTQxNDY3Nw==", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-05T19:30:24Z", "updated_at": "2017-12-05T19:30:24Z", "author_association": "MEMBER", "body_html": "<p>We do build C libraries for Windows, but only with CPU support. Building GPU-enabled binaries as part of the release is on my TODO list but I haven't gotten around to it yet.</p>\n<ul>\n<li>\n<p>For CPU, you can download the <code>.dll</code> from: <a href=\"https://storage.googleapis.com/tensorflow/libtensorflow/libtensorflow-cpu-windows-x86_64-1.4.0.zip\" rel=\"nofollow\">https://storage.googleapis.com/tensorflow/libtensorflow/libtensorflow-cpu-windows-x86_64-1.4.0.zip</a></p>\n</li>\n<li>\n<p>We use bazel to build this, but the environment is a bit complicated. The script we use (which is what is run by the <a href=\"https://ci.tensorflow.org/view/Nightly/job/nightly-libtensorflow-windows/\" rel=\"nofollow\">nightly builds</a> as well) is <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/ci_build/windows/libtensorflow_cpu.sh\">here</a></p>\n</li>\n</ul>\n<p>So, that sort of summarizes the state we're in with regards to the C API and Windows (and I believe other language bindings like <a href=\"https://github.com/migueldeicaza/TensorFlowSharp\">those for C#</a> are using these releases)<br>\nI'm happy to provide some pointers to next steps, but we (TensorFlow maintainers) are probably not going to have the bandwidth to do this ourselves in the near future.</p>\n<ul>\n<li>\n<p>If you really need the C++ API (as opposed to the smaller C API), then a similar process should work, except that you'll use bazel to build the <code>//tensorflow:libtensorflow_cc.so</code> target instead of <code>//tensorflow:libtensorflow.so</code> target.</p>\n</li>\n<li>\n<p>For GPU support: The script outlined about should work, as long as the build was configured to use CUDA. But I have not tried that yet.</p>\n</li>\n</ul>", "body_text": "We do build C libraries for Windows, but only with CPU support. Building GPU-enabled binaries as part of the release is on my TODO list but I haven't gotten around to it yet.\n\n\nFor CPU, you can download the .dll from: https://storage.googleapis.com/tensorflow/libtensorflow/libtensorflow-cpu-windows-x86_64-1.4.0.zip\n\n\nWe use bazel to build this, but the environment is a bit complicated. The script we use (which is what is run by the nightly builds as well) is here\n\n\nSo, that sort of summarizes the state we're in with regards to the C API and Windows (and I believe other language bindings like those for C# are using these releases)\nI'm happy to provide some pointers to next steps, but we (TensorFlow maintainers) are probably not going to have the bandwidth to do this ourselves in the near future.\n\n\nIf you really need the C++ API (as opposed to the smaller C API), then a similar process should work, except that you'll use bazel to build the //tensorflow:libtensorflow_cc.so target instead of //tensorflow:libtensorflow.so target.\n\n\nFor GPU support: The script outlined about should work, as long as the build was configured to use CUDA. But I have not tried that yet.", "body": "We do build C libraries for Windows, but only with CPU support. Building GPU-enabled binaries as part of the release is on my TODO list but I haven't gotten around to it yet.\r\n\r\n- For CPU, you can download the `.dll` from: https://storage.googleapis.com/tensorflow/libtensorflow/libtensorflow-cpu-windows-x86_64-1.4.0.zip\r\n\r\n- We use bazel to build this, but the environment is a bit complicated. The script we use (which is what is run by the [nightly builds](https://ci.tensorflow.org/view/Nightly/job/nightly-libtensorflow-windows/) as well) is [here](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/ci_build/windows/libtensorflow_cpu.sh)\r\n\r\nSo, that sort of summarizes the state we're in with regards to the C API and Windows (and I believe other language bindings like [those for C#](https://github.com/migueldeicaza/TensorFlowSharp) are using these releases) \r\nI'm happy to provide some pointers to next steps, but we (TensorFlow maintainers) are probably not going to have the bandwidth to do this ourselves in the near future.\r\n\r\n- If you really need the C++ API (as opposed to the smaller C API), then a similar process should work, except that you'll use bazel to build the `//tensorflow:libtensorflow_cc.so` target instead of `//tensorflow:libtensorflow.so` target.\r\n\r\n- For GPU support: The script outlined about should work, as long as the build was configured to use CUDA. But I have not tried that yet.\r\n\r\n"}