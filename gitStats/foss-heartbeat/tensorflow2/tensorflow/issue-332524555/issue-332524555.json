{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20034", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20034/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20034/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20034/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/20034", "id": 332524555, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk0OTg3MTkx", "number": 20034, "title": "Improve S3 filesystem read performance", "user": {"login": "surry", "id": 9781018, "node_id": "MDQ6VXNlcjk3ODEwMTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/9781018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/surry", "html_url": "https://github.com/surry", "followers_url": "https://api.github.com/users/surry/followers", "following_url": "https://api.github.com/users/surry/following{/other_user}", "gists_url": "https://api.github.com/users/surry/gists{/gist_id}", "starred_url": "https://api.github.com/users/surry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/surry/subscriptions", "organizations_url": "https://api.github.com/users/surry/orgs", "repos_url": "https://api.github.com/users/surry/repos", "events_url": "https://api.github.com/users/surry/events{/privacy}", "received_events_url": "https://api.github.com/users/surry/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}, {"id": 987666414, "node_id": "MDU6TGFiZWw5ODc2NjY0MTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/ready%20to%20pull", "name": "ready to pull", "color": "2cd643", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "caisq", "id": 16824702, "node_id": "MDQ6VXNlcjE2ODI0NzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/16824702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caisq", "html_url": "https://github.com/caisq", "followers_url": "https://api.github.com/users/caisq/followers", "following_url": "https://api.github.com/users/caisq/following{/other_user}", "gists_url": "https://api.github.com/users/caisq/gists{/gist_id}", "starred_url": "https://api.github.com/users/caisq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caisq/subscriptions", "organizations_url": "https://api.github.com/users/caisq/orgs", "repos_url": "https://api.github.com/users/caisq/repos", "events_url": "https://api.github.com/users/caisq/events{/privacy}", "received_events_url": "https://api.github.com/users/caisq/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "caisq", "id": 16824702, "node_id": "MDQ6VXNlcjE2ODI0NzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/16824702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caisq", "html_url": "https://github.com/caisq", "followers_url": "https://api.github.com/users/caisq/followers", "following_url": "https://api.github.com/users/caisq/following{/other_user}", "gists_url": "https://api.github.com/users/caisq/gists{/gist_id}", "starred_url": "https://api.github.com/users/caisq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caisq/subscriptions", "organizations_url": "https://api.github.com/users/caisq/orgs", "repos_url": "https://api.github.com/users/caisq/repos", "events_url": "https://api.github.com/users/caisq/events{/privacy}", "received_events_url": "https://api.github.com/users/caisq/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-06-14T18:58:25Z", "updated_at": "2018-08-01T20:23:13Z", "closed_at": "2018-08-01T17:53:48Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/20034", "html_url": "https://github.com/tensorflow/tensorflow/pull/20034", "diff_url": "https://github.com/tensorflow/tensorflow/pull/20034.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/20034.patch"}, "body_html": "<p>Avoid creating a new std::stringstream and copying data into it every time S3RandomAccessFile::Read() is called. <span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #14572.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"274071531\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/14572\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/14572/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/14572\">#14572</a>.</p>\n<p>I was seeing the same issue in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"274071531\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/14572\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/14572/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/14572\">#14572</a> when using an S3 path for my Tensorboard logdir and when reading datasets from S3. Looking at the S3 code, I noticed that S3RandomAccessFile was copying data read from an Aws::IOStream into a temporary std::stringstream, and then copying it back into the final buffer (<code>scratch</code>).</p>\n<p>Based on the comments for <code>RandomAccessFile::Read()</code>, it seems that the data from S3 could be directly written into <code>scratch</code> without a copy. I also think the stringstream was allocating lots of small chunks of memory to store the data read from the S3 files, which was probably the bigger performance hit.</p>\n<p>I updated the code and rebuilt Tensorflow, and now Tensorboard loads tfevent files from S3 much more quickly.</p>", "body_text": "Avoid creating a new std::stringstream and copying data into it every time S3RandomAccessFile::Read() is called. Fixes #14572.\nI was seeing the same issue in #14572 when using an S3 path for my Tensorboard logdir and when reading datasets from S3. Looking at the S3 code, I noticed that S3RandomAccessFile was copying data read from an Aws::IOStream into a temporary std::stringstream, and then copying it back into the final buffer (scratch).\nBased on the comments for RandomAccessFile::Read(), it seems that the data from S3 could be directly written into scratch without a copy. I also think the stringstream was allocating lots of small chunks of memory to store the data read from the S3 files, which was probably the bigger performance hit.\nI updated the code and rebuilt Tensorflow, and now Tensorboard loads tfevent files from S3 much more quickly.", "body": "Avoid creating a new std::stringstream and copying data into it every time S3RandomAccessFile::Read() is called. Fixes #14572.\r\n\r\nI was seeing the same issue in #14572 when using an S3 path for my Tensorboard logdir and when reading datasets from S3. Looking at the S3 code, I noticed that S3RandomAccessFile was copying data read from an Aws::IOStream into a temporary std::stringstream, and then copying it back into the final buffer (`scratch`).\r\n\r\nBased on the comments for `RandomAccessFile::Read()`, it seems that the data from S3 could be directly written into `scratch` without a copy. I also think the stringstream was allocating lots of small chunks of memory to store the data read from the S3 files, which was probably the bigger performance hit.\r\n\r\nI updated the code and rebuilt Tensorflow, and now Tensorboard loads tfevent files from S3 much more quickly.\r\n\r\n"}