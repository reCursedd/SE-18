{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/385525415", "html_url": "https://github.com/tensorflow/tensorflow/pull/18973#issuecomment-385525415", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18973", "id": 385525415, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTUyNTQxNQ==", "user": {"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-30T20:53:29Z", "updated_at": "2018-04-30T20:53:29Z", "author_association": "MEMBER", "body_html": "<p>Thanks for the changes! \"-fopenmp\" is mostly used in GCC. I think it may partially work for clang too, but I have seen clang warnings on macos that complain about the flag.<br>\nAs for variable names I am OK with either this, or your suggestions.</p>\n<p>I agree that the logic for the above options are confusing, I think one way to make things cleaner could be to make them as independent as possible. Yes, it would make sense to have MKL + SIMD options, but then you may want to just have MKL without SIMD options to have a portable library, vs MKL + SIMD for the fastest possible library. Or even just SIMD without MKL because of licensing restrictions on your system.<br>\nBut this PR s a step in the right direction.</p>", "body_text": "Thanks for the changes! \"-fopenmp\" is mostly used in GCC. I think it may partially work for clang too, but I have seen clang warnings on macos that complain about the flag.\nAs for variable names I am OK with either this, or your suggestions.\nI agree that the logic for the above options are confusing, I think one way to make things cleaner could be to make them as independent as possible. Yes, it would make sense to have MKL + SIMD options, but then you may want to just have MKL without SIMD options to have a portable library, vs MKL + SIMD for the fastest possible library. Or even just SIMD without MKL because of licensing restrictions on your system.\nBut this PR s a step in the right direction.", "body": "Thanks for the changes! \"-fopenmp\" is mostly used in GCC. I think it may partially work for clang too, but I have seen clang warnings on macos that complain about the flag.\r\nAs for variable names I am OK with either this, or your suggestions.\r\n\r\nI agree that the logic for the above options are confusing, I think one way to make things cleaner could be to make them as independent as possible. Yes, it would make sense to have MKL + SIMD options, but then you may want to just have MKL without SIMD options to have a portable library, vs MKL + SIMD for the fastest possible library. Or even just SIMD without MKL because of licensing restrictions on your system.\r\nBut this PR s a step in the right direction."}