{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6890", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6890/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6890/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6890/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/6890", "id": 201161981, "node_id": "MDU6SXNzdWUyMDExNjE5ODE=", "number": 6890, "title": "Use tf.get_variable() instead of tf.Variable, parameter did not update in every epoch?", "user": {"login": "fengsky401", "id": 11943769, "node_id": "MDQ6VXNlcjExOTQzNzY5", "avatar_url": "https://avatars0.githubusercontent.com/u/11943769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fengsky401", "html_url": "https://github.com/fengsky401", "followers_url": "https://api.github.com/users/fengsky401/followers", "following_url": "https://api.github.com/users/fengsky401/following{/other_user}", "gists_url": "https://api.github.com/users/fengsky401/gists{/gist_id}", "starred_url": "https://api.github.com/users/fengsky401/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fengsky401/subscriptions", "organizations_url": "https://api.github.com/users/fengsky401/orgs", "repos_url": "https://api.github.com/users/fengsky401/repos", "events_url": "https://api.github.com/users/fengsky401/events{/privacy}", "received_events_url": "https://api.github.com/users/fengsky401/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-01-17T02:41:20Z", "updated_at": "2017-01-17T07:12:06Z", "closed_at": "2017-01-17T07:12:06Z", "author_association": "NONE", "body_html": "<p>I use the program in the page<br>\n<a href=\"https://github.com/tensorflow/tensorflow/tree/master/tensorflow/examples/tutorials/mnist\">https://github.com/tensorflow/tensorflow/tree/master/tensorflow/examples/tutorials/mnist</a><br>\n, just make tf.get_variable() instead of tf.Variable(), other parts are all the same, the result is very different, I doubt whether the parameter update in every epoch?</p>\n<h1>The result of using tf.get_variable():</h1>\n<p>Step 0: loss = 449.45 (0.013 sec)<br>\nStep 100: loss = 10.57 (0.004 sec)<br>\nStep 200: loss = 3.80 (0.005 sec)<br>\nStep 300: loss = 2.06 (0.004 sec)<br>\nStep 400: loss = 1.99 (0.004 sec)<br>\nStep 500: loss = 2.29 (0.004 sec)<br>\nStep 600: loss = 1.77 (0.005 sec)<br>\nStep 700: loss = 2.01 (0.004 sec)<br>\nStep 800: loss = 2.39 (0.007 sec)<br>\nStep 900: loss = 1.71 (0.004 sec)<br>\nTraining Data Eval:<br>\nNum examples: 55000  Num correct: 21297  Precision @ 1: 0.3872<br>\nValidation Data Eval:<br>\nNum examples: 5000  Num correct: 1886  Precision @ 1: 0.3772<br>\nTest Data Eval:<br>\nNum examples: 10000  Num correct: 3780  Precision @ 1: 0.3780<br>\nStep 1000: loss = 2.27 (0.009 sec)<br>\nStep 1100: loss = 2.45 (0.073 sec)<br>\nStep 1200: loss = 1.57 (0.004 sec)<br>\nStep 1300: loss = 1.80 (0.004 sec)<br>\nStep 1400: loss = 1.49 (0.004 sec)<br>\nStep 1500: loss = 1.84 (0.004 sec)<br>\nStep 1600: loss = 1.34 (0.004 sec)<br>\nStep 1700: loss = 1.44 (0.004 sec)<br>\nStep 1800: loss = 1.56 (0.004 sec)<br>\nStep 1900: loss = 1.48 (0.004 sec)<br>\nTraining Data Eval:<br>\nNum examples: 55000  Num correct: 26545  Precision @ 1: 0.4826<br>\nValidation Data Eval:<br>\nNum examples: 5000  Num correct: 2336  Precision @ 1: 0.4672<br>\nTest Data Eval:<br>\nNum examples: 10000  Num correct: 4785  Precision @ 1: 0.4785<br>\nStep 2000: loss = 1.58 (0.011 sec)<br>\nStep 2100: loss = 1.37 (0.004 sec)<br>\nStep 2200: loss = 1.50 (0.070 sec)<br>\nStep 2300: loss = 1.38 (0.004 sec)<br>\nStep 2400: loss = 1.72 (0.004 sec)<br>\nStep 2500: loss = 1.58 (0.004 sec)<br>\nStep 2600: loss = 1.20 (0.004 sec)<br>\nStep 2700: loss = 1.34 (0.004 sec)<br>\nStep 2800: loss = 1.49 (0.004 sec)<br>\nStep 2900: loss = 1.15 (0.004 sec)<br>\nTraining Data Eval:<br>\nNum examples: 55000  Num correct: 30216  Precision @ 1: 0.5494<br>\nValidation Data Eval:<br>\nNum examples: 5000  Num correct: 2685  Precision @ 1: 0.5370<br>\nTest Data Eval:<br>\nNum examples: 10000  Num correct: 5481  Precision @ 1: 0.5481<br>\nStep 3000: loss = 1.19 (0.010 sec)<br>\nStep 3100: loss = 1.69 (0.004 sec)<br>\nStep 3200: loss = 1.25 (0.004 sec)<br>\nStep 3300: loss = 1.25 (0.071 sec)<br>\nStep 3400: loss = 1.14 (0.004 sec)<br>\nStep 3500: loss = 1.27 (0.004 sec)<br>\nStep 3600: loss = 1.50 (0.004 sec)<br>\nStep 3700: loss = 1.07 (0.004 sec)<br>\nStep 3800: loss = 1.15 (0.004 sec)<br>\nStep 3900: loss = 1.12 (0.004 sec)<br>\nTraining Data Eval:<br>\nNum examples: 55000  Num correct: 29304  Precision @ 1: 0.5328<br>\nValidation Data Eval:<br>\nNum examples: 5000  Num correct: 2684  Precision @ 1: 0.5368<br>\nTest Data Eval:<br>\nNum examples: 10000  Num correct: 5234  Precision @ 1: 0.5234<br>\nStep 4000: loss = 1.13 (0.008 sec)<br>\nStep 4100: loss = 1.23 (0.004 sec)<br>\nStep 4200: loss = 1.24 (0.004 sec)<br>\nStep 4300: loss = 1.20 (0.004 sec)<br>\nStep 4400: loss = 1.03 (0.069 sec)<br>\nStep 4500: loss = 0.89 (0.004 sec)<br>\nStep 4600: loss = 1.37 (0.004 sec)<br>\nStep 4700: loss = 1.13 (0.004 sec)<br>\nStep 4800: loss = 1.17 (0.004 sec)<br>\nStep 4900: loss = 1.29 (0.004 sec)<br>\nTraining Data Eval:<br>\nNum examples: 55000  Num correct: 32965  Precision @ 1: 0.5994<br>\nValidation Data Eval:<br>\nNum examples: 5000  Num correct: 2963  Precision @ 1: 0.5926<br>\nTest Data Eval:<br>\nNum examples: 10000  Num correct: 5944  Precision @ 1: 0.5944<br>\nStep 5000: loss = 1.20 (0.008 sec)<br>\nStep 5100: loss = 1.28 (0.004 sec)<br>\nStep 5200: loss = 1.09 (0.004 sec)<br>\nStep 5300: loss = 0.94 (0.004 sec)<br>\nStep 5400: loss = 1.09 (0.004 sec)<br>\nStep 5500: loss = 1.23 (0.069 sec)<br>\nStep 5600: loss = 1.03 (0.004 sec)<br>\nStep 5700: loss = 1.14 (0.004 sec)<br>\nStep 5800: loss = 1.25 (0.004 sec)<br>\nStep 5900: loss = 1.28 (0.004 sec)<br>\nTraining Data Eval:<br>\nNum examples: 55000  Num correct: 33732  Precision @ 1: 0.6133<br>\nValidation Data Eval:<br>\nNum examples: 5000  Num correct: 3071  Precision @ 1: 0.6142<br>\nTest Data Eval:<br>\nNum examples: 10000  Num correct: 6170  Precision @ 1: 0.6170<br>\nStep 6000: loss = 0.99 (0.007 sec)<br>\nStep 6100: loss = 1.09 (0.004 sec)<br>\nStep 6200: loss = 1.00 (0.004 sec)<br>\nStep 6300: loss = 1.00 (0.004 sec)<br>\nStep 6400: loss = 1.28 (0.004 sec)<br>\nStep 6500: loss = 0.90 (0.004 sec)<br>\nStep 6600: loss = 0.73 (0.069 sec)<br>\nStep 6700: loss = 1.08 (0.004 sec)<br>\nStep 6800: loss = 0.99 (0.004 sec)<br>\nStep 6900: loss = 0.89 (0.004 sec)<br>\nTraining Data Eval:<br>\nNum examples: 55000  Num correct: 32685  Precision @ 1: 0.5943<br>\nValidation Data Eval:<br>\nNum examples: 5000  Num correct: 2972  Precision @ 1: 0.5944<br>\nTest Data Eval:<br>\nNum examples: 10000  Num correct: 5963  Precision @ 1: 0.5963<br>\nStep 7000: loss = 1.10 (0.009 sec)<br>\nStep 7100: loss = 1.32 (0.004 sec)<br>\nStep 7200: loss = 0.71 (0.004 sec)<br>\nStep 7300: loss = 0.88 (0.004 sec)<br>\nStep 7400: loss = 1.04 (0.004 sec)<br>\nStep 7500: loss = 1.69 (0.004 sec)<br>\nStep 7600: loss = 1.03 (0.004 sec)<br>\nStep 7700: loss = 1.32 (0.069 sec)<br>\nStep 7800: loss = 0.98 (0.004 sec)<br>\nStep 7900: loss = 1.31 (0.004 sec)<br>\nTraining Data Eval:<br>\nNum examples: 55000  Num correct: 36517  Precision @ 1: 0.6639<br>\nValidation Data Eval:<br>\nNum examples: 5000  Num correct: 3351  Precision @ 1: 0.6702<br>\nTest Data Eval:<br>\nNum examples: 10000  Num correct: 6659  Precision @ 1: 0.6659<br>\nStep 8000: loss = 0.91 (0.009 sec)<br>\nStep 8100: loss = 0.91 (0.004 sec)<br>\nStep 8200: loss = 0.95 (0.004 sec)<br>\nStep 8300: loss = 1.14 (0.004 sec)<br>\nStep 8400: loss = 1.00 (0.004 sec)<br>\nStep 8500: loss = 0.97 (0.004 sec)<br>\nStep 8600: loss = 0.73 (0.004 sec)<br>\nStep 8700: loss = 1.02 (0.004 sec)<br>\nStep 8800: loss = 0.81 (0.069 sec)<br>\nStep 8900: loss = 0.85 (0.004 sec)<br>\nTraining Data Eval:<br>\nNum examples: 55000  Num correct: 37801  Precision @ 1: 0.6873<br>\nValidation Data Eval:<br>\nNum examples: 5000  Num correct: 3456  Precision @ 1: 0.6912<br>\nTest Data Eval:<br>\nNum examples: 10000  Num correct: 6916  Precision @ 1: 0.6916<br>\nStep 9000: loss = 0.59 (0.010 sec)<br>\nStep 9100: loss = 1.02 (0.004 sec)<br>\nStep 9200: loss = 0.84 (0.004 sec)<br>\nStep 9300: loss = 0.79 (0.004 sec)<br>\nStep 9400: loss = 0.88 (0.004 sec)<br>\nStep 9500: loss = 0.94 (0.004 sec)<br>\nStep 9600: loss = 1.05 (0.004 sec)<br>\nStep 9700: loss = 0.78 (0.004 sec)<br>\nStep 9800: loss = 1.08 (0.004 sec)<br>\nStep 9900: loss = 1.12 (0.070 sec)<br>\nTraining Data Eval:<br>\nNum examples: 55000  Num correct: 38346  Precision @ 1: 0.6972<br>\nValidation Data Eval:<br>\nNum examples: 5000  Num correct: 3526  Precision @ 1: 0.7052<br>\nTest Data Eval:<br>\nNum examples: 10000  Num correct: 6997  Precision @ 1: 0.6997<br>\n[Finished in 60.3s]</p>\n<h1>The result of using tf.Variable():</h1>\n<p>Extracting Mnist_data/train-images-idx3-ubyte.gz<br>\nExtracting Mnist_data/train-labels-idx1-ubyte.gz<br>\nExtracting Mnist_data/t10k-images-idx3-ubyte.gz<br>\nExtracting Mnist_data/t10k-labels-idx1-ubyte.gz<br>\nWARNING:tensorflow:Passing a <code>GraphDef</code> to the SummaryWriter is deprecated. Pass a <code>Graph</code> object instead, such as <code>sess.graph</code>.<br>\nStep 0: loss = 2.33 (0.013 sec)<br>\nStep 100: loss = 2.16 (0.004 sec)<br>\nStep 200: loss = 1.90 (0.004 sec)<br>\nStep 300: loss = 1.56 (0.004 sec)<br>\nStep 400: loss = 1.27 (0.004 sec)<br>\nStep 500: loss = 0.84 (0.006 sec)<br>\nStep 600: loss = 0.83 (0.004 sec)<br>\nStep 700: loss = 0.82 (0.004 sec)<br>\nStep 800: loss = 0.56 (0.004 sec)<br>\nStep 900: loss = 0.50 (0.005 sec)<br>\nTraining Data Eval:<br>\nNum examples: 55000  Num correct: 47541  Precision @ 1: 0.8644<br>\nValidation Data Eval:<br>\nNum examples: 5000  Num correct: 4351  Precision @ 1: 0.8702<br>\nTest Data Eval:<br>\nNum examples: 10000  Num correct: 8708  Precision @ 1: 0.8708<br>\nStep 1000: loss = 0.56 (0.009 sec)<br>\nStep 1100: loss = 0.49 (0.090 sec)<br>\nStep 1200: loss = 0.63 (0.004 sec)<br>\nStep 1300: loss = 0.38 (0.004 sec)<br>\nStep 1400: loss = 0.35 (0.004 sec)<br>\nStep 1500: loss = 0.46 (0.004 sec)<br>\nStep 1600: loss = 0.40 (0.006 sec)<br>\nStep 1700: loss = 0.47 (0.004 sec)<br>\nStep 1800: loss = 0.33 (0.004 sec)<br>\nStep 1900: loss = 0.30 (0.004 sec)<br>\nTraining Data Eval:<br>\nNum examples: 55000  Num correct: 49230  Precision @ 1: 0.8951<br>\nValidation Data Eval:<br>\nNum examples: 5000  Num correct: 4511  Precision @ 1: 0.9022<br>\nTest Data Eval:<br>\nNum examples: 10000  Num correct: 8998  Precision @ 1: 0.8998<br>\nStep 2000: loss = 0.33 (0.009 sec)<br>\nStep 2100: loss = 0.33 (0.004 sec)<br>\nStep 2200: loss = 0.34 (0.069 sec)<br>\nStep 2300: loss = 0.45 (0.004 sec)<br>\nStep 2400: loss = 0.31 (0.004 sec)<br>\nStep 2500: loss = 0.29 (0.005 sec)<br>\nStep 2600: loss = 0.17 (0.004 sec)<br>\nStep 2700: loss = 0.23 (0.004 sec)<br>\nStep 2800: loss = 0.34 (0.006 sec)<br>\nStep 2900: loss = 0.39 (0.004 sec)<br>\nTraining Data Eval:<br>\nNum examples: 55000  Num correct: 49923  Precision @ 1: 0.9077<br>\nValidation Data Eval:<br>\nNum examples: 5000  Num correct: 4585  Precision @ 1: 0.9170<br>\nTest Data Eval:<br>\nNum examples: 10000  Num correct: 9114  Precision @ 1: 0.9114<br>\nStep 3000: loss = 0.18 (0.007 sec)<br>\nStep 3100: loss = 0.25 (0.004 sec)<br>\nStep 3200: loss = 0.41 (0.004 sec)<br>\nStep 3300: loss = 0.67 (0.071 sec)<br>\nStep 3400: loss = 0.28 (0.004 sec)<br>\nStep 3500: loss = 0.27 (0.004 sec)<br>\nStep 3600: loss = 0.34 (0.004 sec)<br>\nStep 3700: loss = 0.50 (0.004 sec)<br>\nStep 3800: loss = 0.27 (0.005 sec)<br>\nStep 3900: loss = 0.54 (0.004 sec)<br>\nTraining Data Eval:<br>\nNum examples: 55000  Num correct: 50419  Precision @ 1: 0.9167<br>\nValidation Data Eval:<br>\nNum examples: 5000  Num correct: 4627  Precision @ 1: 0.9254<br>\nTest Data Eval:<br>\nNum examples: 10000  Num correct: 9205  Precision @ 1: 0.9205<br>\nStep 4000: loss = 0.43 (0.009 sec)<br>\nStep 4100: loss = 0.31 (0.004 sec)<br>\nStep 4200: loss = 0.31 (0.005 sec)<br>\nStep 4300: loss = 0.20 (0.004 sec)<br>\nStep 4400: loss = 0.24 (0.070 sec)<br>\nStep 4500: loss = 0.40 (0.005 sec)<br>\nStep 4600: loss = 0.27 (0.004 sec)<br>\nStep 4700: loss = 0.32 (0.005 sec)<br>\nStep 4800: loss = 0.30 (0.004 sec)<br>\nStep 4900: loss = 0.24 (0.004 sec)<br>\nTraining Data Eval:<br>\nNum examples: 55000  Num correct: 50727  Precision @ 1: 0.9223<br>\nValidation Data Eval:<br>\nNum examples: 5000  Num correct: 4656  Precision @ 1: 0.9312<br>\nTest Data Eval:<br>\nNum examples: 10000  Num correct: 9284  Precision @ 1: 0.9284<br>\nStep 5000: loss = 0.40 (0.010 sec)<br>\nStep 5100: loss = 0.22 (0.004 sec)<br>\nStep 5200: loss = 0.29 (0.004 sec)<br>\nStep 5300: loss = 0.21 (0.004 sec)<br>\nStep 5400: loss = 0.29 (0.004 sec)<br>\nStep 5500: loss = 0.27 (0.072 sec)<br>\nStep 5600: loss = 0.17 (0.004 sec)<br>\nStep 5700: loss = 0.14 (0.004 sec)<br>\nStep 5800: loss = 0.21 (0.004 sec)<br>\nStep 5900: loss = 0.32 (0.004 sec)<br>\nTraining Data Eval:<br>\nNum examples: 55000  Num correct: 51058  Precision @ 1: 0.9283<br>\nValidation Data Eval:<br>\nNum examples: 5000  Num correct: 4677  Precision @ 1: 0.9354<br>\nTest Data Eval:<br>\nNum examples: 10000  Num correct: 9329  Precision @ 1: 0.9329<br>\nStep 6000: loss = 0.17 (0.010 sec)<br>\nStep 6100: loss = 0.35 (0.004 sec)<br>\nStep 6200: loss = 0.21 (0.004 sec)<br>\nStep 6300: loss = 0.23 (0.004 sec)<br>\nStep 6400: loss = 0.15 (0.004 sec)<br>\nStep 6500: loss = 0.34 (0.004 sec)<br>\nStep 6600: loss = 0.17 (0.074 sec)<br>\nStep 6700: loss = 0.29 (0.004 sec)<br>\nStep 6800: loss = 0.20 (0.004 sec)<br>\nStep 6900: loss = 0.21 (0.004 sec)<br>\nTraining Data Eval:<br>\nNum examples: 55000  Num correct: 51370  Precision @ 1: 0.9340<br>\nValidation Data Eval:<br>\nNum examples: 5000  Num correct: 4697  Precision @ 1: 0.9394<br>\nTest Data Eval:<br>\nNum examples: 10000  Num correct: 9387  Precision @ 1: 0.9387<br>\nStep 7000: loss = 0.23 (0.007 sec)<br>\nStep 7100: loss = 0.25 (0.004 sec)<br>\nStep 7200: loss = 0.16 (0.004 sec)<br>\nStep 7300: loss = 0.22 (0.004 sec)<br>\nStep 7400: loss = 0.12 (0.004 sec)<br>\nStep 7500: loss = 0.31 (0.004 sec)<br>\nStep 7600: loss = 0.21 (0.004 sec)<br>\nStep 7700: loss = 0.16 (0.071 sec)<br>\nStep 7800: loss = 0.18 (0.004 sec)<br>\nStep 7900: loss = 0.21 (0.004 sec)<br>\nTraining Data Eval:<br>\nNum examples: 55000  Num correct: 51623  Precision @ 1: 0.9386<br>\nValidation Data Eval:<br>\nNum examples: 5000  Num correct: 4725  Precision @ 1: 0.9450<br>\nTest Data Eval:<br>\nNum examples: 10000  Num correct: 9409  Precision @ 1: 0.9409<br>\nStep 8000: loss = 0.26 (0.008 sec)<br>\nStep 8100: loss = 0.23 (0.004 sec)<br>\nStep 8200: loss = 0.32 (0.004 sec)<br>\nStep 8300: loss = 0.16 (0.004 sec)<br>\nStep 8400: loss = 0.18 (0.004 sec)<br>\nStep 8500: loss = 0.21 (0.004 sec)<br>\nStep 8600: loss = 0.26 (0.004 sec)<br>\nStep 8700: loss = 0.17 (0.004 sec)<br>\nStep 8800: loss = 0.24 (0.070 sec)<br>\nStep 8900: loss = 0.12 (0.004 sec)<br>\nTraining Data Eval:<br>\nNum examples: 55000  Num correct: 51853  Precision @ 1: 0.9428<br>\nValidation Data Eval:<br>\nNum examples: 5000  Num correct: 4739  Precision @ 1: 0.9478<br>\nTest Data Eval:<br>\nNum examples: 10000  Num correct: 9444  Precision @ 1: 0.9444<br>\nStep 9000: loss = 0.26 (0.009 sec)<br>\nStep 9100: loss = 0.13 (0.004 sec)<br>\nStep 9200: loss = 0.18 (0.004 sec)<br>\nStep 9300: loss = 0.21 (0.004 sec)<br>\nStep 9400: loss = 0.13 (0.004 sec)<br>\nStep 9500: loss = 0.17 (0.004 sec)<br>\nStep 9600: loss = 0.22 (0.004 sec)<br>\nStep 9700: loss = 0.10 (0.004 sec)<br>\nStep 9800: loss = 0.23 (0.004 sec)<br>\nStep 9900: loss = 0.14 (0.073 sec)<br>\nTraining Data Eval:<br>\nNum examples: 55000  Num correct: 52047  Precision @ 1: 0.9463<br>\nValidation Data Eval:<br>\nNum examples: 5000  Num correct: 4757  Precision @ 1: 0.9514<br>\nTest Data Eval:<br>\nNum examples: 10000  Num correct: 9481  Precision @ 1: 0.9481<br>\n[Finished in 61.5s]</p>", "body_text": "I use the program in the page\nhttps://github.com/tensorflow/tensorflow/tree/master/tensorflow/examples/tutorials/mnist\n, just make tf.get_variable() instead of tf.Variable(), other parts are all the same, the result is very different, I doubt whether the parameter update in every epoch?\nThe result of using tf.get_variable():\nStep 0: loss = 449.45 (0.013 sec)\nStep 100: loss = 10.57 (0.004 sec)\nStep 200: loss = 3.80 (0.005 sec)\nStep 300: loss = 2.06 (0.004 sec)\nStep 400: loss = 1.99 (0.004 sec)\nStep 500: loss = 2.29 (0.004 sec)\nStep 600: loss = 1.77 (0.005 sec)\nStep 700: loss = 2.01 (0.004 sec)\nStep 800: loss = 2.39 (0.007 sec)\nStep 900: loss = 1.71 (0.004 sec)\nTraining Data Eval:\nNum examples: 55000  Num correct: 21297  Precision @ 1: 0.3872\nValidation Data Eval:\nNum examples: 5000  Num correct: 1886  Precision @ 1: 0.3772\nTest Data Eval:\nNum examples: 10000  Num correct: 3780  Precision @ 1: 0.3780\nStep 1000: loss = 2.27 (0.009 sec)\nStep 1100: loss = 2.45 (0.073 sec)\nStep 1200: loss = 1.57 (0.004 sec)\nStep 1300: loss = 1.80 (0.004 sec)\nStep 1400: loss = 1.49 (0.004 sec)\nStep 1500: loss = 1.84 (0.004 sec)\nStep 1600: loss = 1.34 (0.004 sec)\nStep 1700: loss = 1.44 (0.004 sec)\nStep 1800: loss = 1.56 (0.004 sec)\nStep 1900: loss = 1.48 (0.004 sec)\nTraining Data Eval:\nNum examples: 55000  Num correct: 26545  Precision @ 1: 0.4826\nValidation Data Eval:\nNum examples: 5000  Num correct: 2336  Precision @ 1: 0.4672\nTest Data Eval:\nNum examples: 10000  Num correct: 4785  Precision @ 1: 0.4785\nStep 2000: loss = 1.58 (0.011 sec)\nStep 2100: loss = 1.37 (0.004 sec)\nStep 2200: loss = 1.50 (0.070 sec)\nStep 2300: loss = 1.38 (0.004 sec)\nStep 2400: loss = 1.72 (0.004 sec)\nStep 2500: loss = 1.58 (0.004 sec)\nStep 2600: loss = 1.20 (0.004 sec)\nStep 2700: loss = 1.34 (0.004 sec)\nStep 2800: loss = 1.49 (0.004 sec)\nStep 2900: loss = 1.15 (0.004 sec)\nTraining Data Eval:\nNum examples: 55000  Num correct: 30216  Precision @ 1: 0.5494\nValidation Data Eval:\nNum examples: 5000  Num correct: 2685  Precision @ 1: 0.5370\nTest Data Eval:\nNum examples: 10000  Num correct: 5481  Precision @ 1: 0.5481\nStep 3000: loss = 1.19 (0.010 sec)\nStep 3100: loss = 1.69 (0.004 sec)\nStep 3200: loss = 1.25 (0.004 sec)\nStep 3300: loss = 1.25 (0.071 sec)\nStep 3400: loss = 1.14 (0.004 sec)\nStep 3500: loss = 1.27 (0.004 sec)\nStep 3600: loss = 1.50 (0.004 sec)\nStep 3700: loss = 1.07 (0.004 sec)\nStep 3800: loss = 1.15 (0.004 sec)\nStep 3900: loss = 1.12 (0.004 sec)\nTraining Data Eval:\nNum examples: 55000  Num correct: 29304  Precision @ 1: 0.5328\nValidation Data Eval:\nNum examples: 5000  Num correct: 2684  Precision @ 1: 0.5368\nTest Data Eval:\nNum examples: 10000  Num correct: 5234  Precision @ 1: 0.5234\nStep 4000: loss = 1.13 (0.008 sec)\nStep 4100: loss = 1.23 (0.004 sec)\nStep 4200: loss = 1.24 (0.004 sec)\nStep 4300: loss = 1.20 (0.004 sec)\nStep 4400: loss = 1.03 (0.069 sec)\nStep 4500: loss = 0.89 (0.004 sec)\nStep 4600: loss = 1.37 (0.004 sec)\nStep 4700: loss = 1.13 (0.004 sec)\nStep 4800: loss = 1.17 (0.004 sec)\nStep 4900: loss = 1.29 (0.004 sec)\nTraining Data Eval:\nNum examples: 55000  Num correct: 32965  Precision @ 1: 0.5994\nValidation Data Eval:\nNum examples: 5000  Num correct: 2963  Precision @ 1: 0.5926\nTest Data Eval:\nNum examples: 10000  Num correct: 5944  Precision @ 1: 0.5944\nStep 5000: loss = 1.20 (0.008 sec)\nStep 5100: loss = 1.28 (0.004 sec)\nStep 5200: loss = 1.09 (0.004 sec)\nStep 5300: loss = 0.94 (0.004 sec)\nStep 5400: loss = 1.09 (0.004 sec)\nStep 5500: loss = 1.23 (0.069 sec)\nStep 5600: loss = 1.03 (0.004 sec)\nStep 5700: loss = 1.14 (0.004 sec)\nStep 5800: loss = 1.25 (0.004 sec)\nStep 5900: loss = 1.28 (0.004 sec)\nTraining Data Eval:\nNum examples: 55000  Num correct: 33732  Precision @ 1: 0.6133\nValidation Data Eval:\nNum examples: 5000  Num correct: 3071  Precision @ 1: 0.6142\nTest Data Eval:\nNum examples: 10000  Num correct: 6170  Precision @ 1: 0.6170\nStep 6000: loss = 0.99 (0.007 sec)\nStep 6100: loss = 1.09 (0.004 sec)\nStep 6200: loss = 1.00 (0.004 sec)\nStep 6300: loss = 1.00 (0.004 sec)\nStep 6400: loss = 1.28 (0.004 sec)\nStep 6500: loss = 0.90 (0.004 sec)\nStep 6600: loss = 0.73 (0.069 sec)\nStep 6700: loss = 1.08 (0.004 sec)\nStep 6800: loss = 0.99 (0.004 sec)\nStep 6900: loss = 0.89 (0.004 sec)\nTraining Data Eval:\nNum examples: 55000  Num correct: 32685  Precision @ 1: 0.5943\nValidation Data Eval:\nNum examples: 5000  Num correct: 2972  Precision @ 1: 0.5944\nTest Data Eval:\nNum examples: 10000  Num correct: 5963  Precision @ 1: 0.5963\nStep 7000: loss = 1.10 (0.009 sec)\nStep 7100: loss = 1.32 (0.004 sec)\nStep 7200: loss = 0.71 (0.004 sec)\nStep 7300: loss = 0.88 (0.004 sec)\nStep 7400: loss = 1.04 (0.004 sec)\nStep 7500: loss = 1.69 (0.004 sec)\nStep 7600: loss = 1.03 (0.004 sec)\nStep 7700: loss = 1.32 (0.069 sec)\nStep 7800: loss = 0.98 (0.004 sec)\nStep 7900: loss = 1.31 (0.004 sec)\nTraining Data Eval:\nNum examples: 55000  Num correct: 36517  Precision @ 1: 0.6639\nValidation Data Eval:\nNum examples: 5000  Num correct: 3351  Precision @ 1: 0.6702\nTest Data Eval:\nNum examples: 10000  Num correct: 6659  Precision @ 1: 0.6659\nStep 8000: loss = 0.91 (0.009 sec)\nStep 8100: loss = 0.91 (0.004 sec)\nStep 8200: loss = 0.95 (0.004 sec)\nStep 8300: loss = 1.14 (0.004 sec)\nStep 8400: loss = 1.00 (0.004 sec)\nStep 8500: loss = 0.97 (0.004 sec)\nStep 8600: loss = 0.73 (0.004 sec)\nStep 8700: loss = 1.02 (0.004 sec)\nStep 8800: loss = 0.81 (0.069 sec)\nStep 8900: loss = 0.85 (0.004 sec)\nTraining Data Eval:\nNum examples: 55000  Num correct: 37801  Precision @ 1: 0.6873\nValidation Data Eval:\nNum examples: 5000  Num correct: 3456  Precision @ 1: 0.6912\nTest Data Eval:\nNum examples: 10000  Num correct: 6916  Precision @ 1: 0.6916\nStep 9000: loss = 0.59 (0.010 sec)\nStep 9100: loss = 1.02 (0.004 sec)\nStep 9200: loss = 0.84 (0.004 sec)\nStep 9300: loss = 0.79 (0.004 sec)\nStep 9400: loss = 0.88 (0.004 sec)\nStep 9500: loss = 0.94 (0.004 sec)\nStep 9600: loss = 1.05 (0.004 sec)\nStep 9700: loss = 0.78 (0.004 sec)\nStep 9800: loss = 1.08 (0.004 sec)\nStep 9900: loss = 1.12 (0.070 sec)\nTraining Data Eval:\nNum examples: 55000  Num correct: 38346  Precision @ 1: 0.6972\nValidation Data Eval:\nNum examples: 5000  Num correct: 3526  Precision @ 1: 0.7052\nTest Data Eval:\nNum examples: 10000  Num correct: 6997  Precision @ 1: 0.6997\n[Finished in 60.3s]\nThe result of using tf.Variable():\nExtracting Mnist_data/train-images-idx3-ubyte.gz\nExtracting Mnist_data/train-labels-idx1-ubyte.gz\nExtracting Mnist_data/t10k-images-idx3-ubyte.gz\nExtracting Mnist_data/t10k-labels-idx1-ubyte.gz\nWARNING:tensorflow:Passing a GraphDef to the SummaryWriter is deprecated. Pass a Graph object instead, such as sess.graph.\nStep 0: loss = 2.33 (0.013 sec)\nStep 100: loss = 2.16 (0.004 sec)\nStep 200: loss = 1.90 (0.004 sec)\nStep 300: loss = 1.56 (0.004 sec)\nStep 400: loss = 1.27 (0.004 sec)\nStep 500: loss = 0.84 (0.006 sec)\nStep 600: loss = 0.83 (0.004 sec)\nStep 700: loss = 0.82 (0.004 sec)\nStep 800: loss = 0.56 (0.004 sec)\nStep 900: loss = 0.50 (0.005 sec)\nTraining Data Eval:\nNum examples: 55000  Num correct: 47541  Precision @ 1: 0.8644\nValidation Data Eval:\nNum examples: 5000  Num correct: 4351  Precision @ 1: 0.8702\nTest Data Eval:\nNum examples: 10000  Num correct: 8708  Precision @ 1: 0.8708\nStep 1000: loss = 0.56 (0.009 sec)\nStep 1100: loss = 0.49 (0.090 sec)\nStep 1200: loss = 0.63 (0.004 sec)\nStep 1300: loss = 0.38 (0.004 sec)\nStep 1400: loss = 0.35 (0.004 sec)\nStep 1500: loss = 0.46 (0.004 sec)\nStep 1600: loss = 0.40 (0.006 sec)\nStep 1700: loss = 0.47 (0.004 sec)\nStep 1800: loss = 0.33 (0.004 sec)\nStep 1900: loss = 0.30 (0.004 sec)\nTraining Data Eval:\nNum examples: 55000  Num correct: 49230  Precision @ 1: 0.8951\nValidation Data Eval:\nNum examples: 5000  Num correct: 4511  Precision @ 1: 0.9022\nTest Data Eval:\nNum examples: 10000  Num correct: 8998  Precision @ 1: 0.8998\nStep 2000: loss = 0.33 (0.009 sec)\nStep 2100: loss = 0.33 (0.004 sec)\nStep 2200: loss = 0.34 (0.069 sec)\nStep 2300: loss = 0.45 (0.004 sec)\nStep 2400: loss = 0.31 (0.004 sec)\nStep 2500: loss = 0.29 (0.005 sec)\nStep 2600: loss = 0.17 (0.004 sec)\nStep 2700: loss = 0.23 (0.004 sec)\nStep 2800: loss = 0.34 (0.006 sec)\nStep 2900: loss = 0.39 (0.004 sec)\nTraining Data Eval:\nNum examples: 55000  Num correct: 49923  Precision @ 1: 0.9077\nValidation Data Eval:\nNum examples: 5000  Num correct: 4585  Precision @ 1: 0.9170\nTest Data Eval:\nNum examples: 10000  Num correct: 9114  Precision @ 1: 0.9114\nStep 3000: loss = 0.18 (0.007 sec)\nStep 3100: loss = 0.25 (0.004 sec)\nStep 3200: loss = 0.41 (0.004 sec)\nStep 3300: loss = 0.67 (0.071 sec)\nStep 3400: loss = 0.28 (0.004 sec)\nStep 3500: loss = 0.27 (0.004 sec)\nStep 3600: loss = 0.34 (0.004 sec)\nStep 3700: loss = 0.50 (0.004 sec)\nStep 3800: loss = 0.27 (0.005 sec)\nStep 3900: loss = 0.54 (0.004 sec)\nTraining Data Eval:\nNum examples: 55000  Num correct: 50419  Precision @ 1: 0.9167\nValidation Data Eval:\nNum examples: 5000  Num correct: 4627  Precision @ 1: 0.9254\nTest Data Eval:\nNum examples: 10000  Num correct: 9205  Precision @ 1: 0.9205\nStep 4000: loss = 0.43 (0.009 sec)\nStep 4100: loss = 0.31 (0.004 sec)\nStep 4200: loss = 0.31 (0.005 sec)\nStep 4300: loss = 0.20 (0.004 sec)\nStep 4400: loss = 0.24 (0.070 sec)\nStep 4500: loss = 0.40 (0.005 sec)\nStep 4600: loss = 0.27 (0.004 sec)\nStep 4700: loss = 0.32 (0.005 sec)\nStep 4800: loss = 0.30 (0.004 sec)\nStep 4900: loss = 0.24 (0.004 sec)\nTraining Data Eval:\nNum examples: 55000  Num correct: 50727  Precision @ 1: 0.9223\nValidation Data Eval:\nNum examples: 5000  Num correct: 4656  Precision @ 1: 0.9312\nTest Data Eval:\nNum examples: 10000  Num correct: 9284  Precision @ 1: 0.9284\nStep 5000: loss = 0.40 (0.010 sec)\nStep 5100: loss = 0.22 (0.004 sec)\nStep 5200: loss = 0.29 (0.004 sec)\nStep 5300: loss = 0.21 (0.004 sec)\nStep 5400: loss = 0.29 (0.004 sec)\nStep 5500: loss = 0.27 (0.072 sec)\nStep 5600: loss = 0.17 (0.004 sec)\nStep 5700: loss = 0.14 (0.004 sec)\nStep 5800: loss = 0.21 (0.004 sec)\nStep 5900: loss = 0.32 (0.004 sec)\nTraining Data Eval:\nNum examples: 55000  Num correct: 51058  Precision @ 1: 0.9283\nValidation Data Eval:\nNum examples: 5000  Num correct: 4677  Precision @ 1: 0.9354\nTest Data Eval:\nNum examples: 10000  Num correct: 9329  Precision @ 1: 0.9329\nStep 6000: loss = 0.17 (0.010 sec)\nStep 6100: loss = 0.35 (0.004 sec)\nStep 6200: loss = 0.21 (0.004 sec)\nStep 6300: loss = 0.23 (0.004 sec)\nStep 6400: loss = 0.15 (0.004 sec)\nStep 6500: loss = 0.34 (0.004 sec)\nStep 6600: loss = 0.17 (0.074 sec)\nStep 6700: loss = 0.29 (0.004 sec)\nStep 6800: loss = 0.20 (0.004 sec)\nStep 6900: loss = 0.21 (0.004 sec)\nTraining Data Eval:\nNum examples: 55000  Num correct: 51370  Precision @ 1: 0.9340\nValidation Data Eval:\nNum examples: 5000  Num correct: 4697  Precision @ 1: 0.9394\nTest Data Eval:\nNum examples: 10000  Num correct: 9387  Precision @ 1: 0.9387\nStep 7000: loss = 0.23 (0.007 sec)\nStep 7100: loss = 0.25 (0.004 sec)\nStep 7200: loss = 0.16 (0.004 sec)\nStep 7300: loss = 0.22 (0.004 sec)\nStep 7400: loss = 0.12 (0.004 sec)\nStep 7500: loss = 0.31 (0.004 sec)\nStep 7600: loss = 0.21 (0.004 sec)\nStep 7700: loss = 0.16 (0.071 sec)\nStep 7800: loss = 0.18 (0.004 sec)\nStep 7900: loss = 0.21 (0.004 sec)\nTraining Data Eval:\nNum examples: 55000  Num correct: 51623  Precision @ 1: 0.9386\nValidation Data Eval:\nNum examples: 5000  Num correct: 4725  Precision @ 1: 0.9450\nTest Data Eval:\nNum examples: 10000  Num correct: 9409  Precision @ 1: 0.9409\nStep 8000: loss = 0.26 (0.008 sec)\nStep 8100: loss = 0.23 (0.004 sec)\nStep 8200: loss = 0.32 (0.004 sec)\nStep 8300: loss = 0.16 (0.004 sec)\nStep 8400: loss = 0.18 (0.004 sec)\nStep 8500: loss = 0.21 (0.004 sec)\nStep 8600: loss = 0.26 (0.004 sec)\nStep 8700: loss = 0.17 (0.004 sec)\nStep 8800: loss = 0.24 (0.070 sec)\nStep 8900: loss = 0.12 (0.004 sec)\nTraining Data Eval:\nNum examples: 55000  Num correct: 51853  Precision @ 1: 0.9428\nValidation Data Eval:\nNum examples: 5000  Num correct: 4739  Precision @ 1: 0.9478\nTest Data Eval:\nNum examples: 10000  Num correct: 9444  Precision @ 1: 0.9444\nStep 9000: loss = 0.26 (0.009 sec)\nStep 9100: loss = 0.13 (0.004 sec)\nStep 9200: loss = 0.18 (0.004 sec)\nStep 9300: loss = 0.21 (0.004 sec)\nStep 9400: loss = 0.13 (0.004 sec)\nStep 9500: loss = 0.17 (0.004 sec)\nStep 9600: loss = 0.22 (0.004 sec)\nStep 9700: loss = 0.10 (0.004 sec)\nStep 9800: loss = 0.23 (0.004 sec)\nStep 9900: loss = 0.14 (0.073 sec)\nTraining Data Eval:\nNum examples: 55000  Num correct: 52047  Precision @ 1: 0.9463\nValidation Data Eval:\nNum examples: 5000  Num correct: 4757  Precision @ 1: 0.9514\nTest Data Eval:\nNum examples: 10000  Num correct: 9481  Precision @ 1: 0.9481\n[Finished in 61.5s]", "body": "I use the program in the page \r\nhttps://github.com/tensorflow/tensorflow/tree/master/tensorflow/examples/tutorials/mnist\r\n, just make tf.get_variable() instead of tf.Variable(), other parts are all the same, the result is very different, I doubt whether the parameter update in every epoch? \r\n# The result of using tf.get_variable():\r\nStep 0: loss = 449.45 (0.013 sec)\r\nStep 100: loss = 10.57 (0.004 sec)\r\nStep 200: loss = 3.80 (0.005 sec)\r\nStep 300: loss = 2.06 (0.004 sec)\r\nStep 400: loss = 1.99 (0.004 sec)\r\nStep 500: loss = 2.29 (0.004 sec)\r\nStep 600: loss = 1.77 (0.005 sec)\r\nStep 700: loss = 2.01 (0.004 sec)\r\nStep 800: loss = 2.39 (0.007 sec)\r\nStep 900: loss = 1.71 (0.004 sec)\r\nTraining Data Eval:\r\n  Num examples: 55000  Num correct: 21297  Precision @ 1: 0.3872\r\nValidation Data Eval:\r\n  Num examples: 5000  Num correct: 1886  Precision @ 1: 0.3772\r\nTest Data Eval:\r\n  Num examples: 10000  Num correct: 3780  Precision @ 1: 0.3780\r\nStep 1000: loss = 2.27 (0.009 sec)\r\nStep 1100: loss = 2.45 (0.073 sec)\r\nStep 1200: loss = 1.57 (0.004 sec)\r\nStep 1300: loss = 1.80 (0.004 sec)\r\nStep 1400: loss = 1.49 (0.004 sec)\r\nStep 1500: loss = 1.84 (0.004 sec)\r\nStep 1600: loss = 1.34 (0.004 sec)\r\nStep 1700: loss = 1.44 (0.004 sec)\r\nStep 1800: loss = 1.56 (0.004 sec)\r\nStep 1900: loss = 1.48 (0.004 sec)\r\nTraining Data Eval:\r\n  Num examples: 55000  Num correct: 26545  Precision @ 1: 0.4826\r\nValidation Data Eval:\r\n  Num examples: 5000  Num correct: 2336  Precision @ 1: 0.4672\r\nTest Data Eval:\r\n  Num examples: 10000  Num correct: 4785  Precision @ 1: 0.4785\r\nStep 2000: loss = 1.58 (0.011 sec)\r\nStep 2100: loss = 1.37 (0.004 sec)\r\nStep 2200: loss = 1.50 (0.070 sec)\r\nStep 2300: loss = 1.38 (0.004 sec)\r\nStep 2400: loss = 1.72 (0.004 sec)\r\nStep 2500: loss = 1.58 (0.004 sec)\r\nStep 2600: loss = 1.20 (0.004 sec)\r\nStep 2700: loss = 1.34 (0.004 sec)\r\nStep 2800: loss = 1.49 (0.004 sec)\r\nStep 2900: loss = 1.15 (0.004 sec)\r\nTraining Data Eval:\r\n  Num examples: 55000  Num correct: 30216  Precision @ 1: 0.5494\r\nValidation Data Eval:\r\n  Num examples: 5000  Num correct: 2685  Precision @ 1: 0.5370\r\nTest Data Eval:\r\n  Num examples: 10000  Num correct: 5481  Precision @ 1: 0.5481\r\nStep 3000: loss = 1.19 (0.010 sec)\r\nStep 3100: loss = 1.69 (0.004 sec)\r\nStep 3200: loss = 1.25 (0.004 sec)\r\nStep 3300: loss = 1.25 (0.071 sec)\r\nStep 3400: loss = 1.14 (0.004 sec)\r\nStep 3500: loss = 1.27 (0.004 sec)\r\nStep 3600: loss = 1.50 (0.004 sec)\r\nStep 3700: loss = 1.07 (0.004 sec)\r\nStep 3800: loss = 1.15 (0.004 sec)\r\nStep 3900: loss = 1.12 (0.004 sec)\r\nTraining Data Eval:\r\n  Num examples: 55000  Num correct: 29304  Precision @ 1: 0.5328\r\nValidation Data Eval:\r\n  Num examples: 5000  Num correct: 2684  Precision @ 1: 0.5368\r\nTest Data Eval:\r\n  Num examples: 10000  Num correct: 5234  Precision @ 1: 0.5234\r\nStep 4000: loss = 1.13 (0.008 sec)\r\nStep 4100: loss = 1.23 (0.004 sec)\r\nStep 4200: loss = 1.24 (0.004 sec)\r\nStep 4300: loss = 1.20 (0.004 sec)\r\nStep 4400: loss = 1.03 (0.069 sec)\r\nStep 4500: loss = 0.89 (0.004 sec)\r\nStep 4600: loss = 1.37 (0.004 sec)\r\nStep 4700: loss = 1.13 (0.004 sec)\r\nStep 4800: loss = 1.17 (0.004 sec)\r\nStep 4900: loss = 1.29 (0.004 sec)\r\nTraining Data Eval:\r\n  Num examples: 55000  Num correct: 32965  Precision @ 1: 0.5994\r\nValidation Data Eval:\r\n  Num examples: 5000  Num correct: 2963  Precision @ 1: 0.5926\r\nTest Data Eval:\r\n  Num examples: 10000  Num correct: 5944  Precision @ 1: 0.5944\r\nStep 5000: loss = 1.20 (0.008 sec)\r\nStep 5100: loss = 1.28 (0.004 sec)\r\nStep 5200: loss = 1.09 (0.004 sec)\r\nStep 5300: loss = 0.94 (0.004 sec)\r\nStep 5400: loss = 1.09 (0.004 sec)\r\nStep 5500: loss = 1.23 (0.069 sec)\r\nStep 5600: loss = 1.03 (0.004 sec)\r\nStep 5700: loss = 1.14 (0.004 sec)\r\nStep 5800: loss = 1.25 (0.004 sec)\r\nStep 5900: loss = 1.28 (0.004 sec)\r\nTraining Data Eval:\r\n  Num examples: 55000  Num correct: 33732  Precision @ 1: 0.6133\r\nValidation Data Eval:\r\n  Num examples: 5000  Num correct: 3071  Precision @ 1: 0.6142\r\nTest Data Eval:\r\n  Num examples: 10000  Num correct: 6170  Precision @ 1: 0.6170\r\nStep 6000: loss = 0.99 (0.007 sec)\r\nStep 6100: loss = 1.09 (0.004 sec)\r\nStep 6200: loss = 1.00 (0.004 sec)\r\nStep 6300: loss = 1.00 (0.004 sec)\r\nStep 6400: loss = 1.28 (0.004 sec)\r\nStep 6500: loss = 0.90 (0.004 sec)\r\nStep 6600: loss = 0.73 (0.069 sec)\r\nStep 6700: loss = 1.08 (0.004 sec)\r\nStep 6800: loss = 0.99 (0.004 sec)\r\nStep 6900: loss = 0.89 (0.004 sec)\r\nTraining Data Eval:\r\n  Num examples: 55000  Num correct: 32685  Precision @ 1: 0.5943\r\nValidation Data Eval:\r\n  Num examples: 5000  Num correct: 2972  Precision @ 1: 0.5944\r\nTest Data Eval:\r\n  Num examples: 10000  Num correct: 5963  Precision @ 1: 0.5963\r\nStep 7000: loss = 1.10 (0.009 sec)\r\nStep 7100: loss = 1.32 (0.004 sec)\r\nStep 7200: loss = 0.71 (0.004 sec)\r\nStep 7300: loss = 0.88 (0.004 sec)\r\nStep 7400: loss = 1.04 (0.004 sec)\r\nStep 7500: loss = 1.69 (0.004 sec)\r\nStep 7600: loss = 1.03 (0.004 sec)\r\nStep 7700: loss = 1.32 (0.069 sec)\r\nStep 7800: loss = 0.98 (0.004 sec)\r\nStep 7900: loss = 1.31 (0.004 sec)\r\nTraining Data Eval:\r\n  Num examples: 55000  Num correct: 36517  Precision @ 1: 0.6639\r\nValidation Data Eval:\r\n  Num examples: 5000  Num correct: 3351  Precision @ 1: 0.6702\r\nTest Data Eval:\r\n  Num examples: 10000  Num correct: 6659  Precision @ 1: 0.6659\r\nStep 8000: loss = 0.91 (0.009 sec)\r\nStep 8100: loss = 0.91 (0.004 sec)\r\nStep 8200: loss = 0.95 (0.004 sec)\r\nStep 8300: loss = 1.14 (0.004 sec)\r\nStep 8400: loss = 1.00 (0.004 sec)\r\nStep 8500: loss = 0.97 (0.004 sec)\r\nStep 8600: loss = 0.73 (0.004 sec)\r\nStep 8700: loss = 1.02 (0.004 sec)\r\nStep 8800: loss = 0.81 (0.069 sec)\r\nStep 8900: loss = 0.85 (0.004 sec)\r\nTraining Data Eval:\r\n  Num examples: 55000  Num correct: 37801  Precision @ 1: 0.6873\r\nValidation Data Eval:\r\n  Num examples: 5000  Num correct: 3456  Precision @ 1: 0.6912\r\nTest Data Eval:\r\n  Num examples: 10000  Num correct: 6916  Precision @ 1: 0.6916\r\nStep 9000: loss = 0.59 (0.010 sec)\r\nStep 9100: loss = 1.02 (0.004 sec)\r\nStep 9200: loss = 0.84 (0.004 sec)\r\nStep 9300: loss = 0.79 (0.004 sec)\r\nStep 9400: loss = 0.88 (0.004 sec)\r\nStep 9500: loss = 0.94 (0.004 sec)\r\nStep 9600: loss = 1.05 (0.004 sec)\r\nStep 9700: loss = 0.78 (0.004 sec)\r\nStep 9800: loss = 1.08 (0.004 sec)\r\nStep 9900: loss = 1.12 (0.070 sec)\r\nTraining Data Eval:\r\n  Num examples: 55000  Num correct: 38346  Precision @ 1: 0.6972\r\nValidation Data Eval:\r\n  Num examples: 5000  Num correct: 3526  Precision @ 1: 0.7052\r\nTest Data Eval:\r\n  Num examples: 10000  Num correct: 6997  Precision @ 1: 0.6997\r\n[Finished in 60.3s]\r\n\r\n# The result of using tf.Variable():\r\nExtracting Mnist_data/train-images-idx3-ubyte.gz\r\nExtracting Mnist_data/train-labels-idx1-ubyte.gz\r\nExtracting Mnist_data/t10k-images-idx3-ubyte.gz\r\nExtracting Mnist_data/t10k-labels-idx1-ubyte.gz\r\nWARNING:tensorflow:Passing a `GraphDef` to the SummaryWriter is deprecated. Pass a `Graph` object instead, such as `sess.graph`.\r\nStep 0: loss = 2.33 (0.013 sec)\r\nStep 100: loss = 2.16 (0.004 sec)\r\nStep 200: loss = 1.90 (0.004 sec)\r\nStep 300: loss = 1.56 (0.004 sec)\r\nStep 400: loss = 1.27 (0.004 sec)\r\nStep 500: loss = 0.84 (0.006 sec)\r\nStep 600: loss = 0.83 (0.004 sec)\r\nStep 700: loss = 0.82 (0.004 sec)\r\nStep 800: loss = 0.56 (0.004 sec)\r\nStep 900: loss = 0.50 (0.005 sec)\r\nTraining Data Eval:\r\n  Num examples: 55000  Num correct: 47541  Precision @ 1: 0.8644\r\nValidation Data Eval:\r\n  Num examples: 5000  Num correct: 4351  Precision @ 1: 0.8702\r\nTest Data Eval:\r\n  Num examples: 10000  Num correct: 8708  Precision @ 1: 0.8708\r\nStep 1000: loss = 0.56 (0.009 sec)\r\nStep 1100: loss = 0.49 (0.090 sec)\r\nStep 1200: loss = 0.63 (0.004 sec)\r\nStep 1300: loss = 0.38 (0.004 sec)\r\nStep 1400: loss = 0.35 (0.004 sec)\r\nStep 1500: loss = 0.46 (0.004 sec)\r\nStep 1600: loss = 0.40 (0.006 sec)\r\nStep 1700: loss = 0.47 (0.004 sec)\r\nStep 1800: loss = 0.33 (0.004 sec)\r\nStep 1900: loss = 0.30 (0.004 sec)\r\nTraining Data Eval:\r\n  Num examples: 55000  Num correct: 49230  Precision @ 1: 0.8951\r\nValidation Data Eval:\r\n  Num examples: 5000  Num correct: 4511  Precision @ 1: 0.9022\r\nTest Data Eval:\r\n  Num examples: 10000  Num correct: 8998  Precision @ 1: 0.8998\r\nStep 2000: loss = 0.33 (0.009 sec)\r\nStep 2100: loss = 0.33 (0.004 sec)\r\nStep 2200: loss = 0.34 (0.069 sec)\r\nStep 2300: loss = 0.45 (0.004 sec)\r\nStep 2400: loss = 0.31 (0.004 sec)\r\nStep 2500: loss = 0.29 (0.005 sec)\r\nStep 2600: loss = 0.17 (0.004 sec)\r\nStep 2700: loss = 0.23 (0.004 sec)\r\nStep 2800: loss = 0.34 (0.006 sec)\r\nStep 2900: loss = 0.39 (0.004 sec)\r\nTraining Data Eval:\r\n  Num examples: 55000  Num correct: 49923  Precision @ 1: 0.9077\r\nValidation Data Eval:\r\n  Num examples: 5000  Num correct: 4585  Precision @ 1: 0.9170\r\nTest Data Eval:\r\n  Num examples: 10000  Num correct: 9114  Precision @ 1: 0.9114\r\nStep 3000: loss = 0.18 (0.007 sec)\r\nStep 3100: loss = 0.25 (0.004 sec)\r\nStep 3200: loss = 0.41 (0.004 sec)\r\nStep 3300: loss = 0.67 (0.071 sec)\r\nStep 3400: loss = 0.28 (0.004 sec)\r\nStep 3500: loss = 0.27 (0.004 sec)\r\nStep 3600: loss = 0.34 (0.004 sec)\r\nStep 3700: loss = 0.50 (0.004 sec)\r\nStep 3800: loss = 0.27 (0.005 sec)\r\nStep 3900: loss = 0.54 (0.004 sec)\r\nTraining Data Eval:\r\n  Num examples: 55000  Num correct: 50419  Precision @ 1: 0.9167\r\nValidation Data Eval:\r\n  Num examples: 5000  Num correct: 4627  Precision @ 1: 0.9254\r\nTest Data Eval:\r\n  Num examples: 10000  Num correct: 9205  Precision @ 1: 0.9205\r\nStep 4000: loss = 0.43 (0.009 sec)\r\nStep 4100: loss = 0.31 (0.004 sec)\r\nStep 4200: loss = 0.31 (0.005 sec)\r\nStep 4300: loss = 0.20 (0.004 sec)\r\nStep 4400: loss = 0.24 (0.070 sec)\r\nStep 4500: loss = 0.40 (0.005 sec)\r\nStep 4600: loss = 0.27 (0.004 sec)\r\nStep 4700: loss = 0.32 (0.005 sec)\r\nStep 4800: loss = 0.30 (0.004 sec)\r\nStep 4900: loss = 0.24 (0.004 sec)\r\nTraining Data Eval:\r\n  Num examples: 55000  Num correct: 50727  Precision @ 1: 0.9223\r\nValidation Data Eval:\r\n  Num examples: 5000  Num correct: 4656  Precision @ 1: 0.9312\r\nTest Data Eval:\r\n  Num examples: 10000  Num correct: 9284  Precision @ 1: 0.9284\r\nStep 5000: loss = 0.40 (0.010 sec)\r\nStep 5100: loss = 0.22 (0.004 sec)\r\nStep 5200: loss = 0.29 (0.004 sec)\r\nStep 5300: loss = 0.21 (0.004 sec)\r\nStep 5400: loss = 0.29 (0.004 sec)\r\nStep 5500: loss = 0.27 (0.072 sec)\r\nStep 5600: loss = 0.17 (0.004 sec)\r\nStep 5700: loss = 0.14 (0.004 sec)\r\nStep 5800: loss = 0.21 (0.004 sec)\r\nStep 5900: loss = 0.32 (0.004 sec)\r\nTraining Data Eval:\r\n  Num examples: 55000  Num correct: 51058  Precision @ 1: 0.9283\r\nValidation Data Eval:\r\n  Num examples: 5000  Num correct: 4677  Precision @ 1: 0.9354\r\nTest Data Eval:\r\n  Num examples: 10000  Num correct: 9329  Precision @ 1: 0.9329\r\nStep 6000: loss = 0.17 (0.010 sec)\r\nStep 6100: loss = 0.35 (0.004 sec)\r\nStep 6200: loss = 0.21 (0.004 sec)\r\nStep 6300: loss = 0.23 (0.004 sec)\r\nStep 6400: loss = 0.15 (0.004 sec)\r\nStep 6500: loss = 0.34 (0.004 sec)\r\nStep 6600: loss = 0.17 (0.074 sec)\r\nStep 6700: loss = 0.29 (0.004 sec)\r\nStep 6800: loss = 0.20 (0.004 sec)\r\nStep 6900: loss = 0.21 (0.004 sec)\r\nTraining Data Eval:\r\n  Num examples: 55000  Num correct: 51370  Precision @ 1: 0.9340\r\nValidation Data Eval:\r\n  Num examples: 5000  Num correct: 4697  Precision @ 1: 0.9394\r\nTest Data Eval:\r\n  Num examples: 10000  Num correct: 9387  Precision @ 1: 0.9387\r\nStep 7000: loss = 0.23 (0.007 sec)\r\nStep 7100: loss = 0.25 (0.004 sec)\r\nStep 7200: loss = 0.16 (0.004 sec)\r\nStep 7300: loss = 0.22 (0.004 sec)\r\nStep 7400: loss = 0.12 (0.004 sec)\r\nStep 7500: loss = 0.31 (0.004 sec)\r\nStep 7600: loss = 0.21 (0.004 sec)\r\nStep 7700: loss = 0.16 (0.071 sec)\r\nStep 7800: loss = 0.18 (0.004 sec)\r\nStep 7900: loss = 0.21 (0.004 sec)\r\nTraining Data Eval:\r\n  Num examples: 55000  Num correct: 51623  Precision @ 1: 0.9386\r\nValidation Data Eval:\r\n  Num examples: 5000  Num correct: 4725  Precision @ 1: 0.9450\r\nTest Data Eval:\r\n  Num examples: 10000  Num correct: 9409  Precision @ 1: 0.9409\r\nStep 8000: loss = 0.26 (0.008 sec)\r\nStep 8100: loss = 0.23 (0.004 sec)\r\nStep 8200: loss = 0.32 (0.004 sec)\r\nStep 8300: loss = 0.16 (0.004 sec)\r\nStep 8400: loss = 0.18 (0.004 sec)\r\nStep 8500: loss = 0.21 (0.004 sec)\r\nStep 8600: loss = 0.26 (0.004 sec)\r\nStep 8700: loss = 0.17 (0.004 sec)\r\nStep 8800: loss = 0.24 (0.070 sec)\r\nStep 8900: loss = 0.12 (0.004 sec)\r\nTraining Data Eval:\r\n  Num examples: 55000  Num correct: 51853  Precision @ 1: 0.9428\r\nValidation Data Eval:\r\n  Num examples: 5000  Num correct: 4739  Precision @ 1: 0.9478\r\nTest Data Eval:\r\n  Num examples: 10000  Num correct: 9444  Precision @ 1: 0.9444\r\nStep 9000: loss = 0.26 (0.009 sec)\r\nStep 9100: loss = 0.13 (0.004 sec)\r\nStep 9200: loss = 0.18 (0.004 sec)\r\nStep 9300: loss = 0.21 (0.004 sec)\r\nStep 9400: loss = 0.13 (0.004 sec)\r\nStep 9500: loss = 0.17 (0.004 sec)\r\nStep 9600: loss = 0.22 (0.004 sec)\r\nStep 9700: loss = 0.10 (0.004 sec)\r\nStep 9800: loss = 0.23 (0.004 sec)\r\nStep 9900: loss = 0.14 (0.073 sec)\r\nTraining Data Eval:\r\n  Num examples: 55000  Num correct: 52047  Precision @ 1: 0.9463\r\nValidation Data Eval:\r\n  Num examples: 5000  Num correct: 4757  Precision @ 1: 0.9514\r\nTest Data Eval:\r\n  Num examples: 10000  Num correct: 9481  Precision @ 1: 0.9481\r\n[Finished in 61.5s]\r\n"}