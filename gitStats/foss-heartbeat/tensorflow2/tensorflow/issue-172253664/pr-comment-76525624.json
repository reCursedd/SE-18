{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/76525624", "pull_request_review_id": null, "id": 76525624, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc2NTI1NjI0", "diff_hunk": "@@ -94,32 +93,48 @@ def main(unused_argv):\n   if FLAGS.download_only:\n     sys.exit(0)\n \n+  if FLAGS.job_name is None or FLAGS.job_name == \"\":\n+    raise ValueError(\"Must specify an explicit `job_name`\")\n+  if FLAGS.task_index is None or FLAGS.task_index ==\"\":\n+    raise ValueError(\"Must specify an explicit `task_index`\")\n+\n   print(\"job name = %s\" % FLAGS.job_name)\n   print(\"task index = %d\" % FLAGS.task_index)\n   \n   #Construct the cluster and start the server\n   ps_spec = FLAGS.ps_hosts.split(\",\")\n   worker_spec = FLAGS.worker_hosts.split(\",\")\n \n+  # Get the number of workers \n+  num_workers = len(worker_spec)\n+\n   cluster = tf.train.ClusterSpec({\n       \"ps\": ps_spec,\n       \"worker\": worker_spec})\n   server = tf.train.Server(cluster,\n                            job_name=FLAGS.job_name,\n                            task_index=FLAGS.task_index)\n-  \n+\n   if FLAGS.job_name == \"ps\":\n     server.join()\n   elif FLAGS.job_name == \"worker\":\n     is_chief = (FLAGS.task_index == 0)\n-    # Avoid gpu allocation conflict: now allocate task_num -> #gpu \n-    # for each worker in the corresponding machine\n-    gpu = (FLAGS.task_index % FLAGS.num_gpu)\n+    if FLAGS.num_gpus > 0:\n+      if FLAGS.num_gpus < num_workers:\n+        raise ValueError(\"number of gpus is less than number of workers\")\n+      # Avoid gpu allocation conflict: now allocate task_num -> #gpu \n+      # for each worker in the corresponding machine\n+      gpu = (FLAGS.task_index % FLAGS.num_gpus)\n+      worker_device = \"/job:worker/task:%d/gpu:%d\" % (FLAGS.task_index, gpu)\n+    elif FLAGS.num_gpus == 0:\n+      # Just allocate the CPU to worker server\n+      cpu = 0\n+      worker_device = \"/job:worker/task:%d/cpu:%d\" % (FLAGS.task_index, cpu)", "path": "tensorflow/tools/dist_test/python/mnist_replica.py", "position": 266, "original_position": 81, "commit_id": "aa18b64322020939d36b30114e74622754f99f88", "original_commit_id": "2d79c218296b6744fcb6fea05e0600728765474e", "user": {"login": "DjangoPeng", "id": 16943353, "node_id": "MDQ6VXNlcjE2OTQzMzUz", "avatar_url": "https://avatars3.githubusercontent.com/u/16943353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DjangoPeng", "html_url": "https://github.com/DjangoPeng", "followers_url": "https://api.github.com/users/DjangoPeng/followers", "following_url": "https://api.github.com/users/DjangoPeng/following{/other_user}", "gists_url": "https://api.github.com/users/DjangoPeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/DjangoPeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DjangoPeng/subscriptions", "organizations_url": "https://api.github.com/users/DjangoPeng/orgs", "repos_url": "https://api.github.com/users/DjangoPeng/repos", "events_url": "https://api.github.com/users/DjangoPeng/events{/privacy}", "received_events_url": "https://api.github.com/users/DjangoPeng/received_events", "type": "User", "site_admin": false}, "body": "Support to use `/CPU:0` when setting `num_gpus=0`\n", "created_at": "2016-08-28T03:41:52Z", "updated_at": "2016-09-08T09:52:28Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/3935#discussion_r76525624", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/3935", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/76525624"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/3935#discussion_r76525624"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/3935"}}, "body_html": "<p>Support to use <code>/CPU:0</code> when setting <code>num_gpus=0</code></p>", "body_text": "Support to use /CPU:0 when setting num_gpus=0"}