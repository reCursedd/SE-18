{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/76518720", "pull_request_review_id": null, "id": 76518720, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc2NTE4NzIw", "diff_hunk": "@@ -94,68 +89,38 @@\n WORKER_PREFIX = \"tf-worker\"  # Prefix of the workers' domain names\n \n \n-def get_cluster_setter():\n-  \"\"\"Get a cluster setter.\n-\n-  Returns:\n-    Cluster setter and server object.\n-  \"\"\"\n+def main(unused_argv):\n+  mnist = input_data.read_data_sets(FLAGS.data_dir, one_hot=True)\n+  if FLAGS.download_only:\n+    sys.exit(0)\n \n+  print(\"job name = %s\" % FLAGS.job_name)\n+  print(\"task index = %d\" % FLAGS.task_index)\n+  \n+  #Construct the cluster and start the server\n   ps_spec = FLAGS.ps_hosts.split(\",\")\n   worker_spec = FLAGS.worker_hosts.split(\",\")\n \n-  print(ps_spec)\n-  print(worker_spec)\n-\n   cluster = tf.train.ClusterSpec({\n       \"ps\": ps_spec,\n       \"worker\": worker_spec})\n   server = tf.train.Server(cluster,\n                            job_name=FLAGS.job_name,\n-                           task_index=FLAGS.worker_index)\n-\n-  # Get device setter from the cluster spec\n-  return cluster, server\n-\n-\n-def main(unused_argv):\n-  mnist = input_data.read_data_sets(FLAGS.data_dir, one_hot=True)\n-  if FLAGS.download_only:\n-    sys.exit(0)\n-\n-  print(\"Worker GRPC URL: %s\" % FLAGS.worker_grpc_url)\n-  print(\"Worker index = %d\" % FLAGS.worker_index)\n-  print(\"Number of workers = %d\" % FLAGS.num_workers)\n-\n-  # Sanity check on the number of workers and the worker index\n-  if FLAGS.worker_index >= FLAGS.num_workers:\n-    raise ValueError(\"Worker index %d exceeds number of workers %d \" %\n-                     (FLAGS.worker_index, FLAGS.num_workers))\n-\n-  # Sanity check on the number of parameter servers\n-  if FLAGS.num_parameter_servers <= 0:\n-    raise ValueError(\"Invalid num_parameter_servers value: %d\" %\n-                     FLAGS.num_parameter_servers)\n-\n-  # Construct cluster setter object\n-  cluster, server = get_cluster_setter()\n+                           task_index=FLAGS.task_index)\n   \n   if FLAGS.job_name == \"ps\":\n     server.join()\n   elif FLAGS.job_name == \"worker\":", "path": "tensorflow/tools/dist_test/python/mnist_replica.py", "position": null, "original_position": 107, "commit_id": "aa18b64322020939d36b30114e74622754f99f88", "original_commit_id": "4f9bff840b6a258fccfb38cd73abddfbf3c9f065", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "body": "Add an `else:` block to this statement that raises an exception if `FLAGS.job_name` is not set, or unknown.\n", "created_at": "2016-08-27T16:15:25Z", "updated_at": "2016-09-08T09:52:28Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/3935#discussion_r76518720", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/3935", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/76518720"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/3935#discussion_r76518720"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/3935"}}, "body_html": "<p>Add an <code>else:</code> block to this statement that raises an exception if <code>FLAGS.job_name</code> is not set, or unknown.</p>", "body_text": "Add an else: block to this statement that raises an exception if FLAGS.job_name is not set, or unknown."}