{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/156220889", "pull_request_review_id": 82663366, "id": 156220889, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NjIyMDg4OQ==", "diff_hunk": "@@ -0,0 +1,46 @@\n+licenses([\"notice\"])  # Apache 2.0\n+\n+package(default_visibility = [\"//visibility:public\"])\n+\n+load(\"//tensorflow:tensorflow.bzl\", \"py_test\")\n+\n+py_test(\n+    name = \"python_modules_test\",\n+    size = \"small\",\n+    srcs = [\"python_modules_test.py\"],\n+    data = [\n+        \"//tensorflow:all_contrib_files\",", "path": "tensorflow/contrib/cmake/BUILD", "position": null, "original_position": 12, "commit_id": "0de1e04bb35d7e1dc8d10df429b0b7e1a26819ea", "original_commit_id": "3d8f6e3762e54aa5322bcfbcbf86904d6740d70b", "user": {"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}, "body": "No, what I meant is, why do you need this here?\r\nOur \"golden\" source for our pip package files is the bazel build rule. While this \"all_opensource_files\" rule includes everything, many of these may or may not be in the pip package. While for the simpler case of checking if the cmake entries are valid, this can be useful, checking if the cmake build is in parity with the bazel build is a more interesting check, IMHO.", "created_at": "2017-12-11T22:36:19Z", "updated_at": "2017-12-24T08:09:34Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/15166#discussion_r156220889", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/15166", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/156220889"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/15166#discussion_r156220889"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/15166"}}, "body_html": "<p>No, what I meant is, why do you need this here?<br>\nOur \"golden\" source for our pip package files is the bazel build rule. While this \"all_opensource_files\" rule includes everything, many of these may or may not be in the pip package. While for the simpler case of checking if the cmake entries are valid, this can be useful, checking if the cmake build is in parity with the bazel build is a more interesting check, IMHO.</p>", "body_text": "No, what I meant is, why do you need this here?\nOur \"golden\" source for our pip package files is the bazel build rule. While this \"all_opensource_files\" rule includes everything, many of these may or may not be in the pip package. While for the simpler case of checking if the cmake entries are valid, this can be useful, checking if the cmake build is in parity with the bazel build is a more interesting check, IMHO.", "in_reply_to_id": 155940336}