{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/402341992", "html_url": "https://github.com/tensorflow/tensorflow/issues/18053#issuecomment-402341992", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18053", "id": 402341992, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjM0MTk5Mg==", "user": {"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-04T02:08:38Z", "updated_at": "2018-07-04T02:08:38Z", "author_association": "CONTRIBUTOR", "body_html": "<p>So the idea is that <code>tf.Print</code> and <code>tf.print</code> would have incompatible behavior?  This seems like a bad idea to me if so, but I don't object strongly enough to work to prevent the mistake.</p>\n<p>Note that <code>tf.print</code> is accessible only from Python 3 or Python 2.7 with <code>from __future__ import print_function</code>.  Making functionality available only with that constraint and making the natural alias do something different would be confusing.</p>\n<p>If I've misunderstood and they'll have the same behavior, then I'm not unsure why it needs to be removed and then added back.</p>", "body_text": "So the idea is that tf.Print and tf.print would have incompatible behavior?  This seems like a bad idea to me if so, but I don't object strongly enough to work to prevent the mistake.\nNote that tf.print is accessible only from Python 3 or Python 2.7 with from __future__ import print_function.  Making functionality available only with that constraint and making the natural alias do something different would be confusing.\nIf I've misunderstood and they'll have the same behavior, then I'm not unsure why it needs to be removed and then added back.", "body": "So the idea is that `tf.Print` and `tf.print` would have incompatible behavior?  This seems like a bad idea to me if so, but I don't object strongly enough to work to prevent the mistake.\r\n\r\nNote that `tf.print` is accessible only from Python 3 or Python 2.7 with `from __future__ import print_function`.  Making functionality available only with that constraint and making the natural alias do something different would be confusing.\r\n\r\nIf I've misunderstood and they'll have the same behavior, then I'm not unsure why it needs to be removed and then added back."}