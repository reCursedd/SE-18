{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22857", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22857/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22857/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22857/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22857", "id": 368474637, "node_id": "MDU6SXNzdWUzNjg0NzQ2Mzc=", "number": 22857, "title": "tf.estimator.train_and_evaluate auc value is different from tf.estimator.evaluate with same model", "user": {"login": "geyuxiao", "id": 30492518, "node_id": "MDQ6VXNlcjMwNDkyNTE4", "avatar_url": "https://avatars3.githubusercontent.com/u/30492518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geyuxiao", "html_url": "https://github.com/geyuxiao", "followers_url": "https://api.github.com/users/geyuxiao/followers", "following_url": "https://api.github.com/users/geyuxiao/following{/other_user}", "gists_url": "https://api.github.com/users/geyuxiao/gists{/gist_id}", "starred_url": "https://api.github.com/users/geyuxiao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geyuxiao/subscriptions", "organizations_url": "https://api.github.com/users/geyuxiao/orgs", "repos_url": "https://api.github.com/users/geyuxiao/repos", "events_url": "https://api.github.com/users/geyuxiao/events{/privacy}", "received_events_url": "https://api.github.com/users/geyuxiao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-10-10T02:59:03Z", "updated_at": "2018-11-09T22:13:27Z", "closed_at": "2018-11-09T22:13:27Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: no</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>:no</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:</li>\n<li><strong>TensorFlow version (use command below)</strong>: 'v1.11.0-0-gc19e29306c', '1.11.0'</li>\n<li><strong>Python version</strong>:2.7</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>:</li>\n<li><strong>GPU model and memory</strong>:</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I use tf.Estimator for training my models.<br>\nHere is part of my source code:</p>\n<h3>Source code/log</h3>\n<p><strong>tf.estimator.train_and_evaluate</strong></p>\n<pre><code> for n in range(num_epochs):\n    train_spec = tf.estimator.TrainSpec(input_fn=lambda: input_fn(...))\n    eval_spec = tf.estimator.EvalSpec(input_fn =lambda: input_fn(...))\n    tf.estimator.train_and_evaluate(model, train_spec, eval_spec)\n\n\nINFO:tensorflow:Saving dict for global step 18621: auc = 0.6128701, global_step = 18621, loss = 0.17829555\nINFO:tensorflow:Saving dict for global step 37242: auc = 0.6212857, global_step = 37242, loss = 0.17826068\nINFO:tensorflow:Saving dict for global step 55863: auc = 0.6261746, global_step = 55863, loss = 0.17617485\nINFO:tensorflow:Saving dict for global step 74484: auc = 0.630533, global_step = 74484, loss = 0.17646796\nINFO:tensorflow:Saving dict for global step 93105: auc = 0.63444453, global_step = 93105, loss = 0.17552255\nINFO:tensorflow:Saving dict for global step 111726: auc = 0.63371396, global_step = 111726, loss = 0.17790207\nINFO:tensorflow:Saving dict for global step 130347: auc = 0.62660295, global_step = 130347, loss = 0.17602158\nINFO:tensorflow:Saving dict for global step 148968: auc = 0.6290031, global_step = 148968, loss = 0.17708226\nINFO:tensorflow:Saving dict for global step 167589: auc = 0.6234657, global_step = 167589, loss = 0.17724389\nINFO:tensorflow:Saving dict for global step 186210: auc = 0.62800914, global_step = 186210, loss = 0.17702612\n</code></pre>\n<h3>Source code/log</h3>\n<p><strong>tf.estimator.evaluate</strong></p>\n<pre><code>ckpts = [18621, 37242, 55863, 74484, 93105, 111726, 130347, 148968, 167589, 186210]\n        for epoch, ckpt in enumerate(ckpts):\n            model.evaluate(\n                input_fn=lambda: input_fn(...),\n                checkpoint_path=FLAGS.model_dir + \"/model.ckpt-\" + str(ckpt))\n\nINFO:tensorflow:Saving dict for global step 18621: auc = 0.6088399, global_step = 18621, loss = 0.1782806\nINFO:tensorflow:Saving dict for global step 37242: auc = 0.61857945, global_step = 37242, loss = 0.17766058\nINFO:tensorflow:Saving dict for global step 55863: auc = 0.6241194, global_step = 55863, loss = 0.17692827\nINFO:tensorflow:Saving dict for global step 74484: auc = 0.627106, global_step = 74484, loss = 0.17647153\nINFO:tensorflow:Saving dict for global step 93105: auc = 0.62898576, global_step = 93105, loss = 0.17620046\nINFO:tensorflow:Saving dict for global step 111726: auc = 0.62996054, global_step = 111726, loss = 0.17710653\nINFO:tensorflow:Saving dict for global step 130347: auc = 0.63045925, global_step = 130347, loss = 0.17653853\nINFO:tensorflow:Saving dict for global step 148968: auc = 0.6306327, global_step = 148968, loss = 0.17709586\nINFO:tensorflow:Saving dict for global step 167589: auc = 0.6306394, global_step = 167589, loss = 0.1774284\nINFO:tensorflow:Saving dict for global step 186210: auc = 0.6304847, global_step = 186210, loss = 0.17686236\n</code></pre>\n<p>my question is why same model but different auc value. To validate which is right. I also try auc api by sklearn.The result is that auc value same with tf.estimator.evaluate</p>\n<h3>Source code/log</h3>\n<pre><code> ckpts = [18621, 37242, 55863, 74484, 93105, 111726, 130347, 148968, 167589, 186210]\n        for epoch, ckpt in enumerate(ckpts):\n            for data_from, data_mode in zip([FLAGS.valid_data], ['test']):\n                preds = model.predict(\n                    input_fn=lambda: input_fn.(...),\n                    checkpoint_path=FLAGS.model_dir + \"/model.ckpt-\" + str(ckpt))\n                label_list = []\n                pred_list = []\n                for i, prob in enumerate(preds):\n                    pred_list.append(prob['prob'][0])\n                    label_list.append(prob['true_label'])\n                auc_local = sklearn.metrics.roc_auc_score(label_list, pred_list)\n                print(\"%s sklearn.auc is :\", (epoch, data_mode, auc_local))\n\n\n%s auc is : (0, 'test', 0.608910481886984)\n%s auc is : (1, 'test', 0.6186364169158124)\n%s auc is : (2, 'test', 0.6242379534016801)\n%s auc is : (3, 'test', 0.6272265511554851)\n%s auc is : (4, 'test', 0.6291364474305191)\n%s auc is : (5, 'test', 0.6300167648655547)\n%s auc is : (6, 'test', 0.6305495577793957)\n%s auc is : (7, 'test', 0.6307263729168348)\n%s auc is : (8, 'test', 0.6307389062228584)\n%s auc is : (9, 'test', 0.6306225969185617)\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): no\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:no\nTensorFlow installed from (source or binary):\nTensorFlow version (use command below): 'v1.11.0-0-gc19e29306c', '1.11.0'\nPython version:2.7\nBazel version (if compiling from source):\nGCC/Compiler version (if compiling from source):\nCUDA/cuDNN version:\nGPU model and memory:\nExact command to reproduce:\n\nDescribe the problem\nI use tf.Estimator for training my models.\nHere is part of my source code:\nSource code/log\ntf.estimator.train_and_evaluate\n for n in range(num_epochs):\n    train_spec = tf.estimator.TrainSpec(input_fn=lambda: input_fn(...))\n    eval_spec = tf.estimator.EvalSpec(input_fn =lambda: input_fn(...))\n    tf.estimator.train_and_evaluate(model, train_spec, eval_spec)\n\n\nINFO:tensorflow:Saving dict for global step 18621: auc = 0.6128701, global_step = 18621, loss = 0.17829555\nINFO:tensorflow:Saving dict for global step 37242: auc = 0.6212857, global_step = 37242, loss = 0.17826068\nINFO:tensorflow:Saving dict for global step 55863: auc = 0.6261746, global_step = 55863, loss = 0.17617485\nINFO:tensorflow:Saving dict for global step 74484: auc = 0.630533, global_step = 74484, loss = 0.17646796\nINFO:tensorflow:Saving dict for global step 93105: auc = 0.63444453, global_step = 93105, loss = 0.17552255\nINFO:tensorflow:Saving dict for global step 111726: auc = 0.63371396, global_step = 111726, loss = 0.17790207\nINFO:tensorflow:Saving dict for global step 130347: auc = 0.62660295, global_step = 130347, loss = 0.17602158\nINFO:tensorflow:Saving dict for global step 148968: auc = 0.6290031, global_step = 148968, loss = 0.17708226\nINFO:tensorflow:Saving dict for global step 167589: auc = 0.6234657, global_step = 167589, loss = 0.17724389\nINFO:tensorflow:Saving dict for global step 186210: auc = 0.62800914, global_step = 186210, loss = 0.17702612\n\nSource code/log\ntf.estimator.evaluate\nckpts = [18621, 37242, 55863, 74484, 93105, 111726, 130347, 148968, 167589, 186210]\n        for epoch, ckpt in enumerate(ckpts):\n            model.evaluate(\n                input_fn=lambda: input_fn(...),\n                checkpoint_path=FLAGS.model_dir + \"/model.ckpt-\" + str(ckpt))\n\nINFO:tensorflow:Saving dict for global step 18621: auc = 0.6088399, global_step = 18621, loss = 0.1782806\nINFO:tensorflow:Saving dict for global step 37242: auc = 0.61857945, global_step = 37242, loss = 0.17766058\nINFO:tensorflow:Saving dict for global step 55863: auc = 0.6241194, global_step = 55863, loss = 0.17692827\nINFO:tensorflow:Saving dict for global step 74484: auc = 0.627106, global_step = 74484, loss = 0.17647153\nINFO:tensorflow:Saving dict for global step 93105: auc = 0.62898576, global_step = 93105, loss = 0.17620046\nINFO:tensorflow:Saving dict for global step 111726: auc = 0.62996054, global_step = 111726, loss = 0.17710653\nINFO:tensorflow:Saving dict for global step 130347: auc = 0.63045925, global_step = 130347, loss = 0.17653853\nINFO:tensorflow:Saving dict for global step 148968: auc = 0.6306327, global_step = 148968, loss = 0.17709586\nINFO:tensorflow:Saving dict for global step 167589: auc = 0.6306394, global_step = 167589, loss = 0.1774284\nINFO:tensorflow:Saving dict for global step 186210: auc = 0.6304847, global_step = 186210, loss = 0.17686236\n\nmy question is why same model but different auc value. To validate which is right. I also try auc api by sklearn.The result is that auc value same with tf.estimator.evaluate\nSource code/log\n ckpts = [18621, 37242, 55863, 74484, 93105, 111726, 130347, 148968, 167589, 186210]\n        for epoch, ckpt in enumerate(ckpts):\n            for data_from, data_mode in zip([FLAGS.valid_data], ['test']):\n                preds = model.predict(\n                    input_fn=lambda: input_fn.(...),\n                    checkpoint_path=FLAGS.model_dir + \"/model.ckpt-\" + str(ckpt))\n                label_list = []\n                pred_list = []\n                for i, prob in enumerate(preds):\n                    pred_list.append(prob['prob'][0])\n                    label_list.append(prob['true_label'])\n                auc_local = sklearn.metrics.roc_auc_score(label_list, pred_list)\n                print(\"%s sklearn.auc is :\", (epoch, data_mode, auc_local))\n\n\n%s auc is : (0, 'test', 0.608910481886984)\n%s auc is : (1, 'test', 0.6186364169158124)\n%s auc is : (2, 'test', 0.6242379534016801)\n%s auc is : (3, 'test', 0.6272265511554851)\n%s auc is : (4, 'test', 0.6291364474305191)\n%s auc is : (5, 'test', 0.6300167648655547)\n%s auc is : (6, 'test', 0.6305495577793957)\n%s auc is : (7, 'test', 0.6307263729168348)\n%s auc is : (8, 'test', 0.6307389062228584)\n%s auc is : (9, 'test', 0.6306225969185617)", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: no\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**:no \r\n- **TensorFlow installed from (source or binary)**:\r\n- **TensorFlow version (use command below)**: 'v1.11.0-0-gc19e29306c', '1.11.0'\r\n- **Python version**:2.7\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\n\r\n### Describe the problem\r\n\r\nI use tf.Estimator for training my models.\r\nHere is part of my source code:\r\n\r\n### Source code/log\r\n**tf.estimator.train_and_evaluate**\r\n\r\n\r\n```\r\n for n in range(num_epochs):\r\n    train_spec = tf.estimator.TrainSpec(input_fn=lambda: input_fn(...))\r\n    eval_spec = tf.estimator.EvalSpec(input_fn =lambda: input_fn(...))\r\n    tf.estimator.train_and_evaluate(model, train_spec, eval_spec)\r\n\r\n\r\nINFO:tensorflow:Saving dict for global step 18621: auc = 0.6128701, global_step = 18621, loss = 0.17829555\r\nINFO:tensorflow:Saving dict for global step 37242: auc = 0.6212857, global_step = 37242, loss = 0.17826068\r\nINFO:tensorflow:Saving dict for global step 55863: auc = 0.6261746, global_step = 55863, loss = 0.17617485\r\nINFO:tensorflow:Saving dict for global step 74484: auc = 0.630533, global_step = 74484, loss = 0.17646796\r\nINFO:tensorflow:Saving dict for global step 93105: auc = 0.63444453, global_step = 93105, loss = 0.17552255\r\nINFO:tensorflow:Saving dict for global step 111726: auc = 0.63371396, global_step = 111726, loss = 0.17790207\r\nINFO:tensorflow:Saving dict for global step 130347: auc = 0.62660295, global_step = 130347, loss = 0.17602158\r\nINFO:tensorflow:Saving dict for global step 148968: auc = 0.6290031, global_step = 148968, loss = 0.17708226\r\nINFO:tensorflow:Saving dict for global step 167589: auc = 0.6234657, global_step = 167589, loss = 0.17724389\r\nINFO:tensorflow:Saving dict for global step 186210: auc = 0.62800914, global_step = 186210, loss = 0.17702612\r\n```\r\n\r\n### Source code/log\r\n\r\n**tf.estimator.evaluate**\r\n\r\n```\r\nckpts = [18621, 37242, 55863, 74484, 93105, 111726, 130347, 148968, 167589, 186210]\r\n        for epoch, ckpt in enumerate(ckpts):\r\n            model.evaluate(\r\n                input_fn=lambda: input_fn(...),\r\n                checkpoint_path=FLAGS.model_dir + \"/model.ckpt-\" + str(ckpt))\r\n\r\nINFO:tensorflow:Saving dict for global step 18621: auc = 0.6088399, global_step = 18621, loss = 0.1782806\r\nINFO:tensorflow:Saving dict for global step 37242: auc = 0.61857945, global_step = 37242, loss = 0.17766058\r\nINFO:tensorflow:Saving dict for global step 55863: auc = 0.6241194, global_step = 55863, loss = 0.17692827\r\nINFO:tensorflow:Saving dict for global step 74484: auc = 0.627106, global_step = 74484, loss = 0.17647153\r\nINFO:tensorflow:Saving dict for global step 93105: auc = 0.62898576, global_step = 93105, loss = 0.17620046\r\nINFO:tensorflow:Saving dict for global step 111726: auc = 0.62996054, global_step = 111726, loss = 0.17710653\r\nINFO:tensorflow:Saving dict for global step 130347: auc = 0.63045925, global_step = 130347, loss = 0.17653853\r\nINFO:tensorflow:Saving dict for global step 148968: auc = 0.6306327, global_step = 148968, loss = 0.17709586\r\nINFO:tensorflow:Saving dict for global step 167589: auc = 0.6306394, global_step = 167589, loss = 0.1774284\r\nINFO:tensorflow:Saving dict for global step 186210: auc = 0.6304847, global_step = 186210, loss = 0.17686236\r\n```\r\n\r\nmy question is why same model but different auc value. To validate which is right. I also try auc api by sklearn.The result is that auc value same with tf.estimator.evaluate \r\n\r\n### Source code/log\r\n```\r\n ckpts = [18621, 37242, 55863, 74484, 93105, 111726, 130347, 148968, 167589, 186210]\r\n        for epoch, ckpt in enumerate(ckpts):\r\n            for data_from, data_mode in zip([FLAGS.valid_data], ['test']):\r\n                preds = model.predict(\r\n                    input_fn=lambda: input_fn.(...),\r\n                    checkpoint_path=FLAGS.model_dir + \"/model.ckpt-\" + str(ckpt))\r\n                label_list = []\r\n                pred_list = []\r\n                for i, prob in enumerate(preds):\r\n                    pred_list.append(prob['prob'][0])\r\n                    label_list.append(prob['true_label'])\r\n                auc_local = sklearn.metrics.roc_auc_score(label_list, pred_list)\r\n                print(\"%s sklearn.auc is :\", (epoch, data_mode, auc_local))\r\n\r\n\r\n%s auc is : (0, 'test', 0.608910481886984)\r\n%s auc is : (1, 'test', 0.6186364169158124)\r\n%s auc is : (2, 'test', 0.6242379534016801)\r\n%s auc is : (3, 'test', 0.6272265511554851)\r\n%s auc is : (4, 'test', 0.6291364474305191)\r\n%s auc is : (5, 'test', 0.6300167648655547)\r\n%s auc is : (6, 'test', 0.6305495577793957)\r\n%s auc is : (7, 'test', 0.6307263729168348)\r\n%s auc is : (8, 'test', 0.6307389062228584)\r\n%s auc is : (9, 'test', 0.6306225969185617)\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"}