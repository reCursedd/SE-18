{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19973", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19973/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19973/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19973/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19973", "id": 331864284, "node_id": "MDU6SXNzdWUzMzE4NjQyODQ=", "number": 19973, "title": "How to add a threshold in softmax scores", "user": {"login": "mfxss", "id": 27552782, "node_id": "MDQ6VXNlcjI3NTUyNzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/27552782?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mfxss", "html_url": "https://github.com/mfxss", "followers_url": "https://api.github.com/users/mfxss/followers", "following_url": "https://api.github.com/users/mfxss/following{/other_user}", "gists_url": "https://api.github.com/users/mfxss/gists{/gist_id}", "starred_url": "https://api.github.com/users/mfxss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mfxss/subscriptions", "organizations_url": "https://api.github.com/users/mfxss/orgs", "repos_url": "https://api.github.com/users/mfxss/repos", "events_url": "https://api.github.com/users/mfxss/events{/privacy}", "received_events_url": "https://api.github.com/users/mfxss/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-06-13T06:54:53Z", "updated_at": "2018-06-18T18:23:02Z", "closed_at": "2018-06-18T18:23:02Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nYes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nWindows</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\nbinary</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\n1.8</li>\n<li><strong>Python version</strong>:<br>\n3.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>:</li>\n<li><strong>GPU model and memory</strong>:</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>When doing multi-classcification usually I got a softmax score and predictoins with below,</p>\n<pre><code>softmax_scores = tf.nn.softmax(logits=self.scores, dim=-1)\nprediction=tf.argmax(self.scores, 1, name=\"predictions\")\n</code></pre>\n<p>If the softmax_socres I got is [0.5,0.2,0.3].The prediction is [0]. Now I want to add thresholds 0.6 to softmax_socres.Which means the prediction expected here is [4] which means others.<br>\nThe only way that I can figure out is to convert softmax_scores to numpy and handle it. Which is out of the model defination.</p>\n<h3>Source code / logs</h3>\n<p>This is only a demo, the full code is too long.</p>\n<pre><code>import tensorflow as tf\nimport numpy as np\na=tf.constant(np.arange(6),shape=(3,2))\nb=tf.reduce_max(a,1)\nc=tf.to_int32(a&gt;3)\nd=tf.argmax(c,1)\nwith tf.Session() as sess:\n    sess.run(tf.global_variables_initializer())\n    print(c.eval(),d.eval())\n</code></pre>\n<p>Here the result I expect is [4,4,2]</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nYes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nWindows\nTensorFlow installed from (source or binary):\nbinary\nTensorFlow version (use command below):\n1.8\nPython version:\n3.6\nBazel version (if compiling from source):\nGCC/Compiler version (if compiling from source):\nCUDA/cuDNN version:\nGPU model and memory:\nExact command to reproduce:\n\nDescribe the problem\nWhen doing multi-classcification usually I got a softmax score and predictoins with below,\nsoftmax_scores = tf.nn.softmax(logits=self.scores, dim=-1)\nprediction=tf.argmax(self.scores, 1, name=\"predictions\")\n\nIf the softmax_socres I got is [0.5,0.2,0.3].The prediction is [0]. Now I want to add thresholds 0.6 to softmax_socres.Which means the prediction expected here is [4] which means others.\nThe only way that I can figure out is to convert softmax_scores to numpy and handle it. Which is out of the model defination.\nSource code / logs\nThis is only a demo, the full code is too long.\nimport tensorflow as tf\nimport numpy as np\na=tf.constant(np.arange(6),shape=(3,2))\nb=tf.reduce_max(a,1)\nc=tf.to_int32(a>3)\nd=tf.argmax(c,1)\nwith tf.Session() as sess:\n    sess.run(tf.global_variables_initializer())\n    print(c.eval(),d.eval())\n\nHere the result I expect is [4,4,2]", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nWindows\r\n- **TensorFlow installed from (source or binary)**:\r\nbinary\r\n- **TensorFlow version (use command below)**:\r\n1.8\r\n- **Python version**: \r\n3.6\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\nWhen doing multi-classcification usually I got a softmax score and predictoins with below,\r\n```\r\nsoftmax_scores = tf.nn.softmax(logits=self.scores, dim=-1)\r\nprediction=tf.argmax(self.scores, 1, name=\"predictions\")\r\n```\r\nIf the softmax_socres I got is [0.5,0.2,0.3].The prediction is [0]. Now I want to add thresholds 0.6 to softmax_socres.Which means the prediction expected here is [4] which means others.\r\nThe only way that I can figure out is to convert softmax_scores to numpy and handle it. Which is out of the model defination.\r\n\r\n### Source code / logs\r\nThis is only a demo, the full code is too long.\r\n```\r\nimport tensorflow as tf\r\nimport numpy as np\r\na=tf.constant(np.arange(6),shape=(3,2))\r\nb=tf.reduce_max(a,1)\r\nc=tf.to_int32(a>3)\r\nd=tf.argmax(c,1)\r\nwith tf.Session() as sess:\r\n    sess.run(tf.global_variables_initializer())\r\n    print(c.eval(),d.eval())\r\n```\r\nHere the result I expect is [4,4,2]"}