{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/220402554", "html_url": "https://github.com/tensorflow/tensorflow/issues/2432#issuecomment-220402554", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2432", "id": 220402554, "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDQwMjU1NA==", "user": {"login": "rdipietro", "id": 5150559, "node_id": "MDQ6VXNlcjUxNTA1NTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5150559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdipietro", "html_url": "https://github.com/rdipietro", "followers_url": "https://api.github.com/users/rdipietro/followers", "following_url": "https://api.github.com/users/rdipietro/following{/other_user}", "gists_url": "https://api.github.com/users/rdipietro/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdipietro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdipietro/subscriptions", "organizations_url": "https://api.github.com/users/rdipietro/orgs", "repos_url": "https://api.github.com/users/rdipietro/repos", "events_url": "https://api.github.com/users/rdipietro/events{/privacy}", "received_events_url": "https://api.github.com/users/rdipietro/received_events", "type": "User", "site_admin": false}, "created_at": "2016-05-19T17:54:57Z", "updated_at": "2016-05-19T17:54:57Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Update: here is the code without the necessary error checks, conversions, tests that'd be necessary for a pull request. Can do this if we think it might be accepted.</p>\n<pre><code>def staircase(x, boundaries, values):\n    \"\"\" Staircase function.\n\n    Arguments:\n        x: A 0-D Tensor.\n        boundaries: A 1-D NumPy array with strictly increasing entries.\n        values: A 1-D NumPy array that specifies the values for the intervals\n            defined by `boundaries`. (It should therefore have one more entry\n            than `boundaries`.)\n\n    Returns: A 0-D Tensor. Its value is `values[0]` when `x &lt;= boundaries[0]`,\n        `values[1]` when `x &gt; boundaries[0]` and `x &lt;= boundaries[1]`, ..., and\n        values[-1] when `x &gt; boundaries[-1]`.\n    \"\"\"\n\n    pred_fn_pairs = {}\n    pred_fn_pairs[x &lt;= boundaries[0]] = lambda: tf.constant(values[0])\n    pred_fn_pairs[x &gt; boundaries[-1]] = lambda: tf.constant(values[-1])\n    for lower, upper, value in zip(boundaries[:-1], boundaries[1:], values[1:-1]):\n        pred_fn_pairs[(x &gt; lower) &amp; (x &lt;= upper)] = lambda: tf.constant(value)\n\n    return tf.case(pred_fn_pairs, lambda: tf.constant(values[0]), exclusive=True)\n</code></pre>", "body_text": "Update: here is the code without the necessary error checks, conversions, tests that'd be necessary for a pull request. Can do this if we think it might be accepted.\ndef staircase(x, boundaries, values):\n    \"\"\" Staircase function.\n\n    Arguments:\n        x: A 0-D Tensor.\n        boundaries: A 1-D NumPy array with strictly increasing entries.\n        values: A 1-D NumPy array that specifies the values for the intervals\n            defined by `boundaries`. (It should therefore have one more entry\n            than `boundaries`.)\n\n    Returns: A 0-D Tensor. Its value is `values[0]` when `x <= boundaries[0]`,\n        `values[1]` when `x > boundaries[0]` and `x <= boundaries[1]`, ..., and\n        values[-1] when `x > boundaries[-1]`.\n    \"\"\"\n\n    pred_fn_pairs = {}\n    pred_fn_pairs[x <= boundaries[0]] = lambda: tf.constant(values[0])\n    pred_fn_pairs[x > boundaries[-1]] = lambda: tf.constant(values[-1])\n    for lower, upper, value in zip(boundaries[:-1], boundaries[1:], values[1:-1]):\n        pred_fn_pairs[(x > lower) & (x <= upper)] = lambda: tf.constant(value)\n\n    return tf.case(pred_fn_pairs, lambda: tf.constant(values[0]), exclusive=True)", "body": "Update: here is the code without the necessary error checks, conversions, tests that'd be necessary for a pull request. Can do this if we think it might be accepted.\n\n```\ndef staircase(x, boundaries, values):\n    \"\"\" Staircase function.\n\n    Arguments:\n        x: A 0-D Tensor.\n        boundaries: A 1-D NumPy array with strictly increasing entries.\n        values: A 1-D NumPy array that specifies the values for the intervals\n            defined by `boundaries`. (It should therefore have one more entry\n            than `boundaries`.)\n\n    Returns: A 0-D Tensor. Its value is `values[0]` when `x <= boundaries[0]`,\n        `values[1]` when `x > boundaries[0]` and `x <= boundaries[1]`, ..., and\n        values[-1] when `x > boundaries[-1]`.\n    \"\"\"\n\n    pred_fn_pairs = {}\n    pred_fn_pairs[x <= boundaries[0]] = lambda: tf.constant(values[0])\n    pred_fn_pairs[x > boundaries[-1]] = lambda: tf.constant(values[-1])\n    for lower, upper, value in zip(boundaries[:-1], boundaries[1:], values[1:-1]):\n        pred_fn_pairs[(x > lower) & (x <= upper)] = lambda: tf.constant(value)\n\n    return tf.case(pred_fn_pairs, lambda: tf.constant(values[0]), exclusive=True)\n```\n"}