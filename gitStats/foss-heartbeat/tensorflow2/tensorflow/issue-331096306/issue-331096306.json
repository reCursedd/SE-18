{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19904", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19904/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19904/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19904/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19904", "id": 331096306, "node_id": "MDU6SXNzdWUzMzEwOTYzMDY=", "number": 19904, "title": "Multiple Prediction With Tensorflow Model On iOS Swift, Objective-C", "user": {"login": "cagrigider", "id": 28455404, "node_id": "MDQ6VXNlcjI4NDU1NDA0", "avatar_url": "https://avatars0.githubusercontent.com/u/28455404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cagrigider", "html_url": "https://github.com/cagrigider", "followers_url": "https://api.github.com/users/cagrigider/followers", "following_url": "https://api.github.com/users/cagrigider/following{/other_user}", "gists_url": "https://api.github.com/users/cagrigider/gists{/gist_id}", "starred_url": "https://api.github.com/users/cagrigider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cagrigider/subscriptions", "organizations_url": "https://api.github.com/users/cagrigider/orgs", "repos_url": "https://api.github.com/users/cagrigider/repos", "events_url": "https://api.github.com/users/cagrigider/events{/privacy}", "received_events_url": "https://api.github.com/users/cagrigider/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "open", "locked": false, "assignee": {"login": "mhyttsten", "id": 5739464, "node_id": "MDQ6VXNlcjU3Mzk0NjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5739464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhyttsten", "html_url": "https://github.com/mhyttsten", "followers_url": "https://api.github.com/users/mhyttsten/followers", "following_url": "https://api.github.com/users/mhyttsten/following{/other_user}", "gists_url": "https://api.github.com/users/mhyttsten/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhyttsten/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhyttsten/subscriptions", "organizations_url": "https://api.github.com/users/mhyttsten/orgs", "repos_url": "https://api.github.com/users/mhyttsten/repos", "events_url": "https://api.github.com/users/mhyttsten/events{/privacy}", "received_events_url": "https://api.github.com/users/mhyttsten/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mhyttsten", "id": 5739464, "node_id": "MDQ6VXNlcjU3Mzk0NjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5739464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhyttsten", "html_url": "https://github.com/mhyttsten", "followers_url": "https://api.github.com/users/mhyttsten/followers", "following_url": "https://api.github.com/users/mhyttsten/following{/other_user}", "gists_url": "https://api.github.com/users/mhyttsten/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhyttsten/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhyttsten/subscriptions", "organizations_url": "https://api.github.com/users/mhyttsten/orgs", "repos_url": "https://api.github.com/users/mhyttsten/repos", "events_url": "https://api.github.com/users/mhyttsten/events{/privacy}", "received_events_url": "https://api.github.com/users/mhyttsten/received_events", "type": "User", "site_admin": false}, {"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-06-11T08:45:19Z", "updated_at": "2018-11-23T18:38:37Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>I am trying to do character recognition mobile app with CNN. My model predict with %99,6 accuracy on python.<br>\nNow, I am trying to implement my model on iOS.<br>\nI used this project for sample project <a href=\"https://github.com/tensorflow/tensorflow/tree/master/tensorflow/examples/ios/camera\">Tensorflow Camera Example</a><br>\nI created an app, it can predict right single character on screen. But I need to predict 5 character (like a code ABCDE) at same time. And when I change settings to send 5 CVPixelBuffer value to model, it predict wrong. When I send wrong predicted images to computer and try with python , it predicts true. I think there should be some special setting which I do not know, or something wrong about my function to get CVPixelBuffer value from UIImage.<br>\nI trained my model with 45x45 images. Now I crop 5 images (45x45 pixels) and send them to model.</p>\n<p>My function to get CVPixelBuffer :</p>\n<pre><code>extension UIImage {\n/**\n Resizes the image to width x height and converts it to an BGR CVPixelBuffer.\n */\npublic func pixelBuffer(width: Int, height: Int) -&gt; CVPixelBuffer? {\n    return pixelBuffer(width: width, height: height,\n                       pixelFormatType: kCVPixelFormatType_32BGRA,\n                       colorSpace: CGColorSpaceCreateDeviceRGB(),\n                       alphaInfo: .noneSkipLast)\n}\nfunc pixelBuffer(width: Int, height: Int, pixelFormatType: OSType,\n                 colorSpace: CGColorSpace, alphaInfo: CGImageAlphaInfo) -&gt; CVPixelBuffer? {\n    var maybePixelBuffer: CVPixelBuffer?\n    let attrs = [kCVPixelBufferCGImageCompatibilityKey: kCFBooleanTrue,\n                 kCVPixelBufferCGBitmapContextCompatibilityKey: kCFBooleanTrue]\n    let status = CVPixelBufferCreate(kCFAllocatorDefault,\n                                     width,\n                                     height,\n                                     pixelFormatType,\n                                     attrs as CFDictionary,\n                                     &amp;maybePixelBuffer)\n    \n    guard status == kCVReturnSuccess, let pixelBuffer = maybePixelBuffer else {\n        return nil\n    }\n    \n    CVPixelBufferLockBaseAddress(pixelBuffer, CVPixelBufferLockFlags(rawValue: 0))\n    let pixelData = CVPixelBufferGetBaseAddress(pixelBuffer)\n    \n    guard let context = CGContext(data: pixelData,\n                                  width: width,\n                                  height: height,\n                                  bitsPerComponent: 8,\n                                  bytesPerRow: CVPixelBufferGetBytesPerRow(pixelBuffer),\n                                  space: colorSpace,\n                                  bitmapInfo: alphaInfo.rawValue)\n        else {\n            return nil\n    }\n    \n    UIGraphicsPushContext(context)\n    context.translateBy(x: 0, y: CGFloat(height))\n    context.scaleBy(x: 1, y: -1)\n    self.draw(in: CGRect(x: 0, y: 0, width: width, height: height))\n    UIGraphicsPopContext()\n    \n    CVPixelBufferUnlockBaseAddress(pixelBuffer, CVPixelBufferLockFlags(rawValue: 0))\n    return pixelBuffer\n}\n</code></pre>\n<p>Thanks.</p>\n<ul>\n<li>Have I written custom code: Yes</li>\n<li>OS Platform and Distribution: Mac OS 10.13.3 High Sierra</li>\n<li>TensorFlow installed from (source or binary): source</li>\n<li>TensorFlow version: 1.1.0 on Mac (Tensorflow-Experimental on iOS)</li>\n<li>Python version: 3</li>\n<li>Bazel version: 0.13.0</li>\n<li>CUDA/cuDNN: N/A</li>\n<li>GPU model and Memory: N/A</li>\n<li>Exact command to reproduce: Single image prediction works well. But cannot predict multiple image.(Prediction)</li>\n</ul>", "body_text": "I am trying to do character recognition mobile app with CNN. My model predict with %99,6 accuracy on python.\nNow, I am trying to implement my model on iOS.\nI used this project for sample project Tensorflow Camera Example\nI created an app, it can predict right single character on screen. But I need to predict 5 character (like a code ABCDE) at same time. And when I change settings to send 5 CVPixelBuffer value to model, it predict wrong. When I send wrong predicted images to computer and try with python , it predicts true. I think there should be some special setting which I do not know, or something wrong about my function to get CVPixelBuffer value from UIImage.\nI trained my model with 45x45 images. Now I crop 5 images (45x45 pixels) and send them to model.\nMy function to get CVPixelBuffer :\nextension UIImage {\n/**\n Resizes the image to width x height and converts it to an BGR CVPixelBuffer.\n */\npublic func pixelBuffer(width: Int, height: Int) -> CVPixelBuffer? {\n    return pixelBuffer(width: width, height: height,\n                       pixelFormatType: kCVPixelFormatType_32BGRA,\n                       colorSpace: CGColorSpaceCreateDeviceRGB(),\n                       alphaInfo: .noneSkipLast)\n}\nfunc pixelBuffer(width: Int, height: Int, pixelFormatType: OSType,\n                 colorSpace: CGColorSpace, alphaInfo: CGImageAlphaInfo) -> CVPixelBuffer? {\n    var maybePixelBuffer: CVPixelBuffer?\n    let attrs = [kCVPixelBufferCGImageCompatibilityKey: kCFBooleanTrue,\n                 kCVPixelBufferCGBitmapContextCompatibilityKey: kCFBooleanTrue]\n    let status = CVPixelBufferCreate(kCFAllocatorDefault,\n                                     width,\n                                     height,\n                                     pixelFormatType,\n                                     attrs as CFDictionary,\n                                     &maybePixelBuffer)\n    \n    guard status == kCVReturnSuccess, let pixelBuffer = maybePixelBuffer else {\n        return nil\n    }\n    \n    CVPixelBufferLockBaseAddress(pixelBuffer, CVPixelBufferLockFlags(rawValue: 0))\n    let pixelData = CVPixelBufferGetBaseAddress(pixelBuffer)\n    \n    guard let context = CGContext(data: pixelData,\n                                  width: width,\n                                  height: height,\n                                  bitsPerComponent: 8,\n                                  bytesPerRow: CVPixelBufferGetBytesPerRow(pixelBuffer),\n                                  space: colorSpace,\n                                  bitmapInfo: alphaInfo.rawValue)\n        else {\n            return nil\n    }\n    \n    UIGraphicsPushContext(context)\n    context.translateBy(x: 0, y: CGFloat(height))\n    context.scaleBy(x: 1, y: -1)\n    self.draw(in: CGRect(x: 0, y: 0, width: width, height: height))\n    UIGraphicsPopContext()\n    \n    CVPixelBufferUnlockBaseAddress(pixelBuffer, CVPixelBufferLockFlags(rawValue: 0))\n    return pixelBuffer\n}\n\nThanks.\n\nHave I written custom code: Yes\nOS Platform and Distribution: Mac OS 10.13.3 High Sierra\nTensorFlow installed from (source or binary): source\nTensorFlow version: 1.1.0 on Mac (Tensorflow-Experimental on iOS)\nPython version: 3\nBazel version: 0.13.0\nCUDA/cuDNN: N/A\nGPU model and Memory: N/A\nExact command to reproduce: Single image prediction works well. But cannot predict multiple image.(Prediction)", "body": "I am trying to do character recognition mobile app with CNN. My model predict with %99,6 accuracy on python.\r\nNow, I am trying to implement my model on iOS. \r\nI used this project for sample project [Tensorflow Camera Example](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/examples/ios/camera)\r\nI created an app, it can predict right single character on screen. But I need to predict 5 character (like a code ABCDE) at same time. And when I change settings to send 5 CVPixelBuffer value to model, it predict wrong. When I send wrong predicted images to computer and try with python , it predicts true. I think there should be some special setting which I do not know, or something wrong about my function to get CVPixelBuffer value from UIImage.\r\nI trained my model with 45x45 images. Now I crop 5 images (45x45 pixels) and send them to model.\r\n\r\nMy function to get CVPixelBuffer : \r\n\r\n    extension UIImage {\r\n    /**\r\n     Resizes the image to width x height and converts it to an BGR CVPixelBuffer.\r\n     */\r\n    public func pixelBuffer(width: Int, height: Int) -> CVPixelBuffer? {\r\n        return pixelBuffer(width: width, height: height,\r\n                           pixelFormatType: kCVPixelFormatType_32BGRA,\r\n                           colorSpace: CGColorSpaceCreateDeviceRGB(),\r\n                           alphaInfo: .noneSkipLast)\r\n    }\r\n    func pixelBuffer(width: Int, height: Int, pixelFormatType: OSType,\r\n                     colorSpace: CGColorSpace, alphaInfo: CGImageAlphaInfo) -> CVPixelBuffer? {\r\n        var maybePixelBuffer: CVPixelBuffer?\r\n        let attrs = [kCVPixelBufferCGImageCompatibilityKey: kCFBooleanTrue,\r\n                     kCVPixelBufferCGBitmapContextCompatibilityKey: kCFBooleanTrue]\r\n        let status = CVPixelBufferCreate(kCFAllocatorDefault,\r\n                                         width,\r\n                                         height,\r\n                                         pixelFormatType,\r\n                                         attrs as CFDictionary,\r\n                                         &maybePixelBuffer)\r\n        \r\n        guard status == kCVReturnSuccess, let pixelBuffer = maybePixelBuffer else {\r\n            return nil\r\n        }\r\n        \r\n        CVPixelBufferLockBaseAddress(pixelBuffer, CVPixelBufferLockFlags(rawValue: 0))\r\n        let pixelData = CVPixelBufferGetBaseAddress(pixelBuffer)\r\n        \r\n        guard let context = CGContext(data: pixelData,\r\n                                      width: width,\r\n                                      height: height,\r\n                                      bitsPerComponent: 8,\r\n                                      bytesPerRow: CVPixelBufferGetBytesPerRow(pixelBuffer),\r\n                                      space: colorSpace,\r\n                                      bitmapInfo: alphaInfo.rawValue)\r\n            else {\r\n                return nil\r\n        }\r\n        \r\n        UIGraphicsPushContext(context)\r\n        context.translateBy(x: 0, y: CGFloat(height))\r\n        context.scaleBy(x: 1, y: -1)\r\n        self.draw(in: CGRect(x: 0, y: 0, width: width, height: height))\r\n        UIGraphicsPopContext()\r\n        \r\n        CVPixelBufferUnlockBaseAddress(pixelBuffer, CVPixelBufferLockFlags(rawValue: 0))\r\n        return pixelBuffer\r\n    }\r\n\r\nThanks.\r\n\r\n- Have I written custom code: Yes\r\n- OS Platform and Distribution: Mac OS 10.13.3 High Sierra\r\n- TensorFlow installed from (source or binary): source\r\n- TensorFlow version: 1.1.0 on Mac (Tensorflow-Experimental on iOS)\r\n- Python version: 3\r\n- Bazel version: 0.13.0\r\n- CUDA/cuDNN: N/A\r\n- GPU model and Memory: N/A\r\n- Exact command to reproduce: Single image prediction works well. But cannot predict multiple image.(Prediction)"}