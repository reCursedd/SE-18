{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/220635531", "pull_request_review_id": 159069289, "id": 220635531, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDYzNTUzMQ==", "diff_hunk": "@@ -251,8 +283,67 @@ tensorflow::Status TRTOptimizationPass::Optimize(\n   cp.is_dyn_op = is_dynamic_op_;\n   cp.cached_engine_batches = batches_;\n   cp.max_cached_engines = max_cached_batches_;\n+\n+  if (save_input_graph_) {", "path": "tensorflow/contrib/tensorrt/convert/trt_optimization_pass.cc", "position": 51, "original_position": 51, "commit_id": "eaf7de7c21be2c85f07fde7fc69962d1fcf95766", "original_commit_id": "2b2ca341fd600917639aa0a07bf82e812acefff5", "user": {"login": "aaroey", "id": 31743510, "node_id": "MDQ6VXNlcjMxNzQzNTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/31743510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaroey", "html_url": "https://github.com/aaroey", "followers_url": "https://api.github.com/users/aaroey/followers", "following_url": "https://api.github.com/users/aaroey/following{/other_user}", "gists_url": "https://api.github.com/users/aaroey/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaroey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaroey/subscriptions", "organizations_url": "https://api.github.com/users/aaroey/orgs", "repos_url": "https://api.github.com/users/aaroey/repos", "events_url": "https://api.github.com/users/aaroey/events{/privacy}", "received_events_url": "https://api.github.com/users/aaroey/received_events", "type": "User", "site_admin": false}, "body": "You're right that with current code it's not the same, but I still prefer not to add them, since once we add it it becomes a maintenance burden. I know sometimes it can make debugging easier but such functionality can be achieved much easier using python, with much less lines of code changes, for example, as you said by making the optimizer list (constfold, layout) configurable, and make it run only single round, etc. Or if you insist, at least we can make it generic by putting this logic to `MetaOptimizer::RunOptimizer()` so every optimizer can benefit from it.", "created_at": "2018-09-26T16:30:24Z", "updated_at": "2018-09-26T16:30:30Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/22435#discussion_r220635531", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/22435", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/220635531"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/22435#discussion_r220635531"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/22435"}}, "body_html": "<p>You're right that with current code it's not the same, but I still prefer not to add them, since once we add it it becomes a maintenance burden. I know sometimes it can make debugging easier but such functionality can be achieved much easier using python, with much less lines of code changes, for example, as you said by making the optimizer list (constfold, layout) configurable, and make it run only single round, etc. Or if you insist, at least we can make it generic by putting this logic to <code>MetaOptimizer::RunOptimizer()</code> so every optimizer can benefit from it.</p>", "body_text": "You're right that with current code it's not the same, but I still prefer not to add them, since once we add it it becomes a maintenance burden. I know sometimes it can make debugging easier but such functionality can be achieved much easier using python, with much less lines of code changes, for example, as you said by making the optimizer list (constfold, layout) configurable, and make it run only single round, etc. Or if you insist, at least we can make it generic by putting this logic to MetaOptimizer::RunOptimizer() so every optimizer can benefit from it.", "in_reply_to_id": 219886687}