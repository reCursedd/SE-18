{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/438836880", "html_url": "https://github.com/tensorflow/tensorflow/issues/23635#issuecomment-438836880", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23635", "id": 438836880, "node_id": "MDEyOklzc3VlQ29tbWVudDQzODgzNjg4MA==", "user": {"login": "gmanrocks99", "id": 44654007, "node_id": "MDQ6VXNlcjQ0NjU0MDA3", "avatar_url": "https://avatars3.githubusercontent.com/u/44654007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gmanrocks99", "html_url": "https://github.com/gmanrocks99", "followers_url": "https://api.github.com/users/gmanrocks99/followers", "following_url": "https://api.github.com/users/gmanrocks99/following{/other_user}", "gists_url": "https://api.github.com/users/gmanrocks99/gists{/gist_id}", "starred_url": "https://api.github.com/users/gmanrocks99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gmanrocks99/subscriptions", "organizations_url": "https://api.github.com/users/gmanrocks99/orgs", "repos_url": "https://api.github.com/users/gmanrocks99/repos", "events_url": "https://api.github.com/users/gmanrocks99/events{/privacy}", "received_events_url": "https://api.github.com/users/gmanrocks99/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-14T22:08:05Z", "updated_at": "2018-11-14T22:08:05Z", "author_association": "NONE", "body_html": "<p>This works:<br>\nmodel.add(Conv2D(filters=64, kernel_size=(5, 5), activation='relu', ))<br>\nmodel.add(MaxPool2D(pool_size=(5, 5)))</p>\n<p>model.add(Conv2D(filters=32, kernel_size=(5, 5), activation='relu', ))<br>\nmodel.add(MaxPool2D(pool_size=(5, 5)))</p>\n<p>model.add(Dense(units=1024, activation='relu'))<br>\nmodel.add(Dropout(rate=0.8))<br>\nmodel.add(Dense(units=2, activation='softmax'))</p>\n<p>model.compile(optimizer=Adam(lr=0.001), loss='categorical_crossentropy', metrics=['accuracy', 'ce'])<br>\nsess.run(tf.global_variables_initializer())<br>\nmodel.fit(x=X_train, y=Y_train, epochs=1, validation_data=(X_test, Y_test), verbose=1)</p>\n<p>This does not:</p>\n<p>model.add(Conv2D(filters=32, kernel_size=(5, 5), activation='relu', ))<br>\nmodel.add(MaxPool2D(pool_size=(5, 5)))</p>\n<p>model.add(Conv2D(filters=64, kernel_size=(5, 5), activation='relu', ))<br>\nmodel.add(MaxPool2D(pool_size=(5, 5)))</p>\n<p>model.add(Conv2D(filters=32, kernel_size=(5, 5), activation='relu', ))<br>\nmodel.add(MaxPool2D(pool_size=(5, 5)))</p>\n<p>model.add(Dense(units=1024, activation='relu'))<br>\nmodel.add(Dropout(rate=0.8))<br>\nmodel.add(Dense(units=2, activation='softmax'))</p>\n<p>model.compile(optimizer=Adam(lr=0.001), loss='categorical_crossentropy', metrics=['accuracy', 'ce'])<br>\nsess.run(tf.global_variables_initializer())<br>\nmodel.fit(x=X_train, y=Y_train, epochs=1, validation_data=(X_test, Y_test), verbose=1)</p>\n<p>The latter, i added one more conv2d and one more maxpool2D which does not work, no matter the number of filters.</p>", "body_text": "This works:\nmodel.add(Conv2D(filters=64, kernel_size=(5, 5), activation='relu', ))\nmodel.add(MaxPool2D(pool_size=(5, 5)))\nmodel.add(Conv2D(filters=32, kernel_size=(5, 5), activation='relu', ))\nmodel.add(MaxPool2D(pool_size=(5, 5)))\nmodel.add(Dense(units=1024, activation='relu'))\nmodel.add(Dropout(rate=0.8))\nmodel.add(Dense(units=2, activation='softmax'))\nmodel.compile(optimizer=Adam(lr=0.001), loss='categorical_crossentropy', metrics=['accuracy', 'ce'])\nsess.run(tf.global_variables_initializer())\nmodel.fit(x=X_train, y=Y_train, epochs=1, validation_data=(X_test, Y_test), verbose=1)\nThis does not:\nmodel.add(Conv2D(filters=32, kernel_size=(5, 5), activation='relu', ))\nmodel.add(MaxPool2D(pool_size=(5, 5)))\nmodel.add(Conv2D(filters=64, kernel_size=(5, 5), activation='relu', ))\nmodel.add(MaxPool2D(pool_size=(5, 5)))\nmodel.add(Conv2D(filters=32, kernel_size=(5, 5), activation='relu', ))\nmodel.add(MaxPool2D(pool_size=(5, 5)))\nmodel.add(Dense(units=1024, activation='relu'))\nmodel.add(Dropout(rate=0.8))\nmodel.add(Dense(units=2, activation='softmax'))\nmodel.compile(optimizer=Adam(lr=0.001), loss='categorical_crossentropy', metrics=['accuracy', 'ce'])\nsess.run(tf.global_variables_initializer())\nmodel.fit(x=X_train, y=Y_train, epochs=1, validation_data=(X_test, Y_test), verbose=1)\nThe latter, i added one more conv2d and one more maxpool2D which does not work, no matter the number of filters.", "body": "This works:\r\nmodel.add(Conv2D(filters=64, kernel_size=(5, 5), activation='relu', ))\r\nmodel.add(MaxPool2D(pool_size=(5, 5)))\r\n\r\nmodel.add(Conv2D(filters=32, kernel_size=(5, 5), activation='relu', ))\r\nmodel.add(MaxPool2D(pool_size=(5, 5)))\r\n\r\nmodel.add(Dense(units=1024, activation='relu'))\r\nmodel.add(Dropout(rate=0.8))\r\nmodel.add(Dense(units=2, activation='softmax'))\r\n\r\nmodel.compile(optimizer=Adam(lr=0.001), loss='categorical_crossentropy', metrics=['accuracy', 'ce'])\r\nsess.run(tf.global_variables_initializer())\r\nmodel.fit(x=X_train, y=Y_train, epochs=1, validation_data=(X_test, Y_test), verbose=1)\r\n\r\nThis does not:\r\n\r\nmodel.add(Conv2D(filters=32, kernel_size=(5, 5), activation='relu', ))\r\nmodel.add(MaxPool2D(pool_size=(5, 5)))\r\n\r\nmodel.add(Conv2D(filters=64, kernel_size=(5, 5), activation='relu', ))\r\nmodel.add(MaxPool2D(pool_size=(5, 5)))\r\n\r\nmodel.add(Conv2D(filters=32, kernel_size=(5, 5), activation='relu', ))\r\nmodel.add(MaxPool2D(pool_size=(5, 5)))\r\n\r\nmodel.add(Dense(units=1024, activation='relu'))\r\nmodel.add(Dropout(rate=0.8))\r\nmodel.add(Dense(units=2, activation='softmax'))\r\n\r\nmodel.compile(optimizer=Adam(lr=0.001), loss='categorical_crossentropy', metrics=['accuracy', 'ce'])\r\nsess.run(tf.global_variables_initializer())\r\nmodel.fit(x=X_train, y=Y_train, epochs=1, validation_data=(X_test, Y_test), verbose=1)\r\n\r\nThe latter, i added one more conv2d and one more maxpool2D which does not work, no matter the number of filters."}