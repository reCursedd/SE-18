{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/392860118", "html_url": "https://github.com/tensorflow/tensorflow/issues/9099#issuecomment-392860118", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9099", "id": 392860118, "node_id": "MDEyOklzc3VlQ29tbWVudDM5Mjg2MDExOA==", "user": {"login": "zimmerk4", "id": 25258002, "node_id": "MDQ6VXNlcjI1MjU4MDAy", "avatar_url": "https://avatars2.githubusercontent.com/u/25258002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zimmerk4", "html_url": "https://github.com/zimmerk4", "followers_url": "https://api.github.com/users/zimmerk4/followers", "following_url": "https://api.github.com/users/zimmerk4/following{/other_user}", "gists_url": "https://api.github.com/users/zimmerk4/gists{/gist_id}", "starred_url": "https://api.github.com/users/zimmerk4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zimmerk4/subscriptions", "organizations_url": "https://api.github.com/users/zimmerk4/orgs", "repos_url": "https://api.github.com/users/zimmerk4/repos", "events_url": "https://api.github.com/users/zimmerk4/events{/privacy}", "received_events_url": "https://api.github.com/users/zimmerk4/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-29T17:13:27Z", "updated_at": "2018-05-29T17:13:27Z", "author_association": "NONE", "body_html": "<p>After poking around in the source, I noticed that there is an implementation of nearest neighbor for CPU and it looks like it was intended for GPU as well. <a href=\"https://github.com/tensorflow/tensorflow/blob/b12c3bb1157245adf6230a2e045831348f679b5b/tensorflow/core/kernels/crop_and_resize_op.cc\">Here</a> is the CPU implementation and you can see there is some intent to implement other resizing methods. Personally I am interested in Bicubic resizing. I've also noticed a bit of a speedup on GPU when using the combined crop_and_resize vs doing a bbox crop and resize separately. I would offer to work on the implementations but I have no experience creating such tensorflow ops from scratch. Specifically in figuring out the back propagation.</p>", "body_text": "After poking around in the source, I noticed that there is an implementation of nearest neighbor for CPU and it looks like it was intended for GPU as well. Here is the CPU implementation and you can see there is some intent to implement other resizing methods. Personally I am interested in Bicubic resizing. I've also noticed a bit of a speedup on GPU when using the combined crop_and_resize vs doing a bbox crop and resize separately. I would offer to work on the implementations but I have no experience creating such tensorflow ops from scratch. Specifically in figuring out the back propagation.", "body": "After poking around in the source, I noticed that there is an implementation of nearest neighbor for CPU and it looks like it was intended for GPU as well. [Here](https://github.com/tensorflow/tensorflow/blob/b12c3bb1157245adf6230a2e045831348f679b5b/tensorflow/core/kernels/crop_and_resize_op.cc) is the CPU implementation and you can see there is some intent to implement other resizing methods. Personally I am interested in Bicubic resizing. I've also noticed a bit of a speedup on GPU when using the combined crop_and_resize vs doing a bbox crop and resize separately. I would offer to work on the implementations but I have no experience creating such tensorflow ops from scratch. Specifically in figuring out the back propagation."}