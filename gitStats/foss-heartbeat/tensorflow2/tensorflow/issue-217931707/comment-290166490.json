{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/290166490", "html_url": "https://github.com/tensorflow/tensorflow/issues/8810#issuecomment-290166490", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8810", "id": 290166490, "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDE2NjQ5MA==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-29T17:41:08Z", "updated_at": "2017-03-29T17:41:08Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I think the failure is due to a type error. <code>(shape[0])</code> is a scalar <code>tf.Tensor</code>, whereas the <code>shape</code> argument to <code>tf.zeros()</code> must be a vector (1-D <code>tf.Tensor</code>). Note that <code>(shape[0])</code> and <code>(shape[0],)</code> have different types in Python, and the comma is necessary to turn the expression into a <code>tuple</code>. One of the following should work:</p>\n<div class=\"highlight highlight-source-python\"><pre>batch_inds <span class=\"pl-k\">=</span> tf.zeros(shape[<span class=\"pl-c1\">0</span>:<span class=\"pl-c1\">1</span>], <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.int32, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>batch_inds<span class=\"pl-pds\">'</span></span>) \n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> N.B. The extra comma here turns the scalar tensor into a `tuple` containing on scalar tensor.</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> TensorFlow will convert that to a 1-D tensor.</span>\nbatch_inds <span class=\"pl-k\">=</span> tf.zeros((shape[<span class=\"pl-c1\">0</span>],), <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.int32, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>batch_inds<span class=\"pl-pds\">'</span></span>) </pre></div>", "body_text": "I think the failure is due to a type error. (shape[0]) is a scalar tf.Tensor, whereas the shape argument to tf.zeros() must be a vector (1-D tf.Tensor). Note that (shape[0]) and (shape[0],) have different types in Python, and the comma is necessary to turn the expression into a tuple. One of the following should work:\nbatch_inds = tf.zeros(shape[0:1], dtype=tf.int32, name='batch_inds') \n\n# N.B. The extra comma here turns the scalar tensor into a `tuple` containing on scalar tensor.\n# TensorFlow will convert that to a 1-D tensor.\nbatch_inds = tf.zeros((shape[0],), dtype=tf.int32, name='batch_inds')", "body": "I think the failure is due to a type error. `(shape[0])` is a scalar `tf.Tensor`, whereas the `shape` argument to `tf.zeros()` must be a vector (1-D `tf.Tensor`). Note that `(shape[0])` and `(shape[0],)` have different types in Python, and the comma is necessary to turn the expression into a `tuple`. One of the following should work:\r\n\r\n```python\r\nbatch_inds = tf.zeros(shape[0:1], dtype=tf.int32, name='batch_inds') \r\n\r\n# N.B. The extra comma here turns the scalar tensor into a `tuple` containing on scalar tensor.\r\n# TensorFlow will convert that to a 1-D tensor.\r\nbatch_inds = tf.zeros((shape[0],), dtype=tf.int32, name='batch_inds') \r\n```"}