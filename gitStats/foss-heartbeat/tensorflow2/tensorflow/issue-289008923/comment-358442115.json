{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/358442115", "html_url": "https://github.com/tensorflow/tensorflow/issues/16165#issuecomment-358442115", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16165", "id": 358442115, "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODQ0MjExNQ==", "user": {"login": "xd009642", "id": 3472518, "node_id": "MDQ6VXNlcjM0NzI1MTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/3472518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xd009642", "html_url": "https://github.com/xd009642", "followers_url": "https://api.github.com/users/xd009642/followers", "following_url": "https://api.github.com/users/xd009642/following{/other_user}", "gists_url": "https://api.github.com/users/xd009642/gists{/gist_id}", "starred_url": "https://api.github.com/users/xd009642/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xd009642/subscriptions", "organizations_url": "https://api.github.com/users/xd009642/orgs", "repos_url": "https://api.github.com/users/xd009642/repos", "events_url": "https://api.github.com/users/xd009642/events{/privacy}", "received_events_url": "https://api.github.com/users/xd009642/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-17T20:55:48Z", "updated_at": "2018-01-17T21:00:35Z", "author_association": "NONE", "body_html": "<p>So firstly apologies, this is a large template based error. It got a lot further in the build and failed in list_kernels.cu</p>\n<p>Here is the full error it seems to be complaining about misuse of an std::tuple, so I'm guessing this is a glibc/nvcc issue? EDIT <a href=\"https://github.com/kokkos/kokkos/issues/1306\" data-hovercard-type=\"issue\" data-hovercard-url=\"/kokkos/kokkos/issues/1306/hovercard\">this</a> seems to be the same issue</p>\n<pre><code>/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/tuple: In instantiation of 'static constexpr bool std::_TC&lt;&lt;anonymous&gt;, _Elements&gt;::_NonNestedTuple() [with _SrcTuple = const std::tuple&lt;tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;&amp;; bool &lt;anonymous&gt; = true; _Elements = {tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece}]':\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/tuple:670:591:   required by substitution of 'template&lt;class ... _UElements, class _Dummy, typename std::enable_if&lt;((std::_TC&lt;((1 == sizeof... (_UElements)) &amp;&amp; (! std::is_same&lt;std::tuple&lt;tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;, std::tuple&lt;_Tps ...&gt; &gt;::value)), tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;::_ConstructibleTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;((1 == sizeof... (_UElements)) &amp;&amp; (! std::is_same&lt;std::tuple&lt;tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;, std::tuple&lt;_Tps ...&gt; &gt;::value)), tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;::_ImplicitlyConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(std::is_same&lt;_Dummy, void&gt;::value &amp;&amp; (1 == 1)), tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;::_NonNestedTuple&lt;const tuple&lt;_Tps ...&gt;&amp;&gt;()), bool&gt;::type &lt;anonymous&gt; &gt; constexpr std::tuple&lt;tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;::tuple(const std::tuple&lt;_Tps ...&gt;&amp;) [with _UElements = {tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece}; _Dummy = void; typename std::enable_if&lt;((std::_TC&lt;((1 == sizeof... (_UElements)) &amp;&amp; (! std::is_same&lt;std::tuple&lt;tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;, std::tuple&lt;_Tps ...&gt; &gt;::value)), tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;::_ConstructibleTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;((1 == sizeof... (_UElements)) &amp;&amp; (! std::is_same&lt;std::tuple&lt;tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;, std::tuple&lt;_Tps ...&gt; &gt;::value)), tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;::_ImplicitlyConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(std::is_same&lt;_Dummy, void&gt;::value &amp;&amp; (1 == 1)), tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;::_NonNestedTuple&lt;const tuple&lt;_Tps ...&gt;&amp;&gt;()), bool&gt;::type &lt;anonymous&gt; = &lt;missing&gt;]'\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/stl_pair.h:198:8:   required from 'struct std::pair&lt;const std::tuple&lt;tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;, std::function&lt;tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&amp;, tensorflow::Variant*)&gt; &gt;'\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/ext/aligned_buffer.h:84:62:   required from 'struct __gnu_cxx::__aligned_buffer&lt;std::pair&lt;const std::tuple&lt;tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;, std::function&lt;tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&amp;, tensorflow::Variant*)&gt; &gt; &gt;'\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/hashtable_policy.h:248:39:   required from 'struct std::__detail::_Hash_node_value_base&lt;std::pair&lt;const std::tuple&lt;tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;, std::function&lt;tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&amp;, tensorflow::Variant*)&gt; &gt; &gt;'\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/hashtable_policy.h:279:8:   required from 'struct std::__detail::_Hash_node&lt;std::pair&lt;const std::tuple&lt;tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;, std::function&lt;tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&amp;, tensorflow::Variant*)&gt; &gt;, true&gt;'\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/hashtable_policy.h:2007:65:   required from 'struct std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;const std::tuple&lt;tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;, std::function&lt;tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&amp;, tensorflow::Variant*)&gt; &gt;, true&gt; &gt; &gt;'\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/hashtable.h:173:7:   required from 'class std::_Hashtable&lt;std::tuple&lt;tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;, std::pair&lt;const std::tuple&lt;tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;, std::function&lt;tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&amp;, tensorflow::Variant*)&gt; &gt;, std::allocator&lt;std::pair&lt;const std::tuple&lt;tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;, std::function&lt;tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&amp;, tensorflow::Variant*)&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::tuple&lt;tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt; &gt;, tensorflow::UnaryVariantOpRegistry::TupleHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;'\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/unordered_map.h:104:12:   required from 'class std::unordered_map&lt;std::tuple&lt;tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;, std::function&lt;tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&amp;, tensorflow::Variant*)&gt;, tensorflow::UnaryVariantOpRegistry::TupleHash&gt;'\n./tensorflow/core/framework/variant_op_registry.h:183:162:   required from here\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/tuple:497:244: error: wrong number of template arguments (4, should be 2)\n       return  __and_&lt;__not_&lt;is_same&lt;tuple&lt;_Elements...&gt;,\n                                                                                                                                                                                                                                                    ^    \n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/type_traits:1547:8: note: provided for 'template&lt;class _From, class _To&gt; struct std::is_convertible'\n     struct is_convertible\n        ^~~~~~~~~~~~~~\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/tuple:504:1: error: body of constexpr function 'static constexpr bool std::_TC&lt;&lt;anonymous&gt;, _Elements&gt;::_NonNestedTuple() [with _SrcTuple = const std::tuple&lt;tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;&amp;; bool &lt;anonymous&gt; = true; _Elements = {tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece}]' not a return-statement\n     }\n ^\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/tuple: In instantiation of 'static constexpr bool std::_TC&lt;&lt;anonymous&gt;, _Elements&gt;::_NonNestedTuple() [with _SrcTuple = const std::tuple&lt;tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;&amp;; bool &lt;anonymous&gt; = true; _Elements = {tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece}]':\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/tuple:670:591:   required by substitution of 'template&lt;class ... _UElements, class _Dummy, typename std::enable_if&lt;((std::_TC&lt;((1 == sizeof... (_UElements)) &amp;&amp; (! std::is_same&lt;std::tuple&lt;tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;, std::tuple&lt;_Tps ...&gt; &gt;::value)), tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;::_ConstructibleTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;((1 == sizeof... (_UElements)) &amp;&amp; (! std::is_same&lt;std::tuple&lt;tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;, std::tuple&lt;_Tps ...&gt; &gt;::value)), tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;::_ImplicitlyConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(std::is_same&lt;_Dummy, void&gt;::value &amp;&amp; (1 == 1)), tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;::_NonNestedTuple&lt;const tuple&lt;_Tps ...&gt;&amp;&gt;()), bool&gt;::type &lt;anonymous&gt; &gt; constexpr std::tuple&lt;tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;::tuple(const std::tuple&lt;_Tps ...&gt;&amp;) [with _UElements = {tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece}; _Dummy = void; typename std::enable_if&lt;((std::_TC&lt;((1 == sizeof... (_UElements)) &amp;&amp; (! std::is_same&lt;std::tuple&lt;tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;, std::tuple&lt;_Tps ...&gt; &gt;::value)), tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;::_ConstructibleTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;((1 == sizeof... (_UElements)) &amp;&amp; (! std::is_same&lt;std::tuple&lt;tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;, std::tuple&lt;_Tps ...&gt; &gt;::value)), tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;::_ImplicitlyConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(std::is_same&lt;_Dummy, void&gt;::value &amp;&amp; (1 == 1)), tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;::_NonNestedTuple&lt;const tuple&lt;_Tps ...&gt;&amp;&gt;()), bool&gt;::type &lt;anonymous&gt; = &lt;missing&gt;]'\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/stl_pair.h:198:8:   required from 'struct std::pair&lt;const std::tuple&lt;tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;, std::function&lt;tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&amp;, const tensorflow::Variant&amp;, tensorflow::Variant*)&gt; &gt;'\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/ext/aligned_buffer.h:84:62:   required from 'struct __gnu_cxx::__aligned_buffer&lt;std::pair&lt;const std::tuple&lt;tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;, std::function&lt;tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&amp;, const tensorflow::Variant&amp;, tensorflow::Variant*)&gt; &gt; &gt;'\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/hashtable_policy.h:248:39:   required from 'struct std::__detail::_Hash_node_value_base&lt;std::pair&lt;const std::tuple&lt;tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;, std::function&lt;tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&amp;, const tensorflow::Variant&amp;, tensorflow::Variant*)&gt; &gt; &gt;'\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/hashtable_policy.h:279:8:   required from 'struct std::__detail::_Hash_node&lt;std::pair&lt;const std::tuple&lt;tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;, std::function&lt;tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&amp;, const tensorflow::Variant&amp;, tensorflow::Variant*)&gt; &gt;, true&gt;'\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/hashtable_policy.h:2007:65:   required from 'struct std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;const std::tuple&lt;tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;, std::function&lt;tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&amp;, const tensorflow::Variant&amp;, tensorflow::Variant*)&gt; &gt;, true&gt; &gt; &gt;'\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/hashtable.h:173:7:   required from 'class std::_Hashtable&lt;std::tuple&lt;tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;, std::pair&lt;const std::tuple&lt;tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;, std::function&lt;tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&amp;, const tensorflow::Variant&amp;, tensorflow::Variant*)&gt; &gt;, std::allocator&lt;std::pair&lt;const std::tuple&lt;tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;, std::function&lt;tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&amp;, const tensorflow::Variant&amp;, tensorflow::Variant*)&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::tuple&lt;tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt; &gt;, tensorflow::UnaryVariantOpRegistry::TupleHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;'\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/unordered_map.h:104:12:   required from 'class std::unordered_map&lt;std::tuple&lt;tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;, std::function&lt;tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&amp;, const tensorflow::Variant&amp;, tensorflow::Variant*)&gt;, tensorflow::UnaryVariantOpRegistry::TupleHash&gt;'\n./tensorflow/core/framework/variant_op_registry.h:186:180:   required from here\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/tuple:497:244: error: wrong number of template arguments (4, should be 2)\n       return  __and_&lt;__not_&lt;is_same&lt;tuple&lt;_Elements...&gt;,\n                                                                                                                                                                                                                                                    ^    \n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/type_traits:1547:8: note: provided for 'template&lt;class _From, class _To&gt; struct std::is_convertible'\n     struct is_convertible\n        ^~~~~~~~~~~~~~\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/tuple:504:1: error: body of constexpr function 'static constexpr bool std::_TC&lt;&lt;anonymous&gt;, _Elements&gt;::_NonNestedTuple() [with _SrcTuple = const std::tuple&lt;tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece&gt;&amp;; bool &lt;anonymous&gt; = true; _Elements = {tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece}]' not a return-statement\n     }\n ^\nERROR: /home/xd009642/3rdparty/tensorflow/tensorflow/core/kernels/BUILD:1884:1: output 'tensorflow/core/kernels/_objs/list_kernels_gpu/tensorflow/core/kernels/list_kernels.cu.pic.o' was not created\nERROR: /home/xd009642/3rdparty/tensorflow/tensorflow/core/kernels/BUILD:1884:1: not all outputs were created or valid\n</code></pre>", "body_text": "So firstly apologies, this is a large template based error. It got a lot further in the build and failed in list_kernels.cu\nHere is the full error it seems to be complaining about misuse of an std::tuple, so I'm guessing this is a glibc/nvcc issue? EDIT this seems to be the same issue\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/tuple: In instantiation of 'static constexpr bool std::_TC<<anonymous>, _Elements>::_NonNestedTuple() [with _SrcTuple = const std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>&; bool <anonymous> = true; _Elements = {tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece}]':\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/tuple:670:591:   required by substitution of 'template<class ... _UElements, class _Dummy, typename std::enable_if<((std::_TC<((1 == sizeof... (_UElements)) && (! std::is_same<std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::tuple<_Tps ...> >::value)), tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>::_ConstructibleTuple<_UElements ...>() && std::_TC<((1 == sizeof... (_UElements)) && (! std::is_same<std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::tuple<_Tps ...> >::value)), tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>::_ImplicitlyConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1 == 1)), tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>::_NonNestedTuple<const tuple<_Tps ...>&>()), bool>::type <anonymous> > constexpr std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>::tuple(const std::tuple<_Tps ...>&) [with _UElements = {tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece}; _Dummy = void; typename std::enable_if<((std::_TC<((1 == sizeof... (_UElements)) && (! std::is_same<std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::tuple<_Tps ...> >::value)), tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>::_ConstructibleTuple<_UElements ...>() && std::_TC<((1 == sizeof... (_UElements)) && (! std::is_same<std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::tuple<_Tps ...> >::value)), tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>::_ImplicitlyConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1 == 1)), tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>::_NonNestedTuple<const tuple<_Tps ...>&>()), bool>::type <anonymous> = <missing>]'\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/stl_pair.h:198:8:   required from 'struct std::pair<const std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&, tensorflow::Variant*)> >'\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/ext/aligned_buffer.h:84:62:   required from 'struct __gnu_cxx::__aligned_buffer<std::pair<const std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&, tensorflow::Variant*)> > >'\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/hashtable_policy.h:248:39:   required from 'struct std::__detail::_Hash_node_value_base<std::pair<const std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&, tensorflow::Variant*)> > >'\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/hashtable_policy.h:279:8:   required from 'struct std::__detail::_Hash_node<std::pair<const std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&, tensorflow::Variant*)> >, true>'\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/hashtable_policy.h:2007:65:   required from 'struct std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&, tensorflow::Variant*)> >, true> > >'\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/hashtable.h:173:7:   required from 'class std::_Hashtable<std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::pair<const std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&, tensorflow::Variant*)> >, std::allocator<std::pair<const std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&, tensorflow::Variant*)> > >, std::__detail::_Select1st, std::equal_to<std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece> >, tensorflow::UnaryVariantOpRegistry::TupleHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >'\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/unordered_map.h:104:12:   required from 'class std::unordered_map<std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&, tensorflow::Variant*)>, tensorflow::UnaryVariantOpRegistry::TupleHash>'\n./tensorflow/core/framework/variant_op_registry.h:183:162:   required from here\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/tuple:497:244: error: wrong number of template arguments (4, should be 2)\n       return  __and_<__not_<is_same<tuple<_Elements...>,\n                                                                                                                                                                                                                                                    ^    \n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/type_traits:1547:8: note: provided for 'template<class _From, class _To> struct std::is_convertible'\n     struct is_convertible\n        ^~~~~~~~~~~~~~\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/tuple:504:1: error: body of constexpr function 'static constexpr bool std::_TC<<anonymous>, _Elements>::_NonNestedTuple() [with _SrcTuple = const std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>&; bool <anonymous> = true; _Elements = {tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece}]' not a return-statement\n     }\n ^\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/tuple: In instantiation of 'static constexpr bool std::_TC<<anonymous>, _Elements>::_NonNestedTuple() [with _SrcTuple = const std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>&; bool <anonymous> = true; _Elements = {tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece}]':\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/tuple:670:591:   required by substitution of 'template<class ... _UElements, class _Dummy, typename std::enable_if<((std::_TC<((1 == sizeof... (_UElements)) && (! std::is_same<std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::tuple<_Tps ...> >::value)), tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>::_ConstructibleTuple<_UElements ...>() && std::_TC<((1 == sizeof... (_UElements)) && (! std::is_same<std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::tuple<_Tps ...> >::value)), tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>::_ImplicitlyConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1 == 1)), tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>::_NonNestedTuple<const tuple<_Tps ...>&>()), bool>::type <anonymous> > constexpr std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>::tuple(const std::tuple<_Tps ...>&) [with _UElements = {tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece}; _Dummy = void; typename std::enable_if<((std::_TC<((1 == sizeof... (_UElements)) && (! std::is_same<std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::tuple<_Tps ...> >::value)), tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>::_ConstructibleTuple<_UElements ...>() && std::_TC<((1 == sizeof... (_UElements)) && (! std::is_same<std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::tuple<_Tps ...> >::value)), tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>::_ImplicitlyConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1 == 1)), tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>::_NonNestedTuple<const tuple<_Tps ...>&>()), bool>::type <anonymous> = <missing>]'\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/stl_pair.h:198:8:   required from 'struct std::pair<const std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&, const tensorflow::Variant&, tensorflow::Variant*)> >'\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/ext/aligned_buffer.h:84:62:   required from 'struct __gnu_cxx::__aligned_buffer<std::pair<const std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&, const tensorflow::Variant&, tensorflow::Variant*)> > >'\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/hashtable_policy.h:248:39:   required from 'struct std::__detail::_Hash_node_value_base<std::pair<const std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&, const tensorflow::Variant&, tensorflow::Variant*)> > >'\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/hashtable_policy.h:279:8:   required from 'struct std::__detail::_Hash_node<std::pair<const std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&, const tensorflow::Variant&, tensorflow::Variant*)> >, true>'\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/hashtable_policy.h:2007:65:   required from 'struct std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&, const tensorflow::Variant&, tensorflow::Variant*)> >, true> > >'\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/hashtable.h:173:7:   required from 'class std::_Hashtable<std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::pair<const std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&, const tensorflow::Variant&, tensorflow::Variant*)> >, std::allocator<std::pair<const std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&, const tensorflow::Variant&, tensorflow::Variant*)> > >, std::__detail::_Select1st, std::equal_to<std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece> >, tensorflow::UnaryVariantOpRegistry::TupleHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >'\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/unordered_map.h:104:12:   required from 'class std::unordered_map<std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&, const tensorflow::Variant&, tensorflow::Variant*)>, tensorflow::UnaryVariantOpRegistry::TupleHash>'\n./tensorflow/core/framework/variant_op_registry.h:186:180:   required from here\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/tuple:497:244: error: wrong number of template arguments (4, should be 2)\n       return  __and_<__not_<is_same<tuple<_Elements...>,\n                                                                                                                                                                                                                                                    ^    \n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/type_traits:1547:8: note: provided for 'template<class _From, class _To> struct std::is_convertible'\n     struct is_convertible\n        ^~~~~~~~~~~~~~\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/tuple:504:1: error: body of constexpr function 'static constexpr bool std::_TC<<anonymous>, _Elements>::_NonNestedTuple() [with _SrcTuple = const std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>&; bool <anonymous> = true; _Elements = {tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece}]' not a return-statement\n     }\n ^\nERROR: /home/xd009642/3rdparty/tensorflow/tensorflow/core/kernels/BUILD:1884:1: output 'tensorflow/core/kernels/_objs/list_kernels_gpu/tensorflow/core/kernels/list_kernels.cu.pic.o' was not created\nERROR: /home/xd009642/3rdparty/tensorflow/tensorflow/core/kernels/BUILD:1884:1: not all outputs were created or valid", "body": "So firstly apologies, this is a large template based error. It got a lot further in the build and failed in list_kernels.cu\r\n\r\nHere is the full error it seems to be complaining about misuse of an std::tuple, so I'm guessing this is a glibc/nvcc issue? EDIT [this](https://github.com/kokkos/kokkos/issues/1306) seems to be the same issue\r\n\r\n```\r\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/tuple: In instantiation of 'static constexpr bool std::_TC<<anonymous>, _Elements>::_NonNestedTuple() [with _SrcTuple = const std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>&; bool <anonymous> = true; _Elements = {tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece}]':\r\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/tuple:670:591:   required by substitution of 'template<class ... _UElements, class _Dummy, typename std::enable_if<((std::_TC<((1 == sizeof... (_UElements)) && (! std::is_same<std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::tuple<_Tps ...> >::value)), tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>::_ConstructibleTuple<_UElements ...>() && std::_TC<((1 == sizeof... (_UElements)) && (! std::is_same<std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::tuple<_Tps ...> >::value)), tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>::_ImplicitlyConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1 == 1)), tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>::_NonNestedTuple<const tuple<_Tps ...>&>()), bool>::type <anonymous> > constexpr std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>::tuple(const std::tuple<_Tps ...>&) [with _UElements = {tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece}; _Dummy = void; typename std::enable_if<((std::_TC<((1 == sizeof... (_UElements)) && (! std::is_same<std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::tuple<_Tps ...> >::value)), tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>::_ConstructibleTuple<_UElements ...>() && std::_TC<((1 == sizeof... (_UElements)) && (! std::is_same<std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::tuple<_Tps ...> >::value)), tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>::_ImplicitlyConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1 == 1)), tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>::_NonNestedTuple<const tuple<_Tps ...>&>()), bool>::type <anonymous> = <missing>]'\r\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/stl_pair.h:198:8:   required from 'struct std::pair<const std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&, tensorflow::Variant*)> >'\r\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/ext/aligned_buffer.h:84:62:   required from 'struct __gnu_cxx::__aligned_buffer<std::pair<const std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&, tensorflow::Variant*)> > >'\r\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/hashtable_policy.h:248:39:   required from 'struct std::__detail::_Hash_node_value_base<std::pair<const std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&, tensorflow::Variant*)> > >'\r\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/hashtable_policy.h:279:8:   required from 'struct std::__detail::_Hash_node<std::pair<const std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&, tensorflow::Variant*)> >, true>'\r\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/hashtable_policy.h:2007:65:   required from 'struct std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&, tensorflow::Variant*)> >, true> > >'\r\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/hashtable.h:173:7:   required from 'class std::_Hashtable<std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::pair<const std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&, tensorflow::Variant*)> >, std::allocator<std::pair<const std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&, tensorflow::Variant*)> > >, std::__detail::_Select1st, std::equal_to<std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece> >, tensorflow::UnaryVariantOpRegistry::TupleHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >'\r\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/unordered_map.h:104:12:   required from 'class std::unordered_map<std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&, tensorflow::Variant*)>, tensorflow::UnaryVariantOpRegistry::TupleHash>'\r\n./tensorflow/core/framework/variant_op_registry.h:183:162:   required from here\r\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/tuple:497:244: error: wrong number of template arguments (4, should be 2)\r\n       return  __and_<__not_<is_same<tuple<_Elements...>,\r\n                                                                                                                                                                                                                                                    ^    \r\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/type_traits:1547:8: note: provided for 'template<class _From, class _To> struct std::is_convertible'\r\n     struct is_convertible\r\n        ^~~~~~~~~~~~~~\r\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/tuple:504:1: error: body of constexpr function 'static constexpr bool std::_TC<<anonymous>, _Elements>::_NonNestedTuple() [with _SrcTuple = const std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>&; bool <anonymous> = true; _Elements = {tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece}]' not a return-statement\r\n     }\r\n ^\r\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/tuple: In instantiation of 'static constexpr bool std::_TC<<anonymous>, _Elements>::_NonNestedTuple() [with _SrcTuple = const std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>&; bool <anonymous> = true; _Elements = {tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece}]':\r\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/tuple:670:591:   required by substitution of 'template<class ... _UElements, class _Dummy, typename std::enable_if<((std::_TC<((1 == sizeof... (_UElements)) && (! std::is_same<std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::tuple<_Tps ...> >::value)), tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>::_ConstructibleTuple<_UElements ...>() && std::_TC<((1 == sizeof... (_UElements)) && (! std::is_same<std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::tuple<_Tps ...> >::value)), tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>::_ImplicitlyConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1 == 1)), tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>::_NonNestedTuple<const tuple<_Tps ...>&>()), bool>::type <anonymous> > constexpr std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>::tuple(const std::tuple<_Tps ...>&) [with _UElements = {tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece}; _Dummy = void; typename std::enable_if<((std::_TC<((1 == sizeof... (_UElements)) && (! std::is_same<std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::tuple<_Tps ...> >::value)), tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>::_ConstructibleTuple<_UElements ...>() && std::_TC<((1 == sizeof... (_UElements)) && (! std::is_same<std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::tuple<_Tps ...> >::value)), tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>::_ImplicitlyConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1 == 1)), tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>::_NonNestedTuple<const tuple<_Tps ...>&>()), bool>::type <anonymous> = <missing>]'\r\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/stl_pair.h:198:8:   required from 'struct std::pair<const std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&, const tensorflow::Variant&, tensorflow::Variant*)> >'\r\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/ext/aligned_buffer.h:84:62:   required from 'struct __gnu_cxx::__aligned_buffer<std::pair<const std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&, const tensorflow::Variant&, tensorflow::Variant*)> > >'\r\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/hashtable_policy.h:248:39:   required from 'struct std::__detail::_Hash_node_value_base<std::pair<const std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&, const tensorflow::Variant&, tensorflow::Variant*)> > >'\r\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/hashtable_policy.h:279:8:   required from 'struct std::__detail::_Hash_node<std::pair<const std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&, const tensorflow::Variant&, tensorflow::Variant*)> >, true>'\r\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/hashtable_policy.h:2007:65:   required from 'struct std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<const std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&, const tensorflow::Variant&, tensorflow::Variant*)> >, true> > >'\r\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/hashtable.h:173:7:   required from 'class std::_Hashtable<std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::pair<const std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&, const tensorflow::Variant&, tensorflow::Variant*)> >, std::allocator<std::pair<const std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&, const tensorflow::Variant&, tensorflow::Variant*)> > >, std::__detail::_Select1st, std::equal_to<std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece> >, tensorflow::UnaryVariantOpRegistry::TupleHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >'\r\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/bits/unordered_map.h:104:12:   required from 'class std::unordered_map<std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status(tensorflow::OpKernelContext*, const tensorflow::Variant&, const tensorflow::Variant&, tensorflow::Variant*)>, tensorflow::UnaryVariantOpRegistry::TupleHash>'\r\n./tensorflow/core/framework/variant_op_registry.h:186:180:   required from here\r\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/tuple:497:244: error: wrong number of template arguments (4, should be 2)\r\n       return  __and_<__not_<is_same<tuple<_Elements...>,\r\n                                                                                                                                                                                                                                                    ^    \r\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/type_traits:1547:8: note: provided for 'template<class _From, class _To> struct std::is_convertible'\r\n     struct is_convertible\r\n        ^~~~~~~~~~~~~~\r\n/usr/lib/gcc/x86_64-redhat-linux/7/../../../../include/c++/7/tuple:504:1: error: body of constexpr function 'static constexpr bool std::_TC<<anonymous>, _Elements>::_NonNestedTuple() [with _SrcTuple = const std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>&; bool <anonymous> = true; _Elements = {tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece}]' not a return-statement\r\n     }\r\n ^\r\nERROR: /home/xd009642/3rdparty/tensorflow/tensorflow/core/kernels/BUILD:1884:1: output 'tensorflow/core/kernels/_objs/list_kernels_gpu/tensorflow/core/kernels/list_kernels.cu.pic.o' was not created\r\nERROR: /home/xd009642/3rdparty/tensorflow/tensorflow/core/kernels/BUILD:1884:1: not all outputs were created or valid\r\n```"}