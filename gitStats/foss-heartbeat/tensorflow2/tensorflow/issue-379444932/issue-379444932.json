{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23654", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23654/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23654/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23654/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23654", "id": 379444932, "node_id": "MDU6SXNzdWUzNzk0NDQ5MzI=", "number": 23654, "title": "tf.contrib.image.transform lead to a ValueError in new releases of tensorflow", "user": {"login": "Goldesel23", "id": 10371630, "node_id": "MDQ6VXNlcjEwMzcxNjMw", "avatar_url": "https://avatars3.githubusercontent.com/u/10371630?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Goldesel23", "html_url": "https://github.com/Goldesel23", "followers_url": "https://api.github.com/users/Goldesel23/followers", "following_url": "https://api.github.com/users/Goldesel23/following{/other_user}", "gists_url": "https://api.github.com/users/Goldesel23/gists{/gist_id}", "starred_url": "https://api.github.com/users/Goldesel23/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Goldesel23/subscriptions", "organizations_url": "https://api.github.com/users/Goldesel23/orgs", "repos_url": "https://api.github.com/users/Goldesel23/repos", "events_url": "https://api.github.com/users/Goldesel23/events{/privacy}", "received_events_url": "https://api.github.com/users/Goldesel23/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-11-10T17:58:05Z", "updated_at": "2018-11-13T14:36:32Z", "closed_at": null, "author_association": "NONE", "body_html": "<p><em>Please make sure that this is a bug. As per our <a href=\"https://github.com/tensorflow/tensorflow/blob/master/ISSUES.md\">GitHub Policy</a>, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template</em></p>\n<p><strong>System information</strong></p>\n<ul>\n<li>Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes</li>\n<li>OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Manjaro 18.0</li>\n<li>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: -</li>\n<li>TensorFlow installed from (source or binary): python-tensorflow-opt-cuda from manjaro repositories</li>\n<li>TensorFlow version (use command below): 1.11</li>\n<li>Python version: 3.6/3.7</li>\n<li>Bazel version (if compiling from source): -</li>\n<li>GCC/Compiler version (if compiling from source): -</li>\n<li>CUDA/cuDNN version: 10.0.130-2 /   7.3.0-1</li>\n<li>GPU model and memory: 1080Ti 11GB</li>\n</ul>\n<p>You can collect some of this information using our environment capture <a href=\"https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\">script</a><br>\nYou can also obtain the TensorFlow version with<br>\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"</p>\n<p><strong>Describe the current behavior</strong></p>\n<p>After the release that Allow a different output shape from the input in <code>tf.contrib.image.transform</code> code that applied this function stopped working with a value error. For exampleon previous versions, using eager execution this worked:</p>\n<p><code>image = tf.contrib.image.translate(image, random_translation, 'NEAREST') </code></p>\n<p>But after this change I get a <code>ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()`` on </code>tf.contrib.image.transform<code>on the condition of the line 273-275 of</code>tensorflow/tensorflow/contrib/image/python/ops/image_ops.py`, where this condition is triggered (caused by empty output shape call in tf.contrib.image.translate:</p>\n<pre><code>if output_shape is None:\n      output_shape = tensor_util.constant_value(\n          array_ops.shape(images)[1:3]) or array_ops.shape(images)[1:3]\n</code></pre>\n<p><strong>Describe the expected behavior</strong></p>\n<p>If instead of <code>tf.contrib.image.transform</code> I run it with <code>output_shape</code> argument:</p>\n<p><code>random_transformations = tf.contrib.image.translations_to_projective_transforms(random_shifts) images = tf.contrib.image.transform(image, random_transformations, 'NEAREST',                                       output_shape=tf.convert_to_tensor(images.numpy().shape[1:3], dtype=np.int32))</code></p>\n<p>everything goes as expected. So I guess that the issue in on passing output_shape=None in line 122-126 of `tensorflow/tensorflow/contrib/image/python/ops/image_ops.py:</p>\n<pre><code>def translate(images, translations, interpolation=\"NEAREST\", name=None):\n  \"\"\"Translate image(s) by the passed vectors(s).\n  Args:\n    images: A tensor of shape (num_images, num_rows, num_columns, num_channels)\n        (NHWC), (num_rows, num_columns, num_channels) (HWC), or\n        (num_rows, num_columns) (HW). The rank must be statically known (the\n        shape is not `TensorShape(None)`.\n    translations: A vector representing [dx, dy] or (if images has rank 4)\n        a matrix of length num_images, with a [dx, dy] vector for each image in\n        the batch.\n    interpolation: Interpolation mode. Supported values: \"NEAREST\", \"BILINEAR\".\n    name: The name of the op.\n  Returns:\n    Image(s) with the same type and shape as `images`, translated by the given\n        vector(s). Empty space due to the translation will be filled with zeros.\n  Raises:\n    TypeError: If `image` is an invalid type.\n  \"\"\"\n  with ops.name_scope(name, \"translate\"):\n    return transform(\n        images,\n        translations_to_projective_transforms(translations),\n        interpolation=interpolation)\n\n</code></pre>", "body_text": "Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Manjaro 18.0\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: -\nTensorFlow installed from (source or binary): python-tensorflow-opt-cuda from manjaro repositories\nTensorFlow version (use command below): 1.11\nPython version: 3.6/3.7\nBazel version (if compiling from source): -\nGCC/Compiler version (if compiling from source): -\nCUDA/cuDNN version: 10.0.130-2 /   7.3.0-1\nGPU model and memory: 1080Ti 11GB\n\nYou can collect some of this information using our environment capture script\nYou can also obtain the TensorFlow version with\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\nDescribe the current behavior\nAfter the release that Allow a different output shape from the input in tf.contrib.image.transform code that applied this function stopped working with a value error. For exampleon previous versions, using eager execution this worked:\nimage = tf.contrib.image.translate(image, random_translation, 'NEAREST') \nBut after this change I get a ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()`` on tf.contrib.image.transformon the condition of the line 273-275 oftensorflow/tensorflow/contrib/image/python/ops/image_ops.py`, where this condition is triggered (caused by empty output shape call in tf.contrib.image.translate:\nif output_shape is None:\n      output_shape = tensor_util.constant_value(\n          array_ops.shape(images)[1:3]) or array_ops.shape(images)[1:3]\n\nDescribe the expected behavior\nIf instead of tf.contrib.image.transform I run it with output_shape argument:\nrandom_transformations = tf.contrib.image.translations_to_projective_transforms(random_shifts) images = tf.contrib.image.transform(image, random_transformations, 'NEAREST',                                       output_shape=tf.convert_to_tensor(images.numpy().shape[1:3], dtype=np.int32))\neverything goes as expected. So I guess that the issue in on passing output_shape=None in line 122-126 of `tensorflow/tensorflow/contrib/image/python/ops/image_ops.py:\ndef translate(images, translations, interpolation=\"NEAREST\", name=None):\n  \"\"\"Translate image(s) by the passed vectors(s).\n  Args:\n    images: A tensor of shape (num_images, num_rows, num_columns, num_channels)\n        (NHWC), (num_rows, num_columns, num_channels) (HWC), or\n        (num_rows, num_columns) (HW). The rank must be statically known (the\n        shape is not `TensorShape(None)`.\n    translations: A vector representing [dx, dy] or (if images has rank 4)\n        a matrix of length num_images, with a [dx, dy] vector for each image in\n        the batch.\n    interpolation: Interpolation mode. Supported values: \"NEAREST\", \"BILINEAR\".\n    name: The name of the op.\n  Returns:\n    Image(s) with the same type and shape as `images`, translated by the given\n        vector(s). Empty space due to the translation will be filled with zeros.\n  Raises:\n    TypeError: If `image` is an invalid type.\n  \"\"\"\n  with ops.name_scope(name, \"translate\"):\n    return transform(\n        images,\n        translations_to_projective_transforms(translations),\n        interpolation=interpolation)", "body": "<em>Please make sure that this is a bug. As per our [GitHub Policy](https://github.com/tensorflow/tensorflow/blob/master/ISSUES.md), we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template</em>\r\n\r\n**System information**\r\n- Have I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Manjaro 18.0\r\n- Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: -\r\n- TensorFlow installed from (source or binary): python-tensorflow-opt-cuda from manjaro repositories \r\n- TensorFlow version (use command below): 1.11\r\n- Python version: 3.6/3.7\r\n- Bazel version (if compiling from source): -\r\n- GCC/Compiler version (if compiling from source): -\r\n- CUDA/cuDNN version: 10.0.130-2 /   7.3.0-1\r\n- GPU model and memory: 1080Ti 11GB\r\n\r\n\r\nYou can collect some of this information using our environment capture [script](https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh)\r\nYou can also obtain the TensorFlow version with\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n**Describe the current behavior**\r\n\r\nAfter the release that Allow a different output shape from the input in `tf.contrib.image.transform` code that applied this function stopped working with a value error. For exampleon previous versions, using eager execution this worked:\r\n\r\n`image = tf.contrib.image.translate(image, random_translation, 'NEAREST') `\r\n\r\nBut after this change I get a `ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()`` on `tf.contrib.image.transform` on the condition of the line 273-275 of `tensorflow/tensorflow/contrib/image/python/ops/image_ops.py`, where this condition is triggered (caused by empty output shape call in tf.contrib.image.translate:\r\n\r\n```\r\nif output_shape is None:\r\n      output_shape = tensor_util.constant_value(\r\n          array_ops.shape(images)[1:3]) or array_ops.shape(images)[1:3]\r\n```\r\n\r\n**Describe the expected behavior**\r\n\r\nIf instead of `tf.contrib.image.transform` I run it with `output_shape` argument:\r\n\r\n`random_transformations = tf.contrib.image.translations_to_projective_transforms(random_shifts)\r\nimages = tf.contrib.image.transform(image, random_transformations, 'NEAREST',                                       output_shape=tf.convert_to_tensor(images.numpy().shape[1:3], dtype=np.int32))`\r\n\r\neverything goes as expected. So I guess that the issue in on passing output_shape=None in line 122-126 of `tensorflow/tensorflow/contrib/image/python/ops/image_ops.py:\r\n\r\n```\r\ndef translate(images, translations, interpolation=\"NEAREST\", name=None):\r\n  \"\"\"Translate image(s) by the passed vectors(s).\r\n  Args:\r\n    images: A tensor of shape (num_images, num_rows, num_columns, num_channels)\r\n        (NHWC), (num_rows, num_columns, num_channels) (HWC), or\r\n        (num_rows, num_columns) (HW). The rank must be statically known (the\r\n        shape is not `TensorShape(None)`.\r\n    translations: A vector representing [dx, dy] or (if images has rank 4)\r\n        a matrix of length num_images, with a [dx, dy] vector for each image in\r\n        the batch.\r\n    interpolation: Interpolation mode. Supported values: \"NEAREST\", \"BILINEAR\".\r\n    name: The name of the op.\r\n  Returns:\r\n    Image(s) with the same type and shape as `images`, translated by the given\r\n        vector(s). Empty space due to the translation will be filled with zeros.\r\n  Raises:\r\n    TypeError: If `image` is an invalid type.\r\n  \"\"\"\r\n  with ops.name_scope(name, \"translate\"):\r\n    return transform(\r\n        images,\r\n        translations_to_projective_transforms(translations),\r\n        interpolation=interpolation)\r\n\r\n```"}