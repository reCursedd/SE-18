{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/270831337", "html_url": "https://github.com/tensorflow/tensorflow/issues/6476#issuecomment-270831337", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6476", "id": 270831337, "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDgzMTMzNw==", "user": {"login": "michaelisard", "id": 5376757, "node_id": "MDQ6VXNlcjUzNzY3NTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5376757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelisard", "html_url": "https://github.com/michaelisard", "followers_url": "https://api.github.com/users/michaelisard/followers", "following_url": "https://api.github.com/users/michaelisard/following{/other_user}", "gists_url": "https://api.github.com/users/michaelisard/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelisard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelisard/subscriptions", "organizations_url": "https://api.github.com/users/michaelisard/orgs", "repos_url": "https://api.github.com/users/michaelisard/repos", "events_url": "https://api.github.com/users/michaelisard/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelisard/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-06T04:55:23Z", "updated_at": "2017-01-06T04:55:23Z", "author_association": "MEMBER", "body_html": "<p>It's possible you could use TensorArray for this. Overall though I'm not sure you are going to be happy with the results. It sounds as if what you would like to do is some kind of windowed streaming computation (though you are keeping it quite mysterious). Right now, TensorFlow may not be well suited to that type of computation. For example, if you took the sum of your price data, then adjusted the window, then recomputed the sum, TensorFlow, would recompute the entire sum, whereas you would probably prefer it to simply subtract the entries that were removed from the window, and add the entries that entered the window. I'm not sure what the use cases are where the copy to shift the window in memory would take a large fraction of your processing time, but the downstream computation that was re-executed would be comparatively cheap. Of course I'm sure there are such cases, but without a good sense of them we would find it hard to prioritize support.</p>\n<p>I guess if you can motivate the use case we can see if it makes sense to consider a circular extension to TensorArray. CC <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1794715\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ebrevdo\">@ebrevdo</a>.</p>", "body_text": "It's possible you could use TensorArray for this. Overall though I'm not sure you are going to be happy with the results. It sounds as if what you would like to do is some kind of windowed streaming computation (though you are keeping it quite mysterious). Right now, TensorFlow may not be well suited to that type of computation. For example, if you took the sum of your price data, then adjusted the window, then recomputed the sum, TensorFlow, would recompute the entire sum, whereas you would probably prefer it to simply subtract the entries that were removed from the window, and add the entries that entered the window. I'm not sure what the use cases are where the copy to shift the window in memory would take a large fraction of your processing time, but the downstream computation that was re-executed would be comparatively cheap. Of course I'm sure there are such cases, but without a good sense of them we would find it hard to prioritize support.\nI guess if you can motivate the use case we can see if it makes sense to consider a circular extension to TensorArray. CC @ebrevdo.", "body": "It's possible you could use TensorArray for this. Overall though I'm not sure you are going to be happy with the results. It sounds as if what you would like to do is some kind of windowed streaming computation (though you are keeping it quite mysterious). Right now, TensorFlow may not be well suited to that type of computation. For example, if you took the sum of your price data, then adjusted the window, then recomputed the sum, TensorFlow, would recompute the entire sum, whereas you would probably prefer it to simply subtract the entries that were removed from the window, and add the entries that entered the window. I'm not sure what the use cases are where the copy to shift the window in memory would take a large fraction of your processing time, but the downstream computation that was re-executed would be comparatively cheap. Of course I'm sure there are such cases, but without a good sense of them we would find it hard to prioritize support.\r\n\r\nI guess if you can motivate the use case we can see if it makes sense to consider a circular extension to TensorArray. CC @ebrevdo."}