{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/270881519", "html_url": "https://github.com/tensorflow/tensorflow/issues/6476#issuecomment-270881519", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6476", "id": 270881519, "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDg4MTUxOQ==", "user": {"login": "sirinath", "id": 637415, "node_id": "MDQ6VXNlcjYzNzQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/637415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sirinath", "html_url": "https://github.com/sirinath", "followers_url": "https://api.github.com/users/sirinath/followers", "following_url": "https://api.github.com/users/sirinath/following{/other_user}", "gists_url": "https://api.github.com/users/sirinath/gists{/gist_id}", "starred_url": "https://api.github.com/users/sirinath/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sirinath/subscriptions", "organizations_url": "https://api.github.com/users/sirinath/orgs", "repos_url": "https://api.github.com/users/sirinath/repos", "events_url": "https://api.github.com/users/sirinath/events{/privacy}", "received_events_url": "https://api.github.com/users/sirinath/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-06T11:00:54Z", "updated_at": "2017-01-06T12:03:04Z", "author_association": "NONE", "body_html": "<p>Yes. It is windowed streaming with efficient transfer between structures which can have multiple dimensions. If the transfers between the data structures are globally optimised based on data propagation this would also help.</p>\n<p>I am looking for as much juice that can possibly got from the system with time for calculations being sub microseconds.</p>\n<p>Each axis or slice will be like a ring buffer to which you can add and consume data. Also ability to partition the streaming axis will help. E.g. some stock prices quotes do not update very often and I have a matrix of stock prices I will not get a complete vector of new stock prices each time. So you roll the slice or partition when new data comes in than whole row or column at a time though the latter maybe more optimal for cases you can update vector at a time.</p>\n<p>In multiple dimensions what you are appending has the same dimensions as the table except for the time dimension on which you are rolling (circularly appending) on.</p>", "body_text": "Yes. It is windowed streaming with efficient transfer between structures which can have multiple dimensions. If the transfers between the data structures are globally optimised based on data propagation this would also help.\nI am looking for as much juice that can possibly got from the system with time for calculations being sub microseconds.\nEach axis or slice will be like a ring buffer to which you can add and consume data. Also ability to partition the streaming axis will help. E.g. some stock prices quotes do not update very often and I have a matrix of stock prices I will not get a complete vector of new stock prices each time. So you roll the slice or partition when new data comes in than whole row or column at a time though the latter maybe more optimal for cases you can update vector at a time.\nIn multiple dimensions what you are appending has the same dimensions as the table except for the time dimension on which you are rolling (circularly appending) on.", "body": "Yes. It is windowed streaming with efficient transfer between structures which can have multiple dimensions. If the transfers between the data structures are globally optimised based on data propagation this would also help.\r\n\r\nI am looking for as much juice that can possibly got from the system with time for calculations being sub microseconds.\r\n\r\nEach axis or slice will be like a ring buffer to which you can add and consume data. Also ability to partition the streaming axis will help. E.g. some stock prices quotes do not update very often and I have a matrix of stock prices I will not get a complete vector of new stock prices each time. So you roll the slice or partition when new data comes in than whole row or column at a time though the latter maybe more optimal for cases you can update vector at a time.\r\n\r\nIn multiple dimensions what you are appending has the same dimensions as the table except for the time dimension on which you are rolling (circularly appending) on."}