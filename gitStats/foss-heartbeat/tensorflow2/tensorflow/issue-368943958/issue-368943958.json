{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22885", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22885/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22885/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22885/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22885", "id": 368943958, "node_id": "MDU6SXNzdWUzNjg5NDM5NTg=", "number": 22885, "title": "Segmentation fault running layers.conv2d", "user": {"login": "wschoong", "id": 4644029, "node_id": "MDQ6VXNlcjQ2NDQwMjk=", "avatar_url": "https://avatars2.githubusercontent.com/u/4644029?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschoong", "html_url": "https://github.com/wschoong", "followers_url": "https://api.github.com/users/wschoong/followers", "following_url": "https://api.github.com/users/wschoong/following{/other_user}", "gists_url": "https://api.github.com/users/wschoong/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschoong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschoong/subscriptions", "organizations_url": "https://api.github.com/users/wschoong/orgs", "repos_url": "https://api.github.com/users/wschoong/repos", "events_url": "https://api.github.com/users/wschoong/events{/privacy}", "received_events_url": "https://api.github.com/users/wschoong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2018-10-11T04:02:02Z", "updated_at": "2018-10-16T07:55:52Z", "closed_at": "2018-10-16T07:55:52Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Centos 7.5</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: NA</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Anaconda</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.10.0</li>\n<li><strong>Python version</strong>: 3.6.5</li>\n<li><strong>Bazel version (if compiling from source)</strong>: NA</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: NA</li>\n<li><strong>CUDA/cuDNN version</strong>: NA</li>\n<li><strong>GPU model and memory</strong>: NA</li>\n<li><strong>Exact command to reproduce</strong>: python test.py</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I am trying to implement a CNN using tensorflow, but I started running into segmentation fault with increasing input size to layers.conv2d. In the provided simple test script, I can successfully run it if n_H=3000. But I got a segmentation fault when I set n_H=4000. In addition, if I run it without layars.conv2d by setting with_conv=False, the script runs successfully. I don't know if this is my lack of understanding with layers.conv2d or there is something more to this.</p>\n<h3>Source code / logs</h3>\n<p>Here is the output when I get a segmentation fault:</p>\n<pre><code>$ python test.py\n(100, 4000, 100, 1) (100, 8)\n2018-10-10 11:57:23.825704: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2\n2018-10-10 11:57:23.827653: I tensorflow/core/common_runtime/process_util.cc:69] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance.\nFatal Python error: Segmentation fault\n\nThread 0x00007fea9af1a740 (most recent call first):\n  File \"/home/seng/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1350 in _call_tf_sessionrun\n  File \"/home/seng/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1263 in _run_fn\n  File \"/home/seng/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1278 in _do_call\n  File \"/home/seng/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1272 in _do_run\n  File \"/home/seng/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1100 in _run\n  File \"/home/seng/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 877 in run\n  File \"test.py\", line 43 in &lt;module&gt;\nSegmentation fault (core dumped)\n</code></pre>\n<p>Here is the simple test script test.py:</p>\n<pre><code>import faulthandler; faulthandler.enable()\nimport numpy as np\nimport tensorflow as tf\n\nseed = 42\ntf.reset_default_graph()\ntf.set_random_seed(seed)\nnp.random.seed(seed)\n\nnum_examples = 100\nn_H = 4000\nwith_conv = True\n\n# generate training data\nX_train = np.random.randn(num_examples*n_H*100).reshape(num_examples, n_H, 100, 1)\nY_train = np.random.randn(num_examples*8).reshape(num_examples, 8)    \nprint(X_train.shape, Y_train.shape)\n\n# create placeholders\nX = tf.placeholder(tf.float32, shape=(None, n_H, 100, 1))\nY = tf.placeholder(tf.float32, shape=(None, 8))\n\n# build graph\nif (with_conv):\n    conv1 = tf.layers.conv2d(X, filters=64, kernel_size=[5, 5],strides = 1, padding='valid',activation = tf.nn.relu)    \n    pool1 = tf.layers.max_pooling2d(conv1, pool_size=[2, 2], strides=2, padding='valid')\nelse:\n    pool1 = tf.layers.max_pooling2d(X, pool_size=[2, 2], strides=2, padding='valid')    \npool1_flat = tf.layers.flatten(pool1)\ndense2 = tf.layers.dense(pool1_flat, units=256, activation=tf.nn.relu)\nH = tf.layers.dense(dense2, units=8, activation=tf.nn.relu)\n\n# compute cost\ncost = tf.reduce_mean(tf.square(Y - H))\n\n# initialize variables\ninit = tf.global_variables_initializer()\n\nwith tf.Session() as sess:\n    sess.run(init)\n    a = sess.run(cost, feed_dict = {X: X_train, Y:Y_train})\n    print(a)\n\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Centos 7.5\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: NA\nTensorFlow installed from (source or binary): Anaconda\nTensorFlow version (use command below): 1.10.0\nPython version: 3.6.5\nBazel version (if compiling from source): NA\nGCC/Compiler version (if compiling from source): NA\nCUDA/cuDNN version: NA\nGPU model and memory: NA\nExact command to reproduce: python test.py\n\nDescribe the problem\nI am trying to implement a CNN using tensorflow, but I started running into segmentation fault with increasing input size to layers.conv2d. In the provided simple test script, I can successfully run it if n_H=3000. But I got a segmentation fault when I set n_H=4000. In addition, if I run it without layars.conv2d by setting with_conv=False, the script runs successfully. I don't know if this is my lack of understanding with layers.conv2d or there is something more to this.\nSource code / logs\nHere is the output when I get a segmentation fault:\n$ python test.py\n(100, 4000, 100, 1) (100, 8)\n2018-10-10 11:57:23.825704: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2\n2018-10-10 11:57:23.827653: I tensorflow/core/common_runtime/process_util.cc:69] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance.\nFatal Python error: Segmentation fault\n\nThread 0x00007fea9af1a740 (most recent call first):\n  File \"/home/seng/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1350 in _call_tf_sessionrun\n  File \"/home/seng/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1263 in _run_fn\n  File \"/home/seng/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1278 in _do_call\n  File \"/home/seng/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1272 in _do_run\n  File \"/home/seng/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1100 in _run\n  File \"/home/seng/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 877 in run\n  File \"test.py\", line 43 in <module>\nSegmentation fault (core dumped)\n\nHere is the simple test script test.py:\nimport faulthandler; faulthandler.enable()\nimport numpy as np\nimport tensorflow as tf\n\nseed = 42\ntf.reset_default_graph()\ntf.set_random_seed(seed)\nnp.random.seed(seed)\n\nnum_examples = 100\nn_H = 4000\nwith_conv = True\n\n# generate training data\nX_train = np.random.randn(num_examples*n_H*100).reshape(num_examples, n_H, 100, 1)\nY_train = np.random.randn(num_examples*8).reshape(num_examples, 8)    \nprint(X_train.shape, Y_train.shape)\n\n# create placeholders\nX = tf.placeholder(tf.float32, shape=(None, n_H, 100, 1))\nY = tf.placeholder(tf.float32, shape=(None, 8))\n\n# build graph\nif (with_conv):\n    conv1 = tf.layers.conv2d(X, filters=64, kernel_size=[5, 5],strides = 1, padding='valid',activation = tf.nn.relu)    \n    pool1 = tf.layers.max_pooling2d(conv1, pool_size=[2, 2], strides=2, padding='valid')\nelse:\n    pool1 = tf.layers.max_pooling2d(X, pool_size=[2, 2], strides=2, padding='valid')    \npool1_flat = tf.layers.flatten(pool1)\ndense2 = tf.layers.dense(pool1_flat, units=256, activation=tf.nn.relu)\nH = tf.layers.dense(dense2, units=8, activation=tf.nn.relu)\n\n# compute cost\ncost = tf.reduce_mean(tf.square(Y - H))\n\n# initialize variables\ninit = tf.global_variables_initializer()\n\nwith tf.Session() as sess:\n    sess.run(init)\n    a = sess.run(cost, feed_dict = {X: X_train, Y:Y_train})\n    print(a)", "body": "\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Centos 7.5\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: NA\r\n- **TensorFlow installed from (source or binary)**: Anaconda\r\n- **TensorFlow version (use command below)**: 1.10.0\r\n- **Python version**: 3.6.5\r\n- **Bazel version (if compiling from source)**: NA\r\n- **GCC/Compiler version (if compiling from source)**: NA\r\n- **CUDA/cuDNN version**: NA\r\n- **GPU model and memory**: NA\r\n- **Exact command to reproduce**: python test.py\r\n\r\n### Describe the problem\r\nI am trying to implement a CNN using tensorflow, but I started running into segmentation fault with increasing input size to layers.conv2d. In the provided simple test script, I can successfully run it if n_H=3000. But I got a segmentation fault when I set n_H=4000. In addition, if I run it without layars.conv2d by setting with_conv=False, the script runs successfully. I don't know if this is my lack of understanding with layers.conv2d or there is something more to this.\r\n\r\n### Source code / logs\r\nHere is the output when I get a segmentation fault:\r\n```\r\n$ python test.py\r\n(100, 4000, 100, 1) (100, 8)\r\n2018-10-10 11:57:23.825704: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2\r\n2018-10-10 11:57:23.827653: I tensorflow/core/common_runtime/process_util.cc:69] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance.\r\nFatal Python error: Segmentation fault\r\n\r\nThread 0x00007fea9af1a740 (most recent call first):\r\n  File \"/home/seng/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1350 in _call_tf_sessionrun\r\n  File \"/home/seng/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1263 in _run_fn\r\n  File \"/home/seng/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1278 in _do_call\r\n  File \"/home/seng/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1272 in _do_run\r\n  File \"/home/seng/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1100 in _run\r\n  File \"/home/seng/anaconda3/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 877 in run\r\n  File \"test.py\", line 43 in <module>\r\nSegmentation fault (core dumped)\r\n```\r\n\r\nHere is the simple test script test.py:\r\n```\r\nimport faulthandler; faulthandler.enable()\r\nimport numpy as np\r\nimport tensorflow as tf\r\n\r\nseed = 42\r\ntf.reset_default_graph()\r\ntf.set_random_seed(seed)\r\nnp.random.seed(seed)\r\n\r\nnum_examples = 100\r\nn_H = 4000\r\nwith_conv = True\r\n\r\n# generate training data\r\nX_train = np.random.randn(num_examples*n_H*100).reshape(num_examples, n_H, 100, 1)\r\nY_train = np.random.randn(num_examples*8).reshape(num_examples, 8)    \r\nprint(X_train.shape, Y_train.shape)\r\n\r\n# create placeholders\r\nX = tf.placeholder(tf.float32, shape=(None, n_H, 100, 1))\r\nY = tf.placeholder(tf.float32, shape=(None, 8))\r\n\r\n# build graph\r\nif (with_conv):\r\n    conv1 = tf.layers.conv2d(X, filters=64, kernel_size=[5, 5],strides = 1, padding='valid',activation = tf.nn.relu)    \r\n    pool1 = tf.layers.max_pooling2d(conv1, pool_size=[2, 2], strides=2, padding='valid')\r\nelse:\r\n    pool1 = tf.layers.max_pooling2d(X, pool_size=[2, 2], strides=2, padding='valid')    \r\npool1_flat = tf.layers.flatten(pool1)\r\ndense2 = tf.layers.dense(pool1_flat, units=256, activation=tf.nn.relu)\r\nH = tf.layers.dense(dense2, units=8, activation=tf.nn.relu)\r\n\r\n# compute cost\r\ncost = tf.reduce_mean(tf.square(Y - H))\r\n\r\n# initialize variables\r\ninit = tf.global_variables_initializer()\r\n\r\nwith tf.Session() as sess:\r\n    sess.run(init)\r\n    a = sess.run(cost, feed_dict = {X: X_train, Y:Y_train})\r\n    print(a)\r\n\r\n```\r\n"}