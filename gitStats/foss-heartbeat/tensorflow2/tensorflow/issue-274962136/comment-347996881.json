{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/347996881", "html_url": "https://github.com/tensorflow/tensorflow/issues/14661#issuecomment-347996881", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14661", "id": 347996881, "node_id": "MDEyOklzc3VlQ29tbWVudDM0Nzk5Njg4MQ==", "user": {"login": "andrehentz", "id": 25754898, "node_id": "MDQ6VXNlcjI1NzU0ODk4", "avatar_url": "https://avatars3.githubusercontent.com/u/25754898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrehentz", "html_url": "https://github.com/andrehentz", "followers_url": "https://api.github.com/users/andrehentz/followers", "following_url": "https://api.github.com/users/andrehentz/following{/other_user}", "gists_url": "https://api.github.com/users/andrehentz/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrehentz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrehentz/subscriptions", "organizations_url": "https://api.github.com/users/andrehentz/orgs", "repos_url": "https://api.github.com/users/andrehentz/repos", "events_url": "https://api.github.com/users/andrehentz/events{/privacy}", "received_events_url": "https://api.github.com/users/andrehentz/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-29T21:09:10Z", "updated_at": "2017-11-29T21:09:10Z", "author_association": "CONTRIBUTOR", "body_html": "<p>You'll need to implement a wrapper to make the existing optimized_ops.h available to TF Lite, and you would need to implement the export code for toco. In both cases you can look at the MUL operation for inspiration. I'd say the steps would be:</p>\n<ol>\n<li>Propose a change to schema/schema.fbs to add the new operator along with any required options</li>\n<li>Change toco/tflite/operator.cc to export/inport the new op. Add a unittest or two.</li>\n<li>Implement parsing code in model.cc and, if necessary, builtin_op_data.h (SpaceToDepth is a better example than Mul here)</li>\n<li>Add kernels/max.cc (for TensorflowMaximum) with the proper checks and calls to optimized_ops.cc (and perhaps reference_ops.cc for completeness too). Add a unittest or two. If possible, provide a quantized implementation too.</li>\n</ol>", "body_text": "You'll need to implement a wrapper to make the existing optimized_ops.h available to TF Lite, and you would need to implement the export code for toco. In both cases you can look at the MUL operation for inspiration. I'd say the steps would be:\n\nPropose a change to schema/schema.fbs to add the new operator along with any required options\nChange toco/tflite/operator.cc to export/inport the new op. Add a unittest or two.\nImplement parsing code in model.cc and, if necessary, builtin_op_data.h (SpaceToDepth is a better example than Mul here)\nAdd kernels/max.cc (for TensorflowMaximum) with the proper checks and calls to optimized_ops.cc (and perhaps reference_ops.cc for completeness too). Add a unittest or two. If possible, provide a quantized implementation too.", "body": "You'll need to implement a wrapper to make the existing optimized_ops.h available to TF Lite, and you would need to implement the export code for toco. In both cases you can look at the MUL operation for inspiration. I'd say the steps would be:\r\n\r\n1. Propose a change to schema/schema.fbs to add the new operator along with any required options\r\n2. Change toco/tflite/operator.cc to export/inport the new op. Add a unittest or two.\r\n3. Implement parsing code in model.cc and, if necessary, builtin_op_data.h (SpaceToDepth is a better example than Mul here)\r\n4. Add kernels/max.cc (for TensorflowMaximum) with the proper checks and calls to optimized_ops.cc (and perhaps reference_ops.cc for completeness too). Add a unittest or two. If possible, provide a quantized implementation too.\r\n"}