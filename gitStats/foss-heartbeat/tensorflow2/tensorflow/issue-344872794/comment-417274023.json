{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/417274023", "html_url": "https://github.com/tensorflow/tensorflow/issues/21164#issuecomment-417274023", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21164", "id": 417274023, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzI3NDAyMw==", "user": {"login": "hofingermarkus", "id": 12088794, "node_id": "MDQ6VXNlcjEyMDg4Nzk0", "avatar_url": "https://avatars1.githubusercontent.com/u/12088794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hofingermarkus", "html_url": "https://github.com/hofingermarkus", "followers_url": "https://api.github.com/users/hofingermarkus/followers", "following_url": "https://api.github.com/users/hofingermarkus/following{/other_user}", "gists_url": "https://api.github.com/users/hofingermarkus/gists{/gist_id}", "starred_url": "https://api.github.com/users/hofingermarkus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hofingermarkus/subscriptions", "organizations_url": "https://api.github.com/users/hofingermarkus/orgs", "repos_url": "https://api.github.com/users/hofingermarkus/repos", "events_url": "https://api.github.com/users/hofingermarkus/events{/privacy}", "received_events_url": "https://api.github.com/users/hofingermarkus/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-30T10:39:25Z", "updated_at": "2018-08-30T18:57:48Z", "author_association": "NONE", "body_html": "<p>Seems to be also related to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"232869744\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/10370\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/10370/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/10370\">#10370</a></p>\n<p>Anyway, I only have this problem with tensorflow versions &gt;= 1.9  (1.9, 1.10)<br>\nI never had troubles with tensorflow from v1.0 - v1.8<br>\nSo the following code sinppet, that reproduces the error, works in my old tensorflow environments but fails in the new one.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">import</span> locale\nlocale.setlocale(locale.<span class=\"pl-c1\">LC_ALL</span>, <span class=\"pl-v\">locale</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>de_AT.UTF-8<span class=\"pl-pds\">\"</span></span>) \ndataset <span class=\"pl-k\">=</span> tf.data.Dataset.from_tensor_slices([ [<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>a<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>b<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>c<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>e<span class=\"pl-pds\">\"</span></span>]])\ndataset <span class=\"pl-k\">=</span> dataset.apply(tf.contrib.data.assert_element_shape( tf.TensorShape(<span class=\"pl-c1\">4</span>) ) )</pre></div>\n<p>It yields the same error as above (in tf &gt;=1.9) when tf tries to import single_image_random_dot_stereograms and does so with the wrong floating point conversion style.</p>\n<p>When I ran the debugger in tf 1.10 to the <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/framework/load_library.py\">load_library.py</a> file, it generates the wrong floating point style in <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/framework/load_library.py#L61-L73\">line 61</a> when it calls <code>wrappers = py_tf.GetPythonWrappers(op_list_str)</code> which calls this <a href=\"https://github.com/tensorflow/tensorflow/blob/c4ccab7a95835ec12af16938ba0c17cc7c1f17e0/tensorflow/python/framework/python_op_gen.cc#L1029\">C++ function.</a><br>\nSetting the locale setting of LC_NUMERIC to US style before this function call and back to the original style fixes this error for me.</p>\n<div class=\"highlight highlight-source-python\"><pre>  <span class=\"pl-k\">import</span> locale\n  bak <span class=\"pl-k\">=</span> locale.getlocale(locale.<span class=\"pl-c1\">LC_NUMERIC</span>)\n  locale.setlocale(locale.<span class=\"pl-c1\">LC_NUMERIC</span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>en_US.UTF-8<span class=\"pl-pds\">\"</span></span>)\n  wrappers <span class=\"pl-k\">=</span> py_tf.GetPythonWrappers(op_list_str)\n  locale.setlocale(locale.<span class=\"pl-c1\">LC_NUMERIC</span>,bak)</pre></div>\n<p>However, I don't have experience with i18n, so I don't know about side effects... (I guess US style needs to be installed?).</p>\n<p>Alternatively, until a true fix is implemented, a clear warning / error message would already help to figure out that the error comes from the locale settings, so that users can react.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> locale\n<span class=\"pl-k\">assert</span> locale.localeconv()[<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>decimal_point<span class=\"pl-pds\">\"</span></span>] <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Tensorflows calling of C++ libraries currently requires that locale Internationalization and localization (i18n) settings like the 'decimal_point' are set to US standards<span class=\"pl-pds\">\"</span></span>\nwrappers <span class=\"pl-k\">=</span> py_tf.GetPythonWrappers(op_list_str)</pre></div>", "body_text": "Seems to be also related to #10370\nAnyway, I only have this problem with tensorflow versions >= 1.9  (1.9, 1.10)\nI never had troubles with tensorflow from v1.0 - v1.8\nSo the following code sinppet, that reproduces the error, works in my old tensorflow environments but fails in the new one.\nimport tensorflow as tf\nimport locale\nlocale.setlocale(locale.LC_ALL, locale=\"de_AT.UTF-8\") \ndataset = tf.data.Dataset.from_tensor_slices([ [\"a\",\"b\",\"c\",\"e\"]])\ndataset = dataset.apply(tf.contrib.data.assert_element_shape( tf.TensorShape(4) ) )\nIt yields the same error as above (in tf >=1.9) when tf tries to import single_image_random_dot_stereograms and does so with the wrong floating point conversion style.\nWhen I ran the debugger in tf 1.10 to the load_library.py file, it generates the wrong floating point style in line 61 when it calls wrappers = py_tf.GetPythonWrappers(op_list_str) which calls this C++ function.\nSetting the locale setting of LC_NUMERIC to US style before this function call and back to the original style fixes this error for me.\n  import locale\n  bak = locale.getlocale(locale.LC_NUMERIC)\n  locale.setlocale(locale.LC_NUMERIC,\"en_US.UTF-8\")\n  wrappers = py_tf.GetPythonWrappers(op_list_str)\n  locale.setlocale(locale.LC_NUMERIC,bak)\nHowever, I don't have experience with i18n, so I don't know about side effects... (I guess US style needs to be installed?).\nAlternatively, until a true fix is implemented, a clear warning / error message would already help to figure out that the error comes from the locale settings, so that users can react.\nimport locale\nassert locale.localeconv()[\"decimal_point\"] == \".\", \"Tensorflows calling of C++ libraries currently requires that locale Internationalization and localization (i18n) settings like the 'decimal_point' are set to US standards\"\nwrappers = py_tf.GetPythonWrappers(op_list_str)", "body": "Seems to be also related to #10370\r\n\r\nAnyway, I only have this problem with tensorflow versions >= 1.9  (1.9, 1.10)\r\nI never had troubles with tensorflow from v1.0 - v1.8\r\nSo the following code sinppet, that reproduces the error, works in my old tensorflow environments but fails in the new one.\r\n\r\n``` python\r\nimport tensorflow as tf\r\nimport locale\r\nlocale.setlocale(locale.LC_ALL, locale=\"de_AT.UTF-8\") \r\ndataset = tf.data.Dataset.from_tensor_slices([ [\"a\",\"b\",\"c\",\"e\"]])\r\ndataset = dataset.apply(tf.contrib.data.assert_element_shape( tf.TensorShape(4) ) )\r\n```\r\n\r\nIt yields the same error as above (in tf >=1.9) when tf tries to import single_image_random_dot_stereograms and does so with the wrong floating point conversion style.\r\n\r\nWhen I ran the debugger in tf 1.10 to the [load_library.py](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/framework/load_library.py) file, it generates the wrong floating point style in [line 61](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/framework/load_library.py#L61-L73) when it calls `wrappers = py_tf.GetPythonWrappers(op_list_str)` which calls this [C++ function.](https://github.com/tensorflow/tensorflow/blob/c4ccab7a95835ec12af16938ba0c17cc7c1f17e0/tensorflow/python/framework/python_op_gen.cc#L1029)\r\nSetting the locale setting of LC_NUMERIC to US style before this function call and back to the original style fixes this error for me.\r\n\r\n``` python\r\n  import locale\r\n  bak = locale.getlocale(locale.LC_NUMERIC)\r\n  locale.setlocale(locale.LC_NUMERIC,\"en_US.UTF-8\")\r\n  wrappers = py_tf.GetPythonWrappers(op_list_str)\r\n  locale.setlocale(locale.LC_NUMERIC,bak)\r\n```\r\nHowever, I don't have experience with i18n, so I don't know about side effects... (I guess US style needs to be installed?). \r\n\r\nAlternatively, until a true fix is implemented, a clear warning / error message would already help to figure out that the error comes from the locale settings, so that users can react.\r\n``` python\r\nimport locale\r\nassert locale.localeconv()[\"decimal_point\"] == \".\", \"Tensorflows calling of C++ libraries currently requires that locale Internationalization and localization (i18n) settings like the 'decimal_point' are set to US standards\"\r\nwrappers = py_tf.GetPythonWrappers(op_list_str)\r\n```"}