{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/227131777", "html_url": "https://github.com/tensorflow/tensorflow/issues/2751#issuecomment-227131777", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2751", "id": 227131777, "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzEzMTc3Nw==", "user": {"login": "samfux84", "id": 11944875, "node_id": "MDQ6VXNlcjExOTQ0ODc1", "avatar_url": "https://avatars0.githubusercontent.com/u/11944875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samfux84", "html_url": "https://github.com/samfux84", "followers_url": "https://api.github.com/users/samfux84/followers", "following_url": "https://api.github.com/users/samfux84/following{/other_user}", "gists_url": "https://api.github.com/users/samfux84/gists{/gist_id}", "starred_url": "https://api.github.com/users/samfux84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samfux84/subscriptions", "organizations_url": "https://api.github.com/users/samfux84/orgs", "repos_url": "https://api.github.com/users/samfux84/repos", "events_url": "https://api.github.com/users/samfux84/events{/privacy}", "received_events_url": "https://api.github.com/users/samfux84/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-20T12:45:06Z", "updated_at": "2016-06-20T12:45:06Z", "author_association": "NONE", "body_html": "<p>Hi,</p>\n<p>any news about the problem with the missing 'external' directory ?</p>\n<p>I could still not install tensorflow.</p>\n<p>Python 3 is only recognized if I check out the release 0.9 from github (a check out of the current master branch still does not recognize Python 3 installed in a non-standard location, even when specifying the path to the installation in the configure script). But with r 0.9, I still hit the problem with the external folder:</p>\n<pre><code>[sfux@e3001 tensorflow]$ bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\nMon Jun 20 14:16:57 CEST 2016 : === Using tmpdir: /scratch/21391859.tmpdir/tmp.HQP10lzxmo\nrsync: change_dir \"/scratch/21391859.tmpdir/tensorflow/bazel-bin/tensorflow/tools/pip_package/build_pip_package.runfiles/org_tensorflow/external\" failed: No such file or directory (2)\nrsync error: some files/attrs were not transferred (see previous errors) (code 23) at main.c(1039) [sender=3.0.6]\n[sfux@e3001 tensorflow]$ \n</code></pre>\n<p>I am trying now since end of may to make a central installation of tensorflow on the HPC cluster of ETH to provide it to our more than 2000 users. We can not install the precompiled binaries, because of GLIBC being too old. There are one or two users, which compiled a newer version of GLIBC in order to be able to install the precompiled binaries of tensorflow in their home directories, but this is not an option for a central installation of tensorflow on our cluster.</p>\n<p>Can you please provide some help, or update the description on</p>\n<p><a href=\"https://www.tensorflow.org/versions/r0.9/get_started/os_setup.html#create-the-pip-package-and-install\" rel=\"nofollow\">https://www.tensorflow.org/versions/r0.9/get_started/os_setup.html#create-the-pip-package-and-install</a></p>\n<p>because it does apparently not work, if one follows the steps described there.</p>\n<p>Please find below the steps that I used in my attempts to install tensorflow:</p>\n<p>1.) bsub -Is -n 24 -W 4:00 bash<br>\n(start a bash interactive job to get a 24-core compute node for compiling tensorflow)</p>\n<p>2.) module load new gcc/4.8.2 java/1.8.0_91 bazel/0.2.3 swig/3.0.5 python/3.3.3<br>\n(load all required modules, to make sure that PATH, LD_LIBRARY_PATH etc. contain all paths to the executables and libraries)</p>\n<p>3.) cd $TMPDIR<br>\n(go to $TMPDIR to compile on local scratch of the compute node)</p>\n<p>4.) git clone -b r0.9 <a href=\"https://github.com/tensorflow/tensorflow\">https://github.com/tensorflow/tensorflow</a></p>\n<p>5.) cd tensorflow</p>\n<p>6.) git submodule update --init --recursive</p>\n<p>7.) export http_proxy=<a href=\"http://proxy.ethz.ch:3128\" rel=\"nofollow\">http://proxy.ethz.ch:3128</a><br>\n8.) export https_proxy=<a href=\"http://proxy.ethz.ch:3128\" rel=\"nofollow\">http://proxy.ethz.ch:3128</a><br>\n(set proxy server variables)</p>\n<p>9.) ./configure<br>\n(t automatically finds our Python 3 installation and suggests already the correct path)</p>\n<p>10.) vi tools/bazel.rc<br>\n(add build --host_force_python=py3)</p>\n<p>11.) bazel build --verbose_failures -c opt //tensorflow/tools/pip_package:build_pip_package</p>\n<p>12.) bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg</p>\n<p>And then I am stuck with the error message mentioned above.</p>\n<p>Best regards</p>\n<p>Sam</p>", "body_text": "Hi,\nany news about the problem with the missing 'external' directory ?\nI could still not install tensorflow.\nPython 3 is only recognized if I check out the release 0.9 from github (a check out of the current master branch still does not recognize Python 3 installed in a non-standard location, even when specifying the path to the installation in the configure script). But with r 0.9, I still hit the problem with the external folder:\n[sfux@e3001 tensorflow]$ bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\nMon Jun 20 14:16:57 CEST 2016 : === Using tmpdir: /scratch/21391859.tmpdir/tmp.HQP10lzxmo\nrsync: change_dir \"/scratch/21391859.tmpdir/tensorflow/bazel-bin/tensorflow/tools/pip_package/build_pip_package.runfiles/org_tensorflow/external\" failed: No such file or directory (2)\nrsync error: some files/attrs were not transferred (see previous errors) (code 23) at main.c(1039) [sender=3.0.6]\n[sfux@e3001 tensorflow]$ \n\nI am trying now since end of may to make a central installation of tensorflow on the HPC cluster of ETH to provide it to our more than 2000 users. We can not install the precompiled binaries, because of GLIBC being too old. There are one or two users, which compiled a newer version of GLIBC in order to be able to install the precompiled binaries of tensorflow in their home directories, but this is not an option for a central installation of tensorflow on our cluster.\nCan you please provide some help, or update the description on\nhttps://www.tensorflow.org/versions/r0.9/get_started/os_setup.html#create-the-pip-package-and-install\nbecause it does apparently not work, if one follows the steps described there.\nPlease find below the steps that I used in my attempts to install tensorflow:\n1.) bsub -Is -n 24 -W 4:00 bash\n(start a bash interactive job to get a 24-core compute node for compiling tensorflow)\n2.) module load new gcc/4.8.2 java/1.8.0_91 bazel/0.2.3 swig/3.0.5 python/3.3.3\n(load all required modules, to make sure that PATH, LD_LIBRARY_PATH etc. contain all paths to the executables and libraries)\n3.) cd $TMPDIR\n(go to $TMPDIR to compile on local scratch of the compute node)\n4.) git clone -b r0.9 https://github.com/tensorflow/tensorflow\n5.) cd tensorflow\n6.) git submodule update --init --recursive\n7.) export http_proxy=http://proxy.ethz.ch:3128\n8.) export https_proxy=http://proxy.ethz.ch:3128\n(set proxy server variables)\n9.) ./configure\n(t automatically finds our Python 3 installation and suggests already the correct path)\n10.) vi tools/bazel.rc\n(add build --host_force_python=py3)\n11.) bazel build --verbose_failures -c opt //tensorflow/tools/pip_package:build_pip_package\n12.) bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\nAnd then I am stuck with the error message mentioned above.\nBest regards\nSam", "body": "Hi,\n\nany news about the problem with the missing 'external' directory ?\n\nI could still not install tensorflow.\n\nPython 3 is only recognized if I check out the release 0.9 from github (a check out of the current master branch still does not recognize Python 3 installed in a non-standard location, even when specifying the path to the installation in the configure script). But with r 0.9, I still hit the problem with the external folder:\n\n```\n[sfux@e3001 tensorflow]$ bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\nMon Jun 20 14:16:57 CEST 2016 : === Using tmpdir: /scratch/21391859.tmpdir/tmp.HQP10lzxmo\nrsync: change_dir \"/scratch/21391859.tmpdir/tensorflow/bazel-bin/tensorflow/tools/pip_package/build_pip_package.runfiles/org_tensorflow/external\" failed: No such file or directory (2)\nrsync error: some files/attrs were not transferred (see previous errors) (code 23) at main.c(1039) [sender=3.0.6]\n[sfux@e3001 tensorflow]$ \n```\n\nI am trying now since end of may to make a central installation of tensorflow on the HPC cluster of ETH to provide it to our more than 2000 users. We can not install the precompiled binaries, because of GLIBC being too old. There are one or two users, which compiled a newer version of GLIBC in order to be able to install the precompiled binaries of tensorflow in their home directories, but this is not an option for a central installation of tensorflow on our cluster.\n\nCan you please provide some help, or update the description on\n\nhttps://www.tensorflow.org/versions/r0.9/get_started/os_setup.html#create-the-pip-package-and-install\n\nbecause it does apparently not work, if one follows the steps described there.\n\nPlease find below the steps that I used in my attempts to install tensorflow:\n\n1.) bsub -Is -n 24 -W 4:00 bash\n(start a bash interactive job to get a 24-core compute node for compiling tensorflow)\n\n2.) module load new gcc/4.8.2 java/1.8.0_91 bazel/0.2.3 swig/3.0.5 python/3.3.3\n(load all required modules, to make sure that PATH, LD_LIBRARY_PATH etc. contain all paths to the executables and libraries)\n\n3.) cd $TMPDIR\n(go to $TMPDIR to compile on local scratch of the compute node)\n\n4.) git clone -b r0.9 https://github.com/tensorflow/tensorflow\n\n5.) cd tensorflow\n\n6.) git submodule update --init --recursive\n\n7.) export http_proxy=http://proxy.ethz.ch:3128\n8.) export https_proxy=http://proxy.ethz.ch:3128\n(set proxy server variables)\n\n9.) ./configure\n(t automatically finds our Python 3 installation and suggests already the correct path)\n\n10.) vi tools/bazel.rc\n(add build --host_force_python=py3)\n\n11.) bazel build --verbose_failures -c opt //tensorflow/tools/pip_package:build_pip_package\n\n12.) bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\n\nAnd then I am stuck with the error message mentioned above.\n\nBest regards\n\nSam\n"}