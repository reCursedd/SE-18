{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/366854122", "html_url": "https://github.com/tensorflow/tensorflow/issues/9518#issuecomment-366854122", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9518", "id": 366854122, "node_id": "MDEyOklzc3VlQ29tbWVudDM2Njg1NDEyMg==", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-20T03:03:09Z", "updated_at": "2018-02-20T03:03:09Z", "author_association": "NONE", "body_html": "<p>Although a GPU version of the op was added in <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/e3413de529c3f762885efd62932f76445ed22653/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/e3413de529c3f762885efd62932f76445ed22653\"><tt>e3413de</tt></a>, I am seeing that a slightly modified version of <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6136274\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Celelibi\">@Celelibi</a>'s test case randomly segfaults.</p>\n<p>Here is my modified test case:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\nrs <span class=\"pl-k\">=</span> np.random.RandomState(<span class=\"pl-c1\">2</span>)\nN <span class=\"pl-k\">=</span> <span class=\"pl-c1\">4</span>\nmat <span class=\"pl-k\">=</span> rs.uniform(<span class=\"pl-k\">-</span><span class=\"pl-c1\">10.0</span>, <span class=\"pl-c1\">10.0</span>, <span class=\"pl-v\">size</span> <span class=\"pl-k\">=</span> (N, N))\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> https://stackoverflow.com/a/27331415/</span>\nmat <span class=\"pl-k\">=</span> np.tril(mat) <span class=\"pl-k\">+</span> np.tril(mat, <span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>).T\n<span class=\"pl-c1\">print</span> mat\nsess <span class=\"pl-k\">=</span> tf.Session()\n<span class=\"pl-k\">with</span> tf.device(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>/gpu:0<span class=\"pl-pds\">'</span></span>):\n    eigen <span class=\"pl-k\">=</span> tf.self_adjoint_eig(mat)\n<span class=\"pl-c1\">print</span> sess.run(eigen)\n<span class=\"pl-c1\">print</span> np.linalg.eig(mat)</pre></div>\n<p>Out of 5 tries, 4 segfaulted.</p>\n<p>Here is a backtrace:</p>\n<pre>Thread 29 Crashed:\n0   libtensorflow_framework.so    \t0x0000000102b39c10 void tensorflow::gtl::InlinedVector::emplace_back(tensorflow::EventMgr::InUse const&amp;&amp;&amp;) + 176\n1   libtensorflow_framework.so    \t0x0000000102b3902c tensorflow::EventMgr::PollEvents(bool, tensorflow::gtl::InlinedVector*) + 412\n2   libtensorflow_framework.so    \t0x0000000102ad4022 tensorflow::EventMgr::ThenExecute(perftools::gputools::Stream*, std::__1::function) + 194\n3   libtensorflow_framework.so    \t0x0000000102ad4837 tensorflow::GPUUtil::CopyGPUTensorToCPU(tensorflow::Device*, tensorflow::DeviceContext const*, tensorflow::Tensor const*, tensorflow::Tensor*, std::__1::function) + 791\n4   libtensorflow_framework.so    \t0x0000000102ad6ac9 tensorflow::GPUDeviceContext::CopyDeviceTensorToCPU(tensorflow::Tensor const*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, std::__1::function) + 121\n5   libtensorflow_framework.so    \t0x0000000102ae9397 tensorflow::(anonymous namespace)::CopyDeviceToHost(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::__1::function) + 471\n6   libtensorflow_framework.so    \t0x0000000102ae8ac1 tensorflow::CopyTensor::ViaDMA(tensorflow::StringPiece, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::__1::function) + 3441\n7   libtensorflow_framework.so    \t0x0000000102b22dbe tensorflow::IntraProcessRendezvous::SameWorkerRecvDone(tensorflow::Rendezvous::ParsedKey const&amp;, tensorflow::Rendezvous::Args const&amp;, tensorflow::Rendezvous::Args const&amp;, tensorflow::Tensor const&amp;, tensorflow::Tensor*, std::__1::function) + 1102\n8   libtensorflow_framework.so    \t0x0000000102b2385d std::__1::__function::__func)::$_0, std::__1::allocator)::$_0&gt;, void (tensorflow::Status const&amp;, tensorflow::Rendezvous::Args const&amp;, tensorflow::Rendezvous::Args const&amp;, tensorflow::Tensor const&amp;, bool)&gt;::operator()(tensorflow::Status const&amp;, tensorflow::Rendezvous::Args const&amp;, tensorflow::Rendezvous::Args const&amp;, tensorflow::Tensor const&amp;, bool&amp;&amp;) + 813\n9   libtensorflow_framework.so    \t0x000000010262db36 tensorflow::LocalRendezvousImpl::Send(tensorflow::Rendezvous::ParsedKey const&amp;, tensorflow::Rendezvous::Args const&amp;, tensorflow::Tensor const&amp;, bool) + 550\n10  libtensorflow_framework.so    \t0x0000000102b228aa tensorflow::IntraProcessRendezvous::Send(tensorflow::Rendezvous::ParsedKey const&amp;, tensorflow::Rendezvous::Args const&amp;, tensorflow::Tensor const&amp;, bool) + 298\n11  _pywrap_tensorflow_internal.so\t0x0000000106611622 tensorflow::SendOp::Compute(tensorflow::OpKernelContext*) + 738\n12  libtensorflow_framework.so    \t0x0000000102ac9f34 tensorflow::BaseGPUDevice::ComputeHelper(tensorflow::OpKernel*, tensorflow::OpKernelContext*) + 1284\n13  libtensorflow_framework.so    \t0x0000000102af83c9 tensorflow::(anonymous namespace)::ExecutorState::Process(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long) + 4793\n14  libtensorflow_framework.so    \t0x0000000102af8ab5 std::__1::__function::__func const&amp;, tensorflow::(anonymous namespace)::ExecutorState::TaggedNodeReadyQueue*)::$_1, std::__1::allocator const&amp;, tensorflow::(anonymous namespace)::ExecutorState::TaggedNodeReadyQueue*)::$_1&gt;, void ()&gt;::operator()() + 37\n15  libtensorflow_framework.so    \t0x000000010273bdff Eigen::NonBlockingThreadPoolTempl::WorkerLoop(int) + 2047\n16  libtensorflow_framework.so    \t0x000000010273b4ff std::__1::__function::__func)::'lambda'(), std::__1::allocator)::'lambda'()&gt;, void ()&gt;::operator()() + 47\n17  libtensorflow_framework.so    \t0x00000001027608a0 void* std::__1::__thread_proxy &gt;, std::__1::function &gt; &gt;(void*) + 48\n18  libsystem_pthread.dylib       \t0x00007fff7bdab6c1 _pthread_body + 340\n19  libsystem_pthread.dylib       \t0x00007fff7bdab56d _pthread_start + 377\n20  libsystem_pthread.dylib       \t0x00007fff7bdaac5d thread_start + 13\n</pre>", "body_text": "Although a GPU version of the op was added in e3413de, I am seeing that a slightly modified version of @Celelibi's test case randomly segfaults.\nHere is my modified test case:\nimport numpy as np\nimport tensorflow as tf\nrs = np.random.RandomState(2)\nN = 4\nmat = rs.uniform(-10.0, 10.0, size = (N, N))\n# https://stackoverflow.com/a/27331415/\nmat = np.tril(mat) + np.tril(mat, -1).T\nprint mat\nsess = tf.Session()\nwith tf.device('/gpu:0'):\n    eigen = tf.self_adjoint_eig(mat)\nprint sess.run(eigen)\nprint np.linalg.eig(mat)\nOut of 5 tries, 4 segfaulted.\nHere is a backtrace:\nThread 29 Crashed:\n0   libtensorflow_framework.so    \t0x0000000102b39c10 void tensorflow::gtl::InlinedVector::emplace_back(tensorflow::EventMgr::InUse const&&&) + 176\n1   libtensorflow_framework.so    \t0x0000000102b3902c tensorflow::EventMgr::PollEvents(bool, tensorflow::gtl::InlinedVector*) + 412\n2   libtensorflow_framework.so    \t0x0000000102ad4022 tensorflow::EventMgr::ThenExecute(perftools::gputools::Stream*, std::__1::function) + 194\n3   libtensorflow_framework.so    \t0x0000000102ad4837 tensorflow::GPUUtil::CopyGPUTensorToCPU(tensorflow::Device*, tensorflow::DeviceContext const*, tensorflow::Tensor const*, tensorflow::Tensor*, std::__1::function) + 791\n4   libtensorflow_framework.so    \t0x0000000102ad6ac9 tensorflow::GPUDeviceContext::CopyDeviceTensorToCPU(tensorflow::Tensor const*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, std::__1::function) + 121\n5   libtensorflow_framework.so    \t0x0000000102ae9397 tensorflow::(anonymous namespace)::CopyDeviceToHost(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::__1::function) + 471\n6   libtensorflow_framework.so    \t0x0000000102ae8ac1 tensorflow::CopyTensor::ViaDMA(tensorflow::StringPiece, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::__1::function) + 3441\n7   libtensorflow_framework.so    \t0x0000000102b22dbe tensorflow::IntraProcessRendezvous::SameWorkerRecvDone(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, tensorflow::Tensor*, std::__1::function) + 1102\n8   libtensorflow_framework.so    \t0x0000000102b2385d std::__1::__function::__func)::$_0, std::__1::allocator)::$_0>, void (tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)>::operator()(tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool&&) + 813\n9   libtensorflow_framework.so    \t0x000000010262db36 tensorflow::LocalRendezvousImpl::Send(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool) + 550\n10  libtensorflow_framework.so    \t0x0000000102b228aa tensorflow::IntraProcessRendezvous::Send(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool) + 298\n11  _pywrap_tensorflow_internal.so\t0x0000000106611622 tensorflow::SendOp::Compute(tensorflow::OpKernelContext*) + 738\n12  libtensorflow_framework.so    \t0x0000000102ac9f34 tensorflow::BaseGPUDevice::ComputeHelper(tensorflow::OpKernel*, tensorflow::OpKernelContext*) + 1284\n13  libtensorflow_framework.so    \t0x0000000102af83c9 tensorflow::(anonymous namespace)::ExecutorState::Process(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long) + 4793\n14  libtensorflow_framework.so    \t0x0000000102af8ab5 std::__1::__function::__func const&, tensorflow::(anonymous namespace)::ExecutorState::TaggedNodeReadyQueue*)::$_1, std::__1::allocator const&, tensorflow::(anonymous namespace)::ExecutorState::TaggedNodeReadyQueue*)::$_1>, void ()>::operator()() + 37\n15  libtensorflow_framework.so    \t0x000000010273bdff Eigen::NonBlockingThreadPoolTempl::WorkerLoop(int) + 2047\n16  libtensorflow_framework.so    \t0x000000010273b4ff std::__1::__function::__func)::'lambda'(), std::__1::allocator)::'lambda'()>, void ()>::operator()() + 47\n17  libtensorflow_framework.so    \t0x00000001027608a0 void* std::__1::__thread_proxy >, std::__1::function > >(void*) + 48\n18  libsystem_pthread.dylib       \t0x00007fff7bdab6c1 _pthread_body + 340\n19  libsystem_pthread.dylib       \t0x00007fff7bdab56d _pthread_start + 377\n20  libsystem_pthread.dylib       \t0x00007fff7bdaac5d thread_start + 13", "body": "Although a GPU version of the op was added in e3413de529c3f762885efd62932f76445ed22653, I am seeing that a slightly modified version of @Celelibi's test case randomly segfaults.\r\n\r\nHere is my modified test case:\r\n\r\n```py\r\nimport numpy as np\r\nimport tensorflow as tf\r\nrs = np.random.RandomState(2)\r\nN = 4\r\nmat = rs.uniform(-10.0, 10.0, size = (N, N))\r\n# https://stackoverflow.com/a/27331415/\r\nmat = np.tril(mat) + np.tril(mat, -1).T\r\nprint mat\r\nsess = tf.Session()\r\nwith tf.device('/gpu:0'):\r\n    eigen = tf.self_adjoint_eig(mat)\r\nprint sess.run(eigen)\r\nprint np.linalg.eig(mat)\r\n```\r\n\r\nOut of 5 tries, 4 segfaulted.\r\n\r\nHere is a backtrace:\r\n\r\n<pre>\r\nThread 29 Crashed:\r\n0   libtensorflow_framework.so    \t0x0000000102b39c10 void tensorflow::gtl::InlinedVector<tensorflow::EventMgr::InUse, 4>::emplace_back<tensorflow::EventMgr::InUse const&>(tensorflow::EventMgr::InUse const&&&) + 176\r\n1   libtensorflow_framework.so    \t0x0000000102b3902c tensorflow::EventMgr::PollEvents(bool, tensorflow::gtl::InlinedVector<tensorflow::EventMgr::InUse, 4>*) + 412\r\n2   libtensorflow_framework.so    \t0x0000000102ad4022 tensorflow::EventMgr::ThenExecute(perftools::gputools::Stream*, std::__1::function<void ()>) + 194\r\n3   libtensorflow_framework.so    \t0x0000000102ad4837 tensorflow::GPUUtil::CopyGPUTensorToCPU(tensorflow::Device*, tensorflow::DeviceContext const*, tensorflow::Tensor const*, tensorflow::Tensor*, std::__1::function<void (tensorflow::Status const&)>) + 791\r\n4   libtensorflow_framework.so    \t0x0000000102ad6ac9 tensorflow::GPUDeviceContext::CopyDeviceTensorToCPU(tensorflow::Tensor const*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, std::__1::function<void (tensorflow::Status const&)>) + 121\r\n5   libtensorflow_framework.so    \t0x0000000102ae9397 tensorflow::(anonymous namespace)::CopyDeviceToHost(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::__1::function<void (tensorflow::Status const&)>) + 471\r\n6   libtensorflow_framework.so    \t0x0000000102ae8ac1 tensorflow::CopyTensor::ViaDMA(tensorflow::StringPiece, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::__1::function<void (tensorflow::Status const&)>) + 3441\r\n7   libtensorflow_framework.so    \t0x0000000102b22dbe tensorflow::IntraProcessRendezvous::SameWorkerRecvDone(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, tensorflow::Tensor*, std::__1::function<void (tensorflow::Status const&)>) + 1102\r\n8   libtensorflow_framework.so    \t0x0000000102b2385d std::__1::__function::__func<tensorflow::IntraProcessRendezvous::RecvAsync(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, std::__1::function<void (tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)>)::$_0, std::__1::allocator<tensorflow::IntraProcessRendezvous::RecvAsync(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, std::__1::function<void (tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)>)::$_0>, void (tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)>::operator()(tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool&&) + 813\r\n9   libtensorflow_framework.so    \t0x000000010262db36 tensorflow::LocalRendezvousImpl::Send(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool) + 550\r\n10  libtensorflow_framework.so    \t0x0000000102b228aa tensorflow::IntraProcessRendezvous::Send(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool) + 298\r\n11  _pywrap_tensorflow_internal.so\t0x0000000106611622 tensorflow::SendOp::Compute(tensorflow::OpKernelContext*) + 738\r\n12  libtensorflow_framework.so    \t0x0000000102ac9f34 tensorflow::BaseGPUDevice::ComputeHelper(tensorflow::OpKernel*, tensorflow::OpKernelContext*) + 1284\r\n13  libtensorflow_framework.so    \t0x0000000102af83c9 tensorflow::(anonymous namespace)::ExecutorState::Process(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long) + 4793\r\n14  libtensorflow_framework.so    \t0x0000000102af8ab5 std::__1::__function::__func<tensorflow::(anonymous namespace)::ExecutorState::ScheduleReady(tensorflow::gtl::InlinedVector<tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, 8> const&, tensorflow::(anonymous namespace)::ExecutorState::TaggedNodeReadyQueue*)::$_1, std::__1::allocator<tensorflow::(anonymous namespace)::ExecutorState::ScheduleReady(tensorflow::gtl::InlinedVector<tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, 8> const&, tensorflow::(anonymous namespace)::ExecutorState::TaggedNodeReadyQueue*)::$_1>, void ()>::operator()() + 37\r\n15  libtensorflow_framework.so    \t0x000000010273bdff Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::WorkerLoop(int) + 2047\r\n16  libtensorflow_framework.so    \t0x000000010273b4ff std::__1::__function::__func<tensorflow::thread::EigenEnvironment::CreateThread(std::__1::function<void ()>)::'lambda'(), std::__1::allocator<tensorflow::thread::EigenEnvironment::CreateThread(std::__1::function<void ()>)::'lambda'()>, void ()>::operator()() + 47\r\n17  libtensorflow_framework.so    \t0x00000001027608a0 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, std::__1::function<void ()> > >(void*) + 48\r\n18  libsystem_pthread.dylib       \t0x00007fff7bdab6c1 _pthread_body + 340\r\n19  libsystem_pthread.dylib       \t0x00007fff7bdab56d _pthread_start + 377\r\n20  libsystem_pthread.dylib       \t0x00007fff7bdaac5d thread_start + 13\r\n</pre>"}