{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/381365608", "html_url": "https://github.com/tensorflow/tensorflow/issues/9518#issuecomment-381365608", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9518", "id": 381365608, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTM2NTYwOA==", "user": {"login": "azhongwl", "id": 36863876, "node_id": "MDQ6VXNlcjM2ODYzODc2", "avatar_url": "https://avatars1.githubusercontent.com/u/36863876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azhongwl", "html_url": "https://github.com/azhongwl", "followers_url": "https://api.github.com/users/azhongwl/followers", "following_url": "https://api.github.com/users/azhongwl/following{/other_user}", "gists_url": "https://api.github.com/users/azhongwl/gists{/gist_id}", "starred_url": "https://api.github.com/users/azhongwl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azhongwl/subscriptions", "organizations_url": "https://api.github.com/users/azhongwl/orgs", "repos_url": "https://api.github.com/users/azhongwl/repos", "events_url": "https://api.github.com/users/azhongwl/events{/privacy}", "received_events_url": "https://api.github.com/users/azhongwl/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-14T22:39:43Z", "updated_at": "2018-04-14T22:39:43Z", "author_association": "NONE", "body_html": "<p>Still seeing SEGFAULT on macOS+GPU build:</p>\n<pre><code>Thread 20 Crashed:\n0   libtensorflow_framework.so    \t0x0000000110e3b090 void tensorflow::gtl::InlinedVector&lt;tensorflow::EventMgr::InUse, 4&gt;::emplace_back&lt;tensorflow::EventMgr::InUse const&amp;&gt;(tensorflow::EventMgr::InUse const&amp;&amp;&amp;) + 176\n1   libtensorflow_framework.so    \t0x0000000110e3a43c tensorflow::EventMgr::PollEvents(bool, tensorflow::gtl::InlinedVector&lt;tensorflow::EventMgr::InUse, 4&gt;*) + 300\n2   libtensorflow_framework.so    \t0x0000000110dbf252 tensorflow::EventMgr::ThenExecute(perftools::gputools::Stream*, std::__1::function&lt;void ()&gt;) + 194\n3   libtensorflow_framework.so    \t0x0000000110dbfa18 tensorflow::GPUUtil::CopyGPUTensorToCPU(tensorflow::Device*, tensorflow::DeviceContext const*, tensorflow::Tensor const*, tensorflow::Tensor*, std::__1::function&lt;void (tensorflow::Status const&amp;)&gt;) + 712\n4   libtensorflow_framework.so    \t0x0000000110dc1cd9 tensorflow::GPUDeviceContext::CopyDeviceTensorToCPU(tensorflow::Tensor const*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, std::__1::function&lt;void (tensorflow::Status const&amp;)&gt;) + 121\n5   libtensorflow_framework.so    \t0x0000000110de4437 tensorflow::(anonymous namespace)::CopyDeviceToHost(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::__1::function&lt;void (tensorflow::Status const&amp;)&gt;) + 471\n6   libtensorflow_framework.so    \t0x0000000110de3a9b tensorflow::CopyTensor::ViaDMA(tensorflow::StringPiece, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::__1::function&lt;void (tensorflow::Status const&amp;)&gt;) + 3227\n7   libtensorflow_framework.so    \t0x0000000110e200e2 tensorflow::IntraProcessRendezvous::SameWorkerRecvDone(tensorflow::Rendezvous::ParsedKey const&amp;, tensorflow::Rendezvous::Args const&amp;, tensorflow::Rendezvous::Args const&amp;, tensorflow::Tensor const&amp;, tensorflow::Tensor*, std::__1::function&lt;void (tensorflow::Status const&amp;)&gt;) + 1074\n8   libtensorflow_framework.so    \t0x0000000110e20b8d std::__1::__function::__func&lt;tensorflow::IntraProcessRendezvous::RecvAsync(tensorflow::Rendezvous::ParsedKey const&amp;, tensorflow::Rendezvous::Args const&amp;, std::__1::function&lt;void (tensorflow::Status const&amp;, tensorflow::Rendezvous::Args const&amp;, tensorflow::Rendezvous::Args const&amp;, tensorflow::Tensor const&amp;, bool)&gt;)::$_0, std::__1::allocator&lt;tensorflow::IntraProcessRendezvous::RecvAsync(tensorflow::Rendezvous::ParsedKey const&amp;, tensorflow::Rendezvous::Args const&amp;, std::__1::function&lt;void (tensorflow::Status const&amp;, tensorflow::Rendezvous::Args const&amp;, tensorflow::Rendezvous::Args const&amp;, tensorflow::Tensor const&amp;, bool)&gt;)::$_0&gt;, void (tensorflow::Status const&amp;, tensorflow::Rendezvous::Args const&amp;, tensorflow::Rendezvous::Args const&amp;, tensorflow::Tensor const&amp;, bool)&gt;::operator()(tensorflow::Status const&amp;, tensorflow::Rendezvous::Args const&amp;, tensorflow::Rendezvous::Args const&amp;, tensorflow::Tensor const&amp;, bool&amp;&amp;) + 813\n9   libtensorflow_framework.so    \t0x0000000110c9eb4c tensorflow::LocalRendezvousImpl::Send(tensorflow::Rendezvous::ParsedKey const&amp;, tensorflow::Rendezvous::Args const&amp;, tensorflow::Tensor const&amp;, bool) + 380\n10  libtensorflow_framework.so    \t0x0000000110e1fb52 tensorflow::IntraProcessRendezvous::Send(tensorflow::Rendezvous::ParsedKey const&amp;, tensorflow::Rendezvous::Args const&amp;, tensorflow::Tensor const&amp;, bool) + 162\n11  _pywrap_tensorflow_internal.so\t0x000000011625ebfa tensorflow::SendOp::Compute(tensorflow::OpKernelContext*) + 794\n12  libtensorflow_framework.so    \t0x0000000110db44a7 tensorflow::BaseGPUDevice::ComputeHelper(tensorflow::OpKernel*, tensorflow::OpKernelContext*) + 1287\n13  libtensorflow_framework.so    \t0x0000000110df3dbd tensorflow::(anonymous namespace)::ExecutorState::Process(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long) + 5181\n14  libtensorflow_framework.so    \t0x0000000110df43b5 std::__1::__function::__func&lt;tensorflow::(anonymous namespace)::ExecutorState::ScheduleReady(tensorflow::gtl::InlinedVector&lt;tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, 8&gt; const&amp;, tensorflow::(anonymous namespace)::ExecutorState::TaggedNodeReadyQueue*)::$_1, std::__1::allocator&lt;tensorflow::(anonymous namespace)::ExecutorState::ScheduleReady(tensorflow::gtl::InlinedVector&lt;tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, 8&gt; const&amp;, tensorflow::(anonymous namespace)::ExecutorState::TaggedNodeReadyQueue*)::$_1&gt;, void ()&gt;::operator()() + 37\n15  libtensorflow_framework.so    \t0x0000000110e3fd5f Eigen::NonBlockingThreadPoolTempl&lt;tensorflow::thread::EigenEnvironment&gt;::WorkerLoop(int) + 2047\n16  libtensorflow_framework.so    \t0x0000000110e3f45f std::__1::__function::__func&lt;tensorflow::thread::EigenEnvironment::CreateThread(std::__1::function&lt;void ()&gt;)::'lambda'(), std::__1::allocator&lt;tensorflow::thread::EigenEnvironment::CreateThread(std::__1::function&lt;void ()&gt;)::'lambda'()&gt;, void ()&gt;::operator()() + 47\n17  libtensorflow_framework.so    \t0x0000000110e66000 void* std::__1::__thread_proxy&lt;std::__1::tuple&lt;std::__1::unique_ptr&lt;std::__1::__thread_struct, std::__1::default_delete&lt;std::__1::__thread_struct&gt; &gt;, std::__1::function&lt;void ()&gt; &gt; &gt;(void*) + 48\n18  libsystem_pthread.dylib       \t0x00007fff7ff696c1 _pthread_body + 340\n19  libsystem_pthread.dylib       \t0x00007fff7ff6956d _pthread_start + 377\n20  libsystem_pthread.dylib       \t0x00007fff7ff68c5d thread_start + 13\n</code></pre>", "body_text": "Still seeing SEGFAULT on macOS+GPU build:\nThread 20 Crashed:\n0   libtensorflow_framework.so    \t0x0000000110e3b090 void tensorflow::gtl::InlinedVector<tensorflow::EventMgr::InUse, 4>::emplace_back<tensorflow::EventMgr::InUse const&>(tensorflow::EventMgr::InUse const&&&) + 176\n1   libtensorflow_framework.so    \t0x0000000110e3a43c tensorflow::EventMgr::PollEvents(bool, tensorflow::gtl::InlinedVector<tensorflow::EventMgr::InUse, 4>*) + 300\n2   libtensorflow_framework.so    \t0x0000000110dbf252 tensorflow::EventMgr::ThenExecute(perftools::gputools::Stream*, std::__1::function<void ()>) + 194\n3   libtensorflow_framework.so    \t0x0000000110dbfa18 tensorflow::GPUUtil::CopyGPUTensorToCPU(tensorflow::Device*, tensorflow::DeviceContext const*, tensorflow::Tensor const*, tensorflow::Tensor*, std::__1::function<void (tensorflow::Status const&)>) + 712\n4   libtensorflow_framework.so    \t0x0000000110dc1cd9 tensorflow::GPUDeviceContext::CopyDeviceTensorToCPU(tensorflow::Tensor const*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, std::__1::function<void (tensorflow::Status const&)>) + 121\n5   libtensorflow_framework.so    \t0x0000000110de4437 tensorflow::(anonymous namespace)::CopyDeviceToHost(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::__1::function<void (tensorflow::Status const&)>) + 471\n6   libtensorflow_framework.so    \t0x0000000110de3a9b tensorflow::CopyTensor::ViaDMA(tensorflow::StringPiece, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::__1::function<void (tensorflow::Status const&)>) + 3227\n7   libtensorflow_framework.so    \t0x0000000110e200e2 tensorflow::IntraProcessRendezvous::SameWorkerRecvDone(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, tensorflow::Tensor*, std::__1::function<void (tensorflow::Status const&)>) + 1074\n8   libtensorflow_framework.so    \t0x0000000110e20b8d std::__1::__function::__func<tensorflow::IntraProcessRendezvous::RecvAsync(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, std::__1::function<void (tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)>)::$_0, std::__1::allocator<tensorflow::IntraProcessRendezvous::RecvAsync(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, std::__1::function<void (tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)>)::$_0>, void (tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)>::operator()(tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool&&) + 813\n9   libtensorflow_framework.so    \t0x0000000110c9eb4c tensorflow::LocalRendezvousImpl::Send(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool) + 380\n10  libtensorflow_framework.so    \t0x0000000110e1fb52 tensorflow::IntraProcessRendezvous::Send(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool) + 162\n11  _pywrap_tensorflow_internal.so\t0x000000011625ebfa tensorflow::SendOp::Compute(tensorflow::OpKernelContext*) + 794\n12  libtensorflow_framework.so    \t0x0000000110db44a7 tensorflow::BaseGPUDevice::ComputeHelper(tensorflow::OpKernel*, tensorflow::OpKernelContext*) + 1287\n13  libtensorflow_framework.so    \t0x0000000110df3dbd tensorflow::(anonymous namespace)::ExecutorState::Process(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long) + 5181\n14  libtensorflow_framework.so    \t0x0000000110df43b5 std::__1::__function::__func<tensorflow::(anonymous namespace)::ExecutorState::ScheduleReady(tensorflow::gtl::InlinedVector<tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, 8> const&, tensorflow::(anonymous namespace)::ExecutorState::TaggedNodeReadyQueue*)::$_1, std::__1::allocator<tensorflow::(anonymous namespace)::ExecutorState::ScheduleReady(tensorflow::gtl::InlinedVector<tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, 8> const&, tensorflow::(anonymous namespace)::ExecutorState::TaggedNodeReadyQueue*)::$_1>, void ()>::operator()() + 37\n15  libtensorflow_framework.so    \t0x0000000110e3fd5f Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::WorkerLoop(int) + 2047\n16  libtensorflow_framework.so    \t0x0000000110e3f45f std::__1::__function::__func<tensorflow::thread::EigenEnvironment::CreateThread(std::__1::function<void ()>)::'lambda'(), std::__1::allocator<tensorflow::thread::EigenEnvironment::CreateThread(std::__1::function<void ()>)::'lambda'()>, void ()>::operator()() + 47\n17  libtensorflow_framework.so    \t0x0000000110e66000 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, std::__1::function<void ()> > >(void*) + 48\n18  libsystem_pthread.dylib       \t0x00007fff7ff696c1 _pthread_body + 340\n19  libsystem_pthread.dylib       \t0x00007fff7ff6956d _pthread_start + 377\n20  libsystem_pthread.dylib       \t0x00007fff7ff68c5d thread_start + 13", "body": "Still seeing SEGFAULT on macOS+GPU build: \r\n```\r\nThread 20 Crashed:\r\n0   libtensorflow_framework.so    \t0x0000000110e3b090 void tensorflow::gtl::InlinedVector<tensorflow::EventMgr::InUse, 4>::emplace_back<tensorflow::EventMgr::InUse const&>(tensorflow::EventMgr::InUse const&&&) + 176\r\n1   libtensorflow_framework.so    \t0x0000000110e3a43c tensorflow::EventMgr::PollEvents(bool, tensorflow::gtl::InlinedVector<tensorflow::EventMgr::InUse, 4>*) + 300\r\n2   libtensorflow_framework.so    \t0x0000000110dbf252 tensorflow::EventMgr::ThenExecute(perftools::gputools::Stream*, std::__1::function<void ()>) + 194\r\n3   libtensorflow_framework.so    \t0x0000000110dbfa18 tensorflow::GPUUtil::CopyGPUTensorToCPU(tensorflow::Device*, tensorflow::DeviceContext const*, tensorflow::Tensor const*, tensorflow::Tensor*, std::__1::function<void (tensorflow::Status const&)>) + 712\r\n4   libtensorflow_framework.so    \t0x0000000110dc1cd9 tensorflow::GPUDeviceContext::CopyDeviceTensorToCPU(tensorflow::Tensor const*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, std::__1::function<void (tensorflow::Status const&)>) + 121\r\n5   libtensorflow_framework.so    \t0x0000000110de4437 tensorflow::(anonymous namespace)::CopyDeviceToHost(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::__1::function<void (tensorflow::Status const&)>) + 471\r\n6   libtensorflow_framework.so    \t0x0000000110de3a9b tensorflow::CopyTensor::ViaDMA(tensorflow::StringPiece, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::__1::function<void (tensorflow::Status const&)>) + 3227\r\n7   libtensorflow_framework.so    \t0x0000000110e200e2 tensorflow::IntraProcessRendezvous::SameWorkerRecvDone(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, tensorflow::Tensor*, std::__1::function<void (tensorflow::Status const&)>) + 1074\r\n8   libtensorflow_framework.so    \t0x0000000110e20b8d std::__1::__function::__func<tensorflow::IntraProcessRendezvous::RecvAsync(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, std::__1::function<void (tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)>)::$_0, std::__1::allocator<tensorflow::IntraProcessRendezvous::RecvAsync(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, std::__1::function<void (tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)>)::$_0>, void (tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)>::operator()(tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool&&) + 813\r\n9   libtensorflow_framework.so    \t0x0000000110c9eb4c tensorflow::LocalRendezvousImpl::Send(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool) + 380\r\n10  libtensorflow_framework.so    \t0x0000000110e1fb52 tensorflow::IntraProcessRendezvous::Send(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool) + 162\r\n11  _pywrap_tensorflow_internal.so\t0x000000011625ebfa tensorflow::SendOp::Compute(tensorflow::OpKernelContext*) + 794\r\n12  libtensorflow_framework.so    \t0x0000000110db44a7 tensorflow::BaseGPUDevice::ComputeHelper(tensorflow::OpKernel*, tensorflow::OpKernelContext*) + 1287\r\n13  libtensorflow_framework.so    \t0x0000000110df3dbd tensorflow::(anonymous namespace)::ExecutorState::Process(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long) + 5181\r\n14  libtensorflow_framework.so    \t0x0000000110df43b5 std::__1::__function::__func<tensorflow::(anonymous namespace)::ExecutorState::ScheduleReady(tensorflow::gtl::InlinedVector<tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, 8> const&, tensorflow::(anonymous namespace)::ExecutorState::TaggedNodeReadyQueue*)::$_1, std::__1::allocator<tensorflow::(anonymous namespace)::ExecutorState::ScheduleReady(tensorflow::gtl::InlinedVector<tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, 8> const&, tensorflow::(anonymous namespace)::ExecutorState::TaggedNodeReadyQueue*)::$_1>, void ()>::operator()() + 37\r\n15  libtensorflow_framework.so    \t0x0000000110e3fd5f Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::WorkerLoop(int) + 2047\r\n16  libtensorflow_framework.so    \t0x0000000110e3f45f std::__1::__function::__func<tensorflow::thread::EigenEnvironment::CreateThread(std::__1::function<void ()>)::'lambda'(), std::__1::allocator<tensorflow::thread::EigenEnvironment::CreateThread(std::__1::function<void ()>)::'lambda'()>, void ()>::operator()() + 47\r\n17  libtensorflow_framework.so    \t0x0000000110e66000 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, std::__1::function<void ()> > >(void*) + 48\r\n18  libsystem_pthread.dylib       \t0x00007fff7ff696c1 _pthread_body + 340\r\n19  libsystem_pthread.dylib       \t0x00007fff7ff6956d _pthread_start + 377\r\n20  libsystem_pthread.dylib       \t0x00007fff7ff68c5d thread_start + 13\r\n```"}