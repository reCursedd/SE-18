{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2448", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2448/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2448/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2448/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/2448", "id": 156076935, "node_id": "MDU6SXNzdWUxNTYwNzY5MzU=", "number": 2448, "title": "Session got stuck after fork", "user": {"login": "ppwwyyxx", "id": 1381301, "node_id": "MDQ6VXNlcjEzODEzMDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1381301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ppwwyyxx", "html_url": "https://github.com/ppwwyyxx", "followers_url": "https://api.github.com/users/ppwwyyxx/followers", "following_url": "https://api.github.com/users/ppwwyyxx/following{/other_user}", "gists_url": "https://api.github.com/users/ppwwyyxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/ppwwyyxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ppwwyyxx/subscriptions", "organizations_url": "https://api.github.com/users/ppwwyyxx/orgs", "repos_url": "https://api.github.com/users/ppwwyyxx/repos", "events_url": "https://api.github.com/users/ppwwyyxx/events{/privacy}", "received_events_url": "https://api.github.com/users/ppwwyyxx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-05-21T01:32:13Z", "updated_at": "2016-10-20T11:05:58Z", "closed_at": "2016-05-21T01:39:59Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Version: nightly prebuilt for Python2 w/ GPU (just now)</p>\n<p>I'm expecting the following code to print \"10.0\" 3 times, but session.run got stuck in all forked processes.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">import</span> multiprocessing <span class=\"pl-k\">as</span> mp\n<span class=\"pl-k\">import</span> os\n\n<span class=\"pl-k\">class</span> <span class=\"pl-en\">Worker</span>(<span class=\"pl-e\">mp</span>.<span class=\"pl-e\">Process</span>):\n    <span class=\"pl-k\">def</span> <span class=\"pl-c1\">__init__</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">gid</span>):\n        <span class=\"pl-c1\">self</span>.gid <span class=\"pl-k\">=</span> gid\n        <span class=\"pl-c1\">super</span>(Worker, <span class=\"pl-c1\">self</span>).<span class=\"pl-c1\">__init__</span>()\n\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">run</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>):\n        G <span class=\"pl-k\">=</span> tf.Graph()\n        <span class=\"pl-k\">with</span> G.as_default():\n            x <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>[])\n            y <span class=\"pl-k\">=</span> x <span class=\"pl-k\">*</span> <span class=\"pl-c1\">2</span>\n            sess <span class=\"pl-k\">=</span> tf.Session()\n            <span class=\"pl-c1\">print</span> sess.run(y, <span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>{x: <span class=\"pl-c1\">5</span>})\n\nG <span class=\"pl-k\">=</span> tf.Graph()\n<span class=\"pl-k\">with</span> G.as_default():\n    sess <span class=\"pl-k\">=</span> tf.Session()\n    <span class=\"pl-k\">with</span> sess.as_default():\n        x <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>[])\n        y <span class=\"pl-k\">=</span> x <span class=\"pl-k\">*</span> <span class=\"pl-c1\">2</span>\n        <span class=\"pl-c1\">print</span> sess.run(y, <span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>{x: <span class=\"pl-c1\">5</span>})\n\nprocs <span class=\"pl-k\">=</span> [Worker(k) <span class=\"pl-k\">for</span> k <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">2</span>)]\n<span class=\"pl-k\">for</span> p <span class=\"pl-k\">in</span> procs: p.start()\n<span class=\"pl-k\">for</span> p <span class=\"pl-k\">in</span> procs: p.join()</pre></div>\n<p>Removing the graph/session in master process will solve the problem. So it seems like once there is a session, we cannot use fork?<br>\nThe problem exists with and without GPU.</p>\n<p>NOTE:  this code doesn't terminate normally. You'll probably need to manually kill the forked processes after the master exited.</p>", "body_text": "Version: nightly prebuilt for Python2 w/ GPU (just now)\nI'm expecting the following code to print \"10.0\" 3 times, but session.run got stuck in all forked processes.\nimport tensorflow as tf\nimport multiprocessing as mp\nimport os\n\nclass Worker(mp.Process):\n    def __init__(self, gid):\n        self.gid = gid\n        super(Worker, self).__init__()\n\n    def run(self):\n        G = tf.Graph()\n        with G.as_default():\n            x = tf.placeholder(tf.float32, shape=[])\n            y = x * 2\n            sess = tf.Session()\n            print sess.run(y, feed_dict={x: 5})\n\nG = tf.Graph()\nwith G.as_default():\n    sess = tf.Session()\n    with sess.as_default():\n        x = tf.placeholder(tf.float32, shape=[])\n        y = x * 2\n        print sess.run(y, feed_dict={x: 5})\n\nprocs = [Worker(k) for k in range(2)]\nfor p in procs: p.start()\nfor p in procs: p.join()\nRemoving the graph/session in master process will solve the problem. So it seems like once there is a session, we cannot use fork?\nThe problem exists with and without GPU.\nNOTE:  this code doesn't terminate normally. You'll probably need to manually kill the forked processes after the master exited.", "body": "Version: nightly prebuilt for Python2 w/ GPU (just now)\n\nI'm expecting the following code to print \"10.0\" 3 times, but session.run got stuck in all forked processes.\n\n``` python\nimport tensorflow as tf\nimport multiprocessing as mp\nimport os\n\nclass Worker(mp.Process):\n    def __init__(self, gid):\n        self.gid = gid\n        super(Worker, self).__init__()\n\n    def run(self):\n        G = tf.Graph()\n        with G.as_default():\n            x = tf.placeholder(tf.float32, shape=[])\n            y = x * 2\n            sess = tf.Session()\n            print sess.run(y, feed_dict={x: 5})\n\nG = tf.Graph()\nwith G.as_default():\n    sess = tf.Session()\n    with sess.as_default():\n        x = tf.placeholder(tf.float32, shape=[])\n        y = x * 2\n        print sess.run(y, feed_dict={x: 5})\n\nprocs = [Worker(k) for k in range(2)]\nfor p in procs: p.start()\nfor p in procs: p.join()\n```\n\nRemoving the graph/session in master process will solve the problem. So it seems like once there is a session, we cannot use fork?\nThe problem exists with and without GPU.\n\nNOTE:  this code doesn't terminate normally. You'll probably need to manually kill the forked processes after the master exited. \n"}