{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/160557309", "pull_request_review_id": 87695960, "id": 160557309, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDU1NzMwOQ==", "diff_hunk": "@@ -13,15 +13,111 @@\n * [TensorFlow Lite](https://github.com/tensorflow/tensorflow/tree/r1.5/tensorflow/contrib/lite)\n   dev preview is now available.\n * CUDA 9 and cuDNN 7 support.\n+* Accelerated Linear Algebra (XLA):\n+  * Add complex64 support to XLA compiler.\n+  * bfloat support is now added to XLA infra.\n+  * Make ClusterSpec propagation work with XLA devices.\n+  * Use a determinisitic executor to generate XLA graph.\n+* `tf.contrib`:\n+  * `tf.contrib.distributions`:\n+    * Add `tf.contrib.distributions.Autoregressive`.\n+    * Make `tf.contrib.distributions` QuadratureCompound classes support batch\n+    * Infer `tf.contrib.distributions.RelaxedOneHotCategorical` `dtype` from arguments.\n+    * Make `tf.contrib.distributions` quadrature family parameterized by\n+      `quadrature_grid_and_prob` vs `quadrature_degree`.\n+    * `auto_correlation` added to `tf.contrib.distributions`\n+  * Add `tf.contrib.bayesflow.layers`, a collection of probabilistic (neural) layers.\n+  * Add `tf.contrib.bayesflow.halton_sequence`.\n+  * Add `tf.contrib.data.make_saveable_from_iterator.`\n+  * Add `tf.contrib.data.shuffle_and_repeat`.\n+  * Add new custom transformation: `tf.contrib.data.scan()`.\n+  * `tf.contrib.distributions.bijectors`:\n+    * Add `tf.contrib.distributions.bijectors.MaskedAutoregressiveFlow`.\n+    * Add `tf.contrib.distributions.bijectors.Permute`.\n+    * Add `tf.contrib.distributions.bijectors.Gumbel`.\n+    * Add `tf.contrib.distributions.bijectors.Reshape`.\n+    * Support shape inference (i.e., shapes containing -1) in the Reshape bijector.\n+* Add `streaming_precision_recall_at_equal_thresholds,` a method for computing\n+  streaming precision and recall with `O(num_thresholds + size of predictions)`\n+  time and space complexity.\n+* Change RunConfig default behavior to not set a random seed, making random\n+  behavior independently random on distributed workers. We expect this to\n+  generally improve training performance. Models that do rely on determinism\n+  should set a random seed explicitly.\n+* Replaced the implementation of tf.flags with absl.flags.\n \n ## Bug Fixes and Other Changes\n-* `auto_correlation` added to `tf.contrib.distributions`.\n-* Add `DenseFlipout` probabilistic layer.\n-* Restandardize `DenseVariational` as simpler template for other probabilistic layers.\n-* Make `tf.contrib.distributions` QuadratureCompound classes support batch.\n-* `Stream::BlockHostUntilDone` now returns Status rather than bool.\n-* Customize request timeouts for the GCS filesystem.\n-* `tf.data` now supports `tf.SparseTensor` components in dataset elements.\n+* Documentation updates:\n+  * Clarified that you can only install TensorFlow on 64-bit machines.\n+  * Added a short doc explaining how Estimators save checkpoints.\n+  * Add documentation for ops supported by the tf2xla bridge.\n+  * Fix minor typos in the doc of SpaceToDepth and DepthToSpace.\n+  * Updated documentation comments in `mfcc_mel_filterbank.h` and `mfcc.h` to\n+    clarify that the input domain is squared magnitude spectra and the weighting\n+    is done on linear magnitude spectra (sqrt of inputs).\n+  * Change `tf.contrib.distributions` docstring examples to use `tfd` alias rather than `ds`, `bs`.\n+  * Fix docstring typos in tf.distributions.bijectors.Bijector.\n+  * `tf.assert_equal` no longer raises `ValueError.` It now raises\n+    `InvalidArgumentError,` as documented.\n+* Google Cloud Storage (GCS):\n+  * Add userspace DNS caching for the GCS client.\n+  * Customize request timeouts for the GCS filesystem.\n+  * Improve GCS filesystem caching.\n+* Bug Fixes:\n+  * Fix bug where partitioned integer variables got their wrong shapes. Before\n+  * Fix correctness bug in CPU and GPU implementations of Adadelta.\n+  * Fix a bug in `import_meta_graph`'s handling of partitioned variables when\n+    importing into a scope. WARNING: This may break loading checkpoints of\n+    graphs with partitioned variables saved after using `import_meta_graph` with\n+    a non-empty `import_scope` argument.\n+  * Fix bug in offline debugger which prevented viewing events.\n+  * Added the WorkerService.DeleteWorkerSession method to the gRPC interface, to\n+    fix a memory leak. Ensure that your master and worker servers are running\n+    the same version of TensorFlow to avoid compatibility issues.\n+  * Fix bug in peephole implementation of BlockLSTM cell.\n+  * Fix bug by casting dtype of `log_det_jacobian` to match `log_prob` in TransformedDistribution.\n+  * Fix a bug in `import_meta_graph`'s handling of partitioned variables when\n+  * Ensure `tf.distributions.Multinomial` doesn't underflow in `log_prob`.\n+    Before this change, all partitions of an integer variable were initialized\n+    with the shape of the unpartitioned variable; after this change they are\n+    initialized correctly.\n+* Other:\n+  * Add necessary shape util support for bfloat16.\n+  * Add a way to run ops using a step function to MonitoredSession.\n+  * Add DenseFlipout probabilistic layer.\n+  * Add `DenseFlipout` probabilistic layer.\n+  * A new flag `ignore_live_threads` is available on train. If set to True, it\n+  * Restandardize `DenseVariational` as simpler template for other probabilistic\n+    layers.\n+  * `tf.data` now supports `tf.SparseTensor` components in dataset elements.\n+    will ignore threads that remain running when tearing down infrastructure\n+    after successfully completing training, instead of throwing a RuntimeError.\n+  * It is now possible to iterate over Tensors", "path": "RELEASE.md", "position": null, "original_position": 90, "commit_id": "cb0ce3a86de5a4128955a0c5a6e8b060fd3f6a39", "original_commit_id": "23c4ab0658cb73d149706e1948d53852e9cf318b", "user": {"login": "av8ramit", "id": 5588272, "node_id": "MDQ6VXNlcjU1ODgyNzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5588272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/av8ramit", "html_url": "https://github.com/av8ramit", "followers_url": "https://api.github.com/users/av8ramit/followers", "following_url": "https://api.github.com/users/av8ramit/following{/other_user}", "gists_url": "https://api.github.com/users/av8ramit/gists{/gist_id}", "starred_url": "https://api.github.com/users/av8ramit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/av8ramit/subscriptions", "organizations_url": "https://api.github.com/users/av8ramit/orgs", "repos_url": "https://api.github.com/users/av8ramit/repos", "events_url": "https://api.github.com/users/av8ramit/events{/privacy}", "received_events_url": "https://api.github.com/users/av8ramit/received_events", "type": "User", "site_admin": false}, "body": "Punctuation.", "created_at": "2018-01-09T23:50:41Z", "updated_at": "2018-01-10T00:27:17Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/15988#discussion_r160557309", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/15988", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/160557309"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/15988#discussion_r160557309"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/15988"}}, "body_html": "<p>Punctuation.</p>", "body_text": "Punctuation."}