{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19946", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19946/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19946/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19946/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19946", "id": 331681666, "node_id": "MDU6SXNzdWUzMzE2ODE2NjY=", "number": 19946, "title": "Extend replicate_model_fn to work with datasets with arbitrary nested structure of tensors as input_fn", "user": {"login": "alexbeloi", "id": 9807648, "node_id": "MDQ6VXNlcjk4MDc2NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/9807648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexbeloi", "html_url": "https://github.com/alexbeloi", "followers_url": "https://api.github.com/users/alexbeloi/followers", "following_url": "https://api.github.com/users/alexbeloi/following{/other_user}", "gists_url": "https://api.github.com/users/alexbeloi/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexbeloi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexbeloi/subscriptions", "organizations_url": "https://api.github.com/users/alexbeloi/orgs", "repos_url": "https://api.github.com/users/alexbeloi/repos", "events_url": "https://api.github.com/users/alexbeloi/events{/privacy}", "received_events_url": "https://api.github.com/users/alexbeloi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "jart", "id": 49262, "node_id": "MDQ6VXNlcjQ5MjYy", "avatar_url": "https://avatars1.githubusercontent.com/u/49262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jart", "html_url": "https://github.com/jart", "followers_url": "https://api.github.com/users/jart/followers", "following_url": "https://api.github.com/users/jart/following{/other_user}", "gists_url": "https://api.github.com/users/jart/gists{/gist_id}", "starred_url": "https://api.github.com/users/jart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jart/subscriptions", "organizations_url": "https://api.github.com/users/jart/orgs", "repos_url": "https://api.github.com/users/jart/repos", "events_url": "https://api.github.com/users/jart/events{/privacy}", "received_events_url": "https://api.github.com/users/jart/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jart", "id": 49262, "node_id": "MDQ6VXNlcjQ5MjYy", "avatar_url": "https://avatars1.githubusercontent.com/u/49262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jart", "html_url": "https://github.com/jart", "followers_url": "https://api.github.com/users/jart/followers", "following_url": "https://api.github.com/users/jart/following{/other_user}", "gists_url": "https://api.github.com/users/jart/gists{/gist_id}", "starred_url": "https://api.github.com/users/jart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jart/subscriptions", "organizations_url": "https://api.github.com/users/jart/orgs", "repos_url": "https://api.github.com/users/jart/repos", "events_url": "https://api.github.com/users/jart/events{/privacy}", "received_events_url": "https://api.github.com/users/jart/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-06-12T17:26:05Z", "updated_at": "2018-07-16T03:28:25Z", "closed_at": "2018-07-16T03:28:24Z", "author_association": "NONE", "body_html": "<p>Please go to Stack Overflow for help and support:</p>\n<p><a href=\"https://stackoverflow.com/questions/tagged/tensorflow\" rel=\"nofollow\">https://stackoverflow.com/questions/tagged/tensorflow</a></p>\n<p>If you open a GitHub issue, here is our policy:</p>\n<ol>\n<li>It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).</li>\n<li>The form below must be filled out.</li>\n<li>It shouldn't be a TensorBoard issue. Those go <a href=\"https://github.com/tensorflow/tensorboard/issues\">here</a>.</li>\n</ol>\n<p><strong>Here's why we have that policy</strong>: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.</p>\n<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.8.0-0-g93bc2e2072 1.8.0</li>\n<li><strong>Python version</strong>:  3.5.2</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>: CUDA 9.0 / cuDNN 7.0</li>\n<li><strong>GPU model and memory</strong>: Nvidia K80 (x4)</li>\n<li><strong>Exact command to reproduce</strong>: python training/train.py</li>\n</ul>\n<p>You can collect some of this information using our environment capture script:</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\">https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh</a></p>\n<p>You can obtain the TensorFlow version with</p>\n<p>python -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"</p>\n<h3>Describe the problem</h3>\n<p>Feature request: extend <code>tf.contrib.estimator.replicate_model_fn</code> to be usable with a dataset feeder (with arbitrary nested structure of tensors) as <code>input_fn</code>. Currently the <code>_split_batch</code> (in replicate_model_fn.py) can only split flat nested structures.</p>\n<h3>Source code / logs</h3>\n<p>Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.</p>\n<p>Below is traceback from dataset using dict of dict of tensors.</p>\n<pre><code>Traceback (most recent call last):\n  File \"training/train.py\", line 82, in &lt;module&gt;\n    run_experiment(args.train_files, args.eval_files, hparams)\n  File \"training/train.py\", line 50, in run_experiment\n    tf.estimator.train_and_evaluate(_estimator, train_spec, eval_spec)\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/estimator/training.py\", line 439, in train_and_evaluate\n    executor.run()\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/estimator/training.py\", line 518, in run\n    self.run_local()\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/estimator/training.py\", line 650, in run_local\n    hooks=train_hooks)\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/estimator/estimator.py\", line 363, in train\n    loss = self._train_model(input_fn, hooks, saving_listeners)\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/estimator/estimator.py\", line 843, in _train_model\n    return self._train_model_default(input_fn, hooks, saving_listeners)\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/estimator/estimator.py\", line 856, in _train_model_default\n    features, labels, model_fn_lib.ModeKeys.TRAIN, self.config)\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/estimator/estimator.py\", line 831, in _call_model_fn\n    model_fn_results = self._model_fn(features=features, **kwargs)\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/contrib/estimator/python/estimator/replicate_model_fn.py\", line 226, in replicated_model_fn\n    features, labels, len(devices), device=consolidation_device)\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/contrib/estimator/python/estimator/replicate_model_fn.py\", line 486, in _split_batch\n    feature_shards = split_dictionary(features)\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/contrib/estimator/python/estimator/replicate_model_fn.py\", line 478, in split_dictionary\n    ensure_divisible_by_shards(tensor)\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/contrib/estimator/python/estimator/replicate_model_fn.py\", line 462, in ensure_divisible_by_shards\n    batch_size = ops_lib.convert_to_tensor(sequence).get_shape()[0]\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 1014, in convert_to_tensor\n    as_ref=False)\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 1104, in internal_convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/framework/constant_op.py\", line 235, in _constant_tensor_conversion_function\n    return constant(v, dtype=dtype, name=name)\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/framework/constant_op.py\", line 214, in constant\n    value, dtype=dtype, shape=shape, verify_shape=verify_shape))\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/framework/tensor_util.py\", line 521, in make_tensor_proto\n    \"supported type.\" % (type(values), values))\nTypeError: Failed to convert object of type &lt;class 'dict'&gt; to Tensor. Contents: {'input_seq': &lt;tf.Tensor 'IteratorGetNext:4' shape=(128, ?) dtype=int64&gt;, 'stop_token': &lt;tf.Tensor 'IteratorGetNext:3' shape=(128, ?) dtype=float32&gt;, 'target_seq': &lt;tf.Tensor 'IteratorGetNext:2' shape=(128, ?, 80) dtype=float32&gt;}. Consider casting elements to a supported type.\n</code></pre>", "body_text": "Please go to Stack Overflow for help and support:\nhttps://stackoverflow.com/questions/tagged/tensorflow\nIf you open a GitHub issue, here is our policy:\n\nIt must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\nThe form below must be filled out.\nIt shouldn't be a TensorBoard issue. Those go here.\n\nHere's why we have that policy: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\n\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): v1.8.0-0-g93bc2e2072 1.8.0\nPython version:  3.5.2\nBazel version (if compiling from source):\nGCC/Compiler version (if compiling from source):\nCUDA/cuDNN version: CUDA 9.0 / cuDNN 7.0\nGPU model and memory: Nvidia K80 (x4)\nExact command to reproduce: python training/train.py\n\nYou can collect some of this information using our environment capture script:\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\nYou can obtain the TensorFlow version with\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\nDescribe the problem\nFeature request: extend tf.contrib.estimator.replicate_model_fn to be usable with a dataset feeder (with arbitrary nested structure of tensors) as input_fn. Currently the _split_batch (in replicate_model_fn.py) can only split flat nested structures.\nSource code / logs\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\nBelow is traceback from dataset using dict of dict of tensors.\nTraceback (most recent call last):\n  File \"training/train.py\", line 82, in <module>\n    run_experiment(args.train_files, args.eval_files, hparams)\n  File \"training/train.py\", line 50, in run_experiment\n    tf.estimator.train_and_evaluate(_estimator, train_spec, eval_spec)\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/estimator/training.py\", line 439, in train_and_evaluate\n    executor.run()\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/estimator/training.py\", line 518, in run\n    self.run_local()\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/estimator/training.py\", line 650, in run_local\n    hooks=train_hooks)\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/estimator/estimator.py\", line 363, in train\n    loss = self._train_model(input_fn, hooks, saving_listeners)\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/estimator/estimator.py\", line 843, in _train_model\n    return self._train_model_default(input_fn, hooks, saving_listeners)\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/estimator/estimator.py\", line 856, in _train_model_default\n    features, labels, model_fn_lib.ModeKeys.TRAIN, self.config)\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/estimator/estimator.py\", line 831, in _call_model_fn\n    model_fn_results = self._model_fn(features=features, **kwargs)\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/contrib/estimator/python/estimator/replicate_model_fn.py\", line 226, in replicated_model_fn\n    features, labels, len(devices), device=consolidation_device)\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/contrib/estimator/python/estimator/replicate_model_fn.py\", line 486, in _split_batch\n    feature_shards = split_dictionary(features)\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/contrib/estimator/python/estimator/replicate_model_fn.py\", line 478, in split_dictionary\n    ensure_divisible_by_shards(tensor)\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/contrib/estimator/python/estimator/replicate_model_fn.py\", line 462, in ensure_divisible_by_shards\n    batch_size = ops_lib.convert_to_tensor(sequence).get_shape()[0]\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 1014, in convert_to_tensor\n    as_ref=False)\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 1104, in internal_convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/framework/constant_op.py\", line 235, in _constant_tensor_conversion_function\n    return constant(v, dtype=dtype, name=name)\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/framework/constant_op.py\", line 214, in constant\n    value, dtype=dtype, shape=shape, verify_shape=verify_shape))\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/framework/tensor_util.py\", line 521, in make_tensor_proto\n    \"supported type.\" % (type(values), values))\nTypeError: Failed to convert object of type <class 'dict'> to Tensor. Contents: {'input_seq': <tf.Tensor 'IteratorGetNext:4' shape=(128, ?) dtype=int64>, 'stop_token': <tf.Tensor 'IteratorGetNext:3' shape=(128, ?) dtype=float32>, 'target_seq': <tf.Tensor 'IteratorGetNext:2' shape=(128, ?, 80) dtype=float32>}. Consider casting elements to a supported type.", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: v1.8.0-0-g93bc2e2072 1.8.0\r\n- **Python version**:  3.5.2\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**: CUDA 9.0 / cuDNN 7.0\r\n- **GPU model and memory**: Nvidia K80 (x4)\r\n- **Exact command to reproduce**: python training/train.py\r\n\r\nYou can collect some of this information using our environment capture script: \r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nFeature request: extend `tf.contrib.estimator.replicate_model_fn` to be usable with a dataset feeder (with arbitrary nested structure of tensors) as `input_fn`. Currently the `_split_batch` (in replicate_model_fn.py) can only split flat nested structures.\r\n\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n\r\nBelow is traceback from dataset using dict of dict of tensors.\r\n```\r\nTraceback (most recent call last):\r\n  File \"training/train.py\", line 82, in <module>\r\n    run_experiment(args.train_files, args.eval_files, hparams)\r\n  File \"training/train.py\", line 50, in run_experiment\r\n    tf.estimator.train_and_evaluate(_estimator, train_spec, eval_spec)\r\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/estimator/training.py\", line 439, in train_and_evaluate\r\n    executor.run()\r\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/estimator/training.py\", line 518, in run\r\n    self.run_local()\r\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/estimator/training.py\", line 650, in run_local\r\n    hooks=train_hooks)\r\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/estimator/estimator.py\", line 363, in train\r\n    loss = self._train_model(input_fn, hooks, saving_listeners)\r\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/estimator/estimator.py\", line 843, in _train_model\r\n    return self._train_model_default(input_fn, hooks, saving_listeners)\r\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/estimator/estimator.py\", line 856, in _train_model_default\r\n    features, labels, model_fn_lib.ModeKeys.TRAIN, self.config)\r\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/estimator/estimator.py\", line 831, in _call_model_fn\r\n    model_fn_results = self._model_fn(features=features, **kwargs)\r\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/contrib/estimator/python/estimator/replicate_model_fn.py\", line 226, in replicated_model_fn\r\n    features, labels, len(devices), device=consolidation_device)\r\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/contrib/estimator/python/estimator/replicate_model_fn.py\", line 486, in _split_batch\r\n    feature_shards = split_dictionary(features)\r\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/contrib/estimator/python/estimator/replicate_model_fn.py\", line 478, in split_dictionary\r\n    ensure_divisible_by_shards(tensor)\r\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/contrib/estimator/python/estimator/replicate_model_fn.py\", line 462, in ensure_divisible_by_shards\r\n    batch_size = ops_lib.convert_to_tensor(sequence).get_shape()[0]\r\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 1014, in convert_to_tensor\r\n    as_ref=False)\r\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 1104, in internal_convert_to_tensor\r\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/framework/constant_op.py\", line 235, in _constant_tensor_conversion_function\r\n    return constant(v, dtype=dtype, name=name)\r\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/framework/constant_op.py\", line 214, in constant\r\n    value, dtype=dtype, shape=shape, verify_shape=verify_shape))\r\n  File \"/home/alex/T2/virtualenv/lib/python3.5/site-packages/tensorflow/python/framework/tensor_util.py\", line 521, in make_tensor_proto\r\n    \"supported type.\" % (type(values), values))\r\nTypeError: Failed to convert object of type <class 'dict'> to Tensor. Contents: {'input_seq': <tf.Tensor 'IteratorGetNext:4' shape=(128, ?) dtype=int64>, 'stop_token': <tf.Tensor 'IteratorGetNext:3' shape=(128, ?) dtype=float32>, 'target_seq': <tf.Tensor 'IteratorGetNext:2' shape=(128, ?, 80) dtype=float32>}. Consider casting elements to a supported type.\r\n```\r\n"}