{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/299667653", "html_url": "https://github.com/tensorflow/tensorflow/issues/9370#issuecomment-299667653", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9370", "id": 299667653, "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTY2NzY1Mw==", "user": {"login": "zhangyaobit", "id": 1034716, "node_id": "MDQ6VXNlcjEwMzQ3MTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1034716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyaobit", "html_url": "https://github.com/zhangyaobit", "followers_url": "https://api.github.com/users/zhangyaobit/followers", "following_url": "https://api.github.com/users/zhangyaobit/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyaobit/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyaobit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyaobit/subscriptions", "organizations_url": "https://api.github.com/users/zhangyaobit/orgs", "repos_url": "https://api.github.com/users/zhangyaobit/repos", "events_url": "https://api.github.com/users/zhangyaobit/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyaobit/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-06T21:43:02Z", "updated_at": "2017-05-06T21:46:35Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5205204\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alquraishi\">@alquraishi</a>, thanks for reporting the issue. This does look like a bug/feature request. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7852469\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/boche\">@boche</a> also reported a related (potentially the same) issue here: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"193399292\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/6072\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/6072/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/6072\">#6072</a></p>\n<p>I looked into the code and currently the code only stores params for the forward direction, as you have observed. So I don't think checkpointing for the bidirectional case is currently working/supported.</p>\n<p>The unknown param order (in the bidirectional case) problem <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7852469\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/boche\">@boche</a> raised is a valid question. I looked into the cuDNN documentation. The order (in the bidirectional case) is not documented for function cudnnGetRNNLinLayerMatrixParams and \u00a0cudnnGetRNNLinLayerBiasParams. Another possibility is that the backward params are accessed by the \"layer\" parameter in these two functions. However, it is also not clear if this is the case in the cuDNN documentation.</p>\n<p>I marked this as contribution welcome for interested people to take a deeper look from here and possibly propose and work on a fix.</p>", "body_text": "@alquraishi, thanks for reporting the issue. This does look like a bug/feature request. @boche also reported a related (potentially the same) issue here: #6072\nI looked into the code and currently the code only stores params for the forward direction, as you have observed. So I don't think checkpointing for the bidirectional case is currently working/supported.\nThe unknown param order (in the bidirectional case) problem @boche raised is a valid question. I looked into the cuDNN documentation. The order (in the bidirectional case) is not documented for function cudnnGetRNNLinLayerMatrixParams and \u00a0cudnnGetRNNLinLayerBiasParams. Another possibility is that the backward params are accessed by the \"layer\" parameter in these two functions. However, it is also not clear if this is the case in the cuDNN documentation.\nI marked this as contribution welcome for interested people to take a deeper look from here and possibly propose and work on a fix.", "body": "@alquraishi, thanks for reporting the issue. This does look like a bug/feature request. @boche also reported a related (potentially the same) issue here: https://github.com/tensorflow/tensorflow/issues/6072\r\n\r\nI looked into the code and currently the code only stores params for the forward direction, as you have observed. So I don't think checkpointing for the bidirectional case is currently working/supported.\r\n\r\nThe unknown param order (in the bidirectional case) problem @boche raised is a valid question. I looked into the cuDNN documentation. The order (in the bidirectional case) is not documented for function cudnnGetRNNLinLayerMatrixParams and \u00a0cudnnGetRNNLinLayerBiasParams. Another possibility is that the backward params are accessed by the \"layer\" parameter in these two functions. However, it is also not clear if this is the case in the cuDNN documentation.\r\n\r\nI marked this as contribution welcome for interested people to take a deeper look from here and possibly propose and work on a fix.\r\n\r\n\r\n"}