{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/299667749", "html_url": "https://github.com/tensorflow/tensorflow/issues/9370#issuecomment-299667749", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9370", "id": 299667749, "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTY2Nzc0OQ==", "user": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-06T21:45:07Z", "updated_at": "2017-05-06T21:45:07Z", "author_association": "CONTRIBUTOR", "body_html": "<div class=\"email-fragment\">We should consider also contacting nvidia for clarification in their\ndocumentation.</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On Sat, May 6, 2017 at 2:43 PM, zhangyaobit ***@***.***&gt; wrote:\n <a class=\"user-mention\" href=\"https://github.com/alquraishi\">@alquraishi</a> &lt;<a href=\"https://github.com/alquraishi\">https://github.com/alquraishi</a>&gt;, thanks for reporting the\n issue. This does look like a bug/feature request. <a class=\"user-mention\" href=\"https://github.com/boche\">@boche</a>\n &lt;<a href=\"https://github.com/boche\">https://github.com/boche</a>&gt; also reported a related (potentially the same)\n issue here: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"193399292\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/6072\" href=\"https://github.com/tensorflow/tensorflow/issues/6072\">#6072</a> &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"193399292\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/6072\" href=\"https://github.com/tensorflow/tensorflow/issues/6072\">#6072</a>&gt;\n\n I looked into the code and currently the code only stores params for\n forward direction, as you have observed. So I don't think checkpointing for\n the bidirectional the case is currently working/supported.\n\n The unknown param order (in the bidirectional case) problem <a class=\"user-mention\" href=\"https://github.com/boche\">@boche</a>\n &lt;<a href=\"https://github.com/boche\">https://github.com/boche</a>&gt; raised is a valid question. I looked in the\n cuDNN documentation. The order (in the bidirectional case) is not\n documented for function cudnnGetRNNLinLayerMatrixParams and  cudnnGetRNNLinLayerBiasParams.\n Another possibility is that the backward params are accessed by the \"layer\"\n parameter in these two functions. However, it is also not clear if this is\n the case in the cuDNN documentation.\n\n I marked this as contribution welcome for interested people to take a\n deeper look from here and possibly propose and work on a fix.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"223445379\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/9370\" href=\"https://github.com/tensorflow/tensorflow/issues/9370#issuecomment-299667653\">#9370 (comment)</a>&gt;,\n or mute the thread\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/ABtim7L2tls7yl9HK82TWyLdUmS3PP1Uks5r3Ol5gaJpZM4NEkX1\">https://github.com/notifications/unsubscribe-auth/ABtim7L2tls7yl9HK82TWyLdUmS3PP1Uks5r3Ol5gaJpZM4NEkX1</a>&gt;\n .\n</div>\n<div class=\"email-fragment\"></div>\n</div>", "body_text": "We should consider also contacting nvidia for clarification in their\ndocumentation.\n\u2026\nOn Sat, May 6, 2017 at 2:43 PM, zhangyaobit ***@***.***> wrote:\n @alquraishi <https://github.com/alquraishi>, thanks for reporting the\n issue. This does look like a bug/feature request. @boche\n <https://github.com/boche> also reported a related (potentially the same)\n issue here: #6072 <#6072>\n\n I looked into the code and currently the code only stores params for\n forward direction, as you have observed. So I don't think checkpointing for\n the bidirectional the case is currently working/supported.\n\n The unknown param order (in the bidirectional case) problem @boche\n <https://github.com/boche> raised is a valid question. I looked in the\n cuDNN documentation. The order (in the bidirectional case) is not\n documented for function cudnnGetRNNLinLayerMatrixParams and  cudnnGetRNNLinLayerBiasParams.\n Another possibility is that the backward params are accessed by the \"layer\"\n parameter in these two functions. However, it is also not clear if this is\n the case in the cuDNN documentation.\n\n I marked this as contribution welcome for interested people to take a\n deeper look from here and possibly propose and work on a fix.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#9370 (comment)>,\n or mute the thread\n <https://github.com/notifications/unsubscribe-auth/ABtim7L2tls7yl9HK82TWyLdUmS3PP1Uks5r3Ol5gaJpZM4NEkX1>\n .", "body": "We should consider also contacting nvidia for clarification in their\ndocumentation.\n\nOn Sat, May 6, 2017 at 2:43 PM, zhangyaobit <notifications@github.com>\nwrote:\n\n> @alquraishi <https://github.com/alquraishi>, thanks for reporting the\n> issue. This does look like a bug/feature request. @boche\n> <https://github.com/boche> also reported a related (potentially the same)\n> issue here: #6072 <https://github.com/tensorflow/tensorflow/issues/6072>\n>\n> I looked into the code and currently the code only stores params for\n> forward direction, as you have observed. So I don't think checkpointing for\n> the bidirectional the case is currently working/supported.\n>\n> The unknown param order (in the bidirectional case) problem @boche\n> <https://github.com/boche> raised is a valid question. I looked in the\n> cuDNN documentation. The order (in the bidirectional case) is not\n> documented for function cudnnGetRNNLinLayerMatrixParams and  cudnnGetRNNLinLayerBiasParams.\n> Another possibility is that the backward params are accessed by the \"layer\"\n> parameter in these two functions. However, it is also not clear if this is\n> the case in the cuDNN documentation.\n>\n> I marked this as contribution welcome for interested people to take a\n> deeper look from here and possibly propose and work on a fix.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/issues/9370#issuecomment-299667653>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABtim7L2tls7yl9HK82TWyLdUmS3PP1Uks5r3Ol5gaJpZM4NEkX1>\n> .\n>\n"}