{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/177315948", "html_url": "https://github.com/tensorflow/tensorflow/issues/387#issuecomment-177315948", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/387", "id": 177315948, "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzMxNTk0OA==", "user": {"login": "jjallaire", "id": 104391, "node_id": "MDQ6VXNlcjEwNDM5MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/104391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjallaire", "html_url": "https://github.com/jjallaire", "followers_url": "https://api.github.com/users/jjallaire/followers", "following_url": "https://api.github.com/users/jjallaire/following{/other_user}", "gists_url": "https://api.github.com/users/jjallaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjallaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjallaire/subscriptions", "organizations_url": "https://api.github.com/users/jjallaire/orgs", "repos_url": "https://api.github.com/users/jjallaire/repos", "events_url": "https://api.github.com/users/jjallaire/events{/privacy}", "received_events_url": "https://api.github.com/users/jjallaire/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-30T22:00:38Z", "updated_at": "2016-01-30T22:00:38Z", "author_association": "NONE", "body_html": "<p>I've got an R package that has a binding to the TensorFlow C-interface here: <a href=\"https://github.com/jjallaire/TensorFlow\">https://github.com/jjallaire/TensorFlow</a></p>\n<p>The main trick of this package is that it doesn't actually build against the TF library (which will be impossible on CRAN unless CRAN decides to install TensorFlow on their build machines) but rather dynamically discovers it's location and loads up the symbols manually.</p>\n<p>In principle this is the first step of being able to run TF models defined as protobufs. However, as alluded to previously in this thread I think a more fruitful direction is going to be just calling all the Python code directly from within R. I'm not sure I'll have time to explore this soon but would certainly try to help out with any other efforts to make this happen.</p>", "body_text": "I've got an R package that has a binding to the TensorFlow C-interface here: https://github.com/jjallaire/TensorFlow\nThe main trick of this package is that it doesn't actually build against the TF library (which will be impossible on CRAN unless CRAN decides to install TensorFlow on their build machines) but rather dynamically discovers it's location and loads up the symbols manually.\nIn principle this is the first step of being able to run TF models defined as protobufs. However, as alluded to previously in this thread I think a more fruitful direction is going to be just calling all the Python code directly from within R. I'm not sure I'll have time to explore this soon but would certainly try to help out with any other efforts to make this happen.", "body": "I've got an R package that has a binding to the TensorFlow C-interface here: https://github.com/jjallaire/TensorFlow\n\nThe main trick of this package is that it doesn't actually build against the TF library (which will be impossible on CRAN unless CRAN decides to install TensorFlow on their build machines) but rather dynamically discovers it's location and loads up the symbols manually.  \n\nIn principle this is the first step of being able to run TF models defined as protobufs. However, as alluded to previously in this thread I think a more fruitful direction is going to be just calling all the Python code directly from within R. I'm not sure I'll have time to explore this soon but would certainly try to help out with any other efforts to make this happen.\n"}