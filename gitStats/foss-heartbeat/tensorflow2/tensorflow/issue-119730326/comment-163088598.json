{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/163088598", "html_url": "https://github.com/tensorflow/tensorflow/issues/387#issuecomment-163088598", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/387", "id": 163088598, "node_id": "MDEyOklzc3VlQ29tbWVudDE2MzA4ODU5OA==", "user": {"login": "jjallaire", "id": 104391, "node_id": "MDQ6VXNlcjEwNDM5MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/104391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjallaire", "html_url": "https://github.com/jjallaire", "followers_url": "https://api.github.com/users/jjallaire/followers", "following_url": "https://api.github.com/users/jjallaire/following{/other_user}", "gists_url": "https://api.github.com/users/jjallaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjallaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjallaire/subscriptions", "organizations_url": "https://api.github.com/users/jjallaire/orgs", "repos_url": "https://api.github.com/users/jjallaire/repos", "events_url": "https://api.github.com/users/jjallaire/events{/privacy}", "received_events_url": "https://api.github.com/users/jjallaire/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-09T02:42:47Z", "updated_at": "2015-12-09T02:42:47Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1547093\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/thirdwing\">@thirdwing</a> I'm also quite interested in R bindings. I think that mapping directly from the C++ API to R via either SWIG or Rcpp is a necessary but not sufficient condition to create really compelling R bindings. What we really need are idiomatic bindings that take advantage of R formulas, do automatic differentiation, etc. I think it's correct that it would take time and maintenance to do this properly but the result could be really stunning!</p>\n<p>BTW, another possible path is alluded to here: <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/public/tensor_c_api.h#L55-L59\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/public/tensor_c_api.h#L55-L59</a></p>\n<p>In short, it's suggested that some languages may choose to bypass the C++/SWIG route entirely and just generate the requisite ProtoBuf input to the C API. It's not clear to me whether this would be a wasteful duplication of the existing C++ layer or something that would actually simplify creating idiomatic R bindings.</p>", "body_text": "@thirdwing I'm also quite interested in R bindings. I think that mapping directly from the C++ API to R via either SWIG or Rcpp is a necessary but not sufficient condition to create really compelling R bindings. What we really need are idiomatic bindings that take advantage of R formulas, do automatic differentiation, etc. I think it's correct that it would take time and maintenance to do this properly but the result could be really stunning!\nBTW, another possible path is alluded to here: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/public/tensor_c_api.h#L55-L59\nIn short, it's suggested that some languages may choose to bypass the C++/SWIG route entirely and just generate the requisite ProtoBuf input to the C API. It's not clear to me whether this would be a wasteful duplication of the existing C++ layer or something that would actually simplify creating idiomatic R bindings.", "body": "@thirdwing I'm also quite interested in R bindings. I think that mapping directly from the C++ API to R via either SWIG or Rcpp is a necessary but not sufficient condition to create really compelling R bindings. What we really need are idiomatic bindings that take advantage of R formulas, do automatic differentiation, etc. I think it's correct that it would take time and maintenance to do this properly but the result could be really stunning!\n\nBTW, another possible path is alluded to here: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/public/tensor_c_api.h#L55-L59\n\nIn short, it's suggested that some languages may choose to bypass the C++/SWIG route entirely and just generate the requisite ProtoBuf input to the C API. It's not clear to me whether this would be a wasteful duplication of the existing C++ layer or something that would actually simplify creating idiomatic R bindings. \n"}