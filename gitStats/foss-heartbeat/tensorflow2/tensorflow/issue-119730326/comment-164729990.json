{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/164729990", "html_url": "https://github.com/tensorflow/tensorflow/issues/387#issuecomment-164729990", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/387", "id": 164729990, "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDcyOTk5MA==", "user": {"login": "jjallaire", "id": 104391, "node_id": "MDQ6VXNlcjEwNDM5MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/104391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjallaire", "html_url": "https://github.com/jjallaire", "followers_url": "https://api.github.com/users/jjallaire/followers", "following_url": "https://api.github.com/users/jjallaire/following{/other_user}", "gists_url": "https://api.github.com/users/jjallaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjallaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjallaire/subscriptions", "organizations_url": "https://api.github.com/users/jjallaire/orgs", "repos_url": "https://api.github.com/users/jjallaire/repos", "events_url": "https://api.github.com/users/jjallaire/events{/privacy}", "received_events_url": "https://api.github.com/users/jjallaire/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-15T11:05:24Z", "updated_at": "2015-12-15T11:05:24Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=577277\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/martinwicke\">@martinwicke</a> Thanks for the follow up. So it sounds like calling directly from R to python might be the best chance of providing a robust and complete R interface. We could first create a variation of the R interface that is entirely syntax compatible with the python interface then incrementally introduce various types of R sugar to make things more natural and compact for R users.</p>\n<p>In order to stay in sync this would ideally take advantage of some machine readable specification of the python interface and documentation. What do you recommend as the best course here?</p>", "body_text": "@martinwicke Thanks for the follow up. So it sounds like calling directly from R to python might be the best chance of providing a robust and complete R interface. We could first create a variation of the R interface that is entirely syntax compatible with the python interface then incrementally introduce various types of R sugar to make things more natural and compact for R users.\nIn order to stay in sync this would ideally take advantage of some machine readable specification of the python interface and documentation. What do you recommend as the best course here?", "body": "@martinwicke Thanks for the follow up. So it sounds like calling directly from R to python might be the best chance of providing a robust and complete R interface. We could first create a variation of the R interface that is entirely syntax compatible with the python interface then incrementally introduce various types of R sugar to make things more natural and compact for R users.\n\nIn order to stay in sync this would ideally take advantage of some machine readable specification of the python interface and documentation. What do you recommend as the best course here?\n"}