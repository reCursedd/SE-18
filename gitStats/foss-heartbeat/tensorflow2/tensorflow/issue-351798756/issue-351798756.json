{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21696", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21696/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21696/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21696/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21696", "id": 351798756, "node_id": "MDU6SXNzdWUzNTE3OTg3NTY=", "number": 21696, "title": "TensorFlow GDR RDMA verbs compilation failure on 1.10 ", "user": {"login": "zebrax0r", "id": 15049889, "node_id": "MDQ6VXNlcjE1MDQ5ODg5", "avatar_url": "https://avatars1.githubusercontent.com/u/15049889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zebrax0r", "html_url": "https://github.com/zebrax0r", "followers_url": "https://api.github.com/users/zebrax0r/followers", "following_url": "https://api.github.com/users/zebrax0r/following{/other_user}", "gists_url": "https://api.github.com/users/zebrax0r/gists{/gist_id}", "starred_url": "https://api.github.com/users/zebrax0r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zebrax0r/subscriptions", "organizations_url": "https://api.github.com/users/zebrax0r/orgs", "repos_url": "https://api.github.com/users/zebrax0r/repos", "events_url": "https://api.github.com/users/zebrax0r/events{/privacy}", "received_events_url": "https://api.github.com/users/zebrax0r/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "poxvoculi", "id": 15676913, "node_id": "MDQ6VXNlcjE1Njc2OTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/15676913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poxvoculi", "html_url": "https://github.com/poxvoculi", "followers_url": "https://api.github.com/users/poxvoculi/followers", "following_url": "https://api.github.com/users/poxvoculi/following{/other_user}", "gists_url": "https://api.github.com/users/poxvoculi/gists{/gist_id}", "starred_url": "https://api.github.com/users/poxvoculi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poxvoculi/subscriptions", "organizations_url": "https://api.github.com/users/poxvoculi/orgs", "repos_url": "https://api.github.com/users/poxvoculi/repos", "events_url": "https://api.github.com/users/poxvoculi/events{/privacy}", "received_events_url": "https://api.github.com/users/poxvoculi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "poxvoculi", "id": 15676913, "node_id": "MDQ6VXNlcjE1Njc2OTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/15676913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poxvoculi", "html_url": "https://github.com/poxvoculi", "followers_url": "https://api.github.com/users/poxvoculi/followers", "following_url": "https://api.github.com/users/poxvoculi/following{/other_user}", "gists_url": "https://api.github.com/users/poxvoculi/gists{/gist_id}", "starred_url": "https://api.github.com/users/poxvoculi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poxvoculi/subscriptions", "organizations_url": "https://api.github.com/users/poxvoculi/orgs", "repos_url": "https://api.github.com/users/poxvoculi/repos", "events_url": "https://api.github.com/users/poxvoculi/events{/privacy}", "received_events_url": "https://api.github.com/users/poxvoculi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-08-18T07:20:52Z", "updated_at": "2018-08-27T21:42:53Z", "closed_at": "2018-08-27T21:42:53Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No.</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: CentOS Linux 7.4.1708</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>:</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.10.0</li>\n<li><strong>Python version</strong>: 3.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.16.1</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: 7.2.0</li>\n<li><strong>CUDA/cuDNN version</strong>: 9.2.1.88</li>\n<li><strong>GPU model and memory</strong>: nVidia Volta V100 16GB</li>\n<li><strong>Exact command to reproduce</strong>: bazel build --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package</li>\n</ul>\n<p>You can collect some of this information using our environment capture script:</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\">https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh</a></p>\n<p>You can obtain the TensorFlow version with</p>\n<p>python -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"</p>\n<h3>Describe the problem</h3>\n<p>I attempted to compile TensorFlow 1.10.0 using RDMA/VERBS options+GDR options as I'm using an all infiniband EDR network with my Volta V100 HPC environment. The same compile-time strings for Bazel build worked correctly without this error in RC 1.0.8rc1 and this error was not thrown. I am using mvpachi2 + GNU GCC 7.2.0, CUDA 9.2.8.11 + Basel 0.16.0 at compile time. NCCL is at v 2.2.13. The error basel throws after 16xxx objects is as follows:<br>\n^</p>\n<pre><code>At global scope:\ncc1plus: warning: unrecognized command line option '-Wno-self-assign'\nERROR: /opt/ohpc/pub/apps/tensorflow_1.10/tensorflow/BUILD:576:1: Executing genrule //tensorflow:tensorflow_python_api_gen failed (Aborted): bash failed: error executing command /bin/bash -c ... (remaining 1 argument(s) skipped)\n2018-08-18 16:25:22.109083: F tensorflow/core/framework/allocator_registry.cc:52] New registration for AllocatorFactory with name=BFCRdmaAllocator priority=101 at location tensorflow/contrib/gdr/gdr_memory_manager.cc:204 conflicts with previous registration at location tensorflow/contrib/verbs/rdma_mgr.cc:277\n\nINFO: Elapsed time: 934.788s, Critical Path: 236.40s\nINFO: 13405 processes: 13405 local.\nFAILED: Build did NOT complete successfully\n\n</code></pre>\n<h3>Source code / logs</h3>\n<p>The above is about all I've gotten out of it, thus far. There is no obvious compile time log output from Basel-build that I can see of use.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No.\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): CentOS Linux 7.4.1708\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): 1.10.0\nPython version: 3.6\nBazel version (if compiling from source): 0.16.1\nGCC/Compiler version (if compiling from source): 7.2.0\nCUDA/cuDNN version: 9.2.1.88\nGPU model and memory: nVidia Volta V100 16GB\nExact command to reproduce: bazel build --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package\n\nYou can collect some of this information using our environment capture script:\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\nYou can obtain the TensorFlow version with\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\nDescribe the problem\nI attempted to compile TensorFlow 1.10.0 using RDMA/VERBS options+GDR options as I'm using an all infiniband EDR network with my Volta V100 HPC environment. The same compile-time strings for Bazel build worked correctly without this error in RC 1.0.8rc1 and this error was not thrown. I am using mvpachi2 + GNU GCC 7.2.0, CUDA 9.2.8.11 + Basel 0.16.0 at compile time. NCCL is at v 2.2.13. The error basel throws after 16xxx objects is as follows:\n^\nAt global scope:\ncc1plus: warning: unrecognized command line option '-Wno-self-assign'\nERROR: /opt/ohpc/pub/apps/tensorflow_1.10/tensorflow/BUILD:576:1: Executing genrule //tensorflow:tensorflow_python_api_gen failed (Aborted): bash failed: error executing command /bin/bash -c ... (remaining 1 argument(s) skipped)\n2018-08-18 16:25:22.109083: F tensorflow/core/framework/allocator_registry.cc:52] New registration for AllocatorFactory with name=BFCRdmaAllocator priority=101 at location tensorflow/contrib/gdr/gdr_memory_manager.cc:204 conflicts with previous registration at location tensorflow/contrib/verbs/rdma_mgr.cc:277\n\nINFO: Elapsed time: 934.788s, Critical Path: 236.40s\nINFO: 13405 processes: 13405 local.\nFAILED: Build did NOT complete successfully\n\n\nSource code / logs\nThe above is about all I've gotten out of it, thus far. There is no obvious compile time log output from Basel-build that I can see of use.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: CentOS Linux 7.4.1708\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**:\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.10.0\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: 0.16.1\r\n- **GCC/Compiler version (if compiling from source)**: 7.2.0\r\n- **CUDA/cuDNN version**: 9.2.1.88\r\n- **GPU model and memory**: nVidia Volta V100 16GB\r\n- **Exact command to reproduce**: bazel build --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\n\r\nI attempted to compile TensorFlow 1.10.0 using RDMA/VERBS options+GDR options as I'm using an all infiniband EDR network with my Volta V100 HPC environment. The same compile-time strings for Bazel build worked correctly without this error in RC 1.0.8rc1 and this error was not thrown. I am using mvpachi2 + GNU GCC 7.2.0, CUDA 9.2.8.11 + Basel 0.16.0 at compile time. NCCL is at v 2.2.13. The error basel throws after 16xxx objects is as follows:\r\n                                                                                                                                      ^\r\n```\r\nAt global scope:\r\ncc1plus: warning: unrecognized command line option '-Wno-self-assign'\r\nERROR: /opt/ohpc/pub/apps/tensorflow_1.10/tensorflow/BUILD:576:1: Executing genrule //tensorflow:tensorflow_python_api_gen failed (Aborted): bash failed: error executing command /bin/bash -c ... (remaining 1 argument(s) skipped)\r\n2018-08-18 16:25:22.109083: F tensorflow/core/framework/allocator_registry.cc:52] New registration for AllocatorFactory with name=BFCRdmaAllocator priority=101 at location tensorflow/contrib/gdr/gdr_memory_manager.cc:204 conflicts with previous registration at location tensorflow/contrib/verbs/rdma_mgr.cc:277\r\n\r\nINFO: Elapsed time: 934.788s, Critical Path: 236.40s\r\nINFO: 13405 processes: 13405 local.\r\nFAILED: Build did NOT complete successfully\r\n\r\n```\r\n\r\n### Source code / logs\r\nThe above is about all I've gotten out of it, thus far. There is no obvious compile time log output from Basel-build that I can see of use. \r\n"}