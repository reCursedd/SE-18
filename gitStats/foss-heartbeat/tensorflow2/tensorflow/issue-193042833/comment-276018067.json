{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/276018067", "html_url": "https://github.com/tensorflow/tensorflow/issues/6034#issuecomment-276018067", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6034", "id": 276018067, "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjAxODA2Nw==", "user": {"login": "kdavis-mozilla", "id": 12054740, "node_id": "MDQ6VXNlcjEyMDU0NzQw", "avatar_url": "https://avatars3.githubusercontent.com/u/12054740?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kdavis-mozilla", "html_url": "https://github.com/kdavis-mozilla", "followers_url": "https://api.github.com/users/kdavis-mozilla/followers", "following_url": "https://api.github.com/users/kdavis-mozilla/following{/other_user}", "gists_url": "https://api.github.com/users/kdavis-mozilla/gists{/gist_id}", "starred_url": "https://api.github.com/users/kdavis-mozilla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kdavis-mozilla/subscriptions", "organizations_url": "https://api.github.com/users/kdavis-mozilla/orgs", "repos_url": "https://api.github.com/users/kdavis-mozilla/repos", "events_url": "https://api.github.com/users/kdavis-mozilla/events{/privacy}", "received_events_url": "https://api.github.com/users/kdavis-mozilla/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-30T09:43:51Z", "updated_at": "2017-01-30T09:43:51Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1794715\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ebrevdo\">@ebrevdo</a> Until I get time to write a smaller, example one can look at <a href=\"https://github.com/tensorflow/tensorflow/blob/584d4921014db921a8f4722749adff09737826a8/tensorflow/python/kernel_tests/ctc_decoder_ops_test.py\">ctc_decoder_ops_test.py</a></p>\n<p>Documentation of <a href=\"https://www.tensorflow.org/api_docs/python/nn/connectionist_temporal_classification__ctc_#ctc_beam_search_decoder\" rel=\"nofollow\"><code>ctc_beam_search_decoder</code></a> states</p>\n<pre><code>...\nReturns:\n\nA tuple (decoded, log_probabilities) where\n\ndecoded: A list of length top_paths, where decoded[j] is a SparseTensor ...\nlog_probability: A float matrix (batch_size x top_paths) containing sequence log-probabilities.\n</code></pre>\n<p>However, for <a href=\"https://github.com/tensorflow/tensorflow/blob/584d4921014db921a8f4722749adff09737826a8/tensorflow/python/kernel_tests/ctc_decoder_ops_test.py\">ctc_decoder_ops_test.py</a> the expected results, the <code>log_prob_truth</code> values,  are</p>\n<pre><code>    log_prob_truth = np.array(\n        [\n            0.584855,  # output beam 0\n            0.389139  # output beam 1\n        ],\n        np.float32)[np.newaxis, :]\n</code></pre>\n<p>These are not log probabilities as they are positive.</p>", "body_text": "@ebrevdo Until I get time to write a smaller, example one can look at ctc_decoder_ops_test.py\nDocumentation of ctc_beam_search_decoder states\n...\nReturns:\n\nA tuple (decoded, log_probabilities) where\n\ndecoded: A list of length top_paths, where decoded[j] is a SparseTensor ...\nlog_probability: A float matrix (batch_size x top_paths) containing sequence log-probabilities.\n\nHowever, for ctc_decoder_ops_test.py the expected results, the log_prob_truth values,  are\n    log_prob_truth = np.array(\n        [\n            0.584855,  # output beam 0\n            0.389139  # output beam 1\n        ],\n        np.float32)[np.newaxis, :]\n\nThese are not log probabilities as they are positive.", "body": "@ebrevdo Until I get time to write a smaller, example one can look at [ctc_decoder_ops_test.py](https://github.com/tensorflow/tensorflow/blob/584d4921014db921a8f4722749adff09737826a8/tensorflow/python/kernel_tests/ctc_decoder_ops_test.py)\r\n\r\nDocumentation of [`ctc_beam_search_decoder`](https://www.tensorflow.org/api_docs/python/nn/connectionist_temporal_classification__ctc_#ctc_beam_search_decoder) states\r\n```\r\n...\r\nReturns:\r\n\r\nA tuple (decoded, log_probabilities) where\r\n\r\ndecoded: A list of length top_paths, where decoded[j] is a SparseTensor ...\r\nlog_probability: A float matrix (batch_size x top_paths) containing sequence log-probabilities.\r\n```\r\n\r\nHowever, for [ctc_decoder_ops_test.py](https://github.com/tensorflow/tensorflow/blob/584d4921014db921a8f4722749adff09737826a8/tensorflow/python/kernel_tests/ctc_decoder_ops_test.py) the expected results, the `log_prob_truth` values,  are\r\n```\r\n    log_prob_truth = np.array(\r\n        [\r\n            0.584855,  # output beam 0\r\n            0.389139  # output beam 1\r\n        ],\r\n        np.float32)[np.newaxis, :]\r\n```\r\nThese are not log probabilities as they are positive.\r\n"}