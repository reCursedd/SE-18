{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/134851511", "pull_request_review_id": 58188978, "id": 134851511, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNDg1MTUxMQ==", "diff_hunk": "@@ -77,9 +106,10 @@ TEST_F(GradientsTest, OneMatMul) {\n   for (const bool expected : {false, true}) {\n     const Scope& scope = expected ? scope_expected_ : scope_test_;\n     // Construct forward graph.\n-    auto x = Const(scope, {{1.0, 2.0}, {3.0, 4.0}});\n-    auto y = Const(scope, {{1.0, 0.0}, {0.0, 1.0}});\n+    auto x = ThreeNodeVariable(scope, {{1.0, 2.0}, {3.0, 4.0}});", "path": "tensorflow/cc/framework/gradients_test.cc", "position": null, "original_position": 52, "commit_id": "47e093dd36ff74c9ab8a3b2728d4c0c5331f1bef", "original_commit_id": "b71053e0984eb4ad34cad72c50fe80b39625afab", "user": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "body": "You're right that differentiating w.r.t. Const nodes isn't realistic and prevented us from catching this error. However, it makes the unit tests simpler and easier to understand. The tests aren't worthless, they just test specific functionality, which is the idea of a unit test.\r\n\r\nI think a good solution to the lack of coverage would be to have one or two \"real world\" tests that differentiate realistic graphs (we'll hopefully get these automatically when we switch the Python code to use this code under the hood). But I don't think we should add this much complexity to all of our existing unit tests in order to get slightly more coverage. For now, let's stick with the new tests you wrote that cover this particular case.", "created_at": "2017-08-23T19:44:19Z", "updated_at": "2017-08-29T21:01:29Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/12397#discussion_r134851511", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12397", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/134851511"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/12397#discussion_r134851511"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12397"}}, "body_html": "<p>You're right that differentiating w.r.t. Const nodes isn't realistic and prevented us from catching this error. However, it makes the unit tests simpler and easier to understand. The tests aren't worthless, they just test specific functionality, which is the idea of a unit test.</p>\n<p>I think a good solution to the lack of coverage would be to have one or two \"real world\" tests that differentiate realistic graphs (we'll hopefully get these automatically when we switch the Python code to use this code under the hood). But I don't think we should add this much complexity to all of our existing unit tests in order to get slightly more coverage. For now, let's stick with the new tests you wrote that cover this particular case.</p>", "body_text": "You're right that differentiating w.r.t. Const nodes isn't realistic and prevented us from catching this error. However, it makes the unit tests simpler and easier to understand. The tests aren't worthless, they just test specific functionality, which is the idea of a unit test.\nI think a good solution to the lack of coverage would be to have one or two \"real world\" tests that differentiate realistic graphs (we'll hopefully get these automatically when we switch the Python code to use this code under the hood). But I don't think we should add this much complexity to all of our existing unit tests in order to get slightly more coverage. For now, let's stick with the new tests you wrote that cover this particular case.", "in_reply_to_id": 134621385}