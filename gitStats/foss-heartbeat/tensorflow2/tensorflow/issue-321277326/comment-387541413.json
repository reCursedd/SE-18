{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/387541413", "html_url": "https://github.com/tensorflow/tensorflow/pull/19157#issuecomment-387541413", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19157", "id": 387541413, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzU0MTQxMw==", "user": {"login": "eaplatanios", "id": 1294940, "node_id": "MDQ6VXNlcjEyOTQ5NDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1294940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eaplatanios", "html_url": "https://github.com/eaplatanios", "followers_url": "https://api.github.com/users/eaplatanios/followers", "following_url": "https://api.github.com/users/eaplatanios/following{/other_user}", "gists_url": "https://api.github.com/users/eaplatanios/gists{/gist_id}", "starred_url": "https://api.github.com/users/eaplatanios/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eaplatanios/subscriptions", "organizations_url": "https://api.github.com/users/eaplatanios/orgs", "repos_url": "https://api.github.com/users/eaplatanios/repos", "events_url": "https://api.github.com/users/eaplatanios/events{/privacy}", "received_events_url": "https://api.github.com/users/eaplatanios/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-08T21:02:43Z", "updated_at": "2018-05-08T21:02:43Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Thank you very much for creating this process and being open to community feedback! :)</p>\n<p>I like the head API proposal but I would like to add something to it, based on my experience of trying to create a high-level learning API on TensorFlow Scala.</p>\n<p>We usually want different inputs while training and while performing inference (e.g., target labels in supervised learning are only provided while training). However, we also might want to produce different outputs while training and while performing inference. For example, in a machine translation task, I might want to provide a single distribution over tokens for each time point while training, but a batch of complete sequence predictions along with their scores, while performing inference. I have implemented an interface that supports those use cases too in my API, but I'm not very happy with it and so I would be interested in adopting the head API too. However, I think that this use case is not currently supported here. Is that true? If so, would you be open to a discussion about adding support for this use case?</p>\n<p>Note that these different heads that I am describing, also require different inputs to be fed to the model. In the current design proposal all heads are provided the same inputs, right?</p>\n<p>Out of curiosity, was this API inspired from the Tensor2Tensor library?</p>\n<p>Thanks,<br>\nAnthony</p>", "body_text": "Thank you very much for creating this process and being open to community feedback! :)\nI like the head API proposal but I would like to add something to it, based on my experience of trying to create a high-level learning API on TensorFlow Scala.\nWe usually want different inputs while training and while performing inference (e.g., target labels in supervised learning are only provided while training). However, we also might want to produce different outputs while training and while performing inference. For example, in a machine translation task, I might want to provide a single distribution over tokens for each time point while training, but a batch of complete sequence predictions along with their scores, while performing inference. I have implemented an interface that supports those use cases too in my API, but I'm not very happy with it and so I would be interested in adopting the head API too. However, I think that this use case is not currently supported here. Is that true? If so, would you be open to a discussion about adding support for this use case?\nNote that these different heads that I am describing, also require different inputs to be fed to the model. In the current design proposal all heads are provided the same inputs, right?\nOut of curiosity, was this API inspired from the Tensor2Tensor library?\nThanks,\nAnthony", "body": "Thank you very much for creating this process and being open to community feedback! :)\r\n\r\nI like the head API proposal but I would like to add something to it, based on my experience of trying to create a high-level learning API on TensorFlow Scala.\r\n\r\nWe usually want different inputs while training and while performing inference (e.g., target labels in supervised learning are only provided while training). However, we also might want to produce different outputs while training and while performing inference. For example, in a machine translation task, I might want to provide a single distribution over tokens for each time point while training, but a batch of complete sequence predictions along with their scores, while performing inference. I have implemented an interface that supports those use cases too in my API, but I'm not very happy with it and so I would be interested in adopting the head API too. However, I think that this use case is not currently supported here. Is that true? If so, would you be open to a discussion about adding support for this use case?\r\n\r\nNote that these different heads that I am describing, also require different inputs to be fed to the model. In the current design proposal all heads are provided the same inputs, right?\r\n\r\nOut of curiosity, was this API inspired from the Tensor2Tensor library?\r\n\r\nThanks,\r\nAnthony"}