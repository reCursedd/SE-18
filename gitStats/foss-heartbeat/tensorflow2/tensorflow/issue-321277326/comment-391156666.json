{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/391156666", "html_url": "https://github.com/tensorflow/tensorflow/pull/19157#issuecomment-391156666", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19157", "id": 391156666, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTE1NjY2Ng==", "user": {"login": "ngc92", "id": 7938269, "node_id": "MDQ6VXNlcjc5MzgyNjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7938269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngc92", "html_url": "https://github.com/ngc92", "followers_url": "https://api.github.com/users/ngc92/followers", "following_url": "https://api.github.com/users/ngc92/following{/other_user}", "gists_url": "https://api.github.com/users/ngc92/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngc92/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngc92/subscriptions", "organizations_url": "https://api.github.com/users/ngc92/orgs", "repos_url": "https://api.github.com/users/ngc92/repos", "events_url": "https://api.github.com/users/ngc92/events{/privacy}", "received_events_url": "https://api.github.com/users/ngc92/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-22T22:08:25Z", "updated_at": "2018-05-22T22:08:25Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7244943\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/roumposg\">@roumposg</a><br>\nwell, since you can easily combine higher and lower level interfaces in the <code>model_fn</code> I don't think this is something that is not supported by the current Head design.</p>\n<p>I am not quite sure whether a <code>logit_fn</code> should be supported as it adds quite a bit of complexity. If Head only takes logit tensors, though, I would not call the calculation of that a <code>logit_fn</code>, as this (to me) sounds very much like the ability of passing a <code>model_fn</code> to an estimator.</p>\n<p>I think to a user just writing a model option 2 from my last comment is fine, but from a library perspective (e.g. in case of the adversarial training for <a href=\"https://github.com/tensorflow/cleverhans\">cleverhans</a>) the third option seems more appealing. In that way passing a <code>logit_fn</code> instead of logits does increase what you can do as a writer of a general purpose head.</p>", "body_text": "@roumposg\nwell, since you can easily combine higher and lower level interfaces in the model_fn I don't think this is something that is not supported by the current Head design.\nI am not quite sure whether a logit_fn should be supported as it adds quite a bit of complexity. If Head only takes logit tensors, though, I would not call the calculation of that a logit_fn, as this (to me) sounds very much like the ability of passing a model_fn to an estimator.\nI think to a user just writing a model option 2 from my last comment is fine, but from a library perspective (e.g. in case of the adversarial training for cleverhans) the third option seems more appealing. In that way passing a logit_fn instead of logits does increase what you can do as a writer of a general purpose head.", "body": "@roumposg\r\nwell, since you can easily combine higher and lower level interfaces in the `model_fn` I don't think this is something that is not supported by the current Head design.\r\n\r\nI am not quite sure whether a `logit_fn` should be supported as it adds quite a bit of complexity. If Head only takes logit tensors, though, I would not call the calculation of that a `logit_fn`, as this (to me) sounds very much like the ability of passing a `model_fn` to an estimator.\r\n\r\nI think to a user just writing a model option 2 from my last comment is fine, but from a library perspective (e.g. in case of the adversarial training for [cleverhans](https://github.com/tensorflow/cleverhans)) the third option seems more appealing. In that way passing a `logit_fn` instead of logits does increase what you can do as a writer of a general purpose head. "}