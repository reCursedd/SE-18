{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/388119059", "html_url": "https://github.com/tensorflow/tensorflow/pull/19157#issuecomment-388119059", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19157", "id": 388119059, "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODExOTA1OQ==", "user": {"login": "roumposg", "id": 7244943, "node_id": "MDQ6VXNlcjcyNDQ5NDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/7244943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roumposg", "html_url": "https://github.com/roumposg", "followers_url": "https://api.github.com/users/roumposg/followers", "following_url": "https://api.github.com/users/roumposg/following{/other_user}", "gists_url": "https://api.github.com/users/roumposg/gists{/gist_id}", "starred_url": "https://api.github.com/users/roumposg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roumposg/subscriptions", "organizations_url": "https://api.github.com/users/roumposg/orgs", "repos_url": "https://api.github.com/users/roumposg/repos", "events_url": "https://api.github.com/users/roumposg/events{/privacy}", "received_events_url": "https://api.github.com/users/roumposg/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-10T17:08:52Z", "updated_at": "2018-05-10T17:08:52Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7938269\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ngc92\">@ngc92</a><br>\nYes, if you have 2D weight matrix, the recommended way is to define your custom <code>loss_fn</code>. The reason we did that is to avoid surprises related to the <code>loss_reduction</code> argument. E.g. some users may expect to sum over the batch but average over the classes, and it was not clear to us how to support all use cases in a clean way.</p>\n<p>Thanks for the feedback. I see that this is not well explained, we will explain in better in a future version of the document.</p>", "body_text": "@ngc92\nYes, if you have 2D weight matrix, the recommended way is to define your custom loss_fn. The reason we did that is to avoid surprises related to the loss_reduction argument. E.g. some users may expect to sum over the batch but average over the classes, and it was not clear to us how to support all use cases in a clean way.\nThanks for the feedback. I see that this is not well explained, we will explain in better in a future version of the document.", "body": "@ngc92 \r\nYes, if you have 2D weight matrix, the recommended way is to define your custom `loss_fn`. The reason we did that is to avoid surprises related to the `loss_reduction` argument. E.g. some users may expect to sum over the batch but average over the classes, and it was not clear to us how to support all use cases in a clean way.\r\n\r\nThanks for the feedback. I see that this is not well explained, we will explain in better in a future version of the document."}