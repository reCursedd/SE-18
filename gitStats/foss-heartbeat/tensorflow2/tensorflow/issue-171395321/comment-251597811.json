{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/251597811", "html_url": "https://github.com/tensorflow/tensorflow/issues/3848#issuecomment-251597811", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3848", "id": 251597811, "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTU5NzgxMQ==", "user": {"login": "rgobbel", "id": 578258, "node_id": "MDQ6VXNlcjU3ODI1OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/578258?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rgobbel", "html_url": "https://github.com/rgobbel", "followers_url": "https://api.github.com/users/rgobbel/followers", "following_url": "https://api.github.com/users/rgobbel/following{/other_user}", "gists_url": "https://api.github.com/users/rgobbel/gists{/gist_id}", "starred_url": "https://api.github.com/users/rgobbel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rgobbel/subscriptions", "organizations_url": "https://api.github.com/users/rgobbel/orgs", "repos_url": "https://api.github.com/users/rgobbel/repos", "events_url": "https://api.github.com/users/rgobbel/events{/privacy}", "received_events_url": "https://api.github.com/users/rgobbel/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-05T07:01:31Z", "updated_at": "2016-10-05T07:01:31Z", "author_association": "NONE", "body_html": "<p>+1 Seeing the same problem with a very simple test program:</p>\n<pre><code>from __future__ import print_function\n\nimport tensorflow as tf\nimport numpy as np\n\nN_EXAMPLES = 100\nBATCH_SIZE = 4\nN_EPOCHS = 3\n\nsteps_per_epoch = N_EXAMPLES / BATCH_SIZE\n\nwith tf.Graph().as_default():\n    init_op = tf.group(tf.initialize_all_variables(), tf.initialize_local_variables())\n\n    a = tf.convert_to_tensor(np.arange(N_EXAMPLES))\n    b = tf.convert_to_tensor(np.arange(N_EXAMPLES))\n\n    aa, bb = tf.train.slice_input_producer([a, b], shuffle=True, seed=1, num_epochs=N_EPOCHS)\n    batch = tf.train.batch([aa, bb], batch_size=BATCH_SIZE)\n\n    s = tf.Session()\n\n    s.run(init_op)\n\n    coord = tf.train.Coordinator()\n    threads = tf.train.start_queue_runners(sess=s, coord=coord)\n\n    try:\n        step = 0\n        epoch = 0\n        batch_within_epoch = 0\n        while not coord.should_stop() and epoch &lt; N_EPOCHS:\n            xa, xb = s.run(batch)\n            step += 1\n            print(str(step), 'aa=', str(xa), 'bb=', str(xb))\n            batch_within_epoch += 1\n            if batch_within_epoch % steps_per_epoch == 0:\n                print('------')\n                epoch += 1\n                batch_within_epoch = 0\n    except tf.errors.OutOfRangeError:\n        print('out of range')\n    finally:\n        coord.request_stop()\n        print('requesting stop')\n</code></pre>\n<p>Works fine if the <code>num_epochs</code> parameter to <code>slice_input_producer</code> is removed.</p>", "body_text": "+1 Seeing the same problem with a very simple test program:\nfrom __future__ import print_function\n\nimport tensorflow as tf\nimport numpy as np\n\nN_EXAMPLES = 100\nBATCH_SIZE = 4\nN_EPOCHS = 3\n\nsteps_per_epoch = N_EXAMPLES / BATCH_SIZE\n\nwith tf.Graph().as_default():\n    init_op = tf.group(tf.initialize_all_variables(), tf.initialize_local_variables())\n\n    a = tf.convert_to_tensor(np.arange(N_EXAMPLES))\n    b = tf.convert_to_tensor(np.arange(N_EXAMPLES))\n\n    aa, bb = tf.train.slice_input_producer([a, b], shuffle=True, seed=1, num_epochs=N_EPOCHS)\n    batch = tf.train.batch([aa, bb], batch_size=BATCH_SIZE)\n\n    s = tf.Session()\n\n    s.run(init_op)\n\n    coord = tf.train.Coordinator()\n    threads = tf.train.start_queue_runners(sess=s, coord=coord)\n\n    try:\n        step = 0\n        epoch = 0\n        batch_within_epoch = 0\n        while not coord.should_stop() and epoch < N_EPOCHS:\n            xa, xb = s.run(batch)\n            step += 1\n            print(str(step), 'aa=', str(xa), 'bb=', str(xb))\n            batch_within_epoch += 1\n            if batch_within_epoch % steps_per_epoch == 0:\n                print('------')\n                epoch += 1\n                batch_within_epoch = 0\n    except tf.errors.OutOfRangeError:\n        print('out of range')\n    finally:\n        coord.request_stop()\n        print('requesting stop')\n\nWorks fine if the num_epochs parameter to slice_input_producer is removed.", "body": "+1 Seeing the same problem with a very simple test program:\n\n```\nfrom __future__ import print_function\n\nimport tensorflow as tf\nimport numpy as np\n\nN_EXAMPLES = 100\nBATCH_SIZE = 4\nN_EPOCHS = 3\n\nsteps_per_epoch = N_EXAMPLES / BATCH_SIZE\n\nwith tf.Graph().as_default():\n    init_op = tf.group(tf.initialize_all_variables(), tf.initialize_local_variables())\n\n    a = tf.convert_to_tensor(np.arange(N_EXAMPLES))\n    b = tf.convert_to_tensor(np.arange(N_EXAMPLES))\n\n    aa, bb = tf.train.slice_input_producer([a, b], shuffle=True, seed=1, num_epochs=N_EPOCHS)\n    batch = tf.train.batch([aa, bb], batch_size=BATCH_SIZE)\n\n    s = tf.Session()\n\n    s.run(init_op)\n\n    coord = tf.train.Coordinator()\n    threads = tf.train.start_queue_runners(sess=s, coord=coord)\n\n    try:\n        step = 0\n        epoch = 0\n        batch_within_epoch = 0\n        while not coord.should_stop() and epoch < N_EPOCHS:\n            xa, xb = s.run(batch)\n            step += 1\n            print(str(step), 'aa=', str(xa), 'bb=', str(xb))\n            batch_within_epoch += 1\n            if batch_within_epoch % steps_per_epoch == 0:\n                print('------')\n                epoch += 1\n                batch_within_epoch = 0\n    except tf.errors.OutOfRangeError:\n        print('out of range')\n    finally:\n        coord.request_stop()\n        print('requesting stop')\n```\n\nWorks fine if the `num_epochs` parameter to `slice_input_producer` is removed.\n"}