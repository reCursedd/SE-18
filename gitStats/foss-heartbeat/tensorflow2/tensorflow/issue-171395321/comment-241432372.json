{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/241432372", "html_url": "https://github.com/tensorflow/tensorflow/issues/3848#issuecomment-241432372", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3848", "id": 241432372, "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTQzMjM3Mg==", "user": {"login": "lucasdavid", "id": 1595030, "node_id": "MDQ6VXNlcjE1OTUwMzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1595030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucasdavid", "html_url": "https://github.com/lucasdavid", "followers_url": "https://api.github.com/users/lucasdavid/followers", "following_url": "https://api.github.com/users/lucasdavid/following{/other_user}", "gists_url": "https://api.github.com/users/lucasdavid/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucasdavid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucasdavid/subscriptions", "organizations_url": "https://api.github.com/users/lucasdavid/orgs", "repos_url": "https://api.github.com/users/lucasdavid/repos", "events_url": "https://api.github.com/users/lucasdavid/events{/privacy}", "received_events_url": "https://api.github.com/users/lucasdavid/received_events", "type": "User", "site_admin": false}, "created_at": "2016-08-22T14:34:17Z", "updated_at": "2016-08-22T14:34:17Z", "author_association": "NONE", "body_html": "<p>Okay, maybe my example wasn't really a good. I agree that a function called <code>initialize_all_variables</code> which does not initialize all variables seems counter intuitive, but there's probably a reason for that.</p>\n<p>Also, following your organization (in which <code>all_variables</code> means all variables), you could easily achieve any initialization without the \"global_variables\" collection:</p>\n<div class=\"highlight highlight-source-python\"><pre>    <span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> s:\n        <span class=\"pl-c\"><span class=\"pl-c\">#</span> All of them.</span>\n        s.run(tf.initialize_all_variables())\n\n        <span class=\"pl-c\"><span class=\"pl-c\">#</span> Local ones.</span>\n        s.run(tf.initialize_local_variables())\n\n        <span class=\"pl-c\"><span class=\"pl-c\">#</span> \"Global\" ones.</span>\n        global_variables <span class=\"pl-k\">=</span> <span class=\"pl-c1\">set</span>(tf.all_variables()) <span class=\"pl-k\">-</span><span class=\"pl-c1\">set</span>(tf.local_variables())\n        s.run(tf.initialize_variables(global_variables))</pre></div>", "body_text": "Okay, maybe my example wasn't really a good. I agree that a function called initialize_all_variables which does not initialize all variables seems counter intuitive, but there's probably a reason for that.\nAlso, following your organization (in which all_variables means all variables), you could easily achieve any initialization without the \"global_variables\" collection:\n    with tf.Session() as s:\n        # All of them.\n        s.run(tf.initialize_all_variables())\n\n        # Local ones.\n        s.run(tf.initialize_local_variables())\n\n        # \"Global\" ones.\n        global_variables = set(tf.all_variables()) -set(tf.local_variables())\n        s.run(tf.initialize_variables(global_variables))", "body": "Okay, maybe my example wasn't really a good. I agree that a function called `initialize_all_variables` which does not initialize all variables seems counter intuitive, but there's probably a reason for that. \n\nAlso, following your organization (in which `all_variables` means all variables), you could easily achieve any initialization without the \"global_variables\" collection:\n\n``` py\n    with tf.Session() as s:\n        # All of them.\n        s.run(tf.initialize_all_variables())\n\n        # Local ones.\n        s.run(tf.initialize_local_variables())\n\n        # \"Global\" ones.\n        global_variables = set(tf.all_variables()) -set(tf.local_variables())\n        s.run(tf.initialize_variables(global_variables))\n```\n"}