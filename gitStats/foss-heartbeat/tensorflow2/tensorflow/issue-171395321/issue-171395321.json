{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3848", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3848/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3848/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3848/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3848", "id": 171395321, "node_id": "MDU6SXNzdWUxNzEzOTUzMjE=", "number": 3848, "title": "Using epochs in tf.train.slice_input_producer gives uninitialized value when combined with batching", "user": {"login": "kalle", "id": 370192, "node_id": "MDQ6VXNlcjM3MDE5Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/370192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kalle", "html_url": "https://github.com/kalle", "followers_url": "https://api.github.com/users/kalle/followers", "following_url": "https://api.github.com/users/kalle/following{/other_user}", "gists_url": "https://api.github.com/users/kalle/gists{/gist_id}", "starred_url": "https://api.github.com/users/kalle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kalle/subscriptions", "organizations_url": "https://api.github.com/users/kalle/orgs", "repos_url": "https://api.github.com/users/kalle/repos", "events_url": "https://api.github.com/users/kalle/events{/privacy}", "received_events_url": "https://api.github.com/users/kalle/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2016-08-16T12:27:17Z", "updated_at": "2017-03-02T08:55:09Z", "closed_at": "2016-08-16T16:10:05Z", "author_association": "NONE", "body_html": "<h3>Environment info</h3>\n<p>MacOS X 10.11.4 no CUDA<br>\nTensorflow 0.10.0rc0, installed precompiled pip</p>\n<h3>Problem</h3>\n<p>I have my test data saved as <code>XXX_input.png</code> and <code>XXX_cb.png</code> (for label) and tried to use the<br>\npython code below to create the batched input tensors:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">_load_png_file</span>(<span class=\"pl-smi\">path</span>, <span class=\"pl-smi\">name</span>):\n    file_content <span class=\"pl-k\">=</span> tf.read_file(path)\n    png <span class=\"pl-k\">=</span> tf.image.decode_png(file_content, <span class=\"pl-v\">channels</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">3</span>)\n    png <span class=\"pl-k\">=</span> tf.slice(png, [<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>], [ <span class=\"pl-c1\">128</span>, <span class=\"pl-c1\">128</span>, <span class=\"pl-c1\">3</span>])\n    <span class=\"pl-k\">return</span> tf.image.convert_image_dtype(png, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span>name)\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">load_data</span>(<span class=\"pl-smi\">path</span>):\n    <span class=\"pl-k\">if</span> <span class=\"pl-k\">not</span> tf.gfile.Exists(path):\n        <span class=\"pl-k\">raise</span> <span class=\"pl-c1\">ValueError</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Datadir <span class=\"pl-c1\">{}</span> don't exists!<span class=\"pl-pds\">\"</span></span>.format(path))\n    photo_files <span class=\"pl-k\">=</span> []                                                                \n    cb_files <span class=\"pl-k\">=</span> []\n    <span class=\"pl-k\">for</span> file_name <span class=\"pl-k\">in</span> os.listdir(path):                                                  \n        <span class=\"pl-k\">if</span> file_name.endswith(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>_input.png<span class=\"pl-pds\">\"</span></span>):\n            file_path <span class=\"pl-k\">=</span> os.path.join(path, file_name)                                        \n            photo_files.append(file_path)\n            cb_files.append(file_path.replace(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>_input.png<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>_cb.png<span class=\"pl-pds\">\"</span></span>))\n\n    photos <span class=\"pl-k\">=</span> tf.convert_to_tensor(photo_files, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.string)\n    cbs <span class=\"pl-k\">=</span> tf.convert_to_tensor(cb_files, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.string)\n    input_queue <span class=\"pl-k\">=</span> tf.train.slice_input_producer([photos, cbs],          \n            <span class=\"pl-v\">num_epochs</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">FLAGS</span>.num_epochs, <span class=\"pl-c\"><span class=\"pl-c\">#</span> &lt;-- delete this line to make it work</span>\n            <span class=\"pl-v\">shuffle</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\n\n    photo <span class=\"pl-k\">=</span> _load_png_file(input_queue[<span class=\"pl-c1\">0</span>], <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>photo<span class=\"pl-pds\">\"</span></span>)\n    cb <span class=\"pl-k\">=</span> _load_png_file(input_queue[<span class=\"pl-c1\">1</span>], <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cb<span class=\"pl-pds\">\"</span></span>)\n    capacity <span class=\"pl-k\">=</span> <span class=\"pl-c1\">FLAGS</span>.min_after_dequeue <span class=\"pl-k\">+</span> <span class=\"pl-c1\">3</span> <span class=\"pl-k\">*</span> <span class=\"pl-c1\">FLAGS</span>.batch_size                       \n    photo_batch, cb_batch <span class=\"pl-k\">=</span> tf.train.batch([photo, cb],\n            <span class=\"pl-v\">capacity</span><span class=\"pl-k\">=</span>capacity,                                                             \n            <span class=\"pl-v\">batch_size</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">FLAGS</span>.batch_size)\n    <span class=\"pl-k\">return</span> photo_batch, cb_batch</pre></div>\n<p>When I try to use it it will generate an error as below. When I remove the <code>num_epochs</code> argument to <code>tf.train.slice_input_producer</code> everything works as expected (net converge etc) so I don't there is something wrong with the rest of the code.</p>\n<pre><code>E tensorflow/core/client/tensor_c_api.cc:485] Attempting to use uninit[221/1918]\nlue input_producer/input_producer/fraction_of_32_full/limit_epochs/epochs\n         [[Node: input_producer/input_producer/fraction_of_32_full/limit_epochs/\nCountUpTo = CountUpTo[T=DT_INT64, _class=[\"loc:@input_producer/input_producer/fraction_of_32_full/limit_epochs/epochs\"], limit=2, _device=\"/job:localhost/replic\na:0/task:0/cpu:0\"](input_producer/input_producer/fraction_of_32_full/limit_epochs/epochs)]]\nERROR:tensorflow:Exception in QueueRunner: Attempting to use uninitialized value\n input_producer/input_producer/fraction_of_32_full/limit_epochs/epochs\n         [[Node: input_producer/input_producer/fraction_of_32_full/limit_epochs/CountUpTo = CountUpTo[T=DT_INT64, _class=[\"loc:@input_producer/input_producer/fr\naction_of_32_full/limit_epochs/epochs\"], limit=2, _device=\"/job:localhost/replic\na:0/task:0/cpu:0\"](input_producer/input_producer/fraction_of_32_full/limit_epoch\ns/epochs)]]\nCaused by op u'input_producer/input_producer/fraction_of_32_full/limit_epochs/Co\nuntUpTo', defined at:\n  File \"train.py\", line 94, in &lt;module&gt;\n    tf.app.run()\n  File \"/Users/kalle/Development/tensorflow_cbnet/.env/lib/python2.7/site-packag\nes/tensorflow/python/platform/app.py\", line 30, in run\n    sys.exit(main(sys.argv))\n  File \"train.py\", line 91, in main\n    train()\n  File \"train.py\", line 30, in train\n    x, y = cbnet.load_data(\"/Users/kalle/Development/nn_data/train\")\n  File \"/Users/kalle/Development/tensorflow_cbnet/cbnet.py\", line 42, in load_data\n    shuffle=True)\n  File \"/Users/kalle/Development/tensorflow_cbnet/.env/lib/python2.7/site-packag\nes/tensorflow/python/training/input.py\", line 266, in slice_input_producer\n    shared_name=shared_name)\n  File \"/Users/kalle/Development/tensorflow_cbnet/.env/lib/python2.7/site-packages/tensorflow/python/training/input.py\", line 223, in range_input_producer\n    shared_name, name, \"fraction_of_%d_full\" % capacity)\n  File \"/Users/kalle/Development/tensorflow_cbnet/.env/lib/python2.7/site-packag\nes/tensorflow/python/training/input.py\", line 133, in input_producer\n    input_tensor = limit_epochs(input_tensor, num_epochs)\n  File \"/Users/kalle/Development/tensorflow_cbnet/.env/lib/python2.7/site-packages/tensorflow/python/training/input.py\", line 84, in limit_epochs\n    counter = epochs.count_up_to(num_epochs)\n  File \"/Users/kalle/Development/tensorflow_cbnet/.env/lib/python2.7/site-packag\nes/tensorflow/python/ops/variables.py\", line 577, in count_up_to\n    return state_ops.count_up_to(self._variable, limit=limit)\n  File \"/Users/kalle/Development/tensorflow_cbnet/.env/lib/python2.7/site-packages/tensorflow/python/ops/gen_state_ops.py\", line 127, in count_up_to\n    result = _op_def_lib.apply_op(\"CountUpTo\", ref=ref, limit=limit, name=name)\n  File \"/Users/kalle/Development/tensorflow_cbnet/.env/lib/python2.7/site-packag\nes/tensorflow/python/framework/op_def_library.py\", line 703, in apply_op\n    op_def=op_def)\n  File \"/Users/kalle/Development/tensorflow_cbnet/.env/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 2310, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/Users/kalle/Development/tensorflow_cbnet/.env/lib/python2.7/site-packag\nes/tensorflow/python/framework/ops.py\", line 1232, in __init__\n    self._traceback = _extract_stack()\n</code></pre>", "body_text": "Environment info\nMacOS X 10.11.4 no CUDA\nTensorflow 0.10.0rc0, installed precompiled pip\nProblem\nI have my test data saved as XXX_input.png and XXX_cb.png (for label) and tried to use the\npython code below to create the batched input tensors:\ndef _load_png_file(path, name):\n    file_content = tf.read_file(path)\n    png = tf.image.decode_png(file_content, channels=3)\n    png = tf.slice(png, [0, 0, 0], [ 128, 128, 3])\n    return tf.image.convert_image_dtype(png, dtype=tf.float32, name=name)\n\ndef load_data(path):\n    if not tf.gfile.Exists(path):\n        raise ValueError(\"Datadir {} don't exists!\".format(path))\n    photo_files = []                                                                \n    cb_files = []\n    for file_name in os.listdir(path):                                                  \n        if file_name.endswith(\"_input.png\"):\n            file_path = os.path.join(path, file_name)                                        \n            photo_files.append(file_path)\n            cb_files.append(file_path.replace(\"_input.png\", \"_cb.png\"))\n\n    photos = tf.convert_to_tensor(photo_files, dtype=tf.string)\n    cbs = tf.convert_to_tensor(cb_files, dtype=tf.string)\n    input_queue = tf.train.slice_input_producer([photos, cbs],          \n            num_epochs=FLAGS.num_epochs, # <-- delete this line to make it work\n            shuffle=True)\n\n    photo = _load_png_file(input_queue[0], \"photo\")\n    cb = _load_png_file(input_queue[1], \"cb\")\n    capacity = FLAGS.min_after_dequeue + 3 * FLAGS.batch_size                       \n    photo_batch, cb_batch = tf.train.batch([photo, cb],\n            capacity=capacity,                                                             \n            batch_size=FLAGS.batch_size)\n    return photo_batch, cb_batch\nWhen I try to use it it will generate an error as below. When I remove the num_epochs argument to tf.train.slice_input_producer everything works as expected (net converge etc) so I don't there is something wrong with the rest of the code.\nE tensorflow/core/client/tensor_c_api.cc:485] Attempting to use uninit[221/1918]\nlue input_producer/input_producer/fraction_of_32_full/limit_epochs/epochs\n         [[Node: input_producer/input_producer/fraction_of_32_full/limit_epochs/\nCountUpTo = CountUpTo[T=DT_INT64, _class=[\"loc:@input_producer/input_producer/fraction_of_32_full/limit_epochs/epochs\"], limit=2, _device=\"/job:localhost/replic\na:0/task:0/cpu:0\"](input_producer/input_producer/fraction_of_32_full/limit_epochs/epochs)]]\nERROR:tensorflow:Exception in QueueRunner: Attempting to use uninitialized value\n input_producer/input_producer/fraction_of_32_full/limit_epochs/epochs\n         [[Node: input_producer/input_producer/fraction_of_32_full/limit_epochs/CountUpTo = CountUpTo[T=DT_INT64, _class=[\"loc:@input_producer/input_producer/fr\naction_of_32_full/limit_epochs/epochs\"], limit=2, _device=\"/job:localhost/replic\na:0/task:0/cpu:0\"](input_producer/input_producer/fraction_of_32_full/limit_epoch\ns/epochs)]]\nCaused by op u'input_producer/input_producer/fraction_of_32_full/limit_epochs/Co\nuntUpTo', defined at:\n  File \"train.py\", line 94, in <module>\n    tf.app.run()\n  File \"/Users/kalle/Development/tensorflow_cbnet/.env/lib/python2.7/site-packag\nes/tensorflow/python/platform/app.py\", line 30, in run\n    sys.exit(main(sys.argv))\n  File \"train.py\", line 91, in main\n    train()\n  File \"train.py\", line 30, in train\n    x, y = cbnet.load_data(\"/Users/kalle/Development/nn_data/train\")\n  File \"/Users/kalle/Development/tensorflow_cbnet/cbnet.py\", line 42, in load_data\n    shuffle=True)\n  File \"/Users/kalle/Development/tensorflow_cbnet/.env/lib/python2.7/site-packag\nes/tensorflow/python/training/input.py\", line 266, in slice_input_producer\n    shared_name=shared_name)\n  File \"/Users/kalle/Development/tensorflow_cbnet/.env/lib/python2.7/site-packages/tensorflow/python/training/input.py\", line 223, in range_input_producer\n    shared_name, name, \"fraction_of_%d_full\" % capacity)\n  File \"/Users/kalle/Development/tensorflow_cbnet/.env/lib/python2.7/site-packag\nes/tensorflow/python/training/input.py\", line 133, in input_producer\n    input_tensor = limit_epochs(input_tensor, num_epochs)\n  File \"/Users/kalle/Development/tensorflow_cbnet/.env/lib/python2.7/site-packages/tensorflow/python/training/input.py\", line 84, in limit_epochs\n    counter = epochs.count_up_to(num_epochs)\n  File \"/Users/kalle/Development/tensorflow_cbnet/.env/lib/python2.7/site-packag\nes/tensorflow/python/ops/variables.py\", line 577, in count_up_to\n    return state_ops.count_up_to(self._variable, limit=limit)\n  File \"/Users/kalle/Development/tensorflow_cbnet/.env/lib/python2.7/site-packages/tensorflow/python/ops/gen_state_ops.py\", line 127, in count_up_to\n    result = _op_def_lib.apply_op(\"CountUpTo\", ref=ref, limit=limit, name=name)\n  File \"/Users/kalle/Development/tensorflow_cbnet/.env/lib/python2.7/site-packag\nes/tensorflow/python/framework/op_def_library.py\", line 703, in apply_op\n    op_def=op_def)\n  File \"/Users/kalle/Development/tensorflow_cbnet/.env/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 2310, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/Users/kalle/Development/tensorflow_cbnet/.env/lib/python2.7/site-packag\nes/tensorflow/python/framework/ops.py\", line 1232, in __init__\n    self._traceback = _extract_stack()", "body": "### Environment info\n\nMacOS X 10.11.4 no CUDA\nTensorflow 0.10.0rc0, installed precompiled pip\n### Problem\n\nI have my test data saved as `XXX_input.png` and `XXX_cb.png` (for label) and tried to use the\npython code below to create the batched input tensors:\n\n``` python\ndef _load_png_file(path, name):\n    file_content = tf.read_file(path)\n    png = tf.image.decode_png(file_content, channels=3)\n    png = tf.slice(png, [0, 0, 0], [ 128, 128, 3])\n    return tf.image.convert_image_dtype(png, dtype=tf.float32, name=name)\n\ndef load_data(path):\n    if not tf.gfile.Exists(path):\n        raise ValueError(\"Datadir {} don't exists!\".format(path))\n    photo_files = []                                                                \n    cb_files = []\n    for file_name in os.listdir(path):                                                  \n        if file_name.endswith(\"_input.png\"):\n            file_path = os.path.join(path, file_name)                                        \n            photo_files.append(file_path)\n            cb_files.append(file_path.replace(\"_input.png\", \"_cb.png\"))\n\n    photos = tf.convert_to_tensor(photo_files, dtype=tf.string)\n    cbs = tf.convert_to_tensor(cb_files, dtype=tf.string)\n    input_queue = tf.train.slice_input_producer([photos, cbs],          \n            num_epochs=FLAGS.num_epochs, # <-- delete this line to make it work\n            shuffle=True)\n\n    photo = _load_png_file(input_queue[0], \"photo\")\n    cb = _load_png_file(input_queue[1], \"cb\")\n    capacity = FLAGS.min_after_dequeue + 3 * FLAGS.batch_size                       \n    photo_batch, cb_batch = tf.train.batch([photo, cb],\n            capacity=capacity,                                                             \n            batch_size=FLAGS.batch_size)\n    return photo_batch, cb_batch\n```\n\nWhen I try to use it it will generate an error as below. When I remove the `num_epochs` argument to `tf.train.slice_input_producer` everything works as expected (net converge etc) so I don't there is something wrong with the rest of the code.\n\n```\nE tensorflow/core/client/tensor_c_api.cc:485] Attempting to use uninit[221/1918]\nlue input_producer/input_producer/fraction_of_32_full/limit_epochs/epochs\n         [[Node: input_producer/input_producer/fraction_of_32_full/limit_epochs/\nCountUpTo = CountUpTo[T=DT_INT64, _class=[\"loc:@input_producer/input_producer/fraction_of_32_full/limit_epochs/epochs\"], limit=2, _device=\"/job:localhost/replic\na:0/task:0/cpu:0\"](input_producer/input_producer/fraction_of_32_full/limit_epochs/epochs)]]\nERROR:tensorflow:Exception in QueueRunner: Attempting to use uninitialized value\n input_producer/input_producer/fraction_of_32_full/limit_epochs/epochs\n         [[Node: input_producer/input_producer/fraction_of_32_full/limit_epochs/CountUpTo = CountUpTo[T=DT_INT64, _class=[\"loc:@input_producer/input_producer/fr\naction_of_32_full/limit_epochs/epochs\"], limit=2, _device=\"/job:localhost/replic\na:0/task:0/cpu:0\"](input_producer/input_producer/fraction_of_32_full/limit_epoch\ns/epochs)]]\nCaused by op u'input_producer/input_producer/fraction_of_32_full/limit_epochs/Co\nuntUpTo', defined at:\n  File \"train.py\", line 94, in <module>\n    tf.app.run()\n  File \"/Users/kalle/Development/tensorflow_cbnet/.env/lib/python2.7/site-packag\nes/tensorflow/python/platform/app.py\", line 30, in run\n    sys.exit(main(sys.argv))\n  File \"train.py\", line 91, in main\n    train()\n  File \"train.py\", line 30, in train\n    x, y = cbnet.load_data(\"/Users/kalle/Development/nn_data/train\")\n  File \"/Users/kalle/Development/tensorflow_cbnet/cbnet.py\", line 42, in load_data\n    shuffle=True)\n  File \"/Users/kalle/Development/tensorflow_cbnet/.env/lib/python2.7/site-packag\nes/tensorflow/python/training/input.py\", line 266, in slice_input_producer\n    shared_name=shared_name)\n  File \"/Users/kalle/Development/tensorflow_cbnet/.env/lib/python2.7/site-packages/tensorflow/python/training/input.py\", line 223, in range_input_producer\n    shared_name, name, \"fraction_of_%d_full\" % capacity)\n  File \"/Users/kalle/Development/tensorflow_cbnet/.env/lib/python2.7/site-packag\nes/tensorflow/python/training/input.py\", line 133, in input_producer\n    input_tensor = limit_epochs(input_tensor, num_epochs)\n  File \"/Users/kalle/Development/tensorflow_cbnet/.env/lib/python2.7/site-packages/tensorflow/python/training/input.py\", line 84, in limit_epochs\n    counter = epochs.count_up_to(num_epochs)\n  File \"/Users/kalle/Development/tensorflow_cbnet/.env/lib/python2.7/site-packag\nes/tensorflow/python/ops/variables.py\", line 577, in count_up_to\n    return state_ops.count_up_to(self._variable, limit=limit)\n  File \"/Users/kalle/Development/tensorflow_cbnet/.env/lib/python2.7/site-packages/tensorflow/python/ops/gen_state_ops.py\", line 127, in count_up_to\n    result = _op_def_lib.apply_op(\"CountUpTo\", ref=ref, limit=limit, name=name)\n  File \"/Users/kalle/Development/tensorflow_cbnet/.env/lib/python2.7/site-packag\nes/tensorflow/python/framework/op_def_library.py\", line 703, in apply_op\n    op_def=op_def)\n  File \"/Users/kalle/Development/tensorflow_cbnet/.env/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 2310, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/Users/kalle/Development/tensorflow_cbnet/.env/lib/python2.7/site-packag\nes/tensorflow/python/framework/ops.py\", line 1232, in __init__\n    self._traceback = _extract_stack()\n```\n"}