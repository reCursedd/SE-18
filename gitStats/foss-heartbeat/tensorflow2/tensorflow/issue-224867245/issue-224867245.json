{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9495", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9495/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9495/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9495/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9495", "id": 224867245, "node_id": "MDU6SXNzdWUyMjQ4NjcyNDU=", "number": 9495, "title": "Inconsistent results when tf.sqrt() is applied to tensor versus element-wise ", "user": {"login": "lipingliulp", "id": 15008421, "node_id": "MDQ6VXNlcjE1MDA4NDIx", "avatar_url": "https://avatars0.githubusercontent.com/u/15008421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lipingliulp", "html_url": "https://github.com/lipingliulp", "followers_url": "https://api.github.com/users/lipingliulp/followers", "following_url": "https://api.github.com/users/lipingliulp/following{/other_user}", "gists_url": "https://api.github.com/users/lipingliulp/gists{/gist_id}", "starred_url": "https://api.github.com/users/lipingliulp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lipingliulp/subscriptions", "organizations_url": "https://api.github.com/users/lipingliulp/orgs", "repos_url": "https://api.github.com/users/lipingliulp/repos", "events_url": "https://api.github.com/users/lipingliulp/events{/privacy}", "received_events_url": "https://api.github.com/users/lipingliulp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-04-27T18:07:44Z", "updated_at": "2017-05-01T21:59:01Z", "closed_at": "2017-05-01T21:59:01Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: fedora 24</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: pip</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<pre><code>import tensorflow as tf\n\nimport numpy as np\n\nstart = 0 \nlinear_indices = (tf.range(start, 496) + 1) * 8 + 1 \nindex = 495 - start  \n\nrind  = tf.sqrt(tf.cast(linear_indices, tf.float32)) - 63  \nrind1 = tf.gather(rind, index)\n\nlinear_index = tf.gather(linear_indices, index)\nrind2 = tf.sqrt(tf.cast(linear_index, tf.float32)) - 63  \n\nsession = tf.Session()\nprint(session.run(rind1))\nprint(session.run(rind2))\n</code></pre>\n<p>Output:</p>\n<pre><code>In [5]: %run calculation_test.py\n3.8147e-06\n0.0\n</code></pre>\n<h3>Describe the problem</h3>\n<p>The order of operations gives different behavior in tf.gather. <code>rind1</code> and <code>rind2</code> tensors should have the same value (0).</p>\n<p>cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5317244\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/altosaar\">@altosaar</a></p>", "body_text": "System information\n\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): fedora 24\nTensorFlow installed from (source or binary): pip\nExact command to reproduce:\n\nimport tensorflow as tf\n\nimport numpy as np\n\nstart = 0 \nlinear_indices = (tf.range(start, 496) + 1) * 8 + 1 \nindex = 495 - start  \n\nrind  = tf.sqrt(tf.cast(linear_indices, tf.float32)) - 63  \nrind1 = tf.gather(rind, index)\n\nlinear_index = tf.gather(linear_indices, index)\nrind2 = tf.sqrt(tf.cast(linear_index, tf.float32)) - 63  \n\nsession = tf.Session()\nprint(session.run(rind1))\nprint(session.run(rind2))\n\nOutput:\nIn [5]: %run calculation_test.py\n3.8147e-06\n0.0\n\nDescribe the problem\nThe order of operations gives different behavior in tf.gather. rind1 and rind2 tensors should have the same value (0).\ncc @altosaar", "body": "### System information\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: fedora 24\r\n- **TensorFlow installed from (source or binary)**: pip\r\n- **Exact command to reproduce**:\r\n```\r\nimport tensorflow as tf\r\n\r\nimport numpy as np\r\n\r\nstart = 0 \r\nlinear_indices = (tf.range(start, 496) + 1) * 8 + 1 \r\nindex = 495 - start  \r\n\r\nrind  = tf.sqrt(tf.cast(linear_indices, tf.float32)) - 63  \r\nrind1 = tf.gather(rind, index)\r\n\r\nlinear_index = tf.gather(linear_indices, index)\r\nrind2 = tf.sqrt(tf.cast(linear_index, tf.float32)) - 63  \r\n\r\nsession = tf.Session()\r\nprint(session.run(rind1))\r\nprint(session.run(rind2))\r\n```\r\nOutput:\r\n```\r\nIn [5]: %run calculation_test.py\r\n3.8147e-06\r\n0.0\r\n```\r\n### Describe the problem\r\nThe order of operations gives different behavior in tf.gather. `rind1` and `rind2` tensors should have the same value (0).\r\n\r\ncc @altosaar"}