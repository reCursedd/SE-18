{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/140553717", "pull_request_review_id": 64648908, "id": 140553717, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDU1MzcxNw==", "diff_hunk": "@@ -230,29 +233,35 @@ def _event_shape(self):\n \n   def _sample_n(self, n, seed=None):\n     n_draws = math_ops.cast(self.total_count, dtype=dtypes.int32)\n-    if self.total_count.get_shape().ndims is not None:\n-      if self.total_count.get_shape().ndims != 0:\n-        raise NotImplementedError(\n-            \"Sample only supported for scalar number of draws.\")\n-    elif self.validate_args:\n-      is_scalar = check_ops.assert_rank(\n-          n_draws, 0,\n-          message=\"Sample only supported for scalar number of draws.\")\n-      n_draws = control_flow_ops.with_dependencies([is_scalar], n_draws)\n     k = self.event_shape_tensor()[0]\n-    # Flatten batch dims so logits has shape [B, k],\n-    # where B = reduce_prod(self.batch_shape_tensor()).\n-    x = random_ops.multinomial(\n-        logits=array_ops.reshape(self.logits, [-1, k]),\n-        num_samples=n * n_draws,\n-        seed=seed)\n-    x = array_ops.reshape(x, shape=[-1, n, n_draws])\n-    x = math_ops.reduce_sum(array_ops.one_hot(x, depth=k),\n-                            axis=-2)  # shape: [B, n, k]\n+\n+    # boardcast the total_count and logits to same shape\n+    n_draws = array_ops.ones_like(\n+        self.logits[..., 0], dtype=n_draws.dtype) * n_draws\n+    logits = array_ops.ones_like(\n+        n_draws[..., None], dtype=self.logits.dtype) * self.logits\n+\n+    # flatten the total_count and logits\n+    flat_logits = array_ops.reshape(logits, [-1, k]) # [B1*B2*...*Bm, k]", "path": "tensorflow/python/ops/distributions/multinomial.py", "position": null, "original_position": 48, "commit_id": "30278125747fbeaf71b93915b7278b75c3f01ad7", "original_commit_id": "f69dbbb620983eb4c499653f4abc3727298c0793", "user": {"login": "jvdillon", "id": 1137078, "node_id": "MDQ6VXNlcjExMzcwNzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1137078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvdillon", "html_url": "https://github.com/jvdillon", "followers_url": "https://api.github.com/users/jvdillon/followers", "following_url": "https://api.github.com/users/jvdillon/following{/other_user}", "gists_url": "https://api.github.com/users/jvdillon/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvdillon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvdillon/subscriptions", "organizations_url": "https://api.github.com/users/jvdillon/orgs", "repos_url": "https://api.github.com/users/jvdillon/repos", "events_url": "https://api.github.com/users/jvdillon/events{/privacy}", "received_events_url": "https://api.github.com/users/jvdillon/received_events", "type": "User", "site_admin": false}, "body": "Please use kwarg for literals, ie, \r\nflat_logits = array_ops.reshape(logits, shape=[-1, k]) # [B1*B2*...*Bm, k]", "created_at": "2017-09-22T17:39:51Z", "updated_at": "2017-11-01T15:46:39Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/13189#discussion_r140553717", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13189", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/140553717"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/13189#discussion_r140553717"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13189"}}, "body_html": "<p>Please use kwarg for literals, ie,<br>\nflat_logits = array_ops.reshape(logits, shape=[-1, k]) # [B1<em>B2</em>...*Bm, k]</p>", "body_text": "Please use kwarg for literals, ie,\nflat_logits = array_ops.reshape(logits, shape=[-1, k]) # [B1B2...*Bm, k]"}