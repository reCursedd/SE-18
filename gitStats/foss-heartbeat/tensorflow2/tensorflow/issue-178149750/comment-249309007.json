{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/249309007", "html_url": "https://github.com/tensorflow/tensorflow/issues/4495#issuecomment-249309007", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4495", "id": 249309007, "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTMwOTAwNw==", "user": {"login": "lingz", "id": 3147213, "node_id": "MDQ6VXNlcjMxNDcyMTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3147213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lingz", "html_url": "https://github.com/lingz", "followers_url": "https://api.github.com/users/lingz/followers", "following_url": "https://api.github.com/users/lingz/following{/other_user}", "gists_url": "https://api.github.com/users/lingz/gists{/gist_id}", "starred_url": "https://api.github.com/users/lingz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lingz/subscriptions", "organizations_url": "https://api.github.com/users/lingz/orgs", "repos_url": "https://api.github.com/users/lingz/repos", "events_url": "https://api.github.com/users/lingz/events{/privacy}", "received_events_url": "https://api.github.com/users/lingz/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-23T21:39:30Z", "updated_at": "2016-09-23T21:39:30Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Yes but if there are multiple GPU cards and you want to duplicate the same weights for the model on all of them, but allow each to have a local copy of the variable cached. So in this case the beat approach would be to use identity to force a local copy right? Or is there another approach.</p>", "body_text": "Yes but if there are multiple GPU cards and you want to duplicate the same weights for the model on all of them, but allow each to have a local copy of the variable cached. So in this case the beat approach would be to use identity to force a local copy right? Or is there another approach.", "body": "Yes but if there are multiple GPU cards and you want to duplicate the same weights for the model on all of them, but allow each to have a local copy of the variable cached. So in this case the beat approach would be to use identity to force a local copy right? Or is there another approach. \n"}