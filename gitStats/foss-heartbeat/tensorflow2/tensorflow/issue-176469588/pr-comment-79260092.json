{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/79260092", "pull_request_review_id": 435938, "id": 79260092, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc5MjYwMDky", "diff_hunk": "@@ -280,4 +280,32 @@ input: Base64 strings to decode.\n output: Decoded strings.\n )doc\");\n \n+REGISTER_OP(\"Substr\")\n+  .Input(\"input: string\")\n+  .Input(\"pos: T\")\n+  .Input(\"len: T\")\n+  .Output(\"output: string\")\n+  .Attr(\"T: {int32, int64}\")\n+  .SetShapeFn(shape_inference::UnchangedShape)", "path": "tensorflow/core/ops/string_ops.cc", "position": null, "original_position": 10, "commit_id": "711a3125a1b1d5ae8fdf8597839cc96721c1e6e5", "original_commit_id": "f1b65cf81faca3d4180467d52cc80992beed910d", "user": {"login": "vrv", "id": 463737, "node_id": "MDQ6VXNlcjQ2MzczNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/463737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrv", "html_url": "https://github.com/vrv", "followers_url": "https://api.github.com/users/vrv/followers", "following_url": "https://api.github.com/users/vrv/following{/other_user}", "gists_url": "https://api.github.com/users/vrv/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrv/subscriptions", "organizations_url": "https://api.github.com/users/vrv/orgs", "repos_url": "https://api.github.com/users/vrv/repos", "events_url": "https://api.github.com/users/vrv/events{/privacy}", "received_events_url": "https://api.github.com/users/vrv/received_events", "type": "User", "site_admin": false}, "body": "I think you can do a bit more here, validating that pos and len are both scalars:\n\n```\n.SetShapeFn([](InferenceContext* c) {\n  ShapeHandle unused;\n  TF_RETURN_IF_ERROR(c->WithRank(c->input(1), 0, &unused));\n  TF_RETURN_IF_ERROR(c->WithRank(c->input(2), 0, &unused));\n  return shape_inference::UnchangedShape(c);\n}\n```\n\nIf you do this, you might be able to just elide the shape checks in the kernel itself.\n\nOf course, this depends on the discussion above about the shapes, so just FYI for now.\n", "created_at": "2016-09-16T22:14:45Z", "updated_at": "2016-11-03T18:48:39Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/4338#discussion_r79260092", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/4338", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/79260092"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/4338#discussion_r79260092"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/4338"}}, "body_html": "<p>I think you can do a bit more here, validating that pos and len are both scalars:</p>\n<pre><code>.SetShapeFn([](InferenceContext* c) {\n  ShapeHandle unused;\n  TF_RETURN_IF_ERROR(c-&gt;WithRank(c-&gt;input(1), 0, &amp;unused));\n  TF_RETURN_IF_ERROR(c-&gt;WithRank(c-&gt;input(2), 0, &amp;unused));\n  return shape_inference::UnchangedShape(c);\n}\n</code></pre>\n<p>If you do this, you might be able to just elide the shape checks in the kernel itself.</p>\n<p>Of course, this depends on the discussion above about the shapes, so just FYI for now.</p>", "body_text": "I think you can do a bit more here, validating that pos and len are both scalars:\n.SetShapeFn([](InferenceContext* c) {\n  ShapeHandle unused;\n  TF_RETURN_IF_ERROR(c->WithRank(c->input(1), 0, &unused));\n  TF_RETURN_IF_ERROR(c->WithRank(c->input(2), 0, &unused));\n  return shape_inference::UnchangedShape(c);\n}\n\nIf you do this, you might be able to just elide the shape checks in the kernel itself.\nOf course, this depends on the discussion above about the shapes, so just FYI for now."}