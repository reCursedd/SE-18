{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/256845243", "html_url": "https://github.com/tensorflow/tensorflow/pull/4338#issuecomment-256845243", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4338", "id": 256845243, "node_id": "MDEyOklzc3VlQ29tbWVudDI1Njg0NTI0Mw==", "user": {"login": "samjabrahams", "id": 11607205, "node_id": "MDQ6VXNlcjExNjA3MjA1", "avatar_url": "https://avatars0.githubusercontent.com/u/11607205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samjabrahams", "html_url": "https://github.com/samjabrahams", "followers_url": "https://api.github.com/users/samjabrahams/followers", "following_url": "https://api.github.com/users/samjabrahams/following{/other_user}", "gists_url": "https://api.github.com/users/samjabrahams/gists{/gist_id}", "starred_url": "https://api.github.com/users/samjabrahams/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samjabrahams/subscriptions", "organizations_url": "https://api.github.com/users/samjabrahams/orgs", "repos_url": "https://api.github.com/users/samjabrahams/repos", "events_url": "https://api.github.com/users/samjabrahams/events{/privacy}", "received_events_url": "https://api.github.com/users/samjabrahams/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-28T06:20:17Z", "updated_at": "2016-10-28T06:20:36Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Thanks <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6969686\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/benoitsteiner\">@benoitsteiner</a> for your notes- from them I was able to get broadcasting to work. I've pushed the latest changes along with updated tests which pass on my machine. I attempted to do some clean-up with a macro (as different dimensionality broadcasts have to be defined separately and similarly), but was hitting some cross-initialization hiccups. Here are the main notes for <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=463737\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vrv\">@vrv</a>:</p>\n<ul>\n<li>Added 1 and 2 dimension broadcasts in <code>substr.cc</code>. They still end up iterating through the tensors sequentially, however</li>\n<li>Added/updated <code>_testBroadcast</code> and <code>_testBadBroadcast</code> in <code>substr_op_test.py</code></li>\n<li>I left in the base cases of pos/len with either scalar or matching shape to the input strings. This way, we avoid allocating the additional memory used in broadcasting</li>\n</ul>\n<p>Assuming things look good, the last thing I need to do is update the documentation to indicate that 1/2 dimensional broadcasting is supported.</p>", "body_text": "Thanks @benoitsteiner for your notes- from them I was able to get broadcasting to work. I've pushed the latest changes along with updated tests which pass on my machine. I attempted to do some clean-up with a macro (as different dimensionality broadcasts have to be defined separately and similarly), but was hitting some cross-initialization hiccups. Here are the main notes for @vrv:\n\nAdded 1 and 2 dimension broadcasts in substr.cc. They still end up iterating through the tensors sequentially, however\nAdded/updated _testBroadcast and _testBadBroadcast in substr_op_test.py\nI left in the base cases of pos/len with either scalar or matching shape to the input strings. This way, we avoid allocating the additional memory used in broadcasting\n\nAssuming things look good, the last thing I need to do is update the documentation to indicate that 1/2 dimensional broadcasting is supported.", "body": "Thanks @benoitsteiner for your notes- from them I was able to get broadcasting to work. I've pushed the latest changes along with updated tests which pass on my machine. I attempted to do some clean-up with a macro (as different dimensionality broadcasts have to be defined separately and similarly), but was hitting some cross-initialization hiccups. Here are the main notes for @vrv:\n- Added 1 and 2 dimension broadcasts in `substr.cc`. They still end up iterating through the tensors sequentially, however\n- Added/updated `_testBroadcast` and `_testBadBroadcast` in `substr_op_test.py`\n- I left in the base cases of pos/len with either scalar or matching shape to the input strings. This way, we avoid allocating the additional memory used in broadcasting\n\nAssuming things look good, the last thing I need to do is update the documentation to indicate that 1/2 dimensional broadcasting is supported.\n"}