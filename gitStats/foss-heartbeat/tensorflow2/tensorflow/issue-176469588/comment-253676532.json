{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/253676532", "html_url": "https://github.com/tensorflow/tensorflow/pull/4338#issuecomment-253676532", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4338", "id": 253676532, "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzY3NjUzMg==", "user": {"login": "samjabrahams", "id": 11607205, "node_id": "MDQ6VXNlcjExNjA3MjA1", "avatar_url": "https://avatars0.githubusercontent.com/u/11607205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samjabrahams", "html_url": "https://github.com/samjabrahams", "followers_url": "https://api.github.com/users/samjabrahams/followers", "following_url": "https://api.github.com/users/samjabrahams/following{/other_user}", "gists_url": "https://api.github.com/users/samjabrahams/gists{/gist_id}", "starred_url": "https://api.github.com/users/samjabrahams/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samjabrahams/subscriptions", "organizations_url": "https://api.github.com/users/samjabrahams/orgs", "repos_url": "https://api.github.com/users/samjabrahams/repos", "events_url": "https://api.github.com/users/samjabrahams/events{/privacy}", "received_events_url": "https://api.github.com/users/samjabrahams/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-14T00:19:08Z", "updated_at": "2016-10-14T00:19:08Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I think this is ready for a re-review. Here's the highlights of the changes:</p>\n<ul>\n<li>Moved check to see if pos/len are the same shape inside of shape function</li>\n<li>Shape function uses <code>BroadcastBinaryOpShapeFn</code></li>\n<li><code>substr_op.cc</code> checks for scalar pos/len or pos/len with the same shape as input tensor at the beginning of the Op. If it is neither, sets an Unimplemented error status</li>\n<li>Cleaned up <code>substr_op.cc</code> to remove most of duplicated code</li>\n<li>Added tests to make sure pos/len shape mismatches throw appropriate errors</li>\n</ul>\n<p>I have a few questions about some judgement calls:</p>\n<ul>\n<li>Since pos/len shapes are checked by the shape function, I removed checking again inside of the kernel implementation. Is that fine, or should we double check?</li>\n<li>I left a second Unimplemented error in the final <code>else</code> block toward the bottom of the kernel implementation. It's identical to the one at the top of the code, and shouldn't be reachable. I left it in to make it extra-extra explicit that this is where broadcasting implementations would go. I can take this out and just leave the comments explaining the situation if that's preferable.</li>\n</ul>", "body_text": "I think this is ready for a re-review. Here's the highlights of the changes:\n\nMoved check to see if pos/len are the same shape inside of shape function\nShape function uses BroadcastBinaryOpShapeFn\nsubstr_op.cc checks for scalar pos/len or pos/len with the same shape as input tensor at the beginning of the Op. If it is neither, sets an Unimplemented error status\nCleaned up substr_op.cc to remove most of duplicated code\nAdded tests to make sure pos/len shape mismatches throw appropriate errors\n\nI have a few questions about some judgement calls:\n\nSince pos/len shapes are checked by the shape function, I removed checking again inside of the kernel implementation. Is that fine, or should we double check?\nI left a second Unimplemented error in the final else block toward the bottom of the kernel implementation. It's identical to the one at the top of the code, and shouldn't be reachable. I left it in to make it extra-extra explicit that this is where broadcasting implementations would go. I can take this out and just leave the comments explaining the situation if that's preferable.", "body": "I think this is ready for a re-review. Here's the highlights of the changes:\n- Moved check to see if pos/len are the same shape inside of shape function\n- Shape function uses `BroadcastBinaryOpShapeFn`\n- `substr_op.cc` checks for scalar pos/len or pos/len with the same shape as input tensor at the beginning of the Op. If it is neither, sets an Unimplemented error status\n- Cleaned up `substr_op.cc` to remove most of duplicated code\n- Added tests to make sure pos/len shape mismatches throw appropriate errors\n\nI have a few questions about some judgement calls:\n- Since pos/len shapes are checked by the shape function, I removed checking again inside of the kernel implementation. Is that fine, or should we double check?\n- I left a second Unimplemented error in the final `else` block toward the bottom of the kernel implementation. It's identical to the one at the top of the code, and shouldn't be reachable. I left it in to make it extra-extra explicit that this is where broadcasting implementations would go. I can take this out and just leave the comments explaining the situation if that's preferable.\n"}