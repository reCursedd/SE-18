{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/307951829", "html_url": "https://github.com/tensorflow/tensorflow/issues/9216#issuecomment-307951829", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9216", "id": 307951829, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzk1MTgyOQ==", "user": {"login": "jjhelmus", "id": 1050278, "node_id": "MDQ6VXNlcjEwNTAyNzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1050278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjhelmus", "html_url": "https://github.com/jjhelmus", "followers_url": "https://api.github.com/users/jjhelmus/followers", "following_url": "https://api.github.com/users/jjhelmus/following{/other_user}", "gists_url": "https://api.github.com/users/jjhelmus/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjhelmus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjhelmus/subscriptions", "organizations_url": "https://api.github.com/users/jjhelmus/orgs", "repos_url": "https://api.github.com/users/jjhelmus/repos", "events_url": "https://api.github.com/users/jjhelmus/events{/privacy}", "received_events_url": "https://api.github.com/users/jjhelmus/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-12T22:27:58Z", "updated_at": "2017-06-12T22:27:58Z", "author_association": "NONE", "body_html": "<p>I've also run into this issue on a <code>ppc64le</code> system.</p>\n<p>Casting a non-finite float point values (inf, -inf, nan) to an integer is an undefined behavior in C (see section 6.3.1.4 of the C99 standards).  These tests seems to be expecting a specific result from this undefined behavior which is not portable.  The expected result, the largest negative number supported by integer type being cast to, happens to be the integer indefinite value which the x87 FPU gives for floating-point invalid-operations.</p>\n<p>I'm not certain how these tests can be made portable given that the behavior being exercised is  architecture specific.</p>", "body_text": "I've also run into this issue on a ppc64le system.\nCasting a non-finite float point values (inf, -inf, nan) to an integer is an undefined behavior in C (see section 6.3.1.4 of the C99 standards).  These tests seems to be expecting a specific result from this undefined behavior which is not portable.  The expected result, the largest negative number supported by integer type being cast to, happens to be the integer indefinite value which the x87 FPU gives for floating-point invalid-operations.\nI'm not certain how these tests can be made portable given that the behavior being exercised is  architecture specific.", "body": "I've also run into this issue on a `ppc64le` system.\r\n\r\nCasting a non-finite float point values (inf, -inf, nan) to an integer is an undefined behavior in C (see section 6.3.1.4 of the C99 standards).  These tests seems to be expecting a specific result from this undefined behavior which is not portable.  The expected result, the largest negative number supported by integer type being cast to, happens to be the integer indefinite value which the x87 FPU gives for floating-point invalid-operations.\r\n\r\nI'm not certain how these tests can be made portable given that the behavior being exercised is  architecture specific."}