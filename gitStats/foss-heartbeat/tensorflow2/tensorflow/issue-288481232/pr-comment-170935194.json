{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/170935194", "pull_request_review_id": 99698741, "id": 170935194, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDkzNTE5NA==", "diff_hunk": "@@ -75,18 +52,131 @@ class SourceWriter {\n   // Indent(2)->Prefix(\"//\") will result in prefixing lines with \"  //\".\n   //\n   // An empty value (\"\") will remove any line prefix that was previously set.\n-  SourceWriter& Prefix(const char* line_prefix) {\n-    line_prefix_ = line_prefix;\n-    return *this;\n+  SourceWriter& Prefix(const char* line_prefix);\n+\n+  // Writes a block of code or text.\n+  //\n+  // The data might potentially contain newline characters, therefore it will\n+  // be scanned to ensure that each line is indented and prefixed properly,\n+  // making it a bit slower than Append().\n+  SourceWriter& Write(const string& text);\n+\n+  // Appends a piece of code or text.\n+  //\n+  // It is expected that no newline character is present in the data provided,\n+  // otherwise Write() must be used.\n+  SourceWriter& Append(const StringPiece& str);", "path": "tensorflow/java/src/gen/cc/source_writer.h", "position": null, "original_position": 73, "commit_id": "b780d74444e89375e49e45b184f182db354fdc72", "original_commit_id": "d63dd2e128c7baa3627ae78c4f8f2b4ed3c6428b", "user": {"login": "karllessard", "id": 10109534, "node_id": "MDQ6VXNlcjEwMTA5NTM0", "avatar_url": "https://avatars3.githubusercontent.com/u/10109534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karllessard", "html_url": "https://github.com/karllessard", "followers_url": "https://api.github.com/users/karllessard/followers", "following_url": "https://api.github.com/users/karllessard/following{/other_user}", "gists_url": "https://api.github.com/users/karllessard/gists{/gist_id}", "starred_url": "https://api.github.com/users/karllessard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karllessard/subscriptions", "organizations_url": "https://api.github.com/users/karllessard/orgs", "repos_url": "https://api.github.com/users/karllessard/repos", "events_url": "https://api.github.com/users/karllessard/events{/privacy}", "received_events_url": "https://api.github.com/users/karllessard/received_events", "type": "User", "site_admin": false}, "body": "I remember that I *had* a reason but can't see what it is anymore, since `StringPiece` seems to offer everything that `SourceWriter.Write()` needs. I'll double-check and if it does, both signature will use that datatype. \r\n\r\nPersonally, I prefer to stick to `StringPiece` better than `std::string` because if you append inlined code, like `source_writer.Append(\"return;\")`, you avoid a useless 3-step conversion `char* -> std::string -> StringPiece`.", "created_at": "2018-02-27T14:17:31Z", "updated_at": "2018-03-27T03:00:59Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/16120#discussion_r170935194", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/16120", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/170935194"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/16120#discussion_r170935194"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/16120"}}, "body_html": "<p>I remember that I <em>had</em> a reason but can't see what it is anymore, since <code>StringPiece</code> seems to offer everything that <code>SourceWriter.Write()</code> needs. I'll double-check and if it does, both signature will use that datatype.</p>\n<p>Personally, I prefer to stick to <code>StringPiece</code> better than <code>std::string</code> because if you append inlined code, like <code>source_writer.Append(\"return;\")</code>, you avoid a useless 3-step conversion <code>char* -&gt; std::string -&gt; StringPiece</code>.</p>", "body_text": "I remember that I had a reason but can't see what it is anymore, since StringPiece seems to offer everything that SourceWriter.Write() needs. I'll double-check and if it does, both signature will use that datatype.\nPersonally, I prefer to stick to StringPiece better than std::string because if you append inlined code, like source_writer.Append(\"return;\"), you avoid a useless 3-step conversion char* -> std::string -> StringPiece.", "in_reply_to_id": 170703053}