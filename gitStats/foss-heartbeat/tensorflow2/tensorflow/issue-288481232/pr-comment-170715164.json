{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/170715164", "pull_request_review_id": 99428924, "id": 170715164, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDcxNTE2NA==", "diff_hunk": "@@ -47,16 +75,265 @@ SourceWriter& SourceWriter::Write(const string& str) {\n   return *this;\n }\n \n+SourceWriter& SourceWriter::Append(const StringPiece& str) {\n+  if (!str.empty()) {\n+    if (newline_) {\n+      DoAppend(left_margin_ + line_prefix_);\n+      newline_ = false;\n+    }\n+    DoAppend(str);\n+  }\n+  return *this;\n+}\n+\n+// Writes the signature of a Java type.\n+SourceWriter& SourceWriter::Append(const Type& type) {\n+  if (type.kind() == Type::Kind::GENERIC && type.name().empty()) {\n+    Append(\"?\");\n+  } else {\n+    Append(type.name());\n+  }\n+  if (!type.parameters().empty()) {\n+    Append(\"<\");\n+    for (std::vector<Type>::const_iterator it = type.parameters().cbegin();\n+        it != type.parameters().cend(); ++it) {\n+      if (it != type.parameters().cbegin()) {\n+        Append(\", \");\n+      }\n+      Append(*it);\n+    }\n+    Append(\">\");\n+  }\n+  return *this;\n+}\n+\n SourceWriter& SourceWriter::EndLine() {\n   Append(\"\\n\");\n   newline_ = true;\n   return *this;\n }\n \n-SourceWriter& SourceWriter::Indent(int tab) {\n-  left_margin_.resize(std::max(static_cast<int>(left_margin_.size() + tab), 0),\n-                      ' ');\n+SourceWriter& SourceWriter::BeginMethod(const Method& method, int modifiers) {\n+  GenericNamespace* generic_namespace = PushGenericNamespace(modifiers);\n+  if (!method.constructor()) {\n+    VisitType(method.return_type(), generic_namespace);\n+  }\n+  for (std::vector<Variable>::const_iterator it = method.arguments().cbegin();", "path": "tensorflow/java/src/gen/cc/source_writer.cc", "position": null, "original_position": 105, "commit_id": "b780d74444e89375e49e45b184f182db354fdc72", "original_commit_id": "d63dd2e128c7baa3627ae78c4f8f2b4ed3c6428b", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "Range iteration?\r\n\r\n```c++\r\nfor (const Variable& v : method.arguments()) {\r\n  VisitType(v.type(), generic_namespace);\r\n}\r\n```", "created_at": "2018-02-26T19:53:19Z", "updated_at": "2018-03-27T03:00:59Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/16120#discussion_r170715164", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/16120", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/170715164"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/16120#discussion_r170715164"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/16120"}}, "body_html": "<p>Range iteration?</p>\n<div class=\"highlight highlight-source-c++\"><pre><span class=\"pl-k\">for</span> (<span class=\"pl-k\">const</span> Variable&amp; v : method.arguments()) {\n  <span class=\"pl-c1\">VisitType</span>(v.<span class=\"pl-c1\">type</span>(), generic_namespace);\n}</pre></div>", "body_text": "Range iteration?\nfor (const Variable& v : method.arguments()) {\n  VisitType(v.type(), generic_namespace);\n}"}