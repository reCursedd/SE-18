{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/269601506", "html_url": "https://github.com/tensorflow/tensorflow/issues/6554#issuecomment-269601506", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6554", "id": 269601506, "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTYwMTUwNg==", "user": {"login": "BaiGang", "id": 241076, "node_id": "MDQ6VXNlcjI0MTA3Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/241076?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BaiGang", "html_url": "https://github.com/BaiGang", "followers_url": "https://api.github.com/users/BaiGang/followers", "following_url": "https://api.github.com/users/BaiGang/following{/other_user}", "gists_url": "https://api.github.com/users/BaiGang/gists{/gist_id}", "starred_url": "https://api.github.com/users/BaiGang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BaiGang/subscriptions", "organizations_url": "https://api.github.com/users/BaiGang/orgs", "repos_url": "https://api.github.com/users/BaiGang/repos", "events_url": "https://api.github.com/users/BaiGang/events{/privacy}", "received_events_url": "https://api.github.com/users/BaiGang/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-29T09:11:33Z", "updated_at": "2016-12-29T09:11:33Z", "author_association": "NONE", "body_html": "<div class=\"email-fragment\">Thanks Derek for the detailed explanation. My question is resolved.</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On Thu, Dec 29, 2016 at 3:59 PM, Derek Murray ***@***.***&gt; wrote:\n The extra comma is significant: it turns a tf.Tensor object (e.g.\n parsed[0]) into a single-element tuple (e.g. (parsed[0],)). When you pass\n them to APIs that expect a single tf.Tensor, TensorFlow automatically\n packs lists and tuples of tf.Tensor objects into a single tf.Tensor with\n an additional dimension. Therefore, since parsed[0] is a scalar (a\n 0-dimensional tensor), parsed[0], is treated as a single-element vector\n (a 1-dimensional tensor).\n\n The tf.train.shuffle_batch(..., batch_size=200, ...) method accumulates a\n batch of 200 labels, weights, and features, by packing together 200\n randomly sampled parsed inputs. Batching 200 scalars gives a shape of\n (200,), whereas batching 200 single-element vectors gives a shape of (200,\n 1).\n\n Hope this helps. Note that in future, queries like this one are better\n handled on Stack Overflow, so that they're more easily searchable.\n\n \u2014\n You are receiving this because you authored the thread.\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"197949871\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/6554\" href=\"https://github.com/tensorflow/tensorflow/issues/6554#issuecomment-269594672\">#6554 (comment)</a>&gt;,\n or mute the thread\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/AAOttIsfFLVZuPEVjC9IyaNm3-ljd51Nks5rM2hygaJpZM4LXVX-\">https://github.com/notifications/unsubscribe-auth/AAOttIsfFLVZuPEVjC9IyaNm3-ljd51Nks5rM2hygaJpZM4LXVX-</a>&gt;\n .\n</div>\n<div class=\"email-fragment\"></div>\n</div>", "body_text": "Thanks Derek for the detailed explanation. My question is resolved.\n\u2026\nOn Thu, Dec 29, 2016 at 3:59 PM, Derek Murray ***@***.***> wrote:\n The extra comma is significant: it turns a tf.Tensor object (e.g.\n parsed[0]) into a single-element tuple (e.g. (parsed[0],)). When you pass\n them to APIs that expect a single tf.Tensor, TensorFlow automatically\n packs lists and tuples of tf.Tensor objects into a single tf.Tensor with\n an additional dimension. Therefore, since parsed[0] is a scalar (a\n 0-dimensional tensor), parsed[0], is treated as a single-element vector\n (a 1-dimensional tensor).\n\n The tf.train.shuffle_batch(..., batch_size=200, ...) method accumulates a\n batch of 200 labels, weights, and features, by packing together 200\n randomly sampled parsed inputs. Batching 200 scalars gives a shape of\n (200,), whereas batching 200 single-element vectors gives a shape of (200,\n 1).\n\n Hope this helps. Note that in future, queries like this one are better\n handled on Stack Overflow, so that they're more easily searchable.\n\n \u2014\n You are receiving this because you authored the thread.\n Reply to this email directly, view it on GitHub\n <#6554 (comment)>,\n or mute the thread\n <https://github.com/notifications/unsubscribe-auth/AAOttIsfFLVZuPEVjC9IyaNm3-ljd51Nks5rM2hygaJpZM4LXVX->\n .", "body": "Thanks Derek for the detailed explanation. My question is resolved.\n\nOn Thu, Dec 29, 2016 at 3:59 PM, Derek Murray <notifications@github.com>\nwrote:\n\n> The extra comma is significant: it turns a tf.Tensor object (e.g.\n> parsed[0]) into a single-element tuple (e.g. (parsed[0],)). When you pass\n> them to APIs that expect a single tf.Tensor, TensorFlow automatically\n> packs lists and tuples of tf.Tensor objects into a single tf.Tensor with\n> an additional dimension. Therefore, since parsed[0] is a scalar (a\n> 0-dimensional tensor), parsed[0], is treated as a single-element vector\n> (a 1-dimensional tensor).\n>\n> The tf.train.shuffle_batch(..., batch_size=200, ...) method accumulates a\n> batch of 200 labels, weights, and features, by packing together 200\n> randomly sampled parsed inputs. Batching 200 scalars gives a shape of\n> (200,), whereas batching 200 single-element vectors gives a shape of (200,\n> 1).\n>\n> Hope this helps. Note that in future, queries like this one are better\n> handled on Stack Overflow, so that they're more easily searchable.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/issues/6554#issuecomment-269594672>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAOttIsfFLVZuPEVjC9IyaNm3-ljd51Nks5rM2hygaJpZM4LXVX->\n> .\n>\n"}