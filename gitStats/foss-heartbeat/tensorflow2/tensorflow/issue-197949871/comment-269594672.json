{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/269594672", "html_url": "https://github.com/tensorflow/tensorflow/issues/6554#issuecomment-269594672", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6554", "id": 269594672, "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTU5NDY3Mg==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-29T07:58:39Z", "updated_at": "2016-12-29T07:58:39Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The extra comma is significant: it turns a <code>tf.Tensor</code> object (e.g. <code>parsed[0]</code>) into a single-element <code>tuple</code> (e.g. <code>(parsed[0],)</code>).  When you pass them to APIs that expect a single <code>tf.Tensor</code>, TensorFlow automatically packs lists and tuples of <code>tf.Tensor</code> objects into a single <code>tf.Tensor</code> with an additional dimension. Therefore, since <code>parsed[0]</code> is a scalar (a 0-dimensional tensor), <code>parsed[0],</code> is treated as a single-element vector (a 1-dimensional tensor).</p>\n<p>The <code>tf.train.shuffle_batch(..., batch_size=200, ...)</code> method accumulates a batch of 200 labels, weights, and features, by packing together 200 randomly sampled parsed inputs. Batching 200 scalars gives a shape of <code>(200,)</code>, whereas batching 200 single-element vectors gives a shape of <code>(200, 1)</code>.</p>\n<p>Hope this helps. Note that in future, queries like this one are better handled on Stack Overflow, so that they're more easily searchable.</p>", "body_text": "The extra comma is significant: it turns a tf.Tensor object (e.g. parsed[0]) into a single-element tuple (e.g. (parsed[0],)).  When you pass them to APIs that expect a single tf.Tensor, TensorFlow automatically packs lists and tuples of tf.Tensor objects into a single tf.Tensor with an additional dimension. Therefore, since parsed[0] is a scalar (a 0-dimensional tensor), parsed[0], is treated as a single-element vector (a 1-dimensional tensor).\nThe tf.train.shuffle_batch(..., batch_size=200, ...) method accumulates a batch of 200 labels, weights, and features, by packing together 200 randomly sampled parsed inputs. Batching 200 scalars gives a shape of (200,), whereas batching 200 single-element vectors gives a shape of (200, 1).\nHope this helps. Note that in future, queries like this one are better handled on Stack Overflow, so that they're more easily searchable.", "body": "The extra comma is significant: it turns a `tf.Tensor` object (e.g. `parsed[0]`) into a single-element `tuple` (e.g. `(parsed[0],)`).  When you pass them to APIs that expect a single `tf.Tensor`, TensorFlow automatically packs lists and tuples of `tf.Tensor` objects into a single `tf.Tensor` with an additional dimension. Therefore, since `parsed[0]` is a scalar (a 0-dimensional tensor), `parsed[0],` is treated as a single-element vector (a 1-dimensional tensor).\r\n\r\nThe `tf.train.shuffle_batch(..., batch_size=200, ...)` method accumulates a batch of 200 labels, weights, and features, by packing together 200 randomly sampled parsed inputs. Batching 200 scalars gives a shape of `(200,)`, whereas batching 200 single-element vectors gives a shape of `(200, 1)`.\r\n\r\nHope this helps. Note that in future, queries like this one are better handled on Stack Overflow, so that they're more easily searchable."}