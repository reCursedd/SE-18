{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/349742835", "html_url": "https://github.com/tensorflow/tensorflow/issues/15162#issuecomment-349742835", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15162", "id": 349742835, "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTc0MjgzNQ==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-06T19:09:56Z", "updated_at": "2017-12-06T19:09:56Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The problem arises from  calling <code>Iterator.get_next()</code> <em>inside</em> the loop, which creates a new operation (and, in this case, a new background thread) in each iteration. The following code should not suffer from the same problem:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> itertools\n<span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">gen</span>():\n  <span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> itertools.count(<span class=\"pl-c1\">1</span>):\n    <span class=\"pl-k\">yield</span> (i, [<span class=\"pl-c1\">1</span>] <span class=\"pl-k\">*</span> <span class=\"pl-c1\">5</span>)\n\nds <span class=\"pl-k\">=</span> tf.data.Dataset.from_generator(\n    gen, (tf.int64, tf.int64), (tf.TensorShape([]), tf.TensorShape([<span class=\"pl-c1\">None</span>])))\nds <span class=\"pl-k\">=</span> ds.make_one_shot_iterator()\n\nnext_element <span class=\"pl-k\">=</span> ds.get_next()\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    <span class=\"pl-k\">while</span> <span class=\"pl-c1\">True</span>:\n        sess.run(next_element)</pre></div>", "body_text": "The problem arises from  calling Iterator.get_next() inside the loop, which creates a new operation (and, in this case, a new background thread) in each iteration. The following code should not suffer from the same problem:\nimport itertools\nimport tensorflow as tf\n\ndef gen():\n  for i in itertools.count(1):\n    yield (i, [1] * 5)\n\nds = tf.data.Dataset.from_generator(\n    gen, (tf.int64, tf.int64), (tf.TensorShape([]), tf.TensorShape([None])))\nds = ds.make_one_shot_iterator()\n\nnext_element = ds.get_next()\n\nwith tf.Session() as sess:\n    while True:\n        sess.run(next_element)", "body": "The problem arises from  calling `Iterator.get_next()` *inside* the loop, which creates a new operation (and, in this case, a new background thread) in each iteration. The following code should not suffer from the same problem:\r\n\r\n```python\r\nimport itertools\r\nimport tensorflow as tf\r\n\r\ndef gen():\r\n  for i in itertools.count(1):\r\n    yield (i, [1] * 5)\r\n\r\nds = tf.data.Dataset.from_generator(\r\n    gen, (tf.int64, tf.int64), (tf.TensorShape([]), tf.TensorShape([None])))\r\nds = ds.make_one_shot_iterator()\r\n\r\nnext_element = ds.get_next()\r\n\r\nwith tf.Session() as sess:\r\n    while True:\r\n        sess.run(next_element)\r\n```"}