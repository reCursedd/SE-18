{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16010", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16010/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16010/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16010/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16010", "id": 287458978, "node_id": "MDU6SXNzdWUyODc0NTg5Nzg=", "number": 16010, "title": "lib_package does not bundle MKL-DNN", "user": {"login": "chrert", "id": 1387661, "node_id": "MDQ6VXNlcjEzODc2NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1387661?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrert", "html_url": "https://github.com/chrert", "followers_url": "https://api.github.com/users/chrert/followers", "following_url": "https://api.github.com/users/chrert/following{/other_user}", "gists_url": "https://api.github.com/users/chrert/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrert/subscriptions", "organizations_url": "https://api.github.com/users/chrert/orgs", "repos_url": "https://api.github.com/users/chrert/repos", "events_url": "https://api.github.com/users/chrert/events{/privacy}", "received_events_url": "https://api.github.com/users/chrert/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-10T14:47:46Z", "updated_at": "2018-01-11T18:49:00Z", "closed_at": "2018-01-11T18:49:00Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: no</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.4.1</li>\n<li><strong>Python version</strong>: 2.7.12</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.8.1</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: 5.4.0</li>\n<li><strong>CUDA/cuDNN version</strong>: -</li>\n<li><strong>GPU model and memory</strong>: -</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I wan't to build the tensorflow C-API from source with MKL-DNN support in order to use it in another project. The easiest solution (if not the only convenient one) I found for building the C-API is using the lib_package tool:</p>\n<div class=\"highlight highlight-source-shell\"><pre>bazel build --config=mkl -c opt //tensorflow/tools/lib_package:libtensorflow</pre></div>\n<p>The build succeeds. However, the packaged library does not contain <code>libmklml_intel.so</code> and <code>libiomp5.so</code>.</p>\n<div class=\"highlight highlight-source-shell\"><pre>$ ldd libtensorflow_framework.so\n\tlinux-vdso.so.1 =<span class=\"pl-k\">&gt;</span>  (0x00007ffec0f8a000)\n\tlibmklml_intel.so =<span class=\"pl-k\">&gt;</span> not found\n\tlibiomp5.so =<span class=\"pl-k\">&gt;</span> not found\n\tlibdl.so.2 =<span class=\"pl-k\">&gt;</span> /lib/x86_64-linux-gnu/libdl.so.2 (0x00007feb07b2f000)\n\tlibm.so.6 =<span class=\"pl-k\">&gt;</span> /lib/x86_64-linux-gnu/libm.so.6 (0x00007feb07826000)\n\tlibpthread.so.0 =<span class=\"pl-k\">&gt;</span> /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007feb07609000)\n\tlibstdc++.so.6 =<span class=\"pl-k\">&gt;</span> /usr/lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007feb07287000)\n\tlibgcc_s.so.1 =<span class=\"pl-k\">&gt;</span> /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007feb07071000)\n\tlibc.so.6 =<span class=\"pl-k\">&gt;</span> /lib/x86_64-linux-gnu/libc.so.6 (0x00007feb06ca7000)\n</pre></div>\n<p>Is there a way to fix the Bazel build such that it outputs all necessary libs?</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): no\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): 1.4.1\nPython version: 2.7.12\nBazel version (if compiling from source): 0.8.1\nGCC/Compiler version (if compiling from source): 5.4.0\nCUDA/cuDNN version: -\nGPU model and memory: -\nExact command to reproduce:\n\nDescribe the problem\nI wan't to build the tensorflow C-API from source with MKL-DNN support in order to use it in another project. The easiest solution (if not the only convenient one) I found for building the C-API is using the lib_package tool:\nbazel build --config=mkl -c opt //tensorflow/tools/lib_package:libtensorflow\nThe build succeeds. However, the packaged library does not contain libmklml_intel.so and libiomp5.so.\n$ ldd libtensorflow_framework.so\n\tlinux-vdso.so.1 =>  (0x00007ffec0f8a000)\n\tlibmklml_intel.so => not found\n\tlibiomp5.so => not found\n\tlibdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007feb07b2f000)\n\tlibm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007feb07826000)\n\tlibpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007feb07609000)\n\tlibstdc++.so.6 => /usr/lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007feb07287000)\n\tlibgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007feb07071000)\n\tlibc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007feb06ca7000)\n\nIs there a way to fix the Bazel build such that it outputs all necessary libs?", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: no\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.4.1\r\n- **Python version**: 2.7.12\r\n- **Bazel version (if compiling from source)**: 0.8.1\r\n- **GCC/Compiler version (if compiling from source)**: 5.4.0\r\n- **CUDA/cuDNN version**: -\r\n- **GPU model and memory**: -\r\n- **Exact command to reproduce**: \r\n\r\n### Describe the problem\r\nI wan't to build the tensorflow C-API from source with MKL-DNN support in order to use it in another project. The easiest solution (if not the only convenient one) I found for building the C-API is using the lib_package tool:\r\n\r\n```bash\r\nbazel build --config=mkl -c opt //tensorflow/tools/lib_package:libtensorflow\r\n```\r\nThe build succeeds. However, the packaged library does not contain `libmklml_intel.so` and `libiomp5.so`. \r\n\r\n```bash\r\n$ ldd libtensorflow_framework.so\r\n\tlinux-vdso.so.1 =>  (0x00007ffec0f8a000)\r\n\tlibmklml_intel.so => not found\r\n\tlibiomp5.so => not found\r\n\tlibdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007feb07b2f000)\r\n\tlibm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007feb07826000)\r\n\tlibpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007feb07609000)\r\n\tlibstdc++.so.6 => /usr/lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007feb07287000)\r\n\tlibgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007feb07071000)\r\n\tlibc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007feb06ca7000)\r\n\r\n```\r\nIs there a way to fix the Bazel build such that it outputs all necessary libs?\r\n"}