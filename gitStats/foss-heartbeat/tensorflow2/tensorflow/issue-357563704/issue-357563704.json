{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22109", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22109/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22109/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22109/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22109", "id": 357563704, "node_id": "MDU6SXNzdWUzNTc1NjM3MDQ=", "number": 22109, "title": "TocoConverter: permute layer after dim-reducing reshape / squeeze: error on conversion", "user": {"login": "MaximilianStaab", "id": 830908, "node_id": "MDQ6VXNlcjgzMDkwOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/830908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaximilianStaab", "html_url": "https://github.com/MaximilianStaab", "followers_url": "https://api.github.com/users/MaximilianStaab/followers", "following_url": "https://api.github.com/users/MaximilianStaab/following{/other_user}", "gists_url": "https://api.github.com/users/MaximilianStaab/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaximilianStaab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaximilianStaab/subscriptions", "organizations_url": "https://api.github.com/users/MaximilianStaab/orgs", "repos_url": "https://api.github.com/users/MaximilianStaab/repos", "events_url": "https://api.github.com/users/MaximilianStaab/events{/privacy}", "received_events_url": "https://api.github.com/users/MaximilianStaab/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750616506, "node_id": "MDU6TGFiZWw3NTA2MTY1MDY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:lite", "name": "comp:lite", "color": "0052cc", "default": false}], "state": "open", "locked": false, "assignee": {"login": "tofulawrence", "id": 24887415, "node_id": "MDQ6VXNlcjI0ODg3NDE1", "avatar_url": "https://avatars2.githubusercontent.com/u/24887415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tofulawrence", "html_url": "https://github.com/tofulawrence", "followers_url": "https://api.github.com/users/tofulawrence/followers", "following_url": "https://api.github.com/users/tofulawrence/following{/other_user}", "gists_url": "https://api.github.com/users/tofulawrence/gists{/gist_id}", "starred_url": "https://api.github.com/users/tofulawrence/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tofulawrence/subscriptions", "organizations_url": "https://api.github.com/users/tofulawrence/orgs", "repos_url": "https://api.github.com/users/tofulawrence/repos", "events_url": "https://api.github.com/users/tofulawrence/events{/privacy}", "received_events_url": "https://api.github.com/users/tofulawrence/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tofulawrence", "id": 24887415, "node_id": "MDQ6VXNlcjI0ODg3NDE1", "avatar_url": "https://avatars2.githubusercontent.com/u/24887415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tofulawrence", "html_url": "https://github.com/tofulawrence", "followers_url": "https://api.github.com/users/tofulawrence/followers", "following_url": "https://api.github.com/users/tofulawrence/following{/other_user}", "gists_url": "https://api.github.com/users/tofulawrence/gists{/gist_id}", "starred_url": "https://api.github.com/users/tofulawrence/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tofulawrence/subscriptions", "organizations_url": "https://api.github.com/users/tofulawrence/orgs", "repos_url": "https://api.github.com/users/tofulawrence/repos", "events_url": "https://api.github.com/users/tofulawrence/events{/privacy}", "received_events_url": "https://api.github.com/users/tofulawrence/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-09-06T09:09:58Z", "updated_at": "2018-11-20T13:30:59Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: -</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.10.1-0-g4dcfddc5d1 1.10.1</li>\n<li><strong>Python version</strong>: 3.5.5</li>\n<li><strong>Bazel version (if compiling from source)</strong>: -</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: -</li>\n<li><strong>CUDA/cuDNN version</strong>: V9.0.176</li>\n<li><strong>GPU model and memory</strong>: NVIDIA TITAN Xp, 12196MiB</li>\n<li><strong>Exact command to reproduce</strong>: see minimum example code below</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>The code example below containing a model with an input, \"transformation\" and permute layer compiles fine on pc and it is also possible to call <code>predict()</code>on it and getting the expected results.<br>\nThe input layer expects the last dimension to be 1, the transform layer being either a reshape or a squeeze layer gets rid of the 1, and the permutation layer just pushes the first dimension after the batch size to the end.<br>\nThe native Keras reshape layer (A) is the only one that doesn't work because it doesn't support dimensionality reduction. Its output shape would be <code>(None, None, 10, 42)</code>.<br>\nHowever, lines (B), (C) and (D) all work fine and it doesn't matter which one is commented in.<br>\nIn the same way it doesn't matter whether the Keras permute layer (E) or the backend version (F) is commented in.</p>\n<p>If all transform layers (A-D) are commented out and only one permute layer (E) or (F) is commented in, directly gets passed <code>input</code> and an input shape of <code>(2,3,1)</code> for (E) or <code>(0,2,3,1)</code> for (F), the model compiles and the <code>TocoConverter</code> produces a tflite-file.<br>\nIf all permute layers (E, F) are commented out and only one transform layer (B) or (C) or (D) is commented in and the <code>outputs</code> of <code>Model</code> is set to <code>[transform]</code>, the model also compiles and the <code>TocoConverter</code> produces a tflite-file.</p>\n<p>But for each combination of (B-C) and (E, F) being commented in so that one transform layer and one permute layer is there, the TocoConverter doesn't produce a tflite-file although the model compiles and the model summary looks as it should.</p>\n<p>The expected result is the minimum example code running without errors and producing a tflite model file from the converted keras model file.</p>\n<hr>\n<p><strong>Edit: For the time being and for everyone with the same problem, I wrote an updated minimum example code with an \"emulated\" permute layer as a workaround. It uses split, concatenate and reshape operations and you find it at the end of this page after the tracebacks.</strong></p>\n<hr>\n<h3>Source code / logs</h3>\n<h4>Minimum Example Code:</h4>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">from</span> tensorflow.keras <span class=\"pl-k\">import</span> Model\n<span class=\"pl-k\">from</span> tensorflow.keras.models <span class=\"pl-k\">import</span> save_model\n\n<span class=\"pl-k\">from</span> tensorflow.keras.layers <span class=\"pl-k\">import</span> Input, Lambda, Permute, Reshape\n<span class=\"pl-k\">from</span> tensorflow.keras.backend <span class=\"pl-k\">import</span> permute_dimensions\n<span class=\"pl-k\">from</span> tensorflow.keras.backend <span class=\"pl-k\">import</span> squeeze <span class=\"pl-k\">as</span> b_squeeze\n<span class=\"pl-k\">from</span> tensorflow <span class=\"pl-k\">import</span> reshape, squeeze\n\n<span class=\"pl-k\">from</span> tensorflow.contrib <span class=\"pl-k\">import</span> lite\n\n\n<span class=\"pl-c1\">input</span> <span class=\"pl-k\">=</span> Input(<span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">42</span>, <span class=\"pl-c1\">1</span>))\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> transform = Reshape((-1, 10, 42))(input)\t\t\t\t\t# (A)</span>\ntransform <span class=\"pl-k\">=</span> Lambda(<span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">x</span>: reshape(x, (<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">42</span>)))(<span class=\"pl-c1\">input</span>)\t\t\t<span class=\"pl-c\"><span class=\"pl-c\">#</span> (B)</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> transform = Lambda(lambda x: squeeze(x, axis=-1))(input)\t\t\t# (C)</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> transform = Lambda(lambda x: b_squeeze(x, axis=-1))(input)\t\t\t# (D)</span>\n\npermute <span class=\"pl-k\">=</span> Permute((<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">1</span>))(transform)\t\t\t\t\t\t<span class=\"pl-c\"><span class=\"pl-c\">#</span> (E)</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> permute = Lambda(lambda x: permute_dimensions(x, (0,2,1)))(transform)\t\t# (F)</span>\n\nkeras_model <span class=\"pl-k\">=</span> Model(<span class=\"pl-v\">inputs</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">input</span>], <span class=\"pl-v\">outputs</span><span class=\"pl-k\">=</span>[permute])\nkeras_model.compile(<span class=\"pl-v\">loss</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>categorical_crossentropy<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">optimizer</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>sgd<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">metrics</span><span class=\"pl-k\">=</span>[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>accuracy<span class=\"pl-pds\">'</span></span>])\n\n\n<span class=\"pl-c1\">print</span>(keras_model.summary())\nsave_model(<span class=\"pl-v\">model</span><span class=\"pl-k\">=</span>keras_model, <span class=\"pl-v\">filepath</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>keras_model.hdf5<span class=\"pl-pds\">\"</span></span>,\n\t<span class=\"pl-v\">overwrite</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>, <span class=\"pl-v\">include_optimizer</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\n\nconverter <span class=\"pl-k\">=</span> lite.TocoConverter.from_keras_model_file(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>keras_model.hdf5<span class=\"pl-pds\">\"</span></span>)\ntflite_model <span class=\"pl-k\">=</span> converter.convert()\n<span class=\"pl-k\">with</span> <span class=\"pl-c1\">open</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>tflite_model.tflite<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>wb<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">as</span> f: f.write(tflite_model)</pre></div>\n<h4>keras_model.summary() for each of the valid six combinations:</h4>\n<pre><code>_________________________________________________________________\nLayer (type)                 Output Shape              Param #\n=================================================================\ninput_1 (InputLayer)         (None, 10, 42, 1)         0\n_________________________________________________________________\nlambda (Lambda)              (None, 10, 42)            0\n_________________________________________________________________\npermute (Permute)            (None, 42, 10)            0\n=================================================================\nTotal params: 0\nTrainable params: 0\nNon-trainable params: 0\n_________________________________________________________________\n</code></pre>\n<h4>Traceback for (B)+(E) and (B)+(F):</h4>\n<pre><code>Traceback (most recent call last):\n  File \"minimal.py\", line 32, in &lt;module&gt;\n    tflite_model = converter.convert()\n  File \"/usr/stud/staab/anaconda3/envs/tensorflow/lib/python3.5/site-packages/tensorflow/contrib/lite/python/lite.py\", line 374, in convert\n    dump_graphviz_video=self.dump_graphviz_video)\n  File \"/usr/stud/staab/anaconda3/envs/tensorflow/lib/python3.5/site-packages/tensorflow/contrib/lite/python/convert.py\", line 246, in toco_convert\n    input_data.SerializeToString())\n  File \"/usr/stud/staab/anaconda3/envs/tensorflow/lib/python3.5/site-packages/tensorflow/contrib/lite/python/convert.py\", line 106, in toco_convert_protos\n    (stdout, stderr))\nRuntimeError: TOCO failed see console for info.\nb'2018-09-06 10:40:25.228797: I tensorflow/contrib/lite/toco/graph_transformations/graph_transformations.cc:39] Before Removing unused ops: 2 operators, 5 arrays (0 quantized)\\n\n2018-09-06 10:40:25.228949: I tensorflow/contrib/lite/toco/graph_transformations/graph_transformations.cc:39] Before general graph transformations: 2 operators, 5 arrays (0 quantized)\\n\n2018-09-06 10:40:25.229050: I tensorflow/contrib/lite/toco/graph_transformations/graph_transformations.cc:39] After general graph transformations pass 1: 2 operators, 5 arrays (0 quantized)\\n\n2018-09-06 10:40:25.229088: F tensorflow/contrib/lite/toco/graph_transformations/propagate_fixed_sizes.cc:1402] Check failed: axis &lt; input_shape.dimensions_count() (1211997096 vs. 4)\\n\nAborted (core dumped)\\n'\nNone\n</code></pre>\n<p>The number 1211997096 is always randomly different and even can be negative.</p>\n<h4>Traceback for (C)+(E), (D)+(E), (C)+(F) and (D)+(F):</h4>\n<pre><code>Traceback (most recent call last):\n  File \"minimal.py\", line 32, in &lt;module&gt;\n    tflite_model = converter.convert()\n  File \"/usr/stud/staab/anaconda3/envs/tensorflow/lib/python3.5/site-packages/tensorflow/contrib/lite/python/lite.py\", line 374, in convert\n    dump_graphviz_video=self.dump_graphviz_video)\n  File \"/usr/stud/staab/anaconda3/envs/tensorflow/lib/python3.5/site-packages/tensorflow/contrib/lite/python/convert.py\", line 246, in toco_convert\n    input_data.SerializeToString())\n  File \"/usr/stud/staab/anaconda3/envs/tensorflow/lib/python3.5/site-packages/tensorflow/contrib/lite/python/convert.py\", line 106, in toco_convert_protos\n    (stdout, stderr))\nRuntimeError: TOCO failed see console for info.\nb'2018-09-06 10:44:46.550688: I tensorflow/contrib/lite/toco/graph_transformations/graph_transformations.cc:39] Before Removing unused ops: 2 operators, 4 arrays (0 quantized)\\n\n2018-09-06 10:44:46.550805: I tensorflow/contrib/lite/toco/graph_transformations/graph_transformations.cc:39] Before general graph transformations: 2 operators, 4 arrays (0 quantized)\\n\n2018-09-06 10:44:46.550870: F tensorflow/contrib/lite/toco/graph_transformations/propagate_fixed_sizes.cc:1395] Check failed: perm.size() == input_shape.dimensions_count() (3 vs. 4)Transpose permutation input permute/transpose/perm must be same length as input dimensions\\n\nAborted (core dumped)\\n'\nNone\n</code></pre>\n<h4>Minimum Example Code with Workaround:</h4>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">from</span> tensorflow.keras <span class=\"pl-k\">import</span> Model\n<span class=\"pl-k\">from</span> tensorflow.keras.models <span class=\"pl-k\">import</span> save_model\n\n<span class=\"pl-k\">from</span> tensorflow.keras.layers <span class=\"pl-k\">import</span> Input, Lambda, Permute, Reshape, concatenate\n<span class=\"pl-k\">from</span> tensorflow.keras.backend <span class=\"pl-k\">import</span> permute_dimensions\n<span class=\"pl-k\">from</span> tensorflow.keras.backend <span class=\"pl-k\">import</span> squeeze <span class=\"pl-k\">as</span> b_squeeze\n<span class=\"pl-k\">from</span> tensorflow <span class=\"pl-k\">import</span> reshape, squeeze, split, expand_dims\n\n<span class=\"pl-k\">from</span> tensorflow.contrib <span class=\"pl-k\">import</span> lite\n\n\n<span class=\"pl-c1\">input</span> <span class=\"pl-k\">=</span> Input(<span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">42</span>, <span class=\"pl-c1\">1</span>))\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> transform = Reshape((-1, 10, 42))(input)\t\t\t\t\t# (A)</span>\ntransform <span class=\"pl-k\">=</span> Lambda(<span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">x</span>: reshape(x, (<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">42</span>)))(<span class=\"pl-c1\">input</span>)\t\t\t<span class=\"pl-c\"><span class=\"pl-c\">#</span> (B)</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> transform = Lambda(lambda x: squeeze(x, axis=-1))(input)\t\t\t# (C)</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> transform = Lambda(lambda x: b_squeeze(x, axis=-1))(input)\t\t\t# (D)</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Emulated permute to come around a bug: split, concatenate, reshape</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>------------------------------------------------------------------------------</span>\nsplit_p <span class=\"pl-k\">=</span> Lambda(<span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">x</span>: split(expand_dims(x, <span class=\"pl-v\">axis</span><span class=\"pl-k\">=</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>), <span class=\"pl-v\">num_or_size_splits</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">10</span>,\n                                                            <span class=\"pl-v\">axis</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>))(transform)\nmerge_p <span class=\"pl-k\">=</span> concatenate(split_p)\nsqueeze_p <span class=\"pl-k\">=</span> Lambda(<span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">x</span>: reshape(x, (<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">42</span>, <span class=\"pl-c1\">10</span>)))(merge_p)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>------------------------------------------------------------------------------</span>\n\nkeras_model <span class=\"pl-k\">=</span> Model(<span class=\"pl-v\">inputs</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">input</span>], <span class=\"pl-v\">outputs</span><span class=\"pl-k\">=</span>[squeeze_p])\nkeras_model.compile(<span class=\"pl-v\">loss</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>categorical_crossentropy<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">optimizer</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>sgd<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">metrics</span><span class=\"pl-k\">=</span>[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>accuracy<span class=\"pl-pds\">'</span></span>])\n\n\n<span class=\"pl-c1\">print</span>(keras_model.summary())\nsave_model(<span class=\"pl-v\">model</span><span class=\"pl-k\">=</span>keras_model, <span class=\"pl-v\">filepath</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>keras_model.hdf5<span class=\"pl-pds\">\"</span></span>,\n\t<span class=\"pl-v\">overwrite</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>, <span class=\"pl-v\">include_optimizer</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\n\nconverter <span class=\"pl-k\">=</span> lite.TocoConverter.from_keras_model_file(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>keras_model.hdf5<span class=\"pl-pds\">\"</span></span>)\ntflite_model <span class=\"pl-k\">=</span> converter.convert()\n<span class=\"pl-k\">with</span> <span class=\"pl-c1\">open</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>tflite_model.tflite<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>wb<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">as</span> f: f.write(tflite_model)</pre></div>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: -\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): v1.10.1-0-g4dcfddc5d1 1.10.1\nPython version: 3.5.5\nBazel version (if compiling from source): -\nGCC/Compiler version (if compiling from source): -\nCUDA/cuDNN version: V9.0.176\nGPU model and memory: NVIDIA TITAN Xp, 12196MiB\nExact command to reproduce: see minimum example code below\n\nDescribe the problem\nThe code example below containing a model with an input, \"transformation\" and permute layer compiles fine on pc and it is also possible to call predict()on it and getting the expected results.\nThe input layer expects the last dimension to be 1, the transform layer being either a reshape or a squeeze layer gets rid of the 1, and the permutation layer just pushes the first dimension after the batch size to the end.\nThe native Keras reshape layer (A) is the only one that doesn't work because it doesn't support dimensionality reduction. Its output shape would be (None, None, 10, 42).\nHowever, lines (B), (C) and (D) all work fine and it doesn't matter which one is commented in.\nIn the same way it doesn't matter whether the Keras permute layer (E) or the backend version (F) is commented in.\nIf all transform layers (A-D) are commented out and only one permute layer (E) or (F) is commented in, directly gets passed input and an input shape of (2,3,1) for (E) or (0,2,3,1) for (F), the model compiles and the TocoConverter produces a tflite-file.\nIf all permute layers (E, F) are commented out and only one transform layer (B) or (C) or (D) is commented in and the outputs of Model is set to [transform], the model also compiles and the TocoConverter produces a tflite-file.\nBut for each combination of (B-C) and (E, F) being commented in so that one transform layer and one permute layer is there, the TocoConverter doesn't produce a tflite-file although the model compiles and the model summary looks as it should.\nThe expected result is the minimum example code running without errors and producing a tflite model file from the converted keras model file.\n\nEdit: For the time being and for everyone with the same problem, I wrote an updated minimum example code with an \"emulated\" permute layer as a workaround. It uses split, concatenate and reshape operations and you find it at the end of this page after the tracebacks.\n\nSource code / logs\nMinimum Example Code:\nfrom tensorflow.keras import Model\nfrom tensorflow.keras.models import save_model\n\nfrom tensorflow.keras.layers import Input, Lambda, Permute, Reshape\nfrom tensorflow.keras.backend import permute_dimensions\nfrom tensorflow.keras.backend import squeeze as b_squeeze\nfrom tensorflow import reshape, squeeze\n\nfrom tensorflow.contrib import lite\n\n\ninput = Input(shape=(10, 42, 1))\n\n# transform = Reshape((-1, 10, 42))(input)\t\t\t\t\t# (A)\ntransform = Lambda(lambda x: reshape(x, (-1, 10, 42)))(input)\t\t\t# (B)\n# transform = Lambda(lambda x: squeeze(x, axis=-1))(input)\t\t\t# (C)\n# transform = Lambda(lambda x: b_squeeze(x, axis=-1))(input)\t\t\t# (D)\n\npermute = Permute((2,1))(transform)\t\t\t\t\t\t# (E)\n# permute = Lambda(lambda x: permute_dimensions(x, (0,2,1)))(transform)\t\t# (F)\n\nkeras_model = Model(inputs=[input], outputs=[permute])\nkeras_model.compile(loss='categorical_crossentropy', optimizer='sgd', metrics=['accuracy'])\n\n\nprint(keras_model.summary())\nsave_model(model=keras_model, filepath=\"keras_model.hdf5\",\n\toverwrite=True, include_optimizer=True)\n\nconverter = lite.TocoConverter.from_keras_model_file(\"keras_model.hdf5\")\ntflite_model = converter.convert()\nwith open(\"tflite_model.tflite\", \"wb\") as f: f.write(tflite_model)\nkeras_model.summary() for each of the valid six combinations:\n_________________________________________________________________\nLayer (type)                 Output Shape              Param #\n=================================================================\ninput_1 (InputLayer)         (None, 10, 42, 1)         0\n_________________________________________________________________\nlambda (Lambda)              (None, 10, 42)            0\n_________________________________________________________________\npermute (Permute)            (None, 42, 10)            0\n=================================================================\nTotal params: 0\nTrainable params: 0\nNon-trainable params: 0\n_________________________________________________________________\n\nTraceback for (B)+(E) and (B)+(F):\nTraceback (most recent call last):\n  File \"minimal.py\", line 32, in <module>\n    tflite_model = converter.convert()\n  File \"/usr/stud/staab/anaconda3/envs/tensorflow/lib/python3.5/site-packages/tensorflow/contrib/lite/python/lite.py\", line 374, in convert\n    dump_graphviz_video=self.dump_graphviz_video)\n  File \"/usr/stud/staab/anaconda3/envs/tensorflow/lib/python3.5/site-packages/tensorflow/contrib/lite/python/convert.py\", line 246, in toco_convert\n    input_data.SerializeToString())\n  File \"/usr/stud/staab/anaconda3/envs/tensorflow/lib/python3.5/site-packages/tensorflow/contrib/lite/python/convert.py\", line 106, in toco_convert_protos\n    (stdout, stderr))\nRuntimeError: TOCO failed see console for info.\nb'2018-09-06 10:40:25.228797: I tensorflow/contrib/lite/toco/graph_transformations/graph_transformations.cc:39] Before Removing unused ops: 2 operators, 5 arrays (0 quantized)\\n\n2018-09-06 10:40:25.228949: I tensorflow/contrib/lite/toco/graph_transformations/graph_transformations.cc:39] Before general graph transformations: 2 operators, 5 arrays (0 quantized)\\n\n2018-09-06 10:40:25.229050: I tensorflow/contrib/lite/toco/graph_transformations/graph_transformations.cc:39] After general graph transformations pass 1: 2 operators, 5 arrays (0 quantized)\\n\n2018-09-06 10:40:25.229088: F tensorflow/contrib/lite/toco/graph_transformations/propagate_fixed_sizes.cc:1402] Check failed: axis < input_shape.dimensions_count() (1211997096 vs. 4)\\n\nAborted (core dumped)\\n'\nNone\n\nThe number 1211997096 is always randomly different and even can be negative.\nTraceback for (C)+(E), (D)+(E), (C)+(F) and (D)+(F):\nTraceback (most recent call last):\n  File \"minimal.py\", line 32, in <module>\n    tflite_model = converter.convert()\n  File \"/usr/stud/staab/anaconda3/envs/tensorflow/lib/python3.5/site-packages/tensorflow/contrib/lite/python/lite.py\", line 374, in convert\n    dump_graphviz_video=self.dump_graphviz_video)\n  File \"/usr/stud/staab/anaconda3/envs/tensorflow/lib/python3.5/site-packages/tensorflow/contrib/lite/python/convert.py\", line 246, in toco_convert\n    input_data.SerializeToString())\n  File \"/usr/stud/staab/anaconda3/envs/tensorflow/lib/python3.5/site-packages/tensorflow/contrib/lite/python/convert.py\", line 106, in toco_convert_protos\n    (stdout, stderr))\nRuntimeError: TOCO failed see console for info.\nb'2018-09-06 10:44:46.550688: I tensorflow/contrib/lite/toco/graph_transformations/graph_transformations.cc:39] Before Removing unused ops: 2 operators, 4 arrays (0 quantized)\\n\n2018-09-06 10:44:46.550805: I tensorflow/contrib/lite/toco/graph_transformations/graph_transformations.cc:39] Before general graph transformations: 2 operators, 4 arrays (0 quantized)\\n\n2018-09-06 10:44:46.550870: F tensorflow/contrib/lite/toco/graph_transformations/propagate_fixed_sizes.cc:1395] Check failed: perm.size() == input_shape.dimensions_count() (3 vs. 4)Transpose permutation input permute/transpose/perm must be same length as input dimensions\\n\nAborted (core dumped)\\n'\nNone\n\nMinimum Example Code with Workaround:\nfrom tensorflow.keras import Model\nfrom tensorflow.keras.models import save_model\n\nfrom tensorflow.keras.layers import Input, Lambda, Permute, Reshape, concatenate\nfrom tensorflow.keras.backend import permute_dimensions\nfrom tensorflow.keras.backend import squeeze as b_squeeze\nfrom tensorflow import reshape, squeeze, split, expand_dims\n\nfrom tensorflow.contrib import lite\n\n\ninput = Input(shape=(10, 42, 1))\n\n# transform = Reshape((-1, 10, 42))(input)\t\t\t\t\t# (A)\ntransform = Lambda(lambda x: reshape(x, (-1, 10, 42)))(input)\t\t\t# (B)\n# transform = Lambda(lambda x: squeeze(x, axis=-1))(input)\t\t\t# (C)\n# transform = Lambda(lambda x: b_squeeze(x, axis=-1))(input)\t\t\t# (D)\n\n# Emulated permute to come around a bug: split, concatenate, reshape\n#------------------------------------------------------------------------------\nsplit_p = Lambda(lambda x: split(expand_dims(x, axis=-1), num_or_size_splits=10,\n                                                            axis=1))(transform)\nmerge_p = concatenate(split_p)\nsqueeze_p = Lambda(lambda x: reshape(x, (-1, 42, 10)))(merge_p)\n#------------------------------------------------------------------------------\n\nkeras_model = Model(inputs=[input], outputs=[squeeze_p])\nkeras_model.compile(loss='categorical_crossentropy', optimizer='sgd', metrics=['accuracy'])\n\n\nprint(keras_model.summary())\nsave_model(model=keras_model, filepath=\"keras_model.hdf5\",\n\toverwrite=True, include_optimizer=True)\n\nconverter = lite.TocoConverter.from_keras_model_file(\"keras_model.hdf5\")\ntflite_model = converter.convert()\nwith open(\"tflite_model.tflite\", \"wb\") as f: f.write(tflite_model)", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: -\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: v1.10.1-0-g4dcfddc5d1 1.10.1\r\n- **Python version**: 3.5.5\r\n- **Bazel version (if compiling from source)**: -\r\n- **GCC/Compiler version (if compiling from source)**: -\r\n- **CUDA/cuDNN version**: V9.0.176\r\n- **GPU model and memory**: NVIDIA TITAN Xp, 12196MiB\r\n- **Exact command to reproduce**: see minimum example code below\r\n\r\n\r\n### Describe the problem\r\nThe code example below containing a model with an input, \"transformation\" and permute layer compiles fine on pc and it is also possible to call `predict()`on it and getting the expected results.\r\nThe input layer expects the last dimension to be 1, the transform layer being either a reshape or a squeeze layer gets rid of the 1, and the permutation layer just pushes the first dimension after the batch size to the end.\r\nThe native Keras reshape layer (A) is the only one that doesn't work because it doesn't support dimensionality reduction. Its output shape would be `(None, None, 10, 42)`.\r\nHowever, lines (B), (C) and (D) all work fine and it doesn't matter which one is commented in.\r\nIn the same way it doesn't matter whether the Keras permute layer (E) or the backend version (F) is commented in.\r\n\r\nIf all transform layers (A-D) are commented out and only one permute layer (E) or (F) is commented in, directly gets passed `input` and an input shape of `(2,3,1)` for (E) or `(0,2,3,1)` for (F), the model compiles and the `TocoConverter` produces a tflite-file.\r\nIf all permute layers (E, F) are commented out and only one transform layer (B) or (C) or (D) is commented in and the `outputs` of `Model` is set to `[transform]`, the model also compiles and the `TocoConverter` produces a tflite-file.\r\n\r\nBut for each combination of (B-C) and (E, F) being commented in so that one transform layer and one permute layer is there, the TocoConverter doesn't produce a tflite-file although the model compiles and the model summary looks as it should.\r\n\r\nThe expected result is the minimum example code running without errors and producing a tflite model file from the converted keras model file.\r\n\r\n---------------\r\n**Edit: For the time being and for everyone with the same problem, I wrote an updated minimum example code with an \"emulated\" permute layer as a workaround. It uses split, concatenate and reshape operations and you find it at the end of this page after the tracebacks.**\r\n\r\n---------------\r\n\r\n### Source code / logs\r\n#### Minimum Example Code:\r\n```python\r\nfrom tensorflow.keras import Model\r\nfrom tensorflow.keras.models import save_model\r\n\r\nfrom tensorflow.keras.layers import Input, Lambda, Permute, Reshape\r\nfrom tensorflow.keras.backend import permute_dimensions\r\nfrom tensorflow.keras.backend import squeeze as b_squeeze\r\nfrom tensorflow import reshape, squeeze\r\n\r\nfrom tensorflow.contrib import lite\r\n\r\n\r\ninput = Input(shape=(10, 42, 1))\r\n\r\n# transform = Reshape((-1, 10, 42))(input)\t\t\t\t\t# (A)\r\ntransform = Lambda(lambda x: reshape(x, (-1, 10, 42)))(input)\t\t\t# (B)\r\n# transform = Lambda(lambda x: squeeze(x, axis=-1))(input)\t\t\t# (C)\r\n# transform = Lambda(lambda x: b_squeeze(x, axis=-1))(input)\t\t\t# (D)\r\n\r\npermute = Permute((2,1))(transform)\t\t\t\t\t\t# (E)\r\n# permute = Lambda(lambda x: permute_dimensions(x, (0,2,1)))(transform)\t\t# (F)\r\n\r\nkeras_model = Model(inputs=[input], outputs=[permute])\r\nkeras_model.compile(loss='categorical_crossentropy', optimizer='sgd', metrics=['accuracy'])\r\n\r\n\r\nprint(keras_model.summary())\r\nsave_model(model=keras_model, filepath=\"keras_model.hdf5\",\r\n\toverwrite=True, include_optimizer=True)\r\n\r\nconverter = lite.TocoConverter.from_keras_model_file(\"keras_model.hdf5\")\r\ntflite_model = converter.convert()\r\nwith open(\"tflite_model.tflite\", \"wb\") as f: f.write(tflite_model)\r\n```\r\n\r\n#### keras_model.summary() for each of the valid six combinations:\r\n```\r\n_________________________________________________________________\r\nLayer (type)                 Output Shape              Param #\r\n=================================================================\r\ninput_1 (InputLayer)         (None, 10, 42, 1)         0\r\n_________________________________________________________________\r\nlambda (Lambda)              (None, 10, 42)            0\r\n_________________________________________________________________\r\npermute (Permute)            (None, 42, 10)            0\r\n=================================================================\r\nTotal params: 0\r\nTrainable params: 0\r\nNon-trainable params: 0\r\n_________________________________________________________________\r\n```\r\n\r\n#### Traceback for (B)+(E) and (B)+(F):\r\n```\r\nTraceback (most recent call last):\r\n  File \"minimal.py\", line 32, in <module>\r\n    tflite_model = converter.convert()\r\n  File \"/usr/stud/staab/anaconda3/envs/tensorflow/lib/python3.5/site-packages/tensorflow/contrib/lite/python/lite.py\", line 374, in convert\r\n    dump_graphviz_video=self.dump_graphviz_video)\r\n  File \"/usr/stud/staab/anaconda3/envs/tensorflow/lib/python3.5/site-packages/tensorflow/contrib/lite/python/convert.py\", line 246, in toco_convert\r\n    input_data.SerializeToString())\r\n  File \"/usr/stud/staab/anaconda3/envs/tensorflow/lib/python3.5/site-packages/tensorflow/contrib/lite/python/convert.py\", line 106, in toco_convert_protos\r\n    (stdout, stderr))\r\nRuntimeError: TOCO failed see console for info.\r\nb'2018-09-06 10:40:25.228797: I tensorflow/contrib/lite/toco/graph_transformations/graph_transformations.cc:39] Before Removing unused ops: 2 operators, 5 arrays (0 quantized)\\n\r\n2018-09-06 10:40:25.228949: I tensorflow/contrib/lite/toco/graph_transformations/graph_transformations.cc:39] Before general graph transformations: 2 operators, 5 arrays (0 quantized)\\n\r\n2018-09-06 10:40:25.229050: I tensorflow/contrib/lite/toco/graph_transformations/graph_transformations.cc:39] After general graph transformations pass 1: 2 operators, 5 arrays (0 quantized)\\n\r\n2018-09-06 10:40:25.229088: F tensorflow/contrib/lite/toco/graph_transformations/propagate_fixed_sizes.cc:1402] Check failed: axis < input_shape.dimensions_count() (1211997096 vs. 4)\\n\r\nAborted (core dumped)\\n'\r\nNone\r\n```\r\nThe number 1211997096 is always randomly different and even can be negative.\r\n\r\n#### Traceback for (C)+(E), (D)+(E), (C)+(F) and (D)+(F):\r\n```\r\nTraceback (most recent call last):\r\n  File \"minimal.py\", line 32, in <module>\r\n    tflite_model = converter.convert()\r\n  File \"/usr/stud/staab/anaconda3/envs/tensorflow/lib/python3.5/site-packages/tensorflow/contrib/lite/python/lite.py\", line 374, in convert\r\n    dump_graphviz_video=self.dump_graphviz_video)\r\n  File \"/usr/stud/staab/anaconda3/envs/tensorflow/lib/python3.5/site-packages/tensorflow/contrib/lite/python/convert.py\", line 246, in toco_convert\r\n    input_data.SerializeToString())\r\n  File \"/usr/stud/staab/anaconda3/envs/tensorflow/lib/python3.5/site-packages/tensorflow/contrib/lite/python/convert.py\", line 106, in toco_convert_protos\r\n    (stdout, stderr))\r\nRuntimeError: TOCO failed see console for info.\r\nb'2018-09-06 10:44:46.550688: I tensorflow/contrib/lite/toco/graph_transformations/graph_transformations.cc:39] Before Removing unused ops: 2 operators, 4 arrays (0 quantized)\\n\r\n2018-09-06 10:44:46.550805: I tensorflow/contrib/lite/toco/graph_transformations/graph_transformations.cc:39] Before general graph transformations: 2 operators, 4 arrays (0 quantized)\\n\r\n2018-09-06 10:44:46.550870: F tensorflow/contrib/lite/toco/graph_transformations/propagate_fixed_sizes.cc:1395] Check failed: perm.size() == input_shape.dimensions_count() (3 vs. 4)Transpose permutation input permute/transpose/perm must be same length as input dimensions\\n\r\nAborted (core dumped)\\n'\r\nNone\r\n```\r\n\r\n#### Minimum Example Code with Workaround:\r\n```python\r\nfrom tensorflow.keras import Model\r\nfrom tensorflow.keras.models import save_model\r\n\r\nfrom tensorflow.keras.layers import Input, Lambda, Permute, Reshape, concatenate\r\nfrom tensorflow.keras.backend import permute_dimensions\r\nfrom tensorflow.keras.backend import squeeze as b_squeeze\r\nfrom tensorflow import reshape, squeeze, split, expand_dims\r\n\r\nfrom tensorflow.contrib import lite\r\n\r\n\r\ninput = Input(shape=(10, 42, 1))\r\n\r\n# transform = Reshape((-1, 10, 42))(input)\t\t\t\t\t# (A)\r\ntransform = Lambda(lambda x: reshape(x, (-1, 10, 42)))(input)\t\t\t# (B)\r\n# transform = Lambda(lambda x: squeeze(x, axis=-1))(input)\t\t\t# (C)\r\n# transform = Lambda(lambda x: b_squeeze(x, axis=-1))(input)\t\t\t# (D)\r\n\r\n# Emulated permute to come around a bug: split, concatenate, reshape\r\n#------------------------------------------------------------------------------\r\nsplit_p = Lambda(lambda x: split(expand_dims(x, axis=-1), num_or_size_splits=10,\r\n                                                            axis=1))(transform)\r\nmerge_p = concatenate(split_p)\r\nsqueeze_p = Lambda(lambda x: reshape(x, (-1, 42, 10)))(merge_p)\r\n#------------------------------------------------------------------------------\r\n\r\nkeras_model = Model(inputs=[input], outputs=[squeeze_p])\r\nkeras_model.compile(loss='categorical_crossentropy', optimizer='sgd', metrics=['accuracy'])\r\n\r\n\r\nprint(keras_model.summary())\r\nsave_model(model=keras_model, filepath=\"keras_model.hdf5\",\r\n\toverwrite=True, include_optimizer=True)\r\n\r\nconverter = lite.TocoConverter.from_keras_model_file(\"keras_model.hdf5\")\r\ntflite_model = converter.convert()\r\nwith open(\"tflite_model.tflite\", \"wb\") as f: f.write(tflite_model)\r\n```"}