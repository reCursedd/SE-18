{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15026", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15026/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15026/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15026/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15026", "id": 278372128, "node_id": "MDU6SXNzdWUyNzgzNzIxMjg=", "number": 15026, "title": "tensorflow 1.4 tf.keras gives different result compared with using keras directly", "user": {"login": "hhao89", "id": 30807217, "node_id": "MDQ6VXNlcjMwODA3MjE3", "avatar_url": "https://avatars1.githubusercontent.com/u/30807217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhao89", "html_url": "https://github.com/hhao89", "followers_url": "https://api.github.com/users/hhao89/followers", "following_url": "https://api.github.com/users/hhao89/following{/other_user}", "gists_url": "https://api.github.com/users/hhao89/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhao89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhao89/subscriptions", "organizations_url": "https://api.github.com/users/hhao89/orgs", "repos_url": "https://api.github.com/users/hhao89/repos", "events_url": "https://api.github.com/users/hhao89/events{/privacy}", "received_events_url": "https://api.github.com/users/hhao89/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2017-12-01T06:39:42Z", "updated_at": "2018-01-24T20:13:33Z", "closed_at": "2018-01-24T20:13:33Z", "author_association": "NONE", "body_html": "<p>I have tensorflow 1.4, when running the following code, the accuracy is different (78% vs. 34.90%) when I import Sequential, Dense, and model_from_json directly from keras (uncomment first 3 lines) compared with import from tensorflow.python.keras. Why is the big discrepancy?</p>\n<p>(the data pima-indians-diabetes.csv is available at <a href=\"http://archive.ics.uci.edu/ml/machine-learning-databases/pima-indians-diabetes/pima-indians-diabetes.data\" rel=\"nofollow\">http://archive.ics.uci.edu/ml/machine-learning-databases/pima-indians-diabetes/pima-indians-diabetes.data</a>)</p>\n<p>#from keras.models import Sequential<br>\n#from keras.layers import Dense<br>\n#from keras.models import model_from_json</p>\n<p>from tensorflow.python.keras.layers import Dense<br>\nfrom tensorflow.python.keras.models import Sequential, model_from_json</p>\n<p>import numpy<br>\nimport os</p>\n<h1>fix random seed for reproducibility</h1>\n<p>numpy.random.seed(7)</p>\n<h1>load pima indians dataset</h1>\n<p>dataset = numpy.loadtxt(\"pima-indians-diabetes.csv\", delimiter=\",\")</p>\n<h1>split into input (X) and output (Y) variables</h1>\n<p>X = dataset[:,0:8]<br>\nY = dataset[:,8]</p>\n<h1>create model</h1>\n<p>model = Sequential()<br>\nmodel.add(Dense(12, input_dim=8, kernel_initializer='uniform', activation='relu'))<br>\nmodel.add(Dense(8, kernel_initializer='uniform', activation='relu'))<br>\nmodel.add(Dense(1, kernel_initializer='uniform', activation='sigmoid'))</p>\n<h1>Compile model</h1>\n<p>model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])</p>\n<h1>Fit the model</h1>\n<p>model.fit(X, Y, epochs=150, batch_size=10, verbose=0)</p>\n<h1>evaluate the model</h1>\n<p>scores = model.evaluate(X, Y, verbose=0)<br>\nprint(\"%s: %.2f%%\" % (model.metrics_names[1], scores[1]*100))</p>\n<h1>serialize model to JSON</h1>\n<p>model_json = model.to_json()<br>\nwith open(\"model.json\", \"w\") as json_file:<br>\njson_file.write(model_json)</p>\n<h1>serialize weights to HDF5</h1>\n<p>model.save_weights(\"model.h5\")<br>\nprint(\"Saved model to disk\")</p>", "body_text": "I have tensorflow 1.4, when running the following code, the accuracy is different (78% vs. 34.90%) when I import Sequential, Dense, and model_from_json directly from keras (uncomment first 3 lines) compared with import from tensorflow.python.keras. Why is the big discrepancy?\n(the data pima-indians-diabetes.csv is available at http://archive.ics.uci.edu/ml/machine-learning-databases/pima-indians-diabetes/pima-indians-diabetes.data)\n#from keras.models import Sequential\n#from keras.layers import Dense\n#from keras.models import model_from_json\nfrom tensorflow.python.keras.layers import Dense\nfrom tensorflow.python.keras.models import Sequential, model_from_json\nimport numpy\nimport os\nfix random seed for reproducibility\nnumpy.random.seed(7)\nload pima indians dataset\ndataset = numpy.loadtxt(\"pima-indians-diabetes.csv\", delimiter=\",\")\nsplit into input (X) and output (Y) variables\nX = dataset[:,0:8]\nY = dataset[:,8]\ncreate model\nmodel = Sequential()\nmodel.add(Dense(12, input_dim=8, kernel_initializer='uniform', activation='relu'))\nmodel.add(Dense(8, kernel_initializer='uniform', activation='relu'))\nmodel.add(Dense(1, kernel_initializer='uniform', activation='sigmoid'))\nCompile model\nmodel.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])\nFit the model\nmodel.fit(X, Y, epochs=150, batch_size=10, verbose=0)\nevaluate the model\nscores = model.evaluate(X, Y, verbose=0)\nprint(\"%s: %.2f%%\" % (model.metrics_names[1], scores[1]*100))\nserialize model to JSON\nmodel_json = model.to_json()\nwith open(\"model.json\", \"w\") as json_file:\njson_file.write(model_json)\nserialize weights to HDF5\nmodel.save_weights(\"model.h5\")\nprint(\"Saved model to disk\")", "body": "I have tensorflow 1.4, when running the following code, the accuracy is different (78% vs. 34.90%) when I import Sequential, Dense, and model_from_json directly from keras (uncomment first 3 lines) compared with import from tensorflow.python.keras. Why is the big discrepancy? \r\n \r\n(the data pima-indians-diabetes.csv is available at http://archive.ics.uci.edu/ml/machine-learning-databases/pima-indians-diabetes/pima-indians-diabetes.data)\r\n\r\n#from keras.models import Sequential\r\n#from keras.layers import Dense\r\n#from keras.models import model_from_json\r\n\r\nfrom tensorflow.python.keras.layers import Dense\r\nfrom tensorflow.python.keras.models import Sequential, model_from_json\r\n\r\nimport numpy\r\nimport os\r\n# fix random seed for reproducibility\r\nnumpy.random.seed(7)\r\n# load pima indians dataset\r\ndataset = numpy.loadtxt(\"pima-indians-diabetes.csv\", delimiter=\",\")\r\n# split into input (X) and output (Y) variables\r\nX = dataset[:,0:8]\r\nY = dataset[:,8]\r\n# create model\r\nmodel = Sequential()\r\nmodel.add(Dense(12, input_dim=8, kernel_initializer='uniform', activation='relu'))\r\nmodel.add(Dense(8, kernel_initializer='uniform', activation='relu'))\r\nmodel.add(Dense(1, kernel_initializer='uniform', activation='sigmoid'))\r\n# Compile model\r\nmodel.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])\r\n# Fit the model\r\nmodel.fit(X, Y, epochs=150, batch_size=10, verbose=0)\r\n# evaluate the model\r\nscores = model.evaluate(X, Y, verbose=0)\r\nprint(\"%s: %.2f%%\" % (model.metrics_names[1], scores[1]*100))\r\n\r\n# serialize model to JSON\r\nmodel_json = model.to_json()\r\nwith open(\"model.json\", \"w\") as json_file:\r\n    json_file.write(model_json)\r\n# serialize weights to HDF5\r\nmodel.save_weights(\"model.h5\")\r\nprint(\"Saved model to disk\")"}