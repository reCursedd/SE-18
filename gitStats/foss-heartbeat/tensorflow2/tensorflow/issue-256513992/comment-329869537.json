{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/329869537", "html_url": "https://github.com/tensorflow/tensorflow/issues/12944#issuecomment-329869537", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12944", "id": 329869537, "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTg2OTUzNw==", "user": {"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-15T18:52:21Z", "updated_at": "2017-09-15T18:52:21Z", "author_association": "MEMBER", "body_html": "<p>Can you use one of the slim based retrainings?<br>\n<a href=\"https://github.com/tensorflow/models/blob/master/slim/scripts/finetune_resnet_v1_50_on_flowers.sh\">https://github.com/tensorflow/models/blob/master/slim/scripts/finetune_resnet_v1_50_on_flowers.sh</a></p>\n<p>It appears to do resnet from resnet checkpoints. Slim provides all the python scripts that build the graph structure, so you can do retraining with just a .ckpt.</p>\n<h1>As some background information: saved models come in several flavors</h1>\n<ol>\n<li>\n<p>GraphDef (.pb) + ckpt  -- the graph structure is stored in the graph def, the ckpt contains the trained variable values separately. this is usually what you are producing when you are training new models</p>\n</li>\n<li>\n<p>Frozen GraphDef (.pb) -- no ckpt is needed since all variables. This is what mobile TensorFlow and some serving applications used. This can be produced using freeze_graph.py.</p>\n</li>\n<li>\n<p>Saved Model - this contains both checkpoints and graphdefs encapsulated in one unit.</p>\n</li>\n<li>\n<p>ckpt - this is only the values of the variables. If this is all you have, you need to have the python code that generated the model graph, and then you could load this (which would replace the variable values in the python code iniialization with the trained values).</p>\n</li>\n</ol>\n<p>This is explained in more detail here: <a href=\"https://www.tensorflow.org/extend/tool_developers/\" rel=\"nofollow\">https://www.tensorflow.org/extend/tool_developers/</a></p>", "body_text": "Can you use one of the slim based retrainings?\nhttps://github.com/tensorflow/models/blob/master/slim/scripts/finetune_resnet_v1_50_on_flowers.sh\nIt appears to do resnet from resnet checkpoints. Slim provides all the python scripts that build the graph structure, so you can do retraining with just a .ckpt.\nAs some background information: saved models come in several flavors\n\n\nGraphDef (.pb) + ckpt  -- the graph structure is stored in the graph def, the ckpt contains the trained variable values separately. this is usually what you are producing when you are training new models\n\n\nFrozen GraphDef (.pb) -- no ckpt is needed since all variables. This is what mobile TensorFlow and some serving applications used. This can be produced using freeze_graph.py.\n\n\nSaved Model - this contains both checkpoints and graphdefs encapsulated in one unit.\n\n\nckpt - this is only the values of the variables. If this is all you have, you need to have the python code that generated the model graph, and then you could load this (which would replace the variable values in the python code iniialization with the trained values).\n\n\nThis is explained in more detail here: https://www.tensorflow.org/extend/tool_developers/", "body": "Can you use one of the slim based retrainings?\r\nhttps://github.com/tensorflow/models/blob/master/slim/scripts/finetune_resnet_v1_50_on_flowers.sh\r\n\r\nIt appears to do resnet from resnet checkpoints. Slim provides all the python scripts that build the graph structure, so you can do retraining with just a .ckpt.\r\n\r\n# As some background information: saved models come in several flavors\r\n\r\n1. GraphDef (.pb) + ckpt  -- the graph structure is stored in the graph def, the ckpt contains the trained variable values separately. this is usually what you are producing when you are training new models\r\n\r\n2. Frozen GraphDef (.pb) -- no ckpt is needed since all variables. This is what mobile TensorFlow and some serving applications used. This can be produced using freeze_graph.py.\r\n\r\n3. Saved Model - this contains both checkpoints and graphdefs encapsulated in one unit.\r\n\r\n4. ckpt - this is only the values of the variables. If this is all you have, you need to have the python code that generated the model graph, and then you could load this (which would replace the variable values in the python code iniialization with the trained values). \r\n\r\nThis is explained in more detail here: https://www.tensorflow.org/extend/tool_developers/\r\n\r\n\r\n"}