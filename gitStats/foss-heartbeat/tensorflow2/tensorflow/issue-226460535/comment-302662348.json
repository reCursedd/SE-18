{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/302662348", "html_url": "https://github.com/tensorflow/tensorflow/issues/9675#issuecomment-302662348", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9675", "id": 302662348, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjY2MjM0OA==", "user": {"login": "asanakoy", "id": 1690869, "node_id": "MDQ6VXNlcjE2OTA4Njk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1690869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asanakoy", "html_url": "https://github.com/asanakoy", "followers_url": "https://api.github.com/users/asanakoy/followers", "following_url": "https://api.github.com/users/asanakoy/following{/other_user}", "gists_url": "https://api.github.com/users/asanakoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/asanakoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asanakoy/subscriptions", "organizations_url": "https://api.github.com/users/asanakoy/orgs", "repos_url": "https://api.github.com/users/asanakoy/repos", "events_url": "https://api.github.com/users/asanakoy/events{/privacy}", "received_events_url": "https://api.github.com/users/asanakoy/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-19T10:00:42Z", "updated_at": "2017-05-19T15:43:56Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1381301\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ppwwyyxx\">@ppwwyyxx</a> , but he uses BytesList for the image, not  Int64.<br>\nThe only int64 value in 1 integer label.<br>\nI have the problem of blowing up tfrecords as well. My images are 30G when stored in jpg, but 280G when I write them in tfrecord</p>\n<pre><code>    img = np.asarray(Image.open(img_path))\n    img_raw = img.tostring()\n\n    height = img.shape[0]\n    width = img.shape[1]\n    example = tf.train.Example(features=tf.train.Features(feature={\n        'height': _int64_feature(height), # single integer\n        'width': _int64_feature(width),  # single integer\n        'image_raw': _bytes_feature(img_raw), # image\n        }))\n</code></pre>\n<p>I think we should reopen issue.</p>", "body_text": "@ppwwyyxx , but he uses BytesList for the image, not  Int64.\nThe only int64 value in 1 integer label.\nI have the problem of blowing up tfrecords as well. My images are 30G when stored in jpg, but 280G when I write them in tfrecord\n    img = np.asarray(Image.open(img_path))\n    img_raw = img.tostring()\n\n    height = img.shape[0]\n    width = img.shape[1]\n    example = tf.train.Example(features=tf.train.Features(feature={\n        'height': _int64_feature(height), # single integer\n        'width': _int64_feature(width),  # single integer\n        'image_raw': _bytes_feature(img_raw), # image\n        }))\n\nI think we should reopen issue.", "body": "@ppwwyyxx , but he uses BytesList for the image, not  Int64. \r\nThe only int64 value in 1 integer label.\r\nI have the problem of blowing up tfrecords as well. My images are 30G when stored in jpg, but 280G when I write them in tfrecord \r\n\r\n        img = np.asarray(Image.open(img_path))\r\n        img_raw = img.tostring()\r\n\r\n        height = img.shape[0]\r\n        width = img.shape[1]\r\n        example = tf.train.Example(features=tf.train.Features(feature={\r\n            'height': _int64_feature(height), # single integer\r\n            'width': _int64_feature(width),  # single integer\r\n            'image_raw': _bytes_feature(img_raw), # image\r\n            }))\r\n\r\nI think we should reopen issue."}