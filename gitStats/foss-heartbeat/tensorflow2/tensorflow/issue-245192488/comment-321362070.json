{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/321362070", "html_url": "https://github.com/tensorflow/tensorflow/issues/11725#issuecomment-321362070", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11725", "id": 321362070, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTM2MjA3MA==", "user": {"login": "shamoya", "id": 22274255, "node_id": "MDQ6VXNlcjIyMjc0MjU1", "avatar_url": "https://avatars2.githubusercontent.com/u/22274255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shamoya", "html_url": "https://github.com/shamoya", "followers_url": "https://api.github.com/users/shamoya/followers", "following_url": "https://api.github.com/users/shamoya/following{/other_user}", "gists_url": "https://api.github.com/users/shamoya/gists{/gist_id}", "starred_url": "https://api.github.com/users/shamoya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shamoya/subscriptions", "organizations_url": "https://api.github.com/users/shamoya/orgs", "repos_url": "https://api.github.com/users/shamoya/repos", "events_url": "https://api.github.com/users/shamoya/events{/privacy}", "received_events_url": "https://api.github.com/users/shamoya/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-09T19:48:02Z", "updated_at": "2017-08-09T20:01:49Z", "author_association": "CONTRIBUTOR", "body_html": "<p>No <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=12075848\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/junshi15\">@junshi15</a>, you didn't follow me, I'll try to be more clear.</p>\n<p>Let's say RECV is called before SEND, and puts <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/verbs/rdma.cc#L678\">this</a> callback in the table as u said. And let's say there's already a buffer for this tensor, meaning this callback will be called once (trigger TENSOR_WRITE).<br>\nnow SEND flow performs <a href=\"https://github.com/tensorflow/tensorflow/blob/r1.3/tensorflow/core/framework/rendezvous.cc#L209\">this</a> Ref() before calling the callback, since it assumes the RECV <strong>can</strong> be duplicated and called again.<br>\nBut in this case it doesn't, and no one will do <a href=\"https://github.com/tensorflow/tensorflow/blob/r1.3/tensorflow/core/framework/rendezvous.cc#L264\">this</a> Unref.</p>\n<p>When we are stuck in the bug, I noticed there's a huge diff between Refs and Unref on the GPU that is \"stuck\" (hundernds).</p>\n<p>Now, I do see <a href=\"https://github.com/tensorflow/tensorflow/blob/r1.3/tensorflow/core/framework/rendezvous.cc#L323\">this</a> Unref, in the Item destructor, which might do the missing Unref, but I need to check if it happens.</p>", "body_text": "No @junshi15, you didn't follow me, I'll try to be more clear.\nLet's say RECV is called before SEND, and puts this callback in the table as u said. And let's say there's already a buffer for this tensor, meaning this callback will be called once (trigger TENSOR_WRITE).\nnow SEND flow performs this Ref() before calling the callback, since it assumes the RECV can be duplicated and called again.\nBut in this case it doesn't, and no one will do this Unref.\nWhen we are stuck in the bug, I noticed there's a huge diff between Refs and Unref on the GPU that is \"stuck\" (hundernds).\nNow, I do see this Unref, in the Item destructor, which might do the missing Unref, but I need to check if it happens.", "body": "No @junshi15, you didn't follow me, I'll try to be more clear.\r\n\r\nLet's say RECV is called before SEND, and puts [this](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/verbs/rdma.cc#L678) callback in the table as u said. And let's say there's already a buffer for this tensor, meaning this callback will be called once (trigger TENSOR_WRITE).\r\nnow SEND flow performs [this](https://github.com/tensorflow/tensorflow/blob/r1.3/tensorflow/core/framework/rendezvous.cc#L209) Ref() before calling the callback, since it assumes the RECV **can** be duplicated and called again.\r\nBut in this case it doesn't, and no one will do [this](https://github.com/tensorflow/tensorflow/blob/r1.3/tensorflow/core/framework/rendezvous.cc#L264) Unref.\r\n\r\nWhen we are stuck in the bug, I noticed there's a huge diff between Refs and Unref on the GPU that is \"stuck\" (hundernds).\r\n\r\nNow, I do see [this](https://github.com/tensorflow/tensorflow/blob/r1.3/tensorflow/core/framework/rendezvous.cc#L323) Unref, in the Item destructor, which might do the missing Unref, but I need to check if it happens."}