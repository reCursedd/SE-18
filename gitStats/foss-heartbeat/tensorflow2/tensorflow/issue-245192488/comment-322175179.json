{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/322175179", "html_url": "https://github.com/tensorflow/tensorflow/issues/11725#issuecomment-322175179", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11725", "id": 322175179, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjE3NTE3OQ==", "user": {"login": "yanivbl6", "id": 24679884, "node_id": "MDQ6VXNlcjI0Njc5ODg0", "avatar_url": "https://avatars2.githubusercontent.com/u/24679884?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanivbl6", "html_url": "https://github.com/yanivbl6", "followers_url": "https://api.github.com/users/yanivbl6/followers", "following_url": "https://api.github.com/users/yanivbl6/following{/other_user}", "gists_url": "https://api.github.com/users/yanivbl6/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanivbl6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanivbl6/subscriptions", "organizations_url": "https://api.github.com/users/yanivbl6/orgs", "repos_url": "https://api.github.com/users/yanivbl6/repos", "events_url": "https://api.github.com/users/yanivbl6/events{/privacy}", "received_events_url": "https://api.github.com/users/yanivbl6/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-14T12:18:13Z", "updated_at": "2017-08-14T12:18:13Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I think the problem rises because the Sync deviceToDevice operation blocks the thread, preventing the earlier Async Device to Device operation from finishing- which, for some reason, blocks the later operation.</p>\n<p>What I did to check this was change the <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/verbs/rdma.cc#L724\">call to the wrapper sync function</a> to a call to the async function, and inserted the rest of the code (that which is executed after the sync wrapper) into then lambda callback function (\"done\"). With this setting, the application no longer hangs (Tested multipile times, few of which in 8 gpus system).<br>\n<a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=12075848\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/junshi15\">@junshi15</a> , is there an additional motivation for the usage of the sync wrappers, beside the pending operations we execute after the operation is completed?</p>", "body_text": "I think the problem rises because the Sync deviceToDevice operation blocks the thread, preventing the earlier Async Device to Device operation from finishing- which, for some reason, blocks the later operation.\nWhat I did to check this was change the call to the wrapper sync function to a call to the async function, and inserted the rest of the code (that which is executed after the sync wrapper) into then lambda callback function (\"done\"). With this setting, the application no longer hangs (Tested multipile times, few of which in 8 gpus system).\n@junshi15 , is there an additional motivation for the usage of the sync wrappers, beside the pending operations we execute after the operation is completed?", "body": "I think the problem rises because the Sync deviceToDevice operation blocks the thread, preventing the earlier Async Device to Device operation from finishing- which, for some reason, blocks the later operation.\r\n\r\nWhat I did to check this was change the [call to the wrapper sync function](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/verbs/rdma.cc#L724) to a call to the async function, and inserted the rest of the code (that which is executed after the sync wrapper) into then lambda callback function (\"done\"). With this setting, the application no longer hangs (Tested multipile times, few of which in 8 gpus system). \r\n@junshi15 , is there an additional motivation for the usage of the sync wrappers, beside the pending operations we execute after the operation is completed?"}