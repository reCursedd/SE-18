{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/318094464", "html_url": "https://github.com/tensorflow/tensorflow/issues/11725#issuecomment-318094464", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11725", "id": 318094464, "node_id": "MDEyOklzc3VlQ29tbWVudDMxODA5NDQ2NA==", "user": {"login": "junshi15", "id": 12075848, "node_id": "MDQ6VXNlcjEyMDc1ODQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/12075848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junshi15", "html_url": "https://github.com/junshi15", "followers_url": "https://api.github.com/users/junshi15/followers", "following_url": "https://api.github.com/users/junshi15/following{/other_user}", "gists_url": "https://api.github.com/users/junshi15/gists{/gist_id}", "starred_url": "https://api.github.com/users/junshi15/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junshi15/subscriptions", "organizations_url": "https://api.github.com/users/junshi15/orgs", "repos_url": "https://api.github.com/users/junshi15/repos", "events_url": "https://api.github.com/users/junshi15/events{/privacy}", "received_events_url": "https://api.github.com/users/junshi15/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-26T15:45:04Z", "updated_at": "2017-07-26T15:45:52Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=22274255\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/shamoya\">@shamoya</a> Can you try what <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5105569\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/suiyuan2009\">@suiyuan2009</a> and <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=2613663\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/byronyi\">@byronyi</a> suggested.</p>\n<ol>\n<li>\n<p>try the simple model to see if it hangs <code>--model=trivial</code>.</p>\n</li>\n<li>\n<p>With inception3, add a lock around global_step. something like</p>\n</li>\n</ol>\n<pre><code>  with self.lock:\n        inc_global_step = global_step.assign_add(1)\n        fetches.append(inc_global_step)\n</code></pre>\n<p>some where in the init function, you define the lock:<br>\n<code>self.lock = threading.Lock()</code></p>\n<p>I was unable to get an infiniband setup yesterday. I will try again today.</p>", "body_text": "@shamoya Can you try what @suiyuan2009 and @byronyi suggested.\n\n\ntry the simple model to see if it hangs --model=trivial.\n\n\nWith inception3, add a lock around global_step. something like\n\n\n  with self.lock:\n        inc_global_step = global_step.assign_add(1)\n        fetches.append(inc_global_step)\n\nsome where in the init function, you define the lock:\nself.lock = threading.Lock()\nI was unable to get an infiniband setup yesterday. I will try again today.", "body": "@shamoya Can you try what @suiyuan2009 and @byronyi suggested.\r\n\r\n1) try the simple model to see if it hangs `--model=trivial`.\r\n\r\n2) With inception3, add a lock around global_step. something like\r\n```\r\n  with self.lock:\r\n        inc_global_step = global_step.assign_add(1)\r\n        fetches.append(inc_global_step)\r\n```\r\n\r\n  some where in the init function, you define the lock:\r\n       `self.lock = threading.Lock()`\r\n\r\nI was unable to get an infiniband setup yesterday. I will try again today."}