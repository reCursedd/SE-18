{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/321391741", "html_url": "https://github.com/tensorflow/tensorflow/issues/11725#issuecomment-321391741", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11725", "id": 321391741, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTM5MTc0MQ==", "user": {"login": "junshi15", "id": 12075848, "node_id": "MDQ6VXNlcjEyMDc1ODQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/12075848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junshi15", "html_url": "https://github.com/junshi15", "followers_url": "https://api.github.com/users/junshi15/followers", "following_url": "https://api.github.com/users/junshi15/following{/other_user}", "gists_url": "https://api.github.com/users/junshi15/gists{/gist_id}", "starred_url": "https://api.github.com/users/junshi15/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junshi15/subscriptions", "organizations_url": "https://api.github.com/users/junshi15/orgs", "repos_url": "https://api.github.com/users/junshi15/repos", "events_url": "https://api.github.com/users/junshi15/events{/privacy}", "received_events_url": "https://api.github.com/users/junshi15/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-09T21:51:43Z", "updated_at": "2017-08-09T21:51:43Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=22274255\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/shamoya\">@shamoya</a> Thanks for the explanation. A Recv-Send sequence does increase the reference count by one for send_dev_context. This can be a problem. I tried adding Unref right after <a href=\"https://github.com/tensorflow/tensorflow/blob/r1.3/tensorflow/core/framework/rendezvous.cc#L219\">this</a>, it crashed right away.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6030236\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/katyakats\">@katyakats</a> mentioned hang at <code>CopyGPUTensorToCPU</code>. I see similar issue. Here is a <a href=\"https://gist.github.com/junshi15/af3063e5bd22c911c30fcaafee060fa1\">stack trace</a> I captured with gdb when the program hung. It was stuck while trying to lock a mutex. Frame <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115894138\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/2\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/2/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/2\">#2</a> is <code>SetProtoFromGPUSync</code> and Frame <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115927762\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/20\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/20/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/20\">#20</a> is <code>CopyCPUTensorToGPU</code>. Note both of them call <code>ThenExecute</code>, which uses the same lock. So a nesting call like this tries to acquire a already obtained lock, a recipe for hang. Not sure what caused this situation.</p>", "body_text": "@shamoya Thanks for the explanation. A Recv-Send sequence does increase the reference count by one for send_dev_context. This can be a problem. I tried adding Unref right after this, it crashed right away.\n@katyakats mentioned hang at CopyGPUTensorToCPU. I see similar issue. Here is a stack trace I captured with gdb when the program hung. It was stuck while trying to lock a mutex. Frame #2 is SetProtoFromGPUSync and Frame #20 is CopyCPUTensorToGPU. Note both of them call ThenExecute, which uses the same lock. So a nesting call like this tries to acquire a already obtained lock, a recipe for hang. Not sure what caused this situation.", "body": "@shamoya Thanks for the explanation. A Recv-Send sequence does increase the reference count by one for send_dev_context. This can be a problem. I tried adding Unref right after [this](https://github.com/tensorflow/tensorflow/blob/r1.3/tensorflow/core/framework/rendezvous.cc#L219), it crashed right away.\r\n\r\n@katyakats mentioned hang at `CopyGPUTensorToCPU`. I see similar issue. Here is a [stack trace](https://gist.github.com/junshi15/af3063e5bd22c911c30fcaafee060fa1) I captured with gdb when the program hung. It was stuck while trying to lock a mutex. Frame #2 is `SetProtoFromGPUSync` and Frame #20 is `CopyCPUTensorToGPU`. Note both of them call `ThenExecute`, which uses the same lock. So a nesting call like this tries to acquire a already obtained lock, a recipe for hang. Not sure what caused this situation."}