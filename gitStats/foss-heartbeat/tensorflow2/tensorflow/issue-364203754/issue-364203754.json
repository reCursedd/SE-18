{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22549", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22549/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22549/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22549/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/22549", "id": 364203754, "node_id": "MDExOlB1bGxSZXF1ZXN0MjE4NDQ4NTg4", "number": 22549, "title": "Add abseil_cpp cmake dependence.", "user": {"login": "cbalint13", "id": 3974360, "node_id": "MDQ6VXNlcjM5NzQzNjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/3974360?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbalint13", "html_url": "https://github.com/cbalint13", "followers_url": "https://api.github.com/users/cbalint13/followers", "following_url": "https://api.github.com/users/cbalint13/following{/other_user}", "gists_url": "https://api.github.com/users/cbalint13/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbalint13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbalint13/subscriptions", "organizations_url": "https://api.github.com/users/cbalint13/orgs", "repos_url": "https://api.github.com/users/cbalint13/repos", "events_url": "https://api.github.com/users/cbalint13/events{/privacy}", "received_events_url": "https://api.github.com/users/cbalint13/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}, {"id": 987666414, "node_id": "MDU6TGFiZWw5ODc2NjY0MTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/ready%20to%20pull", "name": "ready to pull", "color": "2cd643", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-09-26T20:43:05Z", "updated_at": "2018-10-16T05:09:31Z", "closed_at": "2018-10-16T05:09:31Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/22549", "html_url": "https://github.com/tensorflow/tensorflow/pull/22549", "diff_url": "https://github.com/tensorflow/tensorflow/pull/22549.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/22549.patch"}, "body_html": "<p>This patch enhance cmake build and add proper dependency to both <strong>external</strong> path (by fetching and compiling from scratch) and <strong>system</strong> path (existing library on the system).</p>\n<p><strong>Abseil_CPP</strong> is required and referenced in tensorflow code:</p>\n<pre><code>tensorflow]$ find . -name '*.h' -exec grep -H '#include \"absl/' {} \\; | wc -l\n214\n</code></pre>\n<hr>\n<p>Few outlines:</p>\n<p><em><strong>New module</strong></em></p>\n<ul>\n<li>\n<p><strong>1</strong> New specialized <code>modules/FindAbseilCpp.cmake</code> module was added in new folder. The <code>abseil_cpp</code> upstream project doesn't expose cmake or pkgconfig helpers so a custom module capable of searching it system wide was added. More modules like this for all existing packages (that have poor/buggy/lacks support in its cmake exposure) will be proposed. The module is reliable on mswin and linux too. It has minimal lines of code that can be maintained.</p>\n</li>\n<li>\n<p><strong>2</strong> <code>-DABSEIL_CPP_INCLUDE_DIR_HINTS</code> and <code>-DABSEIL_CPP_LIBRARIES_DIR_HINTS</code> can be used as extra path hints for the search task (e.g. in case of very obscure places). These two VARS will be default feature for any future modules like this.</p>\n</li>\n<li>\n<p><strong>3</strong> The proposed module can search through specified list of COMPONENTS, otherwise will export all available components from <strong>system</strong>. It happens that in the case of abseil_cpp we have more libraries as components (quite a lot).</p>\n</li>\n</ul>\n<p><em><strong>Rule change proposal</strong></em></p>\n<ul>\n<li>\n<p><strong>4</strong> <code>ExternalProject_Add(abseil_cpp_build)</code> notice the <strong>_build</strong> suffix of label. More changes (appending <strong>_build</strong>) for all existing module will be proposed. The reason is that in the case of <strong>system</strong> libraries, the very project name e.g. <strong>re2</strong> will conflict inside cmake with the library name <strong>re2</strong> appended into <code>tensorflow_EXTERNAL_DEPENDENCIES</code>. Thus extra discrimination e.g. <strong>_build</strong> tag is required otherwise cmake will throw error on it (it will appear only in <strong>system</strong> scenario).</p>\n</li>\n<li>\n<p><strong>5</strong> <code>tensorflow_EXTERNAL_LIBRARIES</code> and <code>tensorflow_EXTERNAL_DEPENDENCIES</code> plus  <code>include_directories()</code>  are updated right in this related module <code>external/abseil_cpp.cmake</code> and not from very main <code>CMakeLists.txt</code>. More changes like this will come for all rest of packages.</p>\n</li>\n</ul>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=363227\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/perfinion\">@perfinion</a> ,</p>\n<p>If this is passed and rule changes agreed, very next PR will update the rest of existing modules. Then will continue with PR series relating other issues.</p>\n<p>Thank you !</p>", "body_text": "This patch enhance cmake build and add proper dependency to both external path (by fetching and compiling from scratch) and system path (existing library on the system).\nAbseil_CPP is required and referenced in tensorflow code:\ntensorflow]$ find . -name '*.h' -exec grep -H '#include \"absl/' {} \\; | wc -l\n214\n\n\nFew outlines:\nNew module\n\n\n1 New specialized modules/FindAbseilCpp.cmake module was added in new folder. The abseil_cpp upstream project doesn't expose cmake or pkgconfig helpers so a custom module capable of searching it system wide was added. More modules like this for all existing packages (that have poor/buggy/lacks support in its cmake exposure) will be proposed. The module is reliable on mswin and linux too. It has minimal lines of code that can be maintained.\n\n\n2 -DABSEIL_CPP_INCLUDE_DIR_HINTS and -DABSEIL_CPP_LIBRARIES_DIR_HINTS can be used as extra path hints for the search task (e.g. in case of very obscure places). These two VARS will be default feature for any future modules like this.\n\n\n3 The proposed module can search through specified list of COMPONENTS, otherwise will export all available components from system. It happens that in the case of abseil_cpp we have more libraries as components (quite a lot).\n\n\nRule change proposal\n\n\n4 ExternalProject_Add(abseil_cpp_build) notice the _build suffix of label. More changes (appending _build) for all existing module will be proposed. The reason is that in the case of system libraries, the very project name e.g. re2 will conflict inside cmake with the library name re2 appended into tensorflow_EXTERNAL_DEPENDENCIES. Thus extra discrimination e.g. _build tag is required otherwise cmake will throw error on it (it will appear only in system scenario).\n\n\n5 tensorflow_EXTERNAL_LIBRARIES and tensorflow_EXTERNAL_DEPENDENCIES plus  include_directories()  are updated right in this related module external/abseil_cpp.cmake and not from very main CMakeLists.txt. More changes like this will come for all rest of packages.\n\n\n@perfinion ,\nIf this is passed and rule changes agreed, very next PR will update the rest of existing modules. Then will continue with PR series relating other issues.\nThank you !", "body": "This patch enhance cmake build and add proper dependency to both **external** path (by fetching and compiling from scratch) and **system** path (existing library on the system).\r\n\r\n\r\n  **Abseil_CPP** is required and referenced in tensorflow code:\r\n\r\n```\r\ntensorflow]$ find . -name '*.h' -exec grep -H '#include \"absl/' {} \\; | wc -l\r\n214\r\n```\r\n\r\n---\r\n\r\nFew outlines:\r\n\r\n***New module***\r\n\r\n*  **1** New specialized ```modules/FindAbseilCpp.cmake``` module was added in new folder. The ```abseil_cpp``` upstream project doesn't expose cmake or pkgconfig helpers so a custom module capable of searching it system wide was added. More modules like this for all existing packages (that have poor/buggy/lacks support in its cmake exposure) will be proposed. The module is reliable on mswin and linux too. It has minimal lines of code that can be maintained.\r\n\r\n* **2** ```-DABSEIL_CPP_INCLUDE_DIR_HINTS``` and ```-DABSEIL_CPP_LIBRARIES_DIR_HINTS``` can be used as extra path hints for the search task (e.g. in case of very obscure places). These two VARS will be default feature for any future modules like this.\r\n\r\n* **3** The proposed module can search through specified list of COMPONENTS, otherwise will export all available components from **system**. It happens that in the case of abseil_cpp we have more libraries as components (quite a lot).\r\n\r\n***Rule change proposal***\r\n\r\n* **4** ```ExternalProject_Add(abseil_cpp_build)``` notice the **_build** suffix of label. More changes (appending **_build**) for all existing module will be proposed. The reason is that in the case of **system** libraries, the very project name e.g. **re2** will conflict inside cmake with the library name **re2** appended into ```tensorflow_EXTERNAL_DEPENDENCIES```. Thus extra discrimination e.g. **_build** tag is required otherwise cmake will throw error on it (it will appear only in **system** scenario).\r\n\r\n* **5** ```tensorflow_EXTERNAL_LIBRARIES``` and ```tensorflow_EXTERNAL_DEPENDENCIES``` plus  ```include_directories()```  are updated right in this related module ```external/abseil_cpp.cmake``` and not from very main ```CMakeLists.txt```. More changes like this will come for all rest of packages.\r\n\r\n@perfinion ,\r\n\r\n  If this is passed and rule changes agreed, very next PR will update the rest of existing modules. Then will continue with PR series relating other issues.\r\n\r\n\r\nThank you !"}