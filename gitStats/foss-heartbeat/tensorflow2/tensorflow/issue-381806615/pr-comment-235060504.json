{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/235060504", "pull_request_review_id": 176838747, "id": 235060504, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNTA2MDUwNA==", "diff_hunk": "@@ -597,6 +597,15 @@ LoopCondOp::LoopCondOp(OpKernelConstruction* context) : OpKernel(context) {}\n LoopCondOp::~LoopCondOp() = default;\n \n void LoopCondOp::Compute(OpKernelContext* context) {\n+  CancellationManager* cm = context->cancellation_manager();\n+  bool already_cancelled = cm->IsCancelled();\n+\n+  if (already_cancelled) {\n+    Tensor continue_running(false);\n+    context->set_output(0, continue_running);", "path": "tensorflow/core/kernels/control_flow_ops.cc", "position": null, "original_position": 9, "commit_id": "ae3d816613b9924b6e91eebf50348cd2a3525768", "original_commit_id": "8b171c80dfb542a4273277491ee97965ec84c832", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "body": "That's working as expected. The external error is first set [here](https://github.com/tensorflow/tensorflow/blob/f25493f9c0ae0dec6db31dfe7fd19ed01b57c23d/tensorflow/core/common_runtime/direct_session.cc#L1699-L1700) before ongoing execution is cancelled, so the `CancelledError` won't bubble up to the client code. However, it's still important to set it to some kind of error, to prevent additional ops from executing (and potentially mutating state based on an incorrect value).", "created_at": "2018-11-20T15:55:01Z", "updated_at": "2018-11-21T03:26:54Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/23811#discussion_r235060504", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/23811", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/235060504"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/23811#discussion_r235060504"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/23811"}}, "body_html": "<p>That's working as expected. The external error is first set <a href=\"https://github.com/tensorflow/tensorflow/blob/f25493f9c0ae0dec6db31dfe7fd19ed01b57c23d/tensorflow/core/common_runtime/direct_session.cc#L1699-L1700\">here</a> before ongoing execution is cancelled, so the <code>CancelledError</code> won't bubble up to the client code. However, it's still important to set it to some kind of error, to prevent additional ops from executing (and potentially mutating state based on an incorrect value).</p>", "body_text": "That's working as expected. The external error is first set here before ongoing execution is cancelled, so the CancelledError won't bubble up to the client code. However, it's still important to set it to some kind of error, to prevent additional ops from executing (and potentially mutating state based on an incorrect value).", "in_reply_to_id": 234661301}