{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14743", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14743/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14743/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14743/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14743", "id": 275596994, "node_id": "MDU6SXNzdWUyNzU1OTY5OTQ=", "number": 14743, "title": "The API doc for tensorflow.keras.backend.set_learning_phase is wrong.", "user": {"login": "Youki", "id": 1643282, "node_id": "MDQ6VXNlcjE2NDMyODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1643282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Youki", "html_url": "https://github.com/Youki", "followers_url": "https://api.github.com/users/Youki/followers", "following_url": "https://api.github.com/users/Youki/following{/other_user}", "gists_url": "https://api.github.com/users/Youki/gists{/gist_id}", "starred_url": "https://api.github.com/users/Youki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Youki/subscriptions", "organizations_url": "https://api.github.com/users/Youki/orgs", "repos_url": "https://api.github.com/users/Youki/repos", "events_url": "https://api.github.com/users/Youki/events{/privacy}", "received_events_url": "https://api.github.com/users/Youki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2017-11-21T06:13:07Z", "updated_at": "2018-04-22T00:51:30Z", "closed_at": "2018-01-09T23:25:01Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\n1.4.0</li>\n<li><strong>Python version</strong>:<br>\nPython 2.7.13 :: Anaconda, Inc.</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>When I implemented Custom Estimator API with tf.keras, I countered following error:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c1\">TypeError</span>: <span class=\"pl-bu\">`pred`</span> must be a Tensor, a Variable, <span class=\"pl-k\">or</span> a Python <span class=\"pl-c1\">bool</span>.</pre></div>\n<p>This happens if I set {0, 1} to tensorflow.keras.backend.set_learning_phase, and doesn't happen if I set {False, True} instead of {0, 1}. However, <a href=\"https://www.tensorflow.org/api_docs/python/tf/keras/backend/set_learning_phase\" rel=\"nofollow\">the API doc</a> for tensorflow.keras.backend.set_learning_phase says the method is supposed to take {0, 1}. So, I think that the API doc should be modified.</p>\n<h3>Source code / logs</h3>\n<ul>\n<li>Source code (You can find more details <a href=\"https://github.com/tensorflow/tensorflow/files/1490186/How.to.integrate.keras.into.Experiment.pdf\">here</a>)</li>\n</ul>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">inference</span>(<span class=\"pl-smi\">images</span>, <span class=\"pl-smi\">mode</span>):\n  <span class=\"pl-k\">if</span> mode <span class=\"pl-k\">==</span> tf.estimator.ModeKeys.<span class=\"pl-c1\">TRAIN</span>:\n    tf.keras.backend.set_learning_phase(<span class=\"pl-c1\">1</span>) <span class=\"pl-c\"><span class=\"pl-c\">#</span> this should be True</span>\n  <span class=\"pl-k\">else</span>:\n    tf.keras.backend.set_learning_phase(<span class=\"pl-c1\">0</span>) <span class=\"pl-c\"><span class=\"pl-c\">#</span> this should be False</span>\n        \n  model <span class=\"pl-k\">=</span> tf.keras.models.Sequential()\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> Define input tensor in Keras world.</span>\n  model.add(tf.keras.layers.InputLayer(<span class=\"pl-v\">input_tensor</span><span class=\"pl-k\">=</span>images))\n\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> The first convolutional layer.</span>\n  model.add(tf.keras.layers.Conv2D(\n      <span class=\"pl-v\">filters</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">32</span>, <span class=\"pl-v\">kernel_size</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">3</span>), <span class=\"pl-v\">padding</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>same<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">activation</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>relu<span class=\"pl-pds\">'</span></span>))\n  model.add(tf.keras.layers.MaxPool2D(<span class=\"pl-v\">pool_size</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">2</span>), <span class=\"pl-v\">padding</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>same<span class=\"pl-pds\">'</span></span>))\n\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> The second convolutional layer.</span>\n  model.add(tf.keras.layers.Conv2D(\n      <span class=\"pl-v\">filters</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">32</span>, <span class=\"pl-v\">kernel_size</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">3</span>), <span class=\"pl-v\">padding</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>same<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">activation</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>relu<span class=\"pl-pds\">'</span></span>))\n  model.add(tf.keras.layers.MaxPool2D(<span class=\"pl-v\">pool_size</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">2</span>), <span class=\"pl-v\">padding</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>same<span class=\"pl-pds\">'</span></span>))\n  model.add(tf.keras.layers.Dropout(<span class=\"pl-c1\">0.25</span>))\n\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> The third convolutional layer</span>\n  model.add(tf.keras.layers.Conv2D(\n      <span class=\"pl-v\">filters</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">64</span>, <span class=\"pl-v\">kernel_size</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">3</span>), <span class=\"pl-v\">padding</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>same<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">activation</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>relu<span class=\"pl-pds\">'</span></span>))\n\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> The fourth convolutional layer</span>\n  model.add(tf.keras.layers.Conv2D(\n      <span class=\"pl-v\">filters</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">64</span>, <span class=\"pl-v\">kernel_size</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">3</span>), <span class=\"pl-v\">padding</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>same<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">activation</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>relu<span class=\"pl-pds\">'</span></span>))\n  model.add(tf.keras.layers.Dropout(<span class=\"pl-c1\">0.25</span>))\n\n  model.add(tf.keras.layers.Flatten())\n  model.add(tf.keras.layers.Dense(<span class=\"pl-c1\">512</span>, <span class=\"pl-v\">activation</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>relu<span class=\"pl-pds\">'</span></span>))\n  model.add(tf.keras.layers.Dropout(<span class=\"pl-c1\">0.5</span>))\n  model.add(tf.keras.layers.Dense(<span class=\"pl-c1\">NUM_CLASSES</span>))\n  logits <span class=\"pl-k\">=</span> model.output\n  <span class=\"pl-k\">return</span> logits</pre></div>\n<ul>\n<li>Error logs</li>\n</ul>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c1\">TypeError</span>                                 Traceback (most recent call last)\n<span class=\"pl-k\">&lt;</span>ipython<span class=\"pl-k\">-</span><span class=\"pl-c1\">input</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">38</span><span class=\"pl-k\">-</span><span class=\"pl-ii\">4dbe7b3f6667</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>()\n     <span class=\"pl-c1\">20</span>   schedule<span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>train_and_evaluate<span class=\"pl-pds\">'</span></span>,\n     <span class=\"pl-c1\">21</span>   run_config<span class=\"pl-k\">=</span>run_config,\n<span class=\"pl-ii\">--</span><span class=\"pl-ii\">-&gt;</span> <span class=\"pl-c1\">22</span>   hparams<span class=\"pl-k\">=</span>hparams\n     <span class=\"pl-c1\">23</span> )\n     <span class=\"pl-c1\">24</span> \n\n<span class=\"pl-k\">/</span>usr<span class=\"pl-k\">/</span>local<span class=\"pl-k\">/</span>google<span class=\"pl-k\">/</span>home<span class=\"pl-k\">/</span>yaboo<span class=\"pl-k\">/</span>Resources<span class=\"pl-k\">/</span>anaconda2<span class=\"pl-k\">/</span>lib<span class=\"pl-k\">/</span>python2.7<span class=\"pl-k\">/</span>site<span class=\"pl-k\">-</span>packages<span class=\"pl-k\">/</span>tensorflow<span class=\"pl-k\">/</span>contrib<span class=\"pl-k\">/</span>learn<span class=\"pl-k\">/</span>python<span class=\"pl-k\">/</span>learn<span class=\"pl-k\">/</span>learn_runner.pyc <span class=\"pl-k\">in</span> run(experiment_fn, output_dir, schedule, run_config, hparams)\n    <span class=\"pl-c1\">216</span>   schedule <span class=\"pl-k\">=</span> schedule <span class=\"pl-k\">or</span> _get_default_schedule(run_config)\n    <span class=\"pl-c1\">217</span> \n<span class=\"pl-ii\">--</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">218</span>   <span class=\"pl-k\">return</span> _execute_schedule(experiment, schedule)\n    <span class=\"pl-c1\">219</span> \n    <span class=\"pl-c1\">220</span> \n\n<span class=\"pl-k\">/</span>usr<span class=\"pl-k\">/</span>local<span class=\"pl-k\">/</span>google<span class=\"pl-k\">/</span>home<span class=\"pl-k\">/</span>yaboo<span class=\"pl-k\">/</span>Resources<span class=\"pl-k\">/</span>anaconda2<span class=\"pl-k\">/</span>lib<span class=\"pl-k\">/</span>python2.7<span class=\"pl-k\">/</span>site<span class=\"pl-k\">-</span>packages<span class=\"pl-k\">/</span>tensorflow<span class=\"pl-k\">/</span>contrib<span class=\"pl-k\">/</span>learn<span class=\"pl-k\">/</span>python<span class=\"pl-k\">/</span>learn<span class=\"pl-k\">/</span>learn_runner.pyc <span class=\"pl-k\">in</span> _execute_schedule(experiment, schedule)\n     <span class=\"pl-c1\">44</span>     logging.error(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Allowed values for this experiment are: <span class=\"pl-c1\">%s</span><span class=\"pl-pds\">'</span></span>, valid_tasks)\n     <span class=\"pl-c1\">45</span>     <span class=\"pl-k\">raise</span> <span class=\"pl-c1\">TypeError</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Schedule references non-callable member <span class=\"pl-c1\">%s</span><span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">%</span> schedule)\n<span class=\"pl-ii\">--</span><span class=\"pl-ii\">-&gt;</span> <span class=\"pl-c1\">46</span>   <span class=\"pl-k\">return</span> task()\n     <span class=\"pl-c1\">47</span> \n     <span class=\"pl-c1\">48</span> \n\n<span class=\"pl-k\">/</span>usr<span class=\"pl-k\">/</span>local<span class=\"pl-k\">/</span>google<span class=\"pl-k\">/</span>home<span class=\"pl-k\">/</span>yaboo<span class=\"pl-k\">/</span>Resources<span class=\"pl-k\">/</span>anaconda2<span class=\"pl-k\">/</span>lib<span class=\"pl-k\">/</span>python2.7<span class=\"pl-k\">/</span>site<span class=\"pl-k\">-</span>packages<span class=\"pl-k\">/</span>tensorflow<span class=\"pl-k\">/</span>contrib<span class=\"pl-k\">/</span>learn<span class=\"pl-k\">/</span>python<span class=\"pl-k\">/</span>learn<span class=\"pl-k\">/</span>experiment.pyc <span class=\"pl-k\">in</span> train_and_evaluate(<span class=\"pl-c1\">self</span>)\n    <span class=\"pl-c1\">623</span>                   hooks<span class=\"pl-k\">=</span><span class=\"pl-c1\">self</span>._eval_hooks)\n    <span class=\"pl-c1\">624</span>           ]\n<span class=\"pl-ii\">--</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">625</span>       <span class=\"pl-c1\">self</span>.train(<span class=\"pl-v\">delay_secs</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0</span>)\n    <span class=\"pl-c1\">626</span> \n    <span class=\"pl-c1\">627</span>     <span class=\"pl-c\"><span class=\"pl-c\">#</span> If the checkpoint_and_export flag and appropriate estimator configuration</span>\n\n<span class=\"pl-k\">/</span>usr<span class=\"pl-k\">/</span>local<span class=\"pl-k\">/</span>google<span class=\"pl-k\">/</span>home<span class=\"pl-k\">/</span>yaboo<span class=\"pl-k\">/</span>Resources<span class=\"pl-k\">/</span>anaconda2<span class=\"pl-k\">/</span>lib<span class=\"pl-k\">/</span>python2.7<span class=\"pl-k\">/</span>site<span class=\"pl-k\">-</span>packages<span class=\"pl-k\">/</span>tensorflow<span class=\"pl-k\">/</span>contrib<span class=\"pl-k\">/</span>learn<span class=\"pl-k\">/</span>python<span class=\"pl-k\">/</span>learn<span class=\"pl-k\">/</span>experiment.pyc <span class=\"pl-k\">in</span> train(<span class=\"pl-c1\">self</span>, delay_secs)\n    <span class=\"pl-c1\">365</span>     <span class=\"pl-k\">return</span> <span class=\"pl-c1\">self</span>._call_train(<span class=\"pl-v\">input_fn</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">self</span>._train_input_fn,\n    <span class=\"pl-c1\">366</span>                             <span class=\"pl-v\">max_steps</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">self</span>._train_steps,\n<span class=\"pl-ii\">--</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">367</span>                             <span class=\"pl-v\">hooks</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">self</span>._train_monitors <span class=\"pl-k\">+</span> extra_hooks)\n    <span class=\"pl-c1\">368</span> \n    <span class=\"pl-c1\">369</span>   <span class=\"pl-k\">def</span> <span class=\"pl-en\">evaluate</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">delay_secs</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">None</span>, <span class=\"pl-smi\">name</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">None</span>):\n\n<span class=\"pl-k\">/</span>usr<span class=\"pl-k\">/</span>local<span class=\"pl-k\">/</span>google<span class=\"pl-k\">/</span>home<span class=\"pl-k\">/</span>yaboo<span class=\"pl-k\">/</span>Resources<span class=\"pl-k\">/</span>anaconda2<span class=\"pl-k\">/</span>lib<span class=\"pl-k\">/</span>python2.7<span class=\"pl-k\">/</span>site<span class=\"pl-k\">-</span>packages<span class=\"pl-k\">/</span>tensorflow<span class=\"pl-k\">/</span>contrib<span class=\"pl-k\">/</span>learn<span class=\"pl-k\">/</span>python<span class=\"pl-k\">/</span>learn<span class=\"pl-k\">/</span>experiment.pyc <span class=\"pl-k\">in</span> _call_train(<span class=\"pl-c1\">self</span>, _sentinel, input_fn, steps, hooks, max_steps)\n    <span class=\"pl-c1\">805</span>                                    steps<span class=\"pl-k\">=</span>steps,\n    <span class=\"pl-c1\">806</span>                                    max_steps<span class=\"pl-k\">=</span>max_steps,\n<span class=\"pl-ii\">--</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">807</span>                                    hooks<span class=\"pl-k\">=</span>hooks)\n    <span class=\"pl-c1\">808</span>     <span class=\"pl-k\">else</span>:\n    <span class=\"pl-c1\">809</span>       <span class=\"pl-k\">return</span> <span class=\"pl-c1\">self</span>._estimator.fit(<span class=\"pl-v\">input_fn</span><span class=\"pl-k\">=</span>input_fn,\n\n<span class=\"pl-k\">/</span>usr<span class=\"pl-k\">/</span>local<span class=\"pl-k\">/</span>google<span class=\"pl-k\">/</span>home<span class=\"pl-k\">/</span>yaboo<span class=\"pl-k\">/</span>Resources<span class=\"pl-k\">/</span>anaconda2<span class=\"pl-k\">/</span>lib<span class=\"pl-k\">/</span>python2.7<span class=\"pl-k\">/</span>site<span class=\"pl-k\">-</span>packages<span class=\"pl-k\">/</span>tensorflow<span class=\"pl-k\">/</span>python<span class=\"pl-k\">/</span>estimator<span class=\"pl-k\">/</span>estimator.pyc <span class=\"pl-k\">in</span> train(<span class=\"pl-c1\">self</span>, input_fn, hooks, steps, max_steps, saving_listeners)\n    <span class=\"pl-c1\">300</span> \n    <span class=\"pl-c1\">301</span>     <span class=\"pl-v\">saving_listeners</span> <span class=\"pl-k\">=</span> _check_listeners_type(saving_listeners)\n<span class=\"pl-ii\">--</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">302</span>     <span class=\"pl-v\">loss</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>._train_model(input_fn, hooks, saving_listeners)\n    <span class=\"pl-c1\">303</span>     logging.info(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Loss for final step: <span class=\"pl-c1\">%s</span>.<span class=\"pl-pds\">'</span></span>, loss)\n    <span class=\"pl-c1\">304</span>     <span class=\"pl-k\">return</span> <span class=\"pl-c1\">self</span>\n\n<span class=\"pl-k\">/</span>usr<span class=\"pl-k\">/</span>local<span class=\"pl-k\">/</span>google<span class=\"pl-k\">/</span>home<span class=\"pl-k\">/</span>yaboo<span class=\"pl-k\">/</span>Resources<span class=\"pl-k\">/</span>anaconda2<span class=\"pl-k\">/</span>lib<span class=\"pl-k\">/</span>python2.7<span class=\"pl-k\">/</span>site<span class=\"pl-k\">-</span>packages<span class=\"pl-k\">/</span>tensorflow<span class=\"pl-k\">/</span>python<span class=\"pl-k\">/</span>estimator<span class=\"pl-k\">/</span>estimator.pyc <span class=\"pl-k\">in</span> _train_model(<span class=\"pl-c1\">self</span>, input_fn, hooks, saving_listeners)\n    <span class=\"pl-c1\">709</span>       <span class=\"pl-k\">with</span> ops.control_dependencies([global_step_read_tensor]):\n    <span class=\"pl-c1\">710</span>         <span class=\"pl-v\">estimator_spec</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>._call_model_fn(\n<span class=\"pl-ii\">--</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">711</span>             features, labels, model_fn_lib.ModeKeys.<span class=\"pl-c1\">TRAIN</span>, <span class=\"pl-c1\">self</span>.config)\n    <span class=\"pl-c1\">712</span>       <span class=\"pl-c\"><span class=\"pl-c\">#</span> Check if the user created a loss summary, and add one if they didn't.</span>\n    <span class=\"pl-c1\">713</span>       <span class=\"pl-c\"><span class=\"pl-c\">#</span> We assume here that the summary is called 'loss'. If it is not, we will</span>\n\n<span class=\"pl-k\">/</span>usr<span class=\"pl-k\">/</span>local<span class=\"pl-k\">/</span>google<span class=\"pl-k\">/</span>home<span class=\"pl-k\">/</span>yaboo<span class=\"pl-k\">/</span>Resources<span class=\"pl-k\">/</span>anaconda2<span class=\"pl-k\">/</span>lib<span class=\"pl-k\">/</span>python2.7<span class=\"pl-k\">/</span>site<span class=\"pl-k\">-</span>packages<span class=\"pl-k\">/</span>tensorflow<span class=\"pl-k\">/</span>python<span class=\"pl-k\">/</span>estimator<span class=\"pl-k\">/</span>estimator.pyc <span class=\"pl-k\">in</span> _call_model_fn(<span class=\"pl-c1\">self</span>, features, labels, mode, config)\n    <span class=\"pl-c1\">692</span>     <span class=\"pl-k\">if</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>config<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">in</span> model_fn_args:\n    <span class=\"pl-c1\">693</span>       kwargs[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>config<span class=\"pl-pds\">'</span></span>] <span class=\"pl-k\">=</span> config\n<span class=\"pl-ii\">--</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">694</span>     <span class=\"pl-v\">model_fn_results</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>._model_fn(<span class=\"pl-v\">features</span><span class=\"pl-k\">=</span>features, <span class=\"pl-k\">**</span>kwargs)\n    <span class=\"pl-c1\">695</span> \n    <span class=\"pl-c1\">696</span>     <span class=\"pl-k\">if</span> <span class=\"pl-k\">not</span> <span class=\"pl-c1\">isinstance</span>(model_fn_results, model_fn_lib.EstimatorSpec):\n\n<span class=\"pl-k\">&lt;</span>ipython<span class=\"pl-k\">-</span><span class=\"pl-c1\">input</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">29</span><span class=\"pl-k\">-</span>a5666390b8b0<span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">in</span> cifar10_model_fn(features, labels, mode, params)\n     <span class=\"pl-c1\">10</span> \n     <span class=\"pl-c1\">11</span>   <span class=\"pl-c\"><span class=\"pl-c\">#</span> Calculate logits through CNN</span>\n<span class=\"pl-ii\">--</span><span class=\"pl-ii\">-&gt;</span> <span class=\"pl-c1\">12</span>   <span class=\"pl-v\">logits</span> <span class=\"pl-k\">=</span> inference(images, mode)\n     <span class=\"pl-c1\">13</span> \n     <span class=\"pl-c1\">14</span>   <span class=\"pl-c\"><span class=\"pl-c\">#</span> Get predictions</span>\n\n<span class=\"pl-k\">&lt;</span>ipython<span class=\"pl-k\">-</span><span class=\"pl-c1\">input</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">37</span><span class=\"pl-k\">-</span><span class=\"pl-ii\">23187df0ff6c</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">in</span> inference(images, mode)\n     <span class=\"pl-c1\">20</span> \n     <span class=\"pl-c1\">21</span>     <span class=\"pl-c\"><span class=\"pl-c\">#</span> <span class=\"pl-k\">NOTE</span>: Dropout is not working with model_fn in TF1.4</span>\n<span class=\"pl-ii\">--</span><span class=\"pl-ii\">-&gt;</span> <span class=\"pl-c1\">22</span>     model.add(tf.keras.layers.Dropout(<span class=\"pl-c1\">0.25</span>))\n     <span class=\"pl-c1\">23</span> \n     <span class=\"pl-c1\">24</span>     <span class=\"pl-c\"><span class=\"pl-c\">#</span> The third convolutional layer</span>\n\n<span class=\"pl-k\">/</span>usr<span class=\"pl-k\">/</span>local<span class=\"pl-k\">/</span>google<span class=\"pl-k\">/</span>home<span class=\"pl-k\">/</span>yaboo<span class=\"pl-k\">/</span>Resources<span class=\"pl-k\">/</span>anaconda2<span class=\"pl-k\">/</span>lib<span class=\"pl-k\">/</span>python2.7<span class=\"pl-k\">/</span>site<span class=\"pl-k\">-</span>packages<span class=\"pl-k\">/</span>tensorflow<span class=\"pl-k\">/</span>python<span class=\"pl-k\">/</span>keras<span class=\"pl-k\">/</span>_impl<span class=\"pl-k\">/</span>keras<span class=\"pl-k\">/</span>models.pyc <span class=\"pl-k\">in</span> add(<span class=\"pl-c1\">self</span>, layer)\n    <span class=\"pl-c1\">499</span>           <span class=\"pl-v\">output_tensors</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">self</span>.outputs)\n    <span class=\"pl-c1\">500</span>     <span class=\"pl-k\">else</span>:\n<span class=\"pl-ii\">--</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">501</span>       output_tensor <span class=\"pl-k\">=</span> layer(<span class=\"pl-c1\">self</span>.outputs[<span class=\"pl-c1\">0</span>])\n    <span class=\"pl-c1\">502</span>       <span class=\"pl-k\">if</span> <span class=\"pl-c1\">isinstance</span>(output_tensor, <span class=\"pl-c1\">list</span>):\n    <span class=\"pl-c1\">503</span>         <span class=\"pl-k\">raise</span> <span class=\"pl-c1\">TypeError</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>All layers in a Sequential model <span class=\"pl-pds\">'</span></span>\n\n<span class=\"pl-k\">/</span>usr<span class=\"pl-k\">/</span>local<span class=\"pl-k\">/</span>google<span class=\"pl-k\">/</span>home<span class=\"pl-k\">/</span>yaboo<span class=\"pl-k\">/</span>Resources<span class=\"pl-k\">/</span>anaconda2<span class=\"pl-k\">/</span>lib<span class=\"pl-k\">/</span>python2.7<span class=\"pl-k\">/</span>site<span class=\"pl-k\">-</span>packages<span class=\"pl-k\">/</span>tensorflow<span class=\"pl-k\">/</span>python<span class=\"pl-k\">/</span>keras<span class=\"pl-k\">/</span>_impl<span class=\"pl-k\">/</span>keras<span class=\"pl-k\">/</span>engine<span class=\"pl-k\">/</span>topology.pyc <span class=\"pl-k\">in</span> <span class=\"pl-c1\">__call__</span>(<span class=\"pl-c1\">self</span>, inputs, <span class=\"pl-k\">**</span>kwargs)\n    <span class=\"pl-c1\">250</span>     <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span></span>\n<span class=\"pl-s\">    251     # Actually call the layer (optionally building it).</span>\n<span class=\"pl-s\">--&gt; 252     output = super(Layer, self).__call__(inputs, **kwargs)</span>\n<span class=\"pl-s\">    253 </span>\n<span class=\"pl-s\">    254     # Update learning phase info.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/python/layers/base.pyc in __call__(self, inputs, *args, **kwargs)</span>\n<span class=\"pl-s\">    573         if in_graph_mode:</span>\n<span class=\"pl-s\">    574           self._assert_input_compatibility(inputs)</span>\n<span class=\"pl-s\">--&gt; 575         outputs = self.call(inputs, *args, **kwargs)</span>\n<span class=\"pl-s\">    576 </span>\n<span class=\"pl-s\">    577         if outputs is None:</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/python/keras/_impl/keras/layers/core.pyc in call(self, inputs, training)</span>\n<span class=\"pl-s\">    116     if training is None:</span>\n<span class=\"pl-s\">    117       training = K.learning_phase()</span>\n<span class=\"pl-s\">--&gt; 118     output = super(Dropout, self).call(inputs, training=training)</span>\n<span class=\"pl-s\">    119     if training is K.learning_phase():</span>\n<span class=\"pl-s\">    120       output._uses_learning_phase = True  # pylint: disable=protected-access</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/python/layers/core.pyc in call(self, inputs, training)</span>\n<span class=\"pl-s\">    298     return utils.smart_cond(training,</span>\n<span class=\"pl-s\">    299                             dropped_inputs,</span>\n<span class=\"pl-s\">--&gt; 300                             lambda: array_ops.identity(inputs))</span>\n<span class=\"pl-s\">    301 </span>\n<span class=\"pl-s\">    302 </span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/python/layers/utils.pyc in smart_cond(pred, fn1, fn2, name)</span>\n<span class=\"pl-s\">    201     raise TypeError('`fn2` must be callable.')</span>\n<span class=\"pl-s\">    202 </span>\n<span class=\"pl-s\">--&gt; 203   pred_value = constant_value(pred)</span>\n<span class=\"pl-s\">    204   if pred_value is not None:</span>\n<span class=\"pl-s\">    205     if pred_value:</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/python/layers/utils.pyc in constant_value(pred)</span>\n<span class=\"pl-s\">    231     pred_value = tensor_util.constant_value(pred)</span>\n<span class=\"pl-s\">    232   else:</span>\n<span class=\"pl-s\">--&gt; 233     raise TypeError('`pred` must be a Tensor, a Variable, or a Python bool.')</span>\n<span class=\"pl-s\">    234   return pred_value</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">TypeError: `pred` must be a Tensor, a Variable, or a Python bool.</span></pre></div>", "body_text": "System information\n\nTensorFlow version (use command below):\n1.4.0\nPython version:\nPython 2.7.13 :: Anaconda, Inc.\n\nDescribe the problem\nWhen I implemented Custom Estimator API with tf.keras, I countered following error:\nTypeError: `pred` must be a Tensor, a Variable, or a Python bool.\nThis happens if I set {0, 1} to tensorflow.keras.backend.set_learning_phase, and doesn't happen if I set {False, True} instead of {0, 1}. However, the API doc for tensorflow.keras.backend.set_learning_phase says the method is supposed to take {0, 1}. So, I think that the API doc should be modified.\nSource code / logs\n\nSource code (You can find more details here)\n\ndef inference(images, mode):\n  if mode == tf.estimator.ModeKeys.TRAIN:\n    tf.keras.backend.set_learning_phase(1) # this should be True\n  else:\n    tf.keras.backend.set_learning_phase(0) # this should be False\n        \n  model = tf.keras.models.Sequential()\n  # Define input tensor in Keras world.\n  model.add(tf.keras.layers.InputLayer(input_tensor=images))\n\n  # The first convolutional layer.\n  model.add(tf.keras.layers.Conv2D(\n      filters=32, kernel_size=(3, 3), padding='same', activation='relu'))\n  model.add(tf.keras.layers.MaxPool2D(pool_size=(2, 2), padding='same'))\n\n  # The second convolutional layer.\n  model.add(tf.keras.layers.Conv2D(\n      filters=32, kernel_size=(3, 3), padding='same', activation='relu'))\n  model.add(tf.keras.layers.MaxPool2D(pool_size=(2, 2), padding='same'))\n  model.add(tf.keras.layers.Dropout(0.25))\n\n  # The third convolutional layer\n  model.add(tf.keras.layers.Conv2D(\n      filters=64, kernel_size=(3, 3), padding='same', activation='relu'))\n\n  # The fourth convolutional layer\n  model.add(tf.keras.layers.Conv2D(\n      filters=64, kernel_size=(3, 3), padding='same', activation='relu'))\n  model.add(tf.keras.layers.Dropout(0.25))\n\n  model.add(tf.keras.layers.Flatten())\n  model.add(tf.keras.layers.Dense(512, activation='relu'))\n  model.add(tf.keras.layers.Dropout(0.5))\n  model.add(tf.keras.layers.Dense(NUM_CLASSES))\n  logits = model.output\n  return logits\n\nError logs\n\nTypeError                                 Traceback (most recent call last)\n<ipython-input-38-4dbe7b3f6667> in <module>()\n     20   schedule='train_and_evaluate',\n     21   run_config=run_config,\n---> 22   hparams=hparams\n     23 )\n     24 \n\n/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/learn_runner.pyc in run(experiment_fn, output_dir, schedule, run_config, hparams)\n    216   schedule = schedule or _get_default_schedule(run_config)\n    217 \n--> 218   return _execute_schedule(experiment, schedule)\n    219 \n    220 \n\n/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/learn_runner.pyc in _execute_schedule(experiment, schedule)\n     44     logging.error('Allowed values for this experiment are: %s', valid_tasks)\n     45     raise TypeError('Schedule references non-callable member %s' % schedule)\n---> 46   return task()\n     47 \n     48 \n\n/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/experiment.pyc in train_and_evaluate(self)\n    623                   hooks=self._eval_hooks)\n    624           ]\n--> 625       self.train(delay_secs=0)\n    626 \n    627     # If the checkpoint_and_export flag and appropriate estimator configuration\n\n/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/experiment.pyc in train(self, delay_secs)\n    365     return self._call_train(input_fn=self._train_input_fn,\n    366                             max_steps=self._train_steps,\n--> 367                             hooks=self._train_monitors + extra_hooks)\n    368 \n    369   def evaluate(self, delay_secs=None, name=None):\n\n/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/experiment.pyc in _call_train(self, _sentinel, input_fn, steps, hooks, max_steps)\n    805                                    steps=steps,\n    806                                    max_steps=max_steps,\n--> 807                                    hooks=hooks)\n    808     else:\n    809       return self._estimator.fit(input_fn=input_fn,\n\n/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.pyc in train(self, input_fn, hooks, steps, max_steps, saving_listeners)\n    300 \n    301     saving_listeners = _check_listeners_type(saving_listeners)\n--> 302     loss = self._train_model(input_fn, hooks, saving_listeners)\n    303     logging.info('Loss for final step: %s.', loss)\n    304     return self\n\n/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.pyc in _train_model(self, input_fn, hooks, saving_listeners)\n    709       with ops.control_dependencies([global_step_read_tensor]):\n    710         estimator_spec = self._call_model_fn(\n--> 711             features, labels, model_fn_lib.ModeKeys.TRAIN, self.config)\n    712       # Check if the user created a loss summary, and add one if they didn't.\n    713       # We assume here that the summary is called 'loss'. If it is not, we will\n\n/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.pyc in _call_model_fn(self, features, labels, mode, config)\n    692     if 'config' in model_fn_args:\n    693       kwargs['config'] = config\n--> 694     model_fn_results = self._model_fn(features=features, **kwargs)\n    695 \n    696     if not isinstance(model_fn_results, model_fn_lib.EstimatorSpec):\n\n<ipython-input-29-a5666390b8b0> in cifar10_model_fn(features, labels, mode, params)\n     10 \n     11   # Calculate logits through CNN\n---> 12   logits = inference(images, mode)\n     13 \n     14   # Get predictions\n\n<ipython-input-37-23187df0ff6c> in inference(images, mode)\n     20 \n     21     # NOTE: Dropout is not working with model_fn in TF1.4\n---> 22     model.add(tf.keras.layers.Dropout(0.25))\n     23 \n     24     # The third convolutional layer\n\n/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/python/keras/_impl/keras/models.pyc in add(self, layer)\n    499           output_tensors=self.outputs)\n    500     else:\n--> 501       output_tensor = layer(self.outputs[0])\n    502       if isinstance(output_tensor, list):\n    503         raise TypeError('All layers in a Sequential model '\n\n/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/python/keras/_impl/keras/engine/topology.pyc in __call__(self, inputs, **kwargs)\n    250     \"\"\"\n    251     # Actually call the layer (optionally building it).\n--> 252     output = super(Layer, self).__call__(inputs, **kwargs)\n    253 \n    254     # Update learning phase info.\n\n/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/python/layers/base.pyc in __call__(self, inputs, *args, **kwargs)\n    573         if in_graph_mode:\n    574           self._assert_input_compatibility(inputs)\n--> 575         outputs = self.call(inputs, *args, **kwargs)\n    576 \n    577         if outputs is None:\n\n/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/python/keras/_impl/keras/layers/core.pyc in call(self, inputs, training)\n    116     if training is None:\n    117       training = K.learning_phase()\n--> 118     output = super(Dropout, self).call(inputs, training=training)\n    119     if training is K.learning_phase():\n    120       output._uses_learning_phase = True  # pylint: disable=protected-access\n\n/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/python/layers/core.pyc in call(self, inputs, training)\n    298     return utils.smart_cond(training,\n    299                             dropped_inputs,\n--> 300                             lambda: array_ops.identity(inputs))\n    301 \n    302 \n\n/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/python/layers/utils.pyc in smart_cond(pred, fn1, fn2, name)\n    201     raise TypeError('`fn2` must be callable.')\n    202 \n--> 203   pred_value = constant_value(pred)\n    204   if pred_value is not None:\n    205     if pred_value:\n\n/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/python/layers/utils.pyc in constant_value(pred)\n    231     pred_value = tensor_util.constant_value(pred)\n    232   else:\n--> 233     raise TypeError('`pred` must be a Tensor, a Variable, or a Python bool.')\n    234   return pred_value\n\nTypeError: `pred` must be a Tensor, a Variable, or a Python bool.", "body": "### System information\r\n- **TensorFlow version (use command below)**:\r\n1.4.0\r\n- **Python version**: \r\nPython 2.7.13 :: Anaconda, Inc.\r\n\r\n### Describe the problem\r\nWhen I implemented Custom Estimator API with tf.keras, I countered following error: \r\n\r\n```python\r\nTypeError: `pred` must be a Tensor, a Variable, or a Python bool.\r\n```\r\n\r\nThis happens if I set {0, 1} to tensorflow.keras.backend.set_learning_phase, and doesn't happen if I set {False, True} instead of {0, 1}. However, [the API doc](https://www.tensorflow.org/api_docs/python/tf/keras/backend/set_learning_phase) for tensorflow.keras.backend.set_learning_phase says the method is supposed to take {0, 1}. So, I think that the API doc should be modified.\r\n\r\n### Source code / logs\r\n- Source code (You can find more details [here](https://github.com/tensorflow/tensorflow/files/1490186/How.to.integrate.keras.into.Experiment.pdf))\r\n\r\n```python\r\ndef inference(images, mode):\r\n  if mode == tf.estimator.ModeKeys.TRAIN:\r\n    tf.keras.backend.set_learning_phase(1) # this should be True\r\n  else:\r\n    tf.keras.backend.set_learning_phase(0) # this should be False\r\n        \r\n  model = tf.keras.models.Sequential()\r\n  # Define input tensor in Keras world.\r\n  model.add(tf.keras.layers.InputLayer(input_tensor=images))\r\n\r\n  # The first convolutional layer.\r\n  model.add(tf.keras.layers.Conv2D(\r\n      filters=32, kernel_size=(3, 3), padding='same', activation='relu'))\r\n  model.add(tf.keras.layers.MaxPool2D(pool_size=(2, 2), padding='same'))\r\n\r\n  # The second convolutional layer.\r\n  model.add(tf.keras.layers.Conv2D(\r\n      filters=32, kernel_size=(3, 3), padding='same', activation='relu'))\r\n  model.add(tf.keras.layers.MaxPool2D(pool_size=(2, 2), padding='same'))\r\n  model.add(tf.keras.layers.Dropout(0.25))\r\n\r\n  # The third convolutional layer\r\n  model.add(tf.keras.layers.Conv2D(\r\n      filters=64, kernel_size=(3, 3), padding='same', activation='relu'))\r\n\r\n  # The fourth convolutional layer\r\n  model.add(tf.keras.layers.Conv2D(\r\n      filters=64, kernel_size=(3, 3), padding='same', activation='relu'))\r\n  model.add(tf.keras.layers.Dropout(0.25))\r\n\r\n  model.add(tf.keras.layers.Flatten())\r\n  model.add(tf.keras.layers.Dense(512, activation='relu'))\r\n  model.add(tf.keras.layers.Dropout(0.5))\r\n  model.add(tf.keras.layers.Dense(NUM_CLASSES))\r\n  logits = model.output\r\n  return logits\r\n```\r\n\r\n\r\n\r\n\r\n- Error logs\r\n```python\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-38-4dbe7b3f6667> in <module>()\r\n     20   schedule='train_and_evaluate',\r\n     21   run_config=run_config,\r\n---> 22   hparams=hparams\r\n     23 )\r\n     24 \r\n\r\n/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/learn_runner.pyc in run(experiment_fn, output_dir, schedule, run_config, hparams)\r\n    216   schedule = schedule or _get_default_schedule(run_config)\r\n    217 \r\n--> 218   return _execute_schedule(experiment, schedule)\r\n    219 \r\n    220 \r\n\r\n/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/learn_runner.pyc in _execute_schedule(experiment, schedule)\r\n     44     logging.error('Allowed values for this experiment are: %s', valid_tasks)\r\n     45     raise TypeError('Schedule references non-callable member %s' % schedule)\r\n---> 46   return task()\r\n     47 \r\n     48 \r\n\r\n/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/experiment.pyc in train_and_evaluate(self)\r\n    623                   hooks=self._eval_hooks)\r\n    624           ]\r\n--> 625       self.train(delay_secs=0)\r\n    626 \r\n    627     # If the checkpoint_and_export flag and appropriate estimator configuration\r\n\r\n/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/experiment.pyc in train(self, delay_secs)\r\n    365     return self._call_train(input_fn=self._train_input_fn,\r\n    366                             max_steps=self._train_steps,\r\n--> 367                             hooks=self._train_monitors + extra_hooks)\r\n    368 \r\n    369   def evaluate(self, delay_secs=None, name=None):\r\n\r\n/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/experiment.pyc in _call_train(self, _sentinel, input_fn, steps, hooks, max_steps)\r\n    805                                    steps=steps,\r\n    806                                    max_steps=max_steps,\r\n--> 807                                    hooks=hooks)\r\n    808     else:\r\n    809       return self._estimator.fit(input_fn=input_fn,\r\n\r\n/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.pyc in train(self, input_fn, hooks, steps, max_steps, saving_listeners)\r\n    300 \r\n    301     saving_listeners = _check_listeners_type(saving_listeners)\r\n--> 302     loss = self._train_model(input_fn, hooks, saving_listeners)\r\n    303     logging.info('Loss for final step: %s.', loss)\r\n    304     return self\r\n\r\n/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.pyc in _train_model(self, input_fn, hooks, saving_listeners)\r\n    709       with ops.control_dependencies([global_step_read_tensor]):\r\n    710         estimator_spec = self._call_model_fn(\r\n--> 711             features, labels, model_fn_lib.ModeKeys.TRAIN, self.config)\r\n    712       # Check if the user created a loss summary, and add one if they didn't.\r\n    713       # We assume here that the summary is called 'loss'. If it is not, we will\r\n\r\n/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.pyc in _call_model_fn(self, features, labels, mode, config)\r\n    692     if 'config' in model_fn_args:\r\n    693       kwargs['config'] = config\r\n--> 694     model_fn_results = self._model_fn(features=features, **kwargs)\r\n    695 \r\n    696     if not isinstance(model_fn_results, model_fn_lib.EstimatorSpec):\r\n\r\n<ipython-input-29-a5666390b8b0> in cifar10_model_fn(features, labels, mode, params)\r\n     10 \r\n     11   # Calculate logits through CNN\r\n---> 12   logits = inference(images, mode)\r\n     13 \r\n     14   # Get predictions\r\n\r\n<ipython-input-37-23187df0ff6c> in inference(images, mode)\r\n     20 \r\n     21     # NOTE: Dropout is not working with model_fn in TF1.4\r\n---> 22     model.add(tf.keras.layers.Dropout(0.25))\r\n     23 \r\n     24     # The third convolutional layer\r\n\r\n/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/python/keras/_impl/keras/models.pyc in add(self, layer)\r\n    499           output_tensors=self.outputs)\r\n    500     else:\r\n--> 501       output_tensor = layer(self.outputs[0])\r\n    502       if isinstance(output_tensor, list):\r\n    503         raise TypeError('All layers in a Sequential model '\r\n\r\n/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/python/keras/_impl/keras/engine/topology.pyc in __call__(self, inputs, **kwargs)\r\n    250     \"\"\"\r\n    251     # Actually call the layer (optionally building it).\r\n--> 252     output = super(Layer, self).__call__(inputs, **kwargs)\r\n    253 \r\n    254     # Update learning phase info.\r\n\r\n/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/python/layers/base.pyc in __call__(self, inputs, *args, **kwargs)\r\n    573         if in_graph_mode:\r\n    574           self._assert_input_compatibility(inputs)\r\n--> 575         outputs = self.call(inputs, *args, **kwargs)\r\n    576 \r\n    577         if outputs is None:\r\n\r\n/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/python/keras/_impl/keras/layers/core.pyc in call(self, inputs, training)\r\n    116     if training is None:\r\n    117       training = K.learning_phase()\r\n--> 118     output = super(Dropout, self).call(inputs, training=training)\r\n    119     if training is K.learning_phase():\r\n    120       output._uses_learning_phase = True  # pylint: disable=protected-access\r\n\r\n/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/python/layers/core.pyc in call(self, inputs, training)\r\n    298     return utils.smart_cond(training,\r\n    299                             dropped_inputs,\r\n--> 300                             lambda: array_ops.identity(inputs))\r\n    301 \r\n    302 \r\n\r\n/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/python/layers/utils.pyc in smart_cond(pred, fn1, fn2, name)\r\n    201     raise TypeError('`fn2` must be callable.')\r\n    202 \r\n--> 203   pred_value = constant_value(pred)\r\n    204   if pred_value is not None:\r\n    205     if pred_value:\r\n\r\n/usr/local/google/home/yaboo/Resources/anaconda2/lib/python2.7/site-packages/tensorflow/python/layers/utils.pyc in constant_value(pred)\r\n    231     pred_value = tensor_util.constant_value(pred)\r\n    232   else:\r\n--> 233     raise TypeError('`pred` must be a Tensor, a Variable, or a Python bool.')\r\n    234   return pred_value\r\n\r\nTypeError: `pred` must be a Tensor, a Variable, or a Python bool.\r\n```"}