{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/78404976", "pull_request_review_id": null, "id": 78404976, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc4NDA0OTc2", "diff_hunk": "@@ -248,10 +256,16 @@ struct UnsortedSegmentSumFunctor<CPUDevice, T, Index> {\n \n // Similar to SegmentReductionOp but can handle unsorted segment definitions and\n // specifying size of output.\n-template <typename Device, class T, class Index>\n-class UnsortedSegmentSumOp : public OpKernel {\n+template <typename Device, class T, class Index,\n+          void (*unsortedSegmentInitializationOp)(", "path": "tensorflow/core/kernels/segment_reduction_ops.cc", "position": null, "original_position": 110, "commit_id": "be3f5a052dad6a40654b8643d258acaf5e16bbef", "original_commit_id": "77688f04a8c4f2ce0b87439d60db7991f2c72db1", "user": {"login": "andydavis1", "id": 15696327, "node_id": "MDQ6VXNlcjE1Njk2MzI3", "avatar_url": "https://avatars0.githubusercontent.com/u/15696327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andydavis1", "html_url": "https://github.com/andydavis1", "followers_url": "https://api.github.com/users/andydavis1/followers", "following_url": "https://api.github.com/users/andydavis1/following{/other_user}", "gists_url": "https://api.github.com/users/andydavis1/gists{/gist_id}", "starred_url": "https://api.github.com/users/andydavis1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andydavis1/subscriptions", "organizations_url": "https://api.github.com/users/andydavis1/orgs", "repos_url": "https://api.github.com/users/andydavis1/repos", "events_url": "https://api.github.com/users/andydavis1/events{/privacy}", "received_events_url": "https://api.github.com/users/andydavis1/received_events", "type": "User", "site_admin": false}, "body": "I dont like passing these things as template arguments.  Can we make these things functors, and pass the proper functor in to the base classes' Compute method?\n\nclass UnsortedSegmentSumOp : public UnsortedSegmentBase\n\n  void Compute(...) {\n      // Pass in UnsortedSegmentSum functor here.\n      UnsortedSegmentBase::Compute(functor);\n   }\n", "created_at": "2016-09-12T16:22:52Z", "updated_at": "2016-12-12T20:03:37Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/4051#discussion_r78404976", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/4051", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/78404976"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/4051#discussion_r78404976"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/4051"}}, "body_html": "<p>I dont like passing these things as template arguments.  Can we make these things functors, and pass the proper functor in to the base classes' Compute method?</p>\n<p>class UnsortedSegmentSumOp : public UnsortedSegmentBase</p>\n<p>void Compute(...) {<br>\n// Pass in UnsortedSegmentSum functor here.<br>\nUnsortedSegmentBase::Compute(functor);<br>\n}</p>", "body_text": "I dont like passing these things as template arguments.  Can we make these things functors, and pass the proper functor in to the base classes' Compute method?\nclass UnsortedSegmentSumOp : public UnsortedSegmentBase\nvoid Compute(...) {\n// Pass in UnsortedSegmentSum functor here.\nUnsortedSegmentBase::Compute(functor);\n}"}