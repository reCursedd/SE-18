{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/310128324", "html_url": "https://github.com/tensorflow/tensorflow/issues/5587#issuecomment-310128324", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5587", "id": 310128324, "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDEyODMyNA==", "user": {"login": "kaushik1618", "id": 773302, "node_id": "MDQ6VXNlcjc3MzMwMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/773302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaushik1618", "html_url": "https://github.com/kaushik1618", "followers_url": "https://api.github.com/users/kaushik1618/followers", "following_url": "https://api.github.com/users/kaushik1618/following{/other_user}", "gists_url": "https://api.github.com/users/kaushik1618/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaushik1618/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaushik1618/subscriptions", "organizations_url": "https://api.github.com/users/kaushik1618/orgs", "repos_url": "https://api.github.com/users/kaushik1618/repos", "events_url": "https://api.github.com/users/kaushik1618/events{/privacy}", "received_events_url": "https://api.github.com/users/kaushik1618/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-21T16:09:47Z", "updated_at": "2017-06-21T16:09:47Z", "author_association": "NONE", "body_html": "<p>I'm hitting this issue today. I created a simple NN (straight-line) example in Python with 1 node (1 weight + 1 bias), trained it and exported the graph. Using an example on StackOverflow, I tried to import this graph into C++ on a Raspberry Pi like device (C.H.I.P. $9 board) on which I had painstakingly compiled the static tensorflow C++ library. I tested the tensorflow installation using the pi_examples/ which worked fine. I also ensured that clear_devices was set to True when exporting the graph from Python as that was the training machine.</p>\n<p>terminate called after throwing an instance of 'std::runtime_error'<br>\nwhat():  Error creating graph: Invalid argument: No OpKernel was registered to support Op 'TruncatedNormal' with these attrs.  Registered devices: [CPU], Registered kernels:<br>\n</p>\n<pre><code> [[Node: truncated_normal/TruncatedNormal = TruncatedNormal[T=DT_INT32, _output_shapes=[[1,1]], dtype=DT_FLOAT, seed=0, seed2=0](truncated_normal/shape)]]\n</code></pre>\n<p>Aborted</p>\n<p>chip@chip:~/tensorflow$ grep -Fsnr REGISTER_KERNEL . | grep \"TruncatedNormal\"<br>\n./tensorflow/core/kernels/parameterized_truncated_normal_op.cc:361:  REGISTER_KERNEL_BUILDER(Name(\"ParameterizedTruncatedNormal\") <br>\n./tensorflow/core/kernels/parameterized_truncated_normal_op.cc:375:  REGISTER_KERNEL_BUILDER(Name(\"ParameterizedTruncatedNormal\") \\</p>\n<p>Grep-ing, I couldn't find an exact match for the TruncatedNormal kernel in the source code either. Please help!</p>", "body_text": "I'm hitting this issue today. I created a simple NN (straight-line) example in Python with 1 node (1 weight + 1 bias), trained it and exported the graph. Using an example on StackOverflow, I tried to import this graph into C++ on a Raspberry Pi like device (C.H.I.P. $9 board) on which I had painstakingly compiled the static tensorflow C++ library. I tested the tensorflow installation using the pi_examples/ which worked fine. I also ensured that clear_devices was set to True when exporting the graph from Python as that was the training machine.\nterminate called after throwing an instance of 'std::runtime_error'\nwhat():  Error creating graph: Invalid argument: No OpKernel was registered to support Op 'TruncatedNormal' with these attrs.  Registered devices: [CPU], Registered kernels:\n\n [[Node: truncated_normal/TruncatedNormal = TruncatedNormal[T=DT_INT32, _output_shapes=[[1,1]], dtype=DT_FLOAT, seed=0, seed2=0](truncated_normal/shape)]]\n\nAborted\nchip@chip:~/tensorflow$ grep -Fsnr REGISTER_KERNEL . | grep \"TruncatedNormal\"\n./tensorflow/core/kernels/parameterized_truncated_normal_op.cc:361:  REGISTER_KERNEL_BUILDER(Name(\"ParameterizedTruncatedNormal\") \n./tensorflow/core/kernels/parameterized_truncated_normal_op.cc:375:  REGISTER_KERNEL_BUILDER(Name(\"ParameterizedTruncatedNormal\") \\\nGrep-ing, I couldn't find an exact match for the TruncatedNormal kernel in the source code either. Please help!", "body": "I'm hitting this issue today. I created a simple NN (straight-line) example in Python with 1 node (1 weight + 1 bias), trained it and exported the graph. Using an example on StackOverflow, I tried to import this graph into C++ on a Raspberry Pi like device (C.H.I.P. $9 board) on which I had painstakingly compiled the static tensorflow C++ library. I tested the tensorflow installation using the pi_examples/ which worked fine. I also ensured that clear_devices was set to True when exporting the graph from Python as that was the training machine.\r\n\r\nterminate called after throwing an instance of 'std::runtime_error'\r\n  what():  Error creating graph: Invalid argument: No OpKernel was registered to support Op 'TruncatedNormal' with these attrs.  Registered devices: [CPU], Registered kernels:\r\n  <no registered kernels>\r\n\r\n\t [[Node: truncated_normal/TruncatedNormal = TruncatedNormal[T=DT_INT32, _output_shapes=[[1,1]], dtype=DT_FLOAT, seed=0, seed2=0](truncated_normal/shape)]]\r\nAborted\r\n\r\nchip@chip:~/tensorflow$ grep -Fsnr REGISTER_KERNEL . | grep \"TruncatedNormal\"\r\n./tensorflow/core/kernels/parameterized_truncated_normal_op.cc:361:  REGISTER_KERNEL_BUILDER(Name(\"ParameterizedTruncatedNormal\") \\\r\n./tensorflow/core/kernels/parameterized_truncated_normal_op.cc:375:  REGISTER_KERNEL_BUILDER(Name(\"ParameterizedTruncatedNormal\") \\\r\n\r\nGrep-ing, I couldn't find an exact match for the TruncatedNormal kernel in the source code either. Please help!"}