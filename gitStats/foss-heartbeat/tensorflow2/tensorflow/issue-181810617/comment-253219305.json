{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/253219305", "html_url": "https://github.com/tensorflow/tensorflow/issues/4841#issuecomment-253219305", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4841", "id": 253219305, "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzIxOTMwNQ==", "user": {"login": "jinhou", "id": 7037235, "node_id": "MDQ6VXNlcjcwMzcyMzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/7037235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jinhou", "html_url": "https://github.com/jinhou", "followers_url": "https://api.github.com/users/jinhou/followers", "following_url": "https://api.github.com/users/jinhou/following{/other_user}", "gists_url": "https://api.github.com/users/jinhou/gists{/gist_id}", "starred_url": "https://api.github.com/users/jinhou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jinhou/subscriptions", "organizations_url": "https://api.github.com/users/jinhou/orgs", "repos_url": "https://api.github.com/users/jinhou/repos", "events_url": "https://api.github.com/users/jinhou/events{/privacy}", "received_events_url": "https://api.github.com/users/jinhou/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-12T13:52:16Z", "updated_at": "2016-10-12T13:54:24Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=11130276\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/AFAgarap\">@AFAgarap</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5453737\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/tatatodd\">@tatatodd</a> I found a work around method to fixed this issue in my machine.<br>\nIn ./third_party/gpus/cuda_configure.bzl file, there is a function to check whether cuda is enabled,<br>\n<code>def _enable_cuda(repository_ctx): if \"TF_NEED_CUDA\" in repository_ctx.os.environ: enable_cuda = repository_ctx.os.environ[\"TF_NEED_CUDA\"].strip() print (enable_cuda) return enable_cuda == \"1\" return False </code><br>\nIn my case, even I run the configure with CUDA enabled. The environment variable \"TF_NEED_CUDA\" was still no in the list of repository_ctx.os.environ. So It would say CUDA was not enabled when compiled from source. Then I export \"TF_NEED_CUDA=1\" in my ~/.bashrc. And it compiled successfully.</p>\n<p>So I am not sure whether it works for your case? <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=11130276\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/AFAgarap\">@AFAgarap</a></p>", "body_text": "@AFAgarap @tatatodd I found a work around method to fixed this issue in my machine.\nIn ./third_party/gpus/cuda_configure.bzl file, there is a function to check whether cuda is enabled,\ndef _enable_cuda(repository_ctx): if \"TF_NEED_CUDA\" in repository_ctx.os.environ: enable_cuda = repository_ctx.os.environ[\"TF_NEED_CUDA\"].strip() print (enable_cuda) return enable_cuda == \"1\" return False \nIn my case, even I run the configure with CUDA enabled. The environment variable \"TF_NEED_CUDA\" was still no in the list of repository_ctx.os.environ. So It would say CUDA was not enabled when compiled from source. Then I export \"TF_NEED_CUDA=1\" in my ~/.bashrc. And it compiled successfully.\nSo I am not sure whether it works for your case? @AFAgarap", "body": "@AFAgarap @tatatodd I found a work around method to fixed this issue in my machine. \nIn ./third_party/gpus/cuda_configure.bzl file, there is a function to check whether cuda is enabled, \n`def _enable_cuda(repository_ctx):\n  if \"TF_NEED_CUDA\" in repository_ctx.os.environ:\n    enable_cuda = repository_ctx.os.environ[\"TF_NEED_CUDA\"].strip()\n    print (enable_cuda)\n    return enable_cuda == \"1\"\n  return False\n`\nIn my case, even I run the configure with CUDA enabled. The environment variable \"TF_NEED_CUDA\" was still no in the list of repository_ctx.os.environ. So It would say CUDA was not enabled when compiled from source. Then I export \"TF_NEED_CUDA=1\" in my ~/.bashrc. And it compiled successfully. \n\nSo I am not sure whether it works for your case? @AFAgarap\n"}