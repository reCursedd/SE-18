{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/388830814", "html_url": "https://github.com/tensorflow/tensorflow/issues/18731#issuecomment-388830814", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18731", "id": 388830814, "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODgzMDgxNA==", "user": {"login": "adekunleba", "id": 20487753, "node_id": "MDQ6VXNlcjIwNDg3NzUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20487753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adekunleba", "html_url": "https://github.com/adekunleba", "followers_url": "https://api.github.com/users/adekunleba/followers", "following_url": "https://api.github.com/users/adekunleba/following{/other_user}", "gists_url": "https://api.github.com/users/adekunleba/gists{/gist_id}", "starred_url": "https://api.github.com/users/adekunleba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adekunleba/subscriptions", "organizations_url": "https://api.github.com/users/adekunleba/orgs", "repos_url": "https://api.github.com/users/adekunleba/repos", "events_url": "https://api.github.com/users/adekunleba/events{/privacy}", "received_events_url": "https://api.github.com/users/adekunleba/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-14T14:10:53Z", "updated_at": "2018-05-14T14:10:53Z", "author_association": "NONE", "body_html": "<p>Hi <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=14290069\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Kayoku\">@Kayoku</a> ,</p>\n<p>Tried to check the source code and found out it's one of the assertions causing the error.</p>\n<pre><code>// There remains to handle the edges that were pointing to the nonselected\n  // output. We will just discard those edges. Concretely, at the moment,\n  // our only examples of graphs with Switch nodes have them feeding into Merge\n  // nodes, so what we're saying here is that we'll make the convention,\n  // in our toco internal representation, that Merge nodes with only 1 input\n  // are Merge nodes that have been resolved already and should be have as\n  // Identity nodes, simply forwarding their input.\n  //\n  for (const auto&amp; other_op : model-&gt;operators) {\n    auto input_it = other_op-&gt;inputs.begin();\n    while (input_it != other_op-&gt;inputs.end()) {\n      if (*input_it == switch_op-&gt;outputs[nonselected_output_index]) {\n        // Let us guard our assumption that only Merge nodes consume the outputs\n        // of Switch nodes:\n        CHECK(other_op-&gt;type == OperatorType::kTensorFlowMerge);  //ASSERTION CAUSING THE BOUNCE\n        input_it = other_op-&gt;inputs.erase(input_it);\n      } else {\n        ++input_it;\n      }\n    }\n  }\n\n</code></pre>\n<p>One approach I have tried is to comment that out the line, but seems it's an important check for another codeline, hence it's required to pass. For now, I worked using the tfmobile approach instead, as I look futher to how my architecture can be refactored to meet the merge requirements.</p>", "body_text": "Hi @Kayoku ,\nTried to check the source code and found out it's one of the assertions causing the error.\n// There remains to handle the edges that were pointing to the nonselected\n  // output. We will just discard those edges. Concretely, at the moment,\n  // our only examples of graphs with Switch nodes have them feeding into Merge\n  // nodes, so what we're saying here is that we'll make the convention,\n  // in our toco internal representation, that Merge nodes with only 1 input\n  // are Merge nodes that have been resolved already and should be have as\n  // Identity nodes, simply forwarding their input.\n  //\n  for (const auto& other_op : model->operators) {\n    auto input_it = other_op->inputs.begin();\n    while (input_it != other_op->inputs.end()) {\n      if (*input_it == switch_op->outputs[nonselected_output_index]) {\n        // Let us guard our assumption that only Merge nodes consume the outputs\n        // of Switch nodes:\n        CHECK(other_op->type == OperatorType::kTensorFlowMerge);  //ASSERTION CAUSING THE BOUNCE\n        input_it = other_op->inputs.erase(input_it);\n      } else {\n        ++input_it;\n      }\n    }\n  }\n\n\nOne approach I have tried is to comment that out the line, but seems it's an important check for another codeline, hence it's required to pass. For now, I worked using the tfmobile approach instead, as I look futher to how my architecture can be refactored to meet the merge requirements.", "body": "Hi @Kayoku ,\r\n\r\nTried to check the source code and found out it's one of the assertions causing the error. \r\n```\r\n// There remains to handle the edges that were pointing to the nonselected\r\n  // output. We will just discard those edges. Concretely, at the moment,\r\n  // our only examples of graphs with Switch nodes have them feeding into Merge\r\n  // nodes, so what we're saying here is that we'll make the convention,\r\n  // in our toco internal representation, that Merge nodes with only 1 input\r\n  // are Merge nodes that have been resolved already and should be have as\r\n  // Identity nodes, simply forwarding their input.\r\n  //\r\n  for (const auto& other_op : model->operators) {\r\n    auto input_it = other_op->inputs.begin();\r\n    while (input_it != other_op->inputs.end()) {\r\n      if (*input_it == switch_op->outputs[nonselected_output_index]) {\r\n        // Let us guard our assumption that only Merge nodes consume the outputs\r\n        // of Switch nodes:\r\n        CHECK(other_op->type == OperatorType::kTensorFlowMerge);  //ASSERTION CAUSING THE BOUNCE\r\n        input_it = other_op->inputs.erase(input_it);\r\n      } else {\r\n        ++input_it;\r\n      }\r\n    }\r\n  }\r\n\r\n```\r\nOne approach I have tried is to comment that out the line, but seems it's an important check for another codeline, hence it's required to pass. For now, I worked using the tfmobile approach instead, as I look futher to how my architecture can be refactored to meet the merge requirements."}