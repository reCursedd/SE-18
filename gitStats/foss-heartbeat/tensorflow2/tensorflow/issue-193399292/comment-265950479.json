{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/265950479", "html_url": "https://github.com/tensorflow/tensorflow/issues/6072#issuecomment-265950479", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6072", "id": 265950479, "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTk1MDQ3OQ==", "user": {"login": "robotnc", "id": 18507467, "node_id": "MDQ6VXNlcjE4NTA3NDY3", "avatar_url": "https://avatars1.githubusercontent.com/u/18507467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robotnc", "html_url": "https://github.com/robotnc", "followers_url": "https://api.github.com/users/robotnc/followers", "following_url": "https://api.github.com/users/robotnc/following{/other_user}", "gists_url": "https://api.github.com/users/robotnc/gists{/gist_id}", "starred_url": "https://api.github.com/users/robotnc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robotnc/subscriptions", "organizations_url": "https://api.github.com/users/robotnc/orgs", "repos_url": "https://api.github.com/users/robotnc/repos", "events_url": "https://api.github.com/users/robotnc/events{/privacy}", "received_events_url": "https://api.github.com/users/robotnc/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-09T07:23:53Z", "updated_at": "2016-12-09T07:24:46Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1034716\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zhangyaobit\">@zhangyaobit</a> Yeah, it looks cool. I think I need some time to recompile and have a try, because I am not so familiar with how to patch,compile and etc.</p>\n<p>And one more question, I see the function below:</p>\n<pre><code>def params_to_canonical(self, params):\n    \"\"\"Converts params from a specific format of cuDNN to the canonical format.\n    ...\n    return weights, biases\n</code></pre>\n<p>If the RNN is multi-layer, how can I get the weights and bias for each layer? Because I need to convert the model to an embedded system where a new model will be  re-contructed with each layer's weights and bias.</p>", "body_text": "@zhangyaobit Yeah, it looks cool. I think I need some time to recompile and have a try, because I am not so familiar with how to patch,compile and etc.\nAnd one more question, I see the function below:\ndef params_to_canonical(self, params):\n    \"\"\"Converts params from a specific format of cuDNN to the canonical format.\n    ...\n    return weights, biases\n\nIf the RNN is multi-layer, how can I get the weights and bias for each layer? Because I need to convert the model to an embedded system where a new model will be  re-contructed with each layer's weights and bias.", "body": "@zhangyaobit Yeah, it looks cool. I think I need some time to recompile and have a try, because I am not so familiar with how to patch,compile and etc.\r\n\r\nAnd one more question, I see the function below:\r\n\r\n    def params_to_canonical(self, params):\r\n        \"\"\"Converts params from a specific format of cuDNN to the canonical format.\r\n        ...\r\n        return weights, biases\r\n\r\nIf the RNN is multi-layer, how can I get the weights and bias for each layer? Because I need to convert the model to an embedded system where a new model will be  re-contructed with each layer's weights and bias."}