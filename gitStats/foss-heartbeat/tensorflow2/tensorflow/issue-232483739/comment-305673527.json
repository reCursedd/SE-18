{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/305673527", "html_url": "https://github.com/tensorflow/tensorflow/issues/10311#issuecomment-305673527", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10311", "id": 305673527, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTY3MzUyNw==", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-02T02:37:30Z", "updated_at": "2017-06-02T02:37:30Z", "author_association": "MEMBER", "body_html": "<p>Actually, on further reflection - while this discrepancy is unfortunate - I don't think it is worth fixing.</p>\n<p>We have to maintain backward compatibility of the API for all 1.x releases. In order to accept either the old or new arguments as named parameters, the signature of <code>conv1d</code> will have to change from:</p>\n<pre><code> def conv1d(value, filters, stride, padding,                                                                                                  \n           use_cudnn_on_gpu=None, data_format=None,\n           name=None)\n</code></pre>\n<p>to something like:</p>\n<pre><code>def conv1d(value=None, filters=None, stride=None, padding=None,                                                                                                  \n           use_cudnn_on_gpu=None, data_format=None,\n           name=None, input=None, filter=None, strides=None)\n</code></pre>\n<p>With a bunch of logic in the new function to ensure that:</p>\n<ul>\n<li>At least one of <code>input</code> or <code>value</code> is not <code>None</code></li>\n<li>Same for one of <code>filter</code> or <code>filters</code> and one of <code>stride</code> or <code>strides</code></li>\n<li><code>padding</code> is not <code>None</code></li>\n<li>If <code>value</code> is specified, prefer that over <code>input</code><br>\netc.</li>\n</ul>\n<p>I fear that doing so will add more confusion than it helps resolve.</p>\n<p>Given that, I'm proposing that we live with this unfortunate historical artifact.</p>\n<p>Let me know if anyone feels particularly strongly, otherwise I'll go ahead and close this issue in a day or two.</p>", "body_text": "Actually, on further reflection - while this discrepancy is unfortunate - I don't think it is worth fixing.\nWe have to maintain backward compatibility of the API for all 1.x releases. In order to accept either the old or new arguments as named parameters, the signature of conv1d will have to change from:\n def conv1d(value, filters, stride, padding,                                                                                                  \n           use_cudnn_on_gpu=None, data_format=None,\n           name=None)\n\nto something like:\ndef conv1d(value=None, filters=None, stride=None, padding=None,                                                                                                  \n           use_cudnn_on_gpu=None, data_format=None,\n           name=None, input=None, filter=None, strides=None)\n\nWith a bunch of logic in the new function to ensure that:\n\nAt least one of input or value is not None\nSame for one of filter or filters and one of stride or strides\npadding is not None\nIf value is specified, prefer that over input\netc.\n\nI fear that doing so will add more confusion than it helps resolve.\nGiven that, I'm proposing that we live with this unfortunate historical artifact.\nLet me know if anyone feels particularly strongly, otherwise I'll go ahead and close this issue in a day or two.", "body": "Actually, on further reflection - while this discrepancy is unfortunate - I don't think it is worth fixing.\r\n\r\nWe have to maintain backward compatibility of the API for all 1.x releases. In order to accept either the old or new arguments as named parameters, the signature of `conv1d` will have to change from:\r\n\r\n```\r\n def conv1d(value, filters, stride, padding,                                                                                                  \r\n           use_cudnn_on_gpu=None, data_format=None,\r\n           name=None)\r\n```\r\n\r\nto something like:\r\n\r\n```\r\ndef conv1d(value=None, filters=None, stride=None, padding=None,                                                                                                  \r\n           use_cudnn_on_gpu=None, data_format=None,\r\n           name=None, input=None, filter=None, strides=None)\r\n```\r\n\r\nWith a bunch of logic in the new function to ensure that:\r\n- At least one of `input` or `value` is not `None`\r\n- Same for one of `filter` or `filters` and one of `stride` or `strides`\r\n- `padding` is not `None`\r\n- If `value` is specified, prefer that over `input`\r\netc.\r\n\r\nI fear that doing so will add more confusion than it helps resolve.\r\n\r\nGiven that, I'm proposing that we live with this unfortunate historical artifact.\r\n\r\nLet me know if anyone feels particularly strongly, otherwise I'll go ahead and close this issue in a day or two."}