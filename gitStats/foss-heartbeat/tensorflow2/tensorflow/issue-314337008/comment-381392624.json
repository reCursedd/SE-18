{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/381392624", "html_url": "https://github.com/tensorflow/tensorflow/issues/18518#issuecomment-381392624", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18518", "id": 381392624, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTM5MjYyNA==", "user": {"login": "kiariendegwa", "id": 10239248, "node_id": "MDQ6VXNlcjEwMjM5MjQ4", "avatar_url": "https://avatars2.githubusercontent.com/u/10239248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kiariendegwa", "html_url": "https://github.com/kiariendegwa", "followers_url": "https://api.github.com/users/kiariendegwa/followers", "following_url": "https://api.github.com/users/kiariendegwa/following{/other_user}", "gists_url": "https://api.github.com/users/kiariendegwa/gists{/gist_id}", "starred_url": "https://api.github.com/users/kiariendegwa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kiariendegwa/subscriptions", "organizations_url": "https://api.github.com/users/kiariendegwa/orgs", "repos_url": "https://api.github.com/users/kiariendegwa/repos", "events_url": "https://api.github.com/users/kiariendegwa/events{/privacy}", "received_events_url": "https://api.github.com/users/kiariendegwa/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-15T09:28:13Z", "updated_at": "2018-04-15T13:14:36Z", "author_association": "NONE", "body_html": "<h1>1. System information</h1>\n<p>To add onto <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3248329\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/several27\">@several27</a>'s earlier post.<br>\nThe example of the <strong>Universal Sentence Encoder Colaboratory</strong> notebook does not work. This notebook can be found using this link:<br>\n<code>https://colab.research.google.com/github/tensorflow/hub/blob/r0.1/examples/colab/semantic_similarity_with_tf_hub_universal_encoder.ipynb </code></p>\n<h1>2. Describe the problem</h1>\n<p>The following error is thrown when all cells are run on the notebook using the <code>Ctrl+F9</code> command.</p>\n<p><code>KeyError: \"The name 'global_step:0' refers to a Tensor which does not exist. The operation, 'global_step', does not exist in the graph.\"</code></p>\n<h1>3. Source code / logs:</h1>\n<pre lang=\"INFO:tensorflow:Using\" data-meta=\"/tmp/tfhub_modules to cache modules.\"><code>WARNING:tensorflow:cannot use a string pattern on a bytes-like object\n---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\n&lt;ipython-input-4-e136a80b7068&gt; in &lt;module&gt;()\n----&gt; 1 embed = hub.Module(\"https://tfhub.dev/google/universal-sentence-encoder/1\")\n      2 \n      3 # Compute a representation for each message, showing various lengths supported.\n      4 word = \"Elephant\"\n      5 sentence = \"I am a sentence for which I would like to get its embedding.\"\n\n/usr/local/lib/python3.6/dist-packages/tensorflow_hub/module.py in __init__(self, spec, trainable, name, tags)\n    124           name=self._name,\n    125           trainable=self._trainable,\n--&gt; 126           tags=self._tags)\n    127       # pylint: enable=protected-access\n    128 \n\n/usr/local/lib/python3.6/dist-packages/tensorflow_hub/native_module.py in _create_impl(self, name, trainable, tags)\n    280         trainable=trainable,\n    281         checkpoint_path=self._checkpoint_variables_path,\n--&gt; 282         name=name)\n    283 \n    284   def _export(self, path, variables_saver):\n\n/usr/local/lib/python3.6/dist-packages/tensorflow_hub/native_module.py in __init__(self, spec, meta_graph, trainable, checkpoint_path, name)\n    331     # TPU training code.\n    332     with tf.control_dependencies(None):\n--&gt; 333       variable_tensor_map, self._state_map = self._create_state_graph(name)\n    334       self._variable_map = recover_partitioned_variable_map(\n    335           get_node_map_from_tensor_map(variable_tensor_map)\n\n/usr/local/lib/python3.6/dist-packages/tensorflow_hub/native_module.py in _create_state_graph(self, name)\n    398     state_op_names = list_registered_stateful_ops_without_inputs()\n    399     state_map = get_state_map(self._meta_graph, state_op_names, set(),\n--&gt; 400                               _get_tensor)\n    401 \n    402     return variables_tensor_map, state_map\n\n/usr/local/lib/python3.6/dist-packages/tensorflow_hub/native_module.py in get_state_map(meta_graph, state_ops, unsupported_state_ops, get_tensor_by_name)\n    533     if node.op in state_ops:\n    534       tensor_name = node.name + \":0\"\n--&gt; 535       state_map[tensor_name] = get_tensor_by_name(tensor_name)\n    536     if node.op in unsupported_state_ops:\n    537       raise ValueError(\"Unsupported stateful op: %s\" % node.op)\n\n/usr/local/lib/python3.6/dist-packages/tensorflow_hub/native_module.py in _get_tensor(tensor_name)\n    394     def _get_tensor(tensor_name):\n    395       return self._graph.get_tensor_by_name(\n--&gt; 396           prepend_name_scope(tensor_name, import_scope=absolute_scope_name))\n    397 \n    398     state_op_names = list_registered_stateful_ops_without_inputs()\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py in get_tensor_by_name(self, name)\n   3764       raise TypeError(\"Tensor names are strings (or similar), not %s.\" %\n   3765                       type(name).__name__)\n-&gt; 3766     return self.as_graph_element(name, allow_tensor=True, allow_operation=False)\n   3767 \n   3768   def _get_tensor_by_tf_output(self, tf_output):\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py in as_graph_element(self, obj, allow_tensor, allow_operation)\n   3588 \n   3589     with self._lock:\n-&gt; 3590       return self._as_graph_element_locked(obj, allow_tensor, allow_operation)\n   3591 \n   3592   def _as_graph_element_locked(self, obj, allow_tensor, allow_operation):\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py in _as_graph_element_locked(self, obj, allow_tensor, allow_operation)\n   3630           raise KeyError(\"The name %s refers to a Tensor which does not \"\n   3631                          \"exist. The operation, %s, does not exist in the \"\n-&gt; 3632                          \"graph.\" % (repr(name), repr(op_name)))\n   3633         try:\n   3634           return op.outputs[out_n]\n\nKeyError: \"The name 'global_step:0' refers to a Tensor which does not exist. The operation, 'global_step', does not exist in the graph.\"\n</code></pre>\n<h1>2 Have I written custom code</h1>\n<p>No custom code written or added to original Colaboratory notebook.</p>\n<h1>3. OS Platform and Distribution</h1>\n<p>Unkown.<br>\nColab notebook and environment provided by this link <code>https://colab.research.google.com/github/tensorflow/hub/blob/r0.1/examples/colab/semantic_similarity_with_tf_hub_universal_encoder.ipynb</code>.</p>\n<h1>4. TensorFlow installed from:</h1>\n<p>Pip3</p>\n<h1>5. TensorFlow version:</h1>\n<p>Version 1.7 + nightly build</p>\n<h1>6. Bazel version:</h1>\n<p>Not installed from Bazel</p>\n<h1>7 CUDA/cuDNN version:</h1>\n<p>Standard version on Colab notebook - unchanged</p>\n<h1>8.  GPU model and memory:</h1>\n<p>k80 GPU and 13GB RAM.</p>\n<h1>9. Exact command to reproduce:</h1>\n<p>Go onto link below:<br>\n<code> https://colab.research.google.com/github/tensorflow/hub/blob/r0.1/examples/colab/semantic_similarity_with_tf_hub_universal_encoder.ipynb</code> and then press <code>Ctrl+F9</code></p>", "body_text": "1. System information\nTo add onto @several27's earlier post.\nThe example of the Universal Sentence Encoder Colaboratory notebook does not work. This notebook can be found using this link:\nhttps://colab.research.google.com/github/tensorflow/hub/blob/r0.1/examples/colab/semantic_similarity_with_tf_hub_universal_encoder.ipynb \n2. Describe the problem\nThe following error is thrown when all cells are run on the notebook using the Ctrl+F9 command.\nKeyError: \"The name 'global_step:0' refers to a Tensor which does not exist. The operation, 'global_step', does not exist in the graph.\"\n3. Source code / logs:\nWARNING:tensorflow:cannot use a string pattern on a bytes-like object\n---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\n<ipython-input-4-e136a80b7068> in <module>()\n----> 1 embed = hub.Module(\"https://tfhub.dev/google/universal-sentence-encoder/1\")\n      2 \n      3 # Compute a representation for each message, showing various lengths supported.\n      4 word = \"Elephant\"\n      5 sentence = \"I am a sentence for which I would like to get its embedding.\"\n\n/usr/local/lib/python3.6/dist-packages/tensorflow_hub/module.py in __init__(self, spec, trainable, name, tags)\n    124           name=self._name,\n    125           trainable=self._trainable,\n--> 126           tags=self._tags)\n    127       # pylint: enable=protected-access\n    128 \n\n/usr/local/lib/python3.6/dist-packages/tensorflow_hub/native_module.py in _create_impl(self, name, trainable, tags)\n    280         trainable=trainable,\n    281         checkpoint_path=self._checkpoint_variables_path,\n--> 282         name=name)\n    283 \n    284   def _export(self, path, variables_saver):\n\n/usr/local/lib/python3.6/dist-packages/tensorflow_hub/native_module.py in __init__(self, spec, meta_graph, trainable, checkpoint_path, name)\n    331     # TPU training code.\n    332     with tf.control_dependencies(None):\n--> 333       variable_tensor_map, self._state_map = self._create_state_graph(name)\n    334       self._variable_map = recover_partitioned_variable_map(\n    335           get_node_map_from_tensor_map(variable_tensor_map)\n\n/usr/local/lib/python3.6/dist-packages/tensorflow_hub/native_module.py in _create_state_graph(self, name)\n    398     state_op_names = list_registered_stateful_ops_without_inputs()\n    399     state_map = get_state_map(self._meta_graph, state_op_names, set(),\n--> 400                               _get_tensor)\n    401 \n    402     return variables_tensor_map, state_map\n\n/usr/local/lib/python3.6/dist-packages/tensorflow_hub/native_module.py in get_state_map(meta_graph, state_ops, unsupported_state_ops, get_tensor_by_name)\n    533     if node.op in state_ops:\n    534       tensor_name = node.name + \":0\"\n--> 535       state_map[tensor_name] = get_tensor_by_name(tensor_name)\n    536     if node.op in unsupported_state_ops:\n    537       raise ValueError(\"Unsupported stateful op: %s\" % node.op)\n\n/usr/local/lib/python3.6/dist-packages/tensorflow_hub/native_module.py in _get_tensor(tensor_name)\n    394     def _get_tensor(tensor_name):\n    395       return self._graph.get_tensor_by_name(\n--> 396           prepend_name_scope(tensor_name, import_scope=absolute_scope_name))\n    397 \n    398     state_op_names = list_registered_stateful_ops_without_inputs()\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py in get_tensor_by_name(self, name)\n   3764       raise TypeError(\"Tensor names are strings (or similar), not %s.\" %\n   3765                       type(name).__name__)\n-> 3766     return self.as_graph_element(name, allow_tensor=True, allow_operation=False)\n   3767 \n   3768   def _get_tensor_by_tf_output(self, tf_output):\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py in as_graph_element(self, obj, allow_tensor, allow_operation)\n   3588 \n   3589     with self._lock:\n-> 3590       return self._as_graph_element_locked(obj, allow_tensor, allow_operation)\n   3591 \n   3592   def _as_graph_element_locked(self, obj, allow_tensor, allow_operation):\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py in _as_graph_element_locked(self, obj, allow_tensor, allow_operation)\n   3630           raise KeyError(\"The name %s refers to a Tensor which does not \"\n   3631                          \"exist. The operation, %s, does not exist in the \"\n-> 3632                          \"graph.\" % (repr(name), repr(op_name)))\n   3633         try:\n   3634           return op.outputs[out_n]\n\nKeyError: \"The name 'global_step:0' refers to a Tensor which does not exist. The operation, 'global_step', does not exist in the graph.\"\n\n2 Have I written custom code\nNo custom code written or added to original Colaboratory notebook.\n3. OS Platform and Distribution\nUnkown.\nColab notebook and environment provided by this link https://colab.research.google.com/github/tensorflow/hub/blob/r0.1/examples/colab/semantic_similarity_with_tf_hub_universal_encoder.ipynb.\n4. TensorFlow installed from:\nPip3\n5. TensorFlow version:\nVersion 1.7 + nightly build\n6. Bazel version:\nNot installed from Bazel\n7 CUDA/cuDNN version:\nStandard version on Colab notebook - unchanged\n8.  GPU model and memory:\nk80 GPU and 13GB RAM.\n9. Exact command to reproduce:\nGo onto link below:\n https://colab.research.google.com/github/tensorflow/hub/blob/r0.1/examples/colab/semantic_similarity_with_tf_hub_universal_encoder.ipynb and then press Ctrl+F9", "body": "# 1. System information\r\nTo add onto @several27's earlier post.\r\nThe example of the **Universal Sentence Encoder Colaboratory** notebook does not work. This notebook can be found using this link:\r\n ```https://colab.research.google.com/github/tensorflow/hub/blob/r0.1/examples/colab/semantic_similarity_with_tf_hub_universal_encoder.ipynb ```\r\n# 2. Describe the problem\r\nThe following error is thrown when all cells are run on the notebook using the ```Ctrl+F9``` command.\r\n\r\n``` KeyError: \"The name 'global_step:0' refers to a Tensor which does not exist. The operation, 'global_step', does not exist in the graph.\" ```\r\n\r\n# 3. Source code / logs:\r\n\r\n```  INFO:tensorflow:Using /tmp/tfhub_modules to cache modules.\r\nWARNING:tensorflow:cannot use a string pattern on a bytes-like object\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\n<ipython-input-4-e136a80b7068> in <module>()\r\n----> 1 embed = hub.Module(\"https://tfhub.dev/google/universal-sentence-encoder/1\")\r\n      2 \r\n      3 # Compute a representation for each message, showing various lengths supported.\r\n      4 word = \"Elephant\"\r\n      5 sentence = \"I am a sentence for which I would like to get its embedding.\"\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow_hub/module.py in __init__(self, spec, trainable, name, tags)\r\n    124           name=self._name,\r\n    125           trainable=self._trainable,\r\n--> 126           tags=self._tags)\r\n    127       # pylint: enable=protected-access\r\n    128 \r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow_hub/native_module.py in _create_impl(self, name, trainable, tags)\r\n    280         trainable=trainable,\r\n    281         checkpoint_path=self._checkpoint_variables_path,\r\n--> 282         name=name)\r\n    283 \r\n    284   def _export(self, path, variables_saver):\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow_hub/native_module.py in __init__(self, spec, meta_graph, trainable, checkpoint_path, name)\r\n    331     # TPU training code.\r\n    332     with tf.control_dependencies(None):\r\n--> 333       variable_tensor_map, self._state_map = self._create_state_graph(name)\r\n    334       self._variable_map = recover_partitioned_variable_map(\r\n    335           get_node_map_from_tensor_map(variable_tensor_map)\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow_hub/native_module.py in _create_state_graph(self, name)\r\n    398     state_op_names = list_registered_stateful_ops_without_inputs()\r\n    399     state_map = get_state_map(self._meta_graph, state_op_names, set(),\r\n--> 400                               _get_tensor)\r\n    401 \r\n    402     return variables_tensor_map, state_map\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow_hub/native_module.py in get_state_map(meta_graph, state_ops, unsupported_state_ops, get_tensor_by_name)\r\n    533     if node.op in state_ops:\r\n    534       tensor_name = node.name + \":0\"\r\n--> 535       state_map[tensor_name] = get_tensor_by_name(tensor_name)\r\n    536     if node.op in unsupported_state_ops:\r\n    537       raise ValueError(\"Unsupported stateful op: %s\" % node.op)\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow_hub/native_module.py in _get_tensor(tensor_name)\r\n    394     def _get_tensor(tensor_name):\r\n    395       return self._graph.get_tensor_by_name(\r\n--> 396           prepend_name_scope(tensor_name, import_scope=absolute_scope_name))\r\n    397 \r\n    398     state_op_names = list_registered_stateful_ops_without_inputs()\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py in get_tensor_by_name(self, name)\r\n   3764       raise TypeError(\"Tensor names are strings (or similar), not %s.\" %\r\n   3765                       type(name).__name__)\r\n-> 3766     return self.as_graph_element(name, allow_tensor=True, allow_operation=False)\r\n   3767 \r\n   3768   def _get_tensor_by_tf_output(self, tf_output):\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py in as_graph_element(self, obj, allow_tensor, allow_operation)\r\n   3588 \r\n   3589     with self._lock:\r\n-> 3590       return self._as_graph_element_locked(obj, allow_tensor, allow_operation)\r\n   3591 \r\n   3592   def _as_graph_element_locked(self, obj, allow_tensor, allow_operation):\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py in _as_graph_element_locked(self, obj, allow_tensor, allow_operation)\r\n   3630           raise KeyError(\"The name %s refers to a Tensor which does not \"\r\n   3631                          \"exist. The operation, %s, does not exist in the \"\r\n-> 3632                          \"graph.\" % (repr(name), repr(op_name)))\r\n   3633         try:\r\n   3634           return op.outputs[out_n]\r\n\r\nKeyError: \"The name 'global_step:0' refers to a Tensor which does not exist. The operation, 'global_step', does not exist in the graph.\"\r\n```\r\n# 2 Have I written custom code\r\nNo custom code written or added to original Colaboratory notebook.\r\n# 3. OS Platform and Distribution\r\nUnkown.\r\nColab notebook and environment provided by this link ```https://colab.research.google.com/github/tensorflow/hub/blob/r0.1/examples/colab/semantic_similarity_with_tf_hub_universal_encoder.ipynb```. \r\n# 4. TensorFlow installed from:\r\nPip3\r\n# 5. TensorFlow version: \r\nVersion 1.7 + nightly build\r\n# 6. Bazel version: \r\nNot installed from Bazel\r\n# 7 CUDA/cuDNN version: \r\nStandard version on Colab notebook - unchanged\r\n# 8.  GPU model and memory: \r\nk80 GPU and 13GB RAM.\r\n# 9. Exact command to reproduce:\r\nGo onto link below:\r\n``` https://colab.research.google.com/github/tensorflow/hub/blob/r0.1/examples/colab/semantic_similarity_with_tf_hub_universal_encoder.ipynb``` and then press ```Ctrl+F9```"}