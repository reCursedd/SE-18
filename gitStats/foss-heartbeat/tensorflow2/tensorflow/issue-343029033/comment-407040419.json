{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/407040419", "html_url": "https://github.com/tensorflow/tensorflow/issues/20990#issuecomment-407040419", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20990", "id": 407040419, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzA0MDQxOQ==", "user": {"login": "Jylomaki", "id": 16537704, "node_id": "MDQ6VXNlcjE2NTM3NzA0", "avatar_url": "https://avatars2.githubusercontent.com/u/16537704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jylomaki", "html_url": "https://github.com/Jylomaki", "followers_url": "https://api.github.com/users/Jylomaki/followers", "following_url": "https://api.github.com/users/Jylomaki/following{/other_user}", "gists_url": "https://api.github.com/users/Jylomaki/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jylomaki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jylomaki/subscriptions", "organizations_url": "https://api.github.com/users/Jylomaki/orgs", "repos_url": "https://api.github.com/users/Jylomaki/repos", "events_url": "https://api.github.com/users/Jylomaki/events{/privacy}", "received_events_url": "https://api.github.com/users/Jylomaki/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-23T12:26:33Z", "updated_at": "2018-07-23T12:26:33Z", "author_association": "NONE", "body_html": "<p>Ok, it seems after a lot a trying i found the issue:<br>\nThe import of the frozen graph return <strong>Nodes</strong> and not tensor.<br>\nSo in order to get a result out by running it, you must pass a <code>node.values()</code>  to the <code>sess.run()</code>.</p>\n<p>This seems to be due to the fact that the converter takes node as parameter for outputs. I use <code>split(:)[0]</code> to remove the index ouput to turn <code>Tensor name</code> into <code>Node name</code>. And the import return <code>Operation</code> and not <code>Tensor</code>.</p>\n<p>As said by the doc of Session.run():</p>\n<pre><code>run(\n    fetches,\n    feed_dict=None,\n    options=None,\n   run_metadata=None\n)\n</code></pre>\n<blockquote>\n<p>The fetches argument may be a single graph element, or an arbitrarily nested list, tuple, namedtuple, dict, or OrderedDict containing graph elements at its leaves. A graph element can be one of the following types:</p>\n<pre><code>An tf.Operation. The corresponding fetched value will be None. [...]\n</code></pre>\n</blockquote>\n<p>I don't quite understand the point of using such way of handling <code>operation</code> by tensorflow. As not raising an exception and returning <code>None</code> mislead debug attempts...</p>", "body_text": "Ok, it seems after a lot a trying i found the issue:\nThe import of the frozen graph return Nodes and not tensor.\nSo in order to get a result out by running it, you must pass a node.values()  to the sess.run().\nThis seems to be due to the fact that the converter takes node as parameter for outputs. I use split(:)[0] to remove the index ouput to turn Tensor name into Node name. And the import return Operation and not Tensor.\nAs said by the doc of Session.run():\nrun(\n    fetches,\n    feed_dict=None,\n    options=None,\n   run_metadata=None\n)\n\n\nThe fetches argument may be a single graph element, or an arbitrarily nested list, tuple, namedtuple, dict, or OrderedDict containing graph elements at its leaves. A graph element can be one of the following types:\nAn tf.Operation. The corresponding fetched value will be None. [...]\n\n\nI don't quite understand the point of using such way of handling operation by tensorflow. As not raising an exception and returning None mislead debug attempts...", "body": "Ok, it seems after a lot a trying i found the issue:\r\nThe import of the frozen graph return **Nodes** and not tensor.\r\nSo in order to get a result out by running it, you must pass a `node.values()`  to the `sess.run()`.\r\n\r\nThis seems to be due to the fact that the converter takes node as parameter for outputs. I use `split(:)[0]` to remove the index ouput to turn `Tensor name` into `Node name`. And the import return `Operation` and not `Tensor`.\r\n\r\nAs said by the doc of Session.run():\r\n\r\n```\r\nrun(\r\n    fetches,\r\n    feed_dict=None,\r\n    options=None,\r\n   run_metadata=None\r\n)\r\n```\r\n> The fetches argument may be a single graph element, or an arbitrarily nested list, tuple, namedtuple, dict, or OrderedDict containing graph elements at its leaves. A graph element can be one of the following types:\r\n> \r\n>     An tf.Operation. The corresponding fetched value will be None. [...]\r\n\r\nI don't quite understand the point of using such way of handling `operation` by tensorflow. As not raising an exception and returning `None` mislead debug attempts..."}