{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23107", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23107/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23107/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23107/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23107", "id": 372035464, "node_id": "MDU6SXNzdWUzNzIwMzU0NjQ=", "number": 23107, "title": "Number of elements was larger than representable by 32-bit output type", "user": {"login": "tonyreina", "id": 37851530, "node_id": "MDQ6VXNlcjM3ODUxNTMw", "avatar_url": "https://avatars3.githubusercontent.com/u/37851530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tonyreina", "html_url": "https://github.com/tonyreina", "followers_url": "https://api.github.com/users/tonyreina/followers", "following_url": "https://api.github.com/users/tonyreina/following{/other_user}", "gists_url": "https://api.github.com/users/tonyreina/gists{/gist_id}", "starred_url": "https://api.github.com/users/tonyreina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tonyreina/subscriptions", "organizations_url": "https://api.github.com/users/tonyreina/orgs", "repos_url": "https://api.github.com/users/tonyreina/repos", "events_url": "https://api.github.com/users/tonyreina/events{/privacy}", "received_events_url": "https://api.github.com/users/tonyreina/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ymodak", "id": 42785357, "node_id": "MDQ6VXNlcjQyNzg1MzU3", "avatar_url": "https://avatars1.githubusercontent.com/u/42785357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ymodak", "html_url": "https://github.com/ymodak", "followers_url": "https://api.github.com/users/ymodak/followers", "following_url": "https://api.github.com/users/ymodak/following{/other_user}", "gists_url": "https://api.github.com/users/ymodak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ymodak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ymodak/subscriptions", "organizations_url": "https://api.github.com/users/ymodak/orgs", "repos_url": "https://api.github.com/users/ymodak/repos", "events_url": "https://api.github.com/users/ymodak/events{/privacy}", "received_events_url": "https://api.github.com/users/ymodak/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ymodak", "id": 42785357, "node_id": "MDQ6VXNlcjQyNzg1MzU3", "avatar_url": "https://avatars1.githubusercontent.com/u/42785357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ymodak", "html_url": "https://github.com/ymodak", "followers_url": "https://api.github.com/users/ymodak/followers", "following_url": "https://api.github.com/users/ymodak/following{/other_user}", "gists_url": "https://api.github.com/users/ymodak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ymodak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ymodak/subscriptions", "organizations_url": "https://api.github.com/users/ymodak/orgs", "repos_url": "https://api.github.com/users/ymodak/repos", "events_url": "https://api.github.com/users/ymodak/events{/privacy}", "received_events_url": "https://api.github.com/users/ymodak/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-10-19T16:48:33Z", "updated_at": "2018-11-01T19:16:36Z", "closed_at": "2018-11-01T18:59:46Z", "author_association": "NONE", "body_html": "<p><strong>System information</strong></p>\n<ul>\n<li>Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes</li>\n<li>OS Platform and Distribution (e.g., Linux Ubuntu 16.04): CentOS Linux release 7.5.1804 (Core)</li>\n<li>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A</li>\n<li>TensorFlow installed from (source or binary): Source</li>\n<li>TensorFlow version (use command below): 1.11.0,  v1.11.0-0-gc19e29306c</li>\n<li>Python version: Python 3.7.0 (default, Jun 28 2018, 13:15:42)</li>\n<li>Bazel version (if compiling from source): Build label: 0.18.0- (@non-git)</li>\n<li>GCC/Compiler version (if compiling from source): gcc version 4.8.5 20150623 (Red Hat 4.8.5-28) (GCC)</li>\n<li>CUDA/cuDNN version: N/A</li>\n<li>GPU model and memory: N/A</li>\n</ul>\n<p><strong>Describe the current behavior</strong></p>\n<p>I'm training a 3D U-Net model with a tensor size of 128x128x128x1 in order to develop models for brain MRIs. It works for a batch size of 8 and less. When I move to a batch size of 16, the size is larger than the int32 index can handle. I have sufficient RAM (384 GB) to allocate the tensors because I can run 2 such processes on the machine without a problem. The error is:</p>\n<pre><code>tensorflow.python.framework.errors_impl.InvalidArgumentError: Number of elements was larger than representable by 32-bit output type\n            [[{{node training/Adam/gradients/batch_normalization_2/moments/mean_grad/Prod}} = Size[T=DT_FLOAT, _class=[\"loc:@training/Adam/gradients/batch_normalization_2/moments/mean_grad/truediv\"], out_type=DT_INT32, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](conv1b/add, ^training/Adam/gradients/batch_normalization_2/moments/mean_grad/Shape)]]\n</code></pre>\n<p><strong>Describe the expected behavior</strong><br>\nIt should be able to handle larger tensors and batch sizes.</p>\n<p><strong>Exact command to reproduce</strong><br>\n<code>python benchmark_model.py --dim_length 128 --bz 16</code></p>\n<p><strong>Code to reproduce the issue</strong><br>\nI have test code here:  <a href=\"https://github.com/NervanaSystems/topologies/tree/master/3D_UNet\">https://github.com/NervanaSystems/topologies/tree/master/3D_UNet</a></p>\n<p><code>python benchmark_model.py --dim_length 128 --bz 8</code> will work<br>\n<code>python benchmark_model.py --dim_length 128 --bz 16</code> will give error</p>\n<p><strong>Other info / logs</strong><br>\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.</p>\n<pre lang=\"...which\" data-meta=\"was originally created as op 'batch_normalization_2/moments/mean', defined at:\"><code>  File \"benchmark_model.py\", line 108, in &lt;module&gt;\n    print_summary=args.print_model)\n  File \"/home/bduser/topologies/3D_UNet/model.py\", line 96, in define_model\n    conv1 = K.layers.BatchNormalization()(conv1)\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/keras/engine/base_layer.py\", line 457, in __call__\n    output = self.call(inputs, **kwargs)\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/keras/layers/normalization.py\", line 185, in call\n    epsilon=self.epsilon)\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py\", line 1869, in normalize_batch_in_training\n    epsilon=epsilon)\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py\", line 1750, in _regular_normalize_batch_in_training\n    None, None, False)\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/tensorflow/python/ops/nn_impl.py\", line 690, in moments\n    mean = math_ops.reduce_mean(y, axes, keepdims=True, name=\"mean\")\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py\", line 488, in new_func\n    return func(*args, **kwargs)\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/tensorflow/python/ops/math_ops.py\", line 1492, in reduce_mean\n    name=name))\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/tensorflow/python/ops/gen_math_ops.py\", line 4778, in mean\n    name=name)\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\n    op_def=op_def)\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py\", line 488, in new_func\n    return func(*args, **kwargs)\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 3272, in create_op\n    op_def=op_def)\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 1768, in __init__\n    self._traceback = tf_stack.extract_stack()\n\nInvalidArgumentError (see above for traceback): Number of elements was larger than representable by 32-bit output type\n\t [[{{node gradients/batch_normalization_2/moments/mean_grad/Prod}} = Size[T=DT_FLOAT, out_type=DT_INT32, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](conv1b/add, ^gradients/batch_normalization_2/batchnorm/mul_1_grad/Shape)]]\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): CentOS Linux release 7.5.1804 (Core)\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A\nTensorFlow installed from (source or binary): Source\nTensorFlow version (use command below): 1.11.0,  v1.11.0-0-gc19e29306c\nPython version: Python 3.7.0 (default, Jun 28 2018, 13:15:42)\nBazel version (if compiling from source): Build label: 0.18.0- (@non-git)\nGCC/Compiler version (if compiling from source): gcc version 4.8.5 20150623 (Red Hat 4.8.5-28) (GCC)\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\n\nDescribe the current behavior\nI'm training a 3D U-Net model with a tensor size of 128x128x128x1 in order to develop models for brain MRIs. It works for a batch size of 8 and less. When I move to a batch size of 16, the size is larger than the int32 index can handle. I have sufficient RAM (384 GB) to allocate the tensors because I can run 2 such processes on the machine without a problem. The error is:\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Number of elements was larger than representable by 32-bit output type\n            [[{{node training/Adam/gradients/batch_normalization_2/moments/mean_grad/Prod}} = Size[T=DT_FLOAT, _class=[\"loc:@training/Adam/gradients/batch_normalization_2/moments/mean_grad/truediv\"], out_type=DT_INT32, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](conv1b/add, ^training/Adam/gradients/batch_normalization_2/moments/mean_grad/Shape)]]\n\nDescribe the expected behavior\nIt should be able to handle larger tensors and batch sizes.\nExact command to reproduce\npython benchmark_model.py --dim_length 128 --bz 16\nCode to reproduce the issue\nI have test code here:  https://github.com/NervanaSystems/topologies/tree/master/3D_UNet\npython benchmark_model.py --dim_length 128 --bz 8 will work\npython benchmark_model.py --dim_length 128 --bz 16 will give error\nOther info / logs\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.\n  File \"benchmark_model.py\", line 108, in <module>\n    print_summary=args.print_model)\n  File \"/home/bduser/topologies/3D_UNet/model.py\", line 96, in define_model\n    conv1 = K.layers.BatchNormalization()(conv1)\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/keras/engine/base_layer.py\", line 457, in __call__\n    output = self.call(inputs, **kwargs)\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/keras/layers/normalization.py\", line 185, in call\n    epsilon=self.epsilon)\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py\", line 1869, in normalize_batch_in_training\n    epsilon=epsilon)\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py\", line 1750, in _regular_normalize_batch_in_training\n    None, None, False)\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/tensorflow/python/ops/nn_impl.py\", line 690, in moments\n    mean = math_ops.reduce_mean(y, axes, keepdims=True, name=\"mean\")\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py\", line 488, in new_func\n    return func(*args, **kwargs)\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/tensorflow/python/ops/math_ops.py\", line 1492, in reduce_mean\n    name=name))\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/tensorflow/python/ops/gen_math_ops.py\", line 4778, in mean\n    name=name)\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\n    op_def=op_def)\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py\", line 488, in new_func\n    return func(*args, **kwargs)\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 3272, in create_op\n    op_def=op_def)\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 1768, in __init__\n    self._traceback = tf_stack.extract_stack()\n\nInvalidArgumentError (see above for traceback): Number of elements was larger than representable by 32-bit output type\n\t [[{{node gradients/batch_normalization_2/moments/mean_grad/Prod}} = Size[T=DT_FLOAT, out_type=DT_INT32, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](conv1b/add, ^gradients/batch_normalization_2/batchnorm/mul_1_grad/Shape)]]", "body": "**System information**\r\n- Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): CentOS Linux release 7.5.1804 (Core)\r\n- Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A\r\n- TensorFlow installed from (source or binary): Source\r\n- TensorFlow version (use command below): 1.11.0,  v1.11.0-0-gc19e29306c\r\n- Python version: Python 3.7.0 (default, Jun 28 2018, 13:15:42)\r\n- Bazel version (if compiling from source): Build label: 0.18.0- (@non-git)\r\n- GCC/Compiler version (if compiling from source): gcc version 4.8.5 20150623 (Red Hat 4.8.5-28) (GCC)\r\n- CUDA/cuDNN version: N/A\r\n- GPU model and memory: N/A\r\n\r\n**Describe the current behavior**\r\n\r\nI'm training a 3D U-Net model with a tensor size of 128x128x128x1 in order to develop models for brain MRIs. It works for a batch size of 8 and less. When I move to a batch size of 16, the size is larger than the int32 index can handle. I have sufficient RAM (384 GB) to allocate the tensors because I can run 2 such processes on the machine without a problem. The error is:\r\n\r\n```\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Number of elements was larger than representable by 32-bit output type\r\n            [[{{node training/Adam/gradients/batch_normalization_2/moments/mean_grad/Prod}} = Size[T=DT_FLOAT, _class=[\"loc:@training/Adam/gradients/batch_normalization_2/moments/mean_grad/truediv\"], out_type=DT_INT32, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](conv1b/add, ^training/Adam/gradients/batch_normalization_2/moments/mean_grad/Shape)]]\r\n```\r\n**Describe the expected behavior**\r\nIt should be able to handle larger tensors and batch sizes.\r\n\r\n**Exact command to reproduce**\r\n`python benchmark_model.py --dim_length 128 --bz 16`\r\n\r\n**Code to reproduce the issue**\r\nI have test code here:  https://github.com/NervanaSystems/topologies/tree/master/3D_UNet\r\n\r\n`python benchmark_model.py --dim_length 128 --bz 8` will work\r\n`python benchmark_model.py --dim_length 128 --bz 16` will give error\r\n\r\n**Other info / logs**\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.\r\n\r\n```...which was originally created as op 'batch_normalization_2/moments/mean', defined at:\r\n  File \"benchmark_model.py\", line 108, in <module>\r\n    print_summary=args.print_model)\r\n  File \"/home/bduser/topologies/3D_UNet/model.py\", line 96, in define_model\r\n    conv1 = K.layers.BatchNormalization()(conv1)\r\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/keras/engine/base_layer.py\", line 457, in __call__\r\n    output = self.call(inputs, **kwargs)\r\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/keras/layers/normalization.py\", line 185, in call\r\n    epsilon=self.epsilon)\r\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py\", line 1869, in normalize_batch_in_training\r\n    epsilon=epsilon)\r\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py\", line 1750, in _regular_normalize_batch_in_training\r\n    None, None, False)\r\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/tensorflow/python/ops/nn_impl.py\", line 690, in moments\r\n    mean = math_ops.reduce_mean(y, axes, keepdims=True, name=\"mean\")\r\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py\", line 488, in new_func\r\n    return func(*args, **kwargs)\r\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/tensorflow/python/ops/math_ops.py\", line 1492, in reduce_mean\r\n    name=name))\r\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/tensorflow/python/ops/gen_math_ops.py\", line 4778, in mean\r\n    name=name)\r\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\r\n    op_def=op_def)\r\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py\", line 488, in new_func\r\n    return func(*args, **kwargs)\r\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 3272, in create_op\r\n    op_def=op_def)\r\n  File \"/home/bduser/anaconda3/envs/tf/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 1768, in __init__\r\n    self._traceback = tf_stack.extract_stack()\r\n\r\nInvalidArgumentError (see above for traceback): Number of elements was larger than representable by 32-bit output type\r\n\t [[{{node gradients/batch_normalization_2/moments/mean_grad/Prod}} = Size[T=DT_FLOAT, out_type=DT_INT32, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](conv1b/add, ^gradients/batch_normalization_2/batchnorm/mul_1_grad/Shape)]]\r\n```\r\n"}