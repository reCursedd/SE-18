{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/387796838", "html_url": "https://github.com/tensorflow/tensorflow/issues/19180#issuecomment-387796838", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19180", "id": 387796838, "node_id": "MDEyOklzc3VlQ29tbWVudDM4Nzc5NjgzOA==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-09T16:26:58Z", "updated_at": "2018-05-09T16:27:19Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The <code>Dataset.from_tensor_slices()</code> method should mostly be a wrapper for <code>tf.constant()</code> (via <code>tf.convert_to_tensor()</code>). Can you please confirm if the following program has the same behavior?</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">import</span> time\n\nimages <span class=\"pl-k\">=</span> tf.keras.datasets.mnist.load_data()[<span class=\"pl-c1\">0</span>][<span class=\"pl-c1\">0</span>]\n\nimagesFloat16 <span class=\"pl-k\">=</span> images.astype(np.float16)<span class=\"pl-bu\">;</span>\nimagesFloat32 <span class=\"pl-k\">=</span> images.astype(np.float32)<span class=\"pl-bu\">;</span>\n\nstart <span class=\"pl-k\">=</span> time.time()\ntf.constant(imagesFloat32)\nend <span class=\"pl-k\">=</span> time.time()\n<span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>float32: <span class=\"pl-c1\">{0<span class=\"pl-k\">:.4f</span>}</span> sec<span class=\"pl-pds\">\"</span></span>.format(end <span class=\"pl-k\">-</span> start))\n\nstart <span class=\"pl-k\">=</span> time.time()\ntf.constant(imagesFloat16)\nend <span class=\"pl-k\">=</span> time.time()\n<span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>float16: <span class=\"pl-c1\">{0<span class=\"pl-k\">:.4f</span>}</span> sec<span class=\"pl-pds\">\"</span></span>.format(end <span class=\"pl-k\">-</span> start))</pre></div>", "body_text": "The Dataset.from_tensor_slices() method should mostly be a wrapper for tf.constant() (via tf.convert_to_tensor()). Can you please confirm if the following program has the same behavior?\nimport tensorflow as tf\nimport numpy as np\nimport time\n\nimages = tf.keras.datasets.mnist.load_data()[0][0]\n\nimagesFloat16 = images.astype(np.float16);\nimagesFloat32 = images.astype(np.float32);\n\nstart = time.time()\ntf.constant(imagesFloat32)\nend = time.time()\nprint(\"float32: {0:.4f} sec\".format(end - start))\n\nstart = time.time()\ntf.constant(imagesFloat16)\nend = time.time()\nprint(\"float16: {0:.4f} sec\".format(end - start))", "body": "The `Dataset.from_tensor_slices()` method should mostly be a wrapper for `tf.constant()` (via `tf.convert_to_tensor()`). Can you please confirm if the following program has the same behavior?\r\n\r\n```python\r\nimport tensorflow as tf\r\nimport numpy as np\r\nimport time\r\n\r\nimages = tf.keras.datasets.mnist.load_data()[0][0]\r\n\r\nimagesFloat16 = images.astype(np.float16);\r\nimagesFloat32 = images.astype(np.float32);\r\n\r\nstart = time.time()\r\ntf.constant(imagesFloat32)\r\nend = time.time()\r\nprint(\"float32: {0:.4f} sec\".format(end - start))\r\n\r\nstart = time.time()\r\ntf.constant(imagesFloat16)\r\nend = time.time()\r\nprint(\"float16: {0:.4f} sec\".format(end - start))\r\n```"}