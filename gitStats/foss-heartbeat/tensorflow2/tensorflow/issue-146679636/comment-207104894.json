{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/207104894", "html_url": "https://github.com/tensorflow/tensorflow/issues/1812#issuecomment-207104894", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1812", "id": 207104894, "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzEwNDg5NA==", "user": {"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}, "created_at": "2016-04-07T21:52:20Z", "updated_at": "2016-04-07T21:52:20Z", "author_association": "MEMBER", "body_html": "<p>Please use the check_numerics op to find out where the NaNs are first introduced. In particular, split the .optimize() call on the optizer into compute_gradients and apply_gradients, so you can look at the computed gradients. If you see any variable get really large or very small, that's a sign of trouble.</p>\n<p>The distance function you wrote may be the cause, you could try making sure the value inside the square root is greater then 0 before you take the square root.</p>", "body_text": "Please use the check_numerics op to find out where the NaNs are first introduced. In particular, split the .optimize() call on the optizer into compute_gradients and apply_gradients, so you can look at the computed gradients. If you see any variable get really large or very small, that's a sign of trouble.\nThe distance function you wrote may be the cause, you could try making sure the value inside the square root is greater then 0 before you take the square root.", "body": "Please use the check_numerics op to find out where the NaNs are first introduced. In particular, split the .optimize() call on the optizer into compute_gradients and apply_gradients, so you can look at the computed gradients. If you see any variable get really large or very small, that's a sign of trouble. \n\nThe distance function you wrote may be the cause, you could try making sure the value inside the square root is greater then 0 before you take the square root. \n"}