{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22514", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22514/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22514/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22514/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22514", "id": 363813176, "node_id": "MDU6SXNzdWUzNjM4MTMxNzY=", "number": 22514, "title": "Assertion `d.nbDims >= 3' failed with int8 for Tensorflow TensorRT integration", "user": {"login": "dhingratul", "id": 4759327, "node_id": "MDQ6VXNlcjQ3NTkzMjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4759327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhingratul", "html_url": "https://github.com/dhingratul", "followers_url": "https://api.github.com/users/dhingratul/followers", "following_url": "https://api.github.com/users/dhingratul/following{/other_user}", "gists_url": "https://api.github.com/users/dhingratul/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhingratul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhingratul/subscriptions", "organizations_url": "https://api.github.com/users/dhingratul/orgs", "repos_url": "https://api.github.com/users/dhingratul/repos", "events_url": "https://api.github.com/users/dhingratul/events{/privacy}", "received_events_url": "https://api.github.com/users/dhingratul/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 969831806, "node_id": "MDU6TGFiZWw5Njk4MzE4MDY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/WIP", "name": "WIP", "color": "f4c77f", "default": false}], "state": "open", "locked": false, "assignee": {"login": "samikama", "id": 10539540, "node_id": "MDQ6VXNlcjEwNTM5NTQw", "avatar_url": "https://avatars0.githubusercontent.com/u/10539540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samikama", "html_url": "https://github.com/samikama", "followers_url": "https://api.github.com/users/samikama/followers", "following_url": "https://api.github.com/users/samikama/following{/other_user}", "gists_url": "https://api.github.com/users/samikama/gists{/gist_id}", "starred_url": "https://api.github.com/users/samikama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samikama/subscriptions", "organizations_url": "https://api.github.com/users/samikama/orgs", "repos_url": "https://api.github.com/users/samikama/repos", "events_url": "https://api.github.com/users/samikama/events{/privacy}", "received_events_url": "https://api.github.com/users/samikama/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "samikama", "id": 10539540, "node_id": "MDQ6VXNlcjEwNTM5NTQw", "avatar_url": "https://avatars0.githubusercontent.com/u/10539540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samikama", "html_url": "https://github.com/samikama", "followers_url": "https://api.github.com/users/samikama/followers", "following_url": "https://api.github.com/users/samikama/following{/other_user}", "gists_url": "https://api.github.com/users/samikama/gists{/gist_id}", "starred_url": "https://api.github.com/users/samikama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samikama/subscriptions", "organizations_url": "https://api.github.com/users/samikama/orgs", "repos_url": "https://api.github.com/users/samikama/repos", "events_url": "https://api.github.com/users/samikama/events{/privacy}", "received_events_url": "https://api.github.com/users/samikama/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-09-26T00:21:10Z", "updated_at": "2018-11-15T19:04:53Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>Please go to Stack Overflow for help and support:</p>\n<p><a href=\"https://stackoverflow.com/questions/tagged/tensorflow\" rel=\"nofollow\">https://stackoverflow.com/questions/tagged/tensorflow</a></p>\n<p>If you open a GitHub issue, here is our policy:</p>\n<ol>\n<li>It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).</li>\n<li>The form below must be filled out.</li>\n<li>It shouldn't be a TensorBoard issue. Those go <a href=\"https://github.com/tensorflow/tensorboard/issues\">here</a>.</li>\n</ol>\n<p><strong>Here's why we have that policy</strong>: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.</p>\n<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:n/a</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: ubuntu 16.04</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: n/a</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:source</li>\n<li><strong>TensorFlow version (use command below)</strong>: r1.11</li>\n<li><strong>Python version</strong>: 3.5</li>\n<li><strong>Bazel version (if compiling from source)</strong>:0.16.1</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: 5.4.0</li>\n<li><strong>CUDA/cuDNN version</strong>: 9/7.1</li>\n<li><strong>GPU model and memory</strong>: 1080ti/11gb</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<pre><code>import tensorflow as tf\nfrom tensorflow.contrib import tensorrt as trt\n\ndef load_graph(frozen_graph_filename):\n    # We load the protobuf file from the disk and parse it to retrieve the\n    # unserialized graph_def\n    with tf.gfile.GFile(frozen_graph_filename, \"rb\") as f:\n        graph_def = tf.GraphDef()\n        graph_def.ParseFromString(f.read())\n\n    # Then, we can use again a convenient built-in function to import a graph_def into the\n    # current default Graph\n    with tf.Graph().as_default() as graph:\n        tf.import_graph_def(\n            graph_def,\n            name='', #DEBUG\n        )\n    return graph\n\nfid = \"model.pb\"\noutput_nodenames = 'out1,out2,out3'\noutput_node = list(output_nodenames.split(\",\"))\ng = load_graph(fid)\nwith tf.Session(graph=g) as sess:\n    trt_graph = trt.create_inference_graph(\n    input_graph_def=tf.get_default_graph().as_graph_def(),\n    outputs=output_node,\n    max_batch_size=99999,\n    max_workspace_size_bytes=1 &lt;&lt; 25,\n    precision_mode=\"INT8\",  # TRT Engine precision \"FP32\",\"FP16\" or \"INT8\"\n    minimum_segment_size=2  # minimum number of nodes in an engine\n    )\n    with tf.gfile.GFile(\"trt.pb\", \"wb\") as f:\n        f.write(trt_graph.SerializeToString())\n\ng2 = load_graph(\"trt.pb\")\nwith tf.Session(graph=g2) as sess:\n    \"\"\"Run given calibration graph multiple times.\"\"\"\n    num_samples = 10\n    np.random.seed(0)\n    ip1_data = np.random.rand(num_samples,700,800,6).astype(np.float32)\n    ip1 = g2.get_tensor_by_name(\"ip1:0\")\n\n    ip2_data = np.random.rand(4).astype(np.float32)\n    ip2 = g2.get_tensor_by_name(\"ip2:0\")\n\n    ip3_data = np.random.rand(20000,6).astype(np.float32)\n    ip3 = g2.get_tensor_by_name(\"ip3:0\")\n\n    ip4_data = np.random.rand(20000,4).astype(np.float32)\n    ip4 = g2.get_tensor_by_name(\"ip4:0\")\n\n    out1 = g2.get_tensor_by_name(\"out1:0\")\n    out2 = g2.get_tensor_by_name(\"out2:0\")\n    out3 = g2.get_tensor_by_name(\"out3:0\")\n# run over real calibration data here, we are mimicking a calibration set of\n# 30 different batches. Use as much calibration data as you want\n    for i in range(num_samples):\n        val = sess.run([out1, out2, out3], feed_dict={ip1:ip1_data[i], ip2:ip2_data, ip3:ip3_data, ip4:ip4_data})\n</code></pre>\n<p>You can collect some of this information using our environment capture script:</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\">https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh</a></p>\n<p>You can obtain the TensorFlow version with</p>\n<p>python -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"</p>\n<h3>Describe the problem</h3>\n<p>Describe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.</p>\n<h3>Source code / logs</h3>\n<p>Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.</p>\n<pre><code>2018-09-25 17:20:14.600365: I tensorflow/contrib/tensorrt/kernels/trt_engine_op.cc:577] Starting calibration thread on device 0, Calibration Resource @ 0x7f7fb4001730\n2018-09-25 17:20:14.600539: I tensorflow/contrib/tensorrt/kernels/trt_engine_op.cc:577] Starting calibration thread on device 0, Calibration Resource @ 0x7f7fac071a40\n2018-09-25 17:20:14.973555: I tensorflow/contrib/tensorrt/kernels/trt_engine_op.cc:577] Starting calibration thread on device 0, Calibration Resource @ 0x7f7fa4004fe0\npython: helpers.cpp:56: nvinfer1::DimsCHW nvinfer1::getCHW(const nvinfer1::Dims&amp;): Assertion `d.nbDims &gt;= 3' failed.\nAborted (core dumped)\n</code></pre>", "body_text": "Please go to Stack Overflow for help and support:\nhttps://stackoverflow.com/questions/tagged/tensorflow\nIf you open a GitHub issue, here is our policy:\n\nIt must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\nThe form below must be filled out.\nIt shouldn't be a TensorBoard issue. Those go here.\n\nHere's why we have that policy: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\n\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):n/a\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): ubuntu 16.04\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: n/a\nTensorFlow installed from (source or binary):source\nTensorFlow version (use command below): r1.11\nPython version: 3.5\nBazel version (if compiling from source):0.16.1\nGCC/Compiler version (if compiling from source): 5.4.0\nCUDA/cuDNN version: 9/7.1\nGPU model and memory: 1080ti/11gb\nExact command to reproduce:\n\nimport tensorflow as tf\nfrom tensorflow.contrib import tensorrt as trt\n\ndef load_graph(frozen_graph_filename):\n    # We load the protobuf file from the disk and parse it to retrieve the\n    # unserialized graph_def\n    with tf.gfile.GFile(frozen_graph_filename, \"rb\") as f:\n        graph_def = tf.GraphDef()\n        graph_def.ParseFromString(f.read())\n\n    # Then, we can use again a convenient built-in function to import a graph_def into the\n    # current default Graph\n    with tf.Graph().as_default() as graph:\n        tf.import_graph_def(\n            graph_def,\n            name='', #DEBUG\n        )\n    return graph\n\nfid = \"model.pb\"\noutput_nodenames = 'out1,out2,out3'\noutput_node = list(output_nodenames.split(\",\"))\ng = load_graph(fid)\nwith tf.Session(graph=g) as sess:\n    trt_graph = trt.create_inference_graph(\n    input_graph_def=tf.get_default_graph().as_graph_def(),\n    outputs=output_node,\n    max_batch_size=99999,\n    max_workspace_size_bytes=1 << 25,\n    precision_mode=\"INT8\",  # TRT Engine precision \"FP32\",\"FP16\" or \"INT8\"\n    minimum_segment_size=2  # minimum number of nodes in an engine\n    )\n    with tf.gfile.GFile(\"trt.pb\", \"wb\") as f:\n        f.write(trt_graph.SerializeToString())\n\ng2 = load_graph(\"trt.pb\")\nwith tf.Session(graph=g2) as sess:\n    \"\"\"Run given calibration graph multiple times.\"\"\"\n    num_samples = 10\n    np.random.seed(0)\n    ip1_data = np.random.rand(num_samples,700,800,6).astype(np.float32)\n    ip1 = g2.get_tensor_by_name(\"ip1:0\")\n\n    ip2_data = np.random.rand(4).astype(np.float32)\n    ip2 = g2.get_tensor_by_name(\"ip2:0\")\n\n    ip3_data = np.random.rand(20000,6).astype(np.float32)\n    ip3 = g2.get_tensor_by_name(\"ip3:0\")\n\n    ip4_data = np.random.rand(20000,4).astype(np.float32)\n    ip4 = g2.get_tensor_by_name(\"ip4:0\")\n\n    out1 = g2.get_tensor_by_name(\"out1:0\")\n    out2 = g2.get_tensor_by_name(\"out2:0\")\n    out3 = g2.get_tensor_by_name(\"out3:0\")\n# run over real calibration data here, we are mimicking a calibration set of\n# 30 different batches. Use as much calibration data as you want\n    for i in range(num_samples):\n        val = sess.run([out1, out2, out3], feed_dict={ip1:ip1_data[i], ip2:ip2_data, ip3:ip3_data, ip4:ip4_data})\n\nYou can collect some of this information using our environment capture script:\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\nYou can obtain the TensorFlow version with\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\nDescribe the problem\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\nSource code / logs\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\n2018-09-25 17:20:14.600365: I tensorflow/contrib/tensorrt/kernels/trt_engine_op.cc:577] Starting calibration thread on device 0, Calibration Resource @ 0x7f7fb4001730\n2018-09-25 17:20:14.600539: I tensorflow/contrib/tensorrt/kernels/trt_engine_op.cc:577] Starting calibration thread on device 0, Calibration Resource @ 0x7f7fac071a40\n2018-09-25 17:20:14.973555: I tensorflow/contrib/tensorrt/kernels/trt_engine_op.cc:577] Starting calibration thread on device 0, Calibration Resource @ 0x7f7fa4004fe0\npython: helpers.cpp:56: nvinfer1::DimsCHW nvinfer1::getCHW(const nvinfer1::Dims&): Assertion `d.nbDims >= 3' failed.\nAborted (core dumped)", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:n/a\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: ubuntu 16.04\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: n/a\r\n- **TensorFlow installed from (source or binary)**:source \r\n- **TensorFlow version (use command below)**: r1.11\r\n- **Python version**: 3.5\r\n- **Bazel version (if compiling from source)**:0.16.1\r\n- **GCC/Compiler version (if compiling from source)**: 5.4.0\r\n- **CUDA/cuDNN version**: 9/7.1\r\n- **GPU model and memory**: 1080ti/11gb\r\n- **Exact command to reproduce**:\r\n\r\n```\r\nimport tensorflow as tf\r\nfrom tensorflow.contrib import tensorrt as trt\r\n\r\ndef load_graph(frozen_graph_filename):\r\n    # We load the protobuf file from the disk and parse it to retrieve the\r\n    # unserialized graph_def\r\n    with tf.gfile.GFile(frozen_graph_filename, \"rb\") as f:\r\n        graph_def = tf.GraphDef()\r\n        graph_def.ParseFromString(f.read())\r\n\r\n    # Then, we can use again a convenient built-in function to import a graph_def into the\r\n    # current default Graph\r\n    with tf.Graph().as_default() as graph:\r\n        tf.import_graph_def(\r\n            graph_def,\r\n            name='', #DEBUG\r\n        )\r\n    return graph\r\n\r\nfid = \"model.pb\"\r\noutput_nodenames = 'out1,out2,out3'\r\noutput_node = list(output_nodenames.split(\",\"))\r\ng = load_graph(fid)\r\nwith tf.Session(graph=g) as sess:\r\n    trt_graph = trt.create_inference_graph(\r\n    input_graph_def=tf.get_default_graph().as_graph_def(),\r\n    outputs=output_node,\r\n    max_batch_size=99999,\r\n    max_workspace_size_bytes=1 << 25,\r\n    precision_mode=\"INT8\",  # TRT Engine precision \"FP32\",\"FP16\" or \"INT8\"\r\n    minimum_segment_size=2  # minimum number of nodes in an engine\r\n    )\r\n    with tf.gfile.GFile(\"trt.pb\", \"wb\") as f:\r\n        f.write(trt_graph.SerializeToString())\r\n\r\ng2 = load_graph(\"trt.pb\")\r\nwith tf.Session(graph=g2) as sess:\r\n    \"\"\"Run given calibration graph multiple times.\"\"\"\r\n    num_samples = 10\r\n    np.random.seed(0)\r\n    ip1_data = np.random.rand(num_samples,700,800,6).astype(np.float32)\r\n    ip1 = g2.get_tensor_by_name(\"ip1:0\")\r\n\r\n    ip2_data = np.random.rand(4).astype(np.float32)\r\n    ip2 = g2.get_tensor_by_name(\"ip2:0\")\r\n\r\n    ip3_data = np.random.rand(20000,6).astype(np.float32)\r\n    ip3 = g2.get_tensor_by_name(\"ip3:0\")\r\n\r\n    ip4_data = np.random.rand(20000,4).astype(np.float32)\r\n    ip4 = g2.get_tensor_by_name(\"ip4:0\")\r\n\r\n    out1 = g2.get_tensor_by_name(\"out1:0\")\r\n    out2 = g2.get_tensor_by_name(\"out2:0\")\r\n    out3 = g2.get_tensor_by_name(\"out3:0\")\r\n# run over real calibration data here, we are mimicking a calibration set of\r\n# 30 different batches. Use as much calibration data as you want\r\n    for i in range(num_samples):\r\n        val = sess.run([out1, out2, out3], feed_dict={ip1:ip1_data[i], ip2:ip2_data, ip3:ip3_data, ip4:ip4_data})\r\n```\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\r\n\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n\r\n```\r\n2018-09-25 17:20:14.600365: I tensorflow/contrib/tensorrt/kernels/trt_engine_op.cc:577] Starting calibration thread on device 0, Calibration Resource @ 0x7f7fb4001730\r\n2018-09-25 17:20:14.600539: I tensorflow/contrib/tensorrt/kernels/trt_engine_op.cc:577] Starting calibration thread on device 0, Calibration Resource @ 0x7f7fac071a40\r\n2018-09-25 17:20:14.973555: I tensorflow/contrib/tensorrt/kernels/trt_engine_op.cc:577] Starting calibration thread on device 0, Calibration Resource @ 0x7f7fa4004fe0\r\npython: helpers.cpp:56: nvinfer1::DimsCHW nvinfer1::getCHW(const nvinfer1::Dims&): Assertion `d.nbDims >= 3' failed.\r\nAborted (core dumped)\r\n```\r\n"}