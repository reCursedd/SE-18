{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/132243280", "pull_request_review_id": 55303565, "id": 132243280, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMjI0MzI4MA==", "diff_hunk": "@@ -0,0 +1,118 @@\n+/* Copyright 2017 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+#include <memory>\n+#include <vector>\n+#include <string>\n+\n+#include \"tensorflow/core/common_runtime/device.h\"\n+#include \"tensorflow/core/common_runtime/device_factory.h\"\n+#include \"tensorflow/core/framework/allocator.h\"\n+#include \"tensorflow/core/framework/fake_input.h\"\n+#include \"tensorflow/core/framework/node_def_builder.h\"\n+#include \"tensorflow/core/framework/op_kernel.h\"\n+#include \"tensorflow/core/framework/tensor.h\"\n+#include \"tensorflow/core/framework/types.h\"\n+#include \"tensorflow/core/framework/types.pb.h\"\n+#include \"tensorflow/core/kernels/ops_testutil.h\"\n+#include \"tensorflow/core/kernels/ops_util.h\"\n+#include \"tensorflow/core/framework/register_types.h\"\n+\n+namespace tensorflow {\n+namespace {\n+\n+class SerializeTensorOpTest : public OpsTestBase {\n+ protected:\n+  template <typename T>\n+  void MakeOp() {\n+    TF_ASSERT_OK(\n+        NodeDefBuilder(\"myop\", \"SerializeTensor\")\n+            .Input(FakeInput(DataTypeToEnum<T>::value))\n+            .Finalize(node_def()));\n+    TF_ASSERT_OK(InitOp());\n+  }\n+};\n+\n+#define REGISTER_TEST(T, Shape, Mapping)                                 \\", "path": "tensorflow/core/kernels/parse_tensor_test.cc", "position": null, "original_position": 48, "commit_id": "cafe147ccd170b8e891870559d1b712f565a3c3d", "original_commit_id": "012c2a7fe1c3ae475e851a8de99f792180e55962", "user": {"login": "vrv", "id": 463737, "node_id": "MDQ6VXNlcjQ2MzczNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/463737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrv", "html_url": "https://github.com/vrv", "followers_url": "https://api.github.com/users/vrv/followers", "following_url": "https://api.github.com/users/vrv/following{/other_user}", "gists_url": "https://api.github.com/users/vrv/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrv/subscriptions", "organizations_url": "https://api.github.com/users/vrv/orgs", "repos_url": "https://api.github.com/users/vrv/repos", "events_url": "https://api.github.com/users/vrv/events{/privacy}", "received_events_url": "https://api.github.com/users/vrv/received_events", "type": "User", "site_admin": false}, "body": "\r\n\r\nThanks for adding the test!\r\n\r\nI think it would be preferable not to use a huge macro for the entire test though:\r\n\r\n- It's harder to know the name of the test to run because the full name is hidden behind a macro expansion\r\n- There are two levels of macros here, which makes it harder to read.\r\n\r\nInstead, can you do the following?\r\n\r\n* Define each TEST_F manually with a name that is fixed\r\n* define helper functions templated by T that does things like MakeOp, AddInput, NodeDefBuilder, etc, but keep parts that are not templated by T outside.\r\n* define helper functions that do all of the other boiler plate not templated by T\r\n* have each test call those helper functions with the appropriate fixed type.", "created_at": "2017-08-09T16:57:54Z", "updated_at": "2017-09-05T06:33:12Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/11992#discussion_r132243280", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11992", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/132243280"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/11992#discussion_r132243280"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11992"}}, "body_html": "<p>Thanks for adding the test!</p>\n<p>I think it would be preferable not to use a huge macro for the entire test though:</p>\n<ul>\n<li>It's harder to know the name of the test to run because the full name is hidden behind a macro expansion</li>\n<li>There are two levels of macros here, which makes it harder to read.</li>\n</ul>\n<p>Instead, can you do the following?</p>\n<ul>\n<li>Define each TEST_F manually with a name that is fixed</li>\n<li>define helper functions templated by T that does things like MakeOp, AddInput, NodeDefBuilder, etc, but keep parts that are not templated by T outside.</li>\n<li>define helper functions that do all of the other boiler plate not templated by T</li>\n<li>have each test call those helper functions with the appropriate fixed type.</li>\n</ul>", "body_text": "Thanks for adding the test!\nI think it would be preferable not to use a huge macro for the entire test though:\n\nIt's harder to know the name of the test to run because the full name is hidden behind a macro expansion\nThere are two levels of macros here, which makes it harder to read.\n\nInstead, can you do the following?\n\nDefine each TEST_F manually with a name that is fixed\ndefine helper functions templated by T that does things like MakeOp, AddInput, NodeDefBuilder, etc, but keep parts that are not templated by T outside.\ndefine helper functions that do all of the other boiler plate not templated by T\nhave each test call those helper functions with the appropriate fixed type."}