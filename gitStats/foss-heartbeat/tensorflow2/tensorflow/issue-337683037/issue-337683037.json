{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20487", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20487/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20487/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20487/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20487", "id": 337683037, "node_id": "MDU6SXNzdWUzMzc2ODMwMzc=", "number": 20487, "title": "Validate variable dtype before restoring checkpoint", "user": {"login": "k-w-w", "id": 31663267, "node_id": "MDQ6VXNlcjMxNjYzMjY3", "avatar_url": "https://avatars2.githubusercontent.com/u/31663267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/k-w-w", "html_url": "https://github.com/k-w-w", "followers_url": "https://api.github.com/users/k-w-w/followers", "following_url": "https://api.github.com/users/k-w-w/following{/other_user}", "gists_url": "https://api.github.com/users/k-w-w/gists{/gist_id}", "starred_url": "https://api.github.com/users/k-w-w/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/k-w-w/subscriptions", "organizations_url": "https://api.github.com/users/k-w-w/orgs", "repos_url": "https://api.github.com/users/k-w-w/repos", "events_url": "https://api.github.com/users/k-w-w/events{/privacy}", "received_events_url": "https://api.github.com/users/k-w-w/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-02T22:19:42Z", "updated_at": "2018-08-09T01:24:38Z", "closed_at": "2018-08-09T01:24:38Z", "author_association": "MEMBER", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: <a href=\"https://stackoverflow.com/questions/51137417/wrong-output-for-restored-variable-in-tensorflow-graph\" rel=\"nofollow\">Yes</a></li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.10.0-dev20180620</li>\n<li><strong>Python version</strong>:  2.7</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: 9.0 / 7</li>\n<li><strong>GPU model and memory</strong>: GeForce GTX 1080 / 8 Gb</li>\n<li><strong>Exact command to reproduce</strong>: Run the two scripts below in \"Source code/logs\"</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>A warning/error should be raised when a variable is loaded with a different dtype as that which was saved.</p>\n<p>In the code below, the variable <code>global_step</code> is saved as a <code>tf.int32</code>, but treated as a <code>tf.float32</code> when restored. When this happens, the <code>global_step</code> variable appears to have a value of 7e-45 instead of the expected value of 5.</p>\n<h3>Source code / logs</h3>\n<p><a href=\"https://stackoverflow.com/questions/51137417/wrong-output-for-restored-variable-in-tensorflow-graph\" rel=\"nofollow\">Link to Stackoverflow Post with the code/question</a></p>\n<p>[Original post copied here]<br>\n<strong>Script that saves the checkpoints:</strong></p>\n<pre><code>import tensorflow as tf\n\na = tf.Variable(3.0, name='a')\nb = tf.Variable(5.0, name='b')\n\nb = tf.assign_add(b, a)\n\nn_steps = 5\n\nglobal_step = tf.Variable(0, name='global_step', trainable=False)\n\nsaver = tf.train.Saver()\n\nwith tf.Session() as sess:\n\n    sess.run(tf.global_variables_initializer())\n    \n    for step in range(n_steps):\n        print(sess.run(b))\n\n        global_step.assign_add(1).eval()\n        print(global_step.eval())\n\n        saver.save(sess, './my_test_model', global_step=global_step)\n</code></pre>\n<p><strong>Script that restores checkpoint:</strong></p>\n<pre><code>import tensorflow as tf\n\nfrom tensorflow.python.tools.inspect_checkpoint import print_tensors_in_checkpoint_file\n\n# List ALL tensors.\nprint_tensors_in_checkpoint_file(tf.train.latest_checkpoint('./'), all_tensors=True, tensor_name='')\n\ntf.reset_default_graph()\n\na = tf.get_variable('a', shape=[])\nb = tf.get_variable('b', shape=[])\nglobal_step = tf.get_variable('global_step', shape=[])\n\nsaver = tf.train.Saver()\n\nwith tf.Session() as sess:\n        \n    ckpt = tf.train.latest_checkpoint('./')\n    if ckpt:\n        print(ckpt)\n    \n        saver.restore(sess, ckpt)\n    \n    else:\n        print('Nothing restored')\n    \n    print(a.eval())\n    print(b.eval())\n    print(global_step.eval())\n</code></pre>\n<p><strong>Output</strong></p>\n<pre><code>tensor_name:  a\n3.0\ntensor_name:  b\n20.0\ntensor_name:  global_step\n5\n./my_test_model-5\nINFO:tensorflow:Restoring parameters from ./my_test_model-5\n3.0\n20.0\n7e-45\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.10.0-dev20180620\nPython version:  2.7\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: 9.0 / 7\nGPU model and memory: GeForce GTX 1080 / 8 Gb\nExact command to reproduce: Run the two scripts below in \"Source code/logs\"\n\nDescribe the problem\nA warning/error should be raised when a variable is loaded with a different dtype as that which was saved.\nIn the code below, the variable global_step is saved as a tf.int32, but treated as a tf.float32 when restored. When this happens, the global_step variable appears to have a value of 7e-45 instead of the expected value of 5.\nSource code / logs\nLink to Stackoverflow Post with the code/question\n[Original post copied here]\nScript that saves the checkpoints:\nimport tensorflow as tf\n\na = tf.Variable(3.0, name='a')\nb = tf.Variable(5.0, name='b')\n\nb = tf.assign_add(b, a)\n\nn_steps = 5\n\nglobal_step = tf.Variable(0, name='global_step', trainable=False)\n\nsaver = tf.train.Saver()\n\nwith tf.Session() as sess:\n\n    sess.run(tf.global_variables_initializer())\n    \n    for step in range(n_steps):\n        print(sess.run(b))\n\n        global_step.assign_add(1).eval()\n        print(global_step.eval())\n\n        saver.save(sess, './my_test_model', global_step=global_step)\n\nScript that restores checkpoint:\nimport tensorflow as tf\n\nfrom tensorflow.python.tools.inspect_checkpoint import print_tensors_in_checkpoint_file\n\n# List ALL tensors.\nprint_tensors_in_checkpoint_file(tf.train.latest_checkpoint('./'), all_tensors=True, tensor_name='')\n\ntf.reset_default_graph()\n\na = tf.get_variable('a', shape=[])\nb = tf.get_variable('b', shape=[])\nglobal_step = tf.get_variable('global_step', shape=[])\n\nsaver = tf.train.Saver()\n\nwith tf.Session() as sess:\n        \n    ckpt = tf.train.latest_checkpoint('./')\n    if ckpt:\n        print(ckpt)\n    \n        saver.restore(sess, ckpt)\n    \n    else:\n        print('Nothing restored')\n    \n    print(a.eval())\n    print(b.eval())\n    print(global_step.eval())\n\nOutput\ntensor_name:  a\n3.0\ntensor_name:  b\n20.0\ntensor_name:  global_step\n5\n./my_test_model-5\nINFO:tensorflow:Restoring parameters from ./my_test_model-5\n3.0\n20.0\n7e-45", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: [Yes](https://stackoverflow.com/questions/51137417/wrong-output-for-restored-variable-in-tensorflow-graph)\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.10.0-dev20180620\r\n- **Python version**:  2.7\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: 9.0 / 7\r\n- **GPU model and memory**: GeForce GTX 1080 / 8 Gb\r\n- **Exact command to reproduce**: Run the two scripts below in \"Source code/logs\"\r\n\r\n### Describe the problem\r\nA warning/error should be raised when a variable is loaded with a different dtype as that which was saved. \r\n\r\nIn the code below, the variable `global_step` is saved as a `tf.int32`, but treated as a `tf.float32` when restored. When this happens, the `global_step` variable appears to have a value of 7e-45 instead of the expected value of 5. \r\n\r\n### Source code / logs\r\n [Link to Stackoverflow Post with the code/question](https://stackoverflow.com/questions/51137417/wrong-output-for-restored-variable-in-tensorflow-graph)\r\n\r\n[Original post copied here]\r\n**Script that saves the checkpoints:**\r\n\r\n    import tensorflow as tf\r\n\r\n    a = tf.Variable(3.0, name='a')\r\n    b = tf.Variable(5.0, name='b')\r\n    \r\n    b = tf.assign_add(b, a)\r\n    \r\n    n_steps = 5\r\n    \r\n    global_step = tf.Variable(0, name='global_step', trainable=False)\r\n    \r\n    saver = tf.train.Saver()\r\n    \r\n    with tf.Session() as sess:\r\n    \r\n        sess.run(tf.global_variables_initializer())\r\n        \r\n        for step in range(n_steps):\r\n            print(sess.run(b))\r\n    \r\n            global_step.assign_add(1).eval()\r\n            print(global_step.eval())\r\n    \r\n            saver.save(sess, './my_test_model', global_step=global_step)\r\n\r\n**Script that restores checkpoint:**\r\n\r\n    import tensorflow as tf\r\n    \r\n    from tensorflow.python.tools.inspect_checkpoint import print_tensors_in_checkpoint_file\r\n    \r\n    # List ALL tensors.\r\n    print_tensors_in_checkpoint_file(tf.train.latest_checkpoint('./'), all_tensors=True, tensor_name='')\r\n    \r\n    tf.reset_default_graph()\r\n    \r\n    a = tf.get_variable('a', shape=[])\r\n    b = tf.get_variable('b', shape=[])\r\n    global_step = tf.get_variable('global_step', shape=[])\r\n    \r\n    saver = tf.train.Saver()\r\n    \r\n    with tf.Session() as sess:\r\n            \r\n        ckpt = tf.train.latest_checkpoint('./')\r\n        if ckpt:\r\n            print(ckpt)\r\n        \r\n            saver.restore(sess, ckpt)\r\n        \r\n        else:\r\n            print('Nothing restored')\r\n        \r\n        print(a.eval())\r\n        print(b.eval())\r\n        print(global_step.eval())\r\n\r\n**Output**\r\n```\r\ntensor_name:  a\r\n3.0\r\ntensor_name:  b\r\n20.0\r\ntensor_name:  global_step\r\n5\r\n./my_test_model-5\r\nINFO:tensorflow:Restoring parameters from ./my_test_model-5\r\n3.0\r\n20.0\r\n7e-45\r\n```\r\n\r\n"}