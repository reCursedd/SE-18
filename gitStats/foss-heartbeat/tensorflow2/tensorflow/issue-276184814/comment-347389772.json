{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/347389772", "html_url": "https://github.com/tensorflow/tensorflow/issues/14806#issuecomment-347389772", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14806", "id": 347389772, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzM4OTc3Mg==", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-28T02:03:30Z", "updated_at": "2017-11-28T02:03:55Z", "author_association": "MEMBER", "body_html": "<p>As <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a> mentioned, <code>op.TextLineDataset</code> produces a <code>DT_VARIANT</code> tensor.<br>\nI'm not quite sure what we'd want <code>.Value()</code> on it to return. Could you clarify what you were expecting it to?</p>\n<p>Note that the <code>dataset</code> tensor is meant for consumption by iterators, and you can construct dataset tensors and create iterators over them in Go (though, you have to do it from the primitive ops as we don't have the convenience APIs as we do in the <code>tf.data</code> module in Python). For example:</p>\n<div class=\"highlight highlight-source-go\"><pre><span class=\"pl-k\">package</span> main\n\n<span class=\"pl-k\">import</span> (\n        <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>fmt<span class=\"pl-pds\">\"</span></span>\n        tf <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>github.com/tensorflow/tensorflow/tensorflow/go<span class=\"pl-pds\">\"</span></span>\n        <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>github.com/tensorflow/tensorflow/tensorflow/go/op<span class=\"pl-pds\">\"</span></span>\n)\n\n<span class=\"pl-k\">func</span> <span class=\"pl-en\">main</span>() {\n        <span class=\"pl-smi\">s</span> <span class=\"pl-k\">:=</span> op.<span class=\"pl-c1\">NewScope</span>()\n        <span class=\"pl-smi\">dataset</span> <span class=\"pl-k\">:=</span> op.<span class=\"pl-c1\">TextLineDataset</span>(s,\n                op.<span class=\"pl-c1\">Const</span>(s.<span class=\"pl-c1\">SubScope</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>filename<span class=\"pl-pds\">\"</span></span>), <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>dataset.txt<span class=\"pl-pds\">\"</span></span>),\n                op.<span class=\"pl-c1\">Const</span>(s.<span class=\"pl-c1\">SubScope</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>compression_type<span class=\"pl-pds\">\"</span></span>), <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>),\n                op.<span class=\"pl-c1\">Const</span>(s.<span class=\"pl-c1\">SubScope</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>buffer_size<span class=\"pl-pds\">\"</span></span>), <span class=\"pl-c1\">int64</span>(<span class=\"pl-c1\">1</span>)),\n        )\n\n       \n        <span class=\"pl-smi\">outputTypes</span> <span class=\"pl-k\">:=</span> []tf.<span class=\"pl-smi\">DataType</span>{tf.<span class=\"pl-smi\">String</span>}\n        <span class=\"pl-smi\">outputShapes</span> <span class=\"pl-k\">:=</span> []tf.<span class=\"pl-smi\">Shape</span>{tf.<span class=\"pl-c1\">ScalarShape</span>()}\n        <span class=\"pl-smi\">iterator</span> <span class=\"pl-k\">:=</span> op.<span class=\"pl-c1\">Iterator</span>(s, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>, outputTypes, outputShapes)\n        <span class=\"pl-smi\">next</span> <span class=\"pl-k\">:=</span> op.<span class=\"pl-c1\">IteratorGetNext</span>(s, iterator, outputTypes, outputShapes)\n        <span class=\"pl-smi\">initIterator</span> <span class=\"pl-k\">:=</span> op.<span class=\"pl-c1\">MakeIterator</span>(s, dataset, iterator)\n       \n        <span class=\"pl-smi\">graph</span>, <span class=\"pl-smi\">err</span> <span class=\"pl-k\">:=</span> s.<span class=\"pl-c1\">Finalize</span>()\n        <span class=\"pl-k\">if</span> err != <span class=\"pl-c1\">nil</span> {\n                <span class=\"pl-c1\">panic</span>(err)\n        }\n        <span class=\"pl-smi\">sess</span>, <span class=\"pl-smi\">err</span> <span class=\"pl-k\">:=</span> tf.<span class=\"pl-c1\">NewSession</span>(graph, <span class=\"pl-c1\">nil</span>)\n        <span class=\"pl-k\">if</span> err != <span class=\"pl-c1\">nil</span> {\n                <span class=\"pl-c1\">panic</span>(err)\n        }\n        <span class=\"pl-k\">if</span> _, err = sess.<span class=\"pl-c1\">Run</span>(<span class=\"pl-c1\">nil</span>, <span class=\"pl-c1\">nil</span>, []*tf.<span class=\"pl-smi\">Operation</span>{initIterator}); err != <span class=\"pl-c1\">nil</span> {\n                <span class=\"pl-c1\">panic</span>(err)\n        }\n        <span class=\"pl-smi\">results</span>, <span class=\"pl-smi\">err</span> <span class=\"pl-k\">:=</span> sess.<span class=\"pl-c1\">Run</span>(<span class=\"pl-c1\">nil</span>, next, []*tf.<span class=\"pl-smi\">Operation</span>{})\n        <span class=\"pl-k\">if</span> err != <span class=\"pl-c1\">nil</span> {\n                <span class=\"pl-c1\">panic</span>(err)\n        }\n        <span class=\"pl-smi\">v</span> <span class=\"pl-k\">:=</span> results[<span class=\"pl-c1\">0</span>].<span class=\"pl-c1\">Value</span>()\n        fmt.<span class=\"pl-c1\">Printf</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-c1\">%T</span>: <span class=\"pl-c1\">%v</span><span class=\"pl-cce\">\\n</span><span class=\"pl-pds\">\"</span></span>, v, v)\n}</pre></div>\n<p>I agree the error message can be improved, will try to write up a change for that.<br>\nIn the mean time, could you clarify what you may want <code>dataset.Value()</code> to return?</p>", "body_text": "As @mrry mentioned, op.TextLineDataset produces a DT_VARIANT tensor.\nI'm not quite sure what we'd want .Value() on it to return. Could you clarify what you were expecting it to?\nNote that the dataset tensor is meant for consumption by iterators, and you can construct dataset tensors and create iterators over them in Go (though, you have to do it from the primitive ops as we don't have the convenience APIs as we do in the tf.data module in Python). For example:\npackage main\n\nimport (\n        \"fmt\"\n        tf \"github.com/tensorflow/tensorflow/tensorflow/go\"\n        \"github.com/tensorflow/tensorflow/tensorflow/go/op\"\n)\n\nfunc main() {\n        s := op.NewScope()\n        dataset := op.TextLineDataset(s,\n                op.Const(s.SubScope(\"filename\"), \"dataset.txt\"),\n                op.Const(s.SubScope(\"compression_type\"), \"\"),\n                op.Const(s.SubScope(\"buffer_size\"), int64(1)),\n        )\n\n       \n        outputTypes := []tf.DataType{tf.String}\n        outputShapes := []tf.Shape{tf.ScalarShape()}\n        iterator := op.Iterator(s, \"\", \"\", outputTypes, outputShapes)\n        next := op.IteratorGetNext(s, iterator, outputTypes, outputShapes)\n        initIterator := op.MakeIterator(s, dataset, iterator)\n       \n        graph, err := s.Finalize()\n        if err != nil {\n                panic(err)\n        }\n        sess, err := tf.NewSession(graph, nil)\n        if err != nil {\n                panic(err)\n        }\n        if _, err = sess.Run(nil, nil, []*tf.Operation{initIterator}); err != nil {\n                panic(err)\n        }\n        results, err := sess.Run(nil, next, []*tf.Operation{})\n        if err != nil {\n                panic(err)\n        }\n        v := results[0].Value()\n        fmt.Printf(\"%T: %v\\n\", v, v)\n}\nI agree the error message can be improved, will try to write up a change for that.\nIn the mean time, could you clarify what you may want dataset.Value() to return?", "body": "As @mrry mentioned, `op.TextLineDataset` produces a `DT_VARIANT` tensor.\r\nI'm not quite sure what we'd want `.Value()` on it to return. Could you clarify what you were expecting it to?\r\n\r\nNote that the `dataset` tensor is meant for consumption by iterators, and you can construct dataset tensors and create iterators over them in Go (though, you have to do it from the primitive ops as we don't have the convenience APIs as we do in the `tf.data` module in Python). For example:\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n        \"fmt\"\r\n        tf \"github.com/tensorflow/tensorflow/tensorflow/go\"\r\n        \"github.com/tensorflow/tensorflow/tensorflow/go/op\"\r\n)\r\n\r\nfunc main() {\r\n        s := op.NewScope()\r\n        dataset := op.TextLineDataset(s,\r\n                op.Const(s.SubScope(\"filename\"), \"dataset.txt\"),\r\n                op.Const(s.SubScope(\"compression_type\"), \"\"),\r\n                op.Const(s.SubScope(\"buffer_size\"), int64(1)),\r\n        )\r\n\r\n       \r\n        outputTypes := []tf.DataType{tf.String}\r\n        outputShapes := []tf.Shape{tf.ScalarShape()}\r\n        iterator := op.Iterator(s, \"\", \"\", outputTypes, outputShapes)\r\n        next := op.IteratorGetNext(s, iterator, outputTypes, outputShapes)\r\n        initIterator := op.MakeIterator(s, dataset, iterator)\r\n       \r\n        graph, err := s.Finalize()\r\n        if err != nil {\r\n                panic(err)\r\n        }\r\n        sess, err := tf.NewSession(graph, nil)\r\n        if err != nil {\r\n                panic(err)\r\n        }\r\n        if _, err = sess.Run(nil, nil, []*tf.Operation{initIterator}); err != nil {\r\n                panic(err)\r\n        }\r\n        results, err := sess.Run(nil, next, []*tf.Operation{})\r\n        if err != nil {\r\n                panic(err)\r\n        }\r\n        v := results[0].Value()\r\n        fmt.Printf(\"%T: %v\\n\", v, v)\r\n}\r\n```\r\nI agree the error message can be improved, will try to write up a change for that.\r\nIn the mean time, could you clarify what you may want `dataset.Value()` to return?"}