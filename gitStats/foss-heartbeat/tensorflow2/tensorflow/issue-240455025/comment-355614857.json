{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/355614857", "html_url": "https://github.com/tensorflow/tensorflow/issues/11275#issuecomment-355614857", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11275", "id": 355614857, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTYxNDg1Nw==", "user": {"login": "lissyx", "id": 1645737, "node_id": "MDQ6VXNlcjE2NDU3Mzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1645737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lissyx", "html_url": "https://github.com/lissyx", "followers_url": "https://api.github.com/users/lissyx/followers", "following_url": "https://api.github.com/users/lissyx/following{/other_user}", "gists_url": "https://api.github.com/users/lissyx/gists{/gist_id}", "starred_url": "https://api.github.com/users/lissyx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lissyx/subscriptions", "organizations_url": "https://api.github.com/users/lissyx/orgs", "repos_url": "https://api.github.com/users/lissyx/repos", "events_url": "https://api.github.com/users/lissyx/events{/privacy}", "received_events_url": "https://api.github.com/users/lissyx/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-05T17:30:24Z", "updated_at": "2018-01-05T17:30:24Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1794715\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ebrevdo\">@ebrevdo</a> What happens for a <code>tf.nn.bidirectional_dynamic_rnn</code> with no <code>sequence_length</code> argument? I am currently removing it because <code>tfcompile</code> chokes on <code>Assert</code>. This used to work quite well, but since r1.4, compiling with the recurrent layers, even very small ones, fails in a way that looks like infite loop consuming as much as CPU and memory as possible. Last time I tried master, it was exposing the same behavior.</p>\n<p>My guess is that this is because of the lack of <code>sequence_length</code>, and thus it goes weird.</p>\n<p>However, keeping the <code>sequence_length</code> fails this way:</p>\n<pre><code>2018-01-05 18:29:44.901953: F external/org_tensorflow/tensorflow/compiler/aot/tfcompile_main.cc:140] Non-OK-status: status status: Not found: Op type not registered 'Assert' in binary running on hostname. Make sure the Op and Kernel are registered in the binary running in this process.\n</code></pre>", "body_text": "@ebrevdo What happens for a tf.nn.bidirectional_dynamic_rnn with no sequence_length argument? I am currently removing it because tfcompile chokes on Assert. This used to work quite well, but since r1.4, compiling with the recurrent layers, even very small ones, fails in a way that looks like infite loop consuming as much as CPU and memory as possible. Last time I tried master, it was exposing the same behavior.\nMy guess is that this is because of the lack of sequence_length, and thus it goes weird.\nHowever, keeping the sequence_length fails this way:\n2018-01-05 18:29:44.901953: F external/org_tensorflow/tensorflow/compiler/aot/tfcompile_main.cc:140] Non-OK-status: status status: Not found: Op type not registered 'Assert' in binary running on hostname. Make sure the Op and Kernel are registered in the binary running in this process.", "body": "@ebrevdo What happens for a `tf.nn.bidirectional_dynamic_rnn` with no `sequence_length` argument? I am currently removing it because `tfcompile` chokes on `Assert`. This used to work quite well, but since r1.4, compiling with the recurrent layers, even very small ones, fails in a way that looks like infite loop consuming as much as CPU and memory as possible. Last time I tried master, it was exposing the same behavior.\r\n\r\nMy guess is that this is because of the lack of `sequence_length`, and thus it goes weird.\r\n\r\nHowever, keeping the `sequence_length` fails this way:\r\n```\r\n2018-01-05 18:29:44.901953: F external/org_tensorflow/tensorflow/compiler/aot/tfcompile_main.cc:140] Non-OK-status: status status: Not found: Op type not registered 'Assert' in binary running on hostname. Make sure the Op and Kernel are registered in the binary running in this process.\r\n```"}