{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/315153230", "html_url": "https://github.com/tensorflow/tensorflow/issues/11275#issuecomment-315153230", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11275", "id": 315153230, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTE1MzIzMA==", "user": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-13T17:52:10Z", "updated_at": "2017-07-13T17:52:10Z", "author_association": "CONTRIBUTOR", "body_html": "<div class=\"email-fragment\">Keep in mind that tf.nn.dynamic_rnn relies on tf.while_loop; there are now\nsome XLA primitives you can use (as of the last couple of days) in github\nmaster; see, i.e.,\n\n<a href=\"https://github.com/tensorflow/tensorflow/commit/3e9cd2e13da566e279396d232004d3c4ffad336e\" class=\"commit-link\"><tt>3e9cd2e</tt></a>\n\n<a href=\"https://github.com/tensorflow/tensorflow/commit/eb1fe50da445d3880b588215f6fadcc7f48dd3ff\" class=\"commit-link\"><tt>eb1fe50</tt></a>\n\nYou'll want to download a tensorflow nightly if you want to try it.\n\nKeep in mind this code will perform a *full unroll* internally on the XLA\nside, and nested while_loops (while_loop inside a dynamic_rnn) are not\nreally supported.\n\nYou want to be really careful with this new, relatively untested, xla\nbridge.  See the new xla rnn unit tests for examples.</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On Thu, Jul 13, 2017 at 10:42 AM, Todd Wang ***@***.***&gt; wrote:\n <a class=\"user-mention\" href=\"https://github.com/carlthome\">@carlthome</a> &lt;<a href=\"https://github.com/carlthome\">https://github.com/carlthome</a>&gt; Yeah, one way or another we'll\n have support for loops in XLA AOT; we just need to work out the technical\n details.\n\n We don't have documentation about what TensorFlow ops we support via XLA\n AOT or JIT at the moment, but the implementation of all of the TF-&gt;XLA\n translations is here:\n <a href=\"https://github.com/tensorflow/tensorflow/tree/master/\">https://github.com/tensorflow/tensorflow/tree/master/</a>\n tensorflow/compiler/tf2xla/kernels\n\n And yes, thanks for mentioning unrolling. Indeed for some models, a\n workaround is to statically unroll your loops before feeding into XLA. An\n example for LSTMs is here:\n <a href=\"https://github.com/tensorflow/tensorflow/blob/master/\">https://github.com/tensorflow/tensorflow/blob/master/</a>\n tensorflow/compiler/tests/lstm.py\n <a href=\"https://github.com/tensorflow/tensorflow/blob/master/\">https://github.com/tensorflow/tensorflow/blob/master/</a>\n tensorflow/compiler/tests/lstm_test.py\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"240455025\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/11275\" href=\"https://github.com/tensorflow/tensorflow/issues/11275#issuecomment-315150279\">#11275 (comment)</a>&gt;,\n or mute the thread\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/ABtimxN9jaKDnZKGMyRBiV6cEDQCLllHks5sNlcDgaJpZM4ONgEv\">https://github.com/notifications/unsubscribe-auth/ABtimxN9jaKDnZKGMyRBiV6cEDQCLllHks5sNlcDgaJpZM4ONgEv</a>&gt;\n .\n</div>\n<div class=\"email-fragment\"></div>\n</div>", "body_text": "Keep in mind that tf.nn.dynamic_rnn relies on tf.while_loop; there are now\nsome XLA primitives you can use (as of the last couple of days) in github\nmaster; see, i.e.,\n\n3e9cd2e\n\neb1fe50\n\nYou'll want to download a tensorflow nightly if you want to try it.\n\nKeep in mind this code will perform a *full unroll* internally on the XLA\nside, and nested while_loops (while_loop inside a dynamic_rnn) are not\nreally supported.\n\nYou want to be really careful with this new, relatively untested, xla\nbridge.  See the new xla rnn unit tests for examples.\n\u2026\nOn Thu, Jul 13, 2017 at 10:42 AM, Todd Wang ***@***.***> wrote:\n @carlthome <https://github.com/carlthome> Yeah, one way or another we'll\n have support for loops in XLA AOT; we just need to work out the technical\n details.\n\n We don't have documentation about what TensorFlow ops we support via XLA\n AOT or JIT at the moment, but the implementation of all of the TF->XLA\n translations is here:\n https://github.com/tensorflow/tensorflow/tree/master/\n tensorflow/compiler/tf2xla/kernels\n\n And yes, thanks for mentioning unrolling. Indeed for some models, a\n workaround is to statically unroll your loops before feeding into XLA. An\n example for LSTMs is here:\n https://github.com/tensorflow/tensorflow/blob/master/\n tensorflow/compiler/tests/lstm.py\n https://github.com/tensorflow/tensorflow/blob/master/\n tensorflow/compiler/tests/lstm_test.py\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#11275 (comment)>,\n or mute the thread\n <https://github.com/notifications/unsubscribe-auth/ABtimxN9jaKDnZKGMyRBiV6cEDQCLllHks5sNlcDgaJpZM4ONgEv>\n .", "body": "Keep in mind that tf.nn.dynamic_rnn relies on tf.while_loop; there are now\nsome XLA primitives you can use (as of the last couple of days) in github\nmaster; see, i.e.,\n\nhttps://github.com/tensorflow/tensorflow/commit/3e9cd2e13da566e279396d232004d3c4ffad336e\n\nhttps://github.com/tensorflow/tensorflow/commit/eb1fe50da445d3880b588215f6fadcc7f48dd3ff\n\nYou'll want to download a tensorflow nightly if you want to try it.\n\nKeep in mind this code will perform a *full unroll* internally on the XLA\nside, and nested while_loops (while_loop inside a dynamic_rnn) are not\nreally supported.\n\nYou want to be really careful with this new, relatively untested, xla\nbridge.  See the new xla rnn unit tests for examples.\n\nOn Thu, Jul 13, 2017 at 10:42 AM, Todd Wang <notifications@github.com>\nwrote:\n\n> @carlthome <https://github.com/carlthome> Yeah, one way or another we'll\n> have support for loops in XLA AOT; we just need to work out the technical\n> details.\n>\n> We don't have documentation about what TensorFlow ops we support via XLA\n> AOT or JIT at the moment, but the implementation of all of the TF->XLA\n> translations is here:\n> https://github.com/tensorflow/tensorflow/tree/master/\n> tensorflow/compiler/tf2xla/kernels\n>\n> And yes, thanks for mentioning unrolling. Indeed for some models, a\n> workaround is to statically unroll your loops before feeding into XLA. An\n> example for LSTMs is here:\n> https://github.com/tensorflow/tensorflow/blob/master/\n> tensorflow/compiler/tests/lstm.py\n> https://github.com/tensorflow/tensorflow/blob/master/\n> tensorflow/compiler/tests/lstm_test.py\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/issues/11275#issuecomment-315150279>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABtimxN9jaKDnZKGMyRBiV6cEDQCLllHks5sNlcDgaJpZM4ONgEv>\n> .\n>\n"}