{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/396993598", "html_url": "https://github.com/tensorflow/tensorflow/issues/19936#issuecomment-396993598", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19936", "id": 396993598, "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njk5MzU5OA==", "user": {"login": "scottcjt", "id": 34140249, "node_id": "MDQ6VXNlcjM0MTQwMjQ5", "avatar_url": "https://avatars2.githubusercontent.com/u/34140249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottcjt", "html_url": "https://github.com/scottcjt", "followers_url": "https://api.github.com/users/scottcjt/followers", "following_url": "https://api.github.com/users/scottcjt/following{/other_user}", "gists_url": "https://api.github.com/users/scottcjt/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottcjt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottcjt/subscriptions", "organizations_url": "https://api.github.com/users/scottcjt/orgs", "repos_url": "https://api.github.com/users/scottcjt/repos", "events_url": "https://api.github.com/users/scottcjt/events{/privacy}", "received_events_url": "https://api.github.com/users/scottcjt/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-13T16:03:29Z", "updated_at": "2018-06-13T16:03:29Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Yes, if there is an outer variable scope, <code>create_xxx_graph</code> correctly creates (or reuse) min/max vars. IMHO the behavior is weird, but since it is a <code>reuse=True</code> issue and there is workaround, I can live with it...</p>\n<p>Let me recap the points in mobilenet scripts you provided: create separate graphs for training and eval graph to avoid scope issues. Variable contents are shared between two graphs by save/restore?</p>", "body_text": "Yes, if there is an outer variable scope, create_xxx_graph correctly creates (or reuse) min/max vars. IMHO the behavior is weird, but since it is a reuse=True issue and there is workaround, I can live with it...\nLet me recap the points in mobilenet scripts you provided: create separate graphs for training and eval graph to avoid scope issues. Variable contents are shared between two graphs by save/restore?", "body": "Yes, if there is an outer variable scope, `create_xxx_graph` correctly creates (or reuse) min/max vars. IMHO the behavior is weird, but since it is a `reuse=True` issue and there is workaround, I can live with it...\r\n\r\nLet me recap the points in mobilenet scripts you provided: create separate graphs for training and eval graph to avoid scope issues. Variable contents are shared between two graphs by save/restore?"}