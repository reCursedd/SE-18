{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/338761615", "html_url": "https://github.com/tensorflow/tensorflow/issues/13777#issuecomment-338761615", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13777", "id": 338761615, "node_id": "MDEyOklzc3VlQ29tbWVudDMzODc2MTYxNQ==", "user": {"login": "m3bm3b", "id": 10168793, "node_id": "MDQ6VXNlcjEwMTY4Nzkz", "avatar_url": "https://avatars0.githubusercontent.com/u/10168793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m3bm3b", "html_url": "https://github.com/m3bm3b", "followers_url": "https://api.github.com/users/m3bm3b/followers", "following_url": "https://api.github.com/users/m3bm3b/following{/other_user}", "gists_url": "https://api.github.com/users/m3bm3b/gists{/gist_id}", "starred_url": "https://api.github.com/users/m3bm3b/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m3bm3b/subscriptions", "organizations_url": "https://api.github.com/users/m3bm3b/orgs", "repos_url": "https://api.github.com/users/m3bm3b/repos", "events_url": "https://api.github.com/users/m3bm3b/events{/privacy}", "received_events_url": "https://api.github.com/users/m3bm3b/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-23T18:57:04Z", "updated_at": "2017-10-23T18:57:04Z", "author_association": "NONE", "body_html": "<div class=\"email-fragment\">Assuming you wish to build nsync as C++11\n(which is what TensorFlow requires), at the root of the nsync tree do:\n  cp -r builds/x86_64.linux.c++11 builds/s390x.linux.c++11\n  cd builds/s390x.linux.c++11\n  make depend test\nThis doesn't actually use the new header file because it's using C++11\natomics.\n\nTo try the new header file, do a C build, like this:\n    mkdir builds/s390x.linux.old_gcc\n    sed 's,x86_64,s390x,g' builds/x86_64.linux.old_gcc/Makefile &gt;\nbuilds/s390x.linux.old_gcc/Makefile\n    touch builds/s390x.linux.old_gcc/dependfile\n    cd builds/s390x.linux.old_gcc\n    make depend test\nThis will build nsync as C (not C++11)\nusing \"old-style\" gcc atomics; that will use the header file.\n(Old-style gcc atomics have compare and swap, but\ndon't include loads and stores, so those are\nimplemented with ordinary loads and stores, with extra memory barriers\nas indicated by the flag in the new header.   The assumption here is\nthat the platform will perform loads and stores atomically if\nthey are 32-bits and naturally aligned.\nNew-style gcc atomics do include loads and stores, and so again wouldn't\nreally need\nthe header file.)\n\nAs you can tell, there are a distressingly large number of\noptions for getting atomic operations, because some platforms\nimplement some techniques, while others implement different ones.</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On 23 October 2017 at 11:33, Nayana Thorat ***@***.***&gt; wrote:\n Yes...Will verify the nsync code on s390x with the commit id you have\n mentioned.\n I guess I need to create a makefile directory also. Earlier, I had used\n command make depend test. Is that sufficient?\n Is there any specific command to build nsync using basel build?\n I'll also try building Tensorflow using above commit id (just by making\n change in workspace.bzl file of Tensorflow) on s390x using basel build\n command.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"266047396\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/13777\" href=\"https://github.com/tensorflow/tensorflow/issues/13777#issuecomment-338753351\">#13777 (comment)</a>&gt;,\n or mute the thread\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/AJsp2Y_8wV4xPN7Ep_0BZ0adkQdXOGbYks5svNvZgaJpZM4P70PT\">https://github.com/notifications/unsubscribe-auth/AJsp2Y_8wV4xPN7Ep_0BZ0adkQdXOGbYks5svNvZgaJpZM4P70PT</a>&gt;\n .\n</div>\n<div class=\"email-fragment\"></div>\n</div>", "body_text": "Assuming you wish to build nsync as C++11\n(which is what TensorFlow requires), at the root of the nsync tree do:\n  cp -r builds/x86_64.linux.c++11 builds/s390x.linux.c++11\n  cd builds/s390x.linux.c++11\n  make depend test\nThis doesn't actually use the new header file because it's using C++11\natomics.\n\nTo try the new header file, do a C build, like this:\n    mkdir builds/s390x.linux.old_gcc\n    sed 's,x86_64,s390x,g' builds/x86_64.linux.old_gcc/Makefile >\nbuilds/s390x.linux.old_gcc/Makefile\n    touch builds/s390x.linux.old_gcc/dependfile\n    cd builds/s390x.linux.old_gcc\n    make depend test\nThis will build nsync as C (not C++11)\nusing \"old-style\" gcc atomics; that will use the header file.\n(Old-style gcc atomics have compare and swap, but\ndon't include loads and stores, so those are\nimplemented with ordinary loads and stores, with extra memory barriers\nas indicated by the flag in the new header.   The assumption here is\nthat the platform will perform loads and stores atomically if\nthey are 32-bits and naturally aligned.\nNew-style gcc atomics do include loads and stores, and so again wouldn't\nreally need\nthe header file.)\n\nAs you can tell, there are a distressingly large number of\noptions for getting atomic operations, because some platforms\nimplement some techniques, while others implement different ones.\n\u2026\nOn 23 October 2017 at 11:33, Nayana Thorat ***@***.***> wrote:\n Yes...Will verify the nsync code on s390x with the commit id you have\n mentioned.\n I guess I need to create a makefile directory also. Earlier, I had used\n command make depend test. Is that sufficient?\n Is there any specific command to build nsync using basel build?\n I'll also try building Tensorflow using above commit id (just by making\n change in workspace.bzl file of Tensorflow) on s390x using basel build\n command.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#13777 (comment)>,\n or mute the thread\n <https://github.com/notifications/unsubscribe-auth/AJsp2Y_8wV4xPN7Ep_0BZ0adkQdXOGbYks5svNvZgaJpZM4P70PT>\n .", "body": "Assuming you wish to build nsync as C++11\n(which is what TensorFlow requires), at the root of the nsync tree do:\n  cp -r builds/x86_64.linux.c++11 builds/s390x.linux.c++11\n  cd builds/s390x.linux.c++11\n  make depend test\nThis doesn't actually use the new header file because it's using C++11\natomics.\n\nTo try the new header file, do a C build, like this:\n    mkdir builds/s390x.linux.old_gcc\n    sed 's,x86_64,s390x,g' builds/x86_64.linux.old_gcc/Makefile >\nbuilds/s390x.linux.old_gcc/Makefile\n    touch builds/s390x.linux.old_gcc/dependfile\n    cd builds/s390x.linux.old_gcc\n    make depend test\nThis will build nsync as C (not C++11)\nusing \"old-style\" gcc atomics; that will use the header file.\n(Old-style gcc atomics have compare and swap, but\ndon't include loads and stores, so those are\nimplemented with ordinary loads and stores, with extra memory barriers\nas indicated by the flag in the new header.   The assumption here is\nthat the platform will perform loads and stores atomically if\nthey are 32-bits and naturally aligned.\nNew-style gcc atomics do include loads and stores, and so again wouldn't\nreally need\nthe header file.)\n\nAs you can tell, there are a distressingly large number of\noptions for getting atomic operations, because some platforms\nimplement some techniques, while others implement different ones.\n\nOn 23 October 2017 at 11:33, Nayana Thorat <notifications@github.com> wrote:\n\n> Yes...Will verify the nsync code on s390x with the commit id you have\n> mentioned.\n> I guess I need to create a makefile directory also. Earlier, I had used\n> command make depend test. Is that sufficient?\n> Is there any specific command to build nsync using basel build?\n> I'll also try building Tensorflow using above commit id (just by making\n> change in workspace.bzl file of Tensorflow) on s390x using basel build\n> command.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/issues/13777#issuecomment-338753351>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AJsp2Y_8wV4xPN7Ep_0BZ0adkQdXOGbYks5svNvZgaJpZM4P70PT>\n> .\n>\n"}