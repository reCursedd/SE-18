{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/338722011", "html_url": "https://github.com/tensorflow/tensorflow/issues/13777#issuecomment-338722011", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13777", "id": 338722011, "node_id": "MDEyOklzc3VlQ29tbWVudDMzODcyMjAxMQ==", "user": {"login": "m3bm3b", "id": 10168793, "node_id": "MDQ6VXNlcjEwMTY4Nzkz", "avatar_url": "https://avatars0.githubusercontent.com/u/10168793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m3bm3b", "html_url": "https://github.com/m3bm3b", "followers_url": "https://api.github.com/users/m3bm3b/followers", "following_url": "https://api.github.com/users/m3bm3b/following{/other_user}", "gists_url": "https://api.github.com/users/m3bm3b/gists{/gist_id}", "starred_url": "https://api.github.com/users/m3bm3b/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m3bm3b/subscriptions", "organizations_url": "https://api.github.com/users/m3bm3b/orgs", "repos_url": "https://api.github.com/users/m3bm3b/repos", "events_url": "https://api.github.com/users/m3bm3b/events{/privacy}", "received_events_url": "https://api.github.com/users/m3bm3b/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-23T16:46:07Z", "updated_at": "2017-10-23T16:46:07Z", "author_association": "NONE", "body_html": "<div class=\"email-fragment\">My plan is to introduce a change to the bazel BUILD file that should make\nnsync build with bazel\non linux s390x.\n\nI believe ATM_LD_IS_ACQ_ST_IS_REL_ should be 1 for s390x.\nWhen 1, this setting means\n  \"on this machine, all loads act as acquire loads, and all stores act as\nrelease stores\".\nI believe that s390x is a sequentially consistent machine, and thus the\nvalue should be 1.\nIf you believe that's not right please let me know.   (Incidentally,\nit is _always_ safe to use the value 0 for this parameter on any machine.\nTo use 0 when the value could be 1 will merely cause extra memory\nbarriers to be inserted that will cause no harm, except to be slightly\nslower\nthan necessary.   If you don't create this file, in a posix environment\nnsync will automatically pick up platform/posix/cputype.h, which has the\nvalue 0.)\nI plan to create this file for s390x with the value 1 in an upcoming change.\n\n\nIt is usually not essential to create nsync_atm_&lt;platform&gt;.s for each new\nmachine type.\nThe library needs to get atomic operations from somewhere, but there are\nseveral possibilities.\nAs well as assembly language, nsync may get atomic operations\nfrom language-dependent libraries (it can from C++11 or C11),\ncompiler intrinsics (it can from gcc and clang),  or from\noperating system dependent libraries (such as on MacOS, NetBSD, Win32).\nWhen compiling TensorFlow, it's normal to use the C++11 atomic ops because\nit's all in C++11.\nThus, assuming you have a complete C++11 implementation,\nthe compiler and its runtime will already provide the operations in a\nTensorFlow build,\nand handwritten assembly language is not needed in that case.\nThe assembly language is\nneeded typically when compiling with unusual or proprietary compilers in\nC90,\noften on uncommon operating systems (embedded systems, for example).\n\nMike</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On 23 October 2017 at 05:22, Nayana Thorat ***@***.***&gt; wrote:\n Thanks <a class=\"user-mention\" href=\"https://github.com/gunan\">@gunan</a> &lt;<a href=\"https://github.com/gunan\">https://github.com/gunan</a>&gt; for information.\n I have added support for s390x in nsync code : BUILD as well as\n bazel/BUILD.bazel files. PFA code patch.\n\n Apart from above changes, I guess we also need to create platform specific\n sub-directory inside nysnc/builds for s390x by executing\n tools/mkmakefile.sh script.\n\n With above changes, I could resolve an error : Configurable attribute\n \"copts\" doesn't match this configuration However Tensorflow build again\n failed at:\n\n ERROR: missing input file ***@***.***//:platform/s390x/cputype.h'.\n ERROR: /home/test/tensorflow/tensorflow/tools/pip_package/BUILD:139:1: //tensorflow/tools/pip_package:build_pip_package: missing input file ***@***.***//:platform/s390x/cputype.h'.\n Target //tensorflow/tools/pip_package:build_pip_package failed to build\n Use --verbose_failures to see the command lines of failed build steps.\n ERROR: /home/test/tensorflow/tensorflow/tools/pip_package/BUILD:139:1 1 input file(s) do not exist.\n\n Tensorflow uses nsync's platform-specific sub directories available inside\n nsync/platform/ which has source code containing assembly instructions (\n cputype.h\n &lt;<a href=\"https://github.com/google/nsync/blob/master/platform/x86_64/cputype.h\">https://github.com/google/nsync/blob/master/platform/x86_64/cputype.h</a>&gt;\n and nsync_atm_.s\n &lt;<a href=\"https://github.com/google/nsync/blob/master/platform/x86_64/src/nsync_atm_x86_64.s\">https://github.com/google/nsync/blob/master/platform/x86_64/src/nsync_atm_x86_64.s</a>&gt;\n )\n\n The file cputype.h declares a flagATM_LD_IS_ACQ_ST_IS_REL_ . I'm not sure\n what should be the value (0 or 1) of this flag for s390x. For now, I have\n set this flag value to 1 and with this change Tensorflow build succeeds.\n However, need to confirm on this.\n\n Also, need information on what assembly instructions are required for\n s390x from file nsync_atm_&lt;platform&gt;.s\n <a class=\"user-mention\" href=\"https://github.com/gunan\">@gunan</a> &lt;<a href=\"https://github.com/gunan\">https://github.com/gunan</a>&gt; <a class=\"user-mention\" href=\"https://github.com/m3bm3b\">@m3bm3b</a> &lt;<a href=\"https://github.com/m3bm3b\">https://github.com/m3bm3b</a>&gt; Can\n you please check and let me know.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"266047396\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/13777\" href=\"https://github.com/tensorflow/tensorflow/issues/13777#issuecomment-338640123\">#13777 (comment)</a>&gt;,\n or mute the thread\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/AJsp2SZlizVVf-rnQx3TJc_BP9Q_ZMhFks5svITogaJpZM4P70PT\">https://github.com/notifications/unsubscribe-auth/AJsp2SZlizVVf-rnQx3TJc_BP9Q_ZMhFks5svITogaJpZM4P70PT</a>&gt;\n .\n</div>\n<div class=\"email-fragment\"></div>\n</div>", "body_text": "My plan is to introduce a change to the bazel BUILD file that should make\nnsync build with bazel\non linux s390x.\n\nI believe ATM_LD_IS_ACQ_ST_IS_REL_ should be 1 for s390x.\nWhen 1, this setting means\n  \"on this machine, all loads act as acquire loads, and all stores act as\nrelease stores\".\nI believe that s390x is a sequentially consistent machine, and thus the\nvalue should be 1.\nIf you believe that's not right please let me know.   (Incidentally,\nit is _always_ safe to use the value 0 for this parameter on any machine.\nTo use 0 when the value could be 1 will merely cause extra memory\nbarriers to be inserted that will cause no harm, except to be slightly\nslower\nthan necessary.   If you don't create this file, in a posix environment\nnsync will automatically pick up platform/posix/cputype.h, which has the\nvalue 0.)\nI plan to create this file for s390x with the value 1 in an upcoming change.\n\n\nIt is usually not essential to create nsync_atm_<platform>.s for each new\nmachine type.\nThe library needs to get atomic operations from somewhere, but there are\nseveral possibilities.\nAs well as assembly language, nsync may get atomic operations\nfrom language-dependent libraries (it can from C++11 or C11),\ncompiler intrinsics (it can from gcc and clang),  or from\noperating system dependent libraries (such as on MacOS, NetBSD, Win32).\nWhen compiling TensorFlow, it's normal to use the C++11 atomic ops because\nit's all in C++11.\nThus, assuming you have a complete C++11 implementation,\nthe compiler and its runtime will already provide the operations in a\nTensorFlow build,\nand handwritten assembly language is not needed in that case.\nThe assembly language is\nneeded typically when compiling with unusual or proprietary compilers in\nC90,\noften on uncommon operating systems (embedded systems, for example).\n\nMike\n\u2026\nOn 23 October 2017 at 05:22, Nayana Thorat ***@***.***> wrote:\n Thanks @gunan <https://github.com/gunan> for information.\n I have added support for s390x in nsync code : BUILD as well as\n bazel/BUILD.bazel files. PFA code patch.\n\n Apart from above changes, I guess we also need to create platform specific\n sub-directory inside nysnc/builds for s390x by executing\n tools/mkmakefile.sh script.\n\n With above changes, I could resolve an error : Configurable attribute\n \"copts\" doesn't match this configuration However Tensorflow build again\n failed at:\n\n ERROR: missing input file ***@***.***//:platform/s390x/cputype.h'.\n ERROR: /home/test/tensorflow/tensorflow/tools/pip_package/BUILD:139:1: //tensorflow/tools/pip_package:build_pip_package: missing input file ***@***.***//:platform/s390x/cputype.h'.\n Target //tensorflow/tools/pip_package:build_pip_package failed to build\n Use --verbose_failures to see the command lines of failed build steps.\n ERROR: /home/test/tensorflow/tensorflow/tools/pip_package/BUILD:139:1 1 input file(s) do not exist.\n\n Tensorflow uses nsync's platform-specific sub directories available inside\n nsync/platform/ which has source code containing assembly instructions (\n cputype.h\n <https://github.com/google/nsync/blob/master/platform/x86_64/cputype.h>\n and nsync_atm_.s\n <https://github.com/google/nsync/blob/master/platform/x86_64/src/nsync_atm_x86_64.s>\n )\n\n The file cputype.h declares a flagATM_LD_IS_ACQ_ST_IS_REL_ . I'm not sure\n what should be the value (0 or 1) of this flag for s390x. For now, I have\n set this flag value to 1 and with this change Tensorflow build succeeds.\n However, need to confirm on this.\n\n Also, need information on what assembly instructions are required for\n s390x from file nsync_atm_<platform>.s\n @gunan <https://github.com/gunan> @m3bm3b <https://github.com/m3bm3b> Can\n you please check and let me know.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#13777 (comment)>,\n or mute the thread\n <https://github.com/notifications/unsubscribe-auth/AJsp2SZlizVVf-rnQx3TJc_BP9Q_ZMhFks5svITogaJpZM4P70PT>\n .", "body": "My plan is to introduce a change to the bazel BUILD file that should make\nnsync build with bazel\non linux s390x.\n\nI believe ATM_LD_IS_ACQ_ST_IS_REL_ should be 1 for s390x.\nWhen 1, this setting means\n  \"on this machine, all loads act as acquire loads, and all stores act as\nrelease stores\".\nI believe that s390x is a sequentially consistent machine, and thus the\nvalue should be 1.\nIf you believe that's not right please let me know.   (Incidentally,\nit is _always_ safe to use the value 0 for this parameter on any machine.\nTo use 0 when the value could be 1 will merely cause extra memory\nbarriers to be inserted that will cause no harm, except to be slightly\nslower\nthan necessary.   If you don't create this file, in a posix environment\nnsync will automatically pick up platform/posix/cputype.h, which has the\nvalue 0.)\nI plan to create this file for s390x with the value 1 in an upcoming change.\n\n\nIt is usually not essential to create nsync_atm_<platform>.s for each new\nmachine type.\nThe library needs to get atomic operations from somewhere, but there are\nseveral possibilities.\nAs well as assembly language, nsync may get atomic operations\nfrom language-dependent libraries (it can from C++11 or C11),\ncompiler intrinsics (it can from gcc and clang),  or from\noperating system dependent libraries (such as on MacOS, NetBSD, Win32).\nWhen compiling TensorFlow, it's normal to use the C++11 atomic ops because\nit's all in C++11.\nThus, assuming you have a complete C++11 implementation,\nthe compiler and its runtime will already provide the operations in a\nTensorFlow build,\nand handwritten assembly language is not needed in that case.\nThe assembly language is\nneeded typically when compiling with unusual or proprietary compilers in\nC90,\noften on uncommon operating systems (embedded systems, for example).\n\nMike\n\nOn 23 October 2017 at 05:22, Nayana Thorat <notifications@github.com> wrote:\n\n> Thanks @gunan <https://github.com/gunan> for information.\n> I have added support for s390x in nsync code : BUILD as well as\n> bazel/BUILD.bazel files. PFA code patch.\n>\n> Apart from above changes, I guess we also need to create platform specific\n> sub-directory inside nysnc/builds for s390x by executing\n> tools/mkmakefile.sh script.\n>\n> With above changes, I could resolve an error : Configurable attribute\n> \"copts\" doesn't match this configuration However Tensorflow build again\n> failed at:\n>\n> ERROR: missing input file '@nsync//:platform/s390x/cputype.h'.\n> ERROR: /home/test/tensorflow/tensorflow/tools/pip_package/BUILD:139:1: //tensorflow/tools/pip_package:build_pip_package: missing input file '@nsync//:platform/s390x/cputype.h'.\n> Target //tensorflow/tools/pip_package:build_pip_package failed to build\n> Use --verbose_failures to see the command lines of failed build steps.\n> ERROR: /home/test/tensorflow/tensorflow/tools/pip_package/BUILD:139:1 1 input file(s) do not exist.\n>\n> Tensorflow uses nsync's platform-specific sub directories available inside\n> nsync/platform/ which has source code containing assembly instructions (\n> cputype.h\n> <https://github.com/google/nsync/blob/master/platform/x86_64/cputype.h>\n> and nsync_atm_.s\n> <https://github.com/google/nsync/blob/master/platform/x86_64/src/nsync_atm_x86_64.s>\n> )\n>\n> The file cputype.h declares a flagATM_LD_IS_ACQ_ST_IS_REL_ . I'm not sure\n> what should be the value (0 or 1) of this flag for s390x. For now, I have\n> set this flag value to 1 and with this change Tensorflow build succeeds.\n> However, need to confirm on this.\n>\n> Also, need information on what assembly instructions are required for\n> s390x from file nsync_atm_<platform>.s\n> @gunan <https://github.com/gunan> @m3bm3b <https://github.com/m3bm3b> Can\n> you please check and let me know.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/issues/13777#issuecomment-338640123>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AJsp2SZlizVVf-rnQx3TJc_BP9Q_ZMhFks5svITogaJpZM4P70PT>\n> .\n>\n"}