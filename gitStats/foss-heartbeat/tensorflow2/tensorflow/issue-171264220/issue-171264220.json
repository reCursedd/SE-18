{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3828", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3828/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3828/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3828/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3828", "id": 171264220, "node_id": "MDU6SXNzdWUxNzEyNjQyMjA=", "number": 3828, "title": "Estimator raises spurious error with dynamic_rnn model", "user": {"login": "kuza55", "id": 387986, "node_id": "MDQ6VXNlcjM4Nzk4Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/387986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kuza55", "html_url": "https://github.com/kuza55", "followers_url": "https://api.github.com/users/kuza55/followers", "following_url": "https://api.github.com/users/kuza55/following{/other_user}", "gists_url": "https://api.github.com/users/kuza55/gists{/gist_id}", "starred_url": "https://api.github.com/users/kuza55/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kuza55/subscriptions", "organizations_url": "https://api.github.com/users/kuza55/orgs", "repos_url": "https://api.github.com/users/kuza55/repos", "events_url": "https://api.github.com/users/kuza55/events{/privacy}", "received_events_url": "https://api.github.com/users/kuza55/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-15T21:18:10Z", "updated_at": "2016-09-26T11:55:55Z", "closed_at": "2016-08-16T16:48:52Z", "author_association": "NONE", "body_html": "<p>I'm trying to train an RNN and I'm playing with the dynamic_rnn model inside an skflow Estimator and trying to traing it sequences of increasing length.</p>\n<p>So I end up passing in data of the form [batch_size, seq_length, seq_entry_size]</p>\n<p>Where seq_length varies, but is constant each time I call partial_fit.</p>\n<p>I am constructing my dynamic_rnn model like so:</p>\n<pre><code>def rnn_model2(x, y):\n  cell = tf.nn.rnn_cell.GRUCell(250)\n\n  _, encoding = tf.nn.dynamic_rnn(cell, x, dtype=tf.float32)\n\n  target = tf.one_hot(y, 2, 1, 0)\n\n  prediction, loss = learn.models.logistic_regression(encoding, target)\n\n  # Create a training op.\n  train_op = tf.contrib.layers.optimize_loss(\n      loss, tf.contrib.framework.get_global_step(),\n      optimizer='Adam', learning_rate=0.01)\n\n  return {'class': tf.argmax(prediction, 1), 'prob': prediction}, loss, train_op\n\nclassifier = learn.Estimator(model_fn=rnn_model2)\n</code></pre>\n<h3>Environment info</h3>\n<p>Operating System:<br>\nUbuntu on Windows 10</p>\n<p>If installed from binary pip package, provide:<br>\n0.10.rc0</p>\n<h3>Steps to reproduce</h3>\n<ol>\n<li>Create an Estimator with a model_fn that uses a dynamic_rnn</li>\n<li>Pass variable length data through partial_fit</li>\n<li>Error</li>\n</ol>\n<h3>What have you tried?</h3>\n<ol>\n<li>I commented out the checks in estimator.py and things work</li>\n</ol>\n<h3>Logs or other output that would be helpful</h3>\n<p>WARNING:tensorflow:Given features: Tensor(\"input:0\", shape=(?, 2, 3), dtype=float32), required signatures: TensorSignature(dtype=tf.float32, shape=TensorShape([Dimension(None), Dimension(1), Dimension(3)]), is_sparse=False).<br>\nTraceback (most recent call last):<br>\nFile \"mouse.py\", line 136, in <br>\ntf.app.run()<br>\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py\", line 30, in run<br>\nsys.exit(main(sys.argv))<br>\nFile \"mouse.py\", line 126, in main<br>\nclassifier.partial_fit(x_train, y_train, steps=3)<br>\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 262, in partial_fit<br>\nbatch_size=batch_size, monitors=monitors)<br>\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 219, in fit<br>\nmax_steps=max_steps)<br>\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 478, in _train_model<br>\nself._check_inputs(features, targets)<br>\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 427, in _check_inputs<br>\n(str(features), str(self._features_info)))<br>\nValueError: Features are incompatible with given information. Given features: Tensor(\"input:0\", shape=(?, 2, 3), dtype=float32), required signatures: TensorSignature(dtype=tf.float32, shape=TensorShape([Dimension(None), Dimension(1), Dimension(3)]), is_sparse=False).</p>", "body_text": "I'm trying to train an RNN and I'm playing with the dynamic_rnn model inside an skflow Estimator and trying to traing it sequences of increasing length.\nSo I end up passing in data of the form [batch_size, seq_length, seq_entry_size]\nWhere seq_length varies, but is constant each time I call partial_fit.\nI am constructing my dynamic_rnn model like so:\ndef rnn_model2(x, y):\n  cell = tf.nn.rnn_cell.GRUCell(250)\n\n  _, encoding = tf.nn.dynamic_rnn(cell, x, dtype=tf.float32)\n\n  target = tf.one_hot(y, 2, 1, 0)\n\n  prediction, loss = learn.models.logistic_regression(encoding, target)\n\n  # Create a training op.\n  train_op = tf.contrib.layers.optimize_loss(\n      loss, tf.contrib.framework.get_global_step(),\n      optimizer='Adam', learning_rate=0.01)\n\n  return {'class': tf.argmax(prediction, 1), 'prob': prediction}, loss, train_op\n\nclassifier = learn.Estimator(model_fn=rnn_model2)\n\nEnvironment info\nOperating System:\nUbuntu on Windows 10\nIf installed from binary pip package, provide:\n0.10.rc0\nSteps to reproduce\n\nCreate an Estimator with a model_fn that uses a dynamic_rnn\nPass variable length data through partial_fit\nError\n\nWhat have you tried?\n\nI commented out the checks in estimator.py and things work\n\nLogs or other output that would be helpful\nWARNING:tensorflow:Given features: Tensor(\"input:0\", shape=(?, 2, 3), dtype=float32), required signatures: TensorSignature(dtype=tf.float32, shape=TensorShape([Dimension(None), Dimension(1), Dimension(3)]), is_sparse=False).\nTraceback (most recent call last):\nFile \"mouse.py\", line 136, in \ntf.app.run()\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py\", line 30, in run\nsys.exit(main(sys.argv))\nFile \"mouse.py\", line 126, in main\nclassifier.partial_fit(x_train, y_train, steps=3)\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 262, in partial_fit\nbatch_size=batch_size, monitors=monitors)\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 219, in fit\nmax_steps=max_steps)\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 478, in _train_model\nself._check_inputs(features, targets)\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 427, in _check_inputs\n(str(features), str(self._features_info)))\nValueError: Features are incompatible with given information. Given features: Tensor(\"input:0\", shape=(?, 2, 3), dtype=float32), required signatures: TensorSignature(dtype=tf.float32, shape=TensorShape([Dimension(None), Dimension(1), Dimension(3)]), is_sparse=False).", "body": "I'm trying to train an RNN and I'm playing with the dynamic_rnn model inside an skflow Estimator and trying to traing it sequences of increasing length.\n\nSo I end up passing in data of the form [batch_size, seq_length, seq_entry_size]\n\nWhere seq_length varies, but is constant each time I call partial_fit.\n\nI am constructing my dynamic_rnn model like so:\n\n```\ndef rnn_model2(x, y):\n  cell = tf.nn.rnn_cell.GRUCell(250)\n\n  _, encoding = tf.nn.dynamic_rnn(cell, x, dtype=tf.float32)\n\n  target = tf.one_hot(y, 2, 1, 0)\n\n  prediction, loss = learn.models.logistic_regression(encoding, target)\n\n  # Create a training op.\n  train_op = tf.contrib.layers.optimize_loss(\n      loss, tf.contrib.framework.get_global_step(),\n      optimizer='Adam', learning_rate=0.01)\n\n  return {'class': tf.argmax(prediction, 1), 'prob': prediction}, loss, train_op\n\nclassifier = learn.Estimator(model_fn=rnn_model2)\n```\n### Environment info\n\nOperating System:\nUbuntu on Windows 10\n\nIf installed from binary pip package, provide:\n0.10.rc0\n### Steps to reproduce\n1. Create an Estimator with a model_fn that uses a dynamic_rnn\n2. Pass variable length data through partial_fit\n3. Error\n### What have you tried?\n1. I commented out the checks in estimator.py and things work\n### Logs or other output that would be helpful\n\nWARNING:tensorflow:Given features: Tensor(\"input:0\", shape=(?, 2, 3), dtype=float32), required signatures: TensorSignature(dtype=tf.float32, shape=TensorShape([Dimension(None), Dimension(1), Dimension(3)]), is_sparse=False).\nTraceback (most recent call last):\n  File \"mouse.py\", line 136, in <module>\n    tf.app.run()\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py\", line 30, in run\n    sys.exit(main(sys.argv))\n  File \"mouse.py\", line 126, in main\n    classifier.partial_fit(x_train, y_train, steps=3)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 262, in partial_fit\n    batch_size=batch_size, monitors=monitors)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 219, in fit\n    max_steps=max_steps)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 478, in _train_model\n    self._check_inputs(features, targets)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 427, in _check_inputs\n    (str(features), str(self._features_info)))\nValueError: Features are incompatible with given information. Given features: Tensor(\"input:0\", shape=(?, 2, 3), dtype=float32), required signatures: TensorSignature(dtype=tf.float32, shape=TensorShape([Dimension(None), Dimension(1), Dimension(3)]), is_sparse=False).\n"}