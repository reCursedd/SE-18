{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16951", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16951/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16951/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16951/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16951", "id": 296453386, "node_id": "MDU6SXNzdWUyOTY0NTMzODY=", "number": 16951, "title": "TypeError: int() argument must be a string, a bytes-like object or a number, not 'Tensor'", "user": {"login": "burglarhobbit", "id": 15987266, "node_id": "MDQ6VXNlcjE1OTg3MjY2", "avatar_url": "https://avatars2.githubusercontent.com/u/15987266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/burglarhobbit", "html_url": "https://github.com/burglarhobbit", "followers_url": "https://api.github.com/users/burglarhobbit/followers", "following_url": "https://api.github.com/users/burglarhobbit/following{/other_user}", "gists_url": "https://api.github.com/users/burglarhobbit/gists{/gist_id}", "starred_url": "https://api.github.com/users/burglarhobbit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/burglarhobbit/subscriptions", "organizations_url": "https://api.github.com/users/burglarhobbit/orgs", "repos_url": "https://api.github.com/users/burglarhobbit/repos", "events_url": "https://api.github.com/users/burglarhobbit/events{/privacy}", "received_events_url": "https://api.github.com/users/burglarhobbit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-12T17:06:35Z", "updated_at": "2018-07-20T19:45:46Z", "closed_at": "2018-02-23T05:37:02Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code</strong>: Yes</li>\n<li><strong>OS Platform and Distribution</strong>: Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from</strong>: binary</li>\n<li><strong>TensorFlow version</strong>: 1.4.1</li>\n<li><strong>Python version</strong>: 3.5.2</li>\n<li><strong>Bazel version:</strong> Not compiled from source</li>\n<li><strong>GCC/Compiler version</strong>: Not compiled from source</li>\n<li><strong>CUDA/cuDNN version</strong>: 8.0</li>\n<li><strong>GPU model and memory</strong>: GeForce GTX 1080 (8GB x 4)</li>\n<li><strong>Exact command to reproduce</strong>: N/A</li>\n</ul>\n<p>I'm trying to convert a the initializer form from <code>tf.Variable</code> to <code>tf.get_variable</code> for <code>Cudnn_GRU</code> but I keep getting this error. I have to convert because tensorflow does not allow initializing in loop/control-flow functions and only allow lambda initializers or through <code>tf.get_variable</code></p>\n<p>I have reduced the problem into the following minimal example:</p>\n<pre><code>import tensorflow as tf\ne = tf.random_uniform_initializer(-0.1, 0.1)\ni = tf.constant(0)\ndef func():\n    gru_fw = tf.contrib.cudnn_rnn.CudnnGRU(num_layers=1, num_units=75, input_size=25)\n    # original line: commented out and working if not under a control flow mechanism\n    # param_fw = tf.Variable(tf.random_uniform([gru_fw.params_size()], -0.1, 0.1), validate_shape=False)\n    # converted line\n    param_fw = tf.get_variable(\"abcd\", shape=[gru_fw.params_size()],initializer=e, validate_shape=False)\n    return param_fw\n\ndef func2():\n    ### repeat the same thing from func1\n    pass\n\nresult = tf.cond(tf.equal(i, tf.constant(0)),func,func2)\n</code></pre>\n<p>The traceback is as follows:</p>\n<pre><code>Traceback (most recent call last):\n\tFile \"test_run_error.py\", line 16, in &lt;module&gt;\n\t\tresult = tf.cond(tf.equal(i, tf.constant(0)),func,func2)\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/util/deprecation.py\", line 316, in new_func\n\t\treturn func(*args, **kwargs)\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 1855, in cond\n\t\torig_res_t, res_t = context_t.BuildCondBranch(true_fn)\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 1725, in BuildCondBranch\n\t\toriginal_result = fn()\n\tFile \"test_run_error.py\", line 9, in func\n\t\tparam_fw = tf.get_variable(\"abcd\", shape=[gru_fw.params_size()],initializer=e, validate_shape=False)\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py\", line 1203, in get_variable\n\t\tconstraint=constraint)\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py\", line 1092, in get_variable\n\t\tconstraint=constraint)\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py\", line 425, in get_variable\n\t\tconstraint=constraint)\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py\", line 394, in _true_getter\n\t\tuse_resource=use_resource, constraint=constraint)\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py\", line 730, in _get_single_variable\n\t\tshape = tensor_shape.as_shape(shape)\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/framework/tensor_shape.py\", line 849, in as_shape\n\t\treturn TensorShape(shape)\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/framework/tensor_shape.py\", line 455, in __init__\n\t\tself._dims = [as_dimension(d) for d in dims_iter]\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/framework/tensor_shape.py\", line 455, in &lt;listcomp&gt;\n\t\tself._dims = [as_dimension(d) for d in dims_iter]\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/framework/tensor_shape.py\", line 397, in as_dimension\n\t\treturn Dimension(value)\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/framework/tensor_shape.py\", line 32, in __init__\n\t\tself._value = int(value)\nTypeError: int() argument must be a string, a bytes-like object or a number, not 'Tensor'\n</code></pre>", "body_text": "System information\n\nHave I written custom code: Yes\nOS Platform and Distribution: Ubuntu 16.04\nTensorFlow installed from: binary\nTensorFlow version: 1.4.1\nPython version: 3.5.2\nBazel version: Not compiled from source\nGCC/Compiler version: Not compiled from source\nCUDA/cuDNN version: 8.0\nGPU model and memory: GeForce GTX 1080 (8GB x 4)\nExact command to reproduce: N/A\n\nI'm trying to convert a the initializer form from tf.Variable to tf.get_variable for Cudnn_GRU but I keep getting this error. I have to convert because tensorflow does not allow initializing in loop/control-flow functions and only allow lambda initializers or through tf.get_variable\nI have reduced the problem into the following minimal example:\nimport tensorflow as tf\ne = tf.random_uniform_initializer(-0.1, 0.1)\ni = tf.constant(0)\ndef func():\n    gru_fw = tf.contrib.cudnn_rnn.CudnnGRU(num_layers=1, num_units=75, input_size=25)\n    # original line: commented out and working if not under a control flow mechanism\n    # param_fw = tf.Variable(tf.random_uniform([gru_fw.params_size()], -0.1, 0.1), validate_shape=False)\n    # converted line\n    param_fw = tf.get_variable(\"abcd\", shape=[gru_fw.params_size()],initializer=e, validate_shape=False)\n    return param_fw\n\ndef func2():\n    ### repeat the same thing from func1\n    pass\n\nresult = tf.cond(tf.equal(i, tf.constant(0)),func,func2)\n\nThe traceback is as follows:\nTraceback (most recent call last):\n\tFile \"test_run_error.py\", line 16, in <module>\n\t\tresult = tf.cond(tf.equal(i, tf.constant(0)),func,func2)\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/util/deprecation.py\", line 316, in new_func\n\t\treturn func(*args, **kwargs)\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 1855, in cond\n\t\torig_res_t, res_t = context_t.BuildCondBranch(true_fn)\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 1725, in BuildCondBranch\n\t\toriginal_result = fn()\n\tFile \"test_run_error.py\", line 9, in func\n\t\tparam_fw = tf.get_variable(\"abcd\", shape=[gru_fw.params_size()],initializer=e, validate_shape=False)\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py\", line 1203, in get_variable\n\t\tconstraint=constraint)\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py\", line 1092, in get_variable\n\t\tconstraint=constraint)\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py\", line 425, in get_variable\n\t\tconstraint=constraint)\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py\", line 394, in _true_getter\n\t\tuse_resource=use_resource, constraint=constraint)\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py\", line 730, in _get_single_variable\n\t\tshape = tensor_shape.as_shape(shape)\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/framework/tensor_shape.py\", line 849, in as_shape\n\t\treturn TensorShape(shape)\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/framework/tensor_shape.py\", line 455, in __init__\n\t\tself._dims = [as_dimension(d) for d in dims_iter]\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/framework/tensor_shape.py\", line 455, in <listcomp>\n\t\tself._dims = [as_dimension(d) for d in dims_iter]\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/framework/tensor_shape.py\", line 397, in as_dimension\n\t\treturn Dimension(value)\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/framework/tensor_shape.py\", line 32, in __init__\n\t\tself._value = int(value)\nTypeError: int() argument must be a string, a bytes-like object or a number, not 'Tensor'", "body": "### System information\r\n- **Have I written custom code**: Yes\r\n- **OS Platform and Distribution**: Ubuntu 16.04\r\n- **TensorFlow installed from**: binary\r\n- **TensorFlow version**: 1.4.1\r\n- **Python version**: 3.5.2\r\n- **Bazel version:** Not compiled from source\r\n- **GCC/Compiler version**: Not compiled from source\r\n- **CUDA/cuDNN version**: 8.0\r\n- **GPU model and memory**: GeForce GTX 1080 (8GB x 4)\r\n- **Exact command to reproduce**: N/A\r\n\r\nI'm trying to convert a the initializer form from `tf.Variable` to `tf.get_variable` for `Cudnn_GRU` but I keep getting this error. I have to convert because tensorflow does not allow initializing in loop/control-flow functions and only allow lambda initializers or through `tf.get_variable`\r\n\r\nI have reduced the problem into the following minimal example:\r\n```\r\nimport tensorflow as tf\r\ne = tf.random_uniform_initializer(-0.1, 0.1)\r\ni = tf.constant(0)\r\ndef func():\r\n    gru_fw = tf.contrib.cudnn_rnn.CudnnGRU(num_layers=1, num_units=75, input_size=25)\r\n    # original line: commented out and working if not under a control flow mechanism\r\n    # param_fw = tf.Variable(tf.random_uniform([gru_fw.params_size()], -0.1, 0.1), validate_shape=False)\r\n    # converted line\r\n    param_fw = tf.get_variable(\"abcd\", shape=[gru_fw.params_size()],initializer=e, validate_shape=False)\r\n    return param_fw\r\n\r\ndef func2():\r\n    ### repeat the same thing from func1\r\n    pass\r\n\r\nresult = tf.cond(tf.equal(i, tf.constant(0)),func,func2)\r\n```\r\nThe traceback is as follows:\r\n```\r\nTraceback (most recent call last):\r\n\tFile \"test_run_error.py\", line 16, in <module>\r\n\t\tresult = tf.cond(tf.equal(i, tf.constant(0)),func,func2)\r\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/util/deprecation.py\", line 316, in new_func\r\n\t\treturn func(*args, **kwargs)\r\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 1855, in cond\r\n\t\torig_res_t, res_t = context_t.BuildCondBranch(true_fn)\r\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 1725, in BuildCondBranch\r\n\t\toriginal_result = fn()\r\n\tFile \"test_run_error.py\", line 9, in func\r\n\t\tparam_fw = tf.get_variable(\"abcd\", shape=[gru_fw.params_size()],initializer=e, validate_shape=False)\r\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py\", line 1203, in get_variable\r\n\t\tconstraint=constraint)\r\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py\", line 1092, in get_variable\r\n\t\tconstraint=constraint)\r\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py\", line 425, in get_variable\r\n\t\tconstraint=constraint)\r\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py\", line 394, in _true_getter\r\n\t\tuse_resource=use_resource, constraint=constraint)\r\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/ops/variable_scope.py\", line 730, in _get_single_variable\r\n\t\tshape = tensor_shape.as_shape(shape)\r\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/framework/tensor_shape.py\", line 849, in as_shape\r\n\t\treturn TensorShape(shape)\r\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/framework/tensor_shape.py\", line 455, in __init__\r\n\t\tself._dims = [as_dimension(d) for d in dims_iter]\r\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/framework/tensor_shape.py\", line 455, in <listcomp>\r\n\t\tself._dims = [as_dimension(d) for d in dims_iter]\r\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/framework/tensor_shape.py\", line 397, in as_dimension\r\n\t\treturn Dimension(value)\r\n\tFile \"/home/search/snetP/snet/lib/python3.5/site-packages/tensorflow/python/framework/tensor_shape.py\", line 32, in __init__\r\n\t\tself._value = int(value)\r\nTypeError: int() argument must be a string, a bytes-like object or a number, not 'Tensor'\r\n```"}