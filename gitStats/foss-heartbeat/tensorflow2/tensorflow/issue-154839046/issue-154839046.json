{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2363", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2363/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2363/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2363/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/2363", "id": 154839046, "node_id": "MDU6SXNzdWUxNTQ4MzkwNDY=", "number": 2363, "title": "(skflow) issue in batch normalization after restore", "user": {"login": "laouer", "id": 18594453, "node_id": "MDQ6VXNlcjE4NTk0NDUz", "avatar_url": "https://avatars3.githubusercontent.com/u/18594453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laouer", "html_url": "https://github.com/laouer", "followers_url": "https://api.github.com/users/laouer/followers", "following_url": "https://api.github.com/users/laouer/following{/other_user}", "gists_url": "https://api.github.com/users/laouer/gists{/gist_id}", "starred_url": "https://api.github.com/users/laouer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laouer/subscriptions", "organizations_url": "https://api.github.com/users/laouer/orgs", "repos_url": "https://api.github.com/users/laouer/repos", "events_url": "https://api.github.com/users/laouer/events{/privacy}", "received_events_url": "https://api.github.com/users/laouer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ilblackdragon", "id": 175486, "node_id": "MDQ6VXNlcjE3NTQ4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/175486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilblackdragon", "html_url": "https://github.com/ilblackdragon", "followers_url": "https://api.github.com/users/ilblackdragon/followers", "following_url": "https://api.github.com/users/ilblackdragon/following{/other_user}", "gists_url": "https://api.github.com/users/ilblackdragon/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilblackdragon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilblackdragon/subscriptions", "organizations_url": "https://api.github.com/users/ilblackdragon/orgs", "repos_url": "https://api.github.com/users/ilblackdragon/repos", "events_url": "https://api.github.com/users/ilblackdragon/events{/privacy}", "received_events_url": "https://api.github.com/users/ilblackdragon/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ilblackdragon", "id": 175486, "node_id": "MDQ6VXNlcjE3NTQ4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/175486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilblackdragon", "html_url": "https://github.com/ilblackdragon", "followers_url": "https://api.github.com/users/ilblackdragon/followers", "following_url": "https://api.github.com/users/ilblackdragon/following{/other_user}", "gists_url": "https://api.github.com/users/ilblackdragon/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilblackdragon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilblackdragon/subscriptions", "organizations_url": "https://api.github.com/users/ilblackdragon/orgs", "repos_url": "https://api.github.com/users/ilblackdragon/repos", "events_url": "https://api.github.com/users/ilblackdragon/events{/privacy}", "received_events_url": "https://api.github.com/users/ilblackdragon/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2016-05-14T07:13:49Z", "updated_at": "2016-10-28T04:26:42Z", "closed_at": "2016-10-28T04:26:42Z", "author_association": "NONE", "body_html": "<p>Hi,<br>\nI'm using Tensorflow <a href=\"http://ci.tensorflow.org/view/Nightly/job/nigntly-matrix-linux-gpu/TF_BUILD_CONTAINER_TYPE=GPU,TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON2,label=gpu-working/lastSuccessfulBuild/\" rel=\"nofollow\">last succeed build #85</a></p>\n<p>I succeed to train a classifier with batch normalization and saving it with classifier.save(logdir) and restoring the classifier with<br>\nclassifier = tf.contrib.skflow.TensorFlowEstimator.restore(logdir)</p>\n<p>the classifier is restored but when using prediction classifier.predict(X_test) it seems that the batch normalization is applied as is in Training mode.</p>\n<p>Looking to the code of batch normalization (batch_norm_ops.py)<br>\n<code>is_training = array_ops_.squeeze(ops.get_collection(\"IS_TRAINING\")) mean, variance = control_flow_ops.cond(is_training, update_mean_var, lambda: (ema_mean, ema_var))</code></p>\n<p>I suppose as the graph is loaded in restore step, the \"IS_TRAINING\" is defined at the state of True at the saved step. and the cond function used will be update_mean_var at predict step , however the \"IS_TRAINING\" is changed at _predict step.<br>\nyou can detect the problem when classifying 2 class problem and adding a batch normalization before the softmax the mean of the softmax of any tested data will be 0.</p>\n<p>Maybe a solution will be to use a placeholder in place of the variable is_training</p>\n<p>Or I'm missing something ?</p>", "body_text": "Hi,\nI'm using Tensorflow last succeed build #85\nI succeed to train a classifier with batch normalization and saving it with classifier.save(logdir) and restoring the classifier with\nclassifier = tf.contrib.skflow.TensorFlowEstimator.restore(logdir)\nthe classifier is restored but when using prediction classifier.predict(X_test) it seems that the batch normalization is applied as is in Training mode.\nLooking to the code of batch normalization (batch_norm_ops.py)\nis_training = array_ops_.squeeze(ops.get_collection(\"IS_TRAINING\")) mean, variance = control_flow_ops.cond(is_training, update_mean_var, lambda: (ema_mean, ema_var))\nI suppose as the graph is loaded in restore step, the \"IS_TRAINING\" is defined at the state of True at the saved step. and the cond function used will be update_mean_var at predict step , however the \"IS_TRAINING\" is changed at _predict step.\nyou can detect the problem when classifying 2 class problem and adding a batch normalization before the softmax the mean of the softmax of any tested data will be 0.\nMaybe a solution will be to use a placeholder in place of the variable is_training\nOr I'm missing something ?", "body": "Hi,\nI'm using Tensorflow [last succeed build #85](http://ci.tensorflow.org/view/Nightly/job/nigntly-matrix-linux-gpu/TF_BUILD_CONTAINER_TYPE=GPU,TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON2,label=gpu-working/lastSuccessfulBuild/)\n\nI succeed to train a classifier with batch normalization and saving it with classifier.save(logdir) and restoring the classifier with \nclassifier = tf.contrib.skflow.TensorFlowEstimator.restore(logdir)\n\nthe classifier is restored but when using prediction classifier.predict(X_test) it seems that the batch normalization is applied as is in Training mode.\n\nLooking to the code of batch normalization (batch_norm_ops.py)\n`is_training = array_ops_.squeeze(ops.get_collection(\"IS_TRAINING\"))\n    mean, variance = control_flow_ops.cond(is_training, update_mean_var,\n                                           lambda: (ema_mean, ema_var))`\n\nI suppose as the graph is loaded in restore step, the \"IS_TRAINING\" is defined at the state of True at the saved step. and the cond function used will be update_mean_var at predict step , however the \"IS_TRAINING\" is changed at _predict step.\nyou can detect the problem when classifying 2 class problem and adding a batch normalization before the softmax the mean of the softmax of any tested data will be 0.\n\nMaybe a solution will be to use a placeholder in place of the variable is_training\n\nOr I'm missing something ?\n"}