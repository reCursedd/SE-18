{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/341297580", "html_url": "https://github.com/tensorflow/tensorflow/pull/12616#issuecomment-341297580", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12616", "id": 341297580, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTI5NzU4MA==", "user": {"login": "alanyee", "id": 1873994, "node_id": "MDQ6VXNlcjE4NzM5OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1873994?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanyee", "html_url": "https://github.com/alanyee", "followers_url": "https://api.github.com/users/alanyee/followers", "following_url": "https://api.github.com/users/alanyee/following{/other_user}", "gists_url": "https://api.github.com/users/alanyee/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanyee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanyee/subscriptions", "organizations_url": "https://api.github.com/users/alanyee/orgs", "repos_url": "https://api.github.com/users/alanyee/repos", "events_url": "https://api.github.com/users/alanyee/events{/privacy}", "received_events_url": "https://api.github.com/users/alanyee/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-02T02:12:52Z", "updated_at": "2017-11-02T02:12:52Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=20959853\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/drpngx\">@drpngx</a> I think I managed to find what was wrong. The deprecated import seems to called everything from framework via <code>contrib_framework</code>, but if I replace that import with a non-deprecated version, that causes an import collision since all <code>framework</code> calls uses the non-deprecated version. To make sure, when contributing to the TF project, should I be making a broad import calls like <code>from tensorflow.python.framework import framework_lib</code> or smaller calls like <code>from tensorflow.python.framework import sparse_tensor</code>?</p>", "body_text": "@drpngx I think I managed to find what was wrong. The deprecated import seems to called everything from framework via contrib_framework, but if I replace that import with a non-deprecated version, that causes an import collision since all framework calls uses the non-deprecated version. To make sure, when contributing to the TF project, should I be making a broad import calls like from tensorflow.python.framework import framework_lib or smaller calls like from tensorflow.python.framework import sparse_tensor?", "body": "@drpngx I think I managed to find what was wrong. The deprecated import seems to called everything from framework via `contrib_framework`, but if I replace that import with a non-deprecated version, that causes an import collision since all `framework` calls uses the non-deprecated version. To make sure, when contributing to the TF project, should I be making a broad import calls like `from tensorflow.python.framework import framework_lib` or smaller calls like `from tensorflow.python.framework import sparse_tensor`?"}