{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/362138858", "html_url": "https://github.com/tensorflow/tensorflow/issues/16620#issuecomment-362138858", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16620", "id": 362138858, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjEzODg1OA==", "user": {"login": "ymcasky", "id": 6229000, "node_id": "MDQ6VXNlcjYyMjkwMDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/6229000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ymcasky", "html_url": "https://github.com/ymcasky", "followers_url": "https://api.github.com/users/ymcasky/followers", "following_url": "https://api.github.com/users/ymcasky/following{/other_user}", "gists_url": "https://api.github.com/users/ymcasky/gists{/gist_id}", "starred_url": "https://api.github.com/users/ymcasky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ymcasky/subscriptions", "organizations_url": "https://api.github.com/users/ymcasky/orgs", "repos_url": "https://api.github.com/users/ymcasky/repos", "events_url": "https://api.github.com/users/ymcasky/events{/privacy}", "received_events_url": "https://api.github.com/users/ymcasky/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-01T02:30:56Z", "updated_at": "2018-02-01T02:32:32Z", "author_association": "NONE", "body_html": "<p>I have one more question, the code I use is:</p>\n<p>import tensorflow as tf<br>\nfrom tensorflow.python.keras.layers import Dense<br>\nfrom tensorflow.python.keras.backend import categorical_crossentropy<br>\nfrom tensorflow.examples.tutorials.mnist import input_data<br>\nfrom tensorflow.python.keras.models import Model<br>\nfrom tensorflow.python.keras.layers import  Input<br>\nmnist_data = input_data.read_data_sets('MNIST_data', one_hot=True)<br>\nimg_size_flat = 28*28<br>\nimg = tf.placeholder(tf.float32, shape=(None, 784))<br>\ninputs = Input(tensor=img)   # tf_input<br>\n#inputs = Input(shape=(img_size_flat,))  #keras_input<br>\nx = Dense(128, activation='relu')(inputs)  # fully-connected layer with 128 units and ReLU activation<br>\nx = Dense(128, activation='relu')(x)<br>\npreds = Dense(10, activation='softmax')(x)  # output layer with 10 units and a softmax activation<br>\nmodel = Model(inputs=inputs, outputs=preds)<br>\n#%%<br>\nmodel.compile(optimizer='rmsprop',<br>\nloss='categorical_crossentropy',<br>\nmetrics=['accuracy'])<br>\nmodel.fit(x=mnist_data.train.images,<br>\ny=mnist_data.train.labels,<br>\nepochs=1, batch_size=128)</p>\n<p>The error message shows<br>\nValueError: ('Error when checking model input: expected no data, but got:', array([[ 0.,  0.,  0., ...,  0.,  0.,  0.],<br>\n[ 0.,  0.,  0., ...,  0.,  0.,  0.],<br>\n[ 0.,  0.,  0., ...,  0.,  0.,  0.],<br>\n...,<br>\n[ 0.,  0.,  0., ...,  0.,  0.,  0.],<br>\n[ 0.,  0.,  0., ...,  0.,  0.,  0.],<br>\n[ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))<br>\nBut when I commnet # tf_input and uncomment # keras_input<br>\nIt work fine. How can I use #tf_input for this?</p>", "body_text": "I have one more question, the code I use is:\nimport tensorflow as tf\nfrom tensorflow.python.keras.layers import Dense\nfrom tensorflow.python.keras.backend import categorical_crossentropy\nfrom tensorflow.examples.tutorials.mnist import input_data\nfrom tensorflow.python.keras.models import Model\nfrom tensorflow.python.keras.layers import  Input\nmnist_data = input_data.read_data_sets('MNIST_data', one_hot=True)\nimg_size_flat = 28*28\nimg = tf.placeholder(tf.float32, shape=(None, 784))\ninputs = Input(tensor=img)   # tf_input\n#inputs = Input(shape=(img_size_flat,))  #keras_input\nx = Dense(128, activation='relu')(inputs)  # fully-connected layer with 128 units and ReLU activation\nx = Dense(128, activation='relu')(x)\npreds = Dense(10, activation='softmax')(x)  # output layer with 10 units and a softmax activation\nmodel = Model(inputs=inputs, outputs=preds)\n#%%\nmodel.compile(optimizer='rmsprop',\nloss='categorical_crossentropy',\nmetrics=['accuracy'])\nmodel.fit(x=mnist_data.train.images,\ny=mnist_data.train.labels,\nepochs=1, batch_size=128)\nThe error message shows\nValueError: ('Error when checking model input: expected no data, but got:', array([[ 0.,  0.,  0., ...,  0.,  0.,  0.],\n[ 0.,  0.,  0., ...,  0.,  0.,  0.],\n[ 0.,  0.,  0., ...,  0.,  0.,  0.],\n...,\n[ 0.,  0.,  0., ...,  0.,  0.,  0.],\n[ 0.,  0.,  0., ...,  0.,  0.,  0.],\n[ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))\nBut when I commnet # tf_input and uncomment # keras_input\nIt work fine. How can I use #tf_input for this?", "body": "I have one more question, the code I use is:\r\n\r\nimport tensorflow as tf\r\nfrom tensorflow.python.keras.layers import Dense\r\nfrom tensorflow.python.keras.backend import categorical_crossentropy\r\nfrom tensorflow.examples.tutorials.mnist import input_data\r\nfrom tensorflow.python.keras.models import Model\r\nfrom tensorflow.python.keras.layers import  Input\r\nmnist_data = input_data.read_data_sets('MNIST_data', one_hot=True)\r\nimg_size_flat = 28*28\r\nimg = tf.placeholder(tf.float32, shape=(None, 784))\r\ninputs = Input(tensor=img)   # tf_input\r\n#inputs = Input(shape=(img_size_flat,))  #keras_input\r\nx = Dense(128, activation='relu')(inputs)  # fully-connected layer with 128 units and ReLU activation\r\nx = Dense(128, activation='relu')(x)\r\npreds = Dense(10, activation='softmax')(x)  # output layer with 10 units and a softmax activation\r\nmodel = Model(inputs=inputs, outputs=preds)\r\n#%%\r\nmodel.compile(optimizer='rmsprop',\r\n               loss='categorical_crossentropy',\r\n               metrics=['accuracy'])\r\nmodel.fit(x=mnist_data.train.images,\r\n           y=mnist_data.train.labels,\r\n           epochs=1, batch_size=128)\r\n\r\nThe error message shows \r\nValueError: ('Error when checking model input: expected no data, but got:', array([[ 0.,  0.,  0., ...,  0.,  0.,  0.],\r\n       [ 0.,  0.,  0., ...,  0.,  0.,  0.],\r\n       [ 0.,  0.,  0., ...,  0.,  0.,  0.],\r\n       ..., \r\n       [ 0.,  0.,  0., ...,  0.,  0.,  0.],\r\n       [ 0.,  0.,  0., ...,  0.,  0.,  0.],\r\n       [ 0.,  0.,  0., ...,  0.,  0.,  0.]], dtype=float32))\r\nBut when I commnet # tf_input and uncomment # keras_input\r\nIt work fine. How can I use #tf_input for this?\r\n"}