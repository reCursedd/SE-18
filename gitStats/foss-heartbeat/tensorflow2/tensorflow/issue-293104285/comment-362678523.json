{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/362678523", "html_url": "https://github.com/tensorflow/tensorflow/issues/16620#issuecomment-362678523", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16620", "id": 362678523, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjY3ODUyMw==", "user": {"login": "pavithrasv", "id": 13326758, "node_id": "MDQ6VXNlcjEzMzI2NzU4", "avatar_url": "https://avatars0.githubusercontent.com/u/13326758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pavithrasv", "html_url": "https://github.com/pavithrasv", "followers_url": "https://api.github.com/users/pavithrasv/followers", "following_url": "https://api.github.com/users/pavithrasv/following{/other_user}", "gists_url": "https://api.github.com/users/pavithrasv/gists{/gist_id}", "starred_url": "https://api.github.com/users/pavithrasv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pavithrasv/subscriptions", "organizations_url": "https://api.github.com/users/pavithrasv/orgs", "repos_url": "https://api.github.com/users/pavithrasv/repos", "events_url": "https://api.github.com/users/pavithrasv/events{/privacy}", "received_events_url": "https://api.github.com/users/pavithrasv/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-02T19:14:21Z", "updated_at": "2018-02-02T19:14:21Z", "author_association": "MEMBER", "body_html": "<p>You can use fit_generator with Python data generators to train data in batches. Search for fit_generator <a href=\"https://keras.io/models/sequential/\" rel=\"nofollow\">here</a>. You can also refer this Keras <a href=\"https://github.com/keras-team/keras/issues/107\" data-hovercard-type=\"issue\" data-hovercard-url=\"/keras-team/keras/issues/107/hovercard\">issue</a>.</p>\n<pre><code>inputs = Input(shape=(784,))\nx = Dense(128, activation='relu', name='Boing')(inputs)\nx = Dense(128, activation='relu', name='Achar')(x)\npreds = Dense(10, activation='softmax', name='Paniyaram')(x)\nmodel = Model(inputs=inputs, outputs=preds)\nmodel.compile(optimizer='rmsprop',loss='categorical_crossentropy',metrics=['accuracy'])\nmodel.fit_generator(generator=training_generator, steps_per_epoch=steps_per_epoch, epochs=1000)\n</code></pre>", "body_text": "You can use fit_generator with Python data generators to train data in batches. Search for fit_generator here. You can also refer this Keras issue.\ninputs = Input(shape=(784,))\nx = Dense(128, activation='relu', name='Boing')(inputs)\nx = Dense(128, activation='relu', name='Achar')(x)\npreds = Dense(10, activation='softmax', name='Paniyaram')(x)\nmodel = Model(inputs=inputs, outputs=preds)\nmodel.compile(optimizer='rmsprop',loss='categorical_crossentropy',metrics=['accuracy'])\nmodel.fit_generator(generator=training_generator, steps_per_epoch=steps_per_epoch, epochs=1000)", "body": "You can use fit_generator with Python data generators to train data in batches. Search for fit_generator [here](https://keras.io/models/sequential/). You can also refer this Keras [issue](https://github.com/keras-team/keras/issues/107).\r\n\r\n```\r\ninputs = Input(shape=(784,))\r\nx = Dense(128, activation='relu', name='Boing')(inputs)\r\nx = Dense(128, activation='relu', name='Achar')(x)\r\npreds = Dense(10, activation='softmax', name='Paniyaram')(x)\r\nmodel = Model(inputs=inputs, outputs=preds)\r\nmodel.compile(optimizer='rmsprop',loss='categorical_crossentropy',metrics=['accuracy'])\r\nmodel.fit_generator(generator=training_generator, steps_per_epoch=steps_per_epoch, epochs=1000)\r\n```"}