{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16620", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16620/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16620/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16620/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16620", "id": 293104285, "node_id": "MDU6SXNzdWUyOTMxMDQyODU=", "number": 16620, "title": "How to use model.summary() when using placeholder instead of Input(keras)", "user": {"login": "ymcasky", "id": 6229000, "node_id": "MDQ6VXNlcjYyMjkwMDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/6229000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ymcasky", "html_url": "https://github.com/ymcasky", "followers_url": "https://api.github.com/users/ymcasky/followers", "following_url": "https://api.github.com/users/ymcasky/following{/other_user}", "gists_url": "https://api.github.com/users/ymcasky/gists{/gist_id}", "starred_url": "https://api.github.com/users/ymcasky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ymcasky/subscriptions", "organizations_url": "https://api.github.com/users/ymcasky/orgs", "repos_url": "https://api.github.com/users/ymcasky/repos", "events_url": "https://api.github.com/users/ymcasky/events{/privacy}", "received_events_url": "https://api.github.com/users/ymcasky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "pavithrasv", "id": 13326758, "node_id": "MDQ6VXNlcjEzMzI2NzU4", "avatar_url": "https://avatars0.githubusercontent.com/u/13326758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pavithrasv", "html_url": "https://github.com/pavithrasv", "followers_url": "https://api.github.com/users/pavithrasv/followers", "following_url": "https://api.github.com/users/pavithrasv/following{/other_user}", "gists_url": "https://api.github.com/users/pavithrasv/gists{/gist_id}", "starred_url": "https://api.github.com/users/pavithrasv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pavithrasv/subscriptions", "organizations_url": "https://api.github.com/users/pavithrasv/orgs", "repos_url": "https://api.github.com/users/pavithrasv/repos", "events_url": "https://api.github.com/users/pavithrasv/events{/privacy}", "received_events_url": "https://api.github.com/users/pavithrasv/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pavithrasv", "id": 13326758, "node_id": "MDQ6VXNlcjEzMzI2NzU4", "avatar_url": "https://avatars0.githubusercontent.com/u/13326758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pavithrasv", "html_url": "https://github.com/pavithrasv", "followers_url": "https://api.github.com/users/pavithrasv/followers", "following_url": "https://api.github.com/users/pavithrasv/following{/other_user}", "gists_url": "https://api.github.com/users/pavithrasv/gists{/gist_id}", "starred_url": "https://api.github.com/users/pavithrasv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pavithrasv/subscriptions", "organizations_url": "https://api.github.com/users/pavithrasv/orgs", "repos_url": "https://api.github.com/users/pavithrasv/repos", "events_url": "https://api.github.com/users/pavithrasv/events{/privacy}", "received_events_url": "https://api.github.com/users/pavithrasv/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-01-31T10:23:42Z", "updated_at": "2018-02-03T08:10:02Z", "closed_at": "2018-02-02T19:15:06Z", "author_association": "NONE", "body_html": "<h2>Dear all,<br>\nI follow  post in \"<a href=\"https://blog.keras.io/keras-as-a-simplified-interface-to-tensorflow-tutorial.html\" rel=\"nofollow\">https://blog.keras.io/keras-as-a-simplified-interface-to-tensorflow-tutorial.html</a>\"<br>\nThe little modified code I use is:</h2>\n<p>import tensorflow as tf<br>\nfrom tensorflow.python.keras.layers import Dense<br>\nfrom tensorflow.python.keras.backend import categorical_crossentropy<br>\nfrom tensorflow.examples.tutorials.mnist import input_data<br>\nfrom tensorflow.python.keras.models import Model</p>\n<p>sess = tf.Session()<br>\nimg = tf.placeholder(tf.float32, shape=(None, 784))<br>\nx = Dense(128, activation='relu')(img)  # fully-connected layer with 128 units and ReLU activation<br>\nx = Dense(128, activation='relu')(x)<br>\npreds = Dense(10, activation='softmax')(x)  # output layer with 10 units and a softmax activation</p>\n<p>labels = tf.placeholder(tf.float32, shape=(None, 10))<br>\nloss = tf.reduce_mean(categorical_crossentropy(labels, preds))<br>\nmnist_data = input_data.read_data_sets('MNIST_data', one_hot=True)<br>\ntrain_step = tf.train.GradientDescentOptimizer(0.5).minimize(loss)</p>\n<p>init_op = tf.global_variables_initializer()<br>\nsess.run(init_op)<br>\nwith sess.as_default():<br>\nfor i in range(100):<br>\nbatch = mnist_data.train.next_batch(50)<br>\ntrain_step.run(feed_dict={img: batch[0],<br>\nlabels: batch[1]})</p>\n<hr>\n<p>It work fine until I use model.summary :</p>\n<p>model = Model(inputs=img, outputs=preds)</p>\n<p>The error message show\" Input tensors to a Model must come from <code>tf.layers.Input</code>\"<br>\nI can use tf.layers.Input to solve this problem.<br>\nBut I really want to use tf.placeholder so I can feed data as I like.<br>\nCan anyone help me?  Thanks!!</p>", "body_text": "Dear all,\nI follow  post in \"https://blog.keras.io/keras-as-a-simplified-interface-to-tensorflow-tutorial.html\"\nThe little modified code I use is:\nimport tensorflow as tf\nfrom tensorflow.python.keras.layers import Dense\nfrom tensorflow.python.keras.backend import categorical_crossentropy\nfrom tensorflow.examples.tutorials.mnist import input_data\nfrom tensorflow.python.keras.models import Model\nsess = tf.Session()\nimg = tf.placeholder(tf.float32, shape=(None, 784))\nx = Dense(128, activation='relu')(img)  # fully-connected layer with 128 units and ReLU activation\nx = Dense(128, activation='relu')(x)\npreds = Dense(10, activation='softmax')(x)  # output layer with 10 units and a softmax activation\nlabels = tf.placeholder(tf.float32, shape=(None, 10))\nloss = tf.reduce_mean(categorical_crossentropy(labels, preds))\nmnist_data = input_data.read_data_sets('MNIST_data', one_hot=True)\ntrain_step = tf.train.GradientDescentOptimizer(0.5).minimize(loss)\ninit_op = tf.global_variables_initializer()\nsess.run(init_op)\nwith sess.as_default():\nfor i in range(100):\nbatch = mnist_data.train.next_batch(50)\ntrain_step.run(feed_dict={img: batch[0],\nlabels: batch[1]})\n\nIt work fine until I use model.summary :\nmodel = Model(inputs=img, outputs=preds)\nThe error message show\" Input tensors to a Model must come from tf.layers.Input\"\nI can use tf.layers.Input to solve this problem.\nBut I really want to use tf.placeholder so I can feed data as I like.\nCan anyone help me?  Thanks!!", "body": "Dear all, \r\nI follow  post in \"https://blog.keras.io/keras-as-a-simplified-interface-to-tensorflow-tutorial.html\"\r\nThe little modified code I use is:\r\n----------------------------------------------------------------------------------------------------------------------------------\r\nimport tensorflow as tf\r\nfrom tensorflow.python.keras.layers import Dense\r\nfrom tensorflow.python.keras.backend import categorical_crossentropy\r\nfrom tensorflow.examples.tutorials.mnist import input_data\r\nfrom tensorflow.python.keras.models import Model\r\n\r\n\r\nsess = tf.Session()\r\nimg = tf.placeholder(tf.float32, shape=(None, 784))\r\nx = Dense(128, activation='relu')(img)  # fully-connected layer with 128 units and ReLU activation\r\nx = Dense(128, activation='relu')(x)\r\npreds = Dense(10, activation='softmax')(x)  # output layer with 10 units and a softmax activation\r\n\r\nlabels = tf.placeholder(tf.float32, shape=(None, 10))\r\nloss = tf.reduce_mean(categorical_crossentropy(labels, preds))\r\nmnist_data = input_data.read_data_sets('MNIST_data', one_hot=True)\r\ntrain_step = tf.train.GradientDescentOptimizer(0.5).minimize(loss)\r\n\r\ninit_op = tf.global_variables_initializer()\r\nsess.run(init_op)\r\nwith sess.as_default():\r\n    for i in range(100):\r\n        batch = mnist_data.train.next_batch(50)\r\n        train_step.run(feed_dict={img: batch[0],\r\n                                  labels: batch[1]})\r\n\r\n----------------------------------------------------------------------------------------------------------------------------------\r\nIt work fine until I use model.summary :  \r\n\r\nmodel = Model(inputs=img, outputs=preds)\r\n\r\nThe error message show\" Input tensors to a Model must come from `tf.layers.Input`\"\r\nI can use tf.layers.Input to solve this problem.\r\nBut I really want to use tf.placeholder so I can feed data as I like.\r\nCan anyone help me?  Thanks!!"}