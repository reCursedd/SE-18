{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/362488903", "html_url": "https://github.com/tensorflow/tensorflow/issues/16620#issuecomment-362488903", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16620", "id": 362488903, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjQ4ODkwMw==", "user": {"login": "pavithrasv", "id": 13326758, "node_id": "MDQ6VXNlcjEzMzI2NzU4", "avatar_url": "https://avatars0.githubusercontent.com/u/13326758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pavithrasv", "html_url": "https://github.com/pavithrasv", "followers_url": "https://api.github.com/users/pavithrasv/followers", "following_url": "https://api.github.com/users/pavithrasv/following{/other_user}", "gists_url": "https://api.github.com/users/pavithrasv/gists{/gist_id}", "starred_url": "https://api.github.com/users/pavithrasv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pavithrasv/subscriptions", "organizations_url": "https://api.github.com/users/pavithrasv/orgs", "repos_url": "https://api.github.com/users/pavithrasv/repos", "events_url": "https://api.github.com/users/pavithrasv/events{/privacy}", "received_events_url": "https://api.github.com/users/pavithrasv/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-02T05:15:49Z", "updated_at": "2018-02-02T05:15:49Z", "author_association": "MEMBER", "body_html": "<p>Input layer used without tensor arg <code>inputs = Input(shape=(784,))</code> creates a placeholder tensor internally. When you train a model using this input, you are always required to give a value for the placeholder tensor. In your code snippet, <code>x=mnist_data.train.images</code> is the value you give for that tensor. So, if you are looking to feed in input values you can use this approach and you will not need to use <code>tensor</code> argument.</p>\n<p>The <a href=\"https://keras.io/layers/core/#input\" rel=\"nofollow\">tensor</a> argument is used when there is an existing input tensor. When this is used, no placeholder will be created and no input value is expected. As you are passing input value <code>x=mnist_data.train.images</code> when using the tensor arg, you are seeing the error message <code>Error when checking model input: expected no data</code>. Example usage of tensor argument:</p>\n<pre><code>img = tf.convert_to_tensor(mnist_data.train.images, dtype=tf.float32)\ninputs = Input(tensor=img)\nx = Dense(128, activation='relu')(inputs)\nx = Dense(128, activation='relu')(x)\npreds = Dense(10, activation='softmax')(x)\nmodel = Model(inputs=inputs, outputs=preds)\nmodel.compile(optimizer='rmsprop',loss='categorical_crossentropy',metrics=['accuracy'])\nmodel.fit(y=mnist_data.train.labels,epochs=1, batch_size=55000)\n</code></pre>\n<p>From what I understand it looks like the first method should be good for your use case. Hope this helps!</p>", "body_text": "Input layer used without tensor arg inputs = Input(shape=(784,)) creates a placeholder tensor internally. When you train a model using this input, you are always required to give a value for the placeholder tensor. In your code snippet, x=mnist_data.train.images is the value you give for that tensor. So, if you are looking to feed in input values you can use this approach and you will not need to use tensor argument.\nThe tensor argument is used when there is an existing input tensor. When this is used, no placeholder will be created and no input value is expected. As you are passing input value x=mnist_data.train.images when using the tensor arg, you are seeing the error message Error when checking model input: expected no data. Example usage of tensor argument:\nimg = tf.convert_to_tensor(mnist_data.train.images, dtype=tf.float32)\ninputs = Input(tensor=img)\nx = Dense(128, activation='relu')(inputs)\nx = Dense(128, activation='relu')(x)\npreds = Dense(10, activation='softmax')(x)\nmodel = Model(inputs=inputs, outputs=preds)\nmodel.compile(optimizer='rmsprop',loss='categorical_crossentropy',metrics=['accuracy'])\nmodel.fit(y=mnist_data.train.labels,epochs=1, batch_size=55000)\n\nFrom what I understand it looks like the first method should be good for your use case. Hope this helps!", "body": "Input layer used without tensor arg ```inputs = Input(shape=(784,))``` creates a placeholder tensor internally. When you train a model using this input, you are always required to give a value for the placeholder tensor. In your code snippet, ```x=mnist_data.train.images``` is the value you give for that tensor. So, if you are looking to feed in input values you can use this approach and you will not need to use `tensor` argument.\r\n\r\nThe [tensor](https://keras.io/layers/core/#input) argument is used when there is an existing input tensor. When this is used, no placeholder will be created and no input value is expected. As you are passing input value ```x=mnist_data.train.images``` when using the tensor arg, you are seeing the error message `Error when checking model input: expected no data`. Example usage of tensor argument:\r\n```\r\nimg = tf.convert_to_tensor(mnist_data.train.images, dtype=tf.float32)\r\ninputs = Input(tensor=img)\r\nx = Dense(128, activation='relu')(inputs)\r\nx = Dense(128, activation='relu')(x)\r\npreds = Dense(10, activation='softmax')(x)\r\nmodel = Model(inputs=inputs, outputs=preds)\r\nmodel.compile(optimizer='rmsprop',loss='categorical_crossentropy',metrics=['accuracy'])\r\nmodel.fit(y=mnist_data.train.labels,epochs=1, batch_size=55000)\r\n```\r\n\r\nFrom what I understand it looks like the first method should be good for your use case. Hope this helps!"}