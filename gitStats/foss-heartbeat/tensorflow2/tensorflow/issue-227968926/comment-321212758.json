{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/321212758", "html_url": "https://github.com/tensorflow/tensorflow/issues/9837#issuecomment-321212758", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9837", "id": 321212758, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTIxMjc1OA==", "user": {"login": "theflofly", "id": 3902382, "node_id": "MDQ6VXNlcjM5MDIzODI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3902382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theflofly", "html_url": "https://github.com/theflofly", "followers_url": "https://api.github.com/users/theflofly/followers", "following_url": "https://api.github.com/users/theflofly/following{/other_user}", "gists_url": "https://api.github.com/users/theflofly/gists{/gist_id}", "starred_url": "https://api.github.com/users/theflofly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theflofly/subscriptions", "organizations_url": "https://api.github.com/users/theflofly/orgs", "repos_url": "https://api.github.com/users/theflofly/repos", "events_url": "https://api.github.com/users/theflofly/events{/privacy}", "received_events_url": "https://api.github.com/users/theflofly/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-09T10:07:24Z", "updated_at": "2017-08-09T10:07:24Z", "author_association": "CONTRIBUTOR", "body_html": "<p>As the core is in C++ I guess:</p>\n<ul>\n<li>The PR should be merged</li>\n<li>tensorflow/cc/gradients should be moved in tensorflow/core/</li>\n<li>All the python conveniences should be added to tensorflow/core</li>\n<li>The non C++ API should all become bindings to the C++ core code</li>\n</ul>\n<p>The problem is that there is a lot of python code to be rewritten (but I would be happy to work on that with the community) but more importantly, the data scientist + researchers are well versed in python, that's why we have so much more features in python.</p>\n<p>The C++ is not sexy, less easy and the use of bazel means no proper IDE support for now. Debugging is hard, especially on OS X because of a bazel bug that don't add symbols to the binary generated. I am using VS Code personally, there is a project called tulsi that convert a bazel project to Xcode but it does not work for TF because it does not handle \"cc_library\" if I remember correctly.</p>\n<p>I am waiting for the <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16018\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/asimshankar\">@asimshankar</a> answer to more insights. But clearly one implementation of the gradient descent and maybe other optimizers in the future for each language is clearly a bad design choice... He talked about a C implementation, but the core is in C++ so I don't understand why.</p>\n<p>Let's wait. :)</p>\n<p>For your problem, are you using the last version of master ? Because me it gives me: <code>Not found: No gradient defined for op: Sub.</code>. But the MatMul is not the problem.</p>\n<p>There is currently no gradient for the binary maths operations, so you can't do basic stuff like add, sub, ... I was working on them because I also need them. But I'll wait because duplicating the gradients operations for each languages is also a bad idea.</p>", "body_text": "As the core is in C++ I guess:\n\nThe PR should be merged\ntensorflow/cc/gradients should be moved in tensorflow/core/\nAll the python conveniences should be added to tensorflow/core\nThe non C++ API should all become bindings to the C++ core code\n\nThe problem is that there is a lot of python code to be rewritten (but I would be happy to work on that with the community) but more importantly, the data scientist + researchers are well versed in python, that's why we have so much more features in python.\nThe C++ is not sexy, less easy and the use of bazel means no proper IDE support for now. Debugging is hard, especially on OS X because of a bazel bug that don't add symbols to the binary generated. I am using VS Code personally, there is a project called tulsi that convert a bazel project to Xcode but it does not work for TF because it does not handle \"cc_library\" if I remember correctly.\nI am waiting for the @asimshankar answer to more insights. But clearly one implementation of the gradient descent and maybe other optimizers in the future for each language is clearly a bad design choice... He talked about a C implementation, but the core is in C++ so I don't understand why.\nLet's wait. :)\nFor your problem, are you using the last version of master ? Because me it gives me: Not found: No gradient defined for op: Sub.. But the MatMul is not the problem.\nThere is currently no gradient for the binary maths operations, so you can't do basic stuff like add, sub, ... I was working on them because I also need them. But I'll wait because duplicating the gradients operations for each languages is also a bad idea.", "body": "As the core is in C++ I guess:\r\n* The PR should be merged\r\n* tensorflow/cc/gradients should be moved in tensorflow/core/\r\n* All the python conveniences should be added to tensorflow/core\r\n* The non C++ API should all become bindings to the C++ core code\r\n\r\nThe problem is that there is a lot of python code to be rewritten (but I would be happy to work on that with the community) but more importantly, the data scientist + researchers are well versed in python, that's why we have so much more features in python.\r\n\r\nThe C++ is not sexy, less easy and the use of bazel means no proper IDE support for now. Debugging is hard, especially on OS X because of a bazel bug that don't add symbols to the binary generated. I am using VS Code personally, there is a project called tulsi that convert a bazel project to Xcode but it does not work for TF because it does not handle \"cc_library\" if I remember correctly.\r\n\r\nI am waiting for the @asimshankar answer to more insights. But clearly one implementation of the gradient descent and maybe other optimizers in the future for each language is clearly a bad design choice... He talked about a C implementation, but the core is in C++ so I don't understand why.\r\n\r\nLet's wait. :)\r\n\r\nFor your problem, are you using the last version of master ? Because me it gives me: `Not found: No gradient defined for op: Sub.`. But the MatMul is not the problem.\r\n\r\nThere is currently no gradient for the binary maths operations, so you can't do basic stuff like add, sub, ... I was working on them because I also need them. But I'll wait because duplicating the gradients operations for each languages is also a bad idea."}