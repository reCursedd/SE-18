{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/144099371", "pull_request_review_id": 68708963, "id": 144099371, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDA5OTM3MQ==", "diff_hunk": "@@ -48,8 +52,38 @@ class MklCPUAllocator : public Allocator {\n \n   MklCPUAllocator() {\n     VLOG(2) << \"MklCPUAllocator: In MklCPUAllocator\";\n-    allocator_ =\n-        new BFCAllocator(new MklSubAllocator, kMaxMemSize, kAllowGrowth, kName);\n+\n+    // Set upper bound on memory allocation to physical RAM available on the\n+    // CPU unless explicitly specified by user\n+    uint64 max_mem_bytes = 64LL << 30;  // Default - 64 GB\n+#if defined(_SC_PHYS_PAGES) && defined(_SC_PAGESIZE)\n+    max_mem_bytes =\n+        (uint64)sysconf(_SC_PHYS_PAGES) * (uint64)sysconf(_SC_PAGESIZE);\n+#endif\n+    char* user_mem_bytes = getenv(kMaxAllocSize);\n+\n+    if (user_mem_bytes != NULL) {\n+      uint64 user_val = 0;\n+      if (!strings::safe_strtou64(user_mem_bytes, &user_val)) {\n+        string err_msg = \"Invalid memory limit (\" + string(user_mem_bytes) +\n+                         \") specified for MKL allocator through \" +\n+                         string(kMaxAllocSize);\n+        Status s = Status(error::Code::INVALID_ARGUMENT, err_msg.c_str());\n+        TF_CHECK_OK(s);", "path": "tensorflow/core/common_runtime/mkl_cpu_allocator.h", "position": null, "original_position": 37, "commit_id": "8ad8b0073ae92e6cf9f8d1fedf48f40bd93a6c27", "original_commit_id": "c339fbb1741ff0c5f9a9a11526fedeb7284d8176", "user": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "body": "you can write the error handling more compactly (and slightly faster, not that it matters) like this:\r\n\r\nreturn  errors::InvalidArgument(\"Invalid memory limit (\", user_mem_bytes, \") specified for MKL allocator through \", kMaxAllocSize);", "created_at": "2017-10-11T18:36:47Z", "updated_at": "2017-10-12T18:02:44Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/13611#discussion_r144099371", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13611", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/144099371"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/13611#discussion_r144099371"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13611"}}, "body_html": "<p>you can write the error handling more compactly (and slightly faster, not that it matters) like this:</p>\n<p>return  errors::InvalidArgument(\"Invalid memory limit (\", user_mem_bytes, \") specified for MKL allocator through \", kMaxAllocSize);</p>", "body_text": "you can write the error handling more compactly (and slightly faster, not that it matters) like this:\nreturn  errors::InvalidArgument(\"Invalid memory limit (\", user_mem_bytes, \") specified for MKL allocator through \", kMaxAllocSize);"}