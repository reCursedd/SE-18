{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/299561203", "html_url": "https://github.com/tensorflow/tensorflow/pull/9686#issuecomment-299561203", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9686", "id": 299561203, "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTU2MTIwMw==", "user": {"login": "sjperkins", "id": 3530212, "node_id": "MDQ6VXNlcjM1MzAyMTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3530212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjperkins", "html_url": "https://github.com/sjperkins", "followers_url": "https://api.github.com/users/sjperkins/followers", "following_url": "https://api.github.com/users/sjperkins/following{/other_user}", "gists_url": "https://api.github.com/users/sjperkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjperkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjperkins/subscriptions", "organizations_url": "https://api.github.com/users/sjperkins/orgs", "repos_url": "https://api.github.com/users/sjperkins/repos", "events_url": "https://api.github.com/users/sjperkins/events{/privacy}", "received_events_url": "https://api.github.com/users/sjperkins/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-05T19:57:48Z", "updated_at": "2017-05-05T19:58:12Z", "author_association": "CONTRIBUTOR", "body_html": "<blockquote>\n<p>Re: 3) Make sure to also change pop in the dict to get.</p>\n</blockquote>\n<p>Just realised it may make more sense <code>popitem()</code> changed to <code>get()</code>, since <code>popitem</code>  currently takes no <code>key</code> argument (it returns a random element if unordered or the max element if ordered), while <code>pop(key)</code> returns an element based on a key. Do you agree?</p>\n<p>I also want to extend the dict methods as follows:</p>\n<ul>\n<li><code>peek(key, default=None)</code></li>\n<li><code>pop(key, default=None)</code></li>\n<li><code>setdefault(key, value, default=None)</code></li>\n</ul>\n<p>where the specified default is returned if no element associated with the key is found.</p>\n<p>Also I remember someone (maybe <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=70511\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/girving\">@girving</a>) mentioning somewhere that there's a way of placing an int32 input for a GPU op on the CPU (not through HostMemory). IIRC its not really supported but forcing the int64 key to the CPU is a good case for it. Could someone point me to code that does this?</p>", "body_text": "Re: 3) Make sure to also change pop in the dict to get.\n\nJust realised it may make more sense popitem() changed to get(), since popitem  currently takes no key argument (it returns a random element if unordered or the max element if ordered), while pop(key) returns an element based on a key. Do you agree?\nI also want to extend the dict methods as follows:\n\npeek(key, default=None)\npop(key, default=None)\nsetdefault(key, value, default=None)\n\nwhere the specified default is returned if no element associated with the key is found.\nAlso I remember someone (maybe @girving) mentioning somewhere that there's a way of placing an int32 input for a GPU op on the CPU (not through HostMemory). IIRC its not really supported but forcing the int64 key to the CPU is a good case for it. Could someone point me to code that does this?", "body": "> Re: 3) Make sure to also change pop in the dict to get.\r\n\r\nJust realised it may make more sense `popitem()` changed to `get()`, since `popitem`  currently takes no `key` argument (it returns a random element if unordered or the max element if ordered), while `pop(key)` returns an element based on a key. Do you agree?\r\n\r\nI also want to extend the dict methods as follows:\r\n\r\n- `peek(key, default=None)`\r\n- `pop(key, default=None)`\r\n- `setdefault(key, value, default=None)`\r\n\r\nwhere the specified default is returned if no element associated with the key is found.\r\n\r\nAlso I remember someone (maybe @girving) mentioning somewhere that there's a way of placing an int32 input for a GPU op on the CPU (not through HostMemory). IIRC its not really supported but forcing the int64 key to the CPU is a good case for it. Could someone point me to code that does this?"}