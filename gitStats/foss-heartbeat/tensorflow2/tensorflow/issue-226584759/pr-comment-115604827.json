{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/115604827", "pull_request_review_id": 37144031, "id": 115604827, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNTYwNDgyNw==", "diff_hunk": "@@ -0,0 +1,497 @@\n+#include <map>\n+#include <unordered_map>\n+#include <vector>\n+\n+#include \"tensorflow/core/framework/op_kernel.h\"\n+#include \"tensorflow/core/framework/resource_mgr.h\"\n+#include \"tensorflow/core/framework/tensor.h\"\n+#include \"tensorflow/core/framework/tensor_shape.h\"\n+#include \"tensorflow/core/lib/strings/strcat.h\"\n+#include \"tensorflow/core/platform/env.h\"\n+#include \"tensorflow/core/platform/mutex.h\"\n+\n+namespace tensorflow {\n+\n+namespace {\n+\n+// General Template Definition\n+template <bool Ordered, typename Key, typename Data>\n+struct MapTraits {};\n+\n+// Partially specialise for ordered\n+template <typename Key, typename Data>\n+struct MapTraits<true, Key, Data>\n+{\n+  typedef Key key_type;\n+  typedef Data data_type;\n+  typedef std::map<Key, Data> map_type;\n+};\n+\n+// Partially specialise for unordered\n+template <typename Key, typename Data>\n+struct MapTraits<false, Key, Data>\n+{\n+  typedef Key key_type;\n+  typedef Data data_type;\n+  typedef std::unordered_map<Key, Data> map_type;\n+};\n+\n+// Wrapper around map/unordered_map\n+template <bool Ordered>\n+class StagingMap : public ResourceBase\n+{\n+public:\n+  // Public typedefs\n+  typedef MapTraits<Ordered, int64, std::vector<Tensor>> map_traits;\n+  typedef typename map_traits::map_type map_type;\n+  typedef typename map_traits::key_type key_type;\n+  typedef typename map_traits::data_type Tuple;\n+\n+private:\n+  // Private variables\n+  int capacity_;\n+  mutex mu_;\n+  condition_variable not_empty_;\n+  condition_variable full_;\n+  map_type map_ GUARDED_BY(mu_);\n+\n+public:\n+  // public methods\n+  explicit StagingMap(int capacity)\n+    { capacity_ = capacity; }", "path": "tensorflow/core/kernels/map_stage_op.cc", "position": null, "original_position": 61, "commit_id": "b292353578075c3a31ad438458a74a8538360ec6", "original_commit_id": "92d4d732cab8c6b8db83a38166298ed9a4e8961c", "user": {"login": "ekelsen", "id": 2533174, "node_id": "MDQ6VXNlcjI1MzMxNzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2533174?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ekelsen", "html_url": "https://github.com/ekelsen", "followers_url": "https://api.github.com/users/ekelsen/followers", "following_url": "https://api.github.com/users/ekelsen/following{/other_user}", "gists_url": "https://api.github.com/users/ekelsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ekelsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ekelsen/subscriptions", "organizations_url": "https://api.github.com/users/ekelsen/orgs", "repos_url": "https://api.github.com/users/ekelsen/repos", "events_url": "https://api.github.com/users/ekelsen/events{/privacy}", "received_events_url": "https://api.github.com/users/ekelsen/received_events", "type": "User", "site_admin": false}, "body": "initialization list", "created_at": "2017-05-09T21:16:28Z", "updated_at": "2017-05-19T19:22:57Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/9686#discussion_r115604827", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9686", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/115604827"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/9686#discussion_r115604827"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9686"}}, "body_html": "<p>initialization list</p>", "body_text": "initialization list"}