{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9686", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9686/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9686/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9686/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/9686", "id": 226584759, "node_id": "MDExOlB1bGxSZXF1ZXN0MTE5MTgzNzM1", "number": 9686, "title": "Map Staging Area", "user": {"login": "sjperkins", "id": 3530212, "node_id": "MDQ6VXNlcjM1MzAyMTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3530212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjperkins", "html_url": "https://github.com/sjperkins", "followers_url": "https://api.github.com/users/sjperkins/followers", "following_url": "https://api.github.com/users/sjperkins/following{/other_user}", "gists_url": "https://api.github.com/users/sjperkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjperkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjperkins/subscriptions", "organizations_url": "https://api.github.com/users/sjperkins/orgs", "repos_url": "https://api.github.com/users/sjperkins/repos", "events_url": "https://api.github.com/users/sjperkins/events{/privacy}", "received_events_url": "https://api.github.com/users/sjperkins/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 419840263, "node_id": "MDU6TGFiZWw0MTk4NDAyNjM=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/awaiting%20testing%20(then%20merge)", "name": "awaiting testing (then merge)", "color": "c2e0c6", "default": false}, {"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ekelsen", "id": 2533174, "node_id": "MDQ6VXNlcjI1MzMxNzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2533174?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ekelsen", "html_url": "https://github.com/ekelsen", "followers_url": "https://api.github.com/users/ekelsen/followers", "following_url": "https://api.github.com/users/ekelsen/following{/other_user}", "gists_url": "https://api.github.com/users/ekelsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ekelsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ekelsen/subscriptions", "organizations_url": "https://api.github.com/users/ekelsen/orgs", "repos_url": "https://api.github.com/users/ekelsen/repos", "events_url": "https://api.github.com/users/ekelsen/events{/privacy}", "received_events_url": "https://api.github.com/users/ekelsen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ekelsen", "id": 2533174, "node_id": "MDQ6VXNlcjI1MzMxNzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2533174?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ekelsen", "html_url": "https://github.com/ekelsen", "followers_url": "https://api.github.com/users/ekelsen/followers", "following_url": "https://api.github.com/users/ekelsen/following{/other_user}", "gists_url": "https://api.github.com/users/ekelsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ekelsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ekelsen/subscriptions", "organizations_url": "https://api.github.com/users/ekelsen/orgs", "repos_url": "https://api.github.com/users/ekelsen/repos", "events_url": "https://api.github.com/users/ekelsen/events{/privacy}", "received_events_url": "https://api.github.com/users/ekelsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 38, "created_at": "2017-05-05T14:08:19Z", "updated_at": "2017-06-06T21:29:04Z", "closed_at": "2017-05-19T22:06:38Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9686", "html_url": "https://github.com/tensorflow/tensorflow/pull/9686", "diff_url": "https://github.com/tensorflow/tensorflow/pull/9686.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/9686.patch"}, "body_html": "<p>I liked the idea of StagingArea but I wanted more functionality out of it. I've implemented an Associative StagingArea backed by C++ <code>std::map</code> and <code>std::unordered_map</code>.</p>\n<p>Functionality:</p>\n<ul>\n<li>Keys are int64, Values are just like StagingArea Tensors or list of Tensors.</li>\n<li>put(key, value), get(key),  pop(key), popitem(), size(), clear() operations</li>\n<li>Can choose ordered <code>std::map</code> (Get a basic priority queue with popitem()) or unordered <code>std::unordered</code>.</li>\n<li>Can specify a capacity which inserts will wait on, if not, it will be unbounded.</li>\n</ul>\n<p>Have tested that this works on CPU + GPU in a custom op library. I haven't tested the compile on my laptop due to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"226035782\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/9634\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/9634/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/9634\">#9634</a>, but I've cut and pasted the relevant sections into the tensorflow code base for your perusal.</p>\n<p>Let me know if you're keen to merge this and I can clean it up a bit further.</p>", "body_text": "I liked the idea of StagingArea but I wanted more functionality out of it. I've implemented an Associative StagingArea backed by C++ std::map and std::unordered_map.\nFunctionality:\n\nKeys are int64, Values are just like StagingArea Tensors or list of Tensors.\nput(key, value), get(key),  pop(key), popitem(), size(), clear() operations\nCan choose ordered std::map (Get a basic priority queue with popitem()) or unordered std::unordered.\nCan specify a capacity which inserts will wait on, if not, it will be unbounded.\n\nHave tested that this works on CPU + GPU in a custom op library. I haven't tested the compile on my laptop due to #9634, but I've cut and pasted the relevant sections into the tensorflow code base for your perusal.\nLet me know if you're keen to merge this and I can clean it up a bit further.", "body": "I liked the idea of StagingArea but I wanted more functionality out of it. I've implemented an Associative StagingArea backed by C++ `std::map` and `std::unordered_map`.\r\n\r\nFunctionality:\r\n- Keys are int64, Values are just like StagingArea Tensors or list of Tensors.\r\n- put(key, value), get(key),  pop(key), popitem(), size(), clear() operations\r\n- Can choose ordered `std::map` (Get a basic priority queue with popitem()) or unordered `std::unordered`.\r\n- Can specify a capacity which inserts will wait on, if not, it will be unbounded.\r\n\r\nHave tested that this works on CPU + GPU in a custom op library. I haven't tested the compile on my laptop due to #9634, but I've cut and pasted the relevant sections into the tensorflow code base for your perusal.\r\n\r\nLet me know if you're keen to merge this and I can clean it up a bit further."}