{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14080", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14080/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14080/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14080/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14080", "id": 269463500, "node_id": "MDU6SXNzdWUyNjk0NjM1MDA=", "number": 14080, "title": "@function.Defun lose input tensor shapes ", "user": {"login": "ylfzr", "id": 22250974, "node_id": "MDQ6VXNlcjIyMjUwOTc0", "avatar_url": "https://avatars3.githubusercontent.com/u/22250974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ylfzr", "html_url": "https://github.com/ylfzr", "followers_url": "https://api.github.com/users/ylfzr/followers", "following_url": "https://api.github.com/users/ylfzr/following{/other_user}", "gists_url": "https://api.github.com/users/ylfzr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ylfzr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ylfzr/subscriptions", "organizations_url": "https://api.github.com/users/ylfzr/orgs", "repos_url": "https://api.github.com/users/ylfzr/repos", "events_url": "https://api.github.com/users/ylfzr/events{/privacy}", "received_events_url": "https://api.github.com/users/ylfzr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": {"login": "iganichev", "id": 9123400, "node_id": "MDQ6VXNlcjkxMjM0MDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9123400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iganichev", "html_url": "https://github.com/iganichev", "followers_url": "https://api.github.com/users/iganichev/followers", "following_url": "https://api.github.com/users/iganichev/following{/other_user}", "gists_url": "https://api.github.com/users/iganichev/gists{/gist_id}", "starred_url": "https://api.github.com/users/iganichev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iganichev/subscriptions", "organizations_url": "https://api.github.com/users/iganichev/orgs", "repos_url": "https://api.github.com/users/iganichev/repos", "events_url": "https://api.github.com/users/iganichev/events{/privacy}", "received_events_url": "https://api.github.com/users/iganichev/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "iganichev", "id": 9123400, "node_id": "MDQ6VXNlcjkxMjM0MDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9123400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iganichev", "html_url": "https://github.com/iganichev", "followers_url": "https://api.github.com/users/iganichev/followers", "following_url": "https://api.github.com/users/iganichev/following{/other_user}", "gists_url": "https://api.github.com/users/iganichev/gists{/gist_id}", "starred_url": "https://api.github.com/users/iganichev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iganichev/subscriptions", "organizations_url": "https://api.github.com/users/iganichev/orgs", "repos_url": "https://api.github.com/users/iganichev/repos", "events_url": "https://api.github.com/users/iganichev/events{/privacy}", "received_events_url": "https://api.github.com/users/iganichev/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2017-10-30T02:22:34Z", "updated_at": "2018-11-22T18:52:37Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: NA</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: macOS 10.12.5 (16F73)</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:binary</li>\n<li><strong>TensorFlow version (use command below)</strong>:1.3.0</li>\n<li><strong>Python version</strong>: 2.7.13</li>\n<li><strong>Bazel version (if compiling from source)</strong>:NA</li>\n<li><strong>CUDA/cuDNN version</strong>:NA</li>\n<li><strong>GPU model and memory</strong>:NA</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<pre><code>import  tensorflow as tf\nimport numpy as np\nfrom tensorflow.python.framework import function\n# Now let us see some property of @function of tf. It will make all its inputs loose \"shape\"\n\n@function.Defun(tf.float32, tf.float32)\ndef plus(A, B):\n\n    result = A + B\n    result.set_shape((5, 5))\n    print result.get_shape()\n    return result\n\ndef linear(A, B, C):\n    D = plus(A, B) + C\n    print D.get_shape()\n    return D\n\n# @function.Defun(\n#     tf.float32, shape_func=lambda op: [op.inputs[0].get_shape()])\n# def Foo(x):\n#     print x.get_shape, 'see'\n#     return x + 1.0\n\nsess = tf.Session()\nsess.run(tf.global_variables_initializer())\nA = tf.constant(np.arange(25).reshape((5, 5)), dtype=tf.float32)\nB = tf.ones((5, 5))\nC = tf.ones((5, 5))\nE = plus(A, B)\n# d = Foo(tf.constant(2.0))\nD = linear(A, B, C)\nprint sess.run(E)\nprint sess.run(D)\n# print sess.run(d)\n</code></pre>\n<h3>Describe the problem</h3>\n<p>All tensors going through the decorated function lose their shapes, as well as the output tensor. Without this decoration, there is no problem.  btw, shape_fun seems doesn't work</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): NA\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS 10.12.5 (16F73)\nTensorFlow installed from (source or binary):binary\nTensorFlow version (use command below):1.3.0\nPython version: 2.7.13\nBazel version (if compiling from source):NA\nCUDA/cuDNN version:NA\nGPU model and memory:NA\nExact command to reproduce:\n\nimport  tensorflow as tf\nimport numpy as np\nfrom tensorflow.python.framework import function\n# Now let us see some property of @function of tf. It will make all its inputs loose \"shape\"\n\n@function.Defun(tf.float32, tf.float32)\ndef plus(A, B):\n\n    result = A + B\n    result.set_shape((5, 5))\n    print result.get_shape()\n    return result\n\ndef linear(A, B, C):\n    D = plus(A, B) + C\n    print D.get_shape()\n    return D\n\n# @function.Defun(\n#     tf.float32, shape_func=lambda op: [op.inputs[0].get_shape()])\n# def Foo(x):\n#     print x.get_shape, 'see'\n#     return x + 1.0\n\nsess = tf.Session()\nsess.run(tf.global_variables_initializer())\nA = tf.constant(np.arange(25).reshape((5, 5)), dtype=tf.float32)\nB = tf.ones((5, 5))\nC = tf.ones((5, 5))\nE = plus(A, B)\n# d = Foo(tf.constant(2.0))\nD = linear(A, B, C)\nprint sess.run(E)\nprint sess.run(D)\n# print sess.run(d)\n\nDescribe the problem\nAll tensors going through the decorated function lose their shapes, as well as the output tensor. Without this decoration, there is no problem.  btw, shape_fun seems doesn't work", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: NA\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: macOS 10.12.5 (16F73)\r\n- **TensorFlow installed from (source or binary)**:binary\r\n- **TensorFlow version (use command below)**:1.3.0\r\n- **Python version**: 2.7.13\r\n- **Bazel version (if compiling from source)**:NA\r\n- **CUDA/cuDNN version**:NA\r\n- **GPU model and memory**:NA\r\n- **Exact command to reproduce**:\r\n```\r\nimport  tensorflow as tf\r\nimport numpy as np\r\nfrom tensorflow.python.framework import function\r\n# Now let us see some property of @function of tf. It will make all its inputs loose \"shape\"\r\n\r\n@function.Defun(tf.float32, tf.float32)\r\ndef plus(A, B):\r\n\r\n    result = A + B\r\n    result.set_shape((5, 5))\r\n    print result.get_shape()\r\n    return result\r\n\r\ndef linear(A, B, C):\r\n    D = plus(A, B) + C\r\n    print D.get_shape()\r\n    return D\r\n\r\n# @function.Defun(\r\n#     tf.float32, shape_func=lambda op: [op.inputs[0].get_shape()])\r\n# def Foo(x):\r\n#     print x.get_shape, 'see'\r\n#     return x + 1.0\r\n\r\nsess = tf.Session()\r\nsess.run(tf.global_variables_initializer())\r\nA = tf.constant(np.arange(25).reshape((5, 5)), dtype=tf.float32)\r\nB = tf.ones((5, 5))\r\nC = tf.ones((5, 5))\r\nE = plus(A, B)\r\n# d = Foo(tf.constant(2.0))\r\nD = linear(A, B, C)\r\nprint sess.run(E)\r\nprint sess.run(D)\r\n# print sess.run(d)\r\n```\r\n\r\n### Describe the problem\r\nAll tensors going through the decorated function lose their shapes, as well as the output tensor. Without this decoration, there is no problem.  btw, shape_fun seems doesn't work\r\n"}