{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/394527486", "html_url": "https://github.com/tensorflow/tensorflow/issues/19643#issuecomment-394527486", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19643", "id": 394527486, "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDUyNzQ4Ng==", "user": {"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-04T23:02:53Z", "updated_at": "2018-06-04T23:02:53Z", "author_association": "MEMBER", "body_html": "<p>That is by design. Global collections (and global states in general) are prone to various issues (like most global variables in software engineering) and should be avoided.</p>\n<p>You can retrieve the updates created by your BatchNormalization layer via:</p>\n<div class=\"highlight highlight-source-python\"><pre>updates <span class=\"pl-k\">=</span> layer.updates</pre></div>\n<p>Additionally you can retrieve the aggregated updates of all stateful layers in a Keras model via:</p>\n<div class=\"highlight highlight-source-python\"><pre>updates <span class=\"pl-k\">=</span> model.updates</pre></div>\n<p>If you are writing your own custom training loops, you will have to run these updates as part of the call to <code>sess.run()</code>. But do note that tf.keras provides a built-in training loop in the form of <code>model.fit()</code>, as well as primitive methods for building your own custom training loops (in particular <code>model.train_on_batch()</code>  and <code>model.predict_on_batch()</code>). If you are using Keras you should generally never have to manually manage your model's updates.</p>", "body_text": "That is by design. Global collections (and global states in general) are prone to various issues (like most global variables in software engineering) and should be avoided.\nYou can retrieve the updates created by your BatchNormalization layer via:\nupdates = layer.updates\nAdditionally you can retrieve the aggregated updates of all stateful layers in a Keras model via:\nupdates = model.updates\nIf you are writing your own custom training loops, you will have to run these updates as part of the call to sess.run(). But do note that tf.keras provides a built-in training loop in the form of model.fit(), as well as primitive methods for building your own custom training loops (in particular model.train_on_batch()  and model.predict_on_batch()). If you are using Keras you should generally never have to manually manage your model's updates.", "body": "That is by design. Global collections (and global states in general) are prone to various issues (like most global variables in software engineering) and should be avoided.\r\n\r\nYou can retrieve the updates created by your BatchNormalization layer via:\r\n\r\n```python\r\nupdates = layer.updates\r\n```\r\n\r\nAdditionally you can retrieve the aggregated updates of all stateful layers in a Keras model via:\r\n\r\n```python\r\nupdates = model.updates\r\n```\r\n\r\nIf you are writing your own custom training loops, you will have to run these updates as part of the call to `sess.run()`. But do note that tf.keras provides a built-in training loop in the form of `model.fit()`, as well as primitive methods for building your own custom training loops (in particular `model.train_on_batch()`  and `model.predict_on_batch()`). If you are using Keras you should generally never have to manually manage your model's updates."}