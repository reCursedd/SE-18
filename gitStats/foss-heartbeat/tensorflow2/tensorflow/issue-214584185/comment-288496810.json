{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/288496810", "html_url": "https://github.com/tensorflow/tensorflow/issues/8454#issuecomment-288496810", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8454", "id": 288496810, "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODQ5NjgxMA==", "user": {"login": "derekhh", "id": 1497445, "node_id": "MDQ6VXNlcjE0OTc0NDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1497445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/derekhh", "html_url": "https://github.com/derekhh", "followers_url": "https://api.github.com/users/derekhh/followers", "following_url": "https://api.github.com/users/derekhh/following{/other_user}", "gists_url": "https://api.github.com/users/derekhh/gists{/gist_id}", "starred_url": "https://api.github.com/users/derekhh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/derekhh/subscriptions", "organizations_url": "https://api.github.com/users/derekhh/orgs", "repos_url": "https://api.github.com/users/derekhh/repos", "events_url": "https://api.github.com/users/derekhh/events{/privacy}", "received_events_url": "https://api.github.com/users/derekhh/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-22T18:33:15Z", "updated_at": "2017-03-22T18:33:15Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7301432\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/aleksab\">@aleksab</a> Sorry for not being clear.</p>\n<p>Basically I've created a new Python script that looks like this. This restores the TF-Slim Inception model from your previous checkpoint and reads from a placeholder. The model <code>inception_v1_final.pb</code> created can be used for Android.</p>\n<p>I'm quite new to TensorFlow so I'm sure this won't be the best solution - creating a new Python script for this purpose already seems stupid. If there's a better solution please let me know. Thanks!</p>\n<pre><code>import os\nimport tensorflow as tf\nimport tensorflow.contrib.slim as slim\n\nfrom nets import inception\nfrom nets import inception_v1\nfrom nets import nets_factory\n\nfrom tensorflow.python.framework import graph_util\nfrom tensorflow.python.platform import gfile\n\ncheckpoint_path = tf.train.latest_checkpoint('./log')\n\nwith tf.Graph().as_default() as graph:\n    input_tensor = tf.placeholder(tf.float32, shape=(None, 224, 224, 3), name='input_image')\n    with tf.Session() as sess:\n        with tf.variable_scope('model') as scope:\n            with slim.arg_scope(inception.inception_v3_arg_scope()):\n                logits, end_points = inception.inception_v1(input_tensor, num_classes=45, is_training=False)\n\n    saver = tf.train.Saver()\n    saver.restore(sess, checkpoint_path)\n\n    output_node_names = 'model/InceptionV1/Logits/Predictions/Softmax'\n    input_graph_def = graph.as_graph_def()\n    output_graph_def = graph_util.convert_variables_to_constants(sess, input_graph_def, output_node_names.split(\",\"))\n    with open('./output_graph_nodes.txt', 'w') as f:\n        for node in output_graph_def.node:\n            f.write(node.name + '\\n')\n\n    output_graph = './inception_v1_final.pb'\n    with gfile.FastGFile(output_graph, 'wb') as f:\n        f.write(output_graph_def.SerializeToString())\n</code></pre>", "body_text": "@aleksab Sorry for not being clear.\nBasically I've created a new Python script that looks like this. This restores the TF-Slim Inception model from your previous checkpoint and reads from a placeholder. The model inception_v1_final.pb created can be used for Android.\nI'm quite new to TensorFlow so I'm sure this won't be the best solution - creating a new Python script for this purpose already seems stupid. If there's a better solution please let me know. Thanks!\nimport os\nimport tensorflow as tf\nimport tensorflow.contrib.slim as slim\n\nfrom nets import inception\nfrom nets import inception_v1\nfrom nets import nets_factory\n\nfrom tensorflow.python.framework import graph_util\nfrom tensorflow.python.platform import gfile\n\ncheckpoint_path = tf.train.latest_checkpoint('./log')\n\nwith tf.Graph().as_default() as graph:\n    input_tensor = tf.placeholder(tf.float32, shape=(None, 224, 224, 3), name='input_image')\n    with tf.Session() as sess:\n        with tf.variable_scope('model') as scope:\n            with slim.arg_scope(inception.inception_v3_arg_scope()):\n                logits, end_points = inception.inception_v1(input_tensor, num_classes=45, is_training=False)\n\n    saver = tf.train.Saver()\n    saver.restore(sess, checkpoint_path)\n\n    output_node_names = 'model/InceptionV1/Logits/Predictions/Softmax'\n    input_graph_def = graph.as_graph_def()\n    output_graph_def = graph_util.convert_variables_to_constants(sess, input_graph_def, output_node_names.split(\",\"))\n    with open('./output_graph_nodes.txt', 'w') as f:\n        for node in output_graph_def.node:\n            f.write(node.name + '\\n')\n\n    output_graph = './inception_v1_final.pb'\n    with gfile.FastGFile(output_graph, 'wb') as f:\n        f.write(output_graph_def.SerializeToString())", "body": "@aleksab Sorry for not being clear.\r\n\r\nBasically I've created a new Python script that looks like this. This restores the TF-Slim Inception model from your previous checkpoint and reads from a placeholder. The model `inception_v1_final.pb` created can be used for Android.\r\n\r\nI'm quite new to TensorFlow so I'm sure this won't be the best solution - creating a new Python script for this purpose already seems stupid. If there's a better solution please let me know. Thanks!\r\n\r\n    import os\r\n    import tensorflow as tf\r\n    import tensorflow.contrib.slim as slim\r\n\r\n    from nets import inception\r\n    from nets import inception_v1\r\n    from nets import nets_factory\r\n\r\n    from tensorflow.python.framework import graph_util\r\n    from tensorflow.python.platform import gfile\r\n\r\n    checkpoint_path = tf.train.latest_checkpoint('./log')\r\n\r\n    with tf.Graph().as_default() as graph:\r\n        input_tensor = tf.placeholder(tf.float32, shape=(None, 224, 224, 3), name='input_image')\r\n        with tf.Session() as sess:\r\n            with tf.variable_scope('model') as scope:\r\n                with slim.arg_scope(inception.inception_v3_arg_scope()):\r\n                    logits, end_points = inception.inception_v1(input_tensor, num_classes=45, is_training=False)\r\n\r\n        saver = tf.train.Saver()\r\n        saver.restore(sess, checkpoint_path)\r\n\r\n        output_node_names = 'model/InceptionV1/Logits/Predictions/Softmax'\r\n        input_graph_def = graph.as_graph_def()\r\n        output_graph_def = graph_util.convert_variables_to_constants(sess, input_graph_def, output_node_names.split(\",\"))\r\n        with open('./output_graph_nodes.txt', 'w') as f:\r\n            for node in output_graph_def.node:\r\n                f.write(node.name + '\\n')\r\n\r\n        output_graph = './inception_v1_final.pb'\r\n        with gfile.FastGFile(output_graph, 'wb') as f:\r\n            f.write(output_graph_def.SerializeToString())\r\n"}