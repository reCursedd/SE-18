{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/288370745", "html_url": "https://github.com/tensorflow/tensorflow/issues/8454#issuecomment-288370745", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8454", "id": 288370745, "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODM3MDc0NQ==", "user": {"login": "derekhh", "id": 1497445, "node_id": "MDQ6VXNlcjE0OTc0NDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1497445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/derekhh", "html_url": "https://github.com/derekhh", "followers_url": "https://api.github.com/users/derekhh/followers", "following_url": "https://api.github.com/users/derekhh/following{/other_user}", "gists_url": "https://api.github.com/users/derekhh/gists{/gist_id}", "starred_url": "https://api.github.com/users/derekhh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/derekhh/subscriptions", "organizations_url": "https://api.github.com/users/derekhh/orgs", "repos_url": "https://api.github.com/users/derekhh/repos", "events_url": "https://api.github.com/users/derekhh/events{/privacy}", "received_events_url": "https://api.github.com/users/derekhh/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-22T11:27:18Z", "updated_at": "2017-03-22T11:27:18Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=592670\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/concretevitamin\">@concretevitamin</a> Thanks for your reply.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=21178140\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/nathansilberman\">@nathansilberman</a>: I've found a workaround by loading this model checkpoint, create a <code>tf.placeholder</code> and then use this as the <code>input_node</code> instead.</p>\n<p>Please correct me if I am wrong. I guess there is no easy way to use the current queue-based input graph on Android. If we use that then the input node needs to be a <code>batch/queue</code> or a <code>shuffle_batch/random_shuffle_queue</code>, but there is no supporting OpKernel for these Ops right now.</p>", "body_text": "@concretevitamin Thanks for your reply.\n@nathansilberman: I've found a workaround by loading this model checkpoint, create a tf.placeholder and then use this as the input_node instead.\nPlease correct me if I am wrong. I guess there is no easy way to use the current queue-based input graph on Android. If we use that then the input node needs to be a batch/queue or a shuffle_batch/random_shuffle_queue, but there is no supporting OpKernel for these Ops right now.", "body": "@concretevitamin Thanks for your reply.\r\n\r\n@nathansilberman: I've found a workaround by loading this model checkpoint, create a `tf.placeholder` and then use this as the `input_node` instead. \r\n\r\nPlease correct me if I am wrong. I guess there is no easy way to use the current queue-based input graph on Android. If we use that then the input node needs to be a `batch/queue` or a `shuffle_batch/random_shuffle_queue`, but there is no supporting OpKernel for these Ops right now."}