{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21856", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21856/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21856/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21856/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21856", "id": 353847391, "node_id": "MDU6SXNzdWUzNTM4NDczOTE=", "number": 21856, "title": "Loading frozen graph changes behavior of `tf.placeholder()`", "user": {"login": "unixpickle", "id": 406021, "node_id": "MDQ6VXNlcjQwNjAyMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/406021?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unixpickle", "html_url": "https://github.com/unixpickle", "followers_url": "https://api.github.com/users/unixpickle/followers", "following_url": "https://api.github.com/users/unixpickle/following{/other_user}", "gists_url": "https://api.github.com/users/unixpickle/gists{/gist_id}", "starred_url": "https://api.github.com/users/unixpickle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unixpickle/subscriptions", "organizations_url": "https://api.github.com/users/unixpickle/orgs", "repos_url": "https://api.github.com/users/unixpickle/repos", "events_url": "https://api.github.com/users/unixpickle/events{/privacy}", "received_events_url": "https://api.github.com/users/unixpickle/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "reedwm", "id": 6510203, "node_id": "MDQ6VXNlcjY1MTAyMDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/6510203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reedwm", "html_url": "https://github.com/reedwm", "followers_url": "https://api.github.com/users/reedwm/followers", "following_url": "https://api.github.com/users/reedwm/following{/other_user}", "gists_url": "https://api.github.com/users/reedwm/gists{/gist_id}", "starred_url": "https://api.github.com/users/reedwm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reedwm/subscriptions", "organizations_url": "https://api.github.com/users/reedwm/orgs", "repos_url": "https://api.github.com/users/reedwm/repos", "events_url": "https://api.github.com/users/reedwm/events{/privacy}", "received_events_url": "https://api.github.com/users/reedwm/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "reedwm", "id": 6510203, "node_id": "MDQ6VXNlcjY1MTAyMDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/6510203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reedwm", "html_url": "https://github.com/reedwm", "followers_url": "https://api.github.com/users/reedwm/followers", "following_url": "https://api.github.com/users/reedwm/following{/other_user}", "gists_url": "https://api.github.com/users/reedwm/gists{/gist_id}", "starred_url": "https://api.github.com/users/reedwm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reedwm/subscriptions", "organizations_url": "https://api.github.com/users/reedwm/orgs", "repos_url": "https://api.github.com/users/reedwm/repos", "events_url": "https://api.github.com/users/reedwm/events{/privacy}", "received_events_url": "https://api.github.com/users/reedwm/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-08-24T16:22:02Z", "updated_at": "2018-09-01T01:18:08Z", "closed_at": "2018-09-01T01:18:08Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Ubuntu 16.04</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: no</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: <code>pip install tensorflow</code></li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.10.0-0-g656e7a2b34 1.10.0</li>\n<li><strong>Python version</strong>: <code>Python 3.6.6 :: Anaconda, Inc.</code></li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>: Run the program below</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Usually, <code>tf.placeholder(tf.float32, shape=[]).get_shape()</code> is an empty shape, <code>()</code>. However, if you import a specific frozen graph first, the result of <code>get_shape()</code> will be <code>unknown</code>.</p>\n<p>Here is an example of a script that reproduces the issue and prints <code>unknown</code>:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\n<span class=\"pl-c1\">IN_OUT</span> <span class=\"pl-k\">=</span> [<span class=\"pl-s\"><span class=\"pl-pds\">'</span>images_ph:0<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>inception_v3/logits/flatten/Reshape:0<span class=\"pl-pds\">'</span></span>]\n\n<span class=\"pl-k\">with</span> <span class=\"pl-c1\">open</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>inception-v3.pb<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>rb<span class=\"pl-pds\">'</span></span>) <span class=\"pl-k\">as</span> in_file:\n    graph_def <span class=\"pl-k\">=</span> tf.GraphDef()\n    graph_def.ParseFromString(in_file.read())\n    tf.import_graph_def(graph_def, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span><span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">return_elements</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">IN_OUT</span>)\n\n<span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>shape result<span class=\"pl-pds\">'</span></span>, tf.placeholder(tf.float32, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>[]).get_shape())</pre></div>\n<p>Where <code>inception-v3.pb</code> can be downloaded at: <a href=\"https://storage.googleapis.com/agi-data/models/inception-v3.pb\" rel=\"nofollow\">https://storage.googleapis.com/agi-data/models/inception-v3.pb</a></p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: no\nTensorFlow installed from (source or binary): pip install tensorflow\nTensorFlow version (use command below): v1.10.0-0-g656e7a2b34 1.10.0\nPython version: Python 3.6.6 :: Anaconda, Inc.\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce: Run the program below\n\nDescribe the problem\nUsually, tf.placeholder(tf.float32, shape=[]).get_shape() is an empty shape, (). However, if you import a specific frozen graph first, the result of get_shape() will be unknown.\nHere is an example of a script that reproduces the issue and prints unknown:\nimport tensorflow as tf\n\nIN_OUT = ['images_ph:0', 'inception_v3/logits/flatten/Reshape:0']\n\nwith open('inception-v3.pb', 'rb') as in_file:\n    graph_def = tf.GraphDef()\n    graph_def.ParseFromString(in_file.read())\n    tf.import_graph_def(graph_def, name='', return_elements=IN_OUT)\n\nprint('shape result', tf.placeholder(tf.float32, shape=[]).get_shape())\nWhere inception-v3.pb can be downloaded at: https://storage.googleapis.com/agi-data/models/inception-v3.pb", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: no\r\n- **TensorFlow installed from (source or binary)**: `pip install tensorflow`\r\n- **TensorFlow version (use command below)**: v1.10.0-0-g656e7a2b34 1.10.0\r\n- **Python version**: `Python 3.6.6 :: Anaconda, Inc.`\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: Run the program below\r\n\r\n### Describe the problem\r\n\r\nUsually, `tf.placeholder(tf.float32, shape=[]).get_shape()` is an empty shape, `()`. However, if you import a specific frozen graph first, the result of `get_shape()` will be `unknown`.\r\n\r\nHere is an example of a script that reproduces the issue and prints `unknown`:\r\n\r\n```python\r\nimport tensorflow as tf\r\n\r\nIN_OUT = ['images_ph:0', 'inception_v3/logits/flatten/Reshape:0']\r\n\r\nwith open('inception-v3.pb', 'rb') as in_file:\r\n    graph_def = tf.GraphDef()\r\n    graph_def.ParseFromString(in_file.read())\r\n    tf.import_graph_def(graph_def, name='', return_elements=IN_OUT)\r\n\r\nprint('shape result', tf.placeholder(tf.float32, shape=[]).get_shape())\r\n```\r\n\r\nWhere `inception-v3.pb` can be downloaded at: https://storage.googleapis.com/agi-data/models/inception-v3.pb"}