{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/262859309", "html_url": "https://github.com/tensorflow/tensorflow/issues/5837#issuecomment-262859309", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5837", "id": 262859309, "node_id": "MDEyOklzc3VlQ29tbWVudDI2Mjg1OTMwOQ==", "user": {"login": "shoyer", "id": 1217238, "node_id": "MDQ6VXNlcjEyMTcyMzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shoyer", "html_url": "https://github.com/shoyer", "followers_url": "https://api.github.com/users/shoyer/followers", "following_url": "https://api.github.com/users/shoyer/following{/other_user}", "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions", "organizations_url": "https://api.github.com/users/shoyer/orgs", "repos_url": "https://api.github.com/users/shoyer/repos", "events_url": "https://api.github.com/users/shoyer/events{/privacy}", "received_events_url": "https://api.github.com/users/shoyer/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-25T00:27:21Z", "updated_at": "2016-11-25T00:27:21Z", "author_association": "MEMBER", "body_html": "<p>Take a look at <code>tf.contrib.metrics.streaming_concat</code> for an example of storing a dynamically resized array in tf.Variable.</p>\n<p>Note that in many cases it's actually fine to just use <code>streaming_concat</code> and then take the median in memory (e.g., with numpy).</p>", "body_text": "Take a look at tf.contrib.metrics.streaming_concat for an example of storing a dynamically resized array in tf.Variable.\nNote that in many cases it's actually fine to just use streaming_concat and then take the median in memory (e.g., with numpy).", "body": "Take a look at `tf.contrib.metrics.streaming_concat` for an example of storing a dynamically resized array in tf.Variable.\r\n\r\nNote that in many cases it's actually fine to just use `streaming_concat` and then take the median in memory (e.g., with numpy)."}