{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/225684278", "pull_request_review_id": 165335069, "id": 225684278, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNTY4NDI3OA==", "diff_hunk": "@@ -0,0 +1,88 @@\n+/* Copyright 2018 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+#include \"tensorflow/compiler/xla/service/conditional_to_select.h\"\n+\n+#include \"tensorflow/compiler/xla/service/call_graph.h\"\n+#include \"tensorflow/compiler/xla/service/call_inliner.h\"\n+#include \"tensorflow/compiler/xla/service/hlo_computation.h\"\n+#include \"tensorflow/compiler/xla/service/hlo_instruction.h\"\n+#include \"tensorflow/compiler/xla/service/hlo_opcode.h\"\n+#include \"tensorflow/compiler/xla/status_macros.h\"\n+#include \"tensorflow/compiler/xla/types.h\"\n+#include \"tensorflow/core/lib/core/errors.h\"\n+#include \"tensorflow/core/lib/core/status.h\"\n+#include \"tensorflow/core/platform/logging.h\"\n+\n+namespace xla {\n+\n+StatusOr<bool> DoConditionalToSelect(HloInstruction* conditional) {\n+  // Only allow conditional to select if the called computations\n+  // do not have side effects.\n+  for (HloComputation* computation : conditional->called_computations()) {\n+    if (computation->HasSideEffect()) {\n+      VLOG(1) << \"Not transforming conditional; branches have side effects:\"\n+              << conditional->ToString();\n+      return false;\n+    }\n+  }\n+\n+  auto computation = conditional->parent();\n+\n+  // Create new instructions\n+  HloInstruction* if_call_op =\n+      computation->AddInstruction(HloInstruction::CreateCall(\n+          conditional->shape(), {conditional->mutable_operand(1)},\n+          conditional->true_computation()));\n+  HloInstruction* else_call_op =\n+      computation->AddInstruction(HloInstruction::CreateCall(\n+          conditional->shape(), {conditional->mutable_operand(2)},\n+          conditional->false_computation()));\n+  HloInstruction* select_op =\n+      computation->AddInstruction(HloInstruction::CreateTernary(\n+          conditional->shape(), HloOpcode::kSelect,\n+          conditional->mutable_operand(0), if_call_op, else_call_op));\n+  conditional->SetupDerivedInstruction(if_call_op);\n+  conditional->SetupDerivedInstruction(else_call_op);\n+  conditional->SetupDerivedInstruction(select_op);\n+  TF_RETURN_IF_ERROR(computation->ReplaceInstruction(conditional, select_op));\n+  TF_RETURN_IF_ERROR(CallInliner::Inline(if_call_op).status());\n+  TF_RETURN_IF_ERROR(CallInliner::Inline(else_call_op).status());\n+  return true;\n+}\n+\n+StatusOr<bool> ConditionalToSelect::Run(HloModule* module) {\n+  std::unique_ptr<CallGraph> call_graph = CallGraph::Build(module);\n+  bool did_mutate = false;\n+  VLOG(1) << \"Running conditional-to-select pass\";\n+  TF_RETURN_IF_ERROR(\n+      call_graph->VisitNodes([&](const CallGraphNode& node) -> Status {\n+        std::vector<HloInstruction*> ToInline;\n+        if (node.context() != CallContext::kParallel) return Status::OK();", "path": "tensorflow/compiler/xla/service/conditional_to_select.cc", "position": null, "original_position": 73, "commit_id": "b784aa8cc0b23f69e26127f4aea94b1787980c8e", "original_commit_id": "735945f71a9afd07befc20a9fac63d92f7964895", "user": {"login": "sanjoy", "id": 136291, "node_id": "MDQ6VXNlcjEzNjI5MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/136291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanjoy", "html_url": "https://github.com/sanjoy", "followers_url": "https://api.github.com/users/sanjoy/followers", "following_url": "https://api.github.com/users/sanjoy/following{/other_user}", "gists_url": "https://api.github.com/users/sanjoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanjoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanjoy/subscriptions", "organizations_url": "https://api.github.com/users/sanjoy/orgs", "repos_url": "https://api.github.com/users/sanjoy/repos", "events_url": "https://api.github.com/users/sanjoy/events{/privacy}", "received_events_url": "https://api.github.com/users/sanjoy/received_events", "type": "User", "site_admin": false}, "body": "We prefer using braces even for single statement `if` and `for`.", "created_at": "2018-10-16T19:49:23Z", "updated_at": "2018-11-21T00:04:40Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/22974#discussion_r225684278", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/22974", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/225684278"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/22974#discussion_r225684278"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/22974"}}, "body_html": "<p>We prefer using braces even for single statement <code>if</code> and <code>for</code>.</p>", "body_text": "We prefer using braces even for single statement if and for."}