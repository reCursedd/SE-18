{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/308006744", "html_url": "https://github.com/tensorflow/tensorflow/issues/1095#issuecomment-308006744", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1095", "id": 308006744, "node_id": "MDEyOklzc3VlQ29tbWVudDMwODAwNjc0NA==", "user": {"login": "adler-j", "id": 2202312, "node_id": "MDQ6VXNlcjIyMDIzMTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2202312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adler-j", "html_url": "https://github.com/adler-j", "followers_url": "https://api.github.com/users/adler-j/followers", "following_url": "https://api.github.com/users/adler-j/following{/other_user}", "gists_url": "https://api.github.com/users/adler-j/gists{/gist_id}", "starred_url": "https://api.github.com/users/adler-j/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adler-j/subscriptions", "organizations_url": "https://api.github.com/users/adler-j/orgs", "repos_url": "https://api.github.com/users/adler-j/repos", "events_url": "https://api.github.com/users/adler-j/events{/privacy}", "received_events_url": "https://api.github.com/users/adler-j/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-13T04:56:33Z", "updated_at": "2017-06-13T04:56:44Z", "author_association": "NONE", "body_html": "<p>Sure can, in my example above you replace</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">_MySquareGrad</span>(<span class=\"pl-smi\">op</span>, <span class=\"pl-smi\">grad</span>):\n    x <span class=\"pl-k\">=</span> op.inputs[<span class=\"pl-c1\">0</span>]\n    <span class=\"pl-k\">return</span> grad <span class=\"pl-k\">*</span> <span class=\"pl-c1\">20</span> <span class=\"pl-k\">*</span> x</pre></div>\n<p>with</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">_MySquareGrad</span>(<span class=\"pl-smi\">op</span>, <span class=\"pl-smi\">grad</span>):\n    x <span class=\"pl-k\">=</span> op.inputs[<span class=\"pl-c1\">0</span>]\n    jacobian <span class=\"pl-k\">=</span> ComputeJacobian(x)  <span class=\"pl-c\"><span class=\"pl-c\">#</span> compute jacobian in x</span>\n    <span class=\"pl-k\">return</span> np.dot(jacobian.T, grad)</pre></div>\n<p>with that said, this is in general inferior to an explicit computation.</p>", "body_text": "Sure can, in my example above you replace\ndef _MySquareGrad(op, grad):\n    x = op.inputs[0]\n    return grad * 20 * x\nwith\ndef _MySquareGrad(op, grad):\n    x = op.inputs[0]\n    jacobian = ComputeJacobian(x)  # compute jacobian in x\n    return np.dot(jacobian.T, grad)\nwith that said, this is in general inferior to an explicit computation.", "body": "Sure can, in my example above you replace\r\n\r\n```python\r\ndef _MySquareGrad(op, grad):\r\n    x = op.inputs[0]\r\n    return grad * 20 * x\r\n```\r\n\r\nwith\r\n\r\n```python\r\ndef _MySquareGrad(op, grad):\r\n    x = op.inputs[0]\r\n    jacobian = ComputeJacobian(x)  # compute jacobian in x\r\n    return np.dot(jacobian.T, grad)\r\n```\r\n\r\nwith that said, this is in general inferior to an explicit computation."}