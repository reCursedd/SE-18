{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/224845561", "html_url": "https://github.com/tensorflow/tensorflow/issues/1095#issuecomment-224845561", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1095", "id": 224845561, "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDg0NTU2MQ==", "user": {"login": "ibab", "id": 890531, "node_id": "MDQ6VXNlcjg5MDUzMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/890531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibab", "html_url": "https://github.com/ibab", "followers_url": "https://api.github.com/users/ibab/followers", "following_url": "https://api.github.com/users/ibab/following{/other_user}", "gists_url": "https://api.github.com/users/ibab/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibab/subscriptions", "organizations_url": "https://api.github.com/users/ibab/orgs", "repos_url": "https://api.github.com/users/ibab/repos", "events_url": "https://api.github.com/users/ibab/events{/privacy}", "received_events_url": "https://api.github.com/users/ibab/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-09T09:32:38Z", "updated_at": "2016-06-09T09:32:38Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Ah, I didn't know about <code>Graph.gradient_override_map</code>.<br>\nIt could be used to implement the API <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7943790\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zffchen78\">@zffchen78</a> suggested like this:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">py_func</span>(<span class=\"pl-smi\">func</span>, <span class=\"pl-smi\">grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">None</span>):\n  tf.RegisterGradient(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>CustomPyFunc123<span class=\"pl-pds\">\"</span></span>)(grad) <span class=\"pl-c\"><span class=\"pl-c\">#</span> Generate a unique name here</span>\n  g <span class=\"pl-k\">=</span> tf.get_default_graph()\n  <span class=\"pl-k\">with</span> g.gradient_override_map({<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>PyFunc<span class=\"pl-pds\">\"</span></span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>CustomPyFunc123<span class=\"pl-pds\">\"</span></span>}):\n    <span class=\"pl-k\">return</span> old_py_func(func)</pre></div>\n<p>But having to generate a unique name is quite ugly.<br>\nMaybe a possible future gradient overriding method won't have that requirement.<br>\nIt would be simple if <code>gradient_override_map</code> used a function directly like this:</p>\n<pre><code>def grad_func(op, grad):\n  # ...\nwith g.gradient_override_map({\"PyFunc\": grad_func}):\n  # ...\n</code></pre>", "body_text": "Ah, I didn't know about Graph.gradient_override_map.\nIt could be used to implement the API @zffchen78 suggested like this:\ndef py_func(func, grad=None):\n  tf.RegisterGradient(\"CustomPyFunc123\")(grad) # Generate a unique name here\n  g = tf.get_default_graph()\n  with g.gradient_override_map({\"PyFunc\": \"CustomPyFunc123\"}):\n    return old_py_func(func)\nBut having to generate a unique name is quite ugly.\nMaybe a possible future gradient overriding method won't have that requirement.\nIt would be simple if gradient_override_map used a function directly like this:\ndef grad_func(op, grad):\n  # ...\nwith g.gradient_override_map({\"PyFunc\": grad_func}):\n  # ...", "body": "Ah, I didn't know about `Graph.gradient_override_map`.\nIt could be used to implement the API @zffchen78 suggested like this:\n\n``` python\ndef py_func(func, grad=None):\n  tf.RegisterGradient(\"CustomPyFunc123\")(grad) # Generate a unique name here\n  g = tf.get_default_graph()\n  with g.gradient_override_map({\"PyFunc\": \"CustomPyFunc123\"}):\n    return old_py_func(func)\n```\n\nBut having to generate a unique name is quite ugly.\nMaybe a possible future gradient overriding method won't have that requirement.\nIt would be simple if `gradient_override_map` used a function directly like this:\n\n```\ndef grad_func(op, grad):\n  # ...\nwith g.gradient_override_map({\"PyFunc\": grad_func}):\n  # ...\n```\n"}