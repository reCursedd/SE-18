{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22772", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22772/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22772/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22772/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22772", "id": 367308129, "node_id": "MDU6SXNzdWUzNjczMDgxMjk=", "number": 22772, "title": "tf.keras.layers.SeparableConv2D fails on Cloud TPU", "user": {"login": "choongng", "id": 386088, "node_id": "MDQ6VXNlcjM4NjA4OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/386088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/choongng", "html_url": "https://github.com/choongng", "followers_url": "https://api.github.com/users/choongng/followers", "following_url": "https://api.github.com/users/choongng/following{/other_user}", "gists_url": "https://api.github.com/users/choongng/gists{/gist_id}", "starred_url": "https://api.github.com/users/choongng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/choongng/subscriptions", "organizations_url": "https://api.github.com/users/choongng/orgs", "repos_url": "https://api.github.com/users/choongng/repos", "events_url": "https://api.github.com/users/choongng/events{/privacy}", "received_events_url": "https://api.github.com/users/choongng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097541661, "node_id": "MDU6TGFiZWwxMDk3NTQxNjYx", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:tpus", "name": "comp:tpus", "color": "0052cc", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-10-05T17:50:38Z", "updated_at": "2018-11-02T01:46:52Z", "closed_at": "2018-10-15T21:39:42Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes: Convnet for MNIST, hand-written</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Google Colaboratory, default versions of Python &amp; all libraries</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: n/a</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: n/a</li>\n<li><strong>TensorFlow version (use command below)</strong>: n/a</li>\n<li><strong>Python version</strong>: n/a</li>\n<li><strong>Bazel version (if compiling from source)</strong>: n/a</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: n/a</li>\n<li><strong>CUDA/cuDNN version</strong>: n/a</li>\n<li><strong>GPU model and memory</strong>: TPU</li>\n<li><strong>Exact command to reproduce</strong>: n/a, see below</li>\n</ul>\n<h3>Description</h3>\n<p>tf.keras.layers.SeparableConv2D fails on Cloud TPU. Colaboratory notebook with small example linked, works with GPU runtime but not TPU runtime.</p>\n<p><a href=\"https://colab.research.google.com/drive/1TyYSeA6bq2YBT7Ngo7thHfrcrAR30aXa\" rel=\"nofollow\">https://colab.research.google.com/drive/1TyYSeA6bq2YBT7Ngo7thHfrcrAR30aXa</a></p>\n<p>Expected result is successful training to &gt;99% accuracy, this works on GPU but on TPU model.fit throws (full stack trace in notebook):</p>\n<pre><code>/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py in __init__(self, fetches, contraction_fn)\n    289       except ValueError as e:\n    290         raise ValueError('Fetch argument %r cannot be interpreted as a '\n--&gt; 291                          'Tensor. (%s)' % (fetch, str(e)))\n    292       except KeyError as e:\n    293         raise ValueError('Fetch argument %r cannot be interpreted as a '\n\nValueError: Fetch argument &lt;tf.Variable 'separable_conv2d_6/depthwise_kernel:0' shape=(5, 5, 1, 1) dtype=float32&gt; cannot be interpreted as a Tensor. (Tensor Tensor(\"separable_conv2d_6/depthwise_kernel/Read/ReadVariableOp:0\", shape=(5, 5, 1, 1), dtype=float32) is not an element of this graph.)\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes: Convnet for MNIST, hand-written\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Google Colaboratory, default versions of Python & all libraries\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: n/a\nTensorFlow installed from (source or binary): n/a\nTensorFlow version (use command below): n/a\nPython version: n/a\nBazel version (if compiling from source): n/a\nGCC/Compiler version (if compiling from source): n/a\nCUDA/cuDNN version: n/a\nGPU model and memory: TPU\nExact command to reproduce: n/a, see below\n\nDescription\ntf.keras.layers.SeparableConv2D fails on Cloud TPU. Colaboratory notebook with small example linked, works with GPU runtime but not TPU runtime.\nhttps://colab.research.google.com/drive/1TyYSeA6bq2YBT7Ngo7thHfrcrAR30aXa\nExpected result is successful training to >99% accuracy, this works on GPU but on TPU model.fit throws (full stack trace in notebook):\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py in __init__(self, fetches, contraction_fn)\n    289       except ValueError as e:\n    290         raise ValueError('Fetch argument %r cannot be interpreted as a '\n--> 291                          'Tensor. (%s)' % (fetch, str(e)))\n    292       except KeyError as e:\n    293         raise ValueError('Fetch argument %r cannot be interpreted as a '\n\nValueError: Fetch argument <tf.Variable 'separable_conv2d_6/depthwise_kernel:0' shape=(5, 5, 1, 1) dtype=float32> cannot be interpreted as a Tensor. (Tensor Tensor(\"separable_conv2d_6/depthwise_kernel/Read/ReadVariableOp:0\", shape=(5, 5, 1, 1), dtype=float32) is not an element of this graph.)", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes: Convnet for MNIST, hand-written\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Google Colaboratory, default versions of Python & all libraries\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: n/a\r\n- **TensorFlow installed from (source or binary)**: n/a\r\n- **TensorFlow version (use command below)**: n/a\r\n- **Python version**: n/a\r\n- **Bazel version (if compiling from source)**: n/a \r\n- **GCC/Compiler version (if compiling from source)**: n/a\r\n- **CUDA/cuDNN version**: n/a\r\n- **GPU model and memory**: TPU\r\n- **Exact command to reproduce**: n/a, see below\r\n\r\n### Description\r\ntf.keras.layers.SeparableConv2D fails on Cloud TPU. Colaboratory notebook with small example linked, works with GPU runtime but not TPU runtime.\r\n\r\nhttps://colab.research.google.com/drive/1TyYSeA6bq2YBT7Ngo7thHfrcrAR30aXa\r\n\r\nExpected result is successful training to >99% accuracy, this works on GPU but on TPU model.fit throws (full stack trace in notebook):\r\n\r\n```\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py in __init__(self, fetches, contraction_fn)\r\n    289       except ValueError as e:\r\n    290         raise ValueError('Fetch argument %r cannot be interpreted as a '\r\n--> 291                          'Tensor. (%s)' % (fetch, str(e)))\r\n    292       except KeyError as e:\r\n    293         raise ValueError('Fetch argument %r cannot be interpreted as a '\r\n\r\nValueError: Fetch argument <tf.Variable 'separable_conv2d_6/depthwise_kernel:0' shape=(5, 5, 1, 1) dtype=float32> cannot be interpreted as a Tensor. (Tensor Tensor(\"separable_conv2d_6/depthwise_kernel/Read/ReadVariableOp:0\", shape=(5, 5, 1, 1), dtype=float32) is not an element of this graph.)\r\n```"}