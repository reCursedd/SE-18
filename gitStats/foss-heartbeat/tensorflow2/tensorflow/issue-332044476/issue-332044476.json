{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19991", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19991/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19991/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19991/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19991", "id": 332044476, "node_id": "MDU6SXNzdWUzMzIwNDQ0NzY=", "number": 19991, "title": "Incorrect name returned in Tensorflow causes \u201cTensor which does not exist\u201d error while invoking get_tensor_by_name", "user": {"login": "skbhat", "id": 8628054, "node_id": "MDQ6VXNlcjg2MjgwNTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/8628054?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skbhat", "html_url": "https://github.com/skbhat", "followers_url": "https://api.github.com/users/skbhat/followers", "following_url": "https://api.github.com/users/skbhat/following{/other_user}", "gists_url": "https://api.github.com/users/skbhat/gists{/gist_id}", "starred_url": "https://api.github.com/users/skbhat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skbhat/subscriptions", "organizations_url": "https://api.github.com/users/skbhat/orgs", "repos_url": "https://api.github.com/users/skbhat/repos", "events_url": "https://api.github.com/users/skbhat/events{/privacy}", "received_events_url": "https://api.github.com/users/skbhat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-06-13T15:21:01Z", "updated_at": "2018-11-14T19:20:26Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>As per the <a href=\"https://www.tensorflow.org/programmers_guide/graphs#naming_operations\" rel=\"nofollow\">documentation</a> TensorFlow would append \"_1\", \"_2\", and so on to the name in tf.Graph namespace, in order to make it unique. Here I define two convolutional operations. It is expected that the first one will be named as \"conv2d\" and second one \"conv2d_1\". But when I try to obtain the name of the second convolution it returns \"conv2d_2\". I causes error when I try to invoke get_tensor_by_name. Here is the code:</p>\n<p>import numpy as np<br>\nimport tensorflow as tf<br>\nimport os</p>\n<p>x = tf.constant(np.random.randn(1,2,2,1), dtype=tf.float32)<br>\nkernel_size = (1,1)<br>\nno_of_out = 20<br>\nstrides = (1,1)<br>\nconv_out1 = tf.layers.conv2d(x, 10, (1,1), (1,1))<br>\nconv_out2 = tf.layers.conv2d(x, 10, (1,1), (1,1))</p>\n<p>with tf.Session() as sess:<br>\nsess.run(tf.global_variables_initializer())<br>\nprint conv_out1.name # conv2d/BiasAdd:0 .  This value is correct<br>\nprint conv_out2.name # conv2d_2/BiasAdd:0 .  This value is incorrect.  It should be conv2d_1/BiasAdd:0<br>\nconv_weights1 = tf.get_default_graph().get_tensor_by_name(os.path.split(conv_out1.name)[0] + '/kernel:0')<br>\nconv_weights2 = tf.get_default_graph().get_tensor_by_name('conv2d_1/kernel:0')<br>\nconv_weights2 = tf.get_default_graph().get_tensor_by_name(os.path.split(conv_out2.name)[0] + '/kernel:0')</p>\n<p>I get error</p>\n<p>\"KeyError: \"The name 'conv2d_2/kernel:0' refers to a Tensor which does not exist. The operation, 'conv2d_2/kernel', does not exist in the graph.\"</p>\n<p><strong>Issue Template</strong></p>\n<ol>\n<li>Have I written custom code : No. I did not customize any part of TensorFlow. Directly using it as described above</li>\n<li>OS Platform and Distribution : Ubuntu 14.04</li>\n<li>TensorFlow installed from : N/A</li>\n<li>TensorFlow version : 1.4.0-rc1</li>\n<li>Bazel version : N/A</li>\n<li>CUDA/cuDNN version : N/A</li>\n<li>GPU model and memory : N/A</li>\n<li>Exact command to reproduce : As described above with exact code.</li>\n</ol>", "body_text": "As per the documentation TensorFlow would append \"_1\", \"_2\", and so on to the name in tf.Graph namespace, in order to make it unique. Here I define two convolutional operations. It is expected that the first one will be named as \"conv2d\" and second one \"conv2d_1\". But when I try to obtain the name of the second convolution it returns \"conv2d_2\". I causes error when I try to invoke get_tensor_by_name. Here is the code:\nimport numpy as np\nimport tensorflow as tf\nimport os\nx = tf.constant(np.random.randn(1,2,2,1), dtype=tf.float32)\nkernel_size = (1,1)\nno_of_out = 20\nstrides = (1,1)\nconv_out1 = tf.layers.conv2d(x, 10, (1,1), (1,1))\nconv_out2 = tf.layers.conv2d(x, 10, (1,1), (1,1))\nwith tf.Session() as sess:\nsess.run(tf.global_variables_initializer())\nprint conv_out1.name # conv2d/BiasAdd:0 .  This value is correct\nprint conv_out2.name # conv2d_2/BiasAdd:0 .  This value is incorrect.  It should be conv2d_1/BiasAdd:0\nconv_weights1 = tf.get_default_graph().get_tensor_by_name(os.path.split(conv_out1.name)[0] + '/kernel:0')\nconv_weights2 = tf.get_default_graph().get_tensor_by_name('conv2d_1/kernel:0')\nconv_weights2 = tf.get_default_graph().get_tensor_by_name(os.path.split(conv_out2.name)[0] + '/kernel:0')\nI get error\n\"KeyError: \"The name 'conv2d_2/kernel:0' refers to a Tensor which does not exist. The operation, 'conv2d_2/kernel', does not exist in the graph.\"\nIssue Template\n\nHave I written custom code : No. I did not customize any part of TensorFlow. Directly using it as described above\nOS Platform and Distribution : Ubuntu 14.04\nTensorFlow installed from : N/A\nTensorFlow version : 1.4.0-rc1\nBazel version : N/A\nCUDA/cuDNN version : N/A\nGPU model and memory : N/A\nExact command to reproduce : As described above with exact code.", "body": "As per the [documentation](https://www.tensorflow.org/programmers_guide/graphs#naming_operations) TensorFlow would append \"_1\", \"_2\", and so on to the name in tf.Graph namespace, in order to make it unique. Here I define two convolutional operations. It is expected that the first one will be named as \"conv2d\" and second one \"conv2d_1\". But when I try to obtain the name of the second convolution it returns \"conv2d_2\". I causes error when I try to invoke get_tensor_by_name. Here is the code:\r\n\r\nimport numpy as np\r\nimport tensorflow as tf\r\nimport os\r\n\r\nx = tf.constant(np.random.randn(1,2,2,1), dtype=tf.float32)\r\nkernel_size = (1,1)\r\nno_of_out = 20\r\nstrides = (1,1)\r\nconv_out1 = tf.layers.conv2d(x, 10, (1,1), (1,1))\r\nconv_out2 = tf.layers.conv2d(x, 10, (1,1), (1,1))\r\n\r\nwith tf.Session() as sess:\r\n    sess.run(tf.global_variables_initializer())\r\n    print conv_out1.name # conv2d/BiasAdd:0 .  This value is correct\r\n    print conv_out2.name # conv2d_2/BiasAdd:0 .  This value is incorrect.  It should be conv2d_1/BiasAdd:0\r\n    conv_weights1 = tf.get_default_graph().get_tensor_by_name(os.path.split(conv_out1.name)[0] + '/kernel:0')\r\n    conv_weights2 = tf.get_default_graph().get_tensor_by_name('conv2d_1/kernel:0')  \r\n    conv_weights2 = tf.get_default_graph().get_tensor_by_name(os.path.split(conv_out2.name)[0] + '/kernel:0')\r\n\r\nI get error\r\n\r\n\"KeyError: \"The name 'conv2d_2/kernel:0' refers to a Tensor which does not exist. The operation, 'conv2d_2/kernel', does not exist in the graph.\"\r\n\r\n**Issue Template**\r\n1. Have I written custom code : No. I did not customize any part of TensorFlow. Directly using it as described above\r\n2. OS Platform and Distribution : Ubuntu 14.04\r\n3. TensorFlow installed from : N/A\r\n4. TensorFlow version : 1.4.0-rc1\r\n5. Bazel version : N/A\r\n6. CUDA/cuDNN version : N/A\r\n7. GPU model and memory : N/A\r\n8. Exact command to reproduce : As described above with exact code."}