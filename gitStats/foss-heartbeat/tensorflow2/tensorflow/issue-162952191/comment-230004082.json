{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/230004082", "html_url": "https://github.com/tensorflow/tensorflow/issues/3103#issuecomment-230004082", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3103", "id": 230004082, "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDAwNDA4Mg==", "user": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "created_at": "2016-07-01T17:30:01Z", "updated_at": "2016-07-01T17:30:01Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=28490186\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/lightcatcher\">@lightcatcher</a> as you point out, our current implementation of sum reduction (and the various ops that depend on it) is not deterministic on either GPU or multi-threaded CPUs. It is primarily a speed/accuracy trade-off and if we could get comparable speed from one of the approaches you mention, we would be happy to switch the implementation. In short, this is working as intended for now, but contributions for a more accurate or even deterministic sum reduction (possibly as a separate op) would certainly be welcomed.</p>", "body_text": "@lightcatcher as you point out, our current implementation of sum reduction (and the various ops that depend on it) is not deterministic on either GPU or multi-threaded CPUs. It is primarily a speed/accuracy trade-off and if we could get comparable speed from one of the approaches you mention, we would be happy to switch the implementation. In short, this is working as intended for now, but contributions for a more accurate or even deterministic sum reduction (possibly as a separate op) would certainly be welcomed.", "body": "@lightcatcher as you point out, our current implementation of sum reduction (and the various ops that depend on it) is not deterministic on either GPU or multi-threaded CPUs. It is primarily a speed/accuracy trade-off and if we could get comparable speed from one of the approaches you mention, we would be happy to switch the implementation. In short, this is working as intended for now, but contributions for a more accurate or even deterministic sum reduction (possibly as a separate op) would certainly be welcomed.\n"}