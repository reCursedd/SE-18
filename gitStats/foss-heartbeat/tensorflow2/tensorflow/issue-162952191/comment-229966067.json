{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/229966067", "html_url": "https://github.com/tensorflow/tensorflow/issues/3103#issuecomment-229966067", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3103", "id": 229966067, "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTk2NjA2Nw==", "user": {"login": "eamartin", "id": 287200, "node_id": "MDQ6VXNlcjI4NzIwMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/287200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eamartin", "html_url": "https://github.com/eamartin", "followers_url": "https://api.github.com/users/eamartin/followers", "following_url": "https://api.github.com/users/eamartin/following{/other_user}", "gists_url": "https://api.github.com/users/eamartin/gists{/gist_id}", "starred_url": "https://api.github.com/users/eamartin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eamartin/subscriptions", "organizations_url": "https://api.github.com/users/eamartin/orgs", "repos_url": "https://api.github.com/users/eamartin/repos", "events_url": "https://api.github.com/users/eamartin/events{/privacy}", "received_events_url": "https://api.github.com/users/eamartin/received_events", "type": "User", "site_admin": false}, "created_at": "2016-07-01T14:46:38Z", "updated_at": "2016-07-01T14:46:38Z", "author_association": "NONE", "body_html": "<p>I created a smaller test case.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\nnp.random.seed(<span class=\"pl-c1\">2016</span>)\ndata <span class=\"pl-k\">=</span> np.random.randn(<span class=\"pl-c1\">100000</span>).astype(np.float32)\n\nvec <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, data.shape)\navg <span class=\"pl-k\">=</span> tf.reduce_mean(vec)\n\navgs <span class=\"pl-k\">=</span> []\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    <span class=\"pl-k\">for</span> _ <span class=\"pl-k\">in</span> <span class=\"pl-v\">xrange</span>(<span class=\"pl-c1\">100</span>):\n        avgs.append(sess.run(avg, <span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>{vec: data}))\n\n<span class=\"pl-c1\">print</span> <span class=\"pl-c1\">min</span>(avgs) <span class=\"pl-k\">==</span> <span class=\"pl-c1\">max</span>(avgs)\n<span class=\"pl-c1\">print</span> <span class=\"pl-c1\">max</span>(avgs) <span class=\"pl-k\">-</span> <span class=\"pl-c1\">min</span>(avgs)</pre></div>\n<p>with output</p>\n<pre><code>False\n6.98492e-10\n</code></pre>", "body_text": "I created a smaller test case.\nimport numpy as np\nimport tensorflow as tf\n\nnp.random.seed(2016)\ndata = np.random.randn(100000).astype(np.float32)\n\nvec = tf.placeholder(tf.float32, data.shape)\navg = tf.reduce_mean(vec)\n\navgs = []\nwith tf.Session() as sess:\n    for _ in xrange(100):\n        avgs.append(sess.run(avg, feed_dict={vec: data}))\n\nprint min(avgs) == max(avgs)\nprint max(avgs) - min(avgs)\nwith output\nFalse\n6.98492e-10", "body": "I created a smaller test case.\n\n``` python\nimport numpy as np\nimport tensorflow as tf\n\nnp.random.seed(2016)\ndata = np.random.randn(100000).astype(np.float32)\n\nvec = tf.placeholder(tf.float32, data.shape)\navg = tf.reduce_mean(vec)\n\navgs = []\nwith tf.Session() as sess:\n    for _ in xrange(100):\n        avgs.append(sess.run(avg, feed_dict={vec: data}))\n\nprint min(avgs) == max(avgs)\nprint max(avgs) - min(avgs)\n```\n\nwith output\n\n```\nFalse\n6.98492e-10\n```\n"}