{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/151409126", "pull_request_review_id": 77110153, "id": 151409126, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTQwOTEyNg==", "diff_hunk": "@@ -57,5 +60,17 @@ def testGraphUtil(self):\n     self.assertEqual(fused_graph_def.node[3].name, 'E')\n \n \n+class GetPlaceholdersTest(test.TestCase):\n+\n+  def test_get_placeholders(self):\n+    with ops.Graph().as_default() as g:\n+      ids = []\n+      for _ in range(5):\n+        x = array_ops.placeholder(dtypes.float32)\n+        ids.append(x._id)  # pylint: disable=protected-access\n+      result = graph_util.get_placeholders(g)\n+      result_ids = [i._id for i in result]  # pylint: disable=protected-access\n+      self.assertEqual(sorted(result_ids), sorted(ids))", "path": "tensorflow/contrib/framework/python/framework/graph_util_test.py", "position": null, "original_position": 24, "commit_id": "ff6c4853dd47539c7c7faf4b004065c17f151ec3", "original_commit_id": "08c9b69a1c7175cbe4d1e77b3bca50fb34c0dbb8", "user": {"login": "facaiy", "id": 1112263, "node_id": "MDQ6VXNlcjExMTIyNjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1112263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facaiy", "html_url": "https://github.com/facaiy", "followers_url": "https://api.github.com/users/facaiy/followers", "following_url": "https://api.github.com/users/facaiy/following{/other_user}", "gists_url": "https://api.github.com/users/facaiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/facaiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facaiy/subscriptions", "organizations_url": "https://api.github.com/users/facaiy/orgs", "repos_url": "https://api.github.com/users/facaiy/repos", "events_url": "https://api.github.com/users/facaiy/events{/privacy}", "received_events_url": "https://api.github.com/users/facaiy/received_events", "type": "User", "site_admin": false}, "body": "I am not sure whether is enough to check ID only, how about this?\r\n\r\n```python\r\nplaceholders = [array_ops.placeholder(dtypes.float32) for _ in range(5)]\r\nresults = graph_util.get_placeholders(g)\r\nself.assertEqual(sorted(placeholders, key=lambda x: x._id),\r\n                 sorted(results, key=lambda x: x._id))\r\n```", "created_at": "2017-11-16T13:13:33Z", "updated_at": "2017-11-16T16:20:43Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/14541#discussion_r151409126", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14541", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/151409126"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/14541#discussion_r151409126"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14541"}}, "body_html": "<p>I am not sure whether is enough to check ID only, how about this?</p>\n<div class=\"highlight highlight-source-python\"><pre>placeholders <span class=\"pl-k\">=</span> [array_ops.placeholder(dtypes.float32) <span class=\"pl-k\">for</span> _ <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">5</span>)]\nresults <span class=\"pl-k\">=</span> graph_util.get_placeholders(g)\n<span class=\"pl-c1\">self</span>.assertEqual(<span class=\"pl-c1\">sorted</span>(placeholders, <span class=\"pl-v\">key</span><span class=\"pl-k\">=</span><span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">x</span>: x._id),\n                 <span class=\"pl-c1\">sorted</span>(results, <span class=\"pl-v\">key</span><span class=\"pl-k\">=</span><span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">x</span>: x._id))</pre></div>", "body_text": "I am not sure whether is enough to check ID only, how about this?\nplaceholders = [array_ops.placeholder(dtypes.float32) for _ in range(5)]\nresults = graph_util.get_placeholders(g)\nself.assertEqual(sorted(placeholders, key=lambda x: x._id),\n                 sorted(results, key=lambda x: x._id))"}