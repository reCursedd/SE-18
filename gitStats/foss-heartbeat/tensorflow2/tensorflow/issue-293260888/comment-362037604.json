{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/362037604", "html_url": "https://github.com/tensorflow/tensorflow/issues/16628#issuecomment-362037604", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16628", "id": 362037604, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjAzNzYwNA==", "user": {"login": "Spenhouet", "id": 7819068, "node_id": "MDQ6VXNlcjc4MTkwNjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/7819068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Spenhouet", "html_url": "https://github.com/Spenhouet", "followers_url": "https://api.github.com/users/Spenhouet/followers", "following_url": "https://api.github.com/users/Spenhouet/following{/other_user}", "gists_url": "https://api.github.com/users/Spenhouet/gists{/gist_id}", "starred_url": "https://api.github.com/users/Spenhouet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Spenhouet/subscriptions", "organizations_url": "https://api.github.com/users/Spenhouet/orgs", "repos_url": "https://api.github.com/users/Spenhouet/repos", "events_url": "https://api.github.com/users/Spenhouet/events{/privacy}", "received_events_url": "https://api.github.com/users/Spenhouet/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-31T19:08:59Z", "updated_at": "2018-01-31T19:20:43Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1381301\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ppwwyyxx\">@ppwwyyxx</a> Oh, okay, I think I got how to do this.</p>\n<pre><code> update_lr_placeholder = tf.placeholder(learning_rate.dtype, shape=learning_rate.get_shape())\n update_lr_op = learning_rate.assign(update_lr_placeholder)\n\n sess = tf.Session()\n    init = tf.global_variables_initializer()\n    sess.run(init)\n\n    for i in range(40001):\n        sess.run(update_lr_op, {update_lr_placeholder: 0.1})\n\n        _, loss = sess.run(fetches=[train_step, xor_cost], feed_dict={x_: XOR_X, y_: XOR_Y})\n</code></pre>\n<p>Thank you for pointing this out.</p>", "body_text": "@ppwwyyxx Oh, okay, I think I got how to do this.\n update_lr_placeholder = tf.placeholder(learning_rate.dtype, shape=learning_rate.get_shape())\n update_lr_op = learning_rate.assign(update_lr_placeholder)\n\n sess = tf.Session()\n    init = tf.global_variables_initializer()\n    sess.run(init)\n\n    for i in range(40001):\n        sess.run(update_lr_op, {update_lr_placeholder: 0.1})\n\n        _, loss = sess.run(fetches=[train_step, xor_cost], feed_dict={x_: XOR_X, y_: XOR_Y})\n\nThank you for pointing this out.", "body": "@ppwwyyxx Oh, okay, I think I got how to do this.\r\n\r\n```\r\n update_lr_placeholder = tf.placeholder(learning_rate.dtype, shape=learning_rate.get_shape())\r\n update_lr_op = learning_rate.assign(update_lr_placeholder)\r\n\r\n sess = tf.Session()\r\n    init = tf.global_variables_initializer()\r\n    sess.run(init)\r\n\r\n    for i in range(40001):\r\n        sess.run(update_lr_op, {update_lr_placeholder: 0.1})\r\n\r\n        _, loss = sess.run(fetches=[train_step, xor_cost], feed_dict={x_: XOR_X, y_: XOR_Y})\r\n```\r\n\r\nThank you for pointing this out."}