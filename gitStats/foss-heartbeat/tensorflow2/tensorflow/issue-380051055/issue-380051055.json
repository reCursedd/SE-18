{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23699", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23699/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23699/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23699/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/23699", "id": 380051055, "node_id": "MDExOlB1bGxSZXF1ZXN0MjMwMzQxODUz", "number": 23699, "title": "[Bug fix]fix bug of reusing MirroredVariables failed in MirroredStrategy", "user": {"login": "wangsiyu", "id": 5387343, "node_id": "MDQ6VXNlcjUzODczNDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/5387343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wangsiyu", "html_url": "https://github.com/wangsiyu", "followers_url": "https://api.github.com/users/wangsiyu/followers", "following_url": "https://api.github.com/users/wangsiyu/following{/other_user}", "gists_url": "https://api.github.com/users/wangsiyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/wangsiyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wangsiyu/subscriptions", "organizations_url": "https://api.github.com/users/wangsiyu/orgs", "repos_url": "https://api.github.com/users/wangsiyu/repos", "events_url": "https://api.github.com/users/wangsiyu/events{/privacy}", "received_events_url": "https://api.github.com/users/wangsiyu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390482148, "node_id": "MDU6TGFiZWwzOTA0ODIxNDg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/awaiting%20review", "name": "awaiting review", "color": "fef2c0", "default": false}, {"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ymodak", "id": 42785357, "node_id": "MDQ6VXNlcjQyNzg1MzU3", "avatar_url": "https://avatars1.githubusercontent.com/u/42785357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ymodak", "html_url": "https://github.com/ymodak", "followers_url": "https://api.github.com/users/ymodak/followers", "following_url": "https://api.github.com/users/ymodak/following{/other_user}", "gists_url": "https://api.github.com/users/ymodak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ymodak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ymodak/subscriptions", "organizations_url": "https://api.github.com/users/ymodak/orgs", "repos_url": "https://api.github.com/users/ymodak/repos", "events_url": "https://api.github.com/users/ymodak/events{/privacy}", "received_events_url": "https://api.github.com/users/ymodak/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ymodak", "id": 42785357, "node_id": "MDQ6VXNlcjQyNzg1MzU3", "avatar_url": "https://avatars1.githubusercontent.com/u/42785357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ymodak", "html_url": "https://github.com/ymodak", "followers_url": "https://api.github.com/users/ymodak/followers", "following_url": "https://api.github.com/users/ymodak/following{/other_user}", "gists_url": "https://api.github.com/users/ymodak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ymodak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ymodak/subscriptions", "organizations_url": "https://api.github.com/users/ymodak/orgs", "repos_url": "https://api.github.com/users/ymodak/repos", "events_url": "https://api.github.com/users/ymodak/events{/privacy}", "received_events_url": "https://api.github.com/users/ymodak/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-11-13T04:07:23Z", "updated_at": "2018-11-23T11:48:18Z", "closed_at": "2018-11-23T11:48:18Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/23699", "html_url": "https://github.com/tensorflow/tensorflow/pull/23699", "diff_url": "https://github.com/tensorflow/tensorflow/pull/23699.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/23699.patch"}, "body_html": "<p>The bug will be triggered in the following <code>else</code> branch when using <code>MirroredStrategy</code>. <code>create_zeros_slot</code> will pick up the <code>VarHandleOp</code> in current tower to create auxiliary variables. However, in the case of <code>replica_id &gt; 0</code>, the <code>variable_scope</code> will set <code>reuse=True</code> in <code>MirroredStrategy</code>. It will use the <code>replica_id</code>th of <code>MirroredVaraible</code> to create auxiliary variable and this variable cannot be reused  because of its new name(<code>xxx/replica_1</code>) .</p>\n<pre><code>          if isinstance(var, variables.Variable):\n            avg = slot_creator.create_slot(var,\n                                           var.initialized_value(),\n                                           self.name,\n                                           colocate_with_primary=True)\n            # NOTE(mrry): We only add `tf.Variable` objects to the\n            # `MOVING_AVERAGE_VARIABLES` collection.\n            ops.add_to_collection(ops.GraphKeys.MOVING_AVERAGE_VARIABLES, var)\n          else:\n            avg = slot_creator.create_zeros_slot(\n                var,\n                self.name,\n                colocate_with_primary=(var.op.type in [\"Variable\",\n                                                       \"VariableV2\",\n                                                       \"VarHandleOp\"]))\n            if self._zero_debias:\n              zero_debias_true.add(avg)\n</code></pre>\n<p>Currently, master branch even cannot apply moving average to <code>MirroredVariable</code>. The following solves this problem <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"375832224\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/23396\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/23396/hovercard\" href=\"https://github.com/tensorflow/tensorflow/pull/23396\">#23396</a>  and my bug fix is building on that.<br>\nPlease check it. Thanks very much. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1647833\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yuefengz\">@yuefengz</a></p>", "body_text": "The bug will be triggered in the following else branch when using MirroredStrategy. create_zeros_slot will pick up the VarHandleOp in current tower to create auxiliary variables. However, in the case of replica_id > 0, the variable_scope will set reuse=True in MirroredStrategy. It will use the replica_idth of MirroredVaraible to create auxiliary variable and this variable cannot be reused  because of its new name(xxx/replica_1) .\n          if isinstance(var, variables.Variable):\n            avg = slot_creator.create_slot(var,\n                                           var.initialized_value(),\n                                           self.name,\n                                           colocate_with_primary=True)\n            # NOTE(mrry): We only add `tf.Variable` objects to the\n            # `MOVING_AVERAGE_VARIABLES` collection.\n            ops.add_to_collection(ops.GraphKeys.MOVING_AVERAGE_VARIABLES, var)\n          else:\n            avg = slot_creator.create_zeros_slot(\n                var,\n                self.name,\n                colocate_with_primary=(var.op.type in [\"Variable\",\n                                                       \"VariableV2\",\n                                                       \"VarHandleOp\"]))\n            if self._zero_debias:\n              zero_debias_true.add(avg)\n\nCurrently, master branch even cannot apply moving average to MirroredVariable. The following solves this problem #23396  and my bug fix is building on that.\nPlease check it. Thanks very much. @yuefengz", "body": "The bug will be triggered in the following `else` branch when using `MirroredStrategy`. `create_zeros_slot` will pick up the `VarHandleOp` in current tower to create auxiliary variables. However, in the case of `replica_id > 0`, the `variable_scope` will set `reuse=True` in `MirroredStrategy`. It will use the `replica_id`th of `MirroredVaraible` to create auxiliary variable and this variable cannot be reused  because of its new name(`xxx/replica_1`) .\r\n```\r\n          if isinstance(var, variables.Variable):\r\n            avg = slot_creator.create_slot(var,\r\n                                           var.initialized_value(),\r\n                                           self.name,\r\n                                           colocate_with_primary=True)\r\n            # NOTE(mrry): We only add `tf.Variable` objects to the\r\n            # `MOVING_AVERAGE_VARIABLES` collection.\r\n            ops.add_to_collection(ops.GraphKeys.MOVING_AVERAGE_VARIABLES, var)\r\n          else:\r\n            avg = slot_creator.create_zeros_slot(\r\n                var,\r\n                self.name,\r\n                colocate_with_primary=(var.op.type in [\"Variable\",\r\n                                                       \"VariableV2\",\r\n                                                       \"VarHandleOp\"]))\r\n            if self._zero_debias:\r\n              zero_debias_true.add(avg)\r\n```\r\n\r\nCurrently, master branch even cannot apply moving average to `MirroredVariable`. The following solves this problem https://github.com/tensorflow/tensorflow/pull/23396  and my bug fix is building on that. \r\nPlease check it. Thanks very much. @yuefengz "}