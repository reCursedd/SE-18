{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/427539830", "html_url": "https://github.com/tensorflow/tensorflow/issues/22757#issuecomment-427539830", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22757", "id": 427539830, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzUzOTgzMA==", "user": {"login": "monkeyCv", "id": 38521537, "node_id": "MDQ6VXNlcjM4NTIxNTM3", "avatar_url": "https://avatars0.githubusercontent.com/u/38521537?v=4", "gravatar_id": "", "url": "https://api.github.com/users/monkeyCv", "html_url": "https://github.com/monkeyCv", "followers_url": "https://api.github.com/users/monkeyCv/followers", "following_url": "https://api.github.com/users/monkeyCv/following{/other_user}", "gists_url": "https://api.github.com/users/monkeyCv/gists{/gist_id}", "starred_url": "https://api.github.com/users/monkeyCv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/monkeyCv/subscriptions", "organizations_url": "https://api.github.com/users/monkeyCv/orgs", "repos_url": "https://api.github.com/users/monkeyCv/repos", "events_url": "https://api.github.com/users/monkeyCv/events{/privacy}", "received_events_url": "https://api.github.com/users/monkeyCv/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-06T02:41:35Z", "updated_at": "2018-10-06T02:41:35Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=42785337\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/wt-huang\">@wt-huang</a> Thanks very much. I will try to use <code>tf.keras.model.predict_generation()</code>. I am not sure whether the API can recieve the argument <code>tf.data</code>, and the document doesnot mention it.<br>\nHere I think <code>tf.keras.model.predict()</code> calls <code>_standardize_user_data</code>, becuase I feed the label, it works well. If I donnot feed the label, it shows an erreor like the figure shows.<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/38521537/46566548-53c9c200-c953-11e8-8665-0356ce8dffba.png\"><img src=\"https://user-images.githubusercontent.com/38521537/46566548-53c9c200-c953-11e8-8665-0356ce8dffba.png\" alt=\"image\" style=\"max-width:100%;\"></a></p>\n<p>my test code:</p>\n<pre><code>def test(test_tfrecord,norm_mean,norm_std):\n    test_dataset=tf.data.TFRecordDataset(test_tfrecord,num_parallel_reads=4)\n    def test_parse_function(example_proto):\n        features={'image_raw':tf.FixedLenFeature((),tf.string,default_value='')}\n        parsed_features=tf.parse_single_example(example_proto,features)\n        image=tf.decode_raw(parsed_features['image_raw'],tf.uint8)\n        image=tf.reshape(image,shape=(height,width,channels))\n        image=tf.cast(image,tf.float32)\n        image=image/255.0\n        image=image-norm_mean\n        image=image/norm_std\n        return image\n    test_dataset=test_dataset.map(test_parse_function)\n    test_dataset=test_dataset.batch(1)\n    \n    input_layer=keras.Input(shape=(height,width,channels))\n    base_net=myResnet50.ResNet50(input_tensor=input_layer,\n                                                  include_top=False,weights='imagenet')\n    x=base_net.output\n    x=keras.layers.Flatten()(x)\n    predictions=keras.layers.Dense(classes,activation='softmax')(x)\n    net=keras.models.Model(inputs=input_layer,outputs=predictions)\n    net.compile(optimizer=keras.optimizers.Adam(),loss='categorical_crossentropy',metrics=['accuracy'])\n    ckpt = tf.train.get_checkpoint_state('../model')\n    if not ckpt or   not ckpt.model_checkpoint_path:\n        print(\"No model! Start to train the model!\")\n    else:\n        net.load_weights('../model/mine')\n        print(\"Model is loaded!\")\n    rst=net.predict(test_dataset,steps=440)\n    return rst\n\n</code></pre>\n<p>my platform: win10, anaconda 1.8.7, spyder 3.2.3, tensorflow 1.11.0 gpu, cuda 9 and cudnn 7.3.</p>", "body_text": "@wt-huang Thanks very much. I will try to use tf.keras.model.predict_generation(). I am not sure whether the API can recieve the argument tf.data, and the document doesnot mention it.\nHere I think tf.keras.model.predict() calls _standardize_user_data, becuase I feed the label, it works well. If I donnot feed the label, it shows an erreor like the figure shows.\n\nmy test code:\ndef test(test_tfrecord,norm_mean,norm_std):\n    test_dataset=tf.data.TFRecordDataset(test_tfrecord,num_parallel_reads=4)\n    def test_parse_function(example_proto):\n        features={'image_raw':tf.FixedLenFeature((),tf.string,default_value='')}\n        parsed_features=tf.parse_single_example(example_proto,features)\n        image=tf.decode_raw(parsed_features['image_raw'],tf.uint8)\n        image=tf.reshape(image,shape=(height,width,channels))\n        image=tf.cast(image,tf.float32)\n        image=image/255.0\n        image=image-norm_mean\n        image=image/norm_std\n        return image\n    test_dataset=test_dataset.map(test_parse_function)\n    test_dataset=test_dataset.batch(1)\n    \n    input_layer=keras.Input(shape=(height,width,channels))\n    base_net=myResnet50.ResNet50(input_tensor=input_layer,\n                                                  include_top=False,weights='imagenet')\n    x=base_net.output\n    x=keras.layers.Flatten()(x)\n    predictions=keras.layers.Dense(classes,activation='softmax')(x)\n    net=keras.models.Model(inputs=input_layer,outputs=predictions)\n    net.compile(optimizer=keras.optimizers.Adam(),loss='categorical_crossentropy',metrics=['accuracy'])\n    ckpt = tf.train.get_checkpoint_state('../model')\n    if not ckpt or   not ckpt.model_checkpoint_path:\n        print(\"No model! Start to train the model!\")\n    else:\n        net.load_weights('../model/mine')\n        print(\"Model is loaded!\")\n    rst=net.predict(test_dataset,steps=440)\n    return rst\n\n\nmy platform: win10, anaconda 1.8.7, spyder 3.2.3, tensorflow 1.11.0 gpu, cuda 9 and cudnn 7.3.", "body": "@wt-huang Thanks very much. I will try to use `tf.keras.model.predict_generation()`. I am not sure whether the API can recieve the argument `tf.data`, and the document doesnot mention it.\r\nHere I think `tf.keras.model.predict()` calls `_standardize_user_data`, becuase I feed the label, it works well. If I donnot feed the label, it shows an erreor like the figure shows.\r\n![image](https://user-images.githubusercontent.com/38521537/46566548-53c9c200-c953-11e8-8665-0356ce8dffba.png)\r\n\r\nmy test code:   \r\n```\r\ndef test(test_tfrecord,norm_mean,norm_std):\r\n    test_dataset=tf.data.TFRecordDataset(test_tfrecord,num_parallel_reads=4)\r\n    def test_parse_function(example_proto):\r\n        features={'image_raw':tf.FixedLenFeature((),tf.string,default_value='')}\r\n        parsed_features=tf.parse_single_example(example_proto,features)\r\n        image=tf.decode_raw(parsed_features['image_raw'],tf.uint8)\r\n        image=tf.reshape(image,shape=(height,width,channels))\r\n        image=tf.cast(image,tf.float32)\r\n        image=image/255.0\r\n        image=image-norm_mean\r\n        image=image/norm_std\r\n        return image\r\n    test_dataset=test_dataset.map(test_parse_function)\r\n    test_dataset=test_dataset.batch(1)\r\n    \r\n    input_layer=keras.Input(shape=(height,width,channels))\r\n    base_net=myResnet50.ResNet50(input_tensor=input_layer,\r\n                                                  include_top=False,weights='imagenet')\r\n    x=base_net.output\r\n    x=keras.layers.Flatten()(x)\r\n    predictions=keras.layers.Dense(classes,activation='softmax')(x)\r\n    net=keras.models.Model(inputs=input_layer,outputs=predictions)\r\n    net.compile(optimizer=keras.optimizers.Adam(),loss='categorical_crossentropy',metrics=['accuracy'])\r\n    ckpt = tf.train.get_checkpoint_state('../model')\r\n    if not ckpt or   not ckpt.model_checkpoint_path:\r\n        print(\"No model! Start to train the model!\")\r\n    else:\r\n        net.load_weights('../model/mine')\r\n        print(\"Model is loaded!\")\r\n    rst=net.predict(test_dataset,steps=440)\r\n    return rst\r\n\r\n```\r\nmy platform: win10, anaconda 1.8.7, spyder 3.2.3, tensorflow 1.11.0 gpu, cuda 9 and cudnn 7.3."}