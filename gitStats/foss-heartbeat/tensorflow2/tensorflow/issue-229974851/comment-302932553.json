{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/302932553", "html_url": "https://github.com/tensorflow/tensorflow/pull/10032#issuecomment-302932553", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10032", "id": 302932553, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjkzMjU1Mw==", "user": {"login": "zasdfgbnm", "id": 1032377, "node_id": "MDQ6VXNlcjEwMzIzNzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1032377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zasdfgbnm", "html_url": "https://github.com/zasdfgbnm", "followers_url": "https://api.github.com/users/zasdfgbnm/followers", "following_url": "https://api.github.com/users/zasdfgbnm/following{/other_user}", "gists_url": "https://api.github.com/users/zasdfgbnm/gists{/gist_id}", "starred_url": "https://api.github.com/users/zasdfgbnm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zasdfgbnm/subscriptions", "organizations_url": "https://api.github.com/users/zasdfgbnm/orgs", "repos_url": "https://api.github.com/users/zasdfgbnm/repos", "events_url": "https://api.github.com/users/zasdfgbnm/events{/privacy}", "received_events_url": "https://api.github.com/users/zasdfgbnm/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-21T12:04:38Z", "updated_at": "2017-05-21T12:04:38Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I make some changes because I think it would also be necessary to check the physical limitation of each dimension:</p>\n<div class=\"highlight highlight-source-c++\"><pre><span class=\"pl-k\">int</span> dev;\n<span class=\"pl-en\">cudaGetDevice</span>(&amp;dev);\ncudaDeviceProp deviceProp;\n<span class=\"pl-en\">cudaGetDeviceProperties</span>(&amp;deviceProp, dev);\n<span class=\"pl-k\">int</span> xthreadlimit = deviceProp.maxThreadsDim[<span class=\"pl-c1\">0</span>];\n<span class=\"pl-k\">int</span> ythreadlimit = deviceProp.maxThreadsDim[<span class=\"pl-c1\">1</span>];\n<span class=\"pl-k\">int</span> zthreadlimit = deviceProp.maxThreadsDim[<span class=\"pl-c1\">2</span>];\n<span class=\"pl-k\">int</span> xgridlimit = deviceProp.maxGridSize[<span class=\"pl-c1\">0</span>];\n<span class=\"pl-k\">int</span> ygridlimit = deviceProp.maxGridSize[<span class=\"pl-c1\">1</span>];\n<span class=\"pl-k\">int</span> zgridlimit = deviceProp.maxGridSize[<span class=\"pl-c1\">2</span>];</pre></div>", "body_text": "I make some changes because I think it would also be necessary to check the physical limitation of each dimension:\nint dev;\ncudaGetDevice(&dev);\ncudaDeviceProp deviceProp;\ncudaGetDeviceProperties(&deviceProp, dev);\nint xthreadlimit = deviceProp.maxThreadsDim[0];\nint ythreadlimit = deviceProp.maxThreadsDim[1];\nint zthreadlimit = deviceProp.maxThreadsDim[2];\nint xgridlimit = deviceProp.maxGridSize[0];\nint ygridlimit = deviceProp.maxGridSize[1];\nint zgridlimit = deviceProp.maxGridSize[2];", "body": "I make some changes because I think it would also be necessary to check the physical limitation of each dimension:\r\n```c++\r\nint dev;\r\ncudaGetDevice(&dev);\r\ncudaDeviceProp deviceProp;\r\ncudaGetDeviceProperties(&deviceProp, dev);\r\nint xthreadlimit = deviceProp.maxThreadsDim[0];\r\nint ythreadlimit = deviceProp.maxThreadsDim[1];\r\nint zthreadlimit = deviceProp.maxThreadsDim[2];\r\nint xgridlimit = deviceProp.maxGridSize[0];\r\nint ygridlimit = deviceProp.maxGridSize[1];\r\nint zgridlimit = deviceProp.maxGridSize[2];\r\n```"}