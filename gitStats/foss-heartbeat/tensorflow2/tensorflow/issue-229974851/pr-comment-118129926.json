{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/118129926", "pull_request_review_id": 39893945, "id": 118129926, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExODEyOTkyNg==", "diff_hunk": "@@ -23,10 +23,82 @@ limitations under the License.\n #include \"third_party/eigen3/unsupported/Eigen/CXX11/Tensor\"\n #include \"tensorflow/core/platform/types.h\"\n \n+// Usage of GetCudaLaunchConfig, GetCuda2DLaunchConfig, and GetCuda3DLaunchConfig:\n+//\n+// There are two versions of GetCudaLaunchConfig and GetCuda2DLaunchConfig, one", "path": "tensorflow/core/util/cuda_kernel_helper.h", "position": null, "original_position": 6, "commit_id": "7405ef3598bf8a255f1b027448f887d6ff8bafe3", "original_commit_id": "373d4ed36ca0817e047545a4ac276fbddd843ab0", "user": {"login": "zasdfgbnm", "id": 1032377, "node_id": "MDQ6VXNlcjEwMzIzNzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1032377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zasdfgbnm", "html_url": "https://github.com/zasdfgbnm", "followers_url": "https://api.github.com/users/zasdfgbnm/followers", "following_url": "https://api.github.com/users/zasdfgbnm/following{/other_user}", "gists_url": "https://api.github.com/users/zasdfgbnm/gists{/gist_id}", "starred_url": "https://api.github.com/users/zasdfgbnm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zasdfgbnm/subscriptions", "organizations_url": "https://api.github.com/users/zasdfgbnm/orgs", "repos_url": "https://api.github.com/users/zasdfgbnm/repos", "events_url": "https://api.github.com/users/zasdfgbnm/events{/privacy}", "received_events_url": "https://api.github.com/users/zasdfgbnm/received_events", "type": "User", "site_admin": false}, "body": "Yes, I agree, but there is another thing to consider: The 1D maximum occupancy version is introduced in https://github.com/tensorflow/tensorflow/commit/3c02d1100788789b04e04feb93761f0ad898ea77 and given the same symbol `GetCudaLaunchConfig` half a month ago. I'm not sure how to deal with this. Three options are:\r\n\r\n- Keep `GetCudaLaunchConfig` unchanged, and rename the maximize occupancy version of 2D and 3D to `Get2DCudaMaxOccupancyLaunchConfig` and `...3D...`. This might make things even more confusing.\r\n- Rename all these functions, and change the kernel launches affected. This makes things clearer, but might break somebody's code. Are functions in this file considered API that should avoid change?\r\n- Leave these functions as it is (i.e. overload the same symbol)\r\n\r\nWhich one do you prefer?", "created_at": "2017-05-23T23:27:08Z", "updated_at": "2017-06-06T06:12:28Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/10032#discussion_r118129926", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/10032", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/118129926"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/10032#discussion_r118129926"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/10032"}}, "body_html": "<p>Yes, I agree, but there is another thing to consider: The 1D maximum occupancy version is introduced in <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/3c02d1100788789b04e04feb93761f0ad898ea77/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/3c02d1100788789b04e04feb93761f0ad898ea77\"><tt>3c02d11</tt></a> and given the same symbol <code>GetCudaLaunchConfig</code> half a month ago. I'm not sure how to deal with this. Three options are:</p>\n<ul>\n<li>Keep <code>GetCudaLaunchConfig</code> unchanged, and rename the maximize occupancy version of 2D and 3D to <code>Get2DCudaMaxOccupancyLaunchConfig</code> and <code>...3D...</code>. This might make things even more confusing.</li>\n<li>Rename all these functions, and change the kernel launches affected. This makes things clearer, but might break somebody's code. Are functions in this file considered API that should avoid change?</li>\n<li>Leave these functions as it is (i.e. overload the same symbol)</li>\n</ul>\n<p>Which one do you prefer?</p>", "body_text": "Yes, I agree, but there is another thing to consider: The 1D maximum occupancy version is introduced in 3c02d11 and given the same symbol GetCudaLaunchConfig half a month ago. I'm not sure how to deal with this. Three options are:\n\nKeep GetCudaLaunchConfig unchanged, and rename the maximize occupancy version of 2D and 3D to Get2DCudaMaxOccupancyLaunchConfig and ...3D.... This might make things even more confusing.\nRename all these functions, and change the kernel launches affected. This makes things clearer, but might break somebody's code. Are functions in this file considered API that should avoid change?\nLeave these functions as it is (i.e. overload the same symbol)\n\nWhich one do you prefer?", "in_reply_to_id": 118041775}