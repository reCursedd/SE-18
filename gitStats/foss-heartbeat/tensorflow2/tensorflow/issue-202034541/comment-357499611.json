{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/357499611", "html_url": "https://github.com/tensorflow/tensorflow/issues/6971#issuecomment-357499611", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6971", "id": 357499611, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzQ5OTYxMQ==", "user": {"login": "yotamfr", "id": 11585538, "node_id": "MDQ6VXNlcjExNTg1NTM4", "avatar_url": "https://avatars3.githubusercontent.com/u/11585538?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yotamfr", "html_url": "https://github.com/yotamfr", "followers_url": "https://api.github.com/users/yotamfr/followers", "following_url": "https://api.github.com/users/yotamfr/following{/other_user}", "gists_url": "https://api.github.com/users/yotamfr/gists{/gist_id}", "starred_url": "https://api.github.com/users/yotamfr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yotamfr/subscriptions", "organizations_url": "https://api.github.com/users/yotamfr/orgs", "repos_url": "https://api.github.com/users/yotamfr/repos", "events_url": "https://api.github.com/users/yotamfr/events{/privacy}", "received_events_url": "https://api.github.com/users/yotamfr/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-14T09:42:17Z", "updated_at": "2018-01-14T09:42:17Z", "author_association": "NONE", "body_html": "<p>Same Issue:</p>\n<p>STACK TRACE...</p>\n<p>Creating and compiling model...</p>\n<h2>Fitting model...<br>\nTrain on 15 samples, validate on 3 samples<br>\nEpoch 1/20</h2>\n<p>InvalidArgumentError                      Traceback (most recent call last)<br>\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py in _do_call(self, fn, *args)<br>\n1326     try:<br>\n-&gt; 1327       return fn(*args)<br>\n1328     except errors.OpError as e:</p>\n<p>C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py in _run_fn(session, feed_dict, fetch_list, target_list, options, run_metadata)<br>\n1305                                    feed_dict, fetch_list, target_list,<br>\n-&gt; 1306                                    status, run_metadata)<br>\n1307</p>\n<p>C:\\ProgramData\\Anaconda3\\lib\\contextlib.py in <strong>exit</strong>(self, type, value, traceback)<br>\n87             try:<br>\n---&gt; 88                 next(self.gen)<br>\n89             except StopIteration:</p>\n<p>C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\errors_impl.py in raise_exception_on_not_ok_status()<br>\n465           compat.as_text(pywrap_tensorflow.TF_Message(status)),<br>\n--&gt; 466           pywrap_tensorflow.TF_GetCode(status))<br>\n467   finally:</p>\n<p>InvalidArgumentError: Cannot parse tensor from proto: dtype: DT_FLOAT<br>\ntensor_shape {<br>\ndim {<br>\nsize: 200000000<br>\n}<br>\ndim {<br>\nsize: 1024<br>\n}<br>\n}<br>\nfloat_val: 0</p>\n<pre><code> [[Node: training_6/SGD/Const_8 = Const[dtype=DT_FLOAT, value=&lt;Invalid TensorProto: dtype: DT_FLOAT tensor_shape { dim { size: 200000000 } dim { size: 1024 } } float_val: 0&gt;, _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]]\n</code></pre>\n<p>During handling of the above exception, another exception occurred:</p>\n<p>InvalidArgumentError                      Traceback (most recent call last)<br>\n in ()<br>\n20                 validation_data=([X1_valid, X2_valid], y_valid),<br>\n21                 verbose=1,<br>\n---&gt; 22                 callbacks=callbacks)</p>\n<p>C:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\engine\\training.py in fit(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, **kwargs)<br>\n1596                               initial_epoch=initial_epoch,<br>\n1597                               steps_per_epoch=steps_per_epoch,<br>\n-&gt; 1598                               validation_steps=validation_steps)<br>\n1599<br>\n1600     def evaluate(self, x, y,</p>\n<p>C:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\engine\\training.py in _fit_loop(self, f, ins, out_labels, batch_size, epochs, verbose, callbacks, val_f, val_ins, shuffle, callback_metrics, initial_epoch, steps_per_epoch, validation_steps)<br>\n1181                     batch_logs['size'] = len(batch_ids)<br>\n1182                     callbacks.on_batch_begin(batch_index, batch_logs)<br>\n-&gt; 1183                     outs = f(ins_batch)<br>\n1184                     if not isinstance(outs, list):<br>\n1185                         outs = [outs]</p>\n<p>C:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\backend\\tensorflow_backend.py in <strong>call</strong>(self, inputs)<br>\n2268                 value = (indices, sparse_coo.data, sparse_coo.shape)<br>\n2269             feed_dict[tensor] = value<br>\n-&gt; 2270         session = get_session()<br>\n2271         updated = session.run(self.outputs + [self.updates_op],<br>\n2272                               feed_dict=feed_dict,</p>\n<p>C:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\backend\\tensorflow_backend.py in get_session()<br>\n165     if not _MANUAL_VAR_INIT:<br>\n166         with session.graph.as_default():<br>\n--&gt; 167             _initialize_variables()<br>\n168     return session<br>\n169</p>\n<p>C:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\backend\\tensorflow_backend.py in _initialize_variables()<br>\n339     if uninitialized_variables:<br>\n340         sess = get_session()<br>\n--&gt; 341         sess.run(tf.variables_initializer(uninitialized_variables))<br>\n342<br>\n343</p>\n<p>C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py in run(self, fetches, feed_dict, options, run_metadata)<br>\n893     try:<br>\n894       result = self._run(None, fetches, feed_dict, options_ptr,<br>\n--&gt; 895                          run_metadata_ptr)<br>\n896       if run_metadata:<br>\n897         proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)</p>\n<p>C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py in _run(self, handle, fetches, feed_dict, options, run_metadata)<br>\n1122     if final_fetches or final_targets or (handle and feed_dict_tensor):<br>\n1123       results = self._do_run(handle, final_targets, final_fetches,<br>\n-&gt; 1124                              feed_dict_tensor, options, run_metadata)<br>\n1125     else:<br>\n1126       results = []</p>\n<p>C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py in _do_run(self, handle, target_list, fetch_list, feed_dict, options, run_metadata)<br>\n1319     if handle is None:<br>\n1320       return self._do_call(_run_fn, self._session, feeds, fetches, targets,<br>\n-&gt; 1321                            options, run_metadata)<br>\n1322     else:<br>\n1323       return self._do_call(_prun_fn, self._session, handle, feeds, fetches)</p>\n<p>C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py in _do_call(self, fn, *args)<br>\n1338         except KeyError:<br>\n1339           pass<br>\n-&gt; 1340       raise type(e)(node_def, op, message)<br>\n1341<br>\n1342   def _extend_graph(self):</p>\n<p>InvalidArgumentError: Cannot parse tensor from proto: dtype: DT_FLOAT<br>\ntensor_shape {<br>\ndim {<br>\nsize: 200000000<br>\n}<br>\ndim {<br>\nsize: 1024<br>\n}<br>\n}<br>\nfloat_val: 0</p>\n<pre><code> [[Node: training_6/SGD/Const_8 = Const[dtype=DT_FLOAT, value=&lt;Invalid TensorProto: dtype: DT_FLOAT tensor_shape { dim { size: 200000000 } dim { size: 1024 } } float_val: 0&gt;, _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]]\n</code></pre>\n<p>Caused by op 'training_6/SGD/Const_8', defined at:<br>\nFile \"C:\\ProgramData\\Anaconda3\\lib\\runpy.py\", line 193, in _run_module_as_main<br>\n\"<strong>main</strong>\", mod_spec)<br>\nFile \"C:\\ProgramData\\Anaconda3\\lib\\runpy.py\", line 85, in _run_code<br>\nexec(code, run_globals)<br>\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ipykernel_launcher.py\", line 16, in <br>\napp.launch_new_instance()<br>\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\traitlets\\config\\application.py\", line 658, in launch_instance<br>\napp.start()<br>\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ipykernel\\kernelapp.py\", line 477, in start<br>\nioloop.IOLoop.instance().start()<br>\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\zmq\\eventloop\\ioloop.py\", line 177, in start<br>\nsuper(ZMQIOLoop, self).start()<br>\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tornado\\ioloop.py\", line 888, in start<br>\nhandler_func(fd_obj, events)<br>\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tornado\\stack_context.py\", line 277, in null_wrapper<br>\nreturn fn(*args, **kwargs)<br>\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\zmq\\eventloop\\zmqstream.py\", line 440, in _handle_events<br>\nself._handle_recv()<br>\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\zmq\\eventloop\\zmqstream.py\", line 472, in _handle_recv<br>\nself._run_callback(callback, msg)<br>\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\zmq\\eventloop\\zmqstream.py\", line 414, in _run_callback<br>\ncallback(*args, **kwargs)<br>\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tornado\\stack_context.py\", line 277, in null_wrapper<br>\nreturn fn(*args, **kwargs)<br>\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ipykernel\\kernelbase.py\", line 283, in dispatcher<br>\nreturn self.dispatch_shell(stream, msg)<br>\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ipykernel\\kernelbase.py\", line 235, in dispatch_shell<br>\nhandler(stream, idents, msg)<br>\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ipykernel\\kernelbase.py\", line 399, in execute_request<br>\nuser_expressions, allow_stdin)<br>\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ipykernel\\ipkernel.py\", line 196, in do_execute<br>\nres = shell.run_cell(code, store_history=store_history, silent=silent)<br>\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ipykernel\\zmqshell.py\", line 533, in run_cell<br>\nreturn super(ZMQInteractiveShell, self).run_cell(*args, **kwargs)<br>\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 2698, in run_cell<br>\ninteractivity=interactivity, compiler=compiler, result=result)<br>\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 2802, in run_ast_nodes<br>\nif self.run_code(code, result):<br>\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 2862, in run_code<br>\nexec(code_obj, self.user_global_ns, self.user_ns)<br>\nFile \"\", line 22, in <br>\ncallbacks=callbacks)<br>\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\engine\\training.py\", line 1575, in fit<br>\nself._make_train_function()<br>\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\engine\\training.py\", line 960, in _make_train_function<br>\nloss=self.total_loss)<br>\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\legacy\\interfaces.py\", line 87, in wrapper<br>\nreturn func(*args, **kwargs)<br>\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\optimizers.py\", line 165, in get_updates<br>\nmoments = [K.zeros(shape) for shape in shapes]<br>\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\optimizers.py\", line 165, in <br>\nmoments = [K.zeros(shape) for shape in shapes]<br>\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\backend\\tensorflow_backend.py\", line 625, in zeros<br>\nreturn variable(tf.constant_initializer(0., dtype=tf_dtype)(shape),<br>\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\init_ops.py\", line 203, in <strong>call</strong><br>\nverify_shape=verify_shape)<br>\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\constant_op.py\", line 106, in constant<br>\nattrs={\"value\": tensor_value, \"dtype\": dtype_value}, name=name).outputs[0]<br>\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 2630, in create_op<br>\noriginal_op=self._default_original_op, op_def=op_def)<br>\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1204, in <strong>init</strong><br>\nself._traceback = self._graph._extract_stack()  # pylint: disable=protected-access</p>\n<p>InvalidArgumentError (see above for traceback): Cannot parse tensor from proto: dtype: DT_FLOAT<br>\ntensor_shape {<br>\ndim {<br>\nsize: 200000000<br>\n}<br>\ndim {<br>\nsize: 1024<br>\n}<br>\n}<br>\nfloat_val: 0</p>\n<pre><code> [[Node: training_6/SGD/Const_8 = Const[dtype=DT_FLOAT, value=&lt;Invalid TensorProto: dtype: DT_FLOAT tensor_shape { dim { size: 200000000 } dim { size: 1024 } } float_val: 0&gt;, _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]]\n</code></pre>", "body_text": "Same Issue:\nSTACK TRACE...\nCreating and compiling model...\nFitting model...\nTrain on 15 samples, validate on 3 samples\nEpoch 1/20\nInvalidArgumentError                      Traceback (most recent call last)\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py in _do_call(self, fn, *args)\n1326     try:\n-> 1327       return fn(*args)\n1328     except errors.OpError as e:\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py in _run_fn(session, feed_dict, fetch_list, target_list, options, run_metadata)\n1305                                    feed_dict, fetch_list, target_list,\n-> 1306                                    status, run_metadata)\n1307\nC:\\ProgramData\\Anaconda3\\lib\\contextlib.py in exit(self, type, value, traceback)\n87             try:\n---> 88                 next(self.gen)\n89             except StopIteration:\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\errors_impl.py in raise_exception_on_not_ok_status()\n465           compat.as_text(pywrap_tensorflow.TF_Message(status)),\n--> 466           pywrap_tensorflow.TF_GetCode(status))\n467   finally:\nInvalidArgumentError: Cannot parse tensor from proto: dtype: DT_FLOAT\ntensor_shape {\ndim {\nsize: 200000000\n}\ndim {\nsize: 1024\n}\n}\nfloat_val: 0\n [[Node: training_6/SGD/Const_8 = Const[dtype=DT_FLOAT, value=<Invalid TensorProto: dtype: DT_FLOAT tensor_shape { dim { size: 200000000 } dim { size: 1024 } } float_val: 0>, _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]]\n\nDuring handling of the above exception, another exception occurred:\nInvalidArgumentError                      Traceback (most recent call last)\n in ()\n20                 validation_data=([X1_valid, X2_valid], y_valid),\n21                 verbose=1,\n---> 22                 callbacks=callbacks)\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\engine\\training.py in fit(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, **kwargs)\n1596                               initial_epoch=initial_epoch,\n1597                               steps_per_epoch=steps_per_epoch,\n-> 1598                               validation_steps=validation_steps)\n1599\n1600     def evaluate(self, x, y,\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\engine\\training.py in _fit_loop(self, f, ins, out_labels, batch_size, epochs, verbose, callbacks, val_f, val_ins, shuffle, callback_metrics, initial_epoch, steps_per_epoch, validation_steps)\n1181                     batch_logs['size'] = len(batch_ids)\n1182                     callbacks.on_batch_begin(batch_index, batch_logs)\n-> 1183                     outs = f(ins_batch)\n1184                     if not isinstance(outs, list):\n1185                         outs = [outs]\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\backend\\tensorflow_backend.py in call(self, inputs)\n2268                 value = (indices, sparse_coo.data, sparse_coo.shape)\n2269             feed_dict[tensor] = value\n-> 2270         session = get_session()\n2271         updated = session.run(self.outputs + [self.updates_op],\n2272                               feed_dict=feed_dict,\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\backend\\tensorflow_backend.py in get_session()\n165     if not _MANUAL_VAR_INIT:\n166         with session.graph.as_default():\n--> 167             _initialize_variables()\n168     return session\n169\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\backend\\tensorflow_backend.py in _initialize_variables()\n339     if uninitialized_variables:\n340         sess = get_session()\n--> 341         sess.run(tf.variables_initializer(uninitialized_variables))\n342\n343\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py in run(self, fetches, feed_dict, options, run_metadata)\n893     try:\n894       result = self._run(None, fetches, feed_dict, options_ptr,\n--> 895                          run_metadata_ptr)\n896       if run_metadata:\n897         proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py in _run(self, handle, fetches, feed_dict, options, run_metadata)\n1122     if final_fetches or final_targets or (handle and feed_dict_tensor):\n1123       results = self._do_run(handle, final_targets, final_fetches,\n-> 1124                              feed_dict_tensor, options, run_metadata)\n1125     else:\n1126       results = []\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py in _do_run(self, handle, target_list, fetch_list, feed_dict, options, run_metadata)\n1319     if handle is None:\n1320       return self._do_call(_run_fn, self._session, feeds, fetches, targets,\n-> 1321                            options, run_metadata)\n1322     else:\n1323       return self._do_call(_prun_fn, self._session, handle, feeds, fetches)\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py in _do_call(self, fn, *args)\n1338         except KeyError:\n1339           pass\n-> 1340       raise type(e)(node_def, op, message)\n1341\n1342   def _extend_graph(self):\nInvalidArgumentError: Cannot parse tensor from proto: dtype: DT_FLOAT\ntensor_shape {\ndim {\nsize: 200000000\n}\ndim {\nsize: 1024\n}\n}\nfloat_val: 0\n [[Node: training_6/SGD/Const_8 = Const[dtype=DT_FLOAT, value=<Invalid TensorProto: dtype: DT_FLOAT tensor_shape { dim { size: 200000000 } dim { size: 1024 } } float_val: 0>, _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]]\n\nCaused by op 'training_6/SGD/Const_8', defined at:\nFile \"C:\\ProgramData\\Anaconda3\\lib\\runpy.py\", line 193, in _run_module_as_main\n\"main\", mod_spec)\nFile \"C:\\ProgramData\\Anaconda3\\lib\\runpy.py\", line 85, in _run_code\nexec(code, run_globals)\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ipykernel_launcher.py\", line 16, in \napp.launch_new_instance()\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\traitlets\\config\\application.py\", line 658, in launch_instance\napp.start()\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ipykernel\\kernelapp.py\", line 477, in start\nioloop.IOLoop.instance().start()\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\zmq\\eventloop\\ioloop.py\", line 177, in start\nsuper(ZMQIOLoop, self).start()\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tornado\\ioloop.py\", line 888, in start\nhandler_func(fd_obj, events)\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tornado\\stack_context.py\", line 277, in null_wrapper\nreturn fn(*args, **kwargs)\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\zmq\\eventloop\\zmqstream.py\", line 440, in _handle_events\nself._handle_recv()\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\zmq\\eventloop\\zmqstream.py\", line 472, in _handle_recv\nself._run_callback(callback, msg)\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\zmq\\eventloop\\zmqstream.py\", line 414, in _run_callback\ncallback(*args, **kwargs)\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tornado\\stack_context.py\", line 277, in null_wrapper\nreturn fn(*args, **kwargs)\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ipykernel\\kernelbase.py\", line 283, in dispatcher\nreturn self.dispatch_shell(stream, msg)\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ipykernel\\kernelbase.py\", line 235, in dispatch_shell\nhandler(stream, idents, msg)\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ipykernel\\kernelbase.py\", line 399, in execute_request\nuser_expressions, allow_stdin)\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ipykernel\\ipkernel.py\", line 196, in do_execute\nres = shell.run_cell(code, store_history=store_history, silent=silent)\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ipykernel\\zmqshell.py\", line 533, in run_cell\nreturn super(ZMQInteractiveShell, self).run_cell(*args, **kwargs)\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 2698, in run_cell\ninteractivity=interactivity, compiler=compiler, result=result)\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 2802, in run_ast_nodes\nif self.run_code(code, result):\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 2862, in run_code\nexec(code_obj, self.user_global_ns, self.user_ns)\nFile \"\", line 22, in \ncallbacks=callbacks)\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\engine\\training.py\", line 1575, in fit\nself._make_train_function()\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\engine\\training.py\", line 960, in _make_train_function\nloss=self.total_loss)\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\legacy\\interfaces.py\", line 87, in wrapper\nreturn func(*args, **kwargs)\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\optimizers.py\", line 165, in get_updates\nmoments = [K.zeros(shape) for shape in shapes]\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\optimizers.py\", line 165, in \nmoments = [K.zeros(shape) for shape in shapes]\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\backend\\tensorflow_backend.py\", line 625, in zeros\nreturn variable(tf.constant_initializer(0., dtype=tf_dtype)(shape),\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\init_ops.py\", line 203, in call\nverify_shape=verify_shape)\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\constant_op.py\", line 106, in constant\nattrs={\"value\": tensor_value, \"dtype\": dtype_value}, name=name).outputs[0]\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 2630, in create_op\noriginal_op=self._default_original_op, op_def=op_def)\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1204, in init\nself._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\nInvalidArgumentError (see above for traceback): Cannot parse tensor from proto: dtype: DT_FLOAT\ntensor_shape {\ndim {\nsize: 200000000\n}\ndim {\nsize: 1024\n}\n}\nfloat_val: 0\n [[Node: training_6/SGD/Const_8 = Const[dtype=DT_FLOAT, value=<Invalid TensorProto: dtype: DT_FLOAT tensor_shape { dim { size: 200000000 } dim { size: 1024 } } float_val: 0>, _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]]", "body": "Same Issue:\r\n\r\n\r\nSTACK TRACE...\r\n\r\n\r\n\r\nCreating and compiling model...\r\n\r\nFitting model...\r\nTrain on 15 samples, validate on 3 samples\r\nEpoch 1/20\r\n---------------------------------------------------------------------------\r\nInvalidArgumentError                      Traceback (most recent call last)\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py in _do_call(self, fn, *args)\r\n   1326     try:\r\n-> 1327       return fn(*args)\r\n   1328     except errors.OpError as e:\r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py in _run_fn(session, feed_dict, fetch_list, target_list, options, run_metadata)\r\n   1305                                    feed_dict, fetch_list, target_list,\r\n-> 1306                                    status, run_metadata)\r\n   1307 \r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\contextlib.py in __exit__(self, type, value, traceback)\r\n     87             try:\r\n---> 88                 next(self.gen)\r\n     89             except StopIteration:\r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\errors_impl.py in raise_exception_on_not_ok_status()\r\n    465           compat.as_text(pywrap_tensorflow.TF_Message(status)),\r\n--> 466           pywrap_tensorflow.TF_GetCode(status))\r\n    467   finally:\r\n\r\nInvalidArgumentError: Cannot parse tensor from proto: dtype: DT_FLOAT\r\ntensor_shape {\r\n  dim {\r\n    size: 200000000\r\n  }\r\n  dim {\r\n    size: 1024\r\n  }\r\n}\r\nfloat_val: 0\r\n\r\n\t [[Node: training_6/SGD/Const_8 = Const[dtype=DT_FLOAT, value=<Invalid TensorProto: dtype: DT_FLOAT tensor_shape { dim { size: 200000000 } dim { size: 1024 } } float_val: 0>, _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]]\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nInvalidArgumentError                      Traceback (most recent call last)\r\n<ipython-input-45-fcfc7f69b24a> in <module>()\r\n     20                 validation_data=([X1_valid, X2_valid], y_valid),\r\n     21                 verbose=1,\r\n---> 22                 callbacks=callbacks)\r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\engine\\training.py in fit(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, **kwargs)\r\n   1596                               initial_epoch=initial_epoch,\r\n   1597                               steps_per_epoch=steps_per_epoch,\r\n-> 1598                               validation_steps=validation_steps)\r\n   1599 \r\n   1600     def evaluate(self, x, y,\r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\engine\\training.py in _fit_loop(self, f, ins, out_labels, batch_size, epochs, verbose, callbacks, val_f, val_ins, shuffle, callback_metrics, initial_epoch, steps_per_epoch, validation_steps)\r\n   1181                     batch_logs['size'] = len(batch_ids)\r\n   1182                     callbacks.on_batch_begin(batch_index, batch_logs)\r\n-> 1183                     outs = f(ins_batch)\r\n   1184                     if not isinstance(outs, list):\r\n   1185                         outs = [outs]\r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\backend\\tensorflow_backend.py in __call__(self, inputs)\r\n   2268                 value = (indices, sparse_coo.data, sparse_coo.shape)\r\n   2269             feed_dict[tensor] = value\r\n-> 2270         session = get_session()\r\n   2271         updated = session.run(self.outputs + [self.updates_op],\r\n   2272                               feed_dict=feed_dict,\r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\backend\\tensorflow_backend.py in get_session()\r\n    165     if not _MANUAL_VAR_INIT:\r\n    166         with session.graph.as_default():\r\n--> 167             _initialize_variables()\r\n    168     return session\r\n    169 \r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\backend\\tensorflow_backend.py in _initialize_variables()\r\n    339     if uninitialized_variables:\r\n    340         sess = get_session()\r\n--> 341         sess.run(tf.variables_initializer(uninitialized_variables))\r\n    342 \r\n    343 \r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py in run(self, fetches, feed_dict, options, run_metadata)\r\n    893     try:\r\n    894       result = self._run(None, fetches, feed_dict, options_ptr,\r\n--> 895                          run_metadata_ptr)\r\n    896       if run_metadata:\r\n    897         proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)\r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py in _run(self, handle, fetches, feed_dict, options, run_metadata)\r\n   1122     if final_fetches or final_targets or (handle and feed_dict_tensor):\r\n   1123       results = self._do_run(handle, final_targets, final_fetches,\r\n-> 1124                              feed_dict_tensor, options, run_metadata)\r\n   1125     else:\r\n   1126       results = []\r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py in _do_run(self, handle, target_list, fetch_list, feed_dict, options, run_metadata)\r\n   1319     if handle is None:\r\n   1320       return self._do_call(_run_fn, self._session, feeds, fetches, targets,\r\n-> 1321                            options, run_metadata)\r\n   1322     else:\r\n   1323       return self._do_call(_prun_fn, self._session, handle, feeds, fetches)\r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py in _do_call(self, fn, *args)\r\n   1338         except KeyError:\r\n   1339           pass\r\n-> 1340       raise type(e)(node_def, op, message)\r\n   1341 \r\n   1342   def _extend_graph(self):\r\n\r\nInvalidArgumentError: Cannot parse tensor from proto: dtype: DT_FLOAT\r\ntensor_shape {\r\n  dim {\r\n    size: 200000000\r\n  }\r\n  dim {\r\n    size: 1024\r\n  }\r\n}\r\nfloat_val: 0\r\n\r\n\t [[Node: training_6/SGD/Const_8 = Const[dtype=DT_FLOAT, value=<Invalid TensorProto: dtype: DT_FLOAT tensor_shape { dim { size: 200000000 } dim { size: 1024 } } float_val: 0>, _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]]\r\n\r\nCaused by op 'training_6/SGD/Const_8', defined at:\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\runpy.py\", line 193, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ipykernel_launcher.py\", line 16, in <module>\r\n    app.launch_new_instance()\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\traitlets\\config\\application.py\", line 658, in launch_instance\r\n    app.start()\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ipykernel\\kernelapp.py\", line 477, in start\r\n    ioloop.IOLoop.instance().start()\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\zmq\\eventloop\\ioloop.py\", line 177, in start\r\n    super(ZMQIOLoop, self).start()\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tornado\\ioloop.py\", line 888, in start\r\n    handler_func(fd_obj, events)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tornado\\stack_context.py\", line 277, in null_wrapper\r\n    return fn(*args, **kwargs)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\zmq\\eventloop\\zmqstream.py\", line 440, in _handle_events\r\n    self._handle_recv()\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\zmq\\eventloop\\zmqstream.py\", line 472, in _handle_recv\r\n    self._run_callback(callback, msg)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\zmq\\eventloop\\zmqstream.py\", line 414, in _run_callback\r\n    callback(*args, **kwargs)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tornado\\stack_context.py\", line 277, in null_wrapper\r\n    return fn(*args, **kwargs)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ipykernel\\kernelbase.py\", line 283, in dispatcher\r\n    return self.dispatch_shell(stream, msg)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ipykernel\\kernelbase.py\", line 235, in dispatch_shell\r\n    handler(stream, idents, msg)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ipykernel\\kernelbase.py\", line 399, in execute_request\r\n    user_expressions, allow_stdin)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ipykernel\\ipkernel.py\", line 196, in do_execute\r\n    res = shell.run_cell(code, store_history=store_history, silent=silent)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\ipykernel\\zmqshell.py\", line 533, in run_cell\r\n    return super(ZMQInteractiveShell, self).run_cell(*args, **kwargs)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 2698, in run_cell\r\n    interactivity=interactivity, compiler=compiler, result=result)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 2802, in run_ast_nodes\r\n    if self.run_code(code, result):\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 2862, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-45-fcfc7f69b24a>\", line 22, in <module>\r\n    callbacks=callbacks)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\engine\\training.py\", line 1575, in fit\r\n    self._make_train_function()\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\engine\\training.py\", line 960, in _make_train_function\r\n    loss=self.total_loss)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\legacy\\interfaces.py\", line 87, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\optimizers.py\", line 165, in get_updates\r\n    moments = [K.zeros(shape) for shape in shapes]\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\optimizers.py\", line 165, in <listcomp>\r\n    moments = [K.zeros(shape) for shape in shapes]\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\backend\\tensorflow_backend.py\", line 625, in zeros\r\n    return variable(tf.constant_initializer(0., dtype=tf_dtype)(shape),\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\init_ops.py\", line 203, in __call__\r\n    verify_shape=verify_shape)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\constant_op.py\", line 106, in constant\r\n    attrs={\"value\": tensor_value, \"dtype\": dtype_value}, name=name).outputs[0]\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 2630, in create_op\r\n    original_op=self._default_original_op, op_def=op_def)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1204, in __init__\r\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\r\n\r\nInvalidArgumentError (see above for traceback): Cannot parse tensor from proto: dtype: DT_FLOAT\r\ntensor_shape {\r\n  dim {\r\n    size: 200000000\r\n  }\r\n  dim {\r\n    size: 1024\r\n  }\r\n}\r\nfloat_val: 0\r\n\r\n\t [[Node: training_6/SGD/Const_8 = Const[dtype=DT_FLOAT, value=<Invalid TensorProto: dtype: DT_FLOAT tensor_shape { dim { size: 200000000 } dim { size: 1024 } } float_val: 0>, _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]]\r\n"}