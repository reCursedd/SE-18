{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20967", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20967/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20967/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20967/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/20967", "id": 342703558, "node_id": "MDExOlB1bGxSZXF1ZXN0MjAyNTQwMDkx", "number": 20967, "title": "[XLA] HloEvaluator - use TF_ASSIGN_OR_RETURN for HandleCall, HandleFusion and HandleConditional", "user": {"login": "georgepaw", "id": 6642663, "node_id": "MDQ6VXNlcjY2NDI2NjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6642663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/georgepaw", "html_url": "https://github.com/georgepaw", "followers_url": "https://api.github.com/users/georgepaw/followers", "following_url": "https://api.github.com/users/georgepaw/following{/other_user}", "gists_url": "https://api.github.com/users/georgepaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/georgepaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/georgepaw/subscriptions", "organizations_url": "https://api.github.com/users/georgepaw/orgs", "repos_url": "https://api.github.com/users/georgepaw/repos", "events_url": "https://api.github.com/users/georgepaw/events{/privacy}", "received_events_url": "https://api.github.com/users/georgepaw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 419840263, "node_id": "MDU6TGFiZWw0MTk4NDAyNjM=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/awaiting%20testing%20(then%20merge)", "name": "awaiting testing (then merge)", "color": "c2e0c6", "default": false}, {"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "open", "locked": false, "assignee": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 19, "created_at": "2018-07-19T12:16:36Z", "updated_at": "2018-11-14T19:23:06Z", "closed_at": null, "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/20967", "html_url": "https://github.com/tensorflow/tensorflow/pull/20967", "diff_url": "https://github.com/tensorflow/tensorflow/pull/20967.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/20967.patch"}, "body_html": "<p>Currently HandleCall in the HloEvaluator uses <code>ConsumeValueOrDie</code> to get the<br>\nvalue instead of <code>TF_ASSIGN_OR_RETURN</code>. This means that the compiler will fail<br>\nwhen running the HLO ConstantFolding pass on a graph with a call instruction<br>\nwhich has an unhandled instruction in its subcompuation.</p>\n<p>Example:</p>\n<pre><code>%call {\n  %constant.1 = f32[] constant(0)\n  %constant.2 = f32[] constant(1)\n  %rng.0.3 = f32[] rng(f32[] %constant.1, f32[] %constant.2), distribution=rng_uniform\n}\n\nENTRY %cluster {\n  ROOT %call = f32[] call(), to_apply=%call\n}\n</code></pre>", "body_text": "Currently HandleCall in the HloEvaluator uses ConsumeValueOrDie to get the\nvalue instead of TF_ASSIGN_OR_RETURN. This means that the compiler will fail\nwhen running the HLO ConstantFolding pass on a graph with a call instruction\nwhich has an unhandled instruction in its subcompuation.\nExample:\n%call {\n  %constant.1 = f32[] constant(0)\n  %constant.2 = f32[] constant(1)\n  %rng.0.3 = f32[] rng(f32[] %constant.1, f32[] %constant.2), distribution=rng_uniform\n}\n\nENTRY %cluster {\n  ROOT %call = f32[] call(), to_apply=%call\n}", "body": "Currently HandleCall in the HloEvaluator uses `ConsumeValueOrDie` to get the\r\nvalue instead of `TF_ASSIGN_OR_RETURN`. This means that the compiler will fail\r\nwhen running the HLO ConstantFolding pass on a graph with a call instruction\r\nwhich has an unhandled instruction in its subcompuation.\r\n\r\nExample:\r\n```\r\n%call {\r\n  %constant.1 = f32[] constant(0)\r\n  %constant.2 = f32[] constant(1)\r\n  %rng.0.3 = f32[] rng(f32[] %constant.1, f32[] %constant.2), distribution=rng_uniform\r\n}\r\n\r\nENTRY %cluster {\r\n  ROOT %call = f32[] call(), to_apply=%call\r\n}\r\n```"}