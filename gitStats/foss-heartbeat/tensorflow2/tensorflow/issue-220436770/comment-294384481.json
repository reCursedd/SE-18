{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/294384481", "html_url": "https://github.com/tensorflow/tensorflow/issues/9073#issuecomment-294384481", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9073", "id": 294384481, "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDM4NDQ4MQ==", "user": {"login": "timanglade", "id": 9924, "node_id": "MDQ6VXNlcjk5MjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/9924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timanglade", "html_url": "https://github.com/timanglade", "followers_url": "https://api.github.com/users/timanglade/followers", "following_url": "https://api.github.com/users/timanglade/following{/other_user}", "gists_url": "https://api.github.com/users/timanglade/gists{/gist_id}", "starred_url": "https://api.github.com/users/timanglade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timanglade/subscriptions", "organizations_url": "https://api.github.com/users/timanglade/orgs", "repos_url": "https://api.github.com/users/timanglade/repos", "events_url": "https://api.github.com/users/timanglade/events{/privacy}", "received_events_url": "https://api.github.com/users/timanglade/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-17T00:53:57Z", "updated_at": "2017-04-17T17:01:56Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Alright <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=17578177\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/cwhipkey\">@cwhipkey</a> it worked! The full solution I used is as follows:</p>\n<ol>\n<li>Build the print_selective_registration_header with the right macro for iOS\n<div class=\"highlight highlight-source-shell\"><pre>$ bazel build --copt=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>-DUSE_GEMM_FOR_CONV<span class=\"pl-pds\">\"</span></span> tensorflow/python/tools/print_selective_registration_header</pre></div>\n</li>\n<li>Generate a header in the right path, i.e.\n<div class=\"highlight highlight-source-shell\"><pre>$ bazel-bin/tensorflow/python/tools/print_selective_registration_header \\\n  --graphs=graph.pb <span class=\"pl-k\">&gt;</span> tensorflow/core/framework/ops_to_register.h</pre></div>\n</li>\n<li>Edit <strong>ops_to_register.h</strong>\n<ul>\n<li>Replace all occurrences of <code>strcmp</code> with <code>strcmpc</code></li>\n<li>Add the following function definition at the top of the file\n<div class=\"highlight highlight-source-c++\"><pre><span class=\"pl-k\">constexpr</span> <span class=\"pl-k\">int</span> <span class=\"pl-en\">strcmpc</span>(<span class=\"pl-k\">const</span> <span class=\"pl-k\">char</span>* a, <span class=\"pl-k\">const</span> <span class=\"pl-k\">char</span>* b)\n{\n  <span class=\"pl-k\">return</span> *a == <span class=\"pl-c1\">0</span> &amp;&amp; *b == <span class=\"pl-c1\">0</span> ? <span class=\"pl-c1\">0</span> :\n  *a == <span class=\"pl-s\"><span class=\"pl-pds\">'</span> <span class=\"pl-pds\">'</span></span> ? <span class=\"pl-c1\">strcmpc</span>(a+<span class=\"pl-c1\">1</span>,b) :\n  *b == <span class=\"pl-s\"><span class=\"pl-pds\">'</span> <span class=\"pl-pds\">'</span></span> ? <span class=\"pl-c1\">strcmpc</span>(a,b+<span class=\"pl-c1\">1</span>) :\n  *a == <span class=\"pl-c1\">0</span> ? -<span class=\"pl-c1\">1</span> :\n  *b == <span class=\"pl-c1\">0</span> ? <span class=\"pl-c1\">1</span> :\n  *a &lt; *b ? -<span class=\"pl-c1\">1</span> :\n  *a &gt; *b ? <span class=\"pl-c1\">1</span> :\n  *a == *b ? <span class=\"pl-c1\">strcmpc</span>(a+<span class=\"pl-c1\">1</span>, b+<span class=\"pl-c1\">1</span>) :\n  <span class=\"pl-c1\">false</span>;\n}</pre></div>\n</li>\n</ul>\n</li>\n<li>Build TensorFlow for iOS with the -DSELECTIVE_REGISTRATION flag:\n<div class=\"highlight highlight-source-shell\"><pre>$ tensorflow/contrib/makefile/compile_ios_tensorflow.sh <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>-Os -DSELECTIVE_REGISTRATION<span class=\"pl-pds\">\"</span></span></pre></div>\n</li>\n</ol>\n<p>In my case, the resulting libtensorflow-core.a is 45% smaller, the universal .ipa is 6.1MB lighter, and the unzipped payload is 19.5MB lighter. (Of course, your mileage may vary depending on the graph you are using selective registration on.) Thanks everyone!</p>", "body_text": "Alright @cwhipkey it worked! The full solution I used is as follows:\n\nBuild the print_selective_registration_header with the right macro for iOS\n$ bazel build --copt=\"-DUSE_GEMM_FOR_CONV\" tensorflow/python/tools/print_selective_registration_header\n\nGenerate a header in the right path, i.e.\n$ bazel-bin/tensorflow/python/tools/print_selective_registration_header \\\n  --graphs=graph.pb > tensorflow/core/framework/ops_to_register.h\n\nEdit ops_to_register.h\n\nReplace all occurrences of strcmp with strcmpc\nAdd the following function definition at the top of the file\nconstexpr int strcmpc(const char* a, const char* b)\n{\n  return *a == 0 && *b == 0 ? 0 :\n  *a == ' ' ? strcmpc(a+1,b) :\n  *b == ' ' ? strcmpc(a,b+1) :\n  *a == 0 ? -1 :\n  *b == 0 ? 1 :\n  *a < *b ? -1 :\n  *a > *b ? 1 :\n  *a == *b ? strcmpc(a+1, b+1) :\n  false;\n}\n\n\n\nBuild TensorFlow for iOS with the -DSELECTIVE_REGISTRATION flag:\n$ tensorflow/contrib/makefile/compile_ios_tensorflow.sh \"-Os -DSELECTIVE_REGISTRATION\"\n\n\nIn my case, the resulting libtensorflow-core.a is 45% smaller, the universal .ipa is 6.1MB lighter, and the unzipped payload is 19.5MB lighter. (Of course, your mileage may vary depending on the graph you are using selective registration on.) Thanks everyone!", "body": "Alright @cwhipkey it worked! The full solution I used is as follows:\r\n\r\n1. Build the print_selective_registration_header with the right macro for iOS\r\n    ```bash\r\n    $ bazel build --copt=\"-DUSE_GEMM_FOR_CONV\" tensorflow/python/tools/print_selective_registration_header\r\n    ```\r\n2. Generate a header in the right path, i.e.\r\n    ```bash\r\n    $ bazel-bin/tensorflow/python/tools/print_selective_registration_header \\\r\n      --graphs=graph.pb > tensorflow/core/framework/ops_to_register.h\r\n    ```\r\n3. Edit **ops_to_register.h**\r\n    * Replace all occurrences of `strcmp` with `strcmpc`\r\n    * Add the following function definition at the top of the file\r\n        ```c++\r\n        constexpr int strcmpc(const char* a, const char* b)\r\n        {\r\n          return *a == 0 && *b == 0 ? 0 :\r\n          *a == ' ' ? strcmpc(a+1,b) :\r\n          *b == ' ' ? strcmpc(a,b+1) :\r\n          *a == 0 ? -1 :\r\n          *b == 0 ? 1 :\r\n          *a < *b ? -1 :\r\n          *a > *b ? 1 :\r\n          *a == *b ? strcmpc(a+1, b+1) :\r\n          false;\r\n        }\r\n        ```\r\n4. Build TensorFlow for iOS with the -DSELECTIVE_REGISTRATION flag:\r\n    ```bash\r\n    $ tensorflow/contrib/makefile/compile_ios_tensorflow.sh \"-Os -DSELECTIVE_REGISTRATION\"\r\n    ```\r\n\r\nIn my case, the resulting libtensorflow-core.a is 45% smaller, the universal .ipa is 6.1MB lighter, and the unzipped payload is 19.5MB lighter. (Of course, your mileage may vary depending on the graph you are using selective registration on.) Thanks everyone!\r\n"}