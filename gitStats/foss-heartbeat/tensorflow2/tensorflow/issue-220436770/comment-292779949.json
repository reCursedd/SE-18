{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/292779949", "html_url": "https://github.com/tensorflow/tensorflow/issues/9073#issuecomment-292779949", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9073", "id": 292779949, "node_id": "MDEyOklzc3VlQ29tbWVudDI5Mjc3OTk0OQ==", "user": {"login": "es007", "id": 4059304, "node_id": "MDQ6VXNlcjQwNTkzMDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/4059304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/es007", "html_url": "https://github.com/es007", "followers_url": "https://api.github.com/users/es007/followers", "following_url": "https://api.github.com/users/es007/following{/other_user}", "gists_url": "https://api.github.com/users/es007/gists{/gist_id}", "starred_url": "https://api.github.com/users/es007/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/es007/subscriptions", "organizations_url": "https://api.github.com/users/es007/orgs", "repos_url": "https://api.github.com/users/es007/repos", "events_url": "https://api.github.com/users/es007/events{/privacy}", "received_events_url": "https://api.github.com/users/es007/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-09T11:26:00Z", "updated_at": "2017-04-09T11:26:00Z", "author_association": "NONE", "body_html": "<p>A quick workaround: Paste the following functions to the beginning of the ops_to_register.h header:<br>\n`</p>\n<p>constexpr int strcmpc(const char* a, const char* b)<br>\n{</p>\n<pre><code>return *a == 0 &amp;&amp; *b == 0 ? 0 :\n  *a == 0 ? -1 :\n  *b == 0 ? 1 :\n  *a &lt; *b ? -1 :\n  *a &gt; *b ? 1 :\n  *a == *b ? strcmpc(a+1, b+1) :\n  false;\n</code></pre>\n<p>}</p>\n<p>template <br>\nconstexpr const char * strstrc( const char *str, const char (&amp;substr)[N2])<br>\n{<br>\nreturn ( 0 == str )? NULL : ( true == strcmpc( str, substr ) )? str : strstrc( str + 1, substr );<br>\n}<br>\n`</p>\n<p>and replace all the strcmp calls to strcmpc<br>\nand the strstr call to strstrc.</p>\n<p>Please fix this bug in the next version.</p>\n<p>Thanks</p>", "body_text": "A quick workaround: Paste the following functions to the beginning of the ops_to_register.h header:\n`\nconstexpr int strcmpc(const char* a, const char* b)\n{\nreturn *a == 0 && *b == 0 ? 0 :\n  *a == 0 ? -1 :\n  *b == 0 ? 1 :\n  *a < *b ? -1 :\n  *a > *b ? 1 :\n  *a == *b ? strcmpc(a+1, b+1) :\n  false;\n\n}\ntemplate \nconstexpr const char * strstrc( const char *str, const char (&substr)[N2])\n{\nreturn ( 0 == str )? NULL : ( true == strcmpc( str, substr ) )? str : strstrc( str + 1, substr );\n}\n`\nand replace all the strcmp calls to strcmpc\nand the strstr call to strstrc.\nPlease fix this bug in the next version.\nThanks", "body": "A quick workaround: Paste the following functions to the beginning of the ops_to_register.h header:\r\n`\r\n\r\nconstexpr int strcmpc(const char* a, const char* b)\r\n  {\r\n\r\n    return *a == 0 && *b == 0 ? 0 :\r\n      *a == 0 ? -1 :\r\n      *b == 0 ? 1 :\r\n      *a < *b ? -1 :\r\n      *a > *b ? 1 :\r\n      *a == *b ? strcmpc(a+1, b+1) :\r\n      false;\r\n}\r\n\r\ntemplate <unsigned N2>\r\nconstexpr const char * strstrc( const char *str, const char (&substr)[N2])\r\n{\r\nreturn ( 0 == str )? NULL : ( true == strcmpc( str, substr ) )? str : strstrc( str + 1, substr );\r\n}\r\n`\r\n\r\nand replace all the strcmp calls to strcmpc\r\nand the strstr call to strstrc.\r\n\r\nPlease fix this bug in the next version.\r\n\r\nThanks"}