{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/390834161", "html_url": "https://github.com/tensorflow/tensorflow/issues/18880#issuecomment-390834161", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18880", "id": 390834161, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDgzNDE2MQ==", "user": {"login": "ajbouh", "id": 7325, "node_id": "MDQ6VXNlcjczMjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/7325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajbouh", "html_url": "https://github.com/ajbouh", "followers_url": "https://api.github.com/users/ajbouh/followers", "following_url": "https://api.github.com/users/ajbouh/following{/other_user}", "gists_url": "https://api.github.com/users/ajbouh/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajbouh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajbouh/subscriptions", "organizations_url": "https://api.github.com/users/ajbouh/orgs", "repos_url": "https://api.github.com/users/ajbouh/repos", "events_url": "https://api.github.com/users/ajbouh/events{/privacy}", "received_events_url": "https://api.github.com/users/ajbouh/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-22T01:29:34Z", "updated_at": "2018-05-22T01:29:34Z", "author_association": "NONE", "body_html": "<div class=\"email-fragment\">We're in luck there as operations are already marked as being\nstateless/stateful for the graph optimizers to maintain correctness as they\nsimplify the graph.\n\nMy suggestion would make it possible to write custom (in graph) logic to\nhandle the stateful case as well.</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On Mon, May 21, 2018, 17:52 make1980 ***@***.***&gt; wrote:\n I don't think I fully understand your idea here - a simple solution I can\n imagine would be to let the op declare whether it's stateful or not and\n only allow a failed-over worker which has only executed stateless op to\n rejoin the session. And restart the session if it's not the case.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"317821563\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/18880\" href=\"https://github.com/tensorflow/tensorflow/issues/18880#issuecomment-390828234\">#18880 (comment)</a>&gt;,\n or mute the thread\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/AAAcnajRU1Yaf7AO9sBbeHxTuwKCqULCks5t02FhgaJpZM4TkRsG\">https://github.com/notifications/unsubscribe-auth/AAAcnajRU1Yaf7AO9sBbeHxTuwKCqULCks5t02FhgaJpZM4TkRsG</a>&gt;\n .\n</div>\n<div class=\"email-fragment\"></div>\n</div>", "body_text": "We're in luck there as operations are already marked as being\nstateless/stateful for the graph optimizers to maintain correctness as they\nsimplify the graph.\n\nMy suggestion would make it possible to write custom (in graph) logic to\nhandle the stateful case as well.\n\u2026\nOn Mon, May 21, 2018, 17:52 make1980 ***@***.***> wrote:\n I don't think I fully understand your idea here - a simple solution I can\n imagine would be to let the op declare whether it's stateful or not and\n only allow a failed-over worker which has only executed stateless op to\n rejoin the session. And restart the session if it's not the case.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#18880 (comment)>,\n or mute the thread\n <https://github.com/notifications/unsubscribe-auth/AAAcnajRU1Yaf7AO9sBbeHxTuwKCqULCks5t02FhgaJpZM4TkRsG>\n .", "body": "We're in luck there as operations are already marked as being\nstateless/stateful for the graph optimizers to maintain correctness as they\nsimplify the graph.\n\nMy suggestion would make it possible to write custom (in graph) logic to\nhandle the stateful case as well.\n\nOn Mon, May 21, 2018, 17:52 make1980 <notifications@github.com> wrote:\n\n> I don't think I fully understand your idea here - a simple solution I can\n> imagine would be to let the op declare whether it's stateful or not and\n> only allow a failed-over worker which has only executed stateless op to\n> rejoin the session. And restart the session if it's not the case.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/issues/18880#issuecomment-390828234>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAAcnajRU1Yaf7AO9sBbeHxTuwKCqULCks5t02FhgaJpZM4TkRsG>\n> .\n>\n"}