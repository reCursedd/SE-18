{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/298492365", "html_url": "https://github.com/tensorflow/tensorflow/issues/9505#issuecomment-298492365", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9505", "id": 298492365, "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODQ5MjM2NQ==", "user": {"login": "petrosmol", "id": 22332205, "node_id": "MDQ6VXNlcjIyMzMyMjA1", "avatar_url": "https://avatars0.githubusercontent.com/u/22332205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrosmol", "html_url": "https://github.com/petrosmol", "followers_url": "https://api.github.com/users/petrosmol/followers", "following_url": "https://api.github.com/users/petrosmol/following{/other_user}", "gists_url": "https://api.github.com/users/petrosmol/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrosmol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrosmol/subscriptions", "organizations_url": "https://api.github.com/users/petrosmol/orgs", "repos_url": "https://api.github.com/users/petrosmol/repos", "events_url": "https://api.github.com/users/petrosmol/events{/privacy}", "received_events_url": "https://api.github.com/users/petrosmol/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-02T04:03:22Z", "updated_at": "2017-05-02T04:03:22Z", "author_association": "MEMBER", "body_html": "<p>Update: The problem is not with the estimator per se, rather it is with the underlying optimizer (SDCA) which accepts only matrices (2-dimensional tensors) for dense features. I am working on a fix.<br>\nIn the meantime, a simple fix so that you are not blocked is to reshape your real valued columns so that they always have rank one. For instance, in your input_fn, you can replace:</p>\n<p>continuous_cols = {k: tf.constant(df[k].values) for k in CONTINUOUS_COLUMNS} with<br>\ncontinuous_cols = {k: tf.expand_dims(tf.constant(df[k].values), 1) for k in CONTINUOUS_COLUMNS}</p>", "body_text": "Update: The problem is not with the estimator per se, rather it is with the underlying optimizer (SDCA) which accepts only matrices (2-dimensional tensors) for dense features. I am working on a fix.\nIn the meantime, a simple fix so that you are not blocked is to reshape your real valued columns so that they always have rank one. For instance, in your input_fn, you can replace:\ncontinuous_cols = {k: tf.constant(df[k].values) for k in CONTINUOUS_COLUMNS} with\ncontinuous_cols = {k: tf.expand_dims(tf.constant(df[k].values), 1) for k in CONTINUOUS_COLUMNS}", "body": "Update: The problem is not with the estimator per se, rather it is with the underlying optimizer (SDCA) which accepts only matrices (2-dimensional tensors) for dense features. I am working on a fix. \r\nIn the meantime, a simple fix so that you are not blocked is to reshape your real valued columns so that they always have rank one. For instance, in your input_fn, you can replace:\r\n\r\ncontinuous_cols = {k: tf.constant(df[k].values) for k in CONTINUOUS_COLUMNS} with\r\ncontinuous_cols = {k: tf.expand_dims(tf.constant(df[k].values), 1) for k in CONTINUOUS_COLUMNS}"}