{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9505", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9505/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9505/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9505/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9505", "id": 224972944, "node_id": "MDU6SXNzdWUyMjQ5NzI5NDQ=", "number": 9505, "title": "Check failed: NDIMS == dims() (2 vs. 1) when I build a svm model", "user": {"login": "burness", "id": 3112825, "node_id": "MDQ6VXNlcjMxMTI4MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3112825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/burness", "html_url": "https://github.com/burness", "followers_url": "https://api.github.com/users/burness/followers", "following_url": "https://api.github.com/users/burness/following{/other_user}", "gists_url": "https://api.github.com/users/burness/gists{/gist_id}", "starred_url": "https://api.github.com/users/burness/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/burness/subscriptions", "organizations_url": "https://api.github.com/users/burness/orgs", "repos_url": "https://api.github.com/users/burness/repos", "events_url": "https://api.github.com/users/burness/events{/privacy}", "received_events_url": "https://api.github.com/users/burness/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "petrosmol", "id": 22332205, "node_id": "MDQ6VXNlcjIyMzMyMjA1", "avatar_url": "https://avatars0.githubusercontent.com/u/22332205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrosmol", "html_url": "https://github.com/petrosmol", "followers_url": "https://api.github.com/users/petrosmol/followers", "following_url": "https://api.github.com/users/petrosmol/following{/other_user}", "gists_url": "https://api.github.com/users/petrosmol/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrosmol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrosmol/subscriptions", "organizations_url": "https://api.github.com/users/petrosmol/orgs", "repos_url": "https://api.github.com/users/petrosmol/repos", "events_url": "https://api.github.com/users/petrosmol/events{/privacy}", "received_events_url": "https://api.github.com/users/petrosmol/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "petrosmol", "id": 22332205, "node_id": "MDQ6VXNlcjIyMzMyMjA1", "avatar_url": "https://avatars0.githubusercontent.com/u/22332205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrosmol", "html_url": "https://github.com/petrosmol", "followers_url": "https://api.github.com/users/petrosmol/followers", "following_url": "https://api.github.com/users/petrosmol/following{/other_user}", "gists_url": "https://api.github.com/users/petrosmol/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrosmol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrosmol/subscriptions", "organizations_url": "https://api.github.com/users/petrosmol/orgs", "repos_url": "https://api.github.com/users/petrosmol/repos", "events_url": "https://api.github.com/users/petrosmol/events{/privacy}", "received_events_url": "https://api.github.com/users/petrosmol/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 12, "created_at": "2017-04-28T03:50:22Z", "updated_at": "2017-06-16T22:49:17Z", "closed_at": "2017-06-16T22:49:17Z", "author_association": "CONTRIBUTOR", "body_html": "<p>when I build a svm model with tf.learn, it get error like this:<br>\n<code>F tensorflow/core/framework/tensor_shape.cc:36] Check failed: NDIMS == dims() (2 vs. 1)Asking for tensor of 2 dimensions from a tensor of 1 dimensions </code><br>\nI have ask a question in stackoverflow, It could be a issue according the reply:<br>\n<a href=\"http://stackoverflow.com/questions/43638488/check-failed-ndims-dims-2-vs-1-when-i-build-a-svm-model\" rel=\"nofollow\">http://stackoverflow.com/questions/43638488/check-failed-ndims-dims-2-vs-1-when-i-build-a-svm-model</a></p>\n<p>all the reproduce code here:</p>\n<pre><code>import tensorflow as tf\nimport pandas as pd\nfrom tensorflow.contrib.learn.python.learn.estimators import svm\n\n\ndetailed_occupation_recode = tf.contrib.layers.sparse_column_with_hash_bucket(\n    column_name='detailed_occupation_recode', \n    hash_bucket_size = 1000\n)\neducation = tf.contrib.layers.sparse_column_with_hash_bucket(\n    column_name='education',\n    hash_bucket_size=1000\n)\n# Continuous base columns\nage = tf.contrib.layers.real_valued_column('age')\nwage_per_hour = tf.contrib.layers.real_valued_column('wage_per_hour')\n\n\n\ncolumns = ['age', 'detailed_occupation_recode', 'education', 'wage_per_hour','label']\nFEATURE_COLUMNS = [\n    # age, age_buckets, class_of_worker, detailed_industry_recode,\n    age, detailed_occupation_recode, education, wage_per_hour\n\n]\n\n\nLABEL_COLUMN = 'label'\n\nCONTINUOUS_COLUMNS = ['age', 'wage_per_hour']\n\nCATEGORICAL_COLUMNS = ['detailed_occupation_recode','education']\n\n\ndf_train = pd.DataFrame([[12,'12','7th and 8th grade',40,'- 50000'],\n                [40,'45','7th and 8th grade',40, '50000+'],\n                [50,'50','10th grade',40,'50000+'],\n                [60,'30','7th and 8th grade',40,'- 50000']],\n                columns=['age', 'detailed_occupation_recode', 'education', 'wage_per_hour', 'label'])\n\n\ndf_test = pd.DataFrame([[12,'12','7th and 8th grade',40,'- 50000'],\n                [40,'45','7th and 8th grade',40, '50000+'],\n                [50,'50','10th grade',40,'50000+'],\n                [60,'30','7th and 8th grade',40,'- 50000']],\n                columns=['age', 'detailed_occupation_recode', 'education', 'wage_per_hour', 'label'])\ndf_train[LABEL_COLUMN] = (df_train[LABEL_COLUMN].apply(lambda x: '+' in x)).astype(int)\ndf_test[LABEL_COLUMN] = (df_test[LABEL_COLUMN].apply(lambda x: '+' in x)).astype(int)\ndtypess = df_train.dtypes\n\n\ndef input_fn(df):\n    continuous_cols = {k: tf.constant(df[k].values) for k in CONTINUOUS_COLUMNS}\n    categorical_cols = {k: tf.SparseTensor(\n        indices=[[i, 0] for i in range(df[k].size)],\n        values=df[k].values,\n        dense_shape=[df[k].size, 1]) for k in CATEGORICAL_COLUMNS}    \n    feature_cols = dict(continuous_cols.items() + categorical_cols.items())\n    feature_cols['example_id'] = tf.constant([str(i+1) for i in range(df['age'].size)])\n    label = tf.constant(df[LABEL_COLUMN].values)\n    return feature_cols, label\n\ndef train_input_fn():\n    return input_fn(df_train)\n\ndef eval_input_fn():\n    return input_fn(df_test)\n\nmodel_dir = '../svm_model_dir'\n\nmodel = svm.SVM(example_id_column='example_id', feature_columns=FEATURE_COLUMNS, model_dir=model_dir)\nmodel.fit(input_fn=train_input_fn, steps=10)\nresults = model.evaluate(input_fn=eval_input_fn, steps=1)\nfor key in sorted(results):\n    print(\"%s: %s\" % (key, results[key]))\n</code></pre>\n<p>and the all error output text:</p>\n<pre><code>WARNING:tensorflow:The default value of combiner will change from \"sum\" to \n\n\"sqrtn\" after 2016/11/01.\nWARNING:tensorflow:The default value of combiner will change from \"sum\" to \"sqrtn\" after 2016/11/01.\nWARNING:tensorflow:tf.variable_op_scope(values, name, default_name) is deprecated, use tf.variable_scope(name, default_name, values)\nWARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you\n resize your input, as this behavior may change.\nWARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you\n resize your input, as this behavior may change.\nWARNING:tensorflow:From /Users/burness/anaconda/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/head.py:882: hinge_loss (from t\nensorflow.contrib.losses.python.losses.loss_ops) is deprecated and will be removed after 2016-12-30.\nInstructions for updating:\nUse tf.losses.hinge_loss instead.\nWARNING:tensorflow:From /Users/burness/anaconda/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/head.py:1362: scalar_summary (f\nrom tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2016-11-30.\nInstructions for updating:\nPlease switch to tf.summary.scalar. Note that tf.summary.scalar uses the node name instead of the tag. This means that TensorFlow will automatically de-dupl\nicate summary names based on the scope they are created in. Also, passing a tensor or list of tags to a scalar summary op is no longer supported.\nWARNING:tensorflow:From /Users/burness/anaconda/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/head.py:882: hinge_loss (from t\nensorflow.contrib.losses.python.losses.loss_ops) is deprecated and will be removed after 2016-12-30.\nInstructions for updating:\nUse tf.losses.hinge_loss instead.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machi\nne and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machi\nne and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine\nand could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine\n and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine\nand could speed up CPU computations.\nF tensorflow/core/framework/tensor_shape.cc:36] Check failed: NDIMS == dims() (2 vs. 1)Asking for tensor of 2 dimensions from a tensor of 1 dimensions\n[1]    66225 abort      python simple-tf-svm.py\n</code></pre>", "body_text": "when I build a svm model with tf.learn, it get error like this:\nF tensorflow/core/framework/tensor_shape.cc:36] Check failed: NDIMS == dims() (2 vs. 1)Asking for tensor of 2 dimensions from a tensor of 1 dimensions \nI have ask a question in stackoverflow, It could be a issue according the reply:\nhttp://stackoverflow.com/questions/43638488/check-failed-ndims-dims-2-vs-1-when-i-build-a-svm-model\nall the reproduce code here:\nimport tensorflow as tf\nimport pandas as pd\nfrom tensorflow.contrib.learn.python.learn.estimators import svm\n\n\ndetailed_occupation_recode = tf.contrib.layers.sparse_column_with_hash_bucket(\n    column_name='detailed_occupation_recode', \n    hash_bucket_size = 1000\n)\neducation = tf.contrib.layers.sparse_column_with_hash_bucket(\n    column_name='education',\n    hash_bucket_size=1000\n)\n# Continuous base columns\nage = tf.contrib.layers.real_valued_column('age')\nwage_per_hour = tf.contrib.layers.real_valued_column('wage_per_hour')\n\n\n\ncolumns = ['age', 'detailed_occupation_recode', 'education', 'wage_per_hour','label']\nFEATURE_COLUMNS = [\n    # age, age_buckets, class_of_worker, detailed_industry_recode,\n    age, detailed_occupation_recode, education, wage_per_hour\n\n]\n\n\nLABEL_COLUMN = 'label'\n\nCONTINUOUS_COLUMNS = ['age', 'wage_per_hour']\n\nCATEGORICAL_COLUMNS = ['detailed_occupation_recode','education']\n\n\ndf_train = pd.DataFrame([[12,'12','7th and 8th grade',40,'- 50000'],\n                [40,'45','7th and 8th grade',40, '50000+'],\n                [50,'50','10th grade',40,'50000+'],\n                [60,'30','7th and 8th grade',40,'- 50000']],\n                columns=['age', 'detailed_occupation_recode', 'education', 'wage_per_hour', 'label'])\n\n\ndf_test = pd.DataFrame([[12,'12','7th and 8th grade',40,'- 50000'],\n                [40,'45','7th and 8th grade',40, '50000+'],\n                [50,'50','10th grade',40,'50000+'],\n                [60,'30','7th and 8th grade',40,'- 50000']],\n                columns=['age', 'detailed_occupation_recode', 'education', 'wage_per_hour', 'label'])\ndf_train[LABEL_COLUMN] = (df_train[LABEL_COLUMN].apply(lambda x: '+' in x)).astype(int)\ndf_test[LABEL_COLUMN] = (df_test[LABEL_COLUMN].apply(lambda x: '+' in x)).astype(int)\ndtypess = df_train.dtypes\n\n\ndef input_fn(df):\n    continuous_cols = {k: tf.constant(df[k].values) for k in CONTINUOUS_COLUMNS}\n    categorical_cols = {k: tf.SparseTensor(\n        indices=[[i, 0] for i in range(df[k].size)],\n        values=df[k].values,\n        dense_shape=[df[k].size, 1]) for k in CATEGORICAL_COLUMNS}    \n    feature_cols = dict(continuous_cols.items() + categorical_cols.items())\n    feature_cols['example_id'] = tf.constant([str(i+1) for i in range(df['age'].size)])\n    label = tf.constant(df[LABEL_COLUMN].values)\n    return feature_cols, label\n\ndef train_input_fn():\n    return input_fn(df_train)\n\ndef eval_input_fn():\n    return input_fn(df_test)\n\nmodel_dir = '../svm_model_dir'\n\nmodel = svm.SVM(example_id_column='example_id', feature_columns=FEATURE_COLUMNS, model_dir=model_dir)\nmodel.fit(input_fn=train_input_fn, steps=10)\nresults = model.evaluate(input_fn=eval_input_fn, steps=1)\nfor key in sorted(results):\n    print(\"%s: %s\" % (key, results[key]))\n\nand the all error output text:\nWARNING:tensorflow:The default value of combiner will change from \"sum\" to \n\n\"sqrtn\" after 2016/11/01.\nWARNING:tensorflow:The default value of combiner will change from \"sum\" to \"sqrtn\" after 2016/11/01.\nWARNING:tensorflow:tf.variable_op_scope(values, name, default_name) is deprecated, use tf.variable_scope(name, default_name, values)\nWARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you\n resize your input, as this behavior may change.\nWARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you\n resize your input, as this behavior may change.\nWARNING:tensorflow:From /Users/burness/anaconda/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/head.py:882: hinge_loss (from t\nensorflow.contrib.losses.python.losses.loss_ops) is deprecated and will be removed after 2016-12-30.\nInstructions for updating:\nUse tf.losses.hinge_loss instead.\nWARNING:tensorflow:From /Users/burness/anaconda/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/head.py:1362: scalar_summary (f\nrom tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2016-11-30.\nInstructions for updating:\nPlease switch to tf.summary.scalar. Note that tf.summary.scalar uses the node name instead of the tag. This means that TensorFlow will automatically de-dupl\nicate summary names based on the scope they are created in. Also, passing a tensor or list of tags to a scalar summary op is no longer supported.\nWARNING:tensorflow:From /Users/burness/anaconda/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/head.py:882: hinge_loss (from t\nensorflow.contrib.losses.python.losses.loss_ops) is deprecated and will be removed after 2016-12-30.\nInstructions for updating:\nUse tf.losses.hinge_loss instead.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machi\nne and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machi\nne and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine\nand could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine\n and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine\nand could speed up CPU computations.\nF tensorflow/core/framework/tensor_shape.cc:36] Check failed: NDIMS == dims() (2 vs. 1)Asking for tensor of 2 dimensions from a tensor of 1 dimensions\n[1]    66225 abort      python simple-tf-svm.py", "body": "when I build a svm model with tf.learn, it get error like this: \r\n`F tensorflow/core/framework/tensor_shape.cc:36] Check failed: NDIMS == dims() (2 vs. 1)Asking for tensor of 2 dimensions from a tensor of 1 dimensions\r\n`\r\nI have ask a question in stackoverflow, It could be a issue according the reply:\r\nhttp://stackoverflow.com/questions/43638488/check-failed-ndims-dims-2-vs-1-when-i-build-a-svm-model\r\n\r\nall the reproduce code here:\r\n```\r\nimport tensorflow as tf\r\nimport pandas as pd\r\nfrom tensorflow.contrib.learn.python.learn.estimators import svm\r\n\r\n\r\ndetailed_occupation_recode = tf.contrib.layers.sparse_column_with_hash_bucket(\r\n    column_name='detailed_occupation_recode', \r\n    hash_bucket_size = 1000\r\n)\r\neducation = tf.contrib.layers.sparse_column_with_hash_bucket(\r\n    column_name='education',\r\n    hash_bucket_size=1000\r\n)\r\n# Continuous base columns\r\nage = tf.contrib.layers.real_valued_column('age')\r\nwage_per_hour = tf.contrib.layers.real_valued_column('wage_per_hour')\r\n\r\n\r\n\r\ncolumns = ['age', 'detailed_occupation_recode', 'education', 'wage_per_hour','label']\r\nFEATURE_COLUMNS = [\r\n    # age, age_buckets, class_of_worker, detailed_industry_recode,\r\n    age, detailed_occupation_recode, education, wage_per_hour\r\n\r\n]\r\n\r\n\r\nLABEL_COLUMN = 'label'\r\n\r\nCONTINUOUS_COLUMNS = ['age', 'wage_per_hour']\r\n\r\nCATEGORICAL_COLUMNS = ['detailed_occupation_recode','education']\r\n\r\n\r\ndf_train = pd.DataFrame([[12,'12','7th and 8th grade',40,'- 50000'],\r\n                [40,'45','7th and 8th grade',40, '50000+'],\r\n                [50,'50','10th grade',40,'50000+'],\r\n                [60,'30','7th and 8th grade',40,'- 50000']],\r\n                columns=['age', 'detailed_occupation_recode', 'education', 'wage_per_hour', 'label'])\r\n\r\n\r\ndf_test = pd.DataFrame([[12,'12','7th and 8th grade',40,'- 50000'],\r\n                [40,'45','7th and 8th grade',40, '50000+'],\r\n                [50,'50','10th grade',40,'50000+'],\r\n                [60,'30','7th and 8th grade',40,'- 50000']],\r\n                columns=['age', 'detailed_occupation_recode', 'education', 'wage_per_hour', 'label'])\r\ndf_train[LABEL_COLUMN] = (df_train[LABEL_COLUMN].apply(lambda x: '+' in x)).astype(int)\r\ndf_test[LABEL_COLUMN] = (df_test[LABEL_COLUMN].apply(lambda x: '+' in x)).astype(int)\r\ndtypess = df_train.dtypes\r\n\r\n\r\ndef input_fn(df):\r\n    continuous_cols = {k: tf.constant(df[k].values) for k in CONTINUOUS_COLUMNS}\r\n    categorical_cols = {k: tf.SparseTensor(\r\n        indices=[[i, 0] for i in range(df[k].size)],\r\n        values=df[k].values,\r\n        dense_shape=[df[k].size, 1]) for k in CATEGORICAL_COLUMNS}    \r\n    feature_cols = dict(continuous_cols.items() + categorical_cols.items())\r\n    feature_cols['example_id'] = tf.constant([str(i+1) for i in range(df['age'].size)])\r\n    label = tf.constant(df[LABEL_COLUMN].values)\r\n    return feature_cols, label\r\n\r\ndef train_input_fn():\r\n    return input_fn(df_train)\r\n\r\ndef eval_input_fn():\r\n    return input_fn(df_test)\r\n\r\nmodel_dir = '../svm_model_dir'\r\n\r\nmodel = svm.SVM(example_id_column='example_id', feature_columns=FEATURE_COLUMNS, model_dir=model_dir)\r\nmodel.fit(input_fn=train_input_fn, steps=10)\r\nresults = model.evaluate(input_fn=eval_input_fn, steps=1)\r\nfor key in sorted(results):\r\n    print(\"%s: %s\" % (key, results[key]))\r\n```\r\nand the all error output text:\r\n\r\n```\r\nWARNING:tensorflow:The default value of combiner will change from \"sum\" to \r\n\r\n\"sqrtn\" after 2016/11/01.\r\nWARNING:tensorflow:The default value of combiner will change from \"sum\" to \"sqrtn\" after 2016/11/01.\r\nWARNING:tensorflow:tf.variable_op_scope(values, name, default_name) is deprecated, use tf.variable_scope(name, default_name, values)\r\nWARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you\r\n resize your input, as this behavior may change.\r\nWARNING:tensorflow:Rank of input Tensor (1) should be the same as output_rank (2) for column. Will attempt to expand dims. It is highly recommended that you\r\n resize your input, as this behavior may change.\r\nWARNING:tensorflow:From /Users/burness/anaconda/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/head.py:882: hinge_loss (from t\r\nensorflow.contrib.losses.python.losses.loss_ops) is deprecated and will be removed after 2016-12-30.\r\nInstructions for updating:\r\nUse tf.losses.hinge_loss instead.\r\nWARNING:tensorflow:From /Users/burness/anaconda/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/head.py:1362: scalar_summary (f\r\nrom tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2016-11-30.\r\nInstructions for updating:\r\nPlease switch to tf.summary.scalar. Note that tf.summary.scalar uses the node name instead of the tag. This means that TensorFlow will automatically de-dupl\r\nicate summary names based on the scope they are created in. Also, passing a tensor or list of tags to a scalar summary op is no longer supported.\r\nWARNING:tensorflow:From /Users/burness/anaconda/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/head.py:882: hinge_loss (from t\r\nensorflow.contrib.losses.python.losses.loss_ops) is deprecated and will be removed after 2016-12-30.\r\nInstructions for updating:\r\nUse tf.losses.hinge_loss instead.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machi\r\nne and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machi\r\nne and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine\r\nand could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine\r\n and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine\r\nand could speed up CPU computations.\r\nF tensorflow/core/framework/tensor_shape.cc:36] Check failed: NDIMS == dims() (2 vs. 1)Asking for tensor of 2 dimensions from a tensor of 1 dimensions\r\n[1]    66225 abort      python simple-tf-svm.py\r\n```"}