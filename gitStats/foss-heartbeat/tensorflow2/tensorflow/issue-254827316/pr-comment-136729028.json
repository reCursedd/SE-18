{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/136729028", "pull_request_review_id": 60307208, "id": 136729028, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjcyOTAyOA==", "diff_hunk": "@@ -145,7 +145,7 @@ def tf_library(name, graph, config,\n            \" --target_triple=\" + target_llvm_triple() +\n            \" --out_header=$(@D)/\" + header_file +\n            \" --out_object=$(@D)/\" + object_file +\n-           \" \" + (tfcompile_flags or \"\")),\n+           \" \".join(tfcompile_flags or [])),", "path": "tensorflow/compiler/aot/tfcompile.bzl", "position": null, "original_position": 5, "commit_id": "390390c445d9fe239d6522f5d3c4a96d32c9058d", "original_commit_id": "09b7976c21ba49207c169ba5e8b463adc670d3eb", "user": {"login": "jart", "id": 49262, "node_id": "MDQ6VXNlcjQ5MjYy", "avatar_url": "https://avatars1.githubusercontent.com/u/49262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jart", "html_url": "https://github.com/jart", "followers_url": "https://api.github.com/users/jart/followers", "following_url": "https://api.github.com/users/jart/following{/other_user}", "gists_url": "https://api.github.com/users/jart/gists{/gist_id}", "starred_url": "https://api.github.com/users/jart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jart/subscriptions", "organizations_url": "https://api.github.com/users/jart/orgs", "repos_url": "https://api.github.com/users/jart/repos", "events_url": "https://api.github.com/users/jart/events{/privacy}", "received_events_url": "https://api.github.com/users/jart/received_events", "type": "User", "site_admin": false}, "body": "Just like `execv()` having a list of arguments implies that those arguments don't need to be bash syntax. According to the [bash documentation](https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html#Single-Quotes), the correct way to escape these values is probably:\r\n\r\n```py\r\nflags = \" \".join([\"'\" + arg.replace(\"'\", \"'\\\\''\") + \"'\" for arg in tfcompile_flags])\r\n```\r\n\r\nIn other words, `foo` becomes `'foo'` and `foo'bar` becomes `'foo'\\''bar'`.", "created_at": "2017-09-03T23:33:20Z", "updated_at": "2017-09-04T01:18:03Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/12769#discussion_r136729028", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12769", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/136729028"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/12769#discussion_r136729028"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12769"}}, "body_html": "<p>Just like <code>execv()</code> having a list of arguments implies that those arguments don't need to be bash syntax. According to the <a href=\"https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html#Single-Quotes\" rel=\"nofollow\">bash documentation</a>, the correct way to escape these values is probably:</p>\n<div class=\"highlight highlight-source-python\"><pre>flags <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> <span class=\"pl-pds\">\"</span></span>.join([<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>'<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> arg.replace(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>'<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>'<span class=\"pl-cce\">\\\\</span>''<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>'<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">for</span> arg <span class=\"pl-k\">in</span> tfcompile_flags])</pre></div>\n<p>In other words, <code>foo</code> becomes <code>'foo'</code> and <code>foo'bar</code> becomes <code>'foo'\\''bar'</code>.</p>", "body_text": "Just like execv() having a list of arguments implies that those arguments don't need to be bash syntax. According to the bash documentation, the correct way to escape these values is probably:\nflags = \" \".join([\"'\" + arg.replace(\"'\", \"'\\\\''\") + \"'\" for arg in tfcompile_flags])\nIn other words, foo becomes 'foo' and foo'bar becomes 'foo'\\''bar'."}