{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/400665617", "html_url": "https://github.com/tensorflow/tensorflow/issues/19739#issuecomment-400665617", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19739", "id": 400665617, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDY2NTYxNw==", "user": {"login": "duplex143", "id": 24863030, "node_id": "MDQ6VXNlcjI0ODYzMDMw", "avatar_url": "https://avatars2.githubusercontent.com/u/24863030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duplex143", "html_url": "https://github.com/duplex143", "followers_url": "https://api.github.com/users/duplex143/followers", "following_url": "https://api.github.com/users/duplex143/following{/other_user}", "gists_url": "https://api.github.com/users/duplex143/gists{/gist_id}", "starred_url": "https://api.github.com/users/duplex143/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duplex143/subscriptions", "organizations_url": "https://api.github.com/users/duplex143/orgs", "repos_url": "https://api.github.com/users/duplex143/repos", "events_url": "https://api.github.com/users/duplex143/events{/privacy}", "received_events_url": "https://api.github.com/users/duplex143/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-27T13:10:01Z", "updated_at": "2018-06-27T13:10:01Z", "author_association": "NONE", "body_html": "<p>Make sure that the category names don't have escape characters.<br>\nYou can create a shell file that iterates over all images as follows:</p>\n<pre><code>import os\nl=os.listdir(os.getcwd()+'/data') # Assuming data has is the parent directory of images\ndef dotremove(poi):  \n    for x in poi:\n        if x.startswith('.'):\n            poi.remove(x)\ndotremove(l) #To remove hidden files\nfor x in l:\n    txt=str(x)+'.sh'\n    file=open(txt,\"w\")\n    p=os.listdir(os.getcwd()+'/data/'+x)\n    dotremove(p)\n    for j in p:\n        print('python label_image.py --image=/data/'+x+'/'+j+' --input_height=224 --input_width=224 --graph=retrained_graph.pb --labels=labels.txt  --input_layer=\"input\" --output_layer=\"final_result\"',file=open(txt,\"a\"))\n</code></pre>\n<p>You'll have a <code>.sh</code> script for each category. Run these <code>.sh</code> scripts.</p>", "body_text": "Make sure that the category names don't have escape characters.\nYou can create a shell file that iterates over all images as follows:\nimport os\nl=os.listdir(os.getcwd()+'/data') # Assuming data has is the parent directory of images\ndef dotremove(poi):  \n    for x in poi:\n        if x.startswith('.'):\n            poi.remove(x)\ndotremove(l) #To remove hidden files\nfor x in l:\n    txt=str(x)+'.sh'\n    file=open(txt,\"w\")\n    p=os.listdir(os.getcwd()+'/data/'+x)\n    dotremove(p)\n    for j in p:\n        print('python label_image.py --image=/data/'+x+'/'+j+' --input_height=224 --input_width=224 --graph=retrained_graph.pb --labels=labels.txt  --input_layer=\"input\" --output_layer=\"final_result\"',file=open(txt,\"a\"))\n\nYou'll have a .sh script for each category. Run these .sh scripts.", "body": "Make sure that the category names don't have escape characters.\r\nYou can create a shell file that iterates over all images as follows:\r\n```\r\nimport os\r\nl=os.listdir(os.getcwd()+'/data') # Assuming data has is the parent directory of images\r\ndef dotremove(poi):  \r\n    for x in poi:\r\n        if x.startswith('.'):\r\n            poi.remove(x)\r\ndotremove(l) #To remove hidden files\r\nfor x in l:\r\n    txt=str(x)+'.sh'\r\n    file=open(txt,\"w\")\r\n    p=os.listdir(os.getcwd()+'/data/'+x)\r\n    dotremove(p)\r\n    for j in p:\r\n        print('python label_image.py --image=/data/'+x+'/'+j+' --input_height=224 --input_width=224 --graph=retrained_graph.pb --labels=labels.txt  --input_layer=\"input\" --output_layer=\"final_result\"',file=open(txt,\"a\"))\r\n```\r\nYou'll have a `.sh` script for each category. Run these `.sh` scripts."}