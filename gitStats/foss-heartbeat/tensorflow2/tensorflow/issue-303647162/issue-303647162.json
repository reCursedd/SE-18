{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17571", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17571/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17571/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17571/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17571", "id": 303647162, "node_id": "MDU6SXNzdWUzMDM2NDcxNjI=", "number": 17571, "title": "keras.model_to_estimator feature request", "user": {"login": "knathanieltucker", "id": 4574574, "node_id": "MDQ6VXNlcjQ1NzQ1NzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/4574574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/knathanieltucker", "html_url": "https://github.com/knathanieltucker", "followers_url": "https://api.github.com/users/knathanieltucker/followers", "following_url": "https://api.github.com/users/knathanieltucker/following{/other_user}", "gists_url": "https://api.github.com/users/knathanieltucker/gists{/gist_id}", "starred_url": "https://api.github.com/users/knathanieltucker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/knathanieltucker/subscriptions", "organizations_url": "https://api.github.com/users/knathanieltucker/orgs", "repos_url": "https://api.github.com/users/knathanieltucker/repos", "events_url": "https://api.github.com/users/knathanieltucker/events{/privacy}", "received_events_url": "https://api.github.com/users/knathanieltucker/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 284285184, "node_id": "MDU6TGFiZWwyODQyODUxODQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:tensorboard", "name": "comp:tensorboard", "color": "0052cc", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 16, "created_at": "2018-03-08T21:57:41Z", "updated_at": "2018-09-07T19:09:53Z", "closed_at": "2018-09-07T19:09:52Z", "author_association": "NONE", "body_html": "<p>Really does not depend on system information, just a completely new feature.</p>\n<p>Using the:</p>\n<pre><code>tf.keras.estimator.model_to_estimator(keras_model=model,\n                                                    model_dir=model_dir)\n</code></pre>\n<p>does not allow us to log images in tensor board while training the model. I believe this is because the keras model is serialized and then rebuilt in this function and it does not capture the summaries that you put in the original graph.</p>\n<p>I am able to get around this by using a Lambda layer that looks like this:</p>\n<pre><code>def viz_layer(x):\n    from tensorflow.summary import histogram\n    histogram('hist', x)\n    return x\n\nmodel.add(layers.Lambda(viz_layer))\n</code></pre>\n<p>So two problems with this:</p>\n<ol>\n<li>It's pretty hacky to have to add identity layers in to the network to visualize</li>\n<li>I can't get the lambda layer to work without importing tensor flow inside the layer which is pretty bad</li>\n</ol>\n<p>It would be great if the original summaries were captured or if there were a more streamlined way to add summaries.</p>", "body_text": "Really does not depend on system information, just a completely new feature.\nUsing the:\ntf.keras.estimator.model_to_estimator(keras_model=model,\n                                                    model_dir=model_dir)\n\ndoes not allow us to log images in tensor board while training the model. I believe this is because the keras model is serialized and then rebuilt in this function and it does not capture the summaries that you put in the original graph.\nI am able to get around this by using a Lambda layer that looks like this:\ndef viz_layer(x):\n    from tensorflow.summary import histogram\n    histogram('hist', x)\n    return x\n\nmodel.add(layers.Lambda(viz_layer))\n\nSo two problems with this:\n\nIt's pretty hacky to have to add identity layers in to the network to visualize\nI can't get the lambda layer to work without importing tensor flow inside the layer which is pretty bad\n\nIt would be great if the original summaries were captured or if there were a more streamlined way to add summaries.", "body": "Really does not depend on system information, just a completely new feature. \r\n\r\nUsing the:\r\n```\r\ntf.keras.estimator.model_to_estimator(keras_model=model,\r\n                                                    model_dir=model_dir)\r\n```\r\n\r\ndoes not allow us to log images in tensor board while training the model. I believe this is because the keras model is serialized and then rebuilt in this function and it does not capture the summaries that you put in the original graph. \r\n\r\nI am able to get around this by using a Lambda layer that looks like this:\r\n\r\n```\r\ndef viz_layer(x):\r\n    from tensorflow.summary import histogram\r\n    histogram('hist', x)\r\n    return x\r\n\r\nmodel.add(layers.Lambda(viz_layer))\r\n```\r\n\r\nSo two problems with this:\r\n\r\n1. It's pretty hacky to have to add identity layers in to the network to visualize\r\n2. I can't get the lambda layer to work without importing tensor flow inside the layer which is pretty bad\r\n\r\nIt would be great if the original summaries were captured or if there were a more streamlined way to add summaries. "}