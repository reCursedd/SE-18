{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4826", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4826/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4826/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4826/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/4826", "id": 181707150, "node_id": "MDExOlB1bGxSZXF1ZXN0ODg0NjQ2MDU=", "number": 4826, "title": "Better support for initializing without explicit initializer(issue#4419)", "user": {"login": "DjangoPeng", "id": 16943353, "node_id": "MDQ6VXNlcjE2OTQzMzUz", "avatar_url": "https://avatars3.githubusercontent.com/u/16943353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DjangoPeng", "html_url": "https://github.com/DjangoPeng", "followers_url": "https://api.github.com/users/DjangoPeng/followers", "following_url": "https://api.github.com/users/DjangoPeng/following{/other_user}", "gists_url": "https://api.github.com/users/DjangoPeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/DjangoPeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DjangoPeng/subscriptions", "organizations_url": "https://api.github.com/users/DjangoPeng/orgs", "repos_url": "https://api.github.com/users/DjangoPeng/repos", "events_url": "https://api.github.com/users/DjangoPeng/events{/privacy}", "received_events_url": "https://api.github.com/users/DjangoPeng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390482148, "node_id": "MDU6TGFiZWwzOTA0ODIxNDg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/awaiting%20review", "name": "awaiting review", "color": "fef2c0", "default": false}, {"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}, {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 32, "created_at": "2016-10-07T16:01:28Z", "updated_at": "2016-12-10T23:57:39Z", "closed_at": "2016-12-10T23:57:39Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/4826", "html_url": "https://github.com/tensorflow/tensorflow/pull/4826", "diff_url": "https://github.com/tensorflow/tensorflow/pull/4826.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/4826.patch"}, "body_html": "<p>When using <code>tf.get_variable(name='foo', shape=(42,), dtype=tf.int32)</code> without explicit initializer, it causes the error:</p>\n<pre><code>TypeError: Expected int32, got -1.7320508075688772 of type 'float' instead.\n</code></pre>\n<p>The reason is as follows:<br>\nIf no initializer provided, it would use the default initializer <code>uniform_unit_scaling_initializer</code> which just fit with <code>float</code>(notice that sqrt(3)==1.7320...). While, it always conflict with the required integer dtype.</p>\n<p>The current solution is initialize the integer by <code>init_ops.zeros_initializer</code> when no initializer provided.</p>\n<p>reference the <a href=\"https://github.com/tensorflow/tensorflow/issues/4419\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/4419/hovercard\">issus#4419</a></p>", "body_text": "When using tf.get_variable(name='foo', shape=(42,), dtype=tf.int32) without explicit initializer, it causes the error:\nTypeError: Expected int32, got -1.7320508075688772 of type 'float' instead.\n\nThe reason is as follows:\nIf no initializer provided, it would use the default initializer uniform_unit_scaling_initializer which just fit with float(notice that sqrt(3)==1.7320...). While, it always conflict with the required integer dtype.\nThe current solution is initialize the integer by init_ops.zeros_initializer when no initializer provided.\nreference the issus#4419", "body": "When using `tf.get_variable(name='foo', shape=(42,), dtype=tf.int32)` without explicit initializer, it causes the error:\r\n\r\n```\r\nTypeError: Expected int32, got -1.7320508075688772 of type 'float' instead.\r\n```\r\n\r\nThe reason is as follows:\r\nIf no initializer provided, it would use the default initializer `uniform_unit_scaling_initializer` which just fit with `float`(notice that sqrt(3)==1.7320...). While, it always conflict with the required integer dtype.\r\n\r\nThe current solution is initialize the integer by `init_ops.zeros_initializer` when no initializer provided.\r\n\r\nreference the [issus#4419](https://github.com/tensorflow/tensorflow/issues/4419)\r\n"}