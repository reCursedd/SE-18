{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/85861363", "pull_request_review_id": 6551258, "id": 85861363, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1ODYxMzYz", "diff_hunk": "@@ -692,6 +698,39 @@ def _get_single_variable(self,\n     return v\n \n \n+  # Initialize variable when no initializer provided\n+  def _get_default_initializer(self, name, shape=None, dtype=dtypes.float32):\n+    \"\"\"Provide a default initializer and a corresponding value.\n+\n+    Args:\n+      name: see get_variable.\n+      shape: see get_variable.\n+      dtype: see get_variable.\n+\n+    Returns:\n+      initializer and initializing_from_value. See get_variable above.\n+\n+    Raises:\n+      ValueError: When giving unsupported dtype.\n+    \"\"\"\n+    # If dtype is DT_FLOAT, provide a uniform unit scaling initializer\n+    if dtype.is_floating:\n+      initializer = init_ops.uniform_unit_scaling_initializer()\n+      initializing_from_value = False\n+    # If dtype is DT_INT/DT_UINT, provide a default value `zero`\n+    # If dtype is DT_BOOL, provide a default value `FALSE`\n+    elif dtype.is_integer or dtype.is_unsigned or dtype.is_bool:\n+      initializer = init_ops.zeros_initializer(\n+          shape=shape, dtype=dtype.base_dtype)\n+      initializing_from_value = True\n+    # NOTES:Do we need to support for handling DT_STRING and DT_COMPLEX here?\n+    else:\n+      raise ValueError(\"An initializer for variable %s of %s is required\"\n+          % (name, dtype.base_dtype)", "path": "tensorflow/python/ops/variable_scope.py", "position": null, "original_position": 62, "commit_id": "41d85ee1f58332c076ffc0e8b28d8015de9f4a23", "original_commit_id": "ec2bc9629574135aefcd3ff4b03c4d9dfbed823b", "user": {"login": "DjangoPeng", "id": 16943353, "node_id": "MDQ6VXNlcjE2OTQzMzUz", "avatar_url": "https://avatars3.githubusercontent.com/u/16943353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DjangoPeng", "html_url": "https://github.com/DjangoPeng", "followers_url": "https://api.github.com/users/DjangoPeng/followers", "following_url": "https://api.github.com/users/DjangoPeng/following{/other_user}", "gists_url": "https://api.github.com/users/DjangoPeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/DjangoPeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DjangoPeng/subscriptions", "organizations_url": "https://api.github.com/users/DjangoPeng/orgs", "repos_url": "https://api.github.com/users/DjangoPeng/repos", "events_url": "https://api.github.com/users/DjangoPeng/events{/privacy}", "received_events_url": "https://api.github.com/users/DjangoPeng/received_events", "type": "User", "site_admin": false}, "body": "Give dtype name in `ValueError` for more info to debug.\n", "created_at": "2016-11-01T00:46:44Z", "updated_at": "2016-12-01T14:37:54Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/4826#discussion_r85861363", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/4826", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/85861363"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/4826#discussion_r85861363"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/4826"}}, "body_html": "<p>Give dtype name in <code>ValueError</code> for more info to debug.</p>", "body_text": "Give dtype name in ValueError for more info to debug."}