{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/217140096", "pull_request_review_id": 154783169, "id": 217140096, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzE0MDA5Ng==", "diff_hunk": "@@ -0,0 +1,142 @@\n+/* Copyright 2018 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+#include \"ignite_ssl_wrapper.h\"\n+\n+#include \"tensorflow/core/lib/core/errors.h\"\n+#include \"tensorflow/core/platform/logging.h\"\n+\n+#include <openssl/err.h>\n+#include <openssl/ssl.h>\n+\n+namespace tensorflow {\n+\n+static int PasswordCb(char *buf, int size, int rwflag, void *password) {\n+  strncpy(buf, (char *)(password), size);\n+  buf[size - 1] = '\\0';\n+  return (strlen(buf));\n+}\n+\n+SslWrapper::SslWrapper(std::shared_ptr<Client> client, std::string certfile,\n+                       std::string keyfile, std::string cert_password)\n+    : client_(client),\n+      certfile_(certfile),\n+      keyfile_(keyfile),\n+      cert_password_(cert_password),\n+      ctx_(NULL) {}\n+\n+SslWrapper::~SslWrapper() {\n+  if (IsConnected()) {\n+    Status status = Disconnect();\n+    if (!status.ok()) LOG(WARNING) << status.ToString();\n+  }\n+\n+  if (ctx_ != NULL) {\n+    SSL_CTX_free(ctx_);\n+    ctx_ = NULL;\n+  }\n+}\n+\n+Status SslWrapper::InitSslContext() {\n+  OpenSSL_add_all_algorithms();\n+  SSL_load_error_strings();\n+\n+  ctx_ = SSL_CTX_new(SSLv23_method());\n+  if (ctx_ == NULL) return errors::Internal(\"Couldn't create SSL context\");\n+\n+  SSL_CTX_set_default_passwd_cb(ctx_, PasswordCb);\n+  SSL_CTX_set_default_passwd_cb_userdata(ctx_, (void *)cert_password_.c_str());\n+\n+  if (SSL_CTX_use_certificate_chain_file(ctx_, certfile_.c_str()) != 1)\n+    return errors::Internal(\"Couldn't load cetificate chain (file '\", certfile_,\n+                            \"')\");\n+\n+  std::string private_key_file = keyfile_.empty() ? certfile_ : keyfile_;\n+  if (SSL_CTX_use_PrivateKey_file(ctx_, private_key_file.c_str(),\n+                                  SSL_FILETYPE_PEM) != 1)\n+    return errors::Internal(\"Couldn't load private key (file '\",\n+                            private_key_file, \"')\");\n+\n+  return Status::OK();\n+}\n+\n+Status SslWrapper::Connect() {\n+  if (ctx_ == NULL) {\n+    TF_RETURN_IF_ERROR(InitSslContext());\n+  }\n+\n+  ssl_ = SSL_new(ctx_);\n+  if (ssl_ == NULL)\n+    return errors::Internal(\"Failed to establish SSL connection\");\n+\n+  TF_RETURN_IF_ERROR(client_->Connect());\n+\n+  SSL_set_fd(ssl_, client_->GetSocketDescriptor());\n+  if (SSL_connect(ssl_) != 1)\n+    return errors::Internal(\"Failed to establish SSL connection\");\n+\n+  LOG(INFO) << \"SSL connection established\";\n+\n+  return Status::OK();\n+}\n+\n+Status SslWrapper::Disconnect() {\n+  SSL_free(ssl_);\n+", "path": "tensorflow/contrib/ignite/kernels/ignite_ssl_wrapper.cc", "position": null, "original_position": 97, "commit_id": "90c68770467701a23d23a85c5d769f6f4fa39f0f", "original_commit_id": "0b6654bc223f4f3807209043dc34ccb07b55474e", "user": {"login": "dmitrievanthony", "id": 1028969, "node_id": "MDQ6VXNlcjEwMjg5Njk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1028969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmitrievanthony", "html_url": "https://github.com/dmitrievanthony", "followers_url": "https://api.github.com/users/dmitrievanthony/followers", "following_url": "https://api.github.com/users/dmitrievanthony/following{/other_user}", "gists_url": "https://api.github.com/users/dmitrievanthony/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmitrievanthony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmitrievanthony/subscriptions", "organizations_url": "https://api.github.com/users/dmitrievanthony/orgs", "repos_url": "https://api.github.com/users/dmitrievanthony/repos", "events_url": "https://api.github.com/users/dmitrievanthony/events{/privacy}", "received_events_url": "https://api.github.com/users/dmitrievanthony/received_events", "type": "User", "site_admin": false}, "body": "Done.", "created_at": "2018-09-12T18:24:31Z", "updated_at": "2018-09-24T09:16:00Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/22210#discussion_r217140096", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/22210", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/217140096"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/22210#discussion_r217140096"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/22210"}}, "body_html": "<p>Done.</p>", "body_text": "Done.", "in_reply_to_id": 216714898}