{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/218480644", "pull_request_review_id": 156428603, "id": 218480644, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODQ4MDY0NA==", "diff_hunk": "@@ -0,0 +1,129 @@\n+/* Copyright 2018 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+#ifndef TENSORFLOW_CONTRIB_IGNITE_KERNELS_IGNITE_BYTE_SWAPPER_H_\n+#define TENSORFLOW_CONTRIB_IGNITE_KERNELS_IGNITE_BYTE_SWAPPER_H_\n+\n+#include <stdint.h>\n+\n+namespace tensorflow {\n+\n+class ByteSwapper {\n+ public:\n+  ByteSwapper(bool big_endian) {\n+    int x = 1;\n+    bool is_little_endian = (*(char *)&x == 1);", "path": "tensorflow/contrib/ignite/kernels/ignite_byte_swapper.h", "position": null, "original_position": 27, "commit_id": "90c68770467701a23d23a85c5d769f6f4fa39f0f", "original_commit_id": "fa80a920f2a3bc00522fe95fc9a07a28d67fc055", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "body": "Use the formulation here to work out the endianness statically:\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/25c99131362f034c3bc3805d741f0c4ab9d0cb8b/tensorflow/compiler/xla/literal.cc#L46", "created_at": "2018-09-18T15:27:51Z", "updated_at": "2018-09-24T09:16:00Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/22210#discussion_r218480644", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/22210", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/218480644"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/22210#discussion_r218480644"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/22210"}}, "body_html": "<p>Use the formulation here to work out the endianness statically:</p>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/25c99131362f034c3bc3805d741f0c4ab9d0cb8b/tensorflow/compiler/xla/literal.cc#L46\">tensorflow/tensorflow/compiler/xla/literal.cc</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 46\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/25c99131362f034c3bc3805d741f0c4ab9d0cb8b\">25c9913</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L46\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"46\"></td>\n          <td id=\"LC46\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">constexpr</span> <span class=\"pl-k\">bool</span> <span class=\"pl-c1\">kLittleEndian</span> = __BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__; </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "body_text": "Use the formulation here to work out the endianness statically:\n\n  \n    \n      tensorflow/tensorflow/compiler/xla/literal.cc\n    \n    \n         Line 46\n      in\n      25c9913\n    \n    \n    \n    \n\n        \n          \n           constexpr bool kLittleEndian = __BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__;"}