{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/207537827", "html_url": "https://github.com/tensorflow/tensorflow/issues/1796#issuecomment-207537827", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1796", "id": 207537827, "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzUzNzgyNw==", "user": {"login": "fangweili", "id": 1624039, "node_id": "MDQ6VXNlcjE2MjQwMzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1624039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fangweili", "html_url": "https://github.com/fangweili", "followers_url": "https://api.github.com/users/fangweili/followers", "following_url": "https://api.github.com/users/fangweili/following{/other_user}", "gists_url": "https://api.github.com/users/fangweili/gists{/gist_id}", "starred_url": "https://api.github.com/users/fangweili/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fangweili/subscriptions", "organizations_url": "https://api.github.com/users/fangweili/orgs", "repos_url": "https://api.github.com/users/fangweili/repos", "events_url": "https://api.github.com/users/fangweili/events{/privacy}", "received_events_url": "https://api.github.com/users/fangweili/received_events", "type": "User", "site_admin": false}, "created_at": "2016-04-08T17:58:40Z", "updated_at": "2016-04-08T17:58:40Z", "author_association": "CONTRIBUTOR", "body_html": "<p>retrain.py is to take a trained inception model, reuse all layers up to bottleneck layer, and train a new top layer for new image classifications. Therefore, from an inference perspective, the input is the same as the inception model being used, and the output is the output of the new top layer.</p>\n<p>input_tensor=jpeg_data_tensor<br>\nscores_tensor=final_tensor</p>", "body_text": "retrain.py is to take a trained inception model, reuse all layers up to bottleneck layer, and train a new top layer for new image classifications. Therefore, from an inference perspective, the input is the same as the inception model being used, and the output is the output of the new top layer.\ninput_tensor=jpeg_data_tensor\nscores_tensor=final_tensor", "body": "retrain.py is to take a trained inception model, reuse all layers up to bottleneck layer, and train a new top layer for new image classifications. Therefore, from an inference perspective, the input is the same as the inception model being used, and the output is the output of the new top layer.\n\ninput_tensor=jpeg_data_tensor\nscores_tensor=final_tensor\n"}