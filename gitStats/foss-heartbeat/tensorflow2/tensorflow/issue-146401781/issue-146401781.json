{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1796", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1796/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1796/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1796/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/1796", "id": 146401781, "node_id": "MDU6SXNzdWUxNDY0MDE3ODE=", "number": 1796, "title": "Tensorflow serving with transfer learning retrained inception model", "user": {"login": "oweingrod", "id": 4645780, "node_id": "MDQ6VXNlcjQ2NDU3ODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/4645780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oweingrod", "html_url": "https://github.com/oweingrod", "followers_url": "https://api.github.com/users/oweingrod/followers", "following_url": "https://api.github.com/users/oweingrod/following{/other_user}", "gists_url": "https://api.github.com/users/oweingrod/gists{/gist_id}", "starred_url": "https://api.github.com/users/oweingrod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oweingrod/subscriptions", "organizations_url": "https://api.github.com/users/oweingrod/orgs", "repos_url": "https://api.github.com/users/oweingrod/repos", "events_url": "https://api.github.com/users/oweingrod/events{/privacy}", "received_events_url": "https://api.github.com/users/oweingrod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-04-06T18:51:13Z", "updated_at": "2017-09-24T16:16:42Z", "closed_at": "2016-06-07T00:37:37Z", "author_association": "NONE", "body_html": "<p>Hi</p>\n<p>Trying to use a retrained inception model (as in the transfer learning tutorial) with Tensorflow serving as described by the example, <a href=\"https://tensorflow.github.io/serving/serving_basic\" rel=\"nofollow\">here</a>. However, I am unclear how to set up the exporter.</p>\n<p>The exporter flow as shown in the tutorial looks as such:</p>\n<p><code>export_path = sys.argv[-1] print 'Exporting trained model to', export_path saver = tf.train.Saver(sharded=True) model_exporter = exporter.Exporter(saver) signature = exporter.classification_signature(input_tensor=x, scores_tensor=y) model_exporter.init(sess.graph.as_graph_def(), default_graph_signature=signature) model_exporter.export(export_path, tf.constant(FLAGS.export_version), sess) </code></p>\n<p>Since there is no \"input_tensor\" and \"scores_tensor\" as described by this tutorial within the Inception transfer learning, I am unsure of what tensors to use to get the signature. The bottleneck tensor? The ground_truth tensor?</p>\n<p>I'd love an explanation of how to set up this retrained model with Tensorflow Serving as shown in this example!</p>\n<p>Thanks</p>\n<p>Oren</p>", "body_text": "Hi\nTrying to use a retrained inception model (as in the transfer learning tutorial) with Tensorflow serving as described by the example, here. However, I am unclear how to set up the exporter.\nThe exporter flow as shown in the tutorial looks as such:\nexport_path = sys.argv[-1] print 'Exporting trained model to', export_path saver = tf.train.Saver(sharded=True) model_exporter = exporter.Exporter(saver) signature = exporter.classification_signature(input_tensor=x, scores_tensor=y) model_exporter.init(sess.graph.as_graph_def(), default_graph_signature=signature) model_exporter.export(export_path, tf.constant(FLAGS.export_version), sess) \nSince there is no \"input_tensor\" and \"scores_tensor\" as described by this tutorial within the Inception transfer learning, I am unsure of what tensors to use to get the signature. The bottleneck tensor? The ground_truth tensor?\nI'd love an explanation of how to set up this retrained model with Tensorflow Serving as shown in this example!\nThanks\nOren", "body": "Hi\n\nTrying to use a retrained inception model (as in the transfer learning tutorial) with Tensorflow serving as described by the example, [here](https://tensorflow.github.io/serving/serving_basic). However, I am unclear how to set up the exporter.\n\nThe exporter flow as shown in the tutorial looks as such:\n\n`\n export_path = sys.argv[-1] print 'Exporting trained model to', export_path saver = tf.train.Saver(sharded=True) model_exporter = exporter.Exporter(saver) signature = exporter.classification_signature(input_tensor=x, scores_tensor=y) model_exporter.init(sess.graph.as_graph_def(), default_graph_signature=signature) model_exporter.export(export_path, tf.constant(FLAGS.export_version), sess) \n`\n\nSince there is no \"input_tensor\" and \"scores_tensor\" as described by this tutorial within the Inception transfer learning, I am unsure of what tensors to use to get the signature. The bottleneck tensor? The ground_truth tensor?\n\nI'd love an explanation of how to set up this retrained model with Tensorflow Serving as shown in this example!\n\nThanks\n\nOren\n"}