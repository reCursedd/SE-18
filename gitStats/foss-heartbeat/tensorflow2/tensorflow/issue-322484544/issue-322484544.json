{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19240", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19240/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19240/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19240/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19240", "id": 322484544, "node_id": "MDU6SXNzdWUzMjI0ODQ1NDQ=", "number": 19240, "title": "error compilation with openmp enabled  in tensorflow lite compilation", "user": {"login": "dimitryn", "id": 36672340, "node_id": "MDQ6VXNlcjM2NjcyMzQw", "avatar_url": "https://avatars3.githubusercontent.com/u/36672340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dimitryn", "html_url": "https://github.com/dimitryn", "followers_url": "https://api.github.com/users/dimitryn/followers", "following_url": "https://api.github.com/users/dimitryn/following{/other_user}", "gists_url": "https://api.github.com/users/dimitryn/gists{/gist_id}", "starred_url": "https://api.github.com/users/dimitryn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dimitryn/subscriptions", "organizations_url": "https://api.github.com/users/dimitryn/orgs", "repos_url": "https://api.github.com/users/dimitryn/repos", "events_url": "https://api.github.com/users/dimitryn/events{/privacy}", "received_events_url": "https://api.github.com/users/dimitryn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "petewarden", "id": 161459, "node_id": "MDQ6VXNlcjE2MTQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/161459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petewarden", "html_url": "https://github.com/petewarden", "followers_url": "https://api.github.com/users/petewarden/followers", "following_url": "https://api.github.com/users/petewarden/following{/other_user}", "gists_url": "https://api.github.com/users/petewarden/gists{/gist_id}", "starred_url": "https://api.github.com/users/petewarden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petewarden/subscriptions", "organizations_url": "https://api.github.com/users/petewarden/orgs", "repos_url": "https://api.github.com/users/petewarden/repos", "events_url": "https://api.github.com/users/petewarden/events{/privacy}", "received_events_url": "https://api.github.com/users/petewarden/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "petewarden", "id": 161459, "node_id": "MDQ6VXNlcjE2MTQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/161459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petewarden", "html_url": "https://github.com/petewarden", "followers_url": "https://api.github.com/users/petewarden/followers", "following_url": "https://api.github.com/users/petewarden/following{/other_user}", "gists_url": "https://api.github.com/users/petewarden/gists{/gist_id}", "starred_url": "https://api.github.com/users/petewarden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petewarden/subscriptions", "organizations_url": "https://api.github.com/users/petewarden/orgs", "repos_url": "https://api.github.com/users/petewarden/repos", "events_url": "https://api.github.com/users/petewarden/events{/privacy}", "received_events_url": "https://api.github.com/users/petewarden/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-05-12T05:31:38Z", "updated_at": "2018-06-06T06:12:54Z", "closed_at": "2018-06-06T06:12:54Z", "author_association": "NONE", "body_html": "<p>Hi ,<br>\nI building tensorflow lite shared library .<br>\nI added flag -fopenmp to build_def.bzl to enable openmp:</p>\n<pre><code>def tflite_copts():\n  \"\"\"Defines compile time flags.\"\"\"\n  copts = [\n      \"-DFARMHASH_NO_CXX_STRING\",\n  ] + select({\n          str(Label(\"//tensorflow:android_arm64\")): [\n              \"-std=c++11\",\n              \"-O3\",\n              \"-fopenmp\",\n          ],\n          str(Label(\"//tensorflow:android_arm\")): [\n              \"-mfpu=neon\",\n              \"-mfloat-abi=softfp\",\n              \"-std=c++11\",\n              \"-O3\",\n          ],\n          str(Label(\"//tensorflow:android_x86\")): [\n              \"-DGEMMLOWP_ALLOW_SLOW_SCALAR_FALLBACK\",\n          ],\n          str(Label(\"//tensorflow:ios_x86_64\")): [\n              \"-msse4.1\",\n          ],\n          \"//conditions:default\": [],\n  }) + select({\n      str(Label(\"//tensorflow:with_default_optimizations\")): [],\n      \"//conditions:default\": [\"-DGEMMLOWP_ALLOW_SLOW_SCALAR_FALLBACK\"],\n  })\n</code></pre>\n<p>And I got error compilation,</p>\n<pre><code>tensorflow/contrib/lite/kernels/BUILD:43:1: C++ compilation of rule '//tensorflow/contrib/lite/kernels:eigen_support' failed (Exit 1)\nIn file included from tensorflow/contrib/lite/kernels/eigen_support.cc:17:\nIn file included from ./third_party/eigen3/Eigen/Core:1:\nexternal/eigen_archive/Eigen/Core:275:10: fatal error: 'omp.h' file not found\n#include &lt;omp.h&gt;\n         ^\n1 error generated.\nTarget //tensorflow/contrib/lite:libtensorflowLite.so failed to build\n</code></pre>\n<h2>Please advise how to fix it.</h2>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nyes,</li>\n</ul>\n<ol>\n<li>added openmp flag.</li>\n<li>I changed BUILD file in tensorflow lite to create shared library</li>\n</ol>\n<pre><code>cc_binary(\n    name = \"libtensorflowLite.so\",\n    linkshared=1,\n\n    deps = [\n        \":framework\",\n\t\"//tensorflow/contrib/lite/kernels:builtin_ops\"\n    ],\n)\n</code></pre>\n<ul>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nUbuntu 16</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\nsources</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\nmaster</li>\n<li><strong>Python version</strong>:<br>\n2.7</li>\n<li><strong>Bazel version (if compiling from source)</strong>:<br>\n0.10</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:<br>\nlatest</li>\n<li><strong>CUDA/cuDNN version</strong>:<br>\nno</li>\n<li><strong>GPU model and memory</strong>:<br>\nno</li>\n<li><strong>Exact command to reproduce</strong>:<br>\n<code>bazel build  //tensorflow/contrib/lite:libtensorflowLite.so --crosstool_top=//external:android/crosstool --cpu=arm64-v8a --host_crosstool_top=@bazel_tools//tools/cpp:toolchain --cxxopt=\"-std=c++11\"</code></li>\n</ul>", "body_text": "Hi ,\nI building tensorflow lite shared library .\nI added flag -fopenmp to build_def.bzl to enable openmp:\ndef tflite_copts():\n  \"\"\"Defines compile time flags.\"\"\"\n  copts = [\n      \"-DFARMHASH_NO_CXX_STRING\",\n  ] + select({\n          str(Label(\"//tensorflow:android_arm64\")): [\n              \"-std=c++11\",\n              \"-O3\",\n              \"-fopenmp\",\n          ],\n          str(Label(\"//tensorflow:android_arm\")): [\n              \"-mfpu=neon\",\n              \"-mfloat-abi=softfp\",\n              \"-std=c++11\",\n              \"-O3\",\n          ],\n          str(Label(\"//tensorflow:android_x86\")): [\n              \"-DGEMMLOWP_ALLOW_SLOW_SCALAR_FALLBACK\",\n          ],\n          str(Label(\"//tensorflow:ios_x86_64\")): [\n              \"-msse4.1\",\n          ],\n          \"//conditions:default\": [],\n  }) + select({\n      str(Label(\"//tensorflow:with_default_optimizations\")): [],\n      \"//conditions:default\": [\"-DGEMMLOWP_ALLOW_SLOW_SCALAR_FALLBACK\"],\n  })\n\nAnd I got error compilation,\ntensorflow/contrib/lite/kernels/BUILD:43:1: C++ compilation of rule '//tensorflow/contrib/lite/kernels:eigen_support' failed (Exit 1)\nIn file included from tensorflow/contrib/lite/kernels/eigen_support.cc:17:\nIn file included from ./third_party/eigen3/Eigen/Core:1:\nexternal/eigen_archive/Eigen/Core:275:10: fatal error: 'omp.h' file not found\n#include <omp.h>\n         ^\n1 error generated.\nTarget //tensorflow/contrib/lite:libtensorflowLite.so failed to build\n\nPlease advise how to fix it.\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nyes,\n\n\nadded openmp flag.\nI changed BUILD file in tensorflow lite to create shared library\n\ncc_binary(\n    name = \"libtensorflowLite.so\",\n    linkshared=1,\n\n    deps = [\n        \":framework\",\n\t\"//tensorflow/contrib/lite/kernels:builtin_ops\"\n    ],\n)\n\n\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nUbuntu 16\nTensorFlow installed from (source or binary):\nsources\nTensorFlow version (use command below):\nmaster\nPython version:\n2.7\nBazel version (if compiling from source):\n0.10\nGCC/Compiler version (if compiling from source):\nlatest\nCUDA/cuDNN version:\nno\nGPU model and memory:\nno\nExact command to reproduce:\nbazel build  //tensorflow/contrib/lite:libtensorflowLite.so --crosstool_top=//external:android/crosstool --cpu=arm64-v8a --host_crosstool_top=@bazel_tools//tools/cpp:toolchain --cxxopt=\"-std=c++11\"", "body": "Hi , \r\nI building tensorflow lite shared library .\r\nI added flag -fopenmp to build_def.bzl to enable openmp:\r\n\r\n```\r\ndef tflite_copts():\r\n  \"\"\"Defines compile time flags.\"\"\"\r\n  copts = [\r\n      \"-DFARMHASH_NO_CXX_STRING\",\r\n  ] + select({\r\n          str(Label(\"//tensorflow:android_arm64\")): [\r\n              \"-std=c++11\",\r\n              \"-O3\",\r\n              \"-fopenmp\",\r\n          ],\r\n          str(Label(\"//tensorflow:android_arm\")): [\r\n              \"-mfpu=neon\",\r\n              \"-mfloat-abi=softfp\",\r\n              \"-std=c++11\",\r\n              \"-O3\",\r\n          ],\r\n          str(Label(\"//tensorflow:android_x86\")): [\r\n              \"-DGEMMLOWP_ALLOW_SLOW_SCALAR_FALLBACK\",\r\n          ],\r\n          str(Label(\"//tensorflow:ios_x86_64\")): [\r\n              \"-msse4.1\",\r\n          ],\r\n          \"//conditions:default\": [],\r\n  }) + select({\r\n      str(Label(\"//tensorflow:with_default_optimizations\")): [],\r\n      \"//conditions:default\": [\"-DGEMMLOWP_ALLOW_SLOW_SCALAR_FALLBACK\"],\r\n  })\r\n```\r\n\r\nAnd I got error compilation,\r\n\r\n```\r\ntensorflow/contrib/lite/kernels/BUILD:43:1: C++ compilation of rule '//tensorflow/contrib/lite/kernels:eigen_support' failed (Exit 1)\r\nIn file included from tensorflow/contrib/lite/kernels/eigen_support.cc:17:\r\nIn file included from ./third_party/eigen3/Eigen/Core:1:\r\nexternal/eigen_archive/Eigen/Core:275:10: fatal error: 'omp.h' file not found\r\n#include <omp.h>\r\n         ^\r\n1 error generated.\r\nTarget //tensorflow/contrib/lite:libtensorflowLite.so failed to build\r\n```\r\n\r\nPlease advise how to fix it.\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nyes,\r\n1. added openmp flag.\r\n2. I changed BUILD file in tensorflow lite to create shared library\r\n```\r\ncc_binary(\r\n    name = \"libtensorflowLite.so\",\r\n    linkshared=1,\r\n\r\n    deps = [\r\n        \":framework\",\r\n\t\"//tensorflow/contrib/lite/kernels:builtin_ops\"\r\n    ],\r\n)\r\n```\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nUbuntu 16\r\n- **TensorFlow installed from (source or binary)**:\r\nsources\r\n- **TensorFlow version (use command below)**:\r\nmaster\r\n- **Python version**: \r\n2.7\r\n- **Bazel version (if compiling from source)**:\r\n0.10\r\n- **GCC/Compiler version (if compiling from source)**:\r\nlatest\r\n- **CUDA/cuDNN version**:\r\nno\r\n- **GPU model and memory**:\r\nno\r\n- **Exact command to reproduce**:\r\n`bazel build  //tensorflow/contrib/lite:libtensorflowLite.so --crosstool_top=//external:android/crosstool --cpu=arm64-v8a --host_crosstool_top=@bazel_tools//tools/cpp:toolchain --cxxopt=\"-std=c++11\"`\r\n"}