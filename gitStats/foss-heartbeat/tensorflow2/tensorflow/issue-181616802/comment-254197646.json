{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/254197646", "html_url": "https://github.com/tensorflow/tensorflow/issues/4814#issuecomment-254197646", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4814", "id": 254197646, "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDE5NzY0Ng==", "user": {"login": "AshishBora", "id": 4586769, "node_id": "MDQ6VXNlcjQ1ODY3Njk=", "avatar_url": "https://avatars0.githubusercontent.com/u/4586769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AshishBora", "html_url": "https://github.com/AshishBora", "followers_url": "https://api.github.com/users/AshishBora/followers", "following_url": "https://api.github.com/users/AshishBora/following{/other_user}", "gists_url": "https://api.github.com/users/AshishBora/gists{/gist_id}", "starred_url": "https://api.github.com/users/AshishBora/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AshishBora/subscriptions", "organizations_url": "https://api.github.com/users/AshishBora/orgs", "repos_url": "https://api.github.com/users/AshishBora/repos", "events_url": "https://api.github.com/users/AshishBora/events{/privacy}", "received_events_url": "https://api.github.com/users/AshishBora/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-17T12:48:14Z", "updated_at": "2016-10-17T19:34:48Z", "author_association": "NONE", "body_html": "<p>Streaming metrics add two local variables <code>total</code> and <code>count</code>. You can find and reset them to get the required behavior. Please see the example below. Hope this helps.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\nvalue <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0.1</span>\n<span class=\"pl-k\">with</span> tf.name_scope(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>foo<span class=\"pl-pds\">'</span></span>):\n    mean_value, update_op <span class=\"pl-k\">=</span> tf.contrib.metrics.streaming_mean(value)\n\ninit_op <span class=\"pl-k\">=</span> [tf.initialize_variables(tf.local_variables())]\nstream_vars <span class=\"pl-k\">=</span> [i <span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> tf.local_variables() <span class=\"pl-k\">if</span> i.name.split(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>/<span class=\"pl-pds\">'</span></span>)[<span class=\"pl-c1\">0</span>] <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>foo<span class=\"pl-pds\">'</span></span>]\nreset_op <span class=\"pl-k\">=</span> [tf.initialize_variables(stream_vars)]\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    sess.run(init_op)\n    <span class=\"pl-k\">for</span> j <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">3</span>):\n        <span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">9</span>):\n            _, total, count <span class=\"pl-k\">=</span> sess.run([update_op] <span class=\"pl-k\">+</span> stream_vars) \n            mean_val <span class=\"pl-k\">=</span> sess.run([mean_value])\n            <span class=\"pl-c1\">print</span> total, count, mean_val\n        sess.run(reset_op)\n        <span class=\"pl-c1\">print</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span><span class=\"pl-pds\">'</span></span></pre></div>", "body_text": "Streaming metrics add two local variables total and count. You can find and reset them to get the required behavior. Please see the example below. Hope this helps.\nimport tensorflow as tf\n\nvalue = 0.1\nwith tf.name_scope('foo'):\n    mean_value, update_op = tf.contrib.metrics.streaming_mean(value)\n\ninit_op = [tf.initialize_variables(tf.local_variables())]\nstream_vars = [i for i in tf.local_variables() if i.name.split('/')[0] == 'foo']\nreset_op = [tf.initialize_variables(stream_vars)]\nwith tf.Session() as sess:\n    sess.run(init_op)\n    for j in range(3):\n        for i in range(9):\n            _, total, count = sess.run([update_op] + stream_vars) \n            mean_val = sess.run([mean_value])\n            print total, count, mean_val\n        sess.run(reset_op)\n        print ''", "body": "Streaming metrics add two local variables `total` and `count`. You can find and reset them to get the required behavior. Please see the example below. Hope this helps.\n\n``` python\nimport tensorflow as tf\n\nvalue = 0.1\nwith tf.name_scope('foo'):\n    mean_value, update_op = tf.contrib.metrics.streaming_mean(value)\n\ninit_op = [tf.initialize_variables(tf.local_variables())]\nstream_vars = [i for i in tf.local_variables() if i.name.split('/')[0] == 'foo']\nreset_op = [tf.initialize_variables(stream_vars)]\nwith tf.Session() as sess:\n    sess.run(init_op)\n    for j in range(3):\n        for i in range(9):\n            _, total, count = sess.run([update_op] + stream_vars) \n            mean_val = sess.run([mean_value])\n            print total, count, mean_val\n        sess.run(reset_op)\n        print ''\n```\n"}