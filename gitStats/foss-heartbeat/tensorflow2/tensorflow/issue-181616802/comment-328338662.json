{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/328338662", "html_url": "https://github.com/tensorflow/tensorflow/issues/4814#issuecomment-328338662", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4814", "id": 328338662, "node_id": "MDEyOklzc3VlQ29tbWVudDMyODMzODY2Mg==", "user": {"login": "shoeffner", "id": 1836815, "node_id": "MDQ6VXNlcjE4MzY4MTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1836815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shoeffner", "html_url": "https://github.com/shoeffner", "followers_url": "https://api.github.com/users/shoeffner/followers", "following_url": "https://api.github.com/users/shoeffner/following{/other_user}", "gists_url": "https://api.github.com/users/shoeffner/gists{/gist_id}", "starred_url": "https://api.github.com/users/shoeffner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shoeffner/subscriptions", "organizations_url": "https://api.github.com/users/shoeffner/orgs", "repos_url": "https://api.github.com/users/shoeffner/repos", "events_url": "https://api.github.com/users/shoeffner/events{/privacy}", "received_events_url": "https://api.github.com/users/shoeffner/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-10T12:11:34Z", "updated_at": "2017-09-10T12:12:09Z", "author_association": "NONE", "body_html": "<p>You are doing what I did wrong in the first place: You are using the <code>tf.local_variables_initializer()</code>. Try using another reset op which only resets the variables you need, e.g. by selecting the variables you need:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">with</span> tf.variable_scope(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>reset_metrics_accuracy_scope<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">as</span> scope:\n    v, op <span class=\"pl-k\">=</span> tf.metrics.accuracy(pred, label)\n    <span class=\"pl-c1\">vars</span> <span class=\"pl-k\">=</span> tf.contrib.framework.get_variables(scope, <span class=\"pl-v\">collection</span><span class=\"pl-k\">=</span>tf.GraphKeys.<span class=\"pl-c1\">LOCAL_VARIABLES</span>)\n    reset_op <span class=\"pl-k\">=</span> tf.variables_initializer(<span class=\"pl-c1\">vars</span>)</pre></div>\n<p>You would then call <code>sess.run(op)</code> whenever your metric should be updated, <code>sess.run(reset_op)</code> whenever you want to reset it, and <code>sess.run(v)</code> whenever you want to know its value.</p>", "body_text": "You are doing what I did wrong in the first place: You are using the tf.local_variables_initializer(). Try using another reset op which only resets the variables you need, e.g. by selecting the variables you need:\nwith tf.variable_scope(\"reset_metrics_accuracy_scope\") as scope:\n    v, op = tf.metrics.accuracy(pred, label)\n    vars = tf.contrib.framework.get_variables(scope, collection=tf.GraphKeys.LOCAL_VARIABLES)\n    reset_op = tf.variables_initializer(vars)\nYou would then call sess.run(op) whenever your metric should be updated, sess.run(reset_op) whenever you want to reset it, and sess.run(v) whenever you want to know its value.", "body": "You are doing what I did wrong in the first place: You are using the `tf.local_variables_initializer()`. Try using another reset op which only resets the variables you need, e.g. by selecting the variables you need:\r\n\r\n```python\r\nwith tf.variable_scope(\"reset_metrics_accuracy_scope\") as scope:\r\n    v, op = tf.metrics.accuracy(pred, label)\r\n    vars = tf.contrib.framework.get_variables(scope, collection=tf.GraphKeys.LOCAL_VARIABLES)\r\n    reset_op = tf.variables_initializer(vars)\r\n```\r\n\r\nYou would then call `sess.run(op)` whenever your metric should be updated, `sess.run(reset_op)` whenever you want to reset it, and `sess.run(v)` whenever you want to know its value."}