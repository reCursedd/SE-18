{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18819", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18819/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18819/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18819/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18819", "id": 317085851, "node_id": "MDU6SXNzdWUzMTcwODU4NTE=", "number": 18819, "title": "[Error] Failed precondition: Table not initialized.", "user": {"login": "formath", "id": 6040127, "node_id": "MDQ6VXNlcjYwNDAxMjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/6040127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/formath", "html_url": "https://github.com/formath", "followers_url": "https://api.github.com/users/formath/followers", "following_url": "https://api.github.com/users/formath/following{/other_user}", "gists_url": "https://api.github.com/users/formath/gists{/gist_id}", "starred_url": "https://api.github.com/users/formath/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/formath/subscriptions", "organizations_url": "https://api.github.com/users/formath/orgs", "repos_url": "https://api.github.com/users/formath/repos", "events_url": "https://api.github.com/users/formath/events{/privacy}", "received_events_url": "https://api.github.com/users/formath/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-24T06:25:32Z", "updated_at": "2018-11-13T10:14:01Z", "closed_at": "2018-04-24T08:29:50Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Env:<br>\ntf version 1.7.0<br>\nmacOS CPU</p>\n<p>I uses <code>lookup_table</code> in my model. I freeze the model in <code>python</code> after training and then load it and do prediction in <code>c++</code>. When predicting, an error occurs.</p>\n<pre><code>Failed precondition: Table not initialized.\n\t [[Node: forward/string_to_index_4_Lookup/hash_table_Lookup = LookupTableFindV2[Tin=DT_INT64, Tout=DT_INT64, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](forward/string_to_index_4/hash_table, _arg_input/sparse_179/id/Placeholder_0_6, forward/string_to_index/hash_table/Const)]]\n</code></pre>\n<p>However, I have found <code>table_init</code> op in the frozen model protobuf. The error indicates those op not executed in <code>c++</code> code. How to execute <code>sess.run(tf.tables_initializer())</code> in <code>c++</code>?</p>\n<pre><code>  name: \"init_all_tables\"\n  name: \"forward/string_to_index/hash_table/table_init\"\n  name: \"forward/string_to_index_1/hash_table/table_init\"\n  name: \"forward/string_to_index_2/hash_table/table_init\"\n  name: \"forward/string_to_index_3/hash_table/table_init\"\n  name: \"forward/string_to_index_4/hash_table/table_init\"\n</code></pre>\n<p>Main <code>c++</code> code:</p>\n<pre><code>  Session* session;\n  Status status = NewSession(SessionOptions(), &amp;session);\n  if (!status.ok()) {\n    std::cerr &lt;&lt; status.ToString() &lt;&lt; \"\\n\";\n    return 1;\n  } else {\n    std::cout &lt;&lt; \"Session created successfully\" &lt;&lt; std::endl;\n  }\n\n  // Load graph protobuf\n  GraphDef graph_def;\n  std::string graph_path = argv[2]; // the path to frozen model protobuf\n  status = ReadBinaryProto(Env::Default(), graph_path, &amp;graph_def);\n  if (!status.ok()) {\n    std::cerr &lt;&lt; status.ToString() &lt;&lt; std::endl;\n  } else {\n    std::cout &lt;&lt; \"Load graph protobuf successfully\" &lt;&lt; std::endl;\n  }\n\n  // Add the graph to the session\n  status = session-&gt;Create(graph_def);\n  if (!status.ok()) {\n    std::cerr &lt;&lt; status.ToString() &lt;&lt; std::endl;\n    return 1;\n  } else {\n    std::cout &lt;&lt; \"Add graph to session successfully\" &lt;&lt; std::endl;\n  }\n\n  // prepare inputs\n  std::vector&lt;std::pair&lt;std::string, Tensor&gt; &gt; inputs;\n  .....\n\n  // Run the session, evaluating our \"forward/predict/add\" operation from the graph\n  std::vector&lt;tensorflow::Tensor&gt; outputs;\n  status = session-&gt;Run(inputs, {\"forward/logit/add\"}, {}, &amp;outputs);\n  if (!status.ok()) {\n    std::cerr &lt;&lt; status.ToString() &lt;&lt; std::endl;\n    return 1;\n  } else {\n    std::cout &lt;&lt; \"Run session successfully\" &lt;&lt; std::endl;\n  }\n</code></pre>", "body_text": "Env:\ntf version 1.7.0\nmacOS CPU\nI uses lookup_table in my model. I freeze the model in python after training and then load it and do prediction in c++. When predicting, an error occurs.\nFailed precondition: Table not initialized.\n\t [[Node: forward/string_to_index_4_Lookup/hash_table_Lookup = LookupTableFindV2[Tin=DT_INT64, Tout=DT_INT64, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](forward/string_to_index_4/hash_table, _arg_input/sparse_179/id/Placeholder_0_6, forward/string_to_index/hash_table/Const)]]\n\nHowever, I have found table_init op in the frozen model protobuf. The error indicates those op not executed in c++ code. How to execute sess.run(tf.tables_initializer()) in c++?\n  name: \"init_all_tables\"\n  name: \"forward/string_to_index/hash_table/table_init\"\n  name: \"forward/string_to_index_1/hash_table/table_init\"\n  name: \"forward/string_to_index_2/hash_table/table_init\"\n  name: \"forward/string_to_index_3/hash_table/table_init\"\n  name: \"forward/string_to_index_4/hash_table/table_init\"\n\nMain c++ code:\n  Session* session;\n  Status status = NewSession(SessionOptions(), &session);\n  if (!status.ok()) {\n    std::cerr << status.ToString() << \"\\n\";\n    return 1;\n  } else {\n    std::cout << \"Session created successfully\" << std::endl;\n  }\n\n  // Load graph protobuf\n  GraphDef graph_def;\n  std::string graph_path = argv[2]; // the path to frozen model protobuf\n  status = ReadBinaryProto(Env::Default(), graph_path, &graph_def);\n  if (!status.ok()) {\n    std::cerr << status.ToString() << std::endl;\n  } else {\n    std::cout << \"Load graph protobuf successfully\" << std::endl;\n  }\n\n  // Add the graph to the session\n  status = session->Create(graph_def);\n  if (!status.ok()) {\n    std::cerr << status.ToString() << std::endl;\n    return 1;\n  } else {\n    std::cout << \"Add graph to session successfully\" << std::endl;\n  }\n\n  // prepare inputs\n  std::vector<std::pair<std::string, Tensor> > inputs;\n  .....\n\n  // Run the session, evaluating our \"forward/predict/add\" operation from the graph\n  std::vector<tensorflow::Tensor> outputs;\n  status = session->Run(inputs, {\"forward/logit/add\"}, {}, &outputs);\n  if (!status.ok()) {\n    std::cerr << status.ToString() << std::endl;\n    return 1;\n  } else {\n    std::cout << \"Run session successfully\" << std::endl;\n  }", "body": "Env:\r\n  tf version 1.7.0\r\n  macOS CPU\r\n\r\nI uses `lookup_table` in my model. I freeze the model in `python` after training and then load it and do prediction in `c++`. When predicting, an error occurs. \r\n```\r\nFailed precondition: Table not initialized.\r\n\t [[Node: forward/string_to_index_4_Lookup/hash_table_Lookup = LookupTableFindV2[Tin=DT_INT64, Tout=DT_INT64, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](forward/string_to_index_4/hash_table, _arg_input/sparse_179/id/Placeholder_0_6, forward/string_to_index/hash_table/Const)]]\r\n```\r\nHowever, I have found `table_init` op in the frozen model protobuf. The error indicates those op not executed in `c++` code. How to execute `sess.run(tf.tables_initializer())` in `c++`?\r\n```\r\n  name: \"init_all_tables\"\r\n  name: \"forward/string_to_index/hash_table/table_init\"\r\n  name: \"forward/string_to_index_1/hash_table/table_init\"\r\n  name: \"forward/string_to_index_2/hash_table/table_init\"\r\n  name: \"forward/string_to_index_3/hash_table/table_init\"\r\n  name: \"forward/string_to_index_4/hash_table/table_init\"\r\n```\r\n\r\nMain `c++` code:\r\n```\r\n  Session* session;\r\n  Status status = NewSession(SessionOptions(), &session);\r\n  if (!status.ok()) {\r\n    std::cerr << status.ToString() << \"\\n\";\r\n    return 1;\r\n  } else {\r\n    std::cout << \"Session created successfully\" << std::endl;\r\n  }\r\n\r\n  // Load graph protobuf\r\n  GraphDef graph_def;\r\n  std::string graph_path = argv[2]; // the path to frozen model protobuf\r\n  status = ReadBinaryProto(Env::Default(), graph_path, &graph_def);\r\n  if (!status.ok()) {\r\n    std::cerr << status.ToString() << std::endl;\r\n  } else {\r\n    std::cout << \"Load graph protobuf successfully\" << std::endl;\r\n  }\r\n\r\n  // Add the graph to the session\r\n  status = session->Create(graph_def);\r\n  if (!status.ok()) {\r\n    std::cerr << status.ToString() << std::endl;\r\n    return 1;\r\n  } else {\r\n    std::cout << \"Add graph to session successfully\" << std::endl;\r\n  }\r\n\r\n  // prepare inputs\r\n  std::vector<std::pair<std::string, Tensor> > inputs;\r\n  .....\r\n\r\n  // Run the session, evaluating our \"forward/predict/add\" operation from the graph\r\n  std::vector<tensorflow::Tensor> outputs;\r\n  status = session->Run(inputs, {\"forward/logit/add\"}, {}, &outputs);\r\n  if (!status.ok()) {\r\n    std::cerr << status.ToString() << std::endl;\r\n    return 1;\r\n  } else {\r\n    std::cout << \"Run session successfully\" << std::endl;\r\n  }\r\n```\r\n\r\n"}