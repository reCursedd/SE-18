{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10837", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10837/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10837/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10837/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10837", "id": 237051909, "node_id": "MDU6SXNzdWUyMzcwNTE5MDk=", "number": 10837, "title": "Feature Request: Placeholder support for being set from an Op", "user": {"login": "ahundt", "id": 55744, "node_id": "MDQ6VXNlcjU1NzQ0", "avatar_url": "https://avatars1.githubusercontent.com/u/55744?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahundt", "html_url": "https://github.com/ahundt", "followers_url": "https://api.github.com/users/ahundt/followers", "following_url": "https://api.github.com/users/ahundt/following{/other_user}", "gists_url": "https://api.github.com/users/ahundt/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahundt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahundt/subscriptions", "organizations_url": "https://api.github.com/users/ahundt/orgs", "repos_url": "https://api.github.com/users/ahundt/repos", "events_url": "https://api.github.com/users/ahundt/events{/privacy}", "received_events_url": "https://api.github.com/users/ahundt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 24, "created_at": "2017-06-19T23:29:58Z", "updated_at": "2018-06-30T16:34:31Z", "closed_at": "2018-06-30T16:34:31Z", "author_association": "NONE", "body_html": "<p>Update: I thought on this some more, and perhaps if tf.Variable could directly support being set from an op with the transfer happening entirely on the C++ side that might cleanly and simply solve the problem.</p>\n<p>Often it is not known immediately what kind of Op will be needed for input, but it would be preferable to specify that detail later without the overhead associated with transporting data in python.</p>\n<p>For example, it would be ideal to be able to define a full model for a task like ImageNet labeling with a LazyOp defined for the Input and Labels. Then later on the output of a <code>Dataset</code>, <code>RecordInput</code>, or <code>tf.placeholder</code> could be supplied to finalize the necessary connection.</p>\n<p>This request is based on the comments of <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=710255\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fchollet\">@fchollet</a> at <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"234993205\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/keras-team/keras/issues/6928\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/keras-team/keras/pull/6928/hovercard?comment_id=309552423&amp;comment_type=issue_comment\" href=\"https://github.com/keras-team/keras/pull/6928#issuecomment-309552423\">keras-team/keras#6928 (comment)</a>.</p>", "body_text": "Update: I thought on this some more, and perhaps if tf.Variable could directly support being set from an op with the transfer happening entirely on the C++ side that might cleanly and simply solve the problem.\nOften it is not known immediately what kind of Op will be needed for input, but it would be preferable to specify that detail later without the overhead associated with transporting data in python.\nFor example, it would be ideal to be able to define a full model for a task like ImageNet labeling with a LazyOp defined for the Input and Labels. Then later on the output of a Dataset, RecordInput, or tf.placeholder could be supplied to finalize the necessary connection.\nThis request is based on the comments of @fchollet at keras-team/keras#6928 (comment).", "body": "Update: I thought on this some more, and perhaps if tf.Variable could directly support being set from an op with the transfer happening entirely on the C++ side that might cleanly and simply solve the problem.\r\n\r\nOften it is not known immediately what kind of Op will be needed for input, but it would be preferable to specify that detail later without the overhead associated with transporting data in python. \r\n\r\nFor example, it would be ideal to be able to define a full model for a task like ImageNet labeling with a LazyOp defined for the Input and Labels. Then later on the output of a `Dataset`, `RecordInput`, or `tf.placeholder` could be supplied to finalize the necessary connection.\r\n\r\nThis request is based on the comments of @fchollet at https://github.com/fchollet/keras/pull/6928#issuecomment-309552423.\r\n\r\n"}