{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2463", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2463/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2463/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2463/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/2463", "id": 156144861, "node_id": "MDU6SXNzdWUxNTYxNDQ4NjE=", "number": 2463, "title": "Using `tf.nn.rnn_cell.LSTMCell` with `tf.nn.rnn` breaks when `state_is_tuple` is True", "user": {"login": "mouradmourafiq", "id": 1261626, "node_id": "MDQ6VXNlcjEyNjE2MjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1261626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mouradmourafiq", "html_url": "https://github.com/mouradmourafiq", "followers_url": "https://api.github.com/users/mouradmourafiq/followers", "following_url": "https://api.github.com/users/mouradmourafiq/following{/other_user}", "gists_url": "https://api.github.com/users/mouradmourafiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/mouradmourafiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mouradmourafiq/subscriptions", "organizations_url": "https://api.github.com/users/mouradmourafiq/orgs", "repos_url": "https://api.github.com/users/mouradmourafiq/repos", "events_url": "https://api.github.com/users/mouradmourafiq/events{/privacy}", "received_events_url": "https://api.github.com/users/mouradmourafiq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2016-05-22T10:04:56Z", "updated_at": "2017-04-17T05:39:19Z", "closed_at": "2016-06-10T18:23:04Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>Environment info</h3>\n<p>Operating System: mac</p>\n<p>If installed from sources, provide the commit hash: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/7d9ab3eb485e6eb1778bad4ef01a1cd95b2d22d9/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/7d9ab3eb485e6eb1778bad4ef01a1cd95b2d22d9\"><tt>7d9ab3e</tt></a></p>\n<h3>Steps to reproduce</h3>\n<p>Creating an rnn based on a list of cell specified by <code>MultiRNNCell</code> breaks at the <code>zero_state</code> function:</p>\n<div class=\"highlight highlight-source-python\"><pre>num_units <span class=\"pl-k\">=</span> <span class=\"pl-c1\">3</span>\ninput_size <span class=\"pl-k\">=</span> <span class=\"pl-c1\">5</span>\nnum_proj <span class=\"pl-k\">=</span> <span class=\"pl-c1\">4</span>\nmax_length <span class=\"pl-k\">=</span> <span class=\"pl-c1\">8</span>\nsequence_length <span class=\"pl-k\">=</span> [<span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">6</span>]\ninitializer <span class=\"pl-k\">=</span> tf.random_uniform_initializer(<span class=\"pl-k\">-</span><span class=\"pl-c1\">0.01</span>, <span class=\"pl-c1\">0.01</span>)\ninputs <span class=\"pl-k\">=</span> max_length <span class=\"pl-k\">*</span> [tf.placeholder(tf.float32, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">None</span>, input_size))]\ninputs_c <span class=\"pl-k\">=</span> tf.pack(inputs)\ncell <span class=\"pl-k\">=</span> tf.nn.rnn_cell.LSTMCell(num_units, input_size, <span class=\"pl-v\">use_peepholes</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>,\n                               <span class=\"pl-v\">num_proj</span><span class=\"pl-k\">=</span>num_proj, <span class=\"pl-v\">initializer</span><span class=\"pl-k\">=</span>initializer, \n                               <span class=\"pl-v\">state_is_tuple</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\ncells <span class=\"pl-k\">=</span> tf.nn.rnn_cell.MultiRNNCell([cell] <span class=\"pl-k\">*</span> <span class=\"pl-c1\">2</span>, <span class=\"pl-v\">state_is_tuple</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\noutputs_static, state_static <span class=\"pl-k\">=</span> tf.nn.rnn(cells, inputs, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32, \n                                         <span class=\"pl-v\">sequence_length</span><span class=\"pl-k\">=</span>sequence_length)</pre></div>\n<p>The same model definition would work if <code>state_is_tuple=False</code>, the code break at this <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/rnn_cell.py#L107\">line</a></p>\n<p>The same code would work if we pass the cell directly to <code>tf.nn.rnn</code> i.e. without using <code>tf.nn.rnn_cell.MultiRNNCell</code>, the reason is that <code>tf.nn.rnn_cell.MultiRNNCell</code> would have a <code>state_size</code> value as tuple of tuples, in my example the value of the <code>state_size</code> is <code>&lt;type 'tuple'&gt;: ((3, 4), (3, 4))</code></p>\n<h3>What have you tried?</h3>\n<p>.1. Tried the same model definition without <code>state_is_tuple=False</code>, which works but shows a deprication warning.</p>\n<div class=\"highlight highlight-source-python\"><pre>num_units <span class=\"pl-k\">=</span> <span class=\"pl-c1\">3</span>\ninput_size <span class=\"pl-k\">=</span> <span class=\"pl-c1\">5</span>\nnum_proj <span class=\"pl-k\">=</span> <span class=\"pl-c1\">4</span>\nmax_length <span class=\"pl-k\">=</span> <span class=\"pl-c1\">8</span>\nsequence_length <span class=\"pl-k\">=</span> [<span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">6</span>]\ninitializer <span class=\"pl-k\">=</span> tf.random_uniform_initializer(<span class=\"pl-k\">-</span><span class=\"pl-c1\">0.01</span>, <span class=\"pl-c1\">0.01</span>)\ninputs <span class=\"pl-k\">=</span> max_length <span class=\"pl-k\">*</span> [tf.placeholder(tf.float32, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">None</span>, input_size))]\ninputs_c <span class=\"pl-k\">=</span> tf.pack(inputs)\ncell <span class=\"pl-k\">=</span> tf.nn.rnn_cell.LSTMCell(num_units, input_size, <span class=\"pl-v\">use_peepholes</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>,\n                               <span class=\"pl-v\">num_proj</span><span class=\"pl-k\">=</span>num_proj, <span class=\"pl-v\">initializer</span><span class=\"pl-k\">=</span>initializer)\ncells <span class=\"pl-k\">=</span> tf.nn.rnn_cell.MultiRNNCell([cell])\noutputs_static, state_static <span class=\"pl-k\">=</span> tf.nn.rnn(cells, inputs, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32, \n                                         <span class=\"pl-v\">sequence_length</span><span class=\"pl-k\">=</span>sequence_length)</pre></div>\n<p>.2. Tried the same model definition with <code>state_is_tuple=True</code> and without <code>tf.nn.rnn_cell.MultiRNNCell</code>, which works.</p>\n<div class=\"highlight highlight-source-python\"><pre>num_units <span class=\"pl-k\">=</span> <span class=\"pl-c1\">3</span>\ninput_size <span class=\"pl-k\">=</span> <span class=\"pl-c1\">5</span>\nnum_proj <span class=\"pl-k\">=</span> <span class=\"pl-c1\">4</span>\nmax_length <span class=\"pl-k\">=</span> <span class=\"pl-c1\">8</span>\nsequence_length <span class=\"pl-k\">=</span> [<span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">6</span>]\ninitializer <span class=\"pl-k\">=</span> tf.random_uniform_initializer(<span class=\"pl-k\">-</span><span class=\"pl-c1\">0.01</span>, <span class=\"pl-c1\">0.01</span>)\ninputs <span class=\"pl-k\">=</span> max_length <span class=\"pl-k\">*</span> [tf.placeholder(tf.float32, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">None</span>, input_size))]\ninputs_c <span class=\"pl-k\">=</span> tf.pack(inputs)\ncell <span class=\"pl-k\">=</span> tf.nn.rnn_cell.LSTMCell(num_units, input_size, <span class=\"pl-v\">use_peepholes</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>,\n                               <span class=\"pl-v\">num_proj</span><span class=\"pl-k\">=</span>num_proj, <span class=\"pl-v\">initializer</span><span class=\"pl-k\">=</span>initializer, \n                               <span class=\"pl-v\">state_is_tuple</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\noutputs_static, state_static <span class=\"pl-k\">=</span> tf.nn.rnn(cell, inputs, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32, \n                                         <span class=\"pl-v\">sequence_length</span><span class=\"pl-k\">=</span>sequence_length)</pre></div>\n<h3>Logs or other output that would be helpful</h3>\n<pre><code>  File \"/Users/mourad/.virtualenvs/ca/lib/python2.7/site-packages/tensorflow/python/ops/rnn.py\", line 123, in rnn\n    state = cell.zero_state(batch_size, dtype)\n  File \"/Users/mourad/.virtualenvs/ca/lib/python2.7/site-packages/tensorflow/python/ops/rnn_cell.py\", line 109, in zero_state\n    for s in state_size)\n  File \"/Users/mourad/.virtualenvs/ca/lib/python2.7/site-packages/tensorflow/python/ops/rnn_cell.py\", line 109, in &lt;genexpr&gt;\n    for s in state_size)\n  File \"/Users/mourad/.virtualenvs/ca/lib/python2.7/site-packages/tensorflow/python/ops/array_ops.py\", line 249, in pack\n    return gen_array_ops._pack(values, name=name)\n  File \"/Users/mourad/.virtualenvs/ca/lib/python2.7/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 1126, in _pack\n    result = _op_def_lib.apply_op(\"Pack\", values=values, name=name)\n  File \"/Users/mourad/.virtualenvs/ca/lib/python2.7/site-packages/tensorflow/python/ops/op_def_library.py\", line 704, in apply_op\n    op_def=op_def)\n  File \"/Users/mourad/.virtualenvs/ca/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 2242, in create_op\n    set_shapes_for_outputs(ret)\n  File \"/Users/mourad/.virtualenvs/ca/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1696, in set_shapes_for_outputs\n    shapes = shape_func(op)\n  File \"/Users/mourad/.virtualenvs/ca/lib/python2.7/site-packages/tensorflow/python/ops/array_ops.py\", line 439, in _PackShape\n    input_shape = input_shape.merge_with(inp.get_shape())\n  File \"/Users/mourad/.virtualenvs/ca/lib/python2.7/site-packages/tensorflow/python/framework/tensor_shape.py\", line 554, in merge_with\n    (self, other))\nValueError: Shapes () and (2,) are not compatible\n</code></pre>", "body_text": "Environment info\nOperating System: mac\nIf installed from sources, provide the commit hash: 7d9ab3e\nSteps to reproduce\nCreating an rnn based on a list of cell specified by MultiRNNCell breaks at the zero_state function:\nnum_units = 3\ninput_size = 5\nnum_proj = 4\nmax_length = 8\nsequence_length = [4, 6]\ninitializer = tf.random_uniform_initializer(-0.01, 0.01)\ninputs = max_length * [tf.placeholder(tf.float32, shape=(None, input_size))]\ninputs_c = tf.pack(inputs)\ncell = tf.nn.rnn_cell.LSTMCell(num_units, input_size, use_peepholes=True,\n                               num_proj=num_proj, initializer=initializer, \n                               state_is_tuple=True)\ncells = tf.nn.rnn_cell.MultiRNNCell([cell] * 2, state_is_tuple=True)\noutputs_static, state_static = tf.nn.rnn(cells, inputs, dtype=tf.float32, \n                                         sequence_length=sequence_length)\nThe same model definition would work if state_is_tuple=False, the code break at this line\nThe same code would work if we pass the cell directly to tf.nn.rnn i.e. without using tf.nn.rnn_cell.MultiRNNCell, the reason is that tf.nn.rnn_cell.MultiRNNCell would have a state_size value as tuple of tuples, in my example the value of the state_size is <type 'tuple'>: ((3, 4), (3, 4))\nWhat have you tried?\n.1. Tried the same model definition without state_is_tuple=False, which works but shows a deprication warning.\nnum_units = 3\ninput_size = 5\nnum_proj = 4\nmax_length = 8\nsequence_length = [4, 6]\ninitializer = tf.random_uniform_initializer(-0.01, 0.01)\ninputs = max_length * [tf.placeholder(tf.float32, shape=(None, input_size))]\ninputs_c = tf.pack(inputs)\ncell = tf.nn.rnn_cell.LSTMCell(num_units, input_size, use_peepholes=True,\n                               num_proj=num_proj, initializer=initializer)\ncells = tf.nn.rnn_cell.MultiRNNCell([cell])\noutputs_static, state_static = tf.nn.rnn(cells, inputs, dtype=tf.float32, \n                                         sequence_length=sequence_length)\n.2. Tried the same model definition with state_is_tuple=True and without tf.nn.rnn_cell.MultiRNNCell, which works.\nnum_units = 3\ninput_size = 5\nnum_proj = 4\nmax_length = 8\nsequence_length = [4, 6]\ninitializer = tf.random_uniform_initializer(-0.01, 0.01)\ninputs = max_length * [tf.placeholder(tf.float32, shape=(None, input_size))]\ninputs_c = tf.pack(inputs)\ncell = tf.nn.rnn_cell.LSTMCell(num_units, input_size, use_peepholes=True,\n                               num_proj=num_proj, initializer=initializer, \n                               state_is_tuple=True)\noutputs_static, state_static = tf.nn.rnn(cell, inputs, dtype=tf.float32, \n                                         sequence_length=sequence_length)\nLogs or other output that would be helpful\n  File \"/Users/mourad/.virtualenvs/ca/lib/python2.7/site-packages/tensorflow/python/ops/rnn.py\", line 123, in rnn\n    state = cell.zero_state(batch_size, dtype)\n  File \"/Users/mourad/.virtualenvs/ca/lib/python2.7/site-packages/tensorflow/python/ops/rnn_cell.py\", line 109, in zero_state\n    for s in state_size)\n  File \"/Users/mourad/.virtualenvs/ca/lib/python2.7/site-packages/tensorflow/python/ops/rnn_cell.py\", line 109, in <genexpr>\n    for s in state_size)\n  File \"/Users/mourad/.virtualenvs/ca/lib/python2.7/site-packages/tensorflow/python/ops/array_ops.py\", line 249, in pack\n    return gen_array_ops._pack(values, name=name)\n  File \"/Users/mourad/.virtualenvs/ca/lib/python2.7/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 1126, in _pack\n    result = _op_def_lib.apply_op(\"Pack\", values=values, name=name)\n  File \"/Users/mourad/.virtualenvs/ca/lib/python2.7/site-packages/tensorflow/python/ops/op_def_library.py\", line 704, in apply_op\n    op_def=op_def)\n  File \"/Users/mourad/.virtualenvs/ca/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 2242, in create_op\n    set_shapes_for_outputs(ret)\n  File \"/Users/mourad/.virtualenvs/ca/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1696, in set_shapes_for_outputs\n    shapes = shape_func(op)\n  File \"/Users/mourad/.virtualenvs/ca/lib/python2.7/site-packages/tensorflow/python/ops/array_ops.py\", line 439, in _PackShape\n    input_shape = input_shape.merge_with(inp.get_shape())\n  File \"/Users/mourad/.virtualenvs/ca/lib/python2.7/site-packages/tensorflow/python/framework/tensor_shape.py\", line 554, in merge_with\n    (self, other))\nValueError: Shapes () and (2,) are not compatible", "body": "### Environment info\n\nOperating System: mac\n\nIf installed from sources, provide the commit hash: 7d9ab3eb485e6eb1778bad4ef01a1cd95b2d22d9\n### Steps to reproduce\n\nCreating an rnn based on a list of cell specified by `MultiRNNCell` breaks at the `zero_state` function:\n\n``` python\nnum_units = 3\ninput_size = 5\nnum_proj = 4\nmax_length = 8\nsequence_length = [4, 6]\ninitializer = tf.random_uniform_initializer(-0.01, 0.01)\ninputs = max_length * [tf.placeholder(tf.float32, shape=(None, input_size))]\ninputs_c = tf.pack(inputs)\ncell = tf.nn.rnn_cell.LSTMCell(num_units, input_size, use_peepholes=True,\n                               num_proj=num_proj, initializer=initializer, \n                               state_is_tuple=True)\ncells = tf.nn.rnn_cell.MultiRNNCell([cell] * 2, state_is_tuple=True)\noutputs_static, state_static = tf.nn.rnn(cells, inputs, dtype=tf.float32, \n                                         sequence_length=sequence_length)\n```\n\nThe same model definition would work if `state_is_tuple=False`, the code break at this [line](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/rnn_cell.py#L107)\n\nThe same code would work if we pass the cell directly to `tf.nn.rnn` i.e. without using `tf.nn.rnn_cell.MultiRNNCell`, the reason is that `tf.nn.rnn_cell.MultiRNNCell` would have a `state_size` value as tuple of tuples, in my example the value of the `state_size` is `<type 'tuple'>: ((3, 4), (3, 4))`\n### What have you tried?\n\n.1. Tried the same model definition without `state_is_tuple=False`, which works but shows a deprication warning.\n\n``` python\nnum_units = 3\ninput_size = 5\nnum_proj = 4\nmax_length = 8\nsequence_length = [4, 6]\ninitializer = tf.random_uniform_initializer(-0.01, 0.01)\ninputs = max_length * [tf.placeholder(tf.float32, shape=(None, input_size))]\ninputs_c = tf.pack(inputs)\ncell = tf.nn.rnn_cell.LSTMCell(num_units, input_size, use_peepholes=True,\n                               num_proj=num_proj, initializer=initializer)\ncells = tf.nn.rnn_cell.MultiRNNCell([cell])\noutputs_static, state_static = tf.nn.rnn(cells, inputs, dtype=tf.float32, \n                                         sequence_length=sequence_length)\n```\n\n.2. Tried the same model definition with `state_is_tuple=True` and without `tf.nn.rnn_cell.MultiRNNCell`, which works.\n\n``` python\nnum_units = 3\ninput_size = 5\nnum_proj = 4\nmax_length = 8\nsequence_length = [4, 6]\ninitializer = tf.random_uniform_initializer(-0.01, 0.01)\ninputs = max_length * [tf.placeholder(tf.float32, shape=(None, input_size))]\ninputs_c = tf.pack(inputs)\ncell = tf.nn.rnn_cell.LSTMCell(num_units, input_size, use_peepholes=True,\n                               num_proj=num_proj, initializer=initializer, \n                               state_is_tuple=True)\noutputs_static, state_static = tf.nn.rnn(cell, inputs, dtype=tf.float32, \n                                         sequence_length=sequence_length)\n```\n### Logs or other output that would be helpful\n\n```\n  File \"/Users/mourad/.virtualenvs/ca/lib/python2.7/site-packages/tensorflow/python/ops/rnn.py\", line 123, in rnn\n    state = cell.zero_state(batch_size, dtype)\n  File \"/Users/mourad/.virtualenvs/ca/lib/python2.7/site-packages/tensorflow/python/ops/rnn_cell.py\", line 109, in zero_state\n    for s in state_size)\n  File \"/Users/mourad/.virtualenvs/ca/lib/python2.7/site-packages/tensorflow/python/ops/rnn_cell.py\", line 109, in <genexpr>\n    for s in state_size)\n  File \"/Users/mourad/.virtualenvs/ca/lib/python2.7/site-packages/tensorflow/python/ops/array_ops.py\", line 249, in pack\n    return gen_array_ops._pack(values, name=name)\n  File \"/Users/mourad/.virtualenvs/ca/lib/python2.7/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 1126, in _pack\n    result = _op_def_lib.apply_op(\"Pack\", values=values, name=name)\n  File \"/Users/mourad/.virtualenvs/ca/lib/python2.7/site-packages/tensorflow/python/ops/op_def_library.py\", line 704, in apply_op\n    op_def=op_def)\n  File \"/Users/mourad/.virtualenvs/ca/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 2242, in create_op\n    set_shapes_for_outputs(ret)\n  File \"/Users/mourad/.virtualenvs/ca/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1696, in set_shapes_for_outputs\n    shapes = shape_func(op)\n  File \"/Users/mourad/.virtualenvs/ca/lib/python2.7/site-packages/tensorflow/python/ops/array_ops.py\", line 439, in _PackShape\n    input_shape = input_shape.merge_with(inp.get_shape())\n  File \"/Users/mourad/.virtualenvs/ca/lib/python2.7/site-packages/tensorflow/python/framework/tensor_shape.py\", line 554, in merge_with\n    (self, other))\nValueError: Shapes () and (2,) are not compatible\n```\n"}