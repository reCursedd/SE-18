{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6509", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6509/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6509/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6509/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/6509", "id": 197627477, "node_id": "MDU6SXNzdWUxOTc2Mjc0Nzc=", "number": 6509, "title": "Issue with tf.one_hot() in 0.12.0 in GPU mode (CUDA_ERROR_ILLEGAL_ADDRESS)", "user": {"login": "SergeyBykov1", "id": 8685394, "node_id": "MDQ6VXNlcjg2ODUzOTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/8685394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SergeyBykov1", "html_url": "https://github.com/SergeyBykov1", "followers_url": "https://api.github.com/users/SergeyBykov1/followers", "following_url": "https://api.github.com/users/SergeyBykov1/following{/other_user}", "gists_url": "https://api.github.com/users/SergeyBykov1/gists{/gist_id}", "starred_url": "https://api.github.com/users/SergeyBykov1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SergeyBykov1/subscriptions", "organizations_url": "https://api.github.com/users/SergeyBykov1/orgs", "repos_url": "https://api.github.com/users/SergeyBykov1/repos", "events_url": "https://api.github.com/users/SergeyBykov1/events{/privacy}", "received_events_url": "https://api.github.com/users/SergeyBykov1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 33, "created_at": "2016-12-26T23:47:13Z", "updated_at": "2017-08-31T17:26:59Z", "closed_at": "2017-02-22T23:33:03Z", "author_association": "NONE", "body_html": "<p>I'm using a LeNet-5 mnist example from Udacity's course. Link to the source code is below.<br>\nTraining works ok on a CPU (config = tf.ConfigProto(device_count = {'GPU': 0})),<br>\nbut fails in a GPU mode with the following 'CUDA_ERROR_ILLEGAL_ADDRESS' error:</p>\n<blockquote>\n<p>I c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:885] Found device 0 with properties:<br>\nname: GeForce GTX 1060 6GB<br>\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.7845<br>\npciBusID 0000:01:00.0<br>\nTotal memory: 6.00GiB<br>\nFree memory: 5.01GiB<br>\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:906] DMA: 0<br>\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:916] 0:   Y<br>\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)<br>\nTraining...<br>\nE c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\stream_executor\\cuda\\cuda_event.cc:49] Error polling for event status: failed to query event: <strong>CUDA_ERROR_ILLEGAL_ADDRESS</strong><br>\nF c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_event_mgr.cc:198] Unexpected Event status: 1</p>\n</blockquote>\n<p>I have reproduced same error on two setups.<br>\nEnvironment 1 (Home PC):</p>\n<ul>\n<li>windows 10;</li>\n<li>latest anaconda 4.2.0, python 3.5;</li>\n<li>cuda 8</li>\n<li>cudnn 5.1 (for win10)</li>\n<li>tensorflow 0.12.0 gpu (<a href=\"https://storage.googleapis.com/tensorflow/windows/gpu/tensorflow_gpu-0.12.0-cp35-cp35m-win_amd64.whl\" rel=\"nofollow\">https://storage.googleapis.com/tensorflow/windows/gpu/tensorflow_gpu-0.12.0-cp35-cp35m-win_amd64.whl</a>)</li>\n<li>GeForce GTX 1060 6Gb</li>\n</ul>\n<p>Environment 2 (Work PC):</p>\n<ul>\n<li>windows 7;</li>\n<li>latest anaconda 4.2.0, python 3.5;</li>\n<li>cuda 8</li>\n<li>cudnn 5.1 (for win7)</li>\n<li>tensorflow 0.12.0 gpu (<a href=\"https://storage.googleapis.com/tensorflow/windows/gpu/tensorflow_gpu-0.12.0-cp35-cp35m-win_amd64.whl\" rel=\"nofollow\">https://storage.googleapis.com/tensorflow/windows/gpu/tensorflow_gpu-0.12.0-cp35-cp35m-win_amd64.whl</a>)</li>\n<li>GeForce GTX 660 3Gb</li>\n</ul>\n<p>I'm sharing two scripts with minor changes that allow a workaround:<br>\n<a href=\"https://drive.google.com/open?id=0B6jkkqMOGy5cNHh3TVpxU283Ykk\" rel=\"nofollow\">https://drive.google.com/open?id=0B6jkkqMOGy5cNHh3TVpxU283Ykk</a></p>\n<p>Main difference:<br>\nScript from example that crashes (LabLenetBad.py) uses raw mnist label data with the tf.one_hot() call.<br>\nThe workaround (LabLenetGood.py) reads mnist data with (one_hot=True) flag and does not use tf.one_hot() call on the Y placeholder.</p>\n<p>I think that tf.one_hot does not work properly on the gpu.</p>", "body_text": "I'm using a LeNet-5 mnist example from Udacity's course. Link to the source code is below.\nTraining works ok on a CPU (config = tf.ConfigProto(device_count = {'GPU': 0})),\nbut fails in a GPU mode with the following 'CUDA_ERROR_ILLEGAL_ADDRESS' error:\n\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:885] Found device 0 with properties:\nname: GeForce GTX 1060 6GB\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.7845\npciBusID 0000:01:00.0\nTotal memory: 6.00GiB\nFree memory: 5.01GiB\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:906] DMA: 0\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:916] 0:   Y\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)\nTraining...\nE c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\stream_executor\\cuda\\cuda_event.cc:49] Error polling for event status: failed to query event: CUDA_ERROR_ILLEGAL_ADDRESS\nF c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_event_mgr.cc:198] Unexpected Event status: 1\n\nI have reproduced same error on two setups.\nEnvironment 1 (Home PC):\n\nwindows 10;\nlatest anaconda 4.2.0, python 3.5;\ncuda 8\ncudnn 5.1 (for win10)\ntensorflow 0.12.0 gpu (https://storage.googleapis.com/tensorflow/windows/gpu/tensorflow_gpu-0.12.0-cp35-cp35m-win_amd64.whl)\nGeForce GTX 1060 6Gb\n\nEnvironment 2 (Work PC):\n\nwindows 7;\nlatest anaconda 4.2.0, python 3.5;\ncuda 8\ncudnn 5.1 (for win7)\ntensorflow 0.12.0 gpu (https://storage.googleapis.com/tensorflow/windows/gpu/tensorflow_gpu-0.12.0-cp35-cp35m-win_amd64.whl)\nGeForce GTX 660 3Gb\n\nI'm sharing two scripts with minor changes that allow a workaround:\nhttps://drive.google.com/open?id=0B6jkkqMOGy5cNHh3TVpxU283Ykk\nMain difference:\nScript from example that crashes (LabLenetBad.py) uses raw mnist label data with the tf.one_hot() call.\nThe workaround (LabLenetGood.py) reads mnist data with (one_hot=True) flag and does not use tf.one_hot() call on the Y placeholder.\nI think that tf.one_hot does not work properly on the gpu.", "body": "I'm using a LeNet-5 mnist example from Udacity's course. Link to the source code is below.\r\nTraining works ok on a CPU (config = tf.ConfigProto(device_count = {'GPU': 0})),\r\nbut fails in a GPU mode with the following 'CUDA_ERROR_ILLEGAL_ADDRESS' error:\r\n\r\n> I c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:885] Found device 0 with properties:\r\nname: GeForce GTX 1060 6GB\r\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.7845\r\npciBusID 0000:01:00.0\r\nTotal memory: 6.00GiB\r\nFree memory: 5.01GiB\r\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:906] DMA: 0\r\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:916] 0:   Y\r\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)\r\nTraining...\r\nE c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\stream_executor\\cuda\\cuda_event.cc:49] Error polling for event status: failed to query event: **CUDA_ERROR_ILLEGAL_ADDRESS**\r\nF c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_event_mgr.cc:198] Unexpected Event status: 1\r\n\r\nI have reproduced same error on two setups.\r\nEnvironment 1 (Home PC):\r\n- windows 10; \r\n- latest anaconda 4.2.0, python 3.5; \r\n- cuda 8\r\n- cudnn 5.1 (for win10)\r\n- tensorflow 0.12.0 gpu (https://storage.googleapis.com/tensorflow/windows/gpu/tensorflow_gpu-0.12.0-cp35-cp35m-win_amd64.whl)\r\n- GeForce GTX 1060 6Gb\r\n\r\nEnvironment 2 (Work PC):\r\n- windows 7; \r\n- latest anaconda 4.2.0, python 3.5; \r\n- cuda 8\r\n- cudnn 5.1 (for win7)\r\n- tensorflow 0.12.0 gpu (https://storage.googleapis.com/tensorflow/windows/gpu/tensorflow_gpu-0.12.0-cp35-cp35m-win_amd64.whl)\r\n- GeForce GTX 660 3Gb\r\n\r\nI'm sharing two scripts with minor changes that allow a workaround:\r\nhttps://drive.google.com/open?id=0B6jkkqMOGy5cNHh3TVpxU283Ykk\r\n\r\nMain difference:\r\nScript from example that crashes (LabLenetBad.py) uses raw mnist label data with the tf.one_hot() call.\r\nThe workaround (LabLenetGood.py) reads mnist data with (one_hot=True) flag and does not use tf.one_hot() call on the Y placeholder.\r\n\r\nI think that tf.one_hot does not work properly on the gpu."}