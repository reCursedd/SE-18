{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3725", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3725/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3725/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3725/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3725", "id": 170360127, "node_id": "MDU6SXNzdWUxNzAzNjAxMjc=", "number": 3725, "title": "FTRL implementation in tensorflow V.S. FTRL in Google's research paper", "user": {"login": "tangruiming", "id": 20943784, "node_id": "MDQ6VXNlcjIwOTQzNzg0", "avatar_url": "https://avatars1.githubusercontent.com/u/20943784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tangruiming", "html_url": "https://github.com/tangruiming", "followers_url": "https://api.github.com/users/tangruiming/followers", "following_url": "https://api.github.com/users/tangruiming/following{/other_user}", "gists_url": "https://api.github.com/users/tangruiming/gists{/gist_id}", "starred_url": "https://api.github.com/users/tangruiming/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tangruiming/subscriptions", "organizations_url": "https://api.github.com/users/tangruiming/orgs", "repos_url": "https://api.github.com/users/tangruiming/repos", "events_url": "https://api.github.com/users/tangruiming/events{/privacy}", "received_events_url": "https://api.github.com/users/tangruiming/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "will001", "id": 3974670, "node_id": "MDQ6VXNlcjM5NzQ2NzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/3974670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/will001", "html_url": "https://github.com/will001", "followers_url": "https://api.github.com/users/will001/followers", "following_url": "https://api.github.com/users/will001/following{/other_user}", "gists_url": "https://api.github.com/users/will001/gists{/gist_id}", "starred_url": "https://api.github.com/users/will001/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/will001/subscriptions", "organizations_url": "https://api.github.com/users/will001/orgs", "repos_url": "https://api.github.com/users/will001/repos", "events_url": "https://api.github.com/users/will001/events{/privacy}", "received_events_url": "https://api.github.com/users/will001/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "will001", "id": 3974670, "node_id": "MDQ6VXNlcjM5NzQ2NzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/3974670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/will001", "html_url": "https://github.com/will001", "followers_url": "https://api.github.com/users/will001/followers", "following_url": "https://api.github.com/users/will001/following{/other_user}", "gists_url": "https://api.github.com/users/will001/gists{/gist_id}", "starred_url": "https://api.github.com/users/will001/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/will001/subscriptions", "organizations_url": "https://api.github.com/users/will001/orgs", "repos_url": "https://api.github.com/users/will001/repos", "events_url": "https://api.github.com/users/will001/events{/privacy}", "received_events_url": "https://api.github.com/users/will001/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 15, "created_at": "2016-08-10T08:25:21Z", "updated_at": "2018-03-30T10:48:48Z", "closed_at": "2017-01-24T21:55:22Z", "author_association": "NONE", "body_html": "<p>Hello, every one!</p>\n<p>I am interested in digging the details how FTRL is implemented in tensorflow. I find some information in the file \"gen_training_ops.py\" in the folder /tensorflow/python/training. In this file, the formula of FTRL algorithm is described as follows:</p>\n<pre><code>def apply_ftrl(var, accum, linear, grad, lr, l1, l2, lr_power,\nuse_locking=None, name=None):\nr\"\"\"Update '*var' according to the Ftrl-proximal scheme\naccum_new = accum + grad * grad      ------ (1)\nlinear += grad + (accum_new^(-lr_power) - accum^(-lr_power)) / lr * var        ------ (2)\nquadratic = 1.0 / (accum_new^(lr_power) * lr) + 2 * l2              ------ (3)\nvar = (sign(linear) * l1 - linear) / quadratic if |linear| &gt; l1 else 0.0           ------(4)\naccum = accum_new        ------(5)\n</code></pre>\n<p>I am also reading the paper \"Ad Click Prediction: a View from the Trenches\" by Google in KDD'13. The formula of FTRL algorithm is given in page 2 of this paper. Comparing this two implementations, we find some connections:<br>\nvar is w_{t,i} in the paper; l1 is lambda1 in the paper; linear is zi in the paper; lr is alpha in the paper; grad is gi in the paper; accum is ni in the paper.</p>\n<p>But also, there are some inconsistent points:<br>\naccording to the paper, the Equation (2) above should be<br>\n<code>linear += grad - (accum_new^(-lr_power) - accum^(-lr_power)) / lr * var</code><br>\nalso we can get the following equation by comparing the two implementations:<br>\n<code>2l2  *alpha = beta + alpha * lambda2</code></p>\n<p>For any expert who is familiar with the FTRL implementation in the tensorflow, can you help us to clarify the meaning the parameters given in tensorflow, and the connections with the FTRL code in Google's research paper \"Ad Click Prediction: a View from the Trenches\".</p>\n<p>Thanks!</p>", "body_text": "Hello, every one!\nI am interested in digging the details how FTRL is implemented in tensorflow. I find some information in the file \"gen_training_ops.py\" in the folder /tensorflow/python/training. In this file, the formula of FTRL algorithm is described as follows:\ndef apply_ftrl(var, accum, linear, grad, lr, l1, l2, lr_power,\nuse_locking=None, name=None):\nr\"\"\"Update '*var' according to the Ftrl-proximal scheme\naccum_new = accum + grad * grad      ------ (1)\nlinear += grad + (accum_new^(-lr_power) - accum^(-lr_power)) / lr * var        ------ (2)\nquadratic = 1.0 / (accum_new^(lr_power) * lr) + 2 * l2              ------ (3)\nvar = (sign(linear) * l1 - linear) / quadratic if |linear| > l1 else 0.0           ------(4)\naccum = accum_new        ------(5)\n\nI am also reading the paper \"Ad Click Prediction: a View from the Trenches\" by Google in KDD'13. The formula of FTRL algorithm is given in page 2 of this paper. Comparing this two implementations, we find some connections:\nvar is w_{t,i} in the paper; l1 is lambda1 in the paper; linear is zi in the paper; lr is alpha in the paper; grad is gi in the paper; accum is ni in the paper.\nBut also, there are some inconsistent points:\naccording to the paper, the Equation (2) above should be\nlinear += grad - (accum_new^(-lr_power) - accum^(-lr_power)) / lr * var\nalso we can get the following equation by comparing the two implementations:\n2l2  *alpha = beta + alpha * lambda2\nFor any expert who is familiar with the FTRL implementation in the tensorflow, can you help us to clarify the meaning the parameters given in tensorflow, and the connections with the FTRL code in Google's research paper \"Ad Click Prediction: a View from the Trenches\".\nThanks!", "body": "Hello, every one! \n\nI am interested in digging the details how FTRL is implemented in tensorflow. I find some information in the file \"gen_training_ops.py\" in the folder /tensorflow/python/training. In this file, the formula of FTRL algorithm is described as follows:\n\n```\ndef apply_ftrl(var, accum, linear, grad, lr, l1, l2, lr_power,\nuse_locking=None, name=None):\nr\"\"\"Update '*var' according to the Ftrl-proximal scheme\naccum_new = accum + grad * grad      ------ (1)\nlinear += grad + (accum_new^(-lr_power) - accum^(-lr_power)) / lr * var        ------ (2)\nquadratic = 1.0 / (accum_new^(lr_power) * lr) + 2 * l2              ------ (3)\nvar = (sign(linear) * l1 - linear) / quadratic if |linear| > l1 else 0.0           ------(4)\naccum = accum_new        ------(5)\n```\n\nI am also reading the paper \"Ad Click Prediction: a View from the Trenches\" by Google in KDD'13. The formula of FTRL algorithm is given in page 2 of this paper. Comparing this two implementations, we find some connections:\nvar is w_{t,i} in the paper; l1 is lambda1 in the paper; linear is zi in the paper; lr is alpha in the paper; grad is gi in the paper; accum is ni in the paper.\n\nBut also, there are some inconsistent points:\naccording to the paper, the Equation (2) above should be \n`linear += grad - (accum_new^(-lr_power) - accum^(-lr_power)) / lr * var`\nalso we can get the following equation by comparing the two implementations:\n`2l2  *alpha = beta + alpha * lambda2`\n\nFor any expert who is familiar with the FTRL implementation in the tensorflow, can you help us to clarify the meaning the parameters given in tensorflow, and the connections with the FTRL code in Google's research paper \"Ad Click Prediction: a View from the Trenches\".\n\nThanks!\n"}