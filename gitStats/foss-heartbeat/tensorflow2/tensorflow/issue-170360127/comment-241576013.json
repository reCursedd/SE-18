{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/241576013", "html_url": "https://github.com/tensorflow/tensorflow/issues/3725#issuecomment-241576013", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3725", "id": 241576013, "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTU3NjAxMw==", "user": {"login": "will001", "id": 3974670, "node_id": "MDQ6VXNlcjM5NzQ2NzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/3974670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/will001", "html_url": "https://github.com/will001", "followers_url": "https://api.github.com/users/will001/followers", "following_url": "https://api.github.com/users/will001/following{/other_user}", "gists_url": "https://api.github.com/users/will001/gists{/gist_id}", "starred_url": "https://api.github.com/users/will001/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/will001/subscriptions", "organizations_url": "https://api.github.com/users/will001/orgs", "repos_url": "https://api.github.com/users/will001/repos", "events_url": "https://api.github.com/users/will001/events{/privacy}", "received_events_url": "https://api.github.com/users/will001/received_events", "type": "User", "site_admin": false}, "created_at": "2016-08-22T22:54:58Z", "updated_at": "2016-08-22T22:54:58Z", "author_association": "NONE", "body_html": "<p>Thanks tangruiming@ for pointing out, the comments 2) in get_training_ops.py is not accurate, which should be:<br>\nlinear += grad - (accum_new^(-lr_power) - accum^(-lr_power)) / lr * var.<br>\nI will fix this very soon.</p>\n<p>For the missing parameter 'beta' in the implementation, which actually comes from the initial_accumulator_value for the 'accum', where accum = initial_accumulator_value + sigma{g(i)^2}. So, you can think of it as  <em>beta + sqrt(n^i)</em> == sqrt((initial_accumulator_value + sigma(g(i)^2))).</p>\n<p>To ageron@, the implementation in Tensorflow as FTRL-Proximal, proposed in the Ad Click Prediction paper.</p>", "body_text": "Thanks tangruiming@ for pointing out, the comments 2) in get_training_ops.py is not accurate, which should be:\nlinear += grad - (accum_new^(-lr_power) - accum^(-lr_power)) / lr * var.\nI will fix this very soon.\nFor the missing parameter 'beta' in the implementation, which actually comes from the initial_accumulator_value for the 'accum', where accum = initial_accumulator_value + sigma{g(i)^2}. So, you can think of it as  beta + sqrt(n^i) == sqrt((initial_accumulator_value + sigma(g(i)^2))).\nTo ageron@, the implementation in Tensorflow as FTRL-Proximal, proposed in the Ad Click Prediction paper.", "body": "Thanks tangruiming@ for pointing out, the comments 2) in get_training_ops.py is not accurate, which should be:\nlinear += grad - (accum_new^(-lr_power) - accum^(-lr_power)) / lr \\* var.\nI will fix this very soon.\n\nFor the missing parameter 'beta' in the implementation, which actually comes from the initial_accumulator_value for the 'accum', where accum = initial_accumulator_value + sigma{g(i)^2}. So, you can think of it as  _beta + sqrt(n^i)_ == sqrt((initial_accumulator_value + sigma(g(i)^2))). \n\nTo ageron@, the implementation in Tensorflow as FTRL-Proximal, proposed in the Ad Click Prediction paper.\n"}