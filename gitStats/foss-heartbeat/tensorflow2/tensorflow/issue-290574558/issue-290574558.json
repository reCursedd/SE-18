{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16294", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16294/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16294/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16294/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16294", "id": 290574558, "node_id": "MDU6SXNzdWUyOTA1NzQ1NTg=", "number": 16294, "title": "ScipyOptimizer SLSQP supporting callback", "user": {"login": "mjwen", "id": 10203513, "node_id": "MDQ6VXNlcjEwMjAzNTEz", "avatar_url": "https://avatars3.githubusercontent.com/u/10203513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjwen", "html_url": "https://github.com/mjwen", "followers_url": "https://api.github.com/users/mjwen/followers", "following_url": "https://api.github.com/users/mjwen/following{/other_user}", "gists_url": "https://api.github.com/users/mjwen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjwen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjwen/subscriptions", "organizations_url": "https://api.github.com/users/mjwen/orgs", "repos_url": "https://api.github.com/users/mjwen/repos", "events_url": "https://api.github.com/users/mjwen/events{/privacy}", "received_events_url": "https://api.github.com/users/mjwen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-22T18:49:22Z", "updated_at": "2018-01-23T05:40:24Z", "closed_at": "2018-01-23T05:37:22Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The callback is deprecated when <code>SLSQP</code> method in scipy optimizer is selected (see <a href=\"https://github.com/tensorflow/tensorflow/blob/04b5c75aae4bdbdac7c713714a369f9b360daf70/tensorflow/contrib/opt/python/training/external_optimizer.py#L400\">here</a>). Actually, <code>SLSQP</code> does support callback, so</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">if</span> method <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>SLSQP<span class=\"pl-pds\">'</span></span>:\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> SLSQP doesn't support step callbacks. Obviate associated warning</span>\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> message.</span>\n  <span class=\"pl-k\">del</span> minimize_kwargs[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>callback<span class=\"pl-pds\">'</span></span>]</pre></div>\n<p>in the above linked file could be removed.</p>\n<p>The following example shows that <code>SLSQP</code> do support callback.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">from</span> scipy.optimize <span class=\"pl-k\">import</span> minimize, rosen, rosen_der\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">callback</span>(<span class=\"pl-smi\">xk</span>, <span class=\"pl-smi\">step</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">0</span>]):\n  <span class=\"pl-c1\">print</span> step[<span class=\"pl-c1\">0</span>], xk[<span class=\"pl-c1\">0</span>]\n  step[<span class=\"pl-c1\">0</span>] <span class=\"pl-k\">+=</span> <span class=\"pl-c1\">1</span>\n  \nx0 <span class=\"pl-k\">=</span> [<span class=\"pl-c1\">1.3</span>, <span class=\"pl-c1\">0.7</span>, <span class=\"pl-c1\">0.8</span>, <span class=\"pl-c1\">1.9</span>, <span class=\"pl-c1\">1.2</span>]\nres <span class=\"pl-k\">=</span> minimize(rosen, x0, <span class=\"pl-v\">callback</span><span class=\"pl-k\">=</span>callback, <span class=\"pl-v\">method</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>SLSQP<span class=\"pl-pds\">'</span></span>,\n    <span class=\"pl-v\">options</span><span class=\"pl-k\">=</span>{<span class=\"pl-s\"><span class=\"pl-pds\">'</span>ftol<span class=\"pl-pds\">'</span></span>: <span class=\"pl-c1\">1e-6</span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>disp<span class=\"pl-pds\">'</span></span>: <span class=\"pl-c1\">True</span>})\n \n<span class=\"pl-c1\">print</span> res.x[<span class=\"pl-c1\">0</span>]</pre></div>", "body_text": "The callback is deprecated when SLSQP method in scipy optimizer is selected (see here). Actually, SLSQP does support callback, so\nif method == 'SLSQP':\n  # SLSQP doesn't support step callbacks. Obviate associated warning\n  # message.\n  del minimize_kwargs['callback']\nin the above linked file could be removed.\nThe following example shows that SLSQP do support callback.\nfrom scipy.optimize import minimize, rosen, rosen_der\n\ndef callback(xk, step=[0]):\n  print step[0], xk[0]\n  step[0] += 1\n  \nx0 = [1.3, 0.7, 0.8, 1.9, 1.2]\nres = minimize(rosen, x0, callback=callback, method='SLSQP',\n    options={'ftol': 1e-6, 'disp': True})\n \nprint res.x[0]", "body": "The callback is deprecated when `SLSQP` method in scipy optimizer is selected (see [here](https://github.com/tensorflow/tensorflow/blob/04b5c75aae4bdbdac7c713714a369f9b360daf70/tensorflow/contrib/opt/python/training/external_optimizer.py#L400)). Actually, `SLSQP` does support callback, so \r\n```python \r\nif method == 'SLSQP':\r\n  # SLSQP doesn't support step callbacks. Obviate associated warning\r\n  # message.\r\n  del minimize_kwargs['callback']\r\n```\r\nin the above linked file could be removed. \r\n\r\nThe following example shows that `SLSQP` do support callback. \r\n\r\n```python \r\nfrom scipy.optimize import minimize, rosen, rosen_der\r\n\r\ndef callback(xk, step=[0]):\r\n  print step[0], xk[0]\r\n  step[0] += 1\r\n  \r\nx0 = [1.3, 0.7, 0.8, 1.9, 1.2]\r\nres = minimize(rosen, x0, callback=callback, method='SLSQP',\r\n    options={'ftol': 1e-6, 'disp': True})\r\n \r\nprint res.x[0]\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n"}