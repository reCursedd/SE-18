{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/164603743", "pull_request_review_id": 92401862, "id": 164603743, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NDYwMzc0Mw==", "diff_hunk": "@@ -2142,6 +2142,28 @@ def xw_plus_b_v1(x, weights, biases, name=None):  # pylint: disable=invalid-name\n     mm = math_ops.matmul(x, weights)\n     return bias_add_v1(mm, biases, name=name)\n \n+def _get_noise_shape(x, noise_shape):\n+  # If noise_shape is none return immediately.\n+  if noise_shape is None:\n+    return array_ops.shape(x)\n+\n+  try:\n+    # Best effort to figure out the intended shape.\n+    # If not possible, let the op to handle it.\n+    noise_shape_ = tensor_shape.as_shape(noise_shape)\n+    if (x.shape.dims is not None and\n+        len(x.shape.dims) == len(noise_shape_.dims)):\n+      new_dims = []\n+      for i, dim in enumerate(x.shape.dims):\n+        if noise_shape_.dims[i].value is None and dim.value is not None:\n+          new_dims.append(dim.value)\n+        else:\n+          new_dims.append(noise_shape_.dims[i].value)\n+      return tensor_shape.TensorShape(new_dims)\n+  except (TypeError, ValueError):", "path": "tensorflow/python/ops/nn_ops.py", "position": null, "original_position": 22, "commit_id": "9a67c529db09fd37d200638a5b8a72176359d73b", "original_commit_id": "2b19edf04637ce217c72a5b3cd2c64a9a9dd71e1", "user": {"login": "vrv", "id": 463737, "node_id": "MDQ6VXNlcjQ2MzczNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/463737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrv", "html_url": "https://github.com/vrv", "followers_url": "https://api.github.com/users/vrv/followers", "following_url": "https://api.github.com/users/vrv/following{/other_user}", "gists_url": "https://api.github.com/users/vrv/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrv/subscriptions", "organizations_url": "https://api.github.com/users/vrv/orgs", "repos_url": "https://api.github.com/users/vrv/repos", "events_url": "https://api.github.com/users/vrv/events{/privacy}", "received_events_url": "https://api.github.com/users/vrv/received_events", "type": "User", "site_admin": false}, "body": "Can you put the try except around just the as_shape() function to scope its protection more carefully?\r\n\r\nOr maybe just disable the entire codepath if in_eager_mode?   cc @akshayka in case he knows under what conditions we should disable eager codepaths.", "created_at": "2018-01-30T00:00:03Z", "updated_at": "2018-01-30T00:10:51Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/16085#discussion_r164603743", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/16085", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/164603743"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/16085#discussion_r164603743"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/16085"}}, "body_html": "<p>Can you put the try except around just the as_shape() function to scope its protection more carefully?</p>\n<p>Or maybe just disable the entire codepath if in_eager_mode?   cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1994308\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/akshayka\">@akshayka</a> in case he knows under what conditions we should disable eager codepaths.</p>", "body_text": "Can you put the try except around just the as_shape() function to scope its protection more carefully?\nOr maybe just disable the entire codepath if in_eager_mode?   cc @akshayka in case he knows under what conditions we should disable eager codepaths.", "in_reply_to_id": 164600322}