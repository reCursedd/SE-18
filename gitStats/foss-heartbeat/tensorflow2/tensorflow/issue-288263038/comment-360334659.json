{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/360334659", "html_url": "https://github.com/tensorflow/tensorflow/pull/16085#issuecomment-360334659", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16085", "id": 360334659, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDMzNDY1OQ==", "user": {"login": "vrv", "id": 463737, "node_id": "MDQ6VXNlcjQ2MzczNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/463737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrv", "html_url": "https://github.com/vrv", "followers_url": "https://api.github.com/users/vrv/followers", "following_url": "https://api.github.com/users/vrv/following{/other_user}", "gists_url": "https://api.github.com/users/vrv/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrv/subscriptions", "organizations_url": "https://api.github.com/users/vrv/orgs", "repos_url": "https://api.github.com/users/vrv/repos", "events_url": "https://api.github.com/users/vrv/events{/privacy}", "received_events_url": "https://api.github.com/users/vrv/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-25T01:48:36Z", "updated_at": "2018-01-25T01:48:36Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Given the contract in the documentation that describes broadcasting compatibility, perhaps you could use one of either tf.broadcast_static_shape, or the shape helper: <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/b0d6bf342541d5665579b16f9c8af9022dd36536/tensorflow/python/framework/common_shapes.py#L566\">tensorflow/tensorflow/python/framework/common_shapes.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 566\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/b0d6bf342541d5665579b16f9c8af9022dd36536\">b0d6bf3</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L566\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"566\"></td>\n          <td id=\"LC566\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">def</span> <span class=\"pl-en\">broadcast_shape</span>(<span class=\"pl-smi\">shape_x</span>, <span class=\"pl-smi\">shape_y</span>): </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n ?</p>\n<pre><code>&gt;&gt;&gt; import tensorflow as tf\n&gt;&gt;&gt; a = tf.TensorShape([None, 1])\n&gt;&gt;&gt; b = tf.TensorShape([1200, 3])\n&gt;&gt;&gt; tf.broadcast_static_shape(a, b)\nTensorShape([Dimension(1200), Dimension(3)])\n</code></pre>\n<p>(Trying to minimize the amount of duplicate code, if possible).</p>", "body_text": "Given the contract in the documentation that describes broadcasting compatibility, perhaps you could use one of either tf.broadcast_static_shape, or the shape helper: \n  \n    \n      tensorflow/tensorflow/python/framework/common_shapes.py\n    \n    \n         Line 566\n      in\n      b0d6bf3\n    \n    \n    \n    \n\n        \n          \n           def broadcast_shape(shape_x, shape_y): \n        \n    \n  \n\n ?\n>>> import tensorflow as tf\n>>> a = tf.TensorShape([None, 1])\n>>> b = tf.TensorShape([1200, 3])\n>>> tf.broadcast_static_shape(a, b)\nTensorShape([Dimension(1200), Dimension(3)])\n\n(Trying to minimize the amount of duplicate code, if possible).", "body": "Given the contract in the documentation that describes broadcasting compatibility, perhaps you could use one of either tf.broadcast_static_shape, or the shape helper: https://github.com/tensorflow/tensorflow/blob/b0d6bf342541d5665579b16f9c8af9022dd36536/tensorflow/python/framework/common_shapes.py#L566 ?\r\n\r\n```\r\n>>> import tensorflow as tf\r\n>>> a = tf.TensorShape([None, 1])\r\n>>> b = tf.TensorShape([1200, 3])\r\n>>> tf.broadcast_static_shape(a, b)\r\nTensorShape([Dimension(1200), Dimension(3)])\r\n```\r\n\r\n(Trying to minimize the amount of duplicate code, if possible).\r\n\r\n"}