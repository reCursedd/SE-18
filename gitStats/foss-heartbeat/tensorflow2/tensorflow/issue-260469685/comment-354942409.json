{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/354942409", "html_url": "https://github.com/tensorflow/tensorflow/issues/13303#issuecomment-354942409", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13303", "id": 354942409, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDk0MjQwOQ==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-03T06:01:11Z", "updated_at": "2018-01-03T06:01:11Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Catching up on old issues: I don't think this kind of functionality is a good fit for the core <code>tf.data</code> APIs. It would be more natural to write this code in Eager mode, using a <code>tfe.Iterator</code> on a <code>tf.data.Dataset</code> to provide access to the input data as one or more <code>tfe.Tensor</code> objects, and then using Python control flow to pass the same <code>tfe.Tensor</code> objects to different sub-steps.</p>", "body_text": "Catching up on old issues: I don't think this kind of functionality is a good fit for the core tf.data APIs. It would be more natural to write this code in Eager mode, using a tfe.Iterator on a tf.data.Dataset to provide access to the input data as one or more tfe.Tensor objects, and then using Python control flow to pass the same tfe.Tensor objects to different sub-steps.", "body": "Catching up on old issues: I don't think this kind of functionality is a good fit for the core `tf.data` APIs. It would be more natural to write this code in Eager mode, using a `tfe.Iterator` on a `tf.data.Dataset` to provide access to the input data as one or more `tfe.Tensor` objects, and then using Python control flow to pass the same `tfe.Tensor` objects to different sub-steps."}