{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/357317569", "html_url": "https://github.com/tensorflow/tensorflow/issues/12927#issuecomment-357317569", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12927", "id": 357317569, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzMxNzU2OQ==", "user": {"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-12T18:30:30Z", "updated_at": "2018-01-12T18:30:47Z", "author_association": "MEMBER", "body_html": "<p>cc/ <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7946809\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gunan\">@gunan</a></p>\n<p>The plan so far is to make this less terrible by <em>removing</em> the need for kernels to be loaded in python modules, which would address this particular issue.</p>\n<p>But in general, you are correct: We have no mechanism to map a kernel/op name to a package in which is might be defined. This is no different between static or dynamic linking, if you build a static TF with a specific op, and save a Graph and load it on a TF without that Op, things don't work.</p>\n<p>We can (and should) make this better (by namespacing, and probably, the equivalent of a TF package manager), but again, this is some time away -- <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7946809\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gunan\">@gunan</a> has the plan.</p>", "body_text": "cc/ @gunan\nThe plan so far is to make this less terrible by removing the need for kernels to be loaded in python modules, which would address this particular issue.\nBut in general, you are correct: We have no mechanism to map a kernel/op name to a package in which is might be defined. This is no different between static or dynamic linking, if you build a static TF with a specific op, and save a Graph and load it on a TF without that Op, things don't work.\nWe can (and should) make this better (by namespacing, and probably, the equivalent of a TF package manager), but again, this is some time away -- @gunan has the plan.", "body": "cc/ @gunan \r\n\r\nThe plan so far is to make this less terrible by *removing* the need for kernels to be loaded in python modules, which would address this particular issue. \r\n\r\nBut in general, you are correct: We have no mechanism to map a kernel/op name to a package in which is might be defined. This is no different between static or dynamic linking, if you build a static TF with a specific op, and save a Graph and load it on a TF without that Op, things don't work. \r\n\r\nWe can (and should) make this better (by namespacing, and probably, the equivalent of a TF package manager), but again, this is some time away -- @gunan has the plan."}