{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12927", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12927/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12927/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12927/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12927", "id": 256411503, "node_id": "MDU6SXNzdWUyNTY0MTE1MDM=", "number": 12927, "title": "No op named GatherTree using BeamSearchDecoder", "user": {"login": "Michael0134", "id": 23336749, "node_id": "MDQ6VXNlcjIzMzM2NzQ5", "avatar_url": "https://avatars2.githubusercontent.com/u/23336749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Michael0134", "html_url": "https://github.com/Michael0134", "followers_url": "https://api.github.com/users/Michael0134/followers", "following_url": "https://api.github.com/users/Michael0134/following{/other_user}", "gists_url": "https://api.github.com/users/Michael0134/gists{/gist_id}", "starred_url": "https://api.github.com/users/Michael0134/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Michael0134/subscriptions", "organizations_url": "https://api.github.com/users/Michael0134/orgs", "repos_url": "https://api.github.com/users/Michael0134/repos", "events_url": "https://api.github.com/users/Michael0134/events{/privacy}", "received_events_url": "https://api.github.com/users/Michael0134/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "allenlavoie", "id": 3731025, "node_id": "MDQ6VXNlcjM3MzEwMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3731025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allenlavoie", "html_url": "https://github.com/allenlavoie", "followers_url": "https://api.github.com/users/allenlavoie/followers", "following_url": "https://api.github.com/users/allenlavoie/following{/other_user}", "gists_url": "https://api.github.com/users/allenlavoie/gists{/gist_id}", "starred_url": "https://api.github.com/users/allenlavoie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allenlavoie/subscriptions", "organizations_url": "https://api.github.com/users/allenlavoie/orgs", "repos_url": "https://api.github.com/users/allenlavoie/repos", "events_url": "https://api.github.com/users/allenlavoie/events{/privacy}", "received_events_url": "https://api.github.com/users/allenlavoie/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "allenlavoie", "id": 3731025, "node_id": "MDQ6VXNlcjM3MzEwMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3731025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allenlavoie", "html_url": "https://github.com/allenlavoie", "followers_url": "https://api.github.com/users/allenlavoie/followers", "following_url": "https://api.github.com/users/allenlavoie/following{/other_user}", "gists_url": "https://api.github.com/users/allenlavoie/gists{/gist_id}", "starred_url": "https://api.github.com/users/allenlavoie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allenlavoie/subscriptions", "organizations_url": "https://api.github.com/users/allenlavoie/orgs", "repos_url": "https://api.github.com/users/allenlavoie/repos", "events_url": "https://api.github.com/users/allenlavoie/events{/privacy}", "received_events_url": "https://api.github.com/users/allenlavoie/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 20, "created_at": "2017-09-09T03:33:46Z", "updated_at": "2018-04-09T03:27:55Z", "closed_at": "2018-04-09T03:27:55Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: pip</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.2.1</li>\n<li><strong>Python version</strong>: 3.5</li>\n<li><strong>GPU model and memory</strong>: GeForce GTX 1080 (8 GB)</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I was implementing a seq2seq model, and inference went well using greedy algorithm(GreedyEmbeddingHelper). But when I tried to use BeamSearchDecoder to infer from a trained model, I encountered \"No op named GatherTree in defined operations.\". Strangely enough, I couldn't find the same error elsewhere.</p>\n<h3>Error message</h3>\n<pre><code>Traceback (most recent call last):\n  File \"infer.py\", line 88, in &lt;module&gt;\n    out_file='result/result.out', checkpoint=checkpoint)\n  File \"infer.py\", line 48, in predict\n    loader = tf.train.import_meta_graph(checkpoint + '.meta')\n  File \"/home/user0/anaconda3/lib/python3.5/site-packages/tensorflow/python/training/saver.py\", line 1686, in import_meta_graph\n    **kwargs)\n  File \"/home/user0/anaconda3/lib/python3.5/site-packages/tensorflow/python/framework/meta_graph.py\", line 504, in import_scoped_meta_graph\n    producer_op_list=producer_op_list)\n  File \"/home/user0/anaconda3/lib/python3.5/site-packages/tensorflow/python/framework/importer.py\", line 283, in import_graph_def\n    raise ValueError('No op named %s in defined operations.' % node.op)\nValueError: No op named GatherTree in defined operations.\n</code></pre>\n<h3>Source code to reproduce the problem</h3>\n<pre><code># Inference module\nloaded_graph = tf.Graph()\nwith tf.Session(graph=loaded_graph) as sess:\n\tloader = tf.train.import_meta_graph(checkpoint + '.meta')\n\tloader.restore(sess, checkpoint)\n\n\tinput_data = loaded_graph.get_tensor_by_name('inputs:0')\n\tlogits = loaded_graph.get_tensor_by_name('inferences:0')\n\tsrc_seq_len = loaded_graph.get_tensor_by_name('source_sequence_length:0')\n\ttgt_seq_len = loaded_graph.get_tensor_by_name('target_sequence_length:0')\n\n\tfor i in range(len(text)):\n\t\ttext_seq = src2seq_word(text[i], True)\n\t\tanswer = sess.run(logits, {input_data: [text_seq] * batch_size,\n\t\t\t                                  tgt_seq_len: [len(text_seq)] * batch_size,\n\t\t\t                                  src_seq_len: [len(text_seq)] * batch_size}\n\t\t\t                         )[:, :, 0]\n</code></pre>\n<p>Program failed at <code>loader = tf.train.import_meta_graph(checkpoint + '.meta')</code></p>\n<pre><code># Related code\ntraining_logits = tf.identity(train_decoder_output.rnn_output, name='logits')\ninference_logits = tf.identity(infer_decoder_output.predicted_ids, name='inferences')\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04\nTensorFlow installed from (source or binary): pip\nTensorFlow version (use command below): 1.2.1\nPython version: 3.5\nGPU model and memory: GeForce GTX 1080 (8 GB)\n\nDescribe the problem\nI was implementing a seq2seq model, and inference went well using greedy algorithm(GreedyEmbeddingHelper). But when I tried to use BeamSearchDecoder to infer from a trained model, I encountered \"No op named GatherTree in defined operations.\". Strangely enough, I couldn't find the same error elsewhere.\nError message\nTraceback (most recent call last):\n  File \"infer.py\", line 88, in <module>\n    out_file='result/result.out', checkpoint=checkpoint)\n  File \"infer.py\", line 48, in predict\n    loader = tf.train.import_meta_graph(checkpoint + '.meta')\n  File \"/home/user0/anaconda3/lib/python3.5/site-packages/tensorflow/python/training/saver.py\", line 1686, in import_meta_graph\n    **kwargs)\n  File \"/home/user0/anaconda3/lib/python3.5/site-packages/tensorflow/python/framework/meta_graph.py\", line 504, in import_scoped_meta_graph\n    producer_op_list=producer_op_list)\n  File \"/home/user0/anaconda3/lib/python3.5/site-packages/tensorflow/python/framework/importer.py\", line 283, in import_graph_def\n    raise ValueError('No op named %s in defined operations.' % node.op)\nValueError: No op named GatherTree in defined operations.\n\nSource code to reproduce the problem\n# Inference module\nloaded_graph = tf.Graph()\nwith tf.Session(graph=loaded_graph) as sess:\n\tloader = tf.train.import_meta_graph(checkpoint + '.meta')\n\tloader.restore(sess, checkpoint)\n\n\tinput_data = loaded_graph.get_tensor_by_name('inputs:0')\n\tlogits = loaded_graph.get_tensor_by_name('inferences:0')\n\tsrc_seq_len = loaded_graph.get_tensor_by_name('source_sequence_length:0')\n\ttgt_seq_len = loaded_graph.get_tensor_by_name('target_sequence_length:0')\n\n\tfor i in range(len(text)):\n\t\ttext_seq = src2seq_word(text[i], True)\n\t\tanswer = sess.run(logits, {input_data: [text_seq] * batch_size,\n\t\t\t                                  tgt_seq_len: [len(text_seq)] * batch_size,\n\t\t\t                                  src_seq_len: [len(text_seq)] * batch_size}\n\t\t\t                         )[:, :, 0]\n\nProgram failed at loader = tf.train.import_meta_graph(checkpoint + '.meta')\n# Related code\ntraining_logits = tf.identity(train_decoder_output.rnn_output, name='logits')\ninference_logits = tf.identity(infer_decoder_output.predicted_ids, name='inferences')", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: pip\r\n- **TensorFlow version (use command below)**: 1.2.1\r\n- **Python version**: 3.5\r\n- **GPU model and memory**: GeForce GTX 1080 (8 GB)\r\n\r\n### Describe the problem\r\nI was implementing a seq2seq model, and inference went well using greedy algorithm(GreedyEmbeddingHelper). But when I tried to use BeamSearchDecoder to infer from a trained model, I encountered \"No op named GatherTree in defined operations.\". Strangely enough, I couldn't find the same error elsewhere. \r\n\r\n### Error message\r\n```\r\nTraceback (most recent call last):\r\n  File \"infer.py\", line 88, in <module>\r\n    out_file='result/result.out', checkpoint=checkpoint)\r\n  File \"infer.py\", line 48, in predict\r\n    loader = tf.train.import_meta_graph(checkpoint + '.meta')\r\n  File \"/home/user0/anaconda3/lib/python3.5/site-packages/tensorflow/python/training/saver.py\", line 1686, in import_meta_graph\r\n    **kwargs)\r\n  File \"/home/user0/anaconda3/lib/python3.5/site-packages/tensorflow/python/framework/meta_graph.py\", line 504, in import_scoped_meta_graph\r\n    producer_op_list=producer_op_list)\r\n  File \"/home/user0/anaconda3/lib/python3.5/site-packages/tensorflow/python/framework/importer.py\", line 283, in import_graph_def\r\n    raise ValueError('No op named %s in defined operations.' % node.op)\r\nValueError: No op named GatherTree in defined operations.\r\n```\r\n\r\n### Source code to reproduce the problem\r\n```\r\n# Inference module\r\nloaded_graph = tf.Graph()\r\nwith tf.Session(graph=loaded_graph) as sess:\r\n\tloader = tf.train.import_meta_graph(checkpoint + '.meta')\r\n\tloader.restore(sess, checkpoint)\r\n\r\n\tinput_data = loaded_graph.get_tensor_by_name('inputs:0')\r\n\tlogits = loaded_graph.get_tensor_by_name('inferences:0')\r\n\tsrc_seq_len = loaded_graph.get_tensor_by_name('source_sequence_length:0')\r\n\ttgt_seq_len = loaded_graph.get_tensor_by_name('target_sequence_length:0')\r\n\r\n\tfor i in range(len(text)):\r\n\t\ttext_seq = src2seq_word(text[i], True)\r\n\t\tanswer = sess.run(logits, {input_data: [text_seq] * batch_size,\r\n\t\t\t                                  tgt_seq_len: [len(text_seq)] * batch_size,\r\n\t\t\t                                  src_seq_len: [len(text_seq)] * batch_size}\r\n\t\t\t                         )[:, :, 0]\r\n```\r\nProgram failed at ```loader = tf.train.import_meta_graph(checkpoint + '.meta')```\r\n\r\n```\r\n# Related code\r\ntraining_logits = tf.identity(train_decoder_output.rnn_output, name='logits')\r\ninference_logits = tf.identity(infer_decoder_output.predicted_ids, name='inferences')\r\n```"}