{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/247855017", "html_url": "https://github.com/tensorflow/tensorflow/issues/4385#issuecomment-247855017", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4385", "id": 247855017, "node_id": "MDEyOklzc3VlQ29tbWVudDI0Nzg1NTAxNw==", "user": {"login": "zengfancy", "id": 10111074, "node_id": "MDQ6VXNlcjEwMTExMDc0", "avatar_url": "https://avatars0.githubusercontent.com/u/10111074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zengfancy", "html_url": "https://github.com/zengfancy", "followers_url": "https://api.github.com/users/zengfancy/followers", "following_url": "https://api.github.com/users/zengfancy/following{/other_user}", "gists_url": "https://api.github.com/users/zengfancy/gists{/gist_id}", "starred_url": "https://api.github.com/users/zengfancy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zengfancy/subscriptions", "organizations_url": "https://api.github.com/users/zengfancy/orgs", "repos_url": "https://api.github.com/users/zengfancy/repos", "events_url": "https://api.github.com/users/zengfancy/events{/privacy}", "received_events_url": "https://api.github.com/users/zengfancy/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-18T15:42:34Z", "updated_at": "2016-09-18T15:42:34Z", "author_association": "NONE", "body_html": "<p>Hi andydavis1,<br>\nThanks for you reply. I can give more details, I can give the stack by gdb, It's like:</p>\n<p>26 template <br>\n27 struct MatMulTypes {<br>\n28   typedef Eigen::TensorMap&lt;Eigen::Tensor&lt;T, 2, Eigen::RowMajor&gt;, Eigen::Aligned&gt;<br>\n29       out_type;<br>\n30   typedef Eigen::TensorMap&lt;Eigen::Tensor&lt;const T, 2, Eigen::RowMajor&gt;,<br>\n31                            Eigen::Aligned&gt; in_type;<br>\n32 };<br>\n33<br>\n34 template &lt;typename Device, typename In0, typename In1, typename Out,<br>\n35           typename DimPair&gt;<br>\n36 void MatMul(const Device&amp; d, Out out, In0 in0, In1 in1,<br>\n37             const DimPair&amp; dim_pair) {<br>\n38   out.device(d) = in0.contract(in1, dim_pair);<br>\n39 }</p>\n<p>248 template <br>\n249 struct MatMulFunctor&lt;CPUDevice, T&gt; {<br>\n250   void operator()(<br>\n251       const CPUDevice&amp; d, typename MatMulTypes::out_type out,<br>\n252       typename MatMulTypes::in_type in0,<br>\n253       typename MatMulTypes::in_type in1,<br>\n254       const Eigen::arrayEigen::IndexPair&lt;Eigen::DenseIndex, 1&gt;&amp; dim_pair) {<br>\n255     MatMul(d, out, in0, in1, dim_pair);<br>\n256   }<br>\n257 };</p>\n<p>And a 150*150 matrix with a 150 vector would cost 4ms here.<br>\nCan you give any points for this?</p>", "body_text": "Hi andydavis1,\nThanks for you reply. I can give more details, I can give the stack by gdb, It's like:\n26 template \n27 struct MatMulTypes {\n28   typedef Eigen::TensorMap<Eigen::Tensor<T, 2, Eigen::RowMajor>, Eigen::Aligned>\n29       out_type;\n30   typedef Eigen::TensorMap<Eigen::Tensor<const T, 2, Eigen::RowMajor>,\n31                            Eigen::Aligned> in_type;\n32 };\n33\n34 template <typename Device, typename In0, typename In1, typename Out,\n35           typename DimPair>\n36 void MatMul(const Device& d, Out out, In0 in0, In1 in1,\n37             const DimPair& dim_pair) {\n38   out.device(d) = in0.contract(in1, dim_pair);\n39 }\n248 template \n249 struct MatMulFunctor<CPUDevice, T> {\n250   void operator()(\n251       const CPUDevice& d, typename MatMulTypes::out_type out,\n252       typename MatMulTypes::in_type in0,\n253       typename MatMulTypes::in_type in1,\n254       const Eigen::arrayEigen::IndexPair<Eigen::DenseIndex, 1>& dim_pair) {\n255     MatMul(d, out, in0, in1, dim_pair);\n256   }\n257 };\nAnd a 150*150 matrix with a 150 vector would cost 4ms here.\nCan you give any points for this?", "body": "Hi andydavis1,\nThanks for you reply. I can give more details, I can give the stack by gdb, It's like:\n\n26 template <typename T>\n 27 struct MatMulTypes {\n 28   typedef Eigen::TensorMap<Eigen::Tensor<T, 2, Eigen::RowMajor>, Eigen::Aligned>\n 29       out_type;\n 30   typedef Eigen::TensorMap<Eigen::Tensor<const T, 2, Eigen::RowMajor>,\n 31                            Eigen::Aligned> in_type;\n 32 };  \n 33 \n 34 template <typename Device, typename In0, typename In1, typename Out,\n 35           typename DimPair>\n 36 void MatMul(const Device& d, Out out, In0 in0, In1 in1,\n 37             const DimPair& dim_pair) {\n 38   out.device(d) = in0.contract(in1, dim_pair);\n 39 }\n\n248 template <typename T>\n249 struct MatMulFunctor<CPUDevice, T> {\n250   void operator()(\n251       const CPUDevice& d, typename MatMulTypes<T>::out_type out,\n252       typename MatMulTypes<T>::in_type in0,\n253       typename MatMulTypes<T>::in_type in1,\n254       const Eigen::arrayEigen::IndexPair<Eigen::DenseIndex, 1>& dim_pair) {\n255     MatMul<CPUDevice>(d, out, in0, in1, dim_pair);\n256   }\n257 };\n\nAnd a 150*150 matrix with a 150 vector would cost 4ms here.\nCan you give any points for this?\n"}