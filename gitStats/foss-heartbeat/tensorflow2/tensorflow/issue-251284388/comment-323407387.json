{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/323407387", "html_url": "https://github.com/tensorflow/tensorflow/issues/12396#issuecomment-323407387", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12396", "id": 323407387, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzQwNzM4Nw==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-18T17:01:05Z", "updated_at": "2017-08-18T17:01:05Z", "author_association": "CONTRIBUTOR", "body_html": "<p>In the meantime, you can work around it with the following tweak:</p>\n<div class=\"highlight highlight-source-python\"><pre>tr_dataset <span class=\"pl-k\">=</span> tr_dataset.map(\n    <span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">filename</span>: <span class=\"pl-c1\">tuple</span>(tf.py_func(_read_py_function,\n                                [filename],\n                                [tf.float32, tf.float32])))</pre></div>\n<p>The problem stems from treating the list returned by <code>tf.py_func()</code> as an invitation to auto-stack the returned tensors into a single tensor. Converting it to tuple prevents that conversion from being attempted. The root cause is that the interpretation of lists in a <code>Dataset</code> nested structure changed between TF 1.2 and 1.3....</p>", "body_text": "In the meantime, you can work around it with the following tweak:\ntr_dataset = tr_dataset.map(\n    lambda filename: tuple(tf.py_func(_read_py_function,\n                                [filename],\n                                [tf.float32, tf.float32])))\nThe problem stems from treating the list returned by tf.py_func() as an invitation to auto-stack the returned tensors into a single tensor. Converting it to tuple prevents that conversion from being attempted. The root cause is that the interpretation of lists in a Dataset nested structure changed between TF 1.2 and 1.3....", "body": "In the meantime, you can work around it with the following tweak: \r\n\r\n```python\r\ntr_dataset = tr_dataset.map(\r\n    lambda filename: tuple(tf.py_func(_read_py_function,\r\n                                [filename],\r\n                                [tf.float32, tf.float32])))\r\n```\r\n\r\nThe problem stems from treating the list returned by `tf.py_func()` as an invitation to auto-stack the returned tensors into a single tensor. Converting it to tuple prevents that conversion from being attempted. The root cause is that the interpretation of lists in a `Dataset` nested structure changed between TF 1.2 and 1.3...."}