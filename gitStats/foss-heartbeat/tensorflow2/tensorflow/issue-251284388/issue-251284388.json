{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12396", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12396/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12396/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12396/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12396", "id": 251284388, "node_id": "MDU6SXNzdWUyNTEyODQzODg=", "number": 12396, "title": "tf Dataset with tf.py_func doesn't work as the tutorial says", "user": {"login": "jundengdeng", "id": 8589835, "node_id": "MDQ6VXNlcjg1ODk4MzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/8589835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jundengdeng", "html_url": "https://github.com/jundengdeng", "followers_url": "https://api.github.com/users/jundengdeng/followers", "following_url": "https://api.github.com/users/jundengdeng/following{/other_user}", "gists_url": "https://api.github.com/users/jundengdeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/jundengdeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jundengdeng/subscriptions", "organizations_url": "https://api.github.com/users/jundengdeng/orgs", "repos_url": "https://api.github.com/users/jundengdeng/repos", "events_url": "https://api.github.com/users/jundengdeng/events{/privacy}", "received_events_url": "https://api.github.com/users/jundengdeng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-08-18T15:42:02Z", "updated_at": "2017-08-21T20:16:26Z", "closed_at": "2017-08-21T20:16:26Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li>Ubuntu 16.04</li>\n<li>TF 1.3 (released version)</li>\n<li>CUDA 8.0</li>\n<li>CUDNN 6.0</li>\n<li>Python 3.5</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Dataset with tf.py_func() doesn't work as the dataset tutorial says in (<a href=\"https://www.tensorflow.org/programmers_guide/datasets\" rel=\"nofollow\">https://www.tensorflow.org/programmers_guide/datasets</a>)</p>\n<h3>Source code / logs</h3>\n<p>minimum code to reproduce the problem.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">from</span> tensorflow.contrib.data.python.ops.dataset_ops <span class=\"pl-k\">import</span> Dataset\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">import</span> glob\n<span class=\"pl-k\">import</span> sys\n<span class=\"pl-k\">import</span> os\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">_read_py_function</span>(<span class=\"pl-smi\">filename</span>):\n    filename <span class=\"pl-k\">=</span> filename.decode(sys.getdefaultencoding())\n    data <span class=\"pl-k\">=</span> np.load(filename)\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> print(data.shape)</span>\n    label <span class=\"pl-k\">=</span> np.random.randint(<span class=\"pl-c1\">5</span>)\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> print(label)</span>\n    <span class=\"pl-k\">return</span> data.astype(np.float32), np.cast[np.float32](label)\n\n\nsample_size <span class=\"pl-k\">=</span> <span class=\"pl-c1\">5</span>\nseq_len <span class=\"pl-k\">=</span> <span class=\"pl-c1\">3</span>\nnum_samples <span class=\"pl-k\">=</span> <span class=\"pl-c1\">7</span>\n\n\ndata_dir <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>test_toy_data/<span class=\"pl-pds\">'</span></span>\n\n<span class=\"pl-k\">if</span> <span class=\"pl-k\">not</span> os.path.exists(data_dir):\n    os.makedirs(data_dir)\n\n<span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(num_samples):\n    np.save(<span class=\"pl-s\"><span class=\"pl-pds\">'</span><span class=\"pl-c1\">%s</span>/toy_<span class=\"pl-c1\">%d</span>.npy<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">%</span> (data_dir, i),\n            np.random.rand(seq_len, sample_size))\n\n\ntr_filenames <span class=\"pl-k\">=</span> glob.glob(<span class=\"pl-s\"><span class=\"pl-pds\">'</span><span class=\"pl-c1\">%s</span>/toy*.npy<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">%</span> (data_dir))\n\ntr_dataset <span class=\"pl-k\">=</span> Dataset.from_tensor_slices((tr_filenames))\ntr_dataset <span class=\"pl-k\">=</span> tr_dataset.map(\n    <span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">filename</span>: tf.py_func(_read_py_function,\n                                [filename],\n                                [tf.float32, tf.float32]))\ntr_dataset <span class=\"pl-k\">=</span> tr_dataset.shuffle(<span class=\"pl-v\">buffer_size</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">20</span>)\ntr_dataset <span class=\"pl-k\">=</span> tr_dataset.batch(<span class=\"pl-c1\">2</span>)\n\n\niterator <span class=\"pl-k\">=</span> tr_dataset.make_initializable_iterator()\nnext_element <span class=\"pl-k\">=</span> iterator.get_next()\n\nsess <span class=\"pl-k\">=</span> tf.Session()\n\n<span class=\"pl-k\">for</span> _ <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">1</span>):\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> training</span>\n    sess.run(iterator.initializer)\n\n    <span class=\"pl-k\">while</span> <span class=\"pl-c1\">True</span>:\n        <span class=\"pl-k\">try</span>:\n            feats, labs <span class=\"pl-k\">=</span> sess.run(next_element)\n            <span class=\"pl-c1\">print</span>(feats.shape)\n            <span class=\"pl-c1\">print</span>(labs)\n        <span class=\"pl-k\">except</span> tf.errors.OutOfRangeError:\n            <span class=\"pl-k\">break</span></pre></div>", "body_text": "System information\n\nUbuntu 16.04\nTF 1.3 (released version)\nCUDA 8.0\nCUDNN 6.0\nPython 3.5\n\nDescribe the problem\nDataset with tf.py_func() doesn't work as the dataset tutorial says in (https://www.tensorflow.org/programmers_guide/datasets)\nSource code / logs\nminimum code to reproduce the problem.\nimport tensorflow as tf\nfrom tensorflow.contrib.data.python.ops.dataset_ops import Dataset\nimport numpy as np\nimport glob\nimport sys\nimport os\n\ndef _read_py_function(filename):\n    filename = filename.decode(sys.getdefaultencoding())\n    data = np.load(filename)\n    # print(data.shape)\n    label = np.random.randint(5)\n    # print(label)\n    return data.astype(np.float32), np.cast[np.float32](label)\n\n\nsample_size = 5\nseq_len = 3\nnum_samples = 7\n\n\ndata_dir = 'test_toy_data/'\n\nif not os.path.exists(data_dir):\n    os.makedirs(data_dir)\n\nfor i in range(num_samples):\n    np.save('%s/toy_%d.npy' % (data_dir, i),\n            np.random.rand(seq_len, sample_size))\n\n\ntr_filenames = glob.glob('%s/toy*.npy' % (data_dir))\n\ntr_dataset = Dataset.from_tensor_slices((tr_filenames))\ntr_dataset = tr_dataset.map(\n    lambda filename: tf.py_func(_read_py_function,\n                                [filename],\n                                [tf.float32, tf.float32]))\ntr_dataset = tr_dataset.shuffle(buffer_size=20)\ntr_dataset = tr_dataset.batch(2)\n\n\niterator = tr_dataset.make_initializable_iterator()\nnext_element = iterator.get_next()\n\nsess = tf.Session()\n\nfor _ in range(1):\n    # training\n    sess.run(iterator.initializer)\n\n    while True:\n        try:\n            feats, labs = sess.run(next_element)\n            print(feats.shape)\n            print(labs)\n        except tf.errors.OutOfRangeError:\n            break", "body": "### System information\r\n-  Ubuntu 16.04\r\n- TF 1.3 (released version)\r\n- CUDA 8.0\r\n- CUDNN 6.0\r\n- Python 3.5\r\n\r\n### Describe the problem\r\nDataset with tf.py_func() doesn't work as the dataset tutorial says in (https://www.tensorflow.org/programmers_guide/datasets)\r\n\r\n\r\n### Source code / logs\r\nminimum code to reproduce the problem.\r\n```python\r\nimport tensorflow as tf\r\nfrom tensorflow.contrib.data.python.ops.dataset_ops import Dataset\r\nimport numpy as np\r\nimport glob\r\nimport sys\r\nimport os\r\n\r\ndef _read_py_function(filename):\r\n    filename = filename.decode(sys.getdefaultencoding())\r\n    data = np.load(filename)\r\n    # print(data.shape)\r\n    label = np.random.randint(5)\r\n    # print(label)\r\n    return data.astype(np.float32), np.cast[np.float32](label)\r\n\r\n\r\nsample_size = 5\r\nseq_len = 3\r\nnum_samples = 7\r\n\r\n\r\ndata_dir = 'test_toy_data/'\r\n\r\nif not os.path.exists(data_dir):\r\n    os.makedirs(data_dir)\r\n\r\nfor i in range(num_samples):\r\n    np.save('%s/toy_%d.npy' % (data_dir, i),\r\n            np.random.rand(seq_len, sample_size))\r\n\r\n\r\ntr_filenames = glob.glob('%s/toy*.npy' % (data_dir))\r\n\r\ntr_dataset = Dataset.from_tensor_slices((tr_filenames))\r\ntr_dataset = tr_dataset.map(\r\n    lambda filename: tf.py_func(_read_py_function,\r\n                                [filename],\r\n                                [tf.float32, tf.float32]))\r\ntr_dataset = tr_dataset.shuffle(buffer_size=20)\r\ntr_dataset = tr_dataset.batch(2)\r\n\r\n\r\niterator = tr_dataset.make_initializable_iterator()\r\nnext_element = iterator.get_next()\r\n\r\nsess = tf.Session()\r\n\r\nfor _ in range(1):\r\n    # training\r\n    sess.run(iterator.initializer)\r\n\r\n    while True:\r\n        try:\r\n            feats, labs = sess.run(next_element)\r\n            print(feats.shape)\r\n            print(labs)\r\n        except tf.errors.OutOfRangeError:\r\n            break\r\n```"}