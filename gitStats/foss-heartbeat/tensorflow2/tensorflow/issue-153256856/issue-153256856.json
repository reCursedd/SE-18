{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2237", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2237/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2237/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2237/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/2237", "id": 153256856, "node_id": "MDU6SXNzdWUxNTMyNTY4NTY=", "number": 2237, "title": "Add support for recursive neural networks", "user": {"login": "ibab", "id": 890531, "node_id": "MDQ6VXNlcjg5MDUzMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/890531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibab", "html_url": "https://github.com/ibab", "followers_url": "https://api.github.com/users/ibab/followers", "following_url": "https://api.github.com/users/ibab/following{/other_user}", "gists_url": "https://api.github.com/users/ibab/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibab/subscriptions", "organizations_url": "https://api.github.com/users/ibab/orgs", "repos_url": "https://api.github.com/users/ibab/repos", "events_url": "https://api.github.com/users/ibab/events{/privacy}", "received_events_url": "https://api.github.com/users/ibab/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 26, "created_at": "2016-05-05T15:28:01Z", "updated_at": "2017-02-08T15:09:32Z", "closed_at": "2017-02-08T15:09:32Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I'd like to implement a recursive neural network as in <a href=\"http://www.socher.org/index.php/Main/ParsingNaturalScenesAndNaturalLanguageWithRecursiveNeuralNetworks\" rel=\"nofollow\">[Socher et al. 2011]</a> in TensorFlow.</p>\n<p>Note that this is different from recurrent neural networks, which are nicely supported by TensorFlow. The difference is that the network is not replicated into a linear sequence of operations, but into a tree structure.</p>\n<p>Maybe a tree traversal can already be implemented using <code>While</code> ops, but I'm not sure how.<br>\n(A bottom-up traversal of a tree would have to be performed for each entry in the dataset, applying the network at each node)<br>\nInstinctively, I have the impression that this would need a new C++ op that generalizes <code>While</code>.</p>", "body_text": "I'd like to implement a recursive neural network as in [Socher et al. 2011] in TensorFlow.\nNote that this is different from recurrent neural networks, which are nicely supported by TensorFlow. The difference is that the network is not replicated into a linear sequence of operations, but into a tree structure.\nMaybe a tree traversal can already be implemented using While ops, but I'm not sure how.\n(A bottom-up traversal of a tree would have to be performed for each entry in the dataset, applying the network at each node)\nInstinctively, I have the impression that this would need a new C++ op that generalizes While.", "body": "I'd like to implement a recursive neural network as in [[Socher et al. 2011]](http://www.socher.org/index.php/Main/ParsingNaturalScenesAndNaturalLanguageWithRecursiveNeuralNetworks) in TensorFlow.\n\nNote that this is different from recurrent neural networks, which are nicely supported by TensorFlow. The difference is that the network is not replicated into a linear sequence of operations, but into a tree structure.\n\nMaybe a tree traversal can already be implemented using `While` ops, but I'm not sure how.\n(A bottom-up traversal of a tree would have to be performed for each entry in the dataset, applying the network at each node)\nInstinctively, I have the impression that this would need a new C++ op that generalizes `While`.\n"}