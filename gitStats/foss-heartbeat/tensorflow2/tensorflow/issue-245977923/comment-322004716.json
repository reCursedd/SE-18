{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/322004716", "html_url": "https://github.com/tensorflow/tensorflow/issues/11807#issuecomment-322004716", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11807", "id": 322004716, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjAwNDcxNg==", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-12T20:41:56Z", "updated_at": "2017-08-12T20:42:41Z", "author_association": "NONE", "body_html": "<p>The guilty lines are in tensorflow.bzl:</p>\n<pre><code>def _cuda_copts():\n  \"\"\"Gets the appropriate set of copts for (maybe) CUDA compilation.\n\n    If we're doing CUDA compilation, returns copts for our particular CUDA\n    compiler.  If we're not doing CUDA compilation, returns an empty list.\n\n    \"\"\"\n  return cuda_default_copts() + select({\n      \"//conditions:default\": [],\n      \"@local_config_cuda//cuda:using_nvcc\": ([\n          \"-nvcc_options=relaxed-constexpr\",\n          \"-nvcc_options=ftz=true\",\n      ]),\n      \"@local_config_cuda//cuda:using_clang\": ([\n          \"-fcuda-flush-denormals-to-zero\",\n      ]),\n  })\n</code></pre>\n<p>The reproduce the behavior it seems like you'd need to build CUDA support using Clang.</p>", "body_text": "The guilty lines are in tensorflow.bzl:\ndef _cuda_copts():\n  \"\"\"Gets the appropriate set of copts for (maybe) CUDA compilation.\n\n    If we're doing CUDA compilation, returns copts for our particular CUDA\n    compiler.  If we're not doing CUDA compilation, returns an empty list.\n\n    \"\"\"\n  return cuda_default_copts() + select({\n      \"//conditions:default\": [],\n      \"@local_config_cuda//cuda:using_nvcc\": ([\n          \"-nvcc_options=relaxed-constexpr\",\n          \"-nvcc_options=ftz=true\",\n      ]),\n      \"@local_config_cuda//cuda:using_clang\": ([\n          \"-fcuda-flush-denormals-to-zero\",\n      ]),\n  })\n\nThe reproduce the behavior it seems like you'd need to build CUDA support using Clang.", "body": "The guilty lines are in tensorflow.bzl:\r\n\r\n```\r\ndef _cuda_copts():\r\n  \"\"\"Gets the appropriate set of copts for (maybe) CUDA compilation.\r\n\r\n    If we're doing CUDA compilation, returns copts for our particular CUDA\r\n    compiler.  If we're not doing CUDA compilation, returns an empty list.\r\n\r\n    \"\"\"\r\n  return cuda_default_copts() + select({\r\n      \"//conditions:default\": [],\r\n      \"@local_config_cuda//cuda:using_nvcc\": ([\r\n          \"-nvcc_options=relaxed-constexpr\",\r\n          \"-nvcc_options=ftz=true\",\r\n      ]),\r\n      \"@local_config_cuda//cuda:using_clang\": ([\r\n          \"-fcuda-flush-denormals-to-zero\",\r\n      ]),\r\n  })\r\n```\r\n\r\nThe reproduce the behavior it seems like you'd need to build CUDA support using Clang."}