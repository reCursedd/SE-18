{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8567", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8567/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8567/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8567/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8567", "id": 215566195, "node_id": "MDU6SXNzdWUyMTU1NjYxOTU=", "number": 8567, "title": "Is there a way to do partial_run with queues?", "user": {"login": "derekhh", "id": 1497445, "node_id": "MDQ6VXNlcjE0OTc0NDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1497445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/derekhh", "html_url": "https://github.com/derekhh", "followers_url": "https://api.github.com/users/derekhh/followers", "following_url": "https://api.github.com/users/derekhh/following{/other_user}", "gists_url": "https://api.github.com/users/derekhh/gists{/gist_id}", "starred_url": "https://api.github.com/users/derekhh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/derekhh/subscriptions", "organizations_url": "https://api.github.com/users/derekhh/orgs", "repos_url": "https://api.github.com/users/derekhh/repos", "events_url": "https://api.github.com/users/derekhh/events{/privacy}", "received_events_url": "https://api.github.com/users/derekhh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-03-20T21:51:24Z", "updated_at": "2017-06-16T20:37:40Z", "closed_at": "2017-06-16T20:37:40Z", "author_association": "NONE", "body_html": "<p>I'm reading a bunch of image files using the FIFO queue provided by <code>string_input_producer</code>. Some of these files have bad format and cannot be decoded properly. Therefore I would want to print the names of these files when the related functions from <code>tf.image</code> throw <code>tf.errors.InvalidArgumentError</code> exceptions.</p>\n<p>My graph definition looks like this:</p>\n<pre><code>...\nfilename_queue = tf.train.string_input_producer(files, num_epochs=1, shuffle=True)\nimage_reader = tf.WholeFileReader()\nkey, image_file = image_reader.read(filename_queue)\nis_png = tf.py_func(has_png_ext, [key], [tf.bool])\nimage = tf.cond(pred=is_png[0],\n                fn1=lambda: tf.image.decode_png(image_file),\n                fn2=lambda: tf.image.decode_jpeg(image_file))\n...\n</code></pre>\n<p>And then I'm fetching the output like this:</p>\n<pre><code>...\nwith tf.Session() as sess:\n    sess.run(init_op)\n    coord = tf.train.Coordinator()\n    threads = tf.train.start_queue_runners(coord=coord)\n    try:\n        while not coord.should_stop():\n            try:\n                nodes = sess.run([key, image])\n                nodes_results.append(nodes)\n                num_files += 1\n            except tf.errors.InvalidArgumentError:\n                num_failed += 1\n                num_failed_dir += 1\n...\n</code></pre>\n<p>Initially I've tried to print the value of <code>key</code> in the <code>except</code> block but this won't work. Then I've tried a bunch of ideas and none of them seems to be working. I've been trying to see if <a href=\"https://www.tensorflow.org/api_docs/python/tf/Session#partial_run\" rel=\"nofollow\">partial_run</a> could help but it takes a <code>feed_dict</code> input instead of a native queue input.</p>\n<p>So in short, my question is, is there a way to make partial_run work while using native queue inputs? Or is there a better way to solve my problem - output the file names when <code>tf.image.decode_*</code> throw exceptions?</p>", "body_text": "I'm reading a bunch of image files using the FIFO queue provided by string_input_producer. Some of these files have bad format and cannot be decoded properly. Therefore I would want to print the names of these files when the related functions from tf.image throw tf.errors.InvalidArgumentError exceptions.\nMy graph definition looks like this:\n...\nfilename_queue = tf.train.string_input_producer(files, num_epochs=1, shuffle=True)\nimage_reader = tf.WholeFileReader()\nkey, image_file = image_reader.read(filename_queue)\nis_png = tf.py_func(has_png_ext, [key], [tf.bool])\nimage = tf.cond(pred=is_png[0],\n                fn1=lambda: tf.image.decode_png(image_file),\n                fn2=lambda: tf.image.decode_jpeg(image_file))\n...\n\nAnd then I'm fetching the output like this:\n...\nwith tf.Session() as sess:\n    sess.run(init_op)\n    coord = tf.train.Coordinator()\n    threads = tf.train.start_queue_runners(coord=coord)\n    try:\n        while not coord.should_stop():\n            try:\n                nodes = sess.run([key, image])\n                nodes_results.append(nodes)\n                num_files += 1\n            except tf.errors.InvalidArgumentError:\n                num_failed += 1\n                num_failed_dir += 1\n...\n\nInitially I've tried to print the value of key in the except block but this won't work. Then I've tried a bunch of ideas and none of them seems to be working. I've been trying to see if partial_run could help but it takes a feed_dict input instead of a native queue input.\nSo in short, my question is, is there a way to make partial_run work while using native queue inputs? Or is there a better way to solve my problem - output the file names when tf.image.decode_* throw exceptions?", "body": "I'm reading a bunch of image files using the FIFO queue provided by `string_input_producer`. Some of these files have bad format and cannot be decoded properly. Therefore I would want to print the names of these files when the related functions from `tf.image` throw `tf.errors.InvalidArgumentError` exceptions.\r\n\r\nMy graph definition looks like this:\r\n\r\n    ...\r\n    filename_queue = tf.train.string_input_producer(files, num_epochs=1, shuffle=True)\r\n    image_reader = tf.WholeFileReader()\r\n    key, image_file = image_reader.read(filename_queue)\r\n    is_png = tf.py_func(has_png_ext, [key], [tf.bool])\r\n    image = tf.cond(pred=is_png[0],\r\n                    fn1=lambda: tf.image.decode_png(image_file),\r\n                    fn2=lambda: tf.image.decode_jpeg(image_file))\r\n    ...\r\n\r\nAnd then I'm fetching the output like this:\r\n\r\n    ...\r\n    with tf.Session() as sess:\r\n        sess.run(init_op)\r\n        coord = tf.train.Coordinator()\r\n        threads = tf.train.start_queue_runners(coord=coord)\r\n        try:\r\n            while not coord.should_stop():\r\n                try:\r\n                    nodes = sess.run([key, image])\r\n                    nodes_results.append(nodes)\r\n                    num_files += 1\r\n                except tf.errors.InvalidArgumentError:\r\n                    num_failed += 1\r\n                    num_failed_dir += 1\r\n    ...\r\n\r\nInitially I've tried to print the value of `key` in the `except` block but this won't work. Then I've tried a bunch of ideas and none of them seems to be working. I've been trying to see if [partial_run](https://www.tensorflow.org/api_docs/python/tf/Session#partial_run) could help but it takes a `feed_dict` input instead of a native queue input.\r\n\r\nSo in short, my question is, is there a way to make partial_run work while using native queue inputs? Or is there a better way to solve my problem - output the file names when `tf.image.decode_*` throw exceptions?"}