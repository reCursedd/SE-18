{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22687", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22687/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22687/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22687/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22687", "id": 366172811, "node_id": "MDU6SXNzdWUzNjYxNzI4MTE=", "number": 22687, "title": "Bug in tf.keras.layers.ReLU.__init__", "user": {"login": "blaueck", "id": 7766017, "node_id": "MDQ6VXNlcjc3NjYwMTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/7766017?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blaueck", "html_url": "https://github.com/blaueck", "followers_url": "https://api.github.com/users/blaueck/followers", "following_url": "https://api.github.com/users/blaueck/following{/other_user}", "gists_url": "https://api.github.com/users/blaueck/gists{/gist_id}", "starred_url": "https://api.github.com/users/blaueck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blaueck/subscriptions", "organizations_url": "https://api.github.com/users/blaueck/orgs", "repos_url": "https://api.github.com/users/blaueck/repos", "events_url": "https://api.github.com/users/blaueck/events{/privacy}", "received_events_url": "https://api.github.com/users/blaueck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-10-03T04:40:21Z", "updated_at": "2018-10-04T07:23:14Z", "closed_at": "2018-10-04T07:23:13Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nwindows 10</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>:</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\nsource</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\nr1.11</li>\n<li><strong>Python version</strong>:<br>\n3.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>:<br>\n0.15.0</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>:</li>\n<li><strong>GPU model and memory</strong>:</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>There is a bug in tf.keras.layers.ReLU.__init__. When passing keyward argument max_value with value None, which is also the default value, no gradient will be backword through it. I think is caused by the following code in the __init__ function:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c1\">self</span>.max_value <span class=\"pl-k\">=</span> K.cast_to_floatx(max_value)</pre></div>\n<p>When max_value is None, the self.max_value will be nan of type float32. The self.max_value will be used with tf.clip_by_value as the upper bound and cause no gradient, since x &lt; nan is false for any x.  I think the self.max_value should be None when max_value is None.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c1\">self</span>.max_value <span class=\"pl-k\">=</span> K.cast_to_floatx(max_value) <span class=\"pl-k\">if</span> max_value <span class=\"pl-k\">is</span> <span class=\"pl-k\">not</span> <span class=\"pl-c1\">None</span> <span class=\"pl-k\">else</span> <span class=\"pl-c1\">None</span></pre></div>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nwindows 10\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:\nTensorFlow installed from (source or binary):\nsource\nTensorFlow version (use command below):\nr1.11\nPython version:\n3.6\nBazel version (if compiling from source):\n0.15.0\nGCC/Compiler version (if compiling from source):\nCUDA/cuDNN version:\nGPU model and memory:\nExact command to reproduce:\n\nDescribe the problem\nThere is a bug in tf.keras.layers.ReLU.__init__. When passing keyward argument max_value with value None, which is also the default value, no gradient will be backword through it. I think is caused by the following code in the __init__ function:\nself.max_value = K.cast_to_floatx(max_value)\nWhen max_value is None, the self.max_value will be nan of type float32. The self.max_value will be used with tf.clip_by_value as the upper bound and cause no gradient, since x < nan is false for any x.  I think the self.max_value should be None when max_value is None.\nself.max_value = K.cast_to_floatx(max_value) if max_value is not None else None", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nwindows 10\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**:\r\n- **TensorFlow installed from (source or binary)**:\r\nsource\r\n- **TensorFlow version (use command below)**:\r\nr1.11\r\n- **Python version**:\r\n3.6\r\n- **Bazel version (if compiling from source)**:\r\n0.15.0\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\nThere is a bug in tf.keras.layers.ReLU.\\_\\_init__. When passing keyward argument max_value with value None, which is also the default value, no gradient will be backword through it. I think is caused by the following code in the \\_\\_init__ function:\r\n``` python\r\nself.max_value = K.cast_to_floatx(max_value)\r\n```\r\nWhen max_value is None, the self.max_value will be nan of type float32. The self.max_value will be used with tf.clip_by_value as the upper bound and cause no gradient, since x < nan is false for any x.  I think the self.max_value should be None when max_value is None. \r\n``` python\r\nself.max_value = K.cast_to_floatx(max_value) if max_value is not None else None\r\n```\r\n"}