{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5688", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5688/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5688/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5688/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/5688", "id": 190252047, "node_id": "MDU6SXNzdWUxOTAyNTIwNDc=", "number": 5688, "title": "tensorflow crashes when using large image with 3d convolutional network", "user": {"login": "HggsHntr", "id": 23520507, "node_id": "MDQ6VXNlcjIzNTIwNTA3", "avatar_url": "https://avatars3.githubusercontent.com/u/23520507?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HggsHntr", "html_url": "https://github.com/HggsHntr", "followers_url": "https://api.github.com/users/HggsHntr/followers", "following_url": "https://api.github.com/users/HggsHntr/following{/other_user}", "gists_url": "https://api.github.com/users/HggsHntr/gists{/gist_id}", "starred_url": "https://api.github.com/users/HggsHntr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HggsHntr/subscriptions", "organizations_url": "https://api.github.com/users/HggsHntr/orgs", "repos_url": "https://api.github.com/users/HggsHntr/repos", "events_url": "https://api.github.com/users/HggsHntr/events{/privacy}", "received_events_url": "https://api.github.com/users/HggsHntr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "yzhwang", "id": 1002405, "node_id": "MDQ6VXNlcjEwMDI0MDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1002405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzhwang", "html_url": "https://github.com/yzhwang", "followers_url": "https://api.github.com/users/yzhwang/followers", "following_url": "https://api.github.com/users/yzhwang/following{/other_user}", "gists_url": "https://api.github.com/users/yzhwang/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzhwang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzhwang/subscriptions", "organizations_url": "https://api.github.com/users/yzhwang/orgs", "repos_url": "https://api.github.com/users/yzhwang/repos", "events_url": "https://api.github.com/users/yzhwang/events{/privacy}", "received_events_url": "https://api.github.com/users/yzhwang/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yzhwang", "id": 1002405, "node_id": "MDQ6VXNlcjEwMDI0MDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1002405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzhwang", "html_url": "https://github.com/yzhwang", "followers_url": "https://api.github.com/users/yzhwang/followers", "following_url": "https://api.github.com/users/yzhwang/following{/other_user}", "gists_url": "https://api.github.com/users/yzhwang/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzhwang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzhwang/subscriptions", "organizations_url": "https://api.github.com/users/yzhwang/orgs", "repos_url": "https://api.github.com/users/yzhwang/repos", "events_url": "https://api.github.com/users/yzhwang/events{/privacy}", "received_events_url": "https://api.github.com/users/yzhwang/received_events", "type": "User", "site_admin": false}, {"login": "zheng-xq", "id": 15736910, "node_id": "MDQ6VXNlcjE1NzM2OTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/15736910?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zheng-xq", "html_url": "https://github.com/zheng-xq", "followers_url": "https://api.github.com/users/zheng-xq/followers", "following_url": "https://api.github.com/users/zheng-xq/following{/other_user}", "gists_url": "https://api.github.com/users/zheng-xq/gists{/gist_id}", "starred_url": "https://api.github.com/users/zheng-xq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zheng-xq/subscriptions", "organizations_url": "https://api.github.com/users/zheng-xq/orgs", "repos_url": "https://api.github.com/users/zheng-xq/repos", "events_url": "https://api.github.com/users/zheng-xq/events{/privacy}", "received_events_url": "https://api.github.com/users/zheng-xq/received_events", "type": "User", "site_admin": false}, {"login": "tfboyd", "id": 23486130, "node_id": "MDQ6VXNlcjIzNDg2MTMw", "avatar_url": "https://avatars1.githubusercontent.com/u/23486130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tfboyd", "html_url": "https://github.com/tfboyd", "followers_url": "https://api.github.com/users/tfboyd/followers", "following_url": "https://api.github.com/users/tfboyd/following{/other_user}", "gists_url": "https://api.github.com/users/tfboyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tfboyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tfboyd/subscriptions", "organizations_url": "https://api.github.com/users/tfboyd/orgs", "repos_url": "https://api.github.com/users/tfboyd/repos", "events_url": "https://api.github.com/users/tfboyd/events{/privacy}", "received_events_url": "https://api.github.com/users/tfboyd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 48, "created_at": "2016-11-18T07:17:07Z", "updated_at": "2018-01-29T20:02:40Z", "closed_at": "2017-10-04T18:43:51Z", "author_association": "NONE", "body_html": "<p>I'm trying to implement a 3d fully convolutional network on my GPU. But for some reason I get a crash.</p>\n<h3>Environment info</h3>\n<p>Operating System: Ubuntu 14.04 LTS<br>\nGPU: GeForce Titan X .</p>\n<p>Installed version of CUDA and cuDNN: 8.0 and 5<br>\n(attach the output of `ls -l /path/to/cuda/lib/libcud*<br>\n<a href=\"https://github.com/tensorflow/tensorflow/files/599236/cud.filelist.txt\">cud.filelist.txt</a> )</p>\n<p>I installed tensorflow version 0.11.0rc2, and it also reproduce in docker installation (gcr.io/tensorflow/tensorflow:latest-gpu)</p>\n<h3>Example code</h3>\n<p>The following code reproduce the problem:</p>\n<pre><code>import numpy as np\nimport tensorflow as tf\n\ngraph = tf.Graph()\n\nwith graph.as_default():\n    tf_dataset = tf.placeholder(tf.float32, shape=(1, 512, 512, 512, 1))\n    tf_label = tf.placeholder(tf.float32, shape=(1, 512, 512, 512, 1))\n\n    layer1_weights = tf.Variable(tf.truncated_normal((2, 2, 2, 1, 1), stddev=0.1))\n    layer1_bias = tf.Variable(tf.zeros(1))\n\n    conv = tf.nn.conv3d(tf_dataset, layer1_weights, (1, 1, 1, 1, 1), padding='SAME')\n    logits = tf.nn.relu(conv+layer1_bias)\n\n    loss = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(logits, tf_label))\n    optimizer = tf.train.GradientDescentOptimizer(0.05).minimize(loss)\n\nwith tf.Session(graph=graph) as session:\n    tf.initialize_all_variables().run()\n    batchData = np.random.rand(1, 512, 512, 512, 1).astype(np.float32)\n    batchLabels = (np.random.rand(1, 512, 512, 512, 1)&gt;0.5).astype(np.float32)\n    feed_dict = {tf_dataset : batchData, tf_label : batchLabels}\n    _ = session.run((optimizer, ), feed_dict=feed_dict)\n</code></pre>\n<p>with the following output:</p>\n<blockquote>\n<p>I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so locally<br>\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so locally<br>\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so locally<br>\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally<br>\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so locally<br>\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:951] Found device 0 with properties:<br>\nname: GeForce GTX TITAN X<br>\nmajor: 5 minor: 2 memoryClockRate (GHz) 1.076<br>\npciBusID 0000:01:00.0<br>\nTotal memory: 11.92GiB<br>\nFree memory: 11.68GiB<br>\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:972] DMA: 0<br>\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:982] 0:   Y<br>\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:1041] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX TITAN X, pci bus id: 0000:01:00.0)<br>\nF tensorflow/stream_executor/cuda/cuda_dnn.cc:2440] failed to enqueue convolution on stream: CUDNN_STATUS_NOT_SUPPORTED</p>\n</blockquote>", "body_text": "I'm trying to implement a 3d fully convolutional network on my GPU. But for some reason I get a crash.\nEnvironment info\nOperating System: Ubuntu 14.04 LTS\nGPU: GeForce Titan X .\nInstalled version of CUDA and cuDNN: 8.0 and 5\n(attach the output of `ls -l /path/to/cuda/lib/libcud*\ncud.filelist.txt )\nI installed tensorflow version 0.11.0rc2, and it also reproduce in docker installation (gcr.io/tensorflow/tensorflow:latest-gpu)\nExample code\nThe following code reproduce the problem:\nimport numpy as np\nimport tensorflow as tf\n\ngraph = tf.Graph()\n\nwith graph.as_default():\n    tf_dataset = tf.placeholder(tf.float32, shape=(1, 512, 512, 512, 1))\n    tf_label = tf.placeholder(tf.float32, shape=(1, 512, 512, 512, 1))\n\n    layer1_weights = tf.Variable(tf.truncated_normal((2, 2, 2, 1, 1), stddev=0.1))\n    layer1_bias = tf.Variable(tf.zeros(1))\n\n    conv = tf.nn.conv3d(tf_dataset, layer1_weights, (1, 1, 1, 1, 1), padding='SAME')\n    logits = tf.nn.relu(conv+layer1_bias)\n\n    loss = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(logits, tf_label))\n    optimizer = tf.train.GradientDescentOptimizer(0.05).minimize(loss)\n\nwith tf.Session(graph=graph) as session:\n    tf.initialize_all_variables().run()\n    batchData = np.random.rand(1, 512, 512, 512, 1).astype(np.float32)\n    batchLabels = (np.random.rand(1, 512, 512, 512, 1)>0.5).astype(np.float32)\n    feed_dict = {tf_dataset : batchData, tf_label : batchLabels}\n    _ = session.run((optimizer, ), feed_dict=feed_dict)\n\nwith the following output:\n\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so locally\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:951] Found device 0 with properties:\nname: GeForce GTX TITAN X\nmajor: 5 minor: 2 memoryClockRate (GHz) 1.076\npciBusID 0000:01:00.0\nTotal memory: 11.92GiB\nFree memory: 11.68GiB\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:972] DMA: 0\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:982] 0:   Y\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:1041] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX TITAN X, pci bus id: 0000:01:00.0)\nF tensorflow/stream_executor/cuda/cuda_dnn.cc:2440] failed to enqueue convolution on stream: CUDNN_STATUS_NOT_SUPPORTED", "body": "I'm trying to implement a 3d fully convolutional network on my GPU. But for some reason I get a crash.\r\n\r\n### Environment info\r\nOperating System: Ubuntu 14.04 LTS\r\nGPU: GeForce Titan X .\r\n\r\nInstalled version of CUDA and cuDNN: 8.0 and 5\r\n(attach the output of `ls -l /path/to/cuda/lib/libcud* \r\n[cud.filelist.txt](https://github.com/tensorflow/tensorflow/files/599236/cud.filelist.txt) )\r\n\r\nI installed tensorflow version 0.11.0rc2, and it also reproduce in docker installation (gcr.io/tensorflow/tensorflow:latest-gpu)\r\n\r\n### Example code\r\nThe following code reproduce the problem:\r\n\r\n    import numpy as np\r\n    import tensorflow as tf\r\n\r\n    graph = tf.Graph()\r\n\r\n    with graph.as_default():\r\n        tf_dataset = tf.placeholder(tf.float32, shape=(1, 512, 512, 512, 1))\r\n        tf_label = tf.placeholder(tf.float32, shape=(1, 512, 512, 512, 1))\r\n\r\n        layer1_weights = tf.Variable(tf.truncated_normal((2, 2, 2, 1, 1), stddev=0.1))\r\n        layer1_bias = tf.Variable(tf.zeros(1))\r\n\r\n        conv = tf.nn.conv3d(tf_dataset, layer1_weights, (1, 1, 1, 1, 1), padding='SAME')\r\n        logits = tf.nn.relu(conv+layer1_bias)\r\n\r\n        loss = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(logits, tf_label))\r\n        optimizer = tf.train.GradientDescentOptimizer(0.05).minimize(loss)\r\n\r\n    with tf.Session(graph=graph) as session:\r\n        tf.initialize_all_variables().run()\r\n        batchData = np.random.rand(1, 512, 512, 512, 1).astype(np.float32)\r\n        batchLabels = (np.random.rand(1, 512, 512, 512, 1)>0.5).astype(np.float32)\r\n        feed_dict = {tf_dataset : batchData, tf_label : batchLabels}\r\n        _ = session.run((optimizer, ), feed_dict=feed_dict)\r\n\r\nwith the following output:\r\n\r\n> I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so locally\r\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so locally\r\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so locally\r\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally\r\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so locally\r\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:951] Found device 0 with properties:\r\nname: GeForce GTX TITAN X\r\nmajor: 5 minor: 2 memoryClockRate (GHz) 1.076\r\npciBusID 0000:01:00.0\r\nTotal memory: 11.92GiB\r\nFree memory: 11.68GiB\r\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:972] DMA: 0\r\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:982] 0:   Y\r\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:1041] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX TITAN X, pci bus id: 0000:01:00.0)\r\nF tensorflow/stream_executor/cuda/cuda_dnn.cc:2440] failed to enqueue convolution on stream: CUDNN_STATUS_NOT_SUPPORTED\r\n\r\n"}