{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5548", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5548/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5548/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5548/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/5548", "id": 188826454, "node_id": "MDU6SXNzdWUxODg4MjY0NTQ=", "number": 5548, "title": "Restore and predict tensorflow contrib.learn.DNNRegressor/DNNClassifier without running at least one step of training (which was a missing feature).", "user": {"login": "johnnevins", "id": 5839658, "node_id": "MDQ6VXNlcjU4Mzk2NTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5839658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnnevins", "html_url": "https://github.com/johnnevins", "followers_url": "https://api.github.com/users/johnnevins/followers", "following_url": "https://api.github.com/users/johnnevins/following{/other_user}", "gists_url": "https://api.github.com/users/johnnevins/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnnevins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnnevins/subscriptions", "organizations_url": "https://api.github.com/users/johnnevins/orgs", "repos_url": "https://api.github.com/users/johnnevins/repos", "events_url": "https://api.github.com/users/johnnevins/events{/privacy}", "received_events_url": "https://api.github.com/users/johnnevins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2016-11-11T18:58:06Z", "updated_at": "2017-06-14T06:20:24Z", "closed_at": "2017-06-14T06:20:24Z", "author_association": "NONE", "body_html": "<p>Hi,</p>\n<p>I'm following up on the issue that is mentioned in this thread:<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"165914098\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/3340\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/3340/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/3340\">#3340</a></p>\n<p>Currently the way to restore a trained model is: First created a DNNRegressor/DNNClassifier specifiyng model_dir on constructor, fit() (training step) , and restore it by creating another DNNRegressor/DNNClassifier using the same model_dir in constructor. That works for me and is not the problem.</p>\n<p>However, when I want to make the model portable to others, meaning I train on my machine and copy the model file it generates to others, and let them predict on new data sets without training again. It fails.</p>\n<p>And from a large and wide search on the issue, I find several resources point out to the same reply: \"Right now, there isn't a way to restore and predict without running at least one step of training (which is a missing feature)\"<a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=577277\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/martinwicke\">@martinwicke</a><br>\nAnother reference: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"165461501\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/3306\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/3306/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/3306\">#3306</a></p>\n<p>Since this was the reply 3 months ago, and now I follow <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5376757\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/michaelisard\">@michaelisard</a> 's suggestion to open a separate  issue to track the feature of restoring without predicting.</p>\n<p>Look forward to hearing from experts who develops tensorflow, or any walk-around is welcome. Thanks!</p>", "body_text": "Hi,\nI'm following up on the issue that is mentioned in this thread:\n#3340\nCurrently the way to restore a trained model is: First created a DNNRegressor/DNNClassifier specifiyng model_dir on constructor, fit() (training step) , and restore it by creating another DNNRegressor/DNNClassifier using the same model_dir in constructor. That works for me and is not the problem.\nHowever, when I want to make the model portable to others, meaning I train on my machine and copy the model file it generates to others, and let them predict on new data sets without training again. It fails.\nAnd from a large and wide search on the issue, I find several resources point out to the same reply: \"Right now, there isn't a way to restore and predict without running at least one step of training (which is a missing feature)\"@martinwicke\nAnother reference: #3306\nSince this was the reply 3 months ago, and now I follow @michaelisard 's suggestion to open a separate  issue to track the feature of restoring without predicting.\nLook forward to hearing from experts who develops tensorflow, or any walk-around is welcome. Thanks!", "body": "Hi,\r\n\r\nI'm following up on the issue that is mentioned in this thread:\r\nhttps://github.com/tensorflow/tensorflow/issues/3340\r\n\r\nCurrently the way to restore a trained model is: First created a DNNRegressor/DNNClassifier specifiyng model_dir on constructor, fit() (training step) , and restore it by creating another DNNRegressor/DNNClassifier using the same model_dir in constructor. That works for me and is not the problem.\r\n\r\nHowever, when I want to make the model portable to others, meaning I train on my machine and copy the model file it generates to others, and let them predict on new data sets without training again. It fails.\r\n\r\nAnd from a large and wide search on the issue, I find several resources point out to the same reply: \"Right now, there isn't a way to restore and predict without running at least one step of training (which is a missing feature)\"@martinwicke \r\nAnother reference: https://github.com/tensorflow/tensorflow/issues/3306\r\n\r\nSince this was the reply 3 months ago, and now I follow @michaelisard 's suggestion to open a separate  issue to track the feature of restoring without predicting.\r\n\r\nLook forward to hearing from experts who develops tensorflow, or any walk-around is welcome. Thanks!\r\n\r\n\r\n\r\n\r\n\r\n"}