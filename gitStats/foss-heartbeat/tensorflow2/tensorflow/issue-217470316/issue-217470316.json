{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8771", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8771/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8771/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8771/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8771", "id": 217470316, "node_id": "MDU6SXNzdWUyMTc0NzAzMTY=", "number": 8771, "title": "Tensorflow 1.0 RNN weights already exists", "user": {"login": "auxs2015", "id": 20922968, "node_id": "MDQ6VXNlcjIwOTIyOTY4", "avatar_url": "https://avatars1.githubusercontent.com/u/20922968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auxs2015", "html_url": "https://github.com/auxs2015", "followers_url": "https://api.github.com/users/auxs2015/followers", "following_url": "https://api.github.com/users/auxs2015/following{/other_user}", "gists_url": "https://api.github.com/users/auxs2015/gists{/gist_id}", "starred_url": "https://api.github.com/users/auxs2015/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auxs2015/subscriptions", "organizations_url": "https://api.github.com/users/auxs2015/orgs", "repos_url": "https://api.github.com/users/auxs2015/repos", "events_url": "https://api.github.com/users/auxs2015/events{/privacy}", "received_events_url": "https://api.github.com/users/auxs2015/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-28T07:26:35Z", "updated_at": "2017-03-31T03:27:38Z", "closed_at": "2017-03-31T03:16:14Z", "author_association": "NONE", "body_html": "<p>i  got a error</p>\n<pre><code>`  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/variable_scope.py\", line 639, in _get_single_variable\n    name, \"\".join(traceback.format_list(tb))))\nValueError: Variable lstm_def/rnn/basic_lstm_cell/weights already exists, disallowed. Did you mean to set reuse=True in VarScope? Originally defined at:\n</code></pre>\n<div class=\"highlight highlight-source-python\"><pre>this <span class=\"pl-k\">is</span> my code:\n <span class=\"pl-bu\">`<span class=\"pl-k\">def</span> lstm(batch):      </span>\n    w_in<span class=\"pl-k\">=</span>weights[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>in<span class=\"pl-pds\">'</span></span>]\n    b_in<span class=\"pl-k\">=</span>biases[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>in<span class=\"pl-pds\">'</span></span>]\n    <span class=\"pl-c1\">input</span><span class=\"pl-k\">=</span>tf.reshape(X,[<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>,input_size])  \n    input_rnn<span class=\"pl-k\">=</span>tf.matmul(<span class=\"pl-c1\">input</span>,w_in)<span class=\"pl-k\">+</span>b_in\n    input_rnn<span class=\"pl-k\">=</span>tf.reshape(input_rnn,[<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>,time_step,rnn_unit]) \n    \n    <span class=\"pl-c\"><span class=\"pl-c\">#</span>cell=tf.nn.rnn_cell.BasicLSTMCell(rnn_unit)  </span>\n    <span class=\"pl-k\">with</span> tf.variable_scope(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>cell_def<span class=\"pl-pds\">'</span></span>):\n    \tcell<span class=\"pl-k\">=</span>tf.contrib.rnn.BasicLSTMCell(rnn_unit)\n    \tinit_state<span class=\"pl-k\">=</span>cell.zero_state(batch,<span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32)\n    <span class=\"pl-k\">with</span> tf.variable_scope(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>lstm_def<span class=\"pl-pds\">'</span></span>):\n    \toutput_rnn,final_states<span class=\"pl-k\">=</span>tf.nn.dynamic_rnn(cell, input_rnn,<span class=\"pl-v\">initial_state</span><span class=\"pl-k\">=</span>init_state, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32) \n\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span>output_rnn,final_states=tf.nn.rnn_cell.LSTMCell(cell, input_rnn,initial_state=init_state, dtype=tf.float32)</span>\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span>with tf.variable_scope('lstm'):</span>\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span>output_rnn,final_states=tf.contrib.rnn.static_rnn(cell, input_rnn,initial_state=init_state,dtype=tf.float32)</span>\n    output<span class=\"pl-k\">=</span>tf.reshape(output_rnn,[<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>,rnn_unit]) \n    w_out<span class=\"pl-k\">=</span>weights[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>out<span class=\"pl-pds\">'</span></span>]\n    b_out<span class=\"pl-k\">=</span>biases[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>out<span class=\"pl-pds\">'</span></span>]\n    pred<span class=\"pl-k\">=</span>tf.matmul(output,w_out)<span class=\"pl-k\">+</span>b_out\n    <span class=\"pl-k\">return</span> pred,final_states</pre></div>", "body_text": "i  got a error\n`  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/variable_scope.py\", line 639, in _get_single_variable\n    name, \"\".join(traceback.format_list(tb))))\nValueError: Variable lstm_def/rnn/basic_lstm_cell/weights already exists, disallowed. Did you mean to set reuse=True in VarScope? Originally defined at:\n\nthis is my code:\n `def lstm(batch):      \n    w_in=weights['in']\n    b_in=biases['in']\n    input=tf.reshape(X,[-1,input_size])  \n    input_rnn=tf.matmul(input,w_in)+b_in\n    input_rnn=tf.reshape(input_rnn,[-1,time_step,rnn_unit]) \n    \n    #cell=tf.nn.rnn_cell.BasicLSTMCell(rnn_unit)  \n    with tf.variable_scope('cell_def'):\n    \tcell=tf.contrib.rnn.BasicLSTMCell(rnn_unit)\n    \tinit_state=cell.zero_state(batch,dtype=tf.float32)\n    with tf.variable_scope('lstm_def'):\n    \toutput_rnn,final_states=tf.nn.dynamic_rnn(cell, input_rnn,initial_state=init_state, dtype=tf.float32) \n\n    #output_rnn,final_states=tf.nn.rnn_cell.LSTMCell(cell, input_rnn,initial_state=init_state, dtype=tf.float32)\n    #with tf.variable_scope('lstm'):\n    #output_rnn,final_states=tf.contrib.rnn.static_rnn(cell, input_rnn,initial_state=init_state,dtype=tf.float32)\n    output=tf.reshape(output_rnn,[-1,rnn_unit]) \n    w_out=weights['out']\n    b_out=biases['out']\n    pred=tf.matmul(output,w_out)+b_out\n    return pred,final_states", "body": "i  got a error  \r\n```\r\n`  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/variable_scope.py\", line 639, in _get_single_variable\r\n    name, \"\".join(traceback.format_list(tb))))\r\nValueError: Variable lstm_def/rnn/basic_lstm_cell/weights already exists, disallowed. Did you mean to set reuse=True in VarScope? Originally defined at:\r\n```\r\n\r\n```python\r\nthis is my code:\r\n `def lstm(batch):      \r\n    w_in=weights['in']\r\n    b_in=biases['in']\r\n    input=tf.reshape(X,[-1,input_size])  \r\n    input_rnn=tf.matmul(input,w_in)+b_in\r\n    input_rnn=tf.reshape(input_rnn,[-1,time_step,rnn_unit]) \r\n    \r\n    #cell=tf.nn.rnn_cell.BasicLSTMCell(rnn_unit)  \r\n    with tf.variable_scope('cell_def'):\r\n    \tcell=tf.contrib.rnn.BasicLSTMCell(rnn_unit)\r\n    \tinit_state=cell.zero_state(batch,dtype=tf.float32)\r\n    with tf.variable_scope('lstm_def'):\r\n    \toutput_rnn,final_states=tf.nn.dynamic_rnn(cell, input_rnn,initial_state=init_state, dtype=tf.float32) \r\n\r\n    #output_rnn,final_states=tf.nn.rnn_cell.LSTMCell(cell, input_rnn,initial_state=init_state, dtype=tf.float32)\r\n    #with tf.variable_scope('lstm'):\r\n    #output_rnn,final_states=tf.contrib.rnn.static_rnn(cell, input_rnn,initial_state=init_state,dtype=tf.float32)\r\n    output=tf.reshape(output_rnn,[-1,rnn_unit]) \r\n    w_out=weights['out']\r\n    b_out=biases['out']\r\n    pred=tf.matmul(output,w_out)+b_out\r\n    return pred,final_states\r\n```"}