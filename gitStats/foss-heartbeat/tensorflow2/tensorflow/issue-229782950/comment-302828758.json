{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/302828758", "html_url": "https://github.com/tensorflow/tensorflow/issues/10014#issuecomment-302828758", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10014", "id": 302828758, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjgyODc1OA==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-19T22:55:21Z", "updated_at": "2017-05-19T22:55:21Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Out of curiosity, why would you expect</p>\n<div class=\"highlight highlight-source-python\"><pre>sess.run([id_default, id_regular], <span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>{regular: [<span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">5</span>]})</pre></div>\n<p>...to return <code>[1, 1], [5, 5]</code>? The contract for <code>tf.placeholder_with_default()</code> is pretty simple: it produces its default value unless you feed it (and it offers some latitude for feeding values of different shapes). There's nothing in the program that associates <code>id_default</code> with the value of placeholder <code>regular</code> (no edge between them in the graph), so the value you feed for <code>regular</code> will never influence the value or <code>id_default</code>.</p>\n<p>I suspect you're looking for a higher-level input that maintains an association between two (or more?) tensors. That might well be a fine thing, but we'll need more information about the behavior you expect before we can tell if it's a reasonable thing to include.</p>", "body_text": "Out of curiosity, why would you expect\nsess.run([id_default, id_regular], feed_dict={regular: [5, 5]})\n...to return [1, 1], [5, 5]? The contract for tf.placeholder_with_default() is pretty simple: it produces its default value unless you feed it (and it offers some latitude for feeding values of different shapes). There's nothing in the program that associates id_default with the value of placeholder regular (no edge between them in the graph), so the value you feed for regular will never influence the value or id_default.\nI suspect you're looking for a higher-level input that maintains an association between two (or more?) tensors. That might well be a fine thing, but we'll need more information about the behavior you expect before we can tell if it's a reasonable thing to include.", "body": "Out of curiosity, why would you expect\r\n\r\n```python\r\nsess.run([id_default, id_regular], feed_dict={regular: [5, 5]})\r\n```\r\n\r\n...to return `[1, 1], [5, 5]`? The contract for `tf.placeholder_with_default()` is pretty simple: it produces its default value unless you feed it (and it offers some latitude for feeding values of different shapes). There's nothing in the program that associates `id_default` with the value of placeholder `regular` (no edge between them in the graph), so the value you feed for `regular` will never influence the value or `id_default`. \r\n\r\nI suspect you're looking for a higher-level input that maintains an association between two (or more?) tensors. That might well be a fine thing, but we'll need more information about the behavior you expect before we can tell if it's a reasonable thing to include."}