{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/303277842", "html_url": "https://github.com/tensorflow/tensorflow/issues/9952#issuecomment-303277842", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9952", "id": 303277842, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzI3Nzg0Mg==", "user": {"login": "lirchi", "id": 4840577, "node_id": "MDQ6VXNlcjQ4NDA1Nzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4840577?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lirchi", "html_url": "https://github.com/lirchi", "followers_url": "https://api.github.com/users/lirchi/followers", "following_url": "https://api.github.com/users/lirchi/following{/other_user}", "gists_url": "https://api.github.com/users/lirchi/gists{/gist_id}", "starred_url": "https://api.github.com/users/lirchi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lirchi/subscriptions", "organizations_url": "https://api.github.com/users/lirchi/orgs", "repos_url": "https://api.github.com/users/lirchi/repos", "events_url": "https://api.github.com/users/lirchi/events{/privacy}", "received_events_url": "https://api.github.com/users/lirchi/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-23T03:07:18Z", "updated_at": "2017-05-24T01:43:46Z", "author_association": "NONE", "body_html": "<p>This link was very helpful and I can successfully load models now - thanks a lot <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=88808\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/skye\">@skye</a>!</p>\n<p>I've been doing a lot of digging, and it seems like the correct way to define input tensor for a high-level estimator is to construct a tensorflow::Example and then serialize it as string. Are there more efficient ways to do it? (That is, assuming the inputs are a bunch of floats, then building an object, defining feature map, serializing to string and then parsing it seems wasteful when this is done millions+ times. For example in real-time robotics domain.)</p>", "body_text": "This link was very helpful and I can successfully load models now - thanks a lot @skye!\nI've been doing a lot of digging, and it seems like the correct way to define input tensor for a high-level estimator is to construct a tensorflow::Example and then serialize it as string. Are there more efficient ways to do it? (That is, assuming the inputs are a bunch of floats, then building an object, defining feature map, serializing to string and then parsing it seems wasteful when this is done millions+ times. For example in real-time robotics domain.)", "body": "This link was very helpful and I can successfully load models now - thanks a lot @skye!\r\n\r\nI've been doing a lot of digging, and it seems like the correct way to define input tensor for a high-level estimator is to construct a tensorflow::Example and then serialize it as string. Are there more efficient ways to do it? (That is, assuming the inputs are a bunch of floats, then building an object, defining feature map, serializing to string and then parsing it seems wasteful when this is done millions+ times. For example in real-time robotics domain.)"}