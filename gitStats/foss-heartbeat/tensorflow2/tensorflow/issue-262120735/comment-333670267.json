{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/333670267", "html_url": "https://github.com/tensorflow/tensorflow/issues/13448#issuecomment-333670267", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13448", "id": 333670267, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzY3MDI2Nw==", "user": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-02T21:26:53Z", "updated_at": "2017-10-02T21:26:53Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Although I added the codepath for other compute values over the weekend (just git pull and you'll see the new fixed code), and it should compile for you now, it appears that the check isn't quite right in windows.  <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a> any reason why <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/util/cuda_kernel_helper.h#L440\">this check</a> would fail in windows?</p>\n<p>The reason I ask, is there are other functions in there, like ldg, which should be properly calling the __ldg intrinsic for a speedup on SM35+, but if those are falling back to the SM30 versions then the windows build could be unintentionally running slower GPU kernels.</p>", "body_text": "Although I added the codepath for other compute values over the weekend (just git pull and you'll see the new fixed code), and it should compile for you now, it appears that the check isn't quite right in windows.  @mrry any reason why this check would fail in windows?\nThe reason I ask, is there are other functions in there, like ldg, which should be properly calling the __ldg intrinsic for a speedup on SM35+, but if those are falling back to the SM30 versions then the windows build could be unintentionally running slower GPU kernels.", "body": "Although I added the codepath for other compute values over the weekend (just git pull and you'll see the new fixed code), and it should compile for you now, it appears that the check isn't quite right in windows.  @mrry any reason why [this check](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/util/cuda_kernel_helper.h#L440) would fail in windows?\r\n\r\nThe reason I ask, is there are other functions in there, like ldg, which should be properly calling the __ldg intrinsic for a speedup on SM35+, but if those are falling back to the SM30 versions then the windows build could be unintentionally running slower GPU kernels."}