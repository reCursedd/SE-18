{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15280", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15280/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15280/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15280/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15280", "id": 281138804, "node_id": "MDU6SXNzdWUyODExMzg4MDQ=", "number": 15280, "title": "Missing dlcose()/FreeLibrary() after dlopen()/LoadLibrary()", "user": {"login": "orpillar", "id": 33270570, "node_id": "MDQ6VXNlcjMzMjcwNTcw", "avatar_url": "https://avatars2.githubusercontent.com/u/33270570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orpillar", "html_url": "https://github.com/orpillar", "followers_url": "https://api.github.com/users/orpillar/followers", "following_url": "https://api.github.com/users/orpillar/following{/other_user}", "gists_url": "https://api.github.com/users/orpillar/gists{/gist_id}", "starred_url": "https://api.github.com/users/orpillar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orpillar/subscriptions", "organizations_url": "https://api.github.com/users/orpillar/orgs", "repos_url": "https://api.github.com/users/orpillar/repos", "events_url": "https://api.github.com/users/orpillar/events{/privacy}", "received_events_url": "https://api.github.com/users/orpillar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-12-11T19:28:27Z", "updated_at": "2018-01-10T03:08:17Z", "closed_at": "2018-01-10T03:08:17Z", "author_association": "NONE", "body_html": "<p>Have I written custom code: N/A<br>\nOS Platform and Distribution: N/A<br>\nTensorFlow installed from: N/A<br>\nTensorFlow version: N/A<br>\nBazel version: N/A<br>\nCUDA/cuDNN version: N/A<br>\nGPU model and memory: N/A<br>\nExact command to reproduce: N/A</p>\n<p>Problem description:<br>\nA. Looking at code below, there are couple of issues:<br>\n<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/lite/nnapi/NeuralNetworksShim.h#L34-L59\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/lite/nnapi/NeuralNetworksShim.h#L34-L59</a><br>\n1.There is no dlcose() call after dlopen() and dysym() in the code above.<br>\n2.There can be two successful getLibraryHandle() calls without dlclose() in loadFunction().</p>\n<p>B. More generally, the code below shows there is no interface to unload DLL either.<br>\n<div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/359d6f9716c0bb9bd8201ce600da98b0481a8049/tensorflow/core/platform/env.h#L254-L280\">tensorflow/tensorflow/core/platform/env.h</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 254 to 280\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/359d6f9716c0bb9bd8201ce600da98b0481a8049\">359d6f9</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L254\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"254\"></td>\n          <td id=\"LC254\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">//</span> Pass \"library_filename\" to a platform-specific mechanism for dynamically</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L255\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"255\"></td>\n          <td id=\"LC255\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">//</span> loading a library.  The rules for determining the exact location of the</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L256\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"256\"></td>\n          <td id=\"LC256\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">//</span> library are platform-specific and are not documented here.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L257\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"257\"></td>\n          <td id=\"LC257\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">//</span></span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L258\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"258\"></td>\n          <td id=\"LC258\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">//</span> On success, returns a handle to the library in \"*handle\" and returns</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L259\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"259\"></td>\n          <td id=\"LC259\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">//</span> OK from the function.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L260\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"260\"></td>\n          <td id=\"LC260\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">//</span> Otherwise returns nullptr in \"*handle\" and an error status from the</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L261\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"261\"></td>\n          <td id=\"LC261\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">//</span> function.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L262\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"262\"></td>\n          <td id=\"LC262\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">virtual</span> Status <span class=\"pl-en\">LoadLibrary</span>(<span class=\"pl-k\">const</span> <span class=\"pl-k\">char</span>* library_filename, <span class=\"pl-k\">void</span>** handle) = 0; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L263\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"263\"></td>\n          <td id=\"LC263\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L264\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"264\"></td>\n          <td id=\"LC264\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">//</span> \\brief Get a pointer to a symbol from a dynamic library.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L265\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"265\"></td>\n          <td id=\"LC265\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">//</span></span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L266\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"266\"></td>\n          <td id=\"LC266\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">//</span> \"handle\" should be a pointer returned from a previous call to LoadLibrary.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L267\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"267\"></td>\n          <td id=\"LC267\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">//</span> On success, store a pointer to the located symbol in \"*symbol\" and return</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L268\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"268\"></td>\n          <td id=\"LC268\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">//</span> OK from the function. Otherwise, returns nullptr in \"*symbol\" and an error</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L269\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"269\"></td>\n          <td id=\"LC269\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">//</span> status from the function.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L270\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"270\"></td>\n          <td id=\"LC270\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">virtual</span> Status <span class=\"pl-en\">GetSymbolFromLibrary</span>(<span class=\"pl-k\">void</span>* handle, <span class=\"pl-k\">const</span> <span class=\"pl-k\">char</span>* symbol_name, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L271\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"271\"></td>\n          <td id=\"LC271\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">                                     <span class=\"pl-k\">void</span>** symbol) = 0; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L272\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"272\"></td>\n          <td id=\"LC272\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L273\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"273\"></td>\n          <td id=\"LC273\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">//</span> \\brief build the name of dynamic library.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L274\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"274\"></td>\n          <td id=\"LC274\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">//</span></span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L275\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"275\"></td>\n          <td id=\"LC275\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">//</span> \"name\" should be name of the library.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L276\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"276\"></td>\n          <td id=\"LC276\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">//</span> \"version\" should be the version of the library or NULL</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L277\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"277\"></td>\n          <td id=\"LC277\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">//</span> returns the name that LoadLibrary() can use</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L278\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"278\"></td>\n          <td id=\"LC278\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">virtual</span> string <span class=\"pl-en\">FormatLibraryFileName</span>(<span class=\"pl-k\">const</span> string&amp; name, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L279\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"279\"></td>\n          <td id=\"LC279\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-k\">const</span> string&amp; version) = 0; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L280\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"280\"></td>\n          <td id=\"LC280\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "body_text": "Have I written custom code: N/A\nOS Platform and Distribution: N/A\nTensorFlow installed from: N/A\nTensorFlow version: N/A\nBazel version: N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce: N/A\nProblem description:\nA. Looking at code below, there are couple of issues:\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/lite/nnapi/NeuralNetworksShim.h#L34-L59\n1.There is no dlcose() call after dlopen() and dysym() in the code above.\n2.There can be two successful getLibraryHandle() calls without dlclose() in loadFunction().\nB. More generally, the code below shows there is no interface to unload DLL either.\n\n  \n    \n      tensorflow/tensorflow/core/platform/env.h\n    \n    \n        Lines 254 to 280\n      in\n      359d6f9\n    \n    \n    \n    \n\n        \n          \n           // Pass \"library_filename\" to a platform-specific mechanism for dynamically \n        \n\n        \n          \n           // loading a library.  The rules for determining the exact location of the \n        \n\n        \n          \n           // library are platform-specific and are not documented here. \n        \n\n        \n          \n           // \n        \n\n        \n          \n           // On success, returns a handle to the library in \"*handle\" and returns \n        \n\n        \n          \n           // OK from the function. \n        \n\n        \n          \n           // Otherwise returns nullptr in \"*handle\" and an error status from the \n        \n\n        \n          \n           // function. \n        \n\n        \n          \n           virtual Status LoadLibrary(const char* library_filename, void** handle) = 0; \n        \n\n        \n          \n            \n        \n\n        \n          \n           // \\brief Get a pointer to a symbol from a dynamic library. \n        \n\n        \n          \n           // \n        \n\n        \n          \n           // \"handle\" should be a pointer returned from a previous call to LoadLibrary. \n        \n\n        \n          \n           // On success, store a pointer to the located symbol in \"*symbol\" and return \n        \n\n        \n          \n           // OK from the function. Otherwise, returns nullptr in \"*symbol\" and an error \n        \n\n        \n          \n           // status from the function. \n        \n\n        \n          \n           virtual Status GetSymbolFromLibrary(void* handle, const char* symbol_name, \n        \n\n        \n          \n                                               void** symbol) = 0; \n        \n\n        \n          \n            \n        \n\n        \n          \n           // \\brief build the name of dynamic library. \n        \n\n        \n          \n           // \n        \n\n        \n          \n           // \"name\" should be name of the library. \n        \n\n        \n          \n           // \"version\" should be the version of the library or NULL \n        \n\n        \n          \n           // returns the name that LoadLibrary() can use \n        \n\n        \n          \n           virtual string FormatLibraryFileName(const string& name, \n        \n\n        \n          \n               const string& version) = 0;", "body": "Have I written custom code: N/A\r\n OS Platform and Distribution: N/A\r\n TensorFlow installed from: N/A\r\n TensorFlow version: N/A\r\n Bazel version: N/A\r\n CUDA/cuDNN version: N/A\r\n GPU model and memory: N/A\r\n Exact command to reproduce: N/A\r\n\r\nProblem description:\r\nA. Looking at code below, there are couple of issues:\r\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/lite/nnapi/NeuralNetworksShim.h#L34-L59\r\n   1.There is no dlcose() call after dlopen() and dysym() in the code above.\r\n   2.There can be two successful getLibraryHandle() calls without dlclose() in loadFunction().\r\n\r\nB. More generally, the code below shows there is no interface to unload DLL either.\r\nhttps://github.com/tensorflow/tensorflow/blob/359d6f9716c0bb9bd8201ce600da98b0481a8049/tensorflow/core/platform/env.h#L254-L280"}