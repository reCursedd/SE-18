{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/267847954", "html_url": "https://github.com/tensorflow/tensorflow/issues/6213#issuecomment-267847954", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6213", "id": 267847954, "node_id": "MDEyOklzc3VlQ29tbWVudDI2Nzg0Nzk1NA==", "user": {"login": "beniroquai", "id": 4345528, "node_id": "MDQ6VXNlcjQzNDU1Mjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/4345528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beniroquai", "html_url": "https://github.com/beniroquai", "followers_url": "https://api.github.com/users/beniroquai/followers", "following_url": "https://api.github.com/users/beniroquai/following{/other_user}", "gists_url": "https://api.github.com/users/beniroquai/gists{/gist_id}", "starred_url": "https://api.github.com/users/beniroquai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beniroquai/subscriptions", "organizations_url": "https://api.github.com/users/beniroquai/orgs", "repos_url": "https://api.github.com/users/beniroquai/repos", "events_url": "https://api.github.com/users/beniroquai/events{/privacy}", "received_events_url": "https://api.github.com/users/beniroquai/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-18T21:26:28Z", "updated_at": "2016-12-18T21:27:52Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3376817\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/andrewharp\">@andrewharp</a> Thanks for your reply. Yes, I use the <code>jni_utils.cc</code> file and when I use a pb file with about 35 MB I get the following output:</p>\n<p><code>I/native: jni_utils.cc:117 fd: 28, length: 35256478</code></p>\n<p>Another file with 135 MB gives the following output:</p>\n<p><code>I/native: jni_utils.cc:117 fd: 28, length: 137619240</code></p>\n<p>The crap crashed all over sudden with the following output:</p>\n<pre><code>A/native: jni_utils.cc:127 Check failed: message-&gt;ParseFromZeroCopyStream(&amp;lis) \nA/libc: Fatal signal 6 (SIGABRT), code -6 in tid 13421 (AsyncTask #1)\n12-18 22:23:18.735 199-199/? A/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\n12-18 22:23:18.735 199-199/? A/DEBUG: Build fingerprint: 'google/hammerhead/hammerhead:6.0.1/M4B30X/3237893:user/release-keys'\n12-18 22:23:18.735 199-199/? A/DEBUG: Revision: '11'\n12-18 22:23:18.735 199-199/? A/DEBUG: ABI: 'arm'\n12-18 22:23:18.735 199-199/? A/DEBUG: pid: 13346, tid: 13421, name: AsyncTask #1  &gt;&gt;&gt; de.xxx &lt;&lt;&lt;\n12-18 22:23:18.735 199-199/? A/DEBUG: signal 6 (SIGABRT), code -6 (SI_TKILL), fault addr --------\n12-18 22:23:18.778 199-199/? A/DEBUG: Abort message: 'jni_utils.cc:127 Check failed: message-&gt;ParseFromZeroCopyStream(&amp;lis) '\n12-18 22:23:18.778 199-199/? A/DEBUG:     r0 00000000  r1 0000346d  r2 00000006  r3 9d7d1978\n12-18 22:23:18.778 199-199/? A/DEBUG:     r4 9d7d1980  r5 9d7d1930  r6 00000058  r7 0000010c\n12-18 22:23:18.778 199-199/? A/DEBUG:     r8 9d7d0c14  r9 9d7d0ac0  sl 9d7d0c14  fp 9d7d1400\n12-18 22:23:18.778 199-199/? A/DEBUG:     ip 00000006  sp 9d7d0a68  lr b6ca0b61  pc b6ca2f50  cpsr 400f0010\n12-18 22:23:18.793 199-199/? A/DEBUG: backtrace:\n12-18 22:23:18.793 199-199/? A/DEBUG:     #00 pc 00041f50  /system/lib/libc.so (tgkill+12)\n12-18 22:23:18.793 199-199/? A/DEBUG:     #01 pc 0003fb5d  /system/lib/libc.so (pthread_kill+32)\n12-18 22:23:18.794 199-199/? A/DEBUG:     #02 pc 0001c30f  /system/lib/libc.so (raise+10)\n12-18 22:23:18.794 199-199/? A/DEBUG:     #03 pc 000194c1  /system/lib/libc.so (__libc_android_abort+34)\n12-18 22:23:18.795 199-199/? A/DEBUG:     #04 pc 000174ac  /system/lib/libc.so (abort+4)\n12-18 22:23:18.795 199-199/? A/DEBUG:     #05 pc 0058bbe4  /data/app/de.xxx-1/lib/arm/libnative_microscope.so\n12-18 22:23:18.796 199-199/? A/DEBUG:     #06 pc 0058bd64  /data/app/de.xxx-1/lib/arm/libnative_microscope.so\n12-18 22:23:18.796 199-199/? A/DEBUG:     #07 pc 0058bd80  /data/app/de.xxx-1/lib/arm/libnative_microscope.so\n12-18 22:23:18.796 199-199/? A/DEBUG:     #08 pc 0007675c  /data/app/de.xxx-1/lib/arm/libnative_microscope.so (_Z15ReadFileToProtoP13AAssetManagerPKcPN6google8protobuf11MessageLiteE+1076)\n12-18 22:23:18.796 199-199/? A/DEBUG:     #09 pc 0007459c  /data/app/de.xxx-1/lib/arm/libnative_microscope.so (Java_de_xxx_nativepart_NativePart_init+772)\n12-18 22:23:18.796 199-199/? A/DEBUG:     #10 pc 0000087d  /data/data/de.xxx/cache/slice-slice_6-classes.dex (offset 0x3000)\n\n</code></pre>\n<p>Do I need to do anythin with the file? I've just seen, that there is something like optimizing protobuf files for inference using Bazel. Is that necessary?</p>\n<p>Thank you!</p>", "body_text": "@andrewharp Thanks for your reply. Yes, I use the jni_utils.cc file and when I use a pb file with about 35 MB I get the following output:\nI/native: jni_utils.cc:117 fd: 28, length: 35256478\nAnother file with 135 MB gives the following output:\nI/native: jni_utils.cc:117 fd: 28, length: 137619240\nThe crap crashed all over sudden with the following output:\nA/native: jni_utils.cc:127 Check failed: message->ParseFromZeroCopyStream(&lis) \nA/libc: Fatal signal 6 (SIGABRT), code -6 in tid 13421 (AsyncTask #1)\n12-18 22:23:18.735 199-199/? A/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\n12-18 22:23:18.735 199-199/? A/DEBUG: Build fingerprint: 'google/hammerhead/hammerhead:6.0.1/M4B30X/3237893:user/release-keys'\n12-18 22:23:18.735 199-199/? A/DEBUG: Revision: '11'\n12-18 22:23:18.735 199-199/? A/DEBUG: ABI: 'arm'\n12-18 22:23:18.735 199-199/? A/DEBUG: pid: 13346, tid: 13421, name: AsyncTask #1  >>> de.xxx <<<\n12-18 22:23:18.735 199-199/? A/DEBUG: signal 6 (SIGABRT), code -6 (SI_TKILL), fault addr --------\n12-18 22:23:18.778 199-199/? A/DEBUG: Abort message: 'jni_utils.cc:127 Check failed: message->ParseFromZeroCopyStream(&lis) '\n12-18 22:23:18.778 199-199/? A/DEBUG:     r0 00000000  r1 0000346d  r2 00000006  r3 9d7d1978\n12-18 22:23:18.778 199-199/? A/DEBUG:     r4 9d7d1980  r5 9d7d1930  r6 00000058  r7 0000010c\n12-18 22:23:18.778 199-199/? A/DEBUG:     r8 9d7d0c14  r9 9d7d0ac0  sl 9d7d0c14  fp 9d7d1400\n12-18 22:23:18.778 199-199/? A/DEBUG:     ip 00000006  sp 9d7d0a68  lr b6ca0b61  pc b6ca2f50  cpsr 400f0010\n12-18 22:23:18.793 199-199/? A/DEBUG: backtrace:\n12-18 22:23:18.793 199-199/? A/DEBUG:     #00 pc 00041f50  /system/lib/libc.so (tgkill+12)\n12-18 22:23:18.793 199-199/? A/DEBUG:     #01 pc 0003fb5d  /system/lib/libc.so (pthread_kill+32)\n12-18 22:23:18.794 199-199/? A/DEBUG:     #02 pc 0001c30f  /system/lib/libc.so (raise+10)\n12-18 22:23:18.794 199-199/? A/DEBUG:     #03 pc 000194c1  /system/lib/libc.so (__libc_android_abort+34)\n12-18 22:23:18.795 199-199/? A/DEBUG:     #04 pc 000174ac  /system/lib/libc.so (abort+4)\n12-18 22:23:18.795 199-199/? A/DEBUG:     #05 pc 0058bbe4  /data/app/de.xxx-1/lib/arm/libnative_microscope.so\n12-18 22:23:18.796 199-199/? A/DEBUG:     #06 pc 0058bd64  /data/app/de.xxx-1/lib/arm/libnative_microscope.so\n12-18 22:23:18.796 199-199/? A/DEBUG:     #07 pc 0058bd80  /data/app/de.xxx-1/lib/arm/libnative_microscope.so\n12-18 22:23:18.796 199-199/? A/DEBUG:     #08 pc 0007675c  /data/app/de.xxx-1/lib/arm/libnative_microscope.so (_Z15ReadFileToProtoP13AAssetManagerPKcPN6google8protobuf11MessageLiteE+1076)\n12-18 22:23:18.796 199-199/? A/DEBUG:     #09 pc 0007459c  /data/app/de.xxx-1/lib/arm/libnative_microscope.so (Java_de_xxx_nativepart_NativePart_init+772)\n12-18 22:23:18.796 199-199/? A/DEBUG:     #10 pc 0000087d  /data/data/de.xxx/cache/slice-slice_6-classes.dex (offset 0x3000)\n\n\nDo I need to do anythin with the file? I've just seen, that there is something like optimizing protobuf files for inference using Bazel. Is that necessary?\nThank you!", "body": "@andrewharp Thanks for your reply. Yes, I use the `jni_utils.cc` file and when I use a pb file with about 35 MB I get the following output:\r\n\r\n`I/native: jni_utils.cc:117 fd: 28, length: 35256478`\r\n\r\nAnother file with 135 MB gives the following output:\r\n\r\n`I/native: jni_utils.cc:117 fd: 28, length: 137619240`\r\n\r\nThe crap crashed all over sudden with the following output:\r\n\r\n```\r\nA/native: jni_utils.cc:127 Check failed: message->ParseFromZeroCopyStream(&lis) \r\nA/libc: Fatal signal 6 (SIGABRT), code -6 in tid 13421 (AsyncTask #1)\r\n12-18 22:23:18.735 199-199/? A/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\n12-18 22:23:18.735 199-199/? A/DEBUG: Build fingerprint: 'google/hammerhead/hammerhead:6.0.1/M4B30X/3237893:user/release-keys'\r\n12-18 22:23:18.735 199-199/? A/DEBUG: Revision: '11'\r\n12-18 22:23:18.735 199-199/? A/DEBUG: ABI: 'arm'\r\n12-18 22:23:18.735 199-199/? A/DEBUG: pid: 13346, tid: 13421, name: AsyncTask #1  >>> de.xxx <<<\r\n12-18 22:23:18.735 199-199/? A/DEBUG: signal 6 (SIGABRT), code -6 (SI_TKILL), fault addr --------\r\n12-18 22:23:18.778 199-199/? A/DEBUG: Abort message: 'jni_utils.cc:127 Check failed: message->ParseFromZeroCopyStream(&lis) '\r\n12-18 22:23:18.778 199-199/? A/DEBUG:     r0 00000000  r1 0000346d  r2 00000006  r3 9d7d1978\r\n12-18 22:23:18.778 199-199/? A/DEBUG:     r4 9d7d1980  r5 9d7d1930  r6 00000058  r7 0000010c\r\n12-18 22:23:18.778 199-199/? A/DEBUG:     r8 9d7d0c14  r9 9d7d0ac0  sl 9d7d0c14  fp 9d7d1400\r\n12-18 22:23:18.778 199-199/? A/DEBUG:     ip 00000006  sp 9d7d0a68  lr b6ca0b61  pc b6ca2f50  cpsr 400f0010\r\n12-18 22:23:18.793 199-199/? A/DEBUG: backtrace:\r\n12-18 22:23:18.793 199-199/? A/DEBUG:     #00 pc 00041f50  /system/lib/libc.so (tgkill+12)\r\n12-18 22:23:18.793 199-199/? A/DEBUG:     #01 pc 0003fb5d  /system/lib/libc.so (pthread_kill+32)\r\n12-18 22:23:18.794 199-199/? A/DEBUG:     #02 pc 0001c30f  /system/lib/libc.so (raise+10)\r\n12-18 22:23:18.794 199-199/? A/DEBUG:     #03 pc 000194c1  /system/lib/libc.so (__libc_android_abort+34)\r\n12-18 22:23:18.795 199-199/? A/DEBUG:     #04 pc 000174ac  /system/lib/libc.so (abort+4)\r\n12-18 22:23:18.795 199-199/? A/DEBUG:     #05 pc 0058bbe4  /data/app/de.xxx-1/lib/arm/libnative_microscope.so\r\n12-18 22:23:18.796 199-199/? A/DEBUG:     #06 pc 0058bd64  /data/app/de.xxx-1/lib/arm/libnative_microscope.so\r\n12-18 22:23:18.796 199-199/? A/DEBUG:     #07 pc 0058bd80  /data/app/de.xxx-1/lib/arm/libnative_microscope.so\r\n12-18 22:23:18.796 199-199/? A/DEBUG:     #08 pc 0007675c  /data/app/de.xxx-1/lib/arm/libnative_microscope.so (_Z15ReadFileToProtoP13AAssetManagerPKcPN6google8protobuf11MessageLiteE+1076)\r\n12-18 22:23:18.796 199-199/? A/DEBUG:     #09 pc 0007459c  /data/app/de.xxx-1/lib/arm/libnative_microscope.so (Java_de_xxx_nativepart_NativePart_init+772)\r\n12-18 22:23:18.796 199-199/? A/DEBUG:     #10 pc 0000087d  /data/data/de.xxx/cache/slice-slice_6-classes.dex (offset 0x3000)\r\n\r\n```\r\n\r\nDo I need to do anythin with the file? I've just seen, that there is something like optimizing protobuf files for inference using Bazel. Is that necessary? \r\n\r\nThank you! "}