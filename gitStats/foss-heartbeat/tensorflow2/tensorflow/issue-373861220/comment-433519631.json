{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/433519631", "html_url": "https://github.com/tensorflow/tensorflow/pull/23250#issuecomment-433519631", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23250", "id": 433519631, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzUxOTYzMQ==", "user": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-26T19:33:52Z", "updated_at": "2018-10-26T19:33:52Z", "author_association": "MEMBER", "body_html": "<p>Ah I see. I think it's intended to be used more like this:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">with</span> tf.name_scope(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>outer<span class=\"pl-pds\">\"</span></span>):\n    <span class=\"pl-k\">with</span> tf.name_scope(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>inner<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">as</span> inner_scope:\n        <span class=\"pl-c1\">print</span>(tf.constant(<span class=\"pl-c1\">1</span>))\n<span class=\"pl-k\">with</span> tf.name_scope(inner_scope):\n    <span class=\"pl-c1\">print</span>(tf.constant(<span class=\"pl-c1\">1</span>))</pre></div>\n<p>This prints:<br>\nouter/inner/Const:0<br>\nouter/inner/Const_1:0</p>\n<p>I'm hesitant to expose a new API endpoint for doing the same thing, especially since you might get unintended behavior with <code>absolute_name_scope</code> if there's a regular <code>name_scope</code> somewhere in the stack. Could you save the scope and re-use it as shown above?</p>", "body_text": "Ah I see. I think it's intended to be used more like this:\nwith tf.name_scope(\"outer\"):\n    with tf.name_scope(\"inner\") as inner_scope:\n        print(tf.constant(1))\nwith tf.name_scope(inner_scope):\n    print(tf.constant(1))\nThis prints:\nouter/inner/Const:0\nouter/inner/Const_1:0\nI'm hesitant to expose a new API endpoint for doing the same thing, especially since you might get unintended behavior with absolute_name_scope if there's a regular name_scope somewhere in the stack. Could you save the scope and re-use it as shown above?", "body": "Ah I see. I think it's intended to be used more like this:\r\n```python\r\nwith tf.name_scope(\"outer\"):\r\n    with tf.name_scope(\"inner\") as inner_scope:\r\n        print(tf.constant(1))\r\nwith tf.name_scope(inner_scope):\r\n    print(tf.constant(1))\r\n```\r\nThis prints:\r\nouter/inner/Const:0\r\nouter/inner/Const_1:0\r\n\r\nI'm hesitant to expose a new API endpoint for doing the same thing, especially since you might get unintended behavior with `absolute_name_scope` if there's a regular `name_scope` somewhere in the stack. Could you save the scope and re-use it as shown above?"}