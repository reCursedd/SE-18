{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/267379076", "html_url": "https://github.com/tensorflow/tensorflow/issues/6315#issuecomment-267379076", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6315", "id": 267379076, "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzM3OTA3Ng==", "user": {"login": "maxim5", "id": 2580604, "node_id": "MDQ6VXNlcjI1ODA2MDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2580604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxim5", "html_url": "https://github.com/maxim5", "followers_url": "https://api.github.com/users/maxim5/followers", "following_url": "https://api.github.com/users/maxim5/following{/other_user}", "gists_url": "https://api.github.com/users/maxim5/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxim5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxim5/subscriptions", "organizations_url": "https://api.github.com/users/maxim5/orgs", "repos_url": "https://api.github.com/users/maxim5/repos", "events_url": "https://api.github.com/users/maxim5/events{/privacy}", "received_events_url": "https://api.github.com/users/maxim5/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-15T16:51:15Z", "updated_at": "2016-12-15T16:51:15Z", "author_association": "NONE", "body_html": "<p>Why isn't it required in simple cases?</p>\n<pre><code>mode = tf.placeholder(tf.string, name='mode')\nlayer = tf.Variable(0)\nlayer = tf.cond(tf.equal(mode, 'bar'), lambda: layer, lambda: 2 * layer)\ninit = tf.global_variables_initializer()\nwith tf.Session() as session:\n  session.run(init)\n</code></pre>", "body_text": "Why isn't it required in simple cases?\nmode = tf.placeholder(tf.string, name='mode')\nlayer = tf.Variable(0)\nlayer = tf.cond(tf.equal(mode, 'bar'), lambda: layer, lambda: 2 * layer)\ninit = tf.global_variables_initializer()\nwith tf.Session() as session:\n  session.run(init)", "body": "Why isn't it required in simple cases?\r\n\r\n```\r\nmode = tf.placeholder(tf.string, name='mode')\r\nlayer = tf.Variable(0)\r\nlayer = tf.cond(tf.equal(mode, 'bar'), lambda: layer, lambda: 2 * layer)\r\ninit = tf.global_variables_initializer()\r\nwith tf.Session() as session:\r\n  session.run(init)\r\n```\r\n"}