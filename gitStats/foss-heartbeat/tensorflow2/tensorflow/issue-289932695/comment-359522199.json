{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/359522199", "html_url": "https://github.com/tensorflow/tensorflow/issues/16239#issuecomment-359522199", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16239", "id": 359522199, "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTUyMjE5OQ==", "user": {"login": "zheng-xq", "id": 15736910, "node_id": "MDQ6VXNlcjE1NzM2OTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/15736910?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zheng-xq", "html_url": "https://github.com/zheng-xq", "followers_url": "https://api.github.com/users/zheng-xq/followers", "following_url": "https://api.github.com/users/zheng-xq/following{/other_user}", "gists_url": "https://api.github.com/users/zheng-xq/gists{/gist_id}", "starred_url": "https://api.github.com/users/zheng-xq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zheng-xq/subscriptions", "organizations_url": "https://api.github.com/users/zheng-xq/orgs", "repos_url": "https://api.github.com/users/zheng-xq/repos", "events_url": "https://api.github.com/users/zheng-xq/events{/privacy}", "received_events_url": "https://api.github.com/users/zheng-xq/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-22T18:39:47Z", "updated_at": "2018-01-22T18:39:47Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The current managed allocator is only used for internal testing purpose, and not exposed to real models. Adding <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7523982\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/chsigg\">@chsigg</a>.</p>\n<p>The down side of using cudaMallocManaged directly is that it forces a device/host synchronization on a fine granularity. That's why TF currently use a BFC suballocator.</p>\n<p>That being said, it is worth trying to use cudaMallocManaged as the underlying TF allocator.</p>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/4806cb0646bd21f713722bd97c0d0262c575f7e0/tensorflow/stream_executor/cuda/cuda_driver.cc#L934\">tensorflow/tensorflow/stream_executor/cuda/cuda_driver.cc</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 934\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/4806cb0646bd21f713722bd97c0d0262c575f7e0\">4806cb0</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L934\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"934\"></td>\n          <td id=\"LC934\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> CUresult res = <span class=\"pl-c1\">cuMemAlloc</span>(&amp;result, bytes); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>We will have to test it on real models to see if there are a positive effect.</p>", "body_text": "The current managed allocator is only used for internal testing purpose, and not exposed to real models. Adding @chsigg.\nThe down side of using cudaMallocManaged directly is that it forces a device/host synchronization on a fine granularity. That's why TF currently use a BFC suballocator.\nThat being said, it is worth trying to use cudaMallocManaged as the underlying TF allocator.\n\n  \n    \n      tensorflow/tensorflow/stream_executor/cuda/cuda_driver.cc\n    \n    \n         Line 934\n      in\n      4806cb0\n    \n    \n    \n    \n\n        \n          \n           CUresult res = cuMemAlloc(&result, bytes); \n        \n    \n  \n\n\nWe will have to test it on real models to see if there are a positive effect.", "body": "The current managed allocator is only used for internal testing purpose, and not exposed to real models. Adding @chsigg.\r\n\r\nThe down side of using cudaMallocManaged directly is that it forces a device/host synchronization on a fine granularity. That's why TF currently use a BFC suballocator.\r\n\r\nThat being said, it is worth trying to use cudaMallocManaged as the underlying TF allocator.\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/4806cb0646bd21f713722bd97c0d0262c575f7e0/tensorflow/stream_executor/cuda/cuda_driver.cc#L934\r\n\r\nWe will have to test it on real models to see if there are a positive effect."}