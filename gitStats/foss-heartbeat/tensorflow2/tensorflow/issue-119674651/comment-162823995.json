{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/162823995", "html_url": "https://github.com/tensorflow/tensorflow/issues/383#issuecomment-162823995", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/383", "id": 162823995, "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjgyMzk5NQ==", "user": {"login": "HamedMP", "id": 3755031, "node_id": "MDQ6VXNlcjM3NTUwMzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/3755031?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HamedMP", "html_url": "https://github.com/HamedMP", "followers_url": "https://api.github.com/users/HamedMP/followers", "following_url": "https://api.github.com/users/HamedMP/following{/other_user}", "gists_url": "https://api.github.com/users/HamedMP/gists{/gist_id}", "starred_url": "https://api.github.com/users/HamedMP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HamedMP/subscriptions", "organizations_url": "https://api.github.com/users/HamedMP/orgs", "repos_url": "https://api.github.com/users/HamedMP/repos", "events_url": "https://api.github.com/users/HamedMP/events{/privacy}", "received_events_url": "https://api.github.com/users/HamedMP/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-08T09:17:01Z", "updated_at": "2015-12-08T09:18:29Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=463737\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vrv\">@vrv</a>  I had same problem and headed here to see if it's a bug or not,</p>\n<p>I have eval.py for calculating my CNN accuracy and used exactly same method to load ckpt file. I got this error but using <code>tf.Graph()</code> doesn't help. Instead creating a <code>dummy</code> variable solve the error.</p>\n<blockquote>\n<p>p.s just inform you that this code is not working and got stuck in the <code>sess.run(acc)</code></p>\n</blockquote>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">with</span> tf.Graph().as_default():\n\n    dummy <span class=\"pl-k\">=</span> tf.Variable(<span class=\"pl-c1\">0</span>)  <span class=\"pl-c\"><span class=\"pl-c\">#</span> dummy variable !!!</span>\n    init_op <span class=\"pl-k\">=</span> tf.initialize_all_variables()\n\n    <span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n\n      sess.run(init_op)\n\n      saver <span class=\"pl-k\">=</span> tf.train.Saver()\n      <span class=\"pl-c\"><span class=\"pl-c\">#</span> Start the queue runners.</span>\n      coord <span class=\"pl-k\">=</span> tf.train.Coordinator()\n      threads <span class=\"pl-k\">=</span> tf.train.start_queue_runners(<span class=\"pl-v\">sess</span><span class=\"pl-k\">=</span>sess, <span class=\"pl-v\">coord</span><span class=\"pl-k\">=</span>coord)\n\n      summary_op <span class=\"pl-k\">=</span> tf.merge_all_summaries()\n\n      summary_writer <span class=\"pl-k\">=</span> tf.train.SummaryWriter(<span class=\"pl-c1\">FLAGS</span>.eval_dir,\n                                              <span class=\"pl-v\">graph_def</span><span class=\"pl-k\">=</span>sess.graph_def)\n\n\n      ckpt <span class=\"pl-k\">=</span> tf.train.get_checkpoint_state(<span class=\"pl-v\">checkpoint_dir</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">FLAGS</span>.checkpoint_dir)\n      <span class=\"pl-c1\">print</span> ckpt.model_checkpoint_path\n      <span class=\"pl-k\">if</span> ckpt <span class=\"pl-k\">and</span> ckpt.model_checkpoint_path:\n        saver.restore(sess, ckpt.model_checkpoint_path)\n        <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Restored!<span class=\"pl-pds\">'</span></span>)\n\n      images, labels <span class=\"pl-k\">=</span> my_input.inputs_val()\n\n      <span class=\"pl-c\"><span class=\"pl-c\">#</span> Build a Graph that computes the logits predictions from the</span>\n      <span class=\"pl-c\"><span class=\"pl-c\">#</span> inference model.</span>\n      logits <span class=\"pl-k\">=</span> my_cifar.inference(images)\n\n      acc <span class=\"pl-k\">=</span> my_cifar.evaluation(logits, labels)\n\n      tf.scalar_summary(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Acc<span class=\"pl-pds\">'</span></span>, acc)\n\n      <span class=\"pl-k\">try</span>:\n        <span class=\"pl-k\">while</span> <span class=\"pl-k\">not</span> coord.should_stop():\n          <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Calculating Acc:<span class=\"pl-pds\">'</span></span>)\n          acc_r <span class=\"pl-k\">=</span> sess.run(acc)\n          <span class=\"pl-c1\">print</span>(acc_r)\n\n          <span class=\"pl-c\"><span class=\"pl-c\">#</span> Write results to TensorBoard</span>\n          summary_str <span class=\"pl-k\">=</span> sess.run(summary_op)\n          summary_writer.add_summary(summary_str)\n\n      <span class=\"pl-k\">except</span> tf.errors.OutOfRangeError:\n        <span class=\"pl-c1\">print</span> (<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Done!<span class=\"pl-pds\">'</span></span>)\n\n      <span class=\"pl-k\">finally</span>:\n        <span class=\"pl-c\"><span class=\"pl-c\">#</span> When done, ask the threads to stop.</span>\n        coord.request_stop()\n\n      coord.join(threads)</pre></div>", "body_text": "@vrv  I had same problem and headed here to see if it's a bug or not,\nI have eval.py for calculating my CNN accuracy and used exactly same method to load ckpt file. I got this error but using tf.Graph() doesn't help. Instead creating a dummy variable solve the error.\n\np.s just inform you that this code is not working and got stuck in the sess.run(acc)\n\nwith tf.Graph().as_default():\n\n    dummy = tf.Variable(0)  # dummy variable !!!\n    init_op = tf.initialize_all_variables()\n\n    with tf.Session() as sess:\n\n      sess.run(init_op)\n\n      saver = tf.train.Saver()\n      # Start the queue runners.\n      coord = tf.train.Coordinator()\n      threads = tf.train.start_queue_runners(sess=sess, coord=coord)\n\n      summary_op = tf.merge_all_summaries()\n\n      summary_writer = tf.train.SummaryWriter(FLAGS.eval_dir,\n                                              graph_def=sess.graph_def)\n\n\n      ckpt = tf.train.get_checkpoint_state(checkpoint_dir=FLAGS.checkpoint_dir)\n      print ckpt.model_checkpoint_path\n      if ckpt and ckpt.model_checkpoint_path:\n        saver.restore(sess, ckpt.model_checkpoint_path)\n        print('Restored!')\n\n      images, labels = my_input.inputs_val()\n\n      # Build a Graph that computes the logits predictions from the\n      # inference model.\n      logits = my_cifar.inference(images)\n\n      acc = my_cifar.evaluation(logits, labels)\n\n      tf.scalar_summary('Acc', acc)\n\n      try:\n        while not coord.should_stop():\n          print('Calculating Acc:')\n          acc_r = sess.run(acc)\n          print(acc_r)\n\n          # Write results to TensorBoard\n          summary_str = sess.run(summary_op)\n          summary_writer.add_summary(summary_str)\n\n      except tf.errors.OutOfRangeError:\n        print ('Done!')\n\n      finally:\n        # When done, ask the threads to stop.\n        coord.request_stop()\n\n      coord.join(threads)", "body": "@vrv  I had same problem and headed here to see if it's a bug or not,\n\nI have eval.py for calculating my CNN accuracy and used exactly same method to load ckpt file. I got this error but using `tf.Graph()` doesn't help. Instead creating a `dummy` variable solve the error.\n\n> p.s just inform you that this code is not working and got stuck in the `sess.run(acc)`\n\n``` python\nwith tf.Graph().as_default():\n\n    dummy = tf.Variable(0)  # dummy variable !!!\n    init_op = tf.initialize_all_variables()\n\n    with tf.Session() as sess:\n\n      sess.run(init_op)\n\n      saver = tf.train.Saver()\n      # Start the queue runners.\n      coord = tf.train.Coordinator()\n      threads = tf.train.start_queue_runners(sess=sess, coord=coord)\n\n      summary_op = tf.merge_all_summaries()\n\n      summary_writer = tf.train.SummaryWriter(FLAGS.eval_dir,\n                                              graph_def=sess.graph_def)\n\n\n      ckpt = tf.train.get_checkpoint_state(checkpoint_dir=FLAGS.checkpoint_dir)\n      print ckpt.model_checkpoint_path\n      if ckpt and ckpt.model_checkpoint_path:\n        saver.restore(sess, ckpt.model_checkpoint_path)\n        print('Restored!')\n\n      images, labels = my_input.inputs_val()\n\n      # Build a Graph that computes the logits predictions from the\n      # inference model.\n      logits = my_cifar.inference(images)\n\n      acc = my_cifar.evaluation(logits, labels)\n\n      tf.scalar_summary('Acc', acc)\n\n      try:\n        while not coord.should_stop():\n          print('Calculating Acc:')\n          acc_r = sess.run(acc)\n          print(acc_r)\n\n          # Write results to TensorBoard\n          summary_str = sess.run(summary_op)\n          summary_writer.add_summary(summary_str)\n\n      except tf.errors.OutOfRangeError:\n        print ('Done!')\n\n      finally:\n        # When done, ask the threads to stop.\n        coord.request_stop()\n\n      coord.join(threads)\n```\n"}