{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/323539751", "html_url": "https://github.com/tensorflow/tensorflow/issues/12389#issuecomment-323539751", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12389", "id": 323539751, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzUzOTc1MQ==", "user": {"login": "quaeler", "id": 22581048, "node_id": "MDQ6VXNlcjIyNTgxMDQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/22581048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quaeler", "html_url": "https://github.com/quaeler", "followers_url": "https://api.github.com/users/quaeler/followers", "following_url": "https://api.github.com/users/quaeler/following{/other_user}", "gists_url": "https://api.github.com/users/quaeler/gists{/gist_id}", "starred_url": "https://api.github.com/users/quaeler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quaeler/subscriptions", "organizations_url": "https://api.github.com/users/quaeler/orgs", "repos_url": "https://api.github.com/users/quaeler/repos", "events_url": "https://api.github.com/users/quaeler/events{/privacy}", "received_events_url": "https://api.github.com/users/quaeler/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-19T18:25:13Z", "updated_at": "2017-08-19T18:25:13Z", "author_association": "CONTRIBUTOR", "body_html": "<p>This sounds a little bit like the known caveat of protobuf that one shouldn't share objects from protobuf across library boundaries, lest the global <code>fixed_address_empty_string</code> might get freed?</p>\n<p>(This may be no longer an issue in the protobuf being used for tensorflow - i may be out of date..) ?</p>", "body_text": "This sounds a little bit like the known caveat of protobuf that one shouldn't share objects from protobuf across library boundaries, lest the global fixed_address_empty_string might get freed?\n(This may be no longer an issue in the protobuf being used for tensorflow - i may be out of date..) ?", "body": "This sounds a little bit like the known caveat of protobuf that one shouldn't share objects from protobuf across library boundaries, lest the global `fixed_address_empty_string` might get freed? \r\n\r\n(This may be no longer an issue in the protobuf being used for tensorflow - i may be out of date..) ?\r\n"}