{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19159", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19159/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19159/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19159/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19159", "id": 321318325, "node_id": "MDU6SXNzdWUzMjEzMTgzMjU=", "number": 19159, "title": "[Feature Request] Implementation of cosine_distance_with_negative_samples loss", "user": {"login": "iamsimha", "id": 3105044, "node_id": "MDQ6VXNlcjMxMDUwNDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3105044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iamsimha", "html_url": "https://github.com/iamsimha", "followers_url": "https://api.github.com/users/iamsimha/followers", "following_url": "https://api.github.com/users/iamsimha/following{/other_user}", "gists_url": "https://api.github.com/users/iamsimha/gists{/gist_id}", "starred_url": "https://api.github.com/users/iamsimha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iamsimha/subscriptions", "organizations_url": "https://api.github.com/users/iamsimha/orgs", "repos_url": "https://api.github.com/users/iamsimha/repos", "events_url": "https://api.github.com/users/iamsimha/events{/privacy}", "received_events_url": "https://api.github.com/users/iamsimha/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 522623856, "node_id": "MDU6TGFiZWw1MjI2MjM4NTY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/API%20review", "name": "API review", "color": "d4c5f9", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-05-08T19:33:21Z", "updated_at": "2018-06-04T22:58:21Z", "closed_at": "2018-06-04T22:58:21Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:binary</li>\n<li><strong>TensorFlow version (use command below)</strong>:1.5.0</li>\n<li><strong>Python version</strong>:</li>\n<li><strong>Bazel version (if compiling from source)</strong>:No</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:No</li>\n<li><strong>CUDA/cuDNN version</strong>:CPU</li>\n<li><strong>GPU model and memory</strong>:CPU</li>\n<li><strong>Exact command to reproduce</strong>:Feature request</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Tensorflow current does not have <a href=\"https://www.cntk.ai/pythondocs/cntk.losses.html#cntk.losses.cosine_distance_with_negative_samples\" rel=\"nofollow\">CNTK's negative sampling loss</a>. I tried to get the same functionality using tf.nn.sampled_softmax_loss, but the weights parameter of the function needs to be variable, instead of an op[If weights is an arbitrary op, I get sparse gradient warning].</p>\n<p>Is it possible to implement this loss natively without doing an embedding lookup on weights?</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):Linux Ubuntu 16.04\nTensorFlow installed from (source or binary):binary\nTensorFlow version (use command below):1.5.0\nPython version:\nBazel version (if compiling from source):No\nGCC/Compiler version (if compiling from source):No\nCUDA/cuDNN version:CPU\nGPU model and memory:CPU\nExact command to reproduce:Feature request\n\nDescribe the problem\nTensorflow current does not have CNTK's negative sampling loss. I tried to get the same functionality using tf.nn.sampled_softmax_loss, but the weights parameter of the function needs to be variable, instead of an op[If weights is an arbitrary op, I get sparse gradient warning].\nIs it possible to implement this loss natively without doing an embedding lookup on weights?", "body": "\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**:binary\r\n- **TensorFlow version (use command below)**:1.5.0\r\n- **Python version**: \r\n- **Bazel version (if compiling from source)**:No\r\n- **GCC/Compiler version (if compiling from source)**:No\r\n- **CUDA/cuDNN version**:CPU\r\n- **GPU model and memory**:CPU\r\n- **Exact command to reproduce**:Feature request\r\n\r\n### Describe the problem\r\nTensorflow current does not have [CNTK's negative sampling loss](https://www.cntk.ai/pythondocs/cntk.losses.html#cntk.losses.cosine_distance_with_negative_samples). I tried to get the same functionality using tf.nn.sampled_softmax_loss, but the weights parameter of the function needs to be variable, instead of an op[If weights is an arbitrary op, I get sparse gradient warning].\r\n\r\nIs it possible to implement this loss natively without doing an embedding lookup on weights?"}