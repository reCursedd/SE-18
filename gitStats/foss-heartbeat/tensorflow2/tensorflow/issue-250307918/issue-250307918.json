{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12295", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12295/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12295/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12295/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12295", "id": 250307918, "node_id": "MDU6SXNzdWUyNTAzMDc5MTg=", "number": 12295, "title": "Tutorial code on linear regression is missing a line", "user": {"login": "sam1902", "id": 15079576, "node_id": "MDQ6VXNlcjE1MDc5NTc2", "avatar_url": "https://avatars0.githubusercontent.com/u/15079576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sam1902", "html_url": "https://github.com/sam1902", "followers_url": "https://api.github.com/users/sam1902/followers", "following_url": "https://api.github.com/users/sam1902/following{/other_user}", "gists_url": "https://api.github.com/users/sam1902/gists{/gist_id}", "starred_url": "https://api.github.com/users/sam1902/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sam1902/subscriptions", "organizations_url": "https://api.github.com/users/sam1902/orgs", "repos_url": "https://api.github.com/users/sam1902/repos", "events_url": "https://api.github.com/users/sam1902/events{/privacy}", "received_events_url": "https://api.github.com/users/sam1902/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 284443156, "node_id": "MDU6TGFiZWwyODQ0NDMxNTY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:docs", "name": "type:docs", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-08-15T13:02:15Z", "updated_at": "2017-08-15T18:03:02Z", "closed_at": "2017-08-15T18:03:02Z", "author_association": "NONE", "body_html": "<p>Hello,<br>\nThe tutorial code on the main website is missing a line that makes it crash when testing.<br>\nHere is the page of the tutorial: <a href=\"https://www.tensorflow.org/get_started/get_started\" rel=\"nofollow\">https://www.tensorflow.org/get_started/get_started</a><br>\nHere is the said code:</p>\n<pre><code>import numpy as np\nimport tensorflow as tf\n# Declare list of features, we only have one real-valued feature\ndef model(features, labels, mode):\n  # Build a linear model and predict values\n  W = tf.get_variable(\"W\", [1], dtype=tf.float64)\n  b = tf.get_variable(\"b\", [1], dtype=tf.float64)\n  y = W*features['x'] + b\n  # Loss sub-graph\n  loss = tf.reduce_sum(tf.square(y - labels))\n  # Training sub-graph\n  global_step = tf.train.get_global_step()\n  optimizer = tf.train.GradientDescentOptimizer(0.01)\n  train = tf.group(optimizer.minimize(loss),\n                   tf.assign_add(global_step, 1))\n  # ModelFnOps connects subgraphs we built to the\n  # appropriate functionality.\n  return tf.contrib.learn.ModelFnOps(\n      mode=mode, predictions=y,\n      loss=loss,\n      train_op=train)\n\nestimator = tf.contrib.learn.Estimator(model_fn=model)\n# define our data sets\nx_train = np.array([1., 2., 3., 4.])\ny_train = np.array([0., -1., -2., -3.])\nx_eval = np.array([2., 5., 8., 1.])\ny_eval = np.array([-1.01, -4.1, -7, 0.])\ninput_fn = tf.contrib.learn.io.numpy_input_fn({\"x\": x_train}, y_train, 4, num_epochs=1000)\n\n# train\nestimator.fit(input_fn=input_fn, steps=1000)\n# Here we evaluate how well our model did. \ntrain_loss = estimator.evaluate(input_fn=input_fn)\neval_loss = estimator.evaluate(input_fn=eval_input_fn)\nprint(\"train loss: %r\"% train_loss)\nprint(\"eval loss: %r\"% eval_loss)\n</code></pre>\n<p>The <code>eval_input_fn</code> is missing, just add this line:</p>\n<pre><code>eval_input_fn = tf.contrib.learn.io.numpy_input_fn({\"x\": x_eval}, y_eval, 4, num_epochs=1000)\n</code></pre>\n<p>after the <code>input_fn = tf.contrib.learn.io.numpy_input_fn({\"x\": x_train}, y_train, 4, num_epochs=1000)</code> line.<br>\nHope it'll help someone.</p>", "body_text": "Hello,\nThe tutorial code on the main website is missing a line that makes it crash when testing.\nHere is the page of the tutorial: https://www.tensorflow.org/get_started/get_started\nHere is the said code:\nimport numpy as np\nimport tensorflow as tf\n# Declare list of features, we only have one real-valued feature\ndef model(features, labels, mode):\n  # Build a linear model and predict values\n  W = tf.get_variable(\"W\", [1], dtype=tf.float64)\n  b = tf.get_variable(\"b\", [1], dtype=tf.float64)\n  y = W*features['x'] + b\n  # Loss sub-graph\n  loss = tf.reduce_sum(tf.square(y - labels))\n  # Training sub-graph\n  global_step = tf.train.get_global_step()\n  optimizer = tf.train.GradientDescentOptimizer(0.01)\n  train = tf.group(optimizer.minimize(loss),\n                   tf.assign_add(global_step, 1))\n  # ModelFnOps connects subgraphs we built to the\n  # appropriate functionality.\n  return tf.contrib.learn.ModelFnOps(\n      mode=mode, predictions=y,\n      loss=loss,\n      train_op=train)\n\nestimator = tf.contrib.learn.Estimator(model_fn=model)\n# define our data sets\nx_train = np.array([1., 2., 3., 4.])\ny_train = np.array([0., -1., -2., -3.])\nx_eval = np.array([2., 5., 8., 1.])\ny_eval = np.array([-1.01, -4.1, -7, 0.])\ninput_fn = tf.contrib.learn.io.numpy_input_fn({\"x\": x_train}, y_train, 4, num_epochs=1000)\n\n# train\nestimator.fit(input_fn=input_fn, steps=1000)\n# Here we evaluate how well our model did. \ntrain_loss = estimator.evaluate(input_fn=input_fn)\neval_loss = estimator.evaluate(input_fn=eval_input_fn)\nprint(\"train loss: %r\"% train_loss)\nprint(\"eval loss: %r\"% eval_loss)\n\nThe eval_input_fn is missing, just add this line:\neval_input_fn = tf.contrib.learn.io.numpy_input_fn({\"x\": x_eval}, y_eval, 4, num_epochs=1000)\n\nafter the input_fn = tf.contrib.learn.io.numpy_input_fn({\"x\": x_train}, y_train, 4, num_epochs=1000) line.\nHope it'll help someone.", "body": "Hello,\r\nThe tutorial code on the main website is missing a line that makes it crash when testing.\r\nHere is the page of the tutorial: https://www.tensorflow.org/get_started/get_started\r\nHere is the said code:\r\n```\r\nimport numpy as np\r\nimport tensorflow as tf\r\n# Declare list of features, we only have one real-valued feature\r\ndef model(features, labels, mode):\r\n  # Build a linear model and predict values\r\n  W = tf.get_variable(\"W\", [1], dtype=tf.float64)\r\n  b = tf.get_variable(\"b\", [1], dtype=tf.float64)\r\n  y = W*features['x'] + b\r\n  # Loss sub-graph\r\n  loss = tf.reduce_sum(tf.square(y - labels))\r\n  # Training sub-graph\r\n  global_step = tf.train.get_global_step()\r\n  optimizer = tf.train.GradientDescentOptimizer(0.01)\r\n  train = tf.group(optimizer.minimize(loss),\r\n                   tf.assign_add(global_step, 1))\r\n  # ModelFnOps connects subgraphs we built to the\r\n  # appropriate functionality.\r\n  return tf.contrib.learn.ModelFnOps(\r\n      mode=mode, predictions=y,\r\n      loss=loss,\r\n      train_op=train)\r\n\r\nestimator = tf.contrib.learn.Estimator(model_fn=model)\r\n# define our data sets\r\nx_train = np.array([1., 2., 3., 4.])\r\ny_train = np.array([0., -1., -2., -3.])\r\nx_eval = np.array([2., 5., 8., 1.])\r\ny_eval = np.array([-1.01, -4.1, -7, 0.])\r\ninput_fn = tf.contrib.learn.io.numpy_input_fn({\"x\": x_train}, y_train, 4, num_epochs=1000)\r\n\r\n# train\r\nestimator.fit(input_fn=input_fn, steps=1000)\r\n# Here we evaluate how well our model did. \r\ntrain_loss = estimator.evaluate(input_fn=input_fn)\r\neval_loss = estimator.evaluate(input_fn=eval_input_fn)\r\nprint(\"train loss: %r\"% train_loss)\r\nprint(\"eval loss: %r\"% eval_loss)\r\n```\r\n\r\nThe `eval_input_fn` is missing, just add this line:\r\n```\r\neval_input_fn = tf.contrib.learn.io.numpy_input_fn({\"x\": x_eval}, y_eval, 4, num_epochs=1000)\r\n```\r\nafter the `input_fn = tf.contrib.learn.io.numpy_input_fn({\"x\": x_train}, y_train, 4, num_epochs=1000)` line.\r\nHope it'll help someone."}