{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21460", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21460/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21460/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21460/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21460", "id": 348505970, "node_id": "MDU6SXNzdWUzNDg1MDU5NzA=", "number": 21460, "title": "Keras load weights does not work", "user": {"login": "ybsave", "id": 26417094, "node_id": "MDQ6VXNlcjI2NDE3MDk0", "avatar_url": "https://avatars0.githubusercontent.com/u/26417094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ybsave", "html_url": "https://github.com/ybsave", "followers_url": "https://api.github.com/users/ybsave/followers", "following_url": "https://api.github.com/users/ybsave/following{/other_user}", "gists_url": "https://api.github.com/users/ybsave/gists{/gist_id}", "starred_url": "https://api.github.com/users/ybsave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ybsave/subscriptions", "organizations_url": "https://api.github.com/users/ybsave/orgs", "repos_url": "https://api.github.com/users/ybsave/repos", "events_url": "https://api.github.com/users/ybsave/events{/privacy}", "received_events_url": "https://api.github.com/users/ybsave/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "allenlavoie", "id": 3731025, "node_id": "MDQ6VXNlcjM3MzEwMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3731025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allenlavoie", "html_url": "https://github.com/allenlavoie", "followers_url": "https://api.github.com/users/allenlavoie/followers", "following_url": "https://api.github.com/users/allenlavoie/following{/other_user}", "gists_url": "https://api.github.com/users/allenlavoie/gists{/gist_id}", "starred_url": "https://api.github.com/users/allenlavoie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allenlavoie/subscriptions", "organizations_url": "https://api.github.com/users/allenlavoie/orgs", "repos_url": "https://api.github.com/users/allenlavoie/repos", "events_url": "https://api.github.com/users/allenlavoie/events{/privacy}", "received_events_url": "https://api.github.com/users/allenlavoie/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "allenlavoie", "id": 3731025, "node_id": "MDQ6VXNlcjM3MzEwMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3731025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allenlavoie", "html_url": "https://github.com/allenlavoie", "followers_url": "https://api.github.com/users/allenlavoie/followers", "following_url": "https://api.github.com/users/allenlavoie/following{/other_user}", "gists_url": "https://api.github.com/users/allenlavoie/gists{/gist_id}", "starred_url": "https://api.github.com/users/allenlavoie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allenlavoie/subscriptions", "organizations_url": "https://api.github.com/users/allenlavoie/orgs", "repos_url": "https://api.github.com/users/allenlavoie/repos", "events_url": "https://api.github.com/users/allenlavoie/events{/privacy}", "received_events_url": "https://api.github.com/users/allenlavoie/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2018-08-07T22:12:24Z", "updated_at": "2018-09-05T19:00:52Z", "closed_at": "2018-08-29T15:58:26Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Y</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Windows 10</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: N/A</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.9</li>\n<li><strong>Python version</strong>: 3.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: 9.0/7</li>\n<li><strong>GPU model and memory</strong>: Quardo M4000</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I try a simple Keras model. After saving the model weights, I tried to reload it. However, the \"load_weights\" function does not really load the weights, but still use the initializer's setting in the model.</p>\n<h3>Source code / logs</h3>\n<pre><code>def test_load():\n  data = np.ones((1,1,4,5), dtype=float)\n  \n  model = keras.Sequential()\n  model.add(Conv2D(5, 1, use_bias=False, kernel_initializer='ones', trainable=False))\n\n  results = model.predict(data)\n  print(results)\n\n  for layer in model.layers:\n    weights = layer.get_weights()\n    layer.set_weights(np.zeros_like(weights))\n\n  results = model.predict(data)\n  print(results)\n\n  model.save_weights('./temp')\n\n  new_model = keras.Sequential()\n  new_model.add(Conv2D(5, 1, use_bias=False, kernel_initializer='uniform', trainable=False))\n  \n  new_model.load_weights('./temp')\n\n  results = new_model.predict(data)\n  print(results)\n</code></pre>\n<p>Before saving the model, everything works as expected. However, after loading, the loaded weights are always random according to the initializer. I wonder whether there is some bugs in the codes or I used it in a wrong way. Thank you.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Y\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.9\nPython version: 3.6\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: 9.0/7\nGPU model and memory: Quardo M4000\nExact command to reproduce:\n\nDescribe the problem\nI try a simple Keras model. After saving the model weights, I tried to reload it. However, the \"load_weights\" function does not really load the weights, but still use the initializer's setting in the model.\nSource code / logs\ndef test_load():\n  data = np.ones((1,1,4,5), dtype=float)\n  \n  model = keras.Sequential()\n  model.add(Conv2D(5, 1, use_bias=False, kernel_initializer='ones', trainable=False))\n\n  results = model.predict(data)\n  print(results)\n\n  for layer in model.layers:\n    weights = layer.get_weights()\n    layer.set_weights(np.zeros_like(weights))\n\n  results = model.predict(data)\n  print(results)\n\n  model.save_weights('./temp')\n\n  new_model = keras.Sequential()\n  new_model.add(Conv2D(5, 1, use_bias=False, kernel_initializer='uniform', trainable=False))\n  \n  new_model.load_weights('./temp')\n\n  results = new_model.predict(data)\n  print(results)\n\nBefore saving the model, everything works as expected. However, after loading, the loaded weights are always random according to the initializer. I wonder whether there is some bugs in the codes or I used it in a wrong way. Thank you.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Y\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: N/A\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.9\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: 9.0/7\r\n- **GPU model and memory**: Quardo M4000\r\n- **Exact command to reproduce**: \r\n\r\n### Describe the problem\r\nI try a simple Keras model. After saving the model weights, I tried to reload it. However, the \"load_weights\" function does not really load the weights, but still use the initializer's setting in the model.\r\n\r\n### Source code / logs\r\n\tdef test_load():\r\n\t  data = np.ones((1,1,4,5), dtype=float)\r\n\t  \r\n\t  model = keras.Sequential()\r\n\t  model.add(Conv2D(5, 1, use_bias=False, kernel_initializer='ones', trainable=False))\r\n\r\n\t  results = model.predict(data)\r\n\t  print(results)\r\n\r\n\t  for layer in model.layers:\r\n\t    weights = layer.get_weights()\r\n\t    layer.set_weights(np.zeros_like(weights))\r\n\r\n\t  results = model.predict(data)\r\n\t  print(results)\r\n\r\n\t  model.save_weights('./temp')\r\n\r\n\t  new_model = keras.Sequential()\r\n\t  new_model.add(Conv2D(5, 1, use_bias=False, kernel_initializer='uniform', trainable=False))\r\n\t  \r\n\t  new_model.load_weights('./temp')\r\n\r\n\t  results = new_model.predict(data)\r\n\t  print(results)\r\n\r\nBefore saving the model, everything works as expected. However, after loading, the loaded weights are always random according to the initializer. I wonder whether there is some bugs in the codes or I used it in a wrong way. Thank you.\r\n"}