{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/413022191", "html_url": "https://github.com/tensorflow/tensorflow/issues/20597#issuecomment-413022191", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20597", "id": 413022191, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzAyMjE5MQ==", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-14T21:28:19Z", "updated_at": "2018-08-14T21:28:19Z", "author_association": "MEMBER", "body_html": "<p>Sorry, somehow missed <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=35349680\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/cvinson830\">@cvinson830</a> 's update.</p>\n<p>The GraphDef protobuf describes the computation, it does not contain any runtime statistics.<br>\nNodeExecStats is filled in when tracing is turned on in a call to <code>Session::Run</code> and includes a bunch of information about the execution of the node. NodeExecStats for each node of the graph that was executed in the <code>Session::Run</code> call is included in the StepStats proto message and the node is linked to the corresponding node in the graph by the string name of the node.</p>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/e079a8ab1eea2507018770f1e9fe5d5d2793c9c7/tensorflow/core/framework/step_stats.proto#L58\">tensorflow/tensorflow/core/framework/step_stats.proto</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 58\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/e079a8ab1eea2507018770f1e9fe5d5d2793c9c7\">e079a8a</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L58\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"58\"></td>\n          <td id=\"LC58\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">string</span> <span class=\"pl-smi\">node_name</span> = <span class=\"pl-c1\">1</span>; </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>For example:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\nx <span class=\"pl-k\">=</span> tf.random_uniform([<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">2</span>])\ny <span class=\"pl-k\">=</span> tf.reduce_sum(x)\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n  metadata <span class=\"pl-k\">=</span> tf.RunMetadata()\n  sess.run(y, <span class=\"pl-v\">options</span><span class=\"pl-k\">=</span>tf.RunOptions(<span class=\"pl-v\">trace_level</span><span class=\"pl-k\">=</span>tf.RunOptions.<span class=\"pl-c1\">FULL_TRACE</span>), <span class=\"pl-v\">run_metadata</span><span class=\"pl-k\">=</span>metadata)\n  <span class=\"pl-c1\">print</span>(metadata) <span class=\"pl-c\"><span class=\"pl-c\">#</span> This will include NodeExecStats for each node on each device</span></pre></div>\n<p>As mentioned earlier, the node name is <code>NodeExecStats</code> is used to associate the stats with a node in the graph and render information on Tensorboard (see <a href=\"https://github.com/tensorflow/tensorboard/blob/3f9c511ef1b6fb45a3fd11ecddde7442ce1771f9/tensorboard/plugins/graph/tf_graph_common/graph.ts#L436\">https://github.com/tensorflow/tensorboard/blob/3f9c511ef1b6fb45a3fd11ecddde7442ce1771f9/tensorboard/plugins/graph/tf_graph_common/graph.ts#L436</a>)</p>\n<p>Let me know if that helps. Thanks.</p>", "body_text": "Sorry, somehow missed @cvinson830 's update.\nThe GraphDef protobuf describes the computation, it does not contain any runtime statistics.\nNodeExecStats is filled in when tracing is turned on in a call to Session::Run and includes a bunch of information about the execution of the node. NodeExecStats for each node of the graph that was executed in the Session::Run call is included in the StepStats proto message and the node is linked to the corresponding node in the graph by the string name of the node.\n\n  \n    \n      tensorflow/tensorflow/core/framework/step_stats.proto\n    \n    \n         Line 58\n      in\n      e079a8a\n    \n    \n    \n    \n\n        \n          \n           string node_name = 1; \n        \n    \n  \n\n\nFor example:\nimport tensorflow as tf\n\nx = tf.random_uniform([2, 2])\ny = tf.reduce_sum(x)\n\nwith tf.Session() as sess:\n  metadata = tf.RunMetadata()\n  sess.run(y, options=tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE), run_metadata=metadata)\n  print(metadata) # This will include NodeExecStats for each node on each device\nAs mentioned earlier, the node name is NodeExecStats is used to associate the stats with a node in the graph and render information on Tensorboard (see https://github.com/tensorflow/tensorboard/blob/3f9c511ef1b6fb45a3fd11ecddde7442ce1771f9/tensorboard/plugins/graph/tf_graph_common/graph.ts#L436)\nLet me know if that helps. Thanks.", "body": "Sorry, somehow missed @cvinson830 's update.\r\n\r\nThe GraphDef protobuf describes the computation, it does not contain any runtime statistics.\r\nNodeExecStats is filled in when tracing is turned on in a call to `Session::Run` and includes a bunch of information about the execution of the node. NodeExecStats for each node of the graph that was executed in the `Session::Run` call is included in the StepStats proto message and the node is linked to the corresponding node in the graph by the string name of the node.\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/e079a8ab1eea2507018770f1e9fe5d5d2793c9c7/tensorflow/core/framework/step_stats.proto#L58\r\n\r\nFor example:\r\n\r\n```python\r\nimport tensorflow as tf\r\n\r\nx = tf.random_uniform([2, 2])\r\ny = tf.reduce_sum(x)\r\n\r\nwith tf.Session() as sess:\r\n  metadata = tf.RunMetadata()\r\n  sess.run(y, options=tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE), run_metadata=metadata)\r\n  print(metadata) # This will include NodeExecStats for each node on each device\r\n```\r\n\r\nAs mentioned earlier, the node name is `NodeExecStats` is used to associate the stats with a node in the graph and render information on Tensorboard (see https://github.com/tensorflow/tensorboard/blob/3f9c511ef1b6fb45a3fd11ecddde7442ce1771f9/tensorboard/plugins/graph/tf_graph_common/graph.ts#L436)\r\n\r\nLet me know if that helps. Thanks."}