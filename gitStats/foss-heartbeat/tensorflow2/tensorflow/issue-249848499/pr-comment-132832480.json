{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/132832480", "pull_request_review_id": 55956921, "id": 132832480, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMjgzMjQ4MA==", "diff_hunk": "@@ -77,6 +80,22 @@ public Operation operation(String name) {\n   }\n \n   /**\n+   * Returns all operations that exist in the Graph.\n+   */\n+  public List<Operation> getOperations() {", "path": "tensorflow/java/src/main/java/org/tensorflow/Graph.java", "position": null, "original_position": 16, "commit_id": "9fec80a40ef43cf2991bee1020061da738d3ff8a", "original_commit_id": "a1e7eaccca151a036eb086d5a6e08bd7c57793db", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "Ah, I see. Yes, some iterator implementations do that but as far as I understand the [interface specification](https://docs.oracle.com/javase/7/docs/api/java/util/Iterator.html) does not require it (or even mention that they _could_ return this error).\r\n\r\nSo, yes, I agree that this iterator implementation shouldn't try to worry about throwing `ConcurrentModificationException`s. I'd even be okay with not talking about this detail in the javadoc at all - since it isn't part of the interface specification.\r\n\r\nThanks!", "created_at": "2017-08-13T05:02:43Z", "updated_at": "2017-08-14T19:16:15Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/12243#discussion_r132832480", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12243", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/132832480"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/12243#discussion_r132832480"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12243"}}, "body_html": "<p>Ah, I see. Yes, some iterator implementations do that but as far as I understand the <a href=\"https://docs.oracle.com/javase/7/docs/api/java/util/Iterator.html\" rel=\"nofollow\">interface specification</a> does not require it (or even mention that they <em>could</em> return this error).</p>\n<p>So, yes, I agree that this iterator implementation shouldn't try to worry about throwing <code>ConcurrentModificationException</code>s. I'd even be okay with not talking about this detail in the javadoc at all - since it isn't part of the interface specification.</p>\n<p>Thanks!</p>", "body_text": "Ah, I see. Yes, some iterator implementations do that but as far as I understand the interface specification does not require it (or even mention that they could return this error).\nSo, yes, I agree that this iterator implementation shouldn't try to worry about throwing ConcurrentModificationExceptions. I'd even be okay with not talking about this detail in the javadoc at all - since it isn't part of the interface specification.\nThanks!", "in_reply_to_id": 132831448}