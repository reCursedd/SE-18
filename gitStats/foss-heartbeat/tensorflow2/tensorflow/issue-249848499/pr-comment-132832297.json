{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/132832297", "pull_request_review_id": 55956713, "id": 132832297, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMjgzMjI5Nw==", "diff_hunk": "@@ -77,6 +80,22 @@ public Operation operation(String name) {\n   }\n \n   /**\n+   * Returns all operations that exist in the Graph.\n+   */\n+  public List<Operation> getOperations() {", "path": "tensorflow/java/src/main/java/org/tensorflow/Graph.java", "position": null, "original_position": 16, "commit_id": "9fec80a40ef43cf2991bee1020061da738d3ff8a", "original_commit_id": "a1e7eaccca151a036eb086d5a6e08bd7c57793db", "user": {"login": "quaeler", "id": 22581048, "node_id": "MDQ6VXNlcjIyNTgxMDQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/22581048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quaeler", "html_url": "https://github.com/quaeler", "followers_url": "https://api.github.com/users/quaeler/followers", "following_url": "https://api.github.com/users/quaeler/following{/other_user}", "gists_url": "https://api.github.com/users/quaeler/gists{/gist_id}", "starred_url": "https://api.github.com/users/quaeler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quaeler/subscriptions", "organizations_url": "https://api.github.com/users/quaeler/orgs", "repos_url": "https://api.github.com/users/quaeler/repos", "events_url": "https://api.github.com/users/quaeler/events{/privacy}", "received_events_url": "https://api.github.com/users/quaeler/received_events", "type": "User", "site_admin": false}, "body": "Returning as an Iterator opens up an issue with a potential concurrent modification; implementing an assurance (or preferably throwing) against this would be an extra pot of stew. Barring objection, i will note the lack of observance in the javadocs for the ~getter and implement it as spec'd.", "created_at": "2017-08-13T04:36:07Z", "updated_at": "2017-08-14T19:16:15Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/12243#discussion_r132832297", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12243", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/132832297"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/12243#discussion_r132832297"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12243"}}, "body_html": "<p>Returning as an Iterator opens up an issue with a potential concurrent modification; implementing an assurance (or preferably throwing) against this would be an extra pot of stew. Barring objection, i will note the lack of observance in the javadocs for the ~getter and implement it as spec'd.</p>", "body_text": "Returning as an Iterator opens up an issue with a potential concurrent modification; implementing an assurance (or preferably throwing) against this would be an extra pot of stew. Barring objection, i will note the lack of observance in the javadocs for the ~getter and implement it as spec'd.", "in_reply_to_id": 132831448}