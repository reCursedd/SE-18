{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7290", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7290/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7290/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7290/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7290", "id": 205597468, "node_id": "MDU6SXNzdWUyMDU1OTc0Njg=", "number": 7290, "title": "\"SAME\" padding for ConvNet doesn't work as expected !", "user": {"login": "lethienhoa", "id": 7143255, "node_id": "MDQ6VXNlcjcxNDMyNTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/7143255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lethienhoa", "html_url": "https://github.com/lethienhoa", "followers_url": "https://api.github.com/users/lethienhoa/followers", "following_url": "https://api.github.com/users/lethienhoa/following{/other_user}", "gists_url": "https://api.github.com/users/lethienhoa/gists{/gist_id}", "starred_url": "https://api.github.com/users/lethienhoa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lethienhoa/subscriptions", "organizations_url": "https://api.github.com/users/lethienhoa/orgs", "repos_url": "https://api.github.com/users/lethienhoa/repos", "events_url": "https://api.github.com/users/lethienhoa/events{/privacy}", "received_events_url": "https://api.github.com/users/lethienhoa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-06T14:21:23Z", "updated_at": "2017-02-06T14:35:29Z", "closed_at": "2017-02-06T14:35:29Z", "author_association": "NONE", "body_html": "<p>Hi folks,<br>\nWhen I want to reimplement the paper <a href=\"https://arxiv.org/abs/1606.01781\" rel=\"nofollow\">VDCNN for Text Classification</a>, I need to do padding=1 with filter_kernel=3 to keep the same input's dimension between ConvNet in the model.  When I use padding 'SAME', the result isn't well expected. There's a problem in the height_size_output. It seems doesn't do element-wise product of block convnet 72x3 between the input &amp; the filter.<br>\nBy the way, there's no problem of height_size_output using the padding 'VALID'. It seems that it did. However, its width_size_output is reduced by 2.<br>\nIn my intuition, padding 'VALID' behave much more properly like in the paper, but how can I pad 1 to both the left &amp; right of the 2D input before doing ConvNet ?</p>\n<hr>\n<p>import tensorflow as tf</p>\n<p>data = tf.placeholder(\"float\", shape=[1, 72, 1014, 1])</p>\n<h1></h1>\n<p>filter_shape = [72, 3, 1, 64]<br>\nW = tf.Variable(tf.truncated_normal(filter_shape, stddev=0.05), name=\"W\")</p>\n<h1></h1>\n<p>conv = tf.nn.conv2d(data, W, padding='SAME')<br>\nprint(conv.get_shape())  # prints (1, <strong>72</strong>, 1014, 64), but should be (1, <strong>1</strong>, 1014, 64)</p>\n<p>conv = tf.nn.conv2d(data, W, padding='VALID')<br>\nprint(conv.get_shape())  # prints (1, <strong>1</strong>, <strong>1012</strong>, 64), but should be (1, <strong>1</strong>, <strong>1014</strong>, 64)</p>", "body_text": "Hi folks,\nWhen I want to reimplement the paper VDCNN for Text Classification, I need to do padding=1 with filter_kernel=3 to keep the same input's dimension between ConvNet in the model.  When I use padding 'SAME', the result isn't well expected. There's a problem in the height_size_output. It seems doesn't do element-wise product of block convnet 72x3 between the input & the filter.\nBy the way, there's no problem of height_size_output using the padding 'VALID'. It seems that it did. However, its width_size_output is reduced by 2.\nIn my intuition, padding 'VALID' behave much more properly like in the paper, but how can I pad 1 to both the left & right of the 2D input before doing ConvNet ?\n\nimport tensorflow as tf\ndata = tf.placeholder(\"float\", shape=[1, 72, 1014, 1])\n\nfilter_shape = [72, 3, 1, 64]\nW = tf.Variable(tf.truncated_normal(filter_shape, stddev=0.05), name=\"W\")\n\nconv = tf.nn.conv2d(data, W, padding='SAME')\nprint(conv.get_shape())  # prints (1, 72, 1014, 64), but should be (1, 1, 1014, 64)\nconv = tf.nn.conv2d(data, W, padding='VALID')\nprint(conv.get_shape())  # prints (1, 1, 1012, 64), but should be (1, 1, 1014, 64)", "body": "Hi folks,\r\nWhen I want to reimplement the paper [VDCNN for Text Classification](https://arxiv.org/abs/1606.01781), I need to do padding=1 with filter_kernel=3 to keep the same input's dimension between ConvNet in the model.  When I use padding 'SAME', the result isn't well expected. There's a problem in the height_size_output. It seems doesn't do element-wise product of block convnet 72x3 between the input & the filter. \r\nBy the way, there's no problem of height_size_output using the padding 'VALID'. It seems that it did. However, its width_size_output is reduced by 2. \r\nIn my intuition, padding 'VALID' behave much more properly like in the paper, but how can I pad 1 to both the left & right of the 2D input before doing ConvNet ?\r\n\r\n-----------------------------------------\r\nimport tensorflow as tf\r\n\r\ndata = tf.placeholder(\"float\", shape=[1, 72, 1014, 1])\r\n#\r\nfilter_shape = [72, 3, 1, 64]\t\r\nW = tf.Variable(tf.truncated_normal(filter_shape, stddev=0.05), name=\"W\")\r\n#\r\nconv = tf.nn.conv2d(data, W, padding='SAME')\r\nprint(conv.get_shape())  # prints (1, **72**, 1014, 64), but should be (1, **1**, 1014, 64)\r\n\r\nconv = tf.nn.conv2d(data, W, padding='VALID')\r\nprint(conv.get_shape())  # prints (1, **1**, **1012**, 64), but should be (1, **1**, **1014**, 64)"}