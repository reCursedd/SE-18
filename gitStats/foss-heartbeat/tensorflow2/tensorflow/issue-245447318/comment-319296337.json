{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/319296337", "html_url": "https://github.com/tensorflow/tensorflow/issues/11753#issuecomment-319296337", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11753", "id": 319296337, "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTI5NjMzNw==", "user": {"login": "smodlich", "id": 17433691, "node_id": "MDQ6VXNlcjE3NDMzNjkx", "avatar_url": "https://avatars2.githubusercontent.com/u/17433691?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smodlich", "html_url": "https://github.com/smodlich", "followers_url": "https://api.github.com/users/smodlich/followers", "following_url": "https://api.github.com/users/smodlich/following{/other_user}", "gists_url": "https://api.github.com/users/smodlich/gists{/gist_id}", "starred_url": "https://api.github.com/users/smodlich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smodlich/subscriptions", "organizations_url": "https://api.github.com/users/smodlich/orgs", "repos_url": "https://api.github.com/users/smodlich/repos", "events_url": "https://api.github.com/users/smodlich/events{/privacy}", "received_events_url": "https://api.github.com/users/smodlich/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-01T07:53:09Z", "updated_at": "2017-08-01T07:56:38Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3055617\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/utkrist\">@utkrist</a> I'm using a base learning rate of 0.001 which works fine for a single worker. I multiply this learning rate for distributed training by sqrt(N) where N is number of workers (Just as <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=15792374\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jmchen-g\">@jmchen-g</a> wrote). I also tried: base lr*N (mentioned in <a href=\"https://research.fb.com/wp-content/uploads/2017/06/imagenet1kin1h5.pdf?\" rel=\"nofollow\">this paper</a>) but that was to high.</p>", "body_text": "@utkrist I'm using a base learning rate of 0.001 which works fine for a single worker. I multiply this learning rate for distributed training by sqrt(N) where N is number of workers (Just as @jmchen-g wrote). I also tried: base lr*N (mentioned in this paper) but that was to high.", "body": "@utkrist I'm using a base learning rate of 0.001 which works fine for a single worker. I multiply this learning rate for distributed training by sqrt(N) where N is number of workers (Just as @jmchen-g wrote). I also tried: base lr*N (mentioned in [this paper](https://research.fb.com/wp-content/uploads/2017/06/imagenet1kin1h5.pdf?)) but that was to high."}