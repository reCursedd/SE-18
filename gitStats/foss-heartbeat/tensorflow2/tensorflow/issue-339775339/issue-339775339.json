{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20666", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20666/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20666/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20666/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20666", "id": 339775339, "node_id": "MDU6SXNzdWUzMzk3NzUzMzk=", "number": 20666, "title": "BUG on saving bidirectional CuDNNLSTM/GRU", "user": {"login": "zakizhou", "id": 19201532, "node_id": "MDQ6VXNlcjE5MjAxNTMy", "avatar_url": "https://avatars0.githubusercontent.com/u/19201532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zakizhou", "html_url": "https://github.com/zakizhou", "followers_url": "https://api.github.com/users/zakizhou/followers", "following_url": "https://api.github.com/users/zakizhou/following{/other_user}", "gists_url": "https://api.github.com/users/zakizhou/gists{/gist_id}", "starred_url": "https://api.github.com/users/zakizhou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zakizhou/subscriptions", "organizations_url": "https://api.github.com/users/zakizhou/orgs", "repos_url": "https://api.github.com/users/zakizhou/repos", "events_url": "https://api.github.com/users/zakizhou/events{/privacy}", "received_events_url": "https://api.github.com/users/zakizhou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, {"login": "pavithrasv", "id": 13326758, "node_id": "MDQ6VXNlcjEzMzI2NzU4", "avatar_url": "https://avatars0.githubusercontent.com/u/13326758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pavithrasv", "html_url": "https://github.com/pavithrasv", "followers_url": "https://api.github.com/users/pavithrasv/followers", "following_url": "https://api.github.com/users/pavithrasv/following{/other_user}", "gists_url": "https://api.github.com/users/pavithrasv/gists{/gist_id}", "starred_url": "https://api.github.com/users/pavithrasv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pavithrasv/subscriptions", "organizations_url": "https://api.github.com/users/pavithrasv/orgs", "repos_url": "https://api.github.com/users/pavithrasv/repos", "events_url": "https://api.github.com/users/pavithrasv/events{/privacy}", "received_events_url": "https://api.github.com/users/pavithrasv/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-07-10T10:03:08Z", "updated_at": "2018-07-19T02:14:26Z", "closed_at": "2018-07-17T03:45:10Z", "author_association": "NONE", "body_html": "<p>Please go to Stack Overflow for help and support:</p>\n<p><a href=\"https://stackoverflow.com/questions/tagged/tensorflow\" rel=\"nofollow\">https://stackoverflow.com/questions/tagged/tensorflow</a></p>\n<p>If you open a GitHub issue, here is our policy:</p>\n<ol>\n<li>It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).</li>\n<li>The form below must be filled out.</li>\n<li>It shouldn't be a TensorBoard issue. Those go <a href=\"https://github.com/tensorflow/tensorboard/issues\">here</a>.</li>\n</ol>\n<p><strong>Here's why we have that policy</strong>: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.</p>\n<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Ubuntu 18.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.9.0rc2 and also test on nightly</li>\n<li><strong>Python version</strong>:  3.5</li>\n<li><strong>Bazel version (if compiling from source)</strong>: None</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: None</li>\n<li><strong>CUDA/cuDNN version</strong>:  not important</li>\n<li><strong>GPU model and memory</strong>: not important</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<p>You can collect some of this information using our environment capture script:</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\">https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh</a></p>\n<p>You can obtain the TensorFlow version with</p>\n<p>python -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"</p>\n<h3>Describe the problem</h3>\n<p>Wights are not stored when using <code>tf.keras.layers.CuDNNLSTM/GRU</code> with <code>tf.keras.layers.Bidirectional</code></p>\n<h3>Source code / logs</h3>\n<pre><code>import tensorflow as tf\n\n\nclass Model(tf.keras.Model):\n    def __init__(self):\n        super(Model, self).__init__()\n        # this line works fine, but when commented and uncomment the second line, weights of rnn\n        # will not be saved\n        self.lstm = tf.keras.layers.CuDNNGRU(2)\n        # self.lstm = tf.keras.layers.Bidirectional(tf.keras.layers.CuDNNGRU(2))\n\n    def call(self, inputs):\n        return self.lstm(inputs)\n\n\ni = tf.random_normal((3, 4, 5))\nm = Model()\no = m(i)\nm.save_weights(\"test/save\")\n\nreader = tf.train.NewCheckpointReader(\"test/save\")\n# weights are not store when using CuDNNLSTM/GRU with bidirectional layer\nprint(reader.get_variable_to_dtype_map().keys())\n\n</code></pre>", "body_text": "Please go to Stack Overflow for help and support:\nhttps://stackoverflow.com/questions/tagged/tensorflow\nIf you open a GitHub issue, here is our policy:\n\nIt must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\nThe form below must be filled out.\nIt shouldn't be a TensorBoard issue. Those go here.\n\nHere's why we have that policy: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\n\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18.04\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.9.0rc2 and also test on nightly\nPython version:  3.5\nBazel version (if compiling from source): None\nGCC/Compiler version (if compiling from source): None\nCUDA/cuDNN version:  not important\nGPU model and memory: not important\nExact command to reproduce:\n\nYou can collect some of this information using our environment capture script:\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\nYou can obtain the TensorFlow version with\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\nDescribe the problem\nWights are not stored when using tf.keras.layers.CuDNNLSTM/GRU with tf.keras.layers.Bidirectional\nSource code / logs\nimport tensorflow as tf\n\n\nclass Model(tf.keras.Model):\n    def __init__(self):\n        super(Model, self).__init__()\n        # this line works fine, but when commented and uncomment the second line, weights of rnn\n        # will not be saved\n        self.lstm = tf.keras.layers.CuDNNGRU(2)\n        # self.lstm = tf.keras.layers.Bidirectional(tf.keras.layers.CuDNNGRU(2))\n\n    def call(self, inputs):\n        return self.lstm(inputs)\n\n\ni = tf.random_normal((3, 4, 5))\nm = Model()\no = m(i)\nm.save_weights(\"test/save\")\n\nreader = tf.train.NewCheckpointReader(\"test/save\")\n# weights are not store when using CuDNNLSTM/GRU with bidirectional layer\nprint(reader.get_variable_to_dtype_map().keys())", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 18.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.9.0rc2 and also test on nightly\r\n- **Python version**:  3.5\r\n- **Bazel version (if compiling from source)**: None\r\n- **GCC/Compiler version (if compiling from source)**: None\r\n- **CUDA/cuDNN version**:  not important\r\n- **GPU model and memory**: not important\r\n- **Exact command to reproduce**:\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\n\r\nWights are not stored when using `tf.keras.layers.CuDNNLSTM/GRU` with `tf.keras.layers.Bidirectional`\r\n\r\n### Source code / logs\r\n```\r\nimport tensorflow as tf\r\n\r\n\r\nclass Model(tf.keras.Model):\r\n    def __init__(self):\r\n        super(Model, self).__init__()\r\n        # this line works fine, but when commented and uncomment the second line, weights of rnn\r\n        # will not be saved\r\n        self.lstm = tf.keras.layers.CuDNNGRU(2)\r\n        # self.lstm = tf.keras.layers.Bidirectional(tf.keras.layers.CuDNNGRU(2))\r\n\r\n    def call(self, inputs):\r\n        return self.lstm(inputs)\r\n\r\n\r\ni = tf.random_normal((3, 4, 5))\r\nm = Model()\r\no = m(i)\r\nm.save_weights(\"test/save\")\r\n\r\nreader = tf.train.NewCheckpointReader(\"test/save\")\r\n# weights are not store when using CuDNNLSTM/GRU with bidirectional layer\r\nprint(reader.get_variable_to_dtype_map().keys())\r\n\r\n```\r\n"}