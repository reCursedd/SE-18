{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/405190067", "html_url": "https://github.com/tensorflow/tensorflow/issues/20666#issuecomment-405190067", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20666", "id": 405190067, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTE5MDA2Nw==", "user": {"login": "zakizhou", "id": 19201532, "node_id": "MDQ6VXNlcjE5MjAxNTMy", "avatar_url": "https://avatars0.githubusercontent.com/u/19201532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zakizhou", "html_url": "https://github.com/zakizhou", "followers_url": "https://api.github.com/users/zakizhou/followers", "following_url": "https://api.github.com/users/zakizhou/following{/other_user}", "gists_url": "https://api.github.com/users/zakizhou/gists{/gist_id}", "starred_url": "https://api.github.com/users/zakizhou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zakizhou/subscriptions", "organizations_url": "https://api.github.com/users/zakizhou/orgs", "repos_url": "https://api.github.com/users/zakizhou/repos", "events_url": "https://api.github.com/users/zakizhou/events{/privacy}", "received_events_url": "https://api.github.com/users/zakizhou/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-16T09:18:08Z", "updated_at": "2018-07-16T09:18:08Z", "author_association": "NONE", "body_html": "<p>I find that this problem exists even in undirectional cpu version rnn. Please fix it as soon as possible</p>\n<pre><code>import tensorflow as tf\n\n\nclass Model(tf.keras.Model):\n    def __init__(self):\n        super(Model, self).__init__()\n        # this line works fine\n        self.d = tf.keras.layers.Dense(2)\n\n        # following three lines related with rnn do not work with Model.save_weights\n        # self.d = tf.keras.layers.Bidirectional(tf.keras.layers.CuDNNLSTM(2))\n        # self.d = tf.keras.layers.Bidirectional(tf.keras.layers.LSTM(2))\n        # self.d = tf.keras.layers.LSTM(2)\n\n    def call(self, inputs, training=True, mask=None):\n        return self.d(inputs)\n\n\nr = tf.random_normal((4, 3, 5))\nm = Model()\no = m(r)\n\nm.save_weights(\"save/save\", save_format=\"tf\")\nreader = tf.train.NewCheckpointReader(\"save/save\")\nprint(reader.get_variable_to_shape_map())\n</code></pre>", "body_text": "I find that this problem exists even in undirectional cpu version rnn. Please fix it as soon as possible\nimport tensorflow as tf\n\n\nclass Model(tf.keras.Model):\n    def __init__(self):\n        super(Model, self).__init__()\n        # this line works fine\n        self.d = tf.keras.layers.Dense(2)\n\n        # following three lines related with rnn do not work with Model.save_weights\n        # self.d = tf.keras.layers.Bidirectional(tf.keras.layers.CuDNNLSTM(2))\n        # self.d = tf.keras.layers.Bidirectional(tf.keras.layers.LSTM(2))\n        # self.d = tf.keras.layers.LSTM(2)\n\n    def call(self, inputs, training=True, mask=None):\n        return self.d(inputs)\n\n\nr = tf.random_normal((4, 3, 5))\nm = Model()\no = m(r)\n\nm.save_weights(\"save/save\", save_format=\"tf\")\nreader = tf.train.NewCheckpointReader(\"save/save\")\nprint(reader.get_variable_to_shape_map())", "body": "I find that this problem exists even in undirectional cpu version rnn. Please fix it as soon as possible\r\n```\r\nimport tensorflow as tf\r\n\r\n\r\nclass Model(tf.keras.Model):\r\n    def __init__(self):\r\n        super(Model, self).__init__()\r\n        # this line works fine\r\n        self.d = tf.keras.layers.Dense(2)\r\n\r\n        # following three lines related with rnn do not work with Model.save_weights\r\n        # self.d = tf.keras.layers.Bidirectional(tf.keras.layers.CuDNNLSTM(2))\r\n        # self.d = tf.keras.layers.Bidirectional(tf.keras.layers.LSTM(2))\r\n        # self.d = tf.keras.layers.LSTM(2)\r\n\r\n    def call(self, inputs, training=True, mask=None):\r\n        return self.d(inputs)\r\n\r\n\r\nr = tf.random_normal((4, 3, 5))\r\nm = Model()\r\no = m(r)\r\n\r\nm.save_weights(\"save/save\", save_format=\"tf\")\r\nreader = tf.train.NewCheckpointReader(\"save/save\")\r\nprint(reader.get_variable_to_shape_map())\r\n```"}