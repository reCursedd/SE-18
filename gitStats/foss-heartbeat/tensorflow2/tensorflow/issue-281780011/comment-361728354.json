{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/361728354", "html_url": "https://github.com/tensorflow/tensorflow/issues/15341#issuecomment-361728354", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15341", "id": 361728354, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTcyODM1NA==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-30T20:45:09Z", "updated_at": "2018-01-30T20:45:09Z", "author_association": "CONTRIBUTOR", "body_html": "<p>In addition to setting <code>clear_devices=True</code>, you can wrap the call to <code>import_meta_graph()</code> in another <code>with tf.device(...):</code>  block, and either specify a device name to be assigned to all nodes, or a function (taking a <code>tf.Operation</code> and returning a device name) that will be called once for each operation in the imported graph.</p>", "body_text": "In addition to setting clear_devices=True, you can wrap the call to import_meta_graph() in another with tf.device(...):  block, and either specify a device name to be assigned to all nodes, or a function (taking a tf.Operation and returning a device name) that will be called once for each operation in the imported graph.", "body": "In addition to setting `clear_devices=True`, you can wrap the call to `import_meta_graph()` in another `with tf.device(...):`  block, and either specify a device name to be assigned to all nodes, or a function (taking a `tf.Operation` and returning a device name) that will be called once for each operation in the imported graph."}