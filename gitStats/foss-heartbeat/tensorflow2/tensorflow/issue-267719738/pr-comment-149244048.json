{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/149244048", "pull_request_review_id": 74608437, "id": 149244048, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0OTI0NDA0OA==", "diff_hunk": "@@ -0,0 +1,97 @@\n+/* Copyright 2016 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+#if GOOGLE_CUDA\n+\n+#define EIGEN_USE_GPU\n+\n+#include \"third_party/eigen3/unsupported/Eigen/CXX11/Tensor\"\n+\n+#include \"tensorflow/core/framework/op_kernel.h\"\n+#include \"tensorflow/core/framework/register_types.h\"\n+#include \"tensorflow/core/framework/tensor.h\"\n+#include \"tensorflow/core/framework/tensor_shape.h\"\n+#include \"tensorflow/core/kernels/bucketize_op.h\"\n+#include \"tensorflow/core/platform/logging.h\"\n+#include \"tensorflow/core/platform/types.h\"\n+#include \"tensorflow/core/util/cuda_kernel_helper.h\"\n+\n+namespace tensorflow {\n+\n+typedef Eigen::GpuDevice GPUDevice;\n+\n+template <typename T>\n+__global__ void BucketizeCustomKernel(const int32 size_in, const T* in,\n+                                      const int32 size_boundaries,\n+                                      const float* boundaries, int32* out) {\n+  CUDA_1D_KERNEL_LOOP(i, size_in) {\n+    T value = in[i];\n+    int32 bucket = 0;\n+    while (bucket < size_boundaries &&\n+           value >= static_cast<T>(boundaries[bucket])) {\n+      bucket++;\n+    }\n+    out[i] = bucket;\n+  }\n+}\n+\n+namespace functor {\n+\n+template <typename T>\n+struct BucketizeFunctor<GPUDevice, T> {\n+  static Status Compute(OpKernelContext* context,\n+                        const typename TTypes<T, 1>::ConstTensor& input,\n+                        const std::vector<float>& boundaries_vector,\n+                        typename TTypes<int32, 1>::Tensor& output) {\n+    const GPUDevice& d = context->eigen_device<GPUDevice>();\n+\n+    tensorflow::AllocatorAttributes pinned_allocator;\n+    pinned_allocator.set_on_host(true);\n+    pinned_allocator.set_gpu_compatible(true);\n+\n+    Tensor boundaries_tensor;\n+    TF_RETURN_IF_ERROR(\n+        context->allocate_temp(DataTypeToEnum<float>::value,\n+                               TensorShape({(int64)boundaries_vector.size()}),\n+                               &boundaries_tensor, pinned_allocator));\n+\n+    auto boundaries = boundaries_tensor.flat<float>();\n+    boundaries = typename TTypes<float, 1>::ConstTensor(\n+        boundaries_vector.data(), boundaries_vector.size());\n+\n+    CudaLaunchConfig config = GetCudaLaunchConfig(input.size(), d);\n+", "path": "tensorflow/core/kernels/bucketize_op_gpu.cu.cc", "position": null, "original_position": 75, "commit_id": "b9d32545cdc65a4be0c043a9313bd1e71cd2da03", "original_commit_id": "0c3dc147f3f39f2de680a31de71ea67a20affe3b", "user": {"login": "yongtang", "id": 6932348, "node_id": "MDQ6VXNlcjY5MzIzNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6932348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yongtang", "html_url": "https://github.com/yongtang", "followers_url": "https://api.github.com/users/yongtang/followers", "following_url": "https://api.github.com/users/yongtang/following{/other_user}", "gists_url": "https://api.github.com/users/yongtang/gists{/gist_id}", "starred_url": "https://api.github.com/users/yongtang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yongtang/subscriptions", "organizations_url": "https://api.github.com/users/yongtang/orgs", "repos_url": "https://api.github.com/users/yongtang/repos", "events_url": "https://api.github.com/users/yongtang/events{/privacy}", "received_events_url": "https://api.github.com/users/yongtang/received_events", "type": "User", "site_admin": false}, "body": "Done.", "created_at": "2017-11-07T00:27:55Z", "updated_at": "2017-11-07T01:45:28Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/13922#discussion_r149244048", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13922", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/149244048"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/13922#discussion_r149244048"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13922"}}, "body_html": "<p>Done.</p>", "body_text": "Done.", "in_reply_to_id": 149189429}