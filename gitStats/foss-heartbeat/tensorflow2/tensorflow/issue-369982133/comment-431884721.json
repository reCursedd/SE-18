{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/431884721", "html_url": "https://github.com/tensorflow/tensorflow/issues/22977#issuecomment-431884721", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22977", "id": 431884721, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTg4NDcyMQ==", "user": {"login": "michaelklachko", "id": 981619, "node_id": "MDQ6VXNlcjk4MTYxOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/981619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelklachko", "html_url": "https://github.com/michaelklachko", "followers_url": "https://api.github.com/users/michaelklachko/followers", "following_url": "https://api.github.com/users/michaelklachko/following{/other_user}", "gists_url": "https://api.github.com/users/michaelklachko/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelklachko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelklachko/subscriptions", "organizations_url": "https://api.github.com/users/michaelklachko/orgs", "repos_url": "https://api.github.com/users/michaelklachko/repos", "events_url": "https://api.github.com/users/michaelklachko/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelklachko/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-22T16:20:03Z", "updated_at": "2018-10-22T16:20:03Z", "author_association": "NONE", "body_html": "<p>I can reproduce it using tf.fake_quant_with_min_max_args function on Ubuntu 16.04 with python 2.7.12, numpy 1.14.0, and TF 1.11.0 (CPU only):</p>\n<pre><code>michael@Pascal:~$ cat tf_quant.py\nimport tensorflow as tf\nimport numpy as np\n\nnp.set_printoptions(precision=3, linewidth=120, suppress=True)\n\nsess = tf.Session()\n\nfor i in range(3):\n    sample = np.random.normal(0,1,(8,8))\n    x = tf.cast(sample, tf.float32)\n\n    #min_ = tf.reduce_min(x)\n    #max_ = tf.reduce_max(x)\n    min_ = np.min(sample)\n    max_ = np.max(sample)\n    x_q = tf.fake_quant_with_min_max_args(x, min=min_, max=max_, num_bits=2)\n\n    grad = tf.gradients(x_q, x)\n    print sess.run([x, x_q, grad])\n</code></pre>\n<pre><code>michael@Pascal:~$ python2 tf_quant.py\n2018-10-22 09:03:10.722455: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\n       [array([\n       [-0.418, -0.105,  0.994,  0.022, -1.241, -0.324,  0.128,  0.001],\n       [ 0.399, -1.085,  0.361,  2.381,  0.095, -0.23 , -0.892, -0.864],\n       [ 2.527,  0.456, -1.682,  0.049,  0.508, -0.515,  0.379, -0.514],\n       [-1.474, -2.128,  1.136, -0.21 , -1.141, -0.059,  0.609,  1.454],\n       [ 2.644, -0.136,  1.267,  0.397, -0.688, -1.37 , -0.625, -0.144],\n       [-0.887, -1.912, -1.888,  0.066,  0.07 ,  0.166, -0.582, -1.693],\n       [-0.032, -1.16 , -0.344, -0.31 ,  0.72 , -0.713,  0.756,  1.   ],\n       [ 0.599, -2.627,  0.643,  2.024, -0.593,  0.528,  0.62 , -0.893]], dtype=float32), \n       array([\n       [ 0.   ,  0.   ,  1.757,  0.   , -1.757,  0.   ,  0.   ,  0.   ],\n       [ 0.   , -1.757,  0.   ,  1.757,  0.   ,  0.   , -1.757,  0.   ],\n       [ 1.757,  0.   , -1.757,  0.   ,  0.   ,  0.   ,  0.   ,  0.   ],\n       [-1.757, -1.757,  1.757,  0.   , -1.757,  0.   ,  0.   ,  1.757],\n       [ 3.514,  0.   ,  1.757,  0.   ,  0.   , -1.757,  0.   ,  0.   ],\n       [-1.757, -1.757, -1.757,  0.   ,  0.   ,  0.   ,  0.   , -1.757],\n       [ 0.   , -1.757,  0.   ,  0.   ,  0.   ,  0.   ,  0.   ,  1.757],\n       [ 0.   , -1.757,  0.   ,  1.757,  0.   ,  0.   ,  0.   , -1.757]], dtype=float32), \n       [array([\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 0., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 0., 0., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 0., 1., 1., 1., 1., 1., 1.]], dtype=float32)]]\n       [array([\n       [-0.367, -0.653,  0.494,  0.604,  3.324,  0.023,  2.17 ,  0.203],\n       [-0.639,  0.214,  3.579, -0.498,  0.859,  2.193, -1.086, -0.746],\n       [ 0.066,  1.084,  0.795,  1.373,  0.489,  0.945,  0.157,  0.013],\n       [ 0.713,  0.306,  0.762,  0.298,  0.482, -1.181, -1.783, -0.756],\n       [-0.658, -1.185,  0.671,  1.643,  0.282,  0.879, -0.78 ,  1.086],\n       [ 0.031,  0.602, -0.686, -0.006, -1.228, -1.294, -1.03 ,  0.959],\n       [-0.603,  0.039,  0.034, -0.62 ,  0.174,  0.121, -1.015,  0.202],\n       [-0.544, -2.412, -1.444, -1.354, -0.576,  0.108,  1.627,  0.868]], dtype=float32), \n       array([\n       [ 0.   ,  0.   ,  0.   ,  0.   ,  3.994,  0.   ,  1.997,  0.   ],\n       [ 0.   ,  0.   ,  3.994,  0.   ,  0.   ,  1.997, -1.997,  0.   ],\n       [ 0.   ,  1.997,  0.   ,  1.997,  0.   ,  0.   ,  0.   ,  0.   ],\n       [ 0.   ,  0.   ,  0.   ,  0.   ,  0.   , -1.997, -1.997,  0.   ],\n       [ 0.   , -1.997,  0.   ,  1.997,  0.   ,  0.   ,  0.   ,  1.997],\n       [ 0.   ,  0.   ,  0.   ,  0.   , -1.997, -1.997, -1.997,  0.   ],\n       [ 0.   ,  0.   ,  0.   ,  0.   ,  0.   ,  0.   , -1.997,  0.   ],\n       [ 0.   , -1.997, -1.997, -1.997,  0.   ,  0.   ,  1.997,  0.   ]], dtype=float32), \n       [array([\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 0., 1., 1., 1., 1., 1., 1.]], dtype=float32)]]\n       [array([\n       [-1.025,  0.599, -1.482,  0.203,  0.043,  0.098,  0.331, -2.39 ],\n       [-0.097,  1.226, -0.622,  0.668,  0.386,  1.166, -1.397,  0.325],\n       [ 1.481,  0.71 , -0.901,  0.784, -1.656,  0.436, -1.389, -1.009],\n       [ 1.175,  0.308,  0.249, -0.82 , -2.894, -0.62 ,  0.989,  0.968],\n       [ 0.775,  1.358,  0.506, -2.297, -0.183, -0.976, -0.743,  0.661],\n       [ 0.09 ,  0.324, -1.645, -0.832,  1.265,  0.257,  0.999, -0.491],\n       [ 2.886,  0.406,  0.393, -0.557, -0.68 , -0.243,  0.547, -1.332],\n       [ 0.49 ,  0.412,  0.036, -0.434,  0.022,  0.679, -0.229,  1.001]], dtype=float32), \n       array([\n       [-1.927,  0.   , -1.927,  0.   ,  0.   ,  0.   ,  0.   , -1.927],\n       [ 0.   ,  1.927,  0.   ,  0.   ,  0.   ,  1.927, -1.927,  0.   ],\n       [ 1.927,  0.   ,  0.   ,  0.   , -1.927,  0.   , -1.927, -1.927],\n       [ 1.927,  0.   ,  0.   ,  0.   , -3.853,  0.   ,  1.927,  1.927],\n       [ 0.   ,  1.927,  0.   , -1.927,  0.   , -1.927,  0.   ,  0.   ],\n       [ 0.   ,  0.   , -1.927,  0.   ,  1.927,  0.   ,  1.927,  0.   ],\n       [ 1.927,  0.   ,  0.   ,  0.   ,  0.   ,  0.   ,  0.   , -1.927],\n       [ 0.   ,  0.   ,  0.   ,  0.   ,  0.   ,  0.   ,  0.   ,  1.927]], dtype=float32), \n       [array([\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [0., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.]], dtype=float32)]]\n</code></pre>", "body_text": "I can reproduce it using tf.fake_quant_with_min_max_args function on Ubuntu 16.04 with python 2.7.12, numpy 1.14.0, and TF 1.11.0 (CPU only):\nmichael@Pascal:~$ cat tf_quant.py\nimport tensorflow as tf\nimport numpy as np\n\nnp.set_printoptions(precision=3, linewidth=120, suppress=True)\n\nsess = tf.Session()\n\nfor i in range(3):\n    sample = np.random.normal(0,1,(8,8))\n    x = tf.cast(sample, tf.float32)\n\n    #min_ = tf.reduce_min(x)\n    #max_ = tf.reduce_max(x)\n    min_ = np.min(sample)\n    max_ = np.max(sample)\n    x_q = tf.fake_quant_with_min_max_args(x, min=min_, max=max_, num_bits=2)\n\n    grad = tf.gradients(x_q, x)\n    print sess.run([x, x_q, grad])\n\nmichael@Pascal:~$ python2 tf_quant.py\n2018-10-22 09:03:10.722455: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\n       [array([\n       [-0.418, -0.105,  0.994,  0.022, -1.241, -0.324,  0.128,  0.001],\n       [ 0.399, -1.085,  0.361,  2.381,  0.095, -0.23 , -0.892, -0.864],\n       [ 2.527,  0.456, -1.682,  0.049,  0.508, -0.515,  0.379, -0.514],\n       [-1.474, -2.128,  1.136, -0.21 , -1.141, -0.059,  0.609,  1.454],\n       [ 2.644, -0.136,  1.267,  0.397, -0.688, -1.37 , -0.625, -0.144],\n       [-0.887, -1.912, -1.888,  0.066,  0.07 ,  0.166, -0.582, -1.693],\n       [-0.032, -1.16 , -0.344, -0.31 ,  0.72 , -0.713,  0.756,  1.   ],\n       [ 0.599, -2.627,  0.643,  2.024, -0.593,  0.528,  0.62 , -0.893]], dtype=float32), \n       array([\n       [ 0.   ,  0.   ,  1.757,  0.   , -1.757,  0.   ,  0.   ,  0.   ],\n       [ 0.   , -1.757,  0.   ,  1.757,  0.   ,  0.   , -1.757,  0.   ],\n       [ 1.757,  0.   , -1.757,  0.   ,  0.   ,  0.   ,  0.   ,  0.   ],\n       [-1.757, -1.757,  1.757,  0.   , -1.757,  0.   ,  0.   ,  1.757],\n       [ 3.514,  0.   ,  1.757,  0.   ,  0.   , -1.757,  0.   ,  0.   ],\n       [-1.757, -1.757, -1.757,  0.   ,  0.   ,  0.   ,  0.   , -1.757],\n       [ 0.   , -1.757,  0.   ,  0.   ,  0.   ,  0.   ,  0.   ,  1.757],\n       [ 0.   , -1.757,  0.   ,  1.757,  0.   ,  0.   ,  0.   , -1.757]], dtype=float32), \n       [array([\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 0., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 0., 0., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 0., 1., 1., 1., 1., 1., 1.]], dtype=float32)]]\n       [array([\n       [-0.367, -0.653,  0.494,  0.604,  3.324,  0.023,  2.17 ,  0.203],\n       [-0.639,  0.214,  3.579, -0.498,  0.859,  2.193, -1.086, -0.746],\n       [ 0.066,  1.084,  0.795,  1.373,  0.489,  0.945,  0.157,  0.013],\n       [ 0.713,  0.306,  0.762,  0.298,  0.482, -1.181, -1.783, -0.756],\n       [-0.658, -1.185,  0.671,  1.643,  0.282,  0.879, -0.78 ,  1.086],\n       [ 0.031,  0.602, -0.686, -0.006, -1.228, -1.294, -1.03 ,  0.959],\n       [-0.603,  0.039,  0.034, -0.62 ,  0.174,  0.121, -1.015,  0.202],\n       [-0.544, -2.412, -1.444, -1.354, -0.576,  0.108,  1.627,  0.868]], dtype=float32), \n       array([\n       [ 0.   ,  0.   ,  0.   ,  0.   ,  3.994,  0.   ,  1.997,  0.   ],\n       [ 0.   ,  0.   ,  3.994,  0.   ,  0.   ,  1.997, -1.997,  0.   ],\n       [ 0.   ,  1.997,  0.   ,  1.997,  0.   ,  0.   ,  0.   ,  0.   ],\n       [ 0.   ,  0.   ,  0.   ,  0.   ,  0.   , -1.997, -1.997,  0.   ],\n       [ 0.   , -1.997,  0.   ,  1.997,  0.   ,  0.   ,  0.   ,  1.997],\n       [ 0.   ,  0.   ,  0.   ,  0.   , -1.997, -1.997, -1.997,  0.   ],\n       [ 0.   ,  0.   ,  0.   ,  0.   ,  0.   ,  0.   , -1.997,  0.   ],\n       [ 0.   , -1.997, -1.997, -1.997,  0.   ,  0.   ,  1.997,  0.   ]], dtype=float32), \n       [array([\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 0., 1., 1., 1., 1., 1., 1.]], dtype=float32)]]\n       [array([\n       [-1.025,  0.599, -1.482,  0.203,  0.043,  0.098,  0.331, -2.39 ],\n       [-0.097,  1.226, -0.622,  0.668,  0.386,  1.166, -1.397,  0.325],\n       [ 1.481,  0.71 , -0.901,  0.784, -1.656,  0.436, -1.389, -1.009],\n       [ 1.175,  0.308,  0.249, -0.82 , -2.894, -0.62 ,  0.989,  0.968],\n       [ 0.775,  1.358,  0.506, -2.297, -0.183, -0.976, -0.743,  0.661],\n       [ 0.09 ,  0.324, -1.645, -0.832,  1.265,  0.257,  0.999, -0.491],\n       [ 2.886,  0.406,  0.393, -0.557, -0.68 , -0.243,  0.547, -1.332],\n       [ 0.49 ,  0.412,  0.036, -0.434,  0.022,  0.679, -0.229,  1.001]], dtype=float32), \n       array([\n       [-1.927,  0.   , -1.927,  0.   ,  0.   ,  0.   ,  0.   , -1.927],\n       [ 0.   ,  1.927,  0.   ,  0.   ,  0.   ,  1.927, -1.927,  0.   ],\n       [ 1.927,  0.   ,  0.   ,  0.   , -1.927,  0.   , -1.927, -1.927],\n       [ 1.927,  0.   ,  0.   ,  0.   , -3.853,  0.   ,  1.927,  1.927],\n       [ 0.   ,  1.927,  0.   , -1.927,  0.   , -1.927,  0.   ,  0.   ],\n       [ 0.   ,  0.   , -1.927,  0.   ,  1.927,  0.   ,  1.927,  0.   ],\n       [ 1.927,  0.   ,  0.   ,  0.   ,  0.   ,  0.   ,  0.   , -1.927],\n       [ 0.   ,  0.   ,  0.   ,  0.   ,  0.   ,  0.   ,  0.   ,  1.927]], dtype=float32), \n       [array([\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [0., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.]], dtype=float32)]]", "body": "I can reproduce it using tf.fake_quant_with_min_max_args function on Ubuntu 16.04 with python 2.7.12, numpy 1.14.0, and TF 1.11.0 (CPU only):\r\n\r\n```\r\nmichael@Pascal:~$ cat tf_quant.py\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\nnp.set_printoptions(precision=3, linewidth=120, suppress=True)\r\n\r\nsess = tf.Session()\r\n\r\nfor i in range(3):\r\n    sample = np.random.normal(0,1,(8,8))\r\n    x = tf.cast(sample, tf.float32)\r\n\r\n    #min_ = tf.reduce_min(x)\r\n    #max_ = tf.reduce_max(x)\r\n    min_ = np.min(sample)\r\n    max_ = np.max(sample)\r\n    x_q = tf.fake_quant_with_min_max_args(x, min=min_, max=max_, num_bits=2)\r\n\r\n    grad = tf.gradients(x_q, x)\r\n    print sess.run([x, x_q, grad])\r\n```\r\n```\r\nmichael@Pascal:~$ python2 tf_quant.py\r\n2018-10-22 09:03:10.722455: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\r\n       [array([\r\n       [-0.418, -0.105,  0.994,  0.022, -1.241, -0.324,  0.128,  0.001],\r\n       [ 0.399, -1.085,  0.361,  2.381,  0.095, -0.23 , -0.892, -0.864],\r\n       [ 2.527,  0.456, -1.682,  0.049,  0.508, -0.515,  0.379, -0.514],\r\n       [-1.474, -2.128,  1.136, -0.21 , -1.141, -0.059,  0.609,  1.454],\r\n       [ 2.644, -0.136,  1.267,  0.397, -0.688, -1.37 , -0.625, -0.144],\r\n       [-0.887, -1.912, -1.888,  0.066,  0.07 ,  0.166, -0.582, -1.693],\r\n       [-0.032, -1.16 , -0.344, -0.31 ,  0.72 , -0.713,  0.756,  1.   ],\r\n       [ 0.599, -2.627,  0.643,  2.024, -0.593,  0.528,  0.62 , -0.893]], dtype=float32), \r\n       array([\r\n       [ 0.   ,  0.   ,  1.757,  0.   , -1.757,  0.   ,  0.   ,  0.   ],\r\n       [ 0.   , -1.757,  0.   ,  1.757,  0.   ,  0.   , -1.757,  0.   ],\r\n       [ 1.757,  0.   , -1.757,  0.   ,  0.   ,  0.   ,  0.   ,  0.   ],\r\n       [-1.757, -1.757,  1.757,  0.   , -1.757,  0.   ,  0.   ,  1.757],\r\n       [ 3.514,  0.   ,  1.757,  0.   ,  0.   , -1.757,  0.   ,  0.   ],\r\n       [-1.757, -1.757, -1.757,  0.   ,  0.   ,  0.   ,  0.   , -1.757],\r\n       [ 0.   , -1.757,  0.   ,  0.   ,  0.   ,  0.   ,  0.   ,  1.757],\r\n       [ 0.   , -1.757,  0.   ,  1.757,  0.   ,  0.   ,  0.   , -1.757]], dtype=float32), \r\n       [array([\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 0., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 0., 0., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 0., 1., 1., 1., 1., 1., 1.]], dtype=float32)]]\r\n       [array([\r\n       [-0.367, -0.653,  0.494,  0.604,  3.324,  0.023,  2.17 ,  0.203],\r\n       [-0.639,  0.214,  3.579, -0.498,  0.859,  2.193, -1.086, -0.746],\r\n       [ 0.066,  1.084,  0.795,  1.373,  0.489,  0.945,  0.157,  0.013],\r\n       [ 0.713,  0.306,  0.762,  0.298,  0.482, -1.181, -1.783, -0.756],\r\n       [-0.658, -1.185,  0.671,  1.643,  0.282,  0.879, -0.78 ,  1.086],\r\n       [ 0.031,  0.602, -0.686, -0.006, -1.228, -1.294, -1.03 ,  0.959],\r\n       [-0.603,  0.039,  0.034, -0.62 ,  0.174,  0.121, -1.015,  0.202],\r\n       [-0.544, -2.412, -1.444, -1.354, -0.576,  0.108,  1.627,  0.868]], dtype=float32), \r\n       array([\r\n       [ 0.   ,  0.   ,  0.   ,  0.   ,  3.994,  0.   ,  1.997,  0.   ],\r\n       [ 0.   ,  0.   ,  3.994,  0.   ,  0.   ,  1.997, -1.997,  0.   ],\r\n       [ 0.   ,  1.997,  0.   ,  1.997,  0.   ,  0.   ,  0.   ,  0.   ],\r\n       [ 0.   ,  0.   ,  0.   ,  0.   ,  0.   , -1.997, -1.997,  0.   ],\r\n       [ 0.   , -1.997,  0.   ,  1.997,  0.   ,  0.   ,  0.   ,  1.997],\r\n       [ 0.   ,  0.   ,  0.   ,  0.   , -1.997, -1.997, -1.997,  0.   ],\r\n       [ 0.   ,  0.   ,  0.   ,  0.   ,  0.   ,  0.   , -1.997,  0.   ],\r\n       [ 0.   , -1.997, -1.997, -1.997,  0.   ,  0.   ,  1.997,  0.   ]], dtype=float32), \r\n       [array([\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 0., 1., 1., 1., 1., 1., 1.]], dtype=float32)]]\r\n       [array([\r\n       [-1.025,  0.599, -1.482,  0.203,  0.043,  0.098,  0.331, -2.39 ],\r\n       [-0.097,  1.226, -0.622,  0.668,  0.386,  1.166, -1.397,  0.325],\r\n       [ 1.481,  0.71 , -0.901,  0.784, -1.656,  0.436, -1.389, -1.009],\r\n       [ 1.175,  0.308,  0.249, -0.82 , -2.894, -0.62 ,  0.989,  0.968],\r\n       [ 0.775,  1.358,  0.506, -2.297, -0.183, -0.976, -0.743,  0.661],\r\n       [ 0.09 ,  0.324, -1.645, -0.832,  1.265,  0.257,  0.999, -0.491],\r\n       [ 2.886,  0.406,  0.393, -0.557, -0.68 , -0.243,  0.547, -1.332],\r\n       [ 0.49 ,  0.412,  0.036, -0.434,  0.022,  0.679, -0.229,  1.001]], dtype=float32), \r\n       array([\r\n       [-1.927,  0.   , -1.927,  0.   ,  0.   ,  0.   ,  0.   , -1.927],\r\n       [ 0.   ,  1.927,  0.   ,  0.   ,  0.   ,  1.927, -1.927,  0.   ],\r\n       [ 1.927,  0.   ,  0.   ,  0.   , -1.927,  0.   , -1.927, -1.927],\r\n       [ 1.927,  0.   ,  0.   ,  0.   , -3.853,  0.   ,  1.927,  1.927],\r\n       [ 0.   ,  1.927,  0.   , -1.927,  0.   , -1.927,  0.   ,  0.   ],\r\n       [ 0.   ,  0.   , -1.927,  0.   ,  1.927,  0.   ,  1.927,  0.   ],\r\n       [ 1.927,  0.   ,  0.   ,  0.   ,  0.   ,  0.   ,  0.   , -1.927],\r\n       [ 0.   ,  0.   ,  0.   ,  0.   ,  0.   ,  0.   ,  0.   ,  1.927]], dtype=float32), \r\n       [array([\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [0., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.]], dtype=float32)]]\r\n```\r\n\r\n\r\n\r\n"}