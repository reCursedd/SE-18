{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/433287429", "html_url": "https://github.com/tensorflow/tensorflow/issues/22977#issuecomment-433287429", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22977", "id": 433287429, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzI4NzQyOQ==", "user": {"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-26T05:04:11Z", "updated_at": "2018-10-26T05:04:11Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=981619\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/michaelklachko\">@michaelklachko</a> I run the code in your environment and results are normal. Note that you need to use <code>tf.reduce_max</code> and <code>tf.reduce_min</code> in <code>tf.fake_quant_with_min_max_vars()</code></p>\n<pre><code>import tensorflow as tf\nimport numpy as np\n\nfor i in range(3):\n    tf.reset_default_graph()\n    x = tf.cast(np.random.normal(0, 1, (8,8)), tf.float32)\n    x_q = tf.fake_quant_with_min_max_vars(x, min=tf.reduce_min(x), max=tf.reduce_max(x), num_bits=3)\n    grad = tf.gradients(x_q, x)\n    sess = tf.Session()\n    print(sess.run([grad]))\n</code></pre>\n<pre><code>[[array([[1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.]], dtype=float32)]]\n[[array([[1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.]], dtype=float32)]]\n[[array([[1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.]], dtype=float32)]]\n</code></pre>", "body_text": "@michaelklachko I run the code in your environment and results are normal. Note that you need to use tf.reduce_max and tf.reduce_min in tf.fake_quant_with_min_max_vars()\nimport tensorflow as tf\nimport numpy as np\n\nfor i in range(3):\n    tf.reset_default_graph()\n    x = tf.cast(np.random.normal(0, 1, (8,8)), tf.float32)\n    x_q = tf.fake_quant_with_min_max_vars(x, min=tf.reduce_min(x), max=tf.reduce_max(x), num_bits=3)\n    grad = tf.gradients(x_q, x)\n    sess = tf.Session()\n    print(sess.run([grad]))\n\n[[array([[1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.]], dtype=float32)]]\n[[array([[1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.]], dtype=float32)]]\n[[array([[1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.]], dtype=float32)]]", "body": "@michaelklachko I run the code in your environment and results are normal. Note that you need to use `tf.reduce_max` and `tf.reduce_min` in `tf.fake_quant_with_min_max_vars()`\r\n\r\n```\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\nfor i in range(3):\r\n    tf.reset_default_graph()\r\n    x = tf.cast(np.random.normal(0, 1, (8,8)), tf.float32)\r\n    x_q = tf.fake_quant_with_min_max_vars(x, min=tf.reduce_min(x), max=tf.reduce_max(x), num_bits=3)\r\n    grad = tf.gradients(x_q, x)\r\n    sess = tf.Session()\r\n    print(sess.run([grad]))\r\n```\r\n```\r\n[[array([[1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.]], dtype=float32)]]\r\n[[array([[1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.]], dtype=float32)]]\r\n[[array([[1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.],\r\n       [1., 1., 1., 1., 1., 1., 1., 1.]], dtype=float32)]]\r\n```"}