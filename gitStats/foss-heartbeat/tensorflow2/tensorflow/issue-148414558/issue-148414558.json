{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1950", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1950/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1950/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1950/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/1950", "id": 148414558, "node_id": "MDU6SXNzdWUxNDg0MTQ1NTg=", "number": 1950, "title": "tf.gather doesn't support SparseTensors as an input", "user": {"login": "Remper", "id": 451747, "node_id": "MDQ6VXNlcjQ1MTc0Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/451747?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Remper", "html_url": "https://github.com/Remper", "followers_url": "https://api.github.com/users/Remper/followers", "following_url": "https://api.github.com/users/Remper/following{/other_user}", "gists_url": "https://api.github.com/users/Remper/gists{/gist_id}", "starred_url": "https://api.github.com/users/Remper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Remper/subscriptions", "organizations_url": "https://api.github.com/users/Remper/orgs", "repos_url": "https://api.github.com/users/Remper/repos", "events_url": "https://api.github.com/users/Remper/events{/privacy}", "received_events_url": "https://api.github.com/users/Remper/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-04-14T16:23:01Z", "updated_at": "2018-04-13T01:01:46Z", "closed_at": "2016-08-12T19:54:35Z", "author_association": "NONE", "body_html": "<p>As the code in <code>tf.nn.embedding_lookup</code> suggests, there were attempts in 0.8 to make it accept SparseTensors, but then everything funnels into <code>tf.gather</code> that tries to convert SparseTensor to Tensor and fails.</p>\n<p>Is it a correct behaviour or is it a bug? If not, is there any workaround to achieve the same effect (get some of the rows of a SparseTensor based on a index list)? Otherwise, SparseTensors are close to being completely unusable.</p>\n<h3>Environment info</h3>\n<p>Operating System: OS X 10.10.5<br>\nTensorFlow version: 0.8.0rc0</p>\n<h3>Log:</h3>\n<pre><code>  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 566, in gather\n    validate_indices=validate_indices, name=name)\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/op_def_library.py\", line 411, in apply_op\n    as_ref=input_arg.is_ref)\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 566, in convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/constant_op.py\", line 179, in _constant_tensor_conversion_function\n    return constant(v, dtype=dtype, name=name)\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/constant_op.py\", line 162, in constant\n    tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape))\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.py\", line 390, in make_tensor_proto\n    tensor_proto.string_val.extend([compat.as_bytes(x) for x in proto_values])\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/util/compat.py\", line 44, in as_bytes\n    raise TypeError('Expected binary or unicode string, got %r' % bytes_or_text)\nTypeError: Expected binary or unicode string, got &lt;tensorflow.python.framework.ops.SparseTensor object at 0x103dbc350&gt;\n</code></pre>", "body_text": "As the code in tf.nn.embedding_lookup suggests, there were attempts in 0.8 to make it accept SparseTensors, but then everything funnels into tf.gather that tries to convert SparseTensor to Tensor and fails.\nIs it a correct behaviour or is it a bug? If not, is there any workaround to achieve the same effect (get some of the rows of a SparseTensor based on a index list)? Otherwise, SparseTensors are close to being completely unusable.\nEnvironment info\nOperating System: OS X 10.10.5\nTensorFlow version: 0.8.0rc0\nLog:\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 566, in gather\n    validate_indices=validate_indices, name=name)\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/op_def_library.py\", line 411, in apply_op\n    as_ref=input_arg.is_ref)\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 566, in convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/constant_op.py\", line 179, in _constant_tensor_conversion_function\n    return constant(v, dtype=dtype, name=name)\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/constant_op.py\", line 162, in constant\n    tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape))\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.py\", line 390, in make_tensor_proto\n    tensor_proto.string_val.extend([compat.as_bytes(x) for x in proto_values])\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/util/compat.py\", line 44, in as_bytes\n    raise TypeError('Expected binary or unicode string, got %r' % bytes_or_text)\nTypeError: Expected binary or unicode string, got <tensorflow.python.framework.ops.SparseTensor object at 0x103dbc350>", "body": "As the code in `tf.nn.embedding_lookup` suggests, there were attempts in 0.8 to make it accept SparseTensors, but then everything funnels into `tf.gather` that tries to convert SparseTensor to Tensor and fails.\n\nIs it a correct behaviour or is it a bug? If not, is there any workaround to achieve the same effect (get some of the rows of a SparseTensor based on a index list)? Otherwise, SparseTensors are close to being completely unusable.\n### Environment info\n\nOperating System: OS X 10.10.5\nTensorFlow version: 0.8.0rc0\n### Log:\n\n```\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 566, in gather\n    validate_indices=validate_indices, name=name)\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/op_def_library.py\", line 411, in apply_op\n    as_ref=input_arg.is_ref)\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 566, in convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/constant_op.py\", line 179, in _constant_tensor_conversion_function\n    return constant(v, dtype=dtype, name=name)\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/ops/constant_op.py\", line 162, in constant\n    tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape))\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.py\", line 390, in make_tensor_proto\n    tensor_proto.string_val.extend([compat.as_bytes(x) for x in proto_values])\n  File \"/usr/local/lib/python2.7/site-packages/tensorflow/python/util/compat.py\", line 44, in as_bytes\n    raise TypeError('Expected binary or unicode string, got %r' % bytes_or_text)\nTypeError: Expected binary or unicode string, got <tensorflow.python.framework.ops.SparseTensor object at 0x103dbc350>\n```\n"}