{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/368206235", "html_url": "https://github.com/tensorflow/tensorflow/pull/15640#issuecomment-368206235", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15640", "id": 368206235, "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODIwNjIzNQ==", "user": {"login": "dave-msk", "id": 20377823, "node_id": "MDQ6VXNlcjIwMzc3ODIz", "avatar_url": "https://avatars0.githubusercontent.com/u/20377823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dave-msk", "html_url": "https://github.com/dave-msk", "followers_url": "https://api.github.com/users/dave-msk/followers", "following_url": "https://api.github.com/users/dave-msk/following{/other_user}", "gists_url": "https://api.github.com/users/dave-msk/gists{/gist_id}", "starred_url": "https://api.github.com/users/dave-msk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dave-msk/subscriptions", "organizations_url": "https://api.github.com/users/dave-msk/orgs", "repos_url": "https://api.github.com/users/dave-msk/repos", "events_url": "https://api.github.com/users/dave-msk/events{/privacy}", "received_events_url": "https://api.github.com/users/dave-msk/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-24T07:00:45Z", "updated_at": "2018-02-24T07:00:45Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The <code>ps_strategy</code> is removed. So the usage will now be as follows:</p>\n<ol>\n<li>The user has a self-defined device function <code>device_fn</code>:</li>\n</ol>\n<pre><code>config = RunConfig(device_fn=device_fn)\n</code></pre>\n<ol start=\"2\">\n<li>The user wants to change only the ps strategy to <code>ps_strategy</code> in the default device function used by <code>Estimator</code>. In this case the easiest way is to use the code from <code>_get_replica_device_setter(config)</code> function in <code>estimator.py</code>, with an addition parameter <code>ps_strategy</code>:</li>\n</ol>\n<pre><code>def get_replica_device_setter(config, ps_strategy):\n  ps_ops = [\n      'Variable', 'VariableV2', 'AutoReloadVariable', 'MutableHashTable',\n      'MutableHashTableV2', 'MutableHashTableOfTensors',\n      'MutableHashTableOfTensorsV2', 'MutableDenseHashTable',\n      'MutableDenseHashTableV2', 'VarHandleOp'\n  ]\n\n  if config.task_type:\n    worker_device = '/job:%s/task:%d' % (config.task_type, config.task_id)\n  else:\n    worker_device = '/job:worker'\n\n  if config.num_ps_replicas &gt; 0:\n    return training.replica_device_setter(\n        ps_tasks=config.num_ps_replicas,\n        worker_device=worker_device,\n        merge_devices=True,\n        ps_ops=ps_ops,\n        cluster=config.cluster_spec,\n        ps_strategy=ps_strategy)  # This is the only difference from the original code\n  else:\n    return None\n\nconfig = RunConfig()\nconfig = config.replace(device_fn=get_replica_device_setter(config, ps_strategy))\n</code></pre>\n<ol start=\"3\">\n<li>If the user wants to use the default device function, no code change is required.</li>\n</ol>\n<p>Adding a <code>device_fn</code> gives a great flexibility to users, but it doesn't feel right if we need to dive deep into the source code and define a slightly modified version of <code>_get_replica_device_setter</code> if the ps_strategy is the only thing one wants to change. What do you think?</p>", "body_text": "The ps_strategy is removed. So the usage will now be as follows:\n\nThe user has a self-defined device function device_fn:\n\nconfig = RunConfig(device_fn=device_fn)\n\n\nThe user wants to change only the ps strategy to ps_strategy in the default device function used by Estimator. In this case the easiest way is to use the code from _get_replica_device_setter(config) function in estimator.py, with an addition parameter ps_strategy:\n\ndef get_replica_device_setter(config, ps_strategy):\n  ps_ops = [\n      'Variable', 'VariableV2', 'AutoReloadVariable', 'MutableHashTable',\n      'MutableHashTableV2', 'MutableHashTableOfTensors',\n      'MutableHashTableOfTensorsV2', 'MutableDenseHashTable',\n      'MutableDenseHashTableV2', 'VarHandleOp'\n  ]\n\n  if config.task_type:\n    worker_device = '/job:%s/task:%d' % (config.task_type, config.task_id)\n  else:\n    worker_device = '/job:worker'\n\n  if config.num_ps_replicas > 0:\n    return training.replica_device_setter(\n        ps_tasks=config.num_ps_replicas,\n        worker_device=worker_device,\n        merge_devices=True,\n        ps_ops=ps_ops,\n        cluster=config.cluster_spec,\n        ps_strategy=ps_strategy)  # This is the only difference from the original code\n  else:\n    return None\n\nconfig = RunConfig()\nconfig = config.replace(device_fn=get_replica_device_setter(config, ps_strategy))\n\n\nIf the user wants to use the default device function, no code change is required.\n\nAdding a device_fn gives a great flexibility to users, but it doesn't feel right if we need to dive deep into the source code and define a slightly modified version of _get_replica_device_setter if the ps_strategy is the only thing one wants to change. What do you think?", "body": "The `ps_strategy` is removed. So the usage will now be as follows:\r\n\r\n1. The user has a self-defined device function `device_fn`:\r\n```\r\nconfig = RunConfig(device_fn=device_fn)\r\n```\r\n\r\n2. The user wants to change only the ps strategy to `ps_strategy` in the default device function used by `Estimator`. In this case the easiest way is to use the code from `_get_replica_device_setter(config)` function in `estimator.py`, with an addition parameter `ps_strategy`:\r\n\r\n```\r\ndef get_replica_device_setter(config, ps_strategy):\r\n  ps_ops = [\r\n      'Variable', 'VariableV2', 'AutoReloadVariable', 'MutableHashTable',\r\n      'MutableHashTableV2', 'MutableHashTableOfTensors',\r\n      'MutableHashTableOfTensorsV2', 'MutableDenseHashTable',\r\n      'MutableDenseHashTableV2', 'VarHandleOp'\r\n  ]\r\n\r\n  if config.task_type:\r\n    worker_device = '/job:%s/task:%d' % (config.task_type, config.task_id)\r\n  else:\r\n    worker_device = '/job:worker'\r\n\r\n  if config.num_ps_replicas > 0:\r\n    return training.replica_device_setter(\r\n        ps_tasks=config.num_ps_replicas,\r\n        worker_device=worker_device,\r\n        merge_devices=True,\r\n        ps_ops=ps_ops,\r\n        cluster=config.cluster_spec,\r\n        ps_strategy=ps_strategy)  # This is the only difference from the original code\r\n  else:\r\n    return None\r\n\r\nconfig = RunConfig()\r\nconfig = config.replace(device_fn=get_replica_device_setter(config, ps_strategy))\r\n```\r\n\r\n3. If the user wants to use the default device function, no code change is required.\r\n\r\nAdding a `device_fn` gives a great flexibility to users, but it doesn't feel right if we need to dive deep into the source code and define a slightly modified version of `_get_replica_device_setter` if the ps_strategy is the only thing one wants to change. What do you think?"}