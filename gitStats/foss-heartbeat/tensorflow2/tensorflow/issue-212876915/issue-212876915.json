{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8219", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8219/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8219/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8219/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/8219", "id": 212876915, "node_id": "MDExOlB1bGxSZXF1ZXN0MTA5Nzk5MjUy", "number": 8219, "title": "Make binary ops delegate to rhs when tensor conversion fails", "user": {"login": "ageron", "id": 76661, "node_id": "MDQ6VXNlcjc2NjYx", "avatar_url": "https://avatars3.githubusercontent.com/u/76661?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ageron", "html_url": "https://github.com/ageron", "followers_url": "https://api.github.com/users/ageron/followers", "following_url": "https://api.github.com/users/ageron/following{/other_user}", "gists_url": "https://api.github.com/users/ageron/gists{/gist_id}", "starred_url": "https://api.github.com/users/ageron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ageron/subscriptions", "organizations_url": "https://api.github.com/users/ageron/orgs", "repos_url": "https://api.github.com/users/ageron/repos", "events_url": "https://api.github.com/users/ageron/events{/privacy}", "received_events_url": "https://api.github.com/users/ageron/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 419840263, "node_id": "MDU6TGFiZWw0MTk4NDAyNjM=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/awaiting%20testing%20(then%20merge)", "name": "awaiting testing (then merge)", "color": "c2e0c6", "default": false}, {"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2017-03-08T22:30:22Z", "updated_at": "2017-04-28T10:22:46Z", "closed_at": "2017-04-27T17:25:18Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/8219", "html_url": "https://github.com/tensorflow/tensorflow/pull/8219", "diff_url": "https://github.com/tensorflow/tensorflow/pull/8219.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/8219.patch"}, "body_html": "<p><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #8051.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"211647509\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/8051\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/8051/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/8051\">#8051</a>.</p>\n<p>The goal is to allow users to choose whether <code>tensor + something</code> should call <code>tensor</code>'s <code>__add__()</code> method or <code>something</code>'s <code>__radd__()</code> method.</p>\n<p>Example usage:</p>\n<pre><code>&gt;&gt;&gt; import tensorflow as tf\n&gt;&gt;&gt; tensor = tf.constant(3.0)\n&gt;&gt;&gt; class MagicMatrix(object):\n...   def __radd__(self, lhs):\n...     print(\"MagicMatrix.__radd__\", lhs)\n... \n&gt;&gt;&gt; tensor + MagicMatrix()\nMagicMatrix.__radd__ Tensor(\"Const:0\", shape=(), dtype=float32)\n</code></pre>\n<p>If the RHS's type does not define the reverse method (in this example <code>__radd__()</code>) then the usual behavior applies:</p>\n<pre><code>&gt;&gt;&gt; class MagicMatrix(object):\n...   pass\n... \n&gt;&gt;&gt; tensor + MagicMatrix()\nTraceback (most recent call last):\n[...]\nTypeError: Expected float32, got &lt;__main__.MagicMatrix object at 0x7f14e32aa978&gt; of type 'MagicMatrix' instead.\n</code></pre>", "body_text": "Fixes #8051.\nThe goal is to allow users to choose whether tensor + something should call tensor's __add__() method or something's __radd__() method.\nExample usage:\n>>> import tensorflow as tf\n>>> tensor = tf.constant(3.0)\n>>> class MagicMatrix(object):\n...   def __radd__(self, lhs):\n...     print(\"MagicMatrix.__radd__\", lhs)\n... \n>>> tensor + MagicMatrix()\nMagicMatrix.__radd__ Tensor(\"Const:0\", shape=(), dtype=float32)\n\nIf the RHS's type does not define the reverse method (in this example __radd__()) then the usual behavior applies:\n>>> class MagicMatrix(object):\n...   pass\n... \n>>> tensor + MagicMatrix()\nTraceback (most recent call last):\n[...]\nTypeError: Expected float32, got <__main__.MagicMatrix object at 0x7f14e32aa978> of type 'MagicMatrix' instead.", "body": "Fixes #8051.\r\n\r\nThe goal is to allow users to choose whether `tensor + something` should call `tensor`'s `__add__()` method or `something`'s `__radd__()` method.\r\n\r\nExample usage:\r\n\r\n```\r\n>>> import tensorflow as tf\r\n>>> tensor = tf.constant(3.0)\r\n>>> class MagicMatrix(object):\r\n...   def __radd__(self, lhs):\r\n...     print(\"MagicMatrix.__radd__\", lhs)\r\n... \r\n>>> tensor + MagicMatrix()\r\nMagicMatrix.__radd__ Tensor(\"Const:0\", shape=(), dtype=float32)\r\n```\r\n\r\nIf the RHS's type does not define the reverse method (in this example `__radd__()`) then the usual behavior applies:\r\n\r\n```\r\n>>> class MagicMatrix(object):\r\n...   pass\r\n... \r\n>>> tensor + MagicMatrix()\r\nTraceback (most recent call last):\r\n[...]\r\nTypeError: Expected float32, got <__main__.MagicMatrix object at 0x7f14e32aa978> of type 'MagicMatrix' instead.\r\n```\r\n"}