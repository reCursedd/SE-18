{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6500", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6500/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6500/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6500/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/6500", "id": 197575471, "node_id": "MDU6SXNzdWUxOTc1NzU0NzE=", "number": 6500, "title": "Issue with Tensorflow on windows when using TensorForestEstimator", "user": {"login": "KishoreKarunakaran", "id": 10724627, "node_id": "MDQ6VXNlcjEwNzI0NjI3", "avatar_url": "https://avatars3.githubusercontent.com/u/10724627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KishoreKarunakaran", "html_url": "https://github.com/KishoreKarunakaran", "followers_url": "https://api.github.com/users/KishoreKarunakaran/followers", "following_url": "https://api.github.com/users/KishoreKarunakaran/following{/other_user}", "gists_url": "https://api.github.com/users/KishoreKarunakaran/gists{/gist_id}", "starred_url": "https://api.github.com/users/KishoreKarunakaran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KishoreKarunakaran/subscriptions", "organizations_url": "https://api.github.com/users/KishoreKarunakaran/orgs", "repos_url": "https://api.github.com/users/KishoreKarunakaran/repos", "events_url": "https://api.github.com/users/KishoreKarunakaran/events{/privacy}", "received_events_url": "https://api.github.com/users/KishoreKarunakaran/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ThomasColthurst", "id": 23506033, "node_id": "MDQ6VXNlcjIzNTA2MDMz", "avatar_url": "https://avatars3.githubusercontent.com/u/23506033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThomasColthurst", "html_url": "https://github.com/ThomasColthurst", "followers_url": "https://api.github.com/users/ThomasColthurst/followers", "following_url": "https://api.github.com/users/ThomasColthurst/following{/other_user}", "gists_url": "https://api.github.com/users/ThomasColthurst/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThomasColthurst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThomasColthurst/subscriptions", "organizations_url": "https://api.github.com/users/ThomasColthurst/orgs", "repos_url": "https://api.github.com/users/ThomasColthurst/repos", "events_url": "https://api.github.com/users/ThomasColthurst/events{/privacy}", "received_events_url": "https://api.github.com/users/ThomasColthurst/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ThomasColthurst", "id": 23506033, "node_id": "MDQ6VXNlcjIzNTA2MDMz", "avatar_url": "https://avatars3.githubusercontent.com/u/23506033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThomasColthurst", "html_url": "https://github.com/ThomasColthurst", "followers_url": "https://api.github.com/users/ThomasColthurst/followers", "following_url": "https://api.github.com/users/ThomasColthurst/following{/other_user}", "gists_url": "https://api.github.com/users/ThomasColthurst/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThomasColthurst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThomasColthurst/subscriptions", "organizations_url": "https://api.github.com/users/ThomasColthurst/orgs", "repos_url": "https://api.github.com/users/ThomasColthurst/repos", "events_url": "https://api.github.com/users/ThomasColthurst/events{/privacy}", "received_events_url": "https://api.github.com/users/ThomasColthurst/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2016-12-26T10:59:11Z", "updated_at": "2017-01-25T18:43:15Z", "closed_at": "2017-01-18T07:02:14Z", "author_association": "NONE", "body_html": "<p>I already have conda installation in my Windows, I installed tensorflow using pip and it was working fine based on the testing the <a href=\"https://www.tensorflow.org/get_started/os_setup#test_the_tensorflow_installation\" rel=\"nofollow\">tensorflow installation</a>.</p>\n<p>When I'm using TensorForestEstimator, I',m getting the following error<br>\n<strong>lib\\site-packages\\tensorflow\\contrib\\tensor_forest\\python\\ops_training_ops.so not found</strong></p>\n<p>Complete details</p>\n<p><strong>hparams = tf.contrib.tensor_forest.python.tensor_forest.ForestHParams(<br>\nnum_trees=2, max_nodes=1000, num_classes=2, num_features=9, model_dir='model/fit/')</strong></p>\n<p><strong>forest_classifier = tf.contrib.learn.TensorForestEstimator(hparams)</strong></p>\n<p>Warning Messages:</p>\n<p>WARNING:tensorflow:Using temporary folder as model directory: C:\\Users\\username\\AppData\\Local\\Temp\\tmpu1vjyu11<br>\nINFO:tensorflow:Using default config.<br>\nINFO:tensorflow:Using config: {'tf_random_seed': None, 'keep_checkpoint_max': 5, '_cluster_spec': &lt;tensorflow.python.training.server_lib.ClusterSpec object at 0x00000218062DCE10&gt;, 'save_checkpoints_steps': None, 'save_checkpoints_secs': 600, '_task_id': 0, 'keep_checkpoint_every_n_hours': 10000, 'tf_config': gpu_options {<br>\nper_process_gpu_memory_fraction: 1<br>\n}<br>\n, '_is_chief': True, '_num_ps_replicas': 0, '_master': '', '_environment': 'local', 'save_summary_steps': 100, '_task_type': None, '_evaluation_master': ''}</p>\n<p><strong>forest_classifier.fit(x=training_data, y=Y_train, batch_size=10, steps=2000)</strong></p>\n<p>WARNING:tensorflow:From D:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\estimators\\random_forest.py:237 in fit.: calling BaseEstimator.fit (from tensorflow.contrib.learn.python.learn.estimators.estimator) with x is deprecated and will be removed after 2016-12-01.<br>\nInstructions for updating:<br>\nEstimator is decoupled from Scikit Learn interface by moving into<br>\nseparate class SKCompat. Arguments x, y and batch_size are only<br>\navailable in the SKCompat class, Estimator will only accept input_fn.<br>\nExample conversion:<br>\nest = Estimator(...) -&gt; est = SKCompat(Estimator(...))<br>\nWARNING:tensorflow:From D:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\estimators\\random_forest.py:237 in fit.: calling BaseEstimator.fit (from tensorflow.contrib.learn.python.learn.estimators.estimator) with y is deprecated and will be removed after 2016-12-01.<br>\nInstructions for updating:<br>\nEstimator is decoupled from Scikit Learn interface by moving into<br>\nseparate class SKCompat. Arguments x, y and batch_size are only<br>\navailable in the SKCompat class, Estimator will only accept input_fn.<br>\nExample conversion:<br>\nest = Estimator(...) -&gt; est = SKCompat(Estimator(...))<br>\nWARNING:tensorflow:From D:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\estimators\\random_forest.py:237 in fit.: calling BaseEstimator.fit (from tensorflow.contrib.learn.python.learn.estimators.estimator) with batch_size is deprecated and will be removed after 2016-12-01.<br>\nInstructions for updating:<br>\nEstimator is decoupled from Scikit Learn interface by moving into<br>\nseparate class SKCompat. Arguments x, y and batch_size are only<br>\navailable in the SKCompat class, Estimator will only accept input_fn.<br>\nExample conversion:<br>\nest = Estimator(...) -&gt; est = SKCompat(Estimator(...))<br>\nINFO:tensorflow:Constructing forest with params =<br>\nINFO:tensorflow:{'dominate_method': 'hoeffding', 'dominate_fraction': 0.99, 'bagged_num_features': 9, 'split_initializations_per_input': 1, 'num_trees': 2, 'base_random_seed': 0, 'valid_leaf_threshold': 1, 'bagged_features': None, 'min_split_samples': 5, 'bagging_fraction': 1.0, 'num_classes': 2, 'num_features': 9, 'feature_bagging_fraction': 1.0, 'num_splits_to_consider': 10, 'split_after_samples': 250, 'model_dir': 'model/fit/', 'num_outputs': 1, 'max_nodes': 1000, 'num_output_columns': 3, 'regression': False, 'max_fertile_nodes': 500}<br>\nINFO:tensorflow:data path: D:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\tensor_forest\\python\\ops_training_ops.so</p>\n<p>**---------------------------------------------------------------------------<br>\nNotFoundError                             Traceback (most recent call last)<br>\n in ()<br>\n----&gt; 1 forest_classifier.fit(x=training_data, y=Y_train, batch_size=10, steps=200)</p>\n<p>D:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\estimators\\random_forest.py in fit(self, x, y, input_fn, steps, batch_size, monitors, max_steps)<br>\n235     self._estimator.fit(input_fn=input_fn, x=x, y=y,<br>\n236                         batch_size=batch_size, steps=steps, monitors=monitors,<br>\n--&gt; 237                         max_steps=max_steps)<br>\n238<br>\n239   @deprecated_arg_values(</p>\n<p>D:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\util\\deprecation.py in new_func(*args, **kwargs)<br>\n189             _call_location(), decorator_utils.get_qualified_name(func),<br>\n190             func.<strong>module</strong>, arg_name, date, instructions)<br>\n--&gt; 191       return func(*args, **kwargs)<br>\n192     new_func.<strong>doc</strong> = _add_deprecated_arg_notice_to_docstring(<br>\n193         func.<strong>doc</strong>, date, instructions)</p>\n<p>D:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\estimators\\estimator.py in fit(self, x, y, input_fn, steps, batch_size, monitors, max_steps)<br>\n353                              steps=steps,<br>\n354                              monitors=monitors,<br>\n--&gt; 355                              max_steps=max_steps)<br>\n356     logging.info('Loss for final step: %s.', loss)<br>\n357     return self</p>\n<p>D:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\estimators\\estimator.py in _train_model(self, input_fn, steps, feed_fn, init_op, init_feed_fn, init_fn, device_fn, monitors, log_every_steps, fail_on_nan_loss, max_steps)<br>\n697       # cases, but will soon be deleted after the subclasses are updated.<br>\n698       # TODO(b/32664904): Update subclasses and delete the else-statement.<br>\n--&gt; 699       train_ops = self._get_train_ops(features, labels)<br>\n700       if isinstance(train_ops, model_fn_lib.ModelFnOps):  # Default signature<br>\n701         train_op = train_ops.train_op</p>\n<p>D:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\estimators\\estimator.py in _get_train_ops(self, features, labels)<br>\n1050       <code>ModelFnOps</code> object.<br>\n1051     \"\"\"<br>\n-&gt; 1052     return self._call_model_fn(features, labels, model_fn_lib.ModeKeys.TRAIN)<br>\n1053<br>\n1054   def _get_eval_ops(self, features, labels, metrics):</p>\n<p>D:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\estimators\\estimator.py in _call_model_fn(self, features, labels, mode)<br>\n1021         model_fn_results = self._model_fn(features, labels, mode=mode)<br>\n1022     else:<br>\n-&gt; 1023       model_fn_results = self._model_fn(features, labels)<br>\n1024<br>\n1025     if isinstance(model_fn_results, model_fn_lib.ModelFnOps):</p>\n<p>D:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\estimators\\random_forest.py in _model_fn(features, labels)<br>\n116       _assert_float32(labels)<br>\n117<br>\n--&gt; 118     graph_builder = graph_builder_class(params, device_assigner=device_assigner)<br>\n119     inference = {eval_metrics.INFERENCE_PROB_NAME:<br>\n120                  graph_builder.inference_graph(processed_features,</p>\n<p>D:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\tensor_forest\\python\\tensor_forest.py in <strong>init</strong>(self, params, device_assigner, variables, tree_variables_class, tree_graphs, training, t_ops, i_ops)<br>\n334             self.variables[i], self.params,<br>\n335             t_ops.Load(), i_ops.Load(), i)<br>\n--&gt; 336         for i in range(self.params.num_trees)]<br>\n337<br>\n338   def _bag_features(self, tree_num, input_data):</p>\n<p>D:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\tensor_forest\\python\\tensor_forest.py in (.0)<br>\n334             self.variables[i], self.params,<br>\n335             t_ops.Load(), i_ops.Load(), i)<br>\n--&gt; 336         for i in range(self.params.num_trees)]<br>\n337<br>\n338   def _bag_features(self, tree_num, input_data):</p>\n<p>D:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\tensor_forest\\python\\ops\\training_ops.py in Load()<br>\n54       ops_path = resource_loader.get_path_to_datafile(TRAINING_OPS_FILE)<br>\n55       logging.info('data path: %s', ops_path)<br>\n---&gt; 56       _training_ops = load_library.load_op_library(ops_path)<br>\n57<br>\n58       assert _training_ops, 'Could not load _training_ops.so'</p>\n<p>D:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\load_library.py in load_op_library(library_filename)<br>\n62       # pylint: disable=protected-access<br>\n63       raise errors_impl._make_specific_exception(<br>\n---&gt; 64           None, None, error_msg, error_code)<br>\n65       # pylint: enable=protected-access<br>\n66   finally:</p>\n<p>NotFoundError: D:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\tensor_forest\\python\\ops_training_ops.so not found**</p>", "body_text": "I already have conda installation in my Windows, I installed tensorflow using pip and it was working fine based on the testing the tensorflow installation.\nWhen I'm using TensorForestEstimator, I',m getting the following error\nlib\\site-packages\\tensorflow\\contrib\\tensor_forest\\python\\ops_training_ops.so not found\nComplete details\nhparams = tf.contrib.tensor_forest.python.tensor_forest.ForestHParams(\nnum_trees=2, max_nodes=1000, num_classes=2, num_features=9, model_dir='model/fit/')\nforest_classifier = tf.contrib.learn.TensorForestEstimator(hparams)\nWarning Messages:\nWARNING:tensorflow:Using temporary folder as model directory: C:\\Users\\username\\AppData\\Local\\Temp\\tmpu1vjyu11\nINFO:tensorflow:Using default config.\nINFO:tensorflow:Using config: {'tf_random_seed': None, 'keep_checkpoint_max': 5, '_cluster_spec': <tensorflow.python.training.server_lib.ClusterSpec object at 0x00000218062DCE10>, 'save_checkpoints_steps': None, 'save_checkpoints_secs': 600, '_task_id': 0, 'keep_checkpoint_every_n_hours': 10000, 'tf_config': gpu_options {\nper_process_gpu_memory_fraction: 1\n}\n, '_is_chief': True, '_num_ps_replicas': 0, '_master': '', '_environment': 'local', 'save_summary_steps': 100, '_task_type': None, '_evaluation_master': ''}\nforest_classifier.fit(x=training_data, y=Y_train, batch_size=10, steps=2000)\nWARNING:tensorflow:From D:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\estimators\\random_forest.py:237 in fit.: calling BaseEstimator.fit (from tensorflow.contrib.learn.python.learn.estimators.estimator) with x is deprecated and will be removed after 2016-12-01.\nInstructions for updating:\nEstimator is decoupled from Scikit Learn interface by moving into\nseparate class SKCompat. Arguments x, y and batch_size are only\navailable in the SKCompat class, Estimator will only accept input_fn.\nExample conversion:\nest = Estimator(...) -> est = SKCompat(Estimator(...))\nWARNING:tensorflow:From D:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\estimators\\random_forest.py:237 in fit.: calling BaseEstimator.fit (from tensorflow.contrib.learn.python.learn.estimators.estimator) with y is deprecated and will be removed after 2016-12-01.\nInstructions for updating:\nEstimator is decoupled from Scikit Learn interface by moving into\nseparate class SKCompat. Arguments x, y and batch_size are only\navailable in the SKCompat class, Estimator will only accept input_fn.\nExample conversion:\nest = Estimator(...) -> est = SKCompat(Estimator(...))\nWARNING:tensorflow:From D:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\estimators\\random_forest.py:237 in fit.: calling BaseEstimator.fit (from tensorflow.contrib.learn.python.learn.estimators.estimator) with batch_size is deprecated and will be removed after 2016-12-01.\nInstructions for updating:\nEstimator is decoupled from Scikit Learn interface by moving into\nseparate class SKCompat. Arguments x, y and batch_size are only\navailable in the SKCompat class, Estimator will only accept input_fn.\nExample conversion:\nest = Estimator(...) -> est = SKCompat(Estimator(...))\nINFO:tensorflow:Constructing forest with params =\nINFO:tensorflow:{'dominate_method': 'hoeffding', 'dominate_fraction': 0.99, 'bagged_num_features': 9, 'split_initializations_per_input': 1, 'num_trees': 2, 'base_random_seed': 0, 'valid_leaf_threshold': 1, 'bagged_features': None, 'min_split_samples': 5, 'bagging_fraction': 1.0, 'num_classes': 2, 'num_features': 9, 'feature_bagging_fraction': 1.0, 'num_splits_to_consider': 10, 'split_after_samples': 250, 'model_dir': 'model/fit/', 'num_outputs': 1, 'max_nodes': 1000, 'num_output_columns': 3, 'regression': False, 'max_fertile_nodes': 500}\nINFO:tensorflow:data path: D:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\tensor_forest\\python\\ops_training_ops.so\n**---------------------------------------------------------------------------\nNotFoundError                             Traceback (most recent call last)\n in ()\n----> 1 forest_classifier.fit(x=training_data, y=Y_train, batch_size=10, steps=200)\nD:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\estimators\\random_forest.py in fit(self, x, y, input_fn, steps, batch_size, monitors, max_steps)\n235     self._estimator.fit(input_fn=input_fn, x=x, y=y,\n236                         batch_size=batch_size, steps=steps, monitors=monitors,\n--> 237                         max_steps=max_steps)\n238\n239   @deprecated_arg_values(\nD:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\util\\deprecation.py in new_func(*args, **kwargs)\n189             _call_location(), decorator_utils.get_qualified_name(func),\n190             func.module, arg_name, date, instructions)\n--> 191       return func(*args, **kwargs)\n192     new_func.doc = _add_deprecated_arg_notice_to_docstring(\n193         func.doc, date, instructions)\nD:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\estimators\\estimator.py in fit(self, x, y, input_fn, steps, batch_size, monitors, max_steps)\n353                              steps=steps,\n354                              monitors=monitors,\n--> 355                              max_steps=max_steps)\n356     logging.info('Loss for final step: %s.', loss)\n357     return self\nD:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\estimators\\estimator.py in _train_model(self, input_fn, steps, feed_fn, init_op, init_feed_fn, init_fn, device_fn, monitors, log_every_steps, fail_on_nan_loss, max_steps)\n697       # cases, but will soon be deleted after the subclasses are updated.\n698       # TODO(b/32664904): Update subclasses and delete the else-statement.\n--> 699       train_ops = self._get_train_ops(features, labels)\n700       if isinstance(train_ops, model_fn_lib.ModelFnOps):  # Default signature\n701         train_op = train_ops.train_op\nD:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\estimators\\estimator.py in _get_train_ops(self, features, labels)\n1050       ModelFnOps object.\n1051     \"\"\"\n-> 1052     return self._call_model_fn(features, labels, model_fn_lib.ModeKeys.TRAIN)\n1053\n1054   def _get_eval_ops(self, features, labels, metrics):\nD:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\estimators\\estimator.py in _call_model_fn(self, features, labels, mode)\n1021         model_fn_results = self._model_fn(features, labels, mode=mode)\n1022     else:\n-> 1023       model_fn_results = self._model_fn(features, labels)\n1024\n1025     if isinstance(model_fn_results, model_fn_lib.ModelFnOps):\nD:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\estimators\\random_forest.py in _model_fn(features, labels)\n116       _assert_float32(labels)\n117\n--> 118     graph_builder = graph_builder_class(params, device_assigner=device_assigner)\n119     inference = {eval_metrics.INFERENCE_PROB_NAME:\n120                  graph_builder.inference_graph(processed_features,\nD:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\tensor_forest\\python\\tensor_forest.py in init(self, params, device_assigner, variables, tree_variables_class, tree_graphs, training, t_ops, i_ops)\n334             self.variables[i], self.params,\n335             t_ops.Load(), i_ops.Load(), i)\n--> 336         for i in range(self.params.num_trees)]\n337\n338   def _bag_features(self, tree_num, input_data):\nD:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\tensor_forest\\python\\tensor_forest.py in (.0)\n334             self.variables[i], self.params,\n335             t_ops.Load(), i_ops.Load(), i)\n--> 336         for i in range(self.params.num_trees)]\n337\n338   def _bag_features(self, tree_num, input_data):\nD:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\tensor_forest\\python\\ops\\training_ops.py in Load()\n54       ops_path = resource_loader.get_path_to_datafile(TRAINING_OPS_FILE)\n55       logging.info('data path: %s', ops_path)\n---> 56       _training_ops = load_library.load_op_library(ops_path)\n57\n58       assert _training_ops, 'Could not load _training_ops.so'\nD:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\load_library.py in load_op_library(library_filename)\n62       # pylint: disable=protected-access\n63       raise errors_impl._make_specific_exception(\n---> 64           None, None, error_msg, error_code)\n65       # pylint: enable=protected-access\n66   finally:\nNotFoundError: D:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\tensor_forest\\python\\ops_training_ops.so not found**", "body": "I already have conda installation in my Windows, I installed tensorflow using pip and it was working fine based on the testing the [tensorflow installation](https://www.tensorflow.org/get_started/os_setup#test_the_tensorflow_installation).\r\n\r\nWhen I'm using TensorForestEstimator, I',m getting the following error\r\n**lib\\site-packages\\tensorflow\\contrib\\tensor_forest\\python\\ops\\_training_ops.so not found**\r\n\r\nComplete details\r\n\r\n**hparams = tf.contrib.tensor_forest.python.tensor_forest.ForestHParams(\r\n        num_trees=2, max_nodes=1000, num_classes=2, num_features=9, model_dir='model/fit/')**\r\n\r\n**forest_classifier = tf.contrib.learn.TensorForestEstimator(hparams)**\r\n\r\nWarning Messages:\r\n\r\nWARNING:tensorflow:Using temporary folder as model directory: C:\\Users\\username\\AppData\\Local\\Temp\\tmpu1vjyu11\r\nINFO:tensorflow:Using default config.\r\nINFO:tensorflow:Using config: {'tf_random_seed': None, 'keep_checkpoint_max': 5, '_cluster_spec': <tensorflow.python.training.server_lib.ClusterSpec object at 0x00000218062DCE10>, 'save_checkpoints_steps': None, 'save_checkpoints_secs': 600, '_task_id': 0, 'keep_checkpoint_every_n_hours': 10000, 'tf_config': gpu_options {\r\n  per_process_gpu_memory_fraction: 1\r\n}\r\n, '_is_chief': True, '_num_ps_replicas': 0, '_master': '', '_environment': 'local', 'save_summary_steps': 100, '_task_type': None, '_evaluation_master': ''}\r\n\r\n**forest_classifier.fit(x=training_data, y=Y_train, batch_size=10, steps=2000)**\r\n\r\nWARNING:tensorflow:From D:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\estimators\\random_forest.py:237 in fit.: calling BaseEstimator.fit (from tensorflow.contrib.learn.python.learn.estimators.estimator) with x is deprecated and will be removed after 2016-12-01.\r\nInstructions for updating:\r\nEstimator is decoupled from Scikit Learn interface by moving into\r\nseparate class SKCompat. Arguments x, y and batch_size are only\r\navailable in the SKCompat class, Estimator will only accept input_fn.\r\nExample conversion:\r\n  est = Estimator(...) -> est = SKCompat(Estimator(...))\r\nWARNING:tensorflow:From D:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\estimators\\random_forest.py:237 in fit.: calling BaseEstimator.fit (from tensorflow.contrib.learn.python.learn.estimators.estimator) with y is deprecated and will be removed after 2016-12-01.\r\nInstructions for updating:\r\nEstimator is decoupled from Scikit Learn interface by moving into\r\nseparate class SKCompat. Arguments x, y and batch_size are only\r\navailable in the SKCompat class, Estimator will only accept input_fn.\r\nExample conversion:\r\n  est = Estimator(...) -> est = SKCompat(Estimator(...))\r\nWARNING:tensorflow:From D:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\estimators\\random_forest.py:237 in fit.: calling BaseEstimator.fit (from tensorflow.contrib.learn.python.learn.estimators.estimator) with batch_size is deprecated and will be removed after 2016-12-01.\r\nInstructions for updating:\r\nEstimator is decoupled from Scikit Learn interface by moving into\r\nseparate class SKCompat. Arguments x, y and batch_size are only\r\navailable in the SKCompat class, Estimator will only accept input_fn.\r\nExample conversion:\r\n  est = Estimator(...) -> est = SKCompat(Estimator(...))\r\nINFO:tensorflow:Constructing forest with params = \r\nINFO:tensorflow:{'dominate_method': 'hoeffding', 'dominate_fraction': 0.99, 'bagged_num_features': 9, 'split_initializations_per_input': 1, 'num_trees': 2, 'base_random_seed': 0, 'valid_leaf_threshold': 1, 'bagged_features': None, 'min_split_samples': 5, 'bagging_fraction': 1.0, 'num_classes': 2, 'num_features': 9, 'feature_bagging_fraction': 1.0, 'num_splits_to_consider': 10, 'split_after_samples': 250, 'model_dir': 'model/fit/', 'num_outputs': 1, 'max_nodes': 1000, 'num_output_columns': 3, 'regression': False, 'max_fertile_nodes': 500}\r\nINFO:tensorflow:data path: D:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\tensor_forest\\python\\ops\\_training_ops.so\r\n\r\n\r\n**---------------------------------------------------------------------------\r\nNotFoundError                             Traceback (most recent call last)\r\n<ipython-input-23-095850e88d53> in <module>()\r\n----> 1 forest_classifier.fit(x=training_data, y=Y_train, batch_size=10, steps=200)\r\n\r\nD:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\estimators\\random_forest.py in fit(self, x, y, input_fn, steps, batch_size, monitors, max_steps)\r\n    235     self._estimator.fit(input_fn=input_fn, x=x, y=y,\r\n    236                         batch_size=batch_size, steps=steps, monitors=monitors,\r\n--> 237                         max_steps=max_steps)\r\n    238 \r\n    239   @deprecated_arg_values(\r\n\r\nD:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\util\\deprecation.py in new_func(*args, **kwargs)\r\n    189             _call_location(), decorator_utils.get_qualified_name(func),\r\n    190             func.__module__, arg_name, date, instructions)\r\n--> 191       return func(*args, **kwargs)\r\n    192     new_func.__doc__ = _add_deprecated_arg_notice_to_docstring(\r\n    193         func.__doc__, date, instructions)\r\n\r\nD:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\estimators\\estimator.py in fit(self, x, y, input_fn, steps, batch_size, monitors, max_steps)\r\n    353                              steps=steps,\r\n    354                              monitors=monitors,\r\n--> 355                              max_steps=max_steps)\r\n    356     logging.info('Loss for final step: %s.', loss)\r\n    357     return self\r\n\r\nD:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\estimators\\estimator.py in _train_model(self, input_fn, steps, feed_fn, init_op, init_feed_fn, init_fn, device_fn, monitors, log_every_steps, fail_on_nan_loss, max_steps)\r\n    697       # cases, but will soon be deleted after the subclasses are updated.\r\n    698       # TODO(b/32664904): Update subclasses and delete the else-statement.\r\n--> 699       train_ops = self._get_train_ops(features, labels)\r\n    700       if isinstance(train_ops, model_fn_lib.ModelFnOps):  # Default signature\r\n    701         train_op = train_ops.train_op\r\n\r\nD:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\estimators\\estimator.py in _get_train_ops(self, features, labels)\r\n   1050       `ModelFnOps` object.\r\n   1051     \"\"\"\r\n-> 1052     return self._call_model_fn(features, labels, model_fn_lib.ModeKeys.TRAIN)\r\n   1053 \r\n   1054   def _get_eval_ops(self, features, labels, metrics):\r\n\r\nD:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\estimators\\estimator.py in _call_model_fn(self, features, labels, mode)\r\n   1021         model_fn_results = self._model_fn(features, labels, mode=mode)\r\n   1022     else:\r\n-> 1023       model_fn_results = self._model_fn(features, labels)\r\n   1024 \r\n   1025     if isinstance(model_fn_results, model_fn_lib.ModelFnOps):\r\n\r\nD:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\learn\\python\\learn\\estimators\\random_forest.py in _model_fn(features, labels)\r\n    116       _assert_float32(labels)\r\n    117 \r\n--> 118     graph_builder = graph_builder_class(params, device_assigner=device_assigner)\r\n    119     inference = {eval_metrics.INFERENCE_PROB_NAME:\r\n    120                  graph_builder.inference_graph(processed_features,\r\n\r\nD:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\tensor_forest\\python\\tensor_forest.py in __init__(self, params, device_assigner, variables, tree_variables_class, tree_graphs, training, t_ops, i_ops)\r\n    334             self.variables[i], self.params,\r\n    335             t_ops.Load(), i_ops.Load(), i)\r\n--> 336         for i in range(self.params.num_trees)]\r\n    337 \r\n    338   def _bag_features(self, tree_num, input_data):\r\n\r\nD:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\tensor_forest\\python\\tensor_forest.py in <listcomp>(.0)\r\n    334             self.variables[i], self.params,\r\n    335             t_ops.Load(), i_ops.Load(), i)\r\n--> 336         for i in range(self.params.num_trees)]\r\n    337 \r\n    338   def _bag_features(self, tree_num, input_data):\r\n\r\nD:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\tensor_forest\\python\\ops\\training_ops.py in Load()\r\n     54       ops_path = resource_loader.get_path_to_datafile(TRAINING_OPS_FILE)\r\n     55       logging.info('data path: %s', ops_path)\r\n---> 56       _training_ops = load_library.load_op_library(ops_path)\r\n     57 \r\n     58       assert _training_ops, 'Could not load _training_ops.so'\r\n\r\nD:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\load_library.py in load_op_library(library_filename)\r\n     62       # pylint: disable=protected-access\r\n     63       raise errors_impl._make_specific_exception(\r\n---> 64           None, None, error_msg, error_code)\r\n     65       # pylint: enable=protected-access\r\n     66   finally:\r\n\r\nNotFoundError: D:\\Program Files\\Anaconda3\\lib\\site-packages\\tensorflow\\contrib\\tensor_forest\\python\\ops\\_training_ops.so not found**\r\n\r\n\r\n\r\n\r\n"}