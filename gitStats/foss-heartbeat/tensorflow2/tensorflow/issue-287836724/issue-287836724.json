{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16044", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16044/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16044/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16044/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16044", "id": 287836724, "node_id": "MDU6SXNzdWUyODc4MzY3MjQ=", "number": 16044, "title": "Feature Request: tf.multi_one_hot that is one-hot encoding multiple columns of a Tensor", "user": {"login": "squall-1002", "id": 19616286, "node_id": "MDQ6VXNlcjE5NjE2Mjg2", "avatar_url": "https://avatars1.githubusercontent.com/u/19616286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/squall-1002", "html_url": "https://github.com/squall-1002", "followers_url": "https://api.github.com/users/squall-1002/followers", "following_url": "https://api.github.com/users/squall-1002/following{/other_user}", "gists_url": "https://api.github.com/users/squall-1002/gists{/gist_id}", "starred_url": "https://api.github.com/users/squall-1002/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/squall-1002/subscriptions", "organizations_url": "https://api.github.com/users/squall-1002/orgs", "repos_url": "https://api.github.com/users/squall-1002/repos", "events_url": "https://api.github.com/users/squall-1002/events{/privacy}", "received_events_url": "https://api.github.com/users/squall-1002/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-01-11T16:12:08Z", "updated_at": "2018-10-09T21:55:28Z", "closed_at": "2018-05-01T15:58:02Z", "author_association": "NONE", "body_html": "<p>Hi there,</p>\n<p>I just wrote a function that creates multiple one-hot-encodings for a tensor and concatenates them. I was curious whether this might serve some others and contribute this feature.</p>\n<pre><code>def multiple_one_hot(cat_tensor, depth_list):\n    \"\"\"Creates one-hot-encodings for multiple categorical attributes and\n    concatenates the resulting encodings\n\n    Args:\n        cat_tensor (tf.Tensor): tensor with mutiple columns containing categorical features\n        depth_list (list): list of the no. of values (depth) for each categorical\n\n    Returns:\n        one_hot_enc_tensor (tf.Tensor): concatenated one-hot-encodings of cat_tensor\n    \"\"\"\n    one_hot_enc_tensor = tf.one_hot(cat_int_tensor[:,0], depth_list[0], axis=1)\n    for col in range(1, len(depth_list)):\n        add = tf.one_hot(cat_int_tensor[:,col], depth_list[col], axis=1)\n        one_hot_enc_tensor = tf.concat([one_hot_enc_tensor, add], axis=1)\n\n    return one_hot_enc_tensor\n\n</code></pre>\n<p>I am happy for your feedback. Tell me if you think others might profit and I would enjoy to create a pull request ;)</p>", "body_text": "Hi there,\nI just wrote a function that creates multiple one-hot-encodings for a tensor and concatenates them. I was curious whether this might serve some others and contribute this feature.\ndef multiple_one_hot(cat_tensor, depth_list):\n    \"\"\"Creates one-hot-encodings for multiple categorical attributes and\n    concatenates the resulting encodings\n\n    Args:\n        cat_tensor (tf.Tensor): tensor with mutiple columns containing categorical features\n        depth_list (list): list of the no. of values (depth) for each categorical\n\n    Returns:\n        one_hot_enc_tensor (tf.Tensor): concatenated one-hot-encodings of cat_tensor\n    \"\"\"\n    one_hot_enc_tensor = tf.one_hot(cat_int_tensor[:,0], depth_list[0], axis=1)\n    for col in range(1, len(depth_list)):\n        add = tf.one_hot(cat_int_tensor[:,col], depth_list[col], axis=1)\n        one_hot_enc_tensor = tf.concat([one_hot_enc_tensor, add], axis=1)\n\n    return one_hot_enc_tensor\n\n\nI am happy for your feedback. Tell me if you think others might profit and I would enjoy to create a pull request ;)", "body": "Hi there,\r\n\r\nI just wrote a function that creates multiple one-hot-encodings for a tensor and concatenates them. I was curious whether this might serve some others and contribute this feature.\r\n\r\n\r\n```\r\ndef multiple_one_hot(cat_tensor, depth_list):\r\n    \"\"\"Creates one-hot-encodings for multiple categorical attributes and\r\n    concatenates the resulting encodings\r\n\r\n    Args:\r\n        cat_tensor (tf.Tensor): tensor with mutiple columns containing categorical features\r\n        depth_list (list): list of the no. of values (depth) for each categorical\r\n\r\n    Returns:\r\n        one_hot_enc_tensor (tf.Tensor): concatenated one-hot-encodings of cat_tensor\r\n    \"\"\"\r\n    one_hot_enc_tensor = tf.one_hot(cat_int_tensor[:,0], depth_list[0], axis=1)\r\n    for col in range(1, len(depth_list)):\r\n        add = tf.one_hot(cat_int_tensor[:,col], depth_list[col], axis=1)\r\n        one_hot_enc_tensor = tf.concat([one_hot_enc_tensor, add], axis=1)\r\n\r\n    return one_hot_enc_tensor\r\n\r\n```\r\nI am happy for your feedback. Tell me if you think others might profit and I would enjoy to create a pull request ;)"}