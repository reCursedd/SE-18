{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/243923439", "html_url": "https://github.com/tensorflow/tensorflow/issues/4132#issuecomment-243923439", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4132", "id": 243923439, "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzkyMzQzOQ==", "user": {"login": "poxvoculi", "id": 15676913, "node_id": "MDQ6VXNlcjE1Njc2OTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/15676913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poxvoculi", "html_url": "https://github.com/poxvoculi", "followers_url": "https://api.github.com/users/poxvoculi/followers", "following_url": "https://api.github.com/users/poxvoculi/following{/other_user}", "gists_url": "https://api.github.com/users/poxvoculi/gists{/gist_id}", "starred_url": "https://api.github.com/users/poxvoculi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poxvoculi/subscriptions", "organizations_url": "https://api.github.com/users/poxvoculi/orgs", "repos_url": "https://api.github.com/users/poxvoculi/repos", "events_url": "https://api.github.com/users/poxvoculi/events{/privacy}", "received_events_url": "https://api.github.com/users/poxvoculi/received_events", "type": "User", "site_admin": false}, "created_at": "2016-08-31T22:34:26Z", "updated_at": "2016-08-31T22:34:26Z", "author_association": "MEMBER", "body_html": "<p>I tried your simple example and got a plot that doesn't show the trend reversal to the same degree, only a very slight one.</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://cloud.githubusercontent.com/assets/15676913/18148411/58d8f0f2-6f8e-11e6-98ed-a996ae3f4e2d.png\"><img src=\"https://cloud.githubusercontent.com/assets/15676913/18148411/58d8f0f2-6f8e-11e6-98ed-a996ae3f4e2d.png\" alt=\"screenshot from 2016-08-31 15 19 22\" style=\"max-width:100%;\"></a></p>\n<p>I ran on a Google server which likely explains the difference from your results.</p>\n<p>It's not surprising that there would be some kind of U-shaped curve in this experiment. Intuitively, it seems that amortized per-element computation costs should decrease as the batch size increases, but that trend can't continue forever.  Eventually you'll exceed some limit that poses increased costs, likely related to memory or thread management.   So, in practice the ideal batch size will be &lt; infinity, and you'll need to tune for it.</p>", "body_text": "I tried your simple example and got a plot that doesn't show the trend reversal to the same degree, only a very slight one.\n\nI ran on a Google server which likely explains the difference from your results.\nIt's not surprising that there would be some kind of U-shaped curve in this experiment. Intuitively, it seems that amortized per-element computation costs should decrease as the batch size increases, but that trend can't continue forever.  Eventually you'll exceed some limit that poses increased costs, likely related to memory or thread management.   So, in practice the ideal batch size will be < infinity, and you'll need to tune for it.", "body": "I tried your simple example and got a plot that doesn't show the trend reversal to the same degree, only a very slight one.\n\n![screenshot from 2016-08-31 15 19 22](https://cloud.githubusercontent.com/assets/15676913/18148411/58d8f0f2-6f8e-11e6-98ed-a996ae3f4e2d.png)\n\nI ran on a Google server which likely explains the difference from your results.\n\nIt's not surprising that there would be some kind of U-shaped curve in this experiment. Intuitively, it seems that amortized per-element computation costs should decrease as the batch size increases, but that trend can't continue forever.  Eventually you'll exceed some limit that poses increased costs, likely related to memory or thread management.   So, in practice the ideal batch size will be < infinity, and you'll need to tune for it. \n"}