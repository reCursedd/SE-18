{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/363809191", "html_url": "https://github.com/tensorflow/tensorflow/issues/13310#issuecomment-363809191", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13310", "id": 363809191, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzgwOTE5MQ==", "user": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-07T15:41:58Z", "updated_at": "2018-02-07T15:41:58Z", "author_association": "CONTRIBUTOR", "body_html": "<p>(we do have someone at google who proposed the exact same thing, but work has stalled).  fwiw; <code>scatter_nd</code>, <code>gather_nd</code> and their ilk already support this behavior so what you're talking about is just a less restrictive <code>SparseTensor</code> wrapper.</p>", "body_text": "(we do have someone at google who proposed the exact same thing, but work has stalled).  fwiw; scatter_nd, gather_nd and their ilk already support this behavior so what you're talking about is just a less restrictive SparseTensor wrapper.", "body": "(we do have someone at google who proposed the exact same thing, but work has stalled).  fwiw; `scatter_nd`, `gather_nd` and their ilk already support this behavior so what you're talking about is just a less restrictive `SparseTensor` wrapper."}