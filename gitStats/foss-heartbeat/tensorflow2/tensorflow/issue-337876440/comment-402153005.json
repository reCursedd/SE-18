{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/402153005", "html_url": "https://github.com/tensorflow/tensorflow/issues/20516#issuecomment-402153005", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20516", "id": 402153005, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjE1MzAwNQ==", "user": {"login": "sleighsoft", "id": 9438971, "node_id": "MDQ6VXNlcjk0Mzg5NzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/9438971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sleighsoft", "html_url": "https://github.com/sleighsoft", "followers_url": "https://api.github.com/users/sleighsoft/followers", "following_url": "https://api.github.com/users/sleighsoft/following{/other_user}", "gists_url": "https://api.github.com/users/sleighsoft/gists{/gist_id}", "starred_url": "https://api.github.com/users/sleighsoft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sleighsoft/subscriptions", "organizations_url": "https://api.github.com/users/sleighsoft/orgs", "repos_url": "https://api.github.com/users/sleighsoft/repos", "events_url": "https://api.github.com/users/sleighsoft/events{/privacy}", "received_events_url": "https://api.github.com/users/sleighsoft/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-03T13:15:10Z", "updated_at": "2018-07-03T13:19:29Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I found the culprit. Double assigning a variable. Here <code>BasicLSTMCell</code>.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">from</span> tensorflow.python.training.checkpointable <span class=\"pl-k\">import</span> base <span class=\"pl-k\">as</span> checkpointable\n<span class=\"pl-k\">from</span> tensorflow.python.training.checkpointable <span class=\"pl-k\">import</span> util\n\n<span class=\"pl-k\">class</span> <span class=\"pl-en\">Model</span>(<span class=\"pl-e\">checkpointable</span>.<span class=\"pl-e\">Checkpointable</span>):\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-c1\">__init__</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>):\n    <span class=\"pl-c1\">self</span>.cell <span class=\"pl-k\">=</span> tf.nn.rnn_cell.BasicLSTMCell(<span class=\"pl-c1\">4</span>)\n    <span class=\"pl-c1\">self</span>.cell <span class=\"pl-k\">=</span> tf.nn.rnn_cell.BasicLSTMCell(<span class=\"pl-c1\">4</span>)\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> self.cell = tf.nn.rnn_cell.BasicLSTMCell(4)</span>\n    out <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>.cell(tf.constant([[<span class=\"pl-c1\">1</span>.]]), <span class=\"pl-c1\">self</span>.cell.zero_state(<span class=\"pl-c1\">1</span>, tf.float32))\n    <span class=\"pl-c1\">self</span>.optimizer <span class=\"pl-k\">=</span> tf.train.AdamOptimizer()\n    <span class=\"pl-c1\">self</span>.optimizer.minimize(tf.reduce_sum(out[<span class=\"pl-c1\">0</span>]))\n    <span class=\"pl-c1\">self</span>.session <span class=\"pl-k\">=</span> tf.Session()\n    <span class=\"pl-c1\">self</span>.checkpoint <span class=\"pl-k\">=</span> tf.train.Checkpoint(<span class=\"pl-v\">model</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">self</span>)\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">init</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>):\n    <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Init<span class=\"pl-pds\">'</span></span>)\n    <span class=\"pl-c1\">self</span>.session.run(tf.global_variables_initializer())\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">save</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>):\n    <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Save<span class=\"pl-pds\">'</span></span>)\n    <span class=\"pl-c1\">self</span>.checkpoint.save(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>./tmp/<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">self</span>.session)\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">restore</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>):\n    <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Restore<span class=\"pl-pds\">'</span></span>)\n    latest <span class=\"pl-k\">=</span> tf.train.latest_checkpoint(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>./tmp/<span class=\"pl-pds\">'</span></span>)\n    load_status <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>.checkpoint.restore(latest)\n    <span class=\"pl-c1\">print</span>(util._serialize_object_graph(<span class=\"pl-c1\">self</span>.checkpoint, <span class=\"pl-c1\">None</span>))\n    load_status.assert_consumed().run_restore_ops(<span class=\"pl-c1\">self</span>.session)\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-c1\">print</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>):\n    <span class=\"pl-c1\">print</span>(<span class=\"pl-c1\">self</span>.session.run(<span class=\"pl-c1\">self</span>.cell._kernel))\n\n\nm <span class=\"pl-k\">=</span> Model()\nm.init()\nm.print()\nm.save()\nm.restore()\nm.print()</pre></div>", "body_text": "I found the culprit. Double assigning a variable. Here BasicLSTMCell.\nimport tensorflow as tf\nfrom tensorflow.python.training.checkpointable import base as checkpointable\nfrom tensorflow.python.training.checkpointable import util\n\nclass Model(checkpointable.Checkpointable):\n\n  def __init__(self):\n    self.cell = tf.nn.rnn_cell.BasicLSTMCell(4)\n    self.cell = tf.nn.rnn_cell.BasicLSTMCell(4)\n    # self.cell = tf.nn.rnn_cell.BasicLSTMCell(4)\n    out = self.cell(tf.constant([[1.]]), self.cell.zero_state(1, tf.float32))\n    self.optimizer = tf.train.AdamOptimizer()\n    self.optimizer.minimize(tf.reduce_sum(out[0]))\n    self.session = tf.Session()\n    self.checkpoint = tf.train.Checkpoint(model=self)\n\n  def init(self):\n    print('Init')\n    self.session.run(tf.global_variables_initializer())\n\n  def save(self):\n    print('Save')\n    self.checkpoint.save('./tmp/', self.session)\n\n  def restore(self):\n    print('Restore')\n    latest = tf.train.latest_checkpoint('./tmp/')\n    load_status = self.checkpoint.restore(latest)\n    print(util._serialize_object_graph(self.checkpoint, None))\n    load_status.assert_consumed().run_restore_ops(self.session)\n\n  def print(self):\n    print(self.session.run(self.cell._kernel))\n\n\nm = Model()\nm.init()\nm.print()\nm.save()\nm.restore()\nm.print()", "body": "I found the culprit. Double assigning a variable. Here `BasicLSTMCell`.\r\n```python\r\nimport tensorflow as tf\r\nfrom tensorflow.python.training.checkpointable import base as checkpointable\r\nfrom tensorflow.python.training.checkpointable import util\r\n\r\nclass Model(checkpointable.Checkpointable):\r\n\r\n  def __init__(self):\r\n    self.cell = tf.nn.rnn_cell.BasicLSTMCell(4)\r\n    self.cell = tf.nn.rnn_cell.BasicLSTMCell(4)\r\n    # self.cell = tf.nn.rnn_cell.BasicLSTMCell(4)\r\n    out = self.cell(tf.constant([[1.]]), self.cell.zero_state(1, tf.float32))\r\n    self.optimizer = tf.train.AdamOptimizer()\r\n    self.optimizer.minimize(tf.reduce_sum(out[0]))\r\n    self.session = tf.Session()\r\n    self.checkpoint = tf.train.Checkpoint(model=self)\r\n\r\n  def init(self):\r\n    print('Init')\r\n    self.session.run(tf.global_variables_initializer())\r\n\r\n  def save(self):\r\n    print('Save')\r\n    self.checkpoint.save('./tmp/', self.session)\r\n\r\n  def restore(self):\r\n    print('Restore')\r\n    latest = tf.train.latest_checkpoint('./tmp/')\r\n    load_status = self.checkpoint.restore(latest)\r\n    print(util._serialize_object_graph(self.checkpoint, None))\r\n    load_status.assert_consumed().run_restore_ops(self.session)\r\n\r\n  def print(self):\r\n    print(self.session.run(self.cell._kernel))\r\n\r\n\r\nm = Model()\r\nm.init()\r\nm.print()\r\nm.save()\r\nm.restore()\r\nm.print()\r\n```"}