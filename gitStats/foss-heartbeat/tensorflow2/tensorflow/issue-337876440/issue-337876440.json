{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20516", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20516/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20516/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20516/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20516", "id": 337876440, "node_id": "MDU6SXNzdWUzMzc4NzY0NDA=", "number": 20516, "title": "Cannot restore variables with Checkpoint because keys do not align", "user": {"login": "sleighsoft", "id": 9438971, "node_id": "MDQ6VXNlcjk0Mzg5NzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/9438971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sleighsoft", "html_url": "https://github.com/sleighsoft", "followers_url": "https://api.github.com/users/sleighsoft/followers", "following_url": "https://api.github.com/users/sleighsoft/following{/other_user}", "gists_url": "https://api.github.com/users/sleighsoft/gists{/gist_id}", "starred_url": "https://api.github.com/users/sleighsoft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sleighsoft/subscriptions", "organizations_url": "https://api.github.com/users/sleighsoft/orgs", "repos_url": "https://api.github.com/users/sleighsoft/repos", "events_url": "https://api.github.com/users/sleighsoft/events{/privacy}", "received_events_url": "https://api.github.com/users/sleighsoft/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-07-03T12:25:05Z", "updated_at": "2018-07-04T00:48:49Z", "closed_at": "2018-07-04T00:45:37Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Win10</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: tf-nightly==1.10.0.dev20180609</li>\n<li><strong>Python version</strong>: 3.6.5</li>\n<li><strong>Bazel version (if compiling from source)</strong>: -</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: -</li>\n<li><strong>CUDA/cuDNN version</strong>: -</li>\n<li><strong>GPU model and memory</strong>: -</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<p>I get the error that is thrown here:<br>\n<a href=\"https://github.com/tensorflow/tensorflow/blob/r1.9/tensorflow/python/training/checkpointable/util.py#L633\">https://github.com/tensorflow/tensorflow/blob/r1.9/tensorflow/python/training/checkpointable/util.py#L633</a></p>\n<p>I cannot provide code to reproduce it. But basically what happens is I have a class that inherits from <code>Checkpointable</code>. It assigns all variables to itself to make them checkpointable. It also assigns an optimizer to itself. I then save the model and restore it. When calling <code>.assert_consumed()</code> on the <code>load_status</code> object of <code>restore(dir, session)</code> it throws an error because some key does not match. The variable it tries to restore is actually in the saved checkpoint it just has a different key then the one it gets from <code>enumerate(self._checkpoint.object_graph_proto.nodes)</code>.</p>\n<p>This describes it as good as I can. Sorry for not being able to share the code. I tried to reproduce it but so far I cannot. I believe it is a bug, because I call <code>ckpt.save()</code> and immediately after it <code>ckpt.restore()</code> and I get the exception.</p>\n<p>Output of <code>self._checkpoint.object_by_proto_id.keys()</code> at line 631.<br>\nYou can see that some keys are missing (idk why) but theses are the ones I need to restore.</p>\n<pre><code>[0, 1, 2, 3, 4, 5, 6, 7, 14, 19, 10, 17, 22, 11, 18, 23, 12, 13]\n</code></pre>\n<p>Output of <code>util._serialize_object_graph(self.checkpoint, None)</code> after <code>restore</code> before <code>assert_consumed</code></p>\n<div class=\"highlight highlight-source-json\"><pre>nodes {\n  <span class=\"pl-ii\">children</span> <span class=\"pl-ii\">{</span>\n    <span class=\"pl-ii\">node_id</span>: <span class=\"pl-c1\">1</span>\n    <span class=\"pl-ii\">local_name:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>model<span class=\"pl-pds\">\"</span></span>\n  }\n  children {\n    <span class=\"pl-ii\">node_id</span>: <span class=\"pl-c1\">2</span>\n    <span class=\"pl-ii\">local_name:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>save_counter<span class=\"pl-pds\">\"</span></span>\n  }\n}\nnodes {\n  <span class=\"pl-ii\">children</span> <span class=\"pl-ii\">{</span>\n    <span class=\"pl-ii\">node_id</span>: <span class=\"pl-c1\">3</span>\n    <span class=\"pl-ii\">local_name:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>_global_step_pretrain<span class=\"pl-pds\">\"</span></span>\n  }\n  children {\n    <span class=\"pl-ii\">node_id</span>: <span class=\"pl-c1\">4</span>\n    <span class=\"pl-ii\">local_name:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>embedding<span class=\"pl-pds\">\"</span></span>\n  }\n  children {\n    <span class=\"pl-ii\">node_id</span>: <span class=\"pl-c1\">5</span>\n    <span class=\"pl-ii\">local_name:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cell<span class=\"pl-pds\">\"</span></span>\n  }\n  children {\n    <span class=\"pl-ii\">node_id</span>: <span class=\"pl-c1\">6</span>\n    <span class=\"pl-ii\">local_name:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>dense<span class=\"pl-pds\">\"</span></span>\n  }\n  children {\n    <span class=\"pl-ii\">node_id</span>: <span class=\"pl-c1\">7</span>\n    <span class=\"pl-ii\">local_name:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>_optimizer<span class=\"pl-pds\">\"</span></span>\n  }\n  children {\n    <span class=\"pl-ii\">local_name</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>_checkpoint<span class=\"pl-pds\">\"</span></span>\n  }\n}\nnodes {\n  <span class=\"pl-ii\">attributes</span> <span class=\"pl-ii\">{</span>\n    <span class=\"pl-ii\">name</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>VARIABLE_VALUE<span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-ii\">full_name:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>initialize_or_restore/save_counter<span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-ii\">checkpoint_key:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>save_counter/.ATTRIBUTES/VARIABLE_VALUE<span class=\"pl-pds\">\"</span></span>\n  }\n}\nnodes {\n  <span class=\"pl-ii\">attributes</span> <span class=\"pl-ii\">{</span>\n    <span class=\"pl-ii\">name</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>VARIABLE_VALUE<span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-ii\">full_name:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ConditionedLSTMGenerator2/CONDITIONED_LSTM/pretrain/global_step<span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-ii\">checkpoint_key:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>model/_global_step_pretrain/.ATTRIBUTES/VARIABLE_VALUE<span class=\"pl-pds\">\"</span></span>\n  }\n}\nnodes {\n  <span class=\"pl-ii\">attributes</span> <span class=\"pl-ii\">{</span>\n    <span class=\"pl-ii\">name</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>VARIABLE_VALUE<span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-ii\">full_name:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ConditionedLSTMGenerator2/CONDITIONED_LSTM/embedding<span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-ii\">checkpoint_key:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>model/embedding/.ATTRIBUTES/VARIABLE_VALUE<span class=\"pl-pds\">\"</span></span>\n  }\n}\nnodes {\n  <span class=\"pl-ii\">children</span> <span class=\"pl-ii\">{</span>\n    <span class=\"pl-ii\">node_id</span>: <span class=\"pl-c1\">8</span>\n    <span class=\"pl-ii\">local_name:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>kernel<span class=\"pl-pds\">\"</span></span>\n  }\n  children {\n    <span class=\"pl-ii\">node_id</span>: <span class=\"pl-c1\">9</span>\n    <span class=\"pl-ii\">local_name:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>bias<span class=\"pl-pds\">\"</span></span>\n  }\n  attributes {\n    <span class=\"pl-ii\">name</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>OBJECT_CONFIG_JSON<span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-ii\">checkpoint_key:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>model/cell/.ATTRIBUTES/OBJECT_CONFIG_JSON<span class=\"pl-pds\">\"</span></span>\n  }\n}\nnodes {\n  <span class=\"pl-ii\">children</span> <span class=\"pl-ii\">{</span>\n    <span class=\"pl-ii\">node_id</span>: <span class=\"pl-c1\">10</span>\n    <span class=\"pl-ii\">local_name:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>kernel<span class=\"pl-pds\">\"</span></span>\n  }\n  children {\n    <span class=\"pl-ii\">node_id</span>: <span class=\"pl-c1\">11</span>\n    <span class=\"pl-ii\">local_name:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>bias<span class=\"pl-pds\">\"</span></span>\n  }\n  attributes {\n    <span class=\"pl-ii\">name</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>OBJECT_CONFIG_JSON<span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-ii\">checkpoint_key:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>model/dense/.ATTRIBUTES/OBJECT_CONFIG_JSON<span class=\"pl-pds\">\"</span></span>\n  }\n}\nnodes {\n  <span class=\"pl-ii\">children</span> <span class=\"pl-ii\">{</span>\n    <span class=\"pl-ii\">node_id</span>: <span class=\"pl-c1\">12</span>\n    <span class=\"pl-ii\">local_name:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>beta1_power<span class=\"pl-pds\">\"</span></span>\n  }\n  children {\n    <span class=\"pl-ii\">node_id</span>: <span class=\"pl-c1\">13</span>\n    <span class=\"pl-ii\">local_name:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>beta2_power<span class=\"pl-pds\">\"</span></span>\n  }\n  slot_variables {\n    <span class=\"pl-ii\">original_variable_node_id</span>: <span class=\"pl-c1\">4</span>\n    <span class=\"pl-ii\">slot_name:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>m<span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-ii\">slot_variable_node_id:</span> <span class=\"pl-c1\">14</span>\n  }\n  slot_variables {\n    <span class=\"pl-ii\">original_variable_node_id</span>: <span class=\"pl-c1\">8</span>\n    <span class=\"pl-ii\">slot_name:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>m<span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-ii\">slot_variable_node_id:</span> <span class=\"pl-c1\">15</span>\n  }\n  slot_variables {\n    <span class=\"pl-ii\">original_variable_node_id</span>: <span class=\"pl-c1\">9</span>\n    <span class=\"pl-ii\">slot_name:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>m<span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-ii\">slot_variable_node_id:</span> <span class=\"pl-c1\">16</span>\n  }\n  slot_variables {\n    <span class=\"pl-ii\">original_variable_node_id</span>: <span class=\"pl-c1\">10</span>\n    <span class=\"pl-ii\">slot_name:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>m<span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-ii\">slot_variable_node_id:</span> <span class=\"pl-c1\">17</span>\n  }\n  slot_variables {\n    <span class=\"pl-ii\">original_variable_node_id</span>: <span class=\"pl-c1\">11</span>\n    <span class=\"pl-ii\">slot_name:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>m<span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-ii\">slot_variable_node_id:</span> <span class=\"pl-c1\">18</span>\n  }\n  slot_variables {\n    <span class=\"pl-ii\">original_variable_node_id</span>: <span class=\"pl-c1\">4</span>\n    <span class=\"pl-ii\">slot_name:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>v<span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-ii\">slot_variable_node_id:</span> <span class=\"pl-c1\">19</span>\n  }\n  slot_variables {\n    <span class=\"pl-ii\">original_variable_node_id</span>: <span class=\"pl-c1\">8</span>\n    <span class=\"pl-ii\">slot_name:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>v<span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-ii\">slot_variable_node_id:</span> <span class=\"pl-c1\">20</span>\n  }\n  slot_variables {\n    <span class=\"pl-ii\">original_variable_node_id</span>: <span class=\"pl-c1\">9</span>\n    <span class=\"pl-ii\">slot_name:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>v<span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-ii\">slot_variable_node_id:</span> <span class=\"pl-c1\">21</span>\n  }\n  slot_variables {\n    <span class=\"pl-ii\">original_variable_node_id</span>: <span class=\"pl-c1\">10</span>\n    <span class=\"pl-ii\">slot_name:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>v<span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-ii\">slot_variable_node_id:</span> <span class=\"pl-c1\">22</span>\n  }\n  slot_variables {\n    <span class=\"pl-ii\">original_variable_node_id</span>: <span class=\"pl-c1\">11</span>\n    <span class=\"pl-ii\">slot_name:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>v<span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-ii\">slot_variable_node_id:</span> <span class=\"pl-c1\">23</span>\n  }\n}</pre></div>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Win10\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): tf-nightly==1.10.0.dev20180609\nPython version: 3.6.5\nBazel version (if compiling from source): -\nGCC/Compiler version (if compiling from source): -\nCUDA/cuDNN version: -\nGPU model and memory: -\nExact command to reproduce:\n\nI get the error that is thrown here:\nhttps://github.com/tensorflow/tensorflow/blob/r1.9/tensorflow/python/training/checkpointable/util.py#L633\nI cannot provide code to reproduce it. But basically what happens is I have a class that inherits from Checkpointable. It assigns all variables to itself to make them checkpointable. It also assigns an optimizer to itself. I then save the model and restore it. When calling .assert_consumed() on the load_status object of restore(dir, session) it throws an error because some key does not match. The variable it tries to restore is actually in the saved checkpoint it just has a different key then the one it gets from enumerate(self._checkpoint.object_graph_proto.nodes).\nThis describes it as good as I can. Sorry for not being able to share the code. I tried to reproduce it but so far I cannot. I believe it is a bug, because I call ckpt.save() and immediately after it ckpt.restore() and I get the exception.\nOutput of self._checkpoint.object_by_proto_id.keys() at line 631.\nYou can see that some keys are missing (idk why) but theses are the ones I need to restore.\n[0, 1, 2, 3, 4, 5, 6, 7, 14, 19, 10, 17, 22, 11, 18, 23, 12, 13]\n\nOutput of util._serialize_object_graph(self.checkpoint, None) after restore before assert_consumed\nnodes {\n  children {\n    node_id: 1\n    local_name: \"model\"\n  }\n  children {\n    node_id: 2\n    local_name: \"save_counter\"\n  }\n}\nnodes {\n  children {\n    node_id: 3\n    local_name: \"_global_step_pretrain\"\n  }\n  children {\n    node_id: 4\n    local_name: \"embedding\"\n  }\n  children {\n    node_id: 5\n    local_name: \"cell\"\n  }\n  children {\n    node_id: 6\n    local_name: \"dense\"\n  }\n  children {\n    node_id: 7\n    local_name: \"_optimizer\"\n  }\n  children {\n    local_name: \"_checkpoint\"\n  }\n}\nnodes {\n  attributes {\n    name: \"VARIABLE_VALUE\"\n    full_name: \"initialize_or_restore/save_counter\"\n    checkpoint_key: \"save_counter/.ATTRIBUTES/VARIABLE_VALUE\"\n  }\n}\nnodes {\n  attributes {\n    name: \"VARIABLE_VALUE\"\n    full_name: \"ConditionedLSTMGenerator2/CONDITIONED_LSTM/pretrain/global_step\"\n    checkpoint_key: \"model/_global_step_pretrain/.ATTRIBUTES/VARIABLE_VALUE\"\n  }\n}\nnodes {\n  attributes {\n    name: \"VARIABLE_VALUE\"\n    full_name: \"ConditionedLSTMGenerator2/CONDITIONED_LSTM/embedding\"\n    checkpoint_key: \"model/embedding/.ATTRIBUTES/VARIABLE_VALUE\"\n  }\n}\nnodes {\n  children {\n    node_id: 8\n    local_name: \"kernel\"\n  }\n  children {\n    node_id: 9\n    local_name: \"bias\"\n  }\n  attributes {\n    name: \"OBJECT_CONFIG_JSON\"\n    checkpoint_key: \"model/cell/.ATTRIBUTES/OBJECT_CONFIG_JSON\"\n  }\n}\nnodes {\n  children {\n    node_id: 10\n    local_name: \"kernel\"\n  }\n  children {\n    node_id: 11\n    local_name: \"bias\"\n  }\n  attributes {\n    name: \"OBJECT_CONFIG_JSON\"\n    checkpoint_key: \"model/dense/.ATTRIBUTES/OBJECT_CONFIG_JSON\"\n  }\n}\nnodes {\n  children {\n    node_id: 12\n    local_name: \"beta1_power\"\n  }\n  children {\n    node_id: 13\n    local_name: \"beta2_power\"\n  }\n  slot_variables {\n    original_variable_node_id: 4\n    slot_name: \"m\"\n    slot_variable_node_id: 14\n  }\n  slot_variables {\n    original_variable_node_id: 8\n    slot_name: \"m\"\n    slot_variable_node_id: 15\n  }\n  slot_variables {\n    original_variable_node_id: 9\n    slot_name: \"m\"\n    slot_variable_node_id: 16\n  }\n  slot_variables {\n    original_variable_node_id: 10\n    slot_name: \"m\"\n    slot_variable_node_id: 17\n  }\n  slot_variables {\n    original_variable_node_id: 11\n    slot_name: \"m\"\n    slot_variable_node_id: 18\n  }\n  slot_variables {\n    original_variable_node_id: 4\n    slot_name: \"v\"\n    slot_variable_node_id: 19\n  }\n  slot_variables {\n    original_variable_node_id: 8\n    slot_name: \"v\"\n    slot_variable_node_id: 20\n  }\n  slot_variables {\n    original_variable_node_id: 9\n    slot_name: \"v\"\n    slot_variable_node_id: 21\n  }\n  slot_variables {\n    original_variable_node_id: 10\n    slot_name: \"v\"\n    slot_variable_node_id: 22\n  }\n  slot_variables {\n    original_variable_node_id: 11\n    slot_name: \"v\"\n    slot_variable_node_id: 23\n  }\n}", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Win10\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: tf-nightly==1.10.0.dev20180609\r\n- **Python version**: 3.6.5\r\n- **Bazel version (if compiling from source)**: -\r\n- **GCC/Compiler version (if compiling from source)**: -\r\n- **CUDA/cuDNN version**: -\r\n- **GPU model and memory**: -\r\n- **Exact command to reproduce**:\r\n\r\nI get the error that is thrown here:\r\nhttps://github.com/tensorflow/tensorflow/blob/r1.9/tensorflow/python/training/checkpointable/util.py#L633\r\n\r\nI cannot provide code to reproduce it. But basically what happens is I have a class that inherits from `Checkpointable`. It assigns all variables to itself to make them checkpointable. It also assigns an optimizer to itself. I then save the model and restore it. When calling `.assert_consumed()` on the `load_status` object of `restore(dir, session)` it throws an error because some key does not match. The variable it tries to restore is actually in the saved checkpoint it just has a different key then the one it gets from `enumerate(self._checkpoint.object_graph_proto.nodes)`.\r\n\r\nThis describes it as good as I can. Sorry for not being able to share the code. I tried to reproduce it but so far I cannot. I believe it is a bug, because I call `ckpt.save()` and immediately after it `ckpt.restore()` and I get the exception.\r\n\r\nOutput of `self._checkpoint.object_by_proto_id.keys()` at line 631.\r\nYou can see that some keys are missing (idk why) but theses are the ones I need to restore.\r\n```\r\n[0, 1, 2, 3, 4, 5, 6, 7, 14, 19, 10, 17, 22, 11, 18, 23, 12, 13]\r\n```\r\n\r\nOutput of `util._serialize_object_graph(self.checkpoint, None)` after `restore` before `assert_consumed`\r\n```json\r\nnodes {\r\n  children {\r\n    node_id: 1\r\n    local_name: \"model\"\r\n  }\r\n  children {\r\n    node_id: 2\r\n    local_name: \"save_counter\"\r\n  }\r\n}\r\nnodes {\r\n  children {\r\n    node_id: 3\r\n    local_name: \"_global_step_pretrain\"\r\n  }\r\n  children {\r\n    node_id: 4\r\n    local_name: \"embedding\"\r\n  }\r\n  children {\r\n    node_id: 5\r\n    local_name: \"cell\"\r\n  }\r\n  children {\r\n    node_id: 6\r\n    local_name: \"dense\"\r\n  }\r\n  children {\r\n    node_id: 7\r\n    local_name: \"_optimizer\"\r\n  }\r\n  children {\r\n    local_name: \"_checkpoint\"\r\n  }\r\n}\r\nnodes {\r\n  attributes {\r\n    name: \"VARIABLE_VALUE\"\r\n    full_name: \"initialize_or_restore/save_counter\"\r\n    checkpoint_key: \"save_counter/.ATTRIBUTES/VARIABLE_VALUE\"\r\n  }\r\n}\r\nnodes {\r\n  attributes {\r\n    name: \"VARIABLE_VALUE\"\r\n    full_name: \"ConditionedLSTMGenerator2/CONDITIONED_LSTM/pretrain/global_step\"\r\n    checkpoint_key: \"model/_global_step_pretrain/.ATTRIBUTES/VARIABLE_VALUE\"\r\n  }\r\n}\r\nnodes {\r\n  attributes {\r\n    name: \"VARIABLE_VALUE\"\r\n    full_name: \"ConditionedLSTMGenerator2/CONDITIONED_LSTM/embedding\"\r\n    checkpoint_key: \"model/embedding/.ATTRIBUTES/VARIABLE_VALUE\"\r\n  }\r\n}\r\nnodes {\r\n  children {\r\n    node_id: 8\r\n    local_name: \"kernel\"\r\n  }\r\n  children {\r\n    node_id: 9\r\n    local_name: \"bias\"\r\n  }\r\n  attributes {\r\n    name: \"OBJECT_CONFIG_JSON\"\r\n    checkpoint_key: \"model/cell/.ATTRIBUTES/OBJECT_CONFIG_JSON\"\r\n  }\r\n}\r\nnodes {\r\n  children {\r\n    node_id: 10\r\n    local_name: \"kernel\"\r\n  }\r\n  children {\r\n    node_id: 11\r\n    local_name: \"bias\"\r\n  }\r\n  attributes {\r\n    name: \"OBJECT_CONFIG_JSON\"\r\n    checkpoint_key: \"model/dense/.ATTRIBUTES/OBJECT_CONFIG_JSON\"\r\n  }\r\n}\r\nnodes {\r\n  children {\r\n    node_id: 12\r\n    local_name: \"beta1_power\"\r\n  }\r\n  children {\r\n    node_id: 13\r\n    local_name: \"beta2_power\"\r\n  }\r\n  slot_variables {\r\n    original_variable_node_id: 4\r\n    slot_name: \"m\"\r\n    slot_variable_node_id: 14\r\n  }\r\n  slot_variables {\r\n    original_variable_node_id: 8\r\n    slot_name: \"m\"\r\n    slot_variable_node_id: 15\r\n  }\r\n  slot_variables {\r\n    original_variable_node_id: 9\r\n    slot_name: \"m\"\r\n    slot_variable_node_id: 16\r\n  }\r\n  slot_variables {\r\n    original_variable_node_id: 10\r\n    slot_name: \"m\"\r\n    slot_variable_node_id: 17\r\n  }\r\n  slot_variables {\r\n    original_variable_node_id: 11\r\n    slot_name: \"m\"\r\n    slot_variable_node_id: 18\r\n  }\r\n  slot_variables {\r\n    original_variable_node_id: 4\r\n    slot_name: \"v\"\r\n    slot_variable_node_id: 19\r\n  }\r\n  slot_variables {\r\n    original_variable_node_id: 8\r\n    slot_name: \"v\"\r\n    slot_variable_node_id: 20\r\n  }\r\n  slot_variables {\r\n    original_variable_node_id: 9\r\n    slot_name: \"v\"\r\n    slot_variable_node_id: 21\r\n  }\r\n  slot_variables {\r\n    original_variable_node_id: 10\r\n    slot_name: \"v\"\r\n    slot_variable_node_id: 22\r\n  }\r\n  slot_variables {\r\n    original_variable_node_id: 11\r\n    slot_name: \"v\"\r\n    slot_variable_node_id: 23\r\n  }\r\n}\r\n```\r\n"}