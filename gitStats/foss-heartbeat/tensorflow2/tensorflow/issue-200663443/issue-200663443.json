{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6832", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6832/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6832/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6832/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/6832", "id": 200663443, "node_id": "MDExOlB1bGxSZXF1ZXN0MTAxNDcwMTU2", "number": 6832, "title": "GridRNN cell uses tuples for output and states", "user": {"login": "phvu", "id": 1087992, "node_id": "MDQ6VXNlcjEwODc5OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1087992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phvu", "html_url": "https://github.com/phvu", "followers_url": "https://api.github.com/users/phvu/followers", "following_url": "https://api.github.com/users/phvu/following{/other_user}", "gists_url": "https://api.github.com/users/phvu/gists{/gist_id}", "starred_url": "https://api.github.com/users/phvu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phvu/subscriptions", "organizations_url": "https://api.github.com/users/phvu/orgs", "repos_url": "https://api.github.com/users/phvu/repos", "events_url": "https://api.github.com/users/phvu/events{/privacy}", "received_events_url": "https://api.github.com/users/phvu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 419840263, "node_id": "MDU6TGFiZWw0MTk4NDAyNjM=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/awaiting%20testing%20(then%20merge)", "name": "awaiting testing (then merge)", "color": "c2e0c6", "default": false}, {"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2017-01-13T15:51:39Z", "updated_at": "2017-04-26T18:51:15Z", "closed_at": "2017-04-26T18:51:15Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/6832", "html_url": "https://github.com/tensorflow/tensorflow/pull/6832", "diff_url": "https://github.com/tensorflow/tensorflow/pull/6832.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/6832.patch"}, "body_html": "<p>In response to this (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"157346581\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/2560\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/2560/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/2560\">#2560</a>) and recent changes in LSTMCell, this PR added <code>state_is_tuple=True</code> and <code>output_is_tuple=True</code> into the constructor of GridRNNCell:</p>\n<pre><code>&gt; cell = tf.contrib.grid_rnn.Grid2LSTMCell(3, use_peepholes=True)\n&gt; cell.state_size\n       (LSTMStateTuple(c=3, h=3), LSTMStateTuple(c=3, h=3))\n&gt; cell.output_size\n       (3,)\n</code></pre>\n<p>This means there are 2 LSTM cells in the grid, and the state of each cell has size of <code>(c=3, h=3)</code>. There is only one output dimension, whose size is 3.</p>\n<p>In contrast:</p>\n<pre><code>&gt; cell = tf.contrib.grid_rnn.Grid2BasicRNNCell(3)\n&gt; cell.state_size\n     (3, 3)\n&gt; cell.output_size\n     (3,)\n</code></pre>\n<p>This means there are 2 BasicRNN cell in the grid, and the state of each cell has size of 3. There is only one output dimension, whose size is 3.</p>\n<p>Previous behaviour is maintained by using <code>state_is_tuple=False, output_is_tuple=False</code> when creating the cell.</p>\n<pre><code>&gt; cell = tf.contrib.grid_rnn.Grid2LSTMCell(3, use_peepholes=True, state_is_tuple=False, output_is_tuple=False)\n    WARNING:tensorflow:&lt;tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid2LSTMCell object at 0x10de68f50&gt;: Using a concatenated state is slower and will soon be deprecated.  Use state_is_tuple=True.\n    WARNING:tensorflow:&lt;tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid2LSTMCell** object at 0x10de68f50&gt;: Using a concatenated output is slower and will soon be deprecated.  Use output_is_tuple=True.\n\n&gt; cell.state_size\n    12\n&gt; cell.output_size\n    3\n\n&gt; cell = tf.contrib.grid_rnn.Grid2BasicRNNCell(3, state_is_tuple=False, output_is_tuple=False)\n    WARNING:tensorflow:&lt;tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid2BasicRNNCell object at 0x10de4b950&gt;: Using a concatenated state is slower and will soon be deprecated.  Use state_is_tuple=True.\n    WARNING:tensorflow:&lt;tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid2BasicRNNCell object at 0x10de4b950&gt;: Using a concatenated output is slower and will soon be deprecated.  Use output_is_tuple=True.\n\n&gt; cell.state_size\n   6\n&gt; cell.output_size\n   3\n</code></pre>\n<p>This also <span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #4296.\">fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"175994966\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/4296\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/4296/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/4296\">#4296</a></p>\n<h1>Backward compatibility</h1>\n<p>This change is not fully backward-compatible:</p>\n<ul>\n<li>The old implementation concatenates the output and the state tensors, so when you have <code>g, s = cell(...)</code> then <code>g</code> and <code>s</code> are simply two tensors.</li>\n<li>This implementation, by default, returns <code>g</code> and <code>s</code> as tuples of tensors.\n<ul>\n<li><code>g</code> is a tuple of length equals to the size of <code>output_dims</code> of the cell. Normally you only have one output dimension, so <code>g</code> will be a tuple of length 1.</li>\n<li><code>s</code> is a tuple of length equals to the size of <code>recurrent_dims</code> of the cell, containing the states of all the recurrent cells in all recurrent dimensions.<br>\nNow if you use LSTM cells for the recurrent dimensions, the state of each LSTM cell is a tuple of tensors (with <code>c</code> and <code>h</code> components). So for instance, the state of a Grid2LSTMCell will be a tuple of tuples: <code>((c=&lt;tensor&gt;, h=&lt;tensor&gt;), (c=&lt;tensor&gt;, h=&lt;tensor&gt;))</code><br>\nIf you use GRU or vanila RNN cells for the recurrent dimensions, the state of each cell is a tensor. So for instance, the state of a Grid2GRUCell will be a tuple of tensors: <code>(&lt;tensor&gt;, &lt;tensor&gt;)</code></li>\n</ul>\n</li>\n</ul>\n<p>Code that depends on this cell can use the old behaviour by setting <code>state_is_tuple=False</code> and <code>output_is_tuple=False</code> when constructing the cell.</p>\n<pre><code>cell = tf.contrib.grid_rnn.Grid2LSTMCell(2, use_peepholes=True,\n                                             state_is_tuple=False,\n                                             output_is_tuple=False)\n</code></pre>\n<p><strong>Breaking change</strong>: <code>state_is_tuple</code> and <code>output_is_tuple</code> are <code>True</code> by default.</p>", "body_text": "In response to this (#2560) and recent changes in LSTMCell, this PR added state_is_tuple=True and output_is_tuple=True into the constructor of GridRNNCell:\n> cell = tf.contrib.grid_rnn.Grid2LSTMCell(3, use_peepholes=True)\n> cell.state_size\n       (LSTMStateTuple(c=3, h=3), LSTMStateTuple(c=3, h=3))\n> cell.output_size\n       (3,)\n\nThis means there are 2 LSTM cells in the grid, and the state of each cell has size of (c=3, h=3). There is only one output dimension, whose size is 3.\nIn contrast:\n> cell = tf.contrib.grid_rnn.Grid2BasicRNNCell(3)\n> cell.state_size\n     (3, 3)\n> cell.output_size\n     (3,)\n\nThis means there are 2 BasicRNN cell in the grid, and the state of each cell has size of 3. There is only one output dimension, whose size is 3.\nPrevious behaviour is maintained by using state_is_tuple=False, output_is_tuple=False when creating the cell.\n> cell = tf.contrib.grid_rnn.Grid2LSTMCell(3, use_peepholes=True, state_is_tuple=False, output_is_tuple=False)\n    WARNING:tensorflow:<tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid2LSTMCell object at 0x10de68f50>: Using a concatenated state is slower and will soon be deprecated.  Use state_is_tuple=True.\n    WARNING:tensorflow:<tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid2LSTMCell** object at 0x10de68f50>: Using a concatenated output is slower and will soon be deprecated.  Use output_is_tuple=True.\n\n> cell.state_size\n    12\n> cell.output_size\n    3\n\n> cell = tf.contrib.grid_rnn.Grid2BasicRNNCell(3, state_is_tuple=False, output_is_tuple=False)\n    WARNING:tensorflow:<tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid2BasicRNNCell object at 0x10de4b950>: Using a concatenated state is slower and will soon be deprecated.  Use state_is_tuple=True.\n    WARNING:tensorflow:<tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid2BasicRNNCell object at 0x10de4b950>: Using a concatenated output is slower and will soon be deprecated.  Use output_is_tuple=True.\n\n> cell.state_size\n   6\n> cell.output_size\n   3\n\nThis also fixes #4296\nBackward compatibility\nThis change is not fully backward-compatible:\n\nThe old implementation concatenates the output and the state tensors, so when you have g, s = cell(...) then g and s are simply two tensors.\nThis implementation, by default, returns g and s as tuples of tensors.\n\ng is a tuple of length equals to the size of output_dims of the cell. Normally you only have one output dimension, so g will be a tuple of length 1.\ns is a tuple of length equals to the size of recurrent_dims of the cell, containing the states of all the recurrent cells in all recurrent dimensions.\nNow if you use LSTM cells for the recurrent dimensions, the state of each LSTM cell is a tuple of tensors (with c and h components). So for instance, the state of a Grid2LSTMCell will be a tuple of tuples: ((c=<tensor>, h=<tensor>), (c=<tensor>, h=<tensor>))\nIf you use GRU or vanila RNN cells for the recurrent dimensions, the state of each cell is a tensor. So for instance, the state of a Grid2GRUCell will be a tuple of tensors: (<tensor>, <tensor>)\n\n\n\nCode that depends on this cell can use the old behaviour by setting state_is_tuple=False and output_is_tuple=False when constructing the cell.\ncell = tf.contrib.grid_rnn.Grid2LSTMCell(2, use_peepholes=True,\n                                             state_is_tuple=False,\n                                             output_is_tuple=False)\n\nBreaking change: state_is_tuple and output_is_tuple are True by default.", "body": "In response to this (https://github.com/tensorflow/tensorflow/issues/2560) and recent changes in LSTMCell, this PR added `state_is_tuple=True` and `output_is_tuple=True` into the constructor of GridRNNCell:\r\n\r\n```\r\n> cell = tf.contrib.grid_rnn.Grid2LSTMCell(3, use_peepholes=True)\r\n> cell.state_size\r\n       (LSTMStateTuple(c=3, h=3), LSTMStateTuple(c=3, h=3))\r\n> cell.output_size\r\n       (3,)\r\n```\r\n\r\nThis means there are 2 LSTM cells in the grid, and the state of each cell has size of `(c=3, h=3)`. There is only one output dimension, whose size is 3.\r\n\r\nIn contrast:\r\n\r\n```\r\n> cell = tf.contrib.grid_rnn.Grid2BasicRNNCell(3)\r\n> cell.state_size\r\n     (3, 3)\r\n> cell.output_size\r\n     (3,)\r\n```\r\n\r\nThis means there are 2 BasicRNN cell in the grid, and the state of each cell has size of 3. There is only one output dimension, whose size is 3.\r\n\r\nPrevious behaviour is maintained by using `state_is_tuple=False, output_is_tuple=False` when creating the cell.\r\n\r\n```\r\n> cell = tf.contrib.grid_rnn.Grid2LSTMCell(3, use_peepholes=True, state_is_tuple=False, output_is_tuple=False)\r\n    WARNING:tensorflow:<tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid2LSTMCell object at 0x10de68f50>: Using a concatenated state is slower and will soon be deprecated.  Use state_is_tuple=True.\r\n    WARNING:tensorflow:<tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid2LSTMCell** object at 0x10de68f50>: Using a concatenated output is slower and will soon be deprecated.  Use output_is_tuple=True.\r\n\r\n> cell.state_size\r\n    12\r\n> cell.output_size\r\n    3\r\n\r\n> cell = tf.contrib.grid_rnn.Grid2BasicRNNCell(3, state_is_tuple=False, output_is_tuple=False)\r\n    WARNING:tensorflow:<tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid2BasicRNNCell object at 0x10de4b950>: Using a concatenated state is slower and will soon be deprecated.  Use state_is_tuple=True.\r\n    WARNING:tensorflow:<tensorflow.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid2BasicRNNCell object at 0x10de4b950>: Using a concatenated output is slower and will soon be deprecated.  Use output_is_tuple=True.\r\n\r\n> cell.state_size\r\n   6\r\n> cell.output_size\r\n   3\r\n```\r\n\r\nThis also fixes https://github.com/tensorflow/tensorflow/issues/4296\r\n\r\n# Backward compatibility\r\nThis change is not fully backward-compatible:\r\n- The old implementation concatenates the output and the state tensors, so when you have `g, s = cell(...)` then `g` and `s` are simply two tensors.\r\n- This implementation, by default, returns `g` and `s` as tuples of tensors. \r\n  - `g` is a tuple of length equals to the size of `output_dims` of the cell. Normally you only have one output dimension, so `g` will be a tuple of length 1.\r\n  - `s` is a tuple of length equals to the size of `recurrent_dims` of the cell, containing the states of all the recurrent cells in all recurrent dimensions.\r\nNow if you use LSTM cells for the recurrent dimensions, the state of each LSTM cell is a tuple of tensors (with `c` and `h` components). So for instance, the state of a Grid2LSTMCell will be a tuple of tuples: `((c=<tensor>, h=<tensor>), (c=<tensor>, h=<tensor>))`\r\nIf you use GRU or vanila RNN cells for the recurrent dimensions, the state of each cell is a tensor. So for instance, the state of a Grid2GRUCell will be a tuple of tensors: `(<tensor>, <tensor>)`\r\n\r\nCode that depends on this cell can use the old behaviour by setting `state_is_tuple=False` and `output_is_tuple=False` when constructing the cell. \r\n\r\n```\r\ncell = tf.contrib.grid_rnn.Grid2LSTMCell(2, use_peepholes=True,\r\n                                             state_is_tuple=False,\r\n                                             output_is_tuple=False)\r\n```\r\n\r\n**Breaking change**: `state_is_tuple` and `output_is_tuple` are `True` by default."}