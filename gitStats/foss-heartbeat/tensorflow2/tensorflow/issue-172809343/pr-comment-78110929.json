{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/78110929", "pull_request_review_id": null, "id": 78110929, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc4MTEwOTI5", "diff_hunk": "@@ -33,6 +33,20 @@ struct SelectFunctor<GPUDevice, T> {\n };\n \n template <typename T>\n+struct SelectScalarFunctor<GPUDevice, T> {\n+  void operator()(const GPUDevice& d, typename TTypes<T>::Flat out,\n+                  typename TTypes<bool>::ConstScalar cond,\n+                  typename TTypes<T>::ConstFlat then_flat,\n+                  typename TTypes<T>::ConstFlat else_flat) {\n+    if (cond()){", "path": "tensorflow/core/kernels/cwise_op_gpu_select.cu.cc", "position": 9, "original_position": 9, "commit_id": "f24e5e4a3a43cbb7191de2c2fd4ffae44d61209d", "original_commit_id": "60290e35ee2b53e7ea07b62bf344d0b93ee5b505", "user": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "body": "In this case you want to broadcast the scalar value to a vector and pass\nthe ref to the standard select functor.  I'd like to see that there's a\nperformance benefit to not copying a single scalar from GPU to CPU though,\nto justify all this.\n\nOn Thu, Sep 8, 2016 at 9:07 AM, Vijay Vasudevan notifications@github.com\nwrote:\n\n> In tensorflow/core/kernels/cwise_op_gpu_select.cu.cc\n> https://github.com/tensorflow/tensorflow/pull/3995#discussion_r78037075:\n> \n> > @@ -33,6 +33,20 @@ struct SelectFunctor<GPUDevice, T> {\n> >  };\n> > \n> >  template <typename T>\n> > +struct SelectScalarFunctor<GPUDevice, T> {\n> > -  void operator()(const GPUDevice& d, typename TTypes<T>::Flat out,\n> > -                  typename TTypes<bool>::ConstScalar cond,\n> > -                  typename TTypes<T>::ConstFlat then_flat,\n> > -                  typename TTypes<T>::ConstFlat else_flat) {\n> > -    if (cond()){\n> \n> I think the whole point of this op was to have the 'cond' be on GPU\n> though. Otherwise you might as well just use tf.cond()\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/tensorflow/tensorflow/pull/3995/files/60290e35ee2b53e7ea07b62bf344d0b93ee5b505#r78037075,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/ABtimwwJPuLKTZiS-__jUUwyvq_X6aU-ks5qoDLWgaJpZM4JrZh-\n> .\n", "created_at": "2016-09-09T00:05:22Z", "updated_at": "2016-09-09T00:05:22Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/3995#discussion_r78110929", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/3995", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/78110929"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/3995#discussion_r78110929"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/3995"}}, "body_html": "<p>In this case you want to broadcast the scalar value to a vector and pass<br>\nthe ref to the standard select functor.  I'd like to see that there's a<br>\nperformance benefit to not copying a single scalar from GPU to CPU though,<br>\nto justify all this.</p>\n<p>On Thu, Sep 8, 2016 at 9:07 AM, Vijay Vasudevan <a href=\"mailto:notifications@github.com\">notifications@github.com</a><br>\nwrote:</p>\n<blockquote>\n<p>In tensorflow/core/kernels/cwise_op_gpu_select.cu.cc<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"172809343\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/3995\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/3995/hovercard?comment_id=78037075&amp;comment_type=review_comment\" href=\"https://github.com/tensorflow/tensorflow/pull/3995#discussion_r78037075\">#3995 (comment)</a>:</p>\n<blockquote>\n<p>@@ -33,6 +33,20 @@ struct SelectFunctor&lt;GPUDevice, T&gt; {<br>\n};</p>\n<p>template <br>\n+struct SelectScalarFunctor&lt;GPUDevice, T&gt; {</p>\n<ul>\n<li>void operator()(const GPUDevice&amp; d, typename TTypes::Flat out,</li>\n<li>\n<pre><code>             typename TTypes&lt;bool&gt;::ConstScalar cond,\n</code></pre>\n</li>\n<li>\n<pre><code>             typename TTypes&lt;T&gt;::ConstFlat then_flat,\n</code></pre>\n</li>\n<li>\n<pre><code>             typename TTypes&lt;T&gt;::ConstFlat else_flat) {\n</code></pre>\n</li>\n<li>if (cond()){</li>\n</ul>\n</blockquote>\n<p>I think the whole point of this op was to have the 'cond' be on GPU<br>\nthough. Otherwise you might as well just use tf.cond()</p>\n<p>\u2014<br>\nYou are receiving this because you were mentioned.<br>\nReply to this email directly, view it on GitHub<br>\n<a href=\"https://github.com/tensorflow/tensorflow/pull/3995/files/60290e35ee2b53e7ea07b62bf344d0b93ee5b505#r78037075\">https://github.com/tensorflow/tensorflow/pull/3995/files/60290e35ee2b53e7ea07b62bf344d0b93ee5b505#r78037075</a>,<br>\nor mute the thread<br>\n<a href=\"https://github.com/notifications/unsubscribe-auth/ABtimwwJPuLKTZiS-__jUUwyvq_X6aU-ks5qoDLWgaJpZM4JrZh-\">https://github.com/notifications/unsubscribe-auth/ABtimwwJPuLKTZiS-__jUUwyvq_X6aU-ks5qoDLWgaJpZM4JrZh-</a><br>\n.</p>\n</blockquote>", "body_text": "In this case you want to broadcast the scalar value to a vector and pass\nthe ref to the standard select functor.  I'd like to see that there's a\nperformance benefit to not copying a single scalar from GPU to CPU though,\nto justify all this.\nOn Thu, Sep 8, 2016 at 9:07 AM, Vijay Vasudevan notifications@github.com\nwrote:\n\nIn tensorflow/core/kernels/cwise_op_gpu_select.cu.cc\n#3995 (comment):\n\n@@ -33,6 +33,20 @@ struct SelectFunctor<GPUDevice, T> {\n};\ntemplate \n+struct SelectScalarFunctor<GPUDevice, T> {\n\nvoid operator()(const GPUDevice& d, typename TTypes::Flat out,\n\n             typename TTypes<bool>::ConstScalar cond,\n\n\n\n             typename TTypes<T>::ConstFlat then_flat,\n\n\n\n             typename TTypes<T>::ConstFlat else_flat) {\n\n\nif (cond()){\n\n\nI think the whole point of this op was to have the 'cond' be on GPU\nthough. Otherwise you might as well just use tf.cond()\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/tensorflow/tensorflow/pull/3995/files/60290e35ee2b53e7ea07b62bf344d0b93ee5b505#r78037075,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABtimwwJPuLKTZiS-__jUUwyvq_X6aU-ks5qoDLWgaJpZM4JrZh-\n."}