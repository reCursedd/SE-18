{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/428739485", "html_url": "https://github.com/tensorflow/tensorflow/issues/22846#issuecomment-428739485", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22846", "id": 428739485, "node_id": "MDEyOklzc3VlQ29tbWVudDQyODczOTQ4NQ==", "user": {"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-10T21:31:02Z", "updated_at": "2018-10-11T00:45:53Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=26728802\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/niruyadla\">@niruyadla</a>: <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=161459\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/petewarden\">@petewarden</a> is probably the best person to comment on this. Basically you can use<code>models.py</code> to generate <code>tiny_conv</code> model then convert it to .tflite. In general micro_speech_test should be able to run hotword detection if using the standard speech library. Then you can evaluate the model and make comparisons.</p>", "body_text": "@niruyadla: @petewarden is probably the best person to comment on this. Basically you can usemodels.py to generate tiny_conv model then convert it to .tflite. In general micro_speech_test should be able to run hotword detection if using the standard speech library. Then you can evaluate the model and make comparisons.", "body": "@niruyadla: @petewarden is probably the best person to comment on this. Basically you can use`models.py` to generate `tiny_conv` model then convert it to .tflite. In general micro_speech_test should be able to run hotword detection if using the standard speech library. Then you can evaluate the model and make comparisons."}