{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22884", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22884/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22884/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22884/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22884", "id": 368941278, "node_id": "MDU6SXNzdWUzNjg5NDEyNzg=", "number": 22884, "title": "Weird crash when using tensorflow C++ API on Android", "user": {"login": "robinqhuang", "id": 5413843, "node_id": "MDQ6VXNlcjU0MTM4NDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/5413843?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robinqhuang", "html_url": "https://github.com/robinqhuang", "followers_url": "https://api.github.com/users/robinqhuang/followers", "following_url": "https://api.github.com/users/robinqhuang/following{/other_user}", "gists_url": "https://api.github.com/users/robinqhuang/gists{/gist_id}", "starred_url": "https://api.github.com/users/robinqhuang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robinqhuang/subscriptions", "organizations_url": "https://api.github.com/users/robinqhuang/orgs", "repos_url": "https://api.github.com/users/robinqhuang/repos", "events_url": "https://api.github.com/users/robinqhuang/events{/privacy}", "received_events_url": "https://api.github.com/users/robinqhuang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750616506, "node_id": "MDU6TGFiZWw3NTA2MTY1MDY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:lite", "name": "comp:lite", "color": "0052cc", "default": false}], "state": "open", "locked": false, "assignee": {"login": "jdduke", "id": 479117, "node_id": "MDQ6VXNlcjQ3OTExNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/479117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdduke", "html_url": "https://github.com/jdduke", "followers_url": "https://api.github.com/users/jdduke/followers", "following_url": "https://api.github.com/users/jdduke/following{/other_user}", "gists_url": "https://api.github.com/users/jdduke/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdduke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdduke/subscriptions", "organizations_url": "https://api.github.com/users/jdduke/orgs", "repos_url": "https://api.github.com/users/jdduke/repos", "events_url": "https://api.github.com/users/jdduke/events{/privacy}", "received_events_url": "https://api.github.com/users/jdduke/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jdduke", "id": 479117, "node_id": "MDQ6VXNlcjQ3OTExNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/479117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdduke", "html_url": "https://github.com/jdduke", "followers_url": "https://api.github.com/users/jdduke/followers", "following_url": "https://api.github.com/users/jdduke/following{/other_user}", "gists_url": "https://api.github.com/users/jdduke/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdduke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdduke/subscriptions", "organizations_url": "https://api.github.com/users/jdduke/orgs", "repos_url": "https://api.github.com/users/jdduke/repos", "events_url": "https://api.github.com/users/jdduke/events{/privacy}", "received_events_url": "https://api.github.com/users/jdduke/received_events", "type": "User", "site_admin": false}, {"login": "andrehentz", "id": 25754898, "node_id": "MDQ6VXNlcjI1NzU0ODk4", "avatar_url": "https://avatars3.githubusercontent.com/u/25754898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrehentz", "html_url": "https://github.com/andrehentz", "followers_url": "https://api.github.com/users/andrehentz/followers", "following_url": "https://api.github.com/users/andrehentz/following{/other_user}", "gists_url": "https://api.github.com/users/andrehentz/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrehentz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrehentz/subscriptions", "organizations_url": "https://api.github.com/users/andrehentz/orgs", "repos_url": "https://api.github.com/users/andrehentz/repos", "events_url": "https://api.github.com/users/andrehentz/events{/privacy}", "received_events_url": "https://api.github.com/users/andrehentz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-10-11T03:46:49Z", "updated_at": "2018-11-20T07:57:10Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:</li>\n</ul>\n<p>Follow the link <a href=\"https://medium.com/jim-fleming/loading-a-tensorflow-graph-with-the-c-api-4caaff88463f\" rel=\"nofollow\">https://medium.com/jim-fleming/loading-a-tensorflow-graph-with-the-c-api-4caaff88463f</a> to load graph with C++ API:</p>\n<p>namespace tf = tensorflow;<br>\nInference::loadGraph( const std::vector&amp; graph )<br>\n{</p>\n<pre><code>tf::SessionOptions* options = new tf::SessionOptions();\ntensorflow::Session* session = nullptr;\ntf::Status status = tf::NewSession( *options, &amp;session );\nif ( status.ok() ) {\n    m_session.reset( session );\n} else {\n    return false;\n}\n\ntf::GraphDef tensorflowGraph;\n\n// The following graph parsing codes are copied from ReadBinaryProto in core/platform/env.cc\nstd::unique_ptr&lt;::tensorflow::protobuf::io::CodedInputStream&gt; coded_stream =\n        std::unique_ptr&lt;::tensorflow::protobuf::io::CodedInputStream&gt;(\n            new ::tensorflow::protobuf::io::CodedInputStream(\n                    (const google::protobuf::uint8*)graph.data(),\n                    (int)graph.size()));\n\nif (!coded_stream.get()) {\n    return false;\n}\n\n// Total bytes hard limit / warning limit are set to 1GB and 512MB\n// respectively.\ncoded_stream-&gt;SetTotalBytesLimit(1024LL &lt;&lt; 20, 512LL &lt;&lt; 20);\n\nif (!tensorflowGraph.ParseFromCodedStream(coded_stream.get())) {\n    return false;\n}\n\nstatus = m_session-&gt;Create( tensorflowGraph );\nif (!status.ok()) {\n    return false;\n}\n</code></pre>\n<p>#ifdef IOS<br>\n// Notes: Crash in SessionOptions destructor on Android for unknown reason.<br>\n// All of data member get corrupt on Android in destructor<br>\n// Use stack variable tf::SessionOptions options crash as well.<br>\n// The object may be deleted already by others on Android<br>\n// But no crash on iOS.<br>\ndelete options;<br>\n#endif</p>\n<pre><code>return true;\n</code></pre>\n<p>}</p>\n<ul>\n<li>\n<p><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nUbuntu 18.04 or Mac OS</p>\n</li>\n<li>\n<p><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>:<br>\nSamsung S9 or HuaWei P20.</p>\n</li>\n<li>\n<p><strong>TensorFlow installed from (source or binary)</strong>:<br>\nTensorflow mobile, build for Android from source with makefile, following official build steps.</p>\n</li>\n</ul>\n<p>./tensorflow/contrib/makefile/build_all_android.sh -a armeabi-v7a -s tensorflow/contrib/makefile/sub_makefiles/android/Makefile.in -t \"libtensorflow_inference.so libtensorflow_demo.so all\"</p>\n<ul>\n<li>\n<p><strong>TensorFlow version (use command below)</strong>:<br>\nr1.10</p>\n</li>\n<li>\n<p><strong>Python version</strong>:<br>\n3.5</p>\n</li>\n<li>\n<p><strong>Bazel version (if compiling from source)</strong>:<br>\n1.5.0.  Not used because makefile is used</p>\n</li>\n<li>\n<p><strong>GCC/Compiler version (if compiling from source)</strong>:<br>\nAndroid NDK r15c</p>\n</li>\n<li>\n<p><strong>CUDA/cuDNN version</strong>:<br>\nNot enabled</p>\n</li>\n<li>\n<p><strong>GPU model and memory</strong>:</p>\n</li>\n<li>\n<p><strong>Exact command to reproduce</strong>:</p>\n</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I created a set C++ APIs for iOS and Android with JNI wrapper on top of it. Not using Tensorflow Java API since I want the same C++ API shared between iOS and Android.</p>\n<p>Everything works on iOS.</p>\n<p>As comments mentioned in the code above, the SessionOptions can't be deleted on Android. It causes crash.  If the options object not deleted, load graph works on Android as well.  Please let me know what I did wrong. Thanks</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\n\nFollow the link https://medium.com/jim-fleming/loading-a-tensorflow-graph-with-the-c-api-4caaff88463f to load graph with C++ API:\nnamespace tf = tensorflow;\nInference::loadGraph( const std::vector& graph )\n{\ntf::SessionOptions* options = new tf::SessionOptions();\ntensorflow::Session* session = nullptr;\ntf::Status status = tf::NewSession( *options, &session );\nif ( status.ok() ) {\n    m_session.reset( session );\n} else {\n    return false;\n}\n\ntf::GraphDef tensorflowGraph;\n\n// The following graph parsing codes are copied from ReadBinaryProto in core/platform/env.cc\nstd::unique_ptr<::tensorflow::protobuf::io::CodedInputStream> coded_stream =\n        std::unique_ptr<::tensorflow::protobuf::io::CodedInputStream>(\n            new ::tensorflow::protobuf::io::CodedInputStream(\n                    (const google::protobuf::uint8*)graph.data(),\n                    (int)graph.size()));\n\nif (!coded_stream.get()) {\n    return false;\n}\n\n// Total bytes hard limit / warning limit are set to 1GB and 512MB\n// respectively.\ncoded_stream->SetTotalBytesLimit(1024LL << 20, 512LL << 20);\n\nif (!tensorflowGraph.ParseFromCodedStream(coded_stream.get())) {\n    return false;\n}\n\nstatus = m_session->Create( tensorflowGraph );\nif (!status.ok()) {\n    return false;\n}\n\n#ifdef IOS\n// Notes: Crash in SessionOptions destructor on Android for unknown reason.\n// All of data member get corrupt on Android in destructor\n// Use stack variable tf::SessionOptions options crash as well.\n// The object may be deleted already by others on Android\n// But no crash on iOS.\ndelete options;\n#endif\nreturn true;\n\n}\n\n\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nUbuntu 18.04 or Mac OS\n\n\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:\nSamsung S9 or HuaWei P20.\n\n\nTensorFlow installed from (source or binary):\nTensorflow mobile, build for Android from source with makefile, following official build steps.\n\n\n./tensorflow/contrib/makefile/build_all_android.sh -a armeabi-v7a -s tensorflow/contrib/makefile/sub_makefiles/android/Makefile.in -t \"libtensorflow_inference.so libtensorflow_demo.so all\"\n\n\nTensorFlow version (use command below):\nr1.10\n\n\nPython version:\n3.5\n\n\nBazel version (if compiling from source):\n1.5.0.  Not used because makefile is used\n\n\nGCC/Compiler version (if compiling from source):\nAndroid NDK r15c\n\n\nCUDA/cuDNN version:\nNot enabled\n\n\nGPU model and memory:\n\n\nExact command to reproduce:\n\n\nDescribe the problem\nI created a set C++ APIs for iOS and Android with JNI wrapper on top of it. Not using Tensorflow Java API since I want the same C++ API shared between iOS and Android.\nEverything works on iOS.\nAs comments mentioned in the code above, the SessionOptions can't be deleted on Android. It causes crash.  If the options object not deleted, load graph works on Android as well.  Please let me know what I did wrong. Thanks", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n\r\nFollow the link https://medium.com/jim-fleming/loading-a-tensorflow-graph-with-the-c-api-4caaff88463f to load graph with C++ API:\r\n\r\nnamespace tf = tensorflow;\r\nInference::loadGraph( const std::vector<unsigned char>& graph ) \r\n{\r\n \r\n    tf::SessionOptions* options = new tf::SessionOptions();\r\n    tensorflow::Session* session = nullptr;\r\n    tf::Status status = tf::NewSession( *options, &session );\r\n    if ( status.ok() ) {\r\n        m_session.reset( session );\r\n    } else {\r\n        return false;\r\n    }\r\n\r\n    tf::GraphDef tensorflowGraph;\r\n\r\n    // The following graph parsing codes are copied from ReadBinaryProto in core/platform/env.cc\r\n    std::unique_ptr<::tensorflow::protobuf::io::CodedInputStream> coded_stream =\r\n            std::unique_ptr<::tensorflow::protobuf::io::CodedInputStream>(\r\n                new ::tensorflow::protobuf::io::CodedInputStream(\r\n                        (const google::protobuf::uint8*)graph.data(),\r\n                        (int)graph.size()));\r\n\r\n    if (!coded_stream.get()) {\r\n        return false;\r\n    }\r\n\r\n    // Total bytes hard limit / warning limit are set to 1GB and 512MB\r\n    // respectively.\r\n    coded_stream->SetTotalBytesLimit(1024LL << 20, 512LL << 20);\r\n\r\n    if (!tensorflowGraph.ParseFromCodedStream(coded_stream.get())) {\r\n        return false;\r\n    }\r\n\r\n    status = m_session->Create( tensorflowGraph );\r\n    if (!status.ok()) {\r\n        return false;\r\n    }\r\n\r\n#ifdef IOS\r\n    // Notes: Crash in SessionOptions destructor on Android for unknown reason.\r\n    // All of data member get corrupt on Android in destructor\r\n    // Use stack variable tf::SessionOptions options crash as well.\r\n    // The object may be deleted already by others on Android\r\n    // But no crash on iOS.\r\n    delete options;\r\n#endif\r\n\r\n    return true;\r\n}\r\n\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nUbuntu 18.04 or Mac OS\r\n\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**:\r\nSamsung S9 or HuaWei P20. \r\n\r\n- **TensorFlow installed from (source or binary)**:\r\nTensorflow mobile, build for Android from source with makefile, following official build steps.\r\n\r\n./tensorflow/contrib/makefile/build_all_android.sh -a armeabi-v7a -s tensorflow/contrib/makefile/sub_makefiles/android/Makefile.in -t \"libtensorflow_inference.so libtensorflow_demo.so all\"\r\n\r\n\r\n- **TensorFlow version (use command below)**:\r\nr1.10\r\n\r\n- **Python version**:\r\n3.5\r\n\r\n- **Bazel version (if compiling from source)**:\r\n1.5.0.  Not used because makefile is used\r\n\r\n- **GCC/Compiler version (if compiling from source)**:\r\nAndroid NDK r15c\r\n\r\n\r\n- **CUDA/cuDNN version**:\r\nNot enabled\r\n\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\nI created a set C++ APIs for iOS and Android with JNI wrapper on top of it. Not using Tensorflow Java API since I want the same C++ API shared between iOS and Android.\r\n\r\nEverything works on iOS.  \r\n\r\nAs comments mentioned in the code above, the SessionOptions can't be deleted on Android. It causes crash.  If the options object not deleted, load graph works on Android as well.  Please let me know what I did wrong. Thanks\r\n\r\n\r\n"}