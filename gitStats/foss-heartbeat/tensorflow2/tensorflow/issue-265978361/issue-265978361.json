{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13769", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13769/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13769/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13769/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/13769", "id": 265978361, "node_id": "MDU6SXNzdWUyNjU5NzgzNjE=", "number": 13769, "title": "How periodicaly evaluate the Performance of Models in TF-Slim?", "user": {"login": "Ellie68", "id": 30722660, "node_id": "MDQ6VXNlcjMwNzIyNjYw", "avatar_url": "https://avatars1.githubusercontent.com/u/30722660?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ellie68", "html_url": "https://github.com/Ellie68", "followers_url": "https://api.github.com/users/Ellie68/followers", "following_url": "https://api.github.com/users/Ellie68/following{/other_user}", "gists_url": "https://api.github.com/users/Ellie68/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ellie68/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ellie68/subscriptions", "organizations_url": "https://api.github.com/users/Ellie68/orgs", "repos_url": "https://api.github.com/users/Ellie68/repos", "events_url": "https://api.github.com/users/Ellie68/events{/privacy}", "received_events_url": "https://api.github.com/users/Ellie68/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "sguada", "id": 1766524, "node_id": "MDQ6VXNlcjE3NjY1MjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1766524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sguada", "html_url": "https://github.com/sguada", "followers_url": "https://api.github.com/users/sguada/followers", "following_url": "https://api.github.com/users/sguada/following{/other_user}", "gists_url": "https://api.github.com/users/sguada/gists{/gist_id}", "starred_url": "https://api.github.com/users/sguada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sguada/subscriptions", "organizations_url": "https://api.github.com/users/sguada/orgs", "repos_url": "https://api.github.com/users/sguada/repos", "events_url": "https://api.github.com/users/sguada/events{/privacy}", "received_events_url": "https://api.github.com/users/sguada/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sguada", "id": 1766524, "node_id": "MDQ6VXNlcjE3NjY1MjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1766524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sguada", "html_url": "https://github.com/sguada", "followers_url": "https://api.github.com/users/sguada/followers", "following_url": "https://api.github.com/users/sguada/following{/other_user}", "gists_url": "https://api.github.com/users/sguada/gists{/gist_id}", "starred_url": "https://api.github.com/users/sguada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sguada/subscriptions", "organizations_url": "https://api.github.com/users/sguada/orgs", "repos_url": "https://api.github.com/users/sguada/repos", "events_url": "https://api.github.com/users/sguada/events{/privacy}", "received_events_url": "https://api.github.com/users/sguada/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2017-10-17T03:04:48Z", "updated_at": "2018-01-04T19:27:49Z", "closed_at": "2018-01-04T19:27:49Z", "author_association": "NONE", "body_html": "<p>I am trying to use <a href=\"https://github.com/pudae/tensorflow-densenet\">DensNet</a> for regression problem with TF-Slim. My data contains 60000 jpeg images with 37 float labels for each image. I divided my data into three different tfrecords files of a train set (60%), a validation set (20%) and a test set (20%).</p>\n<p>I need to evaluate validation set during training loop and make a plot like <a href=\"https://i.stack.imgur.com/HzLPq.jpg\" rel=\"nofollow\">image</a>.<br>\nIn TF-Slim documentation they just explain train loop and evaluation loop separately. I can just evaluate validation or test set after training loop finished. While as I said I need to evaluate during training.</p>\n<p>I tried to use slim.evaluation.evaluation_loop function instead of slim.evaluation.evaluate_once. But it doesn't help.</p>\n<pre><code>slim.evaluation.evaluation_loop(\n    master=FLAGS.master,\n    checkpoint_dir=checkpoint_path,\n    logdir=FLAGS.eval_dir,\n    num_evals=num_batches,\n    eval_op=list(names_to_updates.values()) + print_ops,\n    variables_to_restore=variables_to_restore,\n    summary_op = tf.summary.merge(summary_ops),\n    eval_interval_secs = eval_interval_secs )\n</code></pre>\n<p>I tried evaluation.evaluate_repeatedly as well.</p>\n<pre><code>from tensorflow.contrib.training.python.training import evaluation\n\nevaluation.evaluate_repeatedly(\n    master=FLAGS.master,\n    checkpoint_dir=checkpoint_path,\n    eval_ops=list(names_to_updates.values()) + print_ops,\n    eval_interval_secs = eval_interval_secs )\n</code></pre>\n<p>In both of these functions, they just read the latest available checkpoint from checkpoint_dir and apparently waiting for the next one, however when the new checkpoints are generated, they don't perform at all.</p>\n<p>I use Python 2.7.13 and Tensorflow 1.3.0 on CPU.</p>\n<p>Any help will be highly appreciated.</p>", "body_text": "I am trying to use DensNet for regression problem with TF-Slim. My data contains 60000 jpeg images with 37 float labels for each image. I divided my data into three different tfrecords files of a train set (60%), a validation set (20%) and a test set (20%).\nI need to evaluate validation set during training loop and make a plot like image.\nIn TF-Slim documentation they just explain train loop and evaluation loop separately. I can just evaluate validation or test set after training loop finished. While as I said I need to evaluate during training.\nI tried to use slim.evaluation.evaluation_loop function instead of slim.evaluation.evaluate_once. But it doesn't help.\nslim.evaluation.evaluation_loop(\n    master=FLAGS.master,\n    checkpoint_dir=checkpoint_path,\n    logdir=FLAGS.eval_dir,\n    num_evals=num_batches,\n    eval_op=list(names_to_updates.values()) + print_ops,\n    variables_to_restore=variables_to_restore,\n    summary_op = tf.summary.merge(summary_ops),\n    eval_interval_secs = eval_interval_secs )\n\nI tried evaluation.evaluate_repeatedly as well.\nfrom tensorflow.contrib.training.python.training import evaluation\n\nevaluation.evaluate_repeatedly(\n    master=FLAGS.master,\n    checkpoint_dir=checkpoint_path,\n    eval_ops=list(names_to_updates.values()) + print_ops,\n    eval_interval_secs = eval_interval_secs )\n\nIn both of these functions, they just read the latest available checkpoint from checkpoint_dir and apparently waiting for the next one, however when the new checkpoints are generated, they don't perform at all.\nI use Python 2.7.13 and Tensorflow 1.3.0 on CPU.\nAny help will be highly appreciated.", "body": "I am trying to use [DensNet][1] for regression problem with TF-Slim. My data contains 60000 jpeg images with 37 float labels for each image. I divided my data into three different tfrecords files of a train set (60%), a validation set (20%) and a test set (20%). \r\n\r\nI need to evaluate validation set during training loop and make a plot like [image][2]. \r\nIn TF-Slim documentation they just explain train loop and evaluation loop separately. I can just evaluate validation or test set after training loop finished. While as I said I need to evaluate during training.\r\n\r\nI tried to use slim.evaluation.evaluation_loop function instead of slim.evaluation.evaluate_once. But it doesn't help.\r\n\r\n    slim.evaluation.evaluation_loop(\r\n        master=FLAGS.master,\r\n        checkpoint_dir=checkpoint_path,\r\n        logdir=FLAGS.eval_dir,\r\n        num_evals=num_batches,\r\n        eval_op=list(names_to_updates.values()) + print_ops,\r\n        variables_to_restore=variables_to_restore,\r\n        summary_op = tf.summary.merge(summary_ops),\r\n        eval_interval_secs = eval_interval_secs )\r\n\r\nI tried evaluation.evaluate_repeatedly as well.\r\n\r\n    from tensorflow.contrib.training.python.training import evaluation\r\n\r\n    evaluation.evaluate_repeatedly(\r\n        master=FLAGS.master,\r\n        checkpoint_dir=checkpoint_path,\r\n        eval_ops=list(names_to_updates.values()) + print_ops,\r\n        eval_interval_secs = eval_interval_secs )\r\n\r\nIn both of these functions, they just read the latest available checkpoint from checkpoint_dir and apparently waiting for the next one, however when the new checkpoints are generated, they don't perform at all.\r\n\r\nI use Python 2.7.13 and Tensorflow 1.3.0 on CPU.\r\n\r\nAny help will be highly appreciated.\r\n\r\n  [1]: https://github.com/pudae/tensorflow-densenet\r\n  [2]: https://i.stack.imgur.com/HzLPq.jpg"}