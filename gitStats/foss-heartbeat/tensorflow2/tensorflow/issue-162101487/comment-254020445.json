{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/254020445", "html_url": "https://github.com/tensorflow/tensorflow/issues/3024#issuecomment-254020445", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3024", "id": 254020445, "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDAyMDQ0NQ==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-16T00:55:19Z", "updated_at": "2016-10-16T00:55:19Z", "author_association": "CONTRIBUTOR", "body_html": "<p>One source of instability can come from Python thread scheduler. If pre-fetching thread (started by <code>start_queue_runners</code>) are not scheduled by Python thread scheduler sufficiently often, the queue will run out of examples. This can happen when <code>session.run</code> call in main thread runs too fast for Python thread scheduler to pre-empt the thread. You can diagnose this by looking at queue fullness summaries in TensorBoard, and the solution is to wait in the beginning to let the examples load.</p>\n<p>Getting \"slower and slower\" with time could be caused by memory-leak or inefficent use of memory (which can happen if you don't run tf.get_default_graph().finalize() and modify the graph). To diagnose, see if memory usage grows over time. Another approach is to drop caches and see if that improves throughput --<br>\n<code>free &amp;&amp; sync &amp;&amp; echo 3 &gt; /proc/sys/vm/drop_caches &amp;&amp; free</code></p>", "body_text": "One source of instability can come from Python thread scheduler. If pre-fetching thread (started by start_queue_runners) are not scheduled by Python thread scheduler sufficiently often, the queue will run out of examples. This can happen when session.run call in main thread runs too fast for Python thread scheduler to pre-empt the thread. You can diagnose this by looking at queue fullness summaries in TensorBoard, and the solution is to wait in the beginning to let the examples load.\nGetting \"slower and slower\" with time could be caused by memory-leak or inefficent use of memory (which can happen if you don't run tf.get_default_graph().finalize() and modify the graph). To diagnose, see if memory usage grows over time. Another approach is to drop caches and see if that improves throughput --\nfree && sync && echo 3 > /proc/sys/vm/drop_caches && free", "body": "One source of instability can come from Python thread scheduler. If pre-fetching thread (started by `start_queue_runners`) are not scheduled by Python thread scheduler sufficiently often, the queue will run out of examples. This can happen when `session.run` call in main thread runs too fast for Python thread scheduler to pre-empt the thread. You can diagnose this by looking at queue fullness summaries in TensorBoard, and the solution is to wait in the beginning to let the examples load.\n\nGetting \"slower and slower\" with time could be caused by memory-leak or inefficent use of memory (which can happen if you don't run tf.get_default_graph().finalize() and modify the graph). To diagnose, see if memory usage grows over time. Another approach is to drop caches and see if that improves throughput -- \n`free && sync && echo 3 > /proc/sys/vm/drop_caches && free`\n"}