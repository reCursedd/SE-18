{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/319195374", "html_url": "https://github.com/tensorflow/tensorflow/issues/11909#issuecomment-319195374", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11909", "id": 319195374, "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTE5NTM3NA==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-31T21:01:48Z", "updated_at": "2017-07-31T21:02:06Z", "author_association": "CONTRIBUTOR", "body_html": "<p>A way to verify the problem could be to identify a small case where you are dividing by something other than 0 and getting NaN as a result (similar for square root case). It could be that NaN is a correct outcome. IE, this could happen if you are dividing by variance which should be zero, but the GPU version produces non-zero due to floating point fuzziness and avoids a NaN</p>", "body_text": "A way to verify the problem could be to identify a small case where you are dividing by something other than 0 and getting NaN as a result (similar for square root case). It could be that NaN is a correct outcome. IE, this could happen if you are dividing by variance which should be zero, but the GPU version produces non-zero due to floating point fuzziness and avoids a NaN", "body": "A way to verify the problem could be to identify a small case where you are dividing by something other than 0 and getting NaN as a result (similar for square root case). It could be that NaN is a correct outcome. IE, this could happen if you are dividing by variance which should be zero, but the GPU version produces non-zero due to floating point fuzziness and avoids a NaN"}