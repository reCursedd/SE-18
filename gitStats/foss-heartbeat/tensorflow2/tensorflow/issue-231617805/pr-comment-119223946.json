{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/119223946", "pull_request_review_id": 41084381, "id": 119223946, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExOTIyMzk0Ng==", "diff_hunk": "@@ -211,9 +211,11 @@ class ComputationBuilder {\n   //\n   // Note that \"limit\" means up-to-but-not-including; i.e. [start, limit) in 1D\n   // range notation.\n+  // The stride parameter determines the stride over the slice", "path": "tensorflow/compiler/xla/client/computation_builder.h", "position": 4, "original_position": 4, "commit_id": "234d0f2861c9dc992b314821b7f38e5c998a3a4a", "original_commit_id": "3bef9209e61c2f59f291e78f12cafd8d8dc1a1e5", "user": {"login": "DavidNorman", "id": 606831, "node_id": "MDQ6VXNlcjYwNjgzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/606831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DavidNorman", "html_url": "https://github.com/DavidNorman", "followers_url": "https://api.github.com/users/DavidNorman/followers", "following_url": "https://api.github.com/users/DavidNorman/following{/other_user}", "gists_url": "https://api.github.com/users/DavidNorman/gists{/gist_id}", "starred_url": "https://api.github.com/users/DavidNorman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DavidNorman/subscriptions", "organizations_url": "https://api.github.com/users/DavidNorman/orgs", "repos_url": "https://api.github.com/users/DavidNorman/repos", "events_url": "https://api.github.com/users/DavidNorman/events{/privacy}", "received_events_url": "https://api.github.com/users/DavidNorman/received_events", "type": "User", "site_admin": false}, "body": "Personally I would rather stick to positive only strides (on the grounds of similarity with our backend API).   I suppose that if the 'rev plus slice from end+1 -> begin+1'  code goes into tf2xla then that makes for simpler code in all backends.\r\n\r\nI put in negative strides because that's what TF core does.  It does it (probably) because of numpy.", "created_at": "2017-05-30T21:47:10Z", "updated_at": "2017-06-14T13:26:27Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/10217#discussion_r119223946", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/10217", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/119223946"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/10217#discussion_r119223946"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/10217"}}, "body_html": "<p>Personally I would rather stick to positive only strides (on the grounds of similarity with our backend API).   I suppose that if the 'rev plus slice from end+1 -&gt; begin+1'  code goes into tf2xla then that makes for simpler code in all backends.</p>\n<p>I put in negative strides because that's what TF core does.  It does it (probably) because of numpy.</p>", "body_text": "Personally I would rather stick to positive only strides (on the grounds of similarity with our backend API).   I suppose that if the 'rev plus slice from end+1 -> begin+1'  code goes into tf2xla then that makes for simpler code in all backends.\nI put in negative strides because that's what TF core does.  It does it (probably) because of numpy.", "in_reply_to_id": 119180582}