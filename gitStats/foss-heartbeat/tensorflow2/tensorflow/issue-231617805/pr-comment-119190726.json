{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/119190726", "pull_request_review_id": 41037087, "id": 119190726, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExOTE5MDcyNg==", "diff_hunk": "@@ -1028,32 +1029,41 @@ ShapeInference::InferDegenerateDimensionBroadcastShape(\n   for (int64 dimension = 0; dimension < starts.size(); ++dimension) {\n     int64 start_index = starts[dimension];\n     int64 limit_index = limits[dimension];\n+    int64 stride = strides[dimension];\n     if (start_index < 0) {\n       return InvalidArgument(\"negative start index to slice: %lld\",\n                              start_index);\n     }\n-    if (limit_index < 0) {\n-      return InvalidArgument(\"negative limit index to slice: %lld\",\n-                             limit_index);\n+    if (stride == 0) {\n+      return InvalidArgument(\"Zero stride\");\n     }\n     if (limit_index > arg.dimensions(dimension)) {\n       return InvalidArgument(\n           \"limit index (%lld) must be less than or equal to dimension \"\n           \"size (%lld)\",\n           limit_index, arg.dimensions(dimension));\n     }\n-    if (start_index > limit_index) {\n-      return InvalidArgument(\n-          \"limit index (%lld) must be greater or equal to \"\n-          \"start index (%lld) in slice\",\n-          limit_index, start_index);\n-    }\n     VLOG(2) << tensorflow::strings::Printf(\"starts[%lld] = %lld\", dimension,\n                                            start_index);\n     VLOG(2) << tensorflow::strings::Printf(\"limits[%lld] = %lld\", dimension,\n                                            limit_index);\n-\n-    sizes.push_back(limits[dimension] - starts[dimension]);\n+    if (stride > 0) {\n+      if (start_index > limit_index) {\n+        return InvalidArgument(\n+                \"limit index (%lld) must be greater or equal to \"\n+                        \"start index (%lld) in slice with positive stride\",", "path": "tensorflow/compiler/xla/service/shape_inference.cc", "position": null, "original_position": 47, "commit_id": "234d0f2861c9dc992b314821b7f38e5c998a3a4a", "original_commit_id": "3bef9209e61c2f59f291e78f12cafd8d8dc1a1e5", "user": {"login": "hawkinsp", "id": 348932, "node_id": "MDQ6VXNlcjM0ODkzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/348932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hawkinsp", "html_url": "https://github.com/hawkinsp", "followers_url": "https://api.github.com/users/hawkinsp/followers", "following_url": "https://api.github.com/users/hawkinsp/following{/other_user}", "gists_url": "https://api.github.com/users/hawkinsp/gists{/gist_id}", "starred_url": "https://api.github.com/users/hawkinsp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hawkinsp/subscriptions", "organizations_url": "https://api.github.com/users/hawkinsp/orgs", "repos_url": "https://api.github.com/users/hawkinsp/repos", "events_url": "https://api.github.com/users/hawkinsp/events{/privacy}", "received_events_url": "https://api.github.com/users/hawkinsp/received_events", "type": "User", "site_admin": false}, "body": "Strange indent.", "created_at": "2017-05-30T19:17:44Z", "updated_at": "2017-06-14T13:26:27Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/10217#discussion_r119190726", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/10217", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/119190726"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/10217#discussion_r119190726"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/10217"}}, "body_html": "<p>Strange indent.</p>", "body_text": "Strange indent."}