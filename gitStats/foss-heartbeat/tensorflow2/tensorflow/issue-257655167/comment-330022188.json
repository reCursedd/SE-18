{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/330022188", "html_url": "https://github.com/tensorflow/tensorflow/issues/13034#issuecomment-330022188", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13034", "id": 330022188, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDAyMjE4OA==", "user": {"login": "KishoreKarunakaran", "id": 10724627, "node_id": "MDQ6VXNlcjEwNzI0NjI3", "avatar_url": "https://avatars3.githubusercontent.com/u/10724627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KishoreKarunakaran", "html_url": "https://github.com/KishoreKarunakaran", "followers_url": "https://api.github.com/users/KishoreKarunakaran/followers", "following_url": "https://api.github.com/users/KishoreKarunakaran/following{/other_user}", "gists_url": "https://api.github.com/users/KishoreKarunakaran/gists{/gist_id}", "starred_url": "https://api.github.com/users/KishoreKarunakaran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KishoreKarunakaran/subscriptions", "organizations_url": "https://api.github.com/users/KishoreKarunakaran/orgs", "repos_url": "https://api.github.com/users/KishoreKarunakaran/repos", "events_url": "https://api.github.com/users/KishoreKarunakaran/events{/privacy}", "received_events_url": "https://api.github.com/users/KishoreKarunakaran/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-17T05:22:14Z", "updated_at": "2017-09-17T05:24:03Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=29663194\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/cy89\">@cy89</a> I don't understand this. I Just modified the above code and it's running fine.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">experiment_fn</span>(<span class=\"pl-smi\">output_dir</span>):\n    config <span class=\"pl-k\">=</span> run_config.RunConfig(<span class=\"pl-v\">model_dir</span><span class=\"pl-k\">=</span>output_dir)\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span>config.environment = None</span>\n    classifier <span class=\"pl-k\">=</span> tf.estimator.DNNClassifier(<span class=\"pl-v\">hidden_units</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">10</span>], <span class=\"pl-v\">feature_columns</span><span class=\"pl-k\">=</span>feature_columns, <span class=\"pl-v\">n_classes</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">3</span>, <span class=\"pl-v\">config</span><span class=\"pl-k\">=</span>config)\n\n    <span class=\"pl-k\">from</span> tensorflow.contrib.learn.python.learn.utils <span class=\"pl-k\">import</span> saved_model_export_utils\n\n    <span class=\"pl-k\">return</span> tflearn.Experiment(classifier,\n                              <span class=\"pl-v\">train_input_fn</span><span class=\"pl-k\">=</span><span class=\"pl-k\">lambda</span>: input_fn(train_file, <span class=\"pl-v\">perform_shuffle</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>, <span class=\"pl-v\">repeat_count</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">10</span>),\n                              <span class=\"pl-v\">eval_input_fn</span><span class=\"pl-k\">=</span><span class=\"pl-k\">lambda</span>: input_fn(test_file, <span class=\"pl-v\">perform_shuffle</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>, <span class=\"pl-v\">repeat_count</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>),\n                              <span class=\"pl-v\">eval_metrics</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">None</span>,\n                              <span class=\"pl-v\">train_steps</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">100</span>\n                              )\n\n\nlearn_runner.run(<span class=\"pl-v\">experiment_fn</span><span class=\"pl-k\">=</span>experiment_fn, <span class=\"pl-v\">output_dir</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>build2/<span class=\"pl-pds\">'</span></span>)</pre></div>\n<p><strong>Output</strong><br>\naccuracy = 0.925926, average_loss = 0.40835, global_step = 38, loss = 11.0254</p>", "body_text": "@cy89 I don't understand this. I Just modified the above code and it's running fine.\ndef experiment_fn(output_dir):\n    config = run_config.RunConfig(model_dir=output_dir)\n    #config.environment = None\n    classifier = tf.estimator.DNNClassifier(hidden_units=[10, 10], feature_columns=feature_columns, n_classes=3, config=config)\n\n    from tensorflow.contrib.learn.python.learn.utils import saved_model_export_utils\n\n    return tflearn.Experiment(classifier,\n                              train_input_fn=lambda: input_fn(train_file, perform_shuffle=True, repeat_count=10),\n                              eval_input_fn=lambda: input_fn(test_file, perform_shuffle=False, repeat_count=1),\n                              eval_metrics=None,\n                              train_steps=100\n                              )\n\n\nlearn_runner.run(experiment_fn=experiment_fn, output_dir='build2/')\nOutput\naccuracy = 0.925926, average_loss = 0.40835, global_step = 38, loss = 11.0254", "body": "@cy89 I don't understand this. I Just modified the above code and it's running fine.\r\n\r\n```python\r\ndef experiment_fn(output_dir):\r\n    config = run_config.RunConfig(model_dir=output_dir)\r\n    #config.environment = None\r\n    classifier = tf.estimator.DNNClassifier(hidden_units=[10, 10], feature_columns=feature_columns, n_classes=3, config=config)\r\n\r\n    from tensorflow.contrib.learn.python.learn.utils import saved_model_export_utils\r\n\r\n    return tflearn.Experiment(classifier,\r\n                              train_input_fn=lambda: input_fn(train_file, perform_shuffle=True, repeat_count=10),\r\n                              eval_input_fn=lambda: input_fn(test_file, perform_shuffle=False, repeat_count=1),\r\n                              eval_metrics=None,\r\n                              train_steps=100\r\n                              )\r\n\r\n\r\nlearn_runner.run(experiment_fn=experiment_fn, output_dir='build2/')\r\n```\r\n\r\n\r\n**Output**\r\naccuracy = 0.925926, average_loss = 0.40835, global_step = 38, loss = 11.0254"}