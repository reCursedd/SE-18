{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21167", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21167/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21167/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21167/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21167", "id": 344925060, "node_id": "MDU6SXNzdWUzNDQ5MjUwNjA=", "number": 21167, "title": "Rebuilding the docker devel container fails", "user": {"login": "mpenagar", "id": 1698682, "node_id": "MDQ6VXNlcjE2OTg2ODI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1698682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpenagar", "html_url": "https://github.com/mpenagar", "followers_url": "https://api.github.com/users/mpenagar/followers", "following_url": "https://api.github.com/users/mpenagar/following{/other_user}", "gists_url": "https://api.github.com/users/mpenagar/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpenagar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpenagar/subscriptions", "organizations_url": "https://api.github.com/users/mpenagar/orgs", "repos_url": "https://api.github.com/users/mpenagar/repos", "events_url": "https://api.github.com/users/mpenagar/events{/privacy}", "received_events_url": "https://api.github.com/users/mpenagar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "av8ramit", "id": 5588272, "node_id": "MDQ6VXNlcjU1ODgyNzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5588272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/av8ramit", "html_url": "https://github.com/av8ramit", "followers_url": "https://api.github.com/users/av8ramit/followers", "following_url": "https://api.github.com/users/av8ramit/following{/other_user}", "gists_url": "https://api.github.com/users/av8ramit/gists{/gist_id}", "starred_url": "https://api.github.com/users/av8ramit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/av8ramit/subscriptions", "organizations_url": "https://api.github.com/users/av8ramit/orgs", "repos_url": "https://api.github.com/users/av8ramit/repos", "events_url": "https://api.github.com/users/av8ramit/events{/privacy}", "received_events_url": "https://api.github.com/users/av8ramit/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "av8ramit", "id": 5588272, "node_id": "MDQ6VXNlcjU1ODgyNzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5588272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/av8ramit", "html_url": "https://github.com/av8ramit", "followers_url": "https://api.github.com/users/av8ramit/followers", "following_url": "https://api.github.com/users/av8ramit/following{/other_user}", "gists_url": "https://api.github.com/users/av8ramit/gists{/gist_id}", "starred_url": "https://api.github.com/users/av8ramit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/av8ramit/subscriptions", "organizations_url": "https://api.github.com/users/av8ramit/orgs", "repos_url": "https://api.github.com/users/av8ramit/repos", "events_url": "https://api.github.com/users/av8ramit/events{/privacy}", "received_events_url": "https://api.github.com/users/av8ramit/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-07-26T16:54:55Z", "updated_at": "2018-09-10T19:27:20Z", "closed_at": "2018-09-10T19:27:20Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code</strong>: NO</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: CentOS 7.4 (Tensorflow is build inside the devel docker container executed by parameterized_docker_build.sh, which is based on Ubuntu 16.04)</li>\n<li><strong>Docker version</strong>: 18.06.0-ce, build 0ffa825</li>\n<li><strong>TensorFlow installed from</strong>: Docker devel container build (i.e. source) executed by  by parameterized_docker_build.sh.</li>\n<li><strong>TensorFlow version</strong>: 1.9</li>\n<li><strong>Python version</strong>: 3.5 (inside executed docker container)</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.15.0 (inside executed docker container  by parameterized_docker_build.sh)</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: 5.4.0 (inside executed docker container by parameterized_docker_build.sh)</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<pre><code>mkdir tensorflow &amp;&amp; cd tensorflow\ngit clone https://github.com/tensorflow/tensorflow.git .\nexport TF_DOCKER_BUILD_IS_DEVEL=YES\nexport TF_DOCKER_BUILD_TYPE=CPU\nexport TF_DOCKER_BUILD_PYTHON_VERSION=PYTHON3\nexport TF_DOCKER_BUILD_DEVEL_BRANCH=r1.9\ntensorflow/tools/docker/parameterized_docker_build.sh\n</code></pre>\n<h3>Describe the problem</h3>\n<p>The rebuild of the devel docker container fails after the compilation of tensorflow, when trying to install the whl file</p>\n<h3>Source code / logs</h3>\n<pre><code>Installing collected packages: setuptools, termcolor, absl-py, gast, protobuf, grpcio, werkzeug, markdown, tensorboard, astor, tensorflow\n  Found existing installation: setuptools 40.0.0\n    Uninstalling setuptools-40.0.0:\n      Successfully uninstalled setuptools-40.0.0\n  Running setup.py install for termcolor: started\n    Running setup.py install for termcolor: finished with status 'error'\n    Complete output from command /usr/bin/python3 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-install-lv_39b1o/termcolor/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-record-gjq_zk43/install-record.txt --single-version-externally-managed --compile:\n    usage: -c [global_opts] cmd1 [cmd1_opts] [cmd2 [cmd2_opts] ...]\n       or: -c --help [cmd1 cmd2 ...]\n       or: -c --help-commands\n       or: -c cmd --help\n\n    error: option --single-version-externally-managed not recognized\n\n    ----------------------------------------\nCommand \"/usr/bin/python3 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-install-lv_39b1o/termcolor/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-record-gjq_zk43/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /tmp/pip-install-lv_39b1o/termcolor/\nThe command '/bin/sh -c tensorflow/tools/ci_build/builds/configured CPU     bazel build -c opt --copt=-mavx --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\"         tensorflow/tools/pip_package:build_pip_package &amp;&amp;     bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/pip3 &amp;&amp;     pip3 --no-cache-dir install --upgrade /tmp/pip3/tensorflow-*.whl &amp;&amp;     rm -rf /tmp/pip3 &amp;&amp;     rm -rf /root/.cache' returned a non-zero code: 1\n</code></pre>\n<h3>Probable cause</h3>\n<p>The dockerfile installs pip, setuptools and wheel with:</p>\n<pre><code>RUN curl -fSsL -O https://bootstrap.pypa.io/get-pip.py &amp;&amp; \\\n    python get-pip.py &amp;&amp; \\\n    rm get-pip.py\n</code></pre>\n<p>On 22-Jul-2018 this package was updated, so the installed versions are now: <code>pip-18.0</code> , <code>setuptools-40.0.0</code> and <code>wheel-0.31.1</code> . Proved using the previous version, i.e.:</p>\n<pre><code>RUN curl -fSsL -O https://bootstrap.pypa.io/3.3/get-pip.py &amp;&amp; \\\n    python get-pip.py &amp;&amp; \\\n    rm get-pip.py\n</code></pre>\n<p>Which installs <code>pip-10.0.1</code> , <code>setuptools-40.0.0</code> and <code>wheel-0.29.0</code>,  and the rebuild worked. The exact command to reproduce the working build was:</p>\n<pre><code>mkdir tensorflow &amp;&amp; cd tensorflow\ngit clone https://github.com/tensorflow/tensorflow.git .\nsed -i 's/bootstrap.pypa.io\\/get-pip.py/bootstrap.pypa.io\\/3.3\\/get-pip.py/' tensorflow/tools/docker/Dockerfile.devel\nexport TF_DOCKER_BUILD_IS_DEVEL=YES\nexport TF_DOCKER_BUILD_TYPE=CPU\nexport TF_DOCKER_BUILD_PYTHON_VERSION=PYTHON3\nexport TF_DOCKER_BUILD_DEVEL_BRANCH=master\ntensorflow/tools/docker/parameterized_docker_build.sh\n</code></pre>\n<h3>Pull request: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"344928034\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/21168\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/21168/hovercard\" href=\"https://github.com/tensorflow/tensorflow/pull/21168\">#21168</a></h3>", "body_text": "System information\n\nHave I written custom code: NO\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): CentOS 7.4 (Tensorflow is build inside the devel docker container executed by parameterized_docker_build.sh, which is based on Ubuntu 16.04)\nDocker version: 18.06.0-ce, build 0ffa825\nTensorFlow installed from: Docker devel container build (i.e. source) executed by  by parameterized_docker_build.sh.\nTensorFlow version: 1.9\nPython version: 3.5 (inside executed docker container)\nBazel version (if compiling from source): 0.15.0 (inside executed docker container  by parameterized_docker_build.sh)\nGCC/Compiler version (if compiling from source): 5.4.0 (inside executed docker container by parameterized_docker_build.sh)\nExact command to reproduce:\n\nmkdir tensorflow && cd tensorflow\ngit clone https://github.com/tensorflow/tensorflow.git .\nexport TF_DOCKER_BUILD_IS_DEVEL=YES\nexport TF_DOCKER_BUILD_TYPE=CPU\nexport TF_DOCKER_BUILD_PYTHON_VERSION=PYTHON3\nexport TF_DOCKER_BUILD_DEVEL_BRANCH=r1.9\ntensorflow/tools/docker/parameterized_docker_build.sh\n\nDescribe the problem\nThe rebuild of the devel docker container fails after the compilation of tensorflow, when trying to install the whl file\nSource code / logs\nInstalling collected packages: setuptools, termcolor, absl-py, gast, protobuf, grpcio, werkzeug, markdown, tensorboard, astor, tensorflow\n  Found existing installation: setuptools 40.0.0\n    Uninstalling setuptools-40.0.0:\n      Successfully uninstalled setuptools-40.0.0\n  Running setup.py install for termcolor: started\n    Running setup.py install for termcolor: finished with status 'error'\n    Complete output from command /usr/bin/python3 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-install-lv_39b1o/termcolor/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-record-gjq_zk43/install-record.txt --single-version-externally-managed --compile:\n    usage: -c [global_opts] cmd1 [cmd1_opts] [cmd2 [cmd2_opts] ...]\n       or: -c --help [cmd1 cmd2 ...]\n       or: -c --help-commands\n       or: -c cmd --help\n\n    error: option --single-version-externally-managed not recognized\n\n    ----------------------------------------\nCommand \"/usr/bin/python3 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-install-lv_39b1o/termcolor/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-record-gjq_zk43/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /tmp/pip-install-lv_39b1o/termcolor/\nThe command '/bin/sh -c tensorflow/tools/ci_build/builds/configured CPU     bazel build -c opt --copt=-mavx --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\"         tensorflow/tools/pip_package:build_pip_package &&     bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/pip3 &&     pip3 --no-cache-dir install --upgrade /tmp/pip3/tensorflow-*.whl &&     rm -rf /tmp/pip3 &&     rm -rf /root/.cache' returned a non-zero code: 1\n\nProbable cause\nThe dockerfile installs pip, setuptools and wheel with:\nRUN curl -fSsL -O https://bootstrap.pypa.io/get-pip.py && \\\n    python get-pip.py && \\\n    rm get-pip.py\n\nOn 22-Jul-2018 this package was updated, so the installed versions are now: pip-18.0 , setuptools-40.0.0 and wheel-0.31.1 . Proved using the previous version, i.e.:\nRUN curl -fSsL -O https://bootstrap.pypa.io/3.3/get-pip.py && \\\n    python get-pip.py && \\\n    rm get-pip.py\n\nWhich installs pip-10.0.1 , setuptools-40.0.0 and wheel-0.29.0,  and the rebuild worked. The exact command to reproduce the working build was:\nmkdir tensorflow && cd tensorflow\ngit clone https://github.com/tensorflow/tensorflow.git .\nsed -i 's/bootstrap.pypa.io\\/get-pip.py/bootstrap.pypa.io\\/3.3\\/get-pip.py/' tensorflow/tools/docker/Dockerfile.devel\nexport TF_DOCKER_BUILD_IS_DEVEL=YES\nexport TF_DOCKER_BUILD_TYPE=CPU\nexport TF_DOCKER_BUILD_PYTHON_VERSION=PYTHON3\nexport TF_DOCKER_BUILD_DEVEL_BRANCH=master\ntensorflow/tools/docker/parameterized_docker_build.sh\n\nPull request: #21168", "body": "### System information\r\n- **Have I written custom code**: NO\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: CentOS 7.4 (Tensorflow is build inside the devel docker container executed by parameterized_docker_build.sh, which is based on Ubuntu 16.04)\r\n- **Docker version**: 18.06.0-ce, build 0ffa825\r\n- **TensorFlow installed from**: Docker devel container build (i.e. source) executed by  by parameterized_docker_build.sh.\r\n- **TensorFlow version**: 1.9\r\n- **Python version**: 3.5 (inside executed docker container) \r\n- **Bazel version (if compiling from source)**: 0.15.0 (inside executed docker container  by parameterized_docker_build.sh) \r\n- **GCC/Compiler version (if compiling from source)**: 5.4.0 (inside executed docker container by parameterized_docker_build.sh)\r\n- **Exact command to reproduce**:\r\n\r\n```\r\nmkdir tensorflow && cd tensorflow\r\ngit clone https://github.com/tensorflow/tensorflow.git .\r\nexport TF_DOCKER_BUILD_IS_DEVEL=YES\r\nexport TF_DOCKER_BUILD_TYPE=CPU\r\nexport TF_DOCKER_BUILD_PYTHON_VERSION=PYTHON3\r\nexport TF_DOCKER_BUILD_DEVEL_BRANCH=r1.9\r\ntensorflow/tools/docker/parameterized_docker_build.sh\r\n```\r\n\r\n\r\n### Describe the problem\r\nThe rebuild of the devel docker container fails after the compilation of tensorflow, when trying to install the whl file\r\n\r\n### Source code / logs\r\n\r\n```\r\nInstalling collected packages: setuptools, termcolor, absl-py, gast, protobuf, grpcio, werkzeug, markdown, tensorboard, astor, tensorflow\r\n  Found existing installation: setuptools 40.0.0\r\n    Uninstalling setuptools-40.0.0:\r\n      Successfully uninstalled setuptools-40.0.0\r\n  Running setup.py install for termcolor: started\r\n    Running setup.py install for termcolor: finished with status 'error'\r\n    Complete output from command /usr/bin/python3 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-install-lv_39b1o/termcolor/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-record-gjq_zk43/install-record.txt --single-version-externally-managed --compile:\r\n    usage: -c [global_opts] cmd1 [cmd1_opts] [cmd2 [cmd2_opts] ...]\r\n       or: -c --help [cmd1 cmd2 ...]\r\n       or: -c --help-commands\r\n       or: -c cmd --help\r\n\r\n    error: option --single-version-externally-managed not recognized\r\n\r\n    ----------------------------------------\r\nCommand \"/usr/bin/python3 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-install-lv_39b1o/termcolor/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-record-gjq_zk43/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /tmp/pip-install-lv_39b1o/termcolor/\r\nThe command '/bin/sh -c tensorflow/tools/ci_build/builds/configured CPU     bazel build -c opt --copt=-mavx --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\"         tensorflow/tools/pip_package:build_pip_package &&     bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/pip3 &&     pip3 --no-cache-dir install --upgrade /tmp/pip3/tensorflow-*.whl &&     rm -rf /tmp/pip3 &&     rm -rf /root/.cache' returned a non-zero code: 1\r\n```\r\n\r\n### Probable cause\r\n\r\nThe dockerfile installs pip, setuptools and wheel with:\r\n\r\n```\r\nRUN curl -fSsL -O https://bootstrap.pypa.io/get-pip.py && \\\r\n    python get-pip.py && \\\r\n    rm get-pip.py\r\n```\r\nOn 22-Jul-2018 this package was updated, so the installed versions are now: `pip-18.0` , `setuptools-40.0.0` and `wheel-0.31.1` . Proved using the previous version, i.e.:\r\n\r\n```\r\nRUN curl -fSsL -O https://bootstrap.pypa.io/3.3/get-pip.py && \\\r\n    python get-pip.py && \\\r\n    rm get-pip.py\r\n```\r\n\r\nWhich installs `pip-10.0.1` , `setuptools-40.0.0` and `wheel-0.29.0`,  and the rebuild worked. The exact command to reproduce the working build was:\r\n\r\n```\r\nmkdir tensorflow && cd tensorflow\r\ngit clone https://github.com/tensorflow/tensorflow.git .\r\nsed -i 's/bootstrap.pypa.io\\/get-pip.py/bootstrap.pypa.io\\/3.3\\/get-pip.py/' tensorflow/tools/docker/Dockerfile.devel\r\nexport TF_DOCKER_BUILD_IS_DEVEL=YES\r\nexport TF_DOCKER_BUILD_TYPE=CPU\r\nexport TF_DOCKER_BUILD_PYTHON_VERSION=PYTHON3\r\nexport TF_DOCKER_BUILD_DEVEL_BRANCH=master\r\ntensorflow/tools/docker/parameterized_docker_build.sh\r\n```\r\n\r\n### Pull request: #21168\r\n"}