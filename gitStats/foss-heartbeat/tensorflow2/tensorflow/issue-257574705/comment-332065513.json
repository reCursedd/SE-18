{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/332065513", "html_url": "https://github.com/tensorflow/tensorflow/pull/13027#issuecomment-332065513", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13027", "id": 332065513, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjA2NTUxMw==", "user": {"login": "resec", "id": 4277636, "node_id": "MDQ6VXNlcjQyNzc2MzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/4277636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/resec", "html_url": "https://github.com/resec", "followers_url": "https://api.github.com/users/resec/followers", "following_url": "https://api.github.com/users/resec/following{/other_user}", "gists_url": "https://api.github.com/users/resec/gists{/gist_id}", "starred_url": "https://api.github.com/users/resec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/resec/subscriptions", "organizations_url": "https://api.github.com/users/resec/orgs", "repos_url": "https://api.github.com/users/resec/repos", "events_url": "https://api.github.com/users/resec/events{/privacy}", "received_events_url": "https://api.github.com/users/resec/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-26T02:11:15Z", "updated_at": "2017-09-26T02:11:15Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=20959853\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/drpngx\">@drpngx</a> when I am trying to build the another ios lib that is linking the Tensorflow static lib, the nsync.a is required as well for linking. If not provided, then below error would occur.</p>\n<pre><code>Showing Recent Messages\nLd /Users/resec/Library/Developer/Xcode/DerivedData/aabb-gflqvuqcsigceaevcvqprvmfrfol/Build/Products/Debug-iphonesimulator/aabb.app/aabb normal x86_64\n    cd /project/aabb_ios_demo\n    export IPHONEOS_DEPLOYMENT_TARGET=10.2\n    export PATH=\"/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/usr/bin:/Applications/Xcode.app/Contents/Developer/usr/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin\"\n    /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ -arch x86_64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator10.2.sdk -L/Users/resec/Library/Developer/Xcode/DerivedData/aabb-gflqvuqcsigceaevcvqprvmfrfol/Build/Products/Debug-iphonesimulator -F/Users/resec/Library/Developer/Xcode/DerivedData/aabb-gflqvuqcsigceaevcvqprvmfrfol/Build/Products/Debug-iphonesimulator -filelist /Users/resec/Library/Developer/Xcode/DerivedData/aabb-gflqvuqcsigceaevcvqprvmfrfol/Build/Intermediates/aabb.build/Debug-iphonesimulator/aabb.build/Objects-normal/x86_64/aabb.LinkFileList -Xlinker -rpath -Xlinker @executable_path/Frameworks -mios-simulator-version-min=10.2 -dead_strip -Xlinker -object_path_lto -Xlinker /Users/resec/Library/Developer/Xcode/DerivedData/aabb-gflqvuqcsigceaevcvqprvmfrfol/Build/Intermediates/aabb.build/Debug-iphonesimulator/aabb.build/Objects-normal/x86_64/aabb_lto.o -Xlinker -export_dynamic -Xlinker -no_deduplicate -Xlinker -objc_abi_version -Xlinker 2 -stdlib=libc++ -fobjc-arc -fobjc-link-runtime /project/agent/aabb/gen/sentencepiece/lib/libsentencepiece.a /project/agent/aabb/gen/protobuf_ios/lib/libprotobuf.a -force_load /project/agent/aabb/gen/lib/libtensorflow-core.a -Xlinker -sectcreate -Xlinker __TEXT -Xlinker __entitlements -Xlinker /Users/resec/Library/Developer/Xcode/DerivedData/aabb-gflqvuqcsigceaevcvqprvmfrfol/Build/Intermediates/aabb.build/Debug-iphonesimulator/aabb.build/aabb.app.xcent -lz -framework Accelerate -Xlinker -dependency_info -Xlinker /Users/resec/Library/Developer/Xcode/DerivedData/aabb-gflqvuqcsigceaevcvqprvmfrfol/Build/Intermediates/aabb.build/Debug-iphonesimulator/aabb.build/Objects-normal/x86_64/aabb_dependency_info.dat -o /Users/resec/Library/Developer/Xcode/DerivedData/aabb-gflqvuqcsigceaevcvqprvmfrfol/Build/Products/Debug-iphonesimulator/aabb.app/aabb\n\nUndefined symbols for architecture x86_64:\n  \"nsync::nsync_mu_rlock(nsync::nsync_mu_s_*)\", referenced from:\n      tensorflow::ResourceMgr::DoLookup(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::type_index, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, tensorflow::ResourceBase**) const in libtensorflow-core.a(resource_mgr.o)\n  \"nsync::nsync_mu_runlock(nsync::nsync_mu_s_*)\", referenced from:\n      tensorflow::ResourceMgr::DoLookup(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::type_index, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, tensorflow::ResourceBase**) const in libtensorflow-core.a(resource_mgr.o)\n  \"nsync::nsync_cv_wait(nsync::nsync_cv_s_*, nsync::nsync_mu_s_*)\", referenced from:\n      tensorflow::Notification::WaitForNotification() in libtensorflow-core.a(direct_session.o)\n      tensorflow::Notification::WaitForNotification() in libtensorflow-core.a(graph_runner.o)\n      tensorflow::Notification::WaitForNotification() in libtensorflow-core.a(cancellation.o)\n      tensorflow::Notification::WaitForNotification() in libtensorflow-core.a(op_kernel.o)\n      tensorflow::Notification::WaitForNotification() in libtensorflow-core.a(reader_base.o)\n      tensorflow::Notification::WaitForNotification() in libtensorflow-core.a(rendezvous.o)\n      tensorflow::grappler::MeasuringCostEstimator::PredictCosts(tensorflow::GraphDef const&amp;, tensorflow::CostGraphDef*, tensorflow::grappler::Costs*) const in libtensorflow-core.a(measuring_cost_estimator.o)\n      ...\n  \"nsync::nsync_from_time_point_(std::__1::chrono::time_point&lt;std::__1::chrono::system_clock, std::__1::chrono::duration&lt;long long, std::__1::ratio&lt;1l, 1000000l&gt; &gt; &gt;)\", referenced from:\n      std::__1::cv_status tensorflow::condition_variable::wait_for&lt;long long, std::__1::ratio&lt;1l, 1000l&gt; &gt;(tensorflow::mutex_lock&amp;, std::__1::chrono::duration&lt;long long, std::__1::ratio&lt;1l, 1000l&gt; &gt;) in libtensorflow-core.a(allocator_retry.o)\n      std::__1::cv_status tensorflow::condition_variable::wait_for&lt;long long, std::__1::ratio&lt;1l, 1000000l&gt; &gt;(tensorflow::mutex_lock&amp;, std::__1::chrono::duration&lt;long long, std::__1::ratio&lt;1l, 1000000l&gt; &gt;) in libtensorflow-core.a(direct_session.o)\n      std::__1::cv_status tensorflow::condition_variable::wait_for&lt;long long, std::__1::ratio&lt;1l, 1000000l&gt; &gt;(tensorflow::mutex_lock&amp;, std::__1::chrono::duration&lt;long long, std::__1::ratio&lt;1l, 1000000l&gt; &gt;) in libtensorflow-core.a(rendezvous.o)\n      std::__1::cv_status tensorflow::condition_variable::wait_for&lt;long long, std::__1::ratio&lt;1l, 1000000l&gt; &gt;(tensorflow::mutex_lock&amp;, std::__1::chrono::duration&lt;long long, std::__1::ratio&lt;1l, 1000000l&gt; &gt;) in libtensorflow-core.a(utils.o)\n  \"nsync::nsync_mu_unlock(nsync::nsync_mu_s_*)\", referenced from:\n      tensorflow::AllocatorRetry::AllocateRaw(std::__1::function&lt;void* (unsigned long, unsigned long, bool)&gt;, int, unsigned long, unsigned long) in libtensorflow-core.a(allocator_retry.o)\n      tensorflow::BFCAllocator::AllocateRawInternal(unsigned long, unsigned long, bool) in libtensorflow-core.a(bfc_allocator.o)\n      tensorflow::BFCAllocator::DeallocateRaw(void*) in libtensorflow-core.a(bfc_allocator.o)\n      tensorflow::BFCAllocator::DeallocateRawInternal(void*) in libtensorflow-core.a(bfc_allocator.o)\n      tensorflow::BFCAllocator::AddAllocVisitor(std::__1::function&lt;void (void*, unsigned long)&gt;) in libtensorflow-core.a(bfc_allocator.o)\n      tensorflow::BFCAllocator::RequestedSize(void*) in libtensorflow-core.a(bfc_allocator.o)\n      tensorflow::BFCAllocator::AllocatedSize(void*) in libtensorflow-core.a(bfc_allocator.o)\n      ...\n  \"nsync::nsync_cv_wait_with_deadline(nsync::nsync_cv_s_*, nsync::nsync_mu_s_*, timespec, nsync::nsync_note_s_*)\", referenced from:\n      std::__1::cv_status tensorflow::condition_variable::wait_for&lt;long long, std::__1::ratio&lt;1l, 1000l&gt; &gt;(tensorflow::mutex_lock&amp;, std::__1::chrono::duration&lt;long long, std::__1::ratio&lt;1l, 1000l&gt; &gt;) in libtensorflow-core.a(allocator_retry.o)\n      std::__1::cv_status tensorflow::condition_variable::wait_for&lt;long long, std::__1::ratio&lt;1l, 1000000l&gt; &gt;(tensorflow::mutex_lock&amp;, std::__1::chrono::duration&lt;long long, std::__1::ratio&lt;1l, 1000000l&gt; &gt;) in libtensorflow-core.a(direct_session.o)\n      std::__1::cv_status tensorflow::condition_variable::wait_for&lt;long long, std::__1::ratio&lt;1l, 1000000l&gt; &gt;(tensorflow::mutex_lock&amp;, std::__1::chrono::duration&lt;long long, std::__1::ratio&lt;1l, 1000000l&gt; &gt;) in libtensorflow-core.a(rendezvous.o)\n      std::__1::cv_status tensorflow::condition_variable::wait_for&lt;long long, std::__1::ratio&lt;1l, 1000000l&gt; &gt;(tensorflow::mutex_lock&amp;, std::__1::chrono::duration&lt;long long, std::__1::ratio&lt;1l, 1000000l&gt; &gt;) in libtensorflow-core.a(utils.o)\n  \"nsync::nsync_mu_lock(nsync::nsync_mu_s_*)\", referenced from:\n      tensorflow::AllocatorRetry::AllocateRaw(std::__1::function&lt;void* (unsigned long, unsigned long, bool)&gt;, int, unsigned long, unsigned long) in libtensorflow-core.a(allocator_retry.o)\n      tensorflow::BFCAllocator::AllocateRawInternal(unsigned long, unsigned long, bool) in libtensorflow-core.a(bfc_allocator.o)\n      tensorflow::BFCAllocator::DeallocateRaw(void*) in libtensorflow-core.a(bfc_allocator.o)\n      tensorflow::BFCAllocator::DeallocateRawInternal(void*) in libtensorflow-core.a(bfc_allocator.o)\n      tensorflow::BFCAllocator::AddAllocVisitor(std::__1::function&lt;void (void*, unsigned long)&gt;) in libtensorflow-core.a(bfc_allocator.o)\n      tensorflow::BFCAllocator::RequestedSize(void*) in libtensorflow-core.a(bfc_allocator.o)\n      tensorflow::BFCAllocator::AllocatedSize(void*) in libtensorflow-core.a(bfc_allocator.o)\n      ...\n  \"nsync::nsync_cv_broadcast(nsync::nsync_cv_s_*)\", referenced from:\n      tensorflow::BFCAllocator::DeallocateRaw(void*) in libtensorflow-core.a(bfc_allocator.o)\n      tensorflow::DirectSession::Run(tensorflow::RunOptions const&amp;, std::__1::vector&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, tensorflow::Tensor&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, tensorflow::Tensor&gt; &gt; &gt; const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;tensorflow::Tensor, std::__1::allocator&lt;tensorflow::Tensor&gt; &gt;*, tensorflow::RunMetadata*) in libtensorflow-core.a(direct_session.o)\n      tensorflow::Notification::Notify() in libtensorflow-core.a(direct_session.o)\n      tensorflow::Notification::Notify() in libtensorflow-core.a(graph_runner.o)\n      tensorflow::Notification::Notify() in libtensorflow-core.a(cancellation.o)\n      tensorflow::Notification::Notify() in libtensorflow-core.a(op_kernel.o)\n      tensorflow::Notification::Notify() in libtensorflow-core.a(reader_base.o)\n      ...\n  \"nsync::nsync_mu_init(nsync::nsync_mu_s_*)\", referenced from:\n      tensorflow::AllocatorRetry::AllocatorRetry() in libtensorflow-core.a(allocator_retry.o)\n      tensorflow::AllocatorRetry::AllocatorRetry() in libtensorflow-core.a(allocator_retry.o)\n      tensorflow::BFCAllocator::BFCAllocator(tensorflow::SubAllocator*, unsigned long, bool, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;) in libtensorflow-core.a(bfc_allocator.o)\n      tensorflow::(anonymous namespace)::get_device_factory_lock() in libtensorflow-core.a(device_factory.o)\n      tensorflow::DirectSession::DirectSession(tensorflow::SessionOptions const&amp;, tensorflow::DeviceMgr const*, tensorflow::DirectSessionFactory*) in libtensorflow-core.a(direct_session.o)\n      tensorflow::DirectSession::Run(tensorflow::RunOptions const&amp;, std::__1::vector&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, tensorflow::Tensor&gt;, std::__1::allocator&lt;std::__1::pair&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, tensorflow::Tensor&gt; &gt; &gt; const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;tensorflow::Tensor, std::__1::allocator&lt;tensorflow::Tensor&gt; &gt;*, tensorflow::RunMetadata*) in libtensorflow-core.a(direct_session.o)\n      tensorflow::DirectSession::PRunSetup(std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*) in libtensorflow-core.a(direct_session.o)\n      ...\n  \"nsync::nsync_cv_init(nsync::nsync_cv_s_*)\", referenced from:\n      tensorflow::AllocatorRetry::AllocatorRetry() in libtensorflow-core.a(allocator_retry.o)\n      tensorflow::AllocatorRetry::AllocatorRetry() in libtensorflow-core.a(allocator_retry.o)\n      tensorflow::DirectSession::RunState::RunState(std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;, long long, std::__1::vector&lt;tensorflow::Device*, std::__1::allocator&lt;tensorflow::Device*&gt; &gt; const*) in libtensorflow-core.a(direct_session.o)\n      tensorflow::Executor::Run(tensorflow::Executor::Args const&amp;) in libtensorflow-core.a(graph_runner.o)\n      tensorflow::CancellationManager::CancellationManager() in libtensorflow-core.a(cancellation.o)\n      tensorflow::AsyncOpKernel::Compute(tensorflow::OpKernelContext*) in libtensorflow-core.a(op_kernel.o)\n      tensorflow::ReaderBase::GetNextWorkLocked(tensorflow::QueueInterface*, tensorflow::OpKernelContext*) const in libtensorflow-core.a(reader_base.o)\n      ...\nld: symbol(s) not found for architecture x86_64\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\n</code></pre>\n<p>Same case occurred in Android when linking with Tensorflow static lib.</p>\n<p>However, the build script is cleaning the built nsync lib across different builds, and the nsync lib is stored in a place that is different than other dependency libs (e.g. protobuf).</p>\n<p>So Here is to copy the generated libs into gen folder like other lib would be placed when generated, so user or <code>make</code> can manage them in a consist way.</p>\n<p>Hope these make sense to you, thanks.</p>", "body_text": "@drpngx when I am trying to build the another ios lib that is linking the Tensorflow static lib, the nsync.a is required as well for linking. If not provided, then below error would occur.\nShowing Recent Messages\nLd /Users/resec/Library/Developer/Xcode/DerivedData/aabb-gflqvuqcsigceaevcvqprvmfrfol/Build/Products/Debug-iphonesimulator/aabb.app/aabb normal x86_64\n    cd /project/aabb_ios_demo\n    export IPHONEOS_DEPLOYMENT_TARGET=10.2\n    export PATH=\"/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/usr/bin:/Applications/Xcode.app/Contents/Developer/usr/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin\"\n    /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ -arch x86_64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator10.2.sdk -L/Users/resec/Library/Developer/Xcode/DerivedData/aabb-gflqvuqcsigceaevcvqprvmfrfol/Build/Products/Debug-iphonesimulator -F/Users/resec/Library/Developer/Xcode/DerivedData/aabb-gflqvuqcsigceaevcvqprvmfrfol/Build/Products/Debug-iphonesimulator -filelist /Users/resec/Library/Developer/Xcode/DerivedData/aabb-gflqvuqcsigceaevcvqprvmfrfol/Build/Intermediates/aabb.build/Debug-iphonesimulator/aabb.build/Objects-normal/x86_64/aabb.LinkFileList -Xlinker -rpath -Xlinker @executable_path/Frameworks -mios-simulator-version-min=10.2 -dead_strip -Xlinker -object_path_lto -Xlinker /Users/resec/Library/Developer/Xcode/DerivedData/aabb-gflqvuqcsigceaevcvqprvmfrfol/Build/Intermediates/aabb.build/Debug-iphonesimulator/aabb.build/Objects-normal/x86_64/aabb_lto.o -Xlinker -export_dynamic -Xlinker -no_deduplicate -Xlinker -objc_abi_version -Xlinker 2 -stdlib=libc++ -fobjc-arc -fobjc-link-runtime /project/agent/aabb/gen/sentencepiece/lib/libsentencepiece.a /project/agent/aabb/gen/protobuf_ios/lib/libprotobuf.a -force_load /project/agent/aabb/gen/lib/libtensorflow-core.a -Xlinker -sectcreate -Xlinker __TEXT -Xlinker __entitlements -Xlinker /Users/resec/Library/Developer/Xcode/DerivedData/aabb-gflqvuqcsigceaevcvqprvmfrfol/Build/Intermediates/aabb.build/Debug-iphonesimulator/aabb.build/aabb.app.xcent -lz -framework Accelerate -Xlinker -dependency_info -Xlinker /Users/resec/Library/Developer/Xcode/DerivedData/aabb-gflqvuqcsigceaevcvqprvmfrfol/Build/Intermediates/aabb.build/Debug-iphonesimulator/aabb.build/Objects-normal/x86_64/aabb_dependency_info.dat -o /Users/resec/Library/Developer/Xcode/DerivedData/aabb-gflqvuqcsigceaevcvqprvmfrfol/Build/Products/Debug-iphonesimulator/aabb.app/aabb\n\nUndefined symbols for architecture x86_64:\n  \"nsync::nsync_mu_rlock(nsync::nsync_mu_s_*)\", referenced from:\n      tensorflow::ResourceMgr::DoLookup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::type_index, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, tensorflow::ResourceBase**) const in libtensorflow-core.a(resource_mgr.o)\n  \"nsync::nsync_mu_runlock(nsync::nsync_mu_s_*)\", referenced from:\n      tensorflow::ResourceMgr::DoLookup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::type_index, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, tensorflow::ResourceBase**) const in libtensorflow-core.a(resource_mgr.o)\n  \"nsync::nsync_cv_wait(nsync::nsync_cv_s_*, nsync::nsync_mu_s_*)\", referenced from:\n      tensorflow::Notification::WaitForNotification() in libtensorflow-core.a(direct_session.o)\n      tensorflow::Notification::WaitForNotification() in libtensorflow-core.a(graph_runner.o)\n      tensorflow::Notification::WaitForNotification() in libtensorflow-core.a(cancellation.o)\n      tensorflow::Notification::WaitForNotification() in libtensorflow-core.a(op_kernel.o)\n      tensorflow::Notification::WaitForNotification() in libtensorflow-core.a(reader_base.o)\n      tensorflow::Notification::WaitForNotification() in libtensorflow-core.a(rendezvous.o)\n      tensorflow::grappler::MeasuringCostEstimator::PredictCosts(tensorflow::GraphDef const&, tensorflow::CostGraphDef*, tensorflow::grappler::Costs*) const in libtensorflow-core.a(measuring_cost_estimator.o)\n      ...\n  \"nsync::nsync_from_time_point_(std::__1::chrono::time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000l> > >)\", referenced from:\n      std::__1::cv_status tensorflow::condition_variable::wait_for<long long, std::__1::ratio<1l, 1000l> >(tensorflow::mutex_lock&, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000l> >) in libtensorflow-core.a(allocator_retry.o)\n      std::__1::cv_status tensorflow::condition_variable::wait_for<long long, std::__1::ratio<1l, 1000000l> >(tensorflow::mutex_lock&, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000l> >) in libtensorflow-core.a(direct_session.o)\n      std::__1::cv_status tensorflow::condition_variable::wait_for<long long, std::__1::ratio<1l, 1000000l> >(tensorflow::mutex_lock&, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000l> >) in libtensorflow-core.a(rendezvous.o)\n      std::__1::cv_status tensorflow::condition_variable::wait_for<long long, std::__1::ratio<1l, 1000000l> >(tensorflow::mutex_lock&, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000l> >) in libtensorflow-core.a(utils.o)\n  \"nsync::nsync_mu_unlock(nsync::nsync_mu_s_*)\", referenced from:\n      tensorflow::AllocatorRetry::AllocateRaw(std::__1::function<void* (unsigned long, unsigned long, bool)>, int, unsigned long, unsigned long) in libtensorflow-core.a(allocator_retry.o)\n      tensorflow::BFCAllocator::AllocateRawInternal(unsigned long, unsigned long, bool) in libtensorflow-core.a(bfc_allocator.o)\n      tensorflow::BFCAllocator::DeallocateRaw(void*) in libtensorflow-core.a(bfc_allocator.o)\n      tensorflow::BFCAllocator::DeallocateRawInternal(void*) in libtensorflow-core.a(bfc_allocator.o)\n      tensorflow::BFCAllocator::AddAllocVisitor(std::__1::function<void (void*, unsigned long)>) in libtensorflow-core.a(bfc_allocator.o)\n      tensorflow::BFCAllocator::RequestedSize(void*) in libtensorflow-core.a(bfc_allocator.o)\n      tensorflow::BFCAllocator::AllocatedSize(void*) in libtensorflow-core.a(bfc_allocator.o)\n      ...\n  \"nsync::nsync_cv_wait_with_deadline(nsync::nsync_cv_s_*, nsync::nsync_mu_s_*, timespec, nsync::nsync_note_s_*)\", referenced from:\n      std::__1::cv_status tensorflow::condition_variable::wait_for<long long, std::__1::ratio<1l, 1000l> >(tensorflow::mutex_lock&, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000l> >) in libtensorflow-core.a(allocator_retry.o)\n      std::__1::cv_status tensorflow::condition_variable::wait_for<long long, std::__1::ratio<1l, 1000000l> >(tensorflow::mutex_lock&, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000l> >) in libtensorflow-core.a(direct_session.o)\n      std::__1::cv_status tensorflow::condition_variable::wait_for<long long, std::__1::ratio<1l, 1000000l> >(tensorflow::mutex_lock&, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000l> >) in libtensorflow-core.a(rendezvous.o)\n      std::__1::cv_status tensorflow::condition_variable::wait_for<long long, std::__1::ratio<1l, 1000000l> >(tensorflow::mutex_lock&, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000l> >) in libtensorflow-core.a(utils.o)\n  \"nsync::nsync_mu_lock(nsync::nsync_mu_s_*)\", referenced from:\n      tensorflow::AllocatorRetry::AllocateRaw(std::__1::function<void* (unsigned long, unsigned long, bool)>, int, unsigned long, unsigned long) in libtensorflow-core.a(allocator_retry.o)\n      tensorflow::BFCAllocator::AllocateRawInternal(unsigned long, unsigned long, bool) in libtensorflow-core.a(bfc_allocator.o)\n      tensorflow::BFCAllocator::DeallocateRaw(void*) in libtensorflow-core.a(bfc_allocator.o)\n      tensorflow::BFCAllocator::DeallocateRawInternal(void*) in libtensorflow-core.a(bfc_allocator.o)\n      tensorflow::BFCAllocator::AddAllocVisitor(std::__1::function<void (void*, unsigned long)>) in libtensorflow-core.a(bfc_allocator.o)\n      tensorflow::BFCAllocator::RequestedSize(void*) in libtensorflow-core.a(bfc_allocator.o)\n      tensorflow::BFCAllocator::AllocatedSize(void*) in libtensorflow-core.a(bfc_allocator.o)\n      ...\n  \"nsync::nsync_cv_broadcast(nsync::nsync_cv_s_*)\", referenced from:\n      tensorflow::BFCAllocator::DeallocateRaw(void*) in libtensorflow-core.a(bfc_allocator.o)\n      tensorflow::DirectSession::Run(tensorflow::RunOptions const&, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, tensorflow::Tensor>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, tensorflow::Tensor> > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<tensorflow::Tensor, std::__1::allocator<tensorflow::Tensor> >*, tensorflow::RunMetadata*) in libtensorflow-core.a(direct_session.o)\n      tensorflow::Notification::Notify() in libtensorflow-core.a(direct_session.o)\n      tensorflow::Notification::Notify() in libtensorflow-core.a(graph_runner.o)\n      tensorflow::Notification::Notify() in libtensorflow-core.a(cancellation.o)\n      tensorflow::Notification::Notify() in libtensorflow-core.a(op_kernel.o)\n      tensorflow::Notification::Notify() in libtensorflow-core.a(reader_base.o)\n      ...\n  \"nsync::nsync_mu_init(nsync::nsync_mu_s_*)\", referenced from:\n      tensorflow::AllocatorRetry::AllocatorRetry() in libtensorflow-core.a(allocator_retry.o)\n      tensorflow::AllocatorRetry::AllocatorRetry() in libtensorflow-core.a(allocator_retry.o)\n      tensorflow::BFCAllocator::BFCAllocator(tensorflow::SubAllocator*, unsigned long, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) in libtensorflow-core.a(bfc_allocator.o)\n      tensorflow::(anonymous namespace)::get_device_factory_lock() in libtensorflow-core.a(device_factory.o)\n      tensorflow::DirectSession::DirectSession(tensorflow::SessionOptions const&, tensorflow::DeviceMgr const*, tensorflow::DirectSessionFactory*) in libtensorflow-core.a(direct_session.o)\n      tensorflow::DirectSession::Run(tensorflow::RunOptions const&, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, tensorflow::Tensor>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, tensorflow::Tensor> > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<tensorflow::Tensor, std::__1::allocator<tensorflow::Tensor> >*, tensorflow::RunMetadata*) in libtensorflow-core.a(direct_session.o)\n      tensorflow::DirectSession::PRunSetup(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*) in libtensorflow-core.a(direct_session.o)\n      ...\n  \"nsync::nsync_cv_init(nsync::nsync_cv_s_*)\", referenced from:\n      tensorflow::AllocatorRetry::AllocatorRetry() in libtensorflow-core.a(allocator_retry.o)\n      tensorflow::AllocatorRetry::AllocatorRetry() in libtensorflow-core.a(allocator_retry.o)\n      tensorflow::DirectSession::RunState::RunState(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, long long, std::__1::vector<tensorflow::Device*, std::__1::allocator<tensorflow::Device*> > const*) in libtensorflow-core.a(direct_session.o)\n      tensorflow::Executor::Run(tensorflow::Executor::Args const&) in libtensorflow-core.a(graph_runner.o)\n      tensorflow::CancellationManager::CancellationManager() in libtensorflow-core.a(cancellation.o)\n      tensorflow::AsyncOpKernel::Compute(tensorflow::OpKernelContext*) in libtensorflow-core.a(op_kernel.o)\n      tensorflow::ReaderBase::GetNextWorkLocked(tensorflow::QueueInterface*, tensorflow::OpKernelContext*) const in libtensorflow-core.a(reader_base.o)\n      ...\nld: symbol(s) not found for architecture x86_64\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\n\nSame case occurred in Android when linking with Tensorflow static lib.\nHowever, the build script is cleaning the built nsync lib across different builds, and the nsync lib is stored in a place that is different than other dependency libs (e.g. protobuf).\nSo Here is to copy the generated libs into gen folder like other lib would be placed when generated, so user or make can manage them in a consist way.\nHope these make sense to you, thanks.", "body": "@drpngx when I am trying to build the another ios lib that is linking the Tensorflow static lib, the nsync.a is required as well for linking. If not provided, then below error would occur.\r\n\r\n```\r\nShowing Recent Messages\r\nLd /Users/resec/Library/Developer/Xcode/DerivedData/aabb-gflqvuqcsigceaevcvqprvmfrfol/Build/Products/Debug-iphonesimulator/aabb.app/aabb normal x86_64\r\n    cd /project/aabb_ios_demo\r\n    export IPHONEOS_DEPLOYMENT_TARGET=10.2\r\n    export PATH=\"/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/usr/bin:/Applications/Xcode.app/Contents/Developer/usr/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin\"\r\n    /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ -arch x86_64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator10.2.sdk -L/Users/resec/Library/Developer/Xcode/DerivedData/aabb-gflqvuqcsigceaevcvqprvmfrfol/Build/Products/Debug-iphonesimulator -F/Users/resec/Library/Developer/Xcode/DerivedData/aabb-gflqvuqcsigceaevcvqprvmfrfol/Build/Products/Debug-iphonesimulator -filelist /Users/resec/Library/Developer/Xcode/DerivedData/aabb-gflqvuqcsigceaevcvqprvmfrfol/Build/Intermediates/aabb.build/Debug-iphonesimulator/aabb.build/Objects-normal/x86_64/aabb.LinkFileList -Xlinker -rpath -Xlinker @executable_path/Frameworks -mios-simulator-version-min=10.2 -dead_strip -Xlinker -object_path_lto -Xlinker /Users/resec/Library/Developer/Xcode/DerivedData/aabb-gflqvuqcsigceaevcvqprvmfrfol/Build/Intermediates/aabb.build/Debug-iphonesimulator/aabb.build/Objects-normal/x86_64/aabb_lto.o -Xlinker -export_dynamic -Xlinker -no_deduplicate -Xlinker -objc_abi_version -Xlinker 2 -stdlib=libc++ -fobjc-arc -fobjc-link-runtime /project/agent/aabb/gen/sentencepiece/lib/libsentencepiece.a /project/agent/aabb/gen/protobuf_ios/lib/libprotobuf.a -force_load /project/agent/aabb/gen/lib/libtensorflow-core.a -Xlinker -sectcreate -Xlinker __TEXT -Xlinker __entitlements -Xlinker /Users/resec/Library/Developer/Xcode/DerivedData/aabb-gflqvuqcsigceaevcvqprvmfrfol/Build/Intermediates/aabb.build/Debug-iphonesimulator/aabb.build/aabb.app.xcent -lz -framework Accelerate -Xlinker -dependency_info -Xlinker /Users/resec/Library/Developer/Xcode/DerivedData/aabb-gflqvuqcsigceaevcvqprvmfrfol/Build/Intermediates/aabb.build/Debug-iphonesimulator/aabb.build/Objects-normal/x86_64/aabb_dependency_info.dat -o /Users/resec/Library/Developer/Xcode/DerivedData/aabb-gflqvuqcsigceaevcvqprvmfrfol/Build/Products/Debug-iphonesimulator/aabb.app/aabb\r\n\r\nUndefined symbols for architecture x86_64:\r\n  \"nsync::nsync_mu_rlock(nsync::nsync_mu_s_*)\", referenced from:\r\n      tensorflow::ResourceMgr::DoLookup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::type_index, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, tensorflow::ResourceBase**) const in libtensorflow-core.a(resource_mgr.o)\r\n  \"nsync::nsync_mu_runlock(nsync::nsync_mu_s_*)\", referenced from:\r\n      tensorflow::ResourceMgr::DoLookup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::type_index, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, tensorflow::ResourceBase**) const in libtensorflow-core.a(resource_mgr.o)\r\n  \"nsync::nsync_cv_wait(nsync::nsync_cv_s_*, nsync::nsync_mu_s_*)\", referenced from:\r\n      tensorflow::Notification::WaitForNotification() in libtensorflow-core.a(direct_session.o)\r\n      tensorflow::Notification::WaitForNotification() in libtensorflow-core.a(graph_runner.o)\r\n      tensorflow::Notification::WaitForNotification() in libtensorflow-core.a(cancellation.o)\r\n      tensorflow::Notification::WaitForNotification() in libtensorflow-core.a(op_kernel.o)\r\n      tensorflow::Notification::WaitForNotification() in libtensorflow-core.a(reader_base.o)\r\n      tensorflow::Notification::WaitForNotification() in libtensorflow-core.a(rendezvous.o)\r\n      tensorflow::grappler::MeasuringCostEstimator::PredictCosts(tensorflow::GraphDef const&, tensorflow::CostGraphDef*, tensorflow::grappler::Costs*) const in libtensorflow-core.a(measuring_cost_estimator.o)\r\n      ...\r\n  \"nsync::nsync_from_time_point_(std::__1::chrono::time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000l> > >)\", referenced from:\r\n      std::__1::cv_status tensorflow::condition_variable::wait_for<long long, std::__1::ratio<1l, 1000l> >(tensorflow::mutex_lock&, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000l> >) in libtensorflow-core.a(allocator_retry.o)\r\n      std::__1::cv_status tensorflow::condition_variable::wait_for<long long, std::__1::ratio<1l, 1000000l> >(tensorflow::mutex_lock&, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000l> >) in libtensorflow-core.a(direct_session.o)\r\n      std::__1::cv_status tensorflow::condition_variable::wait_for<long long, std::__1::ratio<1l, 1000000l> >(tensorflow::mutex_lock&, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000l> >) in libtensorflow-core.a(rendezvous.o)\r\n      std::__1::cv_status tensorflow::condition_variable::wait_for<long long, std::__1::ratio<1l, 1000000l> >(tensorflow::mutex_lock&, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000l> >) in libtensorflow-core.a(utils.o)\r\n  \"nsync::nsync_mu_unlock(nsync::nsync_mu_s_*)\", referenced from:\r\n      tensorflow::AllocatorRetry::AllocateRaw(std::__1::function<void* (unsigned long, unsigned long, bool)>, int, unsigned long, unsigned long) in libtensorflow-core.a(allocator_retry.o)\r\n      tensorflow::BFCAllocator::AllocateRawInternal(unsigned long, unsigned long, bool) in libtensorflow-core.a(bfc_allocator.o)\r\n      tensorflow::BFCAllocator::DeallocateRaw(void*) in libtensorflow-core.a(bfc_allocator.o)\r\n      tensorflow::BFCAllocator::DeallocateRawInternal(void*) in libtensorflow-core.a(bfc_allocator.o)\r\n      tensorflow::BFCAllocator::AddAllocVisitor(std::__1::function<void (void*, unsigned long)>) in libtensorflow-core.a(bfc_allocator.o)\r\n      tensorflow::BFCAllocator::RequestedSize(void*) in libtensorflow-core.a(bfc_allocator.o)\r\n      tensorflow::BFCAllocator::AllocatedSize(void*) in libtensorflow-core.a(bfc_allocator.o)\r\n      ...\r\n  \"nsync::nsync_cv_wait_with_deadline(nsync::nsync_cv_s_*, nsync::nsync_mu_s_*, timespec, nsync::nsync_note_s_*)\", referenced from:\r\n      std::__1::cv_status tensorflow::condition_variable::wait_for<long long, std::__1::ratio<1l, 1000l> >(tensorflow::mutex_lock&, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000l> >) in libtensorflow-core.a(allocator_retry.o)\r\n      std::__1::cv_status tensorflow::condition_variable::wait_for<long long, std::__1::ratio<1l, 1000000l> >(tensorflow::mutex_lock&, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000l> >) in libtensorflow-core.a(direct_session.o)\r\n      std::__1::cv_status tensorflow::condition_variable::wait_for<long long, std::__1::ratio<1l, 1000000l> >(tensorflow::mutex_lock&, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000l> >) in libtensorflow-core.a(rendezvous.o)\r\n      std::__1::cv_status tensorflow::condition_variable::wait_for<long long, std::__1::ratio<1l, 1000000l> >(tensorflow::mutex_lock&, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000l> >) in libtensorflow-core.a(utils.o)\r\n  \"nsync::nsync_mu_lock(nsync::nsync_mu_s_*)\", referenced from:\r\n      tensorflow::AllocatorRetry::AllocateRaw(std::__1::function<void* (unsigned long, unsigned long, bool)>, int, unsigned long, unsigned long) in libtensorflow-core.a(allocator_retry.o)\r\n      tensorflow::BFCAllocator::AllocateRawInternal(unsigned long, unsigned long, bool) in libtensorflow-core.a(bfc_allocator.o)\r\n      tensorflow::BFCAllocator::DeallocateRaw(void*) in libtensorflow-core.a(bfc_allocator.o)\r\n      tensorflow::BFCAllocator::DeallocateRawInternal(void*) in libtensorflow-core.a(bfc_allocator.o)\r\n      tensorflow::BFCAllocator::AddAllocVisitor(std::__1::function<void (void*, unsigned long)>) in libtensorflow-core.a(bfc_allocator.o)\r\n      tensorflow::BFCAllocator::RequestedSize(void*) in libtensorflow-core.a(bfc_allocator.o)\r\n      tensorflow::BFCAllocator::AllocatedSize(void*) in libtensorflow-core.a(bfc_allocator.o)\r\n      ...\r\n  \"nsync::nsync_cv_broadcast(nsync::nsync_cv_s_*)\", referenced from:\r\n      tensorflow::BFCAllocator::DeallocateRaw(void*) in libtensorflow-core.a(bfc_allocator.o)\r\n      tensorflow::DirectSession::Run(tensorflow::RunOptions const&, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, tensorflow::Tensor>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, tensorflow::Tensor> > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<tensorflow::Tensor, std::__1::allocator<tensorflow::Tensor> >*, tensorflow::RunMetadata*) in libtensorflow-core.a(direct_session.o)\r\n      tensorflow::Notification::Notify() in libtensorflow-core.a(direct_session.o)\r\n      tensorflow::Notification::Notify() in libtensorflow-core.a(graph_runner.o)\r\n      tensorflow::Notification::Notify() in libtensorflow-core.a(cancellation.o)\r\n      tensorflow::Notification::Notify() in libtensorflow-core.a(op_kernel.o)\r\n      tensorflow::Notification::Notify() in libtensorflow-core.a(reader_base.o)\r\n      ...\r\n  \"nsync::nsync_mu_init(nsync::nsync_mu_s_*)\", referenced from:\r\n      tensorflow::AllocatorRetry::AllocatorRetry() in libtensorflow-core.a(allocator_retry.o)\r\n      tensorflow::AllocatorRetry::AllocatorRetry() in libtensorflow-core.a(allocator_retry.o)\r\n      tensorflow::BFCAllocator::BFCAllocator(tensorflow::SubAllocator*, unsigned long, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) in libtensorflow-core.a(bfc_allocator.o)\r\n      tensorflow::(anonymous namespace)::get_device_factory_lock() in libtensorflow-core.a(device_factory.o)\r\n      tensorflow::DirectSession::DirectSession(tensorflow::SessionOptions const&, tensorflow::DeviceMgr const*, tensorflow::DirectSessionFactory*) in libtensorflow-core.a(direct_session.o)\r\n      tensorflow::DirectSession::Run(tensorflow::RunOptions const&, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, tensorflow::Tensor>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, tensorflow::Tensor> > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<tensorflow::Tensor, std::__1::allocator<tensorflow::Tensor> >*, tensorflow::RunMetadata*) in libtensorflow-core.a(direct_session.o)\r\n      tensorflow::DirectSession::PRunSetup(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*) in libtensorflow-core.a(direct_session.o)\r\n      ...\r\n  \"nsync::nsync_cv_init(nsync::nsync_cv_s_*)\", referenced from:\r\n      tensorflow::AllocatorRetry::AllocatorRetry() in libtensorflow-core.a(allocator_retry.o)\r\n      tensorflow::AllocatorRetry::AllocatorRetry() in libtensorflow-core.a(allocator_retry.o)\r\n      tensorflow::DirectSession::RunState::RunState(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, long long, std::__1::vector<tensorflow::Device*, std::__1::allocator<tensorflow::Device*> > const*) in libtensorflow-core.a(direct_session.o)\r\n      tensorflow::Executor::Run(tensorflow::Executor::Args const&) in libtensorflow-core.a(graph_runner.o)\r\n      tensorflow::CancellationManager::CancellationManager() in libtensorflow-core.a(cancellation.o)\r\n      tensorflow::AsyncOpKernel::Compute(tensorflow::OpKernelContext*) in libtensorflow-core.a(op_kernel.o)\r\n      tensorflow::ReaderBase::GetNextWorkLocked(tensorflow::QueueInterface*, tensorflow::OpKernelContext*) const in libtensorflow-core.a(reader_base.o)\r\n      ...\r\nld: symbol(s) not found for architecture x86_64\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n```\r\n\r\nSame case occurred in Android when linking with Tensorflow static lib.\r\n\r\nHowever, the build script is cleaning the built nsync lib across different builds, and the nsync lib is stored in a place that is different than other dependency libs (e.g. protobuf).\r\n\r\nSo Here is to copy the generated libs into gen folder like other lib would be placed when generated, so user or `make` can manage them in a consist way.\r\n\r\nHope these make sense to you, thanks."}