{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/15614", "id": 159999052, "node_id": "MDExOlB1bGxSZXF1ZXN0MTU5OTk5MDUy", "html_url": "https://github.com/tensorflow/tensorflow/pull/15614", "diff_url": "https://github.com/tensorflow/tensorflow/pull/15614.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/15614.patch", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15614", "number": 15614, "state": "closed", "locked": false, "title": "Support Negativo17 Fedora Packaging", "user": {"login": "njwhite", "id": 912123, "node_id": "MDQ6VXNlcjkxMjEyMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/912123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/njwhite", "html_url": "https://github.com/njwhite", "followers_url": "https://api.github.com/users/njwhite/followers", "following_url": "https://api.github.com/users/njwhite/following{/other_user}", "gists_url": "https://api.github.com/users/njwhite/gists{/gist_id}", "starred_url": "https://api.github.com/users/njwhite/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/njwhite/subscriptions", "organizations_url": "https://api.github.com/users/njwhite/orgs", "repos_url": "https://api.github.com/users/njwhite/repos", "events_url": "https://api.github.com/users/njwhite/events{/privacy}", "received_events_url": "https://api.github.com/users/njwhite/received_events", "type": "User", "site_admin": false}, "body": "Support the [Negativo17](https://negativo17.org/nvidia-driver/) Nvidia driver packaging for Fedora. `libdevice` libraries are under `/usr/share/cuda`, includes are under `/usr/include/cuda` and libraries are under `/usr/lib64`. This PR should help #8264 too.\r\n\r\nIn addition, the gcc 5.3 in the Negativo17 repository (installed as `/usr/bin/gcc53`) only has a static non-PIC version of `libgomp.a`, so I have this local patch to force Tensorflow to link to the global (`/usr/lib64`) shared version:\r\n\r\n````diff\r\ndiff --git a/tensorflow/contrib/cmake/tf_stream_executor.cmake b/tensorflow/contrib/cmake/tf_stream_executor.cmake\r\nindex 91ca33f4c4..7719ee096d 100644\r\n--- a/tensorflow/contrib/cmake/tf_stream_executor.cmake\r\n+++ b/tensorflow/contrib/cmake/tf_stream_executor.cmake\r\n@@ -75,7 +75,7 @@ endif()\r\n #list(REMOVE_ITEM tf_stream_executor_srcs ${tf_stream_executor_test_srcs})\r\n \r\n if (NOT WIN32)\r\n-  set (CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -lgomp\")\r\n+  set (CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -l:libgomp.so.1\")\r\n endif (NOT WIN32)\r\n add_library(tf_stream_executor OBJECT ${tf_stream_executor_srcs})\r\n \r\ndiff --git a/third_party/gpus/cuda/BUILD.tpl b/third_party/gpus/cuda/BUILD.tpl\r\nindex b752734a08..0ce972291e 100644\r\n--- a/third_party/gpus/cuda/BUILD.tpl\r\n+++ b/third_party/gpus/cuda/BUILD.tpl\r\n@@ -109,7 +109,7 @@ cc_library(\r\n         \".\",\r\n         \"cuda/include\",\r\n     ],\r\n-    linkopts = [\"-lgomp\"],\r\n+    linkopts = [\"-l:libgomp.so.1\"],\r\n     linkstatic = 1,\r\n     visibility = [\"//visibility:public\"],\r\n )\r\ndiff --git a/third_party/toolchains/gpus/cuda/BUILD b/third_party/toolchains/gpus/cuda/BUILD\r\nindex 39136de99c..6f697919fd 100644\r\n--- a/third_party/toolchains/gpus/cuda/BUILD\r\n+++ b/third_party/toolchains/gpus/cuda/BUILD\r\n@@ -114,7 +114,7 @@ cc_library(\r\n         \".\",\r\n         \"cuda/include\",\r\n     ],\r\n-    linkopts = [\"-lgomp\"],\r\n+    linkopts = [\"-l:libgomp.so.1\"],\r\n     linkstatic = 1,\r\n     visibility = [\"//visibility:public\"],\r\n )\r\n````\r\n\r\nBuilding with clang is a lot more difficult, as it'd require making Tensorflow's CUDA symlink repo look enough like the unpacked tarball to pass [this detection logic](https://github.com/jyknight/llvm-monorepo/blob/6a6c3cae76a0839429c0b552572c46af9b194b86/clang/lib/Driver/ToolChains/Cuda.cpp)!\r\n\r\nMy `.tf_configure.bazelrc` (for FC 26) looks like:\r\n\r\n````\r\nbuild --action_env PYTHON_BIN_PATH=\"/home/nicholas/miniconda3/bin/python\"\r\nbuild --action_env PYTHON_LIB_PATH=\"/home/nicholas/miniconda3/lib/python3.6/site-packages\"\r\nbuild --force_python=py3\r\nbuild --host_force_python=py3\r\nbuild --python_path=\"/home/nicholas/miniconda3/bin/python\"\r\nbuild --define with_jemalloc=true\r\nbuild:gcp --define with_gcp_support=true\r\nbuild:hdfs --define with_hdfs_support=true\r\nbuild:s3 --define with_s3_support=true\r\nbuild:xla --define with_xla_support=true\r\nbuild:gdr --define with_gdr_support=true\r\nbuild:verbs --define with_verbs_support=true\r\nbuild --action_env TF_NEED_OPENCL_SYCL=\"0\"\r\nbuild --action_env TF_NEED_CUDA=\"1\"\r\nbuild --action_env CUDA_TOOLKIT_PATH=\"/usr\"\r\nbuild --action_env TF_CUDA_VERSION=\"8.0\"\r\nbuild --action_env CUDNN_INSTALL_PATH=\"/usr\"\r\nbuild --action_env TF_CUDNN_VERSION=\"7\"\r\nbuild --action_env NVVMIR_LIBRARY_DIR=\"/usr/share/cuda\"\r\nbuild --action_env TF_CUDA_COMPUTE_CAPABILITIES=\"6.1\"\r\nbuild --action_env TF_CUDA_CLANG=\"0\"\r\nbuild --action_env GCC_HOST_COMPILER_PATH=\"/usr/bin/gcc53\"\r\nbuild --config=cuda\r\ntest --config=cuda\r\nbuild --define grpc_no_ares=true\r\nbuild:opt --copt=-march=native\r\nbuild:opt --host_copt=-march=native\r\nbuild:opt --define with_default_optimizations=true\r\nbuild --copt=-DGEMMLOWP_ALLOW_SLOW_SCALAR_FALLBACK\r\nbuild --host_copt=-DGEMMLOWP_ALLOW_SLOW_SCALAR_FALLBACK\r\nbuild:mkl --define using_mkl=true\r\nbuild:mkl -c opt\r\nbuild:monolithic --define framework_shared_object=false\r\nbuild --define framework_shared_object=true\r\nbuild:android --crosstool_top=//external:android/crosstool\r\nbuild:android --host_crosstool_top=@bazel_tools//tools/cpp:toolchain\r\nbuild:android_arm --config=android\r\nbuild:android_arm --cpu=armeabi-v7a\r\nbuild:android_arm64 --config=android\r\nbuild:android_arm64 --cpu=arm64-v8a\r\n````", "created_at": "2017-12-24T13:05:18Z", "updated_at": "2018-01-23T19:21:34Z", "closed_at": "2018-01-23T19:21:34Z", "merged_at": null, "merge_commit_sha": "7157099a33b8cc075cc0db7d4c720bf203f17687", "assignee": null, "assignees": [], "requested_reviewers": [{"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}], "requested_teams": [], "labels": [{"id": 390482148, "node_id": "MDU6TGFiZWwzOTA0ODIxNDg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/awaiting%20review", "name": "awaiting review", "color": "fef2c0", "default": false}, {"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "milestone": null, "commits_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/15614/commits", "review_comments_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/15614/comments", "review_comment_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15614/comments", "statuses_url": "https://api.github.com/repos/tensorflow/tensorflow/statuses/e106b5198d953e352abaae95b10f6bf933cc011d", "head": {"label": "njwhite:negativo17", "ref": "negativo17", "sha": "e106b5198d953e352abaae95b10f6bf933cc011d", "user": {"login": "njwhite", "id": 912123, "node_id": "MDQ6VXNlcjkxMjEyMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/912123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/njwhite", "html_url": "https://github.com/njwhite", "followers_url": "https://api.github.com/users/njwhite/followers", "following_url": "https://api.github.com/users/njwhite/following{/other_user}", "gists_url": "https://api.github.com/users/njwhite/gists{/gist_id}", "starred_url": "https://api.github.com/users/njwhite/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/njwhite/subscriptions", "organizations_url": "https://api.github.com/users/njwhite/orgs", "repos_url": "https://api.github.com/users/njwhite/repos", "events_url": "https://api.github.com/users/njwhite/events{/privacy}", "received_events_url": "https://api.github.com/users/njwhite/received_events", "type": "User", "site_admin": false}, "repo": {"id": 115262693, "node_id": "MDEwOlJlcG9zaXRvcnkxMTUyNjI2OTM=", "name": "tensorflow", "full_name": "njwhite/tensorflow", "private": false, "owner": {"login": "njwhite", "id": 912123, "node_id": "MDQ6VXNlcjkxMjEyMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/912123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/njwhite", "html_url": "https://github.com/njwhite", "followers_url": "https://api.github.com/users/njwhite/followers", "following_url": "https://api.github.com/users/njwhite/following{/other_user}", "gists_url": "https://api.github.com/users/njwhite/gists{/gist_id}", "starred_url": "https://api.github.com/users/njwhite/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/njwhite/subscriptions", "organizations_url": "https://api.github.com/users/njwhite/orgs", "repos_url": "https://api.github.com/users/njwhite/repos", "events_url": "https://api.github.com/users/njwhite/events{/privacy}", "received_events_url": "https://api.github.com/users/njwhite/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/njwhite/tensorflow", "description": "Computation using data flow graphs for scalable machine learning", "fork": true, "url": "https://api.github.com/repos/njwhite/tensorflow", "forks_url": "https://api.github.com/repos/njwhite/tensorflow/forks", "keys_url": "https://api.github.com/repos/njwhite/tensorflow/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/njwhite/tensorflow/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/njwhite/tensorflow/teams", "hooks_url": "https://api.github.com/repos/njwhite/tensorflow/hooks", "issue_events_url": "https://api.github.com/repos/njwhite/tensorflow/issues/events{/number}", "events_url": "https://api.github.com/repos/njwhite/tensorflow/events", "assignees_url": "https://api.github.com/repos/njwhite/tensorflow/assignees{/user}", "branches_url": "https://api.github.com/repos/njwhite/tensorflow/branches{/branch}", "tags_url": "https://api.github.com/repos/njwhite/tensorflow/tags", "blobs_url": "https://api.github.com/repos/njwhite/tensorflow/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/njwhite/tensorflow/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/njwhite/tensorflow/git/refs{/sha}", "trees_url": "https://api.github.com/repos/njwhite/tensorflow/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/njwhite/tensorflow/statuses/{sha}", "languages_url": "https://api.github.com/repos/njwhite/tensorflow/languages", "stargazers_url": "https://api.github.com/repos/njwhite/tensorflow/stargazers", "contributors_url": "https://api.github.com/repos/njwhite/tensorflow/contributors", "subscribers_url": "https://api.github.com/repos/njwhite/tensorflow/subscribers", "subscription_url": "https://api.github.com/repos/njwhite/tensorflow/subscription", "commits_url": "https://api.github.com/repos/njwhite/tensorflow/commits{/sha}", "git_commits_url": "https://api.github.com/repos/njwhite/tensorflow/git/commits{/sha}", "comments_url": "https://api.github.com/repos/njwhite/tensorflow/comments{/number}", "issue_comment_url": "https://api.github.com/repos/njwhite/tensorflow/issues/comments{/number}", "contents_url": "https://api.github.com/repos/njwhite/tensorflow/contents/{+path}", "compare_url": "https://api.github.com/repos/njwhite/tensorflow/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/njwhite/tensorflow/merges", "archive_url": "https://api.github.com/repos/njwhite/tensorflow/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/njwhite/tensorflow/downloads", "issues_url": "https://api.github.com/repos/njwhite/tensorflow/issues{/number}", "pulls_url": "https://api.github.com/repos/njwhite/tensorflow/pulls{/number}", "milestones_url": "https://api.github.com/repos/njwhite/tensorflow/milestones{/number}", "notifications_url": "https://api.github.com/repos/njwhite/tensorflow/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/njwhite/tensorflow/labels{/name}", "releases_url": "https://api.github.com/repos/njwhite/tensorflow/releases{/id}", "deployments_url": "https://api.github.com/repos/njwhite/tensorflow/deployments", "created_at": "2017-12-24T12:53:49Z", "updated_at": "2017-12-24T12:54:22Z", "pushed_at": "2017-12-24T12:59:20Z", "git_url": "git://github.com/njwhite/tensorflow.git", "ssh_url": "git@github.com:njwhite/tensorflow.git", "clone_url": "https://github.com/njwhite/tensorflow.git", "svn_url": "https://github.com/njwhite/tensorflow", "homepage": "http://tensorflow.org", "size": 141689, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "tensorflow:master", "ref": "master", "sha": "26033a1644a9c4a5fbe3170ab2e864b6a4ccd4ca", "user": {"login": "tensorflow", "id": 15658638, "node_id": "MDEyOk9yZ2FuaXphdGlvbjE1NjU4NjM4", "avatar_url": "https://avatars1.githubusercontent.com/u/15658638?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tensorflow", "html_url": "https://github.com/tensorflow", "followers_url": "https://api.github.com/users/tensorflow/followers", "following_url": "https://api.github.com/users/tensorflow/following{/other_user}", "gists_url": "https://api.github.com/users/tensorflow/gists{/gist_id}", "starred_url": "https://api.github.com/users/tensorflow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tensorflow/subscriptions", "organizations_url": "https://api.github.com/users/tensorflow/orgs", "repos_url": "https://api.github.com/users/tensorflow/repos", "events_url": "https://api.github.com/users/tensorflow/events{/privacy}", "received_events_url": "https://api.github.com/users/tensorflow/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 45717250, "node_id": "MDEwOlJlcG9zaXRvcnk0NTcxNzI1MA==", "name": "tensorflow", "full_name": "tensorflow/tensorflow", "private": false, "owner": {"login": "tensorflow", "id": 15658638, "node_id": "MDEyOk9yZ2FuaXphdGlvbjE1NjU4NjM4", "avatar_url": "https://avatars1.githubusercontent.com/u/15658638?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tensorflow", "html_url": "https://github.com/tensorflow", "followers_url": "https://api.github.com/users/tensorflow/followers", "following_url": "https://api.github.com/users/tensorflow/following{/other_user}", "gists_url": "https://api.github.com/users/tensorflow/gists{/gist_id}", "starred_url": "https://api.github.com/users/tensorflow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tensorflow/subscriptions", "organizations_url": "https://api.github.com/users/tensorflow/orgs", "repos_url": "https://api.github.com/users/tensorflow/repos", "events_url": "https://api.github.com/users/tensorflow/events{/privacy}", "received_events_url": "https://api.github.com/users/tensorflow/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/tensorflow/tensorflow", "description": "An Open Source Machine Learning Framework for Everyone", "fork": false, "url": "https://api.github.com/repos/tensorflow/tensorflow", "forks_url": "https://api.github.com/repos/tensorflow/tensorflow/forks", "keys_url": "https://api.github.com/repos/tensorflow/tensorflow/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/tensorflow/tensorflow/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/tensorflow/tensorflow/teams", "hooks_url": "https://api.github.com/repos/tensorflow/tensorflow/hooks", "issue_events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/events{/number}", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/events", "assignees_url": "https://api.github.com/repos/tensorflow/tensorflow/assignees{/user}", "branches_url": "https://api.github.com/repos/tensorflow/tensorflow/branches{/branch}", "tags_url": "https://api.github.com/repos/tensorflow/tensorflow/tags", "blobs_url": "https://api.github.com/repos/tensorflow/tensorflow/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/tensorflow/tensorflow/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/tensorflow/tensorflow/git/refs{/sha}", "trees_url": "https://api.github.com/repos/tensorflow/tensorflow/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/tensorflow/tensorflow/statuses/{sha}", "languages_url": "https://api.github.com/repos/tensorflow/tensorflow/languages", "stargazers_url": "https://api.github.com/repos/tensorflow/tensorflow/stargazers", "contributors_url": "https://api.github.com/repos/tensorflow/tensorflow/contributors", "subscribers_url": "https://api.github.com/repos/tensorflow/tensorflow/subscribers", "subscription_url": "https://api.github.com/repos/tensorflow/tensorflow/subscription", "commits_url": "https://api.github.com/repos/tensorflow/tensorflow/commits{/sha}", "git_commits_url": "https://api.github.com/repos/tensorflow/tensorflow/git/commits{/sha}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/comments{/number}", "issue_comment_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments{/number}", "contents_url": "https://api.github.com/repos/tensorflow/tensorflow/contents/{+path}", "compare_url": "https://api.github.com/repos/tensorflow/tensorflow/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/tensorflow/tensorflow/merges", "archive_url": "https://api.github.com/repos/tensorflow/tensorflow/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/tensorflow/tensorflow/downloads", "issues_url": "https://api.github.com/repos/tensorflow/tensorflow/issues{/number}", "pulls_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls{/number}", "milestones_url": "https://api.github.com/repos/tensorflow/tensorflow/milestones{/number}", "notifications_url": "https://api.github.com/repos/tensorflow/tensorflow/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/labels{/name}", "releases_url": "https://api.github.com/repos/tensorflow/tensorflow/releases{/id}", "deployments_url": "https://api.github.com/repos/tensorflow/tensorflow/deployments", "created_at": "2015-11-07T01:19:20Z", "updated_at": "2018-11-25T01:43:55Z", "pushed_at": "2018-11-24T18:40:19Z", "git_url": "git://github.com/tensorflow/tensorflow.git", "ssh_url": "git@github.com:tensorflow/tensorflow.git", "clone_url": "https://github.com/tensorflow/tensorflow.git", "svn_url": "https://github.com/tensorflow/tensorflow", "homepage": "https://tensorflow.org", "size": 284546, "stargazers_count": 115177, "watchers_count": 115177, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 69948, "mirror_url": null, "archived": false, "open_issues_count": 1760, "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "forks": 69948, "open_issues": 1760, "watchers": 115177, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/15614"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/15614"}, "issue": {"href": "https://api.github.com/repos/tensorflow/tensorflow/issues/15614"}, "comments": {"href": "https://api.github.com/repos/tensorflow/tensorflow/issues/15614/comments"}, "review_comments": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/15614/comments"}, "review_comment": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/15614/commits"}, "statuses": {"href": "https://api.github.com/repos/tensorflow/tensorflow/statuses/e106b5198d953e352abaae95b10f6bf933cc011d"}}, "author_association": "NONE", "body_html": "<p>Support the <a href=\"https://negativo17.org/nvidia-driver/\" rel=\"nofollow\">Negativo17</a> Nvidia driver packaging for Fedora. <code>libdevice</code> libraries are under <code>/usr/share/cuda</code>, includes are under <code>/usr/include/cuda</code> and libraries are under <code>/usr/lib64</code>. This PR should help <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"213250747\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/8264\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/8264/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/8264\">#8264</a> too.</p>\n<p>In addition, the gcc 5.3 in the Negativo17 repository (installed as <code>/usr/bin/gcc53</code>) only has a static non-PIC version of <code>libgomp.a</code>, so I have this local patch to force Tensorflow to link to the global (<code>/usr/lib64</code>) shared version:</p>\n<div class=\"highlight highlight-source-diff\"><pre><span class=\"pl-c1\">diff --git a/tensorflow/contrib/cmake/tf_stream_executor.cmake b/tensorflow/contrib/cmake/tf_stream_executor.cmake</span>\nindex 91ca33f4c4..7719ee096d 100644\n<span class=\"pl-md\">--- a/tensorflow/contrib/cmake/tf_stream_executor.cmake</span>\n<span class=\"pl-mi1\">+++ b/tensorflow/contrib/cmake/tf_stream_executor.cmake</span>\n<span class=\"pl-mdr\">@@ -75,7 +75,7 @@</span> endif()\n #list(REMOVE_ITEM tf_stream_executor_srcs ${tf_stream_executor_test_srcs})\n \n if (NOT WIN32)\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>  set (CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -lgomp\")</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>  set (CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -l:libgomp.so.1\")</span>\n endif (NOT WIN32)\n add_library(tf_stream_executor OBJECT ${tf_stream_executor_srcs})\n \n<span class=\"pl-c1\">diff --git a/third_party/gpus/cuda/BUILD.tpl b/third_party/gpus/cuda/BUILD.tpl</span>\nindex b752734a08..0ce972291e 100644\n<span class=\"pl-md\">--- a/third_party/gpus/cuda/BUILD.tpl</span>\n<span class=\"pl-mi1\">+++ b/third_party/gpus/cuda/BUILD.tpl</span>\n<span class=\"pl-mdr\">@@ -109,7 +109,7 @@</span> cc_library(\n         \".\",\n         \"cuda/include\",\n     ],\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>    linkopts = [\"-lgomp\"],</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>    linkopts = [\"-l:libgomp.so.1\"],</span>\n     linkstatic = 1,\n     visibility = [\"//visibility:public\"],\n )\n<span class=\"pl-c1\">diff --git a/third_party/toolchains/gpus/cuda/BUILD b/third_party/toolchains/gpus/cuda/BUILD</span>\nindex 39136de99c..6f697919fd 100644\n<span class=\"pl-md\">--- a/third_party/toolchains/gpus/cuda/BUILD</span>\n<span class=\"pl-mi1\">+++ b/third_party/toolchains/gpus/cuda/BUILD</span>\n<span class=\"pl-mdr\">@@ -114,7 +114,7 @@</span> cc_library(\n         \".\",\n         \"cuda/include\",\n     ],\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>    linkopts = [\"-lgomp\"],</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>    linkopts = [\"-l:libgomp.so.1\"],</span>\n     linkstatic = 1,\n     visibility = [\"//visibility:public\"],\n )</pre></div>\n<p>Building with clang is a lot more difficult, as it'd require making Tensorflow's CUDA symlink repo look enough like the unpacked tarball to pass <a href=\"https://github.com/jyknight/llvm-monorepo/blob/6a6c3cae76a0839429c0b552572c46af9b194b86/clang/lib/Driver/ToolChains/Cuda.cpp\">this detection logic</a>!</p>\n<p>My <code>.tf_configure.bazelrc</code> (for FC 26) looks like:</p>\n<pre><code>build --action_env PYTHON_BIN_PATH=\"/home/nicholas/miniconda3/bin/python\"\nbuild --action_env PYTHON_LIB_PATH=\"/home/nicholas/miniconda3/lib/python3.6/site-packages\"\nbuild --force_python=py3\nbuild --host_force_python=py3\nbuild --python_path=\"/home/nicholas/miniconda3/bin/python\"\nbuild --define with_jemalloc=true\nbuild:gcp --define with_gcp_support=true\nbuild:hdfs --define with_hdfs_support=true\nbuild:s3 --define with_s3_support=true\nbuild:xla --define with_xla_support=true\nbuild:gdr --define with_gdr_support=true\nbuild:verbs --define with_verbs_support=true\nbuild --action_env TF_NEED_OPENCL_SYCL=\"0\"\nbuild --action_env TF_NEED_CUDA=\"1\"\nbuild --action_env CUDA_TOOLKIT_PATH=\"/usr\"\nbuild --action_env TF_CUDA_VERSION=\"8.0\"\nbuild --action_env CUDNN_INSTALL_PATH=\"/usr\"\nbuild --action_env TF_CUDNN_VERSION=\"7\"\nbuild --action_env NVVMIR_LIBRARY_DIR=\"/usr/share/cuda\"\nbuild --action_env TF_CUDA_COMPUTE_CAPABILITIES=\"6.1\"\nbuild --action_env TF_CUDA_CLANG=\"0\"\nbuild --action_env GCC_HOST_COMPILER_PATH=\"/usr/bin/gcc53\"\nbuild --config=cuda\ntest --config=cuda\nbuild --define grpc_no_ares=true\nbuild:opt --copt=-march=native\nbuild:opt --host_copt=-march=native\nbuild:opt --define with_default_optimizations=true\nbuild --copt=-DGEMMLOWP_ALLOW_SLOW_SCALAR_FALLBACK\nbuild --host_copt=-DGEMMLOWP_ALLOW_SLOW_SCALAR_FALLBACK\nbuild:mkl --define using_mkl=true\nbuild:mkl -c opt\nbuild:monolithic --define framework_shared_object=false\nbuild --define framework_shared_object=true\nbuild:android --crosstool_top=//external:android/crosstool\nbuild:android --host_crosstool_top=@bazel_tools//tools/cpp:toolchain\nbuild:android_arm --config=android\nbuild:android_arm --cpu=armeabi-v7a\nbuild:android_arm64 --config=android\nbuild:android_arm64 --cpu=arm64-v8a\n</code></pre>", "body_text": "Support the Negativo17 Nvidia driver packaging for Fedora. libdevice libraries are under /usr/share/cuda, includes are under /usr/include/cuda and libraries are under /usr/lib64. This PR should help #8264 too.\nIn addition, the gcc 5.3 in the Negativo17 repository (installed as /usr/bin/gcc53) only has a static non-PIC version of libgomp.a, so I have this local patch to force Tensorflow to link to the global (/usr/lib64) shared version:\ndiff --git a/tensorflow/contrib/cmake/tf_stream_executor.cmake b/tensorflow/contrib/cmake/tf_stream_executor.cmake\nindex 91ca33f4c4..7719ee096d 100644\n--- a/tensorflow/contrib/cmake/tf_stream_executor.cmake\n+++ b/tensorflow/contrib/cmake/tf_stream_executor.cmake\n@@ -75,7 +75,7 @@ endif()\n #list(REMOVE_ITEM tf_stream_executor_srcs ${tf_stream_executor_test_srcs})\n \n if (NOT WIN32)\n-  set (CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -lgomp\")\n+  set (CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -l:libgomp.so.1\")\n endif (NOT WIN32)\n add_library(tf_stream_executor OBJECT ${tf_stream_executor_srcs})\n \ndiff --git a/third_party/gpus/cuda/BUILD.tpl b/third_party/gpus/cuda/BUILD.tpl\nindex b752734a08..0ce972291e 100644\n--- a/third_party/gpus/cuda/BUILD.tpl\n+++ b/third_party/gpus/cuda/BUILD.tpl\n@@ -109,7 +109,7 @@ cc_library(\n         \".\",\n         \"cuda/include\",\n     ],\n-    linkopts = [\"-lgomp\"],\n+    linkopts = [\"-l:libgomp.so.1\"],\n     linkstatic = 1,\n     visibility = [\"//visibility:public\"],\n )\ndiff --git a/third_party/toolchains/gpus/cuda/BUILD b/third_party/toolchains/gpus/cuda/BUILD\nindex 39136de99c..6f697919fd 100644\n--- a/third_party/toolchains/gpus/cuda/BUILD\n+++ b/third_party/toolchains/gpus/cuda/BUILD\n@@ -114,7 +114,7 @@ cc_library(\n         \".\",\n         \"cuda/include\",\n     ],\n-    linkopts = [\"-lgomp\"],\n+    linkopts = [\"-l:libgomp.so.1\"],\n     linkstatic = 1,\n     visibility = [\"//visibility:public\"],\n )\nBuilding with clang is a lot more difficult, as it'd require making Tensorflow's CUDA symlink repo look enough like the unpacked tarball to pass this detection logic!\nMy .tf_configure.bazelrc (for FC 26) looks like:\nbuild --action_env PYTHON_BIN_PATH=\"/home/nicholas/miniconda3/bin/python\"\nbuild --action_env PYTHON_LIB_PATH=\"/home/nicholas/miniconda3/lib/python3.6/site-packages\"\nbuild --force_python=py3\nbuild --host_force_python=py3\nbuild --python_path=\"/home/nicholas/miniconda3/bin/python\"\nbuild --define with_jemalloc=true\nbuild:gcp --define with_gcp_support=true\nbuild:hdfs --define with_hdfs_support=true\nbuild:s3 --define with_s3_support=true\nbuild:xla --define with_xla_support=true\nbuild:gdr --define with_gdr_support=true\nbuild:verbs --define with_verbs_support=true\nbuild --action_env TF_NEED_OPENCL_SYCL=\"0\"\nbuild --action_env TF_NEED_CUDA=\"1\"\nbuild --action_env CUDA_TOOLKIT_PATH=\"/usr\"\nbuild --action_env TF_CUDA_VERSION=\"8.0\"\nbuild --action_env CUDNN_INSTALL_PATH=\"/usr\"\nbuild --action_env TF_CUDNN_VERSION=\"7\"\nbuild --action_env NVVMIR_LIBRARY_DIR=\"/usr/share/cuda\"\nbuild --action_env TF_CUDA_COMPUTE_CAPABILITIES=\"6.1\"\nbuild --action_env TF_CUDA_CLANG=\"0\"\nbuild --action_env GCC_HOST_COMPILER_PATH=\"/usr/bin/gcc53\"\nbuild --config=cuda\ntest --config=cuda\nbuild --define grpc_no_ares=true\nbuild:opt --copt=-march=native\nbuild:opt --host_copt=-march=native\nbuild:opt --define with_default_optimizations=true\nbuild --copt=-DGEMMLOWP_ALLOW_SLOW_SCALAR_FALLBACK\nbuild --host_copt=-DGEMMLOWP_ALLOW_SLOW_SCALAR_FALLBACK\nbuild:mkl --define using_mkl=true\nbuild:mkl -c opt\nbuild:monolithic --define framework_shared_object=false\nbuild --define framework_shared_object=true\nbuild:android --crosstool_top=//external:android/crosstool\nbuild:android --host_crosstool_top=@bazel_tools//tools/cpp:toolchain\nbuild:android_arm --config=android\nbuild:android_arm --cpu=armeabi-v7a\nbuild:android_arm64 --config=android\nbuild:android_arm64 --cpu=arm64-v8a", "merged": false, "mergeable": false, "rebaseable": false, "mergeable_state": "dirty", "merged_by": null, "comments": 5, "review_comments": 0, "maintainer_can_modify": false, "commits": 1, "additions": 89, "deletions": 3, "changed_files": 2}