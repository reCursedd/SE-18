{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/425465622", "html_url": "https://github.com/tensorflow/tensorflow/issues/20517#issuecomment-425465622", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20517", "id": 425465622, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTQ2NTYyMg==", "user": {"login": "daa", "id": 167235, "node_id": "MDQ6VXNlcjE2NzIzNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/167235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daa", "html_url": "https://github.com/daa", "followers_url": "https://api.github.com/users/daa/followers", "following_url": "https://api.github.com/users/daa/following{/other_user}", "gists_url": "https://api.github.com/users/daa/gists{/gist_id}", "starred_url": "https://api.github.com/users/daa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daa/subscriptions", "organizations_url": "https://api.github.com/users/daa/orgs", "repos_url": "https://api.github.com/users/daa/repos", "events_url": "https://api.github.com/users/daa/events{/privacy}", "received_events_url": "https://api.github.com/users/daa/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-28T15:04:38Z", "updated_at": "2018-09-28T15:04:38Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7946809\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gunan\">@gunan</a></p>\n<blockquote>\n<p>However, python 3.7 is not straightforward to build on ubuntu 14, since it needs updated versions of a few libraries that come with ubuntu.</p>\n</blockquote>\n<p>I'd like to share my experience in building Python-3.7 on Ubuntu 12, and I hope it will help if you haven't solved that issue yet. I build using following configure flags:</p>\n<pre><code>    --prefix=... \\\n    --enable-ipv6 \\\n    --with-dbmliborder=gdbm \\\n    --with-system-expat \\\n    --with-computed-gotos \\\n    --with-system-ffi \\\n    --with-ensurepip=no\n</code></pre>\n<p>And the only system library too outdated for Python was OpenSSL, thus <code>ssl</code> module cannot be built. To solve the issue I decided to build OpenSSL from source and link it statically using <code>cryptography</code> recipe (<a href=\"https://cryptography.io/en/latest/installation/#static-wheels\" rel=\"nofollow\">https://cryptography.io/en/latest/installation/#static-wheels</a>):</p>\n<ul>\n<li>build properly configured OpenSSL with only static libs:</li>\n</ul>\n<pre><code>OPENSSL_VERSION=1.0.2p\nwget https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz\ntar xf openssl-${OPENSSL_VERSION}.tar.gz\ncd openssl-${OPENSSL_VERSION}\n./config no-shared no-ssl2 no-ssl3 -fPIC --prefix=$(pwd)/_openssl\nmake &amp;&amp; make install\n</code></pre>\n<ul>\n<li>build Python using that OpenSSL by passing flag to <code>configure</code> script: <code>--with-openssl=$(pwd)/openssl-${OPENSSL_VERSION}/_openssl</code>, so <code>configure</code> invocation looks like:</li>\n</ul>\n<pre><code>./configure\n    --prefix=... \\\n    --enable-ipv6 \\\n    --with-dbmliborder=gdbm \\\n    --with-system-expat \\\n    --with-computed-gotos \\\n    --with-system-ffi \\\n    --with-ensurepip=no \\\n    --with-openssl=$(pwd)/openssl-${OPENSSL_VERSION}/_openssl\n</code></pre>\n<p>Besides outdated OpenSSL issue I haven't met problems building Python-3.7 on old Ubuntu, I tested my build and it seems to work properly, tests from Python source pass.</p>", "body_text": "@gunan\n\nHowever, python 3.7 is not straightforward to build on ubuntu 14, since it needs updated versions of a few libraries that come with ubuntu.\n\nI'd like to share my experience in building Python-3.7 on Ubuntu 12, and I hope it will help if you haven't solved that issue yet. I build using following configure flags:\n    --prefix=... \\\n    --enable-ipv6 \\\n    --with-dbmliborder=gdbm \\\n    --with-system-expat \\\n    --with-computed-gotos \\\n    --with-system-ffi \\\n    --with-ensurepip=no\n\nAnd the only system library too outdated for Python was OpenSSL, thus ssl module cannot be built. To solve the issue I decided to build OpenSSL from source and link it statically using cryptography recipe (https://cryptography.io/en/latest/installation/#static-wheels):\n\nbuild properly configured OpenSSL with only static libs:\n\nOPENSSL_VERSION=1.0.2p\nwget https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz\ntar xf openssl-${OPENSSL_VERSION}.tar.gz\ncd openssl-${OPENSSL_VERSION}\n./config no-shared no-ssl2 no-ssl3 -fPIC --prefix=$(pwd)/_openssl\nmake && make install\n\n\nbuild Python using that OpenSSL by passing flag to configure script: --with-openssl=$(pwd)/openssl-${OPENSSL_VERSION}/_openssl, so configure invocation looks like:\n\n./configure\n    --prefix=... \\\n    --enable-ipv6 \\\n    --with-dbmliborder=gdbm \\\n    --with-system-expat \\\n    --with-computed-gotos \\\n    --with-system-ffi \\\n    --with-ensurepip=no \\\n    --with-openssl=$(pwd)/openssl-${OPENSSL_VERSION}/_openssl\n\nBesides outdated OpenSSL issue I haven't met problems building Python-3.7 on old Ubuntu, I tested my build and it seems to work properly, tests from Python source pass.", "body": "@gunan \r\n> However, python 3.7 is not straightforward to build on ubuntu 14, since it needs updated versions of a few libraries that come with ubuntu.\r\n\r\nI'd like to share my experience in building Python-3.7 on Ubuntu 12, and I hope it will help if you haven't solved that issue yet. I build using following configure flags:\r\n```\r\n    --prefix=... \\\r\n    --enable-ipv6 \\\r\n    --with-dbmliborder=gdbm \\\r\n    --with-system-expat \\\r\n    --with-computed-gotos \\\r\n    --with-system-ffi \\\r\n    --with-ensurepip=no\r\n```\r\nAnd the only system library too outdated for Python was OpenSSL, thus ``ssl`` module cannot be built. To solve the issue I decided to build OpenSSL from source and link it statically using ``cryptography`` recipe (https://cryptography.io/en/latest/installation/#static-wheels):\r\n- build properly configured OpenSSL with only static libs:\r\n```\r\nOPENSSL_VERSION=1.0.2p\r\nwget https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz\r\ntar xf openssl-${OPENSSL_VERSION}.tar.gz\r\ncd openssl-${OPENSSL_VERSION}\r\n./config no-shared no-ssl2 no-ssl3 -fPIC --prefix=$(pwd)/_openssl\r\nmake && make install\r\n```\r\n- build Python using that OpenSSL by passing flag to ``configure`` script: ``--with-openssl=$(pwd)/openssl-${OPENSSL_VERSION}/_openssl``, so ``configure`` invocation looks like:\r\n```\r\n./configure\r\n    --prefix=... \\\r\n    --enable-ipv6 \\\r\n    --with-dbmliborder=gdbm \\\r\n    --with-system-expat \\\r\n    --with-computed-gotos \\\r\n    --with-system-ffi \\\r\n    --with-ensurepip=no \\\r\n    --with-openssl=$(pwd)/openssl-${OPENSSL_VERSION}/_openssl\r\n```\r\n\r\nBesides outdated OpenSSL issue I haven't met problems building Python-3.7 on old Ubuntu, I tested my build and it seems to work properly, tests from Python source pass."}