{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/306832908", "html_url": "https://github.com/tensorflow/tensorflow/pull/10351#issuecomment-306832908", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10351", "id": 306832908, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjgzMjkwOA==", "user": {"login": "cwhipkey", "id": 17578177, "node_id": "MDQ6VXNlcjE3NTc4MTc3", "avatar_url": "https://avatars0.githubusercontent.com/u/17578177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cwhipkey", "html_url": "https://github.com/cwhipkey", "followers_url": "https://api.github.com/users/cwhipkey/followers", "following_url": "https://api.github.com/users/cwhipkey/following{/other_user}", "gists_url": "https://api.github.com/users/cwhipkey/gists{/gist_id}", "starred_url": "https://api.github.com/users/cwhipkey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cwhipkey/subscriptions", "organizations_url": "https://api.github.com/users/cwhipkey/orgs", "repos_url": "https://api.github.com/users/cwhipkey/repos", "events_url": "https://api.github.com/users/cwhipkey/events{/privacy}", "received_events_url": "https://api.github.com/users/cwhipkey/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-07T15:34:00Z", "updated_at": "2017-06-07T15:34:00Z", "author_association": "MEMBER", "body_html": "<p>Regarding why there are two macros, some of it is historical:</p>\n<ul>\n<li>originally, on mobile platforms, a reduced set of types were supported (see register_types.h, for example).</li>\n<li>then we added selective registration support via ops_to_register.h</li>\n<li>but then, when using selective registration, you might as well include all kernel types, since unused kernels are stripped.  So SUPPORT_SELECTIVE_REGISTRATION was added.</li>\n</ul>\n<p>Probably we could make SELECTIVE_REGISTRATION imply SUPPORT_SELECTIVE_REGISTRATION...</p>\n<p>When building the binary in pieces (like bazel would), it may be useful to have SUPPORT_SELECTIVE_REGISTRATION available as a standalone option - so that the framework+core kernels can all be built with that macro, without requiring passing SELECTIVE_REGISTRATION+including a header.  Although that can probably be eliminated as well, and just use SELECTIVE_REGISTRATION there.</p>", "body_text": "Regarding why there are two macros, some of it is historical:\n\noriginally, on mobile platforms, a reduced set of types were supported (see register_types.h, for example).\nthen we added selective registration support via ops_to_register.h\nbut then, when using selective registration, you might as well include all kernel types, since unused kernels are stripped.  So SUPPORT_SELECTIVE_REGISTRATION was added.\n\nProbably we could make SELECTIVE_REGISTRATION imply SUPPORT_SELECTIVE_REGISTRATION...\nWhen building the binary in pieces (like bazel would), it may be useful to have SUPPORT_SELECTIVE_REGISTRATION available as a standalone option - so that the framework+core kernels can all be built with that macro, without requiring passing SELECTIVE_REGISTRATION+including a header.  Although that can probably be eliminated as well, and just use SELECTIVE_REGISTRATION there.", "body": "Regarding why there are two macros, some of it is historical:\r\n- originally, on mobile platforms, a reduced set of types were supported (see register_types.h, for example).\r\n- then we added selective registration support via ops_to_register.h\r\n- but then, when using selective registration, you might as well include all kernel types, since unused kernels are stripped.  So SUPPORT_SELECTIVE_REGISTRATION was added.\r\n\r\nProbably we could make SELECTIVE_REGISTRATION imply SUPPORT_SELECTIVE_REGISTRATION...\r\n\r\nWhen building the binary in pieces (like bazel would), it may be useful to have SUPPORT_SELECTIVE_REGISTRATION available as a standalone option - so that the framework+core kernels can all be built with that macro, without requiring passing SELECTIVE_REGISTRATION+including a header.  Although that can probably be eliminated as well, and just use SELECTIVE_REGISTRATION there."}