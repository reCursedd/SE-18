{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17170", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17170/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17170/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17170/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17170", "id": 299037561, "node_id": "MDU6SXNzdWUyOTkwMzc1NjE=", "number": 17170, "title": "Provide a way to convert feature columns to tensors", "user": {"login": "superbobry", "id": 185856, "node_id": "MDQ6VXNlcjE4NTg1Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/185856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/superbobry", "html_url": "https://github.com/superbobry", "followers_url": "https://api.github.com/users/superbobry/followers", "following_url": "https://api.github.com/users/superbobry/following{/other_user}", "gists_url": "https://api.github.com/users/superbobry/gists{/gist_id}", "starred_url": "https://api.github.com/users/superbobry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/superbobry/subscriptions", "organizations_url": "https://api.github.com/users/superbobry/orgs", "repos_url": "https://api.github.com/users/superbobry/repos", "events_url": "https://api.github.com/users/superbobry/events{/privacy}", "received_events_url": "https://api.github.com/users/superbobry/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ispirmustafa", "id": 19293677, "node_id": "MDQ6VXNlcjE5MjkzNjc3", "avatar_url": "https://avatars1.githubusercontent.com/u/19293677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ispirmustafa", "html_url": "https://github.com/ispirmustafa", "followers_url": "https://api.github.com/users/ispirmustafa/followers", "following_url": "https://api.github.com/users/ispirmustafa/following{/other_user}", "gists_url": "https://api.github.com/users/ispirmustafa/gists{/gist_id}", "starred_url": "https://api.github.com/users/ispirmustafa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ispirmustafa/subscriptions", "organizations_url": "https://api.github.com/users/ispirmustafa/orgs", "repos_url": "https://api.github.com/users/ispirmustafa/repos", "events_url": "https://api.github.com/users/ispirmustafa/events{/privacy}", "received_events_url": "https://api.github.com/users/ispirmustafa/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ispirmustafa", "id": 19293677, "node_id": "MDQ6VXNlcjE5MjkzNjc3", "avatar_url": "https://avatars1.githubusercontent.com/u/19293677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ispirmustafa", "html_url": "https://github.com/ispirmustafa", "followers_url": "https://api.github.com/users/ispirmustafa/followers", "following_url": "https://api.github.com/users/ispirmustafa/following{/other_user}", "gists_url": "https://api.github.com/users/ispirmustafa/gists{/gist_id}", "starred_url": "https://api.github.com/users/ispirmustafa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ispirmustafa/subscriptions", "organizations_url": "https://api.github.com/users/ispirmustafa/orgs", "repos_url": "https://api.github.com/users/ispirmustafa/repos", "events_url": "https://api.github.com/users/ispirmustafa/events{/privacy}", "received_events_url": "https://api.github.com/users/ispirmustafa/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2018-02-21T16:27:30Z", "updated_at": "2018-04-23T19:31:51Z", "closed_at": "2018-04-23T19:31:51Z", "author_association": "MEMBER", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: N/A</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: N/A</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: N/A</li>\n<li><strong>TensorFlow version (use command below)</strong>: N/A</li>\n<li><strong>Python version</strong>: N/A</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>The only way to convert a list of feature columns to tensors in TensorFlow 1.5 is by passing them to an <a href=\"https://www.tensorflow.org/api_docs/python/tf/feature_column/input_layer\" rel=\"nofollow\"><code>input_layer</code></a>. This would do the per-column conversion and concatenate the resulting tensors. While useful in some cases, this approach is a bit limiting, as it does not allow to</p>\n<ul>\n<li>concatenate on an axis different than <code>axis=1</code> (think sequence data),</li>\n<li>extract tensors for the individual columns.</li>\n</ul>\n<p>Both limitations can be mitigated by introducing a new public function converting from <code>_FeatureColumn</code> to <code>Tensor</code> (or even from a list of feature columns to a list of tensors). In the latter case, it could just be <a href=\"https://github.com/tensorflow/tensorflow/blob/17103a0b8dfdd7abd2b0dcb14f905aba879ff3a4/tensorflow/python/feature_column/feature_column.py#L164\"><code>_internal_input_layer</code></a> without the concatenation in the end.</p>\n<p>What do you think? If this sounds good, I can submit a PR.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): N/A\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): N/A\nTensorFlow installed from (source or binary): N/A\nTensorFlow version (use command below): N/A\nPython version: N/A\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce:\n\nDescribe the problem\nThe only way to convert a list of feature columns to tensors in TensorFlow 1.5 is by passing them to an input_layer. This would do the per-column conversion and concatenate the resulting tensors. While useful in some cases, this approach is a bit limiting, as it does not allow to\n\nconcatenate on an axis different than axis=1 (think sequence data),\nextract tensors for the individual columns.\n\nBoth limitations can be mitigated by introducing a new public function converting from _FeatureColumn to Tensor (or even from a list of feature columns to a list of tensors). In the latter case, it could just be _internal_input_layer without the concatenation in the end.\nWhat do you think? If this sounds good, I can submit a PR.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: N/A\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: N/A\r\n- **TensorFlow installed from (source or binary)**: N/A\r\n- **TensorFlow version (use command below)**: N/A\r\n- **Python version**: N/A\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\n\r\nThe only way to convert a list of feature columns to tensors in TensorFlow 1.5 is by passing them to an [`input_layer`](https://www.tensorflow.org/api_docs/python/tf/feature_column/input_layer). This would do the per-column conversion and concatenate the resulting tensors. While useful in some cases, this approach is a bit limiting, as it does not allow to \r\n\r\n* concatenate on an axis different than `axis=1` (think sequence data),\r\n* extract tensors for the individual columns. \r\n\r\nBoth limitations can be mitigated by introducing a new public function converting from `_FeatureColumn` to `Tensor` (or even from a list of feature columns to a list of tensors). In the latter case, it could just be [`_internal_input_layer`](https://github.com/tensorflow/tensorflow/blob/17103a0b8dfdd7abd2b0dcb14f905aba879ff3a4/tensorflow/python/feature_column/feature_column.py#L164) without the concatenation in the end. \r\n\r\nWhat do you think? If this sounds good, I can submit a PR."}