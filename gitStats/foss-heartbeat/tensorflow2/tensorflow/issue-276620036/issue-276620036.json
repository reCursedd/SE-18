{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14866", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14866/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14866/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14866/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14866", "id": 276620036, "node_id": "MDU6SXNzdWUyNzY2MjAwMzY=", "number": 14866, "title": "If I import cv2, \" tf.global_variables_initializer() \" will be very slow.", "user": {"login": "YaoZhongtian", "id": 25288986, "node_id": "MDQ6VXNlcjI1Mjg4OTg2", "avatar_url": "https://avatars3.githubusercontent.com/u/25288986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YaoZhongtian", "html_url": "https://github.com/YaoZhongtian", "followers_url": "https://api.github.com/users/YaoZhongtian/followers", "following_url": "https://api.github.com/users/YaoZhongtian/following{/other_user}", "gists_url": "https://api.github.com/users/YaoZhongtian/gists{/gist_id}", "starred_url": "https://api.github.com/users/YaoZhongtian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YaoZhongtian/subscriptions", "organizations_url": "https://api.github.com/users/YaoZhongtian/orgs", "repos_url": "https://api.github.com/users/YaoZhongtian/repos", "events_url": "https://api.github.com/users/YaoZhongtian/events{/privacy}", "received_events_url": "https://api.github.com/users/YaoZhongtian/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-24T13:40:56Z", "updated_at": "2017-11-28T22:16:39Z", "closed_at": "2017-11-28T22:16:37Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nYes.</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nLinux Ubuntu 16.04.3</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\nBinary.</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\n1.3.0</li>\n<li><strong>Python version</strong>:<br>\n2.7.12</li>\n<li><strong>CUDA/cuDNN version</strong>:<br>\nCUDA Version 8.0.61</li>\n<li><strong>GPU model and memory</strong>:<br>\nNVIDIA GTX 1080Ti  12G</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>If I import cv2, \" tf.global_variables_initializer() \" will be very slow, about 143s. You can run my test code below, when \" import cv2 \" is commented out, the time is about 5s. The version of opencv is 2.4.13.4.</p>\n<h3>Source code / logs</h3>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">import</span> time\n<span class=\"pl-k\">import</span> cv2\n\nweight <span class=\"pl-k\">=</span> tf.Variable(tf.truncated_normal([<span class=\"pl-c1\">5</span>,<span class=\"pl-c1\">5</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">32</span>], <span class=\"pl-v\">stddev</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0.1</span>))\n\not <span class=\"pl-k\">=</span> time.time()\ninit_op <span class=\"pl-k\">=</span> tf.global_variables_initializer()\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    sess.run(init_op)\nnt <span class=\"pl-k\">=</span> time.time()\n<span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>time: <span class=\"pl-c1\">{<span class=\"pl-k\">:.3f</span>}</span><span class=\"pl-pds\">'</span></span>.format(nt<span class=\"pl-k\">-</span>ot))</pre></div>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nYes.\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nLinux Ubuntu 16.04.3\nTensorFlow installed from (source or binary):\nBinary.\nTensorFlow version (use command below):\n1.3.0\nPython version:\n2.7.12\nCUDA/cuDNN version:\nCUDA Version 8.0.61\nGPU model and memory:\nNVIDIA GTX 1080Ti  12G\n\nDescribe the problem\nIf I import cv2, \" tf.global_variables_initializer() \" will be very slow, about 143s. You can run my test code below, when \" import cv2 \" is commented out, the time is about 5s. The version of opencv is 2.4.13.4.\nSource code / logs\nimport tensorflow as tf\nimport time\nimport cv2\n\nweight = tf.Variable(tf.truncated_normal([5,5,1,32], stddev=0.1))\n\not = time.time()\ninit_op = tf.global_variables_initializer()\nwith tf.Session() as sess:\n    sess.run(init_op)\nnt = time.time()\nprint('time: {:.3f}'.format(nt-ot))", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nLinux Ubuntu 16.04.3\r\n- **TensorFlow installed from (source or binary)**:\r\nBinary.\r\n- **TensorFlow version (use command below)**:\r\n1.3.0\r\n- **Python version**: \r\n2.7.12\r\n- **CUDA/cuDNN version**:\r\nCUDA Version 8.0.61\r\n- **GPU model and memory**:\r\nNVIDIA GTX 1080Ti  12G\r\n\r\n### Describe the problem\r\nIf I import cv2, \" tf.global_variables_initializer() \" will be very slow, about 143s. You can run my test code below, when \" import cv2 \" is commented out, the time is about 5s. The version of opencv is 2.4.13.4.\r\n\r\n### Source code / logs\r\n```Python\r\nimport tensorflow as tf\r\nimport time\r\nimport cv2\r\n\r\nweight = tf.Variable(tf.truncated_normal([5,5,1,32], stddev=0.1))\r\n\r\not = time.time()\r\ninit_op = tf.global_variables_initializer()\r\nwith tf.Session() as sess:\r\n    sess.run(init_op)\r\nnt = time.time()\r\nprint('time: {:.3f}'.format(nt-ot))\r\n```"}