{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19071", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19071/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19071/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19071/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19071", "id": 320127054, "node_id": "MDU6SXNzdWUzMjAxMjcwNTQ=", "number": 19071, "title": "MobileNet v2 vs MobileNet v1 - bug with retrain.py and label_image.py examples from Tensorflow for Poets v2 transfer learning example!", "user": {"login": "jgberg", "id": 270838, "node_id": "MDQ6VXNlcjI3MDgzOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/270838?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgberg", "html_url": "https://github.com/jgberg", "followers_url": "https://api.github.com/users/jgberg/followers", "following_url": "https://api.github.com/users/jgberg/following{/other_user}", "gists_url": "https://api.github.com/users/jgberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgberg/subscriptions", "organizations_url": "https://api.github.com/users/jgberg/orgs", "repos_url": "https://api.github.com/users/jgberg/repos", "events_url": "https://api.github.com/users/jgberg/events{/privacy}", "received_events_url": "https://api.github.com/users/jgberg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "petewarden", "id": 161459, "node_id": "MDQ6VXNlcjE2MTQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/161459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petewarden", "html_url": "https://github.com/petewarden", "followers_url": "https://api.github.com/users/petewarden/followers", "following_url": "https://api.github.com/users/petewarden/following{/other_user}", "gists_url": "https://api.github.com/users/petewarden/gists{/gist_id}", "starred_url": "https://api.github.com/users/petewarden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petewarden/subscriptions", "organizations_url": "https://api.github.com/users/petewarden/orgs", "repos_url": "https://api.github.com/users/petewarden/repos", "events_url": "https://api.github.com/users/petewarden/events{/privacy}", "received_events_url": "https://api.github.com/users/petewarden/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "petewarden", "id": 161459, "node_id": "MDQ6VXNlcjE2MTQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/161459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petewarden", "html_url": "https://github.com/petewarden", "followers_url": "https://api.github.com/users/petewarden/followers", "following_url": "https://api.github.com/users/petewarden/following{/other_user}", "gists_url": "https://api.github.com/users/petewarden/gists{/gist_id}", "starred_url": "https://api.github.com/users/petewarden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petewarden/subscriptions", "organizations_url": "https://api.github.com/users/petewarden/orgs", "repos_url": "https://api.github.com/users/petewarden/repos", "events_url": "https://api.github.com/users/petewarden/events{/privacy}", "received_events_url": "https://api.github.com/users/petewarden/received_events", "type": "User", "site_admin": false}, {"login": "achowdhery", "id": 4723042, "node_id": "MDQ6VXNlcjQ3MjMwNDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4723042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/achowdhery", "html_url": "https://github.com/achowdhery", "followers_url": "https://api.github.com/users/achowdhery/followers", "following_url": "https://api.github.com/users/achowdhery/following{/other_user}", "gists_url": "https://api.github.com/users/achowdhery/gists{/gist_id}", "starred_url": "https://api.github.com/users/achowdhery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/achowdhery/subscriptions", "organizations_url": "https://api.github.com/users/achowdhery/orgs", "repos_url": "https://api.github.com/users/achowdhery/repos", "events_url": "https://api.github.com/users/achowdhery/events{/privacy}", "received_events_url": "https://api.github.com/users/achowdhery/received_events", "type": "User", "site_admin": false}, {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 12, "created_at": "2018-05-04T01:01:52Z", "updated_at": "2018-11-22T18:56:34Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<p>We have reproduced this on Mac OSX, a windows box running a Linux VM, and on a Canadian research cluster all with the same result.</p>\n<ul>\n<li>mac was v1.7 recompiled to take advantage of CPU: ('v1.7.0-1321-gd82b2f71b6', '1.7.0')</li>\n<li>stock tensorflow code and examples</li>\n</ul>\n<h3>Description</h3>\n<p>We are using Tensorflow v1.7.  We train <strong>MobileNet v2</strong> (from tfHub - feature/1 version) by running the code Tensorflow provided in <strong>retrain.py</strong> (from examples). When training is done the validation set is run (for us about 700 images) and it reports say <strong>80% validation accuracy</strong>.   Then it saves the model.  We load the saved model using <strong>label_image.py</strong> (also from tensorflow examples) and see how it's doing on a small validation set that we've withheld.  Instead of seeing the validation of 80% roughly confirmed, we instead see a validation accuracy of about 35%.  The clincher is that when use the same code and data and instead use <strong>MobileNet v1</strong> we do see that training validation is confirmed by validation reported using label_image.py .</p>\n<p>When calling label_image we change the input_layer from \"input\" for MobileNet v1 to \"Placeholder\" for MobileNet v2</p>\n<p>Can you confirm this? What is going on?</p>\n<h3>Logs:</h3>\n<p>From retrain.py:<br>\n...<br>\nINFO:tensorflow:Initialize variable module/MobilenetV2/expanded_conv_9/project/weights:0 from checkpoint /var/folders/x8/f10sgc052q75r1thg5hlw4dm0000gn/T/tfhub_modules/33f8428fe83945b8b3d46d79168a0e2818e65e8a/variables/variables with MobilenetV2/expanded_conv_9/project/weights<br>\nINFO:tensorflow:Restoring parameters from /tmp/_retrain_checkpoint<br>\nINFO:tensorflow:Final test accuracy = 74.0% (N=696)<br>\n...<br>\nthen from using label_image.py:</p>\n<p>it gets 35% is correct</p>\n<p>Have I written custom code: no<br>\nOS Platform and Distribution: macosx latest<br>\nTensorFlow installed from: pip<br>\nTensorFlow version: 1.7<br>\nBazel version: Build label: 0.11.1-homebrew<br>\nBuild target: bazel-out/darwin-<br>\nopt/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar<br>\nBuild time: Sun May 31 16:57:39 +50150 (1520426998659)<br>\nBuild timestamp: 1520426998659<br>\nBuild timestamp as int: 1520426998659</p>\n<p>CUDA/cuDNN version: N/A<br>\nGPU model and memory: N/A<br>\nExact command to reproduce: see above</p>", "body_text": "System information\nWe have reproduced this on Mac OSX, a windows box running a Linux VM, and on a Canadian research cluster all with the same result.\n\nmac was v1.7 recompiled to take advantage of CPU: ('v1.7.0-1321-gd82b2f71b6', '1.7.0')\nstock tensorflow code and examples\n\nDescription\nWe are using Tensorflow v1.7.  We train MobileNet v2 (from tfHub - feature/1 version) by running the code Tensorflow provided in retrain.py (from examples). When training is done the validation set is run (for us about 700 images) and it reports say 80% validation accuracy.   Then it saves the model.  We load the saved model using label_image.py (also from tensorflow examples) and see how it's doing on a small validation set that we've withheld.  Instead of seeing the validation of 80% roughly confirmed, we instead see a validation accuracy of about 35%.  The clincher is that when use the same code and data and instead use MobileNet v1 we do see that training validation is confirmed by validation reported using label_image.py .\nWhen calling label_image we change the input_layer from \"input\" for MobileNet v1 to \"Placeholder\" for MobileNet v2\nCan you confirm this? What is going on?\nLogs:\nFrom retrain.py:\n...\nINFO:tensorflow:Initialize variable module/MobilenetV2/expanded_conv_9/project/weights:0 from checkpoint /var/folders/x8/f10sgc052q75r1thg5hlw4dm0000gn/T/tfhub_modules/33f8428fe83945b8b3d46d79168a0e2818e65e8a/variables/variables with MobilenetV2/expanded_conv_9/project/weights\nINFO:tensorflow:Restoring parameters from /tmp/_retrain_checkpoint\nINFO:tensorflow:Final test accuracy = 74.0% (N=696)\n...\nthen from using label_image.py:\nit gets 35% is correct\nHave I written custom code: no\nOS Platform and Distribution: macosx latest\nTensorFlow installed from: pip\nTensorFlow version: 1.7\nBazel version: Build label: 0.11.1-homebrew\nBuild target: bazel-out/darwin-\nopt/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\nBuild time: Sun May 31 16:57:39 +50150 (1520426998659)\nBuild timestamp: 1520426998659\nBuild timestamp as int: 1520426998659\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce: see above", "body": "### System information\r\nWe have reproduced this on Mac OSX, a windows box running a Linux VM, and on a Canadian research cluster all with the same result.\r\n - mac was v1.7 recompiled to take advantage of CPU: ('v1.7.0-1321-gd82b2f71b6', '1.7.0')\r\n - stock tensorflow code and examples\r\n\r\n### Description\r\nWe are using Tensorflow v1.7.  We train **MobileNet v2** (from tfHub - feature/1 version) by running the code Tensorflow provided in **retrain.py** (from examples). When training is done the validation set is run (for us about 700 images) and it reports say **80% validation accuracy**.   Then it saves the model.  We load the saved model using **label_image.py** (also from tensorflow examples) and see how it's doing on a small validation set that we've withheld.  Instead of seeing the validation of 80% roughly confirmed, we instead see a validation accuracy of about 35%.  The clincher is that when use the same code and data and instead use **MobileNet v1** we do see that training validation is confirmed by validation reported using label_image.py . \r\n\r\nWhen calling label_image we change the input_layer from \"input\" for MobileNet v1 to \"Placeholder\" for MobileNet v2\r\n\r\nCan you confirm this? What is going on?\r\n\r\n### Logs:\r\nFrom retrain.py:\r\n...\r\nINFO:tensorflow:Initialize variable module/MobilenetV2/expanded_conv_9/project/weights:0 from checkpoint /var/folders/x8/f10sgc052q75r1thg5hlw4dm0000gn/T/tfhub_modules/33f8428fe83945b8b3d46d79168a0e2818e65e8a/variables/variables with MobilenetV2/expanded_conv_9/project/weights\r\nINFO:tensorflow:Restoring parameters from /tmp/_retrain_checkpoint\r\nINFO:tensorflow:Final test accuracy = 74.0% (N=696)\r\n...\r\nthen from using label_image.py:\r\n\r\nit gets 35% is correct\r\n\r\nHave I written custom code: no\r\nOS Platform and Distribution: macosx latest\r\nTensorFlow installed from: pip\r\nTensorFlow version: 1.7\r\nBazel version: Build label: 0.11.1-homebrew\r\n   Build target: bazel-out/darwin- \r\n   opt/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\r\n   Build time: Sun May 31 16:57:39 +50150 (1520426998659)\r\n   Build timestamp: 1520426998659\r\n   Build timestamp as int: 1520426998659\r\n\r\nCUDA/cuDNN version: N/A\r\nGPU model and memory: N/A\r\nExact command to reproduce: see above\r\n"}