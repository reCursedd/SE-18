{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1197", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1197/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1197/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1197/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/1197", "id": 134883730, "node_id": "MDU6SXNzdWUxMzQ4ODM3MzA=", "number": 1197, "title": "Problem with OpenCV - Initializing TensorFlow variables takes very long", "user": {"login": "tomrunia", "id": 5536129, "node_id": "MDQ6VXNlcjU1MzYxMjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5536129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomrunia", "html_url": "https://github.com/tomrunia", "followers_url": "https://api.github.com/users/tomrunia/followers", "following_url": "https://api.github.com/users/tomrunia/following{/other_user}", "gists_url": "https://api.github.com/users/tomrunia/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomrunia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomrunia/subscriptions", "organizations_url": "https://api.github.com/users/tomrunia/orgs", "repos_url": "https://api.github.com/users/tomrunia/repos", "events_url": "https://api.github.com/users/tomrunia/events{/privacy}", "received_events_url": "https://api.github.com/users/tomrunia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-02-19T14:53:22Z", "updated_at": "2016-06-06T22:03:48Z", "closed_at": "2016-06-06T22:03:48Z", "author_association": "NONE", "body_html": "<p>For some reason, the variable initialization of TensorFlow takes a very long time when OpenCV is imported (<code>import cv2</code>). Running the operation <code>tf.init_all_variables()</code> takes less than 1 second without OpenCV, but as soon as I import <code>cv2</code> this takes 22 seconds (!). See attachment for the simple - Hello World - code that I run. <a href=\"https://github.com/tensorflow/tensorflow/files/138119/hello_world.txt\">hello_world.txt</a></p>\n<p>This problem occurs in TensorFlow 0.6 and 0.7. During the initialization the CPU load is 100%, GPU is idle but all available memory is initialized by TensorFlow.</p>\n<pre><code>I tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so locally\n0.7.0\n</code></pre>\n<p>TensorFlow is installed in an virtualenv using <code>pip</code> after installing CUDA Toolkit 7.5 and CuDNN v3. My OpenCV installation is from sources (GitHub, master), so this is version 3.1+. Some possibly relevant installation parameters are <code>WITH_CUDA=ON</code>, <code>WITH_CUBLAS=OFF</code>.</p>\n<p>I am using a powerful machine running Linux Mint, 32 CPU cores and an Titan X.</p>", "body_text": "For some reason, the variable initialization of TensorFlow takes a very long time when OpenCV is imported (import cv2). Running the operation tf.init_all_variables() takes less than 1 second without OpenCV, but as soon as I import cv2 this takes 22 seconds (!). See attachment for the simple - Hello World - code that I run. hello_world.txt\nThis problem occurs in TensorFlow 0.6 and 0.7. During the initialization the CPU load is 100%, GPU is idle but all available memory is initialized by TensorFlow.\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so locally\n0.7.0\n\nTensorFlow is installed in an virtualenv using pip after installing CUDA Toolkit 7.5 and CuDNN v3. My OpenCV installation is from sources (GitHub, master), so this is version 3.1+. Some possibly relevant installation parameters are WITH_CUDA=ON, WITH_CUBLAS=OFF.\nI am using a powerful machine running Linux Mint, 32 CPU cores and an Titan X.", "body": "For some reason, the variable initialization of TensorFlow takes a very long time when OpenCV is imported (`import cv2`). Running the operation `tf.init_all_variables()` takes less than 1 second without OpenCV, but as soon as I import `cv2` this takes 22 seconds (!). See attachment for the simple - Hello World - code that I run. [hello_world.txt](https://github.com/tensorflow/tensorflow/files/138119/hello_world.txt) \n\nThis problem occurs in TensorFlow 0.6 and 0.7. During the initialization the CPU load is 100%, GPU is idle but all available memory is initialized by TensorFlow.\n\n```\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so locally\n0.7.0\n```\n\nTensorFlow is installed in an virtualenv using `pip` after installing CUDA Toolkit 7.5 and CuDNN v3. My OpenCV installation is from sources (GitHub, master), so this is version 3.1+. Some possibly relevant installation parameters are `WITH_CUDA=ON`, `WITH_CUBLAS=OFF`.\n\nI am using a powerful machine running Linux Mint, 32 CPU cores and an Titan X.  \n"}