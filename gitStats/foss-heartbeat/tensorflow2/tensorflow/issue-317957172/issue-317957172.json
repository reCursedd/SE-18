{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18895", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18895/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18895/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18895/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18895", "id": 317957172, "node_id": "MDU6SXNzdWUzMTc5NTcxNzI=", "number": 18895, "title": "'concave points_mean' is not a valid scope name", "user": {"login": "acesaif", "id": 26320981, "node_id": "MDQ6VXNlcjI2MzIwOTgx", "avatar_url": "https://avatars3.githubusercontent.com/u/26320981?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acesaif", "html_url": "https://github.com/acesaif", "followers_url": "https://api.github.com/users/acesaif/followers", "following_url": "https://api.github.com/users/acesaif/following{/other_user}", "gists_url": "https://api.github.com/users/acesaif/gists{/gist_id}", "starred_url": "https://api.github.com/users/acesaif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acesaif/subscriptions", "organizations_url": "https://api.github.com/users/acesaif/orgs", "repos_url": "https://api.github.com/users/acesaif/repos", "events_url": "https://api.github.com/users/acesaif/events{/privacy}", "received_events_url": "https://api.github.com/users/acesaif/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-04-26T09:54:51Z", "updated_at": "2018-04-28T07:36:07Z", "closed_at": "2018-04-28T07:15:29Z", "author_association": "NONE", "body_html": "<p>I am running my models in <strong>Google's Colaboratory Cloud Platform</strong> and I never confronted this error message.</p>\n<p>Python Version (Colaboratory Notebook): <code>Python3</code><br>\nHardware Accelerator: <code>GPU</code></p>\n<p>(before creating this issue I did my research but found no useful content)</p>\n<p>My code has something like this,</p>\n<pre><code>periods = 10\nsteps_per_period = steps / periods\n  \n# Create linear_classifier object and configure it.\nmy_optimizer = tf.train.GradientDescentOptimizer(learning_rate=learning_rate)\nmy_optimizer = tf.contrib.estimator.clip_gradients_by_norm(my_optimizer, 5.0)\nlinear_classifier = tf.estimator.LinearClassifier(\n    feature_columns = construct_feature_columns(training_examples),\n    optimizer = my_optimizer\n)\n</code></pre>\n<p>and inside a <code>for</code> loop, I am training my model like this,</p>\n<pre><code>for period in range(0, periods):\n    linear_classifier.train(\n        input_fn = training_input_fn,\n        steps = steps_per_period\n    )\n</code></pre>\n<p>The error below:</p>\n<pre><code>---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n&lt;ipython-input-44-b9598a3db7f4&gt; in &lt;module&gt;()\n      6     training_targets = training_targets,\n      7     validation_examples = validation_examples,\n----&gt; 8     validation_targets = validation_targets\n      9 )\n\n&lt;ipython-input-43-0ca23946204e&gt; in train_linear_classfication_model(learning_rate, steps, batch_size, training_examples, training_targets, validation_examples, validation_targets)\n     43     linear_classifier.train(\n     44         input_fn = training_input_fn,\n---&gt; 45         steps = steps_per_period\n     46     )\n     47 \n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/estimator/estimator.py in train(self, input_fn, hooks, steps, max_steps, saving_listeners)\n    353 \n    354     saving_listeners = _check_listeners_type(saving_listeners)\n--&gt; 355     loss = self._train_model(input_fn, hooks, saving_listeners)\n    356     logging.info('Loss for final step: %s.', loss)\n    357     return self\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/estimator/estimator.py in _train_model(self, input_fn, hooks, saving_listeners)\n    822       worker_hooks.extend(input_hooks)\n    823       estimator_spec = self._call_model_fn(\n--&gt; 824           features, labels, model_fn_lib.ModeKeys.TRAIN, self.config)\n    825 \n    826       if self._warm_start_settings:\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/estimator/estimator.py in _call_model_fn(self, features, labels, mode, config)\n    803 \n    804     logging.info('Calling model_fn.')\n--&gt; 805     model_fn_results = self._model_fn(features=features, **kwargs)\n    806     logging.info('Done calling model_fn.')\n    807 \n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/estimator/canned/linear.py in _model_fn(features, labels, mode, config)\n    316           optimizer=optimizer,\n    317           partitioner=partitioner,\n--&gt; 318           config=config)\n    319 \n    320     super(LinearClassifier, self).__init__(\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/estimator/canned/linear.py in _linear_model_fn(features, labels, mode, head, feature_columns, optimizer, partitioner, config)\n    156     logit_fn = _linear_logit_fn_builder(\n    157         units=head.logits_dimension, feature_columns=feature_columns)\n--&gt; 158     logits = logit_fn(features=features)\n    159 \n    160     def _train_op_fn(loss):\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/estimator/canned/linear.py in linear_logit_fn(features)\n     97         feature_columns=feature_columns,\n     98         units=units,\n---&gt; 99         cols_to_vars=cols_to_vars)\n    100     bias = cols_to_vars.pop('bias')\n    101     if units &gt; 1:\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/feature_column/feature_column.py in linear_model(features, feature_columns, units, sparse_combiner, weight_collections, trainable, cols_to_vars)\n    423     for column in sorted(feature_columns, key=lambda x: x.name):\n    424       with variable_scope.variable_scope(\n--&gt; 425           None, default_name=column._var_scope_name):  # pylint: disable=protected-access\n    426         ordered_columns.append(column)\n    427         weighted_sum = _create_weighted_sum(\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variable_scope.py in __enter__(self)\n   1901 \n   1902     try:\n-&gt; 1903       return self._enter_scope_uncached()\n   1904     except:\n   1905       if self._graph_context_manager is not None:\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variable_scope.py in _enter_scope_uncached(self)\n   2001           self._default_name)\n   2002       try:\n-&gt; 2003         current_name_scope_name = current_name_scope.__enter__()\n   2004       except:\n   2005         current_name_scope.__exit__(*sys.exc_info())\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py in __enter__(self)\n   5773       try:\n   5774         self._name_scope = g.name_scope(self._name)\n-&gt; 5775         return self._name_scope.__enter__()\n   5776       except:\n   5777         self._g_manager.__exit__(*sys.exc_info())\n\n/usr/lib/python3.6/contextlib.py in __enter__(self)\n     79     def __enter__(self):\n     80         try:\n---&gt; 81             return next(self.gen)\n     82         except StopIteration:\n     83             raise RuntimeError(\"generator didn't yield\") from None\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py in name_scope(self, name)\n   3977         # (viz. '-', '\\', '/', and '_').\n   3978         if not _VALID_SCOPE_NAME_REGEX.match(name):\n-&gt; 3979           raise ValueError(\"'%s' is not a valid scope name\" % name)\n   3980       else:\n   3981         # Scopes created in the root must match the more restrictive\n\nValueError: 'concave points_mean' is not a valid scope name\n</code></pre>\n<p><strong>Update</strong>: I tried variables like <code>steps_per_period</code> as <code>global scope</code> and reran the model, but still the same issue persisting.</p>", "body_text": "I am running my models in Google's Colaboratory Cloud Platform and I never confronted this error message.\nPython Version (Colaboratory Notebook): Python3\nHardware Accelerator: GPU\n(before creating this issue I did my research but found no useful content)\nMy code has something like this,\nperiods = 10\nsteps_per_period = steps / periods\n  \n# Create linear_classifier object and configure it.\nmy_optimizer = tf.train.GradientDescentOptimizer(learning_rate=learning_rate)\nmy_optimizer = tf.contrib.estimator.clip_gradients_by_norm(my_optimizer, 5.0)\nlinear_classifier = tf.estimator.LinearClassifier(\n    feature_columns = construct_feature_columns(training_examples),\n    optimizer = my_optimizer\n)\n\nand inside a for loop, I am training my model like this,\nfor period in range(0, periods):\n    linear_classifier.train(\n        input_fn = training_input_fn,\n        steps = steps_per_period\n    )\n\nThe error below:\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n<ipython-input-44-b9598a3db7f4> in <module>()\n      6     training_targets = training_targets,\n      7     validation_examples = validation_examples,\n----> 8     validation_targets = validation_targets\n      9 )\n\n<ipython-input-43-0ca23946204e> in train_linear_classfication_model(learning_rate, steps, batch_size, training_examples, training_targets, validation_examples, validation_targets)\n     43     linear_classifier.train(\n     44         input_fn = training_input_fn,\n---> 45         steps = steps_per_period\n     46     )\n     47 \n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/estimator/estimator.py in train(self, input_fn, hooks, steps, max_steps, saving_listeners)\n    353 \n    354     saving_listeners = _check_listeners_type(saving_listeners)\n--> 355     loss = self._train_model(input_fn, hooks, saving_listeners)\n    356     logging.info('Loss for final step: %s.', loss)\n    357     return self\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/estimator/estimator.py in _train_model(self, input_fn, hooks, saving_listeners)\n    822       worker_hooks.extend(input_hooks)\n    823       estimator_spec = self._call_model_fn(\n--> 824           features, labels, model_fn_lib.ModeKeys.TRAIN, self.config)\n    825 \n    826       if self._warm_start_settings:\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/estimator/estimator.py in _call_model_fn(self, features, labels, mode, config)\n    803 \n    804     logging.info('Calling model_fn.')\n--> 805     model_fn_results = self._model_fn(features=features, **kwargs)\n    806     logging.info('Done calling model_fn.')\n    807 \n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/estimator/canned/linear.py in _model_fn(features, labels, mode, config)\n    316           optimizer=optimizer,\n    317           partitioner=partitioner,\n--> 318           config=config)\n    319 \n    320     super(LinearClassifier, self).__init__(\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/estimator/canned/linear.py in _linear_model_fn(features, labels, mode, head, feature_columns, optimizer, partitioner, config)\n    156     logit_fn = _linear_logit_fn_builder(\n    157         units=head.logits_dimension, feature_columns=feature_columns)\n--> 158     logits = logit_fn(features=features)\n    159 \n    160     def _train_op_fn(loss):\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/estimator/canned/linear.py in linear_logit_fn(features)\n     97         feature_columns=feature_columns,\n     98         units=units,\n---> 99         cols_to_vars=cols_to_vars)\n    100     bias = cols_to_vars.pop('bias')\n    101     if units > 1:\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/feature_column/feature_column.py in linear_model(features, feature_columns, units, sparse_combiner, weight_collections, trainable, cols_to_vars)\n    423     for column in sorted(feature_columns, key=lambda x: x.name):\n    424       with variable_scope.variable_scope(\n--> 425           None, default_name=column._var_scope_name):  # pylint: disable=protected-access\n    426         ordered_columns.append(column)\n    427         weighted_sum = _create_weighted_sum(\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variable_scope.py in __enter__(self)\n   1901 \n   1902     try:\n-> 1903       return self._enter_scope_uncached()\n   1904     except:\n   1905       if self._graph_context_manager is not None:\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variable_scope.py in _enter_scope_uncached(self)\n   2001           self._default_name)\n   2002       try:\n-> 2003         current_name_scope_name = current_name_scope.__enter__()\n   2004       except:\n   2005         current_name_scope.__exit__(*sys.exc_info())\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py in __enter__(self)\n   5773       try:\n   5774         self._name_scope = g.name_scope(self._name)\n-> 5775         return self._name_scope.__enter__()\n   5776       except:\n   5777         self._g_manager.__exit__(*sys.exc_info())\n\n/usr/lib/python3.6/contextlib.py in __enter__(self)\n     79     def __enter__(self):\n     80         try:\n---> 81             return next(self.gen)\n     82         except StopIteration:\n     83             raise RuntimeError(\"generator didn't yield\") from None\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py in name_scope(self, name)\n   3977         # (viz. '-', '\\', '/', and '_').\n   3978         if not _VALID_SCOPE_NAME_REGEX.match(name):\n-> 3979           raise ValueError(\"'%s' is not a valid scope name\" % name)\n   3980       else:\n   3981         # Scopes created in the root must match the more restrictive\n\nValueError: 'concave points_mean' is not a valid scope name\n\nUpdate: I tried variables like steps_per_period as global scope and reran the model, but still the same issue persisting.", "body": "I am running my models in **Google's Colaboratory Cloud Platform** and I never confronted this error message.\r\n\r\nPython Version (Colaboratory Notebook): `Python3`\r\nHardware Accelerator: `GPU`\r\n\r\n(before creating this issue I did my research but found no useful content)\r\n\r\nMy code has something like this,\r\n```\r\nperiods = 10\r\nsteps_per_period = steps / periods\r\n  \r\n# Create linear_classifier object and configure it.\r\nmy_optimizer = tf.train.GradientDescentOptimizer(learning_rate=learning_rate)\r\nmy_optimizer = tf.contrib.estimator.clip_gradients_by_norm(my_optimizer, 5.0)\r\nlinear_classifier = tf.estimator.LinearClassifier(\r\n    feature_columns = construct_feature_columns(training_examples),\r\n    optimizer = my_optimizer\r\n)\r\n```\r\nand inside a `for` loop, I am training my model like this,\r\n```\r\nfor period in range(0, periods):\r\n    linear_classifier.train(\r\n        input_fn = training_input_fn,\r\n        steps = steps_per_period\r\n    )\r\n```\r\nThe error below:\r\n```\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-44-b9598a3db7f4> in <module>()\r\n      6     training_targets = training_targets,\r\n      7     validation_examples = validation_examples,\r\n----> 8     validation_targets = validation_targets\r\n      9 )\r\n\r\n<ipython-input-43-0ca23946204e> in train_linear_classfication_model(learning_rate, steps, batch_size, training_examples, training_targets, validation_examples, validation_targets)\r\n     43     linear_classifier.train(\r\n     44         input_fn = training_input_fn,\r\n---> 45         steps = steps_per_period\r\n     46     )\r\n     47 \r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/estimator/estimator.py in train(self, input_fn, hooks, steps, max_steps, saving_listeners)\r\n    353 \r\n    354     saving_listeners = _check_listeners_type(saving_listeners)\r\n--> 355     loss = self._train_model(input_fn, hooks, saving_listeners)\r\n    356     logging.info('Loss for final step: %s.', loss)\r\n    357     return self\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/estimator/estimator.py in _train_model(self, input_fn, hooks, saving_listeners)\r\n    822       worker_hooks.extend(input_hooks)\r\n    823       estimator_spec = self._call_model_fn(\r\n--> 824           features, labels, model_fn_lib.ModeKeys.TRAIN, self.config)\r\n    825 \r\n    826       if self._warm_start_settings:\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/estimator/estimator.py in _call_model_fn(self, features, labels, mode, config)\r\n    803 \r\n    804     logging.info('Calling model_fn.')\r\n--> 805     model_fn_results = self._model_fn(features=features, **kwargs)\r\n    806     logging.info('Done calling model_fn.')\r\n    807 \r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/estimator/canned/linear.py in _model_fn(features, labels, mode, config)\r\n    316           optimizer=optimizer,\r\n    317           partitioner=partitioner,\r\n--> 318           config=config)\r\n    319 \r\n    320     super(LinearClassifier, self).__init__(\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/estimator/canned/linear.py in _linear_model_fn(features, labels, mode, head, feature_columns, optimizer, partitioner, config)\r\n    156     logit_fn = _linear_logit_fn_builder(\r\n    157         units=head.logits_dimension, feature_columns=feature_columns)\r\n--> 158     logits = logit_fn(features=features)\r\n    159 \r\n    160     def _train_op_fn(loss):\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/estimator/canned/linear.py in linear_logit_fn(features)\r\n     97         feature_columns=feature_columns,\r\n     98         units=units,\r\n---> 99         cols_to_vars=cols_to_vars)\r\n    100     bias = cols_to_vars.pop('bias')\r\n    101     if units > 1:\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/feature_column/feature_column.py in linear_model(features, feature_columns, units, sparse_combiner, weight_collections, trainable, cols_to_vars)\r\n    423     for column in sorted(feature_columns, key=lambda x: x.name):\r\n    424       with variable_scope.variable_scope(\r\n--> 425           None, default_name=column._var_scope_name):  # pylint: disable=protected-access\r\n    426         ordered_columns.append(column)\r\n    427         weighted_sum = _create_weighted_sum(\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variable_scope.py in __enter__(self)\r\n   1901 \r\n   1902     try:\r\n-> 1903       return self._enter_scope_uncached()\r\n   1904     except:\r\n   1905       if self._graph_context_manager is not None:\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/variable_scope.py in _enter_scope_uncached(self)\r\n   2001           self._default_name)\r\n   2002       try:\r\n-> 2003         current_name_scope_name = current_name_scope.__enter__()\r\n   2004       except:\r\n   2005         current_name_scope.__exit__(*sys.exc_info())\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py in __enter__(self)\r\n   5773       try:\r\n   5774         self._name_scope = g.name_scope(self._name)\r\n-> 5775         return self._name_scope.__enter__()\r\n   5776       except:\r\n   5777         self._g_manager.__exit__(*sys.exc_info())\r\n\r\n/usr/lib/python3.6/contextlib.py in __enter__(self)\r\n     79     def __enter__(self):\r\n     80         try:\r\n---> 81             return next(self.gen)\r\n     82         except StopIteration:\r\n     83             raise RuntimeError(\"generator didn't yield\") from None\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py in name_scope(self, name)\r\n   3977         # (viz. '-', '\\', '/', and '_').\r\n   3978         if not _VALID_SCOPE_NAME_REGEX.match(name):\r\n-> 3979           raise ValueError(\"'%s' is not a valid scope name\" % name)\r\n   3980       else:\r\n   3981         # Scopes created in the root must match the more restrictive\r\n\r\nValueError: 'concave points_mean' is not a valid scope name\r\n```\r\n**Update**: I tried variables like `steps_per_period` as `global scope` and reran the model, but still the same issue persisting."}