{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16163", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16163/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16163/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16163/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16163", "id": 288980298, "node_id": "MDU6SXNzdWUyODg5ODAyOTg=", "number": 16163, "title": "Dataset.from_generator doesn't release memory after recreating the session", "user": {"login": "velikodniy", "id": 1735272, "node_id": "MDQ6VXNlcjE3MzUyNzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1735272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/velikodniy", "html_url": "https://github.com/velikodniy", "followers_url": "https://api.github.com/users/velikodniy/followers", "following_url": "https://api.github.com/users/velikodniy/following{/other_user}", "gists_url": "https://api.github.com/users/velikodniy/gists{/gist_id}", "starred_url": "https://api.github.com/users/velikodniy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/velikodniy/subscriptions", "organizations_url": "https://api.github.com/users/velikodniy/orgs", "repos_url": "https://api.github.com/users/velikodniy/repos", "events_url": "https://api.github.com/users/velikodniy/events{/privacy}", "received_events_url": "https://api.github.com/users/velikodniy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-01-16T16:55:16Z", "updated_at": "2018-02-23T05:43:34Z", "closed_at": "2018-02-23T05:43:34Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 17.10</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.5.0-rc0</li>\n<li><strong>Python version</strong>: Python 3.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>: -</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: -</li>\n<li><strong>CUDA/cuDNN version</strong>: -</li>\n<li><strong>GPU model and memory</strong>: -</li>\n<li><strong>Exact command to reproduce</strong>: see below</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>After closing the session and creating new one an iterator creates the generator instance but doesn't free the memory of the previous one.</p>\n<p>Every calling of the line <code>session.run(x)</code> (see below) increases memory consumption of the script:</p>\n<ul>\n<li>519 MiB after the first,</li>\n<li>600 MiB after the second,</li>\n<li>681 MiB after the third and so on.</li>\n</ul>\n<p>As you can see the delta is equal to 80 MiB = N * sizeof(data.dtype). (data.dtype is float64 here)</p>\n<h3>Source code / logs</h3>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\nN <span class=\"pl-k\">=</span> <span class=\"pl-c1\">10</span> <span class=\"pl-k\">*</span> <span class=\"pl-c1\">1024</span> <span class=\"pl-k\">*</span> <span class=\"pl-c1\">1024</span>\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">generate</span>():\n  data <span class=\"pl-k\">=</span> np.random.rand(N)\n  <span class=\"pl-k\">for</span> k <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(N):\n    <span class=\"pl-k\">yield</span> data[k].copy()\n\ngraph <span class=\"pl-k\">=</span> tf.Graph()\n<span class=\"pl-k\">with</span> graph.as_default():\n  x <span class=\"pl-k\">=</span> tf.data.Dataset\\\n    .from_generator(generate, tf.float32)\\\n    .make_one_shot_iterator()\\\n    .get_next()\n\n<span class=\"pl-k\">while</span> <span class=\"pl-c1\">True</span>:\n  session <span class=\"pl-k\">=</span> tf.Session(<span class=\"pl-v\">graph</span><span class=\"pl-k\">=</span>graph)\n  session.run(x) <span class=\"pl-c\"><span class=\"pl-c\">#</span> &lt;--- PUT A BREAKPOINT HERE!</span>\n                 <span class=\"pl-c\"><span class=\"pl-c\">#</span>  Be careful running the code without it!</span>\n  session.close()</pre></div>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 17.10\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.5.0-rc0\nPython version: Python 3.6\nBazel version (if compiling from source): -\nGCC/Compiler version (if compiling from source): -\nCUDA/cuDNN version: -\nGPU model and memory: -\nExact command to reproduce: see below\n\nDescribe the problem\nAfter closing the session and creating new one an iterator creates the generator instance but doesn't free the memory of the previous one.\nEvery calling of the line session.run(x) (see below) increases memory consumption of the script:\n\n519 MiB after the first,\n600 MiB after the second,\n681 MiB after the third and so on.\n\nAs you can see the delta is equal to 80 MiB = N * sizeof(data.dtype). (data.dtype is float64 here)\nSource code / logs\nimport numpy as np\nimport tensorflow as tf\n\nN = 10 * 1024 * 1024\n\ndef generate():\n  data = np.random.rand(N)\n  for k in range(N):\n    yield data[k].copy()\n\ngraph = tf.Graph()\nwith graph.as_default():\n  x = tf.data.Dataset\\\n    .from_generator(generate, tf.float32)\\\n    .make_one_shot_iterator()\\\n    .get_next()\n\nwhile True:\n  session = tf.Session(graph=graph)\n  session.run(x) # <--- PUT A BREAKPOINT HERE!\n                 #  Be careful running the code without it!\n  session.close()", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 17.10\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.5.0-rc0\r\n- **Python version**: Python 3.6\r\n- **Bazel version (if compiling from source)**: -\r\n- **GCC/Compiler version (if compiling from source)**: -\r\n- **CUDA/cuDNN version**: -\r\n- **GPU model and memory**: -\r\n- **Exact command to reproduce**: see below\r\n\r\n### Describe the problem\r\n\r\nAfter closing the session and creating new one an iterator creates the generator instance but doesn't free the memory of the previous one.\r\n\r\nEvery calling of the line `session.run(x)` (see below) increases memory consumption of the script:\r\n\r\n- 519 MiB after the first,\r\n- 600 MiB after the second,\r\n- 681 MiB after the third and so on.\r\n\r\nAs you can see the delta is equal to 80 MiB = N * sizeof(data.dtype). (data.dtype is float64 here)\r\n\r\n### Source code / logs\r\n```python\r\nimport numpy as np\r\nimport tensorflow as tf\r\n\r\nN = 10 * 1024 * 1024\r\n\r\ndef generate():\r\n  data = np.random.rand(N)\r\n  for k in range(N):\r\n    yield data[k].copy()\r\n\r\ngraph = tf.Graph()\r\nwith graph.as_default():\r\n  x = tf.data.Dataset\\\r\n    .from_generator(generate, tf.float32)\\\r\n    .make_one_shot_iterator()\\\r\n    .get_next()\r\n\r\nwhile True:\r\n  session = tf.Session(graph=graph)\r\n  session.run(x) # <--- PUT A BREAKPOINT HERE!\r\n                 #  Be careful running the code without it!\r\n  session.close()\r\n```"}