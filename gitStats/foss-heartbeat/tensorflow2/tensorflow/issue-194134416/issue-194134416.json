{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6168", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6168/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6168/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6168/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/6168", "id": 194134416, "node_id": "MDU6SXNzdWUxOTQxMzQ0MTY=", "number": 6168, "title": "Placeholder mismatch", "user": {"login": "actang", "id": 6814077, "node_id": "MDQ6VXNlcjY4MTQwNzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6814077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/actang", "html_url": "https://github.com/actang", "followers_url": "https://api.github.com/users/actang/followers", "following_url": "https://api.github.com/users/actang/following{/other_user}", "gists_url": "https://api.github.com/users/actang/gists{/gist_id}", "starred_url": "https://api.github.com/users/actang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/actang/subscriptions", "organizations_url": "https://api.github.com/users/actang/orgs", "repos_url": "https://api.github.com/users/actang/repos", "events_url": "https://api.github.com/users/actang/events{/privacy}", "received_events_url": "https://api.github.com/users/actang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-07T18:50:03Z", "updated_at": "2016-12-07T20:41:54Z", "closed_at": "2016-12-07T20:41:54Z", "author_association": "NONE", "body_html": "<p>I am trying to train two classifiers in one session. I declared two separate placeholders and pass each of them to different classifiers in run-time. The first one works fine, but the second one does not. The error message tells me that the second classifier is trying to look for the placeholder for the first classifier (instead of its own).</p>\n<p>The code is attached below</p>\n<pre><code>from __future__ import absolute_import, division, print_function\nimport os\nimport prettytensor as pt\nimport tensorflow as tf\nfrom tensorflow.examples.tutorials.mnist import input_data\ndataset_name = \"data/MNIST\"\nif not os.path.exists(dataset_name):\n    os.makedirs(dataset_name)\ndataset = input_data.read_data_sets(\n    dataset_name,\n    reshape=False,\n    one_hot=True\n)\n\n########################\n# Construct Classifier #\n########################\ndef construct_lenet(lenet_images, lenet_labels):\n    images = pt.wrap(lenet_images)\n    with pt.defaults_scope(activation_fn=tf.nn.relu, l2loss=0.00001):\n        return (\n            images\n            .conv2d(5, 20)\n            .max_pool(2, 2)\n            .conv2d(5, 50)\n            .max_pool(2, 2)\n            .flatten()\n            .fully_connected(500)\n            .softmax_classifier(10, lenet_labels)\n        )\n\n####################\n# First Classifier #\n####################\nclassifier_images_placeholder_1 = tf.placeholder(\n    tf.float32,\n    [\n        50,\n        28,\n        28,\n        1\n    ]\n)\nclassifier_labels_placeholder_1 = tf.placeholder(\n    tf.float32,\n    [\n        50,\n        10\n    ]\n)\n\nclassifier_result_1 = construct_lenet(\n    classifier_images_placeholder_1,\n    classifier_labels_placeholder_1\n)\nclassifier_optimizer_1 = tf.train.AdamOptimizer(0.01)\nclassifier_train_op_1 = pt.apply_optimizer(\n    classifier_optimizer_1,\n    losses=[classifier_result_1.loss]\n)\n\n#####################\n# Second Classifier #\n#####################\nclassifier_images_placeholder_2 = tf.placeholder(\n    tf.float32,\n    [\n        50,\n        28,\n        28,\n        1\n    ]\n)\nclassifier_labels_placeholder_2 = tf.placeholder(\n    tf.float32,\n    [\n        50,\n        10\n    ]\n)\n\nclassifier_result_2 = construct_lenet(\n    classifier_images_placeholder_2,\n    classifier_labels_placeholder_2\n)\nclassifier_optimizer_2 = tf.train.AdamOptimizer(0.01)\nclassifier_train_op_2 = pt.apply_optimizer(\n    classifier_optimizer_2,\n    losses=[classifier_result_2.loss]\n)\n\n\n\ninit = tf.initialize_all_variables()\nwith tf.Session() as sess:\n    sess.run(init)\n##########################\n# Train First Classifier #\n##########################\n    classifier_training_loss = 0.0\n    for i in range(10):\n        training_images, training_labels = dataset.train.next_batch(\n            50\n        )\n        _, classifier_runtime_loss = sess.run(\n            fetches=[\n                classifier_train_op_1,\n                classifier_result_1.loss\n            ],\n            feed_dict={\n                classifier_images_placeholder_1: training_images,\n                classifier_labels_placeholder_1: training_labels\n            }\n        )\n        classifier_training_loss += classifier_runtime_loss\n    classifier_training_loss /= dataset.train.num_examples\n    print(classifier_training_loss)\n###########################\n# Train Second Classifier #\n###########################\n    classifier_training_loss = 0.0\n    for i in range(10):\n        training_images, training_labels = dataset.train.next_batch(\n            50\n        )\n        _, classifier_runtime_loss = sess.run(\n            fetches=[\n                classifier_train_op_2,\n                classifier_result_2.loss\n            ],\n            feed_dict={\n                classifier_images_placeholder_2: training_images,\n                classifier_labels_placeholder_2: training_labels\n            }\n        )\n        classifier_training_loss += classifier_runtime_loss\n    classifier_training_loss /= dataset.train.num_examples\n    print(classifier_training_loss)\n</code></pre>\n<p>Error message is attached below</p>\n<pre><code>W tensorflow/core/framework/op_kernel.cc:968] Invalid argument: You must feed a value for placeholder tensor 'Placeholder' with dtype float and shape [50,28,28,1]\n    [[Node: Placeholder = Placeholder[dtype=DT_FLOAT, shape=[50,28,28,1], _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]]\nTraceback (most recent call last):\n  File \"stack_overflow.py\", line 134, in &lt;module&gt;\n    classifier_labels_placeholder_2: training_labels\n  File \"/Users/user/Packages/anaconda/envs/tensorflow2/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 717, in run\n    run_metadata_ptr)\n  File \"/Users/user/Packages/anaconda/envs/tensorflow2/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 915, in _run\n    feed_dict_string, options, run_metadata)\n  File \"/Users/user/Packages/anaconda/envs/tensorflow2/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 965, in _do_run\n    target_list, options, run_metadata)\n  File \"/Users/user/Packages/anaconda/envs/tensorflow2/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 985, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors.InvalidArgumentError: You must feed a value for placeholder tensor 'Placeholder' with dtype float and shape [50,28,28,1]\n     [[Node: Placeholder = Placeholder[dtype=DT_FLOAT, shape=[50,28,28,1], _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]]\n\nCaused by op u'Placeholder', defined at:\n  File \"stack_overflow.py\", line 44, in &lt;module&gt;\n    1\n  File \"/Users/user/Packages/anaconda/envs/tensorflow2/lib/python2.7/site-packages/tensorflow/python/ops/array_ops.py\", line 1332, in placeholder\n    name=name)\n  File \"/Users/user/Packages/anaconda/envs/tensorflow2/lib/python2.7/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 1748, in _placeholder\n    name=name)\n  File \"/Users/user/Packages/anaconda/envs/tensorflow2/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 749, in apply_op\n    op_def=op_def)\n  File \"/Users/user/Packages/anaconda/envs/tensorflow2/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 2380, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/Users/user/Packages/anaconda/envs/tensorflow2/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1298, in __init__\n    self._traceback = _extract_stack()\n\nInvalidArgumentError (see above for traceback): You must feed a value for placeholder tensor 'Placeholder' with dtype float and shape [50,28,28,1]\n     [[Node: Placeholder = Placeholder[dtype=DT_FLOAT, shape=[50,28,28,1], _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]]\n</code></pre>", "body_text": "I am trying to train two classifiers in one session. I declared two separate placeholders and pass each of them to different classifiers in run-time. The first one works fine, but the second one does not. The error message tells me that the second classifier is trying to look for the placeholder for the first classifier (instead of its own).\nThe code is attached below\nfrom __future__ import absolute_import, division, print_function\nimport os\nimport prettytensor as pt\nimport tensorflow as tf\nfrom tensorflow.examples.tutorials.mnist import input_data\ndataset_name = \"data/MNIST\"\nif not os.path.exists(dataset_name):\n    os.makedirs(dataset_name)\ndataset = input_data.read_data_sets(\n    dataset_name,\n    reshape=False,\n    one_hot=True\n)\n\n########################\n# Construct Classifier #\n########################\ndef construct_lenet(lenet_images, lenet_labels):\n    images = pt.wrap(lenet_images)\n    with pt.defaults_scope(activation_fn=tf.nn.relu, l2loss=0.00001):\n        return (\n            images\n            .conv2d(5, 20)\n            .max_pool(2, 2)\n            .conv2d(5, 50)\n            .max_pool(2, 2)\n            .flatten()\n            .fully_connected(500)\n            .softmax_classifier(10, lenet_labels)\n        )\n\n####################\n# First Classifier #\n####################\nclassifier_images_placeholder_1 = tf.placeholder(\n    tf.float32,\n    [\n        50,\n        28,\n        28,\n        1\n    ]\n)\nclassifier_labels_placeholder_1 = tf.placeholder(\n    tf.float32,\n    [\n        50,\n        10\n    ]\n)\n\nclassifier_result_1 = construct_lenet(\n    classifier_images_placeholder_1,\n    classifier_labels_placeholder_1\n)\nclassifier_optimizer_1 = tf.train.AdamOptimizer(0.01)\nclassifier_train_op_1 = pt.apply_optimizer(\n    classifier_optimizer_1,\n    losses=[classifier_result_1.loss]\n)\n\n#####################\n# Second Classifier #\n#####################\nclassifier_images_placeholder_2 = tf.placeholder(\n    tf.float32,\n    [\n        50,\n        28,\n        28,\n        1\n    ]\n)\nclassifier_labels_placeholder_2 = tf.placeholder(\n    tf.float32,\n    [\n        50,\n        10\n    ]\n)\n\nclassifier_result_2 = construct_lenet(\n    classifier_images_placeholder_2,\n    classifier_labels_placeholder_2\n)\nclassifier_optimizer_2 = tf.train.AdamOptimizer(0.01)\nclassifier_train_op_2 = pt.apply_optimizer(\n    classifier_optimizer_2,\n    losses=[classifier_result_2.loss]\n)\n\n\n\ninit = tf.initialize_all_variables()\nwith tf.Session() as sess:\n    sess.run(init)\n##########################\n# Train First Classifier #\n##########################\n    classifier_training_loss = 0.0\n    for i in range(10):\n        training_images, training_labels = dataset.train.next_batch(\n            50\n        )\n        _, classifier_runtime_loss = sess.run(\n            fetches=[\n                classifier_train_op_1,\n                classifier_result_1.loss\n            ],\n            feed_dict={\n                classifier_images_placeholder_1: training_images,\n                classifier_labels_placeholder_1: training_labels\n            }\n        )\n        classifier_training_loss += classifier_runtime_loss\n    classifier_training_loss /= dataset.train.num_examples\n    print(classifier_training_loss)\n###########################\n# Train Second Classifier #\n###########################\n    classifier_training_loss = 0.0\n    for i in range(10):\n        training_images, training_labels = dataset.train.next_batch(\n            50\n        )\n        _, classifier_runtime_loss = sess.run(\n            fetches=[\n                classifier_train_op_2,\n                classifier_result_2.loss\n            ],\n            feed_dict={\n                classifier_images_placeholder_2: training_images,\n                classifier_labels_placeholder_2: training_labels\n            }\n        )\n        classifier_training_loss += classifier_runtime_loss\n    classifier_training_loss /= dataset.train.num_examples\n    print(classifier_training_loss)\n\nError message is attached below\nW tensorflow/core/framework/op_kernel.cc:968] Invalid argument: You must feed a value for placeholder tensor 'Placeholder' with dtype float and shape [50,28,28,1]\n    [[Node: Placeholder = Placeholder[dtype=DT_FLOAT, shape=[50,28,28,1], _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]]\nTraceback (most recent call last):\n  File \"stack_overflow.py\", line 134, in <module>\n    classifier_labels_placeholder_2: training_labels\n  File \"/Users/user/Packages/anaconda/envs/tensorflow2/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 717, in run\n    run_metadata_ptr)\n  File \"/Users/user/Packages/anaconda/envs/tensorflow2/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 915, in _run\n    feed_dict_string, options, run_metadata)\n  File \"/Users/user/Packages/anaconda/envs/tensorflow2/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 965, in _do_run\n    target_list, options, run_metadata)\n  File \"/Users/user/Packages/anaconda/envs/tensorflow2/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 985, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors.InvalidArgumentError: You must feed a value for placeholder tensor 'Placeholder' with dtype float and shape [50,28,28,1]\n     [[Node: Placeholder = Placeholder[dtype=DT_FLOAT, shape=[50,28,28,1], _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]]\n\nCaused by op u'Placeholder', defined at:\n  File \"stack_overflow.py\", line 44, in <module>\n    1\n  File \"/Users/user/Packages/anaconda/envs/tensorflow2/lib/python2.7/site-packages/tensorflow/python/ops/array_ops.py\", line 1332, in placeholder\n    name=name)\n  File \"/Users/user/Packages/anaconda/envs/tensorflow2/lib/python2.7/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 1748, in _placeholder\n    name=name)\n  File \"/Users/user/Packages/anaconda/envs/tensorflow2/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 749, in apply_op\n    op_def=op_def)\n  File \"/Users/user/Packages/anaconda/envs/tensorflow2/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 2380, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/Users/user/Packages/anaconda/envs/tensorflow2/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1298, in __init__\n    self._traceback = _extract_stack()\n\nInvalidArgumentError (see above for traceback): You must feed a value for placeholder tensor 'Placeholder' with dtype float and shape [50,28,28,1]\n     [[Node: Placeholder = Placeholder[dtype=DT_FLOAT, shape=[50,28,28,1], _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]]", "body": "I am trying to train two classifiers in one session. I declared two separate placeholders and pass each of them to different classifiers in run-time. The first one works fine, but the second one does not. The error message tells me that the second classifier is trying to look for the placeholder for the first classifier (instead of its own).\r\n\r\nThe code is attached below\r\n```\r\nfrom __future__ import absolute_import, division, print_function\r\nimport os\r\nimport prettytensor as pt\r\nimport tensorflow as tf\r\nfrom tensorflow.examples.tutorials.mnist import input_data\r\ndataset_name = \"data/MNIST\"\r\nif not os.path.exists(dataset_name):\r\n    os.makedirs(dataset_name)\r\ndataset = input_data.read_data_sets(\r\n    dataset_name,\r\n    reshape=False,\r\n    one_hot=True\r\n)\r\n\r\n########################\r\n# Construct Classifier #\r\n########################\r\ndef construct_lenet(lenet_images, lenet_labels):\r\n    images = pt.wrap(lenet_images)\r\n    with pt.defaults_scope(activation_fn=tf.nn.relu, l2loss=0.00001):\r\n        return (\r\n            images\r\n            .conv2d(5, 20)\r\n            .max_pool(2, 2)\r\n            .conv2d(5, 50)\r\n            .max_pool(2, 2)\r\n            .flatten()\r\n            .fully_connected(500)\r\n            .softmax_classifier(10, lenet_labels)\r\n        )\r\n\r\n####################\r\n# First Classifier #\r\n####################\r\nclassifier_images_placeholder_1 = tf.placeholder(\r\n    tf.float32,\r\n    [\r\n        50,\r\n        28,\r\n        28,\r\n        1\r\n    ]\r\n)\r\nclassifier_labels_placeholder_1 = tf.placeholder(\r\n    tf.float32,\r\n    [\r\n        50,\r\n        10\r\n    ]\r\n)\r\n\r\nclassifier_result_1 = construct_lenet(\r\n    classifier_images_placeholder_1,\r\n    classifier_labels_placeholder_1\r\n)\r\nclassifier_optimizer_1 = tf.train.AdamOptimizer(0.01)\r\nclassifier_train_op_1 = pt.apply_optimizer(\r\n    classifier_optimizer_1,\r\n    losses=[classifier_result_1.loss]\r\n)\r\n\r\n#####################\r\n# Second Classifier #\r\n#####################\r\nclassifier_images_placeholder_2 = tf.placeholder(\r\n    tf.float32,\r\n    [\r\n        50,\r\n        28,\r\n        28,\r\n        1\r\n    ]\r\n)\r\nclassifier_labels_placeholder_2 = tf.placeholder(\r\n    tf.float32,\r\n    [\r\n        50,\r\n        10\r\n    ]\r\n)\r\n\r\nclassifier_result_2 = construct_lenet(\r\n    classifier_images_placeholder_2,\r\n    classifier_labels_placeholder_2\r\n)\r\nclassifier_optimizer_2 = tf.train.AdamOptimizer(0.01)\r\nclassifier_train_op_2 = pt.apply_optimizer(\r\n    classifier_optimizer_2,\r\n    losses=[classifier_result_2.loss]\r\n)\r\n\r\n\r\n\r\ninit = tf.initialize_all_variables()\r\nwith tf.Session() as sess:\r\n    sess.run(init)\r\n##########################\r\n# Train First Classifier #\r\n##########################\r\n    classifier_training_loss = 0.0\r\n    for i in range(10):\r\n        training_images, training_labels = dataset.train.next_batch(\r\n            50\r\n        )\r\n        _, classifier_runtime_loss = sess.run(\r\n            fetches=[\r\n                classifier_train_op_1,\r\n                classifier_result_1.loss\r\n            ],\r\n            feed_dict={\r\n                classifier_images_placeholder_1: training_images,\r\n                classifier_labels_placeholder_1: training_labels\r\n            }\r\n        )\r\n        classifier_training_loss += classifier_runtime_loss\r\n    classifier_training_loss /= dataset.train.num_examples\r\n    print(classifier_training_loss)\r\n###########################\r\n# Train Second Classifier #\r\n###########################\r\n    classifier_training_loss = 0.0\r\n    for i in range(10):\r\n        training_images, training_labels = dataset.train.next_batch(\r\n            50\r\n        )\r\n        _, classifier_runtime_loss = sess.run(\r\n            fetches=[\r\n                classifier_train_op_2,\r\n                classifier_result_2.loss\r\n            ],\r\n            feed_dict={\r\n                classifier_images_placeholder_2: training_images,\r\n                classifier_labels_placeholder_2: training_labels\r\n            }\r\n        )\r\n        classifier_training_loss += classifier_runtime_loss\r\n    classifier_training_loss /= dataset.train.num_examples\r\n    print(classifier_training_loss)\r\n```\r\n\r\nError message is attached below\r\n```\r\nW tensorflow/core/framework/op_kernel.cc:968] Invalid argument: You must feed a value for placeholder tensor 'Placeholder' with dtype float and shape [50,28,28,1]\r\n    [[Node: Placeholder = Placeholder[dtype=DT_FLOAT, shape=[50,28,28,1], _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]]\r\nTraceback (most recent call last):\r\n  File \"stack_overflow.py\", line 134, in <module>\r\n    classifier_labels_placeholder_2: training_labels\r\n  File \"/Users/user/Packages/anaconda/envs/tensorflow2/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 717, in run\r\n    run_metadata_ptr)\r\n  File \"/Users/user/Packages/anaconda/envs/tensorflow2/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 915, in _run\r\n    feed_dict_string, options, run_metadata)\r\n  File \"/Users/user/Packages/anaconda/envs/tensorflow2/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 965, in _do_run\r\n    target_list, options, run_metadata)\r\n  File \"/Users/user/Packages/anaconda/envs/tensorflow2/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 985, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors.InvalidArgumentError: You must feed a value for placeholder tensor 'Placeholder' with dtype float and shape [50,28,28,1]\r\n     [[Node: Placeholder = Placeholder[dtype=DT_FLOAT, shape=[50,28,28,1], _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]]\r\n\r\nCaused by op u'Placeholder', defined at:\r\n  File \"stack_overflow.py\", line 44, in <module>\r\n    1\r\n  File \"/Users/user/Packages/anaconda/envs/tensorflow2/lib/python2.7/site-packages/tensorflow/python/ops/array_ops.py\", line 1332, in placeholder\r\n    name=name)\r\n  File \"/Users/user/Packages/anaconda/envs/tensorflow2/lib/python2.7/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 1748, in _placeholder\r\n    name=name)\r\n  File \"/Users/user/Packages/anaconda/envs/tensorflow2/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 749, in apply_op\r\n    op_def=op_def)\r\n  File \"/Users/user/Packages/anaconda/envs/tensorflow2/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 2380, in create_op\r\n    original_op=self._default_original_op, op_def=op_def)\r\n  File \"/Users/user/Packages/anaconda/envs/tensorflow2/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1298, in __init__\r\n    self._traceback = _extract_stack()\r\n\r\nInvalidArgumentError (see above for traceback): You must feed a value for placeholder tensor 'Placeholder' with dtype float and shape [50,28,28,1]\r\n     [[Node: Placeholder = Placeholder[dtype=DT_FLOAT, shape=[50,28,28,1], _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]]\r\n```"}