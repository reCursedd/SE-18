{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/256422915", "html_url": "https://github.com/tensorflow/tensorflow/pull/5018#issuecomment-256422915", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5018", "id": 256422915, "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjQyMjkxNQ==", "user": {"login": "DrMarcII", "id": 4109465, "node_id": "MDQ6VXNlcjQxMDk0NjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/4109465?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DrMarcII", "html_url": "https://github.com/DrMarcII", "followers_url": "https://api.github.com/users/DrMarcII/followers", "following_url": "https://api.github.com/users/DrMarcII/following{/other_user}", "gists_url": "https://api.github.com/users/DrMarcII/gists{/gist_id}", "starred_url": "https://api.github.com/users/DrMarcII/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DrMarcII/subscriptions", "organizations_url": "https://api.github.com/users/DrMarcII/orgs", "repos_url": "https://api.github.com/users/DrMarcII/repos", "events_url": "https://api.github.com/users/DrMarcII/events{/privacy}", "received_events_url": "https://api.github.com/users/DrMarcII/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-26T17:39:42Z", "updated_at": "2016-10-26T17:40:21Z", "author_association": "NONE", "body_html": "<p>gunan:</p>\n<blockquote>\n<p>We definitely will not depend on an unreleased bazel version.<br>\nSo, when bazel releases a new version, you can expect us to upgrade within 1 week, in the worst case.</p>\n</blockquote>\n<p>I certainly didn't expect an update to an unreleased; stated it more as a constraint that needed to be fulfilled before this PR can be completed.</p>\n<p>Justine:</p>\n<blockquote>\n<p>Is there any way to workaround Headless Chrome needing a tmpfs filesystem mounted? If there isn't, then I would like to see Bazel changed so a configuration flag isn't needed for builds to work.</p>\n</blockquote>\n<p>I haven't been able to find anyway to avoid the tmpfs filesystem for Headless Chrome. As I see it now, we three options:</p>\n<ol>\n<li>\n<p>Run the tests outside the sandbox by marking it local = True.</p>\n</li>\n<li>\n<p>Use the configuration flag (when Bazel 0.4.0 gets released).</p>\n</li>\n<li>\n<p>Push Bazel to either:</p>\n<p>a. mount a writable tmpfs filesystem at /run/shm in the sandbox by default.<br>\nb. create a rule-level mechanism for defining tmpfs mounts in the sandbox.</p>\n</li>\n</ol>", "body_text": "gunan:\n\nWe definitely will not depend on an unreleased bazel version.\nSo, when bazel releases a new version, you can expect us to upgrade within 1 week, in the worst case.\n\nI certainly didn't expect an update to an unreleased; stated it more as a constraint that needed to be fulfilled before this PR can be completed.\nJustine:\n\nIs there any way to workaround Headless Chrome needing a tmpfs filesystem mounted? If there isn't, then I would like to see Bazel changed so a configuration flag isn't needed for builds to work.\n\nI haven't been able to find anyway to avoid the tmpfs filesystem for Headless Chrome. As I see it now, we three options:\n\n\nRun the tests outside the sandbox by marking it local = True.\n\n\nUse the configuration flag (when Bazel 0.4.0 gets released).\n\n\nPush Bazel to either:\na. mount a writable tmpfs filesystem at /run/shm in the sandbox by default.\nb. create a rule-level mechanism for defining tmpfs mounts in the sandbox.", "body": "gunan:\n\n> We definitely will not depend on an unreleased bazel version.\n> So, when bazel releases a new version, you can expect us to upgrade within 1 week, in the worst case.\n\nI certainly didn't expect an update to an unreleased; stated it more as a constraint that needed to be fulfilled before this PR can be completed.\n\nJustine:\n\n> Is there any way to workaround Headless Chrome needing a tmpfs filesystem mounted? If there isn't, then I would like to see Bazel changed so a configuration flag isn't needed for builds to work.\n\nI haven't been able to find anyway to avoid the tmpfs filesystem for Headless Chrome. As I see it now, we three options:\n1. Run the tests outside the sandbox by marking it local = True.\n2. Use the configuration flag (when Bazel 0.4.0 gets released).\n3. Push Bazel to either:\n   \n   a. mount a writable tmpfs filesystem at /run/shm in the sandbox by default.\n   b. create a rule-level mechanism for defining tmpfs mounts in the sandbox. \n"}