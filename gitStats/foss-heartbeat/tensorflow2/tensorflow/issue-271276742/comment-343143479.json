{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/343143479", "html_url": "https://github.com/tensorflow/tensorflow/issues/14257#issuecomment-343143479", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14257", "id": 343143479, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzE0MzQ3OQ==", "user": {"login": "joel-shor", "id": 6020988, "node_id": "MDQ6VXNlcjYwMjA5ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/6020988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joel-shor", "html_url": "https://github.com/joel-shor", "followers_url": "https://api.github.com/users/joel-shor/followers", "following_url": "https://api.github.com/users/joel-shor/following{/other_user}", "gists_url": "https://api.github.com/users/joel-shor/gists{/gist_id}", "starred_url": "https://api.github.com/users/joel-shor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joel-shor/subscriptions", "organizations_url": "https://api.github.com/users/joel-shor/orgs", "repos_url": "https://api.github.com/users/joel-shor/repos", "events_url": "https://api.github.com/users/joel-shor/events{/privacy}", "received_events_url": "https://api.github.com/users/joel-shor/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-09T12:43:43Z", "updated_at": "2017-11-09T12:43:43Z", "author_association": "CONTRIBUTOR", "body_html": "<p>In general, <code>GANEstimator</code> is absolutely not meant to be a fully-flexible GAN solution; none of the canned Estimators are. For full control, you should use <code>TFGAN</code> or write your own <code>model_fn</code>, based on <code>GANEstimator</code> code.</p>\n<p>Re your specific questions:</p>\n<ol>\n<li>\n<p>Tensor conversions are standard in publicly accessible functions. However, I think all this code should be compatible with the new Dataset API, and I'll work with mrry@ on the best way to make that happen.</p>\n</li>\n<li>\n<p>I don't understand your use-case for passing real data of shape <code>[batch_size]</code> and generated data of <code>[batch_size, x]</code>, so I can't say whether or not this is a common-enough use-case to support in GANEstimator. Can you motivate this a bit more? Also, note that TFGAN already supports this behavior.</p>\n</li>\n</ol>", "body_text": "In general, GANEstimator is absolutely not meant to be a fully-flexible GAN solution; none of the canned Estimators are. For full control, you should use TFGAN or write your own model_fn, based on GANEstimator code.\nRe your specific questions:\n\n\nTensor conversions are standard in publicly accessible functions. However, I think all this code should be compatible with the new Dataset API, and I'll work with mrry@ on the best way to make that happen.\n\n\nI don't understand your use-case for passing real data of shape [batch_size] and generated data of [batch_size, x], so I can't say whether or not this is a common-enough use-case to support in GANEstimator. Can you motivate this a bit more? Also, note that TFGAN already supports this behavior.", "body": "In general, `GANEstimator` is absolutely not meant to be a fully-flexible GAN solution; none of the canned Estimators are. For full control, you should use `TFGAN` or write your own `model_fn`, based on `GANEstimator` code. \r\n\r\nRe your specific questions: \r\n1) Tensor conversions are standard in publicly accessible functions. However, I think all this code should be compatible with the new Dataset API, and I'll work with mrry@ on the best way to make that happen.\r\n\r\n2) I don't understand your use-case for passing real data of shape `[batch_size]` and generated data of `[batch_size, x]`, so I can't say whether or not this is a common-enough use-case to support in GANEstimator. Can you motivate this a bit more? Also, note that TFGAN already supports this behavior.\r\n"}