{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7470", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7470/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7470/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7470/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7470", "id": 207302766, "node_id": "MDU6SXNzdWUyMDczMDI3NjY=", "number": 7470, "title": "Android: Multiple dex files define Lorg/tensorflow/contrib/android/TensorFlowInferenceInterface", "user": {"login": "kevinashaw", "id": 7141343, "node_id": "MDQ6VXNlcjcxNDEzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/7141343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevinashaw", "html_url": "https://github.com/kevinashaw", "followers_url": "https://api.github.com/users/kevinashaw/followers", "following_url": "https://api.github.com/users/kevinashaw/following{/other_user}", "gists_url": "https://api.github.com/users/kevinashaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevinashaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevinashaw/subscriptions", "organizations_url": "https://api.github.com/users/kevinashaw/orgs", "repos_url": "https://api.github.com/users/kevinashaw/repos", "events_url": "https://api.github.com/users/kevinashaw/events{/privacy}", "received_events_url": "https://api.github.com/users/kevinashaw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "andrewharp", "id": 3376817, "node_id": "MDQ6VXNlcjMzNzY4MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3376817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewharp", "html_url": "https://github.com/andrewharp", "followers_url": "https://api.github.com/users/andrewharp/followers", "following_url": "https://api.github.com/users/andrewharp/following{/other_user}", "gists_url": "https://api.github.com/users/andrewharp/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewharp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewharp/subscriptions", "organizations_url": "https://api.github.com/users/andrewharp/orgs", "repos_url": "https://api.github.com/users/andrewharp/repos", "events_url": "https://api.github.com/users/andrewharp/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewharp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "andrewharp", "id": 3376817, "node_id": "MDQ6VXNlcjMzNzY4MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3376817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewharp", "html_url": "https://github.com/andrewharp", "followers_url": "https://api.github.com/users/andrewharp/followers", "following_url": "https://api.github.com/users/andrewharp/following{/other_user}", "gists_url": "https://api.github.com/users/andrewharp/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewharp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewharp/subscriptions", "organizations_url": "https://api.github.com/users/andrewharp/orgs", "repos_url": "https://api.github.com/users/andrewharp/repos", "events_url": "https://api.github.com/users/andrewharp/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewharp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-02-13T18:37:34Z", "updated_at": "2017-04-12T01:52:14Z", "closed_at": "2017-02-15T08:42:44Z", "author_association": "NONE", "body_html": "<p>I am getting the following error regarding the TensorFlowInferenceInterface only when I try to build an APK in Android Studio (on MacOS).  But when I instead just \"Run app\", I do not get the error and the app compiles, installs and runs just fine.  (There is also an unrelated warning shown for a CircularQueue that I am working to fix; I include it for completeness)</p>\n<pre><code>Information:0 warnings\nError:associated EnclosingMethod attribute. This class was probably produced by a\nError:indicate that it is *not* an inner class.\nInformation:See complete output in console\nError:Execution failed for task ':app:transformClassesWithDexForFastBuildDebug'.\n&gt; com.android.build.api.transform.TransformException: com.android.ide.common.process.ProcessException: java.util.concurrent.ExecutionException: java.lang.UnsupportedOperationException\nError:(com.bea.xml.stream.util.CircularQueue$1) that doesn't come with an\nError:warning: Ignoring InnerClasses attribute for an anonymous inner class\nError:Error converting bytecode to dex:\nCause: com.android.dex.DexException: Multiple dex files define Lorg/tensorflow/contrib/android/TensorFlowInferenceInterface;\nError:this warning is that reflective operations on this class will incorrectly\nError:and without specifying any \"-target\" type options. The consequence of ignoring\nInformation:Gradle tasks [:ai2_common:assembleDebug, :app:assembleFastBuildDebug, :common:assembleDebug]\nInformation:10 errors\nInformation:BUILD FAILED\nInformation:Total time: 54.509 secs\nError:solution is to recompile the class from source, using an up-to-date compiler\nError:compiler that did not target the modern .class file format. The recommended\n</code></pre>\n<p>I am using the following TensorFlowInferenceInterface.java file:</p>\n<pre><code>//\n// Source code recreated from a .class file by IntelliJ IDEA\n// (powered by Fernflower decompiler)\n//\n\npackage org.tensorflow.contrib.android;\n\nimport android.content.res.AssetManager;\nimport android.util.Log;\nimport java.util.Random;\n\npublic class TensorFlowInferenceInterface {\n    private static final String TAG = \"TensorFlowInferenceInterface\";\n    private final long id = (new Random()).nextLong();\n\n    public TensorFlowInferenceInterface() {\n        try {\n            this.testLoaded();\n            Log.i(\"TensorFlowInferenceInterface\", \"Native methods already loaded.\");\n        } catch (UnsatisfiedLinkError var4) {\n            Log.i(\"TensorFlowInferenceInterface\", \"Loading tensorflow_inference.\");\n\n            try {\n                System.loadLibrary(\"tensorflow_inference\");\n            } catch (UnsatisfiedLinkError var3) {\n                throw new RuntimeException(\"Native TF methods not found; check that the correct native libraries are present and loaded.\");\n            }\n        }\n\n    }\n\n    public native int initializeTensorFlow(AssetManager var1, String var2);\n    public native int runInference(String[] var1);\n    public native void enableStatLogging(boolean var1);\n    public native String getStatString();\n    public native void close();\n    public native void fillNodeFloat(String var1, int[] var2, float[] var3);\n    public native void fillNodeInt(String var1, int[] var2, int[] var3);\n    public native void fillNodeDouble(String var1, int[] var2, double[] var3);\n    public native void fillNodeByte(String var1, int[] var2, byte[] var3);\n    public native void readNodeFloat(String var1, float[] var2);\n    public native void readNodeInt(String var1, int[] var2);\n    public native void readNodeDouble(String var1, double[] var2);\n    public native void readNodeByte(String var1, byte[] var2);\n    private native void testLoaded();\n}\n</code></pre>\n<p>When I search for all references to <code>TensorFlowInferenceInterface</code> in the path, I only get these:</p>\n<pre><code>import org.tensorflow.contrib.android.TensorFlowInferenceInterface;\n</code></pre>\n<p>and</p>\n<pre><code>        public TensorFlowInferenceInterface inferenceInterface;\n</code></pre>\n<p>and</p>\n<pre><code>        inferenceInterface = new TensorFlowInferenceInterface();\n</code></pre>\n<p>No other place is it even mentioned.<br>\nHas anyone seen this before?</p>", "body_text": "I am getting the following error regarding the TensorFlowInferenceInterface only when I try to build an APK in Android Studio (on MacOS).  But when I instead just \"Run app\", I do not get the error and the app compiles, installs and runs just fine.  (There is also an unrelated warning shown for a CircularQueue that I am working to fix; I include it for completeness)\nInformation:0 warnings\nError:associated EnclosingMethod attribute. This class was probably produced by a\nError:indicate that it is *not* an inner class.\nInformation:See complete output in console\nError:Execution failed for task ':app:transformClassesWithDexForFastBuildDebug'.\n> com.android.build.api.transform.TransformException: com.android.ide.common.process.ProcessException: java.util.concurrent.ExecutionException: java.lang.UnsupportedOperationException\nError:(com.bea.xml.stream.util.CircularQueue$1) that doesn't come with an\nError:warning: Ignoring InnerClasses attribute for an anonymous inner class\nError:Error converting bytecode to dex:\nCause: com.android.dex.DexException: Multiple dex files define Lorg/tensorflow/contrib/android/TensorFlowInferenceInterface;\nError:this warning is that reflective operations on this class will incorrectly\nError:and without specifying any \"-target\" type options. The consequence of ignoring\nInformation:Gradle tasks [:ai2_common:assembleDebug, :app:assembleFastBuildDebug, :common:assembleDebug]\nInformation:10 errors\nInformation:BUILD FAILED\nInformation:Total time: 54.509 secs\nError:solution is to recompile the class from source, using an up-to-date compiler\nError:compiler that did not target the modern .class file format. The recommended\n\nI am using the following TensorFlowInferenceInterface.java file:\n//\n// Source code recreated from a .class file by IntelliJ IDEA\n// (powered by Fernflower decompiler)\n//\n\npackage org.tensorflow.contrib.android;\n\nimport android.content.res.AssetManager;\nimport android.util.Log;\nimport java.util.Random;\n\npublic class TensorFlowInferenceInterface {\n    private static final String TAG = \"TensorFlowInferenceInterface\";\n    private final long id = (new Random()).nextLong();\n\n    public TensorFlowInferenceInterface() {\n        try {\n            this.testLoaded();\n            Log.i(\"TensorFlowInferenceInterface\", \"Native methods already loaded.\");\n        } catch (UnsatisfiedLinkError var4) {\n            Log.i(\"TensorFlowInferenceInterface\", \"Loading tensorflow_inference.\");\n\n            try {\n                System.loadLibrary(\"tensorflow_inference\");\n            } catch (UnsatisfiedLinkError var3) {\n                throw new RuntimeException(\"Native TF methods not found; check that the correct native libraries are present and loaded.\");\n            }\n        }\n\n    }\n\n    public native int initializeTensorFlow(AssetManager var1, String var2);\n    public native int runInference(String[] var1);\n    public native void enableStatLogging(boolean var1);\n    public native String getStatString();\n    public native void close();\n    public native void fillNodeFloat(String var1, int[] var2, float[] var3);\n    public native void fillNodeInt(String var1, int[] var2, int[] var3);\n    public native void fillNodeDouble(String var1, int[] var2, double[] var3);\n    public native void fillNodeByte(String var1, int[] var2, byte[] var3);\n    public native void readNodeFloat(String var1, float[] var2);\n    public native void readNodeInt(String var1, int[] var2);\n    public native void readNodeDouble(String var1, double[] var2);\n    public native void readNodeByte(String var1, byte[] var2);\n    private native void testLoaded();\n}\n\nWhen I search for all references to TensorFlowInferenceInterface in the path, I only get these:\nimport org.tensorflow.contrib.android.TensorFlowInferenceInterface;\n\nand\n        public TensorFlowInferenceInterface inferenceInterface;\n\nand\n        inferenceInterface = new TensorFlowInferenceInterface();\n\nNo other place is it even mentioned.\nHas anyone seen this before?", "body": "I am getting the following error regarding the TensorFlowInferenceInterface only when I try to build an APK in Android Studio (on MacOS).  But when I instead just \"Run app\", I do not get the error and the app compiles, installs and runs just fine.  (There is also an unrelated warning shown for a CircularQueue that I am working to fix; I include it for completeness)\r\n```\r\nInformation:0 warnings\r\nError:associated EnclosingMethod attribute. This class was probably produced by a\r\nError:indicate that it is *not* an inner class.\r\nInformation:See complete output in console\r\nError:Execution failed for task ':app:transformClassesWithDexForFastBuildDebug'.\r\n> com.android.build.api.transform.TransformException: com.android.ide.common.process.ProcessException: java.util.concurrent.ExecutionException: java.lang.UnsupportedOperationException\r\nError:(com.bea.xml.stream.util.CircularQueue$1) that doesn't come with an\r\nError:warning: Ignoring InnerClasses attribute for an anonymous inner class\r\nError:Error converting bytecode to dex:\r\nCause: com.android.dex.DexException: Multiple dex files define Lorg/tensorflow/contrib/android/TensorFlowInferenceInterface;\r\nError:this warning is that reflective operations on this class will incorrectly\r\nError:and without specifying any \"-target\" type options. The consequence of ignoring\r\nInformation:Gradle tasks [:ai2_common:assembleDebug, :app:assembleFastBuildDebug, :common:assembleDebug]\r\nInformation:10 errors\r\nInformation:BUILD FAILED\r\nInformation:Total time: 54.509 secs\r\nError:solution is to recompile the class from source, using an up-to-date compiler\r\nError:compiler that did not target the modern .class file format. The recommended\r\n```\r\n\r\nI am using the following TensorFlowInferenceInterface.java file:\r\n```\r\n//\r\n// Source code recreated from a .class file by IntelliJ IDEA\r\n// (powered by Fernflower decompiler)\r\n//\r\n\r\npackage org.tensorflow.contrib.android;\r\n\r\nimport android.content.res.AssetManager;\r\nimport android.util.Log;\r\nimport java.util.Random;\r\n\r\npublic class TensorFlowInferenceInterface {\r\n    private static final String TAG = \"TensorFlowInferenceInterface\";\r\n    private final long id = (new Random()).nextLong();\r\n\r\n    public TensorFlowInferenceInterface() {\r\n        try {\r\n            this.testLoaded();\r\n            Log.i(\"TensorFlowInferenceInterface\", \"Native methods already loaded.\");\r\n        } catch (UnsatisfiedLinkError var4) {\r\n            Log.i(\"TensorFlowInferenceInterface\", \"Loading tensorflow_inference.\");\r\n\r\n            try {\r\n                System.loadLibrary(\"tensorflow_inference\");\r\n            } catch (UnsatisfiedLinkError var3) {\r\n                throw new RuntimeException(\"Native TF methods not found; check that the correct native libraries are present and loaded.\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public native int initializeTensorFlow(AssetManager var1, String var2);\r\n    public native int runInference(String[] var1);\r\n    public native void enableStatLogging(boolean var1);\r\n    public native String getStatString();\r\n    public native void close();\r\n    public native void fillNodeFloat(String var1, int[] var2, float[] var3);\r\n    public native void fillNodeInt(String var1, int[] var2, int[] var3);\r\n    public native void fillNodeDouble(String var1, int[] var2, double[] var3);\r\n    public native void fillNodeByte(String var1, int[] var2, byte[] var3);\r\n    public native void readNodeFloat(String var1, float[] var2);\r\n    public native void readNodeInt(String var1, int[] var2);\r\n    public native void readNodeDouble(String var1, double[] var2);\r\n    public native void readNodeByte(String var1, byte[] var2);\r\n    private native void testLoaded();\r\n}\r\n```\r\nWhen I search for all references to `TensorFlowInferenceInterface` in the path, I only get these:\r\n```\r\nimport org.tensorflow.contrib.android.TensorFlowInferenceInterface;\r\n```\r\nand\r\n```\r\n        public TensorFlowInferenceInterface inferenceInterface;\r\n```\r\nand\r\n```\r\n        inferenceInterface = new TensorFlowInferenceInterface();\r\n```\r\nNo other place is it even mentioned.\r\nHas anyone seen this before?"}