{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/358874943", "html_url": "https://github.com/tensorflow/tensorflow/issues/12663#issuecomment-358874943", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12663", "id": 358874943, "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODg3NDk0Mw==", "user": {"login": "jart", "id": 49262, "node_id": "MDQ6VXNlcjQ5MjYy", "avatar_url": "https://avatars1.githubusercontent.com/u/49262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jart", "html_url": "https://github.com/jart", "followers_url": "https://api.github.com/users/jart/followers", "following_url": "https://api.github.com/users/jart/following{/other_user}", "gists_url": "https://api.github.com/users/jart/gists{/gist_id}", "starred_url": "https://api.github.com/users/jart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jart/subscriptions", "organizations_url": "https://api.github.com/users/jart/orgs", "repos_url": "https://api.github.com/users/jart/repos", "events_url": "https://api.github.com/users/jart/events{/privacy}", "received_events_url": "https://api.github.com/users/jart/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-19T06:01:12Z", "updated_at": "2018-01-19T06:01:12Z", "author_association": "MEMBER", "body_html": "<p>OK so in the open source world, there is no difference.</p>\n<p>Python's file API has mutexes. So FastGFile is the same as GFile. This weird division exists because, internally at Google where TensorFlow first evolved, there exists two absl-py classes that that have these names. They hook into some C++ APIs and do mutexing manually. The constructors for these two classes optionally provide it an RLock or NullLock.</p>\n<p>We probably don't have the time right now to clean up this API. We should however make FastGFile undocumented, leave a plain old comment saying it should be marked for deletion, and then never delete it, due to our API stability promise.</p>\n<p>If someone can enlighten me on the benefits of saving nanoseconds in Python when even system calls these days take microseconds, then I'd suggest we implement it, but otherwise seems doubtful.</p>\n<p>I'll mark this contributions welcome for docs cleanup help.</p>", "body_text": "OK so in the open source world, there is no difference.\nPython's file API has mutexes. So FastGFile is the same as GFile. This weird division exists because, internally at Google where TensorFlow first evolved, there exists two absl-py classes that that have these names. They hook into some C++ APIs and do mutexing manually. The constructors for these two classes optionally provide it an RLock or NullLock.\nWe probably don't have the time right now to clean up this API. We should however make FastGFile undocumented, leave a plain old comment saying it should be marked for deletion, and then never delete it, due to our API stability promise.\nIf someone can enlighten me on the benefits of saving nanoseconds in Python when even system calls these days take microseconds, then I'd suggest we implement it, but otherwise seems doubtful.\nI'll mark this contributions welcome for docs cleanup help.", "body": "OK so in the open source world, there is no difference.\r\n\r\nPython's file API has mutexes. So FastGFile is the same as GFile. This weird division exists because, internally at Google where TensorFlow first evolved, there exists two absl-py classes that that have these names. They hook into some C++ APIs and do mutexing manually. The constructors for these two classes optionally provide it an RLock or NullLock.\r\n\r\nWe probably don't have the time right now to clean up this API. We should however make FastGFile undocumented, leave a plain old comment saying it should be marked for deletion, and then never delete it, due to our API stability promise.\r\n\r\nIf someone can enlighten me on the benefits of saving nanoseconds in Python when even system calls these days take microseconds, then I'd suggest we implement it, but otherwise seems doubtful.\r\n\r\nI'll mark this contributions welcome for docs cleanup help."}