{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/158226856", "pull_request_review_id": 85002109, "id": 158226856, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1ODIyNjg1Ng==", "diff_hunk": "@@ -0,0 +1,35 @@\n+/* Copyright 2017 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+#ifndef TENSORFLOW_COMPILER_XLA_SERVICE_CPU_WINDOWS_COMPATIBILITY_H_\n+#define TENSORFLOW_COMPILER_XLA_SERVICE_CPU_WINDOWS_COMPATIBILITY_H_\n+\n+#include <math.h>\n+\n+extern \"C\" {\n+\n+void sincos(double x, double *sinv, double *cosv) {", "path": "tensorflow/compiler/xla/service/cpu/windows_compatibility.h", "position": null, "original_position": 23, "commit_id": "1728359961a7f89f2ed320bdf2ef55abe0977c28", "original_commit_id": "cd4835dd8f3a72ad88da8473863dc67d2705c843", "user": {"login": "rongjiecomputer", "id": 13115060, "node_id": "MDQ6VXNlcjEzMTE1MDYw", "avatar_url": "https://avatars2.githubusercontent.com/u/13115060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rongjiecomputer", "html_url": "https://github.com/rongjiecomputer", "followers_url": "https://api.github.com/users/rongjiecomputer/followers", "following_url": "https://api.github.com/users/rongjiecomputer/following{/other_user}", "gists_url": "https://api.github.com/users/rongjiecomputer/gists{/gist_id}", "starred_url": "https://api.github.com/users/rongjiecomputer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rongjiecomputer/subscriptions", "organizations_url": "https://api.github.com/users/rongjiecomputer/orgs", "repos_url": "https://api.github.com/users/rongjiecomputer/repos", "events_url": "https://api.github.com/users/rongjiecomputer/events{/privacy}", "received_events_url": "https://api.github.com/users/rongjiecomputer/received_events", "type": "User", "site_admin": false}, "body": "> I'd avoid putting the _MSC_VER stuff here at all -- instead guard the entire contents of windows_compatibility.cc/h undef _MSC_VER.\r\n\r\nDone\r\n\r\n> Secondly, is _MSC_VER the right macro to use for this? Will it work do the right thing if we build with clang on windows?\r\n\r\nYes, it will work. `clang-cl.exe` tries very hard to pretend it is MSVC. I do like to build Tensorflow with Clang on Windows as well to see if it yields better performance.", "created_at": "2017-12-21T09:11:12Z", "updated_at": "2017-12-21T23:15:47Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/15514#discussion_r158226856", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/15514", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/158226856"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/15514#discussion_r158226856"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/15514"}}, "body_html": "<blockquote>\n<p>I'd avoid putting the _MSC_VER stuff here at all -- instead guard the entire contents of windows_compatibility.cc/h undef _MSC_VER.</p>\n</blockquote>\n<p>Done</p>\n<blockquote>\n<p>Secondly, is _MSC_VER the right macro to use for this? Will it work do the right thing if we build with clang on windows?</p>\n</blockquote>\n<p>Yes, it will work. <code>clang-cl.exe</code> tries very hard to pretend it is MSVC. I do like to build Tensorflow with Clang on Windows as well to see if it yields better performance.</p>", "body_text": "I'd avoid putting the _MSC_VER stuff here at all -- instead guard the entire contents of windows_compatibility.cc/h undef _MSC_VER.\n\nDone\n\nSecondly, is _MSC_VER the right macro to use for this? Will it work do the right thing if we build with clang on windows?\n\nYes, it will work. clang-cl.exe tries very hard to pretend it is MSVC. I do like to build Tensorflow with Clang on Windows as well to see if it yields better performance.", "in_reply_to_id": 158222209}