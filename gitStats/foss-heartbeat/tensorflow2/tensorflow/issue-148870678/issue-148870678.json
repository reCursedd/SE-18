{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1984", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1984/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1984/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1984/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/1984", "id": 148870678, "node_id": "MDU6SXNzdWUxNDg4NzA2Nzg=", "number": 1984, "title": "Unclear what parallel_iterations does in While/scan (docs issue, possible functional_ops issue)", "user": {"login": "lahwran", "id": 550498, "node_id": "MDQ6VXNlcjU1MDQ5OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/550498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lahwran", "html_url": "https://github.com/lahwran", "followers_url": "https://api.github.com/users/lahwran/followers", "following_url": "https://api.github.com/users/lahwran/following{/other_user}", "gists_url": "https://api.github.com/users/lahwran/gists{/gist_id}", "starred_url": "https://api.github.com/users/lahwran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lahwran/subscriptions", "organizations_url": "https://api.github.com/users/lahwran/orgs", "repos_url": "https://api.github.com/users/lahwran/repos", "events_url": "https://api.github.com/users/lahwran/events{/privacy}", "received_events_url": "https://api.github.com/users/lahwran/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 284443156, "node_id": "MDU6TGFiZWwyODQ0NDMxNTY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:docs", "name": "type:docs", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2016-04-16T16:59:48Z", "updated_at": "2018-09-12T18:56:28Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>It's unclear from both the code and documentation why scan() defaults to 10 parallel iterations. doesn't that cause it to sometimes run the function before the accumulated value is available? I also poked around and read the documentation for While, and that didn't clear things up. Things it looks like it might do:</p>\n<ul>\n<li>Run steps in parallel if and only if there are no graph dependencies on the last step</li>\n<li>Run steps in parallel but provide nonsense values for graph dependencies on the last step</li>\n<li>Ignore it because the parameter doesn't do anything yet?</li>\n<li>Do magic beyond my ken to skip ahead in serial computations? if so, can I tell it to only run the last one, thereby creating a halting oracle?</li>\n</ul>\n<h3>Steps to reproduce</h3>\n<ol>\n<li>read the docs in master for scan() and while()</li>\n<li>read the code for functional_ops.scan()</li>\n<li>compare to the code for functional_ops.map_fn()</li>\n<li>be confused that scan() appears to get the right answer when you use it</li>\n</ol>", "body_text": "It's unclear from both the code and documentation why scan() defaults to 10 parallel iterations. doesn't that cause it to sometimes run the function before the accumulated value is available? I also poked around and read the documentation for While, and that didn't clear things up. Things it looks like it might do:\n\nRun steps in parallel if and only if there are no graph dependencies on the last step\nRun steps in parallel but provide nonsense values for graph dependencies on the last step\nIgnore it because the parameter doesn't do anything yet?\nDo magic beyond my ken to skip ahead in serial computations? if so, can I tell it to only run the last one, thereby creating a halting oracle?\n\nSteps to reproduce\n\nread the docs in master for scan() and while()\nread the code for functional_ops.scan()\ncompare to the code for functional_ops.map_fn()\nbe confused that scan() appears to get the right answer when you use it", "body": "It's unclear from both the code and documentation why scan() defaults to 10 parallel iterations. doesn't that cause it to sometimes run the function before the accumulated value is available? I also poked around and read the documentation for While, and that didn't clear things up. Things it looks like it might do:\n- Run steps in parallel if and only if there are no graph dependencies on the last step\n- Run steps in parallel but provide nonsense values for graph dependencies on the last step\n- Ignore it because the parameter doesn't do anything yet?\n- Do magic beyond my ken to skip ahead in serial computations? if so, can I tell it to only run the last one, thereby creating a halting oracle?\n### Steps to reproduce\n1. read the docs in master for scan() and while()\n2. read the code for functional_ops.scan()\n3. compare to the code for functional_ops.map_fn()\n4. be confused that scan() appears to get the right answer when you use it\n"}