{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19958", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19958/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19958/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19958/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19958", "id": 331774169, "node_id": "MDU6SXNzdWUzMzE3NzQxNjk=", "number": 19958, "title": "Support init_from_checkpoint and warm start with Distribution Strategy ", "user": {"login": "guptapriya", "id": 14104855, "node_id": "MDQ6VXNlcjE0MTA0ODU1", "avatar_url": "https://avatars1.githubusercontent.com/u/14104855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guptapriya", "html_url": "https://github.com/guptapriya", "followers_url": "https://api.github.com/users/guptapriya/followers", "following_url": "https://api.github.com/users/guptapriya/following{/other_user}", "gists_url": "https://api.github.com/users/guptapriya/gists{/gist_id}", "starred_url": "https://api.github.com/users/guptapriya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guptapriya/subscriptions", "organizations_url": "https://api.github.com/users/guptapriya/orgs", "repos_url": "https://api.github.com/users/guptapriya/repos", "events_url": "https://api.github.com/users/guptapriya/events{/privacy}", "received_events_url": "https://api.github.com/users/guptapriya/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 996845227, "node_id": "MDU6TGFiZWw5OTY4NDUyMjc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:dist-strat", "name": "comp:dist-strat", "color": "0052cc", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "guptapriya", "id": 14104855, "node_id": "MDQ6VXNlcjE0MTA0ODU1", "avatar_url": "https://avatars1.githubusercontent.com/u/14104855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guptapriya", "html_url": "https://github.com/guptapriya", "followers_url": "https://api.github.com/users/guptapriya/followers", "following_url": "https://api.github.com/users/guptapriya/following{/other_user}", "gists_url": "https://api.github.com/users/guptapriya/gists{/gist_id}", "starred_url": "https://api.github.com/users/guptapriya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guptapriya/subscriptions", "organizations_url": "https://api.github.com/users/guptapriya/orgs", "repos_url": "https://api.github.com/users/guptapriya/repos", "events_url": "https://api.github.com/users/guptapriya/events{/privacy}", "received_events_url": "https://api.github.com/users/guptapriya/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "guptapriya", "id": 14104855, "node_id": "MDQ6VXNlcjE0MTA0ODU1", "avatar_url": "https://avatars1.githubusercontent.com/u/14104855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guptapriya", "html_url": "https://github.com/guptapriya", "followers_url": "https://api.github.com/users/guptapriya/followers", "following_url": "https://api.github.com/users/guptapriya/following{/other_user}", "gists_url": "https://api.github.com/users/guptapriya/gists{/gist_id}", "starred_url": "https://api.github.com/users/guptapriya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guptapriya/subscriptions", "organizations_url": "https://api.github.com/users/guptapriya/orgs", "repos_url": "https://api.github.com/users/guptapriya/repos", "events_url": "https://api.github.com/users/guptapriya/events{/privacy}", "received_events_url": "https://api.github.com/users/guptapriya/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 21, "created_at": "2018-06-12T22:18:08Z", "updated_at": "2018-07-30T20:24:28Z", "closed_at": "2018-07-30T20:24:28Z", "author_association": "MEMBER", "body_html": "<p>Please go to Stack Overflow for help and support:</p>\n<p><a href=\"https://stackoverflow.com/questions/tagged/tensorflow\" rel=\"nofollow\">https://stackoverflow.com/questions/tagged/tensorflow</a></p>\n<p>If you open a GitHub issue, here is our policy:</p>\n<ol>\n<li>It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).</li>\n<li>The form below must be filled out.</li>\n<li>It shouldn't be a TensorBoard issue. Those go <a href=\"https://github.com/tensorflow/tensorboard/issues\">here</a>.</li>\n</ol>\n<p><strong>Here's why we have that policy</strong>: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.</p>\n<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:</li>\n<li><strong>TensorFlow version (use command below)</strong>:</li>\n<li><strong>Python version</strong>:</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>:</li>\n<li><strong>GPU model and memory</strong>:</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<p>You can collect some of this information using our environment capture script:</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\">https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh</a></p>\n<p>You can obtain the TensorFlow version with</p>\n<p>python -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"</p>\n<h3>Describe the problem</h3>\n<p>Reporting issues raise in this stackoverflow question:<br>\n<a href=\"https://stackoverflow.com/questions/50758110/warm-start-with-distribute-mirroredstrategy-and-tf-estimator\" rel=\"nofollow\">https://stackoverflow.com/questions/50758110/warm-start-with-distribute-mirroredstrategy-and-tf-estimator</a>:</p>\n<ol>\n<li>tf.train.init_from_checkpoint doesn't work well with MirroredStrategy</li>\n<li>tf.estimator.WarmStartSettings with Estimator doesn't work with MirroredStrategy</li>\n</ol>\n<h3>Source code / logs</h3>\n<p>See code snippets and error messages in this stack overflow page:<br>\n<a href=\"https://stackoverflow.com/questions/50758110/warm-start-with-distribute-mirroredstrategy-and-tf-estimator\" rel=\"nofollow\">https://stackoverflow.com/questions/50758110/warm-start-with-distribute-mirroredstrategy-and-tf-estimator</a></p>\n<p>The root cause is that we haven't modified these 2 paths for restoring from checkpoints to work with mirrored variables. So we need to do 2 things:</p>\n<ol>\n<li>Use the appropriate method to restore mirrored variables in these codepaths - either via distribution.update or by using Saver (see Allen's suggestion below).</li>\n<li>if the restoring is happening in tower context(for e.g. when init_from_checkpoint is called in model_fn), then we may need to first enter cross tower context before restoring.</li>\n</ol>\n<p>Suggestion for addressing <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"115886302\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/1\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/1/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/1\">#1</a> from <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3731025\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/allenlavoie\">@allenlavoie</a> :<br>\nDo the same <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/training/saver.py#L531\">SaveableObject extraction as Saver</a> in warm_start, then just call SaveableObject.restore() with the Tensor instead of using .assign. This will work for MirroredVariables and whatever else is checkpointable (and means that to work with both, new objects only need to do the checkpointable thing). Potentially we could just call <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/training/saver.py#L573\">SaveableObjectsForOp</a> for everything including variables.</p>", "body_text": "Please go to Stack Overflow for help and support:\nhttps://stackoverflow.com/questions/tagged/tensorflow\nIf you open a GitHub issue, here is our policy:\n\nIt must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\nThe form below must be filled out.\nIt shouldn't be a TensorBoard issue. Those go here.\n\nHere's why we have that policy: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\n\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nTensorFlow installed from (source or binary):\nTensorFlow version (use command below):\nPython version:\nBazel version (if compiling from source):\nGCC/Compiler version (if compiling from source):\nCUDA/cuDNN version:\nGPU model and memory:\nExact command to reproduce:\n\nYou can collect some of this information using our environment capture script:\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\nYou can obtain the TensorFlow version with\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\nDescribe the problem\nReporting issues raise in this stackoverflow question:\nhttps://stackoverflow.com/questions/50758110/warm-start-with-distribute-mirroredstrategy-and-tf-estimator:\n\ntf.train.init_from_checkpoint doesn't work well with MirroredStrategy\ntf.estimator.WarmStartSettings with Estimator doesn't work with MirroredStrategy\n\nSource code / logs\nSee code snippets and error messages in this stack overflow page:\nhttps://stackoverflow.com/questions/50758110/warm-start-with-distribute-mirroredstrategy-and-tf-estimator\nThe root cause is that we haven't modified these 2 paths for restoring from checkpoints to work with mirrored variables. So we need to do 2 things:\n\nUse the appropriate method to restore mirrored variables in these codepaths - either via distribution.update or by using Saver (see Allen's suggestion below).\nif the restoring is happening in tower context(for e.g. when init_from_checkpoint is called in model_fn), then we may need to first enter cross tower context before restoring.\n\nSuggestion for addressing #1 from @allenlavoie :\nDo the same SaveableObject extraction as Saver in warm_start, then just call SaveableObject.restore() with the Tensor instead of using .assign. This will work for MirroredVariables and whatever else is checkpointable (and means that to work with both, new objects only need to do the checkpointable thing). Potentially we could just call SaveableObjectsForOp for everything including variables.", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\n- **TensorFlow installed from (source or binary)**:\r\n- **TensorFlow version (use command below)**:\r\n- **Python version**: \r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nReporting issues raise in this stackoverflow question:\r\nhttps://stackoverflow.com/questions/50758110/warm-start-with-distribute-mirroredstrategy-and-tf-estimator:\r\n1.  tf.train.init_from_checkpoint doesn't work well with MirroredStrategy\r\n2. tf.estimator.WarmStartSettings with Estimator doesn't work with MirroredStrategy \r\n\r\n\r\n### Source code / logs\r\nSee code snippets and error messages in this stack overflow page:\r\nhttps://stackoverflow.com/questions/50758110/warm-start-with-distribute-mirroredstrategy-and-tf-estimator\r\n\r\nThe root cause is that we haven't modified these 2 paths for restoring from checkpoints to work with mirrored variables. So we need to do 2 things:\r\n1. Use the appropriate method to restore mirrored variables in these codepaths - either via distribution.update or by using Saver (see Allen's suggestion below). \r\n2. if the restoring is happening in tower context(for e.g. when init_from_checkpoint is called in model_fn), then we may need to first enter cross tower context before restoring. \r\n\r\nSuggestion for addressing #1 from @allenlavoie :\r\nDo the same [SaveableObject extraction as Saver](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/training/saver.py#L531) in warm_start, then just call SaveableObject.restore() with the Tensor instead of using .assign. This will work for MirroredVariables and whatever else is checkpointable (and means that to work with both, new objects only need to do the checkpointable thing). Potentially we could just call [SaveableObjectsForOp](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/training/saver.py#L573) for everything including variables.\r\n\r\n"}