{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/190306062", "pull_request_review_id": 122656058, "id": 190306062, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MDMwNjA2Mg==", "diff_hunk": "@@ -1084,6 +1084,76 @@ def testGLSTMCell(self):\n                             h_res, 1e-5)\n \n \n+class LayerNormBasicGRUCellTest(test.TestCase):\n+  # NOTE: all the values in the current test case have been calculated.\n+\n+  def testMultiCellLayerNormBasicGRUCell(self):\n+    with self.test_session() as sess:\n+      with variable_scope.variable_scope(\"root\", initializer=init_ops.Identity()):\n+        x = array_ops.zeros([1, 3])\n+        h0 = array_ops.zeros([1, 3])\n+        h1 = array_ops.zeros([1, 3])\n+        state = (h0, h1)\n+        single_cell = lambda: contrib_rnn_cell.LayerNormBasicGRUCell(3)\n+        cell = rnn_cell.MultiRNNCell([single_cell() for _ in range(2)], state_is_tuple=True)\n+\n+        g, out_m = cell(x, state)\n+        sess.run([variables.global_variables_initializer()])\n+        res = sess.run([g, out_m], {\n+          x.name: np.array([[0, 1, 2]]),\n+          h0.name: 0.1 * np.asarray([[3, 4, 5]]),\n+          h1.name: 0.1 * np.asarray([[6, 7, 8]])\n+        })\n+\n+        expected_state0 = np.array([[0.0261896, 0.2, 0.8666091]])", "path": "tensorflow/contrib/rnn/python/kernel_tests/rnn_cell_test.py", "position": 25, "original_position": 25, "commit_id": "249443a3e718ca5367aac1a2f34b1ba42a79e195", "original_commit_id": "000474bf24f86dc11136f0ef8bb03af98d7a7754", "user": {"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}, "body": "You can have an alternative implementation in numpy. You can also check degenerate cases, e.g. when the mean and/or variance is known.", "created_at": "2018-05-23T16:00:54Z", "updated_at": "2018-09-10T15:16:01Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/14578#discussion_r190306062", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14578", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/190306062"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/14578#discussion_r190306062"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14578"}}, "body_html": "<p>You can have an alternative implementation in numpy. You can also check degenerate cases, e.g. when the mean and/or variance is known.</p>", "body_text": "You can have an alternative implementation in numpy. You can also check degenerate cases, e.g. when the mean and/or variance is known.", "in_reply_to_id": 189728585}