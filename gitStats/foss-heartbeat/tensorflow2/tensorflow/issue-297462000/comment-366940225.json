{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/366940225", "html_url": "https://github.com/tensorflow/tensorflow/issues/17043#issuecomment-366940225", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17043", "id": 366940225, "node_id": "MDEyOklzc3VlQ29tbWVudDM2Njk0MDIyNQ==", "user": {"login": "bioothod", "id": 1847575, "node_id": "MDQ6VXNlcjE4NDc1NzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1847575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bioothod", "html_url": "https://github.com/bioothod", "followers_url": "https://api.github.com/users/bioothod/followers", "following_url": "https://api.github.com/users/bioothod/following{/other_user}", "gists_url": "https://api.github.com/users/bioothod/gists{/gist_id}", "starred_url": "https://api.github.com/users/bioothod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bioothod/subscriptions", "organizations_url": "https://api.github.com/users/bioothod/orgs", "repos_url": "https://api.github.com/users/bioothod/repos", "events_url": "https://api.github.com/users/bioothod/events{/privacy}", "received_events_url": "https://api.github.com/users/bioothod/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-20T10:52:39Z", "updated_at": "2018-02-20T10:52:39Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Upgrading to gcc 6.3.0 does not fix this issue, neither with allocator alignment nor with eigen one. Patch below fixes misalignment segfault, but network still produces garbage. Removing avx512 instructions (i.e. only using avx2, sse4.2 and mfma) fixes the problem.</p>\n<pre><code>diff --git a/tensorflow/core/framework/allocator.h b/tensorflow/core/framework/allocator.h\nindex 5a95d3a..4e5bc66 100644\n--- a/tensorflow/core/framework/allocator.h\n+++ b/tensorflow/core/framework/allocator.h\n@@ -67,13 +67,8 @@ struct AllocatorStats {\n // device memory.\n class Allocator {\n  public:\n-#ifdef EIGEN_VECTORIZE_AVX512\n   // Align to 64 byte boundary.\n   static constexpr size_t kAllocatorAlignment = 64;\n-#else\n-  // Align to 32 byte boundary.\n-  static constexpr size_t kAllocatorAlignment = 32;\n-#endif\n \n   virtual ~Allocator();\n \ndiff --git a/third_party/eigen.BUILD b/third_party/eigen.BUILD\nindex 07bb664..ffe8a43 100644\n--- a/third_party/eigen.BUILD\n+++ b/third_party/eigen.BUILD\n@@ -64,6 +64,7 @@ cc_library(\n         # This define (mostly) guarantees we don't link any problematic\n         # code. We use it, but we do not rely on it, as evidenced above.\n         \"EIGEN_MPL2_ONLY\",\n+       \"EIGEN_MAX_ALIGN_BYTES=64\",\n     ],\n     includes = [\".\"],\n     visibility = [\"//visibility:public\"],\n</code></pre>", "body_text": "Upgrading to gcc 6.3.0 does not fix this issue, neither with allocator alignment nor with eigen one. Patch below fixes misalignment segfault, but network still produces garbage. Removing avx512 instructions (i.e. only using avx2, sse4.2 and mfma) fixes the problem.\ndiff --git a/tensorflow/core/framework/allocator.h b/tensorflow/core/framework/allocator.h\nindex 5a95d3a..4e5bc66 100644\n--- a/tensorflow/core/framework/allocator.h\n+++ b/tensorflow/core/framework/allocator.h\n@@ -67,13 +67,8 @@ struct AllocatorStats {\n // device memory.\n class Allocator {\n  public:\n-#ifdef EIGEN_VECTORIZE_AVX512\n   // Align to 64 byte boundary.\n   static constexpr size_t kAllocatorAlignment = 64;\n-#else\n-  // Align to 32 byte boundary.\n-  static constexpr size_t kAllocatorAlignment = 32;\n-#endif\n \n   virtual ~Allocator();\n \ndiff --git a/third_party/eigen.BUILD b/third_party/eigen.BUILD\nindex 07bb664..ffe8a43 100644\n--- a/third_party/eigen.BUILD\n+++ b/third_party/eigen.BUILD\n@@ -64,6 +64,7 @@ cc_library(\n         # This define (mostly) guarantees we don't link any problematic\n         # code. We use it, but we do not rely on it, as evidenced above.\n         \"EIGEN_MPL2_ONLY\",\n+       \"EIGEN_MAX_ALIGN_BYTES=64\",\n     ],\n     includes = [\".\"],\n     visibility = [\"//visibility:public\"],", "body": "Upgrading to gcc 6.3.0 does not fix this issue, neither with allocator alignment nor with eigen one. Patch below fixes misalignment segfault, but network still produces garbage. Removing avx512 instructions (i.e. only using avx2, sse4.2 and mfma) fixes the problem.\r\n\r\n```\r\ndiff --git a/tensorflow/core/framework/allocator.h b/tensorflow/core/framework/allocator.h\r\nindex 5a95d3a..4e5bc66 100644\r\n--- a/tensorflow/core/framework/allocator.h\r\n+++ b/tensorflow/core/framework/allocator.h\r\n@@ -67,13 +67,8 @@ struct AllocatorStats {\r\n // device memory.\r\n class Allocator {\r\n  public:\r\n-#ifdef EIGEN_VECTORIZE_AVX512\r\n   // Align to 64 byte boundary.\r\n   static constexpr size_t kAllocatorAlignment = 64;\r\n-#else\r\n-  // Align to 32 byte boundary.\r\n-  static constexpr size_t kAllocatorAlignment = 32;\r\n-#endif\r\n \r\n   virtual ~Allocator();\r\n \r\ndiff --git a/third_party/eigen.BUILD b/third_party/eigen.BUILD\r\nindex 07bb664..ffe8a43 100644\r\n--- a/third_party/eigen.BUILD\r\n+++ b/third_party/eigen.BUILD\r\n@@ -64,6 +64,7 @@ cc_library(\r\n         # This define (mostly) guarantees we don't link any problematic\r\n         # code. We use it, but we do not rely on it, as evidenced above.\r\n         \"EIGEN_MPL2_ONLY\",\r\n+       \"EIGEN_MAX_ALIGN_BYTES=64\",\r\n     ],\r\n     includes = [\".\"],\r\n     visibility = [\"//visibility:public\"],\r\n```"}