{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4742", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4742/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4742/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4742/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4742", "id": 180794662, "node_id": "MDU6SXNzdWUxODA3OTQ2NjI=", "number": 4742, "title": "Atrous convolution does not preserve tensor shape", "user": {"login": "ethereon", "id": 337985, "node_id": "MDQ6VXNlcjMzNzk4NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/337985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ethereon", "html_url": "https://github.com/ethereon", "followers_url": "https://api.github.com/users/ethereon/followers", "following_url": "https://api.github.com/users/ethereon/following{/other_user}", "gists_url": "https://api.github.com/users/ethereon/gists{/gist_id}", "starred_url": "https://api.github.com/users/ethereon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ethereon/subscriptions", "organizations_url": "https://api.github.com/users/ethereon/orgs", "repos_url": "https://api.github.com/users/ethereon/repos", "events_url": "https://api.github.com/users/ethereon/events{/privacy}", "received_events_url": "https://api.github.com/users/ethereon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 24, "created_at": "2016-10-04T02:54:08Z", "updated_at": "2017-12-22T17:50:05Z", "closed_at": "2017-12-22T17:50:05Z", "author_association": "NONE", "body_html": "<p>For an input with an undefined batch size, <code>atrous_conv2d</code> emits tensors where all except the final dimension are undefined:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c1\">input</span> <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, (<span class=\"pl-c1\">None</span>, <span class=\"pl-c1\">256</span>, <span class=\"pl-c1\">256</span>, <span class=\"pl-c1\">3</span>))\n\nconv <span class=\"pl-k\">=</span> tf.nn.conv2d(<span class=\"pl-c1\">input</span>, tf.zeros((<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">16</span>)), <span class=\"pl-v\">strides</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>], <span class=\"pl-v\">padding</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>SAME<span class=\"pl-pds\">'</span></span>)\n<span class=\"pl-c1\">print</span>(conv.get_shape()) <span class=\"pl-c\"><span class=\"pl-c\">#</span> Correctly displays (?, 256, 256, 16)</span>\n\ndilated <span class=\"pl-k\">=</span> tf.nn.atrous_conv2d(<span class=\"pl-c1\">input</span>, tf.zeros((<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">16</span>)), <span class=\"pl-v\">rate</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">2</span>, <span class=\"pl-v\">padding</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>SAME<span class=\"pl-pds\">'</span></span>)\n<span class=\"pl-c1\">print</span>(dilated.get_shape()) <span class=\"pl-c\"><span class=\"pl-c\">#</span> Displays (?, ?, ?, 16)</span></pre></div>\n<p>(For concrete batch sizes, everything works as expected.)</p>\n<p>Tested on <code>0.10.0rc0</code></p>", "body_text": "For an input with an undefined batch size, atrous_conv2d emits tensors where all except the final dimension are undefined:\ninput = tf.placeholder(tf.float32, (None, 256, 256, 3))\n\nconv = tf.nn.conv2d(input, tf.zeros((3, 3, 3, 16)), strides=[1, 1, 1, 1], padding='SAME')\nprint(conv.get_shape()) # Correctly displays (?, 256, 256, 16)\n\ndilated = tf.nn.atrous_conv2d(input, tf.zeros((3, 3, 3, 16)), rate=2, padding='SAME')\nprint(dilated.get_shape()) # Displays (?, ?, ?, 16)\n(For concrete batch sizes, everything works as expected.)\nTested on 0.10.0rc0", "body": "For an input with an undefined batch size, `atrous_conv2d` emits tensors where all except the final dimension are undefined:\n\n``` python\ninput = tf.placeholder(tf.float32, (None, 256, 256, 3))\n\nconv = tf.nn.conv2d(input, tf.zeros((3, 3, 3, 16)), strides=[1, 1, 1, 1], padding='SAME')\nprint(conv.get_shape()) # Correctly displays (?, 256, 256, 16)\n\ndilated = tf.nn.atrous_conv2d(input, tf.zeros((3, 3, 3, 16)), rate=2, padding='SAME')\nprint(dilated.get_shape()) # Displays (?, ?, ?, 16)\n```\n\n(For concrete batch sizes, everything works as expected.)\n\nTested on `0.10.0rc0`\n"}