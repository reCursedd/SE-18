{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/338358195", "html_url": "https://github.com/tensorflow/tensorflow/issues/13861#issuecomment-338358195", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13861", "id": 338358195, "node_id": "MDEyOklzc3VlQ29tbWVudDMzODM1ODE5NQ==", "user": {"login": "facaiy", "id": 1112263, "node_id": "MDQ6VXNlcjExMTIyNjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1112263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facaiy", "html_url": "https://github.com/facaiy", "followers_url": "https://api.github.com/users/facaiy/followers", "following_url": "https://api.github.com/users/facaiy/following{/other_user}", "gists_url": "https://api.github.com/users/facaiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/facaiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facaiy/subscriptions", "organizations_url": "https://api.github.com/users/facaiy/orgs", "repos_url": "https://api.github.com/users/facaiy/repos", "events_url": "https://api.github.com/users/facaiy/events{/privacy}", "received_events_url": "https://api.github.com/users/facaiy/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-21T02:34:14Z", "updated_at": "2017-10-21T07:47:28Z", "author_association": "MEMBER", "body_html": "<p>It is reproduced on nightly version.</p>\n<div class=\"highlight highlight-source-python\"><pre>In [<span class=\"pl-c1\">1</span>]: <span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\nIn [<span class=\"pl-c1\">2</span>]: tf.<span class=\"pl-c1\">__version__</span>\nOut[<span class=\"pl-c1\">2</span>]: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>1.5.0-dev20171019<span class=\"pl-pds\">'</span></span>\n\nIn [<span class=\"pl-c1\">3</span>]: <span class=\"pl-k\">%</span>paste\nx <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">None</span>, <span class=\"pl-c1\">None</span>])\nw <span class=\"pl-k\">=</span> tf.zeros([<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">20</span>])\ny <span class=\"pl-k\">=</span> tf.nn.convolution(x, w, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>VALID<span class=\"pl-pds\">'</span></span>, [<span class=\"pl-c1\">1</span>]<span class=\"pl-k\">*</span><span class=\"pl-c1\">2</span>, [<span class=\"pl-c1\">2</span>]<span class=\"pl-k\">*</span><span class=\"pl-c1\">2</span>, <span class=\"pl-v\">data_format</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>NCHW<span class=\"pl-pds\">'</span></span>)\n<span class=\"pl-c1\">print</span>(y)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span># -- End pasted text --</span>\nTensor(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>convolution/BatchToSpaceND:0<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">1</span>, <span class=\"pl-ii\">?</span>, <span class=\"pl-ii\">?</span>, <span class=\"pl-ii\">?</span>), <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>float32)</pre></div>\n<p>As described by <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=29877977\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vs-zhehangd\">@vs-zhehangd</a>, however NHWC is OK:</p>\n<div class=\"highlight highlight-source-python\"><pre>In [<span class=\"pl-c1\">51</span>]: x <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">None</span>, <span class=\"pl-c1\">None</span>, <span class=\"pl-c1\">10</span>])\n\nIn [<span class=\"pl-c1\">52</span>]: w <span class=\"pl-k\">=</span> tf.zeros([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">20</span>])\n\nIn [<span class=\"pl-c1\">53</span>]: tf.nn.convolution(x, w, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>VALID<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">dilation_rate</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">2</span>], <span class=\"pl-v\">data_format</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>NHWC<span class=\"pl-pds\">'</span></span>)\nOut[<span class=\"pl-c1\">53</span>]: <span class=\"pl-k\">&lt;</span>tf.Tensor <span class=\"pl-s\"><span class=\"pl-pds\">'</span>convolution_29/BatchToSpaceND:0<span class=\"pl-pds\">'</span></span> shape<span class=\"pl-k\">=</span>(<span class=\"pl-c1\">1</span>, <span class=\"pl-ii\">?</span>, <span class=\"pl-ii\">?</span>, <span class=\"pl-c1\">20</span>) dtype<span class=\"pl-k\">=</span>float32<span class=\"pl-k\">&gt;</span></pre></div>", "body_text": "It is reproduced on nightly version.\nIn [1]: import tensorflow as tf\n\nIn [2]: tf.__version__\nOut[2]: '1.5.0-dev20171019'\n\nIn [3]: %paste\nx = tf.placeholder(tf.float32, [1, 10, None, None])\nw = tf.zeros([3, 3, 10, 20])\ny = tf.nn.convolution(x, w, 'VALID', [1]*2, [2]*2, data_format='NCHW')\nprint(y)\n\n## -- End pasted text --\nTensor(\"convolution/BatchToSpaceND:0\", shape=(1, ?, ?, ?), dtype=float32)\nAs described by @vs-zhehangd, however NHWC is OK:\nIn [51]: x = tf.placeholder(tf.float32, [1, None, None, 10])\n\nIn [52]: w = tf.zeros([1, 3, 10, 20])\n\nIn [53]: tf.nn.convolution(x, w, 'VALID', dilation_rate=[2, 2], data_format='NHWC')\nOut[53]: <tf.Tensor 'convolution_29/BatchToSpaceND:0' shape=(1, ?, ?, 20) dtype=float32>", "body": "It is reproduced on nightly version.\r\n\r\n```python\r\nIn [1]: import tensorflow as tf\r\n\r\nIn [2]: tf.__version__\r\nOut[2]: '1.5.0-dev20171019'\r\n\r\nIn [3]: %paste\r\nx = tf.placeholder(tf.float32, [1, 10, None, None])\r\nw = tf.zeros([3, 3, 10, 20])\r\ny = tf.nn.convolution(x, w, 'VALID', [1]*2, [2]*2, data_format='NCHW')\r\nprint(y)\r\n\r\n## -- End pasted text --\r\nTensor(\"convolution/BatchToSpaceND:0\", shape=(1, ?, ?, ?), dtype=float32)\r\n```\r\n\r\nAs described by @vs-zhehangd, however NHWC is OK:\r\n```python\r\nIn [51]: x = tf.placeholder(tf.float32, [1, None, None, 10])\r\n\r\nIn [52]: w = tf.zeros([1, 3, 10, 20])\r\n\r\nIn [53]: tf.nn.convolution(x, w, 'VALID', dilation_rate=[2, 2], data_format='NHWC')\r\nOut[53]: <tf.Tensor 'convolution_29/BatchToSpaceND:0' shape=(1, ?, ?, 20) dtype=float32>\r\n```"}