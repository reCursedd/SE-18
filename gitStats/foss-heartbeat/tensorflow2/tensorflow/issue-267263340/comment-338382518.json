{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/338382518", "html_url": "https://github.com/tensorflow/tensorflow/issues/13861#issuecomment-338382518", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13861", "id": 338382518, "node_id": "MDEyOklzc3VlQ29tbWVudDMzODM4MjUxOA==", "user": {"login": "facaiy", "id": 1112263, "node_id": "MDQ6VXNlcjExMTIyNjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1112263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facaiy", "html_url": "https://github.com/facaiy", "followers_url": "https://api.github.com/users/facaiy/followers", "following_url": "https://api.github.com/users/facaiy/following{/other_user}", "gists_url": "https://api.github.com/users/facaiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/facaiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facaiy/subscriptions", "organizations_url": "https://api.github.com/users/facaiy/orgs", "repos_url": "https://api.github.com/users/facaiy/repos", "events_url": "https://api.github.com/users/facaiy/events{/privacy}", "received_events_url": "https://api.github.com/users/facaiy/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-21T10:45:10Z", "updated_at": "2017-10-21T11:03:04Z", "author_association": "MEMBER", "body_html": "<p>If I understand it correctly, since <a href=\"https://www.tensorflow.org/versions/master/api_docs/python/tf/space_to_batch_nd\" rel=\"nofollow\"><code>space_to_batch_nd</code></a> assumes that <code>input_shape = [batch] + spatial_shape + remaining_shape</code>, hence <code>paddings</code> is hacked as the tensor <code>[zeros, paddings]</code> to handle NC format. Because the value of tensor is hidden by itself, that's why we lost the channel information in both <code>space_to_batch_nd</code> and <code>batch_to_space_nd</code>.</p>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/d7409d32bba5ffa89141ec5427780f68a3b6942d/tensorflow/python/ops/nn_ops.py#L485-L492\">tensorflow/tensorflow/python/ops/nn_ops.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 485 to 492\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/d7409d32bba5ffa89141ec5427780f68a3b6942d\">d7409d3</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L485\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"485\"></td>\n          <td id=\"LC485\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> paddings <span class=\"pl-k\">=</span> _with_space_to_batch_adjust(paddings, <span class=\"pl-c1\">0</span>, spatial_dims) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L486\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"486\"></td>\n          <td id=\"LC486\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> crops <span class=\"pl-k\">=</span> _with_space_to_batch_adjust(crops, <span class=\"pl-c1\">0</span>, spatial_dims) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L487\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"487\"></td>\n          <td id=\"LC487\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> input_converted <span class=\"pl-k\">=</span> array_ops.space_to_batch_nd( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L488\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"488\"></td>\n          <td id=\"LC488\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-v\">input</span><span class=\"pl-k\">=</span>inp, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L489\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"489\"></td>\n          <td id=\"LC489\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-v\">block_shape</span><span class=\"pl-k\">=</span>dilation_rate, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L490\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"490\"></td>\n          <td id=\"LC490\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-v\">paddings</span><span class=\"pl-k\">=</span>paddings) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L491\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"491\"></td>\n          <td id=\"LC491\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L492\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"492\"></td>\n          <td id=\"LC492\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> result <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>.op(input_converted, <span class=\"pl-c1\">filter</span>) </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>There are two solutions for the bug in my opinion:</p>\n<ol>\n<li>use some methods to rewrite the correct <code>num_output_channels</code> at the last if possible.</li>\n<li>modified <code>space_to_batch_nd</code> and <code>batch_to_space_nd</code> to handle <code>channle_at_the_first</code> case. Perhaps difficult.</li>\n</ol>\n<p>Which one is better? Or other alternative solution? Thanks.</p>", "body_text": "If I understand it correctly, since space_to_batch_nd assumes that input_shape = [batch] + spatial_shape + remaining_shape, hence paddings is hacked as the tensor [zeros, paddings] to handle NC format. Because the value of tensor is hidden by itself, that's why we lost the channel information in both space_to_batch_nd and batch_to_space_nd.\n\n  \n    \n      tensorflow/tensorflow/python/ops/nn_ops.py\n    \n    \n        Lines 485 to 492\n      in\n      d7409d3\n    \n    \n    \n    \n\n        \n          \n           paddings = _with_space_to_batch_adjust(paddings, 0, spatial_dims) \n        \n\n        \n          \n           crops = _with_space_to_batch_adjust(crops, 0, spatial_dims) \n        \n\n        \n          \n           input_converted = array_ops.space_to_batch_nd( \n        \n\n        \n          \n               input=inp, \n        \n\n        \n          \n               block_shape=dilation_rate, \n        \n\n        \n          \n               paddings=paddings) \n        \n\n        \n          \n            \n        \n\n        \n          \n           result = self.op(input_converted, filter) \n        \n    \n  \n\n\nThere are two solutions for the bug in my opinion:\n\nuse some methods to rewrite the correct num_output_channels at the last if possible.\nmodified space_to_batch_nd and batch_to_space_nd to handle channle_at_the_first case. Perhaps difficult.\n\nWhich one is better? Or other alternative solution? Thanks.", "body": "If I understand it correctly, since [`space_to_batch_nd`](https://www.tensorflow.org/versions/master/api_docs/python/tf/space_to_batch_nd) assumes that `input_shape = [batch] + spatial_shape + remaining_shape`, hence `paddings` is hacked as the tensor `[zeros, paddings]` to handle NC format. Because the value of tensor is hidden by itself, that's why we lost the channel information in both `space_to_batch_nd` and `batch_to_space_nd`.\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/d7409d32bba5ffa89141ec5427780f68a3b6942d/tensorflow/python/ops/nn_ops.py#L485-L492\r\n\r\nThere are two solutions for the bug in my opinion:\r\n1. use some methods to rewrite the correct `num_output_channels` at the last if possible.\r\n2. modified `space_to_batch_nd` and `batch_to_space_nd` to handle `channle_at_the_first` case. Perhaps difficult.\r\n\r\nWhich one is better? Or other alternative solution? Thanks."}