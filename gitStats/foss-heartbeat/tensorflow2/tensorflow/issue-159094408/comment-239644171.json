{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/239644171", "html_url": "https://github.com/tensorflow/tensorflow/pull/2723#issuecomment-239644171", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2723", "id": 239644171, "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTY0NDE3MQ==", "user": {"login": "MarvinTeichmann", "id": 2729159, "node_id": "MDQ6VXNlcjI3MjkxNTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2729159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarvinTeichmann", "html_url": "https://github.com/MarvinTeichmann", "followers_url": "https://api.github.com/users/MarvinTeichmann/followers", "following_url": "https://api.github.com/users/MarvinTeichmann/following{/other_user}", "gists_url": "https://api.github.com/users/MarvinTeichmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarvinTeichmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarvinTeichmann/subscriptions", "organizations_url": "https://api.github.com/users/MarvinTeichmann/orgs", "repos_url": "https://api.github.com/users/MarvinTeichmann/repos", "events_url": "https://api.github.com/users/MarvinTeichmann/events{/privacy}", "received_events_url": "https://api.github.com/users/MarvinTeichmann/received_events", "type": "User", "site_admin": false}, "created_at": "2016-08-13T22:13:16Z", "updated_at": "2016-08-13T22:13:16Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=463737\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vrv\">@vrv</a> Yes, you are write, an <code>per_image_whitening</code> is not the optimal naming.</p>\n<p>On the other hand, I don't think it is nice to have two functions, <code>per_image_whitening</code> and <code>per_batch_whitening</code>, as both of them are applying exactly the same tensorflow ops. The <em>very same computation</em> is done in both cases. The only difference is the dimension of the input and output.</p>\n<p>Keep in mind, the only real change I have done is to remove the line, which throws an error, if a 4-d tensor is passed to the function. The rest is syntactic sugar (Tests, Parameter Naming, Documentation). This line does violate the general python design idea of being permissive, as it artificially restricts the function to a specific use-case. Therefor I think that this line should not be there.</p>\n<p>Function naming is a different issue, but having two restrictive functions does not sound like a great idea, if it is possible to solve the same think with one permissive function.</p>", "body_text": "@vrv Yes, you are write, an per_image_whitening is not the optimal naming.\nOn the other hand, I don't think it is nice to have two functions, per_image_whitening and per_batch_whitening, as both of them are applying exactly the same tensorflow ops. The very same computation is done in both cases. The only difference is the dimension of the input and output.\nKeep in mind, the only real change I have done is to remove the line, which throws an error, if a 4-d tensor is passed to the function. The rest is syntactic sugar (Tests, Parameter Naming, Documentation). This line does violate the general python design idea of being permissive, as it artificially restricts the function to a specific use-case. Therefor I think that this line should not be there.\nFunction naming is a different issue, but having two restrictive functions does not sound like a great idea, if it is possible to solve the same think with one permissive function.", "body": "@vrv Yes, you are write, an `per_image_whitening` is not the optimal naming.\n\nOn the other hand, I don't think it is nice to have two functions, `per_image_whitening` and `per_batch_whitening`, as both of them are applying exactly the same tensorflow ops. The _very same computation_ is done in both cases. The only difference is the dimension of the input and output.\n\nKeep in mind, the only real change I have done is to remove the line, which throws an error, if a 4-d tensor is passed to the function. The rest is syntactic sugar (Tests, Parameter Naming, Documentation). This line does violate the general python design idea of being permissive, as it artificially restricts the function to a specific use-case. Therefor I think that this line should not be there.\n\nFunction naming is a different issue, but having two restrictive functions does not sound like a great idea, if it is possible to solve the same think with one permissive function. \n"}