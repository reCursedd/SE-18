{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/239842288", "html_url": "https://github.com/tensorflow/tensorflow/pull/2723#issuecomment-239842288", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2723", "id": 239842288, "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTg0MjI4OA==", "user": {"login": "shlens", "id": 13385191, "node_id": "MDQ6VXNlcjEzMzg1MTkx", "avatar_url": "https://avatars1.githubusercontent.com/u/13385191?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shlens", "html_url": "https://github.com/shlens", "followers_url": "https://api.github.com/users/shlens/followers", "following_url": "https://api.github.com/users/shlens/following{/other_user}", "gists_url": "https://api.github.com/users/shlens/gists{/gist_id}", "starred_url": "https://api.github.com/users/shlens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shlens/subscriptions", "organizations_url": "https://api.github.com/users/shlens/orgs", "repos_url": "https://api.github.com/users/shlens/repos", "events_url": "https://api.github.com/users/shlens/events{/privacy}", "received_events_url": "https://api.github.com/users/shlens/received_events", "type": "User", "site_admin": false}, "created_at": "2016-08-15T15:54:08Z", "updated_at": "2016-08-15T15:54:08Z", "author_association": "MEMBER", "body_html": "<p>I think the <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=2729159\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/MarvinTeichmann\">@MarvinTeichmann</a>  makes some nice points -- namely that it is a simple code change to permit whitening across multiple images. Likewise, the functionality is very similar to the 3-D version of <code>tf.image.per_image_whitening</code>. So, from an API perspective, this is very simple and clean.</p>\n<p>From a functionality perspective I do share <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=463737\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vrv\">@vrv</a>  concern. This function would be performing in effect a different operation with a different statistical goal then the name of the function suggests (i.e. an operation akin to batch-normalization). I think that the danger of not conveying this subtlety to the user would cause lots of pain down the road so much so that I think it is worth sacrificing some simplicity in the API.</p>\n<p>If adding this functionality is important, then my suggestion would be to create a new Python function, i.e.<code>tf.image.per_batch_whitening</code> and have it be a light wrapper around <code>tf.batch_normalization</code> per the code snippet above. This would provide an efficient implementation and avoid any ambiguity about how statistics are computed.</p>", "body_text": "I think the @MarvinTeichmann  makes some nice points -- namely that it is a simple code change to permit whitening across multiple images. Likewise, the functionality is very similar to the 3-D version of tf.image.per_image_whitening. So, from an API perspective, this is very simple and clean.\nFrom a functionality perspective I do share @vrv  concern. This function would be performing in effect a different operation with a different statistical goal then the name of the function suggests (i.e. an operation akin to batch-normalization). I think that the danger of not conveying this subtlety to the user would cause lots of pain down the road so much so that I think it is worth sacrificing some simplicity in the API.\nIf adding this functionality is important, then my suggestion would be to create a new Python function, i.e.tf.image.per_batch_whitening and have it be a light wrapper around tf.batch_normalization per the code snippet above. This would provide an efficient implementation and avoid any ambiguity about how statistics are computed.", "body": "I think the @MarvinTeichmann  makes some nice points -- namely that it is a simple code change to permit whitening across multiple images. Likewise, the functionality is very similar to the 3-D version of `tf.image.per_image_whitening`. So, from an API perspective, this is very simple and clean.\n\nFrom a functionality perspective I do share @vrv  concern. This function would be performing in effect a different operation with a different statistical goal then the name of the function suggests (i.e. an operation akin to batch-normalization). I think that the danger of not conveying this subtlety to the user would cause lots of pain down the road so much so that I think it is worth sacrificing some simplicity in the API.\n\nIf adding this functionality is important, then my suggestion would be to create a new Python function, i.e.`tf.image.per_batch_whitening` and have it be a light wrapper around `tf.batch_normalization` per the code snippet above. This would provide an efficient implementation and avoid any ambiguity about how statistics are computed.\n"}