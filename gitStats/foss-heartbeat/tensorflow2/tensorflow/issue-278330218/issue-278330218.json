{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15019", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15019/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15019/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15019/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15019", "id": 278330218, "node_id": "MDU6SXNzdWUyNzgzMzAyMTg=", "number": 15019, "title": "Tensorflow: how to save/restore tf.data.Dataset?", "user": {"login": "taehyunkim1527", "id": 25292777, "node_id": "MDQ6VXNlcjI1MjkyNzc3", "avatar_url": "https://avatars0.githubusercontent.com/u/25292777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taehyunkim1527", "html_url": "https://github.com/taehyunkim1527", "followers_url": "https://api.github.com/users/taehyunkim1527/followers", "following_url": "https://api.github.com/users/taehyunkim1527/following{/other_user}", "gists_url": "https://api.github.com/users/taehyunkim1527/gists{/gist_id}", "starred_url": "https://api.github.com/users/taehyunkim1527/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taehyunkim1527/subscriptions", "organizations_url": "https://api.github.com/users/taehyunkim1527/orgs", "repos_url": "https://api.github.com/users/taehyunkim1527/repos", "events_url": "https://api.github.com/users/taehyunkim1527/events{/privacy}", "received_events_url": "https://api.github.com/users/taehyunkim1527/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2017-12-01T01:40:47Z", "updated_at": "2018-01-12T06:03:56Z", "closed_at": "2017-12-07T05:13:24Z", "author_association": "NONE", "body_html": "<p>I made a model with <code>tf.data.Dataset()</code> as a data IO function</p>\n<p>then i exported the graph and tried to restore it with meta_graph file But it failed and following error messages occurred.</p>\n<p>I think that <code>tf.data.Dataset()</code> made a C++ object instead of python queue used before.</p>\n<p>And the graph_def only has a C++ object handler reference, so the graph_def alone without real C++ object can't load complete graph.</p>\n<p>How can I load a executable graph with <code>tf.data.Dataset()</code>? Or is it impossible for now?</p>\n<pre><code>File \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/ops.py\", line 1470, in __init__\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\n\nNotFoundError (see above for traceback): Function\n_make_dataset_5150cb86 is not defined.\n         [[Node: batch_processing/OneShotIterator = OneShotIterator[container=\"\", dataset_factory=_make_dataset_5150cb86[], output_shapes=[[?,1], [?,299,299,3]], output_types=[DT_INT32, DT_FLOAT], shared_name=\"\",\n_device=\"/job:workers/replica:0/task:0/device:CPU:0\"]()]]\n</code></pre>\n<p>In short, all the tensorflow graphs without<code> tf.data.Dataset</code> work, when i add following codes.</p>\n<pre><code>graph = tf.train.export_meta_graph()\ntf.reset_default_graph()\ntf.train.import_meta_graph(graph)\n\n</code></pre>\n<p>But the graphs with<code>tf.data.Dataset</code>make a error message above</p>", "body_text": "I made a model with tf.data.Dataset() as a data IO function\nthen i exported the graph and tried to restore it with meta_graph file But it failed and following error messages occurred.\nI think that tf.data.Dataset() made a C++ object instead of python queue used before.\nAnd the graph_def only has a C++ object handler reference, so the graph_def alone without real C++ object can't load complete graph.\nHow can I load a executable graph with tf.data.Dataset()? Or is it impossible for now?\nFile \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/ops.py\", line 1470, in __init__\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\n\nNotFoundError (see above for traceback): Function\n_make_dataset_5150cb86 is not defined.\n         [[Node: batch_processing/OneShotIterator = OneShotIterator[container=\"\", dataset_factory=_make_dataset_5150cb86[], output_shapes=[[?,1], [?,299,299,3]], output_types=[DT_INT32, DT_FLOAT], shared_name=\"\",\n_device=\"/job:workers/replica:0/task:0/device:CPU:0\"]()]]\n\nIn short, all the tensorflow graphs without tf.data.Dataset work, when i add following codes.\ngraph = tf.train.export_meta_graph()\ntf.reset_default_graph()\ntf.train.import_meta_graph(graph)\n\n\nBut the graphs withtf.data.Datasetmake a error message above", "body": "I made a model with `tf.data.Dataset()` as a data IO function\r\n\r\nthen i exported the graph and tried to restore it with meta_graph file But it failed and following error messages occurred.\r\n\r\nI think that `tf.data.Dataset()` made a C++ object instead of python queue used before.\r\n\r\nAnd the graph_def only has a C++ object handler reference, so the graph_def alone without real C++ object can't load complete graph.\r\n\r\nHow can I load a executable graph with `tf.data.Dataset()`? Or is it impossible for now?\r\n\r\n```\r\nFile \"/usr/local/lib/python3.4/dist-packages/tensorflow/python/framework/ops.py\", line 1470, in __init__\r\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\r\n\r\nNotFoundError (see above for traceback): Function\r\n_make_dataset_5150cb86 is not defined.\r\n         [[Node: batch_processing/OneShotIterator = OneShotIterator[container=\"\", dataset_factory=_make_dataset_5150cb86[], output_shapes=[[?,1], [?,299,299,3]], output_types=[DT_INT32, DT_FLOAT], shared_name=\"\",\r\n_device=\"/job:workers/replica:0/task:0/device:CPU:0\"]()]]\r\n```\r\n\r\nIn short, all the tensorflow graphs without` tf.data.Dataset` work, when i add following codes. \r\n```\r\ngraph = tf.train.export_meta_graph()\r\ntf.reset_default_graph()\r\ntf.train.import_meta_graph(graph)\r\n\r\n```\r\nBut the graphs with` tf.data.Dataset `make a error message above\r\n\r\n\r\n"}