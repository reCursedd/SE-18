{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8451", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8451/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8451/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8451/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8451", "id": 214557456, "node_id": "MDU6SXNzdWUyMTQ1NTc0NTY=", "number": 8451, "title": "XLA segfaults with large graphs", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-03-15T23:35:16Z", "updated_at": "2017-12-14T15:28:42Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>TensorFlow allows graphs to be larger than 2GB, however those graphs can't be serialized.</p>\n<p>I suspect this is the cause of segfaults we've been seeing because of following line in dump_graph.cc</p>\n<p><code>65    TF_CHECK_OK(WriteTextProto(Env::Default(), path, graph_def)); </code></p>\n<p>It would be useful to provide an informative error message because troubleshooting this requires looking at core file:</p>\n<pre><code>ulimit -Sc unlimited\ngdb python\ncore core\nbt\n</code></pre>\n<p>Here's the backtrace</p>\n<pre><code>#0  0x00007fc6dcdae428 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:54\n#1  0x00007fc6dcdb002a in __GI_abort () at abort.c:89\n#2  0x00007fc6c04b8417 in tensorflow::internal::LogMessageFatal::~LogMessageFatal() () from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\n#3  0x00007fc6bd05cb1e in tensorflow::dump_graph::DumpGraphDefToFile(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, tensorflow::GraphDef const&amp;) ()\n   from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\n#4  0x00007fc6bd05ce88 in tensorflow::dump_graph::DumpGraphToFile(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, tensorflow::Graph const&amp;, tensorflow::FunctionLibraryDefinition const*) () from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\n#5  0x00007fc6bcffd6c2 in tensorflow::EncapsulateSubgraphsPass::Run(tensorflow::GraphOptimizationPassOptions const&amp;) ()\n   from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\n#6  0x00007fc6bec68e00 in tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&amp;) ()\n   from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\n#7  0x00007fc6bec768a3 in tensorflow::SimpleGraphExecutionState::BuildGraph(tensorflow::BuildGraphOptions const&amp;, std::unique_ptr&lt;tensorflow::SimpleClientGraph, std::default_delete&lt;tensorflow::SimpleClientGraph&gt; &gt;*) () from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\n#8  0x00007fc6be43d293 in tensorflow::DirectSession::CreateGraphs(tensorflow::BuildGraphOptions const&amp;, std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;tensorflow::Graph, std::default_delete&lt;tensorflow::Graph&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;tensorflow::Graph, std::default_delete&lt;tensorflow::Graph&gt; &gt; &gt; &gt; &gt;*, std::unique_ptr&lt;tensorflow::FunctionLibraryDefinition, std::default_delete&lt;tensorflow::FunctionLibraryDefinition&gt; &gt;*, tensorflow::DirectSession::RunStateArgs*) () from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\n#9  0x00007fc6be43f4cf in tensorflow::DirectSession::GetOrCreateExecutors(tensorflow::thread::ThreadPool*, tensorflow::gtl::ArraySlice&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, tensorflow::gtl::ArraySlice&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, tensorflow::gtl::ArraySlice&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, tensorflow::DirectSession::ExecutorsAndKeys**, tensorflow::DirectSession::RunStateArgs*) ()\n   from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\n#10 0x00007fc6be44085e in tensorflow::DirectSession::Run(tensorflow::RunOptions const&amp;, std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, tensorflow::Tensor&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, tensorflow::Tensor&gt; &gt; &gt; const&amp;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;, std::vector&lt;tensorflow::Tensor, std::allocator&lt;tensorflow::Tensor&gt; &gt;*, tensorflow::RunMetadata*) () from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\n#11 0x00007fc6bcfd4641 in TF_Run_Helper(tensorflow::Session*, char const*, TF_Buffer const*, std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, tensorflow::Tensor&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, tensorflow::Tensor&gt; &gt; &gt; const&amp;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;, TF_Tensor**, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;, TF_Buffer*, TF_Status*) [clone .constprop.498] ()\n   from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\n#12 0x00007fc6bcfd4e58 in TF_Run () from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\n#13 0x00007fc6bcf0b15d in tensorflow::TF_Run_wrapper_helper(TF_DeprecatedSession*, char const*, TF_Buffer const*, _object*, tensorflow::gtl::InlinedVector&lt;char const*, 8&gt; const&amp;, tensorflow::gtl::InlinedVector&lt;char const*, 8&gt; const&amp;, TF_Status*, tensorflow::gtl::InlinedVector&lt;_object*, 8&gt;*, TF_Buffer*) ()\n   from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\n#14 0x00007fc6bcf0b2a3 in tensorflow::TF_Run_wrapper(TF_DeprecatedSession*, TF_Buffer const*, _object*, tensorflow::gtl::InlinedVector&lt;char const*, 8&gt; const&amp;, tensorflow::gtl::InlinedVector&lt;char const*, 8&gt; const&amp;, TF_Status*, tensorflow::gtl::InlinedVector&lt;_object*, 8&gt;*, TF_Buffer*) () from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\n#15 0x00007fc6bceed225 in _wrap_TF_Run () from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\n#16 0x00007fc6ddd335e9 in PyCFunction_Call (func=0x7fc6c5120828, args=0x7fc68c1765f8, kwds=&lt;optimized out&gt;) at Objects/methodobject.c:109\n#17 0x00007fc6dddbabd5 in call_function (oparg=&lt;optimized out&gt;, pp_stack=0x7ffc0d0dfa78) at Python/ceval.c:4705\n#18 PyEval_EvalFrameEx (f=&lt;optimized out&gt;, throwflag=&lt;optimized out&gt;) at Python/ceval.c:3236\n#19 0x00007fc6dddbbb49 in _PyEval_EvalCodeWithName (_co=&lt;optimized out&gt;, globals=&lt;optimized out&gt;, locals=&lt;optimized out&gt;, args=&lt;optimized out&gt;, argcount=6, kws=0x0, kwcount=0, defs=0x0, defcount=0, \n    kwdefs=0x0, closure=0x7fc6d70ac780, name=0x0, qualname=0x0) at Python/ceval.c:4018\n#20 0x00007fc6dddbbcd8 in PyEval_EvalCodeEx (_co=&lt;optimized out&gt;, globals=&lt;optimized out&gt;, locals=&lt;optimized out&gt;, args=&lt;optimized out&gt;, argcount=&lt;optimized out&gt;, kws=&lt;optimized out&gt;, kwcount=0, defs=0x0, \n    defcount=0, kwdefs=0x0, closure=0x7fc6d70ac780) at Python/ceval.c:4039\n#21 0x00007fc6ddd11542 in function_call (func=0x7fc68feb3268, arg=0x7fc68c3903a8, kw=0x0) at Objects/funcobject.c:627\n#22 0x00007fc6ddcde236 in PyObject_Call (func=0x7fc68feb3268, arg=&lt;optimized out&gt;, kw=&lt;optimized out&gt;) at Objects/abstract.c:2165\n#23 0x00007fc6dddb8234 in ext_do_call (nk=-1942420568, na=0, flags=&lt;optimized out&gt;, pp_stack=0x7ffc0d0dfdc8, func=0x7fc68feb3268) at Python/ceval.c:5034\n#24 PyEval_EvalFrameEx (f=&lt;optimized out&gt;, throwflag=&lt;optimized out&gt;) at Python/ceval.c:3275\n#25 0x00007fc6dddbbb49 in _PyEval_EvalCodeWithName (_co=&lt;optimized out&gt;, globals=&lt;optimized out&gt;, locals=&lt;optimized out&gt;, args=&lt;optimized out&gt;, argcount=8, kws=0x7fd5098, kwcount=0, defs=0x0, defcount=0, \n    kwdefs=0x0, closure=0x0, name=0x7fc6d74eafb0, qualname=0x7fc6d74f07c8) at Python/ceval.c:4018\n#26 0x00007fc6dddbadf5 in fast_function (nk=&lt;optimized out&gt;, na=8, n=&lt;optimized out&gt;, pp_stack=0x7ffc0d0dffe8, func=0x7fc6d74add90) at Python/ceval.c:4813\n#27 call_function (oparg=&lt;optimized out&gt;, pp_stack=0x7ffc0d0dffe8) at Python/ceval.c:4730\n#28 PyEval_EvalFrameEx (f=&lt;optimized out&gt;, throwflag=&lt;optimized out&gt;) at Python/ceval.c:3236\n#29 0x00007fc6dddbbb49 in _PyEval_EvalCodeWithName (_co=&lt;optimized out&gt;, globals=&lt;optimized out&gt;, locals=&lt;optimized out&gt;, args=&lt;optimized out&gt;, argcount=7, kws=0x7fd7640, kwcount=0, defs=0x0, defcount=0, \n    kwdefs=0x0, closure=0x0, name=0x7fc6d74f13e8, qualname=0x7fc6d74f0738) at Python/ceval.c:4018\n#30 0x00007fc6dddbadf5 in fast_function (nk=&lt;optimized out&gt;, na=7, n=&lt;optimized out&gt;, pp_stack=0x7ffc0d0e0208, func=0x7fc6d74add08) at Python/ceval.c:4813\n#31 call_function (oparg=&lt;optimized out&gt;, pp_stack=0x7ffc0d0e0208) at Python/ceval.c:4730\n#32 PyEval_EvalFrameEx (f=&lt;optimized out&gt;, throwflag=&lt;optimized out&gt;) at Python/ceval.c:3236\n#33 0x00007fc6dddbb166 in fast_function (nk=&lt;optimized out&gt;, na=6, n=&lt;optimized out&gt;, pp_stack=0x7ffc0d0e0388, func=0x7fc6d74adc80) at Python/ceval.c:4803\n#34 call_function (oparg=&lt;optimized out&gt;, pp_stack=0x7ffc0d0e0388) at Python/ceval.c:4730\n#35 PyEval_EvalFrameEx (f=&lt;optimized out&gt;, throwflag=&lt;optimized out&gt;) at Python/ceval.c:3236\n#36 0x00007fc6dddbbb49 in _PyEval_EvalCodeWithName (_co=&lt;optimized out&gt;, globals=&lt;optimized out&gt;, locals=&lt;optimized out&gt;, args=&lt;optimized out&gt;, argcount=3, kws=0x40e5488, kwcount=0, defs=0x7fc6d74a7060, \n    defcount=3, kwdefs=0x0, closure=0x0, name=0x7fc6dc762458, qualname=0x7fc6d74ead30) at Python/ceval.c:4018\n#37 0x00007fc6dddbadf5 in fast_function (nk=&lt;optimized out&gt;, na=3, n=&lt;optimized out&gt;, pp_stack=0x7ffc0d0e05a8, func=0x7fc6d74adae8) at Python/ceval.c:4813\n#38 call_function (oparg=&lt;optimized out&gt;, pp_stack=0x7ffc0d0e05a8) at Python/ceval.c:4730\n#39 PyEval_EvalFrameEx (f=&lt;optimized out&gt;, throwflag=&lt;optimized out&gt;) at Python/ceval.c:3236\n#40 0x00007fc6dddbbb49 in _PyEval_EvalCodeWithName (_co=&lt;optimized out&gt;, globals=&lt;optimized out&gt;, locals=&lt;optimized out&gt;, args=&lt;optimized out&gt;, argcount=4, kws=0x41f8440, kwcount=0, defs=0x7fc6d7761df0, \n    defcount=1, kwdefs=0x0, closure=0x0, name=0x7fc6d77a1ee0, qualname=0x7fc6d77a1ee0) at Python/ceval.c:4018\n#41 0x00007fc6dddbadf5 in fast_function (nk=&lt;optimized out&gt;, na=4, n=&lt;optimized out&gt;, pp_stack=0x7ffc0d0e07c8, func=0x7fc6d76ecd90) at Python/ceval.c:4813\n#42 call_function (oparg=&lt;optimized out&gt;, pp_stack=0x7ffc0d0e07c8) at Python/ceval.c:4730\n#43 PyEval_EvalFrameEx (f=&lt;optimized out&gt;, throwflag=&lt;optimized out&gt;) at Python/ceval.c:3236\n#44 0x00007fc6dddbbb49 in _PyEval_EvalCodeWithName (_co=&lt;optimized out&gt;, globals=&lt;optimized out&gt;, locals=&lt;optimized out&gt;, args=&lt;optimized out&gt;, argcount=1, kws=0x1c06428, kwcount=0, defs=0x7fc6d76f1320, \n    defcount=2, kwdefs=0x0, closure=0x0, name=0x7fc6dc762458, qualname=0x7fc6d772a170) at Python/ceval.c:4018\n#45 0x00007fc6dddbadf5 in fast_function (nk=&lt;optimized out&gt;, na=1, n=&lt;optimized out&gt;, pp_stack=0x7ffc0d0e09e8, func=0x7fc6d76e7730) at Python/ceval.c:4813\n#46 call_function (oparg=&lt;optimized out&gt;, pp_stack=0x7ffc0d0e09e8) at Python/ceval.c:4730\n#47 PyEval_EvalFrameEx (f=&lt;optimized out&gt;, throwflag=&lt;optimized out&gt;) at Python/ceval.c:3236\n</code></pre>", "body_text": "TensorFlow allows graphs to be larger than 2GB, however those graphs can't be serialized.\nI suspect this is the cause of segfaults we've been seeing because of following line in dump_graph.cc\n65    TF_CHECK_OK(WriteTextProto(Env::Default(), path, graph_def)); \nIt would be useful to provide an informative error message because troubleshooting this requires looking at core file:\nulimit -Sc unlimited\ngdb python\ncore core\nbt\n\nHere's the backtrace\n#0  0x00007fc6dcdae428 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:54\n#1  0x00007fc6dcdb002a in __GI_abort () at abort.c:89\n#2  0x00007fc6c04b8417 in tensorflow::internal::LogMessageFatal::~LogMessageFatal() () from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\n#3  0x00007fc6bd05cb1e in tensorflow::dump_graph::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&) ()\n   from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\n#4  0x00007fc6bd05ce88 in tensorflow::dump_graph::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*) () from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\n#5  0x00007fc6bcffd6c2 in tensorflow::EncapsulateSubgraphsPass::Run(tensorflow::GraphOptimizationPassOptions const&) ()\n   from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\n#6  0x00007fc6bec68e00 in tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&) ()\n   from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\n#7  0x00007fc6bec768a3 in tensorflow::SimpleGraphExecutionState::BuildGraph(tensorflow::BuildGraphOptions const&, std::unique_ptr<tensorflow::SimpleClientGraph, std::default_delete<tensorflow::SimpleClientGraph> >*) () from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\n#8  0x00007fc6be43d293 in tensorflow::DirectSession::CreateGraphs(tensorflow::BuildGraphOptions const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::unique_ptr<tensorflow::Graph, std::default_delete<tensorflow::Graph> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::Graph, std::default_delete<tensorflow::Graph> > > > >*, std::unique_ptr<tensorflow::FunctionLibraryDefinition, std::default_delete<tensorflow::FunctionLibraryDefinition> >*, tensorflow::DirectSession::RunStateArgs*) () from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\n#9  0x00007fc6be43f4cf in tensorflow::DirectSession::GetOrCreateExecutors(tensorflow::thread::ThreadPool*, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::DirectSession::ExecutorsAndKeys**, tensorflow::DirectSession::RunStateArgs*) ()\n   from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\n#10 0x00007fc6be44085e in tensorflow::DirectSession::Run(tensorflow::RunOptions const&, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, tensorflow::RunMetadata*) () from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\n#11 0x00007fc6bcfd4641 in TF_Run_Helper(tensorflow::Session*, char const*, TF_Buffer const*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, TF_Tensor**, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, TF_Buffer*, TF_Status*) [clone .constprop.498] ()\n   from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\n#12 0x00007fc6bcfd4e58 in TF_Run () from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\n#13 0x00007fc6bcf0b15d in tensorflow::TF_Run_wrapper_helper(TF_DeprecatedSession*, char const*, TF_Buffer const*, _object*, tensorflow::gtl::InlinedVector<char const*, 8> const&, tensorflow::gtl::InlinedVector<char const*, 8> const&, TF_Status*, tensorflow::gtl::InlinedVector<_object*, 8>*, TF_Buffer*) ()\n   from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\n#14 0x00007fc6bcf0b2a3 in tensorflow::TF_Run_wrapper(TF_DeprecatedSession*, TF_Buffer const*, _object*, tensorflow::gtl::InlinedVector<char const*, 8> const&, tensorflow::gtl::InlinedVector<char const*, 8> const&, TF_Status*, tensorflow::gtl::InlinedVector<_object*, 8>*, TF_Buffer*) () from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\n#15 0x00007fc6bceed225 in _wrap_TF_Run () from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\n#16 0x00007fc6ddd335e9 in PyCFunction_Call (func=0x7fc6c5120828, args=0x7fc68c1765f8, kwds=<optimized out>) at Objects/methodobject.c:109\n#17 0x00007fc6dddbabd5 in call_function (oparg=<optimized out>, pp_stack=0x7ffc0d0dfa78) at Python/ceval.c:4705\n#18 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3236\n#19 0x00007fc6dddbbb49 in _PyEval_EvalCodeWithName (_co=<optimized out>, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=6, kws=0x0, kwcount=0, defs=0x0, defcount=0, \n    kwdefs=0x0, closure=0x7fc6d70ac780, name=0x0, qualname=0x0) at Python/ceval.c:4018\n#20 0x00007fc6dddbbcd8 in PyEval_EvalCodeEx (_co=<optimized out>, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kws=<optimized out>, kwcount=0, defs=0x0, \n    defcount=0, kwdefs=0x0, closure=0x7fc6d70ac780) at Python/ceval.c:4039\n#21 0x00007fc6ddd11542 in function_call (func=0x7fc68feb3268, arg=0x7fc68c3903a8, kw=0x0) at Objects/funcobject.c:627\n#22 0x00007fc6ddcde236 in PyObject_Call (func=0x7fc68feb3268, arg=<optimized out>, kw=<optimized out>) at Objects/abstract.c:2165\n#23 0x00007fc6dddb8234 in ext_do_call (nk=-1942420568, na=0, flags=<optimized out>, pp_stack=0x7ffc0d0dfdc8, func=0x7fc68feb3268) at Python/ceval.c:5034\n#24 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3275\n#25 0x00007fc6dddbbb49 in _PyEval_EvalCodeWithName (_co=<optimized out>, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=8, kws=0x7fd5098, kwcount=0, defs=0x0, defcount=0, \n    kwdefs=0x0, closure=0x0, name=0x7fc6d74eafb0, qualname=0x7fc6d74f07c8) at Python/ceval.c:4018\n#26 0x00007fc6dddbadf5 in fast_function (nk=<optimized out>, na=8, n=<optimized out>, pp_stack=0x7ffc0d0dffe8, func=0x7fc6d74add90) at Python/ceval.c:4813\n#27 call_function (oparg=<optimized out>, pp_stack=0x7ffc0d0dffe8) at Python/ceval.c:4730\n#28 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3236\n#29 0x00007fc6dddbbb49 in _PyEval_EvalCodeWithName (_co=<optimized out>, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=7, kws=0x7fd7640, kwcount=0, defs=0x0, defcount=0, \n    kwdefs=0x0, closure=0x0, name=0x7fc6d74f13e8, qualname=0x7fc6d74f0738) at Python/ceval.c:4018\n#30 0x00007fc6dddbadf5 in fast_function (nk=<optimized out>, na=7, n=<optimized out>, pp_stack=0x7ffc0d0e0208, func=0x7fc6d74add08) at Python/ceval.c:4813\n#31 call_function (oparg=<optimized out>, pp_stack=0x7ffc0d0e0208) at Python/ceval.c:4730\n#32 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3236\n#33 0x00007fc6dddbb166 in fast_function (nk=<optimized out>, na=6, n=<optimized out>, pp_stack=0x7ffc0d0e0388, func=0x7fc6d74adc80) at Python/ceval.c:4803\n#34 call_function (oparg=<optimized out>, pp_stack=0x7ffc0d0e0388) at Python/ceval.c:4730\n#35 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3236\n#36 0x00007fc6dddbbb49 in _PyEval_EvalCodeWithName (_co=<optimized out>, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=3, kws=0x40e5488, kwcount=0, defs=0x7fc6d74a7060, \n    defcount=3, kwdefs=0x0, closure=0x0, name=0x7fc6dc762458, qualname=0x7fc6d74ead30) at Python/ceval.c:4018\n#37 0x00007fc6dddbadf5 in fast_function (nk=<optimized out>, na=3, n=<optimized out>, pp_stack=0x7ffc0d0e05a8, func=0x7fc6d74adae8) at Python/ceval.c:4813\n#38 call_function (oparg=<optimized out>, pp_stack=0x7ffc0d0e05a8) at Python/ceval.c:4730\n#39 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3236\n#40 0x00007fc6dddbbb49 in _PyEval_EvalCodeWithName (_co=<optimized out>, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=4, kws=0x41f8440, kwcount=0, defs=0x7fc6d7761df0, \n    defcount=1, kwdefs=0x0, closure=0x0, name=0x7fc6d77a1ee0, qualname=0x7fc6d77a1ee0) at Python/ceval.c:4018\n#41 0x00007fc6dddbadf5 in fast_function (nk=<optimized out>, na=4, n=<optimized out>, pp_stack=0x7ffc0d0e07c8, func=0x7fc6d76ecd90) at Python/ceval.c:4813\n#42 call_function (oparg=<optimized out>, pp_stack=0x7ffc0d0e07c8) at Python/ceval.c:4730\n#43 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3236\n#44 0x00007fc6dddbbb49 in _PyEval_EvalCodeWithName (_co=<optimized out>, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=1, kws=0x1c06428, kwcount=0, defs=0x7fc6d76f1320, \n    defcount=2, kwdefs=0x0, closure=0x0, name=0x7fc6dc762458, qualname=0x7fc6d772a170) at Python/ceval.c:4018\n#45 0x00007fc6dddbadf5 in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x7ffc0d0e09e8, func=0x7fc6d76e7730) at Python/ceval.c:4813\n#46 call_function (oparg=<optimized out>, pp_stack=0x7ffc0d0e09e8) at Python/ceval.c:4730\n#47 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3236", "body": "TensorFlow allows graphs to be larger than 2GB, however those graphs can't be serialized.\r\n\r\nI suspect this is the cause of segfaults we've been seeing because of following line in dump_graph.cc\r\n\r\n`65    TF_CHECK_OK(WriteTextProto(Env::Default(), path, graph_def));\r\n`\r\n\r\nIt would be useful to provide an informative error message because troubleshooting this requires looking at core file:\r\n\r\n```\r\nulimit -Sc unlimited\r\ngdb python\r\ncore core\r\nbt\r\n```\r\n\r\nHere's the backtrace\r\n\r\n```\r\n#0  0x00007fc6dcdae428 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:54\r\n#1  0x00007fc6dcdb002a in __GI_abort () at abort.c:89\r\n#2  0x00007fc6c04b8417 in tensorflow::internal::LogMessageFatal::~LogMessageFatal() () from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\r\n#3  0x00007fc6bd05cb1e in tensorflow::dump_graph::DumpGraphDefToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef const&) ()\r\n   from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\r\n#4  0x00007fc6bd05ce88 in tensorflow::dump_graph::DumpGraphToFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph const&, tensorflow::FunctionLibraryDefinition const*) () from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\r\n#5  0x00007fc6bcffd6c2 in tensorflow::EncapsulateSubgraphsPass::Run(tensorflow::GraphOptimizationPassOptions const&) ()\r\n   from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\r\n#6  0x00007fc6bec68e00 in tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&) ()\r\n   from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\r\n#7  0x00007fc6bec768a3 in tensorflow::SimpleGraphExecutionState::BuildGraph(tensorflow::BuildGraphOptions const&, std::unique_ptr<tensorflow::SimpleClientGraph, std::default_delete<tensorflow::SimpleClientGraph> >*) () from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\r\n#8  0x00007fc6be43d293 in tensorflow::DirectSession::CreateGraphs(tensorflow::BuildGraphOptions const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::unique_ptr<tensorflow::Graph, std::default_delete<tensorflow::Graph> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::Graph, std::default_delete<tensorflow::Graph> > > > >*, std::unique_ptr<tensorflow::FunctionLibraryDefinition, std::default_delete<tensorflow::FunctionLibraryDefinition> >*, tensorflow::DirectSession::RunStateArgs*) () from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\r\n#9  0x00007fc6be43f4cf in tensorflow::DirectSession::GetOrCreateExecutors(tensorflow::thread::ThreadPool*, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::DirectSession::ExecutorsAndKeys**, tensorflow::DirectSession::RunStateArgs*) ()\r\n   from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\r\n#10 0x00007fc6be44085e in tensorflow::DirectSession::Run(tensorflow::RunOptions const&, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, tensorflow::RunMetadata*) () from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\r\n#11 0x00007fc6bcfd4641 in TF_Run_Helper(tensorflow::Session*, char const*, TF_Buffer const*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, TF_Tensor**, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, TF_Buffer*, TF_Status*) [clone .constprop.498] ()\r\n   from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\r\n#12 0x00007fc6bcfd4e58 in TF_Run () from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\r\n#13 0x00007fc6bcf0b15d in tensorflow::TF_Run_wrapper_helper(TF_DeprecatedSession*, char const*, TF_Buffer const*, _object*, tensorflow::gtl::InlinedVector<char const*, 8> const&, tensorflow::gtl::InlinedVector<char const*, 8> const&, TF_Status*, tensorflow::gtl::InlinedVector<_object*, 8>*, TF_Buffer*) ()\r\n   from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\r\n#14 0x00007fc6bcf0b2a3 in tensorflow::TF_Run_wrapper(TF_DeprecatedSession*, TF_Buffer const*, _object*, tensorflow::gtl::InlinedVector<char const*, 8> const&, tensorflow::gtl::InlinedVector<char const*, 8> const&, TF_Status*, tensorflow::gtl::InlinedVector<_object*, 8>*, TF_Buffer*) () from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\r\n#15 0x00007fc6bceed225 in _wrap_TF_Run () from /my_code/tensorflow_ops/tensorflow/_python_build/tensorflow/python/_pywrap_tensorflow.so\r\n#16 0x00007fc6ddd335e9 in PyCFunction_Call (func=0x7fc6c5120828, args=0x7fc68c1765f8, kwds=<optimized out>) at Objects/methodobject.c:109\r\n#17 0x00007fc6dddbabd5 in call_function (oparg=<optimized out>, pp_stack=0x7ffc0d0dfa78) at Python/ceval.c:4705\r\n#18 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3236\r\n#19 0x00007fc6dddbbb49 in _PyEval_EvalCodeWithName (_co=<optimized out>, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=6, kws=0x0, kwcount=0, defs=0x0, defcount=0, \r\n    kwdefs=0x0, closure=0x7fc6d70ac780, name=0x0, qualname=0x0) at Python/ceval.c:4018\r\n#20 0x00007fc6dddbbcd8 in PyEval_EvalCodeEx (_co=<optimized out>, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kws=<optimized out>, kwcount=0, defs=0x0, \r\n    defcount=0, kwdefs=0x0, closure=0x7fc6d70ac780) at Python/ceval.c:4039\r\n#21 0x00007fc6ddd11542 in function_call (func=0x7fc68feb3268, arg=0x7fc68c3903a8, kw=0x0) at Objects/funcobject.c:627\r\n#22 0x00007fc6ddcde236 in PyObject_Call (func=0x7fc68feb3268, arg=<optimized out>, kw=<optimized out>) at Objects/abstract.c:2165\r\n#23 0x00007fc6dddb8234 in ext_do_call (nk=-1942420568, na=0, flags=<optimized out>, pp_stack=0x7ffc0d0dfdc8, func=0x7fc68feb3268) at Python/ceval.c:5034\r\n#24 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3275\r\n#25 0x00007fc6dddbbb49 in _PyEval_EvalCodeWithName (_co=<optimized out>, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=8, kws=0x7fd5098, kwcount=0, defs=0x0, defcount=0, \r\n    kwdefs=0x0, closure=0x0, name=0x7fc6d74eafb0, qualname=0x7fc6d74f07c8) at Python/ceval.c:4018\r\n#26 0x00007fc6dddbadf5 in fast_function (nk=<optimized out>, na=8, n=<optimized out>, pp_stack=0x7ffc0d0dffe8, func=0x7fc6d74add90) at Python/ceval.c:4813\r\n#27 call_function (oparg=<optimized out>, pp_stack=0x7ffc0d0dffe8) at Python/ceval.c:4730\r\n#28 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3236\r\n#29 0x00007fc6dddbbb49 in _PyEval_EvalCodeWithName (_co=<optimized out>, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=7, kws=0x7fd7640, kwcount=0, defs=0x0, defcount=0, \r\n    kwdefs=0x0, closure=0x0, name=0x7fc6d74f13e8, qualname=0x7fc6d74f0738) at Python/ceval.c:4018\r\n#30 0x00007fc6dddbadf5 in fast_function (nk=<optimized out>, na=7, n=<optimized out>, pp_stack=0x7ffc0d0e0208, func=0x7fc6d74add08) at Python/ceval.c:4813\r\n#31 call_function (oparg=<optimized out>, pp_stack=0x7ffc0d0e0208) at Python/ceval.c:4730\r\n#32 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3236\r\n#33 0x00007fc6dddbb166 in fast_function (nk=<optimized out>, na=6, n=<optimized out>, pp_stack=0x7ffc0d0e0388, func=0x7fc6d74adc80) at Python/ceval.c:4803\r\n#34 call_function (oparg=<optimized out>, pp_stack=0x7ffc0d0e0388) at Python/ceval.c:4730\r\n#35 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3236\r\n#36 0x00007fc6dddbbb49 in _PyEval_EvalCodeWithName (_co=<optimized out>, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=3, kws=0x40e5488, kwcount=0, defs=0x7fc6d74a7060, \r\n    defcount=3, kwdefs=0x0, closure=0x0, name=0x7fc6dc762458, qualname=0x7fc6d74ead30) at Python/ceval.c:4018\r\n#37 0x00007fc6dddbadf5 in fast_function (nk=<optimized out>, na=3, n=<optimized out>, pp_stack=0x7ffc0d0e05a8, func=0x7fc6d74adae8) at Python/ceval.c:4813\r\n#38 call_function (oparg=<optimized out>, pp_stack=0x7ffc0d0e05a8) at Python/ceval.c:4730\r\n#39 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3236\r\n#40 0x00007fc6dddbbb49 in _PyEval_EvalCodeWithName (_co=<optimized out>, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=4, kws=0x41f8440, kwcount=0, defs=0x7fc6d7761df0, \r\n    defcount=1, kwdefs=0x0, closure=0x0, name=0x7fc6d77a1ee0, qualname=0x7fc6d77a1ee0) at Python/ceval.c:4018\r\n#41 0x00007fc6dddbadf5 in fast_function (nk=<optimized out>, na=4, n=<optimized out>, pp_stack=0x7ffc0d0e07c8, func=0x7fc6d76ecd90) at Python/ceval.c:4813\r\n#42 call_function (oparg=<optimized out>, pp_stack=0x7ffc0d0e07c8) at Python/ceval.c:4730\r\n#43 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3236\r\n#44 0x00007fc6dddbbb49 in _PyEval_EvalCodeWithName (_co=<optimized out>, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=1, kws=0x1c06428, kwcount=0, defs=0x7fc6d76f1320, \r\n    defcount=2, kwdefs=0x0, closure=0x0, name=0x7fc6dc762458, qualname=0x7fc6d772a170) at Python/ceval.c:4018\r\n#45 0x00007fc6dddbadf5 in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x7ffc0d0e09e8, func=0x7fc6d76e7730) at Python/ceval.c:4813\r\n#46 call_function (oparg=<optimized out>, pp_stack=0x7ffc0d0e09e8) at Python/ceval.c:4730\r\n#47 PyEval_EvalFrameEx (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3236\r\n```"}