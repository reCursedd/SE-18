{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/287536887", "html_url": "https://github.com/tensorflow/tensorflow/issues/8478#issuecomment-287536887", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8478", "id": 287536887, "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzUzNjg4Nw==", "user": {"login": "samwhitlock", "id": 433170, "node_id": "MDQ6VXNlcjQzMzE3MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/433170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samwhitlock", "html_url": "https://github.com/samwhitlock", "followers_url": "https://api.github.com/users/samwhitlock/followers", "following_url": "https://api.github.com/users/samwhitlock/following{/other_user}", "gists_url": "https://api.github.com/users/samwhitlock/gists{/gist_id}", "starred_url": "https://api.github.com/users/samwhitlock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samwhitlock/subscriptions", "organizations_url": "https://api.github.com/users/samwhitlock/orgs", "repos_url": "https://api.github.com/users/samwhitlock/repos", "events_url": "https://api.github.com/users/samwhitlock/events{/privacy}", "received_events_url": "https://api.github.com/users/samwhitlock/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-18T11:16:34Z", "updated_at": "2017-03-18T11:16:34Z", "author_association": "NONE", "body_html": "<p>I'm not sure I fully understand this (I haven't looked at the graph optimization part of the code), but I don't think this would work for my use case because I don't mmap tensors. I am not mmaping Tensors directly; instead, my graph works something like this</p>\n<ol>\n<li>source: a list of filenames</li>\n<li>read kernel: takes one filename, calls <code>NewReadOnlyMemoryRegionFromFile</code> (with the boolean flag hack I currently have), and puts that region into a custom data type that I output as a <code>resource</code> type from the read kernel</li>\n<li>downstream kernels: read in this custom <code>resource</code> type that owns the mmaped region, and deletes / recycles it when down (calling the <code>ReadOnlyMemoryRegion</code>'s destructor)</li>\n</ol>\n<p>This \"sidestepping\" of tensorflow concepts (e.g. not reading my custom binary format and converting it into a large <code>string</code> Tensor) might be hard to accommodate for <code>MAP_POPULATE</code> in this case, but I think this could prove useful for other use cases.</p>", "body_text": "I'm not sure I fully understand this (I haven't looked at the graph optimization part of the code), but I don't think this would work for my use case because I don't mmap tensors. I am not mmaping Tensors directly; instead, my graph works something like this\n\nsource: a list of filenames\nread kernel: takes one filename, calls NewReadOnlyMemoryRegionFromFile (with the boolean flag hack I currently have), and puts that region into a custom data type that I output as a resource type from the read kernel\ndownstream kernels: read in this custom resource type that owns the mmaped region, and deletes / recycles it when down (calling the ReadOnlyMemoryRegion's destructor)\n\nThis \"sidestepping\" of tensorflow concepts (e.g. not reading my custom binary format and converting it into a large string Tensor) might be hard to accommodate for MAP_POPULATE in this case, but I think this could prove useful for other use cases.", "body": "I'm not sure I fully understand this (I haven't looked at the graph optimization part of the code), but I don't think this would work for my use case because I don't mmap tensors. I am not mmaping Tensors directly; instead, my graph works something like this\r\n\r\n1. source: a list of filenames\r\n2. read kernel: takes one filename, calls `NewReadOnlyMemoryRegionFromFile` (with the boolean flag hack I currently have), and puts that region into a custom data type that I output as a `resource` type from the read kernel\r\n3. downstream kernels: read in this custom `resource` type that owns the mmaped region, and deletes / recycles it when down (calling the `ReadOnlyMemoryRegion`'s destructor)\r\n\r\nThis \"sidestepping\" of tensorflow concepts (e.g. not reading my custom binary format and converting it into a large `string` Tensor) might be hard to accommodate for `MAP_POPULATE` in this case, but I think this could prove useful for other use cases."}