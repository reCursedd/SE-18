{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/272726462", "html_url": "https://github.com/tensorflow/tensorflow/issues/6220#issuecomment-272726462", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6220", "id": 272726462, "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjcyNjQ2Mg==", "user": {"login": "lukaszkaiser", "id": 684901, "node_id": "MDQ6VXNlcjY4NDkwMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/684901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukaszkaiser", "html_url": "https://github.com/lukaszkaiser", "followers_url": "https://api.github.com/users/lukaszkaiser/followers", "following_url": "https://api.github.com/users/lukaszkaiser/following{/other_user}", "gists_url": "https://api.github.com/users/lukaszkaiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukaszkaiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukaszkaiser/subscriptions", "organizations_url": "https://api.github.com/users/lukaszkaiser/orgs", "repos_url": "https://api.github.com/users/lukaszkaiser/repos", "events_url": "https://api.github.com/users/lukaszkaiser/events{/privacy}", "received_events_url": "https://api.github.com/users/lukaszkaiser/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-15T21:49:06Z", "updated_at": "2017-01-15T21:49:06Z", "author_association": "MEMBER", "body_html": "<p>Sure, let me try to clarify.</p>\n<p>When you do <code>tf.get_variable_scope().reuse_variables()</code> you set the current scope to reuse variables. If you call the optimizer in such scope, it's trying to reuse slot variables, which it cannot find, so it throws an error. If you put a scope around, the <code>tf.get_variable_scope().reuse_variables()</code> only affects that scope, so when you exit it, you're back in the non-reusing mode, the one you want.</p>\n<p>Hope that helps, let me know if I should clarify more.</p>", "body_text": "Sure, let me try to clarify.\nWhen you do tf.get_variable_scope().reuse_variables() you set the current scope to reuse variables. If you call the optimizer in such scope, it's trying to reuse slot variables, which it cannot find, so it throws an error. If you put a scope around, the tf.get_variable_scope().reuse_variables() only affects that scope, so when you exit it, you're back in the non-reusing mode, the one you want.\nHope that helps, let me know if I should clarify more.", "body": "Sure, let me try to clarify.\r\n\r\nWhen you do `tf.get_variable_scope().reuse_variables()` you set the current scope to reuse variables. If you call the optimizer in such scope, it's trying to reuse slot variables, which it cannot find, so it throws an error. If you put a scope around, the `tf.get_variable_scope().reuse_variables()` only affects that scope, so when you exit it, you're back in the non-reusing mode, the one you want.\r\n\r\nHope that helps, let me know if I should clarify more."}