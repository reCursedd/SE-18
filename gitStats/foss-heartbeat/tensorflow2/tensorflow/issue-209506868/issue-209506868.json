{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7782", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7782/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7782/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7782/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7782", "id": 209506868, "node_id": "MDU6SXNzdWUyMDk1MDY4Njg=", "number": 7782, "title": "control_dependencies and assign new shape not working (using validate_shape=False)", "user": {"login": "morgangiraud", "id": 1278248, "node_id": "MDQ6VXNlcjEyNzgyNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1278248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/morgangiraud", "html_url": "https://github.com/morgangiraud", "followers_url": "https://api.github.com/users/morgangiraud/followers", "following_url": "https://api.github.com/users/morgangiraud/following{/other_user}", "gists_url": "https://api.github.com/users/morgangiraud/gists{/gist_id}", "starred_url": "https://api.github.com/users/morgangiraud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/morgangiraud/subscriptions", "organizations_url": "https://api.github.com/users/morgangiraud/orgs", "repos_url": "https://api.github.com/users/morgangiraud/repos", "events_url": "https://api.github.com/users/morgangiraud/events{/privacy}", "received_events_url": "https://api.github.com/users/morgangiraud/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2017-02-22T16:29:11Z", "updated_at": "2017-02-23T17:56:30Z", "closed_at": "2017-02-23T17:44:19Z", "author_association": "NONE", "body_html": "<h3>Environment info</h3>\n<p>Operating System: OSX on CPU<br>\nTensorflow 1.0.0</p>\n<h3>Problem</h3>\n<p>Hello, i've been trying to use <code>tf.assign</code> with a <code>tf.control_dependencies</code> scheme when changing the shape on the fly.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> I define a \"shape-able\" Variable</span>\nx <span class=\"pl-k\">=</span> tf.Variable(\n    [], \n    <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.int32,\n    <span class=\"pl-v\">validate_shape</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>,\n    <span class=\"pl-v\">trainable</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>\n)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> I build a new shape and assign it to x</span>\nconcat <span class=\"pl-k\">=</span> tf.concat([x, [<span class=\"pl-c1\">0</span>]], <span class=\"pl-c1\">0</span>)\nassign_op <span class=\"pl-k\">=</span> tf.assign(x, concat, <span class=\"pl-v\">validate_shape</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>)\n\n<span class=\"pl-k\">with</span> tf.control_dependencies([assign_op]):\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> I print x after the assignment</span>\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> Note that the Print call is on \"x\" and NOT \"assign_op\"</span>\n    print_op_dep <span class=\"pl-k\">=</span> tf.Print(x, <span class=\"pl-v\">data</span><span class=\"pl-k\">=</span>[x], <span class=\"pl-v\">message</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>print_op_dep:<span class=\"pl-pds\">\"</span></span>)\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> The assign_op is called, but it seems that print statement happens</span>\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> before the assignment</span>\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    sess.run(tf.global_variables_initializer())\n    <span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">3</span>):\n        sess.run(print_op_dep)</pre></div>\n<p><strong>Outputs</strong>:</p>\n<div class=\"highlight highlight-source-shell\"><pre>I tensorflow/core/kernels/logging_ops.cc:79] print_op_dep:[]\nI tensorflow/core/kernels/logging_ops.cc:79] print_op_dep:[0]\nI tensorflow/core/kernels/logging_ops.cc:79] print_op_dep:[0 0]</pre></div>\n<p><strong>I would expect</strong>:</p>\n<pre><code>I tensorflow/core/kernels/logging_ops.cc:79] print_op_dep:[0]\nI tensorflow/core/kernels/logging_ops.cc:79] print_op_dep:[0 0]\nI tensorflow/core/kernels/logging_ops.cc:79] print_op_dep:[0 0 0]\n</code></pre>\n<p>Is this a bug ?</p>", "body_text": "Environment info\nOperating System: OSX on CPU\nTensorflow 1.0.0\nProblem\nHello, i've been trying to use tf.assign with a tf.control_dependencies scheme when changing the shape on the fly.\nimport tensorflow as tf\n\n# I define a \"shape-able\" Variable\nx = tf.Variable(\n    [], \n    dtype=tf.int32,\n    validate_shape=False,\n    trainable=False\n)\n# I build a new shape and assign it to x\nconcat = tf.concat([x, [0]], 0)\nassign_op = tf.assign(x, concat, validate_shape=False)\n\nwith tf.control_dependencies([assign_op]):\n    # I print x after the assignment\n    # Note that the Print call is on \"x\" and NOT \"assign_op\"\n    print_op_dep = tf.Print(x, data=[x], message=\"print_op_dep:\")\n    # The assign_op is called, but it seems that print statement happens\n    # before the assignment\n\nwith tf.Session() as sess:\n    sess.run(tf.global_variables_initializer())\n    for i in range(3):\n        sess.run(print_op_dep)\nOutputs:\nI tensorflow/core/kernels/logging_ops.cc:79] print_op_dep:[]\nI tensorflow/core/kernels/logging_ops.cc:79] print_op_dep:[0]\nI tensorflow/core/kernels/logging_ops.cc:79] print_op_dep:[0 0]\nI would expect:\nI tensorflow/core/kernels/logging_ops.cc:79] print_op_dep:[0]\nI tensorflow/core/kernels/logging_ops.cc:79] print_op_dep:[0 0]\nI tensorflow/core/kernels/logging_ops.cc:79] print_op_dep:[0 0 0]\n\nIs this a bug ?", "body": "### Environment info\r\nOperating System: OSX on CPU\r\nTensorflow 1.0.0\r\n\r\n### Problem\r\nHello, i've been trying to use `tf.assign` with a `tf.control_dependencies` scheme when changing the shape on the fly.\r\n```python\r\nimport tensorflow as tf\r\n\r\n# I define a \"shape-able\" Variable\r\nx = tf.Variable(\r\n    [], \r\n    dtype=tf.int32,\r\n    validate_shape=False,\r\n    trainable=False\r\n)\r\n# I build a new shape and assign it to x\r\nconcat = tf.concat([x, [0]], 0)\r\nassign_op = tf.assign(x, concat, validate_shape=False)\r\n\r\nwith tf.control_dependencies([assign_op]):\r\n    # I print x after the assignment\r\n    # Note that the Print call is on \"x\" and NOT \"assign_op\"\r\n    print_op_dep = tf.Print(x, data=[x], message=\"print_op_dep:\")\r\n    # The assign_op is called, but it seems that print statement happens\r\n    # before the assignment\r\n\r\nwith tf.Session() as sess:\r\n    sess.run(tf.global_variables_initializer())\r\n    for i in range(3):\r\n        sess.run(print_op_dep)\r\n```\r\n\r\n**Outputs**:\r\n```bash\r\nI tensorflow/core/kernels/logging_ops.cc:79] print_op_dep:[]\r\nI tensorflow/core/kernels/logging_ops.cc:79] print_op_dep:[0]\r\nI tensorflow/core/kernels/logging_ops.cc:79] print_op_dep:[0 0]\r\n```\r\n\r\n**I would expect**:\r\n```\r\nI tensorflow/core/kernels/logging_ops.cc:79] print_op_dep:[0]\r\nI tensorflow/core/kernels/logging_ops.cc:79] print_op_dep:[0 0]\r\nI tensorflow/core/kernels/logging_ops.cc:79] print_op_dep:[0 0 0]\r\n```\r\n\r\nIs this a bug ?"}