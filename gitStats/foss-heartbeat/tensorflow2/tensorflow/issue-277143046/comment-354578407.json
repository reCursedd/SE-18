{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/354578407", "html_url": "https://github.com/tensorflow/tensorflow/pull/14920#issuecomment-354578407", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14920", "id": 354578407, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDU3ODQwNw==", "user": {"login": "yongtang", "id": 6932348, "node_id": "MDQ6VXNlcjY5MzIzNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6932348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yongtang", "html_url": "https://github.com/yongtang", "followers_url": "https://api.github.com/users/yongtang/followers", "following_url": "https://api.github.com/users/yongtang/following{/other_user}", "gists_url": "https://api.github.com/users/yongtang/gists{/gist_id}", "starred_url": "https://api.github.com/users/yongtang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yongtang/subscriptions", "organizations_url": "https://api.github.com/users/yongtang/orgs", "repos_url": "https://api.github.com/users/yongtang/repos", "events_url": "https://api.github.com/users/yongtang/events{/privacy}", "received_events_url": "https://api.github.com/users/yongtang/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-31T00:57:41Z", "updated_at": "2017-12-31T00:57:41Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1112263\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/facaiy\">@facaiy</a> In the example shown in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"277120139\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/14916\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/14916/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/14916\">#14916</a>,</p>\n<pre><code>xx = tf.constant(1, shape=[10, 28, 28, 3], dtype=tf.float32)\n</code></pre>\n<p>so <code>shape.ndims = 4</code> (not <code>3</code>). In that case, <code>-4 + 4 = 0</code> will pass and <code>-5 + 4 = -1</code> will fail.</p>\n<p>I think the edge case has been covered:</p>\n<div class=\"highlight highlight-source-python\"><pre>Python <span class=\"pl-c1\">2.7</span>.12 (default, Nov <span class=\"pl-c1\">20</span> <span class=\"pl-c1\">2017</span>, <span class=\"pl-c1\">18</span>:<span class=\"pl-c1\">23</span>:<span class=\"pl-c1\">56</span>) \n[<span class=\"pl-c1\">GCC</span> <span class=\"pl-c1\">5.4</span>.0 <span class=\"pl-c1\">20160609</span>] on linux2\nType <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>help<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>copyright<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>credits<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">or</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>license<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">for</span> more information.\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> xx <span class=\"pl-k\">=</span> tf.constant(<span class=\"pl-c1\">1</span>, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">28</span>, <span class=\"pl-c1\">28</span>, <span class=\"pl-c1\">3</span>], <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32)\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> tf.nn.softmax(xx, <span class=\"pl-v\">dim</span><span class=\"pl-k\">=</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>)\n<span class=\"pl-c1\">WARNING</span>:tensorflow:From <span class=\"pl-k\">&lt;</span>stdin<span class=\"pl-k\">&gt;</span>:<span class=\"pl-c1\">1</span>: calling softmax (<span class=\"pl-k\">from</span> tensorflow.python.ops.nn_ops) <span class=\"pl-k\">with</span> dim <span class=\"pl-k\">is</span> deprecated <span class=\"pl-k\">and</span> will be removed <span class=\"pl-k\">in</span> a future version.\nInstructions <span class=\"pl-k\">for</span> updating:\ndim <span class=\"pl-k\">is</span> deprecated, use axis instead\n<span class=\"pl-k\">&lt;</span>tf.Tensor <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Reshape_1:0<span class=\"pl-pds\">'</span></span> shape<span class=\"pl-k\">=</span>(<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">28</span>, <span class=\"pl-c1\">28</span>, <span class=\"pl-c1\">3</span>) dtype<span class=\"pl-k\">=</span>float32<span class=\"pl-k\">&gt;</span>\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> tf.nn.softmax(xx, <span class=\"pl-v\">dim</span><span class=\"pl-k\">=</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">2</span>)\n<span class=\"pl-k\">&lt;</span>tf.Tensor <span class=\"pl-s\"><span class=\"pl-pds\">'</span>transpose_1:0<span class=\"pl-pds\">'</span></span> shape<span class=\"pl-k\">=</span>(<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">28</span>, <span class=\"pl-c1\">28</span>, <span class=\"pl-c1\">3</span>) dtype<span class=\"pl-k\">=</span>float32<span class=\"pl-k\">&gt;</span>\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> tf.nn.softmax(xx, <span class=\"pl-v\">dim</span><span class=\"pl-k\">=</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">3</span>)\n<span class=\"pl-k\">&lt;</span>tf.Tensor <span class=\"pl-s\"><span class=\"pl-pds\">'</span>transpose_3:0<span class=\"pl-pds\">'</span></span> shape<span class=\"pl-k\">=</span>(<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">28</span>, <span class=\"pl-c1\">28</span>, <span class=\"pl-c1\">3</span>) dtype<span class=\"pl-k\">=</span>float32<span class=\"pl-k\">&gt;</span>\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> tf.nn.softmax(xx, <span class=\"pl-v\">dim</span><span class=\"pl-k\">=</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">4</span>)\n<span class=\"pl-k\">&lt;</span>tf.Tensor <span class=\"pl-s\"><span class=\"pl-pds\">'</span>transpose_5:0<span class=\"pl-pds\">'</span></span> shape<span class=\"pl-k\">=</span>(<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">28</span>, <span class=\"pl-c1\">28</span>, <span class=\"pl-c1\">3</span>) dtype<span class=\"pl-k\">=</span>float32<span class=\"pl-k\">&gt;</span>\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> tf.nn.softmax(xx, <span class=\"pl-v\">dim</span><span class=\"pl-k\">=</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">5</span>)\nTraceback (most recent call last):\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&lt;stdin&gt;<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">1</span>, <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python2.7/dist-packages/tensorflow/python/util/deprecation.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">316</span>, <span class=\"pl-k\">in</span> new_func\n    <span class=\"pl-k\">return</span> func(<span class=\"pl-k\">*</span>args, <span class=\"pl-k\">**</span>kwargs)</pre></div>", "body_text": "@facaiy In the example shown in #14916,\nxx = tf.constant(1, shape=[10, 28, 28, 3], dtype=tf.float32)\n\nso shape.ndims = 4 (not 3). In that case, -4 + 4 = 0 will pass and -5 + 4 = -1 will fail.\nI think the edge case has been covered:\nPython 2.7.12 (default, Nov 20 2017, 18:23:56) \n[GCC 5.4.0 20160609] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import tensorflow as tf\n>>> xx = tf.constant(1, shape=[10, 28, 28, 3], dtype=tf.float32)\n>>> tf.nn.softmax(xx, dim=-1)\nWARNING:tensorflow:From <stdin>:1: calling softmax (from tensorflow.python.ops.nn_ops) with dim is deprecated and will be removed in a future version.\nInstructions for updating:\ndim is deprecated, use axis instead\n<tf.Tensor 'Reshape_1:0' shape=(10, 28, 28, 3) dtype=float32>\n>>> tf.nn.softmax(xx, dim=-2)\n<tf.Tensor 'transpose_1:0' shape=(10, 28, 28, 3) dtype=float32>\n>>> tf.nn.softmax(xx, dim=-3)\n<tf.Tensor 'transpose_3:0' shape=(10, 28, 28, 3) dtype=float32>\n>>> tf.nn.softmax(xx, dim=-4)\n<tf.Tensor 'transpose_5:0' shape=(10, 28, 28, 3) dtype=float32>\n>>> tf.nn.softmax(xx, dim=-5)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/util/deprecation.py\", line 316, in new_func\n    return func(*args, **kwargs)", "body": "@facaiy In the example shown in #14916,\r\n```\r\nxx = tf.constant(1, shape=[10, 28, 28, 3], dtype=tf.float32)\r\n```\r\nso `shape.ndims = 4` (not `3`). In that case, `-4 + 4 = 0` will pass and `-5 + 4 = -1` will fail.\r\n\r\nI think the edge case has been covered:\r\n```python\r\nPython 2.7.12 (default, Nov 20 2017, 18:23:56) \r\n[GCC 5.4.0 20160609] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import tensorflow as tf\r\n>>> xx = tf.constant(1, shape=[10, 28, 28, 3], dtype=tf.float32)\r\n>>> tf.nn.softmax(xx, dim=-1)\r\nWARNING:tensorflow:From <stdin>:1: calling softmax (from tensorflow.python.ops.nn_ops) with dim is deprecated and will be removed in a future version.\r\nInstructions for updating:\r\ndim is deprecated, use axis instead\r\n<tf.Tensor 'Reshape_1:0' shape=(10, 28, 28, 3) dtype=float32>\r\n>>> tf.nn.softmax(xx, dim=-2)\r\n<tf.Tensor 'transpose_1:0' shape=(10, 28, 28, 3) dtype=float32>\r\n>>> tf.nn.softmax(xx, dim=-3)\r\n<tf.Tensor 'transpose_3:0' shape=(10, 28, 28, 3) dtype=float32>\r\n>>> tf.nn.softmax(xx, dim=-4)\r\n<tf.Tensor 'transpose_5:0' shape=(10, 28, 28, 3) dtype=float32>\r\n>>> tf.nn.softmax(xx, dim=-5)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/util/deprecation.py\", line 316, in new_func\r\n    return func(*args, **kwargs)\r\n```"}