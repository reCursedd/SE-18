{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15397", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15397/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15397/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15397/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15397", "id": 282439852, "node_id": "MDU6SXNzdWUyODI0Mzk4NTI=", "number": 15397, "title": "Tensorflow c++ memory leak - Valgrind", "user": {"login": "ashokbugude", "id": 10016848, "node_id": "MDQ6VXNlcjEwMDE2ODQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/10016848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashokbugude", "html_url": "https://github.com/ashokbugude", "followers_url": "https://api.github.com/users/ashokbugude/followers", "following_url": "https://api.github.com/users/ashokbugude/following{/other_user}", "gists_url": "https://api.github.com/users/ashokbugude/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashokbugude/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashokbugude/subscriptions", "organizations_url": "https://api.github.com/users/ashokbugude/orgs", "repos_url": "https://api.github.com/users/ashokbugude/repos", "events_url": "https://api.github.com/users/ashokbugude/events{/privacy}", "received_events_url": "https://api.github.com/users/ashokbugude/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-15T14:14:46Z", "updated_at": "2017-12-15T21:08:24Z", "closed_at": "2017-12-15T21:08:24Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: 17.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.3.0</li>\n<li><strong>Python version</strong>: 2.7</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.5.1</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: 6.0.3</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Describe the problem</strong>:</li>\n</ul>\n<p>I am executing simple tensorflow code to create graph def as shown below</p>\n<pre><code>tensorflow::NewSession (options, &amp;session)\nReadBinaryProto (tensorflow::Env::Default(), \"/home/ashok/eclipseWorkspace/faceRecognition-x86_64/Data/models/optimized_facenet.pb\", &amp;graph_def));\nsession-&gt;Create (graph_def);\n</code></pre>\n<p>But when I run Valgrind as shown below</p>\n<pre><code>valgrind --leak-check=full --show-leak-kinds=all --vex-guest-max-insns=25 ./faceRecognition-x86_64 -r -i\n</code></pre>\n<p>I get below errors</p>\n<pre><code>==12366== 16,000 bytes in 1 blocks are still reachable in loss record 47,782 of 47,905\n==12366==    at 0x4C2E19F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==12366==    by 0xBF875DC: std::vector&lt;tensorflow::CostModel::MemUsage, std::allocator&lt;tensorflow::CostModel::MemUsage&gt; &gt;::reserve(unsigned long) (in /usr/lib/libtensorflow_cc.so)\n==12366==    by 0xBF90128: tensorflow::CostModel::InitFromGraph(tensorflow::Graph const&amp;) (in /usr/lib/libtensorflow_cc.so)\n==12366==    by 0xBEE48D3: tensorflow::SimpleGraphExecutionState::InitBaseGraph(tensorflow::BuildGraphOptions const&amp;) (in /usr/lib/libtensorflow_cc.so)\n==12366==    by 0xBEE52CF: tensorflow::SimpleGraphExecutionState::MakeForBaseGraph(tensorflow::GraphDef*, tensorflow::SimpleGraphExecutionStateOptions const&amp;, std::unique_ptr&lt;tensorflow::SimpleGraphExecutionState, std::default_delete&lt;tensorflow::SimpleGraphExecutionState&gt; &gt;*) (in /usr/lib/libtensorflow_cc.so)\n==12366==    by 0xBE68B9D: tensorflow::DirectSession::MaybeInitializeExecutionState(tensorflow::GraphDef const&amp;, bool*) (in /usr/lib/libtensorflow_cc.so)\n==12366==    by 0xBE68CF9: tensorflow::DirectSession::ExtendLocked(tensorflow::GraphDef const&amp;) (in /usr/lib/libtensorflow_cc.so)\n==12366==    by 0xBE68FC7: tensorflow::DirectSession::Create(tensorflow::GraphDef const&amp;) (in /usr/lib/libtensorflow_cc.so)\n==12366==    by 0x26B899: TensorFlow::initializeRecognition() (in /home/ashok/eclipseWorkspace/faceRecognition-x86_64/Debug/faceRecognition-x86_64)\n==12366==    by 0x24197D: RecognitionWithImages::RecognitionWithImages() (in /home/ashok/eclipseWorkspace/faceRecognition-x86_64/Debug/faceRecognition-x86_64)\n==12366==    by 0x12F27C: main (in /home/ashok/eclipseWorkspace/faceRecognition-x86_64/Debug/faceRecognition-x86_64)\n\n</code></pre>\n<p>These type of errors are also generated when I do <strong>session -&gt; run ()</strong></p>\n<p>Due to the above issues, the memory needed to run the program keeps increasing as time passes and the application crashes due to insufficient memory after  a certain point of time.</p>\n<p>I have also posted the issue in stack overflow - <a href=\"https://stackoverflow.com/questions/47834054/tensorflow-c-memory-leak-valgrind\" rel=\"nofollow\">https://stackoverflow.com/questions/47834054/tensorflow-c-memory-leak-valgrind</a></p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): 17.04\nTensorFlow installed from (source or binary): Source\nTensorFlow version (use command below): 1.3.0\nPython version: 2.7\nBazel version (if compiling from source): 0.5.1\nGCC/Compiler version (if compiling from source): 6.0.3\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nDescribe the problem:\n\nI am executing simple tensorflow code to create graph def as shown below\ntensorflow::NewSession (options, &session)\nReadBinaryProto (tensorflow::Env::Default(), \"/home/ashok/eclipseWorkspace/faceRecognition-x86_64/Data/models/optimized_facenet.pb\", &graph_def));\nsession->Create (graph_def);\n\nBut when I run Valgrind as shown below\nvalgrind --leak-check=full --show-leak-kinds=all --vex-guest-max-insns=25 ./faceRecognition-x86_64 -r -i\n\nI get below errors\n==12366== 16,000 bytes in 1 blocks are still reachable in loss record 47,782 of 47,905\n==12366==    at 0x4C2E19F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==12366==    by 0xBF875DC: std::vector<tensorflow::CostModel::MemUsage, std::allocator<tensorflow::CostModel::MemUsage> >::reserve(unsigned long) (in /usr/lib/libtensorflow_cc.so)\n==12366==    by 0xBF90128: tensorflow::CostModel::InitFromGraph(tensorflow::Graph const&) (in /usr/lib/libtensorflow_cc.so)\n==12366==    by 0xBEE48D3: tensorflow::SimpleGraphExecutionState::InitBaseGraph(tensorflow::BuildGraphOptions const&) (in /usr/lib/libtensorflow_cc.so)\n==12366==    by 0xBEE52CF: tensorflow::SimpleGraphExecutionState::MakeForBaseGraph(tensorflow::GraphDef*, tensorflow::SimpleGraphExecutionStateOptions const&, std::unique_ptr<tensorflow::SimpleGraphExecutionState, std::default_delete<tensorflow::SimpleGraphExecutionState> >*) (in /usr/lib/libtensorflow_cc.so)\n==12366==    by 0xBE68B9D: tensorflow::DirectSession::MaybeInitializeExecutionState(tensorflow::GraphDef const&, bool*) (in /usr/lib/libtensorflow_cc.so)\n==12366==    by 0xBE68CF9: tensorflow::DirectSession::ExtendLocked(tensorflow::GraphDef const&) (in /usr/lib/libtensorflow_cc.so)\n==12366==    by 0xBE68FC7: tensorflow::DirectSession::Create(tensorflow::GraphDef const&) (in /usr/lib/libtensorflow_cc.so)\n==12366==    by 0x26B899: TensorFlow::initializeRecognition() (in /home/ashok/eclipseWorkspace/faceRecognition-x86_64/Debug/faceRecognition-x86_64)\n==12366==    by 0x24197D: RecognitionWithImages::RecognitionWithImages() (in /home/ashok/eclipseWorkspace/faceRecognition-x86_64/Debug/faceRecognition-x86_64)\n==12366==    by 0x12F27C: main (in /home/ashok/eclipseWorkspace/faceRecognition-x86_64/Debug/faceRecognition-x86_64)\n\n\nThese type of errors are also generated when I do session -> run ()\nDue to the above issues, the memory needed to run the program keeps increasing as time passes and the application crashes due to insufficient memory after  a certain point of time.\nI have also posted the issue in stack overflow - https://stackoverflow.com/questions/47834054/tensorflow-c-memory-leak-valgrind", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: 17.04\r\n- **TensorFlow installed from (source or binary)**: Source\r\n- **TensorFlow version (use command below)**: 1.3.0\r\n- **Python version**: 2.7\r\n- **Bazel version (if compiling from source)**: 0.5.1\r\n- **GCC/Compiler version (if compiling from source)**: 6.0.3\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Describe the problem**:\r\n\r\n\r\nI am executing simple tensorflow code to create graph def as shown below\r\n\r\n```\r\ntensorflow::NewSession (options, &session)\r\nReadBinaryProto (tensorflow::Env::Default(), \"/home/ashok/eclipseWorkspace/faceRecognition-x86_64/Data/models/optimized_facenet.pb\", &graph_def));\r\nsession->Create (graph_def);\r\n```\r\n\r\nBut when I run Valgrind as shown below\r\n```\r\nvalgrind --leak-check=full --show-leak-kinds=all --vex-guest-max-insns=25 ./faceRecognition-x86_64 -r -i\r\n```\r\n I get below errors\r\n\r\n```\r\n==12366== 16,000 bytes in 1 blocks are still reachable in loss record 47,782 of 47,905\r\n==12366==    at 0x4C2E19F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==12366==    by 0xBF875DC: std::vector<tensorflow::CostModel::MemUsage, std::allocator<tensorflow::CostModel::MemUsage> >::reserve(unsigned long) (in /usr/lib/libtensorflow_cc.so)\r\n==12366==    by 0xBF90128: tensorflow::CostModel::InitFromGraph(tensorflow::Graph const&) (in /usr/lib/libtensorflow_cc.so)\r\n==12366==    by 0xBEE48D3: tensorflow::SimpleGraphExecutionState::InitBaseGraph(tensorflow::BuildGraphOptions const&) (in /usr/lib/libtensorflow_cc.so)\r\n==12366==    by 0xBEE52CF: tensorflow::SimpleGraphExecutionState::MakeForBaseGraph(tensorflow::GraphDef*, tensorflow::SimpleGraphExecutionStateOptions const&, std::unique_ptr<tensorflow::SimpleGraphExecutionState, std::default_delete<tensorflow::SimpleGraphExecutionState> >*) (in /usr/lib/libtensorflow_cc.so)\r\n==12366==    by 0xBE68B9D: tensorflow::DirectSession::MaybeInitializeExecutionState(tensorflow::GraphDef const&, bool*) (in /usr/lib/libtensorflow_cc.so)\r\n==12366==    by 0xBE68CF9: tensorflow::DirectSession::ExtendLocked(tensorflow::GraphDef const&) (in /usr/lib/libtensorflow_cc.so)\r\n==12366==    by 0xBE68FC7: tensorflow::DirectSession::Create(tensorflow::GraphDef const&) (in /usr/lib/libtensorflow_cc.so)\r\n==12366==    by 0x26B899: TensorFlow::initializeRecognition() (in /home/ashok/eclipseWorkspace/faceRecognition-x86_64/Debug/faceRecognition-x86_64)\r\n==12366==    by 0x24197D: RecognitionWithImages::RecognitionWithImages() (in /home/ashok/eclipseWorkspace/faceRecognition-x86_64/Debug/faceRecognition-x86_64)\r\n==12366==    by 0x12F27C: main (in /home/ashok/eclipseWorkspace/faceRecognition-x86_64/Debug/faceRecognition-x86_64)\r\n\r\n```\r\nThese type of errors are also generated when I do **session -> run ()** \r\n\r\nDue to the above issues, the memory needed to run the program keeps increasing as time passes and the application crashes due to insufficient memory after  a certain point of time.\r\n\r\nI have also posted the issue in stack overflow - https://stackoverflow.com/questions/47834054/tensorflow-c-memory-leak-valgrind"}