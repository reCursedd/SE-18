{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22524", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22524/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22524/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22524/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22524", "id": 363898595, "node_id": "MDU6SXNzdWUzNjM4OTg1OTU=", "number": 22524, "title": "assign_add seems giving wrong and random results in broadcasting", "user": {"login": "David-Mao", "id": 12476624, "node_id": "MDQ6VXNlcjEyNDc2NjI0", "avatar_url": "https://avatars3.githubusercontent.com/u/12476624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/David-Mao", "html_url": "https://github.com/David-Mao", "followers_url": "https://api.github.com/users/David-Mao/followers", "following_url": "https://api.github.com/users/David-Mao/following{/other_user}", "gists_url": "https://api.github.com/users/David-Mao/gists{/gist_id}", "starred_url": "https://api.github.com/users/David-Mao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/David-Mao/subscriptions", "organizations_url": "https://api.github.com/users/David-Mao/orgs", "repos_url": "https://api.github.com/users/David-Mao/repos", "events_url": "https://api.github.com/users/David-Mao/events{/privacy}", "received_events_url": "https://api.github.com/users/David-Mao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-09-26T07:48:25Z", "updated_at": "2018-11-20T07:56:45Z", "closed_at": null, "author_association": "NONE", "body_html": "<hr>\n<h3>System information</h3>\n<ul>\n<li>\n<p><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nYes</p>\n</li>\n<li>\n<p><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nDarwin localhost 17.5.0 Darwin Kernel Version 17.5.0: Fri Apr 13 19:32:32 PDT 2018; root:xnu-4570.51.2~1/RELEASE_X86_64 x86_64<br>\nMac OS X 10.13.4</p>\n</li>\n<li>\n<p><strong>TensorFlow installed from (source or binary)</strong>:<br>\nbinary</p>\n</li>\n<li>\n<p><strong>TensorFlow version (use command below)</strong>:<br>\nv1.10.0-12-g4dcfddc5d1 1.10.1</p>\n</li>\n<li>\n<p><strong>Python version</strong>:<br>\n2.7 &amp; 3.7</p>\n</li>\n<li>\n<p><strong>Bazel version</strong>:<br>\nN/A</p>\n</li>\n<li>\n<p><strong>CUDA/cuDNN version</strong>:<br>\nN/A</p>\n</li>\n<li>\n<p><strong>GPU model and memory</strong>:<br>\nN/A</p>\n</li>\n<li>\n<p><strong>Exact command to reproduce</strong>:<br>\nSee below</p>\n</li>\n<li>\n<p><strong>Mobile device</strong>:<br>\nN/A</p>\n</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I ran the very simple code below and I've got random meaningless results. The first element of the result is always correct. So it seems that the broadcasting is not working, i.e. only the first element has been correctly processed. But I think people would assume <code>assign_add</code> works in simple case like <code>assign_add(_, 0.0)</code> (or it should complain rather than silently give wrong results).</p>\n<h3>Source code / logs</h3>\n<pre><code>import tensorflow as tf\nimport tensorflow.contrib.eager as tfe\ntf.enable_eager_execution()\n\nZ = tfe.Variable([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]])\nprint(Z.numpy())\ntf.assign_add(Z, 0.0)\nprint(Z.numpy())\n</code></pre>\n<p>One sample result:</p>\n<pre><code>[[1. 2. 3.]\n [4. 5. 6.]]\n[[1.00000000e+00 6.55319777e+13 2.69145827e+20]\n [3.84908544e+09 1.23657954e+33 6.00000000e+00]]\n</code></pre>", "body_text": "System information\n\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nYes\n\n\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nDarwin localhost 17.5.0 Darwin Kernel Version 17.5.0: Fri Apr 13 19:32:32 PDT 2018; root:xnu-4570.51.2~1/RELEASE_X86_64 x86_64\nMac OS X 10.13.4\n\n\nTensorFlow installed from (source or binary):\nbinary\n\n\nTensorFlow version (use command below):\nv1.10.0-12-g4dcfddc5d1 1.10.1\n\n\nPython version:\n2.7 & 3.7\n\n\nBazel version:\nN/A\n\n\nCUDA/cuDNN version:\nN/A\n\n\nGPU model and memory:\nN/A\n\n\nExact command to reproduce:\nSee below\n\n\nMobile device:\nN/A\n\n\nDescribe the problem\nI ran the very simple code below and I've got random meaningless results. The first element of the result is always correct. So it seems that the broadcasting is not working, i.e. only the first element has been correctly processed. But I think people would assume assign_add works in simple case like assign_add(_, 0.0) (or it should complain rather than silently give wrong results).\nSource code / logs\nimport tensorflow as tf\nimport tensorflow.contrib.eager as tfe\ntf.enable_eager_execution()\n\nZ = tfe.Variable([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]])\nprint(Z.numpy())\ntf.assign_add(Z, 0.0)\nprint(Z.numpy())\n\nOne sample result:\n[[1. 2. 3.]\n [4. 5. 6.]]\n[[1.00000000e+00 6.55319777e+13 2.69145827e+20]\n [3.84908544e+09 1.23657954e+33 6.00000000e+00]]", "body": "------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes\r\n\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nDarwin localhost 17.5.0 Darwin Kernel Version 17.5.0: Fri Apr 13 19:32:32 PDT 2018; root:xnu-4570.51.2~1/RELEASE_X86_64 x86_64\r\nMac OS X 10.13.4\r\n- **TensorFlow installed from (source or binary)**:\r\nbinary\r\n\r\n- **TensorFlow version (use command below)**:\r\nv1.10.0-12-g4dcfddc5d1 1.10.1\r\n\r\n- **Python version**:\r\n2.7 & 3.7\r\n\r\n- **Bazel version**:\r\nN/A\r\n- **CUDA/cuDNN version**:\r\nN/A\r\n- **GPU model and memory**:\r\nN/A\r\n- **Exact command to reproduce**:\r\nSee below\r\n- **Mobile device**:\r\nN/A\r\n\r\n\r\n### Describe the problem\r\n\r\nI ran the very simple code below and I've got random meaningless results. The first element of the result is always correct. So it seems that the broadcasting is not working, i.e. only the first element has been correctly processed. But I think people would assume `assign_add` works in simple case like `assign_add(_, 0.0)` (or it should complain rather than silently give wrong results). \r\n\r\n### Source code / logs\r\n\r\n```\r\nimport tensorflow as tf\r\nimport tensorflow.contrib.eager as tfe\r\ntf.enable_eager_execution()\r\n\r\nZ = tfe.Variable([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]])\r\nprint(Z.numpy())\r\ntf.assign_add(Z, 0.0)\r\nprint(Z.numpy())\r\n```\r\n\r\nOne sample result:\r\n\r\n```\r\n[[1. 2. 3.]\r\n [4. 5. 6.]]\r\n[[1.00000000e+00 6.55319777e+13 2.69145827e+20]\r\n [3.84908544e+09 1.23657954e+33 6.00000000e+00]]\r\n```\r\n\r\n"}