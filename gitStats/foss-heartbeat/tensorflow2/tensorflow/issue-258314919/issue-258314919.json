{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13100", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13100/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13100/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13100/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/13100", "id": 258314919, "node_id": "MDU6SXNzdWUyNTgzMTQ5MTk=", "number": 13100, "title": "- NEON XLA CPU runtime is not compiling because of missing plog function in Eigen", "user": {"login": "guillaume-michel", "id": 935309, "node_id": "MDQ6VXNlcjkzNTMwOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/935309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guillaume-michel", "html_url": "https://github.com/guillaume-michel", "followers_url": "https://api.github.com/users/guillaume-michel/followers", "following_url": "https://api.github.com/users/guillaume-michel/following{/other_user}", "gists_url": "https://api.github.com/users/guillaume-michel/gists{/gist_id}", "starred_url": "https://api.github.com/users/guillaume-michel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guillaume-michel/subscriptions", "organizations_url": "https://api.github.com/users/guillaume-michel/orgs", "repos_url": "https://api.github.com/users/guillaume-michel/repos", "events_url": "https://api.github.com/users/guillaume-michel/events{/privacy}", "received_events_url": "https://api.github.com/users/guillaume-michel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "benoitsteiner", "id": 6969686, "node_id": "MDQ6VXNlcjY5Njk2ODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6969686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benoitsteiner", "html_url": "https://github.com/benoitsteiner", "followers_url": "https://api.github.com/users/benoitsteiner/followers", "following_url": "https://api.github.com/users/benoitsteiner/following{/other_user}", "gists_url": "https://api.github.com/users/benoitsteiner/gists{/gist_id}", "starred_url": "https://api.github.com/users/benoitsteiner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benoitsteiner/subscriptions", "organizations_url": "https://api.github.com/users/benoitsteiner/orgs", "repos_url": "https://api.github.com/users/benoitsteiner/repos", "events_url": "https://api.github.com/users/benoitsteiner/events{/privacy}", "received_events_url": "https://api.github.com/users/benoitsteiner/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "benoitsteiner", "id": 6969686, "node_id": "MDQ6VXNlcjY5Njk2ODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6969686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benoitsteiner", "html_url": "https://github.com/benoitsteiner", "followers_url": "https://api.github.com/users/benoitsteiner/followers", "following_url": "https://api.github.com/users/benoitsteiner/following{/other_user}", "gists_url": "https://api.github.com/users/benoitsteiner/gists{/gist_id}", "starred_url": "https://api.github.com/users/benoitsteiner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benoitsteiner/subscriptions", "organizations_url": "https://api.github.com/users/benoitsteiner/orgs", "repos_url": "https://api.github.com/users/benoitsteiner/repos", "events_url": "https://api.github.com/users/benoitsteiner/events{/privacy}", "received_events_url": "https://api.github.com/users/benoitsteiner/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2017-09-17T16:25:35Z", "updated_at": "2018-01-09T07:52:46Z", "closed_at": "2018-01-09T07:52:45Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 14.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: ('v1.3.0-0-g9e76bf324', '1.3.0')</li>\n<li><strong>Python version</strong>: 3.4.3</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.5.4</li>\n<li><strong>CUDA/cuDNN version</strong>: no</li>\n<li><strong>GPU model and memory</strong>: no</li>\n<li><strong>Exact command to reproduce</strong>:<br>\nWORKSPACE correctly configure for Android NDK (r12b) and SDK(latest).<br>\nbazel build -c opt --cxxopt='-std=c++11' --crosstool_top=//external:android/crosstool --host_crosstool_top=@bazel_tools//tools/cpp:toolchain --cpu=armeabi-v7a //tensorflow/compiler/xla/service/cpu:cpu_runtime_neon</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I use Tensorflow compiled from source to use XLA aot binaries for Arm. For XLA to work, it needs to have runtime support for that architecture but with the above command it fails complaining for a missing function in Eigen.<br>\nI fixed the bug in Eigen and submitted a pull request for integration:<br>\n<a href=\"https://bitbucket.org/eigen/eigen/pull-requests/334/add-support-for-neon-plog-packetmath/diff\" rel=\"nofollow\">https://bitbucket.org/eigen/eigen/pull-requests/334/add-support-for-neon-plog-packetmath/diff</a></p>\n<p>with the following patch, the compilation completes successfully. Once the pull request is accepted I will submit a pull request here to use the new Eigen version with the fix.</p>\n<h3>Source code / logs</h3>\n<p>For the record, this is the error i get:</p>\n<p>bazel build -c opt --cxxopt='-std=c++11' --crosstool_top=//external:android/crosstool --host_crosstool_top=@bazel_tools//tools/cpp:toolchain --cpu=armeabi-v7a //tensorflow/compiler/xla/service/cpu:cpu_runtime_neon<br>\nExtracting Bazel installation...<br>\n...........<br>\nINFO: Analysed target //tensorflow/compiler/xla/service/cpu:cpu_runtime_neon (17 packages loaded).<br>\nINFO: Found 1 target...<br>\nERROR: /home/gmichel/work/tensorflow/tensorflow/compiler/xla/service/cpu/BUILD:333:1: C++ compilation of rule '//tensorflow/compiler/xla/service/cpu:cpu_runtime_neon' failed (Exit 1)<br>\nIn file included from external/eigen_archive/Eigen/Core:372:0,<br>\nfrom ./third_party/eigen3/Eigen/Core:1,<br>\nfrom tensorflow/compiler/xla/service/cpu/cpu_runtime_neon.cc:20:<br>\nexternal/eigen_archive/Eigen/src/Core/GenericPacketMath.h: In instantiation of 'Packet Eigen::internal::plog(const Packet&amp;) [with Packet = __vector(4) __builtin_neon_sf]':<br>\ntensorflow/compiler/xla/service/cpu/cpu_runtime_neon.cc:32:33:   required from here<br>\nexternal/eigen_archive/Eigen/src/Core/GenericPacketMath.h:411:60: error: no matching function for call to 'log(const __vector(4) __builtin_neon_sf&amp;)'<br>\nPacket plog(const Packet&amp; a) { using std::log; return log(a); }<br>\n^<br>\nexternal/eigen_archive/Eigen/src/Core/GenericPacketMath.h:411:60: note: candidates are:<br>\nIn file included from external/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/cmath:44:0,<br>\nfrom external/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/complex:44,<br>\nfrom external/eigen_archive/Eigen/Core:78,<br>\nfrom ./third_party/eigen3/Eigen/Core:1,<br>\nfrom tensorflow/compiler/xla/service/cpu/cpu_runtime_neon.cc:20:<br>\nexternal/androidndk/ndk/platforms/android-14/arch-arm/usr/include/math.h:218:8: note: double log(double)<br>\ndouble log(double) <strong>NDK_FPABI_MATH</strong>;<br>\n^<br>\nexternal/androidndk/ndk/platforms/android-14/arch-arm/usr/include/math.h:218:8: note:   no known conversion for argument 1 from 'const __vector(4) __builtin_neon_sf' to 'double'<br>\nIn file included from external/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/complex:44:0,<br>\nfrom external/eigen_archive/Eigen/Core:78,<br>\nfrom ./third_party/eigen3/Eigen/Core:1,<br>\nfrom tensorflow/compiler/xla/service/cpu/cpu_runtime_neon.cc:20:<br>\nexternal/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/cmath:357:3: note: constexpr float std::log(float)<br>\nlog(float __x)<br>\n^<br>\nexternal/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/cmath:357:3: note:   no known conversion for argument 1 from 'const __vector(4) __builtin_neon_sf' to 'float'<br>\nexternal/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/cmath:361:3: note: constexpr long double std::log(long double)<br>\nlog(long double __x)<br>\n^<br>\nexternal/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/cmath:361:3: note:   no known conversion for argument 1 from 'const __vector(4) __builtin_neon_sf' to 'long double'<br>\nexternal/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/cmath:369:5: note: template constexpr typename __gnu_cxx::__enable_if&lt;std::__is_integer&lt;_Tp&gt;::__value, double&gt;::__type std::log(_Tp)<br>\nlog(_Tp __x)<br>\n^<br>\nexternal/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/cmath:369:5: note:   template argument deduction/substitution failed:<br>\nexternal/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/cmath: In substitution of 'template constexpr typename __gnu_cxx::__enable_if&lt;std::__is_integer&lt;_Tp&gt;::__value, double&gt;::__type std::log(_Tp) [with _Tp = __vector(4) __builtin_neon_sf]':<br>\nexternal/eigen_archive/Eigen/src/Core/GenericPacketMath.h:411:60:   required from 'Packet Eigen::internal::plog(const Packet&amp;) [with Packet = __vector(4) __builtin_neon_sf]'<br>\ntensorflow/compiler/xla/service/cpu/cpu_runtime_neon.cc:32:33:   required from here<br>\nexternal/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/cmath:369:5: error: no type named '__type' in 'struct __gnu_cxx::__enable_if&lt;false, double&gt;'<br>\nIn file included from external/eigen_archive/Eigen/Core:78:0,<br>\nfrom ./third_party/eigen3/Eigen/Core:1,<br>\nfrom tensorflow/compiler/xla/service/cpu/cpu_runtime_neon.cc:20:<br>\nexternal/eigen_archive/Eigen/src/Core/GenericPacketMath.h: In instantiation of 'Packet Eigen::internal::plog(const Packet&amp;) [with Packet = __vector(4) __builtin_neon_sf]':<br>\ntensorflow/compiler/xla/service/cpu/cpu_runtime_neon.cc:32:33:   required from here<br>\nexternal/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/complex:790:5: note: template std::complex&lt;_Tp&gt; std::log(const std::complex&lt;_Tp&gt;&amp;)<br>\nlog(const complex&lt;_Tp&gt;&amp; __z) { return __complex_log(__z); }<br>\n^<br>\nexternal/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/complex:790:5: note:   template argument deduction/substitution failed:<br>\nIn file included from external/eigen_archive/Eigen/Core:372:0,<br>\nfrom ./third_party/eigen3/Eigen/Core:1,<br>\nfrom tensorflow/compiler/xla/service/cpu/cpu_runtime_neon.cc:20:<br>\nexternal/eigen_archive/Eigen/src/Core/GenericPacketMath.h:411:60: note:   mismatched types 'const std::complex&lt;_Tp&gt;' and 'const __vector(4) __builtin_neon_sf'<br>\nPacket plog(const Packet&amp; a) { using std::log; return log(a); }<br>\n^<br>\nTarget //tensorflow/compiler/xla/service/cpu:cpu_runtime_neon failed to build<br>\nUse --verbose_failures to see the command lines of failed build steps.<br>\nINFO: Elapsed time: 15.227s, Critical Path: 0.76s<br>\nFAILED: Build did NOT complete successfully</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 14.04\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): ('v1.3.0-0-g9e76bf324', '1.3.0')\nPython version: 3.4.3\nBazel version (if compiling from source): 0.5.4\nCUDA/cuDNN version: no\nGPU model and memory: no\nExact command to reproduce:\nWORKSPACE correctly configure for Android NDK (r12b) and SDK(latest).\nbazel build -c opt --cxxopt='-std=c++11' --crosstool_top=//external:android/crosstool --host_crosstool_top=@bazel_tools//tools/cpp:toolchain --cpu=armeabi-v7a //tensorflow/compiler/xla/service/cpu:cpu_runtime_neon\n\nDescribe the problem\nI use Tensorflow compiled from source to use XLA aot binaries for Arm. For XLA to work, it needs to have runtime support for that architecture but with the above command it fails complaining for a missing function in Eigen.\nI fixed the bug in Eigen and submitted a pull request for integration:\nhttps://bitbucket.org/eigen/eigen/pull-requests/334/add-support-for-neon-plog-packetmath/diff\nwith the following patch, the compilation completes successfully. Once the pull request is accepted I will submit a pull request here to use the new Eigen version with the fix.\nSource code / logs\nFor the record, this is the error i get:\nbazel build -c opt --cxxopt='-std=c++11' --crosstool_top=//external:android/crosstool --host_crosstool_top=@bazel_tools//tools/cpp:toolchain --cpu=armeabi-v7a //tensorflow/compiler/xla/service/cpu:cpu_runtime_neon\nExtracting Bazel installation...\n...........\nINFO: Analysed target //tensorflow/compiler/xla/service/cpu:cpu_runtime_neon (17 packages loaded).\nINFO: Found 1 target...\nERROR: /home/gmichel/work/tensorflow/tensorflow/compiler/xla/service/cpu/BUILD:333:1: C++ compilation of rule '//tensorflow/compiler/xla/service/cpu:cpu_runtime_neon' failed (Exit 1)\nIn file included from external/eigen_archive/Eigen/Core:372:0,\nfrom ./third_party/eigen3/Eigen/Core:1,\nfrom tensorflow/compiler/xla/service/cpu/cpu_runtime_neon.cc:20:\nexternal/eigen_archive/Eigen/src/Core/GenericPacketMath.h: In instantiation of 'Packet Eigen::internal::plog(const Packet&) [with Packet = __vector(4) __builtin_neon_sf]':\ntensorflow/compiler/xla/service/cpu/cpu_runtime_neon.cc:32:33:   required from here\nexternal/eigen_archive/Eigen/src/Core/GenericPacketMath.h:411:60: error: no matching function for call to 'log(const __vector(4) __builtin_neon_sf&)'\nPacket plog(const Packet& a) { using std::log; return log(a); }\n^\nexternal/eigen_archive/Eigen/src/Core/GenericPacketMath.h:411:60: note: candidates are:\nIn file included from external/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/cmath:44:0,\nfrom external/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/complex:44,\nfrom external/eigen_archive/Eigen/Core:78,\nfrom ./third_party/eigen3/Eigen/Core:1,\nfrom tensorflow/compiler/xla/service/cpu/cpu_runtime_neon.cc:20:\nexternal/androidndk/ndk/platforms/android-14/arch-arm/usr/include/math.h:218:8: note: double log(double)\ndouble log(double) NDK_FPABI_MATH;\n^\nexternal/androidndk/ndk/platforms/android-14/arch-arm/usr/include/math.h:218:8: note:   no known conversion for argument 1 from 'const __vector(4) __builtin_neon_sf' to 'double'\nIn file included from external/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/complex:44:0,\nfrom external/eigen_archive/Eigen/Core:78,\nfrom ./third_party/eigen3/Eigen/Core:1,\nfrom tensorflow/compiler/xla/service/cpu/cpu_runtime_neon.cc:20:\nexternal/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/cmath:357:3: note: constexpr float std::log(float)\nlog(float __x)\n^\nexternal/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/cmath:357:3: note:   no known conversion for argument 1 from 'const __vector(4) __builtin_neon_sf' to 'float'\nexternal/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/cmath:361:3: note: constexpr long double std::log(long double)\nlog(long double __x)\n^\nexternal/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/cmath:361:3: note:   no known conversion for argument 1 from 'const __vector(4) __builtin_neon_sf' to 'long double'\nexternal/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/cmath:369:5: note: template constexpr typename __gnu_cxx::__enable_if<std::__is_integer<_Tp>::__value, double>::__type std::log(_Tp)\nlog(_Tp __x)\n^\nexternal/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/cmath:369:5: note:   template argument deduction/substitution failed:\nexternal/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/cmath: In substitution of 'template constexpr typename __gnu_cxx::__enable_if<std::__is_integer<_Tp>::__value, double>::__type std::log(_Tp) [with _Tp = __vector(4) __builtin_neon_sf]':\nexternal/eigen_archive/Eigen/src/Core/GenericPacketMath.h:411:60:   required from 'Packet Eigen::internal::plog(const Packet&) [with Packet = __vector(4) __builtin_neon_sf]'\ntensorflow/compiler/xla/service/cpu/cpu_runtime_neon.cc:32:33:   required from here\nexternal/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/cmath:369:5: error: no type named '__type' in 'struct __gnu_cxx::__enable_if<false, double>'\nIn file included from external/eigen_archive/Eigen/Core:78:0,\nfrom ./third_party/eigen3/Eigen/Core:1,\nfrom tensorflow/compiler/xla/service/cpu/cpu_runtime_neon.cc:20:\nexternal/eigen_archive/Eigen/src/Core/GenericPacketMath.h: In instantiation of 'Packet Eigen::internal::plog(const Packet&) [with Packet = __vector(4) __builtin_neon_sf]':\ntensorflow/compiler/xla/service/cpu/cpu_runtime_neon.cc:32:33:   required from here\nexternal/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/complex:790:5: note: template std::complex<_Tp> std::log(const std::complex<_Tp>&)\nlog(const complex<_Tp>& __z) { return __complex_log(__z); }\n^\nexternal/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/complex:790:5: note:   template argument deduction/substitution failed:\nIn file included from external/eigen_archive/Eigen/Core:372:0,\nfrom ./third_party/eigen3/Eigen/Core:1,\nfrom tensorflow/compiler/xla/service/cpu/cpu_runtime_neon.cc:20:\nexternal/eigen_archive/Eigen/src/Core/GenericPacketMath.h:411:60: note:   mismatched types 'const std::complex<_Tp>' and 'const __vector(4) __builtin_neon_sf'\nPacket plog(const Packet& a) { using std::log; return log(a); }\n^\nTarget //tensorflow/compiler/xla/service/cpu:cpu_runtime_neon failed to build\nUse --verbose_failures to see the command lines of failed build steps.\nINFO: Elapsed time: 15.227s, Critical Path: 0.76s\nFAILED: Build did NOT complete successfully", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 14.04\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: ('v1.3.0-0-g9e76bf324', '1.3.0')\r\n- **Python version**: 3.4.3\r\n- **Bazel version (if compiling from source)**: 0.5.4\r\n- **CUDA/cuDNN version**: no\r\n- **GPU model and memory**: no\r\n- **Exact command to reproduce**:\r\nWORKSPACE correctly configure for Android NDK (r12b) and SDK(latest).\r\nbazel build -c opt --cxxopt='-std=c++11' --crosstool_top=//external:android/crosstool --host_crosstool_top=@bazel_tools//tools/cpp:toolchain --cpu=armeabi-v7a //tensorflow/compiler/xla/service/cpu:cpu_runtime_neon\r\n\r\n### Describe the problem\r\nI use Tensorflow compiled from source to use XLA aot binaries for Arm. For XLA to work, it needs to have runtime support for that architecture but with the above command it fails complaining for a missing function in Eigen.\r\nI fixed the bug in Eigen and submitted a pull request for integration:\r\nhttps://bitbucket.org/eigen/eigen/pull-requests/334/add-support-for-neon-plog-packetmath/diff\r\n\r\nwith the following patch, the compilation completes successfully. Once the pull request is accepted I will submit a pull request here to use the new Eigen version with the fix.\r\n\r\n### Source code / logs\r\nFor the record, this is the error i get:\r\n\r\nbazel build -c opt --cxxopt='-std=c++11' --crosstool_top=//external:android/crosstool --host_crosstool_top=@bazel_tools//tools/cpp:toolchain --cpu=armeabi-v7a //tensorflow/compiler/xla/service/cpu:cpu_runtime_neon\r\nExtracting Bazel installation...\r\n...........\r\nINFO: Analysed target //tensorflow/compiler/xla/service/cpu:cpu_runtime_neon (17 packages loaded).\r\nINFO: Found 1 target...\r\nERROR: /home/gmichel/work/tensorflow/tensorflow/compiler/xla/service/cpu/BUILD:333:1: C++ compilation of rule '//tensorflow/compiler/xla/service/cpu:cpu_runtime_neon' failed (Exit 1)\r\nIn file included from external/eigen_archive/Eigen/Core:372:0,\r\n                 from ./third_party/eigen3/Eigen/Core:1,\r\n                 from tensorflow/compiler/xla/service/cpu/cpu_runtime_neon.cc:20:\r\nexternal/eigen_archive/Eigen/src/Core/GenericPacketMath.h: In instantiation of 'Packet Eigen::internal::plog(const Packet&) [with Packet = __vector(4) __builtin_neon_sf]':\r\ntensorflow/compiler/xla/service/cpu/cpu_runtime_neon.cc:32:33:   required from here\r\nexternal/eigen_archive/Eigen/src/Core/GenericPacketMath.h:411:60: error: no matching function for call to 'log(const __vector(4) __builtin_neon_sf&)'\r\n Packet plog(const Packet& a) { using std::log; return log(a); }\r\n                                                            ^\r\nexternal/eigen_archive/Eigen/src/Core/GenericPacketMath.h:411:60: note: candidates are:\r\nIn file included from external/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/cmath:44:0,\r\n                 from external/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/complex:44,\r\n                 from external/eigen_archive/Eigen/Core:78,\r\n                 from ./third_party/eigen3/Eigen/Core:1,\r\n                 from tensorflow/compiler/xla/service/cpu/cpu_runtime_neon.cc:20:\r\nexternal/androidndk/ndk/platforms/android-14/arch-arm/usr/include/math.h:218:8: note: double log(double)\r\n double log(double) __NDK_FPABI_MATH__;\r\n        ^\r\nexternal/androidndk/ndk/platforms/android-14/arch-arm/usr/include/math.h:218:8: note:   no known conversion for argument 1 from 'const __vector(4) __builtin_neon_sf' to 'double'\r\nIn file included from external/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/complex:44:0,\r\n                 from external/eigen_archive/Eigen/Core:78,\r\n                 from ./third_party/eigen3/Eigen/Core:1,\r\n                 from tensorflow/compiler/xla/service/cpu/cpu_runtime_neon.cc:20:\r\nexternal/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/cmath:357:3: note: constexpr float std::log(float)\r\n   log(float __x)\r\n   ^\r\nexternal/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/cmath:357:3: note:   no known conversion for argument 1 from 'const __vector(4) __builtin_neon_sf' to 'float'\r\nexternal/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/cmath:361:3: note: constexpr long double std::log(long double)\r\n   log(long double __x)\r\n   ^\r\nexternal/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/cmath:361:3: note:   no known conversion for argument 1 from 'const __vector(4) __builtin_neon_sf' to 'long double'\r\nexternal/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/cmath:369:5: note: template<class _Tp> constexpr typename __gnu_cxx::__enable_if<std::__is_integer<_Tp>::__value, double>::__type std::log(_Tp)\r\n     log(_Tp __x)\r\n     ^\r\nexternal/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/cmath:369:5: note:   template argument deduction/substitution failed:\r\nexternal/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/cmath: In substitution of 'template<class _Tp> constexpr typename __gnu_cxx::__enable_if<std::__is_integer<_Tp>::__value, double>::__type std::log(_Tp) [with _Tp = __vector(4) __builtin_neon_sf]':\r\nexternal/eigen_archive/Eigen/src/Core/GenericPacketMath.h:411:60:   required from 'Packet Eigen::internal::plog(const Packet&) [with Packet = __vector(4) __builtin_neon_sf]'\r\ntensorflow/compiler/xla/service/cpu/cpu_runtime_neon.cc:32:33:   required from here\r\nexternal/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/cmath:369:5: error: no type named '__type' in 'struct __gnu_cxx::__enable_if<false, double>'\r\nIn file included from external/eigen_archive/Eigen/Core:78:0,\r\n                 from ./third_party/eigen3/Eigen/Core:1,\r\n                 from tensorflow/compiler/xla/service/cpu/cpu_runtime_neon.cc:20:\r\nexternal/eigen_archive/Eigen/src/Core/GenericPacketMath.h: In instantiation of 'Packet Eigen::internal::plog(const Packet&) [with Packet = __vector(4) __builtin_neon_sf]':\r\ntensorflow/compiler/xla/service/cpu/cpu_runtime_neon.cc:32:33:   required from here\r\nexternal/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/complex:790:5: note: template<class _Tp> std::complex<_Tp> std::log(const std::complex<_Tp>&)\r\n     log(const complex<_Tp>& __z) { return __complex_log(__z); }\r\n     ^\r\nexternal/androidndk/ndk/sources/cxx-stl/gnu-libstdc++/4.9/include/complex:790:5: note:   template argument deduction/substitution failed:\r\nIn file included from external/eigen_archive/Eigen/Core:372:0,\r\n                 from ./third_party/eigen3/Eigen/Core:1,\r\n                 from tensorflow/compiler/xla/service/cpu/cpu_runtime_neon.cc:20:\r\nexternal/eigen_archive/Eigen/src/Core/GenericPacketMath.h:411:60: note:   mismatched types 'const std::complex<_Tp>' and 'const __vector(4) __builtin_neon_sf'\r\n Packet plog(const Packet& a) { using std::log; return log(a); }\r\n                                                            ^\r\nTarget //tensorflow/compiler/xla/service/cpu:cpu_runtime_neon failed to build\r\nUse --verbose_failures to see the command lines of failed build steps.\r\nINFO: Elapsed time: 15.227s, Critical Path: 0.76s\r\nFAILED: Build did NOT complete successfully\r\n"}