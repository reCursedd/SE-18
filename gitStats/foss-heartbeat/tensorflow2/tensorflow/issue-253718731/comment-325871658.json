{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/325871658", "html_url": "https://github.com/tensorflow/tensorflow/issues/12686#issuecomment-325871658", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12686", "id": 325871658, "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTg3MTY1OA==", "user": {"login": "facaiy", "id": 1112263, "node_id": "MDQ6VXNlcjExMTIyNjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1112263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facaiy", "html_url": "https://github.com/facaiy", "followers_url": "https://api.github.com/users/facaiy/followers", "following_url": "https://api.github.com/users/facaiy/following{/other_user}", "gists_url": "https://api.github.com/users/facaiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/facaiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facaiy/subscriptions", "organizations_url": "https://api.github.com/users/facaiy/orgs", "repos_url": "https://api.github.com/users/facaiy/repos", "events_url": "https://api.github.com/users/facaiy/events{/privacy}", "received_events_url": "https://api.github.com/users/facaiy/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-30T03:46:05Z", "updated_at": "2017-08-30T03:47:05Z", "author_association": "MEMBER", "body_html": "<p>Thanks, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1450614\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/suharshs\">@suharshs</a> .</p>\n<p>I have read the code in python side,</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-en\">@ops.RegisterGradient</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>SoftmaxCrossEntropyWithLogits<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">_SoftmaxCrossEntropyWithLogitsGrad</span>(<span class=\"pl-smi\">op</span>, <span class=\"pl-smi\">grad_loss</span>, <span class=\"pl-smi\">grad_grad</span>):</pre></div>\n<p>If I understand correctly, the arguments <code>grad_loss</code> and <code>grad_grad</code> in python side will be packed in <code>grad_inputs</code> in C++ side, right?</p>\n<p>Namely, the outline of code in C++ should like:</p>\n<div class=\"highlight highlight-source-c++\"><pre>Status <span class=\"pl-en\">SoftmaxCrossEntropyWithLogitsGrad</span>(<span class=\"pl-k\">const</span> Scope&amp; scope, <span class=\"pl-k\">const</span> Operation&amp; op,\n                                         <span class=\"pl-k\">const</span> std::vector&lt;Output&gt;&amp; grad_inputs,\n                                         std::vector&lt;Output&gt;* grad_outputs) {\n  <span class=\"pl-k\">auto</span> grad_loss = grad_inputs[<span class=\"pl-c1\">0</span>];\n  <span class=\"pl-k\">auto</span> grad_grad = grad_inputs[<span class=\"pl-c1\">1</span>];\n\n  <span class=\"pl-c\"><span class=\"pl-c\">//</span> migrate the implementation in python here.</span>\n  <span class=\"pl-c\"><span class=\"pl-c\">//</span> code...........</span>\n  <span class=\"pl-c\"><span class=\"pl-c\">//</span> auto grad = .....</span>\n\n  grad_outputs-&gt;<span class=\"pl-c1\">push_back</span>(grad);\n  grad_outputs-&gt;<span class=\"pl-c1\">push_back</span>(null);\n  <span class=\"pl-k\">return</span> scope.<span class=\"pl-c1\">status</span>();\n}\n<span class=\"pl-en\">REGISTER_GRADIENT_OP</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>SoftmaxCrossEntropyWithLogitsGrad<span class=\"pl-pds\">\"</span></span>, SoftmaxCrossEntropyWithLogitsGrad);</pre></div>\n<p>Please correct me if I'm wrong.</p>", "body_text": "Thanks, @suharshs .\nI have read the code in python side,\n@ops.RegisterGradient(\"SoftmaxCrossEntropyWithLogits\")\ndef _SoftmaxCrossEntropyWithLogitsGrad(op, grad_loss, grad_grad):\nIf I understand correctly, the arguments grad_loss and grad_grad in python side will be packed in grad_inputs in C++ side, right?\nNamely, the outline of code in C++ should like:\nStatus SoftmaxCrossEntropyWithLogitsGrad(const Scope& scope, const Operation& op,\n                                         const std::vector<Output>& grad_inputs,\n                                         std::vector<Output>* grad_outputs) {\n  auto grad_loss = grad_inputs[0];\n  auto grad_grad = grad_inputs[1];\n\n  // migrate the implementation in python here.\n  // code...........\n  // auto grad = .....\n\n  grad_outputs->push_back(grad);\n  grad_outputs->push_back(null);\n  return scope.status();\n}\nREGISTER_GRADIENT_OP(\"SoftmaxCrossEntropyWithLogitsGrad\", SoftmaxCrossEntropyWithLogitsGrad);\nPlease correct me if I'm wrong.", "body": "Thanks, @suharshs .\r\n\r\nI have read the code in python side,\r\n```python\r\n@ops.RegisterGradient(\"SoftmaxCrossEntropyWithLogits\")\r\ndef _SoftmaxCrossEntropyWithLogitsGrad(op, grad_loss, grad_grad):\r\n```\r\n\r\nIf I understand correctly, the arguments `grad_loss` and `grad_grad` in python side will be packed in `grad_inputs` in C++ side, right?\r\n\r\nNamely, the outline of code in C++ should like:\r\n```c++\r\nStatus SoftmaxCrossEntropyWithLogitsGrad(const Scope& scope, const Operation& op,\r\n                                         const std::vector<Output>& grad_inputs,\r\n                                         std::vector<Output>* grad_outputs) {\r\n  auto grad_loss = grad_inputs[0];\r\n  auto grad_grad = grad_inputs[1];\r\n\r\n  // migrate the implementation in python here.\r\n  // code...........\r\n  // auto grad = .....\r\n\r\n  grad_outputs->push_back(grad);\r\n  grad_outputs->push_back(null);\r\n  return scope.status();\r\n}\r\nREGISTER_GRADIENT_OP(\"SoftmaxCrossEntropyWithLogitsGrad\", SoftmaxCrossEntropyWithLogitsGrad);\r\n```\r\n\r\nPlease correct me if I'm wrong.\r\n"}