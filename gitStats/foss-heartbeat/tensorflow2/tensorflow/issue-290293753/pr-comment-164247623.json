{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/164247623", "pull_request_review_id": 91999690, "id": 164247623, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NDI0NzYyMw==", "diff_hunk": "@@ -0,0 +1,142 @@\n+# Copyright 2015 The TensorFlow Authors. All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ==============================================================================\n+\n+\"\"\" Recurrent Neural Network.\n+A Recurrent Neural Network (LSTM) implementation example using TensorFlow library.\n+This example is using the MNIST database of handwritten digits (http://yann.lecun.com/exdb/mnist/).\n+Links:\n+    [Long Short Term Memory](http://deeplearning.cs.cmu.edu/pdfs/Hochreiter97_lstm.pdf).\n+    [MNIST Dataset](http://yann.lecun.com/exdb/mnist/).\n+\"\"\"\n+\n+from __future__ import absolute_import\n+from __future__ import division\n+from __future__ import print_function\n+\n+import tensorflow as tf\n+from tensorflow.contrib import rnn\n+from tensorflow.examples.tutorials.mnist import input_data\n+\n+def rnn_network(x_in, weight_set, bias_set):\n+    \"\"\"To classify images using a recurrent neural network, we consider every image\n+    row as a sequence of pixels. Because MNIST image shape is 28*28px, we will then\n+    handle 28 sequences of 28 steps for every sample.\n+    Args:\n+        x_in: input images.\n+        weight_set: collection of input/ output weight.\n+        bias_set: collection input/ output bias.\n+    Returns:\n+        Output tensor with the computed logits.\n+    \"\"\"\n+\n+    # Prepare data shape to match `rnn` function requirements.\n+    # Current data input shape: (BATCH_SIZE, num_step, n_input).\n+    # Required shape: 'num_step' tensors list of shape (BATCH_SIZE, n_input).\n+    x_in = tf.reshape(x_in, [-1, NUM_INPUT])\n+\n+    # Hidden layer ==> (128 batch, 28 steps, 128 hidden).\n+    x_hidden = tf.matmul(x_in, weight_set['in']) + bias_set['in']\n+    x_hidden = tf.reshape(x_hidden, [-1, NUM_STEP, NUM_HIDDEN_UNITS])\n+\n+    # Define a lstm cell with tensorflow.\n+    lstm_cell = rnn.BasicLSTMCell(NUM_HIDDEN_UNITS, forget_bias=1.0, state_is_tuple=True)\n+\n+    # init zero state, lstm cell is consist of twp parts: (c_state, h_state).\n+    init_state = lstm_cell.zero_state(BATCH_SIZE, dtype=tf.float32)\n+\n+    # Get lstm cell output.\n+    outputs, states = tf.nn.dynamic_rnn(lstm_cell, x_hidden, \\", "path": "tensorflow/examples/tutorials/mnist/mnist_rnn.py", "position": 60, "original_position": 60, "commit_id": "7481d5f73a8275d24dfe672e39b4daecc2b7d0cd", "original_commit_id": "bdc04225120df9c79d1b0ef9670d9cfb2b19d40b", "user": {"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}, "body": "Sorry it didn't print correctly. I meant the backslash `\\`.", "created_at": "2018-01-26T23:38:34Z", "updated_at": "2018-01-26T23:38:34Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/16272#discussion_r164247623", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/16272", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/164247623"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/16272#discussion_r164247623"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/16272"}}, "body_html": "<p>Sorry it didn't print correctly. I meant the backslash <code>\\</code>.</p>", "body_text": "Sorry it didn't print correctly. I meant the backslash \\.", "in_reply_to_id": 163942637}