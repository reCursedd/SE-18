{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/219856206", "pull_request_review_id": 158129572, "id": 219856206, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTg1NjIwNg==", "diff_hunk": "@@ -91,8 +91,11 @@ def reduce_dataset(dataset, reducer):\n     raise TypeError(\"`dataset` must be a `tf.data.Dataset` object.\")\n \n   # The sentinel dataset is used in case the reduced dataset is empty.\n+  initial_state = reducer.init_func(np.int64(0))\n+  if not isinstance(initial_state, tuple):\n+      initial_state = (initial_state,)\n   sentinel_dataset = dataset_ops.Dataset.from_tensors(\n-      reducer.finalize_func(reducer.init_func(np.int64(0))))\n+      reducer.finalize_func(*initial_state))", "path": "tensorflow/contrib/data/python/ops/get_single_element.py", "position": null, "original_position": 9, "commit_id": "c9564fda904fb82be64d7cc70f662d02d6f9574b", "original_commit_id": "1ab81d98b51ba6aaf71a6adde18995965ceb950d", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "body": "Hmm, I've thought about this some more, and I don't think it's quite right. What would happen if `reducer.init_func()` returned a dictionary?\r\n\r\nI think we need some version of the logic here, which deals with `Dataset.map()`, `Dataset.filter()`, etc.:\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/7cf39dde90f83e584d14ce1c371ff17477a1e57e/tensorflow/python/data/ops/dataset_ops.py#L1476-L1479", "created_at": "2018-09-24T14:26:35Z", "updated_at": "2018-09-24T14:26:39Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/22405#discussion_r219856206", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/22405", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/219856206"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/22405#discussion_r219856206"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/22405"}}, "body_html": "<p>Hmm, I've thought about this some more, and I don't think it's quite right. What would happen if <code>reducer.init_func()</code> returned a dictionary?</p>\n<p>I think we need some version of the logic here, which deals with <code>Dataset.map()</code>, <code>Dataset.filter()</code>, etc.:</p>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/7cf39dde90f83e584d14ce1c371ff17477a1e57e/tensorflow/python/data/ops/dataset_ops.py#L1476-L1479\">tensorflow/tensorflow/python/data/ops/dataset_ops.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 1476 to 1479\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/7cf39dde90f83e584d14ce1c371ff17477a1e57e\">7cf39dd</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L1476\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1476\"></td>\n          <td id=\"LC1476\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">if</span> <span class=\"pl-k\">not</span> _should_unpack_args(nested_args): </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1477\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1477\"></td>\n          <td id=\"LC1477\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   nested_args <span class=\"pl-k\">=</span> (nested_args,) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1478\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1478\"></td>\n          <td id=\"LC1478\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1479\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1479\"></td>\n          <td id=\"LC1479\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> ret <span class=\"pl-k\">=</span> func(<span class=\"pl-k\">*</span>nested_args) </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "body_text": "Hmm, I've thought about this some more, and I don't think it's quite right. What would happen if reducer.init_func() returned a dictionary?\nI think we need some version of the logic here, which deals with Dataset.map(), Dataset.filter(), etc.:\n\n  \n    \n      tensorflow/tensorflow/python/data/ops/dataset_ops.py\n    \n    \n        Lines 1476 to 1479\n      in\n      7cf39dd\n    \n    \n    \n    \n\n        \n          \n           if not _should_unpack_args(nested_args): \n        \n\n        \n          \n             nested_args = (nested_args,) \n        \n\n        \n          \n            \n        \n\n        \n          \n           ret = func(*nested_args)"}