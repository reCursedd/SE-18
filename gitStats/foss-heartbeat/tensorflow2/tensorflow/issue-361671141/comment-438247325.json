{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/438247325", "html_url": "https://github.com/tensorflow/tensorflow/issues/22379#issuecomment-438247325", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22379", "id": 438247325, "node_id": "MDEyOklzc3VlQ29tbWVudDQzODI0NzMyNQ==", "user": {"login": "oscarriddle", "id": 13745902, "node_id": "MDQ6VXNlcjEzNzQ1OTAy", "avatar_url": "https://avatars0.githubusercontent.com/u/13745902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oscarriddle", "html_url": "https://github.com/oscarriddle", "followers_url": "https://api.github.com/users/oscarriddle/followers", "following_url": "https://api.github.com/users/oscarriddle/following{/other_user}", "gists_url": "https://api.github.com/users/oscarriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/oscarriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oscarriddle/subscriptions", "organizations_url": "https://api.github.com/users/oscarriddle/orgs", "repos_url": "https://api.github.com/users/oscarriddle/repos", "events_url": "https://api.github.com/users/oscarriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/oscarriddle/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-13T12:22:26Z", "updated_at": "2018-11-13T12:25:11Z", "author_association": "NONE", "body_html": "<p>[TensorFlow 1.12]<br>\nI tried to quantize the graph and create a session to run it, but failed, saying:<br>\n<code>KeyError: \"The name 'Placeholder:0' refers to a Tensor which does not exist. The operation, 'Placeholder', does not exist in the graph.\"</code></p>\n<p>However, Placeholder is in the graph node list, so I'm confused about the correct way of using the quantization method.<br>\nThe script is:</p>\n<pre><code>from __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\n\nimport tensorflow as tf\nfrom tensorflow.contrib.layers.python.layers import layers\nfrom tensorflow.contrib.quantize.python import quantize_graph\nfrom tensorflow.python.framework import ops\nfrom tensorflow.python.framework import test_util\nfrom tensorflow.python.ops import array_ops\nfrom tensorflow.python.ops import init_ops\nfrom tensorflow.python.ops import nn_ops\n\nfrom tensorflow.python.framework import importer as importer\nfrom tensorflow.python.client import session as csess\nfrom tensorflow.core.protobuf import config_pb2 as cpb2\nfrom tensorflow.python.framework import ops as ops\nfrom tensorflow.python.framework import graph_util\nfrom tensorflow.python.platform import gfile\nfrom tensorflow.python.framework import tensor_util\n\nfrom PIL import Image\nimport numpy as np\nimport io,os                                                                                                                                                                   \n\noutput_node_name = 'InceptionV3/Logits/SpatialSqueeze'\ninput_node_name = 'Placeholder'\noutput_path = 'test.pb'\nimg_path = './1223832538_h.jpg'\n\ndef preProcessImage(img_path):\n    list = []\n    img = io.BytesIO(open(img_path,'rb').read())\n    img = Image.open(img)\n    img = img.resize((299, 299), Image.NEAREST)\n    images = np.array(img, dtype=np.uint32)\n    for x in xrange(16):\n        list.append(images)\n    list_np = np.array(list)\n    return list_np\n\ndef get_all_const(graph_nodes):\n    wts = [n for n in graph_nodes if n.op=='Const']\n    for n in wts:\n        print(\"Name of the node - %s\" % n.name)\n        print(\"Value - \")\n        print(tensor_util.MakeNdarray(n.attr['value'].tensor).shape)\n        print(tensor_util.MakeNdarray(n.attr['value'].tensor))\n    return wts\n\ng = tf.Graph()\nwith g.as_default():\n    output_graph_def = tf.GraphDef()\n    with open('frozen_graph.pb', 'rb') as f:\n        output_graph_def.ParseFromString(f.read())\n        _ = tf.import_graph_def(output_graph_def, name='')\n    print([n.name for n in output_graph_def.node])\n    graph_nodes=[n for n in output_graph_def.node]                                                                                                                                                         \n    quantize_graph.experimental_create_eval_graph(input_graph = g,weight_bits = 8,activation_bits = 8)\n    #quantize_graph.create_eval_graph(input_graph = g)                                                                                                                                         \n    for i in xrange(5):\n        print('=========================')\n    print([n.name for n in g.as_graph_def().node])\n    graph_nodes=[n for n in g.as_graph_def().node]      \n\ngpu_options = cpb2.GPUOptions(per_process_gpu_memory_fraction = 0.8)\noutput_tensor_name = output_node_name\ninp = tf.get_default_graph().get_tensor_by_name('Placeholder:0')\nout = tf.get_default_graph().get_tensor_by_name('InceptionV3/Logits/SpatialSqueeze:0')\nprint('here')\nimages = preProcessImage(img_path)\nwith csess.Session(config=cpb2.ConfigProto(gpu_options=gpu_options), graph=g) as sess:\n    val = sess.run(out, {inp: images})\nprint(val)\n\n</code></pre>\n<p>Error log is:</p>\n<pre><code>Traceback (most recent call last):\n  File \"test.py\", line 75, in &lt;module&gt;\n    inp = tf.get_default_graph().get_tensor_by_name('Placeholder:0')\n  File \"/home/web_server/dlpy72/dlpy.tensor1.12/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 3666, in get_tensor_by_name\n    return self.as_graph_element(name, allow_tensor=True, allow_operation=False)\n  File \"/home/web_server/dlpy72/dlpy.tensor1.12/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 3490, in as_graph_element\n    return self._as_graph_element_locked(obj, allow_tensor, allow_operation)\n  File \"/home/web_server/dlpy72/dlpy.tensor1.12/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 3532, in _as_graph_element_locked\n    \"graph.\" % (repr(name), repr(op_name)))\nKeyError: \"The name 'Placeholder:0' refers to a Tensor which does not exist. The operation, 'Placeholder', does not exist in the graph.\"\n</code></pre>\n<p>Any idea will be welcome.</p>", "body_text": "[TensorFlow 1.12]\nI tried to quantize the graph and create a session to run it, but failed, saying:\nKeyError: \"The name 'Placeholder:0' refers to a Tensor which does not exist. The operation, 'Placeholder', does not exist in the graph.\"\nHowever, Placeholder is in the graph node list, so I'm confused about the correct way of using the quantization method.\nThe script is:\nfrom __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\n\nimport tensorflow as tf\nfrom tensorflow.contrib.layers.python.layers import layers\nfrom tensorflow.contrib.quantize.python import quantize_graph\nfrom tensorflow.python.framework import ops\nfrom tensorflow.python.framework import test_util\nfrom tensorflow.python.ops import array_ops\nfrom tensorflow.python.ops import init_ops\nfrom tensorflow.python.ops import nn_ops\n\nfrom tensorflow.python.framework import importer as importer\nfrom tensorflow.python.client import session as csess\nfrom tensorflow.core.protobuf import config_pb2 as cpb2\nfrom tensorflow.python.framework import ops as ops\nfrom tensorflow.python.framework import graph_util\nfrom tensorflow.python.platform import gfile\nfrom tensorflow.python.framework import tensor_util\n\nfrom PIL import Image\nimport numpy as np\nimport io,os                                                                                                                                                                   \n\noutput_node_name = 'InceptionV3/Logits/SpatialSqueeze'\ninput_node_name = 'Placeholder'\noutput_path = 'test.pb'\nimg_path = './1223832538_h.jpg'\n\ndef preProcessImage(img_path):\n    list = []\n    img = io.BytesIO(open(img_path,'rb').read())\n    img = Image.open(img)\n    img = img.resize((299, 299), Image.NEAREST)\n    images = np.array(img, dtype=np.uint32)\n    for x in xrange(16):\n        list.append(images)\n    list_np = np.array(list)\n    return list_np\n\ndef get_all_const(graph_nodes):\n    wts = [n for n in graph_nodes if n.op=='Const']\n    for n in wts:\n        print(\"Name of the node - %s\" % n.name)\n        print(\"Value - \")\n        print(tensor_util.MakeNdarray(n.attr['value'].tensor).shape)\n        print(tensor_util.MakeNdarray(n.attr['value'].tensor))\n    return wts\n\ng = tf.Graph()\nwith g.as_default():\n    output_graph_def = tf.GraphDef()\n    with open('frozen_graph.pb', 'rb') as f:\n        output_graph_def.ParseFromString(f.read())\n        _ = tf.import_graph_def(output_graph_def, name='')\n    print([n.name for n in output_graph_def.node])\n    graph_nodes=[n for n in output_graph_def.node]                                                                                                                                                         \n    quantize_graph.experimental_create_eval_graph(input_graph = g,weight_bits = 8,activation_bits = 8)\n    #quantize_graph.create_eval_graph(input_graph = g)                                                                                                                                         \n    for i in xrange(5):\n        print('=========================')\n    print([n.name for n in g.as_graph_def().node])\n    graph_nodes=[n for n in g.as_graph_def().node]      \n\ngpu_options = cpb2.GPUOptions(per_process_gpu_memory_fraction = 0.8)\noutput_tensor_name = output_node_name\ninp = tf.get_default_graph().get_tensor_by_name('Placeholder:0')\nout = tf.get_default_graph().get_tensor_by_name('InceptionV3/Logits/SpatialSqueeze:0')\nprint('here')\nimages = preProcessImage(img_path)\nwith csess.Session(config=cpb2.ConfigProto(gpu_options=gpu_options), graph=g) as sess:\n    val = sess.run(out, {inp: images})\nprint(val)\n\n\nError log is:\nTraceback (most recent call last):\n  File \"test.py\", line 75, in <module>\n    inp = tf.get_default_graph().get_tensor_by_name('Placeholder:0')\n  File \"/home/web_server/dlpy72/dlpy.tensor1.12/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 3666, in get_tensor_by_name\n    return self.as_graph_element(name, allow_tensor=True, allow_operation=False)\n  File \"/home/web_server/dlpy72/dlpy.tensor1.12/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 3490, in as_graph_element\n    return self._as_graph_element_locked(obj, allow_tensor, allow_operation)\n  File \"/home/web_server/dlpy72/dlpy.tensor1.12/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 3532, in _as_graph_element_locked\n    \"graph.\" % (repr(name), repr(op_name)))\nKeyError: \"The name 'Placeholder:0' refers to a Tensor which does not exist. The operation, 'Placeholder', does not exist in the graph.\"\n\nAny idea will be welcome.", "body": "[TensorFlow 1.12]\r\nI tried to quantize the graph and create a session to run it, but failed, saying:\r\n`KeyError: \"The name 'Placeholder:0' refers to a Tensor which does not exist. The operation, 'Placeholder', does not exist in the graph.\"`\r\n\r\nHowever, Placeholder is in the graph node list, so I'm confused about the correct way of using the quantization method.\r\nThe script is:\r\n```\r\nfrom __future__ import absolute_import\r\nfrom __future__ import division\r\nfrom __future__ import print_function\r\n\r\nimport tensorflow as tf\r\nfrom tensorflow.contrib.layers.python.layers import layers\r\nfrom tensorflow.contrib.quantize.python import quantize_graph\r\nfrom tensorflow.python.framework import ops\r\nfrom tensorflow.python.framework import test_util\r\nfrom tensorflow.python.ops import array_ops\r\nfrom tensorflow.python.ops import init_ops\r\nfrom tensorflow.python.ops import nn_ops\r\n\r\nfrom tensorflow.python.framework import importer as importer\r\nfrom tensorflow.python.client import session as csess\r\nfrom tensorflow.core.protobuf import config_pb2 as cpb2\r\nfrom tensorflow.python.framework import ops as ops\r\nfrom tensorflow.python.framework import graph_util\r\nfrom tensorflow.python.platform import gfile\r\nfrom tensorflow.python.framework import tensor_util\r\n\r\nfrom PIL import Image\r\nimport numpy as np\r\nimport io,os                                                                                                                                                                   \r\n\r\noutput_node_name = 'InceptionV3/Logits/SpatialSqueeze'\r\ninput_node_name = 'Placeholder'\r\noutput_path = 'test.pb'\r\nimg_path = './1223832538_h.jpg'\r\n\r\ndef preProcessImage(img_path):\r\n    list = []\r\n    img = io.BytesIO(open(img_path,'rb').read())\r\n    img = Image.open(img)\r\n    img = img.resize((299, 299), Image.NEAREST)\r\n    images = np.array(img, dtype=np.uint32)\r\n    for x in xrange(16):\r\n        list.append(images)\r\n    list_np = np.array(list)\r\n    return list_np\r\n\r\ndef get_all_const(graph_nodes):\r\n    wts = [n for n in graph_nodes if n.op=='Const']\r\n    for n in wts:\r\n        print(\"Name of the node - %s\" % n.name)\r\n        print(\"Value - \")\r\n        print(tensor_util.MakeNdarray(n.attr['value'].tensor).shape)\r\n        print(tensor_util.MakeNdarray(n.attr['value'].tensor))\r\n    return wts\r\n\r\ng = tf.Graph()\r\nwith g.as_default():\r\n    output_graph_def = tf.GraphDef()\r\n    with open('frozen_graph.pb', 'rb') as f:\r\n        output_graph_def.ParseFromString(f.read())\r\n        _ = tf.import_graph_def(output_graph_def, name='')\r\n    print([n.name for n in output_graph_def.node])\r\n    graph_nodes=[n for n in output_graph_def.node]                                                                                                                                                         \r\n    quantize_graph.experimental_create_eval_graph(input_graph = g,weight_bits = 8,activation_bits = 8)\r\n    #quantize_graph.create_eval_graph(input_graph = g)                                                                                                                                         \r\n    for i in xrange(5):\r\n        print('=========================')\r\n    print([n.name for n in g.as_graph_def().node])\r\n    graph_nodes=[n for n in g.as_graph_def().node]      \r\n\r\ngpu_options = cpb2.GPUOptions(per_process_gpu_memory_fraction = 0.8)\r\noutput_tensor_name = output_node_name\r\ninp = tf.get_default_graph().get_tensor_by_name('Placeholder:0')\r\nout = tf.get_default_graph().get_tensor_by_name('InceptionV3/Logits/SpatialSqueeze:0')\r\nprint('here')\r\nimages = preProcessImage(img_path)\r\nwith csess.Session(config=cpb2.ConfigProto(gpu_options=gpu_options), graph=g) as sess:\r\n    val = sess.run(out, {inp: images})\r\nprint(val)\r\n\r\n```\r\nError log is:\r\n```\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 75, in <module>\r\n    inp = tf.get_default_graph().get_tensor_by_name('Placeholder:0')\r\n  File \"/home/web_server/dlpy72/dlpy.tensor1.12/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 3666, in get_tensor_by_name\r\n    return self.as_graph_element(name, allow_tensor=True, allow_operation=False)\r\n  File \"/home/web_server/dlpy72/dlpy.tensor1.12/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 3490, in as_graph_element\r\n    return self._as_graph_element_locked(obj, allow_tensor, allow_operation)\r\n  File \"/home/web_server/dlpy72/dlpy.tensor1.12/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 3532, in _as_graph_element_locked\r\n    \"graph.\" % (repr(name), repr(op_name)))\r\nKeyError: \"The name 'Placeholder:0' refers to a Tensor which does not exist. The operation, 'Placeholder', does not exist in the graph.\"\r\n```\r\nAny idea will be welcome."}