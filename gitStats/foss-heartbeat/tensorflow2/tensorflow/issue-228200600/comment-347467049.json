{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/347467049", "html_url": "https://github.com/tensorflow/tensorflow/issues/9853#issuecomment-347467049", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9853", "id": 347467049, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzQ2NzA0OQ==", "user": {"login": "hkxIron", "id": 10563261, "node_id": "MDQ6VXNlcjEwNTYzMjYx", "avatar_url": "https://avatars2.githubusercontent.com/u/10563261?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hkxIron", "html_url": "https://github.com/hkxIron", "followers_url": "https://api.github.com/users/hkxIron/followers", "following_url": "https://api.github.com/users/hkxIron/following{/other_user}", "gists_url": "https://api.github.com/users/hkxIron/gists{/gist_id}", "starred_url": "https://api.github.com/users/hkxIron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hkxIron/subscriptions", "organizations_url": "https://api.github.com/users/hkxIron/orgs", "repos_url": "https://api.github.com/users/hkxIron/repos", "events_url": "https://api.github.com/users/hkxIron/events{/privacy}", "received_events_url": "https://api.github.com/users/hkxIron/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-28T09:40:33Z", "updated_at": "2017-11-28T09:42:30Z", "author_association": "NONE", "body_html": "<p>I have modify your code ,but it still doesn't work.</p>\n<pre><code>import os\nimport tensorflow as tf\nimport pathos.multiprocessing as pmp\n\ndef f(graph, queue,i):\n    # g = tf.Graph()\n    with graph.as_default():\n        # q = tf.FIFOQueue(capacity=100, dtypes=[tf.string], shapes=[[]],\n        #                  shared_name=\"shared_q\", name=\"q\")\n        a = tf.constant(\"Hello\")\n        b = queue.enqueue(a)\n        q_size = queue.size()\n    with tf.Session(graph=graph) as sess:\n        for n in range(i):\n            sess.run(b)\n            print(\"sub function:\", sess.run(q_size))\n    return\n\nif __name__ == \"__main__\":\n    #os.environ[\"CUDA_VISIBLE_DEVICES\"] = \"\"\n    pool = pmp.Pool(2)\n    graph = tf.Graph()\n    with graph.as_default():\n        queue = tf.FIFOQueue(capacity=100, dtypes=[tf.string], shapes=[[]],\n                             shared_name=\"shared_q\", name=\"q\")\n        pool.starmap(f, [(graph,queue, 1), (graph,queue, 2)])\n        qsz = queue.size()\n        with tf.Session(graph=graph) as sess:\n            for i in range(3):\n                print(\"main:\",sess.run(qsz))\n        #os.unsetenv(\"CUDA_VISIBLE_DEVICES\")\n</code></pre>", "body_text": "I have modify your code ,but it still doesn't work.\nimport os\nimport tensorflow as tf\nimport pathos.multiprocessing as pmp\n\ndef f(graph, queue,i):\n    # g = tf.Graph()\n    with graph.as_default():\n        # q = tf.FIFOQueue(capacity=100, dtypes=[tf.string], shapes=[[]],\n        #                  shared_name=\"shared_q\", name=\"q\")\n        a = tf.constant(\"Hello\")\n        b = queue.enqueue(a)\n        q_size = queue.size()\n    with tf.Session(graph=graph) as sess:\n        for n in range(i):\n            sess.run(b)\n            print(\"sub function:\", sess.run(q_size))\n    return\n\nif __name__ == \"__main__\":\n    #os.environ[\"CUDA_VISIBLE_DEVICES\"] = \"\"\n    pool = pmp.Pool(2)\n    graph = tf.Graph()\n    with graph.as_default():\n        queue = tf.FIFOQueue(capacity=100, dtypes=[tf.string], shapes=[[]],\n                             shared_name=\"shared_q\", name=\"q\")\n        pool.starmap(f, [(graph,queue, 1), (graph,queue, 2)])\n        qsz = queue.size()\n        with tf.Session(graph=graph) as sess:\n            for i in range(3):\n                print(\"main:\",sess.run(qsz))\n        #os.unsetenv(\"CUDA_VISIBLE_DEVICES\")", "body": "I have modify your code ,but it still doesn't work.\r\n\r\n```\r\nimport os\r\nimport tensorflow as tf\r\nimport pathos.multiprocessing as pmp\r\n\r\ndef f(graph, queue,i):\r\n    # g = tf.Graph()\r\n    with graph.as_default():\r\n        # q = tf.FIFOQueue(capacity=100, dtypes=[tf.string], shapes=[[]],\r\n        #                  shared_name=\"shared_q\", name=\"q\")\r\n        a = tf.constant(\"Hello\")\r\n        b = queue.enqueue(a)\r\n        q_size = queue.size()\r\n    with tf.Session(graph=graph) as sess:\r\n        for n in range(i):\r\n            sess.run(b)\r\n            print(\"sub function:\", sess.run(q_size))\r\n    return\r\n\r\nif __name__ == \"__main__\":\r\n    #os.environ[\"CUDA_VISIBLE_DEVICES\"] = \"\"\r\n    pool = pmp.Pool(2)\r\n    graph = tf.Graph()\r\n    with graph.as_default():\r\n        queue = tf.FIFOQueue(capacity=100, dtypes=[tf.string], shapes=[[]],\r\n                             shared_name=\"shared_q\", name=\"q\")\r\n        pool.starmap(f, [(graph,queue, 1), (graph,queue, 2)])\r\n        qsz = queue.size()\r\n        with tf.Session(graph=graph) as sess:\r\n            for i in range(3):\r\n                print(\"main:\",sess.run(qsz))\r\n        #os.unsetenv(\"CUDA_VISIBLE_DEVICES\")\r\n```\r\n\r\n"}