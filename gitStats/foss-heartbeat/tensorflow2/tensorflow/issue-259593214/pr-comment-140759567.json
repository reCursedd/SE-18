{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/140759567", "pull_request_review_id": 64876874, "id": 140759567, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDc1OTU2Nw==", "diff_hunk": "@@ -181,7 +181,7 @@ def func_with_args(*args, **kwargs):\n     return func(*args, **current_args)\n   _add_op(func)\n   setattr(func_with_args, '_key_op', _key_op(func))\n-  return tf_decorator.make_decorator(func, func_with_args)\n+  return tf_decorator.make_decorator(func, func_with_args, decorator_name='add_arg_scope')", "path": "tensorflow/contrib/framework/python/ops/arg_scope.py", "position": null, "original_position": 5, "commit_id": "e47574a5a3b5a49f90e6898f784c1de154386d2d", "original_commit_id": "3f956a5202687b95d18348fa8ccfe26543b268c9", "user": {"login": "charlesnicholson", "id": 3010295, "node_id": "MDQ6VXNlcjMwMTAyOTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/3010295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/charlesnicholson", "html_url": "https://github.com/charlesnicholson", "followers_url": "https://api.github.com/users/charlesnicholson/followers", "following_url": "https://api.github.com/users/charlesnicholson/following{/other_user}", "gists_url": "https://api.github.com/users/charlesnicholson/gists{/gist_id}", "starred_url": "https://api.github.com/users/charlesnicholson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/charlesnicholson/subscriptions", "organizations_url": "https://api.github.com/users/charlesnicholson/orgs", "repos_url": "https://api.github.com/users/charlesnicholson/repos", "events_url": "https://api.github.com/users/charlesnicholson/events{/privacy}", "received_events_url": "https://api.github.com/users/charlesnicholson/received_events", "type": "User", "site_admin": false}, "body": "@JettJones the functionality is there to minimize the amount of duplication required to get decorators to work. It's lower friction than having to write `def my_decorator():` and then later `my_decorator`: string duplication is resistant to rename refactoring, etc. I'm not religious about it, it's just a convenience.", "created_at": "2017-09-25T12:20:05Z", "updated_at": "2017-09-25T16:33:42Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/13217#discussion_r140759567", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13217", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/140759567"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/13217#discussion_r140759567"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13217"}}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1045582\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/JettJones\">@JettJones</a> the functionality is there to minimize the amount of duplication required to get decorators to work. It's lower friction than having to write <code>def my_decorator():</code> and then later <code>my_decorator</code>: string duplication is resistant to rename refactoring, etc. I'm not religious about it, it's just a convenience.</p>", "body_text": "@JettJones the functionality is there to minimize the amount of duplication required to get decorators to work. It's lower friction than having to write def my_decorator(): and then later my_decorator: string duplication is resistant to rename refactoring, etc. I'm not religious about it, it's just a convenience.", "in_reply_to_id": 140669172}