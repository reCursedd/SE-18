{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/140684351", "pull_request_review_id": 64790342, "id": 140684351, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDY4NDM1MQ==", "diff_hunk": "@@ -181,7 +181,7 @@ def func_with_args(*args, **kwargs):\n     return func(*args, **current_args)\n   _add_op(func)\n   setattr(func_with_args, '_key_op', _key_op(func))\n-  return tf_decorator.make_decorator(func, func_with_args)\n+  return tf_decorator.make_decorator(func, func_with_args, decorator_name='add_arg_scope')", "path": "tensorflow/contrib/framework/python/ops/arg_scope.py", "position": null, "original_position": 5, "commit_id": "e47574a5a3b5a49f90e6898f784c1de154386d2d", "original_commit_id": "3f956a5202687b95d18348fa8ccfe26543b268c9", "user": {"login": "JettJones", "id": 1045582, "node_id": "MDQ6VXNlcjEwNDU1ODI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1045582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JettJones", "html_url": "https://github.com/JettJones", "followers_url": "https://api.github.com/users/JettJones/followers", "following_url": "https://api.github.com/users/JettJones/following{/other_user}", "gists_url": "https://api.github.com/users/JettJones/gists{/gist_id}", "starred_url": "https://api.github.com/users/JettJones/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JettJones/subscriptions", "organizations_url": "https://api.github.com/users/JettJones/orgs", "repos_url": "https://api.github.com/users/JettJones/repos", "events_url": "https://api.github.com/users/JettJones/events{/privacy}", "received_events_url": "https://api.github.com/users/JettJones/received_events", "type": "User", "site_admin": false}, "body": "Passing in the decorator_name could be left out, and you're right - if this is the only call path that triggers the name look-up it could leave the changed behavior untested.  By my reading, the unit tests still cover inspection, and I will confirm other make_decorator calls as well.  \r\n\r\nOriginally my question was - why run additional call stack inspection when the caller could pass in its name? But after finding alternatives to `inspect.stack()` the overhead of the repeated lookup is no longer visible.\r\n\r\nLong story short, I'll drop this change from my diff to ensure my main changes are well exercised.  Also - check into #13232 which is looking to provide this same fix to add_arg_scope.", "created_at": "2017-09-25T03:45:57Z", "updated_at": "2017-09-25T16:33:42Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/13217#discussion_r140684351", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13217", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/140684351"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/13217#discussion_r140684351"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13217"}}, "body_html": "<p>Passing in the decorator_name could be left out, and you're right - if this is the only call path that triggers the name look-up it could leave the changed behavior untested.  By my reading, the unit tests still cover inspection, and I will confirm other make_decorator calls as well.</p>\n<p>Originally my question was - why run additional call stack inspection when the caller could pass in its name? But after finding alternatives to <code>inspect.stack()</code> the overhead of the repeated lookup is no longer visible.</p>\n<p>Long story short, I'll drop this change from my diff to ensure my main changes are well exercised.  Also - check into <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"259784466\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/13232\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/13232/hovercard\" href=\"https://github.com/tensorflow/tensorflow/pull/13232\">#13232</a> which is looking to provide this same fix to add_arg_scope.</p>", "body_text": "Passing in the decorator_name could be left out, and you're right - if this is the only call path that triggers the name look-up it could leave the changed behavior untested.  By my reading, the unit tests still cover inspection, and I will confirm other make_decorator calls as well.\nOriginally my question was - why run additional call stack inspection when the caller could pass in its name? But after finding alternatives to inspect.stack() the overhead of the repeated lookup is no longer visible.\nLong story short, I'll drop this change from my diff to ensure my main changes are well exercised.  Also - check into #13232 which is looking to provide this same fix to add_arg_scope.", "in_reply_to_id": 140669172}