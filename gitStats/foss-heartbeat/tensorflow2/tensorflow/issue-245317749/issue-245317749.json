{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11740", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11740/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11740/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11740/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/11740", "id": 245317749, "node_id": "MDU6SXNzdWUyNDUzMTc3NDk=", "number": 11740, "title": "several Session , Models in one file ", "user": {"login": "sesoin", "id": 28855525, "node_id": "MDQ6VXNlcjI4ODU1NTI1", "avatar_url": "https://avatars1.githubusercontent.com/u/28855525?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sesoin", "html_url": "https://github.com/sesoin", "followers_url": "https://api.github.com/users/sesoin/followers", "following_url": "https://api.github.com/users/sesoin/following{/other_user}", "gists_url": "https://api.github.com/users/sesoin/gists{/gist_id}", "starred_url": "https://api.github.com/users/sesoin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sesoin/subscriptions", "organizations_url": "https://api.github.com/users/sesoin/orgs", "repos_url": "https://api.github.com/users/sesoin/repos", "events_url": "https://api.github.com/users/sesoin/events{/privacy}", "received_events_url": "https://api.github.com/users/sesoin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-25T08:04:33Z", "updated_at": "2017-07-26T01:27:42Z", "closed_at": "2017-07-26T01:27:42Z", "author_association": "NONE", "body_html": "<p>so I am using CNN for fave detection and also I have CNN for age classification . but it seems two network doesn't work together.</p>\n<p>my code is :</p>\n<pre><code>def main():\n\n    minsize = 20\n    threshold = [0.6, 0.7, 0.7]\n    factor = 0.709\n\n\n    print('Creating networks and loading parameters')\n   \n\n\n    sess= tf.Session()\n    with tf.variable_scope(\"MTCNN\"):\n\n            pnet, rnet, onet = FD2.create_mtcnn(sess, None,\"MTCNN\")\n    writer = tf.summary.FileWriter(\"./graphs\", sess.graph)\n      \n    img = cv2.imread('./test1.jpg')\n    img_matlab = img.copy()\n\n    # BGR -&gt; RGB\n    tmp = img_matlab[:, :, 2].copy()\n    img_matlab[:, :, 2] = img_matlab[:, :, 0]\n    img_matlab[:, :, 0] = tmp\n\n    boundingboxes, points = FD2.detect_face(img_matlab, minsize, pnet, rnet, onet, threshold, factor)\n    points=np.reshape(points.T, (-1,10))\n\n    boxes=boundingboxes    \n    x1 = boxes[:, 0]\n    y1 = boxes[:, 1]\n    x2 = boxes[:, 2]\n    y2 = boxes[:, 3]\n\n\n    with sess.as_default():\n    \n    \n        label_list_age = AGE_LIST\n        nlabels_age = len(label_list_age)\n\n        model_fn_age = select_model(FLAGS.model_type_age)\n        images = tf.placeholder(tf.float32, [None, RESIZE_FINAL, RESIZE_FINAL, 3])\n        soft = tf.placeholder(tf.float32, [None, RESIZE_FINAL, RESIZE_FINAL, 3])\n\n        logits_age = model_fn_age(nlabels_age, images, 1, False)\n        init = tf.global_variables_initializer()\n        requested_step = FLAGS.requested_step if FLAGS.requested_step else None\n        checkpoint_path_age = '%s' % (FLAGS.model_dir_age)\n        model_checkpoint_path_age, global_step_age = get_checkpoint(checkpoint_path_age, requested_step, FLAGS.checkpoint_age)\n       \n        saver = tf.train.Saver()\n        saver.restore(sess, model_checkpoint_path_age)\n        softmax_output_age = tf.nn.softmax(logits_age)\n        coder= ImageCoder()\n\n    #with tf.Session as sess:\n\n       \n        \n        for i in range(x1.shape[0]):\n\n       \n            upper_cut = [min(img.shape[0], int(y2[i]) ), min(img.shape[1], int(x2[i]))]\n            lower_cut = [max(int(y1[i]), 0), max(int(x1[i]) , 0)]\n            age_image = img[lower_cut[0]:upper_cut[0], lower_cut[1]:upper_cut[1]]\n            best_choice_age= classify_age(sess, label_list_age, softmax_output_age, coder, boxes,age_image )\n            age.append(best_choice_age)\n   \n        img = markLandmark(img,points)\n        img = drawBoxes(img, boundingboxes)\n\n        cv2.imshow('window',img)\n        cv2.waitKey(0)\n\n        sess.close()\n\nif __name__ == '__main__':\n    main()\n\n</code></pre>\n<p>and the  error is :</p>\n<pre><code>  File \"/home/sepid/tf/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 2336, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/home/sepid/tf/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1228, in __init__\n    self._traceback = _extract_stack()\n\nNotFoundError (see above for traceback): Key MTCNN/rnet/conv5-2/weights not found in checkpoint\n\t [[Node: save/RestoreV2_45 = RestoreV2[dtypes=[DT_FLOAT], _device=\"/job:localhost/replica:0/task:0/cpu:0\"](_recv_save/Const_0, save/RestoreV2_45/tensor_names, save/RestoreV2_45/shape_and_slices)]]\n\t [[Node: save/RestoreV2_18/_169 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device_incarnation=1, tensor_name=\"edge_28_save/RestoreV2_18\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/gpu:0\"]()]]\n</code></pre>", "body_text": "so I am using CNN for fave detection and also I have CNN for age classification . but it seems two network doesn't work together.\nmy code is :\ndef main():\n\n    minsize = 20\n    threshold = [0.6, 0.7, 0.7]\n    factor = 0.709\n\n\n    print('Creating networks and loading parameters')\n   \n\n\n    sess= tf.Session()\n    with tf.variable_scope(\"MTCNN\"):\n\n            pnet, rnet, onet = FD2.create_mtcnn(sess, None,\"MTCNN\")\n    writer = tf.summary.FileWriter(\"./graphs\", sess.graph)\n      \n    img = cv2.imread('./test1.jpg')\n    img_matlab = img.copy()\n\n    # BGR -> RGB\n    tmp = img_matlab[:, :, 2].copy()\n    img_matlab[:, :, 2] = img_matlab[:, :, 0]\n    img_matlab[:, :, 0] = tmp\n\n    boundingboxes, points = FD2.detect_face(img_matlab, minsize, pnet, rnet, onet, threshold, factor)\n    points=np.reshape(points.T, (-1,10))\n\n    boxes=boundingboxes    \n    x1 = boxes[:, 0]\n    y1 = boxes[:, 1]\n    x2 = boxes[:, 2]\n    y2 = boxes[:, 3]\n\n\n    with sess.as_default():\n    \n    \n        label_list_age = AGE_LIST\n        nlabels_age = len(label_list_age)\n\n        model_fn_age = select_model(FLAGS.model_type_age)\n        images = tf.placeholder(tf.float32, [None, RESIZE_FINAL, RESIZE_FINAL, 3])\n        soft = tf.placeholder(tf.float32, [None, RESIZE_FINAL, RESIZE_FINAL, 3])\n\n        logits_age = model_fn_age(nlabels_age, images, 1, False)\n        init = tf.global_variables_initializer()\n        requested_step = FLAGS.requested_step if FLAGS.requested_step else None\n        checkpoint_path_age = '%s' % (FLAGS.model_dir_age)\n        model_checkpoint_path_age, global_step_age = get_checkpoint(checkpoint_path_age, requested_step, FLAGS.checkpoint_age)\n       \n        saver = tf.train.Saver()\n        saver.restore(sess, model_checkpoint_path_age)\n        softmax_output_age = tf.nn.softmax(logits_age)\n        coder= ImageCoder()\n\n    #with tf.Session as sess:\n\n       \n        \n        for i in range(x1.shape[0]):\n\n       \n            upper_cut = [min(img.shape[0], int(y2[i]) ), min(img.shape[1], int(x2[i]))]\n            lower_cut = [max(int(y1[i]), 0), max(int(x1[i]) , 0)]\n            age_image = img[lower_cut[0]:upper_cut[0], lower_cut[1]:upper_cut[1]]\n            best_choice_age= classify_age(sess, label_list_age, softmax_output_age, coder, boxes,age_image )\n            age.append(best_choice_age)\n   \n        img = markLandmark(img,points)\n        img = drawBoxes(img, boundingboxes)\n\n        cv2.imshow('window',img)\n        cv2.waitKey(0)\n\n        sess.close()\n\nif __name__ == '__main__':\n    main()\n\n\nand the  error is :\n  File \"/home/sepid/tf/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 2336, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/home/sepid/tf/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1228, in __init__\n    self._traceback = _extract_stack()\n\nNotFoundError (see above for traceback): Key MTCNN/rnet/conv5-2/weights not found in checkpoint\n\t [[Node: save/RestoreV2_45 = RestoreV2[dtypes=[DT_FLOAT], _device=\"/job:localhost/replica:0/task:0/cpu:0\"](_recv_save/Const_0, save/RestoreV2_45/tensor_names, save/RestoreV2_45/shape_and_slices)]]\n\t [[Node: save/RestoreV2_18/_169 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device_incarnation=1, tensor_name=\"edge_28_save/RestoreV2_18\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/gpu:0\"]()]]", "body": "so I am using CNN for fave detection and also I have CNN for age classification . but it seems two network doesn't work together.\r\n\r\nmy code is :\r\n\r\n```\r\ndef main():\r\n\r\n    minsize = 20\r\n    threshold = [0.6, 0.7, 0.7]\r\n    factor = 0.709\r\n\r\n\r\n    print('Creating networks and loading parameters')\r\n   \r\n\r\n\r\n    sess= tf.Session()\r\n    with tf.variable_scope(\"MTCNN\"):\r\n\r\n            pnet, rnet, onet = FD2.create_mtcnn(sess, None,\"MTCNN\")\r\n    writer = tf.summary.FileWriter(\"./graphs\", sess.graph)\r\n      \r\n    img = cv2.imread('./test1.jpg')\r\n    img_matlab = img.copy()\r\n\r\n    # BGR -> RGB\r\n    tmp = img_matlab[:, :, 2].copy()\r\n    img_matlab[:, :, 2] = img_matlab[:, :, 0]\r\n    img_matlab[:, :, 0] = tmp\r\n\r\n    boundingboxes, points = FD2.detect_face(img_matlab, minsize, pnet, rnet, onet, threshold, factor)\r\n    points=np.reshape(points.T, (-1,10))\r\n\r\n    boxes=boundingboxes    \r\n    x1 = boxes[:, 0]\r\n    y1 = boxes[:, 1]\r\n    x2 = boxes[:, 2]\r\n    y2 = boxes[:, 3]\r\n\r\n\r\n    with sess.as_default():\r\n    \r\n    \r\n        label_list_age = AGE_LIST\r\n        nlabels_age = len(label_list_age)\r\n\r\n        model_fn_age = select_model(FLAGS.model_type_age)\r\n        images = tf.placeholder(tf.float32, [None, RESIZE_FINAL, RESIZE_FINAL, 3])\r\n        soft = tf.placeholder(tf.float32, [None, RESIZE_FINAL, RESIZE_FINAL, 3])\r\n\r\n        logits_age = model_fn_age(nlabels_age, images, 1, False)\r\n        init = tf.global_variables_initializer()\r\n        requested_step = FLAGS.requested_step if FLAGS.requested_step else None\r\n        checkpoint_path_age = '%s' % (FLAGS.model_dir_age)\r\n        model_checkpoint_path_age, global_step_age = get_checkpoint(checkpoint_path_age, requested_step, FLAGS.checkpoint_age)\r\n       \r\n        saver = tf.train.Saver()\r\n        saver.restore(sess, model_checkpoint_path_age)\r\n        softmax_output_age = tf.nn.softmax(logits_age)\r\n        coder= ImageCoder()\r\n\r\n    #with tf.Session as sess:\r\n\r\n       \r\n        \r\n        for i in range(x1.shape[0]):\r\n\r\n       \r\n            upper_cut = [min(img.shape[0], int(y2[i]) ), min(img.shape[1], int(x2[i]))]\r\n            lower_cut = [max(int(y1[i]), 0), max(int(x1[i]) , 0)]\r\n            age_image = img[lower_cut[0]:upper_cut[0], lower_cut[1]:upper_cut[1]]\r\n            best_choice_age= classify_age(sess, label_list_age, softmax_output_age, coder, boxes,age_image )\r\n            age.append(best_choice_age)\r\n   \r\n        img = markLandmark(img,points)\r\n        img = drawBoxes(img, boundingboxes)\r\n\r\n        cv2.imshow('window',img)\r\n        cv2.waitKey(0)\r\n\r\n        sess.close()\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n\r\n```\r\n\r\n\r\n\r\n\r\nand the  error is : \r\n```\r\n  File \"/home/sepid/tf/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 2336, in create_op\r\n    original_op=self._default_original_op, op_def=op_def)\r\n  File \"/home/sepid/tf/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1228, in __init__\r\n    self._traceback = _extract_stack()\r\n\r\nNotFoundError (see above for traceback): Key MTCNN/rnet/conv5-2/weights not found in checkpoint\r\n\t [[Node: save/RestoreV2_45 = RestoreV2[dtypes=[DT_FLOAT], _device=\"/job:localhost/replica:0/task:0/cpu:0\"](_recv_save/Const_0, save/RestoreV2_45/tensor_names, save/RestoreV2_45/shape_and_slices)]]\r\n\t [[Node: save/RestoreV2_18/_169 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device_incarnation=1, tensor_name=\"edge_28_save/RestoreV2_18\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/gpu:0\"]()]]\r\n```\r\n"}