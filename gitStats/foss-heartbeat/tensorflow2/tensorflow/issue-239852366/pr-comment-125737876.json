{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/125737876", "pull_request_review_id": 48156868, "id": 125737876, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNTczNzg3Ng==", "diff_hunk": "@@ -0,0 +1,147 @@\n+/* Copyright 2017 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+package org.tensorflow.op;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import org.tensorflow.Operation;\n+import org.tensorflow.OperationBuilder;\n+import org.tensorflow.Output;\n+\n+/**\n+ * A helper for wrapping a new operation.\n+ *\n+ * <p>It provides utilities for wrappers to build a single operation and collect its output(s)\n+ * afterward.\n+ *\n+ * <pre>{@code\n+ * public final class Unique extends AbstractSingleOp {\n+ *    ...\n+ *    public static Unique create(Scope s, Input x) {\n+ *        OperationHelper unique = OperationHelper.create(s, \"Unique\");\n+ *        unique.builder().input(x.asOutput());\n+ *        return new Unique(unique);\n+ *    }\n+ *    ...\n+ *    private Unique(OperationHelper unique) {\n+ *        super(unique.operation());\n+ *        y = unique.nextOutput();\n+ *        idx = unique.nextOutput();\n+ *    }\n+ * }\n+ * }</pre>\n+ *\n+ * <p>{@code OperationHelper} objects are designed for a single usage and should be discarded once\n+ * the operation wrapper has been created. They are <b>not</b> thread-safe.\n+ */\n+public final class OperationHelper {\n+\n+  /**\n+   * Creates a helper for a new operation.\n+   *\n+   * <p>By default, the name of the operation is its {@code opType} in lowercase, unless a different\n+   * name has been provided using {@link Scope#withName(String)}.\n+   *\n+   * @param scope operation scope\n+   * @param opType operation type name\n+   * @return new instance of this class\n+   */\n+  public static OperationHelper create(Scope scope, String opType) {\n+    return new OperationHelper(\n+        scope.graph().opBuilder(opType, scope.makeOpName(opType.toLowerCase())));\n+  }\n+\n+  /**\n+   * Returns the builder for the operation.\n+   *\n+   * <p>Wrappers can add inputs and attributes to the builder to configure the underlying operation.\n+   * After the operation has been built (i.e. the first time {@link #operation()} is called), any\n+   * further modifications to the builder are ignored.\n+   *\n+   * <p>Additionally, the {@code build()} method of the builder must <b>not</b> be called explicitly\n+   * outside this class, {@link #operation()} must be used method instead.\n+   *\n+   * @return operation builder\n+   */\n+  public OperationBuilder builder() {\n+    return builder;\n+  }\n+\n+  /**\n+   * Retrieve and optionally build the operation.\n+   *\n+   * <p>If the operation is retrieved for the first time, it will be built with inputs and\n+   * attributes collected so far by the operation {@link #builder()}.\n+   *\n+   * @return an operation\n+   * @see {@link #builder()}.\n+   */\n+  public Operation operation() {\n+    if (unsafeOperation == null) {\n+      unsafeOperation = builder.build();\n+    }\n+    return unsafeOperation;\n+  }\n+\n+  /**\n+   * Returns the next output of the operation.\n+   *\n+   * <p>All outputs collected with this method or with {@link #nextOutputList(String)} are retrieved\n+   * sequentially, like an iterator would do.\n+   *\n+   * <p>This method invokes {@link #operation()} internally to build the operation if it has not\n+   * been done yet.\n+   *\n+   * @return an output\n+   */\n+  public Output nextOutput() {", "path": "tensorflow/java/src/main/java/org/tensorflow/op/OperationHelper.java", "position": null, "original_position": 112, "commit_id": "aba6ba38de751f1cf140932d8b5b1dafa80898fb", "original_commit_id": "2913e5310826918d070066b035de2dec22cc226c", "user": {"login": "karllessard", "id": 10109534, "node_id": "MDQ6VXNlcjEwMTA5NTM0", "avatar_url": "https://avatars3.githubusercontent.com/u/10109534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karllessard", "html_url": "https://github.com/karllessard", "followers_url": "https://api.github.com/users/karllessard/followers", "following_url": "https://api.github.com/users/karllessard/following{/other_user}", "gists_url": "https://api.github.com/users/karllessard/gists{/gist_id}", "starred_url": "https://api.github.com/users/karllessard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karllessard/subscriptions", "organizations_url": "https://api.github.com/users/karllessard/orgs", "repos_url": "https://api.github.com/users/karllessard/repos", "events_url": "https://api.github.com/users/karllessard/events{/privacy}", "received_events_url": "https://api.github.com/users/karllessard/received_events", "type": "User", "site_admin": false}, "body": "See previous comment on this, once again the `OperationHelper` can be a useful tool for those who write custom ops.", "created_at": "2017-07-05T19:38:29Z", "updated_at": "2017-07-12T16:35:33Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/11188#discussion_r125737876", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11188", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/125737876"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/11188#discussion_r125737876"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11188"}}, "body_html": "<p>See previous comment on this, once again the <code>OperationHelper</code> can be a useful tool for those who write custom ops.</p>", "body_text": "See previous comment on this, once again the OperationHelper can be a useful tool for those who write custom ops.", "in_reply_to_id": 125696499}