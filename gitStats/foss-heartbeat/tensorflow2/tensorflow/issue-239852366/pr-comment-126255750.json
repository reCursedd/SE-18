{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/126255750", "pull_request_review_id": 48729688, "id": 126255750, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNjI1NTc1MA==", "diff_hunk": "@@ -91,6 +91,21 @@ public int outputListLength(final String name) {\n     }\n   }\n \n+  /**\n+   * Returns symbolic handles to a list of tensors produced by this operation.\n+   *\n+   * @param idx index of the first tensor of the list\n+   * @param length number of tensors in the list\n+   * @return array of {@code Output}\n+   */\n+  public Output[] outputList(int idx, int length) {", "path": "tensorflow/java/src/main/java/org/tensorflow/Operation.java", "position": 11, "original_position": 11, "commit_id": "aba6ba38de751f1cf140932d8b5b1dafa80898fb", "original_commit_id": "02a6b9d99ab9480dd3f28392a2315f44cabbf2c3", "user": {"login": "karllessard", "id": 10109534, "node_id": "MDQ6VXNlcjEwMTA5NTM0", "avatar_url": "https://avatars3.githubusercontent.com/u/10109534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karllessard", "html_url": "https://github.com/karllessard", "followers_url": "https://api.github.com/users/karllessard/followers", "following_url": "https://api.github.com/users/karllessard/following{/other_user}", "gists_url": "https://api.github.com/users/karllessard/gists{/gist_id}", "starred_url": "https://api.github.com/users/karllessard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karllessard/subscriptions", "organizations_url": "https://api.github.com/users/karllessard/orgs", "repos_url": "https://api.github.com/users/karllessard/repos", "events_url": "https://api.github.com/users/karllessard/events{/privacy}", "received_events_url": "https://api.github.com/users/karllessard/received_events", "type": "User", "site_admin": false}, "body": "Ok good. Just to explain my thoughts around this a little more, I agree that `outputList(String name)` is a most intuitive API for getting hold on an output list but in fact, since we collect iteratively the outputs of an operation, the use of the index is more useful. For example, if you have three outputs where the last one is a list, you automatically know that it starts from index `2`, and so on. ", "created_at": "2017-07-07T22:11:02Z", "updated_at": "2017-07-12T16:35:33Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/11188#discussion_r126255750", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11188", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/126255750"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/11188#discussion_r126255750"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11188"}}, "body_html": "<p>Ok good. Just to explain my thoughts around this a little more, I agree that <code>outputList(String name)</code> is a most intuitive API for getting hold on an output list but in fact, since we collect iteratively the outputs of an operation, the use of the index is more useful. For example, if you have three outputs where the last one is a list, you automatically know that it starts from index <code>2</code>, and so on.</p>", "body_text": "Ok good. Just to explain my thoughts around this a little more, I agree that outputList(String name) is a most intuitive API for getting hold on an output list but in fact, since we collect iteratively the outputs of an operation, the use of the index is more useful. For example, if you have three outputs where the last one is a list, you automatically know that it starts from index 2, and so on.", "in_reply_to_id": 126075599}