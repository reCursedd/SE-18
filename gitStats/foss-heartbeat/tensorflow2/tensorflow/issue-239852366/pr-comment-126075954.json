{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/126075954", "pull_request_review_id": 48526029, "id": 126075954, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNjA3NTk1NA==", "diff_hunk": "@@ -22,10 +22,10 @@\n  * <p>An Output is a symbolic handle to a tensor. The value of the Tensor is computed by executing\n  * the {@link Operation} in a {@link Session}.\n  *\n- * <p>By implementing the {@link Input} interface, instances of this class could also be passed\n+ * <p>By implementing the {@link Operand} interface, instances of this class could also be passed", "path": "tensorflow/java/src/main/java/org/tensorflow/Output.java", "position": null, "original_position": 5, "commit_id": "aba6ba38de751f1cf140932d8b5b1dafa80898fb", "original_commit_id": "02a6b9d99ab9480dd3f28392a2315f44cabbf2c3", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "Nit: Replace \"could also be passed directly in input to an operation\" with \"also act as operands to org.tensorflow.op.Op instances\". Since, the `Operand` class is only useful for generated wrappers? Ideally, it would be defined in the `op` package, but we can't do that for circular dependency reasons, right (since `Output` needs to implement it)?", "created_at": "2017-07-07T06:14:32Z", "updated_at": "2017-07-12T16:35:33Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/11188#discussion_r126075954", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11188", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/126075954"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/11188#discussion_r126075954"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11188"}}, "body_html": "<p>Nit: Replace \"could also be passed directly in input to an operation\" with \"also act as operands to org.tensorflow.op.Op instances\". Since, the <code>Operand</code> class is only useful for generated wrappers? Ideally, it would be defined in the <code>op</code> package, but we can't do that for circular dependency reasons, right (since <code>Output</code> needs to implement it)?</p>", "body_text": "Nit: Replace \"could also be passed directly in input to an operation\" with \"also act as operands to org.tensorflow.op.Op instances\". Since, the Operand class is only useful for generated wrappers? Ideally, it would be defined in the op package, but we can't do that for circular dependency reasons, right (since Output needs to implement it)?"}