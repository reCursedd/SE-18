{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/285115173", "html_url": "https://github.com/tensorflow/tensorflow/issues/8175#issuecomment-285115173", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8175", "id": 285115173, "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTExNTE3Mw==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-08T17:51:28Z", "updated_at": "2017-03-08T17:51:28Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Ah thanks, tensordot connection makes it more clear.</p>\n<p>It seems <code>tf.dense</code> behaves by contracting last index of input tensor with first index of weights tensor. The \"flatten\" word was confusing, not sure what it means here</p>\n<p>Toy example I made for myself to translate tf.dense to equivalent np.tensordot</p>\n<pre><code>tf.reset_default_graph()\nx0 = np.ones((3, 3, 3))\nw0 = np.arange(6).reshape((3, 2))\nx = tf.constant(x0)\ny = tf.layers.dense(x, 2)\nvar_dict = {v.op.name: v for v in tf.global_variables()}\nassert(var_dict[\"dense/kernel\"].get_shape() == (3, 2))\nsess = tf.InteractiveSession()\nsess.run(tf.global_variables_initializer())\nsess.run(tf.assign(var_dict[\"dense/kernel\"], w0))\nsess.run(tf.assign(var_dict[\"dense/bias\"], np.zeros((2,))))\n\nexpected_y0 = np.tensordot(x0,w0,axes=[(2,),(0,)])\ny0 = sess.run(y)\nnp.testing.assert_allclose(y0, expected_y0)\n</code></pre>", "body_text": "Ah thanks, tensordot connection makes it more clear.\nIt seems tf.dense behaves by contracting last index of input tensor with first index of weights tensor. The \"flatten\" word was confusing, not sure what it means here\nToy example I made for myself to translate tf.dense to equivalent np.tensordot\ntf.reset_default_graph()\nx0 = np.ones((3, 3, 3))\nw0 = np.arange(6).reshape((3, 2))\nx = tf.constant(x0)\ny = tf.layers.dense(x, 2)\nvar_dict = {v.op.name: v for v in tf.global_variables()}\nassert(var_dict[\"dense/kernel\"].get_shape() == (3, 2))\nsess = tf.InteractiveSession()\nsess.run(tf.global_variables_initializer())\nsess.run(tf.assign(var_dict[\"dense/kernel\"], w0))\nsess.run(tf.assign(var_dict[\"dense/bias\"], np.zeros((2,))))\n\nexpected_y0 = np.tensordot(x0,w0,axes=[(2,),(0,)])\ny0 = sess.run(y)\nnp.testing.assert_allclose(y0, expected_y0)", "body": "Ah thanks, tensordot connection makes it more clear.\r\n\r\nIt seems `tf.dense` behaves by contracting last index of input tensor with first index of weights tensor. The \"flatten\" word was confusing, not sure what it means here\r\n\r\nToy example I made for myself to translate tf.dense to equivalent np.tensordot\r\n\r\n```\r\ntf.reset_default_graph()\r\nx0 = np.ones((3, 3, 3))\r\nw0 = np.arange(6).reshape((3, 2))\r\nx = tf.constant(x0)\r\ny = tf.layers.dense(x, 2)\r\nvar_dict = {v.op.name: v for v in tf.global_variables()}\r\nassert(var_dict[\"dense/kernel\"].get_shape() == (3, 2))\r\nsess = tf.InteractiveSession()\r\nsess.run(tf.global_variables_initializer())\r\nsess.run(tf.assign(var_dict[\"dense/kernel\"], w0))\r\nsess.run(tf.assign(var_dict[\"dense/bias\"], np.zeros((2,))))\r\n\r\nexpected_y0 = np.tensordot(x0,w0,axes=[(2,),(0,)])\r\ny0 = sess.run(y)\r\nnp.testing.assert_allclose(y0, expected_y0)\r\n```"}