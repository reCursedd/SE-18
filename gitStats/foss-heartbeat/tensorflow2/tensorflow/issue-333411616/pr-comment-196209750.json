{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/196209750", "pull_request_review_id": 129720304, "id": 196209750, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NjIwOTc1MA==", "diff_hunk": "@@ -53,92 +54,95 @@ func (op *Operation) Attr(name string) (interface{}, error) {\n func listAttribute(op *Operation, cname *C.char, meta C.TF_AttrMetadata) (interface{}, error) {\n \tstatus := newStatus()\n \n+\t// NOTE: this function allocates 1 extra element in each array passed to C to\n+\t// allow for passing 0 length arrays.\n+\n \tswitch meta._type {\n \tcase C.TF_ATTR_STRING:\n-\t\tvalues := make([]unsafe.Pointer, meta.list_size)\n-\t\tlengths := make([]C.size_t, meta.list_size)\n-\t\tstorage := make([]C.char, meta.total_size)\n+\t\tvalues := make([]unsafe.Pointer, meta.list_size+1)", "path": "tensorflow/go/attrs.go", "position": null, "original_position": 22, "commit_id": "577b256460dfca4e7c429437dded48e76715fee7", "original_commit_id": "b11bf6552b739b50cd7de33310ef9efd7c476216", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "Would it work just as well to specially handle the case for `meta.list_size == 0` instead of creating these larger lists and going through the motions? Something like:\r\n\r\n```go\r\nif meta.list_size == 0 {\r\n  return make([]string, 0), nil\r\n}\r\n```\r\n?", "created_at": "2018-06-18T20:15:04Z", "updated_at": "2018-06-19T21:50:40Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/20103#discussion_r196209750", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/20103", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/196209750"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/20103#discussion_r196209750"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/20103"}}, "body_html": "<p>Would it work just as well to specially handle the case for <code>meta.list_size == 0</code> instead of creating these larger lists and going through the motions? Something like:</p>\n<div class=\"highlight highlight-source-go\"><pre><span class=\"pl-k\">if</span> meta.<span class=\"pl-smi\">list_size</span> == <span class=\"pl-c1\">0</span> {\n  <span class=\"pl-k\">return</span> <span class=\"pl-c1\">make</span>([]<span class=\"pl-k\">string</span>, <span class=\"pl-c1\">0</span>), <span class=\"pl-c1\">nil</span>\n}</pre></div>\n<p>?</p>", "body_text": "Would it work just as well to specially handle the case for meta.list_size == 0 instead of creating these larger lists and going through the motions? Something like:\nif meta.list_size == 0 {\n  return make([]string, 0), nil\n}\n?"}