{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/65598907", "pull_request_review_id": null, "id": 65598907, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY1NTk4OTA3", "diff_hunk": "@@ -100,19 +100,34 @@\n \n \n def rank(input, name=None):\n-  \"\"\"Override for gen_array_ops.rank(), making it work for SparseTensor.\n+  \"\"\"Returns the rank of a tensor.\n+\n+  This operation returns an integer representing the rank of `input`.\n+\n+  For example:\n+\n+  ```prettyprint\n+  # 't' is [[[1, 1, 1], [2, 2, 2]], [[3, 3, 3], [4, 4, 4]]]\n+  # shape of tensor 't' is [2, 2, 3]\n+  rank(t) ==> 3\n+  ```\n+\n+  **Note**: The rank of a tensor is not the same as the rank of a matrix. The\n+  rank of a tensor is the number of indices required to uniquely select each\n+  element of the tensor. Rank is also known as \"order\", \"degree\", or \"ndims.\"\n \n   Args:\n-    input: A `Tensor` or `SparseTensor` object.\n+    input: A `Tensor` or `SparseTensor`.\n     name: A name for the operation (optional).\n \n   Returns:\n     A `Tensor` of type `int32`.\n   \"\"\"\n-  if isinstance(input, ops.SparseTensor):\n-    return size(input.shape)\n-  else:\n-    return gen_array_ops.rank(input)\n+  with ops.op_scope([input], name, \"Rank\") as name:\n+    if isinstance(input, ops.SparseTensor):\n+      return gen_array_ops.size(input.shape)", "path": "tensorflow/python/ops/array_ops.py", "position": null, "original_position": 35, "commit_id": "1071d5c956d6d755637d9195cdd17928743a6436", "original_commit_id": "af38c4c18ec48c973f648a4a47cc9691a289471a", "user": {"login": "concretevitamin", "id": 592670, "node_id": "MDQ6VXNlcjU5MjY3MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/592670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/concretevitamin", "html_url": "https://github.com/concretevitamin", "followers_url": "https://api.github.com/users/concretevitamin/followers", "following_url": "https://api.github.com/users/concretevitamin/following{/other_user}", "gists_url": "https://api.github.com/users/concretevitamin/gists{/gist_id}", "starred_url": "https://api.github.com/users/concretevitamin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/concretevitamin/subscriptions", "organizations_url": "https://api.github.com/users/concretevitamin/orgs", "repos_url": "https://api.github.com/users/concretevitamin/repos", "events_url": "https://api.github.com/users/concretevitamin/events{/privacy}", "received_events_url": "https://api.github.com/users/concretevitamin/received_events", "type": "User", "site_admin": false}, "body": "It'd be a good idea to pass along the nested `name`, like this:\n\n`return gen_array_ops.size(input.shape, name=name)`\n", "created_at": "2016-06-02T19:02:06Z", "updated_at": "2016-06-03T03:32:07Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/2608#discussion_r65598907", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/2608", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/65598907"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/2608#discussion_r65598907"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/2608"}}, "body_html": "<p>It'd be a good idea to pass along the nested <code>name</code>, like this:</p>\n<p><code>return gen_array_ops.size(input.shape, name=name)</code></p>", "body_text": "It'd be a good idea to pass along the nested name, like this:\nreturn gen_array_ops.size(input.shape, name=name)"}