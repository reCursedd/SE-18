{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/327386167", "html_url": "https://github.com/tensorflow/tensorflow/issues/12136#issuecomment-327386167", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12136", "id": 327386167, "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzM4NjE2Nw==", "user": {"login": "namrata-ibm", "id": 21953668, "node_id": "MDQ6VXNlcjIxOTUzNjY4", "avatar_url": "https://avatars3.githubusercontent.com/u/21953668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/namrata-ibm", "html_url": "https://github.com/namrata-ibm", "followers_url": "https://api.github.com/users/namrata-ibm/followers", "following_url": "https://api.github.com/users/namrata-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/namrata-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/namrata-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/namrata-ibm/subscriptions", "organizations_url": "https://api.github.com/users/namrata-ibm/orgs", "repos_url": "https://api.github.com/users/namrata-ibm/repos", "events_url": "https://api.github.com/users/namrata-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/namrata-ibm/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-06T06:18:42Z", "updated_at": "2017-09-06T06:18:42Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=184424\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ali01\">@ali01</a>, I m running : <code>bazel test -c opt //tensorflow/python:quantize_training_test</code>.<br>\nAs per above log, <code> testQuantizedSaveRestore</code> fails with error <code>Shapes must be equal rank, but are 0 and 2 for 'a/Min/AssignValue' (op: 'Assign') with input shapes: [], [1,1].</code></p>\n<p>I tried printing the graph_def object in <code>tensorflow/python/framework/importer.py</code>. It is similar to x86:</p>\n<pre><code>(Pdb) p graph_def\nnode {\n  name: \"save/RestoreV2/shape_and_slices\"\n  op: \"Const\"\n  attr {\n    key: \"dtype\"\n    value {\n      type: DT_STRING\n    }\n  }\n  attr {\n    key: \"value\"\n    value {\n      tensor {\n        dtype: DT_STRING\n        tensor_shape {\n          dim {\n            size: 1\n          }\n        }\n        string_val: \"\"\n      }\n    }\n  }\n}\n.\n.\nnode {\n  name: \"save/restore_all\"\n  op: \"NoOp\"\n  input: \"^save/Assign\"\n  input: \"^save/Assign/_1\"\n  input: \"^save/Assign/_3\"\n  input: \"^save/Assign/_5\"\n  input: \"^save/Assign/_7\"\n}\n.\n.\nlibrary {\n}\nversions {\n  producer: 22\n}\n\n</code></pre>\n<p>So I further printed 2 things:</p>\n<ol>\n<li><code>ops</code> in <a href=\"https://github.com/tensorflow/tensorflow/blob/v1.2.1/tensorflow/python/framework/importer.py#L407\">importer.py</a><br>\nusing:</li>\n</ol>\n<pre><code>+        print(\"op.type:\", op.type)\n         ops.set_shapes_for_outputs(op)\n</code></pre>\n<ol start=\"2\">\n<li>rank in <a href=\"https://github.com/tensorflow/tensorflow/blob/v1.2.1/tensorflow/core/framework/shape_inference.cc#L371\">shape_inference.cc</a> using</li>\n</ol>\n<pre><code>+  printf(\"\\nRank(s0):%d\\n\", Rank(s0));\n+  printf(\"Rank(s1):%d\\n\", Rank(s1));\n</code></pre>\n<p>which gives:</p>\n<pre><code>op.type: Const\nop.type: Const\nop.type: Const\nop.type: Const\nop.type: Const\nop.type: RestoreV2\nRank(s0):1\nRank(s1):1\n\nop.type: VariableV2\nop.type: Assign\nop.type: NoOp\nop.type: Identity\nop.type: Identity\nop.type: Const\nop.type: Assign\nRank(s0):2\nRank(s1):2\n\nop.type: NoOp\nop.type: Const\nop.type: MatMul\nop.type: Const\nop.type: Const\nop.type: Const\nop.type: Rank\nop.type: Range\nop.type: Min\nop.type: Max\nop.type: VariableV2\nop.type: IsVariableInitialized\nop.type: Switch\nop.type: Const\nop.type: Sub\nop.type: Sub\nop.type: Mul\nop.type: Sub\nop.type: Merge\nop.type: Assign\nRank(s0):0\nRank(s1):2\n</code></pre>\n<p>And fails here while on x86, the ranks are both 0 at this point.<br>\nSo I am unable to understand the exact root cause of this on s390x(which is big endian). Could you please provide inputs in understanding how the <code>matmul</code> operation works while importing a graph.</p>", "body_text": "@ali01, I m running : bazel test -c opt //tensorflow/python:quantize_training_test.\nAs per above log,  testQuantizedSaveRestore fails with error Shapes must be equal rank, but are 0 and 2 for 'a/Min/AssignValue' (op: 'Assign') with input shapes: [], [1,1].\nI tried printing the graph_def object in tensorflow/python/framework/importer.py. It is similar to x86:\n(Pdb) p graph_def\nnode {\n  name: \"save/RestoreV2/shape_and_slices\"\n  op: \"Const\"\n  attr {\n    key: \"dtype\"\n    value {\n      type: DT_STRING\n    }\n  }\n  attr {\n    key: \"value\"\n    value {\n      tensor {\n        dtype: DT_STRING\n        tensor_shape {\n          dim {\n            size: 1\n          }\n        }\n        string_val: \"\"\n      }\n    }\n  }\n}\n.\n.\nnode {\n  name: \"save/restore_all\"\n  op: \"NoOp\"\n  input: \"^save/Assign\"\n  input: \"^save/Assign/_1\"\n  input: \"^save/Assign/_3\"\n  input: \"^save/Assign/_5\"\n  input: \"^save/Assign/_7\"\n}\n.\n.\nlibrary {\n}\nversions {\n  producer: 22\n}\n\n\nSo I further printed 2 things:\n\nops in importer.py\nusing:\n\n+        print(\"op.type:\", op.type)\n         ops.set_shapes_for_outputs(op)\n\n\nrank in shape_inference.cc using\n\n+  printf(\"\\nRank(s0):%d\\n\", Rank(s0));\n+  printf(\"Rank(s1):%d\\n\", Rank(s1));\n\nwhich gives:\nop.type: Const\nop.type: Const\nop.type: Const\nop.type: Const\nop.type: Const\nop.type: RestoreV2\nRank(s0):1\nRank(s1):1\n\nop.type: VariableV2\nop.type: Assign\nop.type: NoOp\nop.type: Identity\nop.type: Identity\nop.type: Const\nop.type: Assign\nRank(s0):2\nRank(s1):2\n\nop.type: NoOp\nop.type: Const\nop.type: MatMul\nop.type: Const\nop.type: Const\nop.type: Const\nop.type: Rank\nop.type: Range\nop.type: Min\nop.type: Max\nop.type: VariableV2\nop.type: IsVariableInitialized\nop.type: Switch\nop.type: Const\nop.type: Sub\nop.type: Sub\nop.type: Mul\nop.type: Sub\nop.type: Merge\nop.type: Assign\nRank(s0):0\nRank(s1):2\n\nAnd fails here while on x86, the ranks are both 0 at this point.\nSo I am unable to understand the exact root cause of this on s390x(which is big endian). Could you please provide inputs in understanding how the matmul operation works while importing a graph.", "body": "@ali01, I m running : `bazel test -c opt //tensorflow/python:quantize_training_test`.\r\nAs per above log, ` testQuantizedSaveRestore` fails with error `Shapes must be equal rank, but are 0 and 2 for 'a/Min/AssignValue' (op: 'Assign') with input shapes: [], [1,1].`\r\n\r\nI tried printing the graph_def object in `tensorflow/python/framework/importer.py`. It is similar to x86:\r\n\r\n```\r\n(Pdb) p graph_def\r\nnode {\r\n  name: \"save/RestoreV2/shape_and_slices\"\r\n  op: \"Const\"\r\n  attr {\r\n    key: \"dtype\"\r\n    value {\r\n      type: DT_STRING\r\n    }\r\n  }\r\n  attr {\r\n    key: \"value\"\r\n    value {\r\n      tensor {\r\n        dtype: DT_STRING\r\n        tensor_shape {\r\n          dim {\r\n            size: 1\r\n          }\r\n        }\r\n        string_val: \"\"\r\n      }\r\n    }\r\n  }\r\n}\r\n.\r\n.\r\nnode {\r\n  name: \"save/restore_all\"\r\n  op: \"NoOp\"\r\n  input: \"^save/Assign\"\r\n  input: \"^save/Assign/_1\"\r\n  input: \"^save/Assign/_3\"\r\n  input: \"^save/Assign/_5\"\r\n  input: \"^save/Assign/_7\"\r\n}\r\n.\r\n.\r\nlibrary {\r\n}\r\nversions {\r\n  producer: 22\r\n}\r\n\r\n```\r\n\r\nSo I further printed 2 things:\r\n1.  `ops` in [importer.py](https://github.com/tensorflow/tensorflow/blob/v1.2.1/tensorflow/python/framework/importer.py#L407)\r\nusing:   \r\n```\r\n+        print(\"op.type:\", op.type)\r\n         ops.set_shapes_for_outputs(op)\r\n```\r\n\r\n \r\n 2.  rank in [shape_inference.cc](https://github.com/tensorflow/tensorflow/blob/v1.2.1/tensorflow/core/framework/shape_inference.cc#L371) using\r\n```\r\n+  printf(\"\\nRank(s0):%d\\n\", Rank(s0));\r\n+  printf(\"Rank(s1):%d\\n\", Rank(s1));\r\n```\r\n\r\n which gives:\r\n\r\n```\r\nop.type: Const\r\nop.type: Const\r\nop.type: Const\r\nop.type: Const\r\nop.type: Const\r\nop.type: RestoreV2\r\nRank(s0):1\r\nRank(s1):1\r\n\r\nop.type: VariableV2\r\nop.type: Assign\r\nop.type: NoOp\r\nop.type: Identity\r\nop.type: Identity\r\nop.type: Const\r\nop.type: Assign\r\nRank(s0):2\r\nRank(s1):2\r\n\r\nop.type: NoOp\r\nop.type: Const\r\nop.type: MatMul\r\nop.type: Const\r\nop.type: Const\r\nop.type: Const\r\nop.type: Rank\r\nop.type: Range\r\nop.type: Min\r\nop.type: Max\r\nop.type: VariableV2\r\nop.type: IsVariableInitialized\r\nop.type: Switch\r\nop.type: Const\r\nop.type: Sub\r\nop.type: Sub\r\nop.type: Mul\r\nop.type: Sub\r\nop.type: Merge\r\nop.type: Assign\r\nRank(s0):0\r\nRank(s1):2\r\n```\r\n\r\nAnd fails here while on x86, the ranks are both 0 at this point.\r\nSo I am unable to understand the exact root cause of this on s390x(which is big endian). Could you please provide inputs in understanding how the `matmul` operation works while importing a graph."}