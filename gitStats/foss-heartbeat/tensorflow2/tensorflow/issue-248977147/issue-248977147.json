{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12136", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12136/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12136/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12136/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12136", "id": 248977147, "node_id": "MDU6SXNzdWUyNDg5NzcxNDc=", "number": 12136, "title": "Quantize_training_test fails with matmul operation on Ubuntu 16.04", "user": {"login": "namrata-ibm", "id": 21953668, "node_id": "MDQ6VXNlcjIxOTUzNjY4", "avatar_url": "https://avatars3.githubusercontent.com/u/21953668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/namrata-ibm", "html_url": "https://github.com/namrata-ibm", "followers_url": "https://api.github.com/users/namrata-ibm/followers", "following_url": "https://api.github.com/users/namrata-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/namrata-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/namrata-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/namrata-ibm/subscriptions", "organizations_url": "https://api.github.com/users/namrata-ibm/orgs", "repos_url": "https://api.github.com/users/namrata-ibm/repos", "events_url": "https://api.github.com/users/namrata-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/namrata-ibm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-09T09:53:31Z", "updated_at": "2017-09-20T12:09:17Z", "closed_at": "2017-09-20T12:09:17Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Source</li>\n<li><strong>TensorFlow version (use command below)</strong>:  'v1.2.1-0-gb4957ff', '1.2.1'</li>\n<li><strong>Python version</strong>:  2.7.12</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.4.5</li>\n<li><strong>CUDA/cuDNN version</strong>: No GPU</li>\n<li><strong>GPU model and memory</strong>: No GPU</li>\n<li><strong>Exact command to reproduce</strong>: bazel test -c opt //tensorflow/python:quantize_training_test</li>\n</ul>\n<h3>The problem</h3>\n<p>The <code>testQuantizedSaveRestore</code> from  <code>//tensorflow/python:quantize_training_test</code> is failing on s390x while importing graph <a href=\"https://github.com/tensorflow/tensorflow/blob/v1.2.1/tensorflow/python/training/quantize_training_test.py#L72\">here.</a></p>\n<p>The error message shown is :<br>\n<code>ValueError: Shapes must be equal rank, but are 0 and 2 for 'a/Min/AssignValue' (op: 'Assign') with input shapes: [], [1,1]. </code><br>\nThe check for this failure is at <a href=\"https://github.com/tensorflow/tensorflow/blob/v1.2.1/tensorflow/core/framework/shape_inference.cc#L374\">Merge function</a> . This Merge is called by <code>Assign</code> Op kernel.</p>\n<p>I tried changing the <code>math_ops.matmul</code> operation from the above test to <code>math_ops.subtract/minimum/multiply</code>. With these operations the test passes after removing asserts for <code>'a/Min/Variable:0'</code> or <code>'b/read/Max/Variable:0'</code> etc. I suppose other operations do not create these tensors.</p>\n<p>Could anyone please provide some inputs on this failure? I am not aware about the computations that are happening when graph is imported with the <code>matmul</code> operation.</p>\n<h3>Source code / logs</h3>\n<pre><code>.E.\n======================================================================\nERROR: testQuantizedSaveRestore (__main__.PywrapQuantizeTrainingTest)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/tensorflow/bazel-out/local-opt/bin/tensorflow/python/quantize_training_test.runfiles/org_tensorflow/tensorflow/python/training/quantize_training_test.py\", line 73, in testQuantizedSaveRestore\n    _ = importer.import_graph_def(result, name='')\n  File \"/home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/tensorflow/bazel-out/local-opt/bin/tensorflow/python/quantize_training_test.runfiles/org_tensorflow/tensorflow/python/framework/importer.py\", line 409, in import_graph_def\n    ops.set_shapes_for_outputs(op)\n  File \"/home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/tensorflow/bazel-out/local-opt/bin/tensorflow/python/quantize_training_test.runfiles/org_tensorflow/tensorflow/python/framework/ops.py\", line 1873, in set_shapes_for_outputs\n    shapes = shape_func(op)\n  File \"/home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/tensorflow/bazel-out/local-opt/bin/tensorflow/python/quantize_training_test.runfiles/org_tensorflow/tensorflow/python/framework/ops.py\", line 1823, in call_with_requiring\n    return call_cpp_shape_fn(op, require_shape_fn=True)\n  File \"/home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/tensorflow/bazel-out/local-opt/bin/tensorflow/python/quantize_training_test.runfiles/org_tensorflow/tensorflow/python/framework/common_shapes.py\", line 610, in call_cpp_shape_fn\n    debug_python_shape_fn, require_shape_fn)\n  File \"/home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/tensorflow/bazel-out/local-opt/bin/tensorflow/python/quantize_training_test.runfiles/org_tensorflow/tensorflow/python/framework/common_shapes.py\", line 676, in _call_cpp_shape_fn_impl\n    raise ValueError(err.message)\nValueError: Shapes must be equal rank, but are 0 and 2 for 'a/Min/AssignValue' (op: 'Assign') with input shapes: [], [1,1].\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04\nTensorFlow installed from (source or binary): Source\nTensorFlow version (use command below):  'v1.2.1-0-gb4957ff', '1.2.1'\nPython version:  2.7.12\nBazel version (if compiling from source): 0.4.5\nCUDA/cuDNN version: No GPU\nGPU model and memory: No GPU\nExact command to reproduce: bazel test -c opt //tensorflow/python:quantize_training_test\n\nThe problem\nThe testQuantizedSaveRestore from  //tensorflow/python:quantize_training_test is failing on s390x while importing graph here.\nThe error message shown is :\nValueError: Shapes must be equal rank, but are 0 and 2 for 'a/Min/AssignValue' (op: 'Assign') with input shapes: [], [1,1]. \nThe check for this failure is at Merge function . This Merge is called by Assign Op kernel.\nI tried changing the math_ops.matmul operation from the above test to math_ops.subtract/minimum/multiply. With these operations the test passes after removing asserts for 'a/Min/Variable:0' or 'b/read/Max/Variable:0' etc. I suppose other operations do not create these tensors.\nCould anyone please provide some inputs on this failure? I am not aware about the computations that are happening when graph is imported with the matmul operation.\nSource code / logs\n.E.\n======================================================================\nERROR: testQuantizedSaveRestore (__main__.PywrapQuantizeTrainingTest)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/tensorflow/bazel-out/local-opt/bin/tensorflow/python/quantize_training_test.runfiles/org_tensorflow/tensorflow/python/training/quantize_training_test.py\", line 73, in testQuantizedSaveRestore\n    _ = importer.import_graph_def(result, name='')\n  File \"/home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/tensorflow/bazel-out/local-opt/bin/tensorflow/python/quantize_training_test.runfiles/org_tensorflow/tensorflow/python/framework/importer.py\", line 409, in import_graph_def\n    ops.set_shapes_for_outputs(op)\n  File \"/home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/tensorflow/bazel-out/local-opt/bin/tensorflow/python/quantize_training_test.runfiles/org_tensorflow/tensorflow/python/framework/ops.py\", line 1873, in set_shapes_for_outputs\n    shapes = shape_func(op)\n  File \"/home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/tensorflow/bazel-out/local-opt/bin/tensorflow/python/quantize_training_test.runfiles/org_tensorflow/tensorflow/python/framework/ops.py\", line 1823, in call_with_requiring\n    return call_cpp_shape_fn(op, require_shape_fn=True)\n  File \"/home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/tensorflow/bazel-out/local-opt/bin/tensorflow/python/quantize_training_test.runfiles/org_tensorflow/tensorflow/python/framework/common_shapes.py\", line 610, in call_cpp_shape_fn\n    debug_python_shape_fn, require_shape_fn)\n  File \"/home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/tensorflow/bazel-out/local-opt/bin/tensorflow/python/quantize_training_test.runfiles/org_tensorflow/tensorflow/python/framework/common_shapes.py\", line 676, in _call_cpp_shape_fn_impl\n    raise ValueError(err.message)\nValueError: Shapes must be equal rank, but are 0 and 2 for 'a/Min/AssignValue' (op: 'Assign') with input shapes: [], [1,1].", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: Source\r\n- **TensorFlow version (use command below)**:  'v1.2.1-0-gb4957ff', '1.2.1'\r\n- **Python version**:  2.7.12\r\n- **Bazel version (if compiling from source)**: 0.4.5\r\n- **CUDA/cuDNN version**: No GPU\r\n- **GPU model and memory**: No GPU\r\n- **Exact command to reproduce**: bazel test -c opt //tensorflow/python:quantize_training_test\r\n\r\n### The problem\r\nThe `testQuantizedSaveRestore` from  `//tensorflow/python:quantize_training_test` is failing on s390x while importing graph [here.](https://github.com/tensorflow/tensorflow/blob/v1.2.1/tensorflow/python/training/quantize_training_test.py#L72) \r\n\r\nThe error message shown is : \r\n`ValueError: Shapes must be equal rank, but are 0 and 2 for 'a/Min/AssignValue' (op: 'Assign') with input shapes: [], [1,1].\r\n`\r\nThe check for this failure is at [Merge function](https://github.com/tensorflow/tensorflow/blob/v1.2.1/tensorflow/core/framework/shape_inference.cc#L374) . This Merge is called by `Assign` Op kernel. \r\n\r\nI tried changing the `math_ops.matmul` operation from the above test to `math_ops.subtract/minimum/multiply`. With these operations the test passes after removing asserts for `'a/Min/Variable:0'` or `'b/read/Max/Variable:0'` etc. I suppose other operations do not create these tensors. \r\n\r\nCould anyone please provide some inputs on this failure? I am not aware about the computations that are happening when graph is imported with the `matmul` operation.\r\n\r\n### Source code / logs\r\n```\r\n.E.\r\n======================================================================\r\nERROR: testQuantizedSaveRestore (__main__.PywrapQuantizeTrainingTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/tensorflow/bazel-out/local-opt/bin/tensorflow/python/quantize_training_test.runfiles/org_tensorflow/tensorflow/python/training/quantize_training_test.py\", line 73, in testQuantizedSaveRestore\r\n    _ = importer.import_graph_def(result, name='')\r\n  File \"/home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/tensorflow/bazel-out/local-opt/bin/tensorflow/python/quantize_training_test.runfiles/org_tensorflow/tensorflow/python/framework/importer.py\", line 409, in import_graph_def\r\n    ops.set_shapes_for_outputs(op)\r\n  File \"/home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/tensorflow/bazel-out/local-opt/bin/tensorflow/python/quantize_training_test.runfiles/org_tensorflow/tensorflow/python/framework/ops.py\", line 1873, in set_shapes_for_outputs\r\n    shapes = shape_func(op)\r\n  File \"/home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/tensorflow/bazel-out/local-opt/bin/tensorflow/python/quantize_training_test.runfiles/org_tensorflow/tensorflow/python/framework/ops.py\", line 1823, in call_with_requiring\r\n    return call_cpp_shape_fn(op, require_shape_fn=True)\r\n  File \"/home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/tensorflow/bazel-out/local-opt/bin/tensorflow/python/quantize_training_test.runfiles/org_tensorflow/tensorflow/python/framework/common_shapes.py\", line 610, in call_cpp_shape_fn\r\n    debug_python_shape_fn, require_shape_fn)\r\n  File \"/home/test/.cache/bazel/_bazel_test/24685d064c07f7346b48c2d13ec3ad69/execroot/tensorflow/bazel-out/local-opt/bin/tensorflow/python/quantize_training_test.runfiles/org_tensorflow/tensorflow/python/framework/common_shapes.py\", line 676, in _call_cpp_shape_fn_impl\r\n    raise ValueError(err.message)\r\nValueError: Shapes must be equal rank, but are 0 and 2 for 'a/Min/AssignValue' (op: 'Assign') with input shapes: [], [1,1].\r\n```\r\n"}