{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/317148101", "html_url": "https://github.com/tensorflow/tensorflow/issues/11679#issuecomment-317148101", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11679", "id": 317148101, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzE0ODEwMQ==", "user": {"login": "eddiemundo", "id": 929157, "node_id": "MDQ6VXNlcjkyOTE1Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/929157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddiemundo", "html_url": "https://github.com/eddiemundo", "followers_url": "https://api.github.com/users/eddiemundo/followers", "following_url": "https://api.github.com/users/eddiemundo/following{/other_user}", "gists_url": "https://api.github.com/users/eddiemundo/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddiemundo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddiemundo/subscriptions", "organizations_url": "https://api.github.com/users/eddiemundo/orgs", "repos_url": "https://api.github.com/users/eddiemundo/repos", "events_url": "https://api.github.com/users/eddiemundo/events{/privacy}", "received_events_url": "https://api.github.com/users/eddiemundo/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-22T02:28:45Z", "updated_at": "2017-07-22T02:28:45Z", "author_association": "NONE", "body_html": "<p>I simplified the example some more and tried storing the iterator to feed using <code>tf.add_to_collections()</code> and using that to get the string handle instead of storing the string handle directly. I get a different error this time regarding initialization, but it exits fine.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">from</span> tensorflow.contrib.data <span class=\"pl-k\">import</span> Dataset, Iterator\n\n<span class=\"pl-c1\">BATCH_SIZE</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">2</span>\n<span class=\"pl-c1\">ITERATION_COUNT</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1</span>\ndataset <span class=\"pl-k\">=</span> Dataset.from_tensor_slices(tf.constant([[<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>],\n                                                  [<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>],\n                                                  [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">0</span>],\n                                                  [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>]], <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32))\niterator_handle_placeholder <span class=\"pl-k\">=</span> tf.placeholder(tf.string, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>[])\niterator <span class=\"pl-k\">=</span> Iterator.from_string_handle(iterator_handle_placeholder, dataset.output_types, dataset.output_shapes)\ndataset_iterator <span class=\"pl-k\">=</span> dataset.make_one_shot_iterator()\n\nelement <span class=\"pl-k\">=</span> iterator.get_next()\nv <span class=\"pl-k\">=</span> tf.get_variable(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>v<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">initializer</span><span class=\"pl-k\">=</span>tf.zeros([]))\n\nsaver <span class=\"pl-k\">=</span> tf.train.Saver()\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> session:\n    session.run(tf.global_variables_initializer())\n    dataset_iterator_handle <span class=\"pl-k\">=</span> session.run(dataset_iterator.string_handle())\n    tf.add_to_collection(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>iterator_handle_placeholder<span class=\"pl-pds\">'</span></span>, iterator_handle_placeholder)\n    tf.add_to_collection(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>iterator<span class=\"pl-pds\">'</span></span>, dataset_iterator)\n    tf.add_to_collection(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>element<span class=\"pl-pds\">'</span></span>, element)\n    output <span class=\"pl-k\">=</span> session.run(element, {iterator_handle_placeholder: dataset_iterator_handle})\n    <span class=\"pl-c1\">print</span>(output)\n    saver.save(session, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>checkpoints/fufu<span class=\"pl-pds\">'</span></span>)\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> session:\n    saver <span class=\"pl-k\">=</span> tf.train.import_meta_graph(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>checkpoints/fufu.meta<span class=\"pl-pds\">'</span></span>)\n    saver.restore(session, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>checkpoints/fufu<span class=\"pl-pds\">'</span></span>)\n    iterator_handle_placeholder <span class=\"pl-k\">=</span> tf.get_collection(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>iterator_handle_placeholder<span class=\"pl-pds\">'</span></span>)[<span class=\"pl-c1\">0</span>]\n    dataset_iterator_handle <span class=\"pl-k\">=</span> session.run(tf.get_collection(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>iterator<span class=\"pl-pds\">'</span></span>)[<span class=\"pl-c1\">0</span>].string_handle())\n    element <span class=\"pl-k\">=</span> tf.get_collection(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>element<span class=\"pl-pds\">'</span></span>)[<span class=\"pl-c1\">0</span>]\n    output <span class=\"pl-k\">=</span> session.run(element, {iterator_handle_placeholder: dataset_iterator_handle})\n    <span class=\"pl-c1\">print</span>(output)</pre></div>\n<p>Error message is</p>\n<pre><code>C:\\Users\\Jonathan\\Miniconda3\\envs\\ai\\python.exe \"C:/Software Projects/ai/tensorflow/datasettest.py\"\n2017-07-21 22:15:13.371342: W C:\\tf_jenkins\\home\\workspace\\nightly-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\platform\\cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\n2017-07-21 22:15:13.612687: I C:\\tf_jenkins\\home\\workspace\\nightly-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:955] Found device 0 with properties: \nname: GeForce GTX 670\nmajor: 3 minor: 0 memoryClockRate (GHz) 0.98\npciBusID 0000:02:00.0\nTotal memory: 2.00GiB\nFree memory: 1.64GiB\n2017-07-21 22:15:13.612996: I C:\\tf_jenkins\\home\\workspace\\nightly-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:976] DMA: 0 \n2017-07-21 22:15:13.613141: I C:\\tf_jenkins\\home\\workspace\\nightly-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:986] 0:   Y \n2017-07-21 22:15:13.613302: I C:\\tf_jenkins\\home\\workspace\\nightly-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1045] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX 670, pci bus id: 0000:02:00.0)\n[ 0.  0.]\nWARNING:tensorflow:Error encountered when serializing iterator.\nType is unsupported, or the types of the items don't match field type in CollectionDef.\n'Iterator' object has no attribute 'name'\n2017-07-21 22:15:13.999859: I C:\\tf_jenkins\\home\\workspace\\nightly-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1045] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX 670, pci bus id: 0000:02:00.0)\n[ 0.  0.]\n\nProcess finished with exit code 0\n</code></pre>", "body_text": "I simplified the example some more and tried storing the iterator to feed using tf.add_to_collections() and using that to get the string handle instead of storing the string handle directly. I get a different error this time regarding initialization, but it exits fine.\nimport tensorflow as tf\nfrom tensorflow.contrib.data import Dataset, Iterator\n\nBATCH_SIZE = 2\nITERATION_COUNT = 1\ndataset = Dataset.from_tensor_slices(tf.constant([[0, 0],\n                                                  [0, 1],\n                                                  [1, 0],\n                                                  [1, 1]], dtype=tf.float32))\niterator_handle_placeholder = tf.placeholder(tf.string, shape=[])\niterator = Iterator.from_string_handle(iterator_handle_placeholder, dataset.output_types, dataset.output_shapes)\ndataset_iterator = dataset.make_one_shot_iterator()\n\nelement = iterator.get_next()\nv = tf.get_variable('v', initializer=tf.zeros([]))\n\nsaver = tf.train.Saver()\n\nwith tf.Session() as session:\n    session.run(tf.global_variables_initializer())\n    dataset_iterator_handle = session.run(dataset_iterator.string_handle())\n    tf.add_to_collection('iterator_handle_placeholder', iterator_handle_placeholder)\n    tf.add_to_collection('iterator', dataset_iterator)\n    tf.add_to_collection('element', element)\n    output = session.run(element, {iterator_handle_placeholder: dataset_iterator_handle})\n    print(output)\n    saver.save(session, 'checkpoints/fufu')\n\nwith tf.Session() as session:\n    saver = tf.train.import_meta_graph('checkpoints/fufu.meta')\n    saver.restore(session, 'checkpoints/fufu')\n    iterator_handle_placeholder = tf.get_collection('iterator_handle_placeholder')[0]\n    dataset_iterator_handle = session.run(tf.get_collection('iterator')[0].string_handle())\n    element = tf.get_collection('element')[0]\n    output = session.run(element, {iterator_handle_placeholder: dataset_iterator_handle})\n    print(output)\nError message is\nC:\\Users\\Jonathan\\Miniconda3\\envs\\ai\\python.exe \"C:/Software Projects/ai/tensorflow/datasettest.py\"\n2017-07-21 22:15:13.371342: W C:\\tf_jenkins\\home\\workspace\\nightly-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\platform\\cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\n2017-07-21 22:15:13.612687: I C:\\tf_jenkins\\home\\workspace\\nightly-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:955] Found device 0 with properties: \nname: GeForce GTX 670\nmajor: 3 minor: 0 memoryClockRate (GHz) 0.98\npciBusID 0000:02:00.0\nTotal memory: 2.00GiB\nFree memory: 1.64GiB\n2017-07-21 22:15:13.612996: I C:\\tf_jenkins\\home\\workspace\\nightly-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:976] DMA: 0 \n2017-07-21 22:15:13.613141: I C:\\tf_jenkins\\home\\workspace\\nightly-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:986] 0:   Y \n2017-07-21 22:15:13.613302: I C:\\tf_jenkins\\home\\workspace\\nightly-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1045] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 670, pci bus id: 0000:02:00.0)\n[ 0.  0.]\nWARNING:tensorflow:Error encountered when serializing iterator.\nType is unsupported, or the types of the items don't match field type in CollectionDef.\n'Iterator' object has no attribute 'name'\n2017-07-21 22:15:13.999859: I C:\\tf_jenkins\\home\\workspace\\nightly-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1045] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 670, pci bus id: 0000:02:00.0)\n[ 0.  0.]\n\nProcess finished with exit code 0", "body": "I simplified the example some more and tried storing the iterator to feed using `tf.add_to_collections()` and using that to get the string handle instead of storing the string handle directly. I get a different error this time regarding initialization, but it exits fine.\r\n```python\r\nimport tensorflow as tf\r\nfrom tensorflow.contrib.data import Dataset, Iterator\r\n\r\nBATCH_SIZE = 2\r\nITERATION_COUNT = 1\r\ndataset = Dataset.from_tensor_slices(tf.constant([[0, 0],\r\n                                                  [0, 1],\r\n                                                  [1, 0],\r\n                                                  [1, 1]], dtype=tf.float32))\r\niterator_handle_placeholder = tf.placeholder(tf.string, shape=[])\r\niterator = Iterator.from_string_handle(iterator_handle_placeholder, dataset.output_types, dataset.output_shapes)\r\ndataset_iterator = dataset.make_one_shot_iterator()\r\n\r\nelement = iterator.get_next()\r\nv = tf.get_variable('v', initializer=tf.zeros([]))\r\n\r\nsaver = tf.train.Saver()\r\n\r\nwith tf.Session() as session:\r\n    session.run(tf.global_variables_initializer())\r\n    dataset_iterator_handle = session.run(dataset_iterator.string_handle())\r\n    tf.add_to_collection('iterator_handle_placeholder', iterator_handle_placeholder)\r\n    tf.add_to_collection('iterator', dataset_iterator)\r\n    tf.add_to_collection('element', element)\r\n    output = session.run(element, {iterator_handle_placeholder: dataset_iterator_handle})\r\n    print(output)\r\n    saver.save(session, 'checkpoints/fufu')\r\n\r\nwith tf.Session() as session:\r\n    saver = tf.train.import_meta_graph('checkpoints/fufu.meta')\r\n    saver.restore(session, 'checkpoints/fufu')\r\n    iterator_handle_placeholder = tf.get_collection('iterator_handle_placeholder')[0]\r\n    dataset_iterator_handle = session.run(tf.get_collection('iterator')[0].string_handle())\r\n    element = tf.get_collection('element')[0]\r\n    output = session.run(element, {iterator_handle_placeholder: dataset_iterator_handle})\r\n    print(output)\r\n```\r\nError message is \r\n```\r\nC:\\Users\\Jonathan\\Miniconda3\\envs\\ai\\python.exe \"C:/Software Projects/ai/tensorflow/datasettest.py\"\r\n2017-07-21 22:15:13.371342: W C:\\tf_jenkins\\home\\workspace\\nightly-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\platform\\cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-07-21 22:15:13.612687: I C:\\tf_jenkins\\home\\workspace\\nightly-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:955] Found device 0 with properties: \r\nname: GeForce GTX 670\r\nmajor: 3 minor: 0 memoryClockRate (GHz) 0.98\r\npciBusID 0000:02:00.0\r\nTotal memory: 2.00GiB\r\nFree memory: 1.64GiB\r\n2017-07-21 22:15:13.612996: I C:\\tf_jenkins\\home\\workspace\\nightly-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:976] DMA: 0 \r\n2017-07-21 22:15:13.613141: I C:\\tf_jenkins\\home\\workspace\\nightly-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:986] 0:   Y \r\n2017-07-21 22:15:13.613302: I C:\\tf_jenkins\\home\\workspace\\nightly-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1045] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 670, pci bus id: 0000:02:00.0)\r\n[ 0.  0.]\r\nWARNING:tensorflow:Error encountered when serializing iterator.\r\nType is unsupported, or the types of the items don't match field type in CollectionDef.\r\n'Iterator' object has no attribute 'name'\r\n2017-07-21 22:15:13.999859: I C:\\tf_jenkins\\home\\workspace\\nightly-win\\M\\windows-gpu\\PY\\36\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:1045] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 670, pci bus id: 0000:02:00.0)\r\n[ 0.  0.]\r\n\r\nProcess finished with exit code 0\r\n```"}