{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/397972741", "html_url": "https://github.com/tensorflow/tensorflow/issues/11679#issuecomment-397972741", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11679", "id": 397972741, "node_id": "MDEyOklzc3VlQ29tbWVudDM5Nzk3Mjc0MQ==", "user": {"login": "annarailton", "id": 4105011, "node_id": "MDQ6VXNlcjQxMDUwMTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/4105011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/annarailton", "html_url": "https://github.com/annarailton", "followers_url": "https://api.github.com/users/annarailton/followers", "following_url": "https://api.github.com/users/annarailton/following{/other_user}", "gists_url": "https://api.github.com/users/annarailton/gists{/gist_id}", "starred_url": "https://api.github.com/users/annarailton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/annarailton/subscriptions", "organizations_url": "https://api.github.com/users/annarailton/orgs", "repos_url": "https://api.github.com/users/annarailton/repos", "events_url": "https://api.github.com/users/annarailton/events{/privacy}", "received_events_url": "https://api.github.com/users/annarailton/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-18T08:01:07Z", "updated_at": "2018-06-18T08:01:07Z", "author_association": "NONE", "body_html": "<p>Glad someone found the examples helpful. I was going a bit nuts not being able to find an example of what I thought would be a fairly common use case.</p>\n<p>I have no idea RE efficiency of this. I agree that using a <code>reinitializable_iterator</code> seems much more elegant, but like you I haven't managed to get it working with a restored model. The op lookup from a handle is <em>probably</em> OK (feels like using <code>get_variable()</code> elsewhere in the graph to get some weights), but this is mere conjecture.</p>\n<p>The great irony of all this is I've not noticed any difference between using <code>tf.data.Dataset</code> + iterators and just passing in data via a <code>feed_dict</code> like most of the tutorials do. I'm assuming there's an amount of data where using iterators becomes better but I've not hit it yet.</p>", "body_text": "Glad someone found the examples helpful. I was going a bit nuts not being able to find an example of what I thought would be a fairly common use case.\nI have no idea RE efficiency of this. I agree that using a reinitializable_iterator seems much more elegant, but like you I haven't managed to get it working with a restored model. The op lookup from a handle is probably OK (feels like using get_variable() elsewhere in the graph to get some weights), but this is mere conjecture.\nThe great irony of all this is I've not noticed any difference between using tf.data.Dataset + iterators and just passing in data via a feed_dict like most of the tutorials do. I'm assuming there's an amount of data where using iterators becomes better but I've not hit it yet.", "body": "Glad someone found the examples helpful. I was going a bit nuts not being able to find an example of what I thought would be a fairly common use case. \r\n\r\nI have no idea RE efficiency of this. I agree that using a `reinitializable_iterator` seems much more elegant, but like you I haven't managed to get it working with a restored model. The op lookup from a handle is _probably_ OK (feels like using `get_variable()` elsewhere in the graph to get some weights), but this is mere conjecture. \r\n\r\nThe great irony of all this is I've not noticed any difference between using `tf.data.Dataset` + iterators and just passing in data via a `feed_dict` like most of the tutorials do. I'm assuming there's an amount of data where using iterators becomes better but I've not hit it yet. "}