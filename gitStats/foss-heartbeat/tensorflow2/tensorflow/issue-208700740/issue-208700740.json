{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7662", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7662/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7662/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7662/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7662", "id": 208700740, "node_id": "MDU6SXNzdWUyMDg3MDA3NDA=", "number": 7662, "title": "Add a dynamic_partial_sum operator to tensorflow?", "user": {"login": "zasdfgbnm", "id": 1032377, "node_id": "MDQ6VXNlcjEwMzIzNzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1032377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zasdfgbnm", "html_url": "https://github.com/zasdfgbnm", "followers_url": "https://api.github.com/users/zasdfgbnm/followers", "following_url": "https://api.github.com/users/zasdfgbnm/following{/other_user}", "gists_url": "https://api.github.com/users/zasdfgbnm/gists{/gist_id}", "starred_url": "https://api.github.com/users/zasdfgbnm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zasdfgbnm/subscriptions", "organizations_url": "https://api.github.com/users/zasdfgbnm/orgs", "repos_url": "https://api.github.com/users/zasdfgbnm/repos", "events_url": "https://api.github.com/users/zasdfgbnm/events{/privacy}", "received_events_url": "https://api.github.com/users/zasdfgbnm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-02-19T07:30:10Z", "updated_at": "2017-04-22T07:34:00Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>Hi,</p>\n<p>In my application I need to do operations that dynamically sum some rows of a matrix to get a new matrix.  There will be an input tensor named \"index\" that guides which part of the tensor to be summed.</p>\n<p>An example is, if the input matrix is</p>\n<div class=\"highlight highlight-source-python\"><pre>[ [   <span class=\"pl-c1\">1</span>,   <span class=\"pl-c1\">1</span>,   <span class=\"pl-c1\">1</span>],\n  [  <span class=\"pl-c1\">10</span>,  <span class=\"pl-c1\">10</span>,  <span class=\"pl-c1\">10</span>],\n  [ <span class=\"pl-c1\">100</span>, <span class=\"pl-c1\">100</span>, <span class=\"pl-c1\">100</span>] ]</pre></div>\n<p>And the index is</p>\n<div class=\"highlight highlight-source-python\"><pre>[ [ <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">2</span> ],\n  [ <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span> ]]</pre></div>\n<p>which simply says the output tensor will have two rows (because the \"index\" have two rows), the first row is the sum of rows with row number i that satisfies <code>0 &lt;= i &lt; 2</code> in the input, and the second row is the sum of rows with row number 2. So the result should be</p>\n<div class=\"highlight highlight-source-python\"><pre>[ [  <span class=\"pl-c1\">11</span>,  <span class=\"pl-c1\">11</span>,  <span class=\"pl-c1\">11</span>],\n  [ <span class=\"pl-c1\">100</span>, <span class=\"pl-c1\">100</span>, <span class=\"pl-c1\">100</span>] ]</pre></div>\n<p>I don't find any existing operation that does this job, so I implement it (support only 2d matrix and GPU) by myself.  Since I already have an implementation, I'm not requesting a new feature here. But I do want to know that if the tensorflow team is interested in adding this operation as part of tensorflow. If the answer is yes, I will add CPU support (maybe also xla? I have no idea on how to add xla support yet), and then create a pull request for that.</p>", "body_text": "Hi,\nIn my application I need to do operations that dynamically sum some rows of a matrix to get a new matrix.  There will be an input tensor named \"index\" that guides which part of the tensor to be summed.\nAn example is, if the input matrix is\n[ [   1,   1,   1],\n  [  10,  10,  10],\n  [ 100, 100, 100] ]\nAnd the index is\n[ [ 0, 2 ],\n  [ 2, 3 ]]\nwhich simply says the output tensor will have two rows (because the \"index\" have two rows), the first row is the sum of rows with row number i that satisfies 0 <= i < 2 in the input, and the second row is the sum of rows with row number 2. So the result should be\n[ [  11,  11,  11],\n  [ 100, 100, 100] ]\nI don't find any existing operation that does this job, so I implement it (support only 2d matrix and GPU) by myself.  Since I already have an implementation, I'm not requesting a new feature here. But I do want to know that if the tensorflow team is interested in adding this operation as part of tensorflow. If the answer is yes, I will add CPU support (maybe also xla? I have no idea on how to add xla support yet), and then create a pull request for that.", "body": "Hi,\r\n\r\nIn my application I need to do operations that dynamically sum some rows of a matrix to get a new matrix.  There will be an input tensor named \"index\" that guides which part of the tensor to be summed. \r\n\r\nAn example is, if the input matrix is\r\n```python\r\n[ [   1,   1,   1],\r\n  [  10,  10,  10],\r\n  [ 100, 100, 100] ]\r\n```\r\nAnd the index is\r\n```python\r\n[ [ 0, 2 ],\r\n  [ 2, 3 ]]\r\n```\r\nwhich simply says the output tensor will have two rows (because the \"index\" have two rows), the first row is the sum of rows with row number i that satisfies `0 <= i < 2` in the input, and the second row is the sum of rows with row number 2. So the result should be\r\n```python\r\n[ [  11,  11,  11],\r\n  [ 100, 100, 100] ]\r\n```\r\n\r\nI don't find any existing operation that does this job, so I implement it (support only 2d matrix and GPU) by myself.  Since I already have an implementation, I'm not requesting a new feature here. But I do want to know that if the tensorflow team is interested in adding this operation as part of tensorflow. If the answer is yes, I will add CPU support (maybe also xla? I have no idea on how to add xla support yet), and then create a pull request for that."}