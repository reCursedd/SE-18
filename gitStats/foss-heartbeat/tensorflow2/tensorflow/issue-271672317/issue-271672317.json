{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14306", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14306/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14306/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14306/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14306", "id": 271672317, "node_id": "MDU6SXNzdWUyNzE2NzIzMTc=", "number": 14306, "title": "Segmentation fault when using bidirectional_dynamic_rnn + orthogonal_initializer", "user": {"login": "nryant", "id": 716377, "node_id": "MDQ6VXNlcjcxNjM3Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/716377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nryant", "html_url": "https://github.com/nryant", "followers_url": "https://api.github.com/users/nryant/followers", "following_url": "https://api.github.com/users/nryant/following{/other_user}", "gists_url": "https://api.github.com/users/nryant/gists{/gist_id}", "starred_url": "https://api.github.com/users/nryant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nryant/subscriptions", "organizations_url": "https://api.github.com/users/nryant/orgs", "repos_url": "https://api.github.com/users/nryant/repos", "events_url": "https://api.github.com/users/nryant/events{/privacy}", "received_events_url": "https://api.github.com/users/nryant/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-11-07T00:47:34Z", "updated_at": "2018-03-20T18:48:54Z", "closed_at": "2018-03-20T18:48:54Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code</strong>: Yes</li>\n<li><strong>OS Platform and Distribution</strong>: Ubuntu 14.04 LTS (kernel: 3.16.0-77-generic)</li>\n<li><strong>TensorFlow installed from</strong>: source</li>\n<li><strong>TensorFlow version</strong>: 1.4.0rc1 (<a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/ae04712e3b74bc85445e12c90e375f980a907e2d/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/ae04712e3b74bc85445e12c90e375f980a907e2d\"><tt>ae04712</tt></a>)</li>\n<li><strong>Python version</strong>:  2.7.10</li>\n<li><strong>Bazel version</strong>: 0.7.0</li>\n<li><strong>GCC/Compiler version</strong>: 4.8.5</li>\n<li><strong>CUDA/cuDNN version</strong>: 8.0/6.0.21</li>\n<li><strong>GPU model and memory</strong>: Maxwell Titan X with 12 GiB memory</li>\n<li><strong>Exact command to reproduce</strong>: see <a href=\"https://gist.github.com/nryant/57f7810e333fa94379cad201eeff24c8\">https://gist.github.com/nryant/57f7810e333fa94379cad201eeff24c8</a></li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I recently upgraded from 1.4.0-rc0 to 1.4.0-rc1 and found that a number of my model architectures fail to compile. After a bit of a detective work, I tracked the issue down to the use of <code>bidirectional_dynamic_rnn</code> in conjunction with a <code>VariableScope</code> in which <code>initializer=orthogonal_initializer()</code>. See, for example, the test program at</p>\n<pre><code>https://gist.github.com/nryant/57f7810e333fa94379cad201eeff24c8\n</code></pre>\n<p>Running this will result in a segfault with 1.4.0-rc1, but not with earlier versions. The problem is specific to the combination of <code>orthogonal_initializer</code> and <code>bidirectional_dynamic_rnn</code> and does not replicate with other initializers (e.g., <code>uniform_unit_scaling_initializer</code>) or <code>dynamic_rnn</code>. Nor does the choice of RNN cell appear to matter.</p>", "body_text": "System information\n\nHave I written custom code: Yes\nOS Platform and Distribution: Ubuntu 14.04 LTS (kernel: 3.16.0-77-generic)\nTensorFlow installed from: source\nTensorFlow version: 1.4.0rc1 (ae04712)\nPython version:  2.7.10\nBazel version: 0.7.0\nGCC/Compiler version: 4.8.5\nCUDA/cuDNN version: 8.0/6.0.21\nGPU model and memory: Maxwell Titan X with 12 GiB memory\nExact command to reproduce: see https://gist.github.com/nryant/57f7810e333fa94379cad201eeff24c8\n\nDescribe the problem\nI recently upgraded from 1.4.0-rc0 to 1.4.0-rc1 and found that a number of my model architectures fail to compile. After a bit of a detective work, I tracked the issue down to the use of bidirectional_dynamic_rnn in conjunction with a VariableScope in which initializer=orthogonal_initializer(). See, for example, the test program at\nhttps://gist.github.com/nryant/57f7810e333fa94379cad201eeff24c8\n\nRunning this will result in a segfault with 1.4.0-rc1, but not with earlier versions. The problem is specific to the combination of orthogonal_initializer and bidirectional_dynamic_rnn and does not replicate with other initializers (e.g., uniform_unit_scaling_initializer) or dynamic_rnn. Nor does the choice of RNN cell appear to matter.", "body": "### System information\r\n- **Have I written custom code**: Yes\r\n- **OS Platform and Distribution**: Ubuntu 14.04 LTS (kernel: 3.16.0-77-generic)\r\n- **TensorFlow installed from**: source\r\n- **TensorFlow version**: 1.4.0rc1 (ae04712e3b74bc85445e12c90e375f980a907e2d) \r\n- **Python version**:  2.7.10\r\n- **Bazel version**: 0.7.0\r\n- **GCC/Compiler version**: 4.8.5\r\n- **CUDA/cuDNN version**: 8.0/6.0.21\r\n- **GPU model and memory**: Maxwell Titan X with 12 GiB memory\r\n- **Exact command to reproduce**: see https://gist.github.com/nryant/57f7810e333fa94379cad201eeff24c8\r\n\r\n\r\n### Describe the problem\r\nI recently upgraded from 1.4.0-rc0 to 1.4.0-rc1 and found that a number of my model architectures fail to compile. After a bit of a detective work, I tracked the issue down to the use of ``bidirectional_dynamic_rnn`` in conjunction with a ``VariableScope`` in which ``initializer=orthogonal_initializer()``. See, for example, the test program at\r\n\r\n    https://gist.github.com/nryant/57f7810e333fa94379cad201eeff24c8\r\n\r\nRunning this will result in a segfault with 1.4.0-rc1, but not with earlier versions. The problem is specific to the combination of ``orthogonal_initializer`` and ``bidirectional_dynamic_rnn`` and does not replicate with other initializers (e.g., ``uniform_unit_scaling_initializer``) or ``dynamic_rnn``. Nor does the choice of RNN cell appear to matter.\r\n"}