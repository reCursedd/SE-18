{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/160389842", "html_url": "https://github.com/tensorflow/tensorflow/issues/342#issuecomment-160389842", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/342", "id": 160389842, "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDM4OTg0Mg==", "user": {"login": "chenghuige", "id": 6323467, "node_id": "MDQ6VXNlcjYzMjM0Njc=", "avatar_url": "https://avatars0.githubusercontent.com/u/6323467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenghuige", "html_url": "https://github.com/chenghuige", "followers_url": "https://api.github.com/users/chenghuige/followers", "following_url": "https://api.github.com/users/chenghuige/following{/other_user}", "gists_url": "https://api.github.com/users/chenghuige/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenghuige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenghuige/subscriptions", "organizations_url": "https://api.github.com/users/chenghuige/orgs", "repos_url": "https://api.github.com/users/chenghuige/repos", "events_url": "https://api.github.com/users/chenghuige/events{/privacy}", "received_events_url": "https://api.github.com/users/chenghuige/received_events", "type": "User", "site_admin": false}, "created_at": "2015-11-29T07:47:10Z", "updated_at": "2015-11-29T07:47:48Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1794715\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ebrevdo\">@ebrevdo</a> Thanks very much for your  patient explanation ! I finally got your point.<br>\nHowever I'm still a bit confused by the embedding_lookup_sparse result<br>\nseems there is a bug , that \"sum\" just work the same as \"mean\".<br>\nI modified your code a bit .<br>\nimport tensorflow as tf<br>\nimport numpy as np</p>\n<p>X = tf.placeholder(\"float\", [10, 1])<br>\nx = np.array([[0], [1], [2], [3], [4], [5], [6], [7], [8], [9]], dtype=np.float32)</p>\n<p>sp_indices = tf.placeholder(tf.int64)<br>\nsp_shape = tf.placeholder(tf.int64)<br>\nsp_ids_val = tf.placeholder(tf.int64)<br>\nsp_weights_val = tf.placeholder(tf.float32)<br>\nsp_ids = tf.SparseTensor(sp_indices, sp_ids_val, sp_shape)<br>\nsp_weights = tf.SparseTensor(sp_indices, sp_weights_val, sp_shape)<br>\ny = tf.nn.embedding_lookup_sparse(X, sp_ids, sp_weights, \"sum\")</p>\n<p>sess = tf.Session()<br>\nsess.run(tf.initialize_all_variables())</p>\n<p>y_values = sess.run(y, feed_dict={<br>\nX: x,<br>\nsp_indices: [[0, 0], [0, 1], [0, 2], [1, 0], [1, 1]],  # 3 entries in minibatch entry 0, 2 entries in entry 1.<br>\nsp_shape: [2, 3],  # batch size: 2, max index: 2 (so index count == 3)<br>\nsp_ids_val: [2, 5, 8, 3, 4],<br>\nsp_weights_val: [1.0, 1.5, 2.5, 3.5, 4.5]<br>\n})</p>\n<p>print y_values</p>\n<p>#0 should be</p>\n<h1>2 * 1 + 5 * 1.5 + 8 * 2.5  = 29.5</h1>\n<p>#The result<br>\n./sparse_tensor.py<br>\nI tensorflow/core/common_runtime/local_device.cc:25] Local device intra op parallelism threads: 24<br>\nI tensorflow/core/common_runtime/local_session.cc:45] Local session inter op parallelism threads: 24<br>\n[[ 5.9000001]<br>\n[ 3.5625   ]]</p>\n<p>The result is as 29.5/(1 + 1.5 + 2.5) = 5.9</p>", "body_text": "@ebrevdo Thanks very much for your  patient explanation ! I finally got your point.\nHowever I'm still a bit confused by the embedding_lookup_sparse result\nseems there is a bug , that \"sum\" just work the same as \"mean\".\nI modified your code a bit .\nimport tensorflow as tf\nimport numpy as np\nX = tf.placeholder(\"float\", [10, 1])\nx = np.array([[0], [1], [2], [3], [4], [5], [6], [7], [8], [9]], dtype=np.float32)\nsp_indices = tf.placeholder(tf.int64)\nsp_shape = tf.placeholder(tf.int64)\nsp_ids_val = tf.placeholder(tf.int64)\nsp_weights_val = tf.placeholder(tf.float32)\nsp_ids = tf.SparseTensor(sp_indices, sp_ids_val, sp_shape)\nsp_weights = tf.SparseTensor(sp_indices, sp_weights_val, sp_shape)\ny = tf.nn.embedding_lookup_sparse(X, sp_ids, sp_weights, \"sum\")\nsess = tf.Session()\nsess.run(tf.initialize_all_variables())\ny_values = sess.run(y, feed_dict={\nX: x,\nsp_indices: [[0, 0], [0, 1], [0, 2], [1, 0], [1, 1]],  # 3 entries in minibatch entry 0, 2 entries in entry 1.\nsp_shape: [2, 3],  # batch size: 2, max index: 2 (so index count == 3)\nsp_ids_val: [2, 5, 8, 3, 4],\nsp_weights_val: [1.0, 1.5, 2.5, 3.5, 4.5]\n})\nprint y_values\n#0 should be\n2 * 1 + 5 * 1.5 + 8 * 2.5  = 29.5\n#The result\n./sparse_tensor.py\nI tensorflow/core/common_runtime/local_device.cc:25] Local device intra op parallelism threads: 24\nI tensorflow/core/common_runtime/local_session.cc:45] Local session inter op parallelism threads: 24\n[[ 5.9000001]\n[ 3.5625   ]]\nThe result is as 29.5/(1 + 1.5 + 2.5) = 5.9", "body": "@ebrevdo Thanks very much for your  patient explanation ! I finally got your point.\nHowever I'm still a bit confused by the embedding_lookup_sparse result \nseems there is a bug , that \"sum\" just work the same as \"mean\".\nI modified your code a bit .\nimport tensorflow as tf\nimport numpy as np\n\nX = tf.placeholder(\"float\", [10, 1])\nx = np.array([[0], [1], [2], [3], [4], [5], [6], [7], [8], [9]], dtype=np.float32)\n\nsp_indices = tf.placeholder(tf.int64)\nsp_shape = tf.placeholder(tf.int64)\nsp_ids_val = tf.placeholder(tf.int64)\nsp_weights_val = tf.placeholder(tf.float32)\nsp_ids = tf.SparseTensor(sp_indices, sp_ids_val, sp_shape)\nsp_weights = tf.SparseTensor(sp_indices, sp_weights_val, sp_shape)\ny = tf.nn.embedding_lookup_sparse(X, sp_ids, sp_weights, \"sum\")\n\nsess = tf.Session()\nsess.run(tf.initialize_all_variables())\n\ny_values = sess.run(y, feed_dict={\n  X: x,\n  sp_indices: [[0, 0], [0, 1], [0, 2], [1, 0], [1, 1]],  # 3 entries in minibatch entry 0, 2 entries in entry 1.\n  sp_shape: [2, 3],  # batch size: 2, max index: 2 (so index count == 3)\n  sp_ids_val: [2, 5, 8, 3, 4],\n  sp_weights_val: [1.0, 1.5, 2.5, 3.5, 4.5]\n  })\n\nprint y_values\n\n#0 should be\n\n# 2 \\* 1 + 5 \\* 1.5 + 8 \\* 2.5  = 29.5\n\n#The result\n./sparse_tensor.py \nI tensorflow/core/common_runtime/local_device.cc:25] Local device intra op parallelism threads: 24\nI tensorflow/core/common_runtime/local_session.cc:45] Local session inter op parallelism threads: 24\n[[ 5.9000001]\n [ 3.5625   ]]\n\nThe result is as 29.5/(1 + 1.5 + 2.5) = 5.9\n"}