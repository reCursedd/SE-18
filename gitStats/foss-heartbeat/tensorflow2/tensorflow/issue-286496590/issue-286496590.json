{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15913", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15913/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15913/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15913/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15913", "id": 286496590, "node_id": "MDU6SXNzdWUyODY0OTY1OTA=", "number": 15913, "title": "How to build contrib module that depends on tensorflow/core/kernels:linalg?", "user": {"login": "kaspermarstal", "id": 478833, "node_id": "MDQ6VXNlcjQ3ODgzMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/478833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaspermarstal", "html_url": "https://github.com/kaspermarstal", "followers_url": "https://api.github.com/users/kaspermarstal/followers", "following_url": "https://api.github.com/users/kaspermarstal/following{/other_user}", "gists_url": "https://api.github.com/users/kaspermarstal/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaspermarstal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaspermarstal/subscriptions", "organizations_url": "https://api.github.com/users/kaspermarstal/orgs", "repos_url": "https://api.github.com/users/kaspermarstal/repos", "events_url": "https://api.github.com/users/kaspermarstal/events{/privacy}", "received_events_url": "https://api.github.com/users/kaspermarstal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-01-06T16:27:44Z", "updated_at": "2018-09-28T21:44:57Z", "closed_at": "2018-09-28T21:44:57Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes. Making a contrib module.</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: macOS Sierra</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.4.1</li>\n<li><strong>Python version</strong>: 3.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.9</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: Apple LLVM version 8.1.0 (clang-802.0.42)</li>\n<li><strong>CUDA/cuDNN version</strong>: Building without GPU support</li>\n<li><strong>GPU model and memory</strong>: Building without GPU support</li>\n<li><strong>Exact command to reproduce</strong>: bazel build --config=opt //tensorflow/tools/pip_package:build_pip_package</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I am writing a contrib module that depends on tensorflow/core/kernels:linalg (specifically the <code>//tensorflow/core/kernels:linalg_ops_common</code> target). However, adding this dependency</p>\n<pre><code>tf_custom_op_library(\n    name = \"python/ops/_medical_image_ops.so\",\n    srcs = [\n        \"kernels/index_ops.cc\",\n        \"ops/index_ops.cc\",\n    ],\n    deps = [\n        \"//tensorflow/core/kernels:linalg\"\n    ],\n)\n</code></pre>\n<p>yields</p>\n<pre><code>ERROR: /Users/kasper/Development/tensorflow3/tensorflow/contrib/medical_image/BUILD:13:1: in check_deps rule //tensorflow/contrib/medical_image:python/ops/_medical_image_ops.so_check_deps:\nTraceback (most recent call last):\n\tFile \"/Users/kasper/Development/tensorflow3/tensorflow/contrib/medical_image/BUILD\", line 13\n\t\tcheck_deps(name = 'python/ops/_medical_image_ops.so_check_deps')\n\tFile \"/Users/kasper/Development/tensorflow3/tensorflow/tensorflow.bzl\", line 1196, in _check_deps_impl\n\t\tfail(((_dep_label(input_dep) + \" cann...)))\ntensorflow/core/kernels:linalg cannot depend on tensorflow/core:framework\n</code></pre>\n<p>The <code>//tensorflow/core/kernels:linalg_ops_common</code> target is private so I cannot depend on it directly. In an earlier release I believe there was a <code>//tensorflow/core/kernels:linalg_ops_common_headers_lib</code> target but this is not there anymore.</p>\n<p>How can I add one of the linalg targets as a dep without introducing this circular dependency?</p>\n<p>(I have scoured over many of the <code>cannot depend on tensorflow/core:framework</code> issues from the past but have not found a solution)</p>\n<h3>Source code / logs</h3>\n<p>This is my full BUILD file:</p>\n<pre><code># Description:\n#   Contains ops for working natively with medical images in TensorFlow.\n\nlicenses([\"notice\"])  # Apache 2.0\n\nexports_files([\"LICENSE\"])\n\npackage(default_visibility = [\"//visibility:public\"])\n\nload(\"//tensorflow:tensorflow.bzl\", \"tf_custom_op_library\", \"tf_custom_op_py_library\",\n     \"tf_kernel_library\", \"tf_gen_op_libs\", \"tf_gen_op_wrapper_py\")\n\ntf_custom_op_library(\n    name = \"python/ops/_medical_image_ops.so\",\n    srcs = [\n        \"kernels/index_ops.cc\",\n        \"ops/index_ops.cc\",\n    ],\n    deps = [\n        \"//tensorflow/core:lib\"\n    ],\n)\n\ntf_gen_op_libs(\n    op_lib_names = [\"index_ops\"],\n)\n\ntf_gen_op_wrapper_py(\n    name = \"medical_image_ops\",\n    deps = [\":index_ops_op_lib\"],\n)\n\ntf_custom_op_py_library(\n    name = \"medical_image_py\",\n    srcs = [\n        \"__init__.py\",\n        \"python/medical_image/medical_image.py\",\n        \"python/medical_image/transforms.py\",\n        \"python/ops/index_ops.py\",\n    ],\n    dso = [\":python/ops/_medical_image_ops.so\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":medical_image_ops\",\n    ],\n)\n\nfilegroup(\n    name = \"all_files\",\n    srcs = glob(\n        [\"**/*\"],\n        exclude = [\n            \"**/METADATA\",\n            \"**/OWNERS\",\n        ],\n    ),\n    visibility = [\"//tensorflow:__subpackages__\"],\n)\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes. Making a contrib module.\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS Sierra\nTensorFlow installed from (source or binary): Source\nTensorFlow version (use command below): 1.4.1\nPython version: 3.6\nBazel version (if compiling from source): 0.9\nGCC/Compiler version (if compiling from source): Apple LLVM version 8.1.0 (clang-802.0.42)\nCUDA/cuDNN version: Building without GPU support\nGPU model and memory: Building without GPU support\nExact command to reproduce: bazel build --config=opt //tensorflow/tools/pip_package:build_pip_package\n\nDescribe the problem\nI am writing a contrib module that depends on tensorflow/core/kernels:linalg (specifically the //tensorflow/core/kernels:linalg_ops_common target). However, adding this dependency\ntf_custom_op_library(\n    name = \"python/ops/_medical_image_ops.so\",\n    srcs = [\n        \"kernels/index_ops.cc\",\n        \"ops/index_ops.cc\",\n    ],\n    deps = [\n        \"//tensorflow/core/kernels:linalg\"\n    ],\n)\n\nyields\nERROR: /Users/kasper/Development/tensorflow3/tensorflow/contrib/medical_image/BUILD:13:1: in check_deps rule //tensorflow/contrib/medical_image:python/ops/_medical_image_ops.so_check_deps:\nTraceback (most recent call last):\n\tFile \"/Users/kasper/Development/tensorflow3/tensorflow/contrib/medical_image/BUILD\", line 13\n\t\tcheck_deps(name = 'python/ops/_medical_image_ops.so_check_deps')\n\tFile \"/Users/kasper/Development/tensorflow3/tensorflow/tensorflow.bzl\", line 1196, in _check_deps_impl\n\t\tfail(((_dep_label(input_dep) + \" cann...)))\ntensorflow/core/kernels:linalg cannot depend on tensorflow/core:framework\n\nThe //tensorflow/core/kernels:linalg_ops_common target is private so I cannot depend on it directly. In an earlier release I believe there was a //tensorflow/core/kernels:linalg_ops_common_headers_lib target but this is not there anymore.\nHow can I add one of the linalg targets as a dep without introducing this circular dependency?\n(I have scoured over many of the cannot depend on tensorflow/core:framework issues from the past but have not found a solution)\nSource code / logs\nThis is my full BUILD file:\n# Description:\n#   Contains ops for working natively with medical images in TensorFlow.\n\nlicenses([\"notice\"])  # Apache 2.0\n\nexports_files([\"LICENSE\"])\n\npackage(default_visibility = [\"//visibility:public\"])\n\nload(\"//tensorflow:tensorflow.bzl\", \"tf_custom_op_library\", \"tf_custom_op_py_library\",\n     \"tf_kernel_library\", \"tf_gen_op_libs\", \"tf_gen_op_wrapper_py\")\n\ntf_custom_op_library(\n    name = \"python/ops/_medical_image_ops.so\",\n    srcs = [\n        \"kernels/index_ops.cc\",\n        \"ops/index_ops.cc\",\n    ],\n    deps = [\n        \"//tensorflow/core:lib\"\n    ],\n)\n\ntf_gen_op_libs(\n    op_lib_names = [\"index_ops\"],\n)\n\ntf_gen_op_wrapper_py(\n    name = \"medical_image_ops\",\n    deps = [\":index_ops_op_lib\"],\n)\n\ntf_custom_op_py_library(\n    name = \"medical_image_py\",\n    srcs = [\n        \"__init__.py\",\n        \"python/medical_image/medical_image.py\",\n        \"python/medical_image/transforms.py\",\n        \"python/ops/index_ops.py\",\n    ],\n    dso = [\":python/ops/_medical_image_ops.so\"],\n    srcs_version = \"PY2AND3\",\n    deps = [\n        \":medical_image_ops\",\n    ],\n)\n\nfilegroup(\n    name = \"all_files\",\n    srcs = glob(\n        [\"**/*\"],\n        exclude = [\n            \"**/METADATA\",\n            \"**/OWNERS\",\n        ],\n    ),\n    visibility = [\"//tensorflow:__subpackages__\"],\n)", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes. Making a contrib module.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: macOS Sierra\r\n- **TensorFlow installed from (source or binary)**: Source\r\n- **TensorFlow version (use command below)**: 1.4.1\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: 0.9\r\n- **GCC/Compiler version (if compiling from source)**: Apple LLVM version 8.1.0 (clang-802.0.42)\r\n- **CUDA/cuDNN version**: Building without GPU support\r\n- **GPU model and memory**: Building without GPU support\r\n- **Exact command to reproduce**: bazel build --config=opt //tensorflow/tools/pip_package:build_pip_package\r\n\r\n### Describe the problem\r\nI am writing a contrib module that depends on tensorflow/core/kernels:linalg (specifically the `//tensorflow/core/kernels:linalg_ops_common` target). However, adding this dependency\r\n\r\n\ttf_custom_op_library(\r\n\t    name = \"python/ops/_medical_image_ops.so\",\r\n\t    srcs = [\r\n\t        \"kernels/index_ops.cc\",\r\n\t        \"ops/index_ops.cc\",\r\n\t    ],\r\n\t    deps = [\r\n\t        \"//tensorflow/core/kernels:linalg\"\r\n\t    ],\r\n\t)\r\n\r\nyields\r\n\r\n\tERROR: /Users/kasper/Development/tensorflow3/tensorflow/contrib/medical_image/BUILD:13:1: in check_deps rule //tensorflow/contrib/medical_image:python/ops/_medical_image_ops.so_check_deps:\r\n\tTraceback (most recent call last):\r\n\t\tFile \"/Users/kasper/Development/tensorflow3/tensorflow/contrib/medical_image/BUILD\", line 13\r\n\t\t\tcheck_deps(name = 'python/ops/_medical_image_ops.so_check_deps')\r\n\t\tFile \"/Users/kasper/Development/tensorflow3/tensorflow/tensorflow.bzl\", line 1196, in _check_deps_impl\r\n\t\t\tfail(((_dep_label(input_dep) + \" cann...)))\r\n\ttensorflow/core/kernels:linalg cannot depend on tensorflow/core:framework\r\n\r\nThe `//tensorflow/core/kernels:linalg_ops_common` target is private so I cannot depend on it directly. In an earlier release I believe there was a `//tensorflow/core/kernels:linalg_ops_common_headers_lib` target but this is not there anymore.\r\n\r\nHow can I add one of the linalg targets as a dep without introducing this circular dependency?\r\n\r\n(I have scoured over many of the `cannot depend on tensorflow/core:framework` issues from the past but have not found a solution)\r\n\r\n### Source code / logs\r\nThis is my full BUILD file:\r\n\r\n\t# Description:\r\n\t#   Contains ops for working natively with medical images in TensorFlow.\r\n\r\n\tlicenses([\"notice\"])  # Apache 2.0\r\n\r\n\texports_files([\"LICENSE\"])\r\n\r\n\tpackage(default_visibility = [\"//visibility:public\"])\r\n\r\n\tload(\"//tensorflow:tensorflow.bzl\", \"tf_custom_op_library\", \"tf_custom_op_py_library\",\r\n\t     \"tf_kernel_library\", \"tf_gen_op_libs\", \"tf_gen_op_wrapper_py\")\r\n\r\n\ttf_custom_op_library(\r\n\t    name = \"python/ops/_medical_image_ops.so\",\r\n\t    srcs = [\r\n\t        \"kernels/index_ops.cc\",\r\n\t        \"ops/index_ops.cc\",\r\n\t    ],\r\n\t    deps = [\r\n\t        \"//tensorflow/core:lib\"\r\n\t    ],\r\n\t)\r\n\r\n\ttf_gen_op_libs(\r\n\t    op_lib_names = [\"index_ops\"],\r\n\t)\r\n\r\n\ttf_gen_op_wrapper_py(\r\n\t    name = \"medical_image_ops\",\r\n\t    deps = [\":index_ops_op_lib\"],\r\n\t)\r\n\r\n\ttf_custom_op_py_library(\r\n\t    name = \"medical_image_py\",\r\n\t    srcs = [\r\n\t        \"__init__.py\",\r\n\t        \"python/medical_image/medical_image.py\",\r\n\t        \"python/medical_image/transforms.py\",\r\n\t        \"python/ops/index_ops.py\",\r\n\t    ],\r\n\t    dso = [\":python/ops/_medical_image_ops.so\"],\r\n\t    srcs_version = \"PY2AND3\",\r\n\t    deps = [\r\n\t        \":medical_image_ops\",\r\n\t    ],\r\n\t)\r\n\r\n\tfilegroup(\r\n\t    name = \"all_files\",\r\n\t    srcs = glob(\r\n\t        [\"**/*\"],\r\n\t        exclude = [\r\n\t            \"**/METADATA\",\r\n\t            \"**/OWNERS\",\r\n\t        ],\r\n\t    ),\r\n\t    visibility = [\"//tensorflow:__subpackages__\"],\r\n\t)\r\n\r\n  \r\n  "}