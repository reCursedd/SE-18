{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/384027382", "html_url": "https://github.com/tensorflow/tensorflow/issues/14613#issuecomment-384027382", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14613", "id": 384027382, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDAyNzM4Mg==", "user": {"login": "MtDersvan", "id": 7069222, "node_id": "MDQ6VXNlcjcwNjkyMjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/7069222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MtDersvan", "html_url": "https://github.com/MtDersvan", "followers_url": "https://api.github.com/users/MtDersvan/followers", "following_url": "https://api.github.com/users/MtDersvan/following{/other_user}", "gists_url": "https://api.github.com/users/MtDersvan/gists{/gist_id}", "starred_url": "https://api.github.com/users/MtDersvan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MtDersvan/subscriptions", "organizations_url": "https://api.github.com/users/MtDersvan/orgs", "repos_url": "https://api.github.com/users/MtDersvan/repos", "events_url": "https://api.github.com/users/MtDersvan/events{/privacy}", "received_events_url": "https://api.github.com/users/MtDersvan/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-24T18:07:15Z", "updated_at": "2018-04-24T18:07:15Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Yes, it's an UnavailableError with the \"OS Error\" message. (sorry for a late response)<br>\nActually, that's the problem the <code>run()</code> in <code>_RecoverableSession</code> doesn't log this:</p>\n<div class=\"highlight highlight-source-python\"><pre>    logging.info(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>An error was raised. This may be due to a preemption in <span class=\"pl-pds\">'</span></span>\n                 <span class=\"pl-s\"><span class=\"pl-pds\">'</span>a connected worker or parameter server. The current <span class=\"pl-pds\">'</span></span>\n                 <span class=\"pl-s\"><span class=\"pl-pds\">'</span>session will be closed and a new session will be <span class=\"pl-pds\">'</span></span>\n                 <span class=\"pl-s\"><span class=\"pl-pds\">'</span>created. Error: <span class=\"pl-c1\">%s</span><span class=\"pl-pds\">'</span></span>, e)</pre></div>\n<p>That's exactly what I did to debug the problem - explicitly checked for any exceptions narrowing down the scope.<br>\nAll the tensorflow logs boil down to:</p>\n<div class=\"highlight highlight-text-shell-session\"><pre><span class=\"pl-c1\">...</span>\n<span class=\"pl-c1\">I tensorflow/core/distributed_runtime/master_session.cc:1024] Start master session 6d9f53ba9c6c58c9 with config: allow_soft_placement: true</span>\n<span class=\"pl-c1\">...</span></pre></div>\n<p>And I'm pretty sure that all the distributed workers were online. Maybe a connection issue? Also, adding a <code>load_balancer</code> reduced the frequency [but I can't say 100%].</p>\n<p>For now I just made a custom <code>_RecoverableSession</code> that handles <code>UnavailableError: OS Error</code> without restarting the whole session (just waits a second before rerunning).</p>", "body_text": "Yes, it's an UnavailableError with the \"OS Error\" message. (sorry for a late response)\nActually, that's the problem the run() in _RecoverableSession doesn't log this:\n    logging.info('An error was raised. This may be due to a preemption in '\n                 'a connected worker or parameter server. The current '\n                 'session will be closed and a new session will be '\n                 'created. Error: %s', e)\nThat's exactly what I did to debug the problem - explicitly checked for any exceptions narrowing down the scope.\nAll the tensorflow logs boil down to:\n...\nI tensorflow/core/distributed_runtime/master_session.cc:1024] Start master session 6d9f53ba9c6c58c9 with config: allow_soft_placement: true\n...\nAnd I'm pretty sure that all the distributed workers were online. Maybe a connection issue? Also, adding a load_balancer reduced the frequency [but I can't say 100%].\nFor now I just made a custom _RecoverableSession that handles UnavailableError: OS Error without restarting the whole session (just waits a second before rerunning).", "body": "Yes, it's an UnavailableError with the \"OS Error\" message. (sorry for a late response)\r\nActually, that's the problem the `run()` in `_RecoverableSession` doesn't log this:\r\n~~~python\r\n    logging.info('An error was raised. This may be due to a preemption in '\r\n                 'a connected worker or parameter server. The current '\r\n                 'session will be closed and a new session will be '\r\n                 'created. Error: %s', e)\r\n~~~\r\nThat's exactly what I did to debug the problem - explicitly checked for any exceptions narrowing down the scope.\r\nAll the tensorflow logs boil down to:\r\n~~~console\r\n...\r\nI tensorflow/core/distributed_runtime/master_session.cc:1024] Start master session 6d9f53ba9c6c58c9 with config: allow_soft_placement: true\r\n...\r\n~~~\r\n\r\nAnd I'm pretty sure that all the distributed workers were online. Maybe a connection issue? Also, adding a `load_balancer` reduced the frequency [but I can't say 100%].\r\n\r\nFor now I just made a custom `_RecoverableSession` that handles `UnavailableError: OS Error` without restarting the whole session (just waits a second before rerunning). "}