{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/347719771", "html_url": "https://github.com/tensorflow/tensorflow/issues/14613#issuecomment-347719771", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14613", "id": 347719771, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzcxOTc3MQ==", "user": {"login": "ispirmustafa", "id": 19293677, "node_id": "MDQ6VXNlcjE5MjkzNjc3", "avatar_url": "https://avatars1.githubusercontent.com/u/19293677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ispirmustafa", "html_url": "https://github.com/ispirmustafa", "followers_url": "https://api.github.com/users/ispirmustafa/followers", "following_url": "https://api.github.com/users/ispirmustafa/following{/other_user}", "gists_url": "https://api.github.com/users/ispirmustafa/gists{/gist_id}", "starred_url": "https://api.github.com/users/ispirmustafa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ispirmustafa/subscriptions", "organizations_url": "https://api.github.com/users/ispirmustafa/orgs", "repos_url": "https://api.github.com/users/ispirmustafa/repos", "events_url": "https://api.github.com/users/ispirmustafa/events{/privacy}", "received_events_url": "https://api.github.com/users/ispirmustafa/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-29T01:16:15Z", "updated_at": "2017-11-29T01:17:08Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I'm too not aware of any change to MonitoredSession that is related.<br>\nBTW, following code segment accesses to private parts of MonitoredSession which may work in an unexpected way:</p>\n<pre><code>        for target in targets:\n            # Get all target datasets handles.\n            handle[target] = mon_sess._coordinated_creator.tf_sess.run(\n                training_model.iter_handles[target])\n            # Init all target datasets.\n            mon_sess._coordinated_creator.tf_sess.run(training_model.iter_init_ops[target])\n\n</code></pre>\n<p>Instead you should use session run hooks to make it proper:</p>\n<pre><code>    class InitializerHook(tf.train.SessionRunHook):\n      def after_create_session(self, session, coord):\n        for target in targets:\n            # Get all target datasets handles.\n            handle[target] = session.run(training_model.iter_handles[target])\n            # Init all target datasets.\n            session.run(training_model.iter_init_ops[target])\n   with MonitoredTrainingSession(hooks=[InitializerHook()], ...):\n</code></pre>", "body_text": "I'm too not aware of any change to MonitoredSession that is related.\nBTW, following code segment accesses to private parts of MonitoredSession which may work in an unexpected way:\n        for target in targets:\n            # Get all target datasets handles.\n            handle[target] = mon_sess._coordinated_creator.tf_sess.run(\n                training_model.iter_handles[target])\n            # Init all target datasets.\n            mon_sess._coordinated_creator.tf_sess.run(training_model.iter_init_ops[target])\n\n\nInstead you should use session run hooks to make it proper:\n    class InitializerHook(tf.train.SessionRunHook):\n      def after_create_session(self, session, coord):\n        for target in targets:\n            # Get all target datasets handles.\n            handle[target] = session.run(training_model.iter_handles[target])\n            # Init all target datasets.\n            session.run(training_model.iter_init_ops[target])\n   with MonitoredTrainingSession(hooks=[InitializerHook()], ...):", "body": "I'm too not aware of any change to MonitoredSession that is related. \r\nBTW, following code segment accesses to private parts of MonitoredSession which may work in an unexpected way:\r\n```\r\n        for target in targets:\r\n            # Get all target datasets handles.\r\n            handle[target] = mon_sess._coordinated_creator.tf_sess.run(\r\n                training_model.iter_handles[target])\r\n            # Init all target datasets.\r\n            mon_sess._coordinated_creator.tf_sess.run(training_model.iter_init_ops[target])\r\n\r\n```\r\nInstead you should use session run hooks to make it proper:\r\n```\r\n    class InitializerHook(tf.train.SessionRunHook):\r\n      def after_create_session(self, session, coord):\r\n        for target in targets:\r\n            # Get all target datasets handles.\r\n            handle[target] = session.run(training_model.iter_handles[target])\r\n            # Init all target datasets.\r\n            session.run(training_model.iter_init_ops[target])\r\n   with MonitoredTrainingSession(hooks=[InitializerHook()], ...):\r\n```"}