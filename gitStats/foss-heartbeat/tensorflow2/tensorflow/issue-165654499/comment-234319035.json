{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/234319035", "html_url": "https://github.com/tensorflow/tensorflow/issues/3321#issuecomment-234319035", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3321", "id": 234319035, "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDMxOTAzNQ==", "user": {"login": "johann-petrak", "id": 619106, "node_id": "MDQ6VXNlcjYxOTEwNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/619106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johann-petrak", "html_url": "https://github.com/johann-petrak", "followers_url": "https://api.github.com/users/johann-petrak/followers", "following_url": "https://api.github.com/users/johann-petrak/following{/other_user}", "gists_url": "https://api.github.com/users/johann-petrak/gists{/gist_id}", "starred_url": "https://api.github.com/users/johann-petrak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johann-petrak/subscriptions", "organizations_url": "https://api.github.com/users/johann-petrak/orgs", "repos_url": "https://api.github.com/users/johann-petrak/repos", "events_url": "https://api.github.com/users/johann-petrak/events{/privacy}", "received_events_url": "https://api.github.com/users/johann-petrak/received_events", "type": "User", "site_admin": false}, "created_at": "2016-07-21T17:07:54Z", "updated_at": "2016-07-21T17:35:48Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Same problem on Ubuntu 16.04 when installing TensorFlow tensorflow-0.9.0  with CUDA (17.5) support according to the instructions at the website. Installation for Ubuntu Linux 16.04 64 bit, Anaconda2 64 bit.: <a href=\"https://www.tensorflow.org/versions/r0.9/get_started/os_setup.html#anaconda-installation\" rel=\"nofollow\">https://www.tensorflow.org/versions/r0.9/get_started/os_setup.html#anaconda-installation</a></p>\n<p>Steps</p>\n<ul>\n<li>conda create -n tensorflow python=2.7</li>\n<li>source activate tensorflow</li>\n<li>export TF_BINARY_URL=<a href=\"https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.9.0-cp27-none-linux_x86_64.whl\" rel=\"nofollow\">https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.9.0-cp27-none-linux_x86_64.whl</a></li>\n<li>pip install --upgrade $TF_BINARY_URL</li>\n</ul>\n<p>Note that the last step fails initially, complaining about a non-existent file. After touching that file and re-running the pip install command both without and with the --upgrade flag again, the installation succeeds without error.</p>\n<p>In python, import tensorflow works:</p>\n<pre><code>$ python\n[GCC 4.4.7 20120313 (Red Hat 4.4.7-1)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\nAnaconda is brought to you by Continuum Analytics.\nPlease check out: http://continuum.io/thanks and https://anaconda.org\n&gt;&gt;&gt; import tensorflow as tf\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:102] Couldn't open CUDA library libcudnn.so. LD_LIBRARY_PATH: /home/johann/software/anaconda2/lib/:/home/johann/torch/install/lib:\nI tensorflow/stream_executor/cuda/cuda_dnn.cc:2092] Unable to load cuDNN DSO\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcuda.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcurand.so locally\n&gt;&gt;&gt; \n</code></pre>\n<p>But with ipython tensorflow is not known:</p>\n<pre><code>$ ipython\nPython 2.7.12 |Anaconda custom (64-bit)| (default, Jul  2 2016, 17:42:40) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 4.2.0 -- An enhanced Interactive Python.\n?         -&gt; Introduction and overview of IPython's features.\n%quickref -&gt; Quick reference.\nhelp      -&gt; Python's own help system.\nobject?   -&gt; Details about 'object', use 'object??' for extra details.\n\nIn [1]: \nIn [1]: import tensorflow as tf\n---------------------------------------------------------------------------\nImportError                               Traceback (most recent call last)\n&lt;ipython-input-1-41389fad42b5&gt; in &lt;module&gt;()\n----&gt; 1 import tensorflow as tf\n\nImportError: No module named tensorflow\n\nIn [2]: \n</code></pre>\n<p>My LD_LIBRARY_PATH is set to where the CUDA libraries are installed (usr/lib/x86_64-linux-gnu in my case).</p>\n<p>However, since I do not get any error message about a missing .so library when I try to load tensorflow in in ipython, I doubt this is related to LD_LIBRARY_PATH. ipython does not seem to know about tensorflow at all.</p>\n<p>python only knows tensorflow if, like shown in the instructions, the command <code>source activate tensorflow</code> is executed first. So maybe whatever this command does is not working for ipython?</p>", "body_text": "Same problem on Ubuntu 16.04 when installing TensorFlow tensorflow-0.9.0  with CUDA (17.5) support according to the instructions at the website. Installation for Ubuntu Linux 16.04 64 bit, Anaconda2 64 bit.: https://www.tensorflow.org/versions/r0.9/get_started/os_setup.html#anaconda-installation\nSteps\n\nconda create -n tensorflow python=2.7\nsource activate tensorflow\nexport TF_BINARY_URL=https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.9.0-cp27-none-linux_x86_64.whl\npip install --upgrade $TF_BINARY_URL\n\nNote that the last step fails initially, complaining about a non-existent file. After touching that file and re-running the pip install command both without and with the --upgrade flag again, the installation succeeds without error.\nIn python, import tensorflow works:\n$ python\n[GCC 4.4.7 20120313 (Red Hat 4.4.7-1)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\nAnaconda is brought to you by Continuum Analytics.\nPlease check out: http://continuum.io/thanks and https://anaconda.org\n>>> import tensorflow as tf\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:102] Couldn't open CUDA library libcudnn.so. LD_LIBRARY_PATH: /home/johann/software/anaconda2/lib/:/home/johann/torch/install/lib:\nI tensorflow/stream_executor/cuda/cuda_dnn.cc:2092] Unable to load cuDNN DSO\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcuda.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcurand.so locally\n>>> \n\nBut with ipython tensorflow is not known:\n$ ipython\nPython 2.7.12 |Anaconda custom (64-bit)| (default, Jul  2 2016, 17:42:40) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 4.2.0 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: \nIn [1]: import tensorflow as tf\n---------------------------------------------------------------------------\nImportError                               Traceback (most recent call last)\n<ipython-input-1-41389fad42b5> in <module>()\n----> 1 import tensorflow as tf\n\nImportError: No module named tensorflow\n\nIn [2]: \n\nMy LD_LIBRARY_PATH is set to where the CUDA libraries are installed (usr/lib/x86_64-linux-gnu in my case).\nHowever, since I do not get any error message about a missing .so library when I try to load tensorflow in in ipython, I doubt this is related to LD_LIBRARY_PATH. ipython does not seem to know about tensorflow at all.\npython only knows tensorflow if, like shown in the instructions, the command source activate tensorflow is executed first. So maybe whatever this command does is not working for ipython?", "body": "Same problem on Ubuntu 16.04 when installing TensorFlow tensorflow-0.9.0  with CUDA (17.5) support according to the instructions at the website. Installation for Ubuntu Linux 16.04 64 bit, Anaconda2 64 bit.: https://www.tensorflow.org/versions/r0.9/get_started/os_setup.html#anaconda-installation\n\nSteps\n- conda create -n tensorflow python=2.7\n- source activate tensorflow\n- export TF_BINARY_URL=https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.9.0-cp27-none-linux_x86_64.whl\n- pip install --upgrade $TF_BINARY_URL\n\nNote that the last step fails initially, complaining about a non-existent file. After touching that file and re-running the pip install command both without and with the --upgrade flag again, the installation succeeds without error. \n\nIn python, import tensorflow works:\n\n```\n$ python\n[GCC 4.4.7 20120313 (Red Hat 4.4.7-1)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\nAnaconda is brought to you by Continuum Analytics.\nPlease check out: http://continuum.io/thanks and https://anaconda.org\n>>> import tensorflow as tf\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:102] Couldn't open CUDA library libcudnn.so. LD_LIBRARY_PATH: /home/johann/software/anaconda2/lib/:/home/johann/torch/install/lib:\nI tensorflow/stream_executor/cuda/cuda_dnn.cc:2092] Unable to load cuDNN DSO\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcuda.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcurand.so locally\n>>> \n```\n\nBut with ipython tensorflow is not known:\n\n```\n$ ipython\nPython 2.7.12 |Anaconda custom (64-bit)| (default, Jul  2 2016, 17:42:40) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 4.2.0 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: \nIn [1]: import tensorflow as tf\n---------------------------------------------------------------------------\nImportError                               Traceback (most recent call last)\n<ipython-input-1-41389fad42b5> in <module>()\n----> 1 import tensorflow as tf\n\nImportError: No module named tensorflow\n\nIn [2]: \n```\n\nMy LD_LIBRARY_PATH is set to where the CUDA libraries are installed (usr/lib/x86_64-linux-gnu in my case). \n\nHowever, since I do not get any error message about a missing .so library when I try to load tensorflow in in ipython, I doubt this is related to LD_LIBRARY_PATH. ipython does not seem to know about tensorflow at all. \n\npython only knows tensorflow if, like shown in the instructions, the command `source activate tensorflow` is executed first. So maybe whatever this command does is not working for ipython? \n"}