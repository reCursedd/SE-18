{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/259056144", "html_url": "https://github.com/tensorflow/tensorflow/issues/5458#issuecomment-259056144", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5458", "id": 259056144, "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTA1NjE0NA==", "user": {"login": "andrewharp", "id": 3376817, "node_id": "MDQ6VXNlcjMzNzY4MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3376817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewharp", "html_url": "https://github.com/andrewharp", "followers_url": "https://api.github.com/users/andrewharp/followers", "following_url": "https://api.github.com/users/andrewharp/following{/other_user}", "gists_url": "https://api.github.com/users/andrewharp/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewharp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewharp/subscriptions", "organizations_url": "https://api.github.com/users/andrewharp/orgs", "repos_url": "https://api.github.com/users/andrewharp/repos", "events_url": "https://api.github.com/users/andrewharp/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewharp/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-08T06:24:37Z", "updated_at": "2016-11-08T06:24:37Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=23154573\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/michaelhuang74\">@michaelhuang74</a> No, the short answer is that it is not possible (or at least supported) to run any TensorFlow python code on Android. However, you may of course reuse your trained GraphDef proto (after running <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/tools/optimize_for_inference.py\">optimize_for_inference.py</a> on it to bake in the checkpoint weights), and if your interaction with TensorFlow is not too complex you should be able to fairly easily hook up your inputs and outputs to achieve the same effect in either Java or C++.</p>\n<p>Can you clarify a bit more exactly what you're trying to achieve? Do you have an existing app you wanted to hook the python code into, or did you want to run it as a standalone program? In the former case, you'll need to convert it to use TensorFlowInferenceInterface.java. In the latter, you'll want to convert to C++ as seen in tensorflow/tools/benchmark:benchmark_model.</p>", "body_text": "@michaelhuang74 No, the short answer is that it is not possible (or at least supported) to run any TensorFlow python code on Android. However, you may of course reuse your trained GraphDef proto (after running optimize_for_inference.py on it to bake in the checkpoint weights), and if your interaction with TensorFlow is not too complex you should be able to fairly easily hook up your inputs and outputs to achieve the same effect in either Java or C++.\nCan you clarify a bit more exactly what you're trying to achieve? Do you have an existing app you wanted to hook the python code into, or did you want to run it as a standalone program? In the former case, you'll need to convert it to use TensorFlowInferenceInterface.java. In the latter, you'll want to convert to C++ as seen in tensorflow/tools/benchmark:benchmark_model.", "body": "@michaelhuang74 No, the short answer is that it is not possible (or at least supported) to run any TensorFlow python code on Android. However, you may of course reuse your trained GraphDef proto (after running [optimize_for_inference.py](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/tools/optimize_for_inference.py) on it to bake in the checkpoint weights), and if your interaction with TensorFlow is not too complex you should be able to fairly easily hook up your inputs and outputs to achieve the same effect in either Java or C++.\n\nCan you clarify a bit more exactly what you're trying to achieve? Do you have an existing app you wanted to hook the python code into, or did you want to run it as a standalone program? In the former case, you'll need to convert it to use TensorFlowInferenceInterface.java. In the latter, you'll want to convert to C++ as seen in tensorflow/tools/benchmark:benchmark_model.\n"}