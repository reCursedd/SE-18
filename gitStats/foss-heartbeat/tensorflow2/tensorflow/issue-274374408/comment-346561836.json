{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/346561836", "html_url": "https://github.com/tensorflow/tensorflow/pull/14604#issuecomment-346561836", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14604", "id": 346561836, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjU2MTgzNg==", "user": {"login": "xldrx", "id": 1114830, "node_id": "MDQ6VXNlcjExMTQ4MzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1114830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xldrx", "html_url": "https://github.com/xldrx", "followers_url": "https://api.github.com/users/xldrx/followers", "following_url": "https://api.github.com/users/xldrx/following{/other_user}", "gists_url": "https://api.github.com/users/xldrx/gists{/gist_id}", "starred_url": "https://api.github.com/users/xldrx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xldrx/subscriptions", "organizations_url": "https://api.github.com/users/xldrx/orgs", "repos_url": "https://api.github.com/users/xldrx/repos", "events_url": "https://api.github.com/users/xldrx/events{/privacy}", "received_events_url": "https://api.github.com/users/xldrx/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-23T09:03:16Z", "updated_at": "2017-11-23T09:03:16Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Thanks <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a> for the feed back:</p>\n<ul>\n<li>\n<p>I changed the implementation to use SessionMgr instead of *RendezvousMgr.<br>\nNote that unlike other worker rpcs, <code>LoggingRequest</code> in  <code>LoggingAsync</code> rpc does not have any session handle, therefore all sessions should be touched. Both implementations (previous one, and this one) iterates over all sessions (previously through <code>RendezvousMgr</code> now <code>SessionMgr</code>), then uses <code>GrpcWorkerCache</code> calls in each session.</p>\n</li>\n<li>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=2606448\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/pbar\">@pbar</a>: Thoughts on changes in <code>master_session.cc</code>?</p>\n</li>\n</ul>", "body_text": "Thanks @mrry for the feed back:\n\n\nI changed the implementation to use SessionMgr instead of *RendezvousMgr.\nNote that unlike other worker rpcs, LoggingRequest in  LoggingAsync rpc does not have any session handle, therefore all sessions should be touched. Both implementations (previous one, and this one) iterates over all sessions (previously through RendezvousMgr now SessionMgr), then uses GrpcWorkerCache calls in each session.\n\n\n@pbar: Thoughts on changes in master_session.cc?", "body": "Thanks @mrry for the feed back:\r\n* I changed the implementation to use SessionMgr instead of *RendezvousMgr. \r\nNote that unlike other worker rpcs, `LoggingRequest` in  `LoggingAsync` rpc does not have any session handle, therefore all sessions should be touched. Both implementations (previous one, and this one) iterates over all sessions (previously through `RendezvousMgr` now `SessionMgr`), then uses `GrpcWorkerCache` calls in each session.\r\n\r\n* @pbar: Thoughts on changes in `master_session.cc`?"}