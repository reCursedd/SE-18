{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14797", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14797/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14797/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14797/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14797", "id": 276092827, "node_id": "MDU6SXNzdWUyNzYwOTI4Mjc=", "number": 14797, "title": "XLA AOT tfcompile failure due to undeclared inclusions in cc_binary rule", "user": {"login": "carlthome", "id": 1595907, "node_id": "MDQ6VXNlcjE1OTU5MDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1595907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlthome", "html_url": "https://github.com/carlthome", "followers_url": "https://api.github.com/users/carlthome/followers", "following_url": "https://api.github.com/users/carlthome/following{/other_user}", "gists_url": "https://api.github.com/users/carlthome/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlthome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlthome/subscriptions", "organizations_url": "https://api.github.com/users/carlthome/orgs", "repos_url": "https://api.github.com/users/carlthome/repos", "events_url": "https://api.github.com/users/carlthome/events{/privacy}", "received_events_url": "https://api.github.com/users/carlthome/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-22T14:45:08Z", "updated_at": "2018-06-25T17:45:27Z", "closed_at": "2017-11-22T15:42:51Z", "author_association": "CONTRIBUTOR", "body_html": "<p>This happens on a freshly cloned TensorFlow master with Bazel 0.7 on Ubuntu 17.04:</p>\n<div class=\"highlight highlight-source-shell\"><pre>ERROR: tensorflow/BUILD:13:1: undeclared inclusion(s) <span class=\"pl-k\">in</span> rule <span class=\"pl-s\"><span class=\"pl-pds\">'</span>//:model<span class=\"pl-pds\">'</span></span>:\nthis rule is missing dependency declarations <span class=\"pl-k\">for</span> the following files included by <span class=\"pl-s\"><span class=\"pl-pds\">'</span>graph.cc<span class=\"pl-pds\">'</span></span>:\n  <span class=\"pl-s\"><span class=\"pl-pds\">'</span>tensorflow/compiler/tf2xla/xla_compiled_cpu_function.h<span class=\"pl-pds\">'</span></span>\n  <span class=\"pl-s\"><span class=\"pl-pds\">'</span>tensorflow/compiler/tf2xla/xla_local_runtime_context.h<span class=\"pl-pds\">'</span></span>\n  <span class=\"pl-s\"><span class=\"pl-pds\">'</span>tensorflow/core/platform/macros.h<span class=\"pl-pds\">'</span></span>\n  <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/tensorflow/core/platform/types.h<span class=\"pl-pds\">'</span></span>\n  <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/tensorflow/core/platform/platform.h<span class=\"pl-pds\">'</span></span>\n  <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/tensorflow/core/platform/default/integral_types.h<span class=\"pl-pds\">'</span></span>\n  <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/tensorflow/compiler/xla/executable_run_options.h<span class=\"pl-pds\">'</span></span></pre></div>\n<p>graph.cc pretty much just does <code>#include \"graph.h\"</code> as per the tfcompile tutorial and it's weird because these headers <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/compiler/aot/tfcompile.bzl#L209-L230\">seem to be included</a> in the tf_library rule but Bazel still complains that the subsequent cc_binary rule doesn't list them as dependencies.</p>\n<p>This is my BUILD file, placed in the repo root (so I use TensorFlow's Bazel workspace after going through ./configure):</p>\n<div class=\"highlight highlight-source-shell\"><pre>load(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>@org_tensorflow//tensorflow/compiler/aot:tfcompile.bzl<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>tf_library<span class=\"pl-pds\">\"</span></span>)\n\ntf_library(\n  name = <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>graph<span class=\"pl-pds\">\"</span></span>,\n  cpp_class = <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Graph<span class=\"pl-pds\">\"</span></span>,\n  graph = <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>graph.pb<span class=\"pl-pds\">\"</span></span>,\n  config = <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>graph.config.pb<span class=\"pl-pds\">\"</span></span>,\n)\n\ncc_binary(\n  name = <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>model<span class=\"pl-pds\">\"</span></span>,\n  srcs = [<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>graph.cc<span class=\"pl-pds\">\"</span></span>],\n  deps = [<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>:graph<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>//third_party/eigen3<span class=\"pl-pds\">\"</span></span>],\n  linkopts = [<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>-lpthread<span class=\"pl-pds\">\"</span></span>]\n)</pre></div>\n<p>I'm not comfortable with Bazel yet but building worked fine with earlier TensorFlow versions. Stuff started to become wonky somewhere around when @org_tensorflow was introduced throughout tfcompile.bzl, I think.</p>", "body_text": "This happens on a freshly cloned TensorFlow master with Bazel 0.7 on Ubuntu 17.04:\nERROR: tensorflow/BUILD:13:1: undeclared inclusion(s) in rule '//:model':\nthis rule is missing dependency declarations for the following files included by 'graph.cc':\n  'tensorflow/compiler/tf2xla/xla_compiled_cpu_function.h'\n  'tensorflow/compiler/tf2xla/xla_local_runtime_context.h'\n  'tensorflow/core/platform/macros.h'\n  '/tensorflow/core/platform/types.h'\n  '/tensorflow/core/platform/platform.h'\n  '/tensorflow/core/platform/default/integral_types.h'\n  '/tensorflow/compiler/xla/executable_run_options.h'\ngraph.cc pretty much just does #include \"graph.h\" as per the tfcompile tutorial and it's weird because these headers seem to be included in the tf_library rule but Bazel still complains that the subsequent cc_binary rule doesn't list them as dependencies.\nThis is my BUILD file, placed in the repo root (so I use TensorFlow's Bazel workspace after going through ./configure):\nload(\"@org_tensorflow//tensorflow/compiler/aot:tfcompile.bzl\", \"tf_library\")\n\ntf_library(\n  name = \"graph\",\n  cpp_class = \"Graph\",\n  graph = \"graph.pb\",\n  config = \"graph.config.pb\",\n)\n\ncc_binary(\n  name = \"model\",\n  srcs = [\"graph.cc\"],\n  deps = [\":graph\", \"//third_party/eigen3\"],\n  linkopts = [\"-lpthread\"]\n)\nI'm not comfortable with Bazel yet but building worked fine with earlier TensorFlow versions. Stuff started to become wonky somewhere around when @org_tensorflow was introduced throughout tfcompile.bzl, I think.", "body": "This happens on a freshly cloned TensorFlow master with Bazel 0.7 on Ubuntu 17.04:\r\n\r\n```sh\r\nERROR: tensorflow/BUILD:13:1: undeclared inclusion(s) in rule '//:model':\r\nthis rule is missing dependency declarations for the following files included by 'graph.cc':\r\n  'tensorflow/compiler/tf2xla/xla_compiled_cpu_function.h'\r\n  'tensorflow/compiler/tf2xla/xla_local_runtime_context.h'\r\n  'tensorflow/core/platform/macros.h'\r\n  '/tensorflow/core/platform/types.h'\r\n  '/tensorflow/core/platform/platform.h'\r\n  '/tensorflow/core/platform/default/integral_types.h'\r\n  '/tensorflow/compiler/xla/executable_run_options.h'\r\n```\r\ngraph.cc pretty much just does `#include \"graph.h\"` as per the tfcompile tutorial and it's weird because these headers [seem to be included](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/compiler/aot/tfcompile.bzl#L209-L230) in the tf_library rule but Bazel still complains that the subsequent cc_binary rule doesn't list them as dependencies.\r\n\r\nThis is my BUILD file, placed in the repo root (so I use TensorFlow's Bazel workspace after going through ./configure):\r\n```sh\r\nload(\"@org_tensorflow//tensorflow/compiler/aot:tfcompile.bzl\", \"tf_library\")\r\n\r\ntf_library(\r\n  name = \"graph\",\r\n  cpp_class = \"Graph\",\r\n  graph = \"graph.pb\",\r\n  config = \"graph.config.pb\",\r\n)\r\n\r\ncc_binary(\r\n  name = \"model\",\r\n  srcs = [\"graph.cc\"],\r\n  deps = [\":graph\", \"//third_party/eigen3\"],\r\n  linkopts = [\"-lpthread\"]\r\n)\r\n```\r\nI'm not comfortable with Bazel yet but building worked fine with earlier TensorFlow versions. Stuff started to become wonky somewhere around when @org_tensorflow was introduced throughout tfcompile.bzl, I think."}