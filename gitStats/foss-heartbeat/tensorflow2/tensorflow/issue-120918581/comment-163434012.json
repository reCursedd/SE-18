{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/163434012", "html_url": "https://github.com/tensorflow/tensorflow/issues/439#issuecomment-163434012", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/439", "id": 163434012, "node_id": "MDEyOklzc3VlQ29tbWVudDE2MzQzNDAxMg==", "user": {"login": "tcct", "id": 16200676, "node_id": "MDQ6VXNlcjE2MjAwNjc2", "avatar_url": "https://avatars3.githubusercontent.com/u/16200676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tcct", "html_url": "https://github.com/tcct", "followers_url": "https://api.github.com/users/tcct/followers", "following_url": "https://api.github.com/users/tcct/following{/other_user}", "gists_url": "https://api.github.com/users/tcct/gists{/gist_id}", "starred_url": "https://api.github.com/users/tcct/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tcct/subscriptions", "organizations_url": "https://api.github.com/users/tcct/orgs", "repos_url": "https://api.github.com/users/tcct/repos", "events_url": "https://api.github.com/users/tcct/events{/privacy}", "received_events_url": "https://api.github.com/users/tcct/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-09T23:21:21Z", "updated_at": "2015-12-09T23:21:21Z", "author_association": "NONE", "body_html": "<p>Ok, I upgraded to gcc4.8.5, and now I am having issue to compile protobuf:</p>\n<p>INFO: From Compiling google/protobuf/src/google/protobuf/map_field.cc [for host]:<br>\nIn file included from /opt/local/include/gcc48/c++/unordered_map:47:0,<br>\nfrom google/protobuf/src/google/protobuf/stubs/hash.h:139,<br>\nfrom google/protobuf/src/google/protobuf/map.h:35,<br>\nfrom google/protobuf/src/google/protobuf/map_field_lite.h:34,<br>\nfrom google/protobuf/src/google/protobuf/map_field.h:40,<br>\nfrom google/protobuf/src/google/protobuf/map_field.cc:31:<br>\n/opt/local/include/gcc48/c++/bits/hashtable.h: In instantiation of 'std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::__node_type* std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::_M_allocate_node(_Args&amp;&amp; ...) [with _Args = {const std::piecewise_construct_t&amp;, std::tuple&lt;const google::protobuf::MapKey&amp;&gt;, std::tuple&lt;&gt;}; _Key = google::protobuf::MapKey; <em>Value = std::pair&lt;const google::protobuf::MapKey, google::protobuf::MapPair&lt;google::protobuf::MapKey, google::protobuf::MapValueRef&gt;</em>&gt;; <em>Alloc = google::protobuf::Map&lt;google::protobuf::MapKey, google::protobuf::MapValueRef&gt;::MapAllocator&lt;std::pair&lt;const google::protobuf::MapKey, google::protobuf::MapPair&lt;google::protobuf::MapKey, google::protobuf::MapValueRef&gt;</em>&gt; &gt;; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_togoogle::protobuf::MapKey; _H1 = google::protobuf::hashgoogle::protobuf::MapKey; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;; std::_Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::__node_type = std::__detail::<em>Hash_node&lt;std::pair&lt;const google::protobuf::MapKey, google::protobuf::MapPair&lt;google::protobuf::MapKey, google::protobuf::MapValueRef&gt;</em>&gt;, true&gt;]':<br>\n/opt/local/include/gcc48/c++/bits/hashtable_policy.h:493:8:   required from 'std::__detail::_Map_base&lt;_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true&gt;::mapped_type&amp; std::__detail::_Map_base&lt;_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true&gt;::operator[](const key_type&amp;) [with _Key = google::protobuf::MapKey; <em>Pair = std::pair&lt;const google::protobuf::MapKey, google::protobuf::MapPair&lt;google::protobuf::MapKey, google::protobuf::MapValueRef&gt;</em>&gt;; <em>Alloc = google::protobuf::Map&lt;google::protobuf::MapKey, google::protobuf::MapValueRef&gt;::MapAllocator&lt;std::pair&lt;const google::protobuf::MapKey, google::protobuf::MapPair&lt;google::protobuf::MapKey, google::protobuf::MapValueRef&gt;</em>&gt; &gt;; _Equal = std::equal_togoogle::protobuf::MapKey; _H1 = google::protobuf::hashgoogle::protobuf::MapKey; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits&lt;true, false, true&gt;; std::__detail::_Map_base&lt;_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, <em>Traits, true&gt;::mapped_type = google::protobuf::MapPair&lt;google::protobuf::MapKey, google::protobuf::MapValueRef&gt;</em>; std::__detail::_Map_base&lt;_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true&gt;::key_type = google::protobuf::MapKey]'<br>\n/opt/local/include/gcc48/c++/bits/unordered_map.h:596:20:   required from 'std::unordered_map&lt;_Key, _Tp, _Hash, _Pred, _Alloc&gt;::mapped_type&amp; std::unordered_map&lt;_Key, _Tp, _Hash, _Pred, _Alloc&gt;::operator[](const key_type&amp;) [with _Key = google::protobuf::MapKey; <em>Tp = google::protobuf::MapPair&lt;google::protobuf::MapKey, google::protobuf::MapValueRef&gt;</em>; _Hash = google::protobuf::hashgoogle::protobuf::MapKey; _Pred = std::equal_togoogle::protobuf::MapKey; <em>Alloc = google::protobuf::Map&lt;google::protobuf::MapKey, google::protobuf::MapValueRef&gt;::MapAllocator&lt;std::pair&lt;const google::protobuf::MapKey, google::protobuf::MapPair&lt;google::protobuf::MapKey, google::protobuf::MapValueRef&gt;</em>&gt; &gt;; std::unordered_map&lt;_Key, _Tp, _Hash, _Pred, <em>Alloc&gt;::mapped_type = google::protobuf::MapPair&lt;google::protobuf::MapKey, google::protobuf::MapValueRef&gt;</em>; std::unordered_map&lt;_Key, _Tp, _Hash, _Pred, <em>Alloc&gt;::key_type = google::protobuf::MapKey]'<br>\ngoogle/protobuf/src/google/protobuf/map.h:674:36:   required from 'T&amp; google::protobuf::Map&lt;Key, T&gt;::operator[](const key_type&amp;) [with Key = google::protobuf::MapKey; T = google::protobuf::MapValueRef; google::protobuf::Map&lt;Key, T&gt;::key_type = google::protobuf::MapKey]'<br>\ngoogle/protobuf/src/google/protobuf/map_field.cc:185:49:   required from here<br>\n/opt/local/include/gcc48/c++/bits/hashtable.h:727:6: error: no matching function for call to 'google::protobuf::Map&lt;google::protobuf::MapKey, google::protobuf::MapValueRef&gt;::MapAllocator&lt;std::__detail::<em>Hash_node&lt;std::pair&lt;const google::protobuf::MapKey, google::protobuf::MapPair&lt;google::protobuf::MapKey, google::protobuf::MapValueRef&gt;</em>&gt;, true&gt; &gt;::construct(std::<em>Hashtable&lt;google::protobuf::MapKey, std::pair&lt;const google::protobuf::MapKey, google::protobuf::MapPair&lt;google::protobuf::MapKey, google::protobuf::MapValueRef&gt;</em>&gt;, google::protobuf::Map&lt;google::protobuf::MapKey, google::protobuf::MapValueRef&gt;::MapAllocator&lt;std::pair&lt;const google::protobuf::MapKey, google::protobuf::MapPair&lt;google::protobuf::MapKey, google::protobuf::MapValueRef&gt;</em>&gt; &gt;, std::__detail::_Select1st, std::equal_togoogle::protobuf::MapKey, google::protobuf::hashgoogle::protobuf::MapKey, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_<em>node_type</em>&amp;, const std::piecewise_construct_t&amp;, std::tuple&lt;const google::protobuf::MapKey&amp;&gt;, std::tuple&lt;&gt;)'<br>\n<em>M_node_allocator().construct(<em><em>n, std::forward&lt;<em>Args&gt;(__args)...);<br>\n^<br>\n/opt/local/include/gcc48/c++/bits/hashtable.h:727:6: note: candidate is:<br>\nIn file included from google/protobuf/src/google/protobuf/map_field_lite.h:34:0,<br>\nfrom google/protobuf/src/google/protobuf/map_field.h:40,<br>\nfrom google/protobuf/src/google/protobuf/map_field.cc:31:<br>\ngoogle/protobuf/src/google/protobuf/map.h:562:10: note: void google::protobuf::Map&lt;Key, T&gt;::MapAllocator::construct(google::protobuf::Map&lt;Key, T&gt;::MapAllocator::pointer, google::protobuf::Map&lt;Key, T&gt;::MapAllocator::const_reference) [with U = std::__detail::<em>Hash_node&lt;std::pair&lt;const google::protobuf::MapKey, google::protobuf::MapPair&lt;google::protobuf::MapKey, google::protobuf::MapValueRef&gt;</em>&gt;, true&gt;; Key = google::protobuf::MapKey; T = google::protobuf::MapValueRef; google::protobuf::Map&lt;Key, T&gt;::MapAllocator::pointer = std::__detail::<em>Hash_node&lt;std::pair&lt;const google::protobuf::MapKey, google::protobuf::MapPair&lt;google::protobuf::MapKey, google::protobuf::MapValueRef&gt;</em>&gt;, true&gt;</em>; google::protobuf::Map&lt;Key, T&gt;::MapAllocator::value_type = std::<em><em>detail::<em>Hash_node&lt;std::pair&lt;const google::protobuf::MapKey, google::protobuf::MapPair&lt;google::protobuf::MapKey, google::protobuf::MapValueRef&gt;</em>&gt;, true&gt;; google::protobuf::Map&lt;Key, T&gt;::MapAllocator::const_reference = const std::<em><em>detail::<em>Hash_node&lt;std::pair&lt;const google::protobuf::MapKey, google::protobuf::MapPair&lt;google::protobuf::MapKey, google::protobuf::MapValueRef&gt;</em>&gt;, true&gt;&amp;]<br>\nvoid construct(pointer p, const_reference t) { new (p) value_type(t); }<br>\n^<br>\ngoogle/protobuf/src/google/protobuf/map.h:562:10: note:   candidate expects 2 arguments, 4 provided<br>\nERROR: /Users/chaotan/Workspace/deep_learning/tensorflow/tensorflow1/google/protobuf/BUILD:64:1: C++ compilation of rule '//google/protobuf:protobuf' failed: osx_gcc_wrapper.sh failed: error executing command<br>\n(cd /private/var/tmp/<em>bazel_chaotan/58945d877128dff569ec8b54b7c14ab6/tensorflow1 &amp;&amp; <br>\nexec env - <br>\nINTERCEPT_LOCALLY_EXECUTABLE=1 <br>\nPATH=/opt/local/bin:/usr/local/git/bin:/sw/bin/:/usr/local/bin:/usr/local/:/usr/local/sbin:/usr/local/mysql/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/texbin:/usr/local/bin/ <br>\nTMPDIR=/var/folders/4r/gpk5b_zn30qf4f5z7xc33k0w002l2g/T/ <br>\ntools/cpp/osx_gcc_wrapper.sh '-D_FORTIFY_SOURCE=1' -fstack-protector -fPIE -Wall -fno-omit-frame-pointer -g0 -O2 -DNDEBUG -ffunction-sections -fdata-sections -g0 '-std=c++0x' -iquote . -iquote bazel-out/host/genfiles -isystem google/protobuf/src -isystem bazel-out/host/genfiles/google/protobuf/src -isystem tools/cpp/gcc3 -DHAVE_PTHREAD -Wall -Wwrite-strings -Woverloaded-virtual -Wno-sign-compare '-Wno-error=unused-function' -no-canonical-prefixes -Wno-builtin-macro-redefined '-D__DATE</em></em>=\"redacted\"' '-D__TIMESTAMP</em>=\"redacted\"' '-D__TIME=\"redacted\"' '-frandom-seed=bazel-out/host/bin/google/protobuf/<em>objs/protobuf/google/protobuf/src/google/protobuf/map_field.o' -MD -MF bazel-out/host/bin/google/protobuf/<em>objs/protobuf/google/protobuf/src/google/protobuf/map_field.d -c google/protobuf/src/google/protobuf/map_field.cc -o bazel-out/host/bin/google/protobuf/<em>objs/protobuf/google/protobuf/src/google/protobuf/map_field.o): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1: osx_gcc_wrapper.sh failed: error executing command<br>\n(cd /private/var/tmp/<em>bazel_chaotan/58945d877128dff569ec8b54b7c14ab6/tensorflow1 &amp;&amp; <br>\nexec env - <br>\nINTERCEPT_LOCALLY_EXECUTABLE=1 <br>\nPATH=/opt/local/bin:/usr/local/git/bin:/sw/bin/:/usr/local/bin:/usr/local/:/usr/local/sbin:/usr/local/mysql/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/texbin:/usr/local/bin/ <br>\nTMPDIR=/var/folders/4r/gpk5b_zn30qf4f5z7xc33k0w002l2g/T/ <br>\ntools/cpp/osx_gcc_wrapper.sh '-D_FORTIFY_SOURCE=1' -fstack-protector -fPIE -Wall -fno-omit-frame-pointer -g0 -O2 -DNDEBUG -ffunction-sections -fdata-sections -g0 '-std=c++0x' -iquote . -iquote bazel-out/host/genfiles -isystem google/protobuf/src -isystem bazel-out/host/genfiles/google/protobuf/src -isystem tools/cpp/gcc3 -DHAVE_PTHREAD -Wall -Wwrite-strings -Woverloaded-virtual -Wno-sign-compare '-Wno-error=unused-function' -no-canonical-prefixes -Wno-builtin-macro-redefined '-D__DATE</em></em>=\"redacted\"' '-D__TIMESTAMP</em></em>=\"redacted\"' '-D__TIME=\"redacted\"' '-frandom-seed=bazel-out/host/bin/google/protobuf/_objs/protobuf/google/protobuf/src/google/protobuf/map_field.o' -MD -MF bazel-out/host/bin/google/protobuf/_objs/protobuf/google/protobuf/src/google/protobuf/map_field.d -c google/protobuf/src/google/protobuf/map_field.cc -o bazel-out/host/bin/google/protobuf/_objs/protobuf/google/protobuf/src/google/protobuf/map_field.o): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1.<br>\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build<br>\nINFO: Elapsed time: 3.012s, Critical Path: 2.06s</em></em></em></em></em></p>", "body_text": "Ok, I upgraded to gcc4.8.5, and now I am having issue to compile protobuf:\nINFO: From Compiling google/protobuf/src/google/protobuf/map_field.cc [for host]:\nIn file included from /opt/local/include/gcc48/c++/unordered_map:47:0,\nfrom google/protobuf/src/google/protobuf/stubs/hash.h:139,\nfrom google/protobuf/src/google/protobuf/map.h:35,\nfrom google/protobuf/src/google/protobuf/map_field_lite.h:34,\nfrom google/protobuf/src/google/protobuf/map_field.h:40,\nfrom google/protobuf/src/google/protobuf/map_field.cc:31:\n/opt/local/include/gcc48/c++/bits/hashtable.h: In instantiation of 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type* std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const google::protobuf::MapKey&>, std::tuple<>}; _Key = google::protobuf::MapKey; Value = std::pair<const google::protobuf::MapKey, google::protobuf::MapPair<google::protobuf::MapKey, google::protobuf::MapValueRef>>; Alloc = google::protobuf::Map<google::protobuf::MapKey, google::protobuf::MapValueRef>::MapAllocator<std::pair<const google::protobuf::MapKey, google::protobuf::MapPair<google::protobuf::MapKey, google::protobuf::MapValueRef>> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_togoogle::protobuf::MapKey; _H1 = google::protobuf::hashgoogle::protobuf::MapKey; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type = std::__detail::Hash_node<std::pair<const google::protobuf::MapKey, google::protobuf::MapPair<google::protobuf::MapKey, google::protobuf::MapValueRef>>, true>]':\n/opt/local/include/gcc48/c++/bits/hashtable_policy.h:493:8:   required from 'std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = google::protobuf::MapKey; Pair = std::pair<const google::protobuf::MapKey, google::protobuf::MapPair<google::protobuf::MapKey, google::protobuf::MapValueRef>>; Alloc = google::protobuf::Map<google::protobuf::MapKey, google::protobuf::MapValueRef>::MapAllocator<std::pair<const google::protobuf::MapKey, google::protobuf::MapPair<google::protobuf::MapKey, google::protobuf::MapValueRef>> >; _Equal = std::equal_togoogle::protobuf::MapKey; _H1 = google::protobuf::hashgoogle::protobuf::MapKey; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>; std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, Traits, true>::mapped_type = google::protobuf::MapPair<google::protobuf::MapKey, google::protobuf::MapValueRef>; std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::key_type = google::protobuf::MapKey]'\n/opt/local/include/gcc48/c++/bits/unordered_map.h:596:20:   required from 'std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::mapped_type& std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::operator[](const key_type&) [with _Key = google::protobuf::MapKey; Tp = google::protobuf::MapPair<google::protobuf::MapKey, google::protobuf::MapValueRef>; _Hash = google::protobuf::hashgoogle::protobuf::MapKey; _Pred = std::equal_togoogle::protobuf::MapKey; Alloc = google::protobuf::Map<google::protobuf::MapKey, google::protobuf::MapValueRef>::MapAllocator<std::pair<const google::protobuf::MapKey, google::protobuf::MapPair<google::protobuf::MapKey, google::protobuf::MapValueRef>> >; std::unordered_map<_Key, _Tp, _Hash, _Pred, Alloc>::mapped_type = google::protobuf::MapPair<google::protobuf::MapKey, google::protobuf::MapValueRef>; std::unordered_map<_Key, _Tp, _Hash, _Pred, Alloc>::key_type = google::protobuf::MapKey]'\ngoogle/protobuf/src/google/protobuf/map.h:674:36:   required from 'T& google::protobuf::Map<Key, T>::operator[](const key_type&) [with Key = google::protobuf::MapKey; T = google::protobuf::MapValueRef; google::protobuf::Map<Key, T>::key_type = google::protobuf::MapKey]'\ngoogle/protobuf/src/google/protobuf/map_field.cc:185:49:   required from here\n/opt/local/include/gcc48/c++/bits/hashtable.h:727:6: error: no matching function for call to 'google::protobuf::Map<google::protobuf::MapKey, google::protobuf::MapValueRef>::MapAllocator<std::__detail::Hash_node<std::pair<const google::protobuf::MapKey, google::protobuf::MapPair<google::protobuf::MapKey, google::protobuf::MapValueRef>>, true> >::construct(std::Hashtable<google::protobuf::MapKey, std::pair<const google::protobuf::MapKey, google::protobuf::MapPair<google::protobuf::MapKey, google::protobuf::MapValueRef>>, google::protobuf::Map<google::protobuf::MapKey, google::protobuf::MapValueRef>::MapAllocator<std::pair<const google::protobuf::MapKey, google::protobuf::MapPair<google::protobuf::MapKey, google::protobuf::MapValueRef>> >, std::__detail::_Select1st, std::equal_togoogle::protobuf::MapKey, google::protobuf::hashgoogle::protobuf::MapKey, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_node_type&, const std::piecewise_construct_t&, std::tuple<const google::protobuf::MapKey&>, std::tuple<>)'\nM_node_allocator().construct(n, std::forward<Args>(__args)...);\n^\n/opt/local/include/gcc48/c++/bits/hashtable.h:727:6: note: candidate is:\nIn file included from google/protobuf/src/google/protobuf/map_field_lite.h:34:0,\nfrom google/protobuf/src/google/protobuf/map_field.h:40,\nfrom google/protobuf/src/google/protobuf/map_field.cc:31:\ngoogle/protobuf/src/google/protobuf/map.h:562:10: note: void google::protobuf::Map<Key, T>::MapAllocator::construct(google::protobuf::Map<Key, T>::MapAllocator::pointer, google::protobuf::Map<Key, T>::MapAllocator::const_reference) [with U = std::__detail::Hash_node<std::pair<const google::protobuf::MapKey, google::protobuf::MapPair<google::protobuf::MapKey, google::protobuf::MapValueRef>>, true>; Key = google::protobuf::MapKey; T = google::protobuf::MapValueRef; google::protobuf::Map<Key, T>::MapAllocator::pointer = std::__detail::Hash_node<std::pair<const google::protobuf::MapKey, google::protobuf::MapPair<google::protobuf::MapKey, google::protobuf::MapValueRef>>, true>; google::protobuf::Map<Key, T>::MapAllocator::value_type = std::detail::Hash_node<std::pair<const google::protobuf::MapKey, google::protobuf::MapPair<google::protobuf::MapKey, google::protobuf::MapValueRef>>, true>; google::protobuf::Map<Key, T>::MapAllocator::const_reference = const std::detail::Hash_node<std::pair<const google::protobuf::MapKey, google::protobuf::MapPair<google::protobuf::MapKey, google::protobuf::MapValueRef>>, true>&]\nvoid construct(pointer p, const_reference t) { new (p) value_type(t); }\n^\ngoogle/protobuf/src/google/protobuf/map.h:562:10: note:   candidate expects 2 arguments, 4 provided\nERROR: /Users/chaotan/Workspace/deep_learning/tensorflow/tensorflow1/google/protobuf/BUILD:64:1: C++ compilation of rule '//google/protobuf:protobuf' failed: osx_gcc_wrapper.sh failed: error executing command\n(cd /private/var/tmp/bazel_chaotan/58945d877128dff569ec8b54b7c14ab6/tensorflow1 && \nexec env - \nINTERCEPT_LOCALLY_EXECUTABLE=1 \nPATH=/opt/local/bin:/usr/local/git/bin:/sw/bin/:/usr/local/bin:/usr/local/:/usr/local/sbin:/usr/local/mysql/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/texbin:/usr/local/bin/ \nTMPDIR=/var/folders/4r/gpk5b_zn30qf4f5z7xc33k0w002l2g/T/ \ntools/cpp/osx_gcc_wrapper.sh '-D_FORTIFY_SOURCE=1' -fstack-protector -fPIE -Wall -fno-omit-frame-pointer -g0 -O2 -DNDEBUG -ffunction-sections -fdata-sections -g0 '-std=c++0x' -iquote . -iquote bazel-out/host/genfiles -isystem google/protobuf/src -isystem bazel-out/host/genfiles/google/protobuf/src -isystem tools/cpp/gcc3 -DHAVE_PTHREAD -Wall -Wwrite-strings -Woverloaded-virtual -Wno-sign-compare '-Wno-error=unused-function' -no-canonical-prefixes -Wno-builtin-macro-redefined '-D__DATE=\"redacted\"' '-D__TIMESTAMP=\"redacted\"' '-D__TIME=\"redacted\"' '-frandom-seed=bazel-out/host/bin/google/protobuf/objs/protobuf/google/protobuf/src/google/protobuf/map_field.o' -MD -MF bazel-out/host/bin/google/protobuf/objs/protobuf/google/protobuf/src/google/protobuf/map_field.d -c google/protobuf/src/google/protobuf/map_field.cc -o bazel-out/host/bin/google/protobuf/objs/protobuf/google/protobuf/src/google/protobuf/map_field.o): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1: osx_gcc_wrapper.sh failed: error executing command\n(cd /private/var/tmp/bazel_chaotan/58945d877128dff569ec8b54b7c14ab6/tensorflow1 && \nexec env - \nINTERCEPT_LOCALLY_EXECUTABLE=1 \nPATH=/opt/local/bin:/usr/local/git/bin:/sw/bin/:/usr/local/bin:/usr/local/:/usr/local/sbin:/usr/local/mysql/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/texbin:/usr/local/bin/ \nTMPDIR=/var/folders/4r/gpk5b_zn30qf4f5z7xc33k0w002l2g/T/ \ntools/cpp/osx_gcc_wrapper.sh '-D_FORTIFY_SOURCE=1' -fstack-protector -fPIE -Wall -fno-omit-frame-pointer -g0 -O2 -DNDEBUG -ffunction-sections -fdata-sections -g0 '-std=c++0x' -iquote . -iquote bazel-out/host/genfiles -isystem google/protobuf/src -isystem bazel-out/host/genfiles/google/protobuf/src -isystem tools/cpp/gcc3 -DHAVE_PTHREAD -Wall -Wwrite-strings -Woverloaded-virtual -Wno-sign-compare '-Wno-error=unused-function' -no-canonical-prefixes -Wno-builtin-macro-redefined '-D__DATE=\"redacted\"' '-D__TIMESTAMP=\"redacted\"' '-D__TIME=\"redacted\"' '-frandom-seed=bazel-out/host/bin/google/protobuf/_objs/protobuf/google/protobuf/src/google/protobuf/map_field.o' -MD -MF bazel-out/host/bin/google/protobuf/_objs/protobuf/google/protobuf/src/google/protobuf/map_field.d -c google/protobuf/src/google/protobuf/map_field.cc -o bazel-out/host/bin/google/protobuf/_objs/protobuf/google/protobuf/src/google/protobuf/map_field.o): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1.\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\nINFO: Elapsed time: 3.012s, Critical Path: 2.06s", "body": "Ok, I upgraded to gcc4.8.5, and now I am having issue to compile protobuf:\n\nINFO: From Compiling google/protobuf/src/google/protobuf/map_field.cc [for host]:\nIn file included from /opt/local/include/gcc48/c++/unordered_map:47:0,\n                 from google/protobuf/src/google/protobuf/stubs/hash.h:139,\n                 from google/protobuf/src/google/protobuf/map.h:35,\n                 from google/protobuf/src/google/protobuf/map_field_lite.h:34,\n                 from google/protobuf/src/google/protobuf/map_field.h:40,\n                 from google/protobuf/src/google/protobuf/map_field.cc:31:\n/opt/local/include/gcc48/c++/bits/hashtable.h: In instantiation of 'std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type\\* std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_allocate_node(_Args&& ...) [with _Args = {const std::piecewise_construct_t&, std::tuple<const google::protobuf::MapKey&>, std::tuple<>}; _Key = google::protobuf::MapKey; _Value = std::pair<const google::protobuf::MapKey, google::protobuf::MapPair<google::protobuf::MapKey, google::protobuf::MapValueRef>_>; _Alloc = google::protobuf::Map<google::protobuf::MapKey, google::protobuf::MapValueRef>::MapAllocator<std::pair<const google::protobuf::MapKey, google::protobuf::MapPair<google::protobuf::MapKey, google::protobuf::MapValueRef>_> >; _ExtractKey = std::__detail::_Select1st; _Equal = std::equal_togoogle::protobuf::MapKey; _H1 = google::protobuf::hashgoogle::protobuf::MapKey; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>; std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type = std::__detail::_Hash_node<std::pair<const google::protobuf::MapKey, google::protobuf::MapPair<google::protobuf::MapKey, google::protobuf::MapValueRef>_>, true>]':\n/opt/local/include/gcc48/c++/bits/hashtable_policy.h:493:8:   required from 'std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::mapped_type& std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::operator[](const key_type&) [with _Key = google::protobuf::MapKey; _Pair = std::pair<const google::protobuf::MapKey, google::protobuf::MapPair<google::protobuf::MapKey, google::protobuf::MapValueRef>_>; _Alloc = google::protobuf::Map<google::protobuf::MapKey, google::protobuf::MapValueRef>::MapAllocator<std::pair<const google::protobuf::MapKey, google::protobuf::MapPair<google::protobuf::MapKey, google::protobuf::MapValueRef>_> >; _Equal = std::equal_togoogle::protobuf::MapKey; _H1 = google::protobuf::hashgoogle::protobuf::MapKey; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<true, false, true>; std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::mapped_type = google::protobuf::MapPair<google::protobuf::MapKey, google::protobuf::MapValueRef>_; std::__detail::_Map_base<_Key, _Pair, _Alloc, std::__detail::_Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::key_type = google::protobuf::MapKey]'\n/opt/local/include/gcc48/c++/bits/unordered_map.h:596:20:   required from 'std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::mapped_type& std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::operator[](const key_type&) [with _Key = google::protobuf::MapKey; _Tp = google::protobuf::MapPair<google::protobuf::MapKey, google::protobuf::MapValueRef>_; _Hash = google::protobuf::hashgoogle::protobuf::MapKey; _Pred = std::equal_togoogle::protobuf::MapKey; _Alloc = google::protobuf::Map<google::protobuf::MapKey, google::protobuf::MapValueRef>::MapAllocator<std::pair<const google::protobuf::MapKey, google::protobuf::MapPair<google::protobuf::MapKey, google::protobuf::MapValueRef>_> >; std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::mapped_type = google::protobuf::MapPair<google::protobuf::MapKey, google::protobuf::MapValueRef>_; std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::key_type = google::protobuf::MapKey]'\ngoogle/protobuf/src/google/protobuf/map.h:674:36:   required from 'T& google::protobuf::Map<Key, T>::operator[](const key_type&) [with Key = google::protobuf::MapKey; T = google::protobuf::MapValueRef; google::protobuf::Map<Key, T>::key_type = google::protobuf::MapKey]'\ngoogle/protobuf/src/google/protobuf/map_field.cc:185:49:   required from here\n/opt/local/include/gcc48/c++/bits/hashtable.h:727:6: error: no matching function for call to 'google::protobuf::Map<google::protobuf::MapKey, google::protobuf::MapValueRef>::MapAllocator<std::__detail::_Hash_node<std::pair<const google::protobuf::MapKey, google::protobuf::MapPair<google::protobuf::MapKey, google::protobuf::MapValueRef>_>, true> >::construct(std::_Hashtable<google::protobuf::MapKey, std::pair<const google::protobuf::MapKey, google::protobuf::MapPair<google::protobuf::MapKey, google::protobuf::MapValueRef>_>, google::protobuf::Map<google::protobuf::MapKey, google::protobuf::MapValueRef>::MapAllocator<std::pair<const google::protobuf::MapKey, google::protobuf::MapPair<google::protobuf::MapKey, google::protobuf::MapValueRef>_> >, std::__detail::_Select1st, std::equal_togoogle::protobuf::MapKey, google::protobuf::hashgoogle::protobuf::MapKey, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::__node_type_&, const std::piecewise_construct_t&, std::tuple<const google::protobuf::MapKey&>, std::tuple<>)'\n      _M_node_allocator().construct(__n, std::forward<_Args>(__args)...);\n      ^\n/opt/local/include/gcc48/c++/bits/hashtable.h:727:6: note: candidate is:\nIn file included from google/protobuf/src/google/protobuf/map_field_lite.h:34:0,\n                 from google/protobuf/src/google/protobuf/map_field.h:40,\n                 from google/protobuf/src/google/protobuf/map_field.cc:31:\ngoogle/protobuf/src/google/protobuf/map.h:562:10: note: void google::protobuf::Map<Key, T>::MapAllocator<U>::construct(google::protobuf::Map<Key, T>::MapAllocator<U>::pointer, google::protobuf::Map<Key, T>::MapAllocator<U>::const_reference) [with U = std::__detail::_Hash_node<std::pair<const google::protobuf::MapKey, google::protobuf::MapPair<google::protobuf::MapKey, google::protobuf::MapValueRef>_>, true>; Key = google::protobuf::MapKey; T = google::protobuf::MapValueRef; google::protobuf::Map<Key, T>::MapAllocator<U>::pointer = std::__detail::_Hash_node<std::pair<const google::protobuf::MapKey, google::protobuf::MapPair<google::protobuf::MapKey, google::protobuf::MapValueRef>_>, true>_; google::protobuf::Map<Key, T>::MapAllocator<U>::value_type = std::__detail::_Hash_node<std::pair<const google::protobuf::MapKey, google::protobuf::MapPair<google::protobuf::MapKey, google::protobuf::MapValueRef>_>, true>; google::protobuf::Map<Key, T>::MapAllocator<U>::const_reference = const std::__detail::_Hash_node<std::pair<const google::protobuf::MapKey, google::protobuf::MapPair<google::protobuf::MapKey, google::protobuf::MapValueRef>_>, true>&]\n     void construct(pointer p, const_reference t) { new (p) value_type(t); }\n          ^\ngoogle/protobuf/src/google/protobuf/map.h:562:10: note:   candidate expects 2 arguments, 4 provided\nERROR: /Users/chaotan/Workspace/deep_learning/tensorflow/tensorflow1/google/protobuf/BUILD:64:1: C++ compilation of rule '//google/protobuf:protobuf' failed: osx_gcc_wrapper.sh failed: error executing command \n  (cd /private/var/tmp/_bazel_chaotan/58945d877128dff569ec8b54b7c14ab6/tensorflow1 && \\\n  exec env - \\\n    INTERCEPT_LOCALLY_EXECUTABLE=1 \\\n    PATH=/opt/local/bin:/usr/local/git/bin:/sw/bin/:/usr/local/bin:/usr/local/:/usr/local/sbin:/usr/local/mysql/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/texbin:/usr/local/bin/ \\\n    TMPDIR=/var/folders/4r/gpk5b_zn30qf4f5z7xc33k0w002l2g/T/ \\\n  tools/cpp/osx_gcc_wrapper.sh '-D_FORTIFY_SOURCE=1' -fstack-protector -fPIE -Wall -fno-omit-frame-pointer -g0 -O2 -DNDEBUG -ffunction-sections -fdata-sections -g0 '-std=c++0x' -iquote . -iquote bazel-out/host/genfiles -isystem google/protobuf/src -isystem bazel-out/host/genfiles/google/protobuf/src -isystem tools/cpp/gcc3 -DHAVE_PTHREAD -Wall -Wwrite-strings -Woverloaded-virtual -Wno-sign-compare '-Wno-error=unused-function' -no-canonical-prefixes -Wno-builtin-macro-redefined '-D__DATE__=\"redacted\"' '-D__TIMESTAMP__=\"redacted\"' '-D__TIME__=\"redacted\"' '-frandom-seed=bazel-out/host/bin/google/protobuf/_objs/protobuf/google/protobuf/src/google/protobuf/map_field.o' -MD -MF bazel-out/host/bin/google/protobuf/_objs/protobuf/google/protobuf/src/google/protobuf/map_field.d -c google/protobuf/src/google/protobuf/map_field.cc -o bazel-out/host/bin/google/protobuf/_objs/protobuf/google/protobuf/src/google/protobuf/map_field.o): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1: osx_gcc_wrapper.sh failed: error executing command \n  (cd /private/var/tmp/_bazel_chaotan/58945d877128dff569ec8b54b7c14ab6/tensorflow1 && \\\n  exec env - \\\n    INTERCEPT_LOCALLY_EXECUTABLE=1 \\\n    PATH=/opt/local/bin:/usr/local/git/bin:/sw/bin/:/usr/local/bin:/usr/local/:/usr/local/sbin:/usr/local/mysql/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/texbin:/usr/local/bin/ \\\n    TMPDIR=/var/folders/4r/gpk5b_zn30qf4f5z7xc33k0w002l2g/T/ \\\n  tools/cpp/osx_gcc_wrapper.sh '-D_FORTIFY_SOURCE=1' -fstack-protector -fPIE -Wall -fno-omit-frame-pointer -g0 -O2 -DNDEBUG -ffunction-sections -fdata-sections -g0 '-std=c++0x' -iquote . -iquote bazel-out/host/genfiles -isystem google/protobuf/src -isystem bazel-out/host/genfiles/google/protobuf/src -isystem tools/cpp/gcc3 -DHAVE_PTHREAD -Wall -Wwrite-strings -Woverloaded-virtual -Wno-sign-compare '-Wno-error=unused-function' -no-canonical-prefixes -Wno-builtin-macro-redefined '-D__DATE__=\"redacted\"' '-D__TIMESTAMP__=\"redacted\"' '-D__TIME__=\"redacted\"' '-frandom-seed=bazel-out/host/bin/google/protobuf/_objs/protobuf/google/protobuf/src/google/protobuf/map_field.o' -MD -MF bazel-out/host/bin/google/protobuf/_objs/protobuf/google/protobuf/src/google/protobuf/map_field.d -c google/protobuf/src/google/protobuf/map_field.cc -o bazel-out/host/bin/google/protobuf/_objs/protobuf/google/protobuf/src/google/protobuf/map_field.o): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1.\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\nINFO: Elapsed time: 3.012s, Critical Path: 2.06s\n"}