{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/223141174", "html_url": "https://github.com/tensorflow/tensorflow/pull/2440#issuecomment-223141174", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2440", "id": 223141174, "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzE0MTE3NA==", "user": {"login": "timbrucks", "id": 17724266, "node_id": "MDQ6VXNlcjE3NzI0MjY2", "avatar_url": "https://avatars1.githubusercontent.com/u/17724266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timbrucks", "html_url": "https://github.com/timbrucks", "followers_url": "https://api.github.com/users/timbrucks/followers", "following_url": "https://api.github.com/users/timbrucks/following{/other_user}", "gists_url": "https://api.github.com/users/timbrucks/gists{/gist_id}", "starred_url": "https://api.github.com/users/timbrucks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timbrucks/subscriptions", "organizations_url": "https://api.github.com/users/timbrucks/orgs", "repos_url": "https://api.github.com/users/timbrucks/repos", "events_url": "https://api.github.com/users/timbrucks/events{/privacy}", "received_events_url": "https://api.github.com/users/timbrucks/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-01T22:13:57Z", "updated_at": "2016-06-01T22:13:57Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=161459\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/petewarden\">@petewarden</a> thanks for the very clear explanation, I was pretty confused. Per your suggestion I was able to get the linker to stop stripping code from the library. I now have the TF core code integrated into my development paradigm (ahead of schedule too ... I did not think I could get it done before TF arrived at version 1.0).</p>\n<p>If anyone is trying to do something similar via CMake, the step that overcame the linker issues was adding \"-all_load\" within the target_link_libraries() call in the CMakeLists.txt file</p>", "body_text": "@petewarden thanks for the very clear explanation, I was pretty confused. Per your suggestion I was able to get the linker to stop stripping code from the library. I now have the TF core code integrated into my development paradigm (ahead of schedule too ... I did not think I could get it done before TF arrived at version 1.0).\nIf anyone is trying to do something similar via CMake, the step that overcame the linker issues was adding \"-all_load\" within the target_link_libraries() call in the CMakeLists.txt file", "body": "@petewarden thanks for the very clear explanation, I was pretty confused. Per your suggestion I was able to get the linker to stop stripping code from the library. I now have the TF core code integrated into my development paradigm (ahead of schedule too ... I did not think I could get it done before TF arrived at version 1.0).\n\nIf anyone is trying to do something similar via CMake, the step that overcame the linker issues was adding \"-all_load\" within the target_link_libraries() call in the CMakeLists.txt file\n"}