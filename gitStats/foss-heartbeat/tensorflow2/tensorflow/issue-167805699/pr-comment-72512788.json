{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/72512788", "pull_request_review_id": null, "id": 72512788, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcyNTEyNzg4", "diff_hunk": "@@ -29,7 +29,16 @@ static Graph* Unary(const string& func, int num, DataType dtype) {\n   Graph* g = new Graph(OpRegistry::Global());\n   Tensor data(dtype, TensorShape({64, 64, num / (64 * 64)}));\n   CHECK_GT(data.NumElements(), 0);\n-  data.flat<float>().setRandom();\n+  switch (dtype) {", "path": "tensorflow/core/kernels/cwise_ops_test.cc", "position": null, "original_position": 5, "commit_id": "15136e0dbf3d88d01225880d4802ea4b89307fb9", "original_commit_id": "55a5cc0b21e24fe9180bc5d850744b315b93cf5e", "user": {"login": "rryan", "id": 26527, "node_id": "MDQ6VXNlcjI2NTI3", "avatar_url": "https://avatars3.githubusercontent.com/u/26527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rryan", "html_url": "https://github.com/rryan", "followers_url": "https://api.github.com/users/rryan/followers", "following_url": "https://api.github.com/users/rryan/following{/other_user}", "gists_url": "https://api.github.com/users/rryan/gists{/gist_id}", "starred_url": "https://api.github.com/users/rryan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rryan/subscriptions", "organizations_url": "https://api.github.com/users/rryan/orgs", "repos_url": "https://api.github.com/users/rryan/repos", "events_url": "https://api.github.com/users/rryan/events{/privacy}", "received_events_url": "https://api.github.com/users/rryan/received_events", "type": "User", "site_admin": false}, "body": "I think it would be less error prone if we made this a template function of T -- then the C++ type could be part of the BM_UNARY macro below. You can see an example of this in the matmul benchmark:\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/matmul_op_test.cc#L23\n", "created_at": "2016-07-27T20:05:58Z", "updated_at": "2016-07-27T21:09:31Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/3522#discussion_r72512788", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/3522", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/72512788"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/3522#discussion_r72512788"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/3522"}}, "body_html": "<p>I think it would be less error prone if we made this a template function of T -- then the C++ type could be part of the BM_UNARY macro below. You can see an example of this in the matmul benchmark:<br>\n<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/matmul_op_test.cc#L23\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/matmul_op_test.cc#L23</a></p>", "body_text": "I think it would be less error prone if we made this a template function of T -- then the C++ type could be part of the BM_UNARY macro below. You can see an example of this in the matmul benchmark:\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/matmul_op_test.cc#L23"}