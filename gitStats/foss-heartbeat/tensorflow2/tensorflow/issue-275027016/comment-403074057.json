{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/403074057", "html_url": "https://github.com/tensorflow/tensorflow/issues/14675#issuecomment-403074057", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14675", "id": 403074057, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzA3NDA1Nw==", "user": {"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-06T15:53:57Z", "updated_at": "2018-07-06T15:53:57Z", "author_association": "MEMBER", "body_html": "<div class=\"email-fragment\">Sadly it's a tradeoff, and there's no good default. The glorot_uniform was\nchosen because for the common case of variables as kernels in dense or\nconvolutional layers it's a much better default than 0 (which will not\ntrain) or random_uniform (which will not train well on deeper networks).</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On Wed, Jul 4, 2018 at 4:56 AM saluto ***@***.***&gt; wrote:\n (Sorry for my English.) I have another problem with random initializers,\n but don't want to create a separate issue yet: Until now I assumed that\n tf.get_variable() by default initializes with zeros (\n tf.zeros_initializer()) and just now was really shocked that it seems to\n use tf.glorot_uniform_initializer(), which is not documented in the\n section for tf.get_variable(). That destroyed a couple of research days.\n In my opinion there should be no assumption about how something basic like\n a variable is used. But tf.glorot_uniform_initializer() seems to make\n assumptions just based on the shape. Am I wrong on this? Why not use\n tf.zeros_initializer() or maybe tf.random_uniform_initializer() by\n default? It's extremely confusing. At least put it in the documentation.\n Now I'm really intimidated by the whole tensorflow framework, because I'm\n unsure which other assumptions are implemented. I would love to be proven\n wrong.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"275027016\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/14675\" href=\"https://github.com/tensorflow/tensorflow/issues/14675#issuecomment-402456286\">#14675 (comment)</a>&gt;,\n or mute the thread\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/AAATxbthNuVhtQ4NPcJOrN5Os9qUh2fBks5uDK19gaJpZM4QiwcH\">https://github.com/notifications/unsubscribe-auth/AAATxbthNuVhtQ4NPcJOrN5Os9qUh2fBks5uDK19gaJpZM4QiwcH</a>&gt;\n .\n</div>\n<div class=\"email-fragment\"></div>\n<div class=\"email-signature-reply\">-- \n - Alex</div>\n</div>", "body_text": "Sadly it's a tradeoff, and there's no good default. The glorot_uniform was\nchosen because for the common case of variables as kernels in dense or\nconvolutional layers it's a much better default than 0 (which will not\ntrain) or random_uniform (which will not train well on deeper networks).\n\u2026\nOn Wed, Jul 4, 2018 at 4:56 AM saluto ***@***.***> wrote:\n (Sorry for my English.) I have another problem with random initializers,\n but don't want to create a separate issue yet: Until now I assumed that\n tf.get_variable() by default initializes with zeros (\n tf.zeros_initializer()) and just now was really shocked that it seems to\n use tf.glorot_uniform_initializer(), which is not documented in the\n section for tf.get_variable(). That destroyed a couple of research days.\n In my opinion there should be no assumption about how something basic like\n a variable is used. But tf.glorot_uniform_initializer() seems to make\n assumptions just based on the shape. Am I wrong on this? Why not use\n tf.zeros_initializer() or maybe tf.random_uniform_initializer() by\n default? It's extremely confusing. At least put it in the documentation.\n Now I'm really intimidated by the whole tensorflow framework, because I'm\n unsure which other assumptions are implemented. I would love to be proven\n wrong.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#14675 (comment)>,\n or mute the thread\n <https://github.com/notifications/unsubscribe-auth/AAATxbthNuVhtQ4NPcJOrN5Os9qUh2fBks5uDK19gaJpZM4QiwcH>\n .\n\n\n-- \n - Alex", "body": "Sadly it's a tradeoff, and there's no good default. The glorot_uniform was\nchosen because for the common case of variables as kernels in dense or\nconvolutional layers it's a much better default than 0 (which will not\ntrain) or random_uniform (which will not train well on deeper networks).\n\nOn Wed, Jul 4, 2018 at 4:56 AM saluto <notifications@github.com> wrote:\n\n> (Sorry for my English.) I have another problem with random initializers,\n> but don't want to create a separate issue yet: Until now I assumed that\n> tf.get_variable() by default initializes with zeros (\n> tf.zeros_initializer()) and just now was really shocked that it seems to\n> use tf.glorot_uniform_initializer(), which is not documented in the\n> section for tf.get_variable(). That destroyed a couple of research days.\n> In my opinion there should be no assumption about how something basic like\n> a variable is used. But tf.glorot_uniform_initializer() seems to make\n> assumptions just based on the shape. Am I wrong on this? Why not use\n> tf.zeros_initializer() or maybe tf.random_uniform_initializer() by\n> default? It's extremely confusing. At least put it in the documentation.\n> Now I'm really intimidated by the whole tensorflow framework, because I'm\n> unsure which other assumptions are implemented. I would love to be proven\n> wrong.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/issues/14675#issuecomment-402456286>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAATxbthNuVhtQ4NPcJOrN5Os9qUh2fBks5uDK19gaJpZM4QiwcH>\n> .\n>\n\n\n-- \n - Alex\n"}