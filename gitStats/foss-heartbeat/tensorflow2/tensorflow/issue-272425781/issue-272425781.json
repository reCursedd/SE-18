{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14390", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14390/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14390/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14390/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/14390", "id": 272425781, "node_id": "MDExOlB1bGxSZXF1ZXN0MTUxNTUxNTI4", "number": 14390, "title": "`variable_scope` use `auxiliary_name_scope` to control whether to create new name scope", "user": {"login": "facaiy", "id": 1112263, "node_id": "MDQ6VXNlcjExMTIyNjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1112263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facaiy", "html_url": "https://github.com/facaiy", "followers_url": "https://api.github.com/users/facaiy/followers", "following_url": "https://api.github.com/users/facaiy/following{/other_user}", "gists_url": "https://api.github.com/users/facaiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/facaiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facaiy/subscriptions", "organizations_url": "https://api.github.com/users/facaiy/orgs", "repos_url": "https://api.github.com/users/facaiy/repos", "events_url": "https://api.github.com/users/facaiy/events{/privacy}", "received_events_url": "https://api.github.com/users/facaiy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 419840263, "node_id": "MDU6TGFiZWw0MTk4NDAyNjM=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/awaiting%20testing%20(then%20merge)", "name": "awaiting testing (then merge)", "color": "c2e0c6", "default": false}, {"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "jhseu", "id": 170179, "node_id": "MDQ6VXNlcjE3MDE3OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/170179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhseu", "html_url": "https://github.com/jhseu", "followers_url": "https://api.github.com/users/jhseu/followers", "following_url": "https://api.github.com/users/jhseu/following{/other_user}", "gists_url": "https://api.github.com/users/jhseu/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhseu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhseu/subscriptions", "organizations_url": "https://api.github.com/users/jhseu/orgs", "repos_url": "https://api.github.com/users/jhseu/repos", "events_url": "https://api.github.com/users/jhseu/events{/privacy}", "received_events_url": "https://api.github.com/users/jhseu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jhseu", "id": 170179, "node_id": "MDQ6VXNlcjE3MDE3OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/170179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhseu", "html_url": "https://github.com/jhseu", "followers_url": "https://api.github.com/users/jhseu/followers", "following_url": "https://api.github.com/users/jhseu/following{/other_user}", "gists_url": "https://api.github.com/users/jhseu/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhseu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhseu/subscriptions", "organizations_url": "https://api.github.com/users/jhseu/orgs", "repos_url": "https://api.github.com/users/jhseu/repos", "events_url": "https://api.github.com/users/jhseu/events{/privacy}", "received_events_url": "https://api.github.com/users/jhseu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 16, "created_at": "2017-11-09T03:07:44Z", "updated_at": "2017-12-19T02:53:21Z", "closed_at": "2017-12-19T00:52:10Z", "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14390", "html_url": "https://github.com/tensorflow/tensorflow/pull/14390", "diff_url": "https://github.com/tensorflow/tensorflow/pull/14390.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/14390.patch"}, "body_html": "<p>Now <code>variable_scope</code> always create a new name scope (side-effect?) when invoked. The behavior will result in name scope collision mentioned in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"261909883\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/13429\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/13429/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/13429\">#13429</a> . Hence we proposed to add a parameter <code>auxiliary_name_scope</code> to control whether to create new name scope or not.</p>\n<p>If accepted, we can reenter <code>variable_scope</code> and its original name scope without side-effect:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">with</span> tf.variable_scope(s, <span class=\"pl-v\">auxiliary_name_scope</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>) <span class=\"pl-k\">as</span> ss:\n     <span class=\"pl-k\">with</span> tf.name_scope(ss.original_name_scope) <span class=\"pl-k\">as</span> n:\n          <span class=\"pl-c\"><span class=\"pl-c\">#</span> do something</span></pre></div>\n<h3>How to test</h3>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> add unit tests</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> pass all tests.</li>\n</ul>", "body_text": "Now variable_scope always create a new name scope (side-effect?) when invoked. The behavior will result in name scope collision mentioned in #13429 . Hence we proposed to add a parameter auxiliary_name_scope to control whether to create new name scope or not.\nIf accepted, we can reenter variable_scope and its original name scope without side-effect:\nwith tf.variable_scope(s, auxiliary_name_scope=False) as ss:\n     with tf.name_scope(ss.original_name_scope) as n:\n          # do something\nHow to test\n\n add unit tests\n pass all tests.", "body": "Now `variable_scope` always create a new name scope (side-effect?) when invoked. The behavior will result in name scope collision mentioned in #13429 . Hence we proposed to add a parameter `auxiliary_name_scope` to control whether to create new name scope or not.\r\n\r\nIf accepted, we can reenter `variable_scope` and its original name scope without side-effect:\r\n```python\r\nwith tf.variable_scope(s, auxiliary_name_scope=False) as ss:\r\n     with tf.name_scope(ss.original_name_scope) as n:\r\n          # do something\r\n```\r\n### How to test\r\n\r\n+ [x] add unit tests\r\n+ [ ] pass all tests."}