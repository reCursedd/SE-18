{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/349164650", "html_url": "https://github.com/tensorflow/tensorflow/issues/15079#issuecomment-349164650", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15079", "id": 349164650, "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTE2NDY1MA==", "user": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-05T01:27:10Z", "updated_at": "2017-12-05T01:27:34Z", "author_association": "CONTRIBUTOR", "body_html": "<p>(the check should raise <code>errors::InvalidArgument</code> if the input is not sufficiently close to a probability distribution.  probably you can't check exact, but you can check the sum is w/in e.g.<br>\n<code>10 * std::numeric_limits&lt;T&gt;::epsilon()</code> of 1.</p>", "body_text": "(the check should raise errors::InvalidArgument if the input is not sufficiently close to a probability distribution.  probably you can't check exact, but you can check the sum is w/in e.g.\n10 * std::numeric_limits<T>::epsilon() of 1.", "body": "(the check should raise `errors::InvalidArgument` if the input is not sufficiently close to a probability distribution.  probably you can't check exact, but you can check the sum is w/in e.g. \r\n`10 * std::numeric_limits<T>::epsilon()` of 1."}