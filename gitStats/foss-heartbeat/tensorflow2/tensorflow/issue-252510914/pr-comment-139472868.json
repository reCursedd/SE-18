{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/139472868", "pull_request_review_id": 63410434, "id": 139472868, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTQ3Mjg2OA==", "diff_hunk": "@@ -2682,11 +2685,16 @@ def spatial_softmax(features,\n       features = array_ops.reshape(\n           array_ops.transpose(features, [0, 3, 1, 2]), [-1, height * width])\n \n-    softmax_attention = nn.softmax(features/temperature)\n+    if activation_fn is not None:\n+      attention = activation_fn(features/temperature)\n+    else:\n+      attention = features/temperature\n+\n+    attention = nn.softmax(features/temperature)\n     expected_x = math_ops.reduce_sum(", "path": "tensorflow/contrib/layers/python/layers/layers.py", "position": null, "original_position": 28, "commit_id": "d30085cd7ebebb3fce0bff7331f9ae1ff90ff764", "original_commit_id": "b529eb710105c9ac01d9ad616563ed949379a3b7", "user": {"login": "sguada", "id": 1766524, "node_id": "MDQ6VXNlcjE3NjY1MjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1766524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sguada", "html_url": "https://github.com/sguada", "followers_url": "https://api.github.com/users/sguada/followers", "following_url": "https://api.github.com/users/sguada/following{/other_user}", "gists_url": "https://api.github.com/users/sguada/gists{/gist_id}", "starred_url": "https://api.github.com/users/sguada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sguada/subscriptions", "organizations_url": "https://api.github.com/users/sguada/orgs", "repos_url": "https://api.github.com/users/sguada/repos", "events_url": "https://api.github.com/users/sguada/events{/privacy}", "received_events_url": "https://api.github.com/users/sguada/received_events", "type": "User", "site_admin": false}, "body": "I'm not sure if any activation function would make sense here. The way of computing expected_x and expected_y assumes that the attention mask sum 1.\r\nYou would need to show that using other activation functions make sense and can compute reasonable x, y.", "created_at": "2017-09-18T16:29:48Z", "updated_at": "2018-02-05T03:39:33Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/12549#discussion_r139472868", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12549", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/139472868"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/12549#discussion_r139472868"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12549"}}, "body_html": "<p>I'm not sure if any activation function would make sense here. The way of computing expected_x and expected_y assumes that the attention mask sum 1.<br>\nYou would need to show that using other activation functions make sense and can compute reasonable x, y.</p>", "body_text": "I'm not sure if any activation function would make sense here. The way of computing expected_x and expected_y assumes that the attention mask sum 1.\nYou would need to show that using other activation functions make sense and can compute reasonable x, y."}