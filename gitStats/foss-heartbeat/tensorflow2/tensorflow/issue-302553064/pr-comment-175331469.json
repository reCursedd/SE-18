{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/175331469", "pull_request_review_id": 104840803, "id": 175331469, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTMzMTQ2OQ==", "diff_hunk": "@@ -84,14 +86,15 @@ def __init__(self, filenames, compression_type=None, buffer_size=None):\n     \"\"\"Creates a `TFRecordDataset`.\n \n     Args:\n-      filenames: A `tf.string` tensor containing one or more filenames.\n+      filenames: A `tf.string` tensor containing one or more filenames or `PathLike` objects.\n       compression_type: (Optional.) A `tf.string` scalar evaluating to one of\n         `\"\"` (no compression), `\"ZLIB\"`, or `\"GZIP\"`.\n       buffer_size: (Optional.) A `tf.int64` scalar representing the number of\n         bytes in the read buffer. 0 means no buffering.\n     \"\"\"\n     super(_TFRecordDataset, self).__init__()\n     # Force the type to string even if filenames is an empty list.\n+    filenames = compat.path_to_str(filenames)", "path": "tensorflow/python/data/ops/readers.py", "position": 38, "original_position": 38, "commit_id": "5bb5c16a2c6f8f7eafb70d7be1a0292ffc4b6e60", "original_commit_id": "d83ad812855943da58b8f01e51482a34b0b6f415", "user": {"login": "damienpontifex", "id": 1321276, "node_id": "MDQ6VXNlcjEzMjEyNzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1321276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/damienpontifex", "html_url": "https://github.com/damienpontifex", "followers_url": "https://api.github.com/users/damienpontifex/followers", "following_url": "https://api.github.com/users/damienpontifex/following{/other_user}", "gists_url": "https://api.github.com/users/damienpontifex/gists{/gist_id}", "starred_url": "https://api.github.com/users/damienpontifex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/damienpontifex/subscriptions", "organizations_url": "https://api.github.com/users/damienpontifex/orgs", "repos_url": "https://api.github.com/users/damienpontifex/repos", "events_url": "https://api.github.com/users/damienpontifex/events{/privacy}", "received_events_url": "https://api.github.com/users/damienpontifex/received_events", "type": "User", "site_admin": false}, "body": "@mrry just test locally and it does not. Is there an example you know of in the code base with a 'TensorFlow' standard way of handling this for a best practice implementation? i.e. to differentiate a tensor vs native python iterable etc?\r\n\r\nOtherwise could put a check for `and not isinstance(p, tf.Tensor))` when checking for iterability", "created_at": "2018-03-19T04:51:13Z", "updated_at": "2018-05-19T23:34:46Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/17465#discussion_r175331469", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/17465", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/175331469"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/17465#discussion_r175331469"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/17465"}}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a> just test locally and it does not. Is there an example you know of in the code base with a 'TensorFlow' standard way of handling this for a best practice implementation? i.e. to differentiate a tensor vs native python iterable etc?</p>\n<p>Otherwise could put a check for <code>and not isinstance(p, tf.Tensor))</code> when checking for iterability</p>", "body_text": "@mrry just test locally and it does not. Is there an example you know of in the code base with a 'TensorFlow' standard way of handling this for a best practice implementation? i.e. to differentiate a tensor vs native python iterable etc?\nOtherwise could put a check for and not isinstance(p, tf.Tensor)) when checking for iterability", "in_reply_to_id": 174293925}