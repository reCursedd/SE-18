{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/399789541", "html_url": "https://github.com/tensorflow/tensorflow/issues/20255#issuecomment-399789541", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20255", "id": 399789541, "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTc4OTU0MQ==", "user": {"login": "Hoeze", "id": 1200058, "node_id": "MDQ6VXNlcjEyMDAwNTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1200058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hoeze", "html_url": "https://github.com/Hoeze", "followers_url": "https://api.github.com/users/Hoeze/followers", "following_url": "https://api.github.com/users/Hoeze/following{/other_user}", "gists_url": "https://api.github.com/users/Hoeze/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hoeze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hoeze/subscriptions", "organizations_url": "https://api.github.com/users/Hoeze/orgs", "repos_url": "https://api.github.com/users/Hoeze/repos", "events_url": "https://api.github.com/users/Hoeze/events{/privacy}", "received_events_url": "https://api.github.com/users/Hoeze/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-24T21:38:58Z", "updated_at": "2018-06-24T21:42:19Z", "author_association": "NONE", "body_html": "<p>Concrete example:<br>\nI'd like to iterate over the batches of a dataset, perform some <code>map_fn</code> on it and reduce the result with <code>reduce_fn</code>.</p>\n<p>Currently I need to pass <code>last_elem</code> to check if the iterator has more elements:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">map_reduce</span>(<span class=\"pl-smi\">last_elem</span>: tf.Tensor, <span class=\"pl-smi\">data</span>: tf.data.Dataset, <span class=\"pl-smi\">map_fn</span>, <span class=\"pl-smi\">reduce_fn</span><span class=\"pl-k\">=</span>tf.add, <span class=\"pl-k\">**</span><span class=\"pl-smi\">kwargs</span>):\n    <span class=\"pl-c1\">iter</span> <span class=\"pl-k\">=</span> data.make_initializable_iterator()\n    \n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">cond</span>(<span class=\"pl-smi\">idx</span>, <span class=\"pl-smi\">val</span>):\n        <span class=\"pl-c\"><span class=\"pl-c\">#</span> idx is a vector of sample indices</span>\n        <span class=\"pl-k\">return</span> tf.not_equal(tf.gather(idx, tf.size(idx) <span class=\"pl-k\">-</span> <span class=\"pl-c1\">1</span>), last_elem)\n    \n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">body_fn</span>(<span class=\"pl-smi\">old_idx</span>, <span class=\"pl-smi\">old_val</span>):\n        idx, val <span class=\"pl-k\">=</span> <span class=\"pl-c1\">iter</span>.get_next()\n        \n        <span class=\"pl-k\">return</span> idx, reduce_fn(old_val, map_fn(idx, val))\n    \n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">init_vals</span>():\n        idx, val <span class=\"pl-k\">=</span> <span class=\"pl-c1\">iter</span>.get_next()\n        <span class=\"pl-k\">return</span> idx, map_fn(idx, val)\n    \n    <span class=\"pl-k\">with</span> tf.control_dependencies([<span class=\"pl-c1\">iter</span>.initializer]):\n        _, reduced <span class=\"pl-k\">=</span> tf.while_loop(cond, body_fn, init_vals(), <span class=\"pl-k\">**</span>kwargs)\n    \n    <span class=\"pl-k\">return</span> reduced</pre></div>", "body_text": "Concrete example:\nI'd like to iterate over the batches of a dataset, perform some map_fn on it and reduce the result with reduce_fn.\nCurrently I need to pass last_elem to check if the iterator has more elements:\ndef map_reduce(last_elem: tf.Tensor, data: tf.data.Dataset, map_fn, reduce_fn=tf.add, **kwargs):\n    iter = data.make_initializable_iterator()\n    \n    def cond(idx, val):\n        # idx is a vector of sample indices\n        return tf.not_equal(tf.gather(idx, tf.size(idx) - 1), last_elem)\n    \n    def body_fn(old_idx, old_val):\n        idx, val = iter.get_next()\n        \n        return idx, reduce_fn(old_val, map_fn(idx, val))\n    \n    def init_vals():\n        idx, val = iter.get_next()\n        return idx, map_fn(idx, val)\n    \n    with tf.control_dependencies([iter.initializer]):\n        _, reduced = tf.while_loop(cond, body_fn, init_vals(), **kwargs)\n    \n    return reduced", "body": "Concrete example:\r\nI'd like to iterate over the batches of a dataset, perform some `map_fn` on it and reduce the result with `reduce_fn`.\r\n\r\nCurrently I need to pass `last_elem` to check if the iterator has more elements:\r\n```python3\r\ndef map_reduce(last_elem: tf.Tensor, data: tf.data.Dataset, map_fn, reduce_fn=tf.add, **kwargs):\r\n    iter = data.make_initializable_iterator()\r\n    \r\n    def cond(idx, val):\r\n        # idx is a vector of sample indices\r\n        return tf.not_equal(tf.gather(idx, tf.size(idx) - 1), last_elem)\r\n    \r\n    def body_fn(old_idx, old_val):\r\n        idx, val = iter.get_next()\r\n        \r\n        return idx, reduce_fn(old_val, map_fn(idx, val))\r\n    \r\n    def init_vals():\r\n        idx, val = iter.get_next()\r\n        return idx, map_fn(idx, val)\r\n    \r\n    with tf.control_dependencies([iter.initializer]):\r\n        _, reduced = tf.while_loop(cond, body_fn, init_vals(), **kwargs)\r\n    \r\n    return reduced\r\n```"}