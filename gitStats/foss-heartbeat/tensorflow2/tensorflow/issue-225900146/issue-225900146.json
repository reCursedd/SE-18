{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9614", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9614/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9614/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9614/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9614", "id": 225900146, "node_id": "MDU6SXNzdWUyMjU5MDAxNDY=", "number": 9614, "title": "Tensorboard not fully functional behind nginx proxy", "user": {"login": "bajo", "id": 545941, "node_id": "MDQ6VXNlcjU0NTk0MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/545941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bajo", "html_url": "https://github.com/bajo", "followers_url": "https://api.github.com/users/bajo/followers", "following_url": "https://api.github.com/users/bajo/following{/other_user}", "gists_url": "https://api.github.com/users/bajo/gists{/gist_id}", "starred_url": "https://api.github.com/users/bajo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bajo/subscriptions", "organizations_url": "https://api.github.com/users/bajo/orgs", "repos_url": "https://api.github.com/users/bajo/repos", "events_url": "https://api.github.com/users/bajo/events{/privacy}", "received_events_url": "https://api.github.com/users/bajo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 284285184, "node_id": "MDU6TGFiZWwyODQyODUxODQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:tensorboard", "name": "comp:tensorboard", "color": "0052cc", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "jart", "id": 49262, "node_id": "MDQ6VXNlcjQ5MjYy", "avatar_url": "https://avatars1.githubusercontent.com/u/49262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jart", "html_url": "https://github.com/jart", "followers_url": "https://api.github.com/users/jart/followers", "following_url": "https://api.github.com/users/jart/following{/other_user}", "gists_url": "https://api.github.com/users/jart/gists{/gist_id}", "starred_url": "https://api.github.com/users/jart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jart/subscriptions", "organizations_url": "https://api.github.com/users/jart/orgs", "repos_url": "https://api.github.com/users/jart/repos", "events_url": "https://api.github.com/users/jart/events{/privacy}", "received_events_url": "https://api.github.com/users/jart/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jart", "id": 49262, "node_id": "MDQ6VXNlcjQ5MjYy", "avatar_url": "https://avatars1.githubusercontent.com/u/49262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jart", "html_url": "https://github.com/jart", "followers_url": "https://api.github.com/users/jart/followers", "following_url": "https://api.github.com/users/jart/following{/other_user}", "gists_url": "https://api.github.com/users/jart/gists{/gist_id}", "starred_url": "https://api.github.com/users/jart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jart/subscriptions", "organizations_url": "https://api.github.com/users/jart/orgs", "repos_url": "https://api.github.com/users/jart/repos", "events_url": "https://api.github.com/users/jart/events{/privacy}", "received_events_url": "https://api.github.com/users/jart/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-05-03T07:11:12Z", "updated_at": "2017-06-16T21:52:03Z", "closed_at": "2017-06-16T21:52:03Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nYes. The ngnix configuration to proxy tensorboard from port 6006 to port 80. Details below.</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nLinux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\nSource</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\n('v1.0.1-2-g250e72c-dirty', '1.0.1')</li>\n<li><strong>Bazel version (if compiling from source)</strong>:<br>\nBuild label: 0.4.5<br>\nBuild target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar<br>\nBuild time: Thu Mar 16 12:19:38 2017 (1489666778)<br>\nBuild timestamp: 1489666778<br>\nBuild timestamp as int: 1489666778</li>\n<li><strong>CUDA/cuDNN version</strong>:<br>\n8.0.61/cudnn-8.0-linux-x64-v5.1</li>\n<li><strong>GPU model and memory</strong>:<br>\n\"TITAN X (Pascal) and 12187 MBytes</li>\n<li><strong>Exact command to reproduce</strong>:<br>\ntensorboard  --logdir /tmp/retrain_logs/</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I follow the image retraining tutorial  [https://www.tensorflow.org/tutorials/image_retraining]. As we have different applications providing a webinterface and a firewall that blocks all ports except 22(ssh) and 80(http)/443(https) we want to put all of them behind a nginx proxy.<br>\nWith the config below the tensorboard shows up, however no data is displayed.<br>\nWhen disabling all other applications / services that run on port 80 and forcing tensorboard to deliver on port 80 with <code>sudo tensorboard --port 80 --logdir /tmp/retrain_logs</code> the data graphs (ie. accuracy_1, cross_entropy_1, etc.) are displayed.</p>\n<h3>Source code / logs</h3>\n<p>`server {<br>\nlisten 80 default_server;<br>\nlisten [::]:80 default_server;</p>\n<pre><code>    root /var/www/html;\n\n    # Add index.php to the list if you are using PHP\n    index index.html index.htm index.nginx-debian.html;\n\n    server_name _;\n\n    location / {\n            # First attempt to serve request as file, then\n            # as directory, then fall back to displaying a 404.\n            try_files $uri $uri/ =404;\n    }\n    location /tensorflow {\n            rewrite ^/tensorflow(.*) /$1 break;\n            proxy_pass http://127.0.0.1:6006/;\n    }\n</code></pre>\n<p>}<br>\n`</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nYes. The ngnix configuration to proxy tensorboard from port 6006 to port 80. Details below.\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nLinux Ubuntu 16.04\nTensorFlow installed from (source or binary):\nSource\nTensorFlow version (use command below):\n('v1.0.1-2-g250e72c-dirty', '1.0.1')\nBazel version (if compiling from source):\nBuild label: 0.4.5\nBuild target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\nBuild time: Thu Mar 16 12:19:38 2017 (1489666778)\nBuild timestamp: 1489666778\nBuild timestamp as int: 1489666778\nCUDA/cuDNN version:\n8.0.61/cudnn-8.0-linux-x64-v5.1\nGPU model and memory:\n\"TITAN X (Pascal) and 12187 MBytes\nExact command to reproduce:\ntensorboard  --logdir /tmp/retrain_logs/\n\nDescribe the problem\nI follow the image retraining tutorial  [https://www.tensorflow.org/tutorials/image_retraining]. As we have different applications providing a webinterface and a firewall that blocks all ports except 22(ssh) and 80(http)/443(https) we want to put all of them behind a nginx proxy.\nWith the config below the tensorboard shows up, however no data is displayed.\nWhen disabling all other applications / services that run on port 80 and forcing tensorboard to deliver on port 80 with sudo tensorboard --port 80 --logdir /tmp/retrain_logs the data graphs (ie. accuracy_1, cross_entropy_1, etc.) are displayed.\nSource code / logs\n`server {\nlisten 80 default_server;\nlisten [::]:80 default_server;\n    root /var/www/html;\n\n    # Add index.php to the list if you are using PHP\n    index index.html index.htm index.nginx-debian.html;\n\n    server_name _;\n\n    location / {\n            # First attempt to serve request as file, then\n            # as directory, then fall back to displaying a 404.\n            try_files $uri $uri/ =404;\n    }\n    location /tensorflow {\n            rewrite ^/tensorflow(.*) /$1 break;\n            proxy_pass http://127.0.0.1:6006/;\n    }\n\n}\n`", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes. The ngnix configuration to proxy tensorboard from port 6006 to port 80. Details below.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nLinux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**:\r\nSource\r\n- **TensorFlow version (use command below)**:\r\n('v1.0.1-2-g250e72c-dirty', '1.0.1')\r\n- **Bazel version (if compiling from source)**:\r\nBuild label: 0.4.5\r\nBuild target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\r\nBuild time: Thu Mar 16 12:19:38 2017 (1489666778)\r\nBuild timestamp: 1489666778\r\nBuild timestamp as int: 1489666778\r\n- **CUDA/cuDNN version**:\r\n8.0.61/cudnn-8.0-linux-x64-v5.1\r\n- **GPU model and memory**:\r\n\"TITAN X (Pascal) and 12187 MBytes\r\n- **Exact command to reproduce**:\r\ntensorboard  --logdir /tmp/retrain_logs/\r\n\r\n### Describe the problem\r\nI follow the image retraining tutorial  [https://www.tensorflow.org/tutorials/image_retraining]. As we have different applications providing a webinterface and a firewall that blocks all ports except 22(ssh) and 80(http)/443(https) we want to put all of them behind a nginx proxy. \r\nWith the config below the tensorboard shows up, however no data is displayed.\r\nWhen disabling all other applications / services that run on port 80 and forcing tensorboard to deliver on port 80 with `sudo tensorboard --port 80 --logdir /tmp/retrain_logs` the data graphs (ie. accuracy_1, cross_entropy_1, etc.) are displayed. \r\n\r\n### Source code / logs\r\n`server {\r\n        listen 80 default_server;\r\n        listen [::]:80 default_server;\r\n\r\n        root /var/www/html;\r\n\r\n        # Add index.php to the list if you are using PHP\r\n        index index.html index.htm index.nginx-debian.html;\r\n\r\n        server_name _;\r\n\r\n        location / {\r\n                # First attempt to serve request as file, then\r\n                # as directory, then fall back to displaying a 404.\r\n                try_files $uri $uri/ =404;\r\n        }\r\n        location /tensorflow {\r\n                rewrite ^/tensorflow(.*) /$1 break;\r\n                proxy_pass http://127.0.0.1:6006/;\r\n        }\r\n}\r\n`\r\n\r\n\r\n"}