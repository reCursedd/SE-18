{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/122985632", "pull_request_review_id": 45147080, "id": 122985632, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMjk4NTYzMg==", "diff_hunk": "@@ -125,6 +125,46 @@ struct EluGrad {\n   }\n };\n \n+// Functor used by SeluOp to do the computations.\n+template <typename Device, typename T>\n+struct Selu {\n+  // Computes Selu activation.\n+  //\n+  // features: any shape.\n+  // activations: same shape as \"features\".\n+  void operator()(const Device& d, typename TTypes<T>::ConstTensor features,\n+                  typename TTypes<T>::Tensor activations) {\n+    // features.constant(?)\n+    const auto scale = static_cast<T>(1.0507009873554804934193349852946);\n+    const auto alpha = static_cast<T>(1.6732632423543772848170429916717);\n+    const auto one = static_cast<T>(1);\n+    const auto zero = static_cast<T>(0);\n+    activations.device(d) =\n+        (features < zero)\n+            .select(scale * alpha * (features.exp() - features.constant(one)),\n+                    scale * features);", "path": "tensorflow/core/kernels/relu_op_functor.h", "position": null, "original_position": 21, "commit_id": "97bafa09a7403db67facb78757ec35eaca1215bb", "original_commit_id": "b362d903136751ca3b28b455db0157ad83c0a458", "user": {"login": "futurely", "id": 9004594, "node_id": "MDQ6VXNlcjkwMDQ1OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/9004594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/futurely", "html_url": "https://github.com/futurely", "followers_url": "https://api.github.com/users/futurely/followers", "following_url": "https://api.github.com/users/futurely/following{/other_user}", "gists_url": "https://api.github.com/users/futurely/gists{/gist_id}", "starred_url": "https://api.github.com/users/futurely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/futurely/subscriptions", "organizations_url": "https://api.github.com/users/futurely/orgs", "repos_url": "https://api.github.com/users/futurely/repos", "events_url": "https://api.github.com/users/futurely/events{/privacy}", "received_events_url": "https://api.github.com/users/futurely/received_events", "type": "User", "site_admin": false}, "body": "```cpp\r\n// scale = 1.0507009873554804934193349852946\r\n// alpha = 1.6732632423543772848170429916717\r\n// scale_alpha = scale * alpha\r\nconst T scale_alpha = static_cast<T>(1.7580993408473768599402175208123);\r\n\r\n.select(scale_alpha * features.exp() - features.constant(scale_alpha), static_cast<T>(1.0507009873554804934193349852946) * features);`", "created_at": "2017-06-20T14:07:21Z", "updated_at": "2017-07-25T15:03:45Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/10818#discussion_r122985632", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/10818", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/122985632"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/10818#discussion_r122985632"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/10818"}}, "body_html": "<div class=\"highlight highlight-source-c++\"><pre><span class=\"pl-c\"><span class=\"pl-c\">//</span> scale = 1.0507009873554804934193349852946</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> alpha = 1.6732632423543772848170429916717</span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> scale_alpha = scale * alpha</span>\n<span class=\"pl-k\">const</span> T scale_alpha = <span class=\"pl-k\">static_cast</span>&lt;T&gt;(<span class=\"pl-c1\">1.7580993408473768599402175208123</span>);\n\n.select(scale_alpha * features.exp() - features.constant(scale_alpha), <span class=\"pl-k\">static_cast</span>&lt;T&gt;(<span class=\"pl-c1\">1.0507009873554804934193349852946</span>) * features);`</pre></div>", "body_text": "// scale = 1.0507009873554804934193349852946\n// alpha = 1.6732632423543772848170429916717\n// scale_alpha = scale * alpha\nconst T scale_alpha = static_cast<T>(1.7580993408473768599402175208123);\n\n.select(scale_alpha * features.exp() - features.constant(scale_alpha), static_cast<T>(1.0507009873554804934193349852946) * features);`"}