{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5551", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5551/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5551/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5551/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/5551", "id": 188844630, "node_id": "MDU6SXNzdWUxODg4NDQ2MzA=", "number": 5551, "title": "Inconsistent behavior for variables_collections and outputs_collections parameters (contrib/layers)", "user": {"login": "vonclites", "id": 4926264, "node_id": "MDQ6VXNlcjQ5MjYyNjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4926264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vonclites", "html_url": "https://github.com/vonclites", "followers_url": "https://api.github.com/users/vonclites/followers", "following_url": "https://api.github.com/users/vonclites/following{/other_user}", "gists_url": "https://api.github.com/users/vonclites/gists{/gist_id}", "starred_url": "https://api.github.com/users/vonclites/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vonclites/subscriptions", "organizations_url": "https://api.github.com/users/vonclites/orgs", "repos_url": "https://api.github.com/users/vonclites/repos", "events_url": "https://api.github.com/users/vonclites/events{/privacy}", "received_events_url": "https://api.github.com/users/vonclites/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2016-11-11T20:31:58Z", "updated_at": "2017-06-18T15:09:16Z", "closed_at": "2017-02-07T04:37:35Z", "author_association": "NONE", "body_html": "<p>Using layers from contrib,</p>\n<ul>\n<li>The outputs_collections parameter accepts either a string or list of strings.</li>\n<li>The variables_collections parameter requires a list of strings.</li>\n</ul>\n<p>Granted, the documentation does specify this</p>\n<pre><code>variables_collections: optional list of collections for all the variables or\n      a dictionay containing a different list of collection per variable.\noutputs_collections: collection to add the outputs.\n</code></pre>\n<p>But I don't think it's very obvious.  Furthermore, is it really necessary to have these two parameters behave differently?</p>\n<p>The variables_collections parameter is passed to the model_variable function()<br>\nCurrently, the model_variable() function performs this before creating the variable:</p>\n<pre><code>  collections = list(collections or [])\n  collections += [ops.GraphKeys.VARIABLES, ops.GraphKeys.MODEL_VARIABLES]\n</code></pre>\n<p>So, if</p>\n<pre><code># variables_collections = 'kernels'\ncollections\n['k', 'e', 'r', 'n', 'e', 'l', 's']\n</code></pre>\n<p>Whereas, for outputs_collections it uses the utils.collect_named_outputs() function, wherein</p>\n<pre><code># variables_collections = 'kernels'\nnames = (names,) if isinstance(names, six.string_types) else set(names)\nnames\n('kernels',)\n</code></pre>\n<p>Perhaps the behavior of these two parameters should be unified?</p>", "body_text": "Using layers from contrib,\n\nThe outputs_collections parameter accepts either a string or list of strings.\nThe variables_collections parameter requires a list of strings.\n\nGranted, the documentation does specify this\nvariables_collections: optional list of collections for all the variables or\n      a dictionay containing a different list of collection per variable.\noutputs_collections: collection to add the outputs.\n\nBut I don't think it's very obvious.  Furthermore, is it really necessary to have these two parameters behave differently?\nThe variables_collections parameter is passed to the model_variable function()\nCurrently, the model_variable() function performs this before creating the variable:\n  collections = list(collections or [])\n  collections += [ops.GraphKeys.VARIABLES, ops.GraphKeys.MODEL_VARIABLES]\n\nSo, if\n# variables_collections = 'kernels'\ncollections\n['k', 'e', 'r', 'n', 'e', 'l', 's']\n\nWhereas, for outputs_collections it uses the utils.collect_named_outputs() function, wherein\n# variables_collections = 'kernels'\nnames = (names,) if isinstance(names, six.string_types) else set(names)\nnames\n('kernels',)\n\nPerhaps the behavior of these two parameters should be unified?", "body": "Using layers from contrib,\r\n- The outputs_collections parameter accepts either a string or list of strings.\r\n- The variables_collections parameter requires a list of strings.\r\n\r\nGranted, the documentation does specify this\r\n```\r\nvariables_collections: optional list of collections for all the variables or\r\n      a dictionay containing a different list of collection per variable.\r\noutputs_collections: collection to add the outputs.\r\n```\r\nBut I don't think it's very obvious.  Furthermore, is it really necessary to have these two parameters behave differently?\r\n\r\nThe variables_collections parameter is passed to the model_variable function()\r\nCurrently, the model_variable() function performs this before creating the variable:\r\n```\r\n  collections = list(collections or [])\r\n  collections += [ops.GraphKeys.VARIABLES, ops.GraphKeys.MODEL_VARIABLES]\r\n```\r\nSo, if\r\n```\r\n# variables_collections = 'kernels'\r\ncollections\r\n['k', 'e', 'r', 'n', 'e', 'l', 's']\r\n```\r\n\r\n\r\nWhereas, for outputs_collections it uses the utils.collect_named_outputs() function, wherein\r\n```\r\n# variables_collections = 'kernels'\r\nnames = (names,) if isinstance(names, six.string_types) else set(names)\r\nnames\r\n('kernels',)\r\n```\r\n\r\nPerhaps the behavior of these two parameters should be unified?"}