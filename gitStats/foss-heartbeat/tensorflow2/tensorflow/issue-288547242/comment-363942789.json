{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/363942789", "html_url": "https://github.com/tensorflow/tensorflow/pull/16129#issuecomment-363942789", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16129", "id": 363942789, "node_id": "MDEyOklzc3VlQ29tbWVudDM2Mzk0Mjc4OQ==", "user": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-07T23:09:30Z", "updated_at": "2018-02-07T23:09:30Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1794715\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ebrevdo\">@ebrevdo</a> Yes, we do want to capture that. I initially tought that <code>x.shape[0].value or array_ops.shape(..)</code> was pseudocode, but I guess the (ugly) way Python handles None with binary logical operators makes this work. Sigh.</p>", "body_text": "@ebrevdo Yes, we do want to capture that. I initially tought that x.shape[0].value or array_ops.shape(..) was pseudocode, but I guess the (ugly) way Python handles None with binary logical operators makes this work. Sigh.", "body": "@ebrevdo Yes, we do want to capture that. I initially tought that ```x.shape[0].value or array_ops.shape(..)``` was pseudocode, but I guess the (ugly) way Python handles None with binary logical operators makes this work. Sigh."}