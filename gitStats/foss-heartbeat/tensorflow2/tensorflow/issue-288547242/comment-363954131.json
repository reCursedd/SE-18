{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/363954131", "html_url": "https://github.com/tensorflow/tensorflow/pull/16129#issuecomment-363954131", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16129", "id": 363954131, "node_id": "MDEyOklzc3VlQ29tbWVudDM2Mzk1NDEzMQ==", "user": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-07T23:58:50Z", "updated_at": "2018-02-07T23:58:50Z", "author_association": "CONTRIBUTOR", "body_html": "<div class=\"email-fragment\">yes; it'll use dynamic shape if the batch size is statically 0; but that's\nan exceedingly rare case so we do this for the succinctness :)</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On Wed, Feb 7, 2018 at 3:10 PM, Rasmus Munk Larsen ***@***.*** &gt; wrote:\n <a class=\"user-mention\" href=\"https://github.com/ebrevdo\">@ebrevdo</a> &lt;<a href=\"https://github.com/ebrevdo\">https://github.com/ebrevdo</a>&gt; Yes, we do want to capture that. I\n initially tought that x.shape[0].value or array_ops.shape(..) was\n pseudocode, but I guess the (ugly) way Python handles None with binary\n logical operators makes this work. Sigh.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"288547242\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/16129\" href=\"https://github.com/tensorflow/tensorflow/pull/16129#issuecomment-363942789\">#16129 (comment)</a>&gt;,\n or mute the thread\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/ABtimynV9NtP6cw7LuZf_BG-eBvryOfBks5tSi1IgaJpZM4ReNU-\">https://github.com/notifications/unsubscribe-auth/ABtimynV9NtP6cw7LuZf_BG-eBvryOfBks5tSi1IgaJpZM4ReNU-</a>&gt;\n .\n</div>\n<div class=\"email-fragment\"></div>\n</div>", "body_text": "yes; it'll use dynamic shape if the batch size is statically 0; but that's\nan exceedingly rare case so we do this for the succinctness :)\n\u2026\nOn Wed, Feb 7, 2018 at 3:10 PM, Rasmus Munk Larsen ***@***.*** > wrote:\n @ebrevdo <https://github.com/ebrevdo> Yes, we do want to capture that. I\n initially tought that x.shape[0].value or array_ops.shape(..) was\n pseudocode, but I guess the (ugly) way Python handles None with binary\n logical operators makes this work. Sigh.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#16129 (comment)>,\n or mute the thread\n <https://github.com/notifications/unsubscribe-auth/ABtimynV9NtP6cw7LuZf_BG-eBvryOfBks5tSi1IgaJpZM4ReNU->\n .", "body": "yes; it'll use dynamic shape if the batch size is statically 0; but that's\nan exceedingly rare case so we do this for the succinctness :)\n\nOn Wed, Feb 7, 2018 at 3:10 PM, Rasmus Munk Larsen <notifications@github.com\n> wrote:\n\n> @ebrevdo <https://github.com/ebrevdo> Yes, we do want to capture that. I\n> initially tought that x.shape[0].value or array_ops.shape(..) was\n> pseudocode, but I guess the (ugly) way Python handles None with binary\n> logical operators makes this work. Sigh.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/pull/16129#issuecomment-363942789>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABtimynV9NtP6cw7LuZf_BG-eBvryOfBks5tSi1IgaJpZM4ReNU->\n> .\n>\n"}