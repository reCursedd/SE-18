{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10196", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10196/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10196/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10196/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10196", "id": 231390645, "node_id": "MDU6SXNzdWUyMzEzOTA2NDU=", "number": 10196, "title": "tf.contrib.ffmpeg.decode_audio causes kernel crash w/ multi-threading", "user": {"login": "VinceMarron", "id": 24817118, "node_id": "MDQ6VXNlcjI0ODE3MTE4", "avatar_url": "https://avatars3.githubusercontent.com/u/24817118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VinceMarron", "html_url": "https://github.com/VinceMarron", "followers_url": "https://api.github.com/users/VinceMarron/followers", "following_url": "https://api.github.com/users/VinceMarron/following{/other_user}", "gists_url": "https://api.github.com/users/VinceMarron/gists{/gist_id}", "starred_url": "https://api.github.com/users/VinceMarron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VinceMarron/subscriptions", "organizations_url": "https://api.github.com/users/VinceMarron/orgs", "repos_url": "https://api.github.com/users/VinceMarron/repos", "events_url": "https://api.github.com/users/VinceMarron/events{/privacy}", "received_events_url": "https://api.github.com/users/VinceMarron/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "douglaseck", "id": 16005698, "node_id": "MDQ6VXNlcjE2MDA1Njk4", "avatar_url": "https://avatars3.githubusercontent.com/u/16005698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/douglaseck", "html_url": "https://github.com/douglaseck", "followers_url": "https://api.github.com/users/douglaseck/followers", "following_url": "https://api.github.com/users/douglaseck/following{/other_user}", "gists_url": "https://api.github.com/users/douglaseck/gists{/gist_id}", "starred_url": "https://api.github.com/users/douglaseck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/douglaseck/subscriptions", "organizations_url": "https://api.github.com/users/douglaseck/orgs", "repos_url": "https://api.github.com/users/douglaseck/repos", "events_url": "https://api.github.com/users/douglaseck/events{/privacy}", "received_events_url": "https://api.github.com/users/douglaseck/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "douglaseck", "id": 16005698, "node_id": "MDQ6VXNlcjE2MDA1Njk4", "avatar_url": "https://avatars3.githubusercontent.com/u/16005698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/douglaseck", "html_url": "https://github.com/douglaseck", "followers_url": "https://api.github.com/users/douglaseck/followers", "following_url": "https://api.github.com/users/douglaseck/following{/other_user}", "gists_url": "https://api.github.com/users/douglaseck/gists{/gist_id}", "starred_url": "https://api.github.com/users/douglaseck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/douglaseck/subscriptions", "organizations_url": "https://api.github.com/users/douglaseck/orgs", "repos_url": "https://api.github.com/users/douglaseck/repos", "events_url": "https://api.github.com/users/douglaseck/events{/privacy}", "received_events_url": "https://api.github.com/users/douglaseck/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2017-05-25T16:31:30Z", "updated_at": "2017-08-01T14:53:28Z", "closed_at": "2017-08-01T14:53:28Z", "author_association": "NONE", "body_html": "<ul>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.1.0 - gpu</li>\n<li><strong>CUDA/cuDNN version</strong>: 8.0</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<p>I have noticed that attempting to run the 'tf.contrib.ffmpeg.decode_audio' function with multiple threads causes the kernel to crash. This occurs when trying to create batches of data from audio binaries.</p>\n<p>The code underlying 'tf.contrib.ffmpeg.decode_audio' appears to a basic reference to functions outside of tensorflow so I am unsure there is a solution inside of the tensorflow domain. Nonetheless I wanted to bring this up in case someone had a solution. This is probably not a bug report and more of a low priority feature request.</p>\n<p>The code below will run without error when <strong>num_threads=1</strong> for tf.train.batch but the kernel will crash for <strong>num_threads=2</strong> or more.</p>\n<p>`</p>\n<pre><code>graph = tf.Graph()\n\nwith graph.as_default():\n\n    \n    batch_size=2\n\n    queue = tf.train.slice_input_producer([paths, labels], \n                                          num_epochs=2, shuffle=True, capacity=32)\n    \n    \n    audio_binary = tf.read_file(queue[0])\n    signal = tf.contrib.ffmpeg.decode_audio(audio_binary, file_format='mp3', \n                                        samples_per_second=22500,  \n                                        channel_count=1)[:450000,0]\n    y_ = tf.one_hot(queue[1], 16, dtype=tf.float32)\n\n\n    batch_sig, batch_y_ = tf.train.batch([signal, y_], batch_size=batch_size, \n                                         shapes=[(450000,), (16,)], \n                                         num_threads=1, capacity=64)\n    \n    \n    with tf.Session(config=tf.ConfigProto(operation_timeout_in_ms=500)) as sess:\n        sess.run(tf.global_variables_initializer())\n        sess.run(tf.local_variables_initializer())\n\n        \n        coord = tf.train.Coordinator()\n        threads = tf.train.start_queue_runners(sess=sess, coord=coord)\n        \n        \n        for i in range(2):\n            print(tf.reduce_max(batch_sig, axis=1).eval())\n            \n        coord.request_stop()\n        coord.join(threads)            \n        `\n\n\n</code></pre>", "body_text": "OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04\nTensorFlow version (use command below): v1.1.0 - gpu\nCUDA/cuDNN version: 8.0\nExact command to reproduce:\n\nI have noticed that attempting to run the 'tf.contrib.ffmpeg.decode_audio' function with multiple threads causes the kernel to crash. This occurs when trying to create batches of data from audio binaries.\nThe code underlying 'tf.contrib.ffmpeg.decode_audio' appears to a basic reference to functions outside of tensorflow so I am unsure there is a solution inside of the tensorflow domain. Nonetheless I wanted to bring this up in case someone had a solution. This is probably not a bug report and more of a low priority feature request.\nThe code below will run without error when num_threads=1 for tf.train.batch but the kernel will crash for num_threads=2 or more.\n`\ngraph = tf.Graph()\n\nwith graph.as_default():\n\n    \n    batch_size=2\n\n    queue = tf.train.slice_input_producer([paths, labels], \n                                          num_epochs=2, shuffle=True, capacity=32)\n    \n    \n    audio_binary = tf.read_file(queue[0])\n    signal = tf.contrib.ffmpeg.decode_audio(audio_binary, file_format='mp3', \n                                        samples_per_second=22500,  \n                                        channel_count=1)[:450000,0]\n    y_ = tf.one_hot(queue[1], 16, dtype=tf.float32)\n\n\n    batch_sig, batch_y_ = tf.train.batch([signal, y_], batch_size=batch_size, \n                                         shapes=[(450000,), (16,)], \n                                         num_threads=1, capacity=64)\n    \n    \n    with tf.Session(config=tf.ConfigProto(operation_timeout_in_ms=500)) as sess:\n        sess.run(tf.global_variables_initializer())\n        sess.run(tf.local_variables_initializer())\n\n        \n        coord = tf.train.Coordinator()\n        threads = tf.train.start_queue_runners(sess=sess, coord=coord)\n        \n        \n        for i in range(2):\n            print(tf.reduce_max(batch_sig, axis=1).eval())\n            \n        coord.request_stop()\n        coord.join(threads)            \n        `", "body": "- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow version (use command below)**: v1.1.0 - gpu\r\n- **CUDA/cuDNN version**: 8.0\r\n- **Exact command to reproduce**:\r\n\r\nI have noticed that attempting to run the 'tf.contrib.ffmpeg.decode_audio' function with multiple threads causes the kernel to crash. This occurs when trying to create batches of data from audio binaries. \r\n\r\nThe code underlying 'tf.contrib.ffmpeg.decode_audio' appears to a basic reference to functions outside of tensorflow so I am unsure there is a solution inside of the tensorflow domain. Nonetheless I wanted to bring this up in case someone had a solution. This is probably not a bug report and more of a low priority feature request. \r\n\r\nThe code below will run without error when **num_threads=1** for tf.train.batch but the kernel will crash for **num_threads=2** or more. \r\n\r\n`\r\n```\r\ngraph = tf.Graph()\r\n\r\nwith graph.as_default():\r\n\r\n    \r\n    batch_size=2\r\n\r\n    queue = tf.train.slice_input_producer([paths, labels], \r\n                                          num_epochs=2, shuffle=True, capacity=32)\r\n    \r\n    \r\n    audio_binary = tf.read_file(queue[0])\r\n    signal = tf.contrib.ffmpeg.decode_audio(audio_binary, file_format='mp3', \r\n                                        samples_per_second=22500,  \r\n                                        channel_count=1)[:450000,0]\r\n    y_ = tf.one_hot(queue[1], 16, dtype=tf.float32)\r\n\r\n\r\n    batch_sig, batch_y_ = tf.train.batch([signal, y_], batch_size=batch_size, \r\n                                         shapes=[(450000,), (16,)], \r\n                                         num_threads=1, capacity=64)\r\n    \r\n    \r\n    with tf.Session(config=tf.ConfigProto(operation_timeout_in_ms=500)) as sess:\r\n        sess.run(tf.global_variables_initializer())\r\n        sess.run(tf.local_variables_initializer())\r\n\r\n        \r\n        coord = tf.train.Coordinator()\r\n        threads = tf.train.start_queue_runners(sess=sess, coord=coord)\r\n        \r\n        \r\n        for i in range(2):\r\n            print(tf.reduce_max(batch_sig, axis=1).eval())\r\n            \r\n        coord.request_stop()\r\n        coord.join(threads)            \r\n        `\r\n\r\n\r\n"}