{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/356477016", "html_url": "https://github.com/tensorflow/tensorflow/issues/6189#issuecomment-356477016", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6189", "id": 356477016, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjQ3NzAxNg==", "user": {"login": "studentSam0000", "id": 34502974, "node_id": "MDQ6VXNlcjM0NTAyOTc0", "avatar_url": "https://avatars0.githubusercontent.com/u/34502974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/studentSam0000", "html_url": "https://github.com/studentSam0000", "followers_url": "https://api.github.com/users/studentSam0000/followers", "following_url": "https://api.github.com/users/studentSam0000/following{/other_user}", "gists_url": "https://api.github.com/users/studentSam0000/gists{/gist_id}", "starred_url": "https://api.github.com/users/studentSam0000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/studentSam0000/subscriptions", "organizations_url": "https://api.github.com/users/studentSam0000/orgs", "repos_url": "https://api.github.com/users/studentSam0000/repos", "events_url": "https://api.github.com/users/studentSam0000/events{/privacy}", "received_events_url": "https://api.github.com/users/studentSam0000/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-10T02:04:11Z", "updated_at": "2018-01-10T03:19:33Z", "author_association": "NONE", "body_html": "<p>Hi <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1794715\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ebrevdo\">@ebrevdo</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1381301\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ppwwyyxx\">@ppwwyyxx</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5376757\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/michaelisard\">@michaelisard</a> , I think I am facing a similar problem but not sure about it. My TensorFlow version is 1.2.1.</p>\n<p>I am trying to finetune <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/slim/python/slim/nets/resnet_v1.py\">resnet_50</a> from <code>tensorflow.slim</code> package on my own data.</p>\n<p>To have the training and validation cycles together I use,</p>\n<pre><code>        with slim.arg_scope(resnet_arg_scope()):\n            self.network_logits,_     = resnet_v1_50(inputs=inputs) \n            self.network_logits_val,_ = resnet_v1_50(inputs=inputs, reuse=True, is_training=False) ## Define a new function for testing but reuse the same model variables\n</code></pre>\n<p>Note, that my intension is to reuse the variables in the trained model for validation. However, on my TensorBoard I get two seperate <code>resnet_50_v1</code> and  <code>resnet_50_v1_1</code> blocks.</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/34502974/34751909-4907825e-f603-11e7-9282-5d9be078ee26.png\"><img src=\"https://user-images.githubusercontent.com/34502974/34751909-4907825e-f603-11e7-9282-5d9be078ee26.png\" alt=\" full graph \" style=\"max-width:100%;\"></a></p>\n<p>However, when I zoomed in to the block <code>resnet_50_v1_1</code> (The block used in the validation cycle), I only see a set of operators(i.e. all the variables are passed from <code>resnet_50_v1</code>).</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/34502974/34752040-17de5ecc-f604-11e7-8a17-3b29039ee4bd.jpg\"><img src=\"https://user-images.githubusercontent.com/34502974/34752040-17de5ecc-f604-11e7-8a17-3b29039ee4bd.jpg\" alt=\"zoomed_1_1\" style=\"max-width:100%;\"></a></p>\n<p>This is how a similar block looks inside the <code>resnet_50_v1</code> (The block used in the training cycle),</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/34502974/34752279-5a4aff58-f605-11e7-963c-d285628de0b8.jpg\"><img src=\"https://user-images.githubusercontent.com/34502974/34752279-5a4aff58-f605-11e7-963c-d285628de0b8.jpg\" alt=\"train zoomed cropped\" style=\"max-width:100%;\"></a></p>\n<p>I think this sperate blocks appear due to the discussed <code>name_scope</code> issue . If that is the case is my code technically safe? To me this is just a problem of easthetic appearance on tensorboard. Please correct me if I am wrong.</p>\n<p>Could you please help me clarify why I am getting two distinct blocks <code>resnet_50_v1</code> and <code>resnet_50_v1_1</code>? Is my code technically safe from what it appears? Thanks in Advance!</p>", "body_text": "Hi @ebrevdo @ppwwyyxx @michaelisard , I think I am facing a similar problem but not sure about it. My TensorFlow version is 1.2.1.\nI am trying to finetune resnet_50 from tensorflow.slim package on my own data.\nTo have the training and validation cycles together I use,\n        with slim.arg_scope(resnet_arg_scope()):\n            self.network_logits,_     = resnet_v1_50(inputs=inputs) \n            self.network_logits_val,_ = resnet_v1_50(inputs=inputs, reuse=True, is_training=False) ## Define a new function for testing but reuse the same model variables\n\nNote, that my intension is to reuse the variables in the trained model for validation. However, on my TensorBoard I get two seperate resnet_50_v1 and  resnet_50_v1_1 blocks.\n\nHowever, when I zoomed in to the block resnet_50_v1_1 (The block used in the validation cycle), I only see a set of operators(i.e. all the variables are passed from resnet_50_v1).\n\nThis is how a similar block looks inside the resnet_50_v1 (The block used in the training cycle),\n\nI think this sperate blocks appear due to the discussed name_scope issue . If that is the case is my code technically safe? To me this is just a problem of easthetic appearance on tensorboard. Please correct me if I am wrong.\nCould you please help me clarify why I am getting two distinct blocks resnet_50_v1 and resnet_50_v1_1? Is my code technically safe from what it appears? Thanks in Advance!", "body": "Hi @ebrevdo @ppwwyyxx @michaelisard , I think I am facing a similar problem but not sure about it. My TensorFlow version is 1.2.1.\r\n\r\nI am trying to finetune [resnet_50](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/slim/python/slim/nets/resnet_v1.py) from `tensorflow.slim` package on my own data. \r\n\r\nTo have the training and validation cycles together I use,\r\n\r\n```\r\n        with slim.arg_scope(resnet_arg_scope()):\r\n            self.network_logits,_     = resnet_v1_50(inputs=inputs) \r\n            self.network_logits_val,_ = resnet_v1_50(inputs=inputs, reuse=True, is_training=False) ## Define a new function for testing but reuse the same model variables\r\n```\r\n\r\nNote, that my intension is to reuse the variables in the trained model for validation. However, on my TensorBoard I get two seperate `resnet_50_v1` and  `resnet_50_v1_1` blocks.\r\n\r\n![ full graph ](https://user-images.githubusercontent.com/34502974/34751909-4907825e-f603-11e7-9282-5d9be078ee26.png)\r\n\r\nHowever, when I zoomed in to the block `resnet_50_v1_1` (The block used in the validation cycle), I only see a set of operators(i.e. all the variables are passed from `resnet_50_v1`).\r\n\r\n![zoomed_1_1](https://user-images.githubusercontent.com/34502974/34752040-17de5ecc-f604-11e7-8a17-3b29039ee4bd.jpg)\r\n\r\nThis is how a similar block looks inside the `resnet_50_v1` (The block used in the training cycle),\r\n\r\n![train zoomed cropped](https://user-images.githubusercontent.com/34502974/34752279-5a4aff58-f605-11e7-963c-d285628de0b8.jpg)\r\n\r\nI think this sperate blocks appear due to the discussed `name_scope` issue . If that is the case is my code technically safe? To me this is just a problem of easthetic appearance on tensorboard. Please correct me if I am wrong.\r\n\r\nCould you please help me clarify why I am getting two distinct blocks `resnet_50_v1` and `resnet_50_v1_1`? Is my code technically safe from what it appears? Thanks in Advance!\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  "}