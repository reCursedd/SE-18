{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/280978887", "html_url": "https://github.com/tensorflow/tensorflow/issues/6189#issuecomment-280978887", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6189", "id": 280978887, "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDk3ODg4Nw==", "user": {"login": "ppwwyyxx", "id": 1381301, "node_id": "MDQ6VXNlcjEzODEzMDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1381301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ppwwyyxx", "html_url": "https://github.com/ppwwyyxx", "followers_url": "https://api.github.com/users/ppwwyyxx/followers", "following_url": "https://api.github.com/users/ppwwyyxx/following{/other_user}", "gists_url": "https://api.github.com/users/ppwwyyxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/ppwwyyxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ppwwyyxx/subscriptions", "organizations_url": "https://api.github.com/users/ppwwyyxx/orgs", "repos_url": "https://api.github.com/users/ppwwyyxx/repos", "events_url": "https://api.github.com/users/ppwwyyxx/events{/privacy}", "received_events_url": "https://api.github.com/users/ppwwyyxx/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-20T03:19:46Z", "updated_at": "2017-02-20T03:21:40Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=287200\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/eamartin\">@eamartin</a> My bad earlier. I just found you can do something like this: (from <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"192800636\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/6007\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/6007/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/6007\">#6007</a>)</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">class</span> <span class=\"pl-en\">Foo</span>(<span class=\"pl-c1\">object</span>):\n    <span class=\"pl-k\">def</span> <span class=\"pl-c1\">__init__</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>):\n        <span class=\"pl-k\">with</span> tf.variable_scope(<span class=\"pl-c1\">None</span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Foo<span class=\"pl-pds\">'</span></span>):\n            <span class=\"pl-c1\">self</span>.sc <span class=\"pl-k\">=</span> tf.get_variable_scope()\n            <span class=\"pl-c1\">self</span>.x <span class=\"pl-k\">=</span> tf.get_variable(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>x<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">initializer</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0.0</span>)\n            <span class=\"pl-c1\">print</span>(<span class=\"pl-c1\">self</span>.x)\n\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">meth</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">foo</span>):\n        <span class=\"pl-k\">with</span> tf.name_scope(<span class=\"pl-c1\">self</span>.sc.original_name_scope):\n            z <span class=\"pl-k\">=</span> tf.multiply(foo, <span class=\"pl-c1\">3.14</span>, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>z<span class=\"pl-pds\">'</span></span>)\n            <span class=\"pl-c1\">print</span>(z)\n\nf0 <span class=\"pl-k\">=</span> Foo()      <span class=\"pl-c\"><span class=\"pl-c\">#</span> Foo/x</span>\nf1 <span class=\"pl-k\">=</span> Foo()      <span class=\"pl-c\"><span class=\"pl-c\">#</span> Foo_1/x</span>\nf0.meth(<span class=\"pl-c1\">1.0</span>)    <span class=\"pl-c\"><span class=\"pl-c\">#</span> Foo/z</span>\nf0.meth(<span class=\"pl-c1\">2.0</span>)    <span class=\"pl-c\"><span class=\"pl-c\">#</span> Foo/z_1</span>\nf1.meth(<span class=\"pl-c1\">3.0</span>)    <span class=\"pl-c\"><span class=\"pl-c\">#</span> Foo_1/z</span></pre></div>\n<p>Maybe this will help?</p>", "body_text": "@eamartin My bad earlier. I just found you can do something like this: (from #6007)\nclass Foo(object):\n    def __init__(self):\n        with tf.variable_scope(None, 'Foo'):\n            self.sc = tf.get_variable_scope()\n            self.x = tf.get_variable('x', initializer=0.0)\n            print(self.x)\n\n    def meth(self, foo):\n        with tf.name_scope(self.sc.original_name_scope):\n            z = tf.multiply(foo, 3.14, name='z')\n            print(z)\n\nf0 = Foo()      # Foo/x\nf1 = Foo()      # Foo_1/x\nf0.meth(1.0)    # Foo/z\nf0.meth(2.0)    # Foo/z_1\nf1.meth(3.0)    # Foo_1/z\nMaybe this will help?", "body": "@eamartin My bad earlier. I just found you can do something like this: (from #6007)\r\n```python\r\nclass Foo(object):\r\n    def __init__(self):\r\n        with tf.variable_scope(None, 'Foo'):\r\n            self.sc = tf.get_variable_scope()\r\n            self.x = tf.get_variable('x', initializer=0.0)\r\n            print(self.x)\r\n\r\n    def meth(self, foo):\r\n        with tf.name_scope(self.sc.original_name_scope):\r\n            z = tf.multiply(foo, 3.14, name='z')\r\n            print(z)\r\n\r\nf0 = Foo()      # Foo/x\r\nf1 = Foo()      # Foo_1/x\r\nf0.meth(1.0)    # Foo/z\r\nf0.meth(2.0)    # Foo/z_1\r\nf1.meth(3.0)    # Foo_1/z\r\n```\r\nMaybe this will help?\r\n"}