{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/265820123", "html_url": "https://github.com/tensorflow/tensorflow/issues/6189#issuecomment-265820123", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6189", "id": 265820123, "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTgyMDEyMw==", "user": {"login": "nasimrahaman", "id": 7032458, "node_id": "MDQ6VXNlcjcwMzI0NTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/7032458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nasimrahaman", "html_url": "https://github.com/nasimrahaman", "followers_url": "https://api.github.com/users/nasimrahaman/followers", "following_url": "https://api.github.com/users/nasimrahaman/following{/other_user}", "gists_url": "https://api.github.com/users/nasimrahaman/gists{/gist_id}", "starred_url": "https://api.github.com/users/nasimrahaman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nasimrahaman/subscriptions", "organizations_url": "https://api.github.com/users/nasimrahaman/orgs", "repos_url": "https://api.github.com/users/nasimrahaman/repos", "events_url": "https://api.github.com/users/nasimrahaman/events{/privacy}", "received_events_url": "https://api.github.com/users/nasimrahaman/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-08T18:45:17Z", "updated_at": "2016-12-08T18:45:50Z", "author_association": "NONE", "body_html": "<p>I ran another test (on <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5376757\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/michaelisard\">@michaelisard</a> 's advice):</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">with</span> tf.name_scope(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>layer123<span class=\"pl-pds\">'</span></span>) <span class=\"pl-k\">as</span> scope:\n    v <span class=\"pl-k\">=</span> tf.Variable(<span class=\"pl-c1\">3</span>., <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>v<span class=\"pl-pds\">'</span></span>)\n    \n<span class=\"pl-k\">with</span> tf.name_scope(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>layer123<span class=\"pl-pds\">'</span></span>):\n    w <span class=\"pl-k\">=</span> v <span class=\"pl-k\">*</span> <span class=\"pl-c1\">2</span>\n\n<span class=\"pl-c1\">print</span>(w.name)    <span class=\"pl-c\"><span class=\"pl-c\">#</span> still prints 'layer123_1/mul:0'</span></pre></div>\n<p>Replacing the first <code>name_scope</code> with <code>variable_scope</code> and <code>Variable</code> with <code>get_variable</code> did not change anything. However, I've found this works:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">with</span> tf.name_scope(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>layer123<span class=\"pl-pds\">'</span></span>) <span class=\"pl-k\">as</span> scope:\n    v <span class=\"pl-k\">=</span> tf.Variable(<span class=\"pl-c1\">3</span>., <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>v<span class=\"pl-pds\">'</span></span>)\n\n<span class=\"pl-k\">with</span> tf.name_scope(scope):\n    w <span class=\"pl-k\">=</span> v <span class=\"pl-k\">*</span> <span class=\"pl-c1\">2</span>\n\n<span class=\"pl-c1\">print</span>(w.name)    <span class=\"pl-c\"><span class=\"pl-c\">#</span> prints 'layer123/mul:0' like it should</span></pre></div>\n<p>This is quite unsatisfactory, for obvious reasons (e.g. get_variable functionality is rendered useless, encapsulation is broken, etc.).</p>", "body_text": "I ran another test (on @michaelisard 's advice):\nwith tf.name_scope('layer123') as scope:\n    v = tf.Variable(3., name='v')\n    \nwith tf.name_scope('layer123'):\n    w = v * 2\n\nprint(w.name)    # still prints 'layer123_1/mul:0'\nReplacing the first name_scope with variable_scope and Variable with get_variable did not change anything. However, I've found this works:\nwith tf.name_scope('layer123') as scope:\n    v = tf.Variable(3., name='v')\n\nwith tf.name_scope(scope):\n    w = v * 2\n\nprint(w.name)    # prints 'layer123/mul:0' like it should\nThis is quite unsatisfactory, for obvious reasons (e.g. get_variable functionality is rendered useless, encapsulation is broken, etc.).", "body": "I ran another test (on @michaelisard 's advice):\r\n\r\n```python\r\nwith tf.name_scope('layer123') as scope:\r\n    v = tf.Variable(3., name='v')\r\n    \r\nwith tf.name_scope('layer123'):\r\n    w = v * 2\r\n\r\nprint(w.name)    # still prints 'layer123_1/mul:0'\r\n```\r\n\r\nReplacing the first `name_scope` with `variable_scope` and `Variable` with `get_variable` did not change anything. However, I've found this works: \r\n\r\n```python\r\nwith tf.name_scope('layer123') as scope:\r\n    v = tf.Variable(3., name='v')\r\n\r\nwith tf.name_scope(scope):\r\n    w = v * 2\r\n\r\nprint(w.name)    # prints 'layer123/mul:0' like it should\r\n```\r\n\r\nThis is quite unsatisfactory, for obvious reasons (e.g. get_variable functionality is rendered useless, encapsulation is broken, etc.). "}