{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5206", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5206/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5206/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5206/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/5206", "id": 185274500, "node_id": "MDExOlB1bGxSZXF1ZXN0OTA5MjEzMzU=", "number": 5206, "title": "Let build_server.sh take whl file URL as an input argument.", "user": {"login": "caisq", "id": 16824702, "node_id": "MDQ6VXNlcjE2ODI0NzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/16824702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caisq", "html_url": "https://github.com/caisq", "followers_url": "https://api.github.com/users/caisq/followers", "following_url": "https://api.github.com/users/caisq/following{/other_user}", "gists_url": "https://api.github.com/users/caisq/gists{/gist_id}", "starred_url": "https://api.github.com/users/caisq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caisq/subscriptions", "organizations_url": "https://api.github.com/users/caisq/orgs", "repos_url": "https://api.github.com/users/caisq/repos", "events_url": "https://api.github.com/users/caisq/events{/privacy}", "received_events_url": "https://api.github.com/users/caisq/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "yifeif", "id": 1192265, "node_id": "MDQ6VXNlcjExOTIyNjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1192265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yifeif", "html_url": "https://github.com/yifeif", "followers_url": "https://api.github.com/users/yifeif/followers", "following_url": "https://api.github.com/users/yifeif/following{/other_user}", "gists_url": "https://api.github.com/users/yifeif/gists{/gist_id}", "starred_url": "https://api.github.com/users/yifeif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yifeif/subscriptions", "organizations_url": "https://api.github.com/users/yifeif/orgs", "repos_url": "https://api.github.com/users/yifeif/repos", "events_url": "https://api.github.com/users/yifeif/events{/privacy}", "received_events_url": "https://api.github.com/users/yifeif/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yifeif", "id": 1192265, "node_id": "MDQ6VXNlcjExOTIyNjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1192265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yifeif", "html_url": "https://github.com/yifeif", "followers_url": "https://api.github.com/users/yifeif/followers", "following_url": "https://api.github.com/users/yifeif/following{/other_user}", "gists_url": "https://api.github.com/users/yifeif/gists{/gist_id}", "starred_url": "https://api.github.com/users/yifeif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yifeif/subscriptions", "organizations_url": "https://api.github.com/users/yifeif/orgs", "repos_url": "https://api.github.com/users/yifeif/repos", "events_url": "https://api.github.com/users/yifeif/events{/privacy}", "received_events_url": "https://api.github.com/users/yifeif/received_events", "type": "User", "site_admin": false}, {"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2016-10-26T01:26:27Z", "updated_at": "2016-10-26T02:26:18Z", "closed_at": "2016-10-26T02:26:18Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/5206", "html_url": "https://github.com/tensorflow/tensorflow/pull/5206", "diff_url": "https://github.com/tensorflow/tensorflow/pull/5206.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/5206.patch"}, "body_html": "<p>This make it possible to test OSS GRPC distributed runtime in<br>\ndist_test/remote_test.sh against a release build.</p>\n<p>Usage example:</p>\n<ol>\n<li>Build the server using a release whl file. (Obviously this means that<br>\nthe Linxu CPU PIP release build has to pass first.)<br>\n$ export DOCKER_VERSION_TAG=\"0.11.0rc1\"<br>\n$ tensorflow/tools/dist_test/build_server.sh<br>\ntensorflow/tf_grpc_test_server:${DOCKER_VERSION_TAG}<br>\n<a href=\"http://ci.tensorflow.org/view/Release/job/release-matrix-cpu/TF_BUILD_CONTAINER_TYPE=CPU,TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON2,label=cpu-slave/lastSuccessfulBuild/artifact/pip_test/whl/tensorflow-$%7BDOCKER_VERSION_TAG%7D-cp27-none-linux_x86_64.whl\" rel=\"nofollow\">http://ci.tensorflow.org/view/Release/job/release-matrix-cpu/TF_BUILD_CONTAINER_TYPE=CPU,TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON2,label=cpu-slave/lastSuccessfulBuild/artifact/pip_test/whl/tensorflow-${DOCKER_VERSION_TAG}-cp27-none-linux_x86_64.whl</a><br>\n--test</li>\n</ol>\n<pre><code>2. Run remote_test.sh:\n  $ export TF_DIST_DOCKER_NO_CACHE=1\n  $ export\nTF_DIST_SERVER_DOCKER_IMAGE=\"tensorflow/tf_grpc_test_server:${DOCKER_VERSION_TAG}\"\n$ export TF_DIST_GCLOUD_PROJECT=\"my-project\"\n$ export TF_DIST_GCLOUD_COMPUTE_ZONE=\"my-zone\"\n$ export TF_DIST_CONTAINER_CLUSTER=\"my-cluster\"\n$ export TF_DIST_GCLOUD_KEY_FILE=\"/path/to/my/key.json\"\n$ tensorflow/tools/dist_test/remote_test.sh\n      \"http://ci.tensorflow.org/view/Release/job/release-matrix-cpu/TF_BUILD_CONTAINER_TYPE=CPU,TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON2,label=cpu-slave/lastSuccessfulBuild/artifact/pip_test/whl/tensorflow-${DOCKER_VERSION_TAG}-cp27-none-linux_x86_64.whl\"\n</code></pre>", "body_text": "This make it possible to test OSS GRPC distributed runtime in\ndist_test/remote_test.sh against a release build.\nUsage example:\n\nBuild the server using a release whl file. (Obviously this means that\nthe Linxu CPU PIP release build has to pass first.)\n$ export DOCKER_VERSION_TAG=\"0.11.0rc1\"\n$ tensorflow/tools/dist_test/build_server.sh\ntensorflow/tf_grpc_test_server:${DOCKER_VERSION_TAG}\nhttp://ci.tensorflow.org/view/Release/job/release-matrix-cpu/TF_BUILD_CONTAINER_TYPE=CPU,TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON2,label=cpu-slave/lastSuccessfulBuild/artifact/pip_test/whl/tensorflow-${DOCKER_VERSION_TAG}-cp27-none-linux_x86_64.whl\n--test\n\n2. Run remote_test.sh:\n  $ export TF_DIST_DOCKER_NO_CACHE=1\n  $ export\nTF_DIST_SERVER_DOCKER_IMAGE=\"tensorflow/tf_grpc_test_server:${DOCKER_VERSION_TAG}\"\n$ export TF_DIST_GCLOUD_PROJECT=\"my-project\"\n$ export TF_DIST_GCLOUD_COMPUTE_ZONE=\"my-zone\"\n$ export TF_DIST_CONTAINER_CLUSTER=\"my-cluster\"\n$ export TF_DIST_GCLOUD_KEY_FILE=\"/path/to/my/key.json\"\n$ tensorflow/tools/dist_test/remote_test.sh\n      \"http://ci.tensorflow.org/view/Release/job/release-matrix-cpu/TF_BUILD_CONTAINER_TYPE=CPU,TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON2,label=cpu-slave/lastSuccessfulBuild/artifact/pip_test/whl/tensorflow-${DOCKER_VERSION_TAG}-cp27-none-linux_x86_64.whl\"", "body": "This make it possible to test OSS GRPC distributed runtime in\ndist_test/remote_test.sh against a release build.\n\nUsage example:\n1. Build the server using a release whl file. (Obviously this means that\nthe Linxu CPU PIP release build has to pass first.)\n  $ export DOCKER_VERSION_TAG=\"0.11.0rc1\"\n    $ tensorflow/tools/dist_test/build_server.sh\n    tensorflow/tf_grpc_test_server:${DOCKER_VERSION_TAG}\n    http://ci.tensorflow.org/view/Release/job/release-matrix-cpu/TF_BUILD_CONTAINER_TYPE=CPU,TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON2,label=cpu-slave/lastSuccessfulBuild/artifact/pip_test/whl/tensorflow-${DOCKER_VERSION_TAG}-cp27-none-linux_x86_64.whl\n    --test\n\n```\n2. Run remote_test.sh:\n  $ export TF_DIST_DOCKER_NO_CACHE=1\n  $ export\nTF_DIST_SERVER_DOCKER_IMAGE=\"tensorflow/tf_grpc_test_server:${DOCKER_VERSION_TAG}\"\n$ export TF_DIST_GCLOUD_PROJECT=\"my-project\"\n$ export TF_DIST_GCLOUD_COMPUTE_ZONE=\"my-zone\"\n$ export TF_DIST_CONTAINER_CLUSTER=\"my-cluster\"\n$ export TF_DIST_GCLOUD_KEY_FILE=\"/path/to/my/key.json\"\n$ tensorflow/tools/dist_test/remote_test.sh\n      \"http://ci.tensorflow.org/view/Release/job/release-matrix-cpu/TF_BUILD_CONTAINER_TYPE=CPU,TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON2,label=cpu-slave/lastSuccessfulBuild/artifact/pip_test/whl/tensorflow-${DOCKER_VERSION_TAG}-cp27-none-linux_x86_64.whl\"\n```\n"}