{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/157605215", "pull_request_review_id": 84275360, "id": 157605215, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzYwNTIxNQ==", "diff_hunk": "@@ -0,0 +1,125 @@\n+/* Copyright 2015 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+// See docs in ../ops/parse_ops.cc.\n+\n+#include <algorithm>\n+#include \"tensorflow/core/framework/op_kernel.h\"\n+#include \"tensorflow/core/framework/tensor.h\"\n+#include \"tensorflow/core/framework/tensor_shape.h\"\n+#include \"tensorflow/core/framework/types.h\"\n+#include \"tensorflow/core/lib/core/errors.h\"\n+#include \"tensorflow/core/lib/io/zlib_compression_options.h\"\n+#include \"tensorflow/core/lib/io/zlib_inputstream.h\"\n+\n+namespace tensorflow {\n+namespace {\n+// Wrap memory buffer into InputStreamInterface\n+class MemoryInputStream : public io::InputStreamInterface {\n+ public:\n+  explicit MemoryInputStream(const char* buffer, size_t length)\n+      : buf_(buffer), len_(length), pos_(0) {}\n+\n+  ~MemoryInputStream(){};\n+\n+  Status ReadNBytes(int64 bytes_to_read, string* result) override {\n+    result->clear();\n+    if (bytes_to_read < 0) {\n+      return errors::InvalidArgument(\"Can't read a negative number of bytes: \",\n+                                     bytes_to_read);\n+    }\n+    int64 bytes = bytes_to_read;\n+    Status s = Status::OK();\n+    if (pos_ + bytes_to_read > len_) {\n+      bytes = len_ - pos_;\n+      s = errors::OutOfRange(\"reached end of file\");\n+    }\n+    if (bytes > 0) {\n+      result->resize(bytes);\n+      memcpy(&(*result)[0], &buf_[pos_], bytes);\n+      pos_ += bytes;\n+    }\n+    return s;\n+  }\n+\n+  int64 Tell() const override { return pos_; }\n+\n+  Status Reset() override {\n+    pos_ = 0;\n+    return Status::OK();\n+  }\n+\n+ private:\n+  const char* buf_;  // Not owned.\n+  int64 len_;\n+  int64 pos_ = 0;  // Tracks where we are in the file.\n+};\n+}  // namespace\n+\n+class DecodeCompressedOp : public OpKernel {\n+ public:\n+  explicit DecodeCompressedOp(OpKernelConstruction* context)\n+      : OpKernel(context) {\n+    OP_REQUIRES_OK(context,\n+                   context->GetAttr(\"compression_type\", &compression_type_));\n+    OP_REQUIRES(context,\n+                (compression_type_ == \"\" || compression_type_ == \"ZLIB\" ||\n+                 compression_type_ == \"GZIP\"),\n+                errors::InvalidArgument(\n+                    \"Only ZLIB, GZIP or NONE are supported compressions\"));\n+  }\n+\n+  void Compute(OpKernelContext* context) override {\n+    const Tensor* bytes_tensor;\n+    OP_REQUIRES_OK(context, context->input(\"bytes\", &bytes_tensor));\n+    const auto& bytes_flat = bytes_tensor->flat<string>();\n+\n+    Tensor* output_tensor = nullptr;\n+    OP_REQUIRES_OK(context,\n+                   context->allocate_output(\"output\", bytes_tensor->shape(),\n+                                            &output_tensor));\n+    auto output_flat = output_tensor->flat<string>();\n+    if (compression_type_ == \"\") {\n+      for (int64 i = 0; i < bytes_flat.size(); i++) {\n+        output_flat(i) = bytes_flat(i);\n+      }\n+    } else {\n+      const io::ZlibCompressionOptions zlib_options =\n+          compression_type_ == \"ZLIB\" ? io::ZlibCompressionOptions::DEFAULT()\n+                                      : io::ZlibCompressionOptions::GZIP();\n+      for (int64 i = 0; i < bytes_flat.size(); i++) {", "path": "tensorflow/core/kernels/decode_compressed_op.cc", "position": 102, "original_position": 102, "commit_id": "47c0d45b042714b510eb4be8148968e3536f96f2", "original_commit_id": "8cec38d032a6edb5129fd842905c416d20724f15", "user": {"login": "yongtang", "id": 6932348, "node_id": "MDQ6VXNlcjY5MzIzNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6932348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yongtang", "html_url": "https://github.com/yongtang", "followers_url": "https://api.github.com/users/yongtang/followers", "following_url": "https://api.github.com/users/yongtang/following{/other_user}", "gists_url": "https://api.github.com/users/yongtang/gists{/gist_id}", "starred_url": "https://api.github.com/users/yongtang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yongtang/subscriptions", "organizations_url": "https://api.github.com/users/yongtang/orgs", "repos_url": "https://api.github.com/users/yongtang/repos", "events_url": "https://api.github.com/users/yongtang/events{/privacy}", "received_events_url": "https://api.github.com/users/yongtang/received_events", "type": "User", "site_admin": false}, "body": "@YoelShoshan It is a tensor of string so the loop at a higher level, not a byte level.", "created_at": "2017-12-18T21:27:28Z", "updated_at": "2017-12-19T19:14:05Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/15132#discussion_r157605215", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/15132", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/157605215"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/15132#discussion_r157605215"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/15132"}}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7043815\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/YoelShoshan\">@YoelShoshan</a> It is a tensor of string so the loop at a higher level, not a byte level.</p>", "body_text": "@YoelShoshan It is a tensor of string so the loop at a higher level, not a byte level.", "in_reply_to_id": 155317353}