{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/279784978", "html_url": "https://github.com/tensorflow/tensorflow/pull/7487#issuecomment-279784978", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7487", "id": 279784978, "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTc4NDk3OA==", "user": {"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-14T18:00:02Z", "updated_at": "2017-02-14T18:00:02Z", "author_association": "CONTRIBUTOR", "body_html": "<p>It is also be possible to massively accelerate the third implementation by writing a new C++ op that does</p>\n<pre><code>merged[indices[m][i, ..., j], ...] = m\n</code></pre>\n<p>It would be pretty easy to make this by copying the current <code>DynamicStitchOp</code> kernel and (essentially) constant folding.</p>\n<p>Also: Thank you for working on this!  I realize I'm asking for a lot, but it's important to minimize performance regressions to existing functionality.</p>", "body_text": "It is also be possible to massively accelerate the third implementation by writing a new C++ op that does\nmerged[indices[m][i, ..., j], ...] = m\n\nIt would be pretty easy to make this by copying the current DynamicStitchOp kernel and (essentially) constant folding.\nAlso: Thank you for working on this!  I realize I'm asking for a lot, but it's important to minimize performance regressions to existing functionality.", "body": "It is also be possible to massively accelerate the third implementation by writing a new C++ op that does\r\n\r\n    merged[indices[m][i, ..., j], ...] = m\r\n\r\nIt would be pretty easy to make this by copying the current `DynamicStitchOp` kernel and (essentially) constant folding.\r\n\r\nAlso: Thank you for working on this!  I realize I'm asking for a lot, but it's important to minimize performance regressions to existing functionality."}