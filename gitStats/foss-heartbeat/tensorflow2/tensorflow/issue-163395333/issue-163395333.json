{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3147", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3147/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3147/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3147/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3147", "id": 163395333, "node_id": "MDU6SXNzdWUxNjMzOTUzMzM=", "number": 3147, "title": "Better way to count number of zero elements across a dimension?", "user": {"login": "tomrunia", "id": 5536129, "node_id": "MDQ6VXNlcjU1MzYxMjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5536129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomrunia", "html_url": "https://github.com/tomrunia", "followers_url": "https://api.github.com/users/tomrunia/followers", "following_url": "https://api.github.com/users/tomrunia/following{/other_user}", "gists_url": "https://api.github.com/users/tomrunia/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomrunia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomrunia/subscriptions", "organizations_url": "https://api.github.com/users/tomrunia/orgs", "repos_url": "https://api.github.com/users/tomrunia/repos", "events_url": "https://api.github.com/users/tomrunia/events{/privacy}", "received_events_url": "https://api.github.com/users/tomrunia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-01T13:26:22Z", "updated_at": "2016-07-01T16:15:35Z", "closed_at": "2016-07-01T16:15:35Z", "author_association": "NONE", "body_html": "<p>I was wondering whether there is a nicer way to count the number of zero elements across a given dimension? Looking through the API the closest result is <code>tf.unique_with_counts</code> (<a href=\"https://www.tensorflow.org/versions/r0.9/api_docs/python/array_ops.html#unique_with_counts\" rel=\"nofollow\">link</a>) but this operation returns the values in order of occurrence so I first would need to find the index of the zero-element. The solution that I am currently using is not very elegant:</p>\n<div class=\"highlight highlight-source-python\"><pre>x <span class=\"pl-k\">=</span> np.asarray([[<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>], [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">3</span>], [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>]])\n\na <span class=\"pl-k\">=</span> tf.Variable(x)\nzero_elements <span class=\"pl-k\">=</span> tf.equal(a, tf.zeros_like(a))\ncount_zeros_per_row <span class=\"pl-k\">=</span> tf.reduce_sum(tf.to_int32(zero_elements), <span class=\"pl-v\">reduction_indices</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> result =&gt; [2, 1, 0]</span></pre></div>\n<p>Would be nice to have operations to count the (non-)zero elements across a given dimension.</p>", "body_text": "I was wondering whether there is a nicer way to count the number of zero elements across a given dimension? Looking through the API the closest result is tf.unique_with_counts (link) but this operation returns the values in order of occurrence so I first would need to find the index of the zero-element. The solution that I am currently using is not very elegant:\nx = np.asarray([[0, 0, 1], [1, 0, 3], [1, 2, 3]])\n\na = tf.Variable(x)\nzero_elements = tf.equal(a, tf.zeros_like(a))\ncount_zeros_per_row = tf.reduce_sum(tf.to_int32(zero_elements), reduction_indices=1)\n\n# result => [2, 1, 0]\nWould be nice to have operations to count the (non-)zero elements across a given dimension.", "body": "I was wondering whether there is a nicer way to count the number of zero elements across a given dimension? Looking through the API the closest result is `tf.unique_with_counts` ([link](https://www.tensorflow.org/versions/r0.9/api_docs/python/array_ops.html#unique_with_counts)) but this operation returns the values in order of occurrence so I first would need to find the index of the zero-element. The solution that I am currently using is not very elegant:\n\n``` python\nx = np.asarray([[0, 0, 1], [1, 0, 3], [1, 2, 3]])\n\na = tf.Variable(x)\nzero_elements = tf.equal(a, tf.zeros_like(a))\ncount_zeros_per_row = tf.reduce_sum(tf.to_int32(zero_elements), reduction_indices=1)\n\n# result => [2, 1, 0]\n```\n\nWould be nice to have operations to count the (non-)zero elements across a given dimension.\n"}