{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13537", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13537/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13537/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13537/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/13537", "id": 263573460, "node_id": "MDU6SXNzdWUyNjM1NzM0NjA=", "number": 13537, "title": "Feature Request: tf.assign() support tuples", "user": {"login": "Mazecreator", "id": 18412448, "node_id": "MDQ6VXNlcjE4NDEyNDQ4", "avatar_url": "https://avatars2.githubusercontent.com/u/18412448?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mazecreator", "html_url": "https://github.com/Mazecreator", "followers_url": "https://api.github.com/users/Mazecreator/followers", "following_url": "https://api.github.com/users/Mazecreator/following{/other_user}", "gists_url": "https://api.github.com/users/Mazecreator/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mazecreator/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mazecreator/subscriptions", "organizations_url": "https://api.github.com/users/Mazecreator/orgs", "repos_url": "https://api.github.com/users/Mazecreator/repos", "events_url": "https://api.github.com/users/Mazecreator/events{/privacy}", "received_events_url": "https://api.github.com/users/Mazecreator/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 24, "created_at": "2017-10-06T21:13:57Z", "updated_at": "2018-03-07T16:33:55Z", "closed_at": "2018-03-07T16:33:55Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I have recently updated to V1.3 of Tensorflow.  I have some code that I use for dynamic_rnn which copies the STATE of the cell so it persists to the next .run(), I can also INIT that value as well.  Since the update, I am getting a \"WARNING:tensorflow:&lt;tensorflow.python.ops.rnn_cell_impl.LSTMCell object at 0x7f278c196940&gt;: Using a concatenated state is slower and will soon be deprecated.  Use state_is_tuple=True.\".  I have tried to enable state_is_tuple but then the assign() commands fail as they don't support the tuple structures.</p>\n<p>I have an open StackOverflow question with the details:<br>\n<a href=\"https://stackoverflow.com/questions/46576194/how-do-i-assign-a-lstmstatetuple-using-tf-assign\" rel=\"nofollow\">https://stackoverflow.com/questions/46576194/how-do-i-assign-a-lstmstatetuple-using-tf-assign</a></p>\n<p>Since it seems like the RNN core is moving in the direction of the tuple for the state, it would be nice if the .assign() can handle this transparently.</p>", "body_text": "I have recently updated to V1.3 of Tensorflow.  I have some code that I use for dynamic_rnn which copies the STATE of the cell so it persists to the next .run(), I can also INIT that value as well.  Since the update, I am getting a \"WARNING:tensorflow:<tensorflow.python.ops.rnn_cell_impl.LSTMCell object at 0x7f278c196940>: Using a concatenated state is slower and will soon be deprecated.  Use state_is_tuple=True.\".  I have tried to enable state_is_tuple but then the assign() commands fail as they don't support the tuple structures.\nI have an open StackOverflow question with the details:\nhttps://stackoverflow.com/questions/46576194/how-do-i-assign-a-lstmstatetuple-using-tf-assign\nSince it seems like the RNN core is moving in the direction of the tuple for the state, it would be nice if the .assign() can handle this transparently.", "body": "I have recently updated to V1.3 of Tensorflow.  I have some code that I use for dynamic_rnn which copies the STATE of the cell so it persists to the next .run(), I can also INIT that value as well.  Since the update, I am getting a \"WARNING:tensorflow:<tensorflow.python.ops.rnn_cell_impl.LSTMCell object at 0x7f278c196940>: Using a concatenated state is slower and will soon be deprecated.  Use state_is_tuple=True.\".  I have tried to enable state_is_tuple but then the assign() commands fail as they don't support the tuple structures.\r\n\r\nI have an open StackOverflow question with the details:\r\nhttps://stackoverflow.com/questions/46576194/how-do-i-assign-a-lstmstatetuple-using-tf-assign\r\n\r\nSince it seems like the RNN core is moving in the direction of the tuple for the state, it would be nice if the .assign() can handle this transparently.\r\n"}