{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/338494891", "html_url": "https://github.com/tensorflow/tensorflow/issues/13537#issuecomment-338494891", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13537", "id": 338494891, "node_id": "MDEyOklzc3VlQ29tbWVudDMzODQ5NDg5MQ==", "user": {"login": "Mazecreator", "id": 18412448, "node_id": "MDQ6VXNlcjE4NDEyNDQ4", "avatar_url": "https://avatars2.githubusercontent.com/u/18412448?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mazecreator", "html_url": "https://github.com/Mazecreator", "followers_url": "https://api.github.com/users/Mazecreator/followers", "following_url": "https://api.github.com/users/Mazecreator/following{/other_user}", "gists_url": "https://api.github.com/users/Mazecreator/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mazecreator/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mazecreator/subscriptions", "organizations_url": "https://api.github.com/users/Mazecreator/orgs", "repos_url": "https://api.github.com/users/Mazecreator/repos", "events_url": "https://api.github.com/users/Mazecreator/events{/privacy}", "received_events_url": "https://api.github.com/users/Mazecreator/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-22T17:34:53Z", "updated_at": "2017-10-22T17:34:53Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I am very tight on time at the moment and think this might need some more holistic thinking.  My thought is it is going to be more than just an Assign update to better integrate the Tuple into TensorFlow \"seamlessly\".  There is likely to be more issues as well which I am  not sure I will be able to handle as I am not familiar with Named Tuples so it is more than just moving the Tensor as the Name needs to go with it.</p>\n<p>My thought right now is a few things need to change to integrate the Tuple():</p>\n<ul>\n<li>Assign() (_add() and _subtract() should be considered as well, but don't think that is urgent)</li>\n<li>Variable()       - Would be nice to Init a Tuple variable with another Tuple Tensor (Initial State for example)</li>\n<li>get_variable() - Not sure if the Tuple would be be supported here</li>\n<li>Not sure if Run() will be impacted and if Placeholder needs a face-lift as well...</li>\n<li>How with other Ops handle a Tuple if it is passed in place of a Tensor?  Is this a good way to concatenate different inputs</li>\n</ul>\n<p>I am tied up until about January/Feb of next year, so if the basic Assign() needs to wait until then I can hopefully tackle it at that time (I may need to come back for hints).  I think the more high level integration would be best within the development team as they would have better visibility of issues that maybe be caused or ways to handle the Tuple Tensor.</p>\n<p>For now I need to use the Concatenated State until I have time to try to convert all the code to Tuples() as described above.</p>", "body_text": "I am very tight on time at the moment and think this might need some more holistic thinking.  My thought is it is going to be more than just an Assign update to better integrate the Tuple into TensorFlow \"seamlessly\".  There is likely to be more issues as well which I am  not sure I will be able to handle as I am not familiar with Named Tuples so it is more than just moving the Tensor as the Name needs to go with it.\nMy thought right now is a few things need to change to integrate the Tuple():\n\nAssign() (_add() and _subtract() should be considered as well, but don't think that is urgent)\nVariable()       - Would be nice to Init a Tuple variable with another Tuple Tensor (Initial State for example)\nget_variable() - Not sure if the Tuple would be be supported here\nNot sure if Run() will be impacted and if Placeholder needs a face-lift as well...\nHow with other Ops handle a Tuple if it is passed in place of a Tensor?  Is this a good way to concatenate different inputs\n\nI am tied up until about January/Feb of next year, so if the basic Assign() needs to wait until then I can hopefully tackle it at that time (I may need to come back for hints).  I think the more high level integration would be best within the development team as they would have better visibility of issues that maybe be caused or ways to handle the Tuple Tensor.\nFor now I need to use the Concatenated State until I have time to try to convert all the code to Tuples() as described above.", "body": "I am very tight on time at the moment and think this might need some more holistic thinking.  My thought is it is going to be more than just an Assign update to better integrate the Tuple into TensorFlow \"seamlessly\".  There is likely to be more issues as well which I am  not sure I will be able to handle as I am not familiar with Named Tuples so it is more than just moving the Tensor as the Name needs to go with it.\r\n\r\nMy thought right now is a few things need to change to integrate the Tuple():\r\n- Assign() (_add() and _subtract() should be considered as well, but don't think that is urgent)\r\n- Variable()       - Would be nice to Init a Tuple variable with another Tuple Tensor (Initial State for example)\r\n- get_variable() - Not sure if the Tuple would be be supported here\r\n- Not sure if Run() will be impacted and if Placeholder needs a face-lift as well...\r\n- How with other Ops handle a Tuple if it is passed in place of a Tensor?  Is this a good way to concatenate different inputs\r\n\r\nI am tied up until about January/Feb of next year, so if the basic Assign() needs to wait until then I can hopefully tackle it at that time (I may need to come back for hints).  I think the more high level integration would be best within the development team as they would have better visibility of issues that maybe be caused or ways to handle the Tuple Tensor.\r\n\r\nFor now I need to use the Concatenated State until I have time to try to convert all the code to Tuples() as described above."}