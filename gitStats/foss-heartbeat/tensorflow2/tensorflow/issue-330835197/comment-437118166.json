{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/437118166", "html_url": "https://github.com/tensorflow/tensorflow/issues/19868#issuecomment-437118166", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19868", "id": 437118166, "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzExODE2Ng==", "user": {"login": "Nimitz14", "id": 12561072, "node_id": "MDQ6VXNlcjEyNTYxMDcy", "avatar_url": "https://avatars2.githubusercontent.com/u/12561072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nimitz14", "html_url": "https://github.com/Nimitz14", "followers_url": "https://api.github.com/users/Nimitz14/followers", "following_url": "https://api.github.com/users/Nimitz14/following{/other_user}", "gists_url": "https://api.github.com/users/Nimitz14/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nimitz14/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nimitz14/subscriptions", "organizations_url": "https://api.github.com/users/Nimitz14/orgs", "repos_url": "https://api.github.com/users/Nimitz14/repos", "events_url": "https://api.github.com/users/Nimitz14/events{/privacy}", "received_events_url": "https://api.github.com/users/Nimitz14/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-08T19:05:06Z", "updated_at": "2018-11-08T19:05:38Z", "author_association": "NONE", "body_html": "<p>How would one compile this from a standalone toolchain?</p>\n<p>I compile libtensorflow.so with</p>\n<pre><code>cc_binary(\n    name = \"libtensorflowlite.so\",\n    linkopts=[\n        \"-shared\",\n        \"-Wl,-soname=libtensorflowlite.so\",\n    ],  \n    linkshared = 1,\n    copts = tflite_copts(),\n    deps = [ \n        \":framework\",\n        \"//tensorflow/lite/kernels:builtin_ops\",\n    ],  \n)\n</code></pre>\n<p>and call it like</p>\n<pre><code>bazel build //tensorflow/contrib/lite:libtensorflowLite.so --crosstool_top=//external:android/crosstool --cpu=arm64-v8a --host_crosstool_top=@bazel_tools//tools/cpp:toolchain --cxxopt=\"-std=c++11\"\n</code></pre>\n<p>After compiling flatbuffers I try and compile minimal.cc like</p>\n<pre><code>android-toolchain/bin/clang++  -std=c++11 -Igit/tensorflow-android -Igit/flatbuffers/include -Lgit/tensorflow-android -Lgit/flatbuffers/build minimal.cc -ltensorflowlite -lflatbuffers\n</code></pre>\n<p>But get an error</p>\n<pre><code>undefined reference to 'tflite::InterpreterBuilder::operator()(std::__ndk1::unique_ptr&lt;tflite::Interpreter, std::__ndk1::default_delete&lt;tflite::Interpreter&gt; &gt;*)'\n</code></pre>\n<p>Fails with both ndk15c and 16b</p>", "body_text": "How would one compile this from a standalone toolchain?\nI compile libtensorflow.so with\ncc_binary(\n    name = \"libtensorflowlite.so\",\n    linkopts=[\n        \"-shared\",\n        \"-Wl,-soname=libtensorflowlite.so\",\n    ],  \n    linkshared = 1,\n    copts = tflite_copts(),\n    deps = [ \n        \":framework\",\n        \"//tensorflow/lite/kernels:builtin_ops\",\n    ],  \n)\n\nand call it like\nbazel build //tensorflow/contrib/lite:libtensorflowLite.so --crosstool_top=//external:android/crosstool --cpu=arm64-v8a --host_crosstool_top=@bazel_tools//tools/cpp:toolchain --cxxopt=\"-std=c++11\"\n\nAfter compiling flatbuffers I try and compile minimal.cc like\nandroid-toolchain/bin/clang++  -std=c++11 -Igit/tensorflow-android -Igit/flatbuffers/include -Lgit/tensorflow-android -Lgit/flatbuffers/build minimal.cc -ltensorflowlite -lflatbuffers\n\nBut get an error\nundefined reference to 'tflite::InterpreterBuilder::operator()(std::__ndk1::unique_ptr<tflite::Interpreter, std::__ndk1::default_delete<tflite::Interpreter> >*)'\n\nFails with both ndk15c and 16b", "body": "How would one compile this from a standalone toolchain?\r\n\r\nI compile libtensorflow.so with \r\n\r\n```\r\ncc_binary(\r\n    name = \"libtensorflowlite.so\",\r\n    linkopts=[\r\n        \"-shared\",\r\n        \"-Wl,-soname=libtensorflowlite.so\",\r\n    ],  \r\n    linkshared = 1,\r\n    copts = tflite_copts(),\r\n    deps = [ \r\n        \":framework\",\r\n        \"//tensorflow/lite/kernels:builtin_ops\",\r\n    ],  \r\n)\r\n```\r\n\r\nand call it like \r\n```\r\nbazel build //tensorflow/contrib/lite:libtensorflowLite.so --crosstool_top=//external:android/crosstool --cpu=arm64-v8a --host_crosstool_top=@bazel_tools//tools/cpp:toolchain --cxxopt=\"-std=c++11\"\r\n```\r\n\r\nAfter compiling flatbuffers I try and compile minimal.cc like\r\n```\r\nandroid-toolchain/bin/clang++  -std=c++11 -Igit/tensorflow-android -Igit/flatbuffers/include -Lgit/tensorflow-android -Lgit/flatbuffers/build minimal.cc -ltensorflowlite -lflatbuffers\r\n```\r\n\r\nBut get an error \r\n```\r\nundefined reference to 'tflite::InterpreterBuilder::operator()(std::__ndk1::unique_ptr<tflite::Interpreter, std::__ndk1::default_delete<tflite::Interpreter> >*)'\r\n``` \r\nFails with both ndk15c and 16b\r\n\r\n"}