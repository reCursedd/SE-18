{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/122260367", "pull_request_review_id": 44358867, "id": 122260367, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMjI2MDM2Nw==", "diff_hunk": "@@ -0,0 +1,61 @@\n+/* Copyright 2017 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+package org.tensorflow;\n+\n+/**\n+ * A tensor that can be used as an operand for operation wrappers.\n+ *\n+ * <p>The {@code Input} interface is at the base of the Java Ops API by allowing any object that\n+ * wraps an input tensor to be passed as an operand to an operation.\n+ *\n+ * <pre>{@code\n+ * // Output implements Input.\n+ * Output image = ops.image().decodeJpeg(...).image();\n+ * ops.math().cast(image, DataType.FLOAT);\n+ *\n+ * // DecodeJpeg operation also implements Input, returning the image as its output.\n+ * ops.math().cast(ops.image().decodeJpeg(...), DataType.FLOAT);\n+ * }</pre>\n+ *\n+ * <p>Additionally, objects implementing {@code Iterable<Input>} can be passed in input to\n+ * operations handling a list of tensors as one of its operand.\n+ *\n+ * <pre>{@code\n+ * // List<Output> extends from Iterable<Input>\n+ * List<Output> outputs = ops.array().split(...).output();\n+ * ops.array().concat(0, outputs);\n+ *\n+ * // Split implements Iterable<Input>, returning an iterator on the split tensors.\n+ * ops.arrays().concat(0, ops.array().split(...));\n+ * }</pre>\n+ *\n+ * <p>The handle of the tensor to be passed in input is encapsulated by an instance of {@code\n+ * Output}, which could be retrieved by calling {@link #asOutput()}. Therefore, the {@code Output}\n+ * class and the {@code Input} interface are complementary to represent a tensor being passed\n+ * between two nodes of the graph.\n+ */\n+public interface Input {\n+\n+  /**\n+   * Returns the symbolic handle of a tensor.\n+   *\n+   * <p>This method is called by the Java Ops API to retrieve the symbolic handle of a tensor added\n+   * in input to an operation.\n+   *\n+   * @see {@link OperationBuilder#addInput(Output)}.\n+   */\n+  Output asOutput();", "path": "tensorflow/java/src/main/java/org/tensorflow/Input.java", "position": null, "original_position": 60, "commit_id": "91930ae9a3952b16d0cf580b7fbba685dcf34ee2", "original_commit_id": "03ff36fddb3fe8c72d4b31e88f5b99ba83057018", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "I know this `Input` and `Output` type naming is confusing, sorry about that :)\r\nHow about:\r\n\r\n```java\r\n/**\r\n * Returns the symbolic handle of the tensor.\r\n *\r\n * <p>Inputs to TensorFlow operations are outputs of another TensorFlow operation. This method is used to obtain a symbolic handle that represents the computation of the input.\r\n ...\r\n```\r\n?", "created_at": "2017-06-15T17:18:30Z", "updated_at": "2017-06-16T19:17:03Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/10696#discussion_r122260367", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/10696", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/122260367"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/10696#discussion_r122260367"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/10696"}}, "body_html": "<p>I know this <code>Input</code> and <code>Output</code> type naming is confusing, sorry about that :)<br>\nHow about:</p>\n<div class=\"highlight highlight-source-java\"><pre><span class=\"pl-c\"><span class=\"pl-c\">/**</span></span>\n<span class=\"pl-c\"> * Returns the symbolic handle of the tensor.</span>\n<span class=\"pl-c\"> *</span>\n<span class=\"pl-c\"> * &lt;<span class=\"pl-ent\">p</span>&gt;Inputs to TensorFlow operations are outputs of another TensorFlow operation. This method is used to obtain a symbolic handle that represents the computation of the input.</span>\n<span class=\"pl-c\"> ...</span></pre></div>\n<p>?</p>", "body_text": "I know this Input and Output type naming is confusing, sorry about that :)\nHow about:\n/**\n * Returns the symbolic handle of the tensor.\n *\n * <p>Inputs to TensorFlow operations are outputs of another TensorFlow operation. This method is used to obtain a symbolic handle that represents the computation of the input.\n ...\n?"}