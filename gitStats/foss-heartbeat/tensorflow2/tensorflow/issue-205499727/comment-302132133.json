{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/302132133", "html_url": "https://github.com/tensorflow/tensorflow/issues/7281#issuecomment-302132133", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7281", "id": 302132133, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjEzMjEzMw==", "user": {"login": "ilblackdragon", "id": 175486, "node_id": "MDQ6VXNlcjE3NTQ4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/175486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilblackdragon", "html_url": "https://github.com/ilblackdragon", "followers_url": "https://api.github.com/users/ilblackdragon/followers", "following_url": "https://api.github.com/users/ilblackdragon/following{/other_user}", "gists_url": "https://api.github.com/users/ilblackdragon/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilblackdragon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilblackdragon/subscriptions", "organizations_url": "https://api.github.com/users/ilblackdragon/orgs", "repos_url": "https://api.github.com/users/ilblackdragon/repos", "events_url": "https://api.github.com/users/ilblackdragon/events{/privacy}", "received_events_url": "https://api.github.com/users/ilblackdragon/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-17T15:43:53Z", "updated_at": "2017-05-17T15:44:59Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16754285\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gusdoe\">@gusdoe</a> if you are talking about <a href=\"https://github.com/explosion/spaCy/blob/a5538d93d0cf00cdaa4ca0f61dd08cc817af8e0e/examples/deep_learning_keras.py\">this keras model</a> - it's not LDA, but LSTM model for sentiment analysis [which we have examples in TF/TF.Learn].</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=25343161\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mahatosourav91\">@mahatosourav91</a> Probably the answer is late, I haven't seen implementation for TF.<br>\nHere is implementation in Python that one can convert into TF: <a href=\"https://github.com/hannawallach/python-lda/blob/master/src/lda.py\">https://github.com/hannawallach/python-lda/blob/master/src/lda.py</a></p>\n<p>One of the main issues is that TF likes to operate in batches, but LDA is mostly done on the whole corpus at the same time. If you corpus-level optimization, you can just implement the code from above in TF apis. Otherwise one need to play around to get it to work with batches.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=70511\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/girving\">@girving</a> We would still accept a PR if somebody implemented a good version of LDA for TF.Learn and contributed it, wouldn't we?</p>", "body_text": "@gusdoe if you are talking about this keras model - it's not LDA, but LSTM model for sentiment analysis [which we have examples in TF/TF.Learn].\n@mahatosourav91 Probably the answer is late, I haven't seen implementation for TF.\nHere is implementation in Python that one can convert into TF: https://github.com/hannawallach/python-lda/blob/master/src/lda.py\nOne of the main issues is that TF likes to operate in batches, but LDA is mostly done on the whole corpus at the same time. If you corpus-level optimization, you can just implement the code from above in TF apis. Otherwise one need to play around to get it to work with batches.\n@girving We would still accept a PR if somebody implemented a good version of LDA for TF.Learn and contributed it, wouldn't we?", "body": "@gusdoe if you are talking about [this keras model](https://github.com/explosion/spaCy/blob/a5538d93d0cf00cdaa4ca0f61dd08cc817af8e0e/examples/deep_learning_keras.py) - it's not LDA, but LSTM model for sentiment analysis [which we have examples in TF/TF.Learn].\r\n\r\n@mahatosourav91 Probably the answer is late, I haven't seen implementation for TF.\r\nHere is implementation in Python that one can convert into TF: https://github.com/hannawallach/python-lda/blob/master/src/lda.py\r\n\r\nOne of the main issues is that TF likes to operate in batches, but LDA is mostly done on the whole corpus at the same time. If you corpus-level optimization, you can just implement the code from above in TF apis. Otherwise one need to play around to get it to work with batches.\r\n\r\n@girving We would still accept a PR if somebody implemented a good version of LDA for TF.Learn and contributed it, wouldn't we?"}