{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8133", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8133/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8133/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8133/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8133", "id": 212186350, "node_id": "MDU6SXNzdWUyMTIxODYzNTA=", "number": 8133, "title": "About using tf.contrib.layers.optimize_loss with optimizer=\"Momentum\" as arg ", "user": {"login": "LoicMasure", "id": 22834232, "node_id": "MDQ6VXNlcjIyODM0MjMy", "avatar_url": "https://avatars2.githubusercontent.com/u/22834232?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LoicMasure", "html_url": "https://github.com/LoicMasure", "followers_url": "https://api.github.com/users/LoicMasure/followers", "following_url": "https://api.github.com/users/LoicMasure/following{/other_user}", "gists_url": "https://api.github.com/users/LoicMasure/gists{/gist_id}", "starred_url": "https://api.github.com/users/LoicMasure/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LoicMasure/subscriptions", "organizations_url": "https://api.github.com/users/LoicMasure/orgs", "repos_url": "https://api.github.com/users/LoicMasure/repos", "events_url": "https://api.github.com/users/LoicMasure/events{/privacy}", "received_events_url": "https://api.github.com/users/LoicMasure/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-03-06T17:03:39Z", "updated_at": "2017-06-14T06:16:59Z", "closed_at": "2017-06-14T06:16:59Z", "author_association": "NONE", "body_html": "<p>I'm trying to implement a train op using tf.contrib.layers.optimize_loss. I would like to use the optimizer train.MomentumOptimizer . One way to do it is to pass the arg \"Momentum\" to the parameter optimizer like this:</p>\n<div class=\"highlight highlight-source-python\"><pre>    train_op <span class=\"pl-k\">=</span> tf.contrib.layers.optimize_loss(\n        <span class=\"pl-v\">loss</span><span class=\"pl-k\">=</span>loss,\n        <span class=\"pl-v\">global_step</span><span class=\"pl-k\">=</span>tf.contrib.framework.get_global_step(),\n        <span class=\"pl-v\">learning_rate</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0.001</span>,\n        <span class=\"pl-v\">optimizer</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Momentum<span class=\"pl-pds\">\"</span></span>)</pre></div>\n<p>It turns out I get an error:</p>\n<pre><code>__init__() missing 1 required positional argument: 'momentum'\n</code></pre>\n<p>I think the reason is that when the function optimize_loss wants to instanciate a new optimizer by looking into <code>OPTIMIZER_CLS_NAMES</code> it calls  tensorflow\\contrib\\layers\\python\\layers\\optimizers.py\", line 195, in optimize_loss :</p>\n<div class=\"highlight highlight-source-python\"><pre>opt <span class=\"pl-k\">=</span> <span class=\"pl-c1\">OPTIMIZER_CLS_NAMES</span>[optimizer](learning_rate=lr)</pre></div>\n<p>However, among the whole list of optimizers in <code>OPTIMIZER_CLS_NAMES</code>, train.MomentumOptimizer is the only one that needs a second mandatory parameter in its <code>__init__</code> method:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">class</span> <span class=\"pl-en\">MomentumOptimizer</span>(<span class=\"pl-e\">optimizer</span>.<span class=\"pl-e\">Optimizer</span>):\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span>Optimizer that implements the Momentum algorithm.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">  @@__init__</span>\n<span class=\"pl-s\">  <span class=\"pl-pds\">\"\"\"</span></span>\n\n  <span class=\"pl-k\">def</span> <span class=\"pl-c1\">__init__</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">learning_rate</span>, <span class=\"pl-smi\">momentum</span>,\n               <span class=\"pl-smi\">use_locking</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>, <span class=\"pl-smi\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Momentum<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-smi\">use_nesterov</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>):</pre></div>\n<p>... whereas the other ones don't. Am I missing something?<br>\nThank you in advance</p>", "body_text": "I'm trying to implement a train op using tf.contrib.layers.optimize_loss. I would like to use the optimizer train.MomentumOptimizer . One way to do it is to pass the arg \"Momentum\" to the parameter optimizer like this:\n    train_op = tf.contrib.layers.optimize_loss(\n        loss=loss,\n        global_step=tf.contrib.framework.get_global_step(),\n        learning_rate=0.001,\n        optimizer=\"Momentum\")\nIt turns out I get an error:\n__init__() missing 1 required positional argument: 'momentum'\n\nI think the reason is that when the function optimize_loss wants to instanciate a new optimizer by looking into OPTIMIZER_CLS_NAMES it calls  tensorflow\\contrib\\layers\\python\\layers\\optimizers.py\", line 195, in optimize_loss :\nopt = OPTIMIZER_CLS_NAMES[optimizer](learning_rate=lr)\nHowever, among the whole list of optimizers in OPTIMIZER_CLS_NAMES, train.MomentumOptimizer is the only one that needs a second mandatory parameter in its __init__ method:\nclass MomentumOptimizer(optimizer.Optimizer):\n  \"\"\"Optimizer that implements the Momentum algorithm.\n\n  @@__init__\n  \"\"\"\n\n  def __init__(self, learning_rate, momentum,\n               use_locking=False, name=\"Momentum\", use_nesterov=False):\n... whereas the other ones don't. Am I missing something?\nThank you in advance", "body": "I'm trying to implement a train op using tf.contrib.layers.optimize_loss. I would like to use the optimizer train.MomentumOptimizer . One way to do it is to pass the arg \"Momentum\" to the parameter optimizer like this:\r\n\r\n```python\r\n    train_op = tf.contrib.layers.optimize_loss(\r\n        loss=loss,\r\n        global_step=tf.contrib.framework.get_global_step(),\r\n        learning_rate=0.001,\r\n        optimizer=\"Momentum\")\r\n```\r\nIt turns out I get an error:\r\n```\r\n__init__() missing 1 required positional argument: 'momentum'\r\n```\r\nI think the reason is that when the function optimize_loss wants to instanciate a new optimizer by looking into ```OPTIMIZER_CLS_NAMES``` it calls  tensorflow\\contrib\\layers\\python\\layers\\optimizers.py\", line 195, in optimize_loss : \r\n```python\r\nopt = OPTIMIZER_CLS_NAMES[optimizer](learning_rate=lr)\r\n```\r\nHowever, among the whole list of optimizers in ```OPTIMIZER_CLS_NAMES```, train.MomentumOptimizer is the only one that needs a second mandatory parameter in its ```__init__``` method:\r\n```python\r\nclass MomentumOptimizer(optimizer.Optimizer):\r\n  \"\"\"Optimizer that implements the Momentum algorithm.\r\n\r\n  @@__init__\r\n  \"\"\"\r\n\r\n  def __init__(self, learning_rate, momentum,\r\n               use_locking=False, name=\"Momentum\", use_nesterov=False):\r\n```\r\n... whereas the other ones don't. Am I missing something?\r\nThank you in advance"}