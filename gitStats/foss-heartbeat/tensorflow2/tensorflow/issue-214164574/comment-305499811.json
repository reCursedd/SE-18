{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/305499811", "html_url": "https://github.com/tensorflow/tensorflow/issues/8404#issuecomment-305499811", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8404", "id": 305499811, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTQ5OTgxMQ==", "user": {"login": "Lakedaemon", "id": 103175, "node_id": "MDQ6VXNlcjEwMzE3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/103175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lakedaemon", "html_url": "https://github.com/Lakedaemon", "followers_url": "https://api.github.com/users/Lakedaemon/followers", "following_url": "https://api.github.com/users/Lakedaemon/following{/other_user}", "gists_url": "https://api.github.com/users/Lakedaemon/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lakedaemon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lakedaemon/subscriptions", "organizations_url": "https://api.github.com/users/Lakedaemon/orgs", "repos_url": "https://api.github.com/users/Lakedaemon/repos", "events_url": "https://api.github.com/users/Lakedaemon/events{/privacy}", "received_events_url": "https://api.github.com/users/Lakedaemon/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-01T13:53:01Z", "updated_at": "2017-06-01T13:53:01Z", "author_association": "NONE", "body_html": "<ol start=\"3\">\n<li>bazel build -c opt --copt=\"-DSELECTIVE_REGISTRATION\" //tensorflow/contrib/android:libtensorflow_inference.so    --crosstool_top=//external:android/crosstool    --host_crosstool_top=@bazel_tools//tools/cpp:toolchain    --cpu=armeabi-v7a</li>\n</ol>\n<p>-&gt; I get a 3.7 MB libtensorflow_inference.</p>\n<p>no android error at compile time/when loading the .so code in Java but the infamous<br>\njava.lang.IllegalArgumentException: No OpKernel was registered to support Op 'Switch' with these attrs.  Registered devices: [CPU], Registered kernels:<br>\ndevice='CPU'; T in [DT_FLOAT]<br>\ndevice='CPU'; T in [DT_INT32]<br>\ndevice='GPU'; T in [DT_STRING]<br>\ndevice='GPU'; T in [DT_BOOL]<br>\ndevice='GPU'; T in [DT_INT32]<br>\ndevice='GPU'; T in [DT_FLOAT]</p>\n<pre><code>                                                                       \t [[Node: dropout_1/cond/Switch = Switch[T=DT_BOOL](dropout_1/keras_learning_phase, dropout_1/keras_learning_phase)]]\n</code></pre>\n<p>so, either selective_registration doesn't work or<br>\nit doesn't load the DT_BOOL type which might be possible since register.types.h uses this condition</p>\n<p>#if !defined(IS_MOBILE_PLATFORM) || defined(SUPPORT_SELECTIVE_REGISTRATION)</p>\n<p>and I couldn't find any place where SUPPORT_SELECTIVE_REGISTRATION was defined<br>\nso, next I'm trying to define it also in the copt arguments</p>", "body_text": "bazel build -c opt --copt=\"-DSELECTIVE_REGISTRATION\" //tensorflow/contrib/android:libtensorflow_inference.so    --crosstool_top=//external:android/crosstool    --host_crosstool_top=@bazel_tools//tools/cpp:toolchain    --cpu=armeabi-v7a\n\n-> I get a 3.7 MB libtensorflow_inference.\nno android error at compile time/when loading the .so code in Java but the infamous\njava.lang.IllegalArgumentException: No OpKernel was registered to support Op 'Switch' with these attrs.  Registered devices: [CPU], Registered kernels:\ndevice='CPU'; T in [DT_FLOAT]\ndevice='CPU'; T in [DT_INT32]\ndevice='GPU'; T in [DT_STRING]\ndevice='GPU'; T in [DT_BOOL]\ndevice='GPU'; T in [DT_INT32]\ndevice='GPU'; T in [DT_FLOAT]\n                                                                       \t [[Node: dropout_1/cond/Switch = Switch[T=DT_BOOL](dropout_1/keras_learning_phase, dropout_1/keras_learning_phase)]]\n\nso, either selective_registration doesn't work or\nit doesn't load the DT_BOOL type which might be possible since register.types.h uses this condition\n#if !defined(IS_MOBILE_PLATFORM) || defined(SUPPORT_SELECTIVE_REGISTRATION)\nand I couldn't find any place where SUPPORT_SELECTIVE_REGISTRATION was defined\nso, next I'm trying to define it also in the copt arguments", "body": "3) bazel build -c opt --copt=\"-DSELECTIVE_REGISTRATION\" //tensorflow/contrib/android:libtensorflow_inference.so    --crosstool_top=//external:android/crosstool    --host_crosstool_top=@bazel_tools//tools/cpp:toolchain    --cpu=armeabi-v7a\r\n\r\n-> I get a 3.7 MB libtensorflow_inference.\r\n\r\nno android error at compile time/when loading the .so code in Java but the infamous\r\njava.lang.IllegalArgumentException: No OpKernel was registered to support Op 'Switch' with these attrs.  Registered devices: [CPU], Registered kernels:\r\n                                                                             device='CPU'; T in [DT_FLOAT]\r\n                                                                             device='CPU'; T in [DT_INT32]\r\n                                                                             device='GPU'; T in [DT_STRING]\r\n                                                                             device='GPU'; T in [DT_BOOL]\r\n                                                                             device='GPU'; T in [DT_INT32]\r\n                                                                             device='GPU'; T in [DT_FLOAT]\r\n                                                                           \r\n                                                                           \t [[Node: dropout_1/cond/Switch = Switch[T=DT_BOOL](dropout_1/keras_learning_phase, dropout_1/keras_learning_phase)]]\r\n\r\nso, either selective_registration doesn't work or \r\nit doesn't load the DT_BOOL type which might be possible since register.types.h uses this condition\r\n\r\n#if !defined(IS_MOBILE_PLATFORM) || defined(SUPPORT_SELECTIVE_REGISTRATION)\r\n\r\nand I couldn't find any place where SUPPORT_SELECTIVE_REGISTRATION was defined\r\nso, next I'm trying to define it also in the copt arguments\r\n"}