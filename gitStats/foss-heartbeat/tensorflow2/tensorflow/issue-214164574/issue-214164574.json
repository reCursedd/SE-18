{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8404", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8404/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8404/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8404/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8404", "id": 214164574, "node_id": "MDU6SXNzdWUyMTQxNjQ1NzQ=", "number": 8404, "title": "Wrong order of dependencies after running freeze_graph and/or optimize_for_inference", "user": {"login": "Androbin", "id": 16437156, "node_id": "MDQ6VXNlcjE2NDM3MTU2", "avatar_url": "https://avatars1.githubusercontent.com/u/16437156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Androbin", "html_url": "https://github.com/Androbin", "followers_url": "https://api.github.com/users/Androbin/followers", "following_url": "https://api.github.com/users/Androbin/following{/other_user}", "gists_url": "https://api.github.com/users/Androbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Androbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Androbin/subscriptions", "organizations_url": "https://api.github.com/users/Androbin/orgs", "repos_url": "https://api.github.com/users/Androbin/repos", "events_url": "https://api.github.com/users/Androbin/events{/privacy}", "received_events_url": "https://api.github.com/users/Androbin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "petewarden", "id": 161459, "node_id": "MDQ6VXNlcjE2MTQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/161459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petewarden", "html_url": "https://github.com/petewarden", "followers_url": "https://api.github.com/users/petewarden/followers", "following_url": "https://api.github.com/users/petewarden/following{/other_user}", "gists_url": "https://api.github.com/users/petewarden/gists{/gist_id}", "starred_url": "https://api.github.com/users/petewarden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petewarden/subscriptions", "organizations_url": "https://api.github.com/users/petewarden/orgs", "repos_url": "https://api.github.com/users/petewarden/repos", "events_url": "https://api.github.com/users/petewarden/events{/privacy}", "received_events_url": "https://api.github.com/users/petewarden/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "petewarden", "id": 161459, "node_id": "MDQ6VXNlcjE2MTQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/161459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petewarden", "html_url": "https://github.com/petewarden", "followers_url": "https://api.github.com/users/petewarden/followers", "following_url": "https://api.github.com/users/petewarden/following{/other_user}", "gists_url": "https://api.github.com/users/petewarden/gists{/gist_id}", "starred_url": "https://api.github.com/users/petewarden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petewarden/subscriptions", "organizations_url": "https://api.github.com/users/petewarden/orgs", "repos_url": "https://api.github.com/users/petewarden/repos", "events_url": "https://api.github.com/users/petewarden/events{/privacy}", "received_events_url": "https://api.github.com/users/petewarden/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 34, "created_at": "2017-03-14T18:25:12Z", "updated_at": "2017-10-16T16:32:51Z", "closed_at": "2017-03-18T13:38:48Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I haven't found any mention of this anywhere online.<br>\nIt makes the graph serializations completely useless for inference.</p>\n<p>Steps to reproduce:</p>\n<ul>\n<li>create graph that contains tf.contrib.layers.batch_norm with tf.bool tensor as is_training argument (to force use of Switch node</li>\n<li>run freeze_graph.freeze_graph and optimize_for_inference_lib.optimize_for_inference</li>\n<li>load resulting graph on Android via TensorFlowInferenceInterface</li>\n</ul>\n<p>What happened:<br>\nADB Logcat shows error message<br>\n<code>E/TensorFlowInferenceInterface: Failed to load model from 'file:///android_asset/optimized_model.pb': java.io.IOException: Not a valid TensorFlow Graph serialization: Node 'conv1/bn1/BatchNorm/cond/AssignMovingAvg/BatchNorm/moving_mean/sub_1/x': Control dependencies must come after regular dependencies</code></p>\n<p>Why did this happen:<br>\nI found out that the order of dependencies was inconsistent after the processing.</p>\n<p>Dependencies before processing:</p>\n<pre><code>input: \"^conv1/bn1/BatchNorm/cond/AssignMovingAvg/BatchNorm/moving_mean/BatchNorm/BatchNorm/moving_mean\"\ninput: \"^conv1/bn1/BatchNorm/cond/AssignMovingAvg/BatchNorm/moving_mean/AssignAdd\"\ninput: \"^conv1/bn1/BatchNorm/cond/switch_t\"\n</code></pre>\n<p>Dependencies after processing:</p>\n<pre><code>input: \"^conv1/bn1/BatchNorm/cond/AssignMovingAvg/BatchNorm/moving_mean/BatchNorm/BatchNorm/moving_mean\"\ninput: \"^conv1/bn1/BatchNorm/cond/AssignMovingAvg/BatchNorm/moving_mean/AssignAdd\"\ninput: \"conv1/bn1/BatchNorm/cond/Switch:1\"\n</code></pre>\n<p>What is wrong:<br>\nThe control dependencies (starting with '^') should be after the regular dependencies.</p>\n<p>Expected behaviour:<br>\nReordering of dependencies to ensure ordering consistency.</p>\n<p>Expected order of dependencies:</p>\n<pre><code>input: \"conv1/bn1/BatchNorm/cond/Switch:1\"\ninput: \"^conv1/bn1/BatchNorm/cond/AssignMovingAvg/BatchNorm/moving_mean/BatchNorm/BatchNorm/moving_mean\"\ninput: \"^conv1/bn1/BatchNorm/cond/AssignMovingAvg/BatchNorm/moving_mean/AssignAdd\"\n</code></pre>", "body_text": "I haven't found any mention of this anywhere online.\nIt makes the graph serializations completely useless for inference.\nSteps to reproduce:\n\ncreate graph that contains tf.contrib.layers.batch_norm with tf.bool tensor as is_training argument (to force use of Switch node\nrun freeze_graph.freeze_graph and optimize_for_inference_lib.optimize_for_inference\nload resulting graph on Android via TensorFlowInferenceInterface\n\nWhat happened:\nADB Logcat shows error message\nE/TensorFlowInferenceInterface: Failed to load model from 'file:///android_asset/optimized_model.pb': java.io.IOException: Not a valid TensorFlow Graph serialization: Node 'conv1/bn1/BatchNorm/cond/AssignMovingAvg/BatchNorm/moving_mean/sub_1/x': Control dependencies must come after regular dependencies\nWhy did this happen:\nI found out that the order of dependencies was inconsistent after the processing.\nDependencies before processing:\ninput: \"^conv1/bn1/BatchNorm/cond/AssignMovingAvg/BatchNorm/moving_mean/BatchNorm/BatchNorm/moving_mean\"\ninput: \"^conv1/bn1/BatchNorm/cond/AssignMovingAvg/BatchNorm/moving_mean/AssignAdd\"\ninput: \"^conv1/bn1/BatchNorm/cond/switch_t\"\n\nDependencies after processing:\ninput: \"^conv1/bn1/BatchNorm/cond/AssignMovingAvg/BatchNorm/moving_mean/BatchNorm/BatchNorm/moving_mean\"\ninput: \"^conv1/bn1/BatchNorm/cond/AssignMovingAvg/BatchNorm/moving_mean/AssignAdd\"\ninput: \"conv1/bn1/BatchNorm/cond/Switch:1\"\n\nWhat is wrong:\nThe control dependencies (starting with '^') should be after the regular dependencies.\nExpected behaviour:\nReordering of dependencies to ensure ordering consistency.\nExpected order of dependencies:\ninput: \"conv1/bn1/BatchNorm/cond/Switch:1\"\ninput: \"^conv1/bn1/BatchNorm/cond/AssignMovingAvg/BatchNorm/moving_mean/BatchNorm/BatchNorm/moving_mean\"\ninput: \"^conv1/bn1/BatchNorm/cond/AssignMovingAvg/BatchNorm/moving_mean/AssignAdd\"", "body": "I haven't found any mention of this anywhere online.\r\nIt makes the graph serializations completely useless for inference.\r\n\r\nSteps to reproduce:\r\n- create graph that contains tf.contrib.layers.batch_norm with tf.bool tensor as is_training argument (to force use of Switch node\r\n- run freeze_graph.freeze_graph and optimize_for_inference_lib.optimize_for_inference\r\n- load resulting graph on Android via TensorFlowInferenceInterface\r\n\r\nWhat happened:\r\nADB Logcat shows error message\r\n`E/TensorFlowInferenceInterface: Failed to load model from 'file:///android_asset/optimized_model.pb': java.io.IOException: Not a valid TensorFlow Graph serialization: Node 'conv1/bn1/BatchNorm/cond/AssignMovingAvg/BatchNorm/moving_mean/sub_1/x': Control dependencies must come after regular dependencies`\r\n\r\nWhy did this happen:\r\nI found out that the order of dependencies was inconsistent after the processing.\r\n\r\nDependencies before processing:\r\n```\r\ninput: \"^conv1/bn1/BatchNorm/cond/AssignMovingAvg/BatchNorm/moving_mean/BatchNorm/BatchNorm/moving_mean\"\r\ninput: \"^conv1/bn1/BatchNorm/cond/AssignMovingAvg/BatchNorm/moving_mean/AssignAdd\"\r\ninput: \"^conv1/bn1/BatchNorm/cond/switch_t\"\r\n```\r\n\r\nDependencies after processing:\r\n```\r\ninput: \"^conv1/bn1/BatchNorm/cond/AssignMovingAvg/BatchNorm/moving_mean/BatchNorm/BatchNorm/moving_mean\"\r\ninput: \"^conv1/bn1/BatchNorm/cond/AssignMovingAvg/BatchNorm/moving_mean/AssignAdd\"\r\ninput: \"conv1/bn1/BatchNorm/cond/Switch:1\"\r\n```\r\n\r\nWhat is wrong:\r\nThe control dependencies (starting with '^') should be after the regular dependencies.\r\n\r\nExpected behaviour:\r\nReordering of dependencies to ensure ordering consistency.\r\n\r\nExpected order of dependencies:\r\n```\r\ninput: \"conv1/bn1/BatchNorm/cond/Switch:1\"\r\ninput: \"^conv1/bn1/BatchNorm/cond/AssignMovingAvg/BatchNorm/moving_mean/BatchNorm/BatchNorm/moving_mean\"\r\ninput: \"^conv1/bn1/BatchNorm/cond/AssignMovingAvg/BatchNorm/moving_mean/AssignAdd\"\r\n```"}