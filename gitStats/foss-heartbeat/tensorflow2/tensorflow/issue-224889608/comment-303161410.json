{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/303161410", "html_url": "https://github.com/tensorflow/tensorflow/issues/9498#issuecomment-303161410", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9498", "id": 303161410, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzE2MTQxMA==", "user": {"login": "foxik", "id": 560016, "node_id": "MDQ6VXNlcjU2MDAxNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/560016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/foxik", "html_url": "https://github.com/foxik", "followers_url": "https://api.github.com/users/foxik/followers", "following_url": "https://api.github.com/users/foxik/following{/other_user}", "gists_url": "https://api.github.com/users/foxik/gists{/gist_id}", "starred_url": "https://api.github.com/users/foxik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/foxik/subscriptions", "organizations_url": "https://api.github.com/users/foxik/orgs", "repos_url": "https://api.github.com/users/foxik/repos", "events_url": "https://api.github.com/users/foxik/events{/privacy}", "received_events_url": "https://api.github.com/users/foxik/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-22T17:07:30Z", "updated_at": "2017-05-22T17:07:30Z", "author_association": "CONTRIBUTOR", "body_html": "<p>+1 for <code>reset_op</code> for <em>all</em> streaming metrics (i.e., all from <code>tf.metrics</code>) -- that allows both</p>\n<ul>\n<li>to create a non-streaming metrics (by running a <code>reset_op</code> followed by <code>update_op</code>)</li>\n<li>repeatedly evaluate a multi-batch test set (often needed in our work)</li>\n</ul>\n<p>Maybe a new named argument could be added, which causes the metrics to return an additional (third) result, which would be the <code>reset_op</code>? That would be backward compatible.</p>\n<p>I could also imagine another named argument which would cause the metrics to return just one value -- one-time metrics call (i.e., <code>reset_op</code> combined by an <code>update_op</code>); but I can easily implement this if the <code>reset_op</code> is available.</p>", "body_text": "+1 for reset_op for all streaming metrics (i.e., all from tf.metrics) -- that allows both\n\nto create a non-streaming metrics (by running a reset_op followed by update_op)\nrepeatedly evaluate a multi-batch test set (often needed in our work)\n\nMaybe a new named argument could be added, which causes the metrics to return an additional (third) result, which would be the reset_op? That would be backward compatible.\nI could also imagine another named argument which would cause the metrics to return just one value -- one-time metrics call (i.e., reset_op combined by an update_op); but I can easily implement this if the reset_op is available.", "body": "+1 for `reset_op` for *all* streaming metrics (i.e., all from `tf.metrics`) -- that allows both\r\n  - to create a non-streaming metrics (by running a `reset_op` followed by `update_op`)\r\n  - repeatedly evaluate a multi-batch test set (often needed in our work)\r\n\r\nMaybe a new named argument could be added, which causes the metrics to return an additional (third) result, which would be the `reset_op`? That would be backward compatible.\r\n\r\nI could also imagine another named argument which would cause the metrics to return just one value -- one-time metrics call (i.e., `reset_op` combined by an `update_op`); but I can easily implement this if the `reset_op` is available."}