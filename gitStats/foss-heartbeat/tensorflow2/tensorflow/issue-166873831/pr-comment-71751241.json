{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/71751241", "pull_request_review_id": null, "id": 71751241, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcxNzUxMjQx", "diff_hunk": "@@ -314,9 +314,16 @@ port::StatusOr<DriverVersion> Diagnostician::FindKernelDriverVersion() {\n   if (CFDictionaryGetValueIfPresent(kext_infos, kDriverKextIdentifier, (const void**)&cuda_driver_info)) {\n     // NOTE: OSX CUDA driver does not currently store the same driver version\n     // in kCFBundleVersionKey as is returned by cuDriverGetVersion\n-    const char * version = CFStringGetCStringPtr((CFStringRef)CFDictionaryGetValue(cuda_driver_info, kCFBundleVersionKey), kCFStringEncodingUTF8);\n     CFRelease(kext_infos);\n-    return StringToDriverVersion(version);\n+    const CFStringRef str = (CFStringRef)CFDictionaryGetValue(cuda_driver_info,\n+\t\t\t\t\t\t\t kCFBundleVersionKey);\n+    const char * version = CFStringGetCStringPtr(str, kCFStringEncodingUTF8);\n+\n+    // version can be NULL in which case treat it as empty string\n+    // see https://developer.apple.com/library/mac/documentation/CoreFoundation/Conceptual/CFStrings/Articles/AccessingContents.html#//apple_ref/doc/uid/20001184-100980-TPXREF112\n+    if (version != NULL)", "path": "tensorflow/stream_executor/cuda/cuda_diagnostics.cc", "position": null, "original_position": 13, "commit_id": "1d50b0e22ec57a6be552968ff1d2bf42f8de7620", "original_commit_id": "d0f255dcfcdeb15521c25b388964323c712ae963", "user": {"login": "vrv", "id": 463737, "node_id": "MDQ6VXNlcjQ2MzczNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/463737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrv", "html_url": "https://github.com/vrv", "followers_url": "https://api.github.com/users/vrv/followers", "following_url": "https://api.github.com/users/vrv/following{/other_user}", "gists_url": "https://api.github.com/users/vrv/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrv/subscriptions", "organizations_url": "https://api.github.com/users/vrv/orgs", "repos_url": "https://api.github.com/users/vrv/repos", "events_url": "https://api.github.com/users/vrv/events{/privacy}", "received_events_url": "https://api.github.com/users/vrv/received_events", "type": "User", "site_admin": false}, "body": "i think i prefer the inversion case:\n\nif (version == nullptr) {\n  return StringToDriverVersion(\"\");\n}\n\nreturn StringToDriverVersion(\"\");\n", "created_at": "2016-07-21T17:38:26Z", "updated_at": "2016-07-21T18:03:11Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/3448#discussion_r71751241", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/3448", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/71751241"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/3448#discussion_r71751241"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/3448"}}, "body_html": "<p>i think i prefer the inversion case:</p>\n<p>if (version == nullptr) {<br>\nreturn StringToDriverVersion(\"\");<br>\n}</p>\n<p>return StringToDriverVersion(\"\");</p>", "body_text": "i think i prefer the inversion case:\nif (version == nullptr) {\nreturn StringToDriverVersion(\"\");\n}\nreturn StringToDriverVersion(\"\");"}