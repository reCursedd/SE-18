{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/389758917", "html_url": "https://github.com/tensorflow/tensorflow/issues/11239#issuecomment-389758917", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11239", "id": 389758917, "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTc1ODkxNw==", "user": {"login": "concretevitamin", "id": 592670, "node_id": "MDQ6VXNlcjU5MjY3MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/592670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/concretevitamin", "html_url": "https://github.com/concretevitamin", "followers_url": "https://api.github.com/users/concretevitamin/followers", "following_url": "https://api.github.com/users/concretevitamin/following{/other_user}", "gists_url": "https://api.github.com/users/concretevitamin/gists{/gist_id}", "starred_url": "https://api.github.com/users/concretevitamin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/concretevitamin/subscriptions", "organizations_url": "https://api.github.com/users/concretevitamin/orgs", "repos_url": "https://api.github.com/users/concretevitamin/repos", "events_url": "https://api.github.com/users/concretevitamin/events{/privacy}", "received_events_url": "https://api.github.com/users/concretevitamin/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-17T06:27:49Z", "updated_at": "2018-05-17T06:27:49Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5061\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alextp\">@alextp</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a> Hey fellas!  I ran into this issue as well.  My use case is simple: use <code>Dataset.map(PerBatchWhiten)</code> to whiten each batch; however, I'd like this function to read from and update exponential moving averages of mean/std seen across entire history.  Hence the need to assign variables and read them from within the map_func.</p>\n<p>I tried to follow Alex's suggestions of creating my mean/std resource variables outside, but still ran into some issues with properly depending on the EMA ops from within the map_func.  Some error snippet thrown from within the Map():</p>\n<pre><code>ValueError: Operation name: \"ExponentialMovingAverage\"\nop: \"NoOp\"\ninput: \"^ExponentialMovingAverage/AssignMovingAvg/ReadVariableOp_1\"\ninput: \"^ExponentialMovingAverage/AssignMovingAvg_1/ReadVariableOp_1\"\ninput: \"^ExponentialMovingAverage/AssignMovingAvg_2/ReadVariableOp_1\"\ninput: \"^ExponentialMovingAverage/AssignMovingAvg_3/ReadVariableOp_1\"\n is not an element of this graph.\n</code></pre>\n<p>Is there a currently recommended way of using TF Dataset + Exponential moving averages?</p>", "body_text": "@alextp @mrry Hey fellas!  I ran into this issue as well.  My use case is simple: use Dataset.map(PerBatchWhiten) to whiten each batch; however, I'd like this function to read from and update exponential moving averages of mean/std seen across entire history.  Hence the need to assign variables and read them from within the map_func.\nI tried to follow Alex's suggestions of creating my mean/std resource variables outside, but still ran into some issues with properly depending on the EMA ops from within the map_func.  Some error snippet thrown from within the Map():\nValueError: Operation name: \"ExponentialMovingAverage\"\nop: \"NoOp\"\ninput: \"^ExponentialMovingAverage/AssignMovingAvg/ReadVariableOp_1\"\ninput: \"^ExponentialMovingAverage/AssignMovingAvg_1/ReadVariableOp_1\"\ninput: \"^ExponentialMovingAverage/AssignMovingAvg_2/ReadVariableOp_1\"\ninput: \"^ExponentialMovingAverage/AssignMovingAvg_3/ReadVariableOp_1\"\n is not an element of this graph.\n\nIs there a currently recommended way of using TF Dataset + Exponential moving averages?", "body": "@alextp @mrry Hey fellas!  I ran into this issue as well.  My use case is simple: use `Dataset.map(PerBatchWhiten)` to whiten each batch; however, I'd like this function to read from and update exponential moving averages of mean/std seen across entire history.  Hence the need to assign variables and read them from within the map_func.\r\n\r\nI tried to follow Alex's suggestions of creating my mean/std resource variables outside, but still ran into some issues with properly depending on the EMA ops from within the map_func.  Some error snippet thrown from within the Map():\r\n```\r\nValueError: Operation name: \"ExponentialMovingAverage\"\r\nop: \"NoOp\"\r\ninput: \"^ExponentialMovingAverage/AssignMovingAvg/ReadVariableOp_1\"\r\ninput: \"^ExponentialMovingAverage/AssignMovingAvg_1/ReadVariableOp_1\"\r\ninput: \"^ExponentialMovingAverage/AssignMovingAvg_2/ReadVariableOp_1\"\r\ninput: \"^ExponentialMovingAverage/AssignMovingAvg_3/ReadVariableOp_1\"\r\n is not an element of this graph.\r\n```\r\nIs there a currently recommended way of using TF Dataset + Exponential moving averages?"}