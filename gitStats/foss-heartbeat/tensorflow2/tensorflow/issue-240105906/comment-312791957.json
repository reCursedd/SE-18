{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/312791957", "html_url": "https://github.com/tensorflow/tensorflow/issues/11239#issuecomment-312791957", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11239", "id": 312791957, "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjc5MTk1Nw==", "user": {"login": "OlavHN", "id": 324645, "node_id": "MDQ6VXNlcjMyNDY0NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/324645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OlavHN", "html_url": "https://github.com/OlavHN", "followers_url": "https://api.github.com/users/OlavHN/followers", "following_url": "https://api.github.com/users/OlavHN/following{/other_user}", "gists_url": "https://api.github.com/users/OlavHN/gists{/gist_id}", "starred_url": "https://api.github.com/users/OlavHN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OlavHN/subscriptions", "organizations_url": "https://api.github.com/users/OlavHN/orgs", "repos_url": "https://api.github.com/users/OlavHN/repos", "events_url": "https://api.github.com/users/OlavHN/events{/privacy}", "received_events_url": "https://api.github.com/users/OlavHN/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-04T06:30:43Z", "updated_at": "2017-07-04T06:32:47Z", "author_association": "CONTRIBUTOR", "body_html": "<p>While moving it out of the function scope solves the issue of initializing and reading, it doesn't seem to solve the issue of mutating the variable from inside the function. e.g.:</p>\n<pre><code>import tensorflow as tf\n\nv = tf.Variable(5, dtype=tf.int64)\ndef fn(x):\n    return x + v.assign(v + 1)\n\ndataset = (tf.contrib.data.Dataset.range(10)\n    .map(fn)\n)\n\niterator = dataset.make_initializable_iterator()\nnext = iterator.get_next()\n\nwith tf.Session() as sess:\n    sess.run(tf.global_variables_initializer())\n    sess.run(iterator.initializer)\n\n    for i in range(3):\n        res = sess.run(next)\n        print(res)\n\n</code></pre>\n<p>gives the error log:</p>\n<pre><code>(tf) no00023794:distributed-cluster olanymoe$ python test.py \nTraceback (most recent call last):\n  File \"test.py\", line 9, in &lt;module&gt;\n    .map(fn)\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/contrib/data/python/ops/dataset_ops.py\", line 873, in map\n    return MapDataset(self, map_func, num_threads, output_buffer_size)\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/contrib/data/python/ops/dataset_ops.py\", line 1551, in __init__\n    self._map_func.add_to_graph(ops.get_default_graph())\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/python/framework/function.py\", line 449, in add_to_graph\n    self._create_definition_if_needed()\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/contrib/data/python/framework/function.py\", line 168, in _create_definition_if_needed\n    outputs = self._func(*inputs)\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/contrib/data/python/ops/dataset_ops.py\", line 1539, in tf_map_func\n    ret = map_func(nested_args)\n  File \"test.py\", line 5, in fn\n    with tf.control_dependencies([v.assign(v + 1)]):\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/python/ops/variables.py\", line 524, in assign\n    return state_ops.assign(self._variable, value, use_locking=use_locking)\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/python/ops/state_ops.py\", line 274, in assign\n    validate_shape=validate_shape)\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/python/ops/gen_state_ops.py\", line 45, in assign\n    use_locking=use_locking, name=name)\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 767, in apply_op\n    op_def=op_def)\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/contrib/data/python/framework/function.py\", line 80, in create_op\n    data_types, **kwargs)\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/python/framework/function.py\", line 665, in create_op\n    **kwargs)\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 2576, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1185, in __init__\n    input_types))\nTypeError: In op 'Assign', input types ([tf.int64, tf.int64]) are not compatible with expected types ([tf.int64_ref, tf.int64])\n</code></pre>\n<p>This is also tested with tensorflow CPU version compiled against master branch (<a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/afa03e2fd91a2d4a7dc960c5ec4ee448c808d026/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/afa03e2fd91a2d4a7dc960c5ec4ee448c808d026\"><tt>afa03e2</tt></a>)</p>", "body_text": "While moving it out of the function scope solves the issue of initializing and reading, it doesn't seem to solve the issue of mutating the variable from inside the function. e.g.:\nimport tensorflow as tf\n\nv = tf.Variable(5, dtype=tf.int64)\ndef fn(x):\n    return x + v.assign(v + 1)\n\ndataset = (tf.contrib.data.Dataset.range(10)\n    .map(fn)\n)\n\niterator = dataset.make_initializable_iterator()\nnext = iterator.get_next()\n\nwith tf.Session() as sess:\n    sess.run(tf.global_variables_initializer())\n    sess.run(iterator.initializer)\n\n    for i in range(3):\n        res = sess.run(next)\n        print(res)\n\n\ngives the error log:\n(tf) no00023794:distributed-cluster olanymoe$ python test.py \nTraceback (most recent call last):\n  File \"test.py\", line 9, in <module>\n    .map(fn)\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/contrib/data/python/ops/dataset_ops.py\", line 873, in map\n    return MapDataset(self, map_func, num_threads, output_buffer_size)\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/contrib/data/python/ops/dataset_ops.py\", line 1551, in __init__\n    self._map_func.add_to_graph(ops.get_default_graph())\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/python/framework/function.py\", line 449, in add_to_graph\n    self._create_definition_if_needed()\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/contrib/data/python/framework/function.py\", line 168, in _create_definition_if_needed\n    outputs = self._func(*inputs)\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/contrib/data/python/ops/dataset_ops.py\", line 1539, in tf_map_func\n    ret = map_func(nested_args)\n  File \"test.py\", line 5, in fn\n    with tf.control_dependencies([v.assign(v + 1)]):\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/python/ops/variables.py\", line 524, in assign\n    return state_ops.assign(self._variable, value, use_locking=use_locking)\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/python/ops/state_ops.py\", line 274, in assign\n    validate_shape=validate_shape)\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/python/ops/gen_state_ops.py\", line 45, in assign\n    use_locking=use_locking, name=name)\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 767, in apply_op\n    op_def=op_def)\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/contrib/data/python/framework/function.py\", line 80, in create_op\n    data_types, **kwargs)\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/python/framework/function.py\", line 665, in create_op\n    **kwargs)\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 2576, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1185, in __init__\n    input_types))\nTypeError: In op 'Assign', input types ([tf.int64, tf.int64]) are not compatible with expected types ([tf.int64_ref, tf.int64])\n\nThis is also tested with tensorflow CPU version compiled against master branch (afa03e2)", "body": "While moving it out of the function scope solves the issue of initializing and reading, it doesn't seem to solve the issue of mutating the variable from inside the function. e.g.:\r\n\r\n```\r\nimport tensorflow as tf\r\n\r\nv = tf.Variable(5, dtype=tf.int64)\r\ndef fn(x):\r\n    return x + v.assign(v + 1)\r\n\r\ndataset = (tf.contrib.data.Dataset.range(10)\r\n    .map(fn)\r\n)\r\n\r\niterator = dataset.make_initializable_iterator()\r\nnext = iterator.get_next()\r\n\r\nwith tf.Session() as sess:\r\n    sess.run(tf.global_variables_initializer())\r\n    sess.run(iterator.initializer)\r\n\r\n    for i in range(3):\r\n        res = sess.run(next)\r\n        print(res)\r\n\r\n```\r\n\r\ngives the error log:\r\n\r\n```\r\n(tf) no00023794:distributed-cluster olanymoe$ python test.py \r\nTraceback (most recent call last):\r\n  File \"test.py\", line 9, in <module>\r\n    .map(fn)\r\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/contrib/data/python/ops/dataset_ops.py\", line 873, in map\r\n    return MapDataset(self, map_func, num_threads, output_buffer_size)\r\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/contrib/data/python/ops/dataset_ops.py\", line 1551, in __init__\r\n    self._map_func.add_to_graph(ops.get_default_graph())\r\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/python/framework/function.py\", line 449, in add_to_graph\r\n    self._create_definition_if_needed()\r\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/contrib/data/python/framework/function.py\", line 168, in _create_definition_if_needed\r\n    outputs = self._func(*inputs)\r\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/contrib/data/python/ops/dataset_ops.py\", line 1539, in tf_map_func\r\n    ret = map_func(nested_args)\r\n  File \"test.py\", line 5, in fn\r\n    with tf.control_dependencies([v.assign(v + 1)]):\r\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/python/ops/variables.py\", line 524, in assign\r\n    return state_ops.assign(self._variable, value, use_locking=use_locking)\r\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/python/ops/state_ops.py\", line 274, in assign\r\n    validate_shape=validate_shape)\r\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/python/ops/gen_state_ops.py\", line 45, in assign\r\n    use_locking=use_locking, name=name)\r\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 767, in apply_op\r\n    op_def=op_def)\r\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/contrib/data/python/framework/function.py\", line 80, in create_op\r\n    data_types, **kwargs)\r\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/python/framework/function.py\", line 665, in create_op\r\n    **kwargs)\r\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 2576, in create_op\r\n    original_op=self._default_original_op, op_def=op_def)\r\n  File \"/Users/olanymoe/anaconda2/envs/tf/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1185, in __init__\r\n    input_types))\r\nTypeError: In op 'Assign', input types ([tf.int64, tf.int64]) are not compatible with expected types ([tf.int64_ref, tf.int64])\r\n```\r\n\r\nThis is also tested with tensorflow CPU version compiled against master branch (afa03e2fd91a2d4a7dc960)"}