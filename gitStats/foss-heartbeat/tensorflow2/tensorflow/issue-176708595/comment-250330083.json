{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/250330083", "html_url": "https://github.com/tensorflow/tensorflow/issues/4359#issuecomment-250330083", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4359", "id": 250330083, "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDMzMDA4Mw==", "user": {"login": "aidan-plenert-macdonald", "id": 6690599, "node_id": "MDQ6VXNlcjY2OTA1OTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6690599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aidan-plenert-macdonald", "html_url": "https://github.com/aidan-plenert-macdonald", "followers_url": "https://api.github.com/users/aidan-plenert-macdonald/followers", "following_url": "https://api.github.com/users/aidan-plenert-macdonald/following{/other_user}", "gists_url": "https://api.github.com/users/aidan-plenert-macdonald/gists{/gist_id}", "starred_url": "https://api.github.com/users/aidan-plenert-macdonald/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aidan-plenert-macdonald/subscriptions", "organizations_url": "https://api.github.com/users/aidan-plenert-macdonald/orgs", "repos_url": "https://api.github.com/users/aidan-plenert-macdonald/repos", "events_url": "https://api.github.com/users/aidan-plenert-macdonald/events{/privacy}", "received_events_url": "https://api.github.com/users/aidan-plenert-macdonald/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-28T23:22:58Z", "updated_at": "2016-09-28T23:22:58Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=606831\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DavidNorman\">@DavidNorman</a><br>\nYou were looking at the difference between DeviceContexts and Devices. I am debating between having Device represent actual hardware with several DeviceContext's that control virtual compute nodes (my device can allocate compute resources dynamically) which would each handle a vertex in my TF compute graph (I will use node to indicate hardware and vertex for TF operations). My concern is that TF doesn't appear to support binding Allocators to DeviceContexts which would be needed so I can make sure allocation for each TF vertex happens within my virtual compute node. On the other hand if I have Devices be my virtual compute nodes and bind each one to a TF vertex, then I can't dynamically size them as I believe the creation of devices in the DeviceFactories happens before the TF compute graph is assembled.</p>\n<p>Can I ask how you are assigning compute resources to nodes in the TF compute graph? Are you using Device to control hardware or is this done with contexts? Do you have similar problems with allocation? Do you know anything about TF's ability to do automatic resource allocation? I believe TF can auto-assign devices to operations.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=463737\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vrv\">@vrv</a> Is there any way to bind Allocators to specific device contexts?</p>", "body_text": "@DavidNorman\nYou were looking at the difference between DeviceContexts and Devices. I am debating between having Device represent actual hardware with several DeviceContext's that control virtual compute nodes (my device can allocate compute resources dynamically) which would each handle a vertex in my TF compute graph (I will use node to indicate hardware and vertex for TF operations). My concern is that TF doesn't appear to support binding Allocators to DeviceContexts which would be needed so I can make sure allocation for each TF vertex happens within my virtual compute node. On the other hand if I have Devices be my virtual compute nodes and bind each one to a TF vertex, then I can't dynamically size them as I believe the creation of devices in the DeviceFactories happens before the TF compute graph is assembled.\nCan I ask how you are assigning compute resources to nodes in the TF compute graph? Are you using Device to control hardware or is this done with contexts? Do you have similar problems with allocation? Do you know anything about TF's ability to do automatic resource allocation? I believe TF can auto-assign devices to operations.\n@vrv Is there any way to bind Allocators to specific device contexts?", "body": "@DavidNorman \nYou were looking at the difference between DeviceContexts and Devices. I am debating between having Device represent actual hardware with several DeviceContext's that control virtual compute nodes (my device can allocate compute resources dynamically) which would each handle a vertex in my TF compute graph (I will use node to indicate hardware and vertex for TF operations). My concern is that TF doesn't appear to support binding Allocators to DeviceContexts which would be needed so I can make sure allocation for each TF vertex happens within my virtual compute node. On the other hand if I have Devices be my virtual compute nodes and bind each one to a TF vertex, then I can't dynamically size them as I believe the creation of devices in the DeviceFactories happens before the TF compute graph is assembled.\n\nCan I ask how you are assigning compute resources to nodes in the TF compute graph? Are you using Device to control hardware or is this done with contexts? Do you have similar problems with allocation? Do you know anything about TF's ability to do automatic resource allocation? I believe TF can auto-assign devices to operations.\n\n@vrv Is there any way to bind Allocators to specific device contexts?\n"}