{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/246906670", "html_url": "https://github.com/tensorflow/tensorflow/issues/4359#issuecomment-246906670", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4359", "id": 246906670, "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjkwNjY3MA==", "user": {"login": "vrv", "id": 463737, "node_id": "MDQ6VXNlcjQ2MzczNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/463737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrv", "html_url": "https://github.com/vrv", "followers_url": "https://api.github.com/users/vrv/followers", "following_url": "https://api.github.com/users/vrv/following{/other_user}", "gists_url": "https://api.github.com/users/vrv/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrv/subscriptions", "organizations_url": "https://api.github.com/users/vrv/orgs", "repos_url": "https://api.github.com/users/vrv/repos", "events_url": "https://api.github.com/users/vrv/events{/privacy}", "received_events_url": "https://api.github.com/users/vrv/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-14T04:57:53Z", "updated_at": "2016-09-14T04:57:53Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Yes, those four pieces are the minimal requirements just to get the basics working, and then you'd have to register kernels for every op that was supported.</p>\n<p>You're right that some ops are probably trivially implementable as long as some of the basics above are implemented.  We'd have to think about how to 'auto register kernels' for all devices.  However, for things like NoOp, it shouldn't be too hard: it would just be an include and a registration like in <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/5df4c71c86b28c2a4dd746bd67f00fc0281bd24f/tensorflow/core/kernels/no_op.cc#L21\">tensorflow/tensorflow/core/kernels/no_op.cc</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 21\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/5df4c71c86b28c2a4dd746bd67f00fc0281bd24f\">5df4c71</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L21\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"21\"></td>\n          <td id=\"LC21\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-en\">REGISTER_KERNEL_BUILDER</span>(Name(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>NoOp<span class=\"pl-pds\">\"</span></span>).Device(DEVICE_GPU), NoOp); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "body_text": "Yes, those four pieces are the minimal requirements just to get the basics working, and then you'd have to register kernels for every op that was supported.\nYou're right that some ops are probably trivially implementable as long as some of the basics above are implemented.  We'd have to think about how to 'auto register kernels' for all devices.  However, for things like NoOp, it shouldn't be too hard: it would just be an include and a registration like in \n  \n    \n      tensorflow/tensorflow/core/kernels/no_op.cc\n    \n    \n         Line 21\n      in\n      5df4c71\n    \n    \n    \n    \n\n        \n          \n           REGISTER_KERNEL_BUILDER(Name(\"NoOp\").Device(DEVICE_GPU), NoOp);", "body": "Yes, those four pieces are the minimal requirements just to get the basics working, and then you'd have to register kernels for every op that was supported.\n\nYou're right that some ops are probably trivially implementable as long as some of the basics above are implemented.  We'd have to think about how to 'auto register kernels' for all devices.  However, for things like NoOp, it shouldn't be too hard: it would just be an include and a registration like in https://github.com/tensorflow/tensorflow/blob/5df4c71c86b28c2a4dd746bd67f00fc0281bd24f/tensorflow/core/kernels/no_op.cc#L21\n"}