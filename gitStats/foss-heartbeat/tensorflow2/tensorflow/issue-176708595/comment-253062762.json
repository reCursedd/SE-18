{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/253062762", "html_url": "https://github.com/tensorflow/tensorflow/issues/4359#issuecomment-253062762", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4359", "id": 253062762, "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzA2Mjc2Mg==", "user": {"login": "aidan-plenert-macdonald", "id": 6690599, "node_id": "MDQ6VXNlcjY2OTA1OTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6690599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aidan-plenert-macdonald", "html_url": "https://github.com/aidan-plenert-macdonald", "followers_url": "https://api.github.com/users/aidan-plenert-macdonald/followers", "following_url": "https://api.github.com/users/aidan-plenert-macdonald/following{/other_user}", "gists_url": "https://api.github.com/users/aidan-plenert-macdonald/gists{/gist_id}", "starred_url": "https://api.github.com/users/aidan-plenert-macdonald/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aidan-plenert-macdonald/subscriptions", "organizations_url": "https://api.github.com/users/aidan-plenert-macdonald/orgs", "repos_url": "https://api.github.com/users/aidan-plenert-macdonald/repos", "events_url": "https://api.github.com/users/aidan-plenert-macdonald/events{/privacy}", "received_events_url": "https://api.github.com/users/aidan-plenert-macdonald/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-11T22:13:33Z", "updated_at": "2016-10-11T22:13:33Z", "author_association": "NONE", "body_html": "<p>I wrote a TensorFlow framework for a new device. I then wrote a Matix Multiplication that does nothing but print something when the constructor and Compute functions are called. The code looks like,</p>\n<pre><code>#include \"tensorflow/core/framework/op.h\"\n#include \"tensorflow/core/framework/op_kernel.h\"\n#include \"tensorflow/core/common_runtime/dma_helper.h\"\n\nnamespace tensorflow {\n\n  class MatMulOp : public OpKernel {\n  public:\n    explicit MatMulOp(OpKernelConstruction* context) : OpKernel(context) {\n      KPU_DEBUG(\"Init\");\n    }\n\n    void Compute(OpKernelContext* context) override {\n      KPU_DEBUG(\"Compute\");\n    }\n  };\n\n  REGISTER_KERNEL_BUILDER(Name(\"MatMul\").Device(DEVICE_KPU), MatMulOp); \n}\n</code></pre>\n<p>Unfortunately, this code isn't being run during a simple test program taken directly from TensorFlow,</p>\n<pre><code>import tensorflow as tf\nmod = tf.load_op_library('kpu.so')\nwith tf.device('/device:KPU:0'):\n  a = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[2, 3], name='a')\n  b = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[3, 2], name='b')\n  c = tf.matmul(a, b)\n  # Creates a session with log_device_placement set to True.\n\nsess = tf.Session(config=tf.ConfigProto(log_device_placement=True))\n# Runs the op.\nprint sess.run(c)\n</code></pre>\n<p>Oddly enough, the NoOp code is being run (I remove the print statements, but it was printing things out),</p>\n<pre><code>namespace tensorflow {\n\n  class NoOp : public OpKernel {\n  public:\n    explicit NoOp(OpKernelConstruction* context) : OpKernel(context) { }\n    void Compute(OpKernelContext* context) override { }\n    bool IsExpensive() override { return false; }\n  };\n\n  REGISTER_KERNEL_BUILDER(Name(\"NoOp\").Device(DEVICE_KPU), NoOp);\n\n}\n</code></pre>", "body_text": "I wrote a TensorFlow framework for a new device. I then wrote a Matix Multiplication that does nothing but print something when the constructor and Compute functions are called. The code looks like,\n#include \"tensorflow/core/framework/op.h\"\n#include \"tensorflow/core/framework/op_kernel.h\"\n#include \"tensorflow/core/common_runtime/dma_helper.h\"\n\nnamespace tensorflow {\n\n  class MatMulOp : public OpKernel {\n  public:\n    explicit MatMulOp(OpKernelConstruction* context) : OpKernel(context) {\n      KPU_DEBUG(\"Init\");\n    }\n\n    void Compute(OpKernelContext* context) override {\n      KPU_DEBUG(\"Compute\");\n    }\n  };\n\n  REGISTER_KERNEL_BUILDER(Name(\"MatMul\").Device(DEVICE_KPU), MatMulOp); \n}\n\nUnfortunately, this code isn't being run during a simple test program taken directly from TensorFlow,\nimport tensorflow as tf\nmod = tf.load_op_library('kpu.so')\nwith tf.device('/device:KPU:0'):\n  a = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[2, 3], name='a')\n  b = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[3, 2], name='b')\n  c = tf.matmul(a, b)\n  # Creates a session with log_device_placement set to True.\n\nsess = tf.Session(config=tf.ConfigProto(log_device_placement=True))\n# Runs the op.\nprint sess.run(c)\n\nOddly enough, the NoOp code is being run (I remove the print statements, but it was printing things out),\nnamespace tensorflow {\n\n  class NoOp : public OpKernel {\n  public:\n    explicit NoOp(OpKernelConstruction* context) : OpKernel(context) { }\n    void Compute(OpKernelContext* context) override { }\n    bool IsExpensive() override { return false; }\n  };\n\n  REGISTER_KERNEL_BUILDER(Name(\"NoOp\").Device(DEVICE_KPU), NoOp);\n\n}", "body": "I wrote a TensorFlow framework for a new device. I then wrote a Matix Multiplication that does nothing but print something when the constructor and Compute functions are called. The code looks like,\n\n```\n#include \"tensorflow/core/framework/op.h\"\n#include \"tensorflow/core/framework/op_kernel.h\"\n#include \"tensorflow/core/common_runtime/dma_helper.h\"\n\nnamespace tensorflow {\n\n  class MatMulOp : public OpKernel {\n  public:\n    explicit MatMulOp(OpKernelConstruction* context) : OpKernel(context) {\n      KPU_DEBUG(\"Init\");\n    }\n\n    void Compute(OpKernelContext* context) override {\n      KPU_DEBUG(\"Compute\");\n    }\n  };\n\n  REGISTER_KERNEL_BUILDER(Name(\"MatMul\").Device(DEVICE_KPU), MatMulOp); \n}\n```\n\nUnfortunately, this code isn't being run during a simple test program taken directly from TensorFlow,\n\n```\nimport tensorflow as tf\nmod = tf.load_op_library('kpu.so')\nwith tf.device('/device:KPU:0'):\n  a = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[2, 3], name='a')\n  b = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[3, 2], name='b')\n  c = tf.matmul(a, b)\n  # Creates a session with log_device_placement set to True.\n\nsess = tf.Session(config=tf.ConfigProto(log_device_placement=True))\n# Runs the op.\nprint sess.run(c)\n```\n\nOddly enough, the NoOp code is being run (I remove the print statements, but it was printing things out),\n\n```\nnamespace tensorflow {\n\n  class NoOp : public OpKernel {\n  public:\n    explicit NoOp(OpKernelConstruction* context) : OpKernel(context) { }\n    void Compute(OpKernelContext* context) override { }\n    bool IsExpensive() override { return false; }\n  };\n\n  REGISTER_KERNEL_BUILDER(Name(\"NoOp\").Device(DEVICE_KPU), NoOp);\n\n}\n```\n"}