{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/401438724", "html_url": "https://github.com/tensorflow/tensorflow/issues/18906#issuecomment-401438724", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18906", "id": 401438724, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTQzODcyNA==", "user": {"login": "beew", "id": 2100031, "node_id": "MDQ6VXNlcjIxMDAwMzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/2100031?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beew", "html_url": "https://github.com/beew", "followers_url": "https://api.github.com/users/beew/followers", "following_url": "https://api.github.com/users/beew/following{/other_user}", "gists_url": "https://api.github.com/users/beew/gists{/gist_id}", "starred_url": "https://api.github.com/users/beew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beew/subscriptions", "organizations_url": "https://api.github.com/users/beew/orgs", "repos_url": "https://api.github.com/users/beew/repos", "events_url": "https://api.github.com/users/beew/events{/privacy}", "received_events_url": "https://api.github.com/users/beew/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-29T18:36:01Z", "updated_at": "2018-06-29T18:52:07Z", "author_association": "NONE", "body_html": "<p>I have successfully built and run tensorflow1.8 and 1.9rc1 against cuda9.2+patch1 and cudnn 7.1, with python3.5 on Ubuntu 16.04. I installed cuda9.2 stuffs in a separate test folder (use the .run files without sudo)</p>\n<p>I  source this script when building and whenever I run these versions of tf (tf1.9 compiled with openmpi. but need to change line 76 of tensorflow/tensorflow/contrib/mpi_collectives/kernels/mpi_ops.cc  from se to stream_executor or build would fail)</p>\n<p>$PYTHONUSERBASE is set to the test folder so pip3 install --user would install the test tf whl (only one of 1.8 or 1.9rc can exist of course)inside the test folder without messing up the system's version. To invoke it would need to prepend $PYTHONPATH accordingly.</p>\n<p>This way it would invoke the test version of tf and it would point to the matching version of cuda (9.2 instead of system's 9.1)</p>\n<pre><code>export PREFIX=/home/beew/opt/cuda_test/cuda92\nexport PATH=$PREFIX/cuda/bin:$PREFIX/bin:$PATH\nexport CUDA_SDK_ROOT_DIR=$PREFIX/samples/common\nexport TENSORRT_PATH=$PREFIX/TensorRT-4.0.1.6\n\nexport LD_LIBRARY_PATH=$PREFIX/cuda/lib64:$PREFIX/cuda/extras/CUPTI/lib64:$LD_LIBRRAY_PATH:$TENSORRT_PATH/lib\n\nexport PYTHONUSERBASE=$PREFIX\n\nexport PYTHONPATH=$PREFIX/lib/python3.5/site-packages:$PYTHONPATH\n\nexport MPI_HOME=/usr/lib/openmpi\n\nexport CPATH=$PREFIX/include:$CPATH\nexport LIBRARY_PATH=$PREFIX/lib:$LIBRARY_PATH\nexport LD_LIBRARY_PATH=$PREFIX/lib:$LD_LIBRARY_PATH\n\nalias nvblas92=\"LD_PRELOAD=$PREFIX/cuda/lib64/libnvblas.so\"\n</code></pre>", "body_text": "I have successfully built and run tensorflow1.8 and 1.9rc1 against cuda9.2+patch1 and cudnn 7.1, with python3.5 on Ubuntu 16.04. I installed cuda9.2 stuffs in a separate test folder (use the .run files without sudo)\nI  source this script when building and whenever I run these versions of tf (tf1.9 compiled with openmpi. but need to change line 76 of tensorflow/tensorflow/contrib/mpi_collectives/kernels/mpi_ops.cc  from se to stream_executor or build would fail)\n$PYTHONUSERBASE is set to the test folder so pip3 install --user would install the test tf whl (only one of 1.8 or 1.9rc can exist of course)inside the test folder without messing up the system's version. To invoke it would need to prepend $PYTHONPATH accordingly.\nThis way it would invoke the test version of tf and it would point to the matching version of cuda (9.2 instead of system's 9.1)\nexport PREFIX=/home/beew/opt/cuda_test/cuda92\nexport PATH=$PREFIX/cuda/bin:$PREFIX/bin:$PATH\nexport CUDA_SDK_ROOT_DIR=$PREFIX/samples/common\nexport TENSORRT_PATH=$PREFIX/TensorRT-4.0.1.6\n\nexport LD_LIBRARY_PATH=$PREFIX/cuda/lib64:$PREFIX/cuda/extras/CUPTI/lib64:$LD_LIBRRAY_PATH:$TENSORRT_PATH/lib\n\nexport PYTHONUSERBASE=$PREFIX\n\nexport PYTHONPATH=$PREFIX/lib/python3.5/site-packages:$PYTHONPATH\n\nexport MPI_HOME=/usr/lib/openmpi\n\nexport CPATH=$PREFIX/include:$CPATH\nexport LIBRARY_PATH=$PREFIX/lib:$LIBRARY_PATH\nexport LD_LIBRARY_PATH=$PREFIX/lib:$LD_LIBRARY_PATH\n\nalias nvblas92=\"LD_PRELOAD=$PREFIX/cuda/lib64/libnvblas.so\"", "body": "I have successfully built and run tensorflow1.8 and 1.9rc1 against cuda9.2+patch1 and cudnn 7.1, with python3.5 on Ubuntu 16.04. I installed cuda9.2 stuffs in a separate test folder (use the .run files without sudo) \r\n\r\nI  source this script when building and whenever I run these versions of tf (tf1.9 compiled with openmpi. but need to change line 76 of tensorflow/tensorflow/contrib/mpi_collectives/kernels/mpi_ops.cc  from se to stream_executor or build would fail) \r\n\r\n$PYTHONUSERBASE is set to the test folder so pip3 install --user would install the test tf whl (only one of 1.8 or 1.9rc can exist of course)inside the test folder without messing up the system's version. To invoke it would need to prepend $PYTHONPATH accordingly. \r\n\r\nThis way it would invoke the test version of tf and it would point to the matching version of cuda (9.2 instead of system's 9.1)\r\n```\r\nexport PREFIX=/home/beew/opt/cuda_test/cuda92\r\nexport PATH=$PREFIX/cuda/bin:$PREFIX/bin:$PATH\r\nexport CUDA_SDK_ROOT_DIR=$PREFIX/samples/common\r\nexport TENSORRT_PATH=$PREFIX/TensorRT-4.0.1.6\r\n\r\nexport LD_LIBRARY_PATH=$PREFIX/cuda/lib64:$PREFIX/cuda/extras/CUPTI/lib64:$LD_LIBRRAY_PATH:$TENSORRT_PATH/lib\r\n\r\nexport PYTHONUSERBASE=$PREFIX\r\n\r\nexport PYTHONPATH=$PREFIX/lib/python3.5/site-packages:$PYTHONPATH\r\n\r\nexport MPI_HOME=/usr/lib/openmpi\r\n\r\nexport CPATH=$PREFIX/include:$CPATH\r\nexport LIBRARY_PATH=$PREFIX/lib:$LIBRARY_PATH\r\nexport LD_LIBRARY_PATH=$PREFIX/lib:$LD_LIBRARY_PATH\r\n\r\nalias nvblas92=\"LD_PRELOAD=$PREFIX/cuda/lib64/libnvblas.so\"\r\n```"}