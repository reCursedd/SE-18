{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/394597155", "html_url": "https://github.com/tensorflow/tensorflow/issues/19324#issuecomment-394597155", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19324", "id": 394597155, "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDU5NzE1NQ==", "user": {"login": "candyzone", "id": 7778833, "node_id": "MDQ6VXNlcjc3Nzg4MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7778833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/candyzone", "html_url": "https://github.com/candyzone", "followers_url": "https://api.github.com/users/candyzone/followers", "following_url": "https://api.github.com/users/candyzone/following{/other_user}", "gists_url": "https://api.github.com/users/candyzone/gists{/gist_id}", "starred_url": "https://api.github.com/users/candyzone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/candyzone/subscriptions", "organizations_url": "https://api.github.com/users/candyzone/orgs", "repos_url": "https://api.github.com/users/candyzone/repos", "events_url": "https://api.github.com/users/candyzone/events{/privacy}", "received_events_url": "https://api.github.com/users/candyzone/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-05T06:32:57Z", "updated_at": "2018-06-05T06:32:57Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16824702\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/caisq\">@caisq</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=19293677\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ispirmustafa\">@ispirmustafa</a> thanks, I see that API's usage, but it cannot solve my problem.<br>\nFirst is memory waste, we store embedding in Variable (a Tensor), only part of Variable is valid, the others wouldn't be lookup, this part of Variable is invalid, waste.<br>\nSecond is Variable's first dimension(API's parameter hash_bucket_size) is fixed, so that it may cause hash collision and limit feature number in OnlineLearning case.<br>\nI think TensorFlow can provide a EmbeddingVariable (inherit from tf.Variable) that has an unknown first dimension and fixed other dimensions in Variable definition, it can implement using hash-base structure.</p>", "body_text": "@caisq @ispirmustafa thanks, I see that API's usage, but it cannot solve my problem.\nFirst is memory waste, we store embedding in Variable (a Tensor), only part of Variable is valid, the others wouldn't be lookup, this part of Variable is invalid, waste.\nSecond is Variable's first dimension(API's parameter hash_bucket_size) is fixed, so that it may cause hash collision and limit feature number in OnlineLearning case.\nI think TensorFlow can provide a EmbeddingVariable (inherit from tf.Variable) that has an unknown first dimension and fixed other dimensions in Variable definition, it can implement using hash-base structure.", "body": "@caisq @ispirmustafa thanks, I see that API's usage, but it cannot solve my problem.\r\nFirst is memory waste, we store embedding in Variable (a Tensor), only part of Variable is valid, the others wouldn't be lookup, this part of Variable is invalid, waste.\r\nSecond is Variable's first dimension(API's parameter hash_bucket_size) is fixed, so that it may cause hash collision and limit feature number in OnlineLearning case.\r\nI think TensorFlow can provide a EmbeddingVariable (inherit from tf.Variable) that has an unknown first dimension and fixed other dimensions in Variable definition, it can implement using hash-base structure. "}