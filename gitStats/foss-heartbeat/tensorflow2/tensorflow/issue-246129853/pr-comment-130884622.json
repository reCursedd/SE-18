{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/130884622", "pull_request_review_id": 53807495, "id": 130884622, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDg4NDYyMg==", "diff_hunk": "@@ -2163,45 +2175,93 @@ def max_pool3d(inputs,\n                data_format=DATA_FORMAT_NDHWC,\n                outputs_collections=None,\n                scope=None):\n-  \"\"\"Adds a 3D Max Pooling op.\n-\n-  It is assumed that the pooling is done per image but not in batch or channels.\n-\n-  Args:\n-    inputs: A 5-D tensor of shape `[batch_size, depth, height, width, channels]` if\n-      `data_format` is `NDHWC`, and `[batch_size, channels, depth, height, width]` if\n-      `data_format` is `NCDHW`.\n-    kernel_size: A list of length 3: [kernel_depth, kernel_height, kernel_width] of the\n-      pooling kernel over which the op is computed. Can be an int if both\n-      values are the same.\n-    stride: A list of length 3: [stride_depth, stride_height, stride_width].\n-      Can be an int if both strides are the same. Note that presently\n-      both strides must have the same value.\n-    padding: The padding method, either 'VALID' or 'SAME'.\n-    data_format: A string. `NDHWC` (default) and `NCDHW` are supported.\n-    outputs_collections: The collections to which the outputs are added.\n-    scope: Optional scope for name_scope.\n-\n-  Returns:\n-    A `Tensor` representing the results of the pooling operation.\n-\n-  Raises:\n-    ValueError: If `data_format` is neither `NDHWC` nor `NCDHW`.\n-    ValueError: If 'kernel_size' is not a 3-D list\n-  \"\"\"\n-  if data_format not in (DATA_FORMAT_NCDHW, DATA_FORMAT_NDHWC):\n-    raise ValueError('data_format has to be either NCDHW or NDHWC.')\n-  with ops.name_scope(scope, 'MaxPool3D', [inputs]) as sc:\n-    inputs = ops.convert_to_tensor(inputs)\n-    df = ('channels_first' if data_format and data_format.startswith('NC')\n-          else 'channels_last')\n-    layer = pooling_layers.MaxPooling3D(pool_size=kernel_size,\n-                                        strides=stride,\n-                                        padding=padding,\n-                                        data_format=df,\n-                                        _scope=sc)\n-    outputs = layer.apply(inputs)\n-    return utils.collect_named_outputs(outputs_collections, sc, outputs)\n+    \"\"\"Adds a 3D Max Pooling op.\n+  \n+    It is assumed that the pooling is done per image but not in batch or channels.\n+  \n+    Args:\n+      inputs: A 5-D tensor of shape `[batch_size, depth, height, width, channels]` if\n+        `data_format` is `NDHWC`, and `[batch_size, channels, depth, height, width]` if\n+        `data_format` is `NCDHW`.\n+      kernel_size: A list of length 3: [kernel_depth, kernel_height, kernel_width] of the\n+        pooling kernel over which the op is computed. Can be an int if both\n+        values are the same.\n+      stride: A list of length 3: [stride_depth, stride_height, stride_width].\n+        Can be an int if both strides are the same. Note that presently\n+        both strides must have the same value.\n+      padding: The padding method, either 'VALID' or 'SAME'.\n+      data_format: A string. `NDHWC` (default) and `NCDHW` are supported.\n+      outputs_collections: The collections to which the outputs are added.\n+      scope: Optional scope for name_scope.\n+  \n+    Returns:\n+      A `Tensor` representing the results of the pooling operation.\n+  \n+    Raises:\n+      ValueError: If `data_format` is neither `NDHWC` nor `NCDHW`.\n+      ValueError: If 'kernel_size' is not a 3-D list\n+    \"\"\"\n+    if data_format not in (DATA_FORMAT_NCDHW, DATA_FORMAT_NDHWC):\n+        raise ValueError('data_format has to be either NCDHW or NDHWC.')\n+    with ops.name_scope(scope, 'MaxPool3D', [inputs]) as sc:\n+        inputs = ops.convert_to_tensor(inputs)\n+        df = ('channels_first' if data_format and data_format.startswith('NC')\n+              else 'channels_last')\n+        layer = pooling_layers.MaxPooling3D(pool_size=kernel_size,\n+                                            strides=stride,\n+                                            padding=padding,\n+                                            data_format=df,\n+                                            _scope=sc)\n+        outputs = layer.apply(inputs)\n+        return utils.collect_named_outputs(outputs_collections, sc, outputs)\n+\n+\n+@add_arg_scope\n+def maxout(inputs,", "path": "tensorflow/contrib/layers/python/layers/layers.py", "position": null, "original_position": 3948, "commit_id": "487ad4b071dfb996879519716e34ce82391e447d", "original_commit_id": "df6550691e2289f599ca9272a3cb9410f612ef66", "user": {"login": "tiagofrepereira2012", "id": 1748842, "node_id": "MDQ6VXNlcjE3NDg4NDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1748842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiagofrepereira2012", "html_url": "https://github.com/tiagofrepereira2012", "followers_url": "https://api.github.com/users/tiagofrepereira2012/followers", "following_url": "https://api.github.com/users/tiagofrepereira2012/following{/other_user}", "gists_url": "https://api.github.com/users/tiagofrepereira2012/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiagofrepereira2012/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiagofrepereira2012/subscriptions", "organizations_url": "https://api.github.com/users/tiagofrepereira2012/orgs", "repos_url": "https://api.github.com/users/tiagofrepereira2012/repos", "events_url": "https://api.github.com/users/tiagofrepereira2012/events{/privacy}", "received_events_url": "https://api.github.com/users/tiagofrepereira2012/received_events", "type": "User", "site_admin": false}, "body": "Sure, shall I create a specific file for that ?", "created_at": "2017-08-02T14:01:45Z", "updated_at": "2017-08-30T20:08:20Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/11824#discussion_r130884622", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11824", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/130884622"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/11824#discussion_r130884622"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11824"}}, "body_html": "<p>Sure, shall I create a specific file for that ?</p>", "body_text": "Sure, shall I create a specific file for that ?", "in_reply_to_id": 130709943}