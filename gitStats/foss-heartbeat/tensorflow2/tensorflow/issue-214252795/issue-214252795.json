{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8415", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8415/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8415/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8415/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8415", "id": 214252795, "node_id": "MDU6SXNzdWUyMTQyNTI3OTU=", "number": 8415, "title": "Cannot decode csv using int32, int64 or float32 in windows when csv is encoded in utf-8 BOM", "user": {"login": "calhamdower", "id": 24451356, "node_id": "MDQ6VXNlcjI0NDUxMzU2", "avatar_url": "https://avatars0.githubusercontent.com/u/24451356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calhamdower", "html_url": "https://github.com/calhamdower", "followers_url": "https://api.github.com/users/calhamdower/followers", "following_url": "https://api.github.com/users/calhamdower/following{/other_user}", "gists_url": "https://api.github.com/users/calhamdower/gists{/gist_id}", "starred_url": "https://api.github.com/users/calhamdower/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calhamdower/subscriptions", "organizations_url": "https://api.github.com/users/calhamdower/orgs", "repos_url": "https://api.github.com/users/calhamdower/repos", "events_url": "https://api.github.com/users/calhamdower/events{/privacy}", "received_events_url": "https://api.github.com/users/calhamdower/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-15T01:07:16Z", "updated_at": "2017-04-06T18:13:42Z", "closed_at": "2017-04-06T18:13:42Z", "author_association": "NONE", "body_html": "<h3>What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?</h3>\n<p><a href=\"http://stackoverflow.com/questions/38879779/tensorflow-python-framework-errors-invalidargumenterror-field-0-in-record-0-is\" rel=\"nofollow\">http://stackoverflow.com/questions/38879779/tensorflow-python-framework-errors-invalidargumenterror-field-0-in-record-0-is</a><br>\n<a href=\"http://stackoverflow.com/questions/33808368/how-do-i-change-the-dtype-in-tensorflow-for-a-csv-file\" rel=\"nofollow\">http://stackoverflow.com/questions/33808368/how-do-i-change-the-dtype-in-tensorflow-for-a-csv-file</a></p>\n<h3>Environment info</h3>\n<p>Operating System: windows10</p>\n<p>Installed version of CUDA and cuDNN:<br>\n(please attach the output of <code>ls -l /path/to/cuda/lib/libcud*</code>):</p>\n<p>If installed from binary pip package, provide:</p>\n<ol>\n<li>A link to the pip package you installed:</li>\n<li>The output from <code>python -c \"import tensorflow; print(tensorflow.__version__)\"</code>.<br>\n1.0.1</li>\n</ol>\n<h3>If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)</h3>\n<p>import os<br>\nimport sys</p>\n<p>import tensorflow as tf</p>\n<p>filename_list = tf.train.match_filenames_once(\"D:/Source/Repos/alerte-source/Alertedh/Python/Alerte.Test.PythonTestingApplication/Alerte.Test.PythonTestingApplication/mnist_data/*.csv\", name='filename_list')</p>\n<p>filename_queue = tf.train.string_input_producer(filename_list,num_epochs=1,name='filename_queue')</p>\n<p>reader = tf.TextLineReader()<br>\nkey, value = reader.read(filename_queue)</p>\n<p>record_defaults = [tf.constant([], dtype=tf.int32) for row in range(785)]</p>\n<p>data = tf.decode_csv(value, record_defaults=record_defaults)</p>\n<p>print(data[0].dtype)</p>\n<p>features = tf.stack(data[:-1])</p>\n<p>label = tf.stack(data[-1])</p>\n<p>min_after_dequeue = 10000<br>\nbatch_size = 2<br>\ncapacity = min_after_dequeue + 3 * batch_size</p>\n<p>examples, labels = tf.train.shuffle_batch([features, label],batch_size=batch_size, capacity=capacity,<br>\nmin_after_dequeue=min_after_dequeue)</p>\n<p>with tf.Session() as sess:<br>\ntf.initialize_all_variables().run()<br>\ntf.local_variables_initializer().run()<br>\ntf.global_variables_initializer().run()</p>\n<h1>start populating filename queue</h1>\n<p>coord = tf.train.Coordinator()<br>\nthreads = tf.train.start_queue_runners(coord=coord)</p>\n<p>try:<br>\nwhile not coord.should_stop():<br>\nexample_batch, label_batch = sess.run([examples, labels])<br>\nprint(example_batch)<br>\nexcept tf.errors.OutOfRangeError:<br>\nprint('Done training, epoch reached')<br>\nfinally:<br>\ncoord.request_stop()</p>\n<p>coord.join(threads)</p>\n<p>example csv:<br>\n2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17</p>\n<h3>What other attempted solutions have you tried?</h3>\n<p>Works when the dtype is string as it doesnt have to try to parse the values...</p>\n<h3>Logs or other output that would be helpful</h3>\n<p>none</p>\n<p>Error: tensorflow.python.framework.errors.InvalidArgumentError: Field 0 in record 0 is not a valid int32: 2</p>\n<p>(this is likely a windows only error)<br>\nBecause of the encoding prefix / (\\xef\\xbb\\xbf) the string decoders cannot read the first element of the file... resiliency to this can help cross platform errors. the error doesnt pick up the prefix either, so it was a bit of a mystery to me for a while...</p>\n<p>If this is not to be supported then feel free to close</p>\n<p>regardless, Ill put this here for other people having similar issues. you can check by setting your dtype to string and checking the first element for the prefix... go to notepad++ or similar and convert your file to UTF-8 rathter than UTF-8 BOM which is default.</p>", "body_text": "What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\nhttp://stackoverflow.com/questions/38879779/tensorflow-python-framework-errors-invalidargumenterror-field-0-in-record-0-is\nhttp://stackoverflow.com/questions/33808368/how-do-i-change-the-dtype-in-tensorflow-for-a-csv-file\nEnvironment info\nOperating System: windows10\nInstalled version of CUDA and cuDNN:\n(please attach the output of ls -l /path/to/cuda/lib/libcud*):\nIf installed from binary pip package, provide:\n\nA link to the pip package you installed:\nThe output from python -c \"import tensorflow; print(tensorflow.__version__)\".\n1.0.1\n\nIf possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\nimport os\nimport sys\nimport tensorflow as tf\nfilename_list = tf.train.match_filenames_once(\"D:/Source/Repos/alerte-source/Alertedh/Python/Alerte.Test.PythonTestingApplication/Alerte.Test.PythonTestingApplication/mnist_data/*.csv\", name='filename_list')\nfilename_queue = tf.train.string_input_producer(filename_list,num_epochs=1,name='filename_queue')\nreader = tf.TextLineReader()\nkey, value = reader.read(filename_queue)\nrecord_defaults = [tf.constant([], dtype=tf.int32) for row in range(785)]\ndata = tf.decode_csv(value, record_defaults=record_defaults)\nprint(data[0].dtype)\nfeatures = tf.stack(data[:-1])\nlabel = tf.stack(data[-1])\nmin_after_dequeue = 10000\nbatch_size = 2\ncapacity = min_after_dequeue + 3 * batch_size\nexamples, labels = tf.train.shuffle_batch([features, label],batch_size=batch_size, capacity=capacity,\nmin_after_dequeue=min_after_dequeue)\nwith tf.Session() as sess:\ntf.initialize_all_variables().run()\ntf.local_variables_initializer().run()\ntf.global_variables_initializer().run()\nstart populating filename queue\ncoord = tf.train.Coordinator()\nthreads = tf.train.start_queue_runners(coord=coord)\ntry:\nwhile not coord.should_stop():\nexample_batch, label_batch = sess.run([examples, labels])\nprint(example_batch)\nexcept tf.errors.OutOfRangeError:\nprint('Done training, epoch reached')\nfinally:\ncoord.request_stop()\ncoord.join(threads)\nexample csv:\n2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17\nWhat other attempted solutions have you tried?\nWorks when the dtype is string as it doesnt have to try to parse the values...\nLogs or other output that would be helpful\nnone\nError: tensorflow.python.framework.errors.InvalidArgumentError: Field 0 in record 0 is not a valid int32: 2\n(this is likely a windows only error)\nBecause of the encoding prefix / (\\xef\\xbb\\xbf) the string decoders cannot read the first element of the file... resiliency to this can help cross platform errors. the error doesnt pick up the prefix either, so it was a bit of a mystery to me for a while...\nIf this is not to be supported then feel free to close\nregardless, Ill put this here for other people having similar issues. you can check by setting your dtype to string and checking the first element for the prefix... go to notepad++ or similar and convert your file to UTF-8 rathter than UTF-8 BOM which is default.", "body": "### What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\r\nhttp://stackoverflow.com/questions/38879779/tensorflow-python-framework-errors-invalidargumenterror-field-0-in-record-0-is\r\nhttp://stackoverflow.com/questions/33808368/how-do-i-change-the-dtype-in-tensorflow-for-a-csv-file\r\n\r\n\r\n### Environment info\r\nOperating System: windows10\r\n\r\nInstalled version of CUDA and cuDNN: \r\n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`):\r\n\r\nIf installed from binary pip package, provide:\r\n\r\n1. A link to the pip package you installed:\r\n2. The output from `python -c \"import tensorflow; print(tensorflow.__version__)\"`.\r\n1.0.1\r\n\r\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\r\nimport os\r\nimport sys\r\n\r\nimport tensorflow as tf\r\n\r\nfilename_list = tf.train.match_filenames_once(\"D:/Source/Repos/alerte-source/Alertedh/Python/Alerte.Test.PythonTestingApplication/Alerte.Test.PythonTestingApplication/mnist_data/*.csv\", name='filename_list')\r\n\r\nfilename_queue = tf.train.string_input_producer(filename_list,num_epochs=1,name='filename_queue')\r\n\r\nreader = tf.TextLineReader()\r\nkey, value = reader.read(filename_queue)\r\n\r\nrecord_defaults = [tf.constant([], dtype=tf.int32) for row in range(785)]\r\n\r\ndata = tf.decode_csv(value, record_defaults=record_defaults)\r\n\r\nprint(data[0].dtype)\r\n\r\nfeatures = tf.stack(data[:-1])\r\n\r\nlabel = tf.stack(data[-1])\r\n\r\nmin_after_dequeue = 10000\r\nbatch_size = 2\r\ncapacity = min_after_dequeue + 3 * batch_size\r\n\r\nexamples, labels = tf.train.shuffle_batch([features, label],batch_size=batch_size, capacity=capacity,\r\n      min_after_dequeue=min_after_dequeue)\r\n\r\n\r\nwith tf.Session() as sess:\r\n  tf.initialize_all_variables().run()\r\n  tf.local_variables_initializer().run()\r\n  tf.global_variables_initializer().run()\r\n\r\n  # start populating filename queue\r\n  coord = tf.train.Coordinator()\r\n  threads = tf.train.start_queue_runners(coord=coord)\r\n\r\n  try:\r\n    while not coord.should_stop():\r\n      example_batch, label_batch = sess.run([examples, labels])\r\n      print(example_batch)\r\n  except tf.errors.OutOfRangeError:\r\n    print('Done training, epoch reached')\r\n  finally:\r\n    coord.request_stop()\r\n\r\n  coord.join(threads) \r\n\r\n\r\nexample csv:\r\n2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17\r\n\r\n### What other attempted solutions have you tried?\r\nWorks when the dtype is string as it doesnt have to try to parse the values...\r\n\r\n### Logs or other output that would be helpful\r\nnone\r\n\r\n\r\nError: tensorflow.python.framework.errors.InvalidArgumentError: Field 0 in record 0 is not a valid int32: 2 \r\n\r\n(this is likely a windows only error)\r\nBecause of the encoding prefix / (\\xef\\xbb\\xbf) the string decoders cannot read the first element of the file... resiliency to this can help cross platform errors. the error doesnt pick up the prefix either, so it was a bit of a mystery to me for a while... \r\n\r\nIf this is not to be supported then feel free to close\r\n\r\nregardless, Ill put this here for other people having similar issues. you can check by setting your dtype to string and checking the first element for the prefix... go to notepad++ or similar and convert your file to UTF-8 rathter than UTF-8 BOM which is default.\r\n\r\n"}