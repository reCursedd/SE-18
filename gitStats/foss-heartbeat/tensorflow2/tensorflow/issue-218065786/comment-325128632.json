{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/325128632", "html_url": "https://github.com/tensorflow/tensorflow/issues/8828#issuecomment-325128632", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8828", "id": 325128632, "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTEyODYzMg==", "user": {"login": "tfboyd", "id": 23486130, "node_id": "MDQ6VXNlcjIzNDg2MTMw", "avatar_url": "https://avatars1.githubusercontent.com/u/23486130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tfboyd", "html_url": "https://github.com/tfboyd", "followers_url": "https://api.github.com/users/tfboyd/followers", "following_url": "https://api.github.com/users/tfboyd/following{/other_user}", "gists_url": "https://api.github.com/users/tfboyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tfboyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tfboyd/subscriptions", "organizations_url": "https://api.github.com/users/tfboyd/orgs", "repos_url": "https://api.github.com/users/tfboyd/repos", "events_url": "https://api.github.com/users/tfboyd/events{/privacy}", "received_events_url": "https://api.github.com/users/tfboyd/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-26T13:41:07Z", "updated_at": "2017-08-26T13:41:07Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=15602821\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/collawolley\">@collawolley</a> CUDA and cuDNN are installs that are fairly simple compared to the driver.  The way I do my installed from scratch are as follows and I have a document <a href=\"https://github.com/tfboyd/tf-tools/blob/master/install/aws_ubuntu16_04.md\">here</a>.  The versions of the tools change but the steps are the same.</p>\n<p><strong>GPU Drivers</strong><br>\nI install these with apt-get nvidia-xxx because it is just easier and the drivers that come with the CUDA package are often old and that method seems to be harder.</p>\n<p><strong>CUDA</strong><br>\nCheck out my instructions above.  Download the package and you extract it to the folder and ONLY run the CUDA install not the driver install.  My document also covers putting the paths into your ldconfig which I find easier than LD_LIBRARY_PATH although there are advantages to LD_LIBRARY_PATH if you test a lot of different versions of CUDA.</p>\n<p><strong>cuDNN</strong><br>\nThis one might make you laugh.  I do this the cheapest way possible and dump the files in with the CUDA install. Below is the script I use to swap cuDNN versions.  You need to download the cuDNN files first from the NVIDIA site (you have to signup which is 'free') and then you are copying files (maybe 5-10 total) into the CUDA include and lib64 directories.</p>\n<p>You have to change the directories, but this is the general idea and I am sharing it to show that you do not need a package manager and can 100% do this on your own.  That way you \"own\" it and know exactly what is happening.</p>\n<div class=\"highlight highlight-source-shell\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span> Remove current cuDNN.  Commented out for safety uncomment or run manually after finding</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> the files</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>sudo rm /usr/local/cuda/include/cudnn.h</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>sudo rm /usr/local/cuda/lib64/libcudnn*</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Add this version of cuDNN (6.0)</span>\nsudo cp -P include/cudnn.h /usr/local/cuda-8.0_cuDNN_7/include/\nsudo cp -P lib64/libcudnn<span class=\"pl-k\">*</span> /usr/local/cuda-8.0_cuDNN_7/lib64/\nsudo chmod a+r /usr/local/cuda-8.0_cuDNN_7/lib64/libcudnn<span class=\"pl-k\">*</span>\nsudo chmod a+r /usr/local/cuda-8.0_cuDNN_7/include/cudnn.h\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> assuming you are using the ldconfig approach</span>\nsudo ldconfig\n</pre></div>\n<p>Good luck.</p>", "body_text": "@collawolley CUDA and cuDNN are installs that are fairly simple compared to the driver.  The way I do my installed from scratch are as follows and I have a document here.  The versions of the tools change but the steps are the same.\nGPU Drivers\nI install these with apt-get nvidia-xxx because it is just easier and the drivers that come with the CUDA package are often old and that method seems to be harder.\nCUDA\nCheck out my instructions above.  Download the package and you extract it to the folder and ONLY run the CUDA install not the driver install.  My document also covers putting the paths into your ldconfig which I find easier than LD_LIBRARY_PATH although there are advantages to LD_LIBRARY_PATH if you test a lot of different versions of CUDA.\ncuDNN\nThis one might make you laugh.  I do this the cheapest way possible and dump the files in with the CUDA install. Below is the script I use to swap cuDNN versions.  You need to download the cuDNN files first from the NVIDIA site (you have to signup which is 'free') and then you are copying files (maybe 5-10 total) into the CUDA include and lib64 directories.\nYou have to change the directories, but this is the general idea and I am sharing it to show that you do not need a package manager and can 100% do this on your own.  That way you \"own\" it and know exactly what is happening.\n# Remove current cuDNN.  Commented out for safety uncomment or run manually after finding\n# the files\n#sudo rm /usr/local/cuda/include/cudnn.h\n#sudo rm /usr/local/cuda/lib64/libcudnn*\n\n# Add this version of cuDNN (6.0)\nsudo cp -P include/cudnn.h /usr/local/cuda-8.0_cuDNN_7/include/\nsudo cp -P lib64/libcudnn* /usr/local/cuda-8.0_cuDNN_7/lib64/\nsudo chmod a+r /usr/local/cuda-8.0_cuDNN_7/lib64/libcudnn*\nsudo chmod a+r /usr/local/cuda-8.0_cuDNN_7/include/cudnn.h\n\n# assuming you are using the ldconfig approach\nsudo ldconfig\n\nGood luck.", "body": "@collawolley CUDA and cuDNN are installs that are fairly simple compared to the driver.  The way I do my installed from scratch are as follows and I have a document [here](https://github.com/tfboyd/tf-tools/blob/master/install/aws_ubuntu16_04.md).  The versions of the tools change but the steps are the same.\r\n\r\n**GPU Drivers**\r\nI install these with apt-get nvidia-xxx because it is just easier and the drivers that come with the CUDA package are often old and that method seems to be harder.\r\n\r\n**CUDA**\r\nCheck out my instructions above.  Download the package and you extract it to the folder and ONLY run the CUDA install not the driver install.  My document also covers putting the paths into your ldconfig which I find easier than LD_LIBRARY_PATH although there are advantages to LD_LIBRARY_PATH if you test a lot of different versions of CUDA.  \r\n\r\n**cuDNN**\r\nThis one might make you laugh.  I do this the cheapest way possible and dump the files in with the CUDA install. Below is the script I use to swap cuDNN versions.  You need to download the cuDNN files first from the NVIDIA site (you have to signup which is 'free') and then you are copying files (maybe 5-10 total) into the CUDA include and lib64 directories.  \r\n\r\nYou have to change the directories, but this is the general idea and I am sharing it to show that you do not need a package manager and can 100% do this on your own.  That way you \"own\" it and know exactly what is happening.  \r\n\r\n```bash\r\n# Remove current cuDNN.  Commented out for safety uncomment or run manually after finding\r\n# the files\r\n#sudo rm /usr/local/cuda/include/cudnn.h\r\n#sudo rm /usr/local/cuda/lib64/libcudnn*\r\n\r\n# Add this version of cuDNN (6.0)\r\nsudo cp -P include/cudnn.h /usr/local/cuda-8.0_cuDNN_7/include/\r\nsudo cp -P lib64/libcudnn* /usr/local/cuda-8.0_cuDNN_7/lib64/\r\nsudo chmod a+r /usr/local/cuda-8.0_cuDNN_7/lib64/libcudnn*\r\nsudo chmod a+r /usr/local/cuda-8.0_cuDNN_7/include/cudnn.h\r\n\r\n# assuming you are using the ldconfig approach\r\nsudo ldconfig\r\n\r\n```\r\n\r\nGood luck.\r\n\r\n"}