{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/370161982", "html_url": "https://github.com/tensorflow/tensorflow/pull/16881#issuecomment-370161982", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16881", "id": 370161982, "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDE2MTk4Mg==", "user": {"login": "jvdillon", "id": 1137078, "node_id": "MDQ6VXNlcjExMzcwNzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1137078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvdillon", "html_url": "https://github.com/jvdillon", "followers_url": "https://api.github.com/users/jvdillon/followers", "following_url": "https://api.github.com/users/jvdillon/following{/other_user}", "gists_url": "https://api.github.com/users/jvdillon/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvdillon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvdillon/subscriptions", "organizations_url": "https://api.github.com/users/jvdillon/orgs", "repos_url": "https://api.github.com/users/jvdillon/repos", "events_url": "https://api.github.com/users/jvdillon/events{/privacy}", "received_events_url": "https://api.github.com/users/jvdillon/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-03T16:48:24Z", "updated_at": "2018-03-03T16:48:24Z", "author_association": "MEMBER", "body_html": "<p>While we appreciate the sometimes inconvenience of the current design, we're reluctant to introduce a global mechanism for setting validate_args.  This means we can't accept this PR.</p>\n<p>If you have one single module or IPython notebook, we recommend you follow our style guide's recommendation.</p>\n<ul>\n<li>use a \"file constant\", VALIDATE_ARGS, set at the top.</li>\n<li>use a file constant _validate_args, and the <code>global</code> operator</li>\n</ul>\n<p>If you have multiple modules do one of:</p>\n<ul>\n<li>create a module, called config.py, and set validate_args = True/False inside it.  Import config from other programs</li>\n<li>create a config file, config.yml, and set validate_args inside it.  Read it into an object that you pass around.</li>\n</ul>", "body_text": "While we appreciate the sometimes inconvenience of the current design, we're reluctant to introduce a global mechanism for setting validate_args.  This means we can't accept this PR.\nIf you have one single module or IPython notebook, we recommend you follow our style guide's recommendation.\n\nuse a \"file constant\", VALIDATE_ARGS, set at the top.\nuse a file constant _validate_args, and the global operator\n\nIf you have multiple modules do one of:\n\ncreate a module, called config.py, and set validate_args = True/False inside it.  Import config from other programs\ncreate a config file, config.yml, and set validate_args inside it.  Read it into an object that you pass around.", "body": "While we appreciate the sometimes inconvenience of the current design, we're reluctant to introduce a global mechanism for setting validate_args.  This means we can't accept this PR.\r\n\r\nIf you have one single module or IPython notebook, we recommend you follow our style guide's recommendation.\r\n- use a \"file constant\", VALIDATE_ARGS, set at the top.\r\n- use a file constant _validate_args, and the `global` operator\r\n\r\nIf you have multiple modules do one of:\r\n- create a module, called config.py, and set validate_args = True/False inside it.  Import config from other programs\r\n- create a config file, config.yml, and set validate_args inside it.  Read it into an object that you pass around."}