{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21402", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21402/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21402/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21402/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21402", "id": 347857966, "node_id": "MDU6SXNzdWUzNDc4NTc5NjY=", "number": 21402, "title": "Features: train.saver  namescoped-restoring", "user": {"login": "Jylomaki", "id": 16537704, "node_id": "MDQ6VXNlcjE2NTM3NzA0", "avatar_url": "https://avatars2.githubusercontent.com/u/16537704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jylomaki", "html_url": "https://github.com/Jylomaki", "followers_url": "https://api.github.com/users/Jylomaki/followers", "following_url": "https://api.github.com/users/Jylomaki/following{/other_user}", "gists_url": "https://api.github.com/users/Jylomaki/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jylomaki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jylomaki/subscriptions", "organizations_url": "https://api.github.com/users/Jylomaki/orgs", "repos_url": "https://api.github.com/users/Jylomaki/repos", "events_url": "https://api.github.com/users/Jylomaki/events{/privacy}", "received_events_url": "https://api.github.com/users/Jylomaki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-08-06T10:01:13Z", "updated_at": "2018-09-28T22:17:51Z", "closed_at": "2018-09-28T22:17:51Z", "author_association": "NONE", "body_html": "<p>Hello:</p>\n<p>Scenario of need:<br>\nJoe the ML-engineer wants a model that predict multiple thing out of a single img (lets say object detection &amp; some environment values: hour of day, type of surroundings: inside/outside/forest/stadium/etc).<br>\nSo Joe train a model to get its object detected.<br>\nThen Joe train a model to get its environment data.<br>\nAnd now, Joe want a model that does both in a single prediction.<br>\nBut Joe may want to have a clean <strong>modulated model</strong> (for scalable/maintainable purposes)</p>\n<p>Scenario of usage:<br>\nJoe create its model of object detection using the same function he used for first creating it, but in a name scope.<br>\nJoe then use the <code>saver</code> to restore his checkpoint, adding the name scope as parameter to indicate that his variables are now contained in a name_scope thus their name has changed.<br>\nThen the same for the environment model.</p>\n<p>This feature need was inspired by this issue:<br>\n<a href=\"https://stackoverflow.com/questions/51654259/make-predictions-with-an-old-model-without-losing-the-current-model/51654678?noredirect=1#comment90301946_51654678\" rel=\"nofollow\">make-predictions-with-an-old-model-without-losing-the-current-model</a></p>\n<p>Have I written custom code: N/A<br>\nOS Platform and Distribution: N/A<br>\nTensorFlow installed from: N/A<br>\nTensorFlow version: N/A<br>\nBazel version: N/A<br>\nCUDA/cuDNN version: N/A<br>\nGPU model and memory: N/A<br>\nExact command to reproduce: N/A<br>\nMobile device: N/A</p>", "body_text": "Hello:\nScenario of need:\nJoe the ML-engineer wants a model that predict multiple thing out of a single img (lets say object detection & some environment values: hour of day, type of surroundings: inside/outside/forest/stadium/etc).\nSo Joe train a model to get its object detected.\nThen Joe train a model to get its environment data.\nAnd now, Joe want a model that does both in a single prediction.\nBut Joe may want to have a clean modulated model (for scalable/maintainable purposes)\nScenario of usage:\nJoe create its model of object detection using the same function he used for first creating it, but in a name scope.\nJoe then use the saver to restore his checkpoint, adding the name scope as parameter to indicate that his variables are now contained in a name_scope thus their name has changed.\nThen the same for the environment model.\nThis feature need was inspired by this issue:\nmake-predictions-with-an-old-model-without-losing-the-current-model\nHave I written custom code: N/A\nOS Platform and Distribution: N/A\nTensorFlow installed from: N/A\nTensorFlow version: N/A\nBazel version: N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce: N/A\nMobile device: N/A", "body": "Hello:\r\n\r\nScenario of need:\r\nJoe the ML-engineer wants a model that predict multiple thing out of a single img (lets say object detection & some environment values: hour of day, type of surroundings: inside/outside/forest/stadium/etc).\r\nSo Joe train a model to get its object detected.\r\nThen Joe train a model to get its environment data.\r\nAnd now, Joe want a model that does both in a single prediction.\r\nBut Joe may want to have a clean **modulated model** (for scalable/maintainable purposes)\r\n\r\nScenario of usage:\r\nJoe create its model of object detection using the same function he used for first creating it, but in a name scope.\r\nJoe then use the `saver` to restore his checkpoint, adding the name scope as parameter to indicate that his variables are now contained in a name_scope thus their name has changed.\r\nThen the same for the environment model.\r\n\r\n\r\nThis feature need was inspired by this issue: \r\n[make-predictions-with-an-old-model-without-losing-the-current-model](https://stackoverflow.com/questions/51654259/make-predictions-with-an-old-model-without-losing-the-current-model/51654678?noredirect=1#comment90301946_51654678)\r\n\r\nHave I written custom code: N/A\r\nOS Platform and Distribution: N/A\r\nTensorFlow installed from: N/A\r\nTensorFlow version: N/A\r\nBazel version: N/A\r\nCUDA/cuDNN version: N/A\r\nGPU model and memory: N/A\r\nExact command to reproduce: N/A\r\nMobile device: N/A"}