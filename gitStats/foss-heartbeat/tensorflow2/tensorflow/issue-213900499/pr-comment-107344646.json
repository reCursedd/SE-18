{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/107344646", "pull_request_review_id": 28308644, "id": 107344646, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNzM0NDY0Ng==", "diff_hunk": "@@ -0,0 +1,120 @@\n+# Copyright 2016 The TensorFlow Authors. All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ==============================================================================\n+\"\"\"Python layer for image_ops.\"\"\"\n+from __future__ import absolute_import\n+from __future__ import division\n+from __future__ import print_function\n+\n+from tensorflow.contrib.util import loader\n+from tensorflow.python.framework import common_shapes\n+from tensorflow.python.framework import dtypes\n+from tensorflow.python.framework import ops\n+from tensorflow.python.ops import array_ops\n+from tensorflow.python.ops import math_ops\n+from tensorflow.python.platform import resource_loader\n+\n+file =   resource_loader.get_path_to_datafile(\"_single_image_random_dot_stereograms.so\")\n+\n+_sirds_ops = loader.load_op_library(file)\n+\n+def single_image_random_dot_stereograms(depth_values,\n+                                        hidden_surface_removal=None,\n+                                        convergence_dots_size=None,\n+                                        dots_per_inch=None,\n+                                        eye_separation=None, mu=None,\n+                                        normalize=None, normalize_max=None,\n+                                        normalize_min=None,\n+                                        boarder_level=None,\n+                                        number_colors=None,\n+                                        generation_mode=None,\n+                                        output_image_shape=None,\n+                                        output_data_window=None):\n+  r\"\"\"Output a RandomDotStereogram Tensor of shape \"output_image_shape\" for export via encode_PNG or encode_JPG OP.\n+\n+  Based upon:\n+  'http://www.learningace.com/doc/4331582/b6ab058d1e206d68ab60e4e1ead2fe6e/sirds-paper'\n+\n+  Example use which outputs a SIRDS image as picture_out.png:\n+  img=[[1,2,3,3,2,1],\n+       [1,2,3,4,5,2],\n+       [1,2,3,4,5,3],\n+       [1,2,3,4,5,4],\n+       [6,5,4,4,5,5]]\n+\n+  session = tf.InteractiveSession()\n+\n+  sirds = single_image_random_dot_stereograms(img,convergence_dots_size=8,number_colors=256,normalize=True)\n+\n+  out = sirds.eval()\n+\n+  png = tf.image.encode_png(out).eval()\n+\n+  with open('picture_out.png', 'wb') as f:\n+      f.write(png)\n+\n+  Args:\n+    depth_values: A `Tensor`. Must be one of the following types: `float64`, `float32`, `int64`, `int32`.\n+      Z values of data to encode into \"output_data_window\" window, lower further away {0.0 floor(far), 1.0 ceiling(near) after normalization}, must be rank 2\n+    hidden_surface_removal: An optional `bool`. Defaults to `True`.\n+      Activate hidden surface removal (True)\n+    convergence_dots_size: An optional `int`. Defaults to `8`.\n+      Black dot size in pixels to help view converge image, drawn on bottom of image (8 pixels)\n+    dots_per_inch: An optional `int`. Defaults to `72`.\n+      Output device in dots/inch (72 default)\n+    eye_separation: An optional `float`. Defaults to `2.5`.\n+      Separation between eyes in inches (2.5 inchs)\n+    mu: An optional `float`. Defaults to `0.3333`.\n+      Depth of field, Fraction of viewing distance (1/3 = .3333)\n+    normalize: An optional `bool`. Defaults to `True`.\n+      Normalize input data to [0.0, 1.0] (True)\n+    normalize_max: An optional `float`. Defaults to `-100`.\n+      Fix MAX value for Normalization (0.0) - if < MIN, autoscale\n+    normalize_min: An optional `float`. Defaults to `100`.\n+      Fix MIN value for Normalization (0.0) - if > MAX, autoscale\n+    boarder_level: An optional `float`. Defaults to `0`.\n+      Value of board in depth 0.0 {far} to 1.0 {near} (0.0)\n+    number_colors: An optional `int`. Defaults to `256`.\n+      2 (Black & White),256 (grayscale), and Numbers > 256 (Full Color) are all that are supported currently\n+    generation_mode: An optional `string`. Defaults to `\"SIRDS\"`.\n+      Mode for Stereogram\n+      SIRDS - 2 color stereogram (Default)\n+    output_image_shape: An optional `tf.TensorShape` or list of `ints`. Defaults to `[1024, 768, 1]`.\n+      Output size of returned image in X,Y, Channels 1-grayscale, 3 color (1024, 768, 1), channels will be updated to 3 if number_colors > 256\n+    output_data_window: An optional `tf.TensorShape` or list of `ints`. Defaults to `[1022, 757]`.\n+      Size of \"DATA\" window, must be equal to or smaller than output_image_shape, will be centered\n+      and use convergence_dots_size for best fit to avoid overlap if possible\n+    name: A name for the operation (optional).\n+\n+  Returns:\n+    A `Tensor` of type `uint8`.\n+    returns a Tensor of size output_image_shape with depth_values encoded into image\n+  \"\"\"\n+  result = _sirds_ops.single_image_random_dot_stereograms( depth_values=depth_values,\n+                                hidden_surface_removal=hidden_surface_removal,", "path": "tensorflow/contrib/image/python/ops/single_image_random_dot_stereograms.py", "position": null, "original_position": 105, "commit_id": "53027ff7b3f92941d435fb32d87b23fbbf5f8d17", "original_commit_id": "9e80e7f2c55637976a5db9afae0c35423f509ddb", "user": {"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}, "body": "4 space added indent after opening paren ", "created_at": "2017-03-22T07:14:45Z", "updated_at": "2017-04-11T02:28:22Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/8370#discussion_r107344646", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/8370", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/107344646"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/8370#discussion_r107344646"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/8370"}}, "body_html": "<p>4 space added indent after opening paren</p>", "body_text": "4 space added indent after opening paren"}