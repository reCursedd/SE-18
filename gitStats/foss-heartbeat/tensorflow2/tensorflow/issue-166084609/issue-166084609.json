{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3362", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3362/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3362/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3362/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3362", "id": 166084609, "node_id": "MDU6SXNzdWUxNjYwODQ2MDk=", "number": 3362, "title": "Using a batchsize greater than 1 when using C++ API", "user": {"login": "ppries", "id": 7548590, "node_id": "MDQ6VXNlcjc1NDg1OTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/7548590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ppries", "html_url": "https://github.com/ppries", "followers_url": "https://api.github.com/users/ppries/followers", "following_url": "https://api.github.com/users/ppries/following{/other_user}", "gists_url": "https://api.github.com/users/ppries/gists{/gist_id}", "starred_url": "https://api.github.com/users/ppries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ppries/subscriptions", "organizations_url": "https://api.github.com/users/ppries/orgs", "repos_url": "https://api.github.com/users/ppries/repos", "events_url": "https://api.github.com/users/ppries/events{/privacy}", "received_events_url": "https://api.github.com/users/ppries/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2016-07-18T12:42:30Z", "updated_at": "2017-12-01T12:09:25Z", "closed_at": "2016-07-20T07:26:18Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I have a Tensorflow model trained in Python and frozen with the freeze_graph script. I've succesfully loaded the model in C++ and made inference for a single image. However, whenever I attempt to feed the model a batch of images in C++ I get the error:</p>\n<p><code>tensorflow/core/framework/tensor.cc:433] Check failed: 1 == NumElements() (1 vs. 16)Must have a one element tensor</code></p>\n<p>If I print the frozen graph def, the input placeholder seems to have the correct shape for batch inference:</p>\n<pre><code>node {\n  name: \"inputs\"\n  op: \"Placeholder\"\n  attr {\n    key: \"dtype\"\n    value {\n      type: DT_FLOAT\n    }\n  }\n  attr {\n    key: \"shape\"\n    value {\n      shape {\n        dim {\n          size: 16\n        }\n        dim {\n          size: 50\n        }\n        dim {\n          size: 50\n        }\n        dim {\n          size: 3\n        }\n      }\n    }\n  }\n}\n</code></pre>\n<p>I'm using the <code>LoadGraph</code> function from the Tensorflow <code>label_image</code> C++ example, and I can't see anything in that function that should limit me to one image at a time.</p>\n<p>Is this a limitation of the C++ API or am I doing something wrong?</p>\n<h3>Environment info</h3>\n<p>Operating System: Ubuntu 14.04</p>\n<p>Installed version of CUDA and cuDNN: 7.5, 5.0.5</p>\n<p>(please attach the output of <code>ls -l /path/to/cuda/lib/libcud*</code>):</p>\n<pre><code>-rw-r--r-- 1 root root   322936 Aug 15  2015 /usr/local/cuda/lib64/libcudadevrt.a\nlrwxrwxrwx 1 root root       16 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so -&gt; libcudart.so.7.5\nlrwxrwxrwx 1 root root       19 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so.7.5 -&gt; libcudart.so.7.5.18\n-rwxr-xr-x 1 root root   383336 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so.7.5.18\n-rw-r--r-- 1 root root   720192 Aug 15  2015 /usr/local/cuda/lib64/libcudart_static.a\n-rwxr-xr-x 1 root root 59909104 Jul 14 11:54 /usr/local/cuda/lib64/libcudnn.so\n-rwxr-xr-x 1 root root 59909104 Jul 14 11:54 /usr/local/cuda/lib64/libcudnn.so.5\n-rwxr-xr-x 1 root root 59909104 Jul 14 11:54 /usr/local/cuda/lib64/libcudnn.so.5.0.5\n-rw-r--r-- 1 root root 58775484 Jul 14 11:54 /usr/local/cuda/lib64/libcudnn_static.a\n</code></pre>\n<p>If installed from sources, provide the commit hash: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/115f5185e56c3fc4c8ada87c56651434f6be585c/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/115f5185e56c3fc4c8ada87c56651434f6be585c\"><tt>115f518</tt></a> (r0.9)</p>\n<h3>Steps to reproduce</h3>\n<ol>\n<li>Create and train model in python.</li>\n<li>Save model and checkpoint, and use <code>freeze_graph</code> to prepare for C++.</li>\n<li>Load model in C++ and feed it an input tensor with a batch size larger than 1.</li>\n</ol>\n<h3>What have you tried?</h3>\n<ol>\n<li>Not using a variable batch size.</li>\n<li>Sanity checking the input placeholder shape of the frozen graph.</li>\n</ol>", "body_text": "I have a Tensorflow model trained in Python and frozen with the freeze_graph script. I've succesfully loaded the model in C++ and made inference for a single image. However, whenever I attempt to feed the model a batch of images in C++ I get the error:\ntensorflow/core/framework/tensor.cc:433] Check failed: 1 == NumElements() (1 vs. 16)Must have a one element tensor\nIf I print the frozen graph def, the input placeholder seems to have the correct shape for batch inference:\nnode {\n  name: \"inputs\"\n  op: \"Placeholder\"\n  attr {\n    key: \"dtype\"\n    value {\n      type: DT_FLOAT\n    }\n  }\n  attr {\n    key: \"shape\"\n    value {\n      shape {\n        dim {\n          size: 16\n        }\n        dim {\n          size: 50\n        }\n        dim {\n          size: 50\n        }\n        dim {\n          size: 3\n        }\n      }\n    }\n  }\n}\n\nI'm using the LoadGraph function from the Tensorflow label_image C++ example, and I can't see anything in that function that should limit me to one image at a time.\nIs this a limitation of the C++ API or am I doing something wrong?\nEnvironment info\nOperating System: Ubuntu 14.04\nInstalled version of CUDA and cuDNN: 7.5, 5.0.5\n(please attach the output of ls -l /path/to/cuda/lib/libcud*):\n-rw-r--r-- 1 root root   322936 Aug 15  2015 /usr/local/cuda/lib64/libcudadevrt.a\nlrwxrwxrwx 1 root root       16 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so -> libcudart.so.7.5\nlrwxrwxrwx 1 root root       19 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so.7.5 -> libcudart.so.7.5.18\n-rwxr-xr-x 1 root root   383336 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so.7.5.18\n-rw-r--r-- 1 root root   720192 Aug 15  2015 /usr/local/cuda/lib64/libcudart_static.a\n-rwxr-xr-x 1 root root 59909104 Jul 14 11:54 /usr/local/cuda/lib64/libcudnn.so\n-rwxr-xr-x 1 root root 59909104 Jul 14 11:54 /usr/local/cuda/lib64/libcudnn.so.5\n-rwxr-xr-x 1 root root 59909104 Jul 14 11:54 /usr/local/cuda/lib64/libcudnn.so.5.0.5\n-rw-r--r-- 1 root root 58775484 Jul 14 11:54 /usr/local/cuda/lib64/libcudnn_static.a\n\nIf installed from sources, provide the commit hash: 115f518 (r0.9)\nSteps to reproduce\n\nCreate and train model in python.\nSave model and checkpoint, and use freeze_graph to prepare for C++.\nLoad model in C++ and feed it an input tensor with a batch size larger than 1.\n\nWhat have you tried?\n\nNot using a variable batch size.\nSanity checking the input placeholder shape of the frozen graph.", "body": "I have a Tensorflow model trained in Python and frozen with the freeze_graph script. I've succesfully loaded the model in C++ and made inference for a single image. However, whenever I attempt to feed the model a batch of images in C++ I get the error:\n\n`tensorflow/core/framework/tensor.cc:433] Check failed: 1 == NumElements() (1 vs. 16)Must have a one element tensor`\n\nIf I print the frozen graph def, the input placeholder seems to have the correct shape for batch inference:\n\n```\nnode {\n  name: \"inputs\"\n  op: \"Placeholder\"\n  attr {\n    key: \"dtype\"\n    value {\n      type: DT_FLOAT\n    }\n  }\n  attr {\n    key: \"shape\"\n    value {\n      shape {\n        dim {\n          size: 16\n        }\n        dim {\n          size: 50\n        }\n        dim {\n          size: 50\n        }\n        dim {\n          size: 3\n        }\n      }\n    }\n  }\n}\n```\n\nI'm using the `LoadGraph` function from the Tensorflow `label_image` C++ example, and I can't see anything in that function that should limit me to one image at a time.\n\nIs this a limitation of the C++ API or am I doing something wrong?\n### Environment info\n\nOperating System: Ubuntu 14.04\n\nInstalled version of CUDA and cuDNN: 7.5, 5.0.5\n\n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`): \n\n```\n-rw-r--r-- 1 root root   322936 Aug 15  2015 /usr/local/cuda/lib64/libcudadevrt.a\nlrwxrwxrwx 1 root root       16 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so -> libcudart.so.7.5\nlrwxrwxrwx 1 root root       19 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so.7.5 -> libcudart.so.7.5.18\n-rwxr-xr-x 1 root root   383336 Aug 15  2015 /usr/local/cuda/lib64/libcudart.so.7.5.18\n-rw-r--r-- 1 root root   720192 Aug 15  2015 /usr/local/cuda/lib64/libcudart_static.a\n-rwxr-xr-x 1 root root 59909104 Jul 14 11:54 /usr/local/cuda/lib64/libcudnn.so\n-rwxr-xr-x 1 root root 59909104 Jul 14 11:54 /usr/local/cuda/lib64/libcudnn.so.5\n-rwxr-xr-x 1 root root 59909104 Jul 14 11:54 /usr/local/cuda/lib64/libcudnn.so.5.0.5\n-rw-r--r-- 1 root root 58775484 Jul 14 11:54 /usr/local/cuda/lib64/libcudnn_static.a\n```\n\nIf installed from sources, provide the commit hash: 115f5185e56c3fc4c8ada87c56651434f6be585c (r0.9)\n### Steps to reproduce\n1. Create and train model in python.\n2. Save model and checkpoint, and use `freeze_graph` to prepare for C++.\n3. Load model in C++ and feed it an input tensor with a batch size larger than 1.\n### What have you tried?\n1. Not using a variable batch size.\n2. Sanity checking the input placeholder shape of the frozen graph.\n"}