{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/269100746", "html_url": "https://github.com/tensorflow/tensorflow/issues/6401#issuecomment-269100746", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6401", "id": 269100746, "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTEwMDc0Ng==", "user": {"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-24T21:15:46Z", "updated_at": "2016-12-24T21:15:46Z", "author_association": "MEMBER", "body_html": "<p>You might try computing the infinity norm of the concatenated vector (reshaped to 1d)... i.e. take the differences of the two results per element, and then you can take the maxabs over all the elements. That's a much better measure of if the results are similar and avoids numeric precision loss. Summing arbitrary magnitude numbers in arbitrary orders will not give you an accurate sum (you'd need to order from smallest to largest to get an accurate result of a large sum like that, but that could still miss errors, hence the max abs norm being best)</p>", "body_text": "You might try computing the infinity norm of the concatenated vector (reshaped to 1d)... i.e. take the differences of the two results per element, and then you can take the maxabs over all the elements. That's a much better measure of if the results are similar and avoids numeric precision loss. Summing arbitrary magnitude numbers in arbitrary orders will not give you an accurate sum (you'd need to order from smallest to largest to get an accurate result of a large sum like that, but that could still miss errors, hence the max abs norm being best)", "body": "You might try computing the infinity norm of the concatenated vector (reshaped to 1d)... i.e. take the differences of the two results per element, and then you can take the maxabs over all the elements. That's a much better measure of if the results are similar and avoids numeric precision loss. Summing arbitrary magnitude numbers in arbitrary orders will not give you an accurate sum (you'd need to order from smallest to largest to get an accurate result of a large sum like that, but that could still miss errors, hence the max abs norm being best)\r\n"}