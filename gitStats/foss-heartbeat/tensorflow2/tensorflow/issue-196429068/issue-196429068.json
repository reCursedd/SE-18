{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6401", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6401/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6401/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6401/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/6401", "id": 196429068, "node_id": "MDU6SXNzdWUxOTY0MjkwNjg=", "number": 6401, "title": "Numpy.FFT2() vs. TF.FFT2D() gives wrong values", "user": {"login": "beniroquai", "id": 4345528, "node_id": "MDQ6VXNlcjQzNDU1Mjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/4345528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beniroquai", "html_url": "https://github.com/beniroquai", "followers_url": "https://api.github.com/users/beniroquai/followers", "following_url": "https://api.github.com/users/beniroquai/following{/other_user}", "gists_url": "https://api.github.com/users/beniroquai/gists{/gist_id}", "starred_url": "https://api.github.com/users/beniroquai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beniroquai/subscriptions", "organizations_url": "https://api.github.com/users/beniroquai/orgs", "repos_url": "https://api.github.com/users/beniroquai/repos", "events_url": "https://api.github.com/users/beniroquai/events{/privacy}", "received_events_url": "https://api.github.com/users/beniroquai/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-12-19T14:39:25Z", "updated_at": "2017-01-17T19:18:49Z", "closed_at": "2017-01-17T19:18:49Z", "author_association": "NONE", "body_html": "<h3>What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?</h3>\n<p>None.</p>\n<h3>Environment info</h3>\n<p>Operating System:<br>\nUbuntu 16.04 LTS</p>\n<p>Installed version of CUDA and cuDNN:<br>\n(please attach the output of <code>ls -l /path/to/cuda/lib/libcud*</code>):<br>\nToolkit-version 8.0</p>\n<p>If installed from binary pip package, provide:<br>\nInstalled it using pip install und Anaconda</p>\n<h3>If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)</h3>\n<pre><code># check if np.fft2d of TF.fft2d and NP have the same result\n\ntestimage = np.random.rand(256, 256)\ntestimage = testimage+0j\n\nft_testimage = np.fft.fft2(testimage)\nnp_result = np.sum(ft_testimage)\nprint(np_result)\n\ntf_ft_testimage = tf.fft2d(testimage)\ntf_result = np.sum(tf_ft_testimage.eval())\nprint(tf_result)\n\nresult_div = np.abs(tf_ft_testimage.eval())\n\nplt.imshow(np.log(result_div))\n\nprint(np_result)\n(56368.5840888+9.09494701773e-13j)\n\nprint(tf_result)\n(56368.6+0.00390625j)\n\n</code></pre>\n<h3>What other attempted solutions have you tried?</h3>\n<h3>Logs or other output that would be helpful</h3>\n<p>I was encountering this problem, when I did some numerical calculations using the FFT. I simply ported one algorithm from pure python to Tensorflow and the result were not the same. I think one of the reasons could be the wrong interpretation of the FFT2D used in Tensorflow? Do I need to normalize it somehow? Is the usage somehow different compared to Numpy?</p>\n<p>Thanks a lot!</p>", "body_text": "What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\nNone.\nEnvironment info\nOperating System:\nUbuntu 16.04 LTS\nInstalled version of CUDA and cuDNN:\n(please attach the output of ls -l /path/to/cuda/lib/libcud*):\nToolkit-version 8.0\nIf installed from binary pip package, provide:\nInstalled it using pip install und Anaconda\nIf possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\n# check if np.fft2d of TF.fft2d and NP have the same result\n\ntestimage = np.random.rand(256, 256)\ntestimage = testimage+0j\n\nft_testimage = np.fft.fft2(testimage)\nnp_result = np.sum(ft_testimage)\nprint(np_result)\n\ntf_ft_testimage = tf.fft2d(testimage)\ntf_result = np.sum(tf_ft_testimage.eval())\nprint(tf_result)\n\nresult_div = np.abs(tf_ft_testimage.eval())\n\nplt.imshow(np.log(result_div))\n\nprint(np_result)\n(56368.5840888+9.09494701773e-13j)\n\nprint(tf_result)\n(56368.6+0.00390625j)\n\n\nWhat other attempted solutions have you tried?\nLogs or other output that would be helpful\nI was encountering this problem, when I did some numerical calculations using the FFT. I simply ported one algorithm from pure python to Tensorflow and the result were not the same. I think one of the reasons could be the wrong interpretation of the FFT2D used in Tensorflow? Do I need to normalize it somehow? Is the usage somehow different compared to Numpy?\nThanks a lot!", "body": "### What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\r\n\r\nNone. \r\n\r\n### Environment info\r\nOperating System:\r\nUbuntu 16.04 LTS\r\n\r\nInstalled version of CUDA and cuDNN: \r\n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`):\r\nToolkit-version 8.0\r\n\r\nIf installed from binary pip package, provide:\r\nInstalled it using pip install und Anaconda\r\n\r\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\r\n\r\n```\r\n# check if np.fft2d of TF.fft2d and NP have the same result\r\n\r\ntestimage = np.random.rand(256, 256)\r\ntestimage = testimage+0j\r\n\r\nft_testimage = np.fft.fft2(testimage)\r\nnp_result = np.sum(ft_testimage)\r\nprint(np_result)\r\n\r\ntf_ft_testimage = tf.fft2d(testimage)\r\ntf_result = np.sum(tf_ft_testimage.eval())\r\nprint(tf_result)\r\n\r\nresult_div = np.abs(tf_ft_testimage.eval())\r\n\r\nplt.imshow(np.log(result_div))\r\n\r\nprint(np_result)\r\n(56368.5840888+9.09494701773e-13j)\r\n\r\nprint(tf_result)\r\n(56368.6+0.00390625j)\r\n\r\n```\r\n### What other attempted solutions have you tried?\r\n\r\n\r\n### Logs or other output that would be helpful\r\n\r\n\r\n\r\nI was encountering this problem, when I did some numerical calculations using the FFT. I simply ported one algorithm from pure python to Tensorflow and the result were not the same. I think one of the reasons could be the wrong interpretation of the FFT2D used in Tensorflow? Do I need to normalize it somehow? Is the usage somehow different compared to Numpy? \r\n\r\nThanks a lot! \r\n\r\n"}