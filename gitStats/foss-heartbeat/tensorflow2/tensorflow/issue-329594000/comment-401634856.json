{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/401634856", "html_url": "https://github.com/tensorflow/tensorflow/pull/19784#issuecomment-401634856", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19784", "id": 401634856, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTYzNDg1Ng==", "user": {"login": "superbobry", "id": 185856, "node_id": "MDQ6VXNlcjE4NTg1Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/185856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/superbobry", "html_url": "https://github.com/superbobry", "followers_url": "https://api.github.com/users/superbobry/followers", "following_url": "https://api.github.com/users/superbobry/following{/other_user}", "gists_url": "https://api.github.com/users/superbobry/gists{/gist_id}", "starred_url": "https://api.github.com/users/superbobry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/superbobry/subscriptions", "organizations_url": "https://api.github.com/users/superbobry/orgs", "repos_url": "https://api.github.com/users/superbobry/repos", "events_url": "https://api.github.com/users/superbobry/events{/privacy}", "received_events_url": "https://api.github.com/users/superbobry/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-01T21:34:24Z", "updated_at": "2018-07-01T21:36:37Z", "author_association": "MEMBER", "body_html": "<p>I think the <code>tensorflow/tools/api/tests:api_compatibility_test</code> failure is harmless. The classes do indeed lack the <code>__metaclass__</code> attribute, because the metaclass <a href=\"https://github.com/benjaminp/six/blob/68112f3193c7d4bef5ad86ed1b6ed528edd9093d/six.py#L835-L848\">is applied</a> via a decorator, but this is not a breaking change (unless the API users actually relied on the presence of <code>__metaclass__</code>, which is a bad idea anyway as it is not 2/3 compatible.</p>", "body_text": "I think the tensorflow/tools/api/tests:api_compatibility_test failure is harmless. The classes do indeed lack the __metaclass__ attribute, because the metaclass is applied via a decorator, but this is not a breaking change (unless the API users actually relied on the presence of __metaclass__, which is a bad idea anyway as it is not 2/3 compatible.", "body": "I think the ``tensorflow/tools/api/tests:api_compatibility_test`` failure is harmless. The classes do indeed lack the ``__metaclass__`` attribute, because the metaclass [is applied](https://github.com/benjaminp/six/blob/68112f3193c7d4bef5ad86ed1b6ed528edd9093d/six.py#L835-L848) via a decorator, but this is not a breaking change (unless the API users actually relied on the presence of ``__metaclass__``, which is a bad idea anyway as it is not 2/3 compatible. "}