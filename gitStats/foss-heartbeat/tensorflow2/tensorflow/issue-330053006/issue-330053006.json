{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19821", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19821/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19821/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19821/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19821", "id": 330053006, "node_id": "MDU6SXNzdWUzMzAwNTMwMDY=", "number": 19821, "title": "Quantized Model is 50% slower in performance. Is this expected?", "user": {"login": "mohsinjuni", "id": 1667436, "node_id": "MDQ6VXNlcjE2Njc0MzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1667436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mohsinjuni", "html_url": "https://github.com/mohsinjuni", "followers_url": "https://api.github.com/users/mohsinjuni/followers", "following_url": "https://api.github.com/users/mohsinjuni/following{/other_user}", "gists_url": "https://api.github.com/users/mohsinjuni/gists{/gist_id}", "starred_url": "https://api.github.com/users/mohsinjuni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mohsinjuni/subscriptions", "organizations_url": "https://api.github.com/users/mohsinjuni/orgs", "repos_url": "https://api.github.com/users/mohsinjuni/repos", "events_url": "https://api.github.com/users/mohsinjuni/events{/privacy}", "received_events_url": "https://api.github.com/users/mohsinjuni/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750616506, "node_id": "MDU6TGFiZWw3NTA2MTY1MDY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:lite", "name": "comp:lite", "color": "0052cc", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "raghuraman-k", "id": 34699873, "node_id": "MDQ6VXNlcjM0Njk5ODcz", "avatar_url": "https://avatars2.githubusercontent.com/u/34699873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raghuraman-k", "html_url": "https://github.com/raghuraman-k", "followers_url": "https://api.github.com/users/raghuraman-k/followers", "following_url": "https://api.github.com/users/raghuraman-k/following{/other_user}", "gists_url": "https://api.github.com/users/raghuraman-k/gists{/gist_id}", "starred_url": "https://api.github.com/users/raghuraman-k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raghuraman-k/subscriptions", "organizations_url": "https://api.github.com/users/raghuraman-k/orgs", "repos_url": "https://api.github.com/users/raghuraman-k/repos", "events_url": "https://api.github.com/users/raghuraman-k/events{/privacy}", "received_events_url": "https://api.github.com/users/raghuraman-k/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "raghuraman-k", "id": 34699873, "node_id": "MDQ6VXNlcjM0Njk5ODcz", "avatar_url": "https://avatars2.githubusercontent.com/u/34699873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raghuraman-k", "html_url": "https://github.com/raghuraman-k", "followers_url": "https://api.github.com/users/raghuraman-k/followers", "following_url": "https://api.github.com/users/raghuraman-k/following{/other_user}", "gists_url": "https://api.github.com/users/raghuraman-k/gists{/gist_id}", "starred_url": "https://api.github.com/users/raghuraman-k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raghuraman-k/subscriptions", "organizations_url": "https://api.github.com/users/raghuraman-k/orgs", "repos_url": "https://api.github.com/users/raghuraman-k/repos", "events_url": "https://api.github.com/users/raghuraman-k/events{/privacy}", "received_events_url": "https://api.github.com/users/raghuraman-k/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-06-06T22:19:18Z", "updated_at": "2018-08-20T01:47:24Z", "closed_at": "2018-08-20T01:47:24Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: N/A</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04.4 LTS (Xenial Xerus)</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.7.1</li>\n<li><strong>Python version</strong>: 3.6.5 :: Anaconda Inc</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.13.1</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: 5.4.0</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: GeForce GTX 1080 Ti/PCIe/SSE2</li>\n<li><strong>Exact command to reproduce</strong>: python tensorflow/examples/label_image/label_image.py</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Quantized Inception-3 model using transform_graph.py script. Tested on 1000 Imagenet images. Un-quantized model takes 800 seconds whereas quantized model takes 1600 seconds. Is this the expected behavior?</p>\n<p>PS. Let me know please if I should move this to SO?</p>\n<h3>Source code / logs</h3>\n<p>Model files:</p>\n<blockquote>\n<p>model_file = <br>\n\"tensorflow/examples/label_image/data/inception_v3_2016_08_28_frozen.pb\"<br>\nlabel_file = \"tensorflow/examples/label_image/data/imagenet_slim_labels.txt\"</p>\n</blockquote>\n<pre><code>$ bazel build tensorflow/tools/graph_transforms:transform_graph\n\n$ bazel-bin/tensorflow/tools/graph_transforms/transform_graph --in_graph=./tensorflow/examples/label_image/data/inception_v3_2016_08_28_frozen.pb --out_graph=./tensorflow/examples/label_image/data/eight_bits.pb --inputs=Mul:0 --outputs=final_result:0 --transforms='fold_constants(ignore_errors=true)  fold_batch_norms fold_old_batch_norms quantize_weights'\n</code></pre>\n<p>-----------After quantization, I used label_image.py script to test images in a loop as below.</p>\n<pre><code>  ts = time.time()\n\n  for file in os.listdir('~/test_images'):\n      file_name = 'tensorflow/test_images_imagenet/' + file\n      print (file_name)\n      t = read_tensor_from_image_file(\n          file_name,\n          input_height=input_height,\n          input_width=input_width,\n          input_mean=input_mean,\n          input_std=input_std)\n\n      with tf.Session(graph=graph) as sess:\n          results = sess.run(output_operation.outputs[0], {\n          input_operation.outputs[0]: t\n      })\n      results = np.squeeze(results)\n\n  tf = time.time()\n  diff = tf - ts\n  print(diff)\n\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): N/A\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04.4 LTS (Xenial Xerus)\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.7.1\nPython version: 3.6.5 :: Anaconda Inc\nBazel version (if compiling from source): 0.13.1\nGCC/Compiler version (if compiling from source): 5.4.0\nCUDA/cuDNN version: N/A\nGPU model and memory: GeForce GTX 1080 Ti/PCIe/SSE2\nExact command to reproduce: python tensorflow/examples/label_image/label_image.py\n\nDescribe the problem\nQuantized Inception-3 model using transform_graph.py script. Tested on 1000 Imagenet images. Un-quantized model takes 800 seconds whereas quantized model takes 1600 seconds. Is this the expected behavior?\nPS. Let me know please if I should move this to SO?\nSource code / logs\nModel files:\n\nmodel_file = \n\"tensorflow/examples/label_image/data/inception_v3_2016_08_28_frozen.pb\"\nlabel_file = \"tensorflow/examples/label_image/data/imagenet_slim_labels.txt\"\n\n$ bazel build tensorflow/tools/graph_transforms:transform_graph\n\n$ bazel-bin/tensorflow/tools/graph_transforms/transform_graph --in_graph=./tensorflow/examples/label_image/data/inception_v3_2016_08_28_frozen.pb --out_graph=./tensorflow/examples/label_image/data/eight_bits.pb --inputs=Mul:0 --outputs=final_result:0 --transforms='fold_constants(ignore_errors=true)  fold_batch_norms fold_old_batch_norms quantize_weights'\n\n-----------After quantization, I used label_image.py script to test images in a loop as below.\n  ts = time.time()\n\n  for file in os.listdir('~/test_images'):\n      file_name = 'tensorflow/test_images_imagenet/' + file\n      print (file_name)\n      t = read_tensor_from_image_file(\n          file_name,\n          input_height=input_height,\n          input_width=input_width,\n          input_mean=input_mean,\n          input_std=input_std)\n\n      with tf.Session(graph=graph) as sess:\n          results = sess.run(output_operation.outputs[0], {\n          input_operation.outputs[0]: t\n      })\n      results = np.squeeze(results)\n\n  tf = time.time()\n  diff = tf - ts\n  print(diff)", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: N/A\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04.4 LTS (Xenial Xerus)\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.7.1\r\n- **Python version**: 3.6.5 :: Anaconda Inc\r\n- **Bazel version (if compiling from source)**: 0.13.1\r\n- **GCC/Compiler version (if compiling from source)**: 5.4.0\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: GeForce GTX 1080 Ti/PCIe/SSE2\r\n- **Exact command to reproduce**: python tensorflow/examples/label_image/label_image.py\r\n\r\n### Describe the problem\r\n\r\nQuantized Inception-3 model using transform_graph.py script. Tested on 1000 Imagenet images. Un-quantized model takes 800 seconds whereas quantized model takes 1600 seconds. Is this the expected behavior? \r\n\r\nPS. Let me know please if I should move this to SO?\r\n\r\n### Source code / logs\r\n\r\nModel files:\r\n\r\n>  model_file = \\\r\n>     \"tensorflow/examples/label_image/data/inception_v3_2016_08_28_frozen.pb\"\r\n>   label_file = \"tensorflow/examples/label_image/data/imagenet_slim_labels.txt\"\r\n> \r\n> \r\n\r\n```\r\n$ bazel build tensorflow/tools/graph_transforms:transform_graph\r\n\r\n$ bazel-bin/tensorflow/tools/graph_transforms/transform_graph --in_graph=./tensorflow/examples/label_image/data/inception_v3_2016_08_28_frozen.pb --out_graph=./tensorflow/examples/label_image/data/eight_bits.pb --inputs=Mul:0 --outputs=final_result:0 --transforms='fold_constants(ignore_errors=true)  fold_batch_norms fold_old_batch_norms quantize_weights'\r\n```\r\n\r\n-----------After quantization, I used label_image.py script to test images in a loop as below.\r\n\r\n```\r\n  ts = time.time()\r\n\r\n  for file in os.listdir('~/test_images'):\r\n      file_name = 'tensorflow/test_images_imagenet/' + file\r\n      print (file_name)\r\n      t = read_tensor_from_image_file(\r\n          file_name,\r\n          input_height=input_height,\r\n          input_width=input_width,\r\n          input_mean=input_mean,\r\n          input_std=input_std)\r\n\r\n      with tf.Session(graph=graph) as sess:\r\n          results = sess.run(output_operation.outputs[0], {\r\n          input_operation.outputs[0]: t\r\n      })\r\n      results = np.squeeze(results)\r\n\r\n  tf = time.time()\r\n  diff = tf - ts\r\n  print(diff)\r\n\r\n```\r\n\r\n"}