{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/199896678", "html_url": "https://github.com/tensorflow/tensorflow/issues/1502#issuecomment-199896678", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1502", "id": 199896678, "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTg5NjY3OA==", "user": {"login": "ppwwyyxx", "id": 1381301, "node_id": "MDQ6VXNlcjEzODEzMDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1381301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ppwwyyxx", "html_url": "https://github.com/ppwwyyxx", "followers_url": "https://api.github.com/users/ppwwyyxx/followers", "following_url": "https://api.github.com/users/ppwwyyxx/following{/other_user}", "gists_url": "https://api.github.com/users/ppwwyyxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/ppwwyyxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ppwwyyxx/subscriptions", "organizations_url": "https://api.github.com/users/ppwwyyxx/orgs", "repos_url": "https://api.github.com/users/ppwwyyxx/repos", "events_url": "https://api.github.com/users/ppwwyyxx/events{/privacy}", "received_events_url": "https://api.github.com/users/ppwwyyxx/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-22T16:41:55Z", "updated_at": "2016-03-22T16:41:55Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I compiled just now. And use the following main() function in <code>batch_norm_benchmark.py</code>:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">main</span>(<span class=\"pl-smi\">unused_argv</span>):\n  <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Forward convolution (lower layers).<span class=\"pl-pds\">\"</span></span>)\n  shape <span class=\"pl-k\">=</span> [<span class=\"pl-c1\">8</span>, <span class=\"pl-c1\">128</span>, <span class=\"pl-c1\">128</span>, <span class=\"pl-c1\">32</span>]\n  axes <span class=\"pl-k\">=</span> [<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>]\n  t2 <span class=\"pl-k\">=</span> run_graph(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>gpu<span class=\"pl-pds\">\"</span></span>, shape, axes, <span class=\"pl-c1\">10</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>py<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">True</span>, <span class=\"pl-c1\">False</span>, <span class=\"pl-c1\">50</span>)\n  shape <span class=\"pl-k\">=</span> [<span class=\"pl-c1\">8</span>, <span class=\"pl-c1\">32</span>, <span class=\"pl-c1\">128</span>, <span class=\"pl-c1\">128</span>]\n  axes <span class=\"pl-k\">=</span> [<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>]\n  t2 <span class=\"pl-k\">=</span> run_graph(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>gpu<span class=\"pl-pds\">\"</span></span>, shape, axes, <span class=\"pl-c1\">10</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>py<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">True</span>, <span class=\"pl-c1\">False</span>, <span class=\"pl-c1\">50</span>)</pre></div>\n<p>output:</p>\n<pre><code>gpu shape:4/3 #layers:10 mode:py scale:True train:False - 0.019783 secs\ngpu shape:4/3 #layers:10 mode:py scale:True train:False - 0.365370 secs\n</code></pre>", "body_text": "I compiled just now. And use the following main() function in batch_norm_benchmark.py:\ndef main(unused_argv):\n  print(\"Forward convolution (lower layers).\")\n  shape = [8, 128, 128, 32]\n  axes = [0, 1, 2]\n  t2 = run_graph(\"gpu\", shape, axes, 10, \"py\", True, False, 50)\n  shape = [8, 32, 128, 128]\n  axes = [0, 2, 3]\n  t2 = run_graph(\"gpu\", shape, axes, 10, \"py\", True, False, 50)\noutput:\ngpu shape:4/3 #layers:10 mode:py scale:True train:False - 0.019783 secs\ngpu shape:4/3 #layers:10 mode:py scale:True train:False - 0.365370 secs", "body": "I compiled just now. And use the following main() function in `batch_norm_benchmark.py`:\n\n``` python\ndef main(unused_argv):\n  print(\"Forward convolution (lower layers).\")\n  shape = [8, 128, 128, 32]\n  axes = [0, 1, 2]\n  t2 = run_graph(\"gpu\", shape, axes, 10, \"py\", True, False, 50)\n  shape = [8, 32, 128, 128]\n  axes = [0, 2, 3]\n  t2 = run_graph(\"gpu\", shape, axes, 10, \"py\", True, False, 50)\n```\n\noutput:\n\n```\ngpu shape:4/3 #layers:10 mode:py scale:True train:False - 0.019783 secs\ngpu shape:4/3 #layers:10 mode:py scale:True train:False - 0.365370 secs\n```\n"}