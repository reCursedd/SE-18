{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/381418901", "html_url": "https://github.com/tensorflow/tensorflow/issues/9171#issuecomment-381418901", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9171", "id": 381418901, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTQxODkwMQ==", "user": {"login": "msmsajjadi", "id": 23297830, "node_id": "MDQ6VXNlcjIzMjk3ODMw", "avatar_url": "https://avatars0.githubusercontent.com/u/23297830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msmsajjadi", "html_url": "https://github.com/msmsajjadi", "followers_url": "https://api.github.com/users/msmsajjadi/followers", "following_url": "https://api.github.com/users/msmsajjadi/following{/other_user}", "gists_url": "https://api.github.com/users/msmsajjadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/msmsajjadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msmsajjadi/subscriptions", "organizations_url": "https://api.github.com/users/msmsajjadi/orgs", "repos_url": "https://api.github.com/users/msmsajjadi/repos", "events_url": "https://api.github.com/users/msmsajjadi/events{/privacy}", "received_events_url": "https://api.github.com/users/msmsajjadi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-15T16:24:00Z", "updated_at": "2018-04-15T16:24:00Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=24538058\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/TYS11\">@TYS11</a> I haven't had the time to look into this any further, unfortunately. I agree with <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16018\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/asimshankar\">@asimshankar</a> that a reset_op_seed parameter could be a decent solution that doesn't break backwards compatibility. Until then, there's likely no better way than to write a custom function that creates 2 neural networks and then copies over the initialization weights from one to the other.</p>", "body_text": "@TYS11 I haven't had the time to look into this any further, unfortunately. I agree with @asimshankar that a reset_op_seed parameter could be a decent solution that doesn't break backwards compatibility. Until then, there's likely no better way than to write a custom function that creates 2 neural networks and then copies over the initialization weights from one to the other.", "body": "@TYS11 I haven't had the time to look into this any further, unfortunately. I agree with @asimshankar that a reset_op_seed parameter could be a decent solution that doesn't break backwards compatibility. Until then, there's likely no better way than to write a custom function that creates 2 neural networks and then copies over the initialization weights from one to the other."}