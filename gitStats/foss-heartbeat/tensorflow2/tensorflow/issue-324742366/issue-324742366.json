{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19424", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19424/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19424/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19424/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19424", "id": 324742366, "node_id": "MDU6SXNzdWUzMjQ3NDIzNjY=", "number": 19424, "title": "tf.fill fails when dims has type tf.int64", "user": {"login": "jeffpollock9", "id": 5081168, "node_id": "MDQ6VXNlcjUwODExNjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5081168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeffpollock9", "html_url": "https://github.com/jeffpollock9", "followers_url": "https://api.github.com/users/jeffpollock9/followers", "following_url": "https://api.github.com/users/jeffpollock9/following{/other_user}", "gists_url": "https://api.github.com/users/jeffpollock9/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeffpollock9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeffpollock9/subscriptions", "organizations_url": "https://api.github.com/users/jeffpollock9/orgs", "repos_url": "https://api.github.com/users/jeffpollock9/repos", "events_url": "https://api.github.com/users/jeffpollock9/events{/privacy}", "received_events_url": "https://api.github.com/users/jeffpollock9/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-20T21:01:31Z", "updated_at": "2018-05-25T08:00:38Z", "closed_at": "2018-05-25T08:00:38Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: no</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 18.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.8.0 (CPU version)</li>\n<li><strong>Python version</strong>: 3.6.5</li>\n</ul>\n<h3>Describe the problem</h3>\n<p><code>tf.fill([n], 42.0)</code> fails when <code>n</code> is of type <code>tf.int64</code>, according to <a href=\"https://www.tensorflow.org/api_docs/python/tf/fill\" rel=\"nofollow\">the docs</a>:</p>\n<blockquote>\n<p>dims: A <code>Tensor</code>. Must be one of the following types: <code>int32</code>, <code>int64</code>. 1-D. Represents the shape of the output tensor.</p>\n</blockquote>\n<h3>Source code / logs</h3>\n<p>The following code describes the problem:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\nn1 <span class=\"pl-k\">=</span> tf.constant(<span class=\"pl-c1\">3</span>, tf.int32)\nn2 <span class=\"pl-k\">=</span> tf.constant(<span class=\"pl-c1\">3</span>, tf.int64)\n\nx1 <span class=\"pl-k\">=</span> tf.fill([n1], <span class=\"pl-c1\">42.0</span>)  <span class=\"pl-c\"><span class=\"pl-c\">#</span> OK</span>\nx2 <span class=\"pl-k\">=</span> tf.fill([n2], <span class=\"pl-c1\">42.0</span>)  <span class=\"pl-c\"><span class=\"pl-c\">#</span> not OK</span></pre></div>\n<p>output:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> n1 <span class=\"pl-k\">=</span> tf.constant(<span class=\"pl-c1\">3</span>, tf.int32)\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> n2 <span class=\"pl-k\">=</span> tf.constant(<span class=\"pl-c1\">3</span>, tf.int64)\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> x1 <span class=\"pl-k\">=</span> tf.fill([n1], <span class=\"pl-c1\">42.0</span>)  <span class=\"pl-c\"><span class=\"pl-c\">#</span> OK</span>\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> x2 <span class=\"pl-k\">=</span> tf.fill([n2], <span class=\"pl-c1\">42.0</span>)  <span class=\"pl-c\"><span class=\"pl-c\">#</span> not OK</span>\nTraceback (most recent call last):\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&lt;stdin&gt;<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">1</span>, <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/gen_array_ops.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">2717</span>, <span class=\"pl-k\">in</span> fill\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Fill<span class=\"pl-pds\">\"</span></span>, dims<span class=\"pl-k\">=</span>dims, value<span class=\"pl-k\">=</span>value, name<span class=\"pl-k\">=</span>name)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/op_def_library.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">513</span>, <span class=\"pl-k\">in</span> _apply_op_helper\n    <span class=\"pl-k\">raise</span> err\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/op_def_library.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">510</span>, <span class=\"pl-k\">in</span> _apply_op_helper\n    preferred_dtype<span class=\"pl-k\">=</span>default_dtype)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">1104</span>, <span class=\"pl-k\">in</span> internal_convert_to_tensor\n    ret <span class=\"pl-k\">=</span> conversion_func(value, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>dtype, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span>name, <span class=\"pl-v\">as_ref</span><span class=\"pl-k\">=</span>as_ref)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/constant_op.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">235</span>, <span class=\"pl-k\">in</span> _constant_tensor_conversion_function\n    <span class=\"pl-k\">return</span> constant(v, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>dtype, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span>name)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/constant_op.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">214</span>, <span class=\"pl-k\">in</span> constant\n    value, dtype<span class=\"pl-k\">=</span>dtype, shape<span class=\"pl-k\">=</span>shape, verify_shape<span class=\"pl-k\">=</span>verify_shape))\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/tensor_util.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">432</span>, <span class=\"pl-k\">in</span> make_tensor_proto\n    _AssertCompatible(values, dtype)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/tensor_util.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">340</span>, <span class=\"pl-k\">in</span> _AssertCompatible\n    <span class=\"pl-k\">raise</span> <span class=\"pl-c1\">TypeError</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>List of Tensors when single Tensor expected<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-c1\">TypeError</span>: List of Tensors when single Tensor expected</pre></div>\n<p>Thanks!</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): no\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 18.04\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.8.0 (CPU version)\nPython version: 3.6.5\n\nDescribe the problem\ntf.fill([n], 42.0) fails when n is of type tf.int64, according to the docs:\n\ndims: A Tensor. Must be one of the following types: int32, int64. 1-D. Represents the shape of the output tensor.\n\nSource code / logs\nThe following code describes the problem:\nimport tensorflow as tf\n\nn1 = tf.constant(3, tf.int32)\nn2 = tf.constant(3, tf.int64)\n\nx1 = tf.fill([n1], 42.0)  # OK\nx2 = tf.fill([n2], 42.0)  # not OK\noutput:\n>>> import tensorflow as tf\n>>> n1 = tf.constant(3, tf.int32)\n>>> n2 = tf.constant(3, tf.int64)\n>>> x1 = tf.fill([n1], 42.0)  # OK\n>>> x2 = tf.fill([n2], 42.0)  # not OK\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/gen_array_ops.py\", line 2717, in fill\n    \"Fill\", dims=dims, value=value, name=name)\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/op_def_library.py\", line 513, in _apply_op_helper\n    raise err\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/op_def_library.py\", line 510, in _apply_op_helper\n    preferred_dtype=default_dtype)\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py\", line 1104, in internal_convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/constant_op.py\", line 235, in _constant_tensor_conversion_function\n    return constant(v, dtype=dtype, name=name)\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/constant_op.py\", line 214, in constant\n    value, dtype=dtype, shape=shape, verify_shape=verify_shape))\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/tensor_util.py\", line 432, in make_tensor_proto\n    _AssertCompatible(values, dtype)\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/tensor_util.py\", line 340, in _AssertCompatible\n    raise TypeError(\"List of Tensors when single Tensor expected\")\nTypeError: List of Tensors when single Tensor expected\nThanks!", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: no\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 18.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.8.0 (CPU version)\r\n- **Python version**: 3.6.5\r\n\r\n### Describe the problem\r\n\r\n`tf.fill([n], 42.0)` fails when `n` is of type `tf.int64`, according to [the docs](https://www.tensorflow.org/api_docs/python/tf/fill):\r\n\r\n>  dims: A `Tensor`. Must be one of the following types: `int32`, `int64`. 1-D. Represents the shape of the output tensor.\r\n\r\n### Source code / logs\r\n\r\nThe following code describes the problem:\r\n\r\n```python\r\nimport tensorflow as tf\r\n\r\nn1 = tf.constant(3, tf.int32)\r\nn2 = tf.constant(3, tf.int64)\r\n\r\nx1 = tf.fill([n1], 42.0)  # OK\r\nx2 = tf.fill([n2], 42.0)  # not OK\r\n```\r\n\r\noutput:\r\n\r\n```python\r\n>>> import tensorflow as tf\r\n>>> n1 = tf.constant(3, tf.int32)\r\n>>> n2 = tf.constant(3, tf.int64)\r\n>>> x1 = tf.fill([n1], 42.0)  # OK\r\n>>> x2 = tf.fill([n2], 42.0)  # not OK\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/gen_array_ops.py\", line 2717, in fill\r\n    \"Fill\", dims=dims, value=value, name=name)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/op_def_library.py\", line 513, in _apply_op_helper\r\n    raise err\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/op_def_library.py\", line 510, in _apply_op_helper\r\n    preferred_dtype=default_dtype)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py\", line 1104, in internal_convert_to_tensor\r\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/constant_op.py\", line 235, in _constant_tensor_conversion_function\r\n    return constant(v, dtype=dtype, name=name)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/constant_op.py\", line 214, in constant\r\n    value, dtype=dtype, shape=shape, verify_shape=verify_shape))\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/tensor_util.py\", line 432, in make_tensor_proto\r\n    _AssertCompatible(values, dtype)\r\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/tensor_util.py\", line 340, in _AssertCompatible\r\n    raise TypeError(\"List of Tensors when single Tensor expected\")\r\nTypeError: List of Tensors when single Tensor expected\r\n```\r\n\r\nThanks!"}