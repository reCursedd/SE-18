{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13594", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13594/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13594/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13594/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/13594", "id": 263985914, "node_id": "MDU6SXNzdWUyNjM5ODU5MTQ=", "number": 13594, "title": "How to display Runtime Statistics in Tensorboard using Estimator API in a distributed environment", "user": {"login": "Threynaud", "id": 13488732, "node_id": "MDQ6VXNlcjEzNDg4NzMy", "avatar_url": "https://avatars1.githubusercontent.com/u/13488732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Threynaud", "html_url": "https://github.com/Threynaud", "followers_url": "https://api.github.com/users/Threynaud/followers", "following_url": "https://api.github.com/users/Threynaud/following{/other_user}", "gists_url": "https://api.github.com/users/Threynaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/Threynaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Threynaud/subscriptions", "organizations_url": "https://api.github.com/users/Threynaud/orgs", "repos_url": "https://api.github.com/users/Threynaud/repos", "events_url": "https://api.github.com/users/Threynaud/events{/privacy}", "received_events_url": "https://api.github.com/users/Threynaud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-09T18:26:46Z", "updated_at": "2018-04-14T11:58:06Z", "closed_at": "2017-10-11T00:59:10Z", "author_association": "NONE", "body_html": "<p>Hello,</p>\n<p>I am running in the the same issue than described in this stack overflow question: <a href=\"https://stackoverflow.com/questions/45719176/how-to-display-runtime-statistics-in-tensorboard-using-estimator-api-in-a-distri\" rel=\"nofollow\">https://stackoverflow.com/questions/45719176/how-to-display-runtime-statistics-in-tensorboard-using-estimator-api-in-a-distri</a>..<br>\nI know that GitHub is used for features requests and bugs but this question didn't get an answer and I am not the only one running in the problem.</p>\n<p>This is how the doc illustrates how to add  and save Runtime statistics:</p>\n<pre><code>run_options = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)\nrun_metadata = tf.RunMetadata()\nsummary, _ = sess.run([merged, train_step],\n                                       feed_dict=feed_dict(True),\n                                       options=run_options,\n                                       run_metadata=run_metadata)\ntrain_writer.add_run_metadata(run_metadata, 'step%d' % i)\n train_writer.add_summary(summary, i)\n</code></pre>\n<p>Given that there is no evident way to call <code>sess.run</code> in the training phase with the Estimator API, I am genuinely wondering how to write this kind of summary... is there a workaround?</p>\n<p>I was thinking about using a <code>SessionRunHook</code> to create something to pass to the <code>EstimatorSpec</code> but I am really not familiar with that..</p>", "body_text": "Hello,\nI am running in the the same issue than described in this stack overflow question: https://stackoverflow.com/questions/45719176/how-to-display-runtime-statistics-in-tensorboard-using-estimator-api-in-a-distri..\nI know that GitHub is used for features requests and bugs but this question didn't get an answer and I am not the only one running in the problem.\nThis is how the doc illustrates how to add  and save Runtime statistics:\nrun_options = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)\nrun_metadata = tf.RunMetadata()\nsummary, _ = sess.run([merged, train_step],\n                                       feed_dict=feed_dict(True),\n                                       options=run_options,\n                                       run_metadata=run_metadata)\ntrain_writer.add_run_metadata(run_metadata, 'step%d' % i)\n train_writer.add_summary(summary, i)\n\nGiven that there is no evident way to call sess.run in the training phase with the Estimator API, I am genuinely wondering how to write this kind of summary... is there a workaround?\nI was thinking about using a SessionRunHook to create something to pass to the EstimatorSpec but I am really not familiar with that..", "body": "Hello,\r\n\r\nI am running in the the same issue than described in this stack overflow question: https://stackoverflow.com/questions/45719176/how-to-display-runtime-statistics-in-tensorboard-using-estimator-api-in-a-distri.. \r\nI know that GitHub is used for features requests and bugs but this question didn't get an answer and I am not the only one running in the problem.\r\n\r\n This is how the doc illustrates how to add  and save Runtime statistics:\r\n```\r\nrun_options = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)\r\nrun_metadata = tf.RunMetadata()\r\nsummary, _ = sess.run([merged, train_step],\r\n                                       feed_dict=feed_dict(True),\r\n                                       options=run_options,\r\n                                       run_metadata=run_metadata)\r\ntrain_writer.add_run_metadata(run_metadata, 'step%d' % i)\r\n train_writer.add_summary(summary, i)\r\n```\r\n\r\nGiven that there is no evident way to call `sess.run` in the training phase with the Estimator API, I am genuinely wondering how to write this kind of summary... is there a workaround?\r\n\r\nI was thinking about using a `SessionRunHook` to create something to pass to the `EstimatorSpec` but I am really not familiar with that.."}