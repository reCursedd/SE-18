{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/110323443", "pull_request_review_id": 31488555, "id": 110323443, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDMyMzQ0Mw==", "diff_hunk": "@@ -97,9 +84,89 @@ class FFTGPUBase : public OpKernel {\n   virtual bool IsForward() const = 0;\n   virtual bool IsReal() const = 0;\n \n- private:\n+  // The function that actually computes the FFT\n+  virtual void DoFFT(OpKernelContext* ctx, const Tensor& in, uint64* fft_shape,\n+                     Tensor* out) = 0;\n+};\n+\n+typedef Eigen::ThreadPoolDevice CPUDevice;\n+\n+template <typename Device, typename TInput, typename TOutput,\n+          int FFTResultType, int FFTDir, int FFTRank>\n+struct FFTFunctor {\n+  void operator()(const Device& d,\n+                  typename TTypes<TOutput, FFTRank + 1>::Tensor output,\n+                  typename TTypes<TInput, FFTRank + 1>::ConstTensor input) {\n+      // Cast to non-const data type to ensure we can call the template fft\n+      // function\n+      // TODO(tillahoffmann): Remove reinterpret_cast once Eigen supports const\n+      // arguments for tensor fft\n+      auto casted_input =\n+       *reinterpret_cast<typename TTypes<TInput, FFTRank + 1>::Tensor*>(&input);\n+      // Create the axes (which are always trailing)\n+      auto axes = Eigen::ArrayXi::LinSpaced(FFTRank, 1, FFTRank);\n+      // Evaluate the fft on the specified device\n+      output.device(d) = casted_input.template fft<FFTResultType, FFTDir>(axes);\n+  }\n+};\n+\n+template <bool Forward, bool _Real, int FFTRank>\n+class FFTCPU : public FFTBase {\n+ public:\n+  using FFTBase::FFTBase;\n+ protected:\n+  int Rank() const override { return FFTRank; }\n+  bool IsForward() const override { return Forward; }\n+  bool IsReal() const override { return _Real; }\n+\n   void DoFFT(OpKernelContext* ctx, const Tensor& in, uint64* fft_shape,\n-             Tensor* out) {\n+             Tensor* out) override {\n+    // TODO(tillahoffmann): Support RFFTs by slicing away the negative\n+    // frequency components\n+    OP_REQUIRES(ctx, !IsReal(), errors::Internal(\"Real FFT not supported.\"));\n+    auto input = in.flat_inner_dims<complex64, FFTRank + 1>();", "path": "tensorflow/core/kernels/fft_ops.cc", "position": null, "original_position": 73, "commit_id": "e6da919d85a75ba32258b3e578d8dbe0dd49188e", "original_commit_id": "217c4a7876436d45ffbcf648587bc9edbc6ec94f", "user": {"login": "tillahoffmann", "id": 966348, "node_id": "MDQ6VXNlcjk2NjM0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/966348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tillahoffmann", "html_url": "https://github.com/tillahoffmann", "followers_url": "https://api.github.com/users/tillahoffmann/followers", "following_url": "https://api.github.com/users/tillahoffmann/following{/other_user}", "gists_url": "https://api.github.com/users/tillahoffmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/tillahoffmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tillahoffmann/subscriptions", "organizations_url": "https://api.github.com/users/tillahoffmann/orgs", "repos_url": "https://api.github.com/users/tillahoffmann/repos", "events_url": "https://api.github.com/users/tillahoffmann/events{/privacy}", "received_events_url": "https://api.github.com/users/tillahoffmann/received_events", "type": "User", "site_admin": false}, "body": "Yes, much better.", "created_at": "2017-04-07T06:27:36Z", "updated_at": "2017-05-17T11:28:15Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/9029#discussion_r110323443", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9029", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/110323443"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/9029#discussion_r110323443"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9029"}}, "body_html": "<p>Yes, much better.</p>", "body_text": "Yes, much better.", "in_reply_to_id": 110287858}