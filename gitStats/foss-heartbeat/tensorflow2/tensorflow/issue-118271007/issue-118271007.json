{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/324", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/324/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/324/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/324/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/324", "id": 118271007, "node_id": "MDU6SXNzdWUxMTgyNzEwMDc=", "number": 324, "title": "TensorBoard Documentation - Confusing and Incorrect in places. (Need End to End Example)", "user": {"login": "mchirico", "id": 755710, "node_id": "MDQ6VXNlcjc1NTcxMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/755710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mchirico", "html_url": "https://github.com/mchirico", "followers_url": "https://api.github.com/users/mchirico/followers", "following_url": "https://api.github.com/users/mchirico/following{/other_user}", "gists_url": "https://api.github.com/users/mchirico/gists{/gist_id}", "starred_url": "https://api.github.com/users/mchirico/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mchirico/subscriptions", "organizations_url": "https://api.github.com/users/mchirico/orgs", "repos_url": "https://api.github.com/users/mchirico/repos", "events_url": "https://api.github.com/users/mchirico/events{/privacy}", "received_events_url": "https://api.github.com/users/mchirico/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 284285184, "node_id": "MDU6TGFiZWwyODQyODUxODQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:tensorboard", "name": "comp:tensorboard", "color": "0052cc", "default": false}, {"id": 284443156, "node_id": "MDU6TGFiZWwyODQ0NDMxNTY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:docs", "name": "type:docs", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "decentralion", "id": 1400023, "node_id": "MDQ6VXNlcjE0MDAwMjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1400023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/decentralion", "html_url": "https://github.com/decentralion", "followers_url": "https://api.github.com/users/decentralion/followers", "following_url": "https://api.github.com/users/decentralion/following{/other_user}", "gists_url": "https://api.github.com/users/decentralion/gists{/gist_id}", "starred_url": "https://api.github.com/users/decentralion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/decentralion/subscriptions", "organizations_url": "https://api.github.com/users/decentralion/orgs", "repos_url": "https://api.github.com/users/decentralion/repos", "events_url": "https://api.github.com/users/decentralion/events{/privacy}", "received_events_url": "https://api.github.com/users/decentralion/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "decentralion", "id": 1400023, "node_id": "MDQ6VXNlcjE0MDAwMjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1400023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/decentralion", "html_url": "https://github.com/decentralion", "followers_url": "https://api.github.com/users/decentralion/followers", "following_url": "https://api.github.com/users/decentralion/following{/other_user}", "gists_url": "https://api.github.com/users/decentralion/gists{/gist_id}", "starred_url": "https://api.github.com/users/decentralion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/decentralion/subscriptions", "organizations_url": "https://api.github.com/users/decentralion/orgs", "repos_url": "https://api.github.com/users/decentralion/repos", "events_url": "https://api.github.com/users/decentralion/events{/privacy}", "received_events_url": "https://api.github.com/users/decentralion/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2015-11-22T16:01:01Z", "updated_at": "2016-06-15T11:39:30Z", "closed_at": "2015-12-13T18:03:49Z", "author_association": "NONE", "body_html": "<p>It would be nice to have a complete, end-to-end working example using TensorBoard.  In addition, some of the documentation appears to be incorrect.</p>\n<p>Possible Incorrect Documentation:<br>\n<a href=\"http://tensorflow.org/how_tos/summaries_and_tensorboard/index.md\" rel=\"nofollow\">http://tensorflow.org/how_tos/summaries_and_tensorboard/index.md</a></p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://cloud.githubusercontent.com/assets/755710/11324647/bc5560d8-9105-11e5-8293-ddd36cf7c946.png\"><img width=\"731\" alt=\"screenshot 2015-11-22 10 42 18\" src=\"https://cloud.githubusercontent.com/assets/755710/11324647/bc5560d8-9105-11e5-8293-ddd36cf7c946.png\" style=\"max-width:100%;\"></a></p>\n<p>A concise, completely coded example may help. Note, more detail is shown here, but it's still have hard to grasp the full picture.  A complete coded example may help.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c1\">...</span>\nsess.run(init)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Build the summary operation based on the TF collection of Summaries.</span>\ntf.train.write_graph(sess.graph_def, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>./tenIrisSave/logsd<span class=\"pl-pds\">'</span></span>,<span class=\"pl-s\"><span class=\"pl-pds\">'</span>graph.pbtxt<span class=\"pl-pds\">'</span></span>)\n\ntf.scalar_summary(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Accuracy:<span class=\"pl-pds\">\"</span></span>, tf_accuracy)\ntf.histogram_summary(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>weights<span class=\"pl-pds\">'</span></span>, tf_weight)\ntf.histogram_summary(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>bias<span class=\"pl-pds\">'</span></span>, tf_bias)\ntf.histogram_summary(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>softmax<span class=\"pl-pds\">'</span></span>, tf_softmax)\ntf.histogram_summary(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>accuracy<span class=\"pl-pds\">'</span></span>, tf_accuracy)\n\n\nsummary_op <span class=\"pl-k\">=</span> tf.merge_all_summaries()\nsummary_writer <span class=\"pl-k\">=</span> tf.train.SummaryWriter(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>./tenIrisSave/logs<span class=\"pl-pds\">'</span></span>,sess.graph_def)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> This will not work. You need the full path.</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> tensorboard --logdir=./tenIrisSave/   # BAD!</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> tensorboard --logdir=$(pwd)/tenIrisSave/  # Good!</span>\n<span class=\"pl-c1\">...</span>\n<span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">100</span>):\n   <span class=\"pl-c1\">...</span>\n    summary_str <span class=\"pl-k\">=</span> sess.run(summary_op,<span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>{tf_in: x_test, tf_softmax_correct: y_test_onehot})\n    summary_writer.add_summary(summary_str, i)\n\n</pre></div>\n<p>The complete example can be seen here:<br>\n<a href=\"https://gist.github.com/mchirico/bcc376fb336b73f24b29\">https://gist.github.com/mchirico/bcc376fb336b73f24b29</a></p>\n<p>Agreed. The example needs to be cleaned up. The point is to give the user a complete working example that can be run and verified.</p>", "body_text": "It would be nice to have a complete, end-to-end working example using TensorBoard.  In addition, some of the documentation appears to be incorrect.\nPossible Incorrect Documentation:\nhttp://tensorflow.org/how_tos/summaries_and_tensorboard/index.md\n\nA concise, completely coded example may help. Note, more detail is shown here, but it's still have hard to grasp the full picture.  A complete coded example may help.\n...\nsess.run(init)\n\n# Build the summary operation based on the TF collection of Summaries.\ntf.train.write_graph(sess.graph_def, './tenIrisSave/logsd','graph.pbtxt')\n\ntf.scalar_summary(\"Accuracy:\", tf_accuracy)\ntf.histogram_summary('weights', tf_weight)\ntf.histogram_summary('bias', tf_bias)\ntf.histogram_summary('softmax', tf_softmax)\ntf.histogram_summary('accuracy', tf_accuracy)\n\n\nsummary_op = tf.merge_all_summaries()\nsummary_writer = tf.train.SummaryWriter('./tenIrisSave/logs',sess.graph_def)\n\n# This will not work. You need the full path.\n# tensorboard --logdir=./tenIrisSave/   # BAD!\n# tensorboard --logdir=$(pwd)/tenIrisSave/  # Good!\n...\nfor i in range(100):\n   ...\n    summary_str = sess.run(summary_op,feed_dict={tf_in: x_test, tf_softmax_correct: y_test_onehot})\n    summary_writer.add_summary(summary_str, i)\n\n\nThe complete example can be seen here:\nhttps://gist.github.com/mchirico/bcc376fb336b73f24b29\nAgreed. The example needs to be cleaned up. The point is to give the user a complete working example that can be run and verified.", "body": "It would be nice to have a complete, end-to-end working example using TensorBoard.  In addition, some of the documentation appears to be incorrect.\n\nPossible Incorrect Documentation:\nhttp://tensorflow.org/how_tos/summaries_and_tensorboard/index.md\n\n<img width=\"731\" alt=\"screenshot 2015-11-22 10 42 18\" src=\"https://cloud.githubusercontent.com/assets/755710/11324647/bc5560d8-9105-11e5-8293-ddd36cf7c946.png\">\n\nA concise, completely coded example may help. Note, more detail is shown here, but it's still have hard to grasp the full picture.  A complete coded example may help.\n\n``` python\n\n...\nsess.run(init)\n\n# Build the summary operation based on the TF collection of Summaries.\ntf.train.write_graph(sess.graph_def, './tenIrisSave/logsd','graph.pbtxt')\n\ntf.scalar_summary(\"Accuracy:\", tf_accuracy)\ntf.histogram_summary('weights', tf_weight)\ntf.histogram_summary('bias', tf_bias)\ntf.histogram_summary('softmax', tf_softmax)\ntf.histogram_summary('accuracy', tf_accuracy)\n\n\nsummary_op = tf.merge_all_summaries()\nsummary_writer = tf.train.SummaryWriter('./tenIrisSave/logs',sess.graph_def)\n\n# This will not work. You need the full path.\n# tensorboard --logdir=./tenIrisSave/   # BAD!\n# tensorboard --logdir=$(pwd)/tenIrisSave/  # Good!\n...\nfor i in range(100):\n   ...\n    summary_str = sess.run(summary_op,feed_dict={tf_in: x_test, tf_softmax_correct: y_test_onehot})\n    summary_writer.add_summary(summary_str, i)\n\n\n```\n\nThe complete example can be seen here:\nhttps://gist.github.com/mchirico/bcc376fb336b73f24b29\n\nAgreed. The example needs to be cleaned up. The point is to give the user a complete working example that can be run and verified.\n"}