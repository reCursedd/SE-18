{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/323397114", "html_url": "https://github.com/tensorflow/tensorflow/issues/12375#issuecomment-323397114", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12375", "id": 323397114, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzM5NzExNA==", "user": {"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-18T16:17:04Z", "updated_at": "2017-08-18T16:17:04Z", "author_association": "MEMBER", "body_html": "<div class=\"email-fragment\">I think (thought not sure) TensorFlow keeps a reference to the attr name\nstring around until TFE_Execute is called. I think that's what you're\nstumbling against.</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On Fri, Aug 18, 2017 at 9:06 AM, Anthony Platanios ***@***.*** &gt; wrote:\n I use this code to generate the bindings for the set attribute functions:\n\n #define DEFINE_SET_ATTR(atype, jtype, ctype)                                            \\\n   JNIEXPORT void JNICALL Java_org_platanios_tensorflow_jni_Tensor_00024_eagerSetOpAttr##atype( \\\n       JNIEnv* env, jobject object, jlong handle, jstring name, jtype value) {                  \\\n     static_assert(                                                                             \\\n         sizeof(ctype) &gt;= sizeof(jtype),                                                        \\\n         \"Information loss when converting between Java and C types\");                          \\\n     TFE_Op* op = require_eager_op_handle(env, handle);                                         \\\n     if (op == nullptr) return;                                                                 \\\n     const char *c_name = env-&gt;GetStringUTFChars(name, nullptr);                                \\\n     TFE_OpSetAttr##atype(op, c_name, static_cast&lt;ctype&gt;(value));                               \\\n     env-&gt;ReleaseStringUTFChars(name, c_name);                                                  \\\n   }\n\n DEFINE_SET_ATTR(Int, Long, jlong, int64_t);\n DEFINE_SET_ATTR(Float, Float, jfloat, float);\n DEFINE_SET_ATTR(Bool, Boolean, jboolean, unsigned char);\n DEFINE_SET_ATTR(Type, Int, jint, TF_DataType);\n #undef DEFINE_SET_ATTR\n\n Could the ReleaseStringUTFChars method be interfering with the name\n passed to the set attribute function? Is the attribute name in that\n function handled differently than the one used in the normal op set\n attribute functions (i.e., not eager)? I guess those are the questions I'm\n looking into now. I feel that the name string may be deallocated by the JVM\n and then the pointer passed to the set attribute function may be invalid.\n Although, this doesn't seem to happen with the normal op set attribute\n functions.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"251102919\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/12375\" href=\"https://github.com/tensorflow/tensorflow/issues/12375#issuecomment-323393167\">#12375 (comment)</a>&gt;,\n or mute the thread\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/AAATxardMJGjOzEt49AttTd-b8DS-D3Nks5sZbaCgaJpZM4O68WV\">https://github.com/notifications/unsubscribe-auth/AAATxardMJGjOzEt49AttTd-b8DS-D3Nks5sZbaCgaJpZM4O68WV</a>&gt;\n .\n</div>\n<div class=\"email-fragment\"></div>\n<div class=\"email-signature-reply\">-- \n - Alex</div>\n</div>", "body_text": "I think (thought not sure) TensorFlow keeps a reference to the attr name\nstring around until TFE_Execute is called. I think that's what you're\nstumbling against.\n\u2026\nOn Fri, Aug 18, 2017 at 9:06 AM, Anthony Platanios ***@***.*** > wrote:\n I use this code to generate the bindings for the set attribute functions:\n\n #define DEFINE_SET_ATTR(atype, jtype, ctype)                                            \\\n   JNIEXPORT void JNICALL Java_org_platanios_tensorflow_jni_Tensor_00024_eagerSetOpAttr##atype( \\\n       JNIEnv* env, jobject object, jlong handle, jstring name, jtype value) {                  \\\n     static_assert(                                                                             \\\n         sizeof(ctype) >= sizeof(jtype),                                                        \\\n         \"Information loss when converting between Java and C types\");                          \\\n     TFE_Op* op = require_eager_op_handle(env, handle);                                         \\\n     if (op == nullptr) return;                                                                 \\\n     const char *c_name = env->GetStringUTFChars(name, nullptr);                                \\\n     TFE_OpSetAttr##atype(op, c_name, static_cast<ctype>(value));                               \\\n     env->ReleaseStringUTFChars(name, c_name);                                                  \\\n   }\n\n DEFINE_SET_ATTR(Int, Long, jlong, int64_t);\n DEFINE_SET_ATTR(Float, Float, jfloat, float);\n DEFINE_SET_ATTR(Bool, Boolean, jboolean, unsigned char);\n DEFINE_SET_ATTR(Type, Int, jint, TF_DataType);\n #undef DEFINE_SET_ATTR\n\n Could the ReleaseStringUTFChars method be interfering with the name\n passed to the set attribute function? Is the attribute name in that\n function handled differently than the one used in the normal op set\n attribute functions (i.e., not eager)? I guess those are the questions I'm\n looking into now. I feel that the name string may be deallocated by the JVM\n and then the pointer passed to the set attribute function may be invalid.\n Although, this doesn't seem to happen with the normal op set attribute\n functions.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#12375 (comment)>,\n or mute the thread\n <https://github.com/notifications/unsubscribe-auth/AAATxardMJGjOzEt49AttTd-b8DS-D3Nks5sZbaCgaJpZM4O68WV>\n .\n\n\n-- \n - Alex", "body": "I think (thought not sure) TensorFlow keeps a reference to the attr name\nstring around until TFE_Execute is called. I think that's what you're\nstumbling against.\n\nOn Fri, Aug 18, 2017 at 9:06 AM, Anthony Platanios <notifications@github.com\n> wrote:\n\n> I use this code to generate the bindings for the set attribute functions:\n>\n> #define DEFINE_SET_ATTR(atype, jtype, ctype)                                            \\\n>   JNIEXPORT void JNICALL Java_org_platanios_tensorflow_jni_Tensor_00024_eagerSetOpAttr##atype( \\\n>       JNIEnv* env, jobject object, jlong handle, jstring name, jtype value) {                  \\\n>     static_assert(                                                                             \\\n>         sizeof(ctype) >= sizeof(jtype),                                                        \\\n>         \"Information loss when converting between Java and C types\");                          \\\n>     TFE_Op* op = require_eager_op_handle(env, handle);                                         \\\n>     if (op == nullptr) return;                                                                 \\\n>     const char *c_name = env->GetStringUTFChars(name, nullptr);                                \\\n>     TFE_OpSetAttr##atype(op, c_name, static_cast<ctype>(value));                               \\\n>     env->ReleaseStringUTFChars(name, c_name);                                                  \\\n>   }\n>\n> DEFINE_SET_ATTR(Int, Long, jlong, int64_t);\n> DEFINE_SET_ATTR(Float, Float, jfloat, float);\n> DEFINE_SET_ATTR(Bool, Boolean, jboolean, unsigned char);\n> DEFINE_SET_ATTR(Type, Int, jint, TF_DataType);\n> #undef DEFINE_SET_ATTR\n>\n> Could the ReleaseStringUTFChars method be interfering with the name\n> passed to the set attribute function? Is the attribute name in that\n> function handled differently than the one used in the normal op set\n> attribute functions (i.e., not eager)? I guess those are the questions I'm\n> looking into now. I feel that the name string may be deallocated by the JVM\n> and then the pointer passed to the set attribute function may be invalid.\n> Although, this doesn't seem to happen with the normal op set attribute\n> functions.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/issues/12375#issuecomment-323393167>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAATxardMJGjOzEt49AttTd-b8DS-D3Nks5sZbaCgaJpZM4O68WV>\n> .\n>\n\n\n\n-- \n - Alex\n"}