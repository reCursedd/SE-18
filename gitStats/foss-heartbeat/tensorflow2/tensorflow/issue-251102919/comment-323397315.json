{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/323397315", "html_url": "https://github.com/tensorflow/tensorflow/issues/12375#issuecomment-323397315", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12375", "id": 323397315, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzM5NzMxNQ==", "user": {"login": "eaplatanios", "id": 1294940, "node_id": "MDQ6VXNlcjEyOTQ5NDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1294940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eaplatanios", "html_url": "https://github.com/eaplatanios", "followers_url": "https://api.github.com/users/eaplatanios/followers", "following_url": "https://api.github.com/users/eaplatanios/following{/other_user}", "gists_url": "https://api.github.com/users/eaplatanios/gists{/gist_id}", "starred_url": "https://api.github.com/users/eaplatanios/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eaplatanios/subscriptions", "organizations_url": "https://api.github.com/users/eaplatanios/orgs", "repos_url": "https://api.github.com/users/eaplatanios/repos", "events_url": "https://api.github.com/users/eaplatanios/events{/privacy}", "received_events_url": "https://api.github.com/users/eaplatanios/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-18T16:17:55Z", "updated_at": "2017-08-18T16:17:55Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Actually yeah, if I hardcode <code>\"T\"</code> instead of \"c_name\" in the <code>TFE_OpSetAttr##atype(op, c_name, static_cast&lt;ctype&gt;(value));</code> line above, it works. So I guess it does have to do with that space being potentially deallocated. In the case of <code>TF_SetAttrType</code>, does it not keep a reference to that string?</p>", "body_text": "Actually yeah, if I hardcode \"T\" instead of \"c_name\" in the TFE_OpSetAttr##atype(op, c_name, static_cast<ctype>(value)); line above, it works. So I guess it does have to do with that space being potentially deallocated. In the case of TF_SetAttrType, does it not keep a reference to that string?", "body": "Actually yeah, if I hardcode `\"T\"` instead of \"c_name\" in the `TFE_OpSetAttr##atype(op, c_name, static_cast<ctype>(value));` line above, it works. So I guess it does have to do with that space being potentially deallocated. In the case of `TF_SetAttrType`, does it not keep a reference to that string?"}