{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11977", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11977/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11977/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11977/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/11977", "id": 247495029, "node_id": "MDU6SXNzdWUyNDc0OTUwMjk=", "number": 11977, "title": "Multiple runs of Configure with MKL enabled leads to cyclic symlinks", "user": {"login": "ultimatespirit", "id": 2450195, "node_id": "MDQ6VXNlcjI0NTAxOTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2450195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ultimatespirit", "html_url": "https://github.com/ultimatespirit", "followers_url": "https://api.github.com/users/ultimatespirit/followers", "following_url": "https://api.github.com/users/ultimatespirit/following{/other_user}", "gists_url": "https://api.github.com/users/ultimatespirit/gists{/gist_id}", "starred_url": "https://api.github.com/users/ultimatespirit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ultimatespirit/subscriptions", "organizations_url": "https://api.github.com/users/ultimatespirit/orgs", "repos_url": "https://api.github.com/users/ultimatespirit/repos", "events_url": "https://api.github.com/users/ultimatespirit/events{/privacy}", "received_events_url": "https://api.github.com/users/ultimatespirit/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "jart", "id": 49262, "node_id": "MDQ6VXNlcjQ5MjYy", "avatar_url": "https://avatars1.githubusercontent.com/u/49262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jart", "html_url": "https://github.com/jart", "followers_url": "https://api.github.com/users/jart/followers", "following_url": "https://api.github.com/users/jart/following{/other_user}", "gists_url": "https://api.github.com/users/jart/gists{/gist_id}", "starred_url": "https://api.github.com/users/jart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jart/subscriptions", "organizations_url": "https://api.github.com/users/jart/orgs", "repos_url": "https://api.github.com/users/jart/repos", "events_url": "https://api.github.com/users/jart/events{/privacy}", "received_events_url": "https://api.github.com/users/jart/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jart", "id": 49262, "node_id": "MDQ6VXNlcjQ5MjYy", "avatar_url": "https://avatars1.githubusercontent.com/u/49262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jart", "html_url": "https://github.com/jart", "followers_url": "https://api.github.com/users/jart/followers", "following_url": "https://api.github.com/users/jart/following{/other_user}", "gists_url": "https://api.github.com/users/jart/gists{/gist_id}", "starred_url": "https://api.github.com/users/jart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jart/subscriptions", "organizations_url": "https://api.github.com/users/jart/orgs", "repos_url": "https://api.github.com/users/jart/repos", "events_url": "https://api.github.com/users/jart/events{/privacy}", "received_events_url": "https://api.github.com/users/jart/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2017-08-02T19:22:24Z", "updated_at": "2018-01-19T04:56:29Z", "closed_at": "2018-01-19T04:56:29Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Centos 7</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Compilation from source</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.2.1 and v1.3.0-r1</li>\n<li><strong>Python version</strong>: Python 3.5.2</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.5.2</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>: ./configure [enter] [enter] y y [enter till complete], twice</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Currently the way the configure script is written for the MKL decision branch it does not ensure no cyclic symbolic links are created for libdl.so.2</p>\n<p>This becomes a problem if MKL has been downloaded already upon a re-run of the configure script and the first line of the locate output happens to be the symlink located in the third_party/mkl directory. If that occurs then the <code>ln -sf</code> command will create a cyclic symlink.</p>\n<p>This can be fixed either by checking that \"$loc\" is not the same string as \"$PWD\"/third_party/mkl/libdl.so.2 or by checking for the existence of the symlink before the <code>ln</code> command.</p>\n<h3>Source code / logs</h3>\n<p>configure, line 276, 277.<br>\n<code>loc=$(locate -e libdl.so.2 | sed -n 1p)</code> &lt;- can end up returning the destination file if it already exists</p>\n<p><code>ln -sf $loc third_party/mkl/libdl.so.2</code> &lt;- if \"$loc\" == \"$PWD\"/third_party/mkl/libdl.so.2, creates cyclic link.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Centos 7\nTensorFlow installed from (source or binary): Compilation from source\nTensorFlow version (use command below): v1.2.1 and v1.3.0-r1\nPython version: Python 3.5.2\nBazel version (if compiling from source): 0.5.2\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce: ./configure [enter] [enter] y y [enter till complete], twice\n\nDescribe the problem\nCurrently the way the configure script is written for the MKL decision branch it does not ensure no cyclic symbolic links are created for libdl.so.2\nThis becomes a problem if MKL has been downloaded already upon a re-run of the configure script and the first line of the locate output happens to be the symlink located in the third_party/mkl directory. If that occurs then the ln -sf command will create a cyclic symlink.\nThis can be fixed either by checking that \"$loc\" is not the same string as \"$PWD\"/third_party/mkl/libdl.so.2 or by checking for the existence of the symlink before the ln command.\nSource code / logs\nconfigure, line 276, 277.\nloc=$(locate -e libdl.so.2 | sed -n 1p) <- can end up returning the destination file if it already exists\nln -sf $loc third_party/mkl/libdl.so.2 <- if \"$loc\" == \"$PWD\"/third_party/mkl/libdl.so.2, creates cyclic link.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Centos 7\r\n- **TensorFlow installed from (source or binary)**: Compilation from source\r\n- **TensorFlow version (use command below)**: v1.2.1 and v1.3.0-r1\r\n- **Python version**: Python 3.5.2\r\n- **Bazel version (if compiling from source)**: 0.5.2\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: ./configure [enter] [enter] y y [enter till complete], twice\r\n\r\n### Describe the problem\r\nCurrently the way the configure script is written for the MKL decision branch it does not ensure no cyclic symbolic links are created for libdl.so.2\r\n\r\nThis becomes a problem if MKL has been downloaded already upon a re-run of the configure script and the first line of the locate output happens to be the symlink located in the third_party/mkl directory. If that occurs then the `ln -sf` command will create a cyclic symlink.\r\n\r\nThis can be fixed either by checking that \"$loc\" is not the same string as \"$PWD\"/third_party/mkl/libdl.so.2 or by checking for the existence of the symlink before the `ln` command.\r\n\r\n\r\n### Source code / logs\r\nconfigure, line 276, 277.\r\n`loc=$(locate -e libdl.so.2 | sed -n 1p)` <- can end up returning the destination file if it already exists\r\n\r\n`ln -sf $loc third_party/mkl/libdl.so.2` <- if \"$loc\" == \"$PWD\"/third_party/mkl/libdl.so.2, creates cyclic link."}