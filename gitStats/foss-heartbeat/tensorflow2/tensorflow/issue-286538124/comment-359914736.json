{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/359914736", "html_url": "https://github.com/tensorflow/tensorflow/issues/15921#issuecomment-359914736", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15921", "id": 359914736, "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTkxNDczNg==", "user": {"login": "jeffxtang", "id": 535090, "node_id": "MDQ6VXNlcjUzNTA5MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/535090?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeffxtang", "html_url": "https://github.com/jeffxtang", "followers_url": "https://api.github.com/users/jeffxtang/followers", "following_url": "https://api.github.com/users/jeffxtang/following{/other_user}", "gists_url": "https://api.github.com/users/jeffxtang/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeffxtang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeffxtang/subscriptions", "organizations_url": "https://api.github.com/users/jeffxtang/orgs", "repos_url": "https://api.github.com/users/jeffxtang/repos", "events_url": "https://api.github.com/users/jeffxtang/events{/privacy}", "received_events_url": "https://api.github.com/users/jeffxtang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-23T20:10:10Z", "updated_at": "2018-01-23T20:10:10Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Some progress: having realized the unregistered DecodeWav error is similar to the old familiar DecodeJpeg issue (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"160436607\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/2883\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/2883/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/2883\">#2883</a>), I ran strip_unused on the pb as follows:</p>\n<pre><code>bazel-bin/tensorflow/python/tools/strip_unused \\\n  --input_graph=/tf_files/speech_commands_graph.pb \\\n  --output_graph=/tf_files/stripped_speech_commands_graph.pb \\\n  --input_node_names=wav_data,decoded_sample_data \\\n  --output_node_names=labels_softmax \\\n  --input_binary=true\n</code></pre>\n<p>It does get rid of the DecodeWav op in the resulting graph. But running the new stripped graph on iOS now gives me an <code>Op type not registered 'AudioSpectrogram'</code> error.<br>\nAlso there's no object file audio*.o generated after build_all_ios.sh is done, although <code>AudioSpectrogramOp</code> is specified in <code>tensorflow/core/framework/ops_to_register.h</code>:</p>\n<pre><code>Jeffs-MacBook-Pro:tensorflow-1.4.0 zero2one$ find  . -name decode*.o\n./tensorflow/contrib/makefile/gen/obj/ios_ARM64/tensorflow/core/kernels/decode_bmp_op.o\n./tensorflow/contrib/makefile/gen/obj/ios_ARM64/tensorflow/core/kernels/decode_wav_op.o\n./tensorflow/contrib/makefile/gen/obj/ios_ARMV7/tensorflow/core/kernels/decode_bmp_op.o\n./tensorflow/contrib/makefile/gen/obj/ios_ARMV7/tensorflow/core/kernels/decode_wav_op.o\n./tensorflow/contrib/makefile/gen/obj/ios_ARMV7S/tensorflow/core/kernels/decode_bmp_op.o\n./tensorflow/contrib/makefile/gen/obj/ios_ARMV7S/tensorflow/core/kernels/decode_wav_op.o\n./tensorflow/contrib/makefile/gen/obj/ios_I386/tensorflow/core/kernels/decode_bmp_op.o\n./tensorflow/contrib/makefile/gen/obj/ios_I386/tensorflow/core/kernels/decode_wav_op.o\n./tensorflow/contrib/makefile/gen/obj/ios_X86_64/tensorflow/core/kernels/decode_bmp_op.o\n./tensorflow/contrib/makefile/gen/obj/ios_X86_64/tensorflow/core/kernels/decode_wav_op.o\nJeffs-MacBook-Pro:tensorflow-1.4.0 zero2one$ find  . -name audio*_op.o\nJeffs-MacBook-Pro:tensorflow-1.4.0 zero2one$ \n</code></pre>", "body_text": "Some progress: having realized the unregistered DecodeWav error is similar to the old familiar DecodeJpeg issue (#2883), I ran strip_unused on the pb as follows:\nbazel-bin/tensorflow/python/tools/strip_unused \\\n  --input_graph=/tf_files/speech_commands_graph.pb \\\n  --output_graph=/tf_files/stripped_speech_commands_graph.pb \\\n  --input_node_names=wav_data,decoded_sample_data \\\n  --output_node_names=labels_softmax \\\n  --input_binary=true\n\nIt does get rid of the DecodeWav op in the resulting graph. But running the new stripped graph on iOS now gives me an Op type not registered 'AudioSpectrogram' error.\nAlso there's no object file audio*.o generated after build_all_ios.sh is done, although AudioSpectrogramOp is specified in tensorflow/core/framework/ops_to_register.h:\nJeffs-MacBook-Pro:tensorflow-1.4.0 zero2one$ find  . -name decode*.o\n./tensorflow/contrib/makefile/gen/obj/ios_ARM64/tensorflow/core/kernels/decode_bmp_op.o\n./tensorflow/contrib/makefile/gen/obj/ios_ARM64/tensorflow/core/kernels/decode_wav_op.o\n./tensorflow/contrib/makefile/gen/obj/ios_ARMV7/tensorflow/core/kernels/decode_bmp_op.o\n./tensorflow/contrib/makefile/gen/obj/ios_ARMV7/tensorflow/core/kernels/decode_wav_op.o\n./tensorflow/contrib/makefile/gen/obj/ios_ARMV7S/tensorflow/core/kernels/decode_bmp_op.o\n./tensorflow/contrib/makefile/gen/obj/ios_ARMV7S/tensorflow/core/kernels/decode_wav_op.o\n./tensorflow/contrib/makefile/gen/obj/ios_I386/tensorflow/core/kernels/decode_bmp_op.o\n./tensorflow/contrib/makefile/gen/obj/ios_I386/tensorflow/core/kernels/decode_wav_op.o\n./tensorflow/contrib/makefile/gen/obj/ios_X86_64/tensorflow/core/kernels/decode_bmp_op.o\n./tensorflow/contrib/makefile/gen/obj/ios_X86_64/tensorflow/core/kernels/decode_wav_op.o\nJeffs-MacBook-Pro:tensorflow-1.4.0 zero2one$ find  . -name audio*_op.o\nJeffs-MacBook-Pro:tensorflow-1.4.0 zero2one$", "body": "Some progress: having realized the unregistered DecodeWav error is similar to the old familiar DecodeJpeg issue (https://github.com/tensorflow/tensorflow/issues/2883), I ran strip_unused on the pb as follows:\r\n```\r\nbazel-bin/tensorflow/python/tools/strip_unused \\\r\n  --input_graph=/tf_files/speech_commands_graph.pb \\\r\n  --output_graph=/tf_files/stripped_speech_commands_graph.pb \\\r\n  --input_node_names=wav_data,decoded_sample_data \\\r\n  --output_node_names=labels_softmax \\\r\n  --input_binary=true\r\n```\r\nIt does get rid of the DecodeWav op in the resulting graph. But running the new stripped graph on iOS now gives me an `Op type not registered 'AudioSpectrogram'` error. \r\nAlso there's no object file audio*.o generated after build_all_ios.sh is done, although `AudioSpectrogramOp` is specified in `tensorflow/core/framework/ops_to_register.h`:\r\n```\r\nJeffs-MacBook-Pro:tensorflow-1.4.0 zero2one$ find  . -name decode*.o\r\n./tensorflow/contrib/makefile/gen/obj/ios_ARM64/tensorflow/core/kernels/decode_bmp_op.o\r\n./tensorflow/contrib/makefile/gen/obj/ios_ARM64/tensorflow/core/kernels/decode_wav_op.o\r\n./tensorflow/contrib/makefile/gen/obj/ios_ARMV7/tensorflow/core/kernels/decode_bmp_op.o\r\n./tensorflow/contrib/makefile/gen/obj/ios_ARMV7/tensorflow/core/kernels/decode_wav_op.o\r\n./tensorflow/contrib/makefile/gen/obj/ios_ARMV7S/tensorflow/core/kernels/decode_bmp_op.o\r\n./tensorflow/contrib/makefile/gen/obj/ios_ARMV7S/tensorflow/core/kernels/decode_wav_op.o\r\n./tensorflow/contrib/makefile/gen/obj/ios_I386/tensorflow/core/kernels/decode_bmp_op.o\r\n./tensorflow/contrib/makefile/gen/obj/ios_I386/tensorflow/core/kernels/decode_wav_op.o\r\n./tensorflow/contrib/makefile/gen/obj/ios_X86_64/tensorflow/core/kernels/decode_bmp_op.o\r\n./tensorflow/contrib/makefile/gen/obj/ios_X86_64/tensorflow/core/kernels/decode_wav_op.o\r\nJeffs-MacBook-Pro:tensorflow-1.4.0 zero2one$ find  . -name audio*_op.o\r\nJeffs-MacBook-Pro:tensorflow-1.4.0 zero2one$ \r\n```\r\n\r\n"}