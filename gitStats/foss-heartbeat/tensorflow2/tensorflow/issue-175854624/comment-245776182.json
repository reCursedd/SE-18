{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/245776182", "html_url": "https://github.com/tensorflow/tensorflow/issues/4283#issuecomment-245776182", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4283", "id": 245776182, "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTc3NjE4Mg==", "user": {"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-08T23:41:36Z", "updated_at": "2016-09-08T23:41:36Z", "author_association": "MEMBER", "body_html": "<p>There's no problem with using TF in production (we use it plenty). But I <em>would</em> advise against using TF <em>at head using continuous updates</em> in a production environment.</p>\n<p>To use TF in production, I would use a release (or, if you must, a specific hash), and update TF only in a controlled manner. In other words, treat it the same as other libraries you use in production: when you update the library to a new version, verify that everything works afterwards.</p>\n<p>Even updating more mature libraries like numpy to a new version is not something you can safely do in production.</p>\n<p>TF is no different in principle, although because of various factors (cuda, rapid development) people are much more likely to use TF at head, and so the pressure up update is much higher.</p>", "body_text": "There's no problem with using TF in production (we use it plenty). But I would advise against using TF at head using continuous updates in a production environment.\nTo use TF in production, I would use a release (or, if you must, a specific hash), and update TF only in a controlled manner. In other words, treat it the same as other libraries you use in production: when you update the library to a new version, verify that everything works afterwards.\nEven updating more mature libraries like numpy to a new version is not something you can safely do in production.\nTF is no different in principle, although because of various factors (cuda, rapid development) people are much more likely to use TF at head, and so the pressure up update is much higher.", "body": "There's no problem with using TF in production (we use it plenty). But I _would_ advise against using TF _at head using continuous updates_ in a production environment.\n\nTo use TF in production, I would use a release (or, if you must, a specific hash), and update TF only in a controlled manner. In other words, treat it the same as other libraries you use in production: when you update the library to a new version, verify that everything works afterwards. \n\nEven updating more mature libraries like numpy to a new version is not something you can safely do in production. \n\nTF is no different in principle, although because of various factors (cuda, rapid development) people are much more likely to use TF at head, and so the pressure up update is much higher. \n"}