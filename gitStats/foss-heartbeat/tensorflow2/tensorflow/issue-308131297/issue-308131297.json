{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17962", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17962/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17962/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17962/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17962", "id": 308131297, "node_id": "MDU6SXNzdWUzMDgxMzEyOTc=", "number": 17962, "title": "Stopping back-prop when using tf.cond", "user": {"login": "DavidBegert", "id": 18473206, "node_id": "MDQ6VXNlcjE4NDczMjA2", "avatar_url": "https://avatars3.githubusercontent.com/u/18473206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DavidBegert", "html_url": "https://github.com/DavidBegert", "followers_url": "https://api.github.com/users/DavidBegert/followers", "following_url": "https://api.github.com/users/DavidBegert/following{/other_user}", "gists_url": "https://api.github.com/users/DavidBegert/gists{/gist_id}", "starred_url": "https://api.github.com/users/DavidBegert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DavidBegert/subscriptions", "organizations_url": "https://api.github.com/users/DavidBegert/orgs", "repos_url": "https://api.github.com/users/DavidBegert/repos", "events_url": "https://api.github.com/users/DavidBegert/events{/privacy}", "received_events_url": "https://api.github.com/users/DavidBegert/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "jart", "id": 49262, "node_id": "MDQ6VXNlcjQ5MjYy", "avatar_url": "https://avatars1.githubusercontent.com/u/49262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jart", "html_url": "https://github.com/jart", "followers_url": "https://api.github.com/users/jart/followers", "following_url": "https://api.github.com/users/jart/following{/other_user}", "gists_url": "https://api.github.com/users/jart/gists{/gist_id}", "starred_url": "https://api.github.com/users/jart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jart/subscriptions", "organizations_url": "https://api.github.com/users/jart/orgs", "repos_url": "https://api.github.com/users/jart/repos", "events_url": "https://api.github.com/users/jart/events{/privacy}", "received_events_url": "https://api.github.com/users/jart/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jart", "id": 49262, "node_id": "MDQ6VXNlcjQ5MjYy", "avatar_url": "https://avatars1.githubusercontent.com/u/49262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jart", "html_url": "https://github.com/jart", "followers_url": "https://api.github.com/users/jart/followers", "following_url": "https://api.github.com/users/jart/following{/other_user}", "gists_url": "https://api.github.com/users/jart/gists{/gist_id}", "starred_url": "https://api.github.com/users/jart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jart/subscriptions", "organizations_url": "https://api.github.com/users/jart/orgs", "repos_url": "https://api.github.com/users/jart/repos", "events_url": "https://api.github.com/users/jart/events{/privacy}", "received_events_url": "https://api.github.com/users/jart/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-03-23T18:12:12Z", "updated_at": "2018-03-25T01:07:06Z", "closed_at": "2018-03-25T01:07:06Z", "author_association": "NONE", "body_html": "<p>I am trying to stop back-prop from happening through one branch of a tf.cond statement. I am doing two forward passes through a CNN and trying to only back-prop the one with lower TCE (train_cross_entropy). The code is as follows:</p>\n<pre><code>def f1(): \n        with tf.control_dependencies([tf.stop_gradient(train_cross_entropy2)]):\n            return train_cross_entropy1\ndef f2():\n        with tf.control_dependencies([tf.stop_gradient(train_cross_entropy1)]):\n            return train_cross_entropy2\ntrain_cross_entropy = tf.cond(train_cross_entropy1 &lt; train_cross_entropy2, f1, f2) \n</code></pre>\n<p>The speed of this approach is equivalent to writing:</p>\n<pre><code>train_cross_entropy = tf.add(train_cross_entropy1, train_cross_entropy2)\n</code></pre>\n<p>Whereas I would hope that the speed would be more similar to</p>\n<pre><code>train_cross_entropy = tf.add(train_cross_entropy1, tf.stop_gradient(train_cross_entropy2))\n</code></pre>\n<p>which happens to compute gradients about twice as fast.<br>\nI opened up a stack overflow question (<a href=\"https://stackoverflow.com/questions/49436264/proper-use-of-tf-cond-in-cnn/49439351\" rel=\"nofollow\">https://stackoverflow.com/questions/49436264/proper-use-of-tf-cond-in-cnn/49439351</a>) but I haven't found any help and I am wondering if this is the expected behaviour?<br>\nHow do I go about stopping gradients from being calculated backwards through both parts of the graph?<br>\nThanks!</p>", "body_text": "I am trying to stop back-prop from happening through one branch of a tf.cond statement. I am doing two forward passes through a CNN and trying to only back-prop the one with lower TCE (train_cross_entropy). The code is as follows:\ndef f1(): \n        with tf.control_dependencies([tf.stop_gradient(train_cross_entropy2)]):\n            return train_cross_entropy1\ndef f2():\n        with tf.control_dependencies([tf.stop_gradient(train_cross_entropy1)]):\n            return train_cross_entropy2\ntrain_cross_entropy = tf.cond(train_cross_entropy1 < train_cross_entropy2, f1, f2) \n\nThe speed of this approach is equivalent to writing:\ntrain_cross_entropy = tf.add(train_cross_entropy1, train_cross_entropy2)\n\nWhereas I would hope that the speed would be more similar to\ntrain_cross_entropy = tf.add(train_cross_entropy1, tf.stop_gradient(train_cross_entropy2))\n\nwhich happens to compute gradients about twice as fast.\nI opened up a stack overflow question (https://stackoverflow.com/questions/49436264/proper-use-of-tf-cond-in-cnn/49439351) but I haven't found any help and I am wondering if this is the expected behaviour?\nHow do I go about stopping gradients from being calculated backwards through both parts of the graph?\nThanks!", "body": "I am trying to stop back-prop from happening through one branch of a tf.cond statement. I am doing two forward passes through a CNN and trying to only back-prop the one with lower TCE (train_cross_entropy). The code is as follows: \r\n```    \r\ndef f1(): \r\n        with tf.control_dependencies([tf.stop_gradient(train_cross_entropy2)]):\r\n            return train_cross_entropy1\r\ndef f2():\r\n        with tf.control_dependencies([tf.stop_gradient(train_cross_entropy1)]):\r\n            return train_cross_entropy2\r\ntrain_cross_entropy = tf.cond(train_cross_entropy1 < train_cross_entropy2, f1, f2) \r\n```\r\nThe speed of this approach is equivalent to writing: \r\n```\r\ntrain_cross_entropy = tf.add(train_cross_entropy1, train_cross_entropy2)\r\n```\r\nWhereas I would hope that the speed would be more similar to\r\n```\r\ntrain_cross_entropy = tf.add(train_cross_entropy1, tf.stop_gradient(train_cross_entropy2))\r\n```\r\nwhich happens to compute gradients about twice as fast.\r\nI opened up a stack overflow question (https://stackoverflow.com/questions/49436264/proper-use-of-tf-cond-in-cnn/49439351) but I haven't found any help and I am wondering if this is the expected behaviour? \r\nHow do I go about stopping gradients from being calculated backwards through both parts of the graph? \r\nThanks!"}