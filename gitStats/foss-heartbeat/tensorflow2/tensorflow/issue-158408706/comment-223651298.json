{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/223651298", "html_url": "https://github.com/tensorflow/tensorflow/issues/2641#issuecomment-223651298", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2641", "id": 223651298, "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzY1MTI5OA==", "user": {"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-03T18:07:45Z", "updated_at": "2016-06-03T18:07:45Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The gradients are computed by computing the full prod and then dividing, which is broken as you point out.  For example, for a length two produce <code>x *  y</code> the gradient w.r.t. <code>x</code> is <code>x * y / y</code>.  Indeed, there's an ancient TODO in the code that it is broken.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=890531\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ibab\">@ibab</a>, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6969686\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/benoitsteiner\">@benoitsteiner</a>: The easiest way to fix this would be to do two scan products to get the sequence of partial products from both directions, then multiply them together to get all products with one element removed.  Unfortunately, we don't yet have scan.</p>", "body_text": "The gradients are computed by computing the full prod and then dividing, which is broken as you point out.  For example, for a length two produce x *  y the gradient w.r.t. x is x * y / y.  Indeed, there's an ancient TODO in the code that it is broken.\n@ibab, @benoitsteiner: The easiest way to fix this would be to do two scan products to get the sequence of partial products from both directions, then multiply them together to get all products with one element removed.  Unfortunately, we don't yet have scan.", "body": "The gradients are computed by computing the full prod and then dividing, which is broken as you point out.  For example, for a length two produce `x *  y` the gradient w.r.t. `x` is `x * y / y`.  Indeed, there's an ancient TODO in the code that it is broken.\n\n@ibab, @benoitsteiner: The easiest way to fix this would be to do two scan products to get the sequence of partial products from both directions, then multiply them together to get all products with one element removed.  Unfortunately, we don't yet have scan.\n"}