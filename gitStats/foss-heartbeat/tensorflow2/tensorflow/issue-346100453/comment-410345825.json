{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/410345825", "html_url": "https://github.com/tensorflow/tensorflow/issues/21267#issuecomment-410345825", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21267", "id": 410345825, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDM0NTgyNQ==", "user": {"login": "albertz", "id": 59132, "node_id": "MDQ6VXNlcjU5MTMy", "avatar_url": "https://avatars0.githubusercontent.com/u/59132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albertz", "html_url": "https://github.com/albertz", "followers_url": "https://api.github.com/users/albertz/followers", "following_url": "https://api.github.com/users/albertz/following{/other_user}", "gists_url": "https://api.github.com/users/albertz/gists{/gist_id}", "starred_url": "https://api.github.com/users/albertz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albertz/subscriptions", "organizations_url": "https://api.github.com/users/albertz/orgs", "repos_url": "https://api.github.com/users/albertz/repos", "events_url": "https://api.github.com/users/albertz/events{/privacy}", "received_events_url": "https://api.github.com/users/albertz/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-03T18:57:03Z", "updated_at": "2018-08-03T18:57:03Z", "author_association": "NONE", "body_html": "<p>Thanks, <code>tf.fill</code> is actually what I wanted. But from the users perspective, why make this a difference? E.g. check inside <code>tf.constant</code> if the shape is constant, then make it a <code>Const</code>, otherwise use a <code>Fill</code>, i.e. basically merge <code>tf.constant</code> and <code>tf.fill</code>. I would have expected that <code>tf.constant</code> supports the same kind of shapes as <code>tf.zeros</code> or <code>tf.ones</code>. But maybe just because I did somehow miss <code>tf.fill</code>. If you don't like this suggestion, then maybe at least <code>tf.fill</code> should be mentioned in the documentation of <code>tf.constant</code>. Also, currently it is not totally clear to me from the documentation that <code>shape</code> must be constant.</p>", "body_text": "Thanks, tf.fill is actually what I wanted. But from the users perspective, why make this a difference? E.g. check inside tf.constant if the shape is constant, then make it a Const, otherwise use a Fill, i.e. basically merge tf.constant and tf.fill. I would have expected that tf.constant supports the same kind of shapes as tf.zeros or tf.ones. But maybe just because I did somehow miss tf.fill. If you don't like this suggestion, then maybe at least tf.fill should be mentioned in the documentation of tf.constant. Also, currently it is not totally clear to me from the documentation that shape must be constant.", "body": "Thanks, `tf.fill` is actually what I wanted. But from the users perspective, why make this a difference? E.g. check inside `tf.constant` if the shape is constant, then make it a `Const`, otherwise use a `Fill`, i.e. basically merge `tf.constant` and `tf.fill`. I would have expected that `tf.constant` supports the same kind of shapes as `tf.zeros` or `tf.ones`. But maybe just because I did somehow miss `tf.fill`. If you don't like this suggestion, then maybe at least `tf.fill` should be mentioned in the documentation of `tf.constant`. Also, currently it is not totally clear to me from the documentation that `shape` must be constant."}