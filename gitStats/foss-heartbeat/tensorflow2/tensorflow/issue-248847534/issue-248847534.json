{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12119", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12119/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12119/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12119/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12119", "id": 248847534, "node_id": "MDU6SXNzdWUyNDg4NDc1MzQ=", "number": 12119, "title": "Please add predict_proba to estimators class not in TF1.3 DNN", "user": {"login": "dartdog", "id": 87834, "node_id": "MDQ6VXNlcjg3ODM0", "avatar_url": "https://avatars2.githubusercontent.com/u/87834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dartdog", "html_url": "https://github.com/dartdog", "followers_url": "https://api.github.com/users/dartdog/followers", "following_url": "https://api.github.com/users/dartdog/following{/other_user}", "gists_url": "https://api.github.com/users/dartdog/gists{/gist_id}", "starred_url": "https://api.github.com/users/dartdog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dartdog/subscriptions", "organizations_url": "https://api.github.com/users/dartdog/orgs", "repos_url": "https://api.github.com/users/dartdog/repos", "events_url": "https://api.github.com/users/dartdog/events{/privacy}", "received_events_url": "https://api.github.com/users/dartdog/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-08T21:10:23Z", "updated_at": "2017-08-09T18:23:39Z", "closed_at": "2017-08-09T18:18:50Z", "author_association": "NONE", "body_html": "<h3>Describe the problem</h3>\n<p>Feature Request:<br>\nThe TF.learn library in TF1.2 has perdict_proba for getting probability estimates for predictions it is particularly helpful for setting probability levels up or down or just measuring them.. it is a super helpful function for analysis as well as correlations can be drawn to input variables...</p>\n<p>There are many use cases where you may want to accept a prediction with less than a 50/50 (think unbalanced classs)<br>\nand there are other cases where you want greater certainty,  for some medical decisions or credit scoring..</p>\n<p>The DNN class in TF 1.3 with the estimator does not seem to have this function. (while tf.learn dnn in TF1.2 does...)</p>\n<p>Estimators seem to be the way of the future, but at least IMHO we need this to make that move..</p>", "body_text": "Describe the problem\nFeature Request:\nThe TF.learn library in TF1.2 has perdict_proba for getting probability estimates for predictions it is particularly helpful for setting probability levels up or down or just measuring them.. it is a super helpful function for analysis as well as correlations can be drawn to input variables...\nThere are many use cases where you may want to accept a prediction with less than a 50/50 (think unbalanced classs)\nand there are other cases where you want greater certainty,  for some medical decisions or credit scoring..\nThe DNN class in TF 1.3 with the estimator does not seem to have this function. (while tf.learn dnn in TF1.2 does...)\nEstimators seem to be the way of the future, but at least IMHO we need this to make that move..", "body": "### Describe the problem\r\n\r\nFeature Request:\r\nThe TF.learn library in TF1.2 has perdict_proba for getting probability estimates for predictions it is particularly helpful for setting probability levels up or down or just measuring them.. it is a super helpful function for analysis as well as correlations can be drawn to input variables...\r\n\r\nThere are many use cases where you may want to accept a prediction with less than a 50/50 (think unbalanced classs)\r\nand there are other cases where you want greater certainty,  for some medical decisions or credit scoring..\r\n\r\nThe DNN class in TF 1.3 with the estimator does not seem to have this function. (while tf.learn dnn in TF1.2 does...)\r\n\r\nEstimators seem to be the way of the future, but at least IMHO we need this to make that move..\r\n\r\n\r\n"}