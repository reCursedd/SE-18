{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13580", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13580/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13580/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13580/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/13580", "id": 263883909, "node_id": "MDU6SXNzdWUyNjM4ODM5MDk=", "number": 13580, "title": "Equeued values to Queue get chopped-off if the Queue isn't instantiated properly.", "user": {"login": "bnoreus", "id": 13115264, "node_id": "MDQ6VXNlcjEzMTE1MjY0", "avatar_url": "https://avatars3.githubusercontent.com/u/13115264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnoreus", "html_url": "https://github.com/bnoreus", "followers_url": "https://api.github.com/users/bnoreus/followers", "following_url": "https://api.github.com/users/bnoreus/following{/other_user}", "gists_url": "https://api.github.com/users/bnoreus/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnoreus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnoreus/subscriptions", "organizations_url": "https://api.github.com/users/bnoreus/orgs", "repos_url": "https://api.github.com/users/bnoreus/repos", "events_url": "https://api.github.com/users/bnoreus/events{/privacy}", "received_events_url": "https://api.github.com/users/bnoreus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "reedwm", "id": 6510203, "node_id": "MDQ6VXNlcjY1MTAyMDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/6510203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reedwm", "html_url": "https://github.com/reedwm", "followers_url": "https://api.github.com/users/reedwm/followers", "following_url": "https://api.github.com/users/reedwm/following{/other_user}", "gists_url": "https://api.github.com/users/reedwm/gists{/gist_id}", "starred_url": "https://api.github.com/users/reedwm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reedwm/subscriptions", "organizations_url": "https://api.github.com/users/reedwm/orgs", "repos_url": "https://api.github.com/users/reedwm/repos", "events_url": "https://api.github.com/users/reedwm/events{/privacy}", "received_events_url": "https://api.github.com/users/reedwm/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "reedwm", "id": 6510203, "node_id": "MDQ6VXNlcjY1MTAyMDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/6510203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reedwm", "html_url": "https://github.com/reedwm", "followers_url": "https://api.github.com/users/reedwm/followers", "following_url": "https://api.github.com/users/reedwm/following{/other_user}", "gists_url": "https://api.github.com/users/reedwm/gists{/gist_id}", "starred_url": "https://api.github.com/users/reedwm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reedwm/subscriptions", "organizations_url": "https://api.github.com/users/reedwm/orgs", "repos_url": "https://api.github.com/users/reedwm/repos", "events_url": "https://api.github.com/users/reedwm/events{/privacy}", "received_events_url": "https://api.github.com/users/reedwm/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2017-10-09T12:51:33Z", "updated_at": "2018-04-03T02:15:11Z", "closed_at": "2018-04-03T02:15:11Z", "author_association": "NONE", "body_html": "<h3>Describe the problem</h3>\n<p>In QueueBase._check_enqueue_dtypes, the following code is run:<br>\n<code>tensors = [] for i, (val, dtype) in enumerate(zip(vals, self._dtypes)): tensors.append(ops.convert_to_tensor(val, dtype=dtype, name=\"component_%d\" % i))</code></p>\n<p>The problem is if the user feeds a list of tensors as <code>val</code> (the input) which is longer than the <code>_dtypes</code>-construction argument of QueueBase.</p>\n<p>If the user hasn't specified a length of <code>_dtypes</code>, e.g if he constructs a Queue like this:<br>\n<code>tf.FIFOQueue(100,dtypes=tf.int64)</code><br>\nThe FIFOQueue will have a default length 1. This means that the zip-function in the code above will essentialy <strong>cut-off</strong> any data that is longer than 1 (or whatever length <code>_dtypes</code> is).</p>\n<p>I think an exception should be thrown if the user tries to enqueue a list of tensors that is of unexpected length.</p>\n<h3>Source code / logs</h3>\n<p><a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/data_flow_ops.py\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/data_flow_ops.py</a><br>\nLine 270, 271, 272 and 273</p>", "body_text": "Describe the problem\nIn QueueBase._check_enqueue_dtypes, the following code is run:\ntensors = [] for i, (val, dtype) in enumerate(zip(vals, self._dtypes)): tensors.append(ops.convert_to_tensor(val, dtype=dtype, name=\"component_%d\" % i))\nThe problem is if the user feeds a list of tensors as val (the input) which is longer than the _dtypes-construction argument of QueueBase.\nIf the user hasn't specified a length of _dtypes, e.g if he constructs a Queue like this:\ntf.FIFOQueue(100,dtypes=tf.int64)\nThe FIFOQueue will have a default length 1. This means that the zip-function in the code above will essentialy cut-off any data that is longer than 1 (or whatever length _dtypes is).\nI think an exception should be thrown if the user tries to enqueue a list of tensors that is of unexpected length.\nSource code / logs\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/data_flow_ops.py\nLine 270, 271, 272 and 273", "body": "### Describe the problem\r\n\r\nIn QueueBase._check_enqueue_dtypes, the following code is run:\r\n`tensors = []\r\n    for i, (val, dtype) in enumerate(zip(vals, self._dtypes)):\r\n      tensors.append(ops.convert_to_tensor(val, dtype=dtype,\r\n          name=\"component_%d\" % i))`\r\n\r\nThe problem is if the user feeds a list of tensors as `val` (the input) which is longer than the `_dtypes`-construction argument of QueueBase. \r\n\r\nIf the user hasn't specified a length of `_dtypes`, e.g if he constructs a Queue like this:\r\n`tf.FIFOQueue(100,dtypes=tf.int64)`\r\nThe FIFOQueue will have a default length 1. This means that the zip-function in the code above will essentialy **cut-off** any data that is longer than 1 (or whatever length `_dtypes` is).\r\n\r\nI think an exception should be thrown if the user tries to enqueue a list of tensors that is of unexpected length.\r\n\r\n\r\n\r\n\r\n### Source code / logs\r\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/data_flow_ops.py\r\nLine 270, 271, 272 and 273\r\n"}