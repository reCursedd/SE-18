{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11277", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11277/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11277/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11277/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/11277", "id": 240487710, "node_id": "MDU6SXNzdWUyNDA0ODc3MTA=", "number": 11277, "title": "Tensorflow Windows Bug with BeamSearchDecoder", "user": {"login": "madhurcodes", "id": 15893518, "node_id": "MDQ6VXNlcjE1ODkzNTE4", "avatar_url": "https://avatars2.githubusercontent.com/u/15893518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/madhurcodes", "html_url": "https://github.com/madhurcodes", "followers_url": "https://api.github.com/users/madhurcodes/followers", "following_url": "https://api.github.com/users/madhurcodes/following{/other_user}", "gists_url": "https://api.github.com/users/madhurcodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/madhurcodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/madhurcodes/subscriptions", "organizations_url": "https://api.github.com/users/madhurcodes/orgs", "repos_url": "https://api.github.com/users/madhurcodes/repos", "events_url": "https://api.github.com/users/madhurcodes/events{/privacy}", "received_events_url": "https://api.github.com/users/madhurcodes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2017-07-04T19:37:55Z", "updated_at": "2017-09-05T16:54:15Z", "closed_at": "2017-07-06T16:36:28Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes,</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Windows 10</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Pip Binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.2.1</li>\n<li><strong>Python version</strong>: 3.5</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>: 5.1</li>\n<li><strong>GPU model and memory</strong>: Nvidia Gtx 1080 (8 GB)</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Tensorflow on Windows gives an error (\"Multiple OpKernel registrations match NodeDef\") when I try to use BeamSearchDecoder in the seq2seq module. The same code works well on Ubuntu. Someone else on stackoverflow also had the <a href=\"https://stackoverflow.com/questions/44535111/error-when-restoring-model-multiple-opkernel-registrations-match-nodedef\" rel=\"nofollow\">same issue</a>. I have attached a snippet of code that generates the same error on my computer (original code is much bigger).</p>\n<h3>Source code to reproduce the problem</h3>\n<pre><code>import tensorflow as tf\nimport numpy as np\nsess = tf.Session()\ncell1 = tf.contrib.rnn.BasicLSTMCell(90)\nword_embedding = tf.convert_to_tensor(np.eye(1,1),dtype=tf.float32)\ndecoder = tf.contrib.seq2seq.BeamSearchDecoder(\n                                                        cell=cell1,\n                                                        embedding=lambda inputs : tf.nn.embedding_lookup(word_embedding, inputs),\n                                                        start_tokens=[1],\n                                                        end_token=2,\n                                                        initial_state=cell1.zero_state(batch_size=3,dtype=tf.float32),\n                                                        beam_width=3\n)\noutputs_decoding, last_state_decoding, _ = tf.contrib.seq2seq.dynamic_decode(\n                        decoder, maximum_iterations=1)\nsess.run(outputs_decoding)\n</code></pre>\n<h3>Error Message</h3>\n<pre><code>Traceback (most recent call last):\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1139, in _do_call\n    return fn(*args)\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1117, in _run_fn\n    self._extend_graph()\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1166, in _extend_graph\n    self._session, graph_def.SerializeToString(), status)\n  File \"C:\\Program Files\\Python35\\lib\\contextlib.py\", line 66, in __exit__\n    next(self.gen)\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\python\\framework\\errors_impl.py\", line 466, in raise_exception_on_not_ok_status\n    pywrap_tensorflow.TF_GetCode(status))\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Multiple OpKernel registrations match NodeDef 'decoder/GatherTree = GatherTree[T=DT_INT32](decoder/TensorArrayStack_1/TensorArrayGatherV3, decoder/TensorArrayStack_2/TensorArrayGatherV3, decoder/while/Exit_11)': 'op: \"GatherTree\" device_type: \"GPU\" constraint { name: \"T\" allowed_values { list { type: DT_INT32 } } }' and 'op: \"GatherTree\" device_type: \"GPU\" constraint { name: \"T\" allowed_values { list { type: DT_INT32 } } }'\n         [[Node: decoder/GatherTree = GatherTree[T=DT_INT32](decoder/TensorArrayStack_1/TensorArrayGatherV3, decoder/TensorArrayStack_2/TensorArrayGatherV3, decoder/while/Exit_11)]]\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"a.py\", line 16, in &lt;module&gt;\n    sess.run(outputs_decoding)\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 789, in run\n    run_metadata_ptr)\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 997, in _run\n    feed_dict_string, options, run_metadata)\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1132, in _do_run\n    target_list, options, run_metadata)\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1152, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Multiple OpKernel registrations match NodeDef 'decoder/GatherTree = GatherTree[T=DT_INT32](decoder/TensorArrayStack_1/TensorArrayGatherV3, decoder/TensorArrayStack_2/TensorArrayGatherV3, decoder/while/Exit_11)': 'op: \"GatherTree\" device_type: \"GPU\" constraint { name: \"T\" allowed_values { list { type: DT_INT32 } } }' and 'op: \"GatherTree\" device_type: \"GPU\" constraint { name: \"T\" allowed_values { list { type: DT_INT32 } } }'\n         [[Node: decoder/GatherTree = GatherTree[T=DT_INT32](decoder/TensorArrayStack_1/TensorArrayGatherV3, decoder/TensorArrayStack_2/TensorArrayGatherV3, decoder/while/Exit_11)]]\n\nCaused by op 'decoder/GatherTree', defined at:\n  File \"a.py\", line 15, in &lt;module&gt;\n    decoder, maximum_iterations=1)\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\contrib\\seq2seq\\python\\ops\\decoder.py\", line 296, in dynamic_decode\n    final_outputs, final_state, final_sequence_lengths)\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\contrib\\seq2seq\\python\\ops\\beam_search_decoder.py\", line 280, in finalize\n    sequence_length=sequence_lengths)\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\contrib\\seq2seq\\ops\\gen_beam_search_ops.py\", line 43, in gather_tree\n    sequence_length=sequence_length, name=name)\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 767, in apply_op\n    op_def=op_def)\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 2506, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1269, in __init__\n    self._traceback = _extract_stack()\n\nInvalidArgumentError (see above for traceback): Multiple OpKernel registrations match NodeDef 'decoder/GatherTree = GatherTree[T=DT_INT32](decoder/TensorArrayStack_1/TensorArrayGatherV3, decoder/TensorArrayStack_2/TensorArrayGatherV3, decoder/while/Exit_11)': 'op: \"GatherTree\" device_type: \"GPU\" constraint { name: \"T\" allowed_values { list { type: DT_INT32 } } }' and 'op: \"GatherTree\" device_type: \"GPU\" constraint { name: \"T\" allowed_values { list { type: DT_INT32 } } }'\n         [[Node: decoder/GatherTree = GatherTree[T=DT_INT32](decoder/TensorArrayStack_1/TensorArrayGatherV3, decoder/TensorArrayStack_2/TensorArrayGatherV3, decoder/while/Exit_11)]]\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes,\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10\nTensorFlow installed from (source or binary): Pip Binary\nTensorFlow version (use command below): 1.2.1\nPython version: 3.5\nBazel version (if compiling from source):\nCUDA/cuDNN version: 5.1\nGPU model and memory: Nvidia Gtx 1080 (8 GB)\n\nDescribe the problem\nTensorflow on Windows gives an error (\"Multiple OpKernel registrations match NodeDef\") when I try to use BeamSearchDecoder in the seq2seq module. The same code works well on Ubuntu. Someone else on stackoverflow also had the same issue. I have attached a snippet of code that generates the same error on my computer (original code is much bigger).\nSource code to reproduce the problem\nimport tensorflow as tf\nimport numpy as np\nsess = tf.Session()\ncell1 = tf.contrib.rnn.BasicLSTMCell(90)\nword_embedding = tf.convert_to_tensor(np.eye(1,1),dtype=tf.float32)\ndecoder = tf.contrib.seq2seq.BeamSearchDecoder(\n                                                        cell=cell1,\n                                                        embedding=lambda inputs : tf.nn.embedding_lookup(word_embedding, inputs),\n                                                        start_tokens=[1],\n                                                        end_token=2,\n                                                        initial_state=cell1.zero_state(batch_size=3,dtype=tf.float32),\n                                                        beam_width=3\n)\noutputs_decoding, last_state_decoding, _ = tf.contrib.seq2seq.dynamic_decode(\n                        decoder, maximum_iterations=1)\nsess.run(outputs_decoding)\n\nError Message\nTraceback (most recent call last):\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1139, in _do_call\n    return fn(*args)\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1117, in _run_fn\n    self._extend_graph()\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1166, in _extend_graph\n    self._session, graph_def.SerializeToString(), status)\n  File \"C:\\Program Files\\Python35\\lib\\contextlib.py\", line 66, in __exit__\n    next(self.gen)\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\python\\framework\\errors_impl.py\", line 466, in raise_exception_on_not_ok_status\n    pywrap_tensorflow.TF_GetCode(status))\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Multiple OpKernel registrations match NodeDef 'decoder/GatherTree = GatherTree[T=DT_INT32](decoder/TensorArrayStack_1/TensorArrayGatherV3, decoder/TensorArrayStack_2/TensorArrayGatherV3, decoder/while/Exit_11)': 'op: \"GatherTree\" device_type: \"GPU\" constraint { name: \"T\" allowed_values { list { type: DT_INT32 } } }' and 'op: \"GatherTree\" device_type: \"GPU\" constraint { name: \"T\" allowed_values { list { type: DT_INT32 } } }'\n         [[Node: decoder/GatherTree = GatherTree[T=DT_INT32](decoder/TensorArrayStack_1/TensorArrayGatherV3, decoder/TensorArrayStack_2/TensorArrayGatherV3, decoder/while/Exit_11)]]\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"a.py\", line 16, in <module>\n    sess.run(outputs_decoding)\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 789, in run\n    run_metadata_ptr)\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 997, in _run\n    feed_dict_string, options, run_metadata)\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1132, in _do_run\n    target_list, options, run_metadata)\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1152, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Multiple OpKernel registrations match NodeDef 'decoder/GatherTree = GatherTree[T=DT_INT32](decoder/TensorArrayStack_1/TensorArrayGatherV3, decoder/TensorArrayStack_2/TensorArrayGatherV3, decoder/while/Exit_11)': 'op: \"GatherTree\" device_type: \"GPU\" constraint { name: \"T\" allowed_values { list { type: DT_INT32 } } }' and 'op: \"GatherTree\" device_type: \"GPU\" constraint { name: \"T\" allowed_values { list { type: DT_INT32 } } }'\n         [[Node: decoder/GatherTree = GatherTree[T=DT_INT32](decoder/TensorArrayStack_1/TensorArrayGatherV3, decoder/TensorArrayStack_2/TensorArrayGatherV3, decoder/while/Exit_11)]]\n\nCaused by op 'decoder/GatherTree', defined at:\n  File \"a.py\", line 15, in <module>\n    decoder, maximum_iterations=1)\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\contrib\\seq2seq\\python\\ops\\decoder.py\", line 296, in dynamic_decode\n    final_outputs, final_state, final_sequence_lengths)\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\contrib\\seq2seq\\python\\ops\\beam_search_decoder.py\", line 280, in finalize\n    sequence_length=sequence_lengths)\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\contrib\\seq2seq\\ops\\gen_beam_search_ops.py\", line 43, in gather_tree\n    sequence_length=sequence_length, name=name)\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 767, in apply_op\n    op_def=op_def)\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 2506, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1269, in __init__\n    self._traceback = _extract_stack()\n\nInvalidArgumentError (see above for traceback): Multiple OpKernel registrations match NodeDef 'decoder/GatherTree = GatherTree[T=DT_INT32](decoder/TensorArrayStack_1/TensorArrayGatherV3, decoder/TensorArrayStack_2/TensorArrayGatherV3, decoder/while/Exit_11)': 'op: \"GatherTree\" device_type: \"GPU\" constraint { name: \"T\" allowed_values { list { type: DT_INT32 } } }' and 'op: \"GatherTree\" device_type: \"GPU\" constraint { name: \"T\" allowed_values { list { type: DT_INT32 } } }'\n         [[Node: decoder/GatherTree = GatherTree[T=DT_INT32](decoder/TensorArrayStack_1/TensorArrayGatherV3, decoder/TensorArrayStack_2/TensorArrayGatherV3, decoder/while/Exit_11)]]", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes, \r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10\r\n- **TensorFlow installed from (source or binary)**: Pip Binary \r\n- **TensorFlow version (use command below)**: 1.2.1\r\n- **Python version**: 3.5\r\n- **Bazel version (if compiling from source)**:\r\n- **CUDA/cuDNN version**: 5.1\r\n- **GPU model and memory**: Nvidia Gtx 1080 (8 GB)\r\n\r\n### Describe the problem\r\n\r\nTensorflow on Windows gives an error (\"Multiple OpKernel registrations match NodeDef\") when I try to use BeamSearchDecoder in the seq2seq module. The same code works well on Ubuntu. Someone else on stackoverflow also had the [same issue](https://stackoverflow.com/questions/44535111/error-when-restoring-model-multiple-opkernel-registrations-match-nodedef). I have attached a snippet of code that generates the same error on my computer (original code is much bigger).\r\n\r\n\r\n### Source code to reproduce the problem\r\n```\r\nimport tensorflow as tf\r\nimport numpy as np\r\nsess = tf.Session()\r\ncell1 = tf.contrib.rnn.BasicLSTMCell(90)\r\nword_embedding = tf.convert_to_tensor(np.eye(1,1),dtype=tf.float32)\r\ndecoder = tf.contrib.seq2seq.BeamSearchDecoder(\r\n                                                        cell=cell1,\r\n                                                        embedding=lambda inputs : tf.nn.embedding_lookup(word_embedding, inputs),\r\n                                                        start_tokens=[1],\r\n                                                        end_token=2,\r\n                                                        initial_state=cell1.zero_state(batch_size=3,dtype=tf.float32),\r\n                                                        beam_width=3\r\n)\r\noutputs_decoding, last_state_decoding, _ = tf.contrib.seq2seq.dynamic_decode(\r\n                        decoder, maximum_iterations=1)\r\nsess.run(outputs_decoding)\r\n```\r\n### Error Message\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1139, in _do_call\r\n    return fn(*args)\r\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1117, in _run_fn\r\n    self._extend_graph()\r\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1166, in _extend_graph\r\n    self._session, graph_def.SerializeToString(), status)\r\n  File \"C:\\Program Files\\Python35\\lib\\contextlib.py\", line 66, in __exit__\r\n    next(self.gen)\r\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\python\\framework\\errors_impl.py\", line 466, in raise_exception_on_not_ok_status\r\n    pywrap_tensorflow.TF_GetCode(status))\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Multiple OpKernel registrations match NodeDef 'decoder/GatherTree = GatherTree[T=DT_INT32](decoder/TensorArrayStack_1/TensorArrayGatherV3, decoder/TensorArrayStack_2/TensorArrayGatherV3, decoder/while/Exit_11)': 'op: \"GatherTree\" device_type: \"GPU\" constraint { name: \"T\" allowed_values { list { type: DT_INT32 } } }' and 'op: \"GatherTree\" device_type: \"GPU\" constraint { name: \"T\" allowed_values { list { type: DT_INT32 } } }'\r\n         [[Node: decoder/GatherTree = GatherTree[T=DT_INT32](decoder/TensorArrayStack_1/TensorArrayGatherV3, decoder/TensorArrayStack_2/TensorArrayGatherV3, decoder/while/Exit_11)]]\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"a.py\", line 16, in <module>\r\n    sess.run(outputs_decoding)\r\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 789, in run\r\n    run_metadata_ptr)\r\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 997, in _run\r\n    feed_dict_string, options, run_metadata)\r\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1132, in _do_run\r\n    target_list, options, run_metadata)\r\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1152, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Multiple OpKernel registrations match NodeDef 'decoder/GatherTree = GatherTree[T=DT_INT32](decoder/TensorArrayStack_1/TensorArrayGatherV3, decoder/TensorArrayStack_2/TensorArrayGatherV3, decoder/while/Exit_11)': 'op: \"GatherTree\" device_type: \"GPU\" constraint { name: \"T\" allowed_values { list { type: DT_INT32 } } }' and 'op: \"GatherTree\" device_type: \"GPU\" constraint { name: \"T\" allowed_values { list { type: DT_INT32 } } }'\r\n         [[Node: decoder/GatherTree = GatherTree[T=DT_INT32](decoder/TensorArrayStack_1/TensorArrayGatherV3, decoder/TensorArrayStack_2/TensorArrayGatherV3, decoder/while/Exit_11)]]\r\n\r\nCaused by op 'decoder/GatherTree', defined at:\r\n  File \"a.py\", line 15, in <module>\r\n    decoder, maximum_iterations=1)\r\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\contrib\\seq2seq\\python\\ops\\decoder.py\", line 296, in dynamic_decode\r\n    final_outputs, final_state, final_sequence_lengths)\r\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\contrib\\seq2seq\\python\\ops\\beam_search_decoder.py\", line 280, in finalize\r\n    sequence_length=sequence_lengths)\r\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\contrib\\seq2seq\\ops\\gen_beam_search_ops.py\", line 43, in gather_tree\r\n    sequence_length=sequence_length, name=name)\r\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 767, in apply_op\r\n    op_def=op_def)\r\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 2506, in create_op\r\n    original_op=self._default_original_op, op_def=op_def)\r\n  File \"C:\\Program Files\\Python35\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1269, in __init__\r\n    self._traceback = _extract_stack()\r\n\r\nInvalidArgumentError (see above for traceback): Multiple OpKernel registrations match NodeDef 'decoder/GatherTree = GatherTree[T=DT_INT32](decoder/TensorArrayStack_1/TensorArrayGatherV3, decoder/TensorArrayStack_2/TensorArrayGatherV3, decoder/while/Exit_11)': 'op: \"GatherTree\" device_type: \"GPU\" constraint { name: \"T\" allowed_values { list { type: DT_INT32 } } }' and 'op: \"GatherTree\" device_type: \"GPU\" constraint { name: \"T\" allowed_values { list { type: DT_INT32 } } }'\r\n         [[Node: decoder/GatherTree = GatherTree[T=DT_INT32](decoder/TensorArrayStack_1/TensorArrayGatherV3, decoder/TensorArrayStack_2/TensorArrayGatherV3, decoder/while/Exit_11)]]\r\n```"}