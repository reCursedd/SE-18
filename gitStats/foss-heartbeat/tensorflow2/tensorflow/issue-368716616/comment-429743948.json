{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/429743948", "html_url": "https://github.com/tensorflow/tensorflow/issues/22869#issuecomment-429743948", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22869", "id": 429743948, "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTc0Mzk0OA==", "user": {"login": "EnricoGiordano1992", "id": 3462634, "node_id": "MDQ6VXNlcjM0NjI2MzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3462634?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EnricoGiordano1992", "html_url": "https://github.com/EnricoGiordano1992", "followers_url": "https://api.github.com/users/EnricoGiordano1992/followers", "following_url": "https://api.github.com/users/EnricoGiordano1992/following{/other_user}", "gists_url": "https://api.github.com/users/EnricoGiordano1992/gists{/gist_id}", "starred_url": "https://api.github.com/users/EnricoGiordano1992/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EnricoGiordano1992/subscriptions", "organizations_url": "https://api.github.com/users/EnricoGiordano1992/orgs", "repos_url": "https://api.github.com/users/EnricoGiordano1992/repos", "events_url": "https://api.github.com/users/EnricoGiordano1992/events{/privacy}", "received_events_url": "https://api.github.com/users/EnricoGiordano1992/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-15T07:54:44Z", "updated_at": "2018-10-15T07:54:44Z", "author_association": "NONE", "body_html": "<p>I really need help with this question, because it is blocking for my work (and I did not find any advice in the documentation).</p>\n<p>I have tried these pseudo-code: (calling these code SISO = Single Input Single Output, and MIMO = Multiple Input Multiple Output, the input is batch_size * 50 * 50 * 3, in SISO batch_size = 1, in MIMO batch_size = 3; remember that I am using VGG16 graph)</p>\n<p>SISO:</p>\n<pre><code>loadGraph()\nTF_NewSession()\nTF_AllocateTensor( 1 * 50 * 50 * 3)\n// copy data into tensor\nnum_bytes = rows() * cols() * channels() * sizeof(float);\nmemcpy(tensor_data, img_data, num_bytes)\nTF_SessionRun()\ndata = static_cast&lt;float*&gt;(TF_TensorData(output_tensor));\n// data[0] = frame number\n// data[1] = probabily of prediction\nout = (data[1] &gt; 0.5f) ? true : false;\n</code></pre>\n<p>for SISO, I have always the right output.</p>\n<p>MIMO:</p>\n<pre><code>loadGraph()\nTF_NewSession()\nTF_AllocateTensor( 3 * 50 * 50 * 3)\n// copy data into tensor\nnum_bytes = rows() * cols() * channels() * sizeof(float);\noffset = 0;\nfor(size_t i = 0; i &lt; 3; ++i)\n{\n   memcpy(tensor_data + offset, imgs_data[i], num_bytes);\n   offset += num_bytes;\n}\nTF_SessionRun()\ndata = static_cast&lt;float*&gt;(TF_TensorData(output_tensor));\noffset = 0;\nnum_bytes = 2 * sizeof(float);\n// data[i] = frame number\n// data[i+1] = probabily of prediction\nfor(size_t i = 0; i &lt; 3; ++i)\n    {\n        out[i] = (*(data + offset + 1) &gt; 0.5f) ? true : false;\n        offset += num_bytes;\n    }\n</code></pre>\n<p>for MIMO, only the first classification output value is right, the other ones are random numbers.</p>\n<p>what is wrong with this code?</p>", "body_text": "I really need help with this question, because it is blocking for my work (and I did not find any advice in the documentation).\nI have tried these pseudo-code: (calling these code SISO = Single Input Single Output, and MIMO = Multiple Input Multiple Output, the input is batch_size * 50 * 50 * 3, in SISO batch_size = 1, in MIMO batch_size = 3; remember that I am using VGG16 graph)\nSISO:\nloadGraph()\nTF_NewSession()\nTF_AllocateTensor( 1 * 50 * 50 * 3)\n// copy data into tensor\nnum_bytes = rows() * cols() * channels() * sizeof(float);\nmemcpy(tensor_data, img_data, num_bytes)\nTF_SessionRun()\ndata = static_cast<float*>(TF_TensorData(output_tensor));\n// data[0] = frame number\n// data[1] = probabily of prediction\nout = (data[1] > 0.5f) ? true : false;\n\nfor SISO, I have always the right output.\nMIMO:\nloadGraph()\nTF_NewSession()\nTF_AllocateTensor( 3 * 50 * 50 * 3)\n// copy data into tensor\nnum_bytes = rows() * cols() * channels() * sizeof(float);\noffset = 0;\nfor(size_t i = 0; i < 3; ++i)\n{\n   memcpy(tensor_data + offset, imgs_data[i], num_bytes);\n   offset += num_bytes;\n}\nTF_SessionRun()\ndata = static_cast<float*>(TF_TensorData(output_tensor));\noffset = 0;\nnum_bytes = 2 * sizeof(float);\n// data[i] = frame number\n// data[i+1] = probabily of prediction\nfor(size_t i = 0; i < 3; ++i)\n    {\n        out[i] = (*(data + offset + 1) > 0.5f) ? true : false;\n        offset += num_bytes;\n    }\n\nfor MIMO, only the first classification output value is right, the other ones are random numbers.\nwhat is wrong with this code?", "body": "I really need help with this question, because it is blocking for my work (and I did not find any advice in the documentation).\r\n\r\nI have tried these pseudo-code: (calling these code SISO = Single Input Single Output, and MIMO = Multiple Input Multiple Output, the input is batch_size * 50 * 50 * 3, in SISO batch_size = 1, in MIMO batch_size = 3; remember that I am using VGG16 graph)\r\n\r\nSISO:\r\n```\r\nloadGraph()\r\nTF_NewSession()\r\nTF_AllocateTensor( 1 * 50 * 50 * 3)\r\n// copy data into tensor\r\nnum_bytes = rows() * cols() * channels() * sizeof(float);\r\nmemcpy(tensor_data, img_data, num_bytes)\r\nTF_SessionRun()\r\ndata = static_cast<float*>(TF_TensorData(output_tensor));\r\n// data[0] = frame number\r\n// data[1] = probabily of prediction\r\nout = (data[1] > 0.5f) ? true : false;\r\n```\r\n\r\nfor SISO, I have always the right output.\r\n\r\nMIMO:\r\n```\r\nloadGraph()\r\nTF_NewSession()\r\nTF_AllocateTensor( 3 * 50 * 50 * 3)\r\n// copy data into tensor\r\nnum_bytes = rows() * cols() * channels() * sizeof(float);\r\noffset = 0;\r\nfor(size_t i = 0; i < 3; ++i)\r\n{\r\n   memcpy(tensor_data + offset, imgs_data[i], num_bytes);\r\n   offset += num_bytes;\r\n}\r\nTF_SessionRun()\r\ndata = static_cast<float*>(TF_TensorData(output_tensor));\r\noffset = 0;\r\nnum_bytes = 2 * sizeof(float);\r\n// data[i] = frame number\r\n// data[i+1] = probabily of prediction\r\nfor(size_t i = 0; i < 3; ++i)\r\n    {\r\n        out[i] = (*(data + offset + 1) > 0.5f) ? true : false;\r\n        offset += num_bytes;\r\n    }\r\n```\r\n\r\nfor MIMO, only the first classification output value is right, the other ones are random numbers.\r\n\r\nwhat is wrong with this code?\r\n"}