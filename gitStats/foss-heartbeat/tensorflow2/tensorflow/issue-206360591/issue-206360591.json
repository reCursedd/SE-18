{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7368", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7368/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7368/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7368/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7368", "id": 206360591, "node_id": "MDU6SXNzdWUyMDYzNjA1OTE=", "number": 7368, "title": "Feature Request: Official Docker base image with python 3.5 (and not only 3.4)", "user": {"login": "brando90", "id": 1855278, "node_id": "MDQ6VXNlcjE4NTUyNzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1855278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brando90", "html_url": "https://github.com/brando90", "followers_url": "https://api.github.com/users/brando90/followers", "following_url": "https://api.github.com/users/brando90/following{/other_user}", "gists_url": "https://api.github.com/users/brando90/gists{/gist_id}", "starred_url": "https://api.github.com/users/brando90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brando90/subscriptions", "organizations_url": "https://api.github.com/users/brando90/orgs", "repos_url": "https://api.github.com/users/brando90/repos", "events_url": "https://api.github.com/users/brando90/events{/privacy}", "received_events_url": "https://api.github.com/users/brando90/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "caisq", "id": 16824702, "node_id": "MDQ6VXNlcjE2ODI0NzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/16824702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caisq", "html_url": "https://github.com/caisq", "followers_url": "https://api.github.com/users/caisq/followers", "following_url": "https://api.github.com/users/caisq/following{/other_user}", "gists_url": "https://api.github.com/users/caisq/gists{/gist_id}", "starred_url": "https://api.github.com/users/caisq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caisq/subscriptions", "organizations_url": "https://api.github.com/users/caisq/orgs", "repos_url": "https://api.github.com/users/caisq/repos", "events_url": "https://api.github.com/users/caisq/events{/privacy}", "received_events_url": "https://api.github.com/users/caisq/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "caisq", "id": 16824702, "node_id": "MDQ6VXNlcjE2ODI0NzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/16824702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caisq", "html_url": "https://github.com/caisq", "followers_url": "https://api.github.com/users/caisq/followers", "following_url": "https://api.github.com/users/caisq/following{/other_user}", "gists_url": "https://api.github.com/users/caisq/gists{/gist_id}", "starred_url": "https://api.github.com/users/caisq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caisq/subscriptions", "organizations_url": "https://api.github.com/users/caisq/orgs", "repos_url": "https://api.github.com/users/caisq/repos", "events_url": "https://api.github.com/users/caisq/events{/privacy}", "received_events_url": "https://api.github.com/users/caisq/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2017-02-08T23:42:08Z", "updated_at": "2017-02-23T00:33:24Z", "closed_at": "2017-02-23T00:33:24Z", "author_association": "NONE", "body_html": "<p>I was building my Dockerfile for my docker image and when I ran containers, I noticed that python 3.4 was the one that was used. I installed python 3.5 successfully on the image but I was still unable to use tensorflow. Is it possible to request a base image that is always with the latest version of TensorFlow and also uses other version of pyhton 3? Like 3.5.</p>\n<p>I am aware I can just pip install it directly, but that doesn't keep it up to date with the latest. A base image with python 3.5 seems the most appropriate answer.</p>\n<h3>What related GitHub issues or StackOverflow threads have you found by searching the web for</h3>\n<p>Related Stack Over Flow: <a href=\"http://stackoverflow.com/questions/42122826/can-one-use-python-3-5-in-a-docker-container-based-out-of-the-tensorflow-docker\" rel=\"nofollow\">http://stackoverflow.com/questions/42122826/can-one-use-python-3-5-in-a-docker-container-based-out-of-the-tensorflow-docker</a></p>\n<h3>Environment info</h3>\n<p>Ubuntu/Linux and Mac OS X.</p>\n<h3>What other attempted solutions have you tried?</h3>\n<p>You can install python 3.5 here:</p>\n<p><a href=\"http://askubuntu.com/questions/682869/how-do-i-install-newer-python-versions-using-apt-get\" rel=\"nofollow\">http://askubuntu.com/questions/682869/how-do-i-install-newer-python-versions-using-apt-get</a></p>\n<p>and then fix pip and numpy with:</p>\n<p><a href=\"http://stackoverflow.com/questions/42122639/how-does-one-install-fix-a-failed-numpy-installation-that-works-on-python-3-4-bu/42124828?noredirect=1#comment71418540_42124828\" rel=\"nofollow\">http://stackoverflow.com/questions/42122639/how-does-one-install-fix-a-failed-numpy-installation-that-works-on-python-3-4-bu/42124828?noredirect=1#comment71418540_42124828</a></p>\n<p>and then one can directly install python 3.5 with pip:</p>\n<p>export TF_BINARY_URL=<a href=\"https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.12.1-cp35-cp35m-linux_x86_64.whl\" rel=\"nofollow\">https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.12.1-cp35-cp35m-linux_x86_64.whl</a><br>\npython3.5 -m pip install TF_BINARY_URL</p>\n<p>(note pip3 will <strong>not</strong> work if all this is done in the docker container).</p>\n<p>This should work but doesn't start from an official base image using python 3.5 and doesn't get the latest version of TensorFlow automatically.</p>", "body_text": "I was building my Dockerfile for my docker image and when I ran containers, I noticed that python 3.4 was the one that was used. I installed python 3.5 successfully on the image but I was still unable to use tensorflow. Is it possible to request a base image that is always with the latest version of TensorFlow and also uses other version of pyhton 3? Like 3.5.\nI am aware I can just pip install it directly, but that doesn't keep it up to date with the latest. A base image with python 3.5 seems the most appropriate answer.\nWhat related GitHub issues or StackOverflow threads have you found by searching the web for\nRelated Stack Over Flow: http://stackoverflow.com/questions/42122826/can-one-use-python-3-5-in-a-docker-container-based-out-of-the-tensorflow-docker\nEnvironment info\nUbuntu/Linux and Mac OS X.\nWhat other attempted solutions have you tried?\nYou can install python 3.5 here:\nhttp://askubuntu.com/questions/682869/how-do-i-install-newer-python-versions-using-apt-get\nand then fix pip and numpy with:\nhttp://stackoverflow.com/questions/42122639/how-does-one-install-fix-a-failed-numpy-installation-that-works-on-python-3-4-bu/42124828?noredirect=1#comment71418540_42124828\nand then one can directly install python 3.5 with pip:\nexport TF_BINARY_URL=https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.12.1-cp35-cp35m-linux_x86_64.whl\npython3.5 -m pip install TF_BINARY_URL\n(note pip3 will not work if all this is done in the docker container).\nThis should work but doesn't start from an official base image using python 3.5 and doesn't get the latest version of TensorFlow automatically.", "body": "I was building my Dockerfile for my docker image and when I ran containers, I noticed that python 3.4 was the one that was used. I installed python 3.5 successfully on the image but I was still unable to use tensorflow. Is it possible to request a base image that is always with the latest version of TensorFlow and also uses other version of pyhton 3? Like 3.5.\r\n\r\nI am aware I can just pip install it directly, but that doesn't keep it up to date with the latest. A base image with python 3.5 seems the most appropriate answer.\r\n\r\n### What related GitHub issues or StackOverflow threads have you found by searching the web for \r\nRelated Stack Over Flow: http://stackoverflow.com/questions/42122826/can-one-use-python-3-5-in-a-docker-container-based-out-of-the-tensorflow-docker\r\n\r\n### Environment info\r\nUbuntu/Linux and Mac OS X. \r\n\r\n### What other attempted solutions have you tried?\r\nYou can install python 3.5 here:\r\n\r\nhttp://askubuntu.com/questions/682869/how-do-i-install-newer-python-versions-using-apt-get\r\n\r\nand then fix pip and numpy with:\r\n\r\nhttp://stackoverflow.com/questions/42122639/how-does-one-install-fix-a-failed-numpy-installation-that-works-on-python-3-4-bu/42124828?noredirect=1#comment71418540_42124828\r\n\r\nand then one can directly install python 3.5 with pip:\r\n\r\nexport TF_BINARY_URL=https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.12.1-cp35-cp35m-linux_x86_64.whl\r\npython3.5 -m pip install TF_BINARY_URL\r\n\r\n(note pip3 will **not** work if all this is done in the docker container).\r\n\r\nThis should work but doesn't start from an official base image using python 3.5 and doesn't get the latest version of TensorFlow automatically.\r\n"}