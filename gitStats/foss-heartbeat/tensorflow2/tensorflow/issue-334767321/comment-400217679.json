{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/400217679", "html_url": "https://github.com/tensorflow/tensorflow/issues/20216#issuecomment-400217679", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20216", "id": 400217679, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDIxNzY3OQ==", "user": {"login": "PhilJd", "id": 16101605, "node_id": "MDQ6VXNlcjE2MTAxNjA1", "avatar_url": "https://avatars2.githubusercontent.com/u/16101605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PhilJd", "html_url": "https://github.com/PhilJd", "followers_url": "https://api.github.com/users/PhilJd/followers", "following_url": "https://api.github.com/users/PhilJd/following{/other_user}", "gists_url": "https://api.github.com/users/PhilJd/gists{/gist_id}", "starred_url": "https://api.github.com/users/PhilJd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PhilJd/subscriptions", "organizations_url": "https://api.github.com/users/PhilJd/orgs", "repos_url": "https://api.github.com/users/PhilJd/repos", "events_url": "https://api.github.com/users/PhilJd/events{/privacy}", "received_events_url": "https://api.github.com/users/PhilJd/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-26T08:02:35Z", "updated_at": "2018-06-26T08:02:35Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1756798\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zhaoxin19\">@zhaoxin19</a> The behaviour of what you describe is different from what keepdims in the reduce operations does,  you can obtain your result with<br>\ninput = [[1,2,3], [4,5,6], [7,8,9]]<br>\nids =[[0,0,0],[1,1,1],[2,2,2]]<br>\nsegment_max = tf.unsorted_segment_max(input, ids)<br>\nresult = tf.gather(segment_max, ids)   # outputs  [[3,3,3],[6,6,6],[9,9,9]]<br>\nThis should be as efficient as a native op.</p>", "body_text": "@zhaoxin19 The behaviour of what you describe is different from what keepdims in the reduce operations does,  you can obtain your result with\ninput = [[1,2,3], [4,5,6], [7,8,9]]\nids =[[0,0,0],[1,1,1],[2,2,2]]\nsegment_max = tf.unsorted_segment_max(input, ids)\nresult = tf.gather(segment_max, ids)   # outputs  [[3,3,3],[6,6,6],[9,9,9]]\nThis should be as efficient as a native op.", "body": "@zhaoxin19 The behaviour of what you describe is different from what keepdims in the reduce operations does,  you can obtain your result with \r\ninput = [[1,2,3], [4,5,6], [7,8,9]]\r\nids =[[0,0,0],[1,1,1],[2,2,2]]\r\nsegment_max = tf.unsorted_segment_max(input, ids)\r\nresult = tf.gather(segment_max, ids)   # outputs  [[3,3,3],[6,6,6],[9,9,9]]\r\nThis should be as efficient as a native op.\r\n"}