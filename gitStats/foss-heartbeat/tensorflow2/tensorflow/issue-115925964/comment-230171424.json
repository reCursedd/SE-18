{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/230171424", "html_url": "https://github.com/tensorflow/tensorflow/issues/17#issuecomment-230171424", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17", "id": 230171424, "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDE3MTQyNA==", "user": {"login": "kestrelm", "id": 12298573, "node_id": "MDQ6VXNlcjEyMjk4NTcz", "avatar_url": "https://avatars2.githubusercontent.com/u/12298573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kestrelm", "html_url": "https://github.com/kestrelm", "followers_url": "https://api.github.com/users/kestrelm/followers", "following_url": "https://api.github.com/users/kestrelm/following{/other_user}", "gists_url": "https://api.github.com/users/kestrelm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kestrelm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kestrelm/subscriptions", "organizations_url": "https://api.github.com/users/kestrelm/orgs", "repos_url": "https://api.github.com/users/kestrelm/repos", "events_url": "https://api.github.com/users/kestrelm/events{/privacy}", "received_events_url": "https://api.github.com/users/kestrelm/received_events", "type": "User", "site_admin": false}, "created_at": "2016-07-03T19:43:17Z", "updated_at": "2016-07-03T19:44:53Z", "author_association": "NONE", "body_html": "<p>Hello,</p>\n<p>For Tensorflow Windows support, are we going to be able to build out Windows Binaries that are not msys2 binaries? This makes sense since it would be a possible to do actual deployment on most user's machines.</p>\n<p>If this is not possible, can we have a way to just deploy a stripped down version of the prediction pass/forward pass of the library for this purpose? I can train on Linux just fine but for the actual prediction process, I will like to be able to deploy on a regular Windows box without msys2. Is this on the roadmap?</p>\n<p>If you look at what CNTK is doing:<br>\n<a href=\"https://github.com/Microsoft/CNTK/wiki/Native-Evaluation-Interface\">https://github.com/Microsoft/CNTK/wiki/Native-Evaluation-Interface</a></p>\n<p>They have a much easier way to do evaluation/prediction using a stripped down DLL. Can we have something like this in Tensorflow as well for Windows ( and other platforms I can imagine will find it very useful).</p>\n<p>Thanks!</p>", "body_text": "Hello,\nFor Tensorflow Windows support, are we going to be able to build out Windows Binaries that are not msys2 binaries? This makes sense since it would be a possible to do actual deployment on most user's machines.\nIf this is not possible, can we have a way to just deploy a stripped down version of the prediction pass/forward pass of the library for this purpose? I can train on Linux just fine but for the actual prediction process, I will like to be able to deploy on a regular Windows box without msys2. Is this on the roadmap?\nIf you look at what CNTK is doing:\nhttps://github.com/Microsoft/CNTK/wiki/Native-Evaluation-Interface\nThey have a much easier way to do evaluation/prediction using a stripped down DLL. Can we have something like this in Tensorflow as well for Windows ( and other platforms I can imagine will find it very useful).\nThanks!", "body": "Hello,\n\nFor Tensorflow Windows support, are we going to be able to build out Windows Binaries that are not msys2 binaries? This makes sense since it would be a possible to do actual deployment on most user's machines.\n\nIf this is not possible, can we have a way to just deploy a stripped down version of the prediction pass/forward pass of the library for this purpose? I can train on Linux just fine but for the actual prediction process, I will like to be able to deploy on a regular Windows box without msys2. Is this on the roadmap?\n\nIf you look at what CNTK is doing:\nhttps://github.com/Microsoft/CNTK/wiki/Native-Evaluation-Interface\n\nThey have a much easier way to do evaluation/prediction using a stripped down DLL. Can we have something like this in Tensorflow as well for Windows ( and other platforms I can imagine will find it very useful).\n\nThanks!\n"}