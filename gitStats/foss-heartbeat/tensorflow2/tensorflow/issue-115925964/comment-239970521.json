{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/239970521", "html_url": "https://github.com/tensorflow/tensorflow/issues/17#issuecomment-239970521", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17", "id": 239970521, "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTk3MDUyMQ==", "user": {"login": "kestrelm", "id": 12298573, "node_id": "MDQ6VXNlcjEyMjk4NTcz", "avatar_url": "https://avatars2.githubusercontent.com/u/12298573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kestrelm", "html_url": "https://github.com/kestrelm", "followers_url": "https://api.github.com/users/kestrelm/followers", "following_url": "https://api.github.com/users/kestrelm/following{/other_user}", "gists_url": "https://api.github.com/users/kestrelm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kestrelm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kestrelm/subscriptions", "organizations_url": "https://api.github.com/users/kestrelm/orgs", "repos_url": "https://api.github.com/users/kestrelm/repos", "events_url": "https://api.github.com/users/kestrelm/events{/privacy}", "received_events_url": "https://api.github.com/users/kestrelm/received_events", "type": "User", "site_admin": false}, "created_at": "2016-08-16T00:36:59Z", "updated_at": "2016-08-16T00:42:36Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=326106\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/aselle\">@aselle</a>  Thanks for the useful update, much appreciated!</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a> Hello, how are the specifics of the Windows implementation going to be rolled out?</p>\n<ol>\n<li>\n<p>Will we have (ideally) a VS2015 solution that we can build with our apps/tools? A cmake method that generates the VS solution works too.</p>\n</li>\n<li>\n<p>Is this going to be a statically linked or dynamically linked library?</p>\n</li>\n<li>\n<p>Will there be a lightweight forward pass/evaluation module/library that we can use for deployment with our tools/apps?</p>\n</li>\n</ol>\n<p>The current resource I could find regarding deploying tensorflow with a C++ standalone app is here:<br>\n<a href=\"https://medium.com/jim-fleming/loading-a-tensorflow-graph-with-the-c-api-4caaff88463f#.7ejb8h7zk\" rel=\"nofollow\">https://medium.com/jim-fleming/loading-a-tensorflow-graph-with-the-c-api-4caaff88463f#.7ejb8h7zk</a></p>\n<p>My main concern is what is stated here:<br>\n\"The build is huge, coming in at 103MB, even for this simple example. Much of this is for TensorFlow, CUDA support and numerous dependencies we never use. This is especially true since the C++ API doesn\u2019t support much functionality right now, as a large portion of the TensorFlow API is Python-only. There is probably a better way of linking to TensorFlow (e.g. shared library) but I haven\u2019t gotten it working yet.\"</p>\n<p>If there is a better way to get around linking a large static library that will be great, especially for the purposes of a forward pass/evaluation which does not really need GPU support.</p>\n<p>Thanks!</p>", "body_text": "@aselle  Thanks for the useful update, much appreciated!\n@mrry Hello, how are the specifics of the Windows implementation going to be rolled out?\n\n\nWill we have (ideally) a VS2015 solution that we can build with our apps/tools? A cmake method that generates the VS solution works too.\n\n\nIs this going to be a statically linked or dynamically linked library?\n\n\nWill there be a lightweight forward pass/evaluation module/library that we can use for deployment with our tools/apps?\n\n\nThe current resource I could find regarding deploying tensorflow with a C++ standalone app is here:\nhttps://medium.com/jim-fleming/loading-a-tensorflow-graph-with-the-c-api-4caaff88463f#.7ejb8h7zk\nMy main concern is what is stated here:\n\"The build is huge, coming in at 103MB, even for this simple example. Much of this is for TensorFlow, CUDA support and numerous dependencies we never use. This is especially true since the C++ API doesn\u2019t support much functionality right now, as a large portion of the TensorFlow API is Python-only. There is probably a better way of linking to TensorFlow (e.g. shared library) but I haven\u2019t gotten it working yet.\"\nIf there is a better way to get around linking a large static library that will be great, especially for the purposes of a forward pass/evaluation which does not really need GPU support.\nThanks!", "body": "@aselle  Thanks for the useful update, much appreciated!\n\n@mrry Hello, how are the specifics of the Windows implementation going to be rolled out?\n\n1) Will we have (ideally) a VS2015 solution that we can build with our apps/tools? A cmake method that generates the VS solution works too.\n\n2) Is this going to be a statically linked or dynamically linked library?\n\n3) Will there be a lightweight forward pass/evaluation module/library that we can use for deployment with our tools/apps?\n\nThe current resource I could find regarding deploying tensorflow with a C++ standalone app is here:\nhttps://medium.com/jim-fleming/loading-a-tensorflow-graph-with-the-c-api-4caaff88463f#.7ejb8h7zk\n\nMy main concern is what is stated here:\n\"The build is huge, coming in at 103MB, even for this simple example. Much of this is for TensorFlow, CUDA support and numerous dependencies we never use. This is especially true since the C++ API doesn\u2019t support much functionality right now, as a large portion of the TensorFlow API is Python-only. There is probably a better way of linking to TensorFlow (e.g. shared library) but I haven\u2019t gotten it working yet.\"\n\nIf there is a better way to get around linking a large static library that will be great, especially for the purposes of a forward pass/evaluation which does not really need GPU support.\n\nThanks!\n"}