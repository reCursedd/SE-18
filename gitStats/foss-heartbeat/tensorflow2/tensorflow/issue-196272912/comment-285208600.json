{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/285208600", "html_url": "https://github.com/tensorflow/tensorflow/issues/6385#issuecomment-285208600", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6385", "id": 285208600, "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTIwODYwMA==", "user": {"login": "andrewharp", "id": 3376817, "node_id": "MDQ6VXNlcjMzNzY4MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3376817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewharp", "html_url": "https://github.com/andrewharp", "followers_url": "https://api.github.com/users/andrewharp/followers", "following_url": "https://api.github.com/users/andrewharp/following{/other_user}", "gists_url": "https://api.github.com/users/andrewharp/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewharp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewharp/subscriptions", "organizations_url": "https://api.github.com/users/andrewharp/orgs", "repos_url": "https://api.github.com/users/andrewharp/repos", "events_url": "https://api.github.com/users/andrewharp/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewharp/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-08T23:51:08Z", "updated_at": "2017-03-09T01:56:55Z", "author_association": "MEMBER", "body_html": "<p>Ok, I've got something sort of working. It needs some more tweaking, and I would recommend sticking with the prebuilts as described by <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=14091770\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/bulatyauheni\">@bulatyauheni</a> above, but if you're feeling adventurous here's how you can build the Android TF libraries on Windows 10.</p>\n<p>First, install Bash for Windows as described here: <a href=\"https://msdn.microsoft.com/en-us/commandline/wsl/about\" rel=\"nofollow\">https://msdn.microsoft.com/en-us/commandline/wsl/about</a></p>\n<p>Once that's done, start bash and run the following, adjusting directories appropriately:</p>\n<pre><code># Install necessary components\nsudo apt-get install make unzip autoconf ccache autogen libtool g++ zlibc-dev\n\n# Download and install the NDK (has to be the Linux NDK)\nwget https://dl.google.com/android/repository/android-ndk-r12b-linux-x86_64.zip\nmkdir -p ~/android\nunzip android-ndk-r12b-linux-x86_64.zip -d ~/android\n\n# Build once to confirm it works and generate proto libs (which will be reused).\nexport NDK_ROOT=~/android/android-ndk-r12b\nexport CC_PREFIX=ccache\ntensorflow/contrib/makefile/build_all_android.sh \\\n-s tensorflow/contrib/makefile/sub_makefiles/android/Makefile.in \\\n-t \"libtensorflow_inference.so libtensorflow_demo.so\"\n</code></pre>\n<p>Now create a file named \"makefile_helper.bat\" in tensorflow/ and add the following to it:</p>\n<pre><code>echo \"BUILDING!\"\nbash -c 'NDK_ROOT=~/android/android-ndk-r12b CC_PREFIX=ccache tensorflow/contrib/makefile/build_all_android.sh -T -s tensorflow/contrib/makefile/sub_makefiles/android/Makefile.in -t \"libtensorflow_inference.so libtensorflow_demo.so\"'\nexit\n</code></pre>\n<p>(The '-T' will prevent it from redownloading and compiling protobuf every time)</p>\n<p>Then update build.gradle buildNativeMade to the following:</p>\n<pre><code>task buildNativeMake(type: Exec) {\n    workingDir '../../..'\n    commandLine = ['cmd', '/C', 'start', 'makefile_helper.bat']\n}\n</code></pre>\n<p>Now, if you set <code>buildWithMake = true</code>, it <em>should</em> create the native libs exactly where gradle expects to find them and copy them into the app dir.</p>\n<p>This should work similarly for bazel on Windows, if you wish to install that under bash instead.</p>\n<p>I'd prefer not to check in a separate helper script, so if anybody has luck getting the command to run inline in the Exec task itself please let me know.</p>", "body_text": "Ok, I've got something sort of working. It needs some more tweaking, and I would recommend sticking with the prebuilts as described by @bulatyauheni above, but if you're feeling adventurous here's how you can build the Android TF libraries on Windows 10.\nFirst, install Bash for Windows as described here: https://msdn.microsoft.com/en-us/commandline/wsl/about\nOnce that's done, start bash and run the following, adjusting directories appropriately:\n# Install necessary components\nsudo apt-get install make unzip autoconf ccache autogen libtool g++ zlibc-dev\n\n# Download and install the NDK (has to be the Linux NDK)\nwget https://dl.google.com/android/repository/android-ndk-r12b-linux-x86_64.zip\nmkdir -p ~/android\nunzip android-ndk-r12b-linux-x86_64.zip -d ~/android\n\n# Build once to confirm it works and generate proto libs (which will be reused).\nexport NDK_ROOT=~/android/android-ndk-r12b\nexport CC_PREFIX=ccache\ntensorflow/contrib/makefile/build_all_android.sh \\\n-s tensorflow/contrib/makefile/sub_makefiles/android/Makefile.in \\\n-t \"libtensorflow_inference.so libtensorflow_demo.so\"\n\nNow create a file named \"makefile_helper.bat\" in tensorflow/ and add the following to it:\necho \"BUILDING!\"\nbash -c 'NDK_ROOT=~/android/android-ndk-r12b CC_PREFIX=ccache tensorflow/contrib/makefile/build_all_android.sh -T -s tensorflow/contrib/makefile/sub_makefiles/android/Makefile.in -t \"libtensorflow_inference.so libtensorflow_demo.so\"'\nexit\n\n(The '-T' will prevent it from redownloading and compiling protobuf every time)\nThen update build.gradle buildNativeMade to the following:\ntask buildNativeMake(type: Exec) {\n    workingDir '../../..'\n    commandLine = ['cmd', '/C', 'start', 'makefile_helper.bat']\n}\n\nNow, if you set buildWithMake = true, it should create the native libs exactly where gradle expects to find them and copy them into the app dir.\nThis should work similarly for bazel on Windows, if you wish to install that under bash instead.\nI'd prefer not to check in a separate helper script, so if anybody has luck getting the command to run inline in the Exec task itself please let me know.", "body": "Ok, I've got something sort of working. It needs some more tweaking, and I would recommend sticking with the prebuilts as described by @bulatyauheni above, but if you're feeling adventurous here's how you can build the Android TF libraries on Windows 10. \r\n\r\nFirst, install Bash for Windows as described here: https://msdn.microsoft.com/en-us/commandline/wsl/about\r\n\r\nOnce that's done, start bash and run the following, adjusting directories appropriately:\r\n\r\n```\r\n# Install necessary components\r\nsudo apt-get install make unzip autoconf ccache autogen libtool g++ zlibc-dev\r\n\r\n# Download and install the NDK (has to be the Linux NDK)\r\nwget https://dl.google.com/android/repository/android-ndk-r12b-linux-x86_64.zip\r\nmkdir -p ~/android\r\nunzip android-ndk-r12b-linux-x86_64.zip -d ~/android\r\n\r\n# Build once to confirm it works and generate proto libs (which will be reused).\r\nexport NDK_ROOT=~/android/android-ndk-r12b\r\nexport CC_PREFIX=ccache\r\ntensorflow/contrib/makefile/build_all_android.sh \\\r\n-s tensorflow/contrib/makefile/sub_makefiles/android/Makefile.in \\\r\n-t \"libtensorflow_inference.so libtensorflow_demo.so\"\r\n```\r\n\r\nNow create a file named \"makefile_helper.bat\" in tensorflow/ and add the following to it:\r\n```\r\necho \"BUILDING!\"\r\nbash -c 'NDK_ROOT=~/android/android-ndk-r12b CC_PREFIX=ccache tensorflow/contrib/makefile/build_all_android.sh -T -s tensorflow/contrib/makefile/sub_makefiles/android/Makefile.in -t \"libtensorflow_inference.so libtensorflow_demo.so\"'\r\nexit\r\n```\r\n(The '-T' will prevent it from redownloading and compiling protobuf every time)\r\n\r\nThen update build.gradle buildNativeMade to the following:\r\n```\r\ntask buildNativeMake(type: Exec) {\r\n    workingDir '../../..'\r\n    commandLine = ['cmd', '/C', 'start', 'makefile_helper.bat']\r\n}\r\n```\r\n\r\nNow, if you set `buildWithMake = true`, it *should* create the native libs exactly where gradle expects to find them and copy them into the app dir.\r\n\r\nThis should work similarly for bazel on Windows, if you wish to install that under bash instead.\r\n\r\nI'd prefer not to check in a separate helper script, so if anybody has luck getting the command to run inline in the Exec task itself please let me know.\r\n\r\n"}