{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/296315083", "html_url": "https://github.com/tensorflow/tensorflow/issues/6385#issuecomment-296315083", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6385", "id": 296315083, "node_id": "MDEyOklzc3VlQ29tbWVudDI5NjMxNTA4Mw==", "user": {"login": "andrewharp", "id": 3376817, "node_id": "MDQ6VXNlcjMzNzY4MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3376817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewharp", "html_url": "https://github.com/andrewharp", "followers_url": "https://api.github.com/users/andrewharp/followers", "following_url": "https://api.github.com/users/andrewharp/following{/other_user}", "gists_url": "https://api.github.com/users/andrewharp/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewharp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewharp/subscriptions", "organizations_url": "https://api.github.com/users/andrewharp/orgs", "repos_url": "https://api.github.com/users/andrewharp/repos", "events_url": "https://api.github.com/users/andrewharp/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewharp/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-21T21:58:43Z", "updated_at": "2017-04-21T22:02:26Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=14006062\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vyse8\">@vyse8</a> Note that if you're going as far as to install bash for Windows to build libtensorflow_demo.so, then you might as well build libtensorflow_inference.so with make/Bazel as well. There's no real advantage to using the AAR file in this case.</p>\n<p>Right now, the AAR is intended to be the easy approach if you're incorporating TF into a standalone app (that doesn't require libtensorflow_demo.so like the TF demo does). You can use it with the demo of course, but you'll also need to also download the nightly binaries for libtensorflow_demo.so <a href=\"https://ci.tensorflow.org/view/Nightly/job/nightly-android/\" rel=\"nofollow\">here</a>. You could also just download libtensorflow_demo.so there as well rather than the AAR (then you wouldn't need to mess with the Java source sets).</p>\n<p>As mentioned we plan to keep streamlining this for Windows to make all approaches more straightforward.</p>", "body_text": "@vyse8 Note that if you're going as far as to install bash for Windows to build libtensorflow_demo.so, then you might as well build libtensorflow_inference.so with make/Bazel as well. There's no real advantage to using the AAR file in this case.\nRight now, the AAR is intended to be the easy approach if you're incorporating TF into a standalone app (that doesn't require libtensorflow_demo.so like the TF demo does). You can use it with the demo of course, but you'll also need to also download the nightly binaries for libtensorflow_demo.so here. You could also just download libtensorflow_demo.so there as well rather than the AAR (then you wouldn't need to mess with the Java source sets).\nAs mentioned we plan to keep streamlining this for Windows to make all approaches more straightforward.", "body": "@vyse8 Note that if you're going as far as to install bash for Windows to build libtensorflow_demo.so, then you might as well build libtensorflow_inference.so with make/Bazel as well. There's no real advantage to using the AAR file in this case.\r\n\r\nRight now, the AAR is intended to be the easy approach if you're incorporating TF into a standalone app (that doesn't require libtensorflow_demo.so like the TF demo does). You can use it with the demo of course, but you'll also need to also download the nightly binaries for libtensorflow_demo.so [here](https://ci.tensorflow.org/view/Nightly/job/nightly-android/). You could also just download libtensorflow_demo.so there as well rather than the AAR (then you wouldn't need to mess with the Java source sets).\r\n\r\nAs mentioned we plan to keep streamlining this for Windows to make all approaches more straightforward."}