{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/296720243", "html_url": "https://github.com/tensorflow/tensorflow/issues/6385#issuecomment-296720243", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6385", "id": 296720243, "node_id": "MDEyOklzc3VlQ29tbWVudDI5NjcyMDI0Mw==", "user": {"login": "ahmedezzat85", "id": 12133512, "node_id": "MDQ6VXNlcjEyMTMzNTEy", "avatar_url": "https://avatars0.githubusercontent.com/u/12133512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahmedezzat85", "html_url": "https://github.com/ahmedezzat85", "followers_url": "https://api.github.com/users/ahmedezzat85/followers", "following_url": "https://api.github.com/users/ahmedezzat85/following{/other_user}", "gists_url": "https://api.github.com/users/ahmedezzat85/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahmedezzat85/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahmedezzat85/subscriptions", "organizations_url": "https://api.github.com/users/ahmedezzat85/orgs", "repos_url": "https://api.github.com/users/ahmedezzat85/repos", "events_url": "https://api.github.com/users/ahmedezzat85/events{/privacy}", "received_events_url": "https://api.github.com/users/ahmedezzat85/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-24T16:03:12Z", "updated_at": "2017-04-24T16:03:12Z", "author_association": "NONE", "body_html": "<p>I used the prebuilt libraries (copied the folder <code>libs </code>from the prebuilt APK as is in the root of the project) and modified the script as follows (I commented unnecessary tasks) and it is now building OK.</p>\n<pre><code>// This file provides basic support for building the TensorFlow demo\n// in Android Studio with Gradle.\n//\n// Note that Bazel is still used by default to compile the native libs,\n// and should be installed at the location noted below. This build file\n// automates the process of calling out to it and copying the compiled\n// libraries back into the appropriate directory.\n//\n// Alternatively, experimental support for Makefile builds is provided by\n// setting buildWithMake below to true. This will allow building the demo\n// on Windows machines, but note that full equivalence with the Bazel\n// build is not yet guaranteed. See comments below for caveats and tips\n// for speeding up the build, such as as enabling ccache.\n\n// Set to true to build with make.\n// NOTE: Running a make build will cause subsequent Bazel builds to *fail*\n// unless the contrib/makefile/downloads/ and gen/ dirs are deleted afterwards.\ndef buildWithMake = false\n\n// Controls output directory in APK and CPU type for Bazel builds.\n// NOTE: Does not affect the Makefile build target API (yet), which currently\n// assumes armeabi-v7a. If building with make, changing this will require\n// editing the Makefile as well.\ndef cpuType = 'armeabi-v7a'\n\n// Output directory in the local directory for packaging into the APK.\ndef nativeOutDir = 'libs/' + cpuType\n\n// Default to building with Bazel and override with make if requested.\n//def nativeBuildRule = 'buildNativeBazel'\ndef demoLibPath = 'libs/' + cpuType + 'libtensorflow_demo.so'\ndef inferenceLibPath = 'libs/' + cpuType + 'libtensorflow_inference.so'\n//if (buildWithMake) {\n//    nativeBuildRule = 'buildNativeMake'\n//    demoLibPath = '../../../tensorflow/contrib/makefile/gen/lib/libtensorflow_demo.so'\n//    inferenceLibPath = '../../../tensorflow/contrib/makefile/gen/lib/libtensorflow_inference.so'\n//}\n\n// Defines the NDK location for Makefile builds. Does *not* affect Bazel builds.\n// Override with your absolute NDK location if this fails to get the location\n// automatically.\ndef makeNdkRoot = System.getenv('NDK_ROOT')\n\n// If building with Bazel, this is the location of the bazel binary.\n// NOTE: Bazel does not yet support building for Android on Windows,\n// so in this case the Makefile build must be used as described above.\ndef bazelLocation = '/usr/local/bin/bazel'\n\nproject.buildDir = 'gradleBuild'\ngetProject().setBuildDir('gradleBuild')\n\n// import DownloadModels task\nproject.ext.ASSET_DIR = projectDir.toString() + '/assets'\nproject.ext.TMP_DIR   = project.buildDir.toString() + '/downloads'\n\nbuildscript {\n    repositories {\n        jcenter()\n    }\n\n    dependencies {\n        classpath 'com.android.tools.build:gradle:2.3.1'\n    }\n}\n\napply plugin: 'com.android.application'\n\nandroid {\n    compileSdkVersion 23\n    buildToolsVersion \"25.0.2\"\n\n    lintOptions {\n        abortOnError false\n    }\n\n    sourceSets {\n        main {\n            // TensorFlow Java API sources.\n            java {\n                srcDir '../../java/src/main/java'\n                exclude '**/examples/**'\n            }\n\n            // Android TensorFlow wrappers, etc.\n            java {\n                srcDir '../../contrib/android/java'\n            }\n\n            // Android demo app sources.\n            java {\n                srcDir 'src'\n            }\n\n            manifest.srcFile 'AndroidManifest.xml'\n            resources.srcDirs = ['src']\n            aidl.srcDirs = ['src']\n            renderscript.srcDirs = ['src']\n            res.srcDirs = ['res']\n            assets.srcDirs = [project.ext.ASSET_DIR]\n            jniLibs.srcDirs = ['libs']\n        }\n\n        debug.setRoot('build-types/debug')\n        release.setRoot('build-types/release')\n    }\n}\n\n//task buildNativeBazel(type: Exec) {\n//    workingDir '../../..'\n//    commandLine bazelLocation, 'build', '-c', 'opt',  \\\n//         'tensorflow/examples/android:tensorflow_native_libs',  \\\n//         '--crosstool_top=//external:android/crosstool',  \\\n//         '--cpu=' + cpuType,  \\\n//         '--host_crosstool_top=@bazel_tools//tools/cpp:toolchain'\n//}\n\n//task buildNativeMake(type: Exec) {\n//    environment \"NDK_ROOT\", makeNdkRoot\n//    // Tip: install ccache and uncomment the following to speed up\n//    // builds significantly.\n//    // environment \"CC_PREFIX\", 'ccache'\n//    workingDir '../../..'\n//    commandLine 'tensorflow/contrib/makefile/build_all_android.sh',  \\\n//         '-s',  \\\n//         'tensorflow/contrib/makefile/sub_makefiles/android/Makefile.in',  \\\n//         '-t',  \\\n//         'libtensorflow_inference.so libtensorflow_demo.so'  \\\n//         //, '-T'  // Uncomment to skip protobuf and speed up subsequent builds.\n//}\n\n\ntask copyNativeLibs(type: Copy) {\n    from demoLibPath\n    from inferenceLibPath\n    into nativeOutDir\n    duplicatesStrategy = 'include'\n//    dependsOn nativeBuildRule\n    fileMode 0644\n}\n\n\ntasks.whenTaskAdded { task -&gt;\n    if (task.name == 'assembleDebug') {\n        task.dependsOn 'copyNativeLibs'\n    }\n    if (task.name == 'assembleRelease') {\n        task.dependsOn 'copyNativeLibs'\n    }\n}\n\n// Download default models; if you wish to use your own models then\n// place them in the \"assets\" directory and comment out this line.\n//apply from: \"download-models.gradle\"\n\n\n</code></pre>", "body_text": "I used the prebuilt libraries (copied the folder libs from the prebuilt APK as is in the root of the project) and modified the script as follows (I commented unnecessary tasks) and it is now building OK.\n// This file provides basic support for building the TensorFlow demo\n// in Android Studio with Gradle.\n//\n// Note that Bazel is still used by default to compile the native libs,\n// and should be installed at the location noted below. This build file\n// automates the process of calling out to it and copying the compiled\n// libraries back into the appropriate directory.\n//\n// Alternatively, experimental support for Makefile builds is provided by\n// setting buildWithMake below to true. This will allow building the demo\n// on Windows machines, but note that full equivalence with the Bazel\n// build is not yet guaranteed. See comments below for caveats and tips\n// for speeding up the build, such as as enabling ccache.\n\n// Set to true to build with make.\n// NOTE: Running a make build will cause subsequent Bazel builds to *fail*\n// unless the contrib/makefile/downloads/ and gen/ dirs are deleted afterwards.\ndef buildWithMake = false\n\n// Controls output directory in APK and CPU type for Bazel builds.\n// NOTE: Does not affect the Makefile build target API (yet), which currently\n// assumes armeabi-v7a. If building with make, changing this will require\n// editing the Makefile as well.\ndef cpuType = 'armeabi-v7a'\n\n// Output directory in the local directory for packaging into the APK.\ndef nativeOutDir = 'libs/' + cpuType\n\n// Default to building with Bazel and override with make if requested.\n//def nativeBuildRule = 'buildNativeBazel'\ndef demoLibPath = 'libs/' + cpuType + 'libtensorflow_demo.so'\ndef inferenceLibPath = 'libs/' + cpuType + 'libtensorflow_inference.so'\n//if (buildWithMake) {\n//    nativeBuildRule = 'buildNativeMake'\n//    demoLibPath = '../../../tensorflow/contrib/makefile/gen/lib/libtensorflow_demo.so'\n//    inferenceLibPath = '../../../tensorflow/contrib/makefile/gen/lib/libtensorflow_inference.so'\n//}\n\n// Defines the NDK location for Makefile builds. Does *not* affect Bazel builds.\n// Override with your absolute NDK location if this fails to get the location\n// automatically.\ndef makeNdkRoot = System.getenv('NDK_ROOT')\n\n// If building with Bazel, this is the location of the bazel binary.\n// NOTE: Bazel does not yet support building for Android on Windows,\n// so in this case the Makefile build must be used as described above.\ndef bazelLocation = '/usr/local/bin/bazel'\n\nproject.buildDir = 'gradleBuild'\ngetProject().setBuildDir('gradleBuild')\n\n// import DownloadModels task\nproject.ext.ASSET_DIR = projectDir.toString() + '/assets'\nproject.ext.TMP_DIR   = project.buildDir.toString() + '/downloads'\n\nbuildscript {\n    repositories {\n        jcenter()\n    }\n\n    dependencies {\n        classpath 'com.android.tools.build:gradle:2.3.1'\n    }\n}\n\napply plugin: 'com.android.application'\n\nandroid {\n    compileSdkVersion 23\n    buildToolsVersion \"25.0.2\"\n\n    lintOptions {\n        abortOnError false\n    }\n\n    sourceSets {\n        main {\n            // TensorFlow Java API sources.\n            java {\n                srcDir '../../java/src/main/java'\n                exclude '**/examples/**'\n            }\n\n            // Android TensorFlow wrappers, etc.\n            java {\n                srcDir '../../contrib/android/java'\n            }\n\n            // Android demo app sources.\n            java {\n                srcDir 'src'\n            }\n\n            manifest.srcFile 'AndroidManifest.xml'\n            resources.srcDirs = ['src']\n            aidl.srcDirs = ['src']\n            renderscript.srcDirs = ['src']\n            res.srcDirs = ['res']\n            assets.srcDirs = [project.ext.ASSET_DIR]\n            jniLibs.srcDirs = ['libs']\n        }\n\n        debug.setRoot('build-types/debug')\n        release.setRoot('build-types/release')\n    }\n}\n\n//task buildNativeBazel(type: Exec) {\n//    workingDir '../../..'\n//    commandLine bazelLocation, 'build', '-c', 'opt',  \\\n//         'tensorflow/examples/android:tensorflow_native_libs',  \\\n//         '--crosstool_top=//external:android/crosstool',  \\\n//         '--cpu=' + cpuType,  \\\n//         '--host_crosstool_top=@bazel_tools//tools/cpp:toolchain'\n//}\n\n//task buildNativeMake(type: Exec) {\n//    environment \"NDK_ROOT\", makeNdkRoot\n//    // Tip: install ccache and uncomment the following to speed up\n//    // builds significantly.\n//    // environment \"CC_PREFIX\", 'ccache'\n//    workingDir '../../..'\n//    commandLine 'tensorflow/contrib/makefile/build_all_android.sh',  \\\n//         '-s',  \\\n//         'tensorflow/contrib/makefile/sub_makefiles/android/Makefile.in',  \\\n//         '-t',  \\\n//         'libtensorflow_inference.so libtensorflow_demo.so'  \\\n//         //, '-T'  // Uncomment to skip protobuf and speed up subsequent builds.\n//}\n\n\ntask copyNativeLibs(type: Copy) {\n    from demoLibPath\n    from inferenceLibPath\n    into nativeOutDir\n    duplicatesStrategy = 'include'\n//    dependsOn nativeBuildRule\n    fileMode 0644\n}\n\n\ntasks.whenTaskAdded { task ->\n    if (task.name == 'assembleDebug') {\n        task.dependsOn 'copyNativeLibs'\n    }\n    if (task.name == 'assembleRelease') {\n        task.dependsOn 'copyNativeLibs'\n    }\n}\n\n// Download default models; if you wish to use your own models then\n// place them in the \"assets\" directory and comment out this line.\n//apply from: \"download-models.gradle\"", "body": "I used the prebuilt libraries (copied the folder `libs `from the prebuilt APK as is in the root of the project) and modified the script as follows (I commented unnecessary tasks) and it is now building OK.\r\n```\r\n// This file provides basic support for building the TensorFlow demo\r\n// in Android Studio with Gradle.\r\n//\r\n// Note that Bazel is still used by default to compile the native libs,\r\n// and should be installed at the location noted below. This build file\r\n// automates the process of calling out to it and copying the compiled\r\n// libraries back into the appropriate directory.\r\n//\r\n// Alternatively, experimental support for Makefile builds is provided by\r\n// setting buildWithMake below to true. This will allow building the demo\r\n// on Windows machines, but note that full equivalence with the Bazel\r\n// build is not yet guaranteed. See comments below for caveats and tips\r\n// for speeding up the build, such as as enabling ccache.\r\n\r\n// Set to true to build with make.\r\n// NOTE: Running a make build will cause subsequent Bazel builds to *fail*\r\n// unless the contrib/makefile/downloads/ and gen/ dirs are deleted afterwards.\r\ndef buildWithMake = false\r\n\r\n// Controls output directory in APK and CPU type for Bazel builds.\r\n// NOTE: Does not affect the Makefile build target API (yet), which currently\r\n// assumes armeabi-v7a. If building with make, changing this will require\r\n// editing the Makefile as well.\r\ndef cpuType = 'armeabi-v7a'\r\n\r\n// Output directory in the local directory for packaging into the APK.\r\ndef nativeOutDir = 'libs/' + cpuType\r\n\r\n// Default to building with Bazel and override with make if requested.\r\n//def nativeBuildRule = 'buildNativeBazel'\r\ndef demoLibPath = 'libs/' + cpuType + 'libtensorflow_demo.so'\r\ndef inferenceLibPath = 'libs/' + cpuType + 'libtensorflow_inference.so'\r\n//if (buildWithMake) {\r\n//    nativeBuildRule = 'buildNativeMake'\r\n//    demoLibPath = '../../../tensorflow/contrib/makefile/gen/lib/libtensorflow_demo.so'\r\n//    inferenceLibPath = '../../../tensorflow/contrib/makefile/gen/lib/libtensorflow_inference.so'\r\n//}\r\n\r\n// Defines the NDK location for Makefile builds. Does *not* affect Bazel builds.\r\n// Override with your absolute NDK location if this fails to get the location\r\n// automatically.\r\ndef makeNdkRoot = System.getenv('NDK_ROOT')\r\n\r\n// If building with Bazel, this is the location of the bazel binary.\r\n// NOTE: Bazel does not yet support building for Android on Windows,\r\n// so in this case the Makefile build must be used as described above.\r\ndef bazelLocation = '/usr/local/bin/bazel'\r\n\r\nproject.buildDir = 'gradleBuild'\r\ngetProject().setBuildDir('gradleBuild')\r\n\r\n// import DownloadModels task\r\nproject.ext.ASSET_DIR = projectDir.toString() + '/assets'\r\nproject.ext.TMP_DIR   = project.buildDir.toString() + '/downloads'\r\n\r\nbuildscript {\r\n    repositories {\r\n        jcenter()\r\n    }\r\n\r\n    dependencies {\r\n        classpath 'com.android.tools.build:gradle:2.3.1'\r\n    }\r\n}\r\n\r\napply plugin: 'com.android.application'\r\n\r\nandroid {\r\n    compileSdkVersion 23\r\n    buildToolsVersion \"25.0.2\"\r\n\r\n    lintOptions {\r\n        abortOnError false\r\n    }\r\n\r\n    sourceSets {\r\n        main {\r\n            // TensorFlow Java API sources.\r\n            java {\r\n                srcDir '../../java/src/main/java'\r\n                exclude '**/examples/**'\r\n            }\r\n\r\n            // Android TensorFlow wrappers, etc.\r\n            java {\r\n                srcDir '../../contrib/android/java'\r\n            }\r\n\r\n            // Android demo app sources.\r\n            java {\r\n                srcDir 'src'\r\n            }\r\n\r\n            manifest.srcFile 'AndroidManifest.xml'\r\n            resources.srcDirs = ['src']\r\n            aidl.srcDirs = ['src']\r\n            renderscript.srcDirs = ['src']\r\n            res.srcDirs = ['res']\r\n            assets.srcDirs = [project.ext.ASSET_DIR]\r\n            jniLibs.srcDirs = ['libs']\r\n        }\r\n\r\n        debug.setRoot('build-types/debug')\r\n        release.setRoot('build-types/release')\r\n    }\r\n}\r\n\r\n//task buildNativeBazel(type: Exec) {\r\n//    workingDir '../../..'\r\n//    commandLine bazelLocation, 'build', '-c', 'opt',  \\\r\n//         'tensorflow/examples/android:tensorflow_native_libs',  \\\r\n//         '--crosstool_top=//external:android/crosstool',  \\\r\n//         '--cpu=' + cpuType,  \\\r\n//         '--host_crosstool_top=@bazel_tools//tools/cpp:toolchain'\r\n//}\r\n\r\n//task buildNativeMake(type: Exec) {\r\n//    environment \"NDK_ROOT\", makeNdkRoot\r\n//    // Tip: install ccache and uncomment the following to speed up\r\n//    // builds significantly.\r\n//    // environment \"CC_PREFIX\", 'ccache'\r\n//    workingDir '../../..'\r\n//    commandLine 'tensorflow/contrib/makefile/build_all_android.sh',  \\\r\n//         '-s',  \\\r\n//         'tensorflow/contrib/makefile/sub_makefiles/android/Makefile.in',  \\\r\n//         '-t',  \\\r\n//         'libtensorflow_inference.so libtensorflow_demo.so'  \\\r\n//         //, '-T'  // Uncomment to skip protobuf and speed up subsequent builds.\r\n//}\r\n\r\n\r\ntask copyNativeLibs(type: Copy) {\r\n    from demoLibPath\r\n    from inferenceLibPath\r\n    into nativeOutDir\r\n    duplicatesStrategy = 'include'\r\n//    dependsOn nativeBuildRule\r\n    fileMode 0644\r\n}\r\n\r\n\r\ntasks.whenTaskAdded { task ->\r\n    if (task.name == 'assembleDebug') {\r\n        task.dependsOn 'copyNativeLibs'\r\n    }\r\n    if (task.name == 'assembleRelease') {\r\n        task.dependsOn 'copyNativeLibs'\r\n    }\r\n}\r\n\r\n// Download default models; if you wish to use your own models then\r\n// place them in the \"assets\" directory and comment out this line.\r\n//apply from: \"download-models.gradle\"\r\n\r\n\r\n```"}