{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/193564469", "pull_request_review_id": 126559342, "id": 193564469, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzU2NDQ2OQ==", "diff_hunk": "@@ -0,0 +1,368 @@\n+/* Copyright 2017 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+#include <aws/core/Aws.h>\n+#include <aws/core/config/AWSProfileConfigLoader.h>\n+#include <aws/core/utils/Outcome.h>\n+#include <aws/kinesis/KinesisClient.h>\n+#include <aws/kinesis/model/DescribeStreamRequest.h>\n+#include <aws/kinesis/model/GetRecordsRequest.h>\n+#include <aws/kinesis/model/GetShardIteratorRequest.h>\n+#include <aws/kinesis/model/PutRecordsRequest.h>\n+#include <aws/kinesis/model/ShardIteratorType.h>\n+#include \"tensorflow/core/framework/dataset.h\"\n+#include \"tensorflow/core/platform/s3/aws_crypto.h\"\n+\n+namespace tensorflow {\n+namespace {\n+\n+Aws::Client::ClientConfiguration& GetDefaultClientConfig() {\n+  static mutex mu(LINKER_INITIALIZED);\n+  static bool init(false);\n+  static Aws::Client::ClientConfiguration config;\n+\n+  std::lock_guard<mutex> lock(mu);\n+\n+  if (!init) {\n+    const char* endpoint = getenv(\"KINESIS_ENDPOINT\");\n+    if (endpoint) {\n+      config.endpointOverride = Aws::String(endpoint);\n+    }\n+    const char* region = getenv(\"AWS_REGION\");\n+    if (region) {\n+      config.region = Aws::String(region);\n+    } else {\n+      // Load config file (e.g., ~/.aws/config) only if AWS_SDK_LOAD_CONFIG\n+      // is set with a truthy value.\n+      const char* load_config_env = getenv(\"AWS_SDK_LOAD_CONFIG\");\n+      string load_config =\n+          load_config_env ? str_util::Lowercase(load_config_env) : \"\";\n+      if (load_config == \"true\" || load_config == \"1\") {\n+        Aws::String config_file;\n+        // If AWS_CONFIG_FILE is set then use it, otherwise use ~/.aws/config.\n+        const char* config_file_env = getenv(\"AWS_CONFIG_FILE\");\n+        if (config_file_env) {\n+          config_file = config_file_env;\n+        } else {\n+          const char* home_env = getenv(\"HOME\");\n+          if (home_env) {\n+            config_file = home_env;\n+            config_file += \"/.aws/config\";\n+          }\n+        }\n+        Aws::Config::AWSConfigFileProfileConfigLoader loader(config_file);\n+        loader.Load();", "path": "tensorflow/contrib/kinesis/kernels/kinesis_dataset_ops.cc", "position": null, "original_position": 66, "commit_id": "9d119a1df765b5d45b6680a1d33b180648f102bf", "original_commit_id": "6e78998783dbb457f12286c5f2ca58cd5b635e96", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "body": "What happens if this returns `false`? Can you add add something to report an error back to the user?", "created_at": "2018-06-06T21:26:13Z", "updated_at": "2018-06-29T23:15:25Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/19712#discussion_r193564469", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19712", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/193564469"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/19712#discussion_r193564469"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19712"}}, "body_html": "<p>What happens if this returns <code>false</code>? Can you add add something to report an error back to the user?</p>", "body_text": "What happens if this returns false? Can you add add something to report an error back to the user?"}