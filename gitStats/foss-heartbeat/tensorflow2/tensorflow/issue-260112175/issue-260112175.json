{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13278", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13278/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13278/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13278/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/13278", "id": 260112175, "node_id": "MDU6SXNzdWUyNjAxMTIxNzU=", "number": 13278, "title": "tf_cc_binary() makes opencv unable to load an image", "user": {"login": "CodingJonas", "id": 15234763, "node_id": "MDQ6VXNlcjE1MjM0NzYz", "avatar_url": "https://avatars0.githubusercontent.com/u/15234763?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CodingJonas", "html_url": "https://github.com/CodingJonas", "followers_url": "https://api.github.com/users/CodingJonas/followers", "following_url": "https://api.github.com/users/CodingJonas/following{/other_user}", "gists_url": "https://api.github.com/users/CodingJonas/gists{/gist_id}", "starred_url": "https://api.github.com/users/CodingJonas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CodingJonas/subscriptions", "organizations_url": "https://api.github.com/users/CodingJonas/orgs", "repos_url": "https://api.github.com/users/CodingJonas/repos", "events_url": "https://api.github.com/users/CodingJonas/events{/privacy}", "received_events_url": "https://api.github.com/users/CodingJonas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-09-24T20:09:05Z", "updated_at": "2017-12-05T17:21:41Z", "closed_at": "2017-12-05T17:21:41Z", "author_association": "NONE", "body_html": "<p>I try to load an image with opencv and work further on it with the tensorflow framework. Unfortunately I get a really weird behaviour:</p>\n<p>The image is loaded without problems using <code>cc_binary(...)</code> in Bazel. Changing it to <code>tf_cc_binary(...)</code> doesn't stop the code from compilation or running, but opencv can't load any images any more.</p>\n<h3>Source code / logs</h3>\n<p>This is my BUILD file:</p>\n<pre><code>load(\"//tensorflow:tensorflow.bzl\", \"tf_cc_binary\")\n\n#tf_cc_binary( &lt;-- using this, no image could be loaded anymore\ncc_binary(\n    name = \"main\",\n    srcs = [\"main.cpp\"],\n    linkopts = [\n        \"-lopencv_core\",\n        \"-lopencv_highgui\",\n        \"-lopencv_imgcodecs\",\n        \"-lopencv_imgproc\",\n    ],\n    visibility=[\"//visibility:public\"]\n)\n</code></pre>\n<p>I use the standard example code from the opencv website. Again, it is working and the image gets loaded using <code>cc_binary(</code>:</p>\n<pre><code>#include &lt;opencv2/core/core.hpp&gt;\n#include &lt;opencv2/highgui/highgui.hpp&gt;\n#include &lt;iostream&gt;\n\nusing namespace cv;\nusing namespace std;\n\nint main( int argc, char** argv )\n{\n    Mat image;\n    image = imread(\"tensorflow/test/imageHolder/data/example.jpg\", CV_LOAD_IMAGE_COLOR);   // Read the file\n\n    if(! image.data )                              // Check for invalid input\n    {\n        cout &lt;&lt;  \"Could not open or find the image\" &lt;&lt; std::endl ;\n        return -1;\n    }\n\n    namedWindow( \"Display window\", WINDOW_AUTOSIZE );// Create a window for display.\n    imshow( \"Display window\", image );                   // Show our image inside it.\n\n    waitKey(0);                                          // Wait for a keystroke in the window\n    return 0;\n}\n</code></pre>\n<p>This is my file structure in case it matters:</p>\n<pre><code>\u251c\u2500\u2500 data\n \u00a0\u00a0 \u251c\u2500\u2500 example.jpg\n\u2514\u2500\u2500 src\n    \u251c\u2500\u2500 BUILD\n    \u251c\u2500\u2500 main.cpp\n</code></pre>", "body_text": "I try to load an image with opencv and work further on it with the tensorflow framework. Unfortunately I get a really weird behaviour:\nThe image is loaded without problems using cc_binary(...) in Bazel. Changing it to tf_cc_binary(...) doesn't stop the code from compilation or running, but opencv can't load any images any more.\nSource code / logs\nThis is my BUILD file:\nload(\"//tensorflow:tensorflow.bzl\", \"tf_cc_binary\")\n\n#tf_cc_binary( <-- using this, no image could be loaded anymore\ncc_binary(\n    name = \"main\",\n    srcs = [\"main.cpp\"],\n    linkopts = [\n        \"-lopencv_core\",\n        \"-lopencv_highgui\",\n        \"-lopencv_imgcodecs\",\n        \"-lopencv_imgproc\",\n    ],\n    visibility=[\"//visibility:public\"]\n)\n\nI use the standard example code from the opencv website. Again, it is working and the image gets loaded using cc_binary(:\n#include <opencv2/core/core.hpp>\n#include <opencv2/highgui/highgui.hpp>\n#include <iostream>\n\nusing namespace cv;\nusing namespace std;\n\nint main( int argc, char** argv )\n{\n    Mat image;\n    image = imread(\"tensorflow/test/imageHolder/data/example.jpg\", CV_LOAD_IMAGE_COLOR);   // Read the file\n\n    if(! image.data )                              // Check for invalid input\n    {\n        cout <<  \"Could not open or find the image\" << std::endl ;\n        return -1;\n    }\n\n    namedWindow( \"Display window\", WINDOW_AUTOSIZE );// Create a window for display.\n    imshow( \"Display window\", image );                   // Show our image inside it.\n\n    waitKey(0);                                          // Wait for a keystroke in the window\n    return 0;\n}\n\nThis is my file structure in case it matters:\n\u251c\u2500\u2500 data\n \u00a0\u00a0 \u251c\u2500\u2500 example.jpg\n\u2514\u2500\u2500 src\n    \u251c\u2500\u2500 BUILD\n    \u251c\u2500\u2500 main.cpp", "body": "I try to load an image with opencv and work further on it with the tensorflow framework. Unfortunately I get a really weird behaviour:\r\n\r\nThe image is loaded without problems using `cc_binary(...)` in Bazel. Changing it to `tf_cc_binary(...)` doesn't stop the code from compilation or running, but opencv can't load any images any more.\r\n\r\n### Source code / logs\r\nThis is my BUILD file:\r\n\r\n    load(\"//tensorflow:tensorflow.bzl\", \"tf_cc_binary\")\r\n\r\n    #tf_cc_binary( <-- using this, no image could be loaded anymore\r\n    cc_binary(\r\n        name = \"main\",\r\n        srcs = [\"main.cpp\"],\r\n        linkopts = [\r\n            \"-lopencv_core\",\r\n            \"-lopencv_highgui\",\r\n            \"-lopencv_imgcodecs\",\r\n            \"-lopencv_imgproc\",\r\n        ],\r\n        visibility=[\"//visibility:public\"]\r\n    )\r\n\r\nI use the standard example code from the opencv website. Again, it is working and the image gets loaded using `cc_binary(`:\r\n\r\n\r\n    #include <opencv2/core/core.hpp>\r\n    #include <opencv2/highgui/highgui.hpp>\r\n    #include <iostream>\r\n    \r\n    using namespace cv;\r\n    using namespace std;\r\n    \r\n    int main( int argc, char** argv )\r\n    {\r\n        Mat image;\r\n        image = imread(\"tensorflow/test/imageHolder/data/example.jpg\", CV_LOAD_IMAGE_COLOR);   // Read the file\r\n    \r\n        if(! image.data )                              // Check for invalid input\r\n        {\r\n            cout <<  \"Could not open or find the image\" << std::endl ;\r\n            return -1;\r\n        }\r\n    \r\n        namedWindow( \"Display window\", WINDOW_AUTOSIZE );// Create a window for display.\r\n        imshow( \"Display window\", image );                   // Show our image inside it.\r\n    \r\n        waitKey(0);                                          // Wait for a keystroke in the window\r\n        return 0;\r\n    }\r\n\r\nThis is my file structure in case it matters:\r\n\r\n    \u251c\u2500\u2500 data\r\n     \u00a0\u00a0 \u251c\u2500\u2500 example.jpg\r\n    \u2514\u2500\u2500 src\r\n        \u251c\u2500\u2500 BUILD\r\n        \u251c\u2500\u2500 main.cpp\r\n"}