{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19318", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19318/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19318/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19318/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19318", "id": 323526309, "node_id": "MDU6SXNzdWUzMjM1MjYzMDk=", "number": 19318, "title": "Simple Keras model does not compile in float64 mode", "user": {"login": "batzner", "id": 10948237, "node_id": "MDQ6VXNlcjEwOTQ4MjM3", "avatar_url": "https://avatars3.githubusercontent.com/u/10948237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/batzner", "html_url": "https://github.com/batzner", "followers_url": "https://api.github.com/users/batzner/followers", "following_url": "https://api.github.com/users/batzner/following{/other_user}", "gists_url": "https://api.github.com/users/batzner/gists{/gist_id}", "starred_url": "https://api.github.com/users/batzner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/batzner/subscriptions", "organizations_url": "https://api.github.com/users/batzner/orgs", "repos_url": "https://api.github.com/users/batzner/repos", "events_url": "https://api.github.com/users/batzner/events{/privacy}", "received_events_url": "https://api.github.com/users/batzner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-05-16T08:53:10Z", "updated_at": "2018-06-04T16:44:22Z", "closed_at": "2018-06-04T16:44:22Z", "author_association": "NONE", "body_html": "<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: macOS Sierra 10.12.6</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.8.0</li>\n<li><strong>Python version</strong>: 3.6.3</li>\n<li><strong>Bazel version (if compiling from source)</strong>: -</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: -</li>\n<li><strong>CUDA/cuDNN version</strong>: CPU only</li>\n<li><strong>GPU model and memory</strong>: CPU only</li>\n<li><strong>Exact command to reproduce</strong>: Run code below</li>\n</ul>\n<p>You can collect some of this information using our environment capture script:</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\">https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh</a></p>\n<p>You can obtain the TensorFlow version with</p>\n<p>python -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"</p>\n<h3>Describe the problem</h3>\n<p>When setting the backend to <code>float64</code>, a simple model does not compile anymore. I have debugged into the issue - the problem arises in the call to <code>weighted(y_true, y_pred, weights, mask=None)</code>, defined in <code>tensorflow.python.keras._impl.keras.engine.training_utils.py</code>. There, <code>weights</code> is</p>\n<p><code>Tensor(\"dense_1_sample_weights:0\", shape=(?,), dtype=float32)</code></p>\n<p>while <code>y_true</code> and <code>y_pred</code> have both the type <code>float64</code>. This causes the subsequent multiplication to error. The weights come from line <code>401</code>, the <code>compile</code> function in <code>tensorflow/python/keras/_impl/keras/engine/training.py</code>:</p>\n<pre><code>sample_weights.append(array_ops.placeholder_with_default(\n                [1.], shape=[None], name=name + '_sample_weights'))\n</code></pre>\n<p>But I have not found a way to make this <code>placeholder_with_default</code> function return <code>float64</code> weights.</p>\n<p><strong>When using <code>keras</code> instead of <code>tensorflow.python.keras</code> it works</strong> (for Keras version 2.1.6).</p>\n<h3>Source code / logs</h3>\n<p>Minimum reproducible test case:</p>\n<pre><code>from tensorflow.python.keras import Model\nfrom tensorflow.python.keras import backend as K\nfrom tensorflow.python.keras.layers import Input, Dense\n\nK.set_floatx('float64')\n\ninput_ = Input((5,))\noutput = Dense(1)(input_)\nmodel = Model(input_, output)\nmodel.compile('rmsprop', 'mse')\n</code></pre>\n<p>Stack trace:</p>\n<pre><code>Traceback (most recent call last):\n  File \"/Users/kilian/dev/tmp/src/test/float64.py\", line 13, in &lt;module&gt;\n    model.compile('rmsprop', 'mse')\n  File \"/Users/kilian/dev/tmp/venv/lib/python3.6/site-packages/tensorflow/python/keras/_impl/keras/engine/training.py\", line 428, in compile\n    output_loss = weighted_loss(y_true, y_pred, sample_weight, mask)\n  File \"/Users/kilian/dev/tmp/venv/lib/python3.6/site-packages/tensorflow/python/keras/_impl/keras/engine/training_utils.py\", line 454, in weighted\n    score_array *= weights\n  File \"/Users/kilian/dev/tmp/venv/lib/python3.6/site-packages/tensorflow/python/ops/math_ops.py\", line 970, in binary_op_wrapper\n    y = ops.convert_to_tensor(y, dtype=x.dtype.base_dtype, name=\"y\")\n  File \"/Users/kilian/dev/tmp/venv/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 1014, in convert_to_tensor\n    as_ref=False)\n  File \"/Users/kilian/dev/tmp/venv/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 1104, in internal_convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/Users/kilian/dev/tmp/venv/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 947, in _TensorTensorConversionFunction\n    (dtype.name, t.dtype.name, str(t)))\nValueError: Tensor conversion requested dtype float64 for Tensor with dtype float32: 'Tensor(\"dense_1_sample_weights:0\", shape=(?,), dtype=float32)'\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS Sierra 10.12.6\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.8.0\nPython version: 3.6.3\nBazel version (if compiling from source): -\nGCC/Compiler version (if compiling from source): -\nCUDA/cuDNN version: CPU only\nGPU model and memory: CPU only\nExact command to reproduce: Run code below\n\nYou can collect some of this information using our environment capture script:\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\nYou can obtain the TensorFlow version with\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\nDescribe the problem\nWhen setting the backend to float64, a simple model does not compile anymore. I have debugged into the issue - the problem arises in the call to weighted(y_true, y_pred, weights, mask=None), defined in tensorflow.python.keras._impl.keras.engine.training_utils.py. There, weights is\nTensor(\"dense_1_sample_weights:0\", shape=(?,), dtype=float32)\nwhile y_true and y_pred have both the type float64. This causes the subsequent multiplication to error. The weights come from line 401, the compile function in tensorflow/python/keras/_impl/keras/engine/training.py:\nsample_weights.append(array_ops.placeholder_with_default(\n                [1.], shape=[None], name=name + '_sample_weights'))\n\nBut I have not found a way to make this placeholder_with_default function return float64 weights.\nWhen using keras instead of tensorflow.python.keras it works (for Keras version 2.1.6).\nSource code / logs\nMinimum reproducible test case:\nfrom tensorflow.python.keras import Model\nfrom tensorflow.python.keras import backend as K\nfrom tensorflow.python.keras.layers import Input, Dense\n\nK.set_floatx('float64')\n\ninput_ = Input((5,))\noutput = Dense(1)(input_)\nmodel = Model(input_, output)\nmodel.compile('rmsprop', 'mse')\n\nStack trace:\nTraceback (most recent call last):\n  File \"/Users/kilian/dev/tmp/src/test/float64.py\", line 13, in <module>\n    model.compile('rmsprop', 'mse')\n  File \"/Users/kilian/dev/tmp/venv/lib/python3.6/site-packages/tensorflow/python/keras/_impl/keras/engine/training.py\", line 428, in compile\n    output_loss = weighted_loss(y_true, y_pred, sample_weight, mask)\n  File \"/Users/kilian/dev/tmp/venv/lib/python3.6/site-packages/tensorflow/python/keras/_impl/keras/engine/training_utils.py\", line 454, in weighted\n    score_array *= weights\n  File \"/Users/kilian/dev/tmp/venv/lib/python3.6/site-packages/tensorflow/python/ops/math_ops.py\", line 970, in binary_op_wrapper\n    y = ops.convert_to_tensor(y, dtype=x.dtype.base_dtype, name=\"y\")\n  File \"/Users/kilian/dev/tmp/venv/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 1014, in convert_to_tensor\n    as_ref=False)\n  File \"/Users/kilian/dev/tmp/venv/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 1104, in internal_convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/Users/kilian/dev/tmp/venv/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 947, in _TensorTensorConversionFunction\n    (dtype.name, t.dtype.name, str(t)))\nValueError: Tensor conversion requested dtype float64 for Tensor with dtype float32: 'Tensor(\"dense_1_sample_weights:0\", shape=(?,), dtype=float32)'", "body": "------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: macOS Sierra 10.12.6\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.8.0\r\n- **Python version**: 3.6.3\r\n- **Bazel version (if compiling from source)**: -\r\n- **GCC/Compiler version (if compiling from source)**: -\r\n- **CUDA/cuDNN version**: CPU only\r\n- **GPU model and memory**: CPU only\r\n- **Exact command to reproduce**: Run code below\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nWhen setting the backend to `float64`, a simple model does not compile anymore. I have debugged into the issue - the problem arises in the call to `weighted(y_true, y_pred, weights, mask=None)`, defined in `tensorflow.python.keras._impl.keras.engine.training_utils.py`. There, `weights` is\r\n\r\n`Tensor(\"dense_1_sample_weights:0\", shape=(?,), dtype=float32)`\r\n\r\nwhile `y_true` and `y_pred` have both the type `float64`. This causes the subsequent multiplication to error. The weights come from line `401`, the `compile` function in `tensorflow/python/keras/_impl/keras/engine/training.py`:\r\n\r\n```\r\nsample_weights.append(array_ops.placeholder_with_default(\r\n                [1.], shape=[None], name=name + '_sample_weights'))\r\n```\r\n\r\nBut I have not found a way to make this `placeholder_with_default` function return `float64` weights.\r\n\r\n**When using `keras` instead of `tensorflow.python.keras` it works** (for Keras version 2.1.6).\r\n\r\n### Source code / logs\r\nMinimum reproducible test case:\r\n```\r\nfrom tensorflow.python.keras import Model\r\nfrom tensorflow.python.keras import backend as K\r\nfrom tensorflow.python.keras.layers import Input, Dense\r\n\r\nK.set_floatx('float64')\r\n\r\ninput_ = Input((5,))\r\noutput = Dense(1)(input_)\r\nmodel = Model(input_, output)\r\nmodel.compile('rmsprop', 'mse')\r\n```\r\n\r\nStack trace:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/kilian/dev/tmp/src/test/float64.py\", line 13, in <module>\r\n    model.compile('rmsprop', 'mse')\r\n  File \"/Users/kilian/dev/tmp/venv/lib/python3.6/site-packages/tensorflow/python/keras/_impl/keras/engine/training.py\", line 428, in compile\r\n    output_loss = weighted_loss(y_true, y_pred, sample_weight, mask)\r\n  File \"/Users/kilian/dev/tmp/venv/lib/python3.6/site-packages/tensorflow/python/keras/_impl/keras/engine/training_utils.py\", line 454, in weighted\r\n    score_array *= weights\r\n  File \"/Users/kilian/dev/tmp/venv/lib/python3.6/site-packages/tensorflow/python/ops/math_ops.py\", line 970, in binary_op_wrapper\r\n    y = ops.convert_to_tensor(y, dtype=x.dtype.base_dtype, name=\"y\")\r\n  File \"/Users/kilian/dev/tmp/venv/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 1014, in convert_to_tensor\r\n    as_ref=False)\r\n  File \"/Users/kilian/dev/tmp/venv/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 1104, in internal_convert_to_tensor\r\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n  File \"/Users/kilian/dev/tmp/venv/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 947, in _TensorTensorConversionFunction\r\n    (dtype.name, t.dtype.name, str(t)))\r\nValueError: Tensor conversion requested dtype float64 for Tensor with dtype float32: 'Tensor(\"dense_1_sample_weights:0\", shape=(?,), dtype=float32)'\r\n```"}