{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/430078348", "html_url": "https://github.com/tensorflow/tensorflow/issues/22546#issuecomment-430078348", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22546", "id": 430078348, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDA3ODM0OA==", "user": {"login": "azaks2", "id": 40365382, "node_id": "MDQ6VXNlcjQwMzY1Mzgy", "avatar_url": "https://avatars2.githubusercontent.com/u/40365382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azaks2", "html_url": "https://github.com/azaks2", "followers_url": "https://api.github.com/users/azaks2/followers", "following_url": "https://api.github.com/users/azaks2/following{/other_user}", "gists_url": "https://api.github.com/users/azaks2/gists{/gist_id}", "starred_url": "https://api.github.com/users/azaks2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azaks2/subscriptions", "organizations_url": "https://api.github.com/users/azaks2/orgs", "repos_url": "https://api.github.com/users/azaks2/repos", "events_url": "https://api.github.com/users/azaks2/events{/privacy}", "received_events_url": "https://api.github.com/users/azaks2/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-16T02:25:05Z", "updated_at": "2018-10-16T02:25:05Z", "author_association": "MEMBER", "body_html": "<p>If you run under gdb you can see the call stack is from tensorflow::GraphOptimizer::Optimize to perform constant folding. To try for yourself:<br>\ngdb python<br>\nbr NumIntraOpThreads::Compute<br>\nrun code.py<br>\nwhere</p>\n<p>So things work as expected. If you really want to see 10 and avoid constant folding try:</p>\n<p>import tensorflow as tf<br>\nprint('Tensorflow version is ', tf.<strong>version</strong>)<br>\nn_module = tf.load_op_library('./num_intra_op_threads.so')<br>\nprint(tf.<strong>version</strong>)<br>\nx = tf.placeholder(tf.float32, name=\"x\")<br>\nwith tf.Session(config=tf.ConfigProto(intra_op_parallelism_threads=10, inter_op_parallelism_threads=10)):<br>\nprint(n_module.num_intra_op_threads(x).eval(feed_dict={x:2.0}))</p>", "body_text": "If you run under gdb you can see the call stack is from tensorflow::GraphOptimizer::Optimize to perform constant folding. To try for yourself:\ngdb python\nbr NumIntraOpThreads::Compute\nrun code.py\nwhere\nSo things work as expected. If you really want to see 10 and avoid constant folding try:\nimport tensorflow as tf\nprint('Tensorflow version is ', tf.version)\nn_module = tf.load_op_library('./num_intra_op_threads.so')\nprint(tf.version)\nx = tf.placeholder(tf.float32, name=\"x\")\nwith tf.Session(config=tf.ConfigProto(intra_op_parallelism_threads=10, inter_op_parallelism_threads=10)):\nprint(n_module.num_intra_op_threads(x).eval(feed_dict={x:2.0}))", "body": "If you run under gdb you can see the call stack is from tensorflow::GraphOptimizer::Optimize to perform constant folding. To try for yourself:\r\ngdb python\r\nbr NumIntraOpThreads::Compute\r\nrun code.py\r\nwhere\r\n\r\nSo things work as expected. If you really want to see 10 and avoid constant folding try:\r\n                                                                                                                                                          \r\nimport tensorflow as tf\r\nprint('Tensorflow version is ', tf.__version__)\r\nn_module = tf.load_op_library('./num_intra_op_threads.so')\r\nprint(tf.__version__)\r\nx = tf.placeholder(tf.float32, name=\"x\")\r\nwith tf.Session(config=tf.ConfigProto(intra_op_parallelism_threads=10, inter_op_parallelism_threads=10)):\r\n  print(n_module.num_intra_op_threads(x).eval(feed_dict={x:2.0}))\r\n\r\n\r\n"}