{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22546", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22546/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22546/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22546/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22546", "id": 364189873, "node_id": "MDU6SXNzdWUzNjQxODk4NzM=", "number": 22546, "title": "Number of intra_op_parallelism_threads Issue with TF 1.10", "user": {"login": "priyankjain", "id": 4019056, "node_id": "MDQ6VXNlcjQwMTkwNTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/4019056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/priyankjain", "html_url": "https://github.com/priyankjain", "followers_url": "https://api.github.com/users/priyankjain/followers", "following_url": "https://api.github.com/users/priyankjain/following{/other_user}", "gists_url": "https://api.github.com/users/priyankjain/gists{/gist_id}", "starred_url": "https://api.github.com/users/priyankjain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/priyankjain/subscriptions", "organizations_url": "https://api.github.com/users/priyankjain/orgs", "repos_url": "https://api.github.com/users/priyankjain/repos", "events_url": "https://api.github.com/users/priyankjain/events{/privacy}", "received_events_url": "https://api.github.com/users/priyankjain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "azaks2", "id": 40365382, "node_id": "MDQ6VXNlcjQwMzY1Mzgy", "avatar_url": "https://avatars2.githubusercontent.com/u/40365382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azaks2", "html_url": "https://github.com/azaks2", "followers_url": "https://api.github.com/users/azaks2/followers", "following_url": "https://api.github.com/users/azaks2/following{/other_user}", "gists_url": "https://api.github.com/users/azaks2/gists{/gist_id}", "starred_url": "https://api.github.com/users/azaks2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azaks2/subscriptions", "organizations_url": "https://api.github.com/users/azaks2/orgs", "repos_url": "https://api.github.com/users/azaks2/repos", "events_url": "https://api.github.com/users/azaks2/events{/privacy}", "received_events_url": "https://api.github.com/users/azaks2/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "azaks2", "id": 40365382, "node_id": "MDQ6VXNlcjQwMzY1Mzgy", "avatar_url": "https://avatars2.githubusercontent.com/u/40365382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azaks2", "html_url": "https://github.com/azaks2", "followers_url": "https://api.github.com/users/azaks2/followers", "following_url": "https://api.github.com/users/azaks2/following{/other_user}", "gists_url": "https://api.github.com/users/azaks2/gists{/gist_id}", "starred_url": "https://api.github.com/users/azaks2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azaks2/subscriptions", "organizations_url": "https://api.github.com/users/azaks2/orgs", "repos_url": "https://api.github.com/users/azaks2/repos", "events_url": "https://api.github.com/users/azaks2/events{/privacy}", "received_events_url": "https://api.github.com/users/azaks2/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2018-09-26T20:09:33Z", "updated_at": "2018-10-19T20:12:06Z", "closed_at": "2018-10-19T20:12:06Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: macOS High Sierra version 10.13.6</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: N/A</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.10</li>\n<li><strong>Python version</strong>: 2.7.10</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: None (It's a CPU build)</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>: Please see sections below</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>In tensorflow 1.7.0, getting the number of threads in the intra_op pool was possible with the following line of code in C++:<br>\n<code>context-&gt;device()-&gt;tensorflow_cpu_worker_threads()-&gt;num_threads</code><br>\nwhere context is an object of type OpKernelContext. (because of <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/7bccde15ce0dd29dce62092a5e9d48ffdc772963/tensorflow/core/common_runtime/local_device.cc#L43\">tensorflow/tensorflow/core/common_runtime/local_device.cc</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 43\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/7bccde15ce0dd29dce62092a5e9d48ffdc772963\">7bccde1</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L43\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"43\"></td>\n          <td id=\"LC43\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> eigen_worker_threads_.<span class=\"pl-smi\">num_threads</span> = intra_op_parallelism_threads; </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n).</p>\n<p>If the corresponding ConfigProto was set using the following python code:</p>\n<pre><code>import tensorflow as tf \nconf = tf.ConfigProto(inter_op_parallelism_threads=5, intra_op_parallelism_threads=4) \nsess = tf.Session(config=conf)\n</code></pre>\n<p>TF 1.7 would output the value of <code>context-&gt;device()-&gt;tensorflow_cpu_worker_threads()-&gt;num_threads</code> as <code>4</code>.</p>\n<p>TF 1.10 outputs the value of <code>context-&gt;device()-&gt;tensorflow_cpu_worker_threads()-&gt;num_threads</code> as <code>1</code>, irrespective of the intra_op_parallelism_threads value specified in the ConfigProto.</p>\n<p>I was wondering if something changed in the TF upgrade from 1.7.0 to 1.10.0 to cause this piece of code to give a different value or is the number of threads in the threadpool truly 1?</p>\n<p>Other relevant information:</p>\n<ul>\n<li>\n<p>macOS High Sierra version <code>10.13.6</code></p>\n</li>\n<li>\n<p>Working TF version: <code>1.7.0</code></p>\n</li>\n<li>\n<p>Breaking TF version: <code>1.10.0</code></p>\n</li>\n<li>\n<p>Python information: Python 2.7.10 (default, Oct 6 2017, 22:29:07) [GCC 4.2.1 Compatible Apple LLVM 9.0.0 (clang-900.0.31)] on darwin</p>\n</li>\n<li>\n<p>Detailed debugging information from tensorflow (by setting <code>TF_CPP_MIN_VLOG_LEVEL=3</code> before running the python program) says that TF 1.10 is indeed planning to create a thread pool of size 4 on this line of C++ code. The C++ piece of code at the start of this post however outputs value 1.</p>\n</li>\n<li>\n<p>This is the first and only session being created in the program.</p>\n</li>\n</ul>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS High Sierra version 10.13.6\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.10\nPython version: 2.7.10\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: None (It's a CPU build)\nGPU model and memory: N/A\nExact command to reproduce: Please see sections below\n\nDescribe the problem\nIn tensorflow 1.7.0, getting the number of threads in the intra_op pool was possible with the following line of code in C++:\ncontext->device()->tensorflow_cpu_worker_threads()->num_threads\nwhere context is an object of type OpKernelContext. (because of \n  \n    \n      tensorflow/tensorflow/core/common_runtime/local_device.cc\n    \n    \n         Line 43\n      in\n      7bccde1\n    \n    \n    \n    \n\n        \n          \n           eigen_worker_threads_.num_threads = intra_op_parallelism_threads; \n        \n    \n  \n\n).\nIf the corresponding ConfigProto was set using the following python code:\nimport tensorflow as tf \nconf = tf.ConfigProto(inter_op_parallelism_threads=5, intra_op_parallelism_threads=4) \nsess = tf.Session(config=conf)\n\nTF 1.7 would output the value of context->device()->tensorflow_cpu_worker_threads()->num_threads as 4.\nTF 1.10 outputs the value of context->device()->tensorflow_cpu_worker_threads()->num_threads as 1, irrespective of the intra_op_parallelism_threads value specified in the ConfigProto.\nI was wondering if something changed in the TF upgrade from 1.7.0 to 1.10.0 to cause this piece of code to give a different value or is the number of threads in the threadpool truly 1?\nOther relevant information:\n\n\nmacOS High Sierra version 10.13.6\n\n\nWorking TF version: 1.7.0\n\n\nBreaking TF version: 1.10.0\n\n\nPython information: Python 2.7.10 (default, Oct 6 2017, 22:29:07) [GCC 4.2.1 Compatible Apple LLVM 9.0.0 (clang-900.0.31)] on darwin\n\n\nDetailed debugging information from tensorflow (by setting TF_CPP_MIN_VLOG_LEVEL=3 before running the python program) says that TF 1.10 is indeed planning to create a thread pool of size 4 on this line of C++ code. The C++ piece of code at the start of this post however outputs value 1.\n\n\nThis is the first and only session being created in the program.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: macOS High Sierra version 10.13.6\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: N/A\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.10\r\n- **Python version**: 2.7.10\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: None (It's a CPU build)\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: Please see sections below\r\n\r\n### Describe the problem\r\n\r\n\r\nIn tensorflow 1.7.0, getting the number of threads in the intra_op pool was possible with the following line of code in C++:\r\n`context->device()->tensorflow_cpu_worker_threads()->num_threads`\r\nwhere context is an object of type OpKernelContext. (because of https://github.com/tensorflow/tensorflow/blob/7bccde15ce0dd29dce62092a5e9d48ffdc772963/tensorflow/core/common_runtime/local_device.cc#L43).\r\n\r\nIf the corresponding ConfigProto was set using the following python code:\r\n```\r\nimport tensorflow as tf \r\nconf = tf.ConfigProto(inter_op_parallelism_threads=5, intra_op_parallelism_threads=4) \r\nsess = tf.Session(config=conf)\r\n```\r\n\r\nTF 1.7 would output the value of `context->device()->tensorflow_cpu_worker_threads()->num_threads` as `4`.\r\n\r\nTF 1.10 outputs the value of `context->device()->tensorflow_cpu_worker_threads()->num_threads` as `1`, irrespective of the intra_op_parallelism_threads value specified in the ConfigProto.\r\n\r\nI was wondering if something changed in the TF upgrade from 1.7.0 to 1.10.0 to cause this piece of code to give a different value or is the number of threads in the threadpool truly 1?\r\n\r\n\r\nOther relevant information:\r\n\r\n- macOS High Sierra version `10.13.6`\r\n\r\n- Working TF version: `1.7.0`\r\n\r\n- Breaking TF version: `1.10.0`\r\n\r\n- Python information: Python 2.7.10 (default, Oct 6 2017, 22:29:07) [GCC 4.2.1 Compatible Apple LLVM 9.0.0 (clang-900.0.31)] on darwin\r\n\r\n- Detailed debugging information from tensorflow (by setting `TF_CPP_MIN_VLOG_LEVEL=3` before running the python program) says that TF 1.10 is indeed planning to create a thread pool of size 4 on this line of C++ code. The C++ piece of code at the start of this post however outputs value 1.\r\n\r\n- This is the first and only session being created in the program.\r\n"}