{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15134", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15134/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15134/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15134/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15134", "id": 279427567, "node_id": "MDU6SXNzdWUyNzk0Mjc1Njc=", "number": 15134, "title": "contrib STFT magnitudes different to librosa's", "user": {"login": "fedden", "id": 11923487, "node_id": "MDQ6VXNlcjExOTIzNDg3", "avatar_url": "https://avatars2.githubusercontent.com/u/11923487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fedden", "html_url": "https://github.com/fedden", "followers_url": "https://api.github.com/users/fedden/followers", "following_url": "https://api.github.com/users/fedden/following{/other_user}", "gists_url": "https://api.github.com/users/fedden/gists{/gist_id}", "starred_url": "https://api.github.com/users/fedden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fedden/subscriptions", "organizations_url": "https://api.github.com/users/fedden/orgs", "repos_url": "https://api.github.com/users/fedden/repos", "events_url": "https://api.github.com/users/fedden/events{/privacy}", "received_events_url": "https://api.github.com/users/fedden/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-12-05T15:55:13Z", "updated_at": "2018-06-12T04:32:36Z", "closed_at": null, "author_association": "NONE", "body_html": "<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code</strong>: Yes</li>\n<li><strong>OS Platform and Distribution</strong>: Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version</strong>: 1.4</li>\n<li><strong>Python version</strong>: 3.5.2</li>\n<li><strong>Bazel version</strong>: N/A</li>\n<li><strong>GCC/Compiler version</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: 6.0</li>\n<li><strong>GPU model and memory</strong>: nvidia quadro m2000m 4gb</li>\n<li><strong>Exact command to reproduce</strong>: See below code</li>\n</ul>\n<p>Hi all!</p>\n<p>I was comparing the TensorFlow's contrib STFT against librosa's and noticed there are some discrepancies in terms of output between the two. Not sure if this normal between libraries implementations, but I wanted to raise it in case it matters!</p>\n<p>I'm also aware it could be some small bug or difference in implementation/argument that I have supplied.</p>\n<p>Code:</p>\n<pre><code>import tensorflow as tf\nimport numpy as np\nimport librosa\n\nnp.random.seed(666)\nnp.set_printoptions(precision=5, suppress=True)\n\naudio_length_seconds = 2\nsample_rate = 44100\naudio_frames_length = int(sample_rate * audio_length_seconds)\naudio_shape = [None, audio_frames_length]\nfft_size = 1024\nhop_size = 512\n\ntf.reset_default_graph()\n\naudio = tf.placeholder(tf.float32, \n                       shape=audio_shape)\nstfts = tf.contrib.signal.stft(audio, \n                               frame_length=fft_size, \n                               frame_step=hop_size,\n                               fft_length=fft_size,\n                               pad_end=True)\nreal = tf.real(stfts)\nimag = tf.imag(stfts)\nmagnitudes = tf.abs(stfts)\nphases = tf.atan2(imag, real)\nfeatures = tf.concat([magnitudes, phases], axis=2)\n\nsess = tf.Session()\nwith sess.as_default():\n    \n    data = np.random.random((1, audio_frames_length))\n    tf_results = magnitudes.eval({audio: data})\n    \n    lr_results = librosa.core.stft(y=data.reshape((-1)),\n                                   n_fft=fft_size,\n                                   hop_length=hop_size,\n                                   win_length=fft_size)\n                                   \n    lr_results = np.abs(lr_results)\n    \n    difference = np.abs(tf_results - lr_results.T)\n    print(\"Differences:\\nmin:\", np.min(difference), \n          \"max:\", np.max(difference), \n          \"mean:\", np.mean(difference), \n          \"std:\", np.std(difference))\n</code></pre>\n<p>And the expected output from the print would be:</p>\n<pre><code>Differences:\nmin: 6.97374e-05 max: 246.904 mean: 2.92715 std: 2.45132\n</code></pre>", "body_text": "System information\n\nHave I written custom code: Yes\nOS Platform and Distribution: Linux Ubuntu 16.04\nTensorFlow installed from (source or binary): binary\nTensorFlow version: 1.4\nPython version: 3.5.2\nBazel version: N/A\nGCC/Compiler version: N/A\nCUDA/cuDNN version: 6.0\nGPU model and memory: nvidia quadro m2000m 4gb\nExact command to reproduce: See below code\n\nHi all!\nI was comparing the TensorFlow's contrib STFT against librosa's and noticed there are some discrepancies in terms of output between the two. Not sure if this normal between libraries implementations, but I wanted to raise it in case it matters!\nI'm also aware it could be some small bug or difference in implementation/argument that I have supplied.\nCode:\nimport tensorflow as tf\nimport numpy as np\nimport librosa\n\nnp.random.seed(666)\nnp.set_printoptions(precision=5, suppress=True)\n\naudio_length_seconds = 2\nsample_rate = 44100\naudio_frames_length = int(sample_rate * audio_length_seconds)\naudio_shape = [None, audio_frames_length]\nfft_size = 1024\nhop_size = 512\n\ntf.reset_default_graph()\n\naudio = tf.placeholder(tf.float32, \n                       shape=audio_shape)\nstfts = tf.contrib.signal.stft(audio, \n                               frame_length=fft_size, \n                               frame_step=hop_size,\n                               fft_length=fft_size,\n                               pad_end=True)\nreal = tf.real(stfts)\nimag = tf.imag(stfts)\nmagnitudes = tf.abs(stfts)\nphases = tf.atan2(imag, real)\nfeatures = tf.concat([magnitudes, phases], axis=2)\n\nsess = tf.Session()\nwith sess.as_default():\n    \n    data = np.random.random((1, audio_frames_length))\n    tf_results = magnitudes.eval({audio: data})\n    \n    lr_results = librosa.core.stft(y=data.reshape((-1)),\n                                   n_fft=fft_size,\n                                   hop_length=hop_size,\n                                   win_length=fft_size)\n                                   \n    lr_results = np.abs(lr_results)\n    \n    difference = np.abs(tf_results - lr_results.T)\n    print(\"Differences:\\nmin:\", np.min(difference), \n          \"max:\", np.max(difference), \n          \"mean:\", np.mean(difference), \n          \"std:\", np.std(difference))\n\nAnd the expected output from the print would be:\nDifferences:\nmin: 6.97374e-05 max: 246.904 mean: 2.92715 std: 2.45132", "body": "------------------------\r\n\r\n### System information\r\n- **Have I written custom code**: Yes\r\n- **OS Platform and Distribution**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version**: 1.4\r\n- **Python version**: 3.5.2\r\n- **Bazel version**: N/A\r\n- **GCC/Compiler version**: N/A\r\n- **CUDA/cuDNN version**: 6.0\r\n- **GPU model and memory**: nvidia quadro m2000m 4gb\r\n- **Exact command to reproduce**: See below code\r\n\r\nHi all!\r\n\r\nI was comparing the TensorFlow's contrib STFT against librosa's and noticed there are some discrepancies in terms of output between the two. Not sure if this normal between libraries implementations, but I wanted to raise it in case it matters!\r\n\r\nI'm also aware it could be some small bug or difference in implementation/argument that I have supplied.\r\n\r\nCode:\r\n\r\n```\r\nimport tensorflow as tf\r\nimport numpy as np\r\nimport librosa\r\n\r\nnp.random.seed(666)\r\nnp.set_printoptions(precision=5, suppress=True)\r\n\r\naudio_length_seconds = 2\r\nsample_rate = 44100\r\naudio_frames_length = int(sample_rate * audio_length_seconds)\r\naudio_shape = [None, audio_frames_length]\r\nfft_size = 1024\r\nhop_size = 512\r\n\r\ntf.reset_default_graph()\r\n\r\naudio = tf.placeholder(tf.float32, \r\n                       shape=audio_shape)\r\nstfts = tf.contrib.signal.stft(audio, \r\n                               frame_length=fft_size, \r\n                               frame_step=hop_size,\r\n                               fft_length=fft_size,\r\n                               pad_end=True)\r\nreal = tf.real(stfts)\r\nimag = tf.imag(stfts)\r\nmagnitudes = tf.abs(stfts)\r\nphases = tf.atan2(imag, real)\r\nfeatures = tf.concat([magnitudes, phases], axis=2)\r\n\r\nsess = tf.Session()\r\nwith sess.as_default():\r\n    \r\n    data = np.random.random((1, audio_frames_length))\r\n    tf_results = magnitudes.eval({audio: data})\r\n    \r\n    lr_results = librosa.core.stft(y=data.reshape((-1)),\r\n                                   n_fft=fft_size,\r\n                                   hop_length=hop_size,\r\n                                   win_length=fft_size)\r\n                                   \r\n    lr_results = np.abs(lr_results)\r\n    \r\n    difference = np.abs(tf_results - lr_results.T)\r\n    print(\"Differences:\\nmin:\", np.min(difference), \r\n          \"max:\", np.max(difference), \r\n          \"mean:\", np.mean(difference), \r\n          \"std:\", np.std(difference))\r\n```\r\n\r\nAnd the expected output from the print would be:\r\n\r\n```\r\nDifferences:\r\nmin: 6.97374e-05 max: 246.904 mean: 2.92715 std: 2.45132\r\n```"}