{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/870", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/870/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/870/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/870/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/870", "id": 128431566, "node_id": "MDU6SXNzdWUxMjg0MzE1NjY=", "number": 870, "title": "2d gradients have a second dimension of size None", "user": {"login": "AndrewBezold", "id": 5451903, "node_id": "MDQ6VXNlcjU0NTE5MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5451903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndrewBezold", "html_url": "https://github.com/AndrewBezold", "followers_url": "https://api.github.com/users/AndrewBezold/followers", "following_url": "https://api.github.com/users/AndrewBezold/following{/other_user}", "gists_url": "https://api.github.com/users/AndrewBezold/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndrewBezold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndrewBezold/subscriptions", "organizations_url": "https://api.github.com/users/AndrewBezold/orgs", "repos_url": "https://api.github.com/users/AndrewBezold/repos", "events_url": "https://api.github.com/users/AndrewBezold/events{/privacy}", "received_events_url": "https://api.github.com/users/AndrewBezold/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-24T22:59:48Z", "updated_at": "2016-01-26T00:52:22Z", "closed_at": "2016-01-26T00:51:03Z", "author_association": "NONE", "body_html": "<p>When calling compute_gradients with 2d variables, the first dimension has the correct size while the second dimension has a size of None.  Is this intentional?  It makes it somewhat difficult when processing the gradients, as a dimension size of None isn't really compatible with anything else.</p>\n<p>Tested with:<br>\n2d variables - second dimension is size None, first dimension is size of first dimension of variable<br>\n1d variables - dimension is size of dimension of variable<br>\nTested using compute_gradients in AdamOptimizer</p>", "body_text": "When calling compute_gradients with 2d variables, the first dimension has the correct size while the second dimension has a size of None.  Is this intentional?  It makes it somewhat difficult when processing the gradients, as a dimension size of None isn't really compatible with anything else.\nTested with:\n2d variables - second dimension is size None, first dimension is size of first dimension of variable\n1d variables - dimension is size of dimension of variable\nTested using compute_gradients in AdamOptimizer", "body": "When calling compute_gradients with 2d variables, the first dimension has the correct size while the second dimension has a size of None.  Is this intentional?  It makes it somewhat difficult when processing the gradients, as a dimension size of None isn't really compatible with anything else.\n\nTested with:\n2d variables - second dimension is size None, first dimension is size of first dimension of variable\n1d variables - dimension is size of dimension of variable\nTested using compute_gradients in AdamOptimizer\n"}