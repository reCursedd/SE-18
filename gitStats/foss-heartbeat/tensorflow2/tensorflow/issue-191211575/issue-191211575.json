{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5802", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5802/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5802/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5802/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/5802", "id": 191211575, "node_id": "MDExOlB1bGxSZXF1ZXN0OTQ5NjA3MzY=", "number": 5802, "title": "A theano.clone() equivalent for Tensorflow", "user": {"login": "thjashin", "id": 5267554, "node_id": "MDQ6VXNlcjUyNjc1NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5267554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thjashin", "html_url": "https://github.com/thjashin", "followers_url": "https://api.github.com/users/thjashin/followers", "following_url": "https://api.github.com/users/thjashin/following{/other_user}", "gists_url": "https://api.github.com/users/thjashin/gists{/gist_id}", "starred_url": "https://api.github.com/users/thjashin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thjashin/subscriptions", "organizations_url": "https://api.github.com/users/thjashin/orgs", "repos_url": "https://api.github.com/users/thjashin/repos", "events_url": "https://api.github.com/users/thjashin/events{/privacy}", "received_events_url": "https://api.github.com/users/thjashin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390482148, "node_id": "MDU6TGFiZWwzOTA0ODIxNDg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/awaiting%20review", "name": "awaiting review", "color": "fef2c0", "default": false}, {"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}, {"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "sherrym", "id": 12770037, "node_id": "MDQ6VXNlcjEyNzcwMDM3", "avatar_url": "https://avatars0.githubusercontent.com/u/12770037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherrym", "html_url": "https://github.com/sherrym", "followers_url": "https://api.github.com/users/sherrym/followers", "following_url": "https://api.github.com/users/sherrym/following{/other_user}", "gists_url": "https://api.github.com/users/sherrym/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherrym/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherrym/subscriptions", "organizations_url": "https://api.github.com/users/sherrym/orgs", "repos_url": "https://api.github.com/users/sherrym/repos", "events_url": "https://api.github.com/users/sherrym/events{/privacy}", "received_events_url": "https://api.github.com/users/sherrym/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherrym", "id": 12770037, "node_id": "MDQ6VXNlcjEyNzcwMDM3", "avatar_url": "https://avatars0.githubusercontent.com/u/12770037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherrym", "html_url": "https://github.com/sherrym", "followers_url": "https://api.github.com/users/sherrym/followers", "following_url": "https://api.github.com/users/sherrym/following{/other_user}", "gists_url": "https://api.github.com/users/sherrym/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherrym/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherrym/subscriptions", "organizations_url": "https://api.github.com/users/sherrym/orgs", "repos_url": "https://api.github.com/users/sherrym/repos", "events_url": "https://api.github.com/users/sherrym/events{/privacy}", "received_events_url": "https://api.github.com/users/sherrym/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 28, "created_at": "2016-11-23T08:28:05Z", "updated_at": "2017-05-06T03:08:50Z", "closed_at": "2017-05-06T00:45:36Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/5802", "html_url": "https://github.com/tensorflow/tensorflow/pull/5802", "diff_url": "https://github.com/tensorflow/tensorflow/pull/5802.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/5802.patch"}, "body_html": "<p>This an implementation of a <code>clone()</code> function for Tensorflow based on <code>meta_graph</code> utilities, inspired by discussion with <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=12770037\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/sherrym\">@sherrym</a> in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"188017183\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/5477\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/5477/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/5477\">#5477</a> .</p>\n<p>Feature requests on this can be found in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"133158444\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/1070\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/1070/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/1070\">#1070</a>  <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"188056308\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/5479\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/5479/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/5479\">#5479</a> . Previous implementations of copying graphs <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"123076050\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/557\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/557/hovercard\" href=\"https://github.com/tensorflow/tensorflow/pull/557\">#557</a> does copy naively and doesn't have <code>replace</code> feature as in <a href=\"http://deeplearning.net/software/theano/library/#theano.clone\" rel=\"nofollow\">theano.clone()</a>.</p>\n<p>Though this implementation is almost good. It still has problems for now with control flow copies. To be specific, I'm not sure how to deal with collections of <code>cond_context</code> and <code>while_context</code>, because both of its <code>to_proto</code> functions only consider the case of stripping <code>export_scope</code>.</p>\n<p>Not copying <code>cond_context</code> collection to new operations (to their <code>_control_flow_context</code>) will cause problems described in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"188017183\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/5477\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/5477/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/5477\">#5477</a> , also demonstrated in the last test (<code>testCloneBatchNorm</code>) in this pull request, which is failed for now. I'm opening this PR early before that test pass, wondering if someone can have advice on dealing with control flow collections when cloning subgraphs. Thanks.</p>", "body_text": "This an implementation of a clone() function for Tensorflow based on meta_graph utilities, inspired by discussion with @sherrym in #5477 .\nFeature requests on this can be found in #1070  #5479 . Previous implementations of copying graphs #557 does copy naively and doesn't have replace feature as in theano.clone().\nThough this implementation is almost good. It still has problems for now with control flow copies. To be specific, I'm not sure how to deal with collections of cond_context and while_context, because both of its to_proto functions only consider the case of stripping export_scope.\nNot copying cond_context collection to new operations (to their _control_flow_context) will cause problems described in #5477 , also demonstrated in the last test (testCloneBatchNorm) in this pull request, which is failed for now. I'm opening this PR early before that test pass, wondering if someone can have advice on dealing with control flow collections when cloning subgraphs. Thanks.", "body": "This an implementation of a `clone()` function for Tensorflow based on `meta_graph` utilities, inspired by discussion with @sherrym in #5477 .\r\n\r\nFeature requests on this can be found in #1070  #5479 . Previous implementations of copying graphs #557 does copy naively and doesn't have `replace` feature as in [theano.clone()](http://deeplearning.net/software/theano/library/#theano.clone).\r\n\r\nThough this implementation is almost good. It still has problems for now with control flow copies. To be specific, I'm not sure how to deal with collections of `cond_context` and `while_context`, because both of its `to_proto` functions only consider the case of stripping `export_scope`.\r\n\r\nNot copying `cond_context` collection to new operations (to their `_control_flow_context`) will cause problems described in #5477 , also demonstrated in the last test (`testCloneBatchNorm`) in this pull request, which is failed for now. I'm opening this PR early before that test pass, wondering if someone can have advice on dealing with control flow collections when cloning subgraphs. Thanks."}