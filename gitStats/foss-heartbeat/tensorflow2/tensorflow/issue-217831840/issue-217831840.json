{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8799", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8799/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8799/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8799/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8799", "id": 217831840, "node_id": "MDU6SXNzdWUyMTc4MzE4NDA=", "number": 8799, "title": "Ensuring positive definite covariance matrix in tensorflow", "user": {"login": "DanqingZ", "id": 8596775, "node_id": "MDQ6VXNlcjg1OTY3NzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/8596775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DanqingZ", "html_url": "https://github.com/DanqingZ", "followers_url": "https://api.github.com/users/DanqingZ/followers", "following_url": "https://api.github.com/users/DanqingZ/following{/other_user}", "gists_url": "https://api.github.com/users/DanqingZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/DanqingZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DanqingZ/subscriptions", "organizations_url": "https://api.github.com/users/DanqingZ/orgs", "repos_url": "https://api.github.com/users/DanqingZ/repos", "events_url": "https://api.github.com/users/DanqingZ/events{/privacy}", "received_events_url": "https://api.github.com/users/DanqingZ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-29T10:28:01Z", "updated_at": "2017-03-30T04:03:22Z", "closed_at": "2017-03-29T15:45:43Z", "author_association": "NONE", "body_html": "<p>Hi all,</p>\n<p>I have the problem how to ensure psd property of covariance matrix in tensorflow. so I map the rnn outputs to the $\\mu$ and $\\Sigma$ of a MVN. So here I have to make the covariance psd, I tried to use matrix exponential, but it is not implemented in tensorflow, and I tried SVD, but then my loss function is not differentiable. So I tried to use $LL^{T} + \\alpha |$, but still the program has bugs that the Sigma matrix is not invertible. Any suggestions for this problem? Thanks in advance!</p>\n<pre><code>def get_lossfunc(mu, Sigma,input_data):\n    loss = 0\n    for i in range(len(mu)):\n        muC = tf.squeeze(mu[i])\n        SigmaC = Sigma[i]\n        inputC = input_data[i]\n        SigmaC = tf.matmul(SigmaC, tf.transpose(SigmaC)) + tf.eye(10)\n#         s,u,v = tf.svd(Sigma[0])\n#         SigmaC = tf.matmul(tf.matmul(u,tf.diag(tf.exp(s))),v)\n        dist = tf.contrib.distributions.MultivariateNormalFull(muC, SigmaC)\n        loss += -tf.log(dist.pdf(inputC))\n#         print loss\n    return loss\n</code></pre>", "body_text": "Hi all,\nI have the problem how to ensure psd property of covariance matrix in tensorflow. so I map the rnn outputs to the $\\mu$ and $\\Sigma$ of a MVN. So here I have to make the covariance psd, I tried to use matrix exponential, but it is not implemented in tensorflow, and I tried SVD, but then my loss function is not differentiable. So I tried to use $LL^{T} + \\alpha |$, but still the program has bugs that the Sigma matrix is not invertible. Any suggestions for this problem? Thanks in advance!\ndef get_lossfunc(mu, Sigma,input_data):\n    loss = 0\n    for i in range(len(mu)):\n        muC = tf.squeeze(mu[i])\n        SigmaC = Sigma[i]\n        inputC = input_data[i]\n        SigmaC = tf.matmul(SigmaC, tf.transpose(SigmaC)) + tf.eye(10)\n#         s,u,v = tf.svd(Sigma[0])\n#         SigmaC = tf.matmul(tf.matmul(u,tf.diag(tf.exp(s))),v)\n        dist = tf.contrib.distributions.MultivariateNormalFull(muC, SigmaC)\n        loss += -tf.log(dist.pdf(inputC))\n#         print loss\n    return loss", "body": "Hi all,\r\n\r\nI have the problem how to ensure psd property of covariance matrix in tensorflow. so I map the rnn outputs to the $\\mu$ and $\\Sigma$ of a MVN. So here I have to make the covariance psd, I tried to use matrix exponential, but it is not implemented in tensorflow, and I tried SVD, but then my loss function is not differentiable. So I tried to use $LL^{T} + \\alpha |$, but still the program has bugs that the Sigma matrix is not invertible. Any suggestions for this problem? Thanks in advance!\r\n\r\n\r\n```\r\ndef get_lossfunc(mu, Sigma,input_data):\r\n    loss = 0\r\n    for i in range(len(mu)):\r\n        muC = tf.squeeze(mu[i])\r\n        SigmaC = Sigma[i]\r\n        inputC = input_data[i]\r\n        SigmaC = tf.matmul(SigmaC, tf.transpose(SigmaC)) + tf.eye(10)\r\n#         s,u,v = tf.svd(Sigma[0])\r\n#         SigmaC = tf.matmul(tf.matmul(u,tf.diag(tf.exp(s))),v)\r\n        dist = tf.contrib.distributions.MultivariateNormalFull(muC, SigmaC)\r\n        loss += -tf.log(dist.pdf(inputC))\r\n#         print loss\r\n    return loss\r\n```"}