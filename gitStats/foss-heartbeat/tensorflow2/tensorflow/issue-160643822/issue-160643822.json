{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2903", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2903/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2903/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2903/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/2903", "id": 160643822, "node_id": "MDU6SXNzdWUxNjA2NDM4MjI=", "number": 2903, "title": "Importing Gtk before tensorflow causes crash", "user": {"login": "kalleknast", "id": 12412777, "node_id": "MDQ6VXNlcjEyNDEyNzc3", "avatar_url": "https://avatars0.githubusercontent.com/u/12412777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kalleknast", "html_url": "https://github.com/kalleknast", "followers_url": "https://api.github.com/users/kalleknast/followers", "following_url": "https://api.github.com/users/kalleknast/following{/other_user}", "gists_url": "https://api.github.com/users/kalleknast/gists{/gist_id}", "starred_url": "https://api.github.com/users/kalleknast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kalleknast/subscriptions", "organizations_url": "https://api.github.com/users/kalleknast/orgs", "repos_url": "https://api.github.com/users/kalleknast/repos", "events_url": "https://api.github.com/users/kalleknast/events{/privacy}", "received_events_url": "https://api.github.com/users/kalleknast/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "keveman", "id": 229914, "node_id": "MDQ6VXNlcjIyOTkxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/229914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keveman", "html_url": "https://github.com/keveman", "followers_url": "https://api.github.com/users/keveman/followers", "following_url": "https://api.github.com/users/keveman/following{/other_user}", "gists_url": "https://api.github.com/users/keveman/gists{/gist_id}", "starred_url": "https://api.github.com/users/keveman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keveman/subscriptions", "organizations_url": "https://api.github.com/users/keveman/orgs", "repos_url": "https://api.github.com/users/keveman/repos", "events_url": "https://api.github.com/users/keveman/events{/privacy}", "received_events_url": "https://api.github.com/users/keveman/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "keveman", "id": 229914, "node_id": "MDQ6VXNlcjIyOTkxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/229914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keveman", "html_url": "https://github.com/keveman", "followers_url": "https://api.github.com/users/keveman/followers", "following_url": "https://api.github.com/users/keveman/following{/other_user}", "gists_url": "https://api.github.com/users/keveman/gists{/gist_id}", "starred_url": "https://api.github.com/users/keveman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keveman/subscriptions", "organizations_url": "https://api.github.com/users/keveman/orgs", "repos_url": "https://api.github.com/users/keveman/repos", "events_url": "https://api.github.com/users/keveman/events{/privacy}", "received_events_url": "https://api.github.com/users/keveman/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2016-06-16T11:56:18Z", "updated_at": "2017-01-23T23:35:59Z", "closed_at": "2017-01-23T23:35:59Z", "author_association": "NONE", "body_html": "<h3>Environment info</h3>\n<p>Ubuntu 16.04<br>\n<code>uname -a Linux p900 4.4.0-22-generic #40-Ubuntu SMP Thu May 12 22:03:46 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux</code></p>\n<p>Installed version of CUDA and cuDNN:<br>\nCuda compilation tools release 7.5, V7.5.17 and CUDNN is v 4</p>\n<p><code>ls -l /usr/local/cuda-7.5/lib/libcud* -rw-r--r-- 1 root root 189170 Jun  2 10:18 /usr/local/cuda-7.5/lib/libcudadevrt.a lrwxrwxrwx 1 root root     16 Jun  2 10:18 /usr/local/cuda-7.5/lib/libcudart.so -&gt; libcudart.so.7.5 lrwxrwxrwx 1 root root     19 Jun  2 10:18 /usr/local/cuda-7.5/lib/libcudart.so.7.5 -&gt; libcudart.so.7.5.18 -rwxr-xr-x 1 root root 311596 Jun  2 10:18 /usr/local/cuda-7.5/lib/libcudart.so.7.5.18 -rw-r--r-- 1 root root 558020 Jun  2 10:18 /usr/local/cuda-7.5/lib/libcudart_static.a</code></p>\n<p>pip package installed:<br>\n<code>tensorflow-0.9.0rc0-cp35-cp35m-linux_x86_64.whl</code></p>\n<p>Output of <code>python3 -c \"import tensorflow; print(tensorflow.__version__)\"</code>:<br>\n...<br>\n<code>0.9.0rc0</code></p>\n<p>Python version:<br>\nPython 3.5.1+</p>\n<p>Gtk version:<br>\n3.0</p>\n<h3>Steps to reproduce</h3>\n<ol>\n<li><code>import gi</code></li>\n<li><code>from gi.repository import Gtk</code></li>\n<li><code>import tensorflow</code></li>\n</ol>\n<h3>What I have tried</h3>\n<ol>\n<li>\n<p>Removed any Ubuntu protobuf package (Ubuntu package is v 2.6.1):<br>\n<code>sudo apt purge protobuf*</code></p>\n</li>\n<li>\n<p>Upgraded protobuf via pip3:<br>\n<code>pip3 install --upgrade protobuf</code><br>\n...<br>\n<code>Requirement already up-to-date: protobuf in /usr/local/lib/python3.5/dist-packages Requirement already up-to-date: six&gt;=1.9 in /usr/lib/python3/dist-packages (from protobuf) Requirement already up-to-date: setuptools in /usr/local/lib/python3.5/dist-packages (from protobuf)</code></p>\n</li>\n<li>\n<p>Checked protobuf version installed via pip3:<br>\n<code>ls /usr/local/lib/python3.5/dist-packages/proto*</code><br>\n<code>/usr/local/lib/python3.5/dist-packages/protobuf-3.0.0b2-py2.7-nspkg.pth</code></p>\n<p><code>/usr/local/lib/python3.5/dist-packages/protobuf-3.0.0b2.dist-info:</code><br>\n<code>DESCRIPTION.rst  INSTALLER  METADATA  metadata.json  namespace_packages.txt  RECORD  top_level.txt  WHEEL</code></p>\n</li>\n</ol>\n<h3>Output after importing tensorflow</h3>\n<p><code>[libprotobuf FATAL google/protobuf/stubs/common.cc:61] This program requires version 3.0.0 of the Protocol Buffer runtime library, but the installed version is 2.6.1.  Please update your library.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in \"external/protobuf/src/google/protobuf/any.pb.cc\".) terminate called after throwing an instance of 'google::protobuf::FatalException' what():  This program requires version 3.0.0 of the Protocol Buffer runtime library, but the installed version is 2.6.1.  Please update your library.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in \"external/protobuf/src/google/protobuf/any.pb.cc\".) Aborted (core dumped)</code></p>\n<h3>Additional comments</h3>\n<p>As before ( <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"138255438\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/1373\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/1373/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/1373\">#1373</a>) this ONLY occurs when importing Gtk BEFORE tensorflow. The opposite order causes no crash, nor have I experienced any other crashes associated with tensorflow.</p>\n<p>Curiously, when using version 0.8 of tensorflow, a very similar crash was caused by the opposite order of import (ie tensorflow before Gtk), but in that case the output was that: <code>This program requires version 2.6.1 of the Protocol Buffer runtime library, but the installed version is 3.0.0.</code> That is, the problem seemed to be caused by the reverse relationship between the protobuf versions. However, when upgrading tensorflow, I did not change the protobuf version. It was kept the same throughout.</p>", "body_text": "Environment info\nUbuntu 16.04\nuname -a Linux p900 4.4.0-22-generic #40-Ubuntu SMP Thu May 12 22:03:46 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux\nInstalled version of CUDA and cuDNN:\nCuda compilation tools release 7.5, V7.5.17 and CUDNN is v 4\nls -l /usr/local/cuda-7.5/lib/libcud* -rw-r--r-- 1 root root 189170 Jun  2 10:18 /usr/local/cuda-7.5/lib/libcudadevrt.a lrwxrwxrwx 1 root root     16 Jun  2 10:18 /usr/local/cuda-7.5/lib/libcudart.so -> libcudart.so.7.5 lrwxrwxrwx 1 root root     19 Jun  2 10:18 /usr/local/cuda-7.5/lib/libcudart.so.7.5 -> libcudart.so.7.5.18 -rwxr-xr-x 1 root root 311596 Jun  2 10:18 /usr/local/cuda-7.5/lib/libcudart.so.7.5.18 -rw-r--r-- 1 root root 558020 Jun  2 10:18 /usr/local/cuda-7.5/lib/libcudart_static.a\npip package installed:\ntensorflow-0.9.0rc0-cp35-cp35m-linux_x86_64.whl\nOutput of python3 -c \"import tensorflow; print(tensorflow.__version__)\":\n...\n0.9.0rc0\nPython version:\nPython 3.5.1+\nGtk version:\n3.0\nSteps to reproduce\n\nimport gi\nfrom gi.repository import Gtk\nimport tensorflow\n\nWhat I have tried\n\n\nRemoved any Ubuntu protobuf package (Ubuntu package is v 2.6.1):\nsudo apt purge protobuf*\n\n\nUpgraded protobuf via pip3:\npip3 install --upgrade protobuf\n...\nRequirement already up-to-date: protobuf in /usr/local/lib/python3.5/dist-packages Requirement already up-to-date: six>=1.9 in /usr/lib/python3/dist-packages (from protobuf) Requirement already up-to-date: setuptools in /usr/local/lib/python3.5/dist-packages (from protobuf)\n\n\nChecked protobuf version installed via pip3:\nls /usr/local/lib/python3.5/dist-packages/proto*\n/usr/local/lib/python3.5/dist-packages/protobuf-3.0.0b2-py2.7-nspkg.pth\n/usr/local/lib/python3.5/dist-packages/protobuf-3.0.0b2.dist-info:\nDESCRIPTION.rst  INSTALLER  METADATA  metadata.json  namespace_packages.txt  RECORD  top_level.txt  WHEEL\n\n\nOutput after importing tensorflow\n[libprotobuf FATAL google/protobuf/stubs/common.cc:61] This program requires version 3.0.0 of the Protocol Buffer runtime library, but the installed version is 2.6.1.  Please update your library.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in \"external/protobuf/src/google/protobuf/any.pb.cc\".) terminate called after throwing an instance of 'google::protobuf::FatalException' what():  This program requires version 3.0.0 of the Protocol Buffer runtime library, but the installed version is 2.6.1.  Please update your library.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in \"external/protobuf/src/google/protobuf/any.pb.cc\".) Aborted (core dumped)\nAdditional comments\nAs before ( #1373) this ONLY occurs when importing Gtk BEFORE tensorflow. The opposite order causes no crash, nor have I experienced any other crashes associated with tensorflow.\nCuriously, when using version 0.8 of tensorflow, a very similar crash was caused by the opposite order of import (ie tensorflow before Gtk), but in that case the output was that: This program requires version 2.6.1 of the Protocol Buffer runtime library, but the installed version is 3.0.0. That is, the problem seemed to be caused by the reverse relationship between the protobuf versions. However, when upgrading tensorflow, I did not change the protobuf version. It was kept the same throughout.", "body": "### Environment info\n\nUbuntu 16.04\n`uname -a\nLinux p900 4.4.0-22-generic #40-Ubuntu SMP Thu May 12 22:03:46 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux`\n\nInstalled version of CUDA and cuDNN: \nCuda compilation tools release 7.5, V7.5.17 and CUDNN is v 4\n\n`ls -l /usr/local/cuda-7.5/lib/libcud*\n-rw-r--r-- 1 root root 189170 Jun  2 10:18 /usr/local/cuda-7.5/lib/libcudadevrt.a\nlrwxrwxrwx 1 root root     16 Jun  2 10:18 /usr/local/cuda-7.5/lib/libcudart.so -> libcudart.so.7.5\nlrwxrwxrwx 1 root root     19 Jun  2 10:18 /usr/local/cuda-7.5/lib/libcudart.so.7.5 -> libcudart.so.7.5.18\n-rwxr-xr-x 1 root root 311596 Jun  2 10:18 /usr/local/cuda-7.5/lib/libcudart.so.7.5.18\n-rw-r--r-- 1 root root 558020 Jun  2 10:18 /usr/local/cuda-7.5/lib/libcudart_static.a`\n\npip package installed:\n`tensorflow-0.9.0rc0-cp35-cp35m-linux_x86_64.whl`\n\nOutput of `python3 -c \"import tensorflow; print(tensorflow.__version__)\"`:\n...\n`0.9.0rc0`\n\nPython version:\nPython 3.5.1+\n\nGtk version:\n3.0\n### Steps to reproduce\n1. `import gi`\n2. `from gi.repository import Gtk`\n3. `import tensorflow`\n### What I have tried\n1. Removed any Ubuntu protobuf package (Ubuntu package is v 2.6.1):\n   `sudo apt purge protobuf*`\n2. Upgraded protobuf via pip3:\n   `pip3 install --upgrade protobuf`\n   ...\n   `Requirement already up-to-date: protobuf in /usr/local/lib/python3.5/dist-packages\n   Requirement already up-to-date: six>=1.9 in /usr/lib/python3/dist-packages (from protobuf)\n   Requirement already up-to-date: setuptools in /usr/local/lib/python3.5/dist-packages (from protobuf)`\n3. Checked protobuf version installed via pip3:\n   `ls /usr/local/lib/python3.5/dist-packages/proto*`\n   `/usr/local/lib/python3.5/dist-packages/protobuf-3.0.0b2-py2.7-nspkg.pth`\n   \n   `/usr/local/lib/python3.5/dist-packages/protobuf-3.0.0b2.dist-info:`\n   `DESCRIPTION.rst  INSTALLER  METADATA  metadata.json  namespace_packages.txt  RECORD  top_level.txt  WHEEL`\n### Output after importing tensorflow\n\n`[libprotobuf FATAL google/protobuf/stubs/common.cc:61] This program requires version 3.0.0 of the Protocol Buffer runtime library, but the installed version is 2.6.1.  Please update your library.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in \"external/protobuf/src/google/protobuf/any.pb.cc\".)\nterminate called after throwing an instance of 'google::protobuf::FatalException'\n  what():  This program requires version 3.0.0 of the Protocol Buffer runtime library, but the installed version is 2.6.1.  Please update your library.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in \"external/protobuf/src/google/protobuf/any.pb.cc\".)\nAborted (core dumped)`\n### Additional comments\n\nAs before ( #1373) this ONLY occurs when importing Gtk BEFORE tensorflow. The opposite order causes no crash, nor have I experienced any other crashes associated with tensorflow.\n\nCuriously, when using version 0.8 of tensorflow, a very similar crash was caused by the opposite order of import (ie tensorflow before Gtk), but in that case the output was that: `This program requires version 2.6.1 of the Protocol Buffer runtime library, but the installed version is 3.0.0.` That is, the problem seemed to be caused by the reverse relationship between the protobuf versions. However, when upgrading tensorflow, I did not change the protobuf version. It was kept the same throughout.\n"}