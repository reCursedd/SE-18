{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/340026024", "html_url": "https://github.com/tensorflow/tensorflow/issues/11295#issuecomment-340026024", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11295", "id": 340026024, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDAyNjAyNA==", "user": {"login": "azadef", "id": 8112587, "node_id": "MDQ6VXNlcjgxMTI1ODc=", "avatar_url": "https://avatars0.githubusercontent.com/u/8112587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azadef", "html_url": "https://github.com/azadef", "followers_url": "https://api.github.com/users/azadef/followers", "following_url": "https://api.github.com/users/azadef/following{/other_user}", "gists_url": "https://api.github.com/users/azadef/gists{/gist_id}", "starred_url": "https://api.github.com/users/azadef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azadef/subscriptions", "organizations_url": "https://api.github.com/users/azadef/orgs", "repos_url": "https://api.github.com/users/azadef/repos", "events_url": "https://api.github.com/users/azadef/events{/privacy}", "received_events_url": "https://api.github.com/users/azadef/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-27T16:54:24Z", "updated_at": "2017-10-27T16:54:24Z", "author_association": "NONE", "body_html": "<p>Do you update moving_mean and moving_variance variables in batch normalization during optimization?<br>\nI had the same problem with resnet and I added this in training, then it worked fine:<br>\n<code>update_ops = tf.get_collection(tf.GraphKeys.UPDATE_OPS)</code><br>\n<code> with tf.control_dependencies(update_ops):</code><br>\n<code>train_op = opt.minimize(loss)</code></p>", "body_text": "Do you update moving_mean and moving_variance variables in batch normalization during optimization?\nI had the same problem with resnet and I added this in training, then it worked fine:\nupdate_ops = tf.get_collection(tf.GraphKeys.UPDATE_OPS)\n with tf.control_dependencies(update_ops):\ntrain_op = opt.minimize(loss)", "body": "Do you update moving_mean and moving_variance variables in batch normalization during optimization?\r\nI had the same problem with resnet and I added this in training, then it worked fine:\r\n`update_ops = tf.get_collection(tf.GraphKeys.UPDATE_OPS)`\r\n` with tf.control_dependencies(update_ops):`\r\n    `train_op = opt.minimize(loss)`"}