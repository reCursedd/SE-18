{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/221282483", "html_url": "https://github.com/tensorflow/tensorflow/issues/2489#issuecomment-221282483", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2489", "id": 221282483, "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTI4MjQ4Mw==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2016-05-24T14:08:57Z", "updated_at": "2016-05-24T14:08:57Z", "author_association": "CONTRIBUTOR", "body_html": "<p>When you create a <code>tf.train.Saver</code> with no arguments, it will implicitly use the current set of variables <em>at the time of Saver construction</em> when it saves and restores. If you add a new variable (e.g. <code>v3</code> in your second code block), you have to create a new <code>tf.train.Saver</code> to save it.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\nsess <span class=\"pl-k\">=</span> tf.InteractiveSession()\nv1 <span class=\"pl-k\">=</span> tf.Variable(<span class=\"pl-c1\">1</span>,<span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>v1<span class=\"pl-pds\">\"</span></span>)\nv2 <span class=\"pl-k\">=</span> tf.Variable(<span class=\"pl-c1\">2</span>,<span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>v2<span class=\"pl-pds\">\"</span></span>)\nsaver <span class=\"pl-k\">=</span> tf.train.Saver()\nsaver.restore(sess,<span class=\"pl-s\"><span class=\"pl-pds\">'</span>v12.ckpt<span class=\"pl-pds\">'</span></span>)  <span class=\"pl-c\"><span class=\"pl-c\">#</span>works fine here</span>\n\nv3 <span class=\"pl-k\">=</span> tf.Variable(<span class=\"pl-c1\">3</span>,<span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>v3<span class=\"pl-pds\">\"</span></span>)\nsess.run(tf.initialize_variables([v3]))\n\nsaver_with_v3 <span class=\"pl-k\">=</span> tf.train.Saver()\nsaver_with_v3.save(sess,<span class=\"pl-s\"><span class=\"pl-pds\">'</span>v123.ckpt<span class=\"pl-pds\">'</span></span>)</pre></div>", "body_text": "When you create a tf.train.Saver with no arguments, it will implicitly use the current set of variables at the time of Saver construction when it saves and restores. If you add a new variable (e.g. v3 in your second code block), you have to create a new tf.train.Saver to save it.\nimport tensorflow as tf\n\nsess = tf.InteractiveSession()\nv1 = tf.Variable(1,name=\"v1\")\nv2 = tf.Variable(2,name=\"v2\")\nsaver = tf.train.Saver()\nsaver.restore(sess,'v12.ckpt')  #works fine here\n\nv3 = tf.Variable(3,name=\"v3\")\nsess.run(tf.initialize_variables([v3]))\n\nsaver_with_v3 = tf.train.Saver()\nsaver_with_v3.save(sess,'v123.ckpt')", "body": "When you create a `tf.train.Saver` with no arguments, it will implicitly use the current set of variables _at the time of Saver construction_ when it saves and restores. If you add a new variable (e.g. `v3` in your second code block), you have to create a new `tf.train.Saver` to save it.\n\n``` python\nimport tensorflow as tf\n\nsess = tf.InteractiveSession()\nv1 = tf.Variable(1,name=\"v1\")\nv2 = tf.Variable(2,name=\"v2\")\nsaver = tf.train.Saver()\nsaver.restore(sess,'v12.ckpt')  #works fine here\n\nv3 = tf.Variable(3,name=\"v3\")\nsess.run(tf.initialize_variables([v3]))\n\nsaver_with_v3 = tf.train.Saver()\nsaver_with_v3.save(sess,'v123.ckpt')\n```\n"}