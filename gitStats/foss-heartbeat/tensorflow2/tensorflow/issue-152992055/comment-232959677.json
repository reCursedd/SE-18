{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/232959677", "html_url": "https://github.com/tensorflow/tensorflow/issues/2217#issuecomment-232959677", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2217", "id": 232959677, "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjk1OTY3Nw==", "user": {"login": "c0g", "id": 1376357, "node_id": "MDQ6VXNlcjEzNzYzNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1376357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c0g", "html_url": "https://github.com/c0g", "followers_url": "https://api.github.com/users/c0g/followers", "following_url": "https://api.github.com/users/c0g/following{/other_user}", "gists_url": "https://api.github.com/users/c0g/gists{/gist_id}", "starred_url": "https://api.github.com/users/c0g/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c0g/subscriptions", "organizations_url": "https://api.github.com/users/c0g/orgs", "repos_url": "https://api.github.com/users/c0g/repos", "events_url": "https://api.github.com/users/c0g/events{/privacy}", "received_events_url": "https://api.github.com/users/c0g/received_events", "type": "User", "site_admin": false}, "created_at": "2016-07-15T14:05:40Z", "updated_at": "2016-07-15T16:16:55Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hi, sorry my silence in this - I've been ill. I have not been able to puzzle out how to integrate my changes inside of tf.contrib - they're changes to fairly key things like stream.h, the cuda stuff in third party, etc. It seems like most of the other projects inside of contrib are more modular and seem mainly to be discrete ops.</p>\n<p>What I have been trying to do is make a BUILD file such that I could write:</p>\n<p><code>bazel build -c opt --config=cuda //tensorflow/contrib/solver_stream:build_pip_package</code></p>\n<p>and have that build the pip package in exactly the same way as a normal build, but with the files I have in the directory structure masking the original tensorflow files. Unfortunately I have got nowhere.</p>\n<p>I can't think of a way to make my changes part of contrib without some mechanism like this - for example, how can I test and install my work without building a pip package?</p>", "body_text": "Hi, sorry my silence in this - I've been ill. I have not been able to puzzle out how to integrate my changes inside of tf.contrib - they're changes to fairly key things like stream.h, the cuda stuff in third party, etc. It seems like most of the other projects inside of contrib are more modular and seem mainly to be discrete ops.\nWhat I have been trying to do is make a BUILD file such that I could write:\nbazel build -c opt --config=cuda //tensorflow/contrib/solver_stream:build_pip_package\nand have that build the pip package in exactly the same way as a normal build, but with the files I have in the directory structure masking the original tensorflow files. Unfortunately I have got nowhere.\nI can't think of a way to make my changes part of contrib without some mechanism like this - for example, how can I test and install my work without building a pip package?", "body": "Hi, sorry my silence in this - I've been ill. I have not been able to puzzle out how to integrate my changes inside of tf.contrib - they're changes to fairly key things like stream.h, the cuda stuff in third party, etc. It seems like most of the other projects inside of contrib are more modular and seem mainly to be discrete ops.\n\nWhat I have been trying to do is make a BUILD file such that I could write:\n\n`bazel build -c opt --config=cuda //tensorflow/contrib/solver_stream:build_pip_package` \n\nand have that build the pip package in exactly the same way as a normal build, but with the files I have in the directory structure masking the original tensorflow files. Unfortunately I have got nowhere. \n\nI can't think of a way to make my changes part of contrib without some mechanism like this - for example, how can I test and install my work without building a pip package?\n"}