{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/327645108", "html_url": "https://github.com/tensorflow/tensorflow/issues/12855#issuecomment-327645108", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12855", "id": 327645108, "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzY0NTEwOA==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-07T00:05:32Z", "updated_at": "2017-09-07T00:05:32Z", "author_association": "CONTRIBUTOR", "body_html": "<p><code>Dataset.batch()</code> always returns the last batch, even if it turns out to be smaller than the batch size.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> iterator <span class=\"pl-k\">=</span> tf.contrib.data.Dataset.range(<span class=\"pl-c1\">33</span>).batch(<span class=\"pl-c1\">32</span>).make_one_shot_iterator()\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> next_element <span class=\"pl-k\">=</span> iterator.get_next()\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> sess <span class=\"pl-k\">=</span> tf.Session()\n<span class=\"pl-c1\">...</span>\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> sess.run(next_element)\narray([ <span class=\"pl-c1\">0</span>,  <span class=\"pl-c1\">1</span>,  <span class=\"pl-c1\">2</span>,  <span class=\"pl-c1\">3</span>,  <span class=\"pl-c1\">4</span>,  <span class=\"pl-c1\">5</span>,  <span class=\"pl-c1\">6</span>,  <span class=\"pl-c1\">7</span>,  <span class=\"pl-c1\">8</span>,  <span class=\"pl-c1\">9</span>, <span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">11</span>, <span class=\"pl-c1\">12</span>, <span class=\"pl-c1\">13</span>, <span class=\"pl-c1\">14</span>, <span class=\"pl-c1\">15</span>, <span class=\"pl-c1\">16</span>,\n       <span class=\"pl-c1\">17</span>, <span class=\"pl-c1\">18</span>, <span class=\"pl-c1\">19</span>, <span class=\"pl-c1\">20</span>, <span class=\"pl-c1\">21</span>, <span class=\"pl-c1\">22</span>, <span class=\"pl-c1\">23</span>, <span class=\"pl-c1\">24</span>, <span class=\"pl-c1\">25</span>, <span class=\"pl-c1\">26</span>, <span class=\"pl-c1\">27</span>, <span class=\"pl-c1\">28</span>, <span class=\"pl-c1\">29</span>, <span class=\"pl-c1\">30</span>, <span class=\"pl-c1\">31</span>])\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> sess.run(next_element)\narray([<span class=\"pl-c1\">32</span>])\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> sess.run(next_element)\nTraceback (most recent call last):\n<span class=\"pl-c1\">...</span>\nOutOfRangeError (see above <span class=\"pl-k\">for</span> traceback): End of sequence\n\t [[Node: IteratorGetNext = IteratorGetNext[output_shapes=[[<span class=\"pl-ii\">?</span>]], output_types=[<span class=\"pl-c1\">DT_INT64</span>], _device=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/job:localhost/replica:0/task:0/cpu:0<span class=\"pl-pds\">\"</span></span>](OneShotIterator)]]\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> </pre></div>", "body_text": "Dataset.batch() always returns the last batch, even if it turns out to be smaller than the batch size.\n>>> import tensorflow as tf\n>>> iterator = tf.contrib.data.Dataset.range(33).batch(32).make_one_shot_iterator()\n>>> next_element = iterator.get_next()\n>>> sess = tf.Session()\n...\n>>> sess.run(next_element)\narray([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,\n       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31])\n>>> sess.run(next_element)\narray([32])\n>>> sess.run(next_element)\nTraceback (most recent call last):\n...\nOutOfRangeError (see above for traceback): End of sequence\n\t [[Node: IteratorGetNext = IteratorGetNext[output_shapes=[[?]], output_types=[DT_INT64], _device=\"/job:localhost/replica:0/task:0/cpu:0\"](OneShotIterator)]]\n>>>", "body": "`Dataset.batch()` always returns the last batch, even if it turns out to be smaller than the batch size.\r\n\r\n```python\r\n>>> import tensorflow as tf\r\n>>> iterator = tf.contrib.data.Dataset.range(33).batch(32).make_one_shot_iterator()\r\n>>> next_element = iterator.get_next()\r\n>>> sess = tf.Session()\r\n...\r\n>>> sess.run(next_element)\r\narray([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,\r\n       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31])\r\n>>> sess.run(next_element)\r\narray([32])\r\n>>> sess.run(next_element)\r\nTraceback (most recent call last):\r\n...\r\nOutOfRangeError (see above for traceback): End of sequence\r\n\t [[Node: IteratorGetNext = IteratorGetNext[output_shapes=[[?]], output_types=[DT_INT64], _device=\"/job:localhost/replica:0/task:0/cpu:0\"](OneShotIterator)]]\r\n>>> \r\n```"}