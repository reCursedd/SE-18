{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18186", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18186/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18186/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18186/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18186", "id": 310612280, "node_id": "MDU6SXNzdWUzMTA2MTIyODA=", "number": 18186, "title": "Estimators can't restore from their saved configuration", "user": {"login": "tigerhawkvok", "id": 165937, "node_id": "MDQ6VXNlcjE2NTkzNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/165937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tigerhawkvok", "html_url": "https://github.com/tigerhawkvok", "followers_url": "https://api.github.com/users/tigerhawkvok/followers", "following_url": "https://api.github.com/users/tigerhawkvok/following{/other_user}", "gists_url": "https://api.github.com/users/tigerhawkvok/gists{/gist_id}", "starred_url": "https://api.github.com/users/tigerhawkvok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tigerhawkvok/subscriptions", "organizations_url": "https://api.github.com/users/tigerhawkvok/orgs", "repos_url": "https://api.github.com/users/tigerhawkvok/repos", "events_url": "https://api.github.com/users/tigerhawkvok/events{/privacy}", "received_events_url": "https://api.github.com/users/tigerhawkvok/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jart", "id": 49262, "node_id": "MDQ6VXNlcjQ5MjYy", "avatar_url": "https://avatars1.githubusercontent.com/u/49262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jart", "html_url": "https://github.com/jart", "followers_url": "https://api.github.com/users/jart/followers", "following_url": "https://api.github.com/users/jart/following{/other_user}", "gists_url": "https://api.github.com/users/jart/gists{/gist_id}", "starred_url": "https://api.github.com/users/jart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jart/subscriptions", "organizations_url": "https://api.github.com/users/jart/orgs", "repos_url": "https://api.github.com/users/jart/repos", "events_url": "https://api.github.com/users/jart/events{/privacy}", "received_events_url": "https://api.github.com/users/jart/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jart", "id": 49262, "node_id": "MDQ6VXNlcjQ5MjYy", "avatar_url": "https://avatars1.githubusercontent.com/u/49262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jart", "html_url": "https://github.com/jart", "followers_url": "https://api.github.com/users/jart/followers", "following_url": "https://api.github.com/users/jart/following{/other_user}", "gists_url": "https://api.github.com/users/jart/gists{/gist_id}", "starred_url": "https://api.github.com/users/jart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jart/subscriptions", "organizations_url": "https://api.github.com/users/jart/orgs", "repos_url": "https://api.github.com/users/jart/repos", "events_url": "https://api.github.com/users/jart/events{/privacy}", "received_events_url": "https://api.github.com/users/jart/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-04-02T21:08:43Z", "updated_at": "2018-09-28T21:56:48Z", "closed_at": "2018-09-28T21:56:48Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: N/A: no verbatim example from TensorFlow on restoring from and <code>export_savedmodel()</code>.</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Window 10x64; Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.7</li>\n<li><strong>Python version</strong>: 3.6.4</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>:</li>\n<li><strong>GPU model and memory</strong>:</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span> Create and train some classifier ....</span>\nc <span class=\"pl-k\">=</span> tf.estimator.DNNClassifier(<span class=\"pl-v\">hidden_units</span> <span class=\"pl-k\">=</span> [<span class=\"pl-c1\">10</span>,<span class=\"pl-c1\">10</span>], <span class=\"pl-v\">feature_columns</span><span class=\"pl-k\">=</span>my_feature_columns)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> ... do some training</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> We'll assume here that I'm using Pandas, and just have floats</span>\nspecDict <span class=\"pl-k\">=</span> {}\n<span class=\"pl-k\">for</span> col <span class=\"pl-k\">in</span> <span class=\"pl-c1\">list</span>(train_x.columns):\n    specDict[col] <span class=\"pl-k\">=</span> tf.FixedLenFeature([], tf.float32)\npsirf <span class=\"pl-k\">=</span> tf.estimator.export.build_parsing_serving_input_receiver_fn(specDict, <span class=\"pl-c1\">100</span>)\npathOut <span class=\"pl-k\">=</span> c.export_savedmodel(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>./trainedModels/<span class=\"pl-pds\">\"</span></span>, psirf)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> I'll write pathOut to a file ...</span></pre></div>\n<p>In a new instance:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span> We recreate my cols, and pull pathOut from the file it was written to</span>\nc <span class=\"pl-k\">=</span> tf.estimator.DNNClassifier(<span class=\"pl-v\">hidden_units</span> <span class=\"pl-k\">=</span> [<span class=\"pl-c1\">10</span>,<span class=\"pl-c1\">10</span>], <span class=\"pl-v\">feature_columns</span><span class=\"pl-k\">=</span>my_feature_columns, <span class=\"pl-v\">model_dir</span> <span class=\"pl-k\">=</span> pathOut)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Using the canned `eval_input_fn` from the iris_data.py example</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> dataDict is the source data</span>\npredictions <span class=\"pl-k\">=</span> c.predict(<span class=\"pl-v\">input_fn</span><span class=\"pl-k\">=</span>eval_input_fn(dataDict, <span class=\"pl-c1\">None</span>))\n<span class=\"pl-k\">for</span> predDict <span class=\"pl-k\">in</span> predictions:\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> raises \"ValueError: Could not find trained model in model_dir: pathOut\"</span>\n    <span class=\"pl-c1\">print</span>(predDict)\n</pre></div>\n<h3>Describe the problem</h3>\n<p>The estimator <a href=\"https://github.com/tensorflow/tensorflow/blob/r1.7/tensorflow/python/estimator/estimator.py#L476-L480\">only looks for the latest checkpoint</a>, and ignores any exports that might have been created from its own <code>export_savedmodel</code> function</p>\n<p>Because of <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/estimator/estimator.py#L644-L652\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/estimator/estimator.py#L644-L652</a> , seems like <a href=\"https://www.tensorflow.org/api_docs/python/tf/saved_model/loader/load\" rel=\"nofollow\">tf.saved_model.loader.load</a> should also be checked</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): N/A: no verbatim example from TensorFlow on restoring from and export_savedmodel().\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Window 10x64; Ubuntu 16.04\nTensorFlow installed from (source or binary): Binary\nTensorFlow version (use command below): 1.7\nPython version: 3.6.4\nBazel version (if compiling from source):\nGCC/Compiler version (if compiling from source):\nCUDA/cuDNN version:\nGPU model and memory:\nExact command to reproduce:\n\n# Create and train some classifier ....\nc = tf.estimator.DNNClassifier(hidden_units = [10,10], feature_columns=my_feature_columns)\n# ... do some training\n# We'll assume here that I'm using Pandas, and just have floats\nspecDict = {}\nfor col in list(train_x.columns):\n    specDict[col] = tf.FixedLenFeature([], tf.float32)\npsirf = tf.estimator.export.build_parsing_serving_input_receiver_fn(specDict, 100)\npathOut = c.export_savedmodel(\"./trainedModels/\", psirf)\n# I'll write pathOut to a file ...\nIn a new instance:\n# We recreate my cols, and pull pathOut from the file it was written to\nc = tf.estimator.DNNClassifier(hidden_units = [10,10], feature_columns=my_feature_columns, model_dir = pathOut)\n# Using the canned `eval_input_fn` from the iris_data.py example\n# dataDict is the source data\npredictions = c.predict(input_fn=eval_input_fn(dataDict, None))\nfor predDict in predictions:\n    # raises \"ValueError: Could not find trained model in model_dir: pathOut\"\n    print(predDict)\n\nDescribe the problem\nThe estimator only looks for the latest checkpoint, and ignores any exports that might have been created from its own export_savedmodel function\nBecause of https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/estimator/estimator.py#L644-L652 , seems like tf.saved_model.loader.load should also be checked", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: N/A: no verbatim example from TensorFlow on restoring from and `export_savedmodel()`.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Window 10x64; Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: Binary\r\n- **TensorFlow version (use command below)**: 1.7\r\n- **Python version**: 3.6.4\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\n```python\r\n# Create and train some classifier ....\r\nc = tf.estimator.DNNClassifier(hidden_units = [10,10], feature_columns=my_feature_columns)\r\n# ... do some training\r\n# We'll assume here that I'm using Pandas, and just have floats\r\nspecDict = {}\r\nfor col in list(train_x.columns):\r\n    specDict[col] = tf.FixedLenFeature([], tf.float32)\r\npsirf = tf.estimator.export.build_parsing_serving_input_receiver_fn(specDict, 100)\r\npathOut = c.export_savedmodel(\"./trainedModels/\", psirf)\r\n# I'll write pathOut to a file ...\r\n```\r\n\r\nIn a new instance:\r\n\r\n```python\r\n# We recreate my cols, and pull pathOut from the file it was written to\r\nc = tf.estimator.DNNClassifier(hidden_units = [10,10], feature_columns=my_feature_columns, model_dir = pathOut)\r\n# Using the canned `eval_input_fn` from the iris_data.py example\r\n# dataDict is the source data\r\npredictions = c.predict(input_fn=eval_input_fn(dataDict, None))\r\nfor predDict in predictions:\r\n    # raises \"ValueError: Could not find trained model in model_dir: pathOut\"\r\n    print(predDict)\r\n\r\n```\r\n\r\n### Describe the problem\r\n\r\nThe estimator [only looks for the latest checkpoint](https://github.com/tensorflow/tensorflow/blob/r1.7/tensorflow/python/estimator/estimator.py#L476-L480), and ignores any exports that might have been created from its own `export_savedmodel` function\r\n\r\nBecause of https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/estimator/estimator.py#L644-L652 , seems like [tf.saved_model.loader.load](https://www.tensorflow.org/api_docs/python/tf/saved_model/loader/load) should also be checked"}