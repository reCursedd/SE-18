{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6311", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6311/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6311/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6311/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/6311", "id": 195515501, "node_id": "MDU6SXNzdWUxOTU1MTU1MDE=", "number": 6311, "title": "Problem with specifying worker_device for contrib.estimator", "user": {"login": "LiamHe", "id": 13152755, "node_id": "MDQ6VXNlcjEzMTUyNzU1", "avatar_url": "https://avatars3.githubusercontent.com/u/13152755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LiamHe", "html_url": "https://github.com/LiamHe", "followers_url": "https://api.github.com/users/LiamHe/followers", "following_url": "https://api.github.com/users/LiamHe/following{/other_user}", "gists_url": "https://api.github.com/users/LiamHe/gists{/gist_id}", "starred_url": "https://api.github.com/users/LiamHe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LiamHe/subscriptions", "organizations_url": "https://api.github.com/users/LiamHe/orgs", "repos_url": "https://api.github.com/users/LiamHe/repos", "events_url": "https://api.github.com/users/LiamHe/events{/privacy}", "received_events_url": "https://api.github.com/users/LiamHe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-14T12:13:30Z", "updated_at": "2016-12-15T19:34:25Z", "closed_at": "2016-12-15T19:34:25Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hello</p>\n<p>In <code>tensorflow/contrib/learn/python/learn/estimator/estimator.py</code>, the function <code>_get_replica_device_setter</code> will specify the <code>worker_device</code> we will use. The function is as follows.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">_get_replica_device_setter</span>(<span class=\"pl-smi\">config</span>):\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span>Creates a replica device setter if required.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">  Args:</span>\n<span class=\"pl-s\">    config: A RunConfig instance.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">  Returns:</span>\n<span class=\"pl-s\">    A replica device setter, or None.</span>\n<span class=\"pl-s\">  <span class=\"pl-pds\">\"\"\"</span></span>\n  ps_ops <span class=\"pl-k\">=</span> [\n      <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Variable<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>AutoReloadVariable<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>MutableHashTable<span class=\"pl-pds\">'</span></span>,\n      <span class=\"pl-s\"><span class=\"pl-pds\">'</span>MutableHashTableOfTensors<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>MutableDenseHashTable<span class=\"pl-pds\">'</span></span>\n  ]\n\n  <span class=\"pl-k\">if</span> config.task_type:\n    worker_device <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/job:<span class=\"pl-c1\">%s</span>/task:<span class=\"pl-c1\">%d</span><span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">%</span> (config.task_type, config.task_id)\n  <span class=\"pl-k\">else</span>:\n    worker_device <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/job:worker<span class=\"pl-pds\">'</span></span>\n\n  <span class=\"pl-k\">if</span> config.num_ps_replicas <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0</span>:\n    <span class=\"pl-k\">return</span> device_setter.replica_device_setter(\n        <span class=\"pl-v\">ps_tasks</span><span class=\"pl-k\">=</span>config.num_ps_replicas, <span class=\"pl-v\">worker_device</span><span class=\"pl-k\">=</span>worker_device,\n        <span class=\"pl-v\">merge_devices</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>, <span class=\"pl-v\">ps_ops</span><span class=\"pl-k\">=</span>ps_ops, <span class=\"pl-v\">cluster</span><span class=\"pl-k\">=</span>config.cluster_spec)\n  <span class=\"pl-k\">else</span>:\n    <span class=\"pl-k\">return</span> <span class=\"pl-c1\">None</span></pre></div>\n<p>However, if our device has name like <code>/job:0/replica:0/task:0</code>, then what should do?</p>", "body_text": "Hello\nIn tensorflow/contrib/learn/python/learn/estimator/estimator.py, the function _get_replica_device_setter will specify the worker_device we will use. The function is as follows.\ndef _get_replica_device_setter(config):\n  \"\"\"Creates a replica device setter if required.\n\n  Args:\n    config: A RunConfig instance.\n\n  Returns:\n    A replica device setter, or None.\n  \"\"\"\n  ps_ops = [\n      'Variable', 'AutoReloadVariable', 'MutableHashTable',\n      'MutableHashTableOfTensors', 'MutableDenseHashTable'\n  ]\n\n  if config.task_type:\n    worker_device = '/job:%s/task:%d' % (config.task_type, config.task_id)\n  else:\n    worker_device = '/job:worker'\n\n  if config.num_ps_replicas > 0:\n    return device_setter.replica_device_setter(\n        ps_tasks=config.num_ps_replicas, worker_device=worker_device,\n        merge_devices=True, ps_ops=ps_ops, cluster=config.cluster_spec)\n  else:\n    return None\nHowever, if our device has name like /job:0/replica:0/task:0, then what should do?", "body": "Hello\r\n\r\nIn `tensorflow/contrib/learn/python/learn/estimator/estimator.py`, the function `_get_replica_device_setter` will specify the `worker_device` we will use. The function is as follows.\r\n\r\n```python\r\ndef _get_replica_device_setter(config):\r\n  \"\"\"Creates a replica device setter if required.\r\n\r\n  Args:\r\n    config: A RunConfig instance.\r\n\r\n  Returns:\r\n    A replica device setter, or None.\r\n  \"\"\"\r\n  ps_ops = [\r\n      'Variable', 'AutoReloadVariable', 'MutableHashTable',\r\n      'MutableHashTableOfTensors', 'MutableDenseHashTable'\r\n  ]\r\n\r\n  if config.task_type:\r\n    worker_device = '/job:%s/task:%d' % (config.task_type, config.task_id)\r\n  else:\r\n    worker_device = '/job:worker'\r\n\r\n  if config.num_ps_replicas > 0:\r\n    return device_setter.replica_device_setter(\r\n        ps_tasks=config.num_ps_replicas, worker_device=worker_device,\r\n        merge_devices=True, ps_ops=ps_ops, cluster=config.cluster_spec)\r\n  else:\r\n    return None\r\n```\r\n\r\nHowever, if our device has name like `/job:0/replica:0/task:0`, then what should do?"}