{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23823", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23823/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23823/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23823/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23823", "id": 381894992, "node_id": "MDU6SXNzdWUzODE4OTQ5OTI=", "number": 23823, "title": " tf.estimator.export.ServingInputReceiver very rigid implementation", "user": {"login": "edumotya", "id": 13154422, "node_id": "MDQ6VXNlcjEzMTU0NDIy", "avatar_url": "https://avatars1.githubusercontent.com/u/13154422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edumotya", "html_url": "https://github.com/edumotya", "followers_url": "https://api.github.com/users/edumotya/followers", "following_url": "https://api.github.com/users/edumotya/following{/other_user}", "gists_url": "https://api.github.com/users/edumotya/gists{/gist_id}", "starred_url": "https://api.github.com/users/edumotya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edumotya/subscriptions", "organizations_url": "https://api.github.com/users/edumotya/orgs", "repos_url": "https://api.github.com/users/edumotya/repos", "events_url": "https://api.github.com/users/edumotya/events{/privacy}", "received_events_url": "https://api.github.com/users/edumotya/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-17T19:48:00Z", "updated_at": "2018-11-17T23:05:47Z", "closed_at": null, "author_association": "NONE", "body_html": "<p><strong>System information</strong></p>\n<ul>\n<li>I have written custom code.</li>\n<li>OS Platform and Distribution: Ubuntu 16.04</li>\n<li>TensorFlow installed from:  binary</li>\n<li>TensorFlow version: tensorflow-1.12.0</li>\n<li>Python version: 3.6</li>\n<li>CUDA/cuDNN version: 9.0</li>\n<li>GPU model and memory: GeForce MX150 2GB</li>\n</ul>\n<p><strong>Describe the current behavior</strong></p>\n<p>Very rigid implementation for tf.estimator.export.ServingInputReceiver. I use nested dictionaries for train and eval features, such as: features={}; features['static'] = tf.Tensor(); features['dynamic']['a'] = tf.Tensor(); features['dynamic']['b'] = tf.Tensor(), which works fine for train and eval input fns but it is not supported for tf.estimator.export.ServingInputReceiver. It raises value_error at _check_tensor:</p>\n<p>ValueError: feature dynamic must be a Tensor or SparseTensor.</p>\n<p>Since the function _wrap_and_check_input_tensors only allows plain dictionaries containing string keys and tensor values.</p>\n<p><strong>Describe the expected behavior</strong></p>\n<p>At least one should be able to disable the option check_tensors. Actually, tf.estimator is expected to provide a more flexible implementation.</p>\n<p><strong>Other info / logs</strong></p>\n<p>File \"/home/edu/.local/lib/python3.6/site-packages/tensorflow/python/estimator/export/export.py\", line 137, in <strong>new</strong><br>\nfeatures = _wrap_and_check_input_tensors(features, 'feature')<br>\nFile \"/home/edu/.local/lib/python3.6/site-packages/tensorflow/python/estimator/export/export.py\", line 73, in _wrap_and_check_input_tensors<br>\n_check_tensor(tensor, name, error_label=field_name)<br>\nFile \"/home/edu/.local/lib/python3.6/site-packages/tensorflow/python/estimator/export/export.py\", line 97, in _check_tensor<br>\nraise value_error<br>\nValueError: feature dynamic must be a Tensor or SparseTensor.</p>", "body_text": "System information\n\nI have written custom code.\nOS Platform and Distribution: Ubuntu 16.04\nTensorFlow installed from:  binary\nTensorFlow version: tensorflow-1.12.0\nPython version: 3.6\nCUDA/cuDNN version: 9.0\nGPU model and memory: GeForce MX150 2GB\n\nDescribe the current behavior\nVery rigid implementation for tf.estimator.export.ServingInputReceiver. I use nested dictionaries for train and eval features, such as: features={}; features['static'] = tf.Tensor(); features['dynamic']['a'] = tf.Tensor(); features['dynamic']['b'] = tf.Tensor(), which works fine for train and eval input fns but it is not supported for tf.estimator.export.ServingInputReceiver. It raises value_error at _check_tensor:\nValueError: feature dynamic must be a Tensor or SparseTensor.\nSince the function _wrap_and_check_input_tensors only allows plain dictionaries containing string keys and tensor values.\nDescribe the expected behavior\nAt least one should be able to disable the option check_tensors. Actually, tf.estimator is expected to provide a more flexible implementation.\nOther info / logs\nFile \"/home/edu/.local/lib/python3.6/site-packages/tensorflow/python/estimator/export/export.py\", line 137, in new\nfeatures = _wrap_and_check_input_tensors(features, 'feature')\nFile \"/home/edu/.local/lib/python3.6/site-packages/tensorflow/python/estimator/export/export.py\", line 73, in _wrap_and_check_input_tensors\n_check_tensor(tensor, name, error_label=field_name)\nFile \"/home/edu/.local/lib/python3.6/site-packages/tensorflow/python/estimator/export/export.py\", line 97, in _check_tensor\nraise value_error\nValueError: feature dynamic must be a Tensor or SparseTensor.", "body": "**System information**\r\n- I have written custom code.\r\n- OS Platform and Distribution: Ubuntu 16.04\r\n- TensorFlow installed from:  binary\r\n- TensorFlow version: tensorflow-1.12.0\r\n- Python version: 3.6\r\n- CUDA/cuDNN version: 9.0\r\n- GPU model and memory: GeForce MX150 2GB\r\n\r\n**Describe the current behavior**\r\n\r\nVery rigid implementation for tf.estimator.export.ServingInputReceiver. I use nested dictionaries for train and eval features, such as: features={}; features['static'] = tf.Tensor(); features['dynamic']['a'] = tf.Tensor(); features['dynamic']['b'] = tf.Tensor(), which works fine for train and eval input fns but it is not supported for tf.estimator.export.ServingInputReceiver. It raises value_error at _check_tensor:\r\n\r\nValueError: feature dynamic must be a Tensor or SparseTensor.\r\n\r\nSince the function _wrap_and_check_input_tensors only allows plain dictionaries containing string keys and tensor values. \r\n\r\n**Describe the expected behavior**\r\n\r\nAt least one should be able to disable the option check_tensors. Actually, tf.estimator is expected to provide a more flexible implementation.\r\n\r\n**Other info / logs**\r\n\r\n  File \"/home/edu/.local/lib/python3.6/site-packages/tensorflow/python/estimator/export/export.py\", line 137, in __new__ \r\n    features = _wrap_and_check_input_tensors(features, 'feature')\r\n  File \"/home/edu/.local/lib/python3.6/site-packages/tensorflow/python/estimator/export/export.py\", line 73, in _wrap_and_check_input_tensors\r\n    _check_tensor(tensor, name, error_label=field_name)\r\n  File \"/home/edu/.local/lib/python3.6/site-packages/tensorflow/python/estimator/export/export.py\", line 97, in _check_tensor\r\n    raise value_error\r\nValueError: feature dynamic must be a Tensor or SparseTensor.\r\n"}