{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17419", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17419/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17419/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17419/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17419", "id": 302139911, "node_id": "MDU6SXNzdWUzMDIxMzk5MTE=", "number": 17419, "title": "possible issue of tensorflow.keras not handling shape correctly", "user": {"login": "henrysky", "id": 28623434, "node_id": "MDQ6VXNlcjI4NjIzNDM0", "avatar_url": "https://avatars1.githubusercontent.com/u/28623434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/henrysky", "html_url": "https://github.com/henrysky", "followers_url": "https://api.github.com/users/henrysky/followers", "following_url": "https://api.github.com/users/henrysky/following{/other_user}", "gists_url": "https://api.github.com/users/henrysky/gists{/gist_id}", "starred_url": "https://api.github.com/users/henrysky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/henrysky/subscriptions", "organizations_url": "https://api.github.com/users/henrysky/orgs", "repos_url": "https://api.github.com/users/henrysky/repos", "events_url": "https://api.github.com/users/henrysky/events{/privacy}", "received_events_url": "https://api.github.com/users/henrysky/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": {"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-03-05T00:39:11Z", "updated_at": "2018-11-14T19:15:37Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Win10 1709 x64</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary from PyPI</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.6.0</li>\n<li><strong>Python version</strong>: 3.6.4</li>\n<li><strong>Bazel version (if compiling from source)</strong>: /</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: /</li>\n<li><strong>CUDA/cuDNN version</strong>: 9.0/7.0</li>\n<li><strong>GPU model and memory</strong>: GTX1060 6GB</li>\n<li><strong>Exact command to reproduce</strong>: /</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>i believe this is a bug that <code>tensorflow.keras</code> not handling the shape correctly, <code>self.input_shape</code> is provided by me which is [7514, 1] in this case. My code runs fine with <code>keras</code> but get this error with <code>tensorflow.keras</code></p>\n<h3>Source code / logs</h3>\n<pre><code>---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n&lt;ipython-input-1-21e293afadc1&gt; in &lt;module&gt;()\n     22 # x_err[x_err&lt;0] = 0\n     23 from astroNN.models import load_folder\n---&gt; 24 bcnn = load_folder('astroNN_0224_run002')\n     25 \n     26 # x = np.random.rand(1000,7514)\n\nd:\\university\\ast425\\astronn\\astroNN\\models\\__init__.py in load_folder(folder)\n    144         pass\n    145 \n--&gt; 146     astronn_model_obj.compile()\n    147     astronn_model_obj.keras_model.load_weights(os.path.join(astronn_model_obj.fullfilepath, 'model_weights.h5'))\n    148 \n\nd:\\university\\ast425\\astronn\\astroNN\\models\\BayesianCNNBase.py in compile(self)\n    238             self._last_layer_activation = 'softmax'\n    239 \n--&gt; 240         self.keras_model, self.keras_model_predict, output_loss, variance_loss = self.model()\n    241 \n    242         if self.optimizer is None or self.optimizer == 'adam':\n\nd:\\university\\ast425\\astronn\\astroNN\\models\\Apogee_BCNN.py in model(self)\n     64 \n     65     def model(self):\n---&gt; 66         input_tensor = Input(shape=self.input_shape, name='input')\n     67         labels_err_tensor = Input(shape=(self.labels_shape,), name='labels_err')\n     68 \n\n~\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\keras\\_impl\\keras\\engine\\topology.py in Input(shape, batch_size, name, dtype, sparse, tensor, **kwargs)\n    621   if dtype is None:\n    622     dtype = K.floatx()\n--&gt; 623   if not shape and tensor is None:\n    624     raise ValueError('Please provide to Input either a `shape`'\n    625                      ' or a `tensor` argument. Note that '\n\nValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Win10 1709 x64\nTensorFlow installed from (source or binary): binary from PyPI\nTensorFlow version (use command below): 1.6.0\nPython version: 3.6.4\nBazel version (if compiling from source): /\nGCC/Compiler version (if compiling from source): /\nCUDA/cuDNN version: 9.0/7.0\nGPU model and memory: GTX1060 6GB\nExact command to reproduce: /\n\nDescribe the problem\ni believe this is a bug that tensorflow.keras not handling the shape correctly, self.input_shape is provided by me which is [7514, 1] in this case. My code runs fine with keras but get this error with tensorflow.keras\nSource code / logs\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n<ipython-input-1-21e293afadc1> in <module>()\n     22 # x_err[x_err<0] = 0\n     23 from astroNN.models import load_folder\n---> 24 bcnn = load_folder('astroNN_0224_run002')\n     25 \n     26 # x = np.random.rand(1000,7514)\n\nd:\\university\\ast425\\astronn\\astroNN\\models\\__init__.py in load_folder(folder)\n    144         pass\n    145 \n--> 146     astronn_model_obj.compile()\n    147     astronn_model_obj.keras_model.load_weights(os.path.join(astronn_model_obj.fullfilepath, 'model_weights.h5'))\n    148 \n\nd:\\university\\ast425\\astronn\\astroNN\\models\\BayesianCNNBase.py in compile(self)\n    238             self._last_layer_activation = 'softmax'\n    239 \n--> 240         self.keras_model, self.keras_model_predict, output_loss, variance_loss = self.model()\n    241 \n    242         if self.optimizer is None or self.optimizer == 'adam':\n\nd:\\university\\ast425\\astronn\\astroNN\\models\\Apogee_BCNN.py in model(self)\n     64 \n     65     def model(self):\n---> 66         input_tensor = Input(shape=self.input_shape, name='input')\n     67         labels_err_tensor = Input(shape=(self.labels_shape,), name='labels_err')\n     68 \n\n~\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\keras\\_impl\\keras\\engine\\topology.py in Input(shape, batch_size, name, dtype, sparse, tensor, **kwargs)\n    621   if dtype is None:\n    622     dtype = K.floatx()\n--> 623   if not shape and tensor is None:\n    624     raise ValueError('Please provide to Input either a `shape`'\n    625                      ' or a `tensor` argument. Note that '\n\nValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Win10 1709 x64\r\n- **TensorFlow installed from (source or binary)**: binary from PyPI\r\n- **TensorFlow version (use command below)**: 1.6.0\r\n- **Python version**: 3.6.4\r\n- **Bazel version (if compiling from source)**: /\r\n- **GCC/Compiler version (if compiling from source)**: /\r\n- **CUDA/cuDNN version**: 9.0/7.0\r\n- **GPU model and memory**: GTX1060 6GB\r\n- **Exact command to reproduce**: /\r\n\r\n### Describe the problem\r\ni believe this is a bug that ``tensorflow.keras`` not handling the shape correctly, ``self.input_shape`` is provided by me which is [7514, 1] in this case. My code runs fine with ``keras`` but get this error with ``tensorflow.keras``\r\n\r\n### Source code / logs\r\n```\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-1-21e293afadc1> in <module>()\r\n     22 # x_err[x_err<0] = 0\r\n     23 from astroNN.models import load_folder\r\n---> 24 bcnn = load_folder('astroNN_0224_run002')\r\n     25 \r\n     26 # x = np.random.rand(1000,7514)\r\n\r\nd:\\university\\ast425\\astronn\\astroNN\\models\\__init__.py in load_folder(folder)\r\n    144         pass\r\n    145 \r\n--> 146     astronn_model_obj.compile()\r\n    147     astronn_model_obj.keras_model.load_weights(os.path.join(astronn_model_obj.fullfilepath, 'model_weights.h5'))\r\n    148 \r\n\r\nd:\\university\\ast425\\astronn\\astroNN\\models\\BayesianCNNBase.py in compile(self)\r\n    238             self._last_layer_activation = 'softmax'\r\n    239 \r\n--> 240         self.keras_model, self.keras_model_predict, output_loss, variance_loss = self.model()\r\n    241 \r\n    242         if self.optimizer is None or self.optimizer == 'adam':\r\n\r\nd:\\university\\ast425\\astronn\\astroNN\\models\\Apogee_BCNN.py in model(self)\r\n     64 \r\n     65     def model(self):\r\n---> 66         input_tensor = Input(shape=self.input_shape, name='input')\r\n     67         labels_err_tensor = Input(shape=(self.labels_shape,), name='labels_err')\r\n     68 \r\n\r\n~\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\keras\\_impl\\keras\\engine\\topology.py in Input(shape, batch_size, name, dtype, sparse, tensor, **kwargs)\r\n    621   if dtype is None:\r\n    622     dtype = K.floatx()\r\n--> 623   if not shape and tensor is None:\r\n    624     raise ValueError('Please provide to Input either a `shape`'\r\n    625                      ' or a `tensor` argument. Note that '\r\n\r\nValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()\r\n```"}