{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23571", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23571/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23571/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23571/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/23571", "id": 378095317, "node_id": "MDExOlB1bGxSZXF1ZXN0MjI4ODgzMTIz", "number": 23571, "title": "Fix broken OrderedEnqueuer class in keras.utils.data_utils", "user": {"login": "frreiss", "id": 12436991, "node_id": "MDQ6VXNlcjEyNDM2OTkx", "avatar_url": "https://avatars1.githubusercontent.com/u/12436991?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frreiss", "html_url": "https://github.com/frreiss", "followers_url": "https://api.github.com/users/frreiss/followers", "following_url": "https://api.github.com/users/frreiss/following{/other_user}", "gists_url": "https://api.github.com/users/frreiss/gists{/gist_id}", "starred_url": "https://api.github.com/users/frreiss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frreiss/subscriptions", "organizations_url": "https://api.github.com/users/frreiss/orgs", "repos_url": "https://api.github.com/users/frreiss/repos", "events_url": "https://api.github.com/users/frreiss/events{/privacy}", "received_events_url": "https://api.github.com/users/frreiss/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 419840263, "node_id": "MDU6TGFiZWw0MTk4NDAyNjM=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/awaiting%20testing%20(then%20merge)", "name": "awaiting testing (then merge)", "color": "c2e0c6", "default": false}, {"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}, {"id": 987666414, "node_id": "MDU6TGFiZWw5ODc2NjY0MTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/ready%20to%20pull", "name": "ready to pull", "color": "2cd643", "default": false}], "state": "open", "locked": false, "assignee": {"login": "ymodak", "id": 42785357, "node_id": "MDQ6VXNlcjQyNzg1MzU3", "avatar_url": "https://avatars1.githubusercontent.com/u/42785357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ymodak", "html_url": "https://github.com/ymodak", "followers_url": "https://api.github.com/users/ymodak/followers", "following_url": "https://api.github.com/users/ymodak/following{/other_user}", "gists_url": "https://api.github.com/users/ymodak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ymodak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ymodak/subscriptions", "organizations_url": "https://api.github.com/users/ymodak/orgs", "repos_url": "https://api.github.com/users/ymodak/repos", "events_url": "https://api.github.com/users/ymodak/events{/privacy}", "received_events_url": "https://api.github.com/users/ymodak/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ymodak", "id": 42785357, "node_id": "MDQ6VXNlcjQyNzg1MzU3", "avatar_url": "https://avatars1.githubusercontent.com/u/42785357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ymodak", "html_url": "https://github.com/ymodak", "followers_url": "https://api.github.com/users/ymodak/followers", "following_url": "https://api.github.com/users/ymodak/following{/other_user}", "gists_url": "https://api.github.com/users/ymodak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ymodak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ymodak/subscriptions", "organizations_url": "https://api.github.com/users/ymodak/orgs", "repos_url": "https://api.github.com/users/ymodak/repos", "events_url": "https://api.github.com/users/ymodak/events{/privacy}", "received_events_url": "https://api.github.com/users/ymodak/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-11-07T00:45:58Z", "updated_at": "2018-11-15T21:55:41Z", "closed_at": null, "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/23571", "html_url": "https://github.com/tensorflow/tensorflow/pull/23571", "diff_url": "https://github.com/tensorflow/tensorflow/pull/23571.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/23571.patch"}, "body_html": "<p>The <code>OrderedEnqueuer</code> class in <code>tensorflow.python.keras.utils.data_utils</code> isn't working at the head of the master branch when <code>use_multiprocessing=True</code>. For example:</p>\n<pre><code>In [1]: from tensorflow.python import keras \n   ...: import numpy as np \n   ...:  \n   ...: class TestSequence(keras.utils.data_utils.Sequence): \n   ...:  \n   ...:   def __init__(self, shape, value=1.): \n   ...:     self.shape = shape \n   ...:     self.inner = value \n   ...:  \n   ...:   def __getitem__(self, item): \n   ...:     return np.ones(self.shape, dtype=np.uint32) * item * self.inner \n   ...:  \n   ...:   def __len__(self): \n   ...:     return 100 \n   ...:  \n   ...:   def on_epoch_end(self): \n   ...:     self.inner *= 5.0 \n   ...:  \n   ...: enqueuer = keras.utils.data_utils.OrderedEnqueuer( \n   ...:     TestSequence([3, 200, 200, 3]), use_multiprocessing=True) \n   ...: enqueuer.start(3, 10) \n   ...: gen_output = enqueuer.get() \n   ...: next(gen_output)[0, 0, 0, 0] \n   ...:                                                                                             \nException in thread Thread-30:\nTraceback (most recent call last):\n  File \"/Users/freiss/dl/tensorflow-fred/testenv/lib/python3.6/threading.py\", line 916, in _bootstrap_inner\n    self.run()\n  File \"/Users/freiss/dl/tensorflow-fred/testenv/lib/python3.6/threading.py\", line 864, in run\n    self._target(*self._args, **self._kwargs)\n  File \"/Users/freiss/dl/tensorflow-fred/testenv/lib/python3.6/site-packages/tensorflow/python/keras/utils/data_utils.py\", line 619, in _run\n    with closing(self.executor_fn(_SHARED_SEQUENCES)) as executor:\n  File \"/Users/freiss/dl/tensorflow-fred/testenv/lib/python3.6/site-packages/tensorflow/python/keras/utils/data_utils.py\", line 601, in pool_fn\n    initargs=(seqs, self.random_seed))\nAttributeError: 'OrderedEnqueuer' object has no attribute 'random_seed'\n\n[Python process hangs, control never returns to user]\n</code></pre>\n<p>This error happens because the code in <code>data_utils.py</code> that is supposed to set up the worker pool for <code>OrderedEnqueuer</code> contains a reference to a class field that doesn't exist and crashes. The main thread enqueues tasks, but no workers are created to perform the tasks.</p>\n<p>This problem also causes the automated regression test <code>//tensorflow/python/keras:data_utils_test</code> to hang.</p>\n<p>This PR fixes the problem by setting the \"random seed\" argument to <code>None</code>.</p>\n<p>After this change, I'm able to run the above test code manually, i.e.:</p>\n<pre><code>In [1]: from tensorflow.python import keras \n   ...: import numpy as np \n   ...:  \n   ...: class TestSequence(keras.utils.data_utils.Sequence): \n   ...:  \n   ...:   def __init__(self, shape, value=1.): \n   ...:     self.shape = shape \n   ...:     self.inner = value \n   ...:  \n   ...:   def __getitem__(self, item): \n   ...:     return np.ones(self.shape, dtype=np.uint32) * item * self.inner \n   ...:  \n   ...:   def __len__(self): \n   ...:     return 100 \n   ...:  \n   ...:   def on_epoch_end(self): \n   ...:     self.inner *= 5.0 \n   ...:  \n   ...: enqueuer = keras.utils.data_utils.OrderedEnqueuer( \n   ...:     TestSequence([3, 200, 200, 3]), use_multiprocessing=True) \n   ...: enqueuer.start(3, 10) \n   ...: gen_output = enqueuer.get() \n   ...: next(gen_output)[0, 0, 0, 0] \n   ...:                                                                         \nOut[1]: 0.0\n\nIn [2]:\n</code></pre>\n<p>However, the automated regression test <code>//tensorflow/python/keras:data_utils_test</code> still hangs due to a second problem that I have not yet isolated.</p>", "body_text": "The OrderedEnqueuer class in tensorflow.python.keras.utils.data_utils isn't working at the head of the master branch when use_multiprocessing=True. For example:\nIn [1]: from tensorflow.python import keras \n   ...: import numpy as np \n   ...:  \n   ...: class TestSequence(keras.utils.data_utils.Sequence): \n   ...:  \n   ...:   def __init__(self, shape, value=1.): \n   ...:     self.shape = shape \n   ...:     self.inner = value \n   ...:  \n   ...:   def __getitem__(self, item): \n   ...:     return np.ones(self.shape, dtype=np.uint32) * item * self.inner \n   ...:  \n   ...:   def __len__(self): \n   ...:     return 100 \n   ...:  \n   ...:   def on_epoch_end(self): \n   ...:     self.inner *= 5.0 \n   ...:  \n   ...: enqueuer = keras.utils.data_utils.OrderedEnqueuer( \n   ...:     TestSequence([3, 200, 200, 3]), use_multiprocessing=True) \n   ...: enqueuer.start(3, 10) \n   ...: gen_output = enqueuer.get() \n   ...: next(gen_output)[0, 0, 0, 0] \n   ...:                                                                                             \nException in thread Thread-30:\nTraceback (most recent call last):\n  File \"/Users/freiss/dl/tensorflow-fred/testenv/lib/python3.6/threading.py\", line 916, in _bootstrap_inner\n    self.run()\n  File \"/Users/freiss/dl/tensorflow-fred/testenv/lib/python3.6/threading.py\", line 864, in run\n    self._target(*self._args, **self._kwargs)\n  File \"/Users/freiss/dl/tensorflow-fred/testenv/lib/python3.6/site-packages/tensorflow/python/keras/utils/data_utils.py\", line 619, in _run\n    with closing(self.executor_fn(_SHARED_SEQUENCES)) as executor:\n  File \"/Users/freiss/dl/tensorflow-fred/testenv/lib/python3.6/site-packages/tensorflow/python/keras/utils/data_utils.py\", line 601, in pool_fn\n    initargs=(seqs, self.random_seed))\nAttributeError: 'OrderedEnqueuer' object has no attribute 'random_seed'\n\n[Python process hangs, control never returns to user]\n\nThis error happens because the code in data_utils.py that is supposed to set up the worker pool for OrderedEnqueuer contains a reference to a class field that doesn't exist and crashes. The main thread enqueues tasks, but no workers are created to perform the tasks.\nThis problem also causes the automated regression test //tensorflow/python/keras:data_utils_test to hang.\nThis PR fixes the problem by setting the \"random seed\" argument to None.\nAfter this change, I'm able to run the above test code manually, i.e.:\nIn [1]: from tensorflow.python import keras \n   ...: import numpy as np \n   ...:  \n   ...: class TestSequence(keras.utils.data_utils.Sequence): \n   ...:  \n   ...:   def __init__(self, shape, value=1.): \n   ...:     self.shape = shape \n   ...:     self.inner = value \n   ...:  \n   ...:   def __getitem__(self, item): \n   ...:     return np.ones(self.shape, dtype=np.uint32) * item * self.inner \n   ...:  \n   ...:   def __len__(self): \n   ...:     return 100 \n   ...:  \n   ...:   def on_epoch_end(self): \n   ...:     self.inner *= 5.0 \n   ...:  \n   ...: enqueuer = keras.utils.data_utils.OrderedEnqueuer( \n   ...:     TestSequence([3, 200, 200, 3]), use_multiprocessing=True) \n   ...: enqueuer.start(3, 10) \n   ...: gen_output = enqueuer.get() \n   ...: next(gen_output)[0, 0, 0, 0] \n   ...:                                                                         \nOut[1]: 0.0\n\nIn [2]:\n\nHowever, the automated regression test //tensorflow/python/keras:data_utils_test still hangs due to a second problem that I have not yet isolated.", "body": "The `OrderedEnqueuer` class in `tensorflow.python.keras.utils.data_utils` isn't working at the head of the master branch when `use_multiprocessing=True`. For example:\r\n\r\n```\r\nIn [1]: from tensorflow.python import keras \r\n   ...: import numpy as np \r\n   ...:  \r\n   ...: class TestSequence(keras.utils.data_utils.Sequence): \r\n   ...:  \r\n   ...:   def __init__(self, shape, value=1.): \r\n   ...:     self.shape = shape \r\n   ...:     self.inner = value \r\n   ...:  \r\n   ...:   def __getitem__(self, item): \r\n   ...:     return np.ones(self.shape, dtype=np.uint32) * item * self.inner \r\n   ...:  \r\n   ...:   def __len__(self): \r\n   ...:     return 100 \r\n   ...:  \r\n   ...:   def on_epoch_end(self): \r\n   ...:     self.inner *= 5.0 \r\n   ...:  \r\n   ...: enqueuer = keras.utils.data_utils.OrderedEnqueuer( \r\n   ...:     TestSequence([3, 200, 200, 3]), use_multiprocessing=True) \r\n   ...: enqueuer.start(3, 10) \r\n   ...: gen_output = enqueuer.get() \r\n   ...: next(gen_output)[0, 0, 0, 0] \r\n   ...:                                                                                             \r\nException in thread Thread-30:\r\nTraceback (most recent call last):\r\n  File \"/Users/freiss/dl/tensorflow-fred/testenv/lib/python3.6/threading.py\", line 916, in _bootstrap_inner\r\n    self.run()\r\n  File \"/Users/freiss/dl/tensorflow-fred/testenv/lib/python3.6/threading.py\", line 864, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/Users/freiss/dl/tensorflow-fred/testenv/lib/python3.6/site-packages/tensorflow/python/keras/utils/data_utils.py\", line 619, in _run\r\n    with closing(self.executor_fn(_SHARED_SEQUENCES)) as executor:\r\n  File \"/Users/freiss/dl/tensorflow-fred/testenv/lib/python3.6/site-packages/tensorflow/python/keras/utils/data_utils.py\", line 601, in pool_fn\r\n    initargs=(seqs, self.random_seed))\r\nAttributeError: 'OrderedEnqueuer' object has no attribute 'random_seed'\r\n\r\n[Python process hangs, control never returns to user]\r\n```\r\n\r\nThis error happens because the code in `data_utils.py` that is supposed to set up the worker pool for `OrderedEnqueuer` contains a reference to a class field that doesn't exist and crashes. The main thread enqueues tasks, but no workers are created to perform the tasks.\r\n\r\nThis problem also causes the automated regression test `//tensorflow/python/keras:data_utils_test` to hang.\r\n\r\nThis PR fixes the problem by setting the \"random seed\" argument to `None`.\r\n\r\nAfter this change, I'm able to run the above test code manually, i.e.:\r\n\r\n```\r\nIn [1]: from tensorflow.python import keras \r\n   ...: import numpy as np \r\n   ...:  \r\n   ...: class TestSequence(keras.utils.data_utils.Sequence): \r\n   ...:  \r\n   ...:   def __init__(self, shape, value=1.): \r\n   ...:     self.shape = shape \r\n   ...:     self.inner = value \r\n   ...:  \r\n   ...:   def __getitem__(self, item): \r\n   ...:     return np.ones(self.shape, dtype=np.uint32) * item * self.inner \r\n   ...:  \r\n   ...:   def __len__(self): \r\n   ...:     return 100 \r\n   ...:  \r\n   ...:   def on_epoch_end(self): \r\n   ...:     self.inner *= 5.0 \r\n   ...:  \r\n   ...: enqueuer = keras.utils.data_utils.OrderedEnqueuer( \r\n   ...:     TestSequence([3, 200, 200, 3]), use_multiprocessing=True) \r\n   ...: enqueuer.start(3, 10) \r\n   ...: gen_output = enqueuer.get() \r\n   ...: next(gen_output)[0, 0, 0, 0] \r\n   ...:                                                                         \r\nOut[1]: 0.0\r\n\r\nIn [2]:\r\n```\r\n\r\nHowever, the automated regression test `//tensorflow/python/keras:data_utils_test` still hangs due to a second problem that I have not yet isolated.\r\n"}