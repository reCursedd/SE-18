{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3397", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3397/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3397/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3397/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3397", "id": 166443628, "node_id": "MDU6SXNzdWUxNjY0NDM2Mjg=", "number": 3397, "title": "Can't place tf.nn.moments() on GPU when first dimension is None", "user": {"login": "osdf", "id": 193341, "node_id": "MDQ6VXNlcjE5MzM0MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/193341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/osdf", "html_url": "https://github.com/osdf", "followers_url": "https://api.github.com/users/osdf/followers", "following_url": "https://api.github.com/users/osdf/following{/other_user}", "gists_url": "https://api.github.com/users/osdf/gists{/gist_id}", "starred_url": "https://api.github.com/users/osdf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/osdf/subscriptions", "organizations_url": "https://api.github.com/users/osdf/orgs", "repos_url": "https://api.github.com/users/osdf/repos", "events_url": "https://api.github.com/users/osdf/events{/privacy}", "received_events_url": "https://api.github.com/users/osdf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "vincentvanhoucke", "id": 15737127, "node_id": "MDQ6VXNlcjE1NzM3MTI3", "avatar_url": "https://avatars3.githubusercontent.com/u/15737127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vincentvanhoucke", "html_url": "https://github.com/vincentvanhoucke", "followers_url": "https://api.github.com/users/vincentvanhoucke/followers", "following_url": "https://api.github.com/users/vincentvanhoucke/following{/other_user}", "gists_url": "https://api.github.com/users/vincentvanhoucke/gists{/gist_id}", "starred_url": "https://api.github.com/users/vincentvanhoucke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vincentvanhoucke/subscriptions", "organizations_url": "https://api.github.com/users/vincentvanhoucke/orgs", "repos_url": "https://api.github.com/users/vincentvanhoucke/repos", "events_url": "https://api.github.com/users/vincentvanhoucke/events{/privacy}", "received_events_url": "https://api.github.com/users/vincentvanhoucke/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "vincentvanhoucke", "id": 15737127, "node_id": "MDQ6VXNlcjE1NzM3MTI3", "avatar_url": "https://avatars3.githubusercontent.com/u/15737127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vincentvanhoucke", "html_url": "https://github.com/vincentvanhoucke", "followers_url": "https://api.github.com/users/vincentvanhoucke/followers", "following_url": "https://api.github.com/users/vincentvanhoucke/following{/other_user}", "gists_url": "https://api.github.com/users/vincentvanhoucke/gists{/gist_id}", "starred_url": "https://api.github.com/users/vincentvanhoucke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vincentvanhoucke/subscriptions", "organizations_url": "https://api.github.com/users/vincentvanhoucke/orgs", "repos_url": "https://api.github.com/users/vincentvanhoucke/repos", "events_url": "https://api.github.com/users/vincentvanhoucke/events{/privacy}", "received_events_url": "https://api.github.com/users/vincentvanhoucke/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 12, "created_at": "2016-07-19T21:47:23Z", "updated_at": "2017-05-02T13:26:43Z", "closed_at": "2017-02-28T03:21:46Z", "author_association": "NONE", "body_html": "<p>At first this sounds like <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"156843662\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/2508\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/2508/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/2508\">#2508</a>, but this was closed and apparently fixed and the error message is also different. So it might be more related to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"116345384\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/139\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/139/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/139\">#139</a>, and possibly to the comment of <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a> on <code>tf.mean</code> on GPUs. The example below works with cpu device context (or no explicit device placement at all). Is this a missing feature or should one not expect that this is fixable?</p>\n<h3>Environment info</h3>\n<p>Operating System:<br>\nUbuntu 15.10</p>\n<p>Installed version of CUDA and cuDNN:<br>\nCUDA7.5/cuDNN4.0.4</p>\n<p>(please attach the output of <code>ls -l /path/to/cuda/lib/libcud*</code>):</p>\n<pre><code>-rw-r--r-- 1 root root 189170 Jan  1 23:25 /usr/local/cuda/lib/libcudadevrt.a\nlrwxrwxrwx 1 root root     16 Jan  1 23:25 /usr/local/cuda/lib/libcudart.so -&gt; libcudart.so.7.5\nlrwxrwxrwx 1 root root     19 Jan  1 23:25 /usr/local/cuda/lib/libcudart.so.7.5 -&gt; libcudart.so.7.5.18\n-rwxr-xr-x 1 root root 311596 Jan  1 23:25 /usr/local/cuda/lib/libcudart.so.7.5.18\n-rw-r--r-- 1 root root 558020 Jan  1 23:25 /usr/local/cuda/lib/libcudart_static.a\n</code></pre>\n<p>If installed from sources, provide the commit hash: <a href=\"https://github.com/tensorflow/tensorflow/commit/fc9162975e52978d3af38549b570cc3cc5f0ab66\">fc91629</a></p>\n<h3>Steps to reproduce</h3>\n<pre><code>import tensorflow as tf\nimport numpy as np\n\nwith tf.device(\"/gpu:0\"):\n    x = tf.placeholder(tf.float32, shape=[None, 5])\n    mean, var = tf.nn.moments(x, axes=[0])\nsess = tf.Session()\nsess.run([mean, var], feed_dict={x:np.random.randn(10, 5)})\n</code></pre>\n<p>results in</p>\n<pre><code>E tensorflow/core/client/tensor_c_api.cc:485] Cannot assign a device to node 'moments/sufficient_statistics/SparseToDense': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\n     [[Node: moments/sufficient_statistics/SparseToDense = SparseToDense[T=DT_BOOL, Tindices=DT_INT32, validate_indices=true, _device=\"/device:GPU:0\"](moments/sufficient_statistics/SparseToDense/sparse_indices, moments/sufficient_statistics/Shape_1, moments/sufficient_statistics/SparseToDense/sparse_values, moments/sufficient_statistics/SparseToDense/default_value)]]\n</code></pre>\n<h3>What have you tried?</h3>\n<ol>\n<li>Setting <code>shape=[10, 5]</code> fixes the above problem (to be expected).</li>\n<li>Setting device context to <code>with tf.device(\"/cpu:0\"):</code> works with <code>None</code> shape info, too.</li>\n</ol>", "body_text": "At first this sounds like #2508, but this was closed and apparently fixed and the error message is also different. So it might be more related to #139, and possibly to the comment of @mrry on tf.mean on GPUs. The example below works with cpu device context (or no explicit device placement at all). Is this a missing feature or should one not expect that this is fixable?\nEnvironment info\nOperating System:\nUbuntu 15.10\nInstalled version of CUDA and cuDNN:\nCUDA7.5/cuDNN4.0.4\n(please attach the output of ls -l /path/to/cuda/lib/libcud*):\n-rw-r--r-- 1 root root 189170 Jan  1 23:25 /usr/local/cuda/lib/libcudadevrt.a\nlrwxrwxrwx 1 root root     16 Jan  1 23:25 /usr/local/cuda/lib/libcudart.so -> libcudart.so.7.5\nlrwxrwxrwx 1 root root     19 Jan  1 23:25 /usr/local/cuda/lib/libcudart.so.7.5 -> libcudart.so.7.5.18\n-rwxr-xr-x 1 root root 311596 Jan  1 23:25 /usr/local/cuda/lib/libcudart.so.7.5.18\n-rw-r--r-- 1 root root 558020 Jan  1 23:25 /usr/local/cuda/lib/libcudart_static.a\n\nIf installed from sources, provide the commit hash: fc91629\nSteps to reproduce\nimport tensorflow as tf\nimport numpy as np\n\nwith tf.device(\"/gpu:0\"):\n    x = tf.placeholder(tf.float32, shape=[None, 5])\n    mean, var = tf.nn.moments(x, axes=[0])\nsess = tf.Session()\nsess.run([mean, var], feed_dict={x:np.random.randn(10, 5)})\n\nresults in\nE tensorflow/core/client/tensor_c_api.cc:485] Cannot assign a device to node 'moments/sufficient_statistics/SparseToDense': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\n     [[Node: moments/sufficient_statistics/SparseToDense = SparseToDense[T=DT_BOOL, Tindices=DT_INT32, validate_indices=true, _device=\"/device:GPU:0\"](moments/sufficient_statistics/SparseToDense/sparse_indices, moments/sufficient_statistics/Shape_1, moments/sufficient_statistics/SparseToDense/sparse_values, moments/sufficient_statistics/SparseToDense/default_value)]]\n\nWhat have you tried?\n\nSetting shape=[10, 5] fixes the above problem (to be expected).\nSetting device context to with tf.device(\"/cpu:0\"): works with None shape info, too.", "body": "At first this sounds like #2508, but this was closed and apparently fixed and the error message is also different. So it might be more related to #139, and possibly to the comment of @mrry on `tf.mean` on GPUs. The example below works with cpu device context (or no explicit device placement at all). Is this a missing feature or should one not expect that this is fixable?\n### Environment info\n\nOperating System:\nUbuntu 15.10\n\nInstalled version of CUDA and cuDNN: \nCUDA7.5/cuDNN4.0.4\n\n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`):\n\n```\n-rw-r--r-- 1 root root 189170 Jan  1 23:25 /usr/local/cuda/lib/libcudadevrt.a\nlrwxrwxrwx 1 root root     16 Jan  1 23:25 /usr/local/cuda/lib/libcudart.so -> libcudart.so.7.5\nlrwxrwxrwx 1 root root     19 Jan  1 23:25 /usr/local/cuda/lib/libcudart.so.7.5 -> libcudart.so.7.5.18\n-rwxr-xr-x 1 root root 311596 Jan  1 23:25 /usr/local/cuda/lib/libcudart.so.7.5.18\n-rw-r--r-- 1 root root 558020 Jan  1 23:25 /usr/local/cuda/lib/libcudart_static.a\n```\n\nIf installed from sources, provide the commit hash: [fc91629](https://github.com/tensorflow/tensorflow/commit/fc9162975e52978d3af38549b570cc3cc5f0ab66)\n### Steps to reproduce\n\n```\nimport tensorflow as tf\nimport numpy as np\n\nwith tf.device(\"/gpu:0\"):\n    x = tf.placeholder(tf.float32, shape=[None, 5])\n    mean, var = tf.nn.moments(x, axes=[0])\nsess = tf.Session()\nsess.run([mean, var], feed_dict={x:np.random.randn(10, 5)})\n```\n\nresults in\n\n```\nE tensorflow/core/client/tensor_c_api.cc:485] Cannot assign a device to node 'moments/sufficient_statistics/SparseToDense': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\n     [[Node: moments/sufficient_statistics/SparseToDense = SparseToDense[T=DT_BOOL, Tindices=DT_INT32, validate_indices=true, _device=\"/device:GPU:0\"](moments/sufficient_statistics/SparseToDense/sparse_indices, moments/sufficient_statistics/Shape_1, moments/sufficient_statistics/SparseToDense/sparse_values, moments/sufficient_statistics/SparseToDense/default_value)]]\n```\n### What have you tried?\n1. Setting `shape=[10, 5]` fixes the above problem (to be expected).\n2. Setting device context to `with tf.device(\"/cpu:0\"):` works with `None` shape info, too.\n"}