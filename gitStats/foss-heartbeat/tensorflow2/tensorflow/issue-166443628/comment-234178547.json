{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/234178547", "html_url": "https://github.com/tensorflow/tensorflow/issues/3397#issuecomment-234178547", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3397", "id": 234178547, "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDE3ODU0Nw==", "user": {"login": "osdf", "id": 193341, "node_id": "MDQ6VXNlcjE5MzM0MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/193341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/osdf", "html_url": "https://github.com/osdf", "followers_url": "https://api.github.com/users/osdf/followers", "following_url": "https://api.github.com/users/osdf/following{/other_user}", "gists_url": "https://api.github.com/users/osdf/gists{/gist_id}", "starred_url": "https://api.github.com/users/osdf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/osdf/subscriptions", "organizations_url": "https://api.github.com/users/osdf/orgs", "repos_url": "https://api.github.com/users/osdf/repos", "events_url": "https://api.github.com/users/osdf/events{/privacy}", "received_events_url": "https://api.github.com/users/osdf/received_events", "type": "User", "site_admin": false}, "created_at": "2016-07-21T07:31:26Z", "updated_at": "2016-07-21T07:31:26Z", "author_association": "NONE", "body_html": "<p>Thank you for the replies. Out of curiosity, would the performance hit of going down to cpu and up again be negligible? The <code>tf.nn.moments</code> is used in a BatchNorm layer in this case, so with ResNets, many of this transfers would happen. Or is using <code>None</code> in the batchsize itself having already such a negative effect (e.g. because some optimizations can't be realized offline) that this copying does not add that much overhead?</p>", "body_text": "Thank you for the replies. Out of curiosity, would the performance hit of going down to cpu and up again be negligible? The tf.nn.moments is used in a BatchNorm layer in this case, so with ResNets, many of this transfers would happen. Or is using None in the batchsize itself having already such a negative effect (e.g. because some optimizations can't be realized offline) that this copying does not add that much overhead?", "body": "Thank you for the replies. Out of curiosity, would the performance hit of going down to cpu and up again be negligible? The `tf.nn.moments` is used in a BatchNorm layer in this case, so with ResNets, many of this transfers would happen. Or is using `None` in the batchsize itself having already such a negative effect (e.g. because some optimizations can't be realized offline) that this copying does not add that much overhead?\n"}