{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10792", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10792/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10792/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10792/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10792", "id": 236639050, "node_id": "MDU6SXNzdWUyMzY2MzkwNTA=", "number": 10792, "title": "Enable sparse_matmul(a,b) when a and b are sparse, conformable", "user": {"login": "buddha314", "id": 630441, "node_id": "MDQ6VXNlcjYzMDQ0MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/630441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/buddha314", "html_url": "https://github.com/buddha314", "followers_url": "https://api.github.com/users/buddha314/followers", "following_url": "https://api.github.com/users/buddha314/following{/other_user}", "gists_url": "https://api.github.com/users/buddha314/gists{/gist_id}", "starred_url": "https://api.github.com/users/buddha314/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/buddha314/subscriptions", "organizations_url": "https://api.github.com/users/buddha314/orgs", "repos_url": "https://api.github.com/users/buddha314/repos", "events_url": "https://api.github.com/users/buddha314/events{/privacy}", "received_events_url": "https://api.github.com/users/buddha314/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-17T04:55:03Z", "updated_at": "2017-06-17T19:45:30Z", "closed_at": "2017-06-17T19:45:30Z", "author_association": "NONE", "body_html": "<p>Current tf.sparse_matmul(a,b) requires both a and b to be dense, apparently.</p>\n<pre><code>n = 500000\nk = 5000\nwith tf.Session() as sess:\n    rep = 1.0\n    sparse1 = tf.SparseTensor(indices=list(xys),values=np.repeat(rep,k),dense_shape=[n,n])\n    sparse2 = tf.SparseTensor(indices=list(xys),values=np.repeat(rep,k),dense_shape=[n,n])\n    sparse1 = tf.cast(sparse1, tf.float32)\n    sparse2 = tf.cast(sparse2, tf.float32)\n\n    sq = tf.sparse_matmul(\n            tf.sparse_tensor_to_dense(sparse1, 0.0)\n            , tf.sparse_tensor_to_dense(sparse2, 0.0)\n            , a_is_sparse=True\n            , b_is_sparse=True\n)\n</code></pre>\n<p>The cast of <code>sparse_tensor_to_dense()</code> seem inappropriate.  Please enable</p>\n<pre><code>n = 500000\nk = 5000\nwith tf.Session() as sess:\n    rep = 1.0\n    sparse1 = tf.SparseTensor(indices=list(xys),values=np.repeat(rep,k),dense_shape=[n,n])\n    sparse2 = tf.SparseTensor(indices=list(xys),values=np.repeat(rep,k),dense_shape=[n,n])\n    sparse1 = tf.cast(sparse1, tf.float32)\n    sparse2 = tf.cast(sparse2, tf.float32)\n\n    sq = tf.sparse_matmul(\n            sparse1\n            , sparse2\n            , a_is_sparse=True\n            , b_is_sparse=True\n)\n</code></pre>", "body_text": "Current tf.sparse_matmul(a,b) requires both a and b to be dense, apparently.\nn = 500000\nk = 5000\nwith tf.Session() as sess:\n    rep = 1.0\n    sparse1 = tf.SparseTensor(indices=list(xys),values=np.repeat(rep,k),dense_shape=[n,n])\n    sparse2 = tf.SparseTensor(indices=list(xys),values=np.repeat(rep,k),dense_shape=[n,n])\n    sparse1 = tf.cast(sparse1, tf.float32)\n    sparse2 = tf.cast(sparse2, tf.float32)\n\n    sq = tf.sparse_matmul(\n            tf.sparse_tensor_to_dense(sparse1, 0.0)\n            , tf.sparse_tensor_to_dense(sparse2, 0.0)\n            , a_is_sparse=True\n            , b_is_sparse=True\n)\n\nThe cast of sparse_tensor_to_dense() seem inappropriate.  Please enable\nn = 500000\nk = 5000\nwith tf.Session() as sess:\n    rep = 1.0\n    sparse1 = tf.SparseTensor(indices=list(xys),values=np.repeat(rep,k),dense_shape=[n,n])\n    sparse2 = tf.SparseTensor(indices=list(xys),values=np.repeat(rep,k),dense_shape=[n,n])\n    sparse1 = tf.cast(sparse1, tf.float32)\n    sparse2 = tf.cast(sparse2, tf.float32)\n\n    sq = tf.sparse_matmul(\n            sparse1\n            , sparse2\n            , a_is_sparse=True\n            , b_is_sparse=True\n)", "body": "Current tf.sparse_matmul(a,b) requires both a and b to be dense, apparently.\r\n\r\n```\r\nn = 500000\r\nk = 5000\r\nwith tf.Session() as sess:\r\n    rep = 1.0\r\n    sparse1 = tf.SparseTensor(indices=list(xys),values=np.repeat(rep,k),dense_shape=[n,n])\r\n    sparse2 = tf.SparseTensor(indices=list(xys),values=np.repeat(rep,k),dense_shape=[n,n])\r\n    sparse1 = tf.cast(sparse1, tf.float32)\r\n    sparse2 = tf.cast(sparse2, tf.float32)\r\n\r\n    sq = tf.sparse_matmul(\r\n            tf.sparse_tensor_to_dense(sparse1, 0.0)\r\n            , tf.sparse_tensor_to_dense(sparse2, 0.0)\r\n            , a_is_sparse=True\r\n            , b_is_sparse=True\r\n)\r\n```\r\n\r\nThe cast of `sparse_tensor_to_dense()` seem inappropriate.  Please enable\r\n\r\n```\r\nn = 500000\r\nk = 5000\r\nwith tf.Session() as sess:\r\n    rep = 1.0\r\n    sparse1 = tf.SparseTensor(indices=list(xys),values=np.repeat(rep,k),dense_shape=[n,n])\r\n    sparse2 = tf.SparseTensor(indices=list(xys),values=np.repeat(rep,k),dense_shape=[n,n])\r\n    sparse1 = tf.cast(sparse1, tf.float32)\r\n    sparse2 = tf.cast(sparse2, tf.float32)\r\n\r\n    sq = tf.sparse_matmul(\r\n            sparse1\r\n            , sparse2\r\n            , a_is_sparse=True\r\n            , b_is_sparse=True\r\n)\r\n```"}