{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20995", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20995/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20995/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20995/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20995", "id": 343134737, "node_id": "MDU6SXNzdWUzNDMxMzQ3Mzc=", "number": 20995, "title": "Cannot set random_seed for DNNClassifier", "user": {"login": "AdamPWhite", "id": 40948895, "node_id": "MDQ6VXNlcjQwOTQ4ODk1", "avatar_url": "https://avatars3.githubusercontent.com/u/40948895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdamPWhite", "html_url": "https://github.com/AdamPWhite", "followers_url": "https://api.github.com/users/AdamPWhite/followers", "following_url": "https://api.github.com/users/AdamPWhite/following{/other_user}", "gists_url": "https://api.github.com/users/AdamPWhite/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdamPWhite/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdamPWhite/subscriptions", "organizations_url": "https://api.github.com/users/AdamPWhite/orgs", "repos_url": "https://api.github.com/users/AdamPWhite/repos", "events_url": "https://api.github.com/users/AdamPWhite/events{/privacy}", "received_events_url": "https://api.github.com/users/AdamPWhite/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "tanzhenyu", "id": 15220929, "node_id": "MDQ6VXNlcjE1MjIwOTI5", "avatar_url": "https://avatars3.githubusercontent.com/u/15220929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tanzhenyu", "html_url": "https://github.com/tanzhenyu", "followers_url": "https://api.github.com/users/tanzhenyu/followers", "following_url": "https://api.github.com/users/tanzhenyu/following{/other_user}", "gists_url": "https://api.github.com/users/tanzhenyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/tanzhenyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tanzhenyu/subscriptions", "organizations_url": "https://api.github.com/users/tanzhenyu/orgs", "repos_url": "https://api.github.com/users/tanzhenyu/repos", "events_url": "https://api.github.com/users/tanzhenyu/events{/privacy}", "received_events_url": "https://api.github.com/users/tanzhenyu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tanzhenyu", "id": 15220929, "node_id": "MDQ6VXNlcjE1MjIwOTI5", "avatar_url": "https://avatars3.githubusercontent.com/u/15220929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tanzhenyu", "html_url": "https://github.com/tanzhenyu", "followers_url": "https://api.github.com/users/tanzhenyu/followers", "following_url": "https://api.github.com/users/tanzhenyu/following{/other_user}", "gists_url": "https://api.github.com/users/tanzhenyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/tanzhenyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tanzhenyu/subscriptions", "organizations_url": "https://api.github.com/users/tanzhenyu/orgs", "repos_url": "https://api.github.com/users/tanzhenyu/repos", "events_url": "https://api.github.com/users/tanzhenyu/events{/privacy}", "received_events_url": "https://api.github.com/users/tanzhenyu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2018-07-20T14:43:48Z", "updated_at": "2018-07-25T14:23:31Z", "closed_at": "2018-07-25T11:19:46Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<p>My own code<br>\nWindows 10<br>\nPython 3.6.5<br>\nTensorflow 1.9 (problem also occurs with 1.8)<br>\nNVIDIA GeForce GTX 1050 (approx total memory 6011MB)<br>\nCUDA version 9.0 v9.0.176</p>\n<p>Problem Description<br>\nEach time I run the code below, I get a different 'Loss for final step' when training my model. I have checked that the input data from train_test_split is constant. I have set the value of tf.random_seed, turned off shuffling and set the value of num_threads.<br>\nLooking at INFO, I can see that when training my model, the config file has _tf_random_seed set to 'None'.  There does not appear to be a way of setting this  for tf.estimator.DNNClassifier. The only solution I have found is to 'hack' run_config.py and set random_seed there. Is this a serious flaw with tf.estimator.DNNClassifier or am I missing something?</p>\n<p>from <strong>future</strong> import print_function<br>\nimport numpy as np<br>\nimport pandas as pd<br>\nimport tensorflow as tf<br>\nfrom sklearn.model_selection import train_test_split</p>\n<p>np.random.seed(1)<br>\ntf.set_random_seed(50)</p>\n<p>df = pd.read_csv('diabetes.csv')<br>\nX = df.iloc[:,0:8]<br>\ny = df['Outcome']<br>\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3,<br>\nstratify=None, random_state=1)</p>\n<p>def create_feature_cols():<br>\nreturn [<br>\ntf.feature_column.numeric_column('Pregnancies'),<br>\ntf.feature_column.numeric_column('Glucose'),<br>\ntf.feature_column.numeric_column('BloodPressure'),<br>\ntf.feature_column.numeric_column('SkinThickness'),<br>\ntf.feature_column.numeric_column('Insulin'),<br>\ntf.feature_column.numeric_column('BMI'),<br>\ntf.feature_column.numeric_column('DiabetesPedigreeFunction'),<br>\ntf.feature_column.numeric_column('Age')<br>\n]</p>\n<p>input_func = tf.estimator.inputs.pandas_input_fn(x=X_train,y=y_train,<br>\nbatch_size=10,num_epochs=1000,shuffle=False,num_threads=1)<br>\nmodel  =  tf.estimator.DNNClassifier(hidden_units=[20,20],<br>\nfeature_columns=create_feature_cols(),n_classes=2)<br>\nmodel.config._tf_random_seed=1<br>\ntf.set_random_seed(1)<br>\nmodel.train(input_fn=input_func,steps=1000)</p>\n<p>eval_input_func = tf.estimator.inputs.pandas_input_fn(<br>\nx=X_test,<br>\ny=y_test,<br>\nbatch_size=10,<br>\nnum_epochs=1,<br>\nshuffle=False,<br>\nnum_threads=1)<br>\nresults = model.evaluate(eval_input_func)</p>", "body_text": "System information\nMy own code\nWindows 10\nPython 3.6.5\nTensorflow 1.9 (problem also occurs with 1.8)\nNVIDIA GeForce GTX 1050 (approx total memory 6011MB)\nCUDA version 9.0 v9.0.176\nProblem Description\nEach time I run the code below, I get a different 'Loss for final step' when training my model. I have checked that the input data from train_test_split is constant. I have set the value of tf.random_seed, turned off shuffling and set the value of num_threads.\nLooking at INFO, I can see that when training my model, the config file has _tf_random_seed set to 'None'.  There does not appear to be a way of setting this  for tf.estimator.DNNClassifier. The only solution I have found is to 'hack' run_config.py and set random_seed there. Is this a serious flaw with tf.estimator.DNNClassifier or am I missing something?\nfrom future import print_function\nimport numpy as np\nimport pandas as pd\nimport tensorflow as tf\nfrom sklearn.model_selection import train_test_split\nnp.random.seed(1)\ntf.set_random_seed(50)\ndf = pd.read_csv('diabetes.csv')\nX = df.iloc[:,0:8]\ny = df['Outcome']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3,\nstratify=None, random_state=1)\ndef create_feature_cols():\nreturn [\ntf.feature_column.numeric_column('Pregnancies'),\ntf.feature_column.numeric_column('Glucose'),\ntf.feature_column.numeric_column('BloodPressure'),\ntf.feature_column.numeric_column('SkinThickness'),\ntf.feature_column.numeric_column('Insulin'),\ntf.feature_column.numeric_column('BMI'),\ntf.feature_column.numeric_column('DiabetesPedigreeFunction'),\ntf.feature_column.numeric_column('Age')\n]\ninput_func = tf.estimator.inputs.pandas_input_fn(x=X_train,y=y_train,\nbatch_size=10,num_epochs=1000,shuffle=False,num_threads=1)\nmodel  =  tf.estimator.DNNClassifier(hidden_units=[20,20],\nfeature_columns=create_feature_cols(),n_classes=2)\nmodel.config._tf_random_seed=1\ntf.set_random_seed(1)\nmodel.train(input_fn=input_func,steps=1000)\neval_input_func = tf.estimator.inputs.pandas_input_fn(\nx=X_test,\ny=y_test,\nbatch_size=10,\nnum_epochs=1,\nshuffle=False,\nnum_threads=1)\nresults = model.evaluate(eval_input_func)", "body": "### System information\r\nMy own code \r\nWindows 10\r\nPython 3.6.5\r\nTensorflow 1.9 (problem also occurs with 1.8)\r\nNVIDIA GeForce GTX 1050 (approx total memory 6011MB)\r\nCUDA version 9.0 v9.0.176\r\n\r\nProblem Description\r\nEach time I run the code below, I get a different 'Loss for final step' when training my model. I have checked that the input data from train_test_split is constant. I have set the value of tf.random_seed, turned off shuffling and set the value of num_threads.  \r\nLooking at INFO, I can see that when training my model, the config file has _tf_random_seed set to 'None'.  There does not appear to be a way of setting this  for tf.estimator.DNNClassifier. The only solution I have found is to 'hack' run_config.py and set random_seed there. Is this a serious flaw with tf.estimator.DNNClassifier or am I missing something?\r\n\r\nfrom __future__ import print_function\r\nimport numpy as np\r\nimport pandas as pd\r\nimport tensorflow as tf\r\nfrom sklearn.model_selection import train_test_split\r\n\r\nnp.random.seed(1)\r\ntf.set_random_seed(50)\r\n\r\ndf = pd.read_csv('diabetes.csv')\r\nX = df.iloc[:,0:8]\r\ny = df['Outcome']\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3,\r\n                                   stratify=None, random_state=1)\r\n\r\ndef create_feature_cols():\r\n  return [\r\n    tf.feature_column.numeric_column('Pregnancies'),\r\n    tf.feature_column.numeric_column('Glucose'),\r\n    tf.feature_column.numeric_column('BloodPressure'),\r\n    tf.feature_column.numeric_column('SkinThickness'),\r\n    tf.feature_column.numeric_column('Insulin'),\r\n    tf.feature_column.numeric_column('BMI'),\r\n    tf.feature_column.numeric_column('DiabetesPedigreeFunction'),\r\n    tf.feature_column.numeric_column('Age')\r\n  ]\r\n\r\n\r\ninput_func = tf.estimator.inputs.pandas_input_fn(x=X_train,y=y_train,\r\n             batch_size=10,num_epochs=1000,shuffle=False,num_threads=1)\r\nmodel  =  tf.estimator.DNNClassifier(hidden_units=[20,20],\r\n          feature_columns=create_feature_cols(),n_classes=2)\r\nmodel.config._tf_random_seed=1\r\ntf.set_random_seed(1)\r\nmodel.train(input_fn=input_func,steps=1000)\r\n\r\neval_input_func = tf.estimator.inputs.pandas_input_fn(\r\n      x=X_test,\r\n      y=y_test,\r\n      batch_size=10,\r\n      num_epochs=1,\r\n      shuffle=False,\r\n      num_threads=1)\r\nresults = model.evaluate(eval_input_func)"}