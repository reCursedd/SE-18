{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/407592022", "html_url": "https://github.com/tensorflow/tensorflow/issues/20995#issuecomment-407592022", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20995", "id": 407592022, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzU5MjAyMg==", "user": {"login": "tanzhenyu", "id": 15220929, "node_id": "MDQ6VXNlcjE1MjIwOTI5", "avatar_url": "https://avatars3.githubusercontent.com/u/15220929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tanzhenyu", "html_url": "https://github.com/tanzhenyu", "followers_url": "https://api.github.com/users/tanzhenyu/followers", "following_url": "https://api.github.com/users/tanzhenyu/following{/other_user}", "gists_url": "https://api.github.com/users/tanzhenyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/tanzhenyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tanzhenyu/subscriptions", "organizations_url": "https://api.github.com/users/tanzhenyu/orgs", "repos_url": "https://api.github.com/users/tanzhenyu/repos", "events_url": "https://api.github.com/users/tanzhenyu/events{/privacy}", "received_events_url": "https://api.github.com/users/tanzhenyu/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-25T00:14:07Z", "updated_at": "2018-07-25T00:14:07Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=40948895\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/AdamPWhite\">@AdamPWhite</a> I don't have your dataset so I can't test for you. But below please find my code snippet which works fine:</p>\n<p>import tensorflow as tf<br>\ntf.reset_default_graph()<br>\nconfig = tf.estimator.RunConfig(tf_random_seed=234)</p>\n<p>input1_col = tf.feature_column.numeric_column('input1')<br>\ninput2_col = tf.feature_column.numeric_column('input2')<br>\nmodel = tf.estimator.DNNClassifier(hidden_units=[20,20],<br>\nfeature_columns=[input1_col, input2_col],n_classes=2,config=config)</p>\n<p>import numpy as np<br>\ninput1 = np.random.random(size=(100, 1))<br>\ninput2 = np.random.random(size=(100, 1))<br>\ntarget = np.where(np.sum(input1 + input2, axis = 1) &gt; 0, 1, 0)<br>\ndef train_input_fn():<br>\nreturn ({'input1': input1, 'input2': input2}, target)</p>\n<p>model.train(input_fn=train_input_fn, steps = 10)</p>\n<h1>result:</h1>\n<p>INFO:tensorflow:Calling model_fn.<br>\nINFO:tensorflow:Done calling model_fn.<br>\nINFO:tensorflow:Create CheckpointSaverHook.<br>\nINFO:tensorflow:Graph was finalized.<br>\nINFO:tensorflow:Running local_init_op.<br>\nINFO:tensorflow:Done running local_init_op.<br>\nINFO:tensorflow:Saving checkpoints for 0 into /tmp/tmp70021xj7/model.ckpt.<br>\nINFO:tensorflow:loss = 61.109077, step = 1<br>\nINFO:tensorflow:Saving checkpoints for 10 into /tmp/tmp70021xj7/model.ckpt.<br>\nINFO:tensorflow:Loss for final step: 1.6393224.<br>\n&lt;tensorflow.python.estimator.canned.dnn.DNNClassifier at 0x7f0fb18c6ef0&gt;</p>", "body_text": "@AdamPWhite I don't have your dataset so I can't test for you. But below please find my code snippet which works fine:\nimport tensorflow as tf\ntf.reset_default_graph()\nconfig = tf.estimator.RunConfig(tf_random_seed=234)\ninput1_col = tf.feature_column.numeric_column('input1')\ninput2_col = tf.feature_column.numeric_column('input2')\nmodel = tf.estimator.DNNClassifier(hidden_units=[20,20],\nfeature_columns=[input1_col, input2_col],n_classes=2,config=config)\nimport numpy as np\ninput1 = np.random.random(size=(100, 1))\ninput2 = np.random.random(size=(100, 1))\ntarget = np.where(np.sum(input1 + input2, axis = 1) > 0, 1, 0)\ndef train_input_fn():\nreturn ({'input1': input1, 'input2': input2}, target)\nmodel.train(input_fn=train_input_fn, steps = 10)\nresult:\nINFO:tensorflow:Calling model_fn.\nINFO:tensorflow:Done calling model_fn.\nINFO:tensorflow:Create CheckpointSaverHook.\nINFO:tensorflow:Graph was finalized.\nINFO:tensorflow:Running local_init_op.\nINFO:tensorflow:Done running local_init_op.\nINFO:tensorflow:Saving checkpoints for 0 into /tmp/tmp70021xj7/model.ckpt.\nINFO:tensorflow:loss = 61.109077, step = 1\nINFO:tensorflow:Saving checkpoints for 10 into /tmp/tmp70021xj7/model.ckpt.\nINFO:tensorflow:Loss for final step: 1.6393224.\n<tensorflow.python.estimator.canned.dnn.DNNClassifier at 0x7f0fb18c6ef0>", "body": "@AdamPWhite I don't have your dataset so I can't test for you. But below please find my code snippet which works fine:\r\n\r\nimport tensorflow as tf\r\ntf.reset_default_graph()\r\nconfig = tf.estimator.RunConfig(tf_random_seed=234)\r\n\r\ninput1_col = tf.feature_column.numeric_column('input1')\r\ninput2_col = tf.feature_column.numeric_column('input2')\r\nmodel = tf.estimator.DNNClassifier(hidden_units=[20,20],\r\nfeature_columns=[input1_col, input2_col],n_classes=2,config=config)\r\n\r\nimport numpy as np\r\ninput1 = np.random.random(size=(100, 1))\r\ninput2 = np.random.random(size=(100, 1))\r\ntarget = np.where(np.sum(input1 + input2, axis = 1) > 0, 1, 0)\r\ndef train_input_fn():\r\n  return ({'input1': input1, 'input2': input2}, target)\r\n\r\nmodel.train(input_fn=train_input_fn, steps = 10)\r\n\r\n# result:\r\nINFO:tensorflow:Calling model_fn.\r\nINFO:tensorflow:Done calling model_fn.\r\nINFO:tensorflow:Create CheckpointSaverHook.\r\nINFO:tensorflow:Graph was finalized.\r\nINFO:tensorflow:Running local_init_op.\r\nINFO:tensorflow:Done running local_init_op.\r\nINFO:tensorflow:Saving checkpoints for 0 into /tmp/tmp70021xj7/model.ckpt.\r\nINFO:tensorflow:loss = 61.109077, step = 1\r\nINFO:tensorflow:Saving checkpoints for 10 into /tmp/tmp70021xj7/model.ckpt.\r\nINFO:tensorflow:Loss for final step: 1.6393224.\r\n<tensorflow.python.estimator.canned.dnn.DNNClassifier at 0x7f0fb18c6ef0>"}