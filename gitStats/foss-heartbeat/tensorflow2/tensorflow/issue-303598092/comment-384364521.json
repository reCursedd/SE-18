{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/384364521", "html_url": "https://github.com/tensorflow/tensorflow/issues/17568#issuecomment-384364521", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17568", "id": 384364521, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDM2NDUyMQ==", "user": {"login": "chuanyu", "id": 1147435, "node_id": "MDQ6VXNlcjExNDc0MzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1147435?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chuanyu", "html_url": "https://github.com/chuanyu", "followers_url": "https://api.github.com/users/chuanyu/followers", "following_url": "https://api.github.com/users/chuanyu/following{/other_user}", "gists_url": "https://api.github.com/users/chuanyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/chuanyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chuanyu/subscriptions", "organizations_url": "https://api.github.com/users/chuanyu/orgs", "repos_url": "https://api.github.com/users/chuanyu/repos", "events_url": "https://api.github.com/users/chuanyu/events{/privacy}", "received_events_url": "https://api.github.com/users/chuanyu/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-25T17:15:19Z", "updated_at": "2018-04-25T17:15:19Z", "author_association": "NONE", "body_html": "<p>It works as a workaround, but it's not very nice as it requires figuring out which nodes to wrap, and then wrapping them with <code>tf.identity</code>. This is especially difficult when working with already exported models. Intuitively I would expect <code>control_dependencies</code> to behave as if added dependencies to Tensors, not Ops. Are there plans to change this behaviour in the future?</p>", "body_text": "It works as a workaround, but it's not very nice as it requires figuring out which nodes to wrap, and then wrapping them with tf.identity. This is especially difficult when working with already exported models. Intuitively I would expect control_dependencies to behave as if added dependencies to Tensors, not Ops. Are there plans to change this behaviour in the future?", "body": "It works as a workaround, but it's not very nice as it requires figuring out which nodes to wrap, and then wrapping them with `tf.identity`. This is especially difficult when working with already exported models. Intuitively I would expect `control_dependencies` to behave as if added dependencies to Tensors, not Ops. Are there plans to change this behaviour in the future?"}