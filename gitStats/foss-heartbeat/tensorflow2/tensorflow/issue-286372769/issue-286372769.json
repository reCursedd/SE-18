{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15886", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15886/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15886/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15886/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15886", "id": 286372769, "node_id": "MDU6SXNzdWUyODYzNzI3Njk=", "number": 15886, "title": "Successful Local Build of Tensorflow r1.5 GPU for Python 3.6, CUDA Toolkit 9.0, and CUDNN 7.0 on Windows 7 X64 SP1 using CMake in VS 2015 Update 3", "user": {"login": "ghost", "id": 10137, "node_id": "MDQ6VXNlcjEwMTM3", "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghost", "html_url": "https://github.com/ghost", "followers_url": "https://api.github.com/users/ghost/followers", "following_url": "https://api.github.com/users/ghost/following{/other_user}", "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghost/subscriptions", "organizations_url": "https://api.github.com/users/ghost/orgs", "repos_url": "https://api.github.com/users/ghost/repos", "events_url": "https://api.github.com/users/ghost/events{/privacy}", "received_events_url": "https://api.github.com/users/ghost/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-01-05T18:50:07Z", "updated_at": "2018-02-02T18:55:22Z", "closed_at": "2018-01-31T00:41:51Z", "author_association": "NONE", "body_html": "<p>I have spent a week trying to compile Tensorflow from source using Bazel on Windows with no success. In 2 days, I was able to compile it using CMake following the command output from a successful build I saw on Jenkins on 02-Jan-2018.</p>\n<p>I wanted to provide details to spare others the pain of development in the future. The whole build took 6 hours to compile on my system.</p>\n<p>I have an older system, which is why I was doing this. You will need to path variables in the attached scripts to work with the path variables for your system. For the most part, however, the scripts replicate what is mentioned on github here:</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/cmake\">https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/cmake</a></p>\n<h3>System information</h3>\n<ul>\n<li>\n<p><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:  Yes</p>\n</li>\n<li>\n<p><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Windows 7 x64 SP1</p>\n</li>\n<li>\n<p><strong>TensorFlow installed from (source or binary)</strong>: Source</p>\n</li>\n<li>\n<p><strong>TensorFlow version (use command below)</strong>: r1.5.0-rc0</p>\n</li>\n<li>\n<p><strong>Python version</strong>: 3.6.4</p>\n</li>\n<li>\n<p><strong>CMake version (if compiling from source)</strong>: CMake 3.10.1</p>\n</li>\n<li>\n<p><strong>GCC/Compiler version (if compiling from source)</strong>: cl.exe (Visual Studio 2015 Update 3)</p>\n</li>\n<li>\n<p><strong>CUDA/cuDNN version</strong>: 9.0.176 / 7.0.4</p>\n</li>\n<li>\n<p><strong>GPU model and memory</strong>: NVIDIA Quadro K4000 P8, Driver 385.54, 3072 MiB</p>\n</li>\n<li>\n<p><strong>SWIG Version</strong>: swigwin-3.0.12</p>\n</li>\n<li>\n<p><strong>Git Version</strong>: Git for Windows 2.15.1 64-bit</p>\n</li>\n<li>\n<p><strong>MSBuild Version</strong>: 14.0.25420.1</p>\n</li>\n<li>\n<p><strong>CPU</strong>: Intel Xeon E5-2620 v2</p>\n</li>\n<li>\n<p><strong>Exact command to reproduce</strong>:</p>\n</li>\n</ul>\n<p>After installing the above, I wrote a batch script to set and clean up system environment variables (please see attached script). Due to the 1024 character limit for PATH on windows, I manually edited the PATH in the registry editor to overcome this limitation.</p>\n<p>I then wrote another script that set local variables, cloned tensorflow source and checked out version 1.5, then prepared the source with cmake and compiled with msbuild.</p>\n<p>The final output was a python wheel, which I pip installed. I successfully ran the standard hello world script without error, i.e.</p>\n<pre><code>import tensorflow as tf\nhello = tf.constant('Hello')\nsess = tf.Session()\nsess.run(hello)\n</code></pre>\n<p>as well as a small AlexNet network without issues.</p>\n<p>I hope this helps future users and further emphasizes that it is possible to build Tensorflow 1.5 for GPU on Windows 7. I have not compiled this with AVX support, but that could be a next improvement (I'm not sure if this is possible. I only know MKL support is limited to Linux at the moment. However, Windows binaries for MKL and MPI can be downloaded from the Intel website).</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/files/1607554/Scripts.zip\">Scripts.zip</a></p>", "body_text": "I have spent a week trying to compile Tensorflow from source using Bazel on Windows with no success. In 2 days, I was able to compile it using CMake following the command output from a successful build I saw on Jenkins on 02-Jan-2018.\nI wanted to provide details to spare others the pain of development in the future. The whole build took 6 hours to compile on my system.\nI have an older system, which is why I was doing this. You will need to path variables in the attached scripts to work with the path variables for your system. For the most part, however, the scripts replicate what is mentioned on github here:\nhttps://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/cmake\nSystem information\n\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):  Yes\n\n\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 7 x64 SP1\n\n\nTensorFlow installed from (source or binary): Source\n\n\nTensorFlow version (use command below): r1.5.0-rc0\n\n\nPython version: 3.6.4\n\n\nCMake version (if compiling from source): CMake 3.10.1\n\n\nGCC/Compiler version (if compiling from source): cl.exe (Visual Studio 2015 Update 3)\n\n\nCUDA/cuDNN version: 9.0.176 / 7.0.4\n\n\nGPU model and memory: NVIDIA Quadro K4000 P8, Driver 385.54, 3072 MiB\n\n\nSWIG Version: swigwin-3.0.12\n\n\nGit Version: Git for Windows 2.15.1 64-bit\n\n\nMSBuild Version: 14.0.25420.1\n\n\nCPU: Intel Xeon E5-2620 v2\n\n\nExact command to reproduce:\n\n\nAfter installing the above, I wrote a batch script to set and clean up system environment variables (please see attached script). Due to the 1024 character limit for PATH on windows, I manually edited the PATH in the registry editor to overcome this limitation.\nI then wrote another script that set local variables, cloned tensorflow source and checked out version 1.5, then prepared the source with cmake and compiled with msbuild.\nThe final output was a python wheel, which I pip installed. I successfully ran the standard hello world script without error, i.e.\nimport tensorflow as tf\nhello = tf.constant('Hello')\nsess = tf.Session()\nsess.run(hello)\n\nas well as a small AlexNet network without issues.\nI hope this helps future users and further emphasizes that it is possible to build Tensorflow 1.5 for GPU on Windows 7. I have not compiled this with AVX support, but that could be a next improvement (I'm not sure if this is possible. I only know MKL support is limited to Linux at the moment. However, Windows binaries for MKL and MPI can be downloaded from the Intel website).\nScripts.zip", "body": "I have spent a week trying to compile Tensorflow from source using Bazel on Windows with no success. In 2 days, I was able to compile it using CMake following the command output from a successful build I saw on Jenkins on 02-Jan-2018.\r\n\r\nI wanted to provide details to spare others the pain of development in the future. The whole build took 6 hours to compile on my system.\r\n\r\nI have an older system, which is why I was doing this. You will need to path variables in the attached scripts to work with the path variables for your system. For the most part, however, the scripts replicate what is mentioned on github here:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/cmake\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:  Yes\r\n\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 7 x64 SP1\r\n- **TensorFlow installed from (source or binary)**: Source\r\n- **TensorFlow version (use command below)**: r1.5.0-rc0\r\n- **Python version**: 3.6.4\r\n- **CMake version (if compiling from source)**: CMake 3.10.1\r\n- **GCC/Compiler version (if compiling from source)**: cl.exe (Visual Studio 2015 Update 3)\r\n- **CUDA/cuDNN version**: 9.0.176 / 7.0.4\r\n- **GPU model and memory**: NVIDIA Quadro K4000 P8, Driver 385.54, 3072 MiB\r\n- **SWIG Version**: swigwin-3.0.12\r\n- **Git Version**: Git for Windows 2.15.1 64-bit\r\n- **MSBuild Version**: 14.0.25420.1\r\n- **CPU**: Intel Xeon E5-2620 v2\r\n\r\n- **Exact command to reproduce**:\r\n\r\nAfter installing the above, I wrote a batch script to set and clean up system environment variables (please see attached script). Due to the 1024 character limit for PATH on windows, I manually edited the PATH in the registry editor to overcome this limitation.\r\n\r\nI then wrote another script that set local variables, cloned tensorflow source and checked out version 1.5, then prepared the source with cmake and compiled with msbuild.\r\n\r\nThe final output was a python wheel, which I pip installed. I successfully ran the standard hello world script without error, i.e.\r\n\r\n```\r\nimport tensorflow as tf\r\nhello = tf.constant('Hello')\r\nsess = tf.Session()\r\nsess.run(hello)\r\n```\r\n\r\nas well as a small AlexNet network without issues.\r\n\r\nI hope this helps future users and further emphasizes that it is possible to build Tensorflow 1.5 for GPU on Windows 7. I have not compiled this with AVX support, but that could be a next improvement (I'm not sure if this is possible. I only know MKL support is limited to Linux at the moment. However, Windows binaries for MKL and MPI can be downloaded from the Intel website).\r\n\r\n\r\n[Scripts.zip](https://github.com/tensorflow/tensorflow/files/1607554/Scripts.zip)\r\n\r\n\r\n\r\n"}