{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3311", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3311/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3311/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3311/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3311", "id": 165545780, "node_id": "MDU6SXNzdWUxNjU1NDU3ODA=", "number": 3311, "title": "Bug with tensorflow.random_normal() when using placeholders and last dimension is 1 ", "user": {"login": "isabeaups", "id": 12017880, "node_id": "MDQ6VXNlcjEyMDE3ODgw", "avatar_url": "https://avatars2.githubusercontent.com/u/12017880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/isabeaups", "html_url": "https://github.com/isabeaups", "followers_url": "https://api.github.com/users/isabeaups/followers", "following_url": "https://api.github.com/users/isabeaups/following{/other_user}", "gists_url": "https://api.github.com/users/isabeaups/gists{/gist_id}", "starred_url": "https://api.github.com/users/isabeaups/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/isabeaups/subscriptions", "organizations_url": "https://api.github.com/users/isabeaups/orgs", "repos_url": "https://api.github.com/users/isabeaups/repos", "events_url": "https://api.github.com/users/isabeaups/events{/privacy}", "received_events_url": "https://api.github.com/users/isabeaups/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "cwhipkey", "id": 17578177, "node_id": "MDQ6VXNlcjE3NTc4MTc3", "avatar_url": "https://avatars0.githubusercontent.com/u/17578177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cwhipkey", "html_url": "https://github.com/cwhipkey", "followers_url": "https://api.github.com/users/cwhipkey/followers", "following_url": "https://api.github.com/users/cwhipkey/following{/other_user}", "gists_url": "https://api.github.com/users/cwhipkey/gists{/gist_id}", "starred_url": "https://api.github.com/users/cwhipkey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cwhipkey/subscriptions", "organizations_url": "https://api.github.com/users/cwhipkey/orgs", "repos_url": "https://api.github.com/users/cwhipkey/repos", "events_url": "https://api.github.com/users/cwhipkey/events{/privacy}", "received_events_url": "https://api.github.com/users/cwhipkey/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cwhipkey", "id": 17578177, "node_id": "MDQ6VXNlcjE3NTc4MTc3", "avatar_url": "https://avatars0.githubusercontent.com/u/17578177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cwhipkey", "html_url": "https://github.com/cwhipkey", "followers_url": "https://api.github.com/users/cwhipkey/followers", "following_url": "https://api.github.com/users/cwhipkey/following{/other_user}", "gists_url": "https://api.github.com/users/cwhipkey/gists{/gist_id}", "starred_url": "https://api.github.com/users/cwhipkey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cwhipkey/subscriptions", "organizations_url": "https://api.github.com/users/cwhipkey/orgs", "repos_url": "https://api.github.com/users/cwhipkey/repos", "events_url": "https://api.github.com/users/cwhipkey/events{/privacy}", "received_events_url": "https://api.github.com/users/cwhipkey/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2016-07-14T12:04:01Z", "updated_at": "2017-12-21T03:22:52Z", "closed_at": "2017-12-21T03:22:51Z", "author_association": "NONE", "body_html": "<p>tensorflow.shape(x) gives ? for the last dimension when the last dimension is 1.<br>\nThis is a problem if you have layers or inputs which are only one dimensional.</p>\n<h3>Environment info</h3>\n<p>Operating System: OSX<br>\nTensorflow 0.9.0</p>\n<p>Installed version of CUDA and cuDNN:<br>\nproblem not related to CUDA or cuDNN</p>\n<p><strong>Edit:</strong> thanks to <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=17578177\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/cwhipkey\">@cwhipkey</a> I noticed I mischaracterized the problem, edited version below.</p>\n<h3>Steps to reproduce</h3>\n<p><code>import tensorflow as tf</code><br>\n<code>n=1</code><br>\n<code>x = tf.placeholder(tf.float32, shape=(None, None, n), name='x')</code><br>\n<code>shp = tf.shape(x)</code></p>\n<p>shp is (?,?,n)  as it should be.</p>\n<p>But then if I use shp to create a random_normal tensor of the same shape, it will fail if n==1.</p>\n<p><code>noise = tf.random_normal(shp,mean=0,stddev=1)</code></p>\n<p><code>print(noise.get_shape(noise))</code><br>\nhas output (?,?,n) if n&gt;1 but output (?,?,?) if n==1.</p>\n<p>This is a problem, because if I then do<br>\n<code>xtilde= x+noise</code></p>\n<p>this will give me an error if n==1.<br>\nSpecifically in my case:</p>\n<blockquote>\n<p>File \"/anaconda/envs/hrnn/lib/python2.7/site-packages/tensorflow/python/ops/rnn.py\", line 630, in _dynamic_rnn_loop<br>\n\"Input size (depth of inputs) must be accessible via shape inference, \"<br>\nValueError: Input size (depth of inputs) must be accessible via shape inference, but saw value None.</p>\n</blockquote>\n<p>when I feed this xtilde to dynamic_rnn<br>\n<code>rnn.dynamic_rnn(rnn, xtilde, initial_state=self.hhat_combined_init, scope='RNN')</code><br>\nI get no such error if n&gt;1.</p>", "body_text": "tensorflow.shape(x) gives ? for the last dimension when the last dimension is 1.\nThis is a problem if you have layers or inputs which are only one dimensional.\nEnvironment info\nOperating System: OSX\nTensorflow 0.9.0\nInstalled version of CUDA and cuDNN:\nproblem not related to CUDA or cuDNN\nEdit: thanks to @cwhipkey I noticed I mischaracterized the problem, edited version below.\nSteps to reproduce\nimport tensorflow as tf\nn=1\nx = tf.placeholder(tf.float32, shape=(None, None, n), name='x')\nshp = tf.shape(x)\nshp is (?,?,n)  as it should be.\nBut then if I use shp to create a random_normal tensor of the same shape, it will fail if n==1.\nnoise = tf.random_normal(shp,mean=0,stddev=1)\nprint(noise.get_shape(noise))\nhas output (?,?,n) if n>1 but output (?,?,?) if n==1.\nThis is a problem, because if I then do\nxtilde= x+noise\nthis will give me an error if n==1.\nSpecifically in my case:\n\nFile \"/anaconda/envs/hrnn/lib/python2.7/site-packages/tensorflow/python/ops/rnn.py\", line 630, in _dynamic_rnn_loop\n\"Input size (depth of inputs) must be accessible via shape inference, \"\nValueError: Input size (depth of inputs) must be accessible via shape inference, but saw value None.\n\nwhen I feed this xtilde to dynamic_rnn\nrnn.dynamic_rnn(rnn, xtilde, initial_state=self.hhat_combined_init, scope='RNN')\nI get no such error if n>1.", "body": "tensorflow.shape(x) gives ? for the last dimension when the last dimension is 1.\nThis is a problem if you have layers or inputs which are only one dimensional. \n### Environment info\n\nOperating System: OSX\nTensorflow 0.9.0\n\nInstalled version of CUDA and cuDNN: \nproblem not related to CUDA or cuDNN\n\n**Edit:** thanks to @cwhipkey I noticed I mischaracterized the problem, edited version below.\n### Steps to reproduce\n\n`import tensorflow as tf`\n`n=1`\n`x = tf.placeholder(tf.float32, shape=(None, None, n), name='x')`\n`shp = tf.shape(x)`\n\nshp is (?,?,n)  as it should be.\n\nBut then if I use shp to create a random_normal tensor of the same shape, it will fail if n==1.\n\n`noise = tf.random_normal(shp,mean=0,stddev=1)`\n\n`print(noise.get_shape(noise))`\nhas output (?,?,n) if n>1 but output (?,?,?) if n==1.\n\nThis is a problem, because if I then do \n`xtilde= x+noise`\n\nthis will give me an error if n==1.\nSpecifically in my case:\n\n>   File \"/anaconda/envs/hrnn/lib/python2.7/site-packages/tensorflow/python/ops/rnn.py\", line 630, in _dynamic_rnn_loop\n>     \"Input size (depth of inputs) must be accessible via shape inference, \"\n> ValueError: Input size (depth of inputs) must be accessible via shape inference, but saw value None.\n\nwhen I feed this xtilde to dynamic_rnn\n`rnn.dynamic_rnn(rnn, xtilde,\n                                                       initial_state=self.hhat_combined_init,\n                                                       scope='RNN')`\nI get no such error if n>1.\n"}