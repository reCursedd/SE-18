{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20158", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20158/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20158/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20158/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20158", "id": 334234243, "node_id": "MDU6SXNzdWUzMzQyMzQyNDM=", "number": 20158, "title": "Feature Request: Initialize tables when passing a Dataset as input to a Keras model", "user": {"login": "dillondaudert", "id": 8727185, "node_id": "MDQ6VXNlcjg3MjcxODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8727185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dillondaudert", "html_url": "https://github.com/dillondaudert", "followers_url": "https://api.github.com/users/dillondaudert/followers", "following_url": "https://api.github.com/users/dillondaudert/following{/other_user}", "gists_url": "https://api.github.com/users/dillondaudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/dillondaudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dillondaudert/subscriptions", "organizations_url": "https://api.github.com/users/dillondaudert/orgs", "repos_url": "https://api.github.com/users/dillondaudert/repos", "events_url": "https://api.github.com/users/dillondaudert/events{/privacy}", "received_events_url": "https://api.github.com/users/dillondaudert/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "robieta", "id": 13089297, "node_id": "MDQ6VXNlcjEzMDg5Mjk3", "avatar_url": "https://avatars0.githubusercontent.com/u/13089297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robieta", "html_url": "https://github.com/robieta", "followers_url": "https://api.github.com/users/robieta/followers", "following_url": "https://api.github.com/users/robieta/following{/other_user}", "gists_url": "https://api.github.com/users/robieta/gists{/gist_id}", "starred_url": "https://api.github.com/users/robieta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robieta/subscriptions", "organizations_url": "https://api.github.com/users/robieta/orgs", "repos_url": "https://api.github.com/users/robieta/repos", "events_url": "https://api.github.com/users/robieta/events{/privacy}", "received_events_url": "https://api.github.com/users/robieta/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "robieta", "id": 13089297, "node_id": "MDQ6VXNlcjEzMDg5Mjk3", "avatar_url": "https://avatars0.githubusercontent.com/u/13089297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robieta", "html_url": "https://github.com/robieta", "followers_url": "https://api.github.com/users/robieta/followers", "following_url": "https://api.github.com/users/robieta/following{/other_user}", "gists_url": "https://api.github.com/users/robieta/gists{/gist_id}", "starred_url": "https://api.github.com/users/robieta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robieta/subscriptions", "organizations_url": "https://api.github.com/users/robieta/orgs", "repos_url": "https://api.github.com/users/robieta/repos", "events_url": "https://api.github.com/users/robieta/events{/privacy}", "received_events_url": "https://api.github.com/users/robieta/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-06-20T20:19:13Z", "updated_at": "2018-11-23T05:52:26Z", "closed_at": "2018-09-15T18:29:51Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nYes.</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nLinux Ubuntu 18</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\nBinary</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\nv1.8.0-3410-g79d7e11f3e, 1.10.0-dev20180616</li>\n<li><strong>Python version</strong>:<br>\n3.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>:<br>\nN/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:<br>\nN/A</li>\n<li><strong>CUDA/cuDNN version</strong>:<br>\nCUDA 9.0, cuDNN 7.0</li>\n<li><strong>GPU model and memory</strong>:<br>\nNVIDIA GeForce 1080</li>\n<li><strong>Exact command to reproduce</strong>:<br>\nRunning the provided script should produce this error.</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>tf.keras.Model will throw a <code>FailedPreconditionError: Table not initialized.</code> error when passing a Dataset that includes a lookup table to Model.fit(). This can be worked around by creating a Session and running <code>tf.tables_initializer()</code> and <code>keras.backend.set_session</code>, but it would be nice if Keras could check for tables and initialize them automatically.</p>\n<h3>Source code / logs</h3>\n<ul>\n<li><strong>Script</strong>:</li>\n</ul>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">from</span> tensorflow.python.ops <span class=\"pl-k\">import</span> lookup_ops\n<span class=\"pl-k\">from</span> tensorflow <span class=\"pl-k\">import</span> keras\n\nalphabet <span class=\"pl-k\">=</span> [<span class=\"pl-s\"><span class=\"pl-pds\">'</span>A<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>B<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>C<span class=\"pl-pds\">'</span></span>]\ntable <span class=\"pl-k\">=</span> lookup_ops.index_table_from_tensor(tf.constant(alphabet))\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> generate samples of strings of different lengths</span>\ninputs <span class=\"pl-k\">=</span> [<span class=\"pl-s\"><span class=\"pl-pds\">'</span><span class=\"pl-pds\">'</span></span>.join([np.random.choice(alphabet) <span class=\"pl-k\">for</span> _ <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">5</span>)]) <span class=\"pl-k\">for</span> _ <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">10</span>)]\ntargets <span class=\"pl-k\">=</span> np.zeros((<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">4</span>))\n\ndataset <span class=\"pl-k\">=</span> tf.data.Dataset.from_tensor_slices((inputs, targets))\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">map_fn</span>(<span class=\"pl-smi\">x</span>, <span class=\"pl-smi\">y</span>):\n    x <span class=\"pl-k\">=</span> tf.string_split([x], <span class=\"pl-v\">delimiter</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>).values\n    x <span class=\"pl-k\">=</span> table.lookup(x)\n    x <span class=\"pl-k\">=</span> tf.nn.embedding_lookup(tf.eye(<span class=\"pl-c1\">3</span>), x)\n    <span class=\"pl-k\">return</span> x, y\ndataset <span class=\"pl-k\">=</span> dataset.map(<span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">x</span>, <span class=\"pl-smi\">y</span>: map_fn(x, y))\ndataset <span class=\"pl-k\">=</span> dataset.repeat(<span class=\"pl-c1\">100</span>)\ndataset <span class=\"pl-k\">=</span> dataset.batch(<span class=\"pl-c1\">5</span>)\n\nx <span class=\"pl-k\">=</span> keras.layers.Input(<span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">3</span>), <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>input<span class=\"pl-pds\">'</span></span>)\nflat <span class=\"pl-k\">=</span> keras.layers.Flatten()(x)\ny <span class=\"pl-k\">=</span> keras.layers.Dense(<span class=\"pl-c1\">4</span>, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>dense<span class=\"pl-pds\">'</span></span>)(flat)\n\nmodel <span class=\"pl-k\">=</span> keras.Model(x, y)\nmodel.compile(<span class=\"pl-v\">loss</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>mse<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">optimizer</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>rmsprop<span class=\"pl-pds\">'</span></span>)\n\nmodel.fit(dataset, <span class=\"pl-v\">epochs</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>, <span class=\"pl-v\">steps_per_epoch</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">2</span>, <span class=\"pl-v\">verbose</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>)</pre></div>\n<ul>\n<li><strong>Output</strong>:</li>\n</ul>\n<div class=\"highlight highlight-source-shell\"><pre>Script started on 2018-06-20 16:09:12-0400\ndillon@dillon-linux:<span class=\"pl-k\">~</span>/github/dillondaudert$ python keras_table_init_ex.py \n2018-06-20 16:09:20.610136: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\n2018-06-20 16:09:20.717933: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:883] successful NUMA node <span class=\"pl-c1\">read</span> from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n2018-06-20 16:09:20.718316: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1392] Found device 0 with properties: \nname: GeForce GTX 1080 major: 6 minor: 1 memoryClockRate(GHz): 1.8475\npciBusID: 0000:01:00.0\ntotalMemory: 7.93GiB freeMemory: 7.17GiB\n2018-06-20 16:09:20.788286: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:883] successful NUMA node <span class=\"pl-c1\">read</span> from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n2018-06-20 16:09:20.788649: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1392] Found device 1 with properties: \nname: GeForce GTX 1080 major: 6 minor: 1 memoryClockRate(GHz): 1.8475\npciBusID: 0000:02:00.0\ntotalMemory: 7.93GiB freeMemory: 7.81GiB\n2018-06-20 16:09:20.789264: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1471] Adding visible gpu devices: 0, 1\n2018-06-20 16:09:21.112863: I tensorflow/core/common_runtime/gpu/gpu_device.cc:952] Device interconnect StreamExecutor with strength 1 edge matrix:\n2018-06-20 16:09:21.112890: I tensorflow/core/common_runtime/gpu/gpu_device.cc:958]      0 1 \n2018-06-20 16:09:21.112895: I tensorflow/core/common_runtime/gpu/gpu_device.cc:971] 0:   N Y \n2018-06-20 16:09:21.112899: I tensorflow/core/common_runtime/gpu/gpu_device.cc:971] 1:   Y N \n2018-06-20 16:09:21.113086: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1084] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 6917 MB memory) -<span class=\"pl-k\">&gt;</span> physical GPU (device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0, compute capability: 6.1)\n2018-06-20 16:09:21.169182: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1084] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:1 with 7537 MB memory) -<span class=\"pl-k\">&gt;</span> physical GPU (device: 1, name: GeForce GTX 1080, pci bus id: 0000:02:00.0, compute capability: 6.1)\nEpoch 1/1\n2018-06-20 16:09:21.490711: W tensorflow/core/framework/op_kernel.cc:1328] OP_REQUIRES failed at lookup_table_op.cc:675 <span class=\"pl-c1\">:</span> Failed precondition: Table not initialized.\nTraceback (most recent call last):\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>keras_table_init_ex.py<span class=\"pl-pds\">\"</span></span>, line 29, <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>\n    model.fit(dataset, epochs=1, steps_per_epoch=2, verbose=1)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/home/dillon/.conda/envs/tf1.10-nightly/lib/python3.6/site-packages/tensorflow/python/keras/engine/training.py<span class=\"pl-pds\">\"</span></span>, line 1353, <span class=\"pl-k\">in</span> fit\n    validation_steps=validation_steps)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/home/dillon/.conda/envs/tf1.10-nightly/lib/python3.6/site-packages/tensorflow/python/keras/engine/training_arrays.py<span class=\"pl-pds\">\"</span></span>, line 195, <span class=\"pl-k\">in</span> fit_loop\n    outs = f(ins)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/home/dillon/.conda/envs/tf1.10-nightly/lib/python3.6/site-packages/tensorflow/python/keras/backend.py<span class=\"pl-pds\">\"</span></span>, line 2897, <span class=\"pl-k\">in</span> __call__\n    fetched = self._callable_fn(<span class=\"pl-k\">*</span>array_vals)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/home/dillon/.conda/envs/tf1.10-nightly/lib/python3.6/site-packages/tensorflow/python/client/session.py<span class=\"pl-pds\">\"</span></span>, line 1382, <span class=\"pl-k\">in</span> __call__\n    run_metadata_ptr)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/home/dillon/.conda/envs/tf1.10-nightly/lib/python3.6/site-packages/tensorflow/python/framework/errors_impl.py<span class=\"pl-pds\">\"</span></span>, line 519, <span class=\"pl-k\">in</span> __exit__\n    c_api.TF_GetCode(self.status.status))\ntensorflow.python.framework.errors_impl.FailedPreconditionError: Table not initialized.\n\t [[Node: hash_table_Lookup <span class=\"pl-k\">=</span> LookupTableFindV2[Tin<span class=\"pl-k\">=</span>DT_STRING, Tout<span class=\"pl-k\">=</span>DT_INT64](hash_table_lookup_placeholder, StringSplit:1, hash_table_lookup_placeholder_1)]]\n\t [[Node: IteratorGetNext <span class=\"pl-k\">=</span> IteratorGetNext[output_shapes<span class=\"pl-k\">=</span>[[<span class=\"pl-k\">?</span>,<span class=\"pl-k\">?</span>,3], [<span class=\"pl-k\">?</span>,4]], output_types<span class=\"pl-k\">=</span>[DT_FLOAT, DT_DOUBLE], _device<span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/job:localhost/replica:0/task:0/device:CPU:0<span class=\"pl-pds\">\"</span></span>](Iterator)]]\n\t [[Node: IteratorGetNext/_17 <span class=\"pl-k\">=</span> _Recv[client_terminated<span class=\"pl-k\">=</span>false, recv_device<span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/job:localhost/replica:0/task:0/device:GPU:0<span class=\"pl-pds\">\"</span></span>, send_device<span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/job:localhost/replica:0/task:0/device:CPU:0<span class=\"pl-pds\">\"</span></span>, send_device_incarnation<span class=\"pl-k\">=</span>1, tensor_name<span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>edge_18_IteratorGetNext<span class=\"pl-pds\">\"</span></span>, tensor_type<span class=\"pl-k\">=</span>DT_DOUBLE, _device<span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/job:localhost/replica:0/task:0/device:GPU:0<span class=\"pl-pds\">\"</span></span>]()]]\ndillon@dillon-linux:<span class=\"pl-k\">~</span>/github/dillondaudert$ <span class=\"pl-c1\">exit</span>\n<span class=\"pl-c1\">exit</span>\n\nScript <span class=\"pl-k\">done</span> on 2018-06-20 16:09:29-0400</pre></div>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nYes.\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nLinux Ubuntu 18\nTensorFlow installed from (source or binary):\nBinary\nTensorFlow version (use command below):\nv1.8.0-3410-g79d7e11f3e, 1.10.0-dev20180616\nPython version:\n3.6\nBazel version (if compiling from source):\nN/A\nGCC/Compiler version (if compiling from source):\nN/A\nCUDA/cuDNN version:\nCUDA 9.0, cuDNN 7.0\nGPU model and memory:\nNVIDIA GeForce 1080\nExact command to reproduce:\nRunning the provided script should produce this error.\n\nDescribe the problem\ntf.keras.Model will throw a FailedPreconditionError: Table not initialized. error when passing a Dataset that includes a lookup table to Model.fit(). This can be worked around by creating a Session and running tf.tables_initializer() and keras.backend.set_session, but it would be nice if Keras could check for tables and initialize them automatically.\nSource code / logs\n\nScript:\n\nimport tensorflow as tf\nimport numpy as np\nfrom tensorflow.python.ops import lookup_ops\nfrom tensorflow import keras\n\nalphabet = ['A', 'B', 'C']\ntable = lookup_ops.index_table_from_tensor(tf.constant(alphabet))\n# generate samples of strings of different lengths\ninputs = [''.join([np.random.choice(alphabet) for _ in range(5)]) for _ in range(10)]\ntargets = np.zeros((10, 4))\n\ndataset = tf.data.Dataset.from_tensor_slices((inputs, targets))\ndef map_fn(x, y):\n    x = tf.string_split([x], delimiter=\"\").values\n    x = table.lookup(x)\n    x = tf.nn.embedding_lookup(tf.eye(3), x)\n    return x, y\ndataset = dataset.map(lambda x, y: map_fn(x, y))\ndataset = dataset.repeat(100)\ndataset = dataset.batch(5)\n\nx = keras.layers.Input(shape=(5, 3), name='input')\nflat = keras.layers.Flatten()(x)\ny = keras.layers.Dense(4, name='dense')(flat)\n\nmodel = keras.Model(x, y)\nmodel.compile(loss='mse', optimizer='rmsprop')\n\nmodel.fit(dataset, epochs=1, steps_per_epoch=2, verbose=1)\n\nOutput:\n\nScript started on 2018-06-20 16:09:12-0400\ndillon@dillon-linux:~/github/dillondaudert$ python keras_table_init_ex.py \n2018-06-20 16:09:20.610136: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\n2018-06-20 16:09:20.717933: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:883] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n2018-06-20 16:09:20.718316: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1392] Found device 0 with properties: \nname: GeForce GTX 1080 major: 6 minor: 1 memoryClockRate(GHz): 1.8475\npciBusID: 0000:01:00.0\ntotalMemory: 7.93GiB freeMemory: 7.17GiB\n2018-06-20 16:09:20.788286: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:883] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n2018-06-20 16:09:20.788649: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1392] Found device 1 with properties: \nname: GeForce GTX 1080 major: 6 minor: 1 memoryClockRate(GHz): 1.8475\npciBusID: 0000:02:00.0\ntotalMemory: 7.93GiB freeMemory: 7.81GiB\n2018-06-20 16:09:20.789264: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1471] Adding visible gpu devices: 0, 1\n2018-06-20 16:09:21.112863: I tensorflow/core/common_runtime/gpu/gpu_device.cc:952] Device interconnect StreamExecutor with strength 1 edge matrix:\n2018-06-20 16:09:21.112890: I tensorflow/core/common_runtime/gpu/gpu_device.cc:958]      0 1 \n2018-06-20 16:09:21.112895: I tensorflow/core/common_runtime/gpu/gpu_device.cc:971] 0:   N Y \n2018-06-20 16:09:21.112899: I tensorflow/core/common_runtime/gpu/gpu_device.cc:971] 1:   Y N \n2018-06-20 16:09:21.113086: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1084] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 6917 MB memory) -> physical GPU (device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0, compute capability: 6.1)\n2018-06-20 16:09:21.169182: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1084] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:1 with 7537 MB memory) -> physical GPU (device: 1, name: GeForce GTX 1080, pci bus id: 0000:02:00.0, compute capability: 6.1)\nEpoch 1/1\n2018-06-20 16:09:21.490711: W tensorflow/core/framework/op_kernel.cc:1328] OP_REQUIRES failed at lookup_table_op.cc:675 : Failed precondition: Table not initialized.\nTraceback (most recent call last):\n  File \"keras_table_init_ex.py\", line 29, in <module>\n    model.fit(dataset, epochs=1, steps_per_epoch=2, verbose=1)\n  File \"/home/dillon/.conda/envs/tf1.10-nightly/lib/python3.6/site-packages/tensorflow/python/keras/engine/training.py\", line 1353, in fit\n    validation_steps=validation_steps)\n  File \"/home/dillon/.conda/envs/tf1.10-nightly/lib/python3.6/site-packages/tensorflow/python/keras/engine/training_arrays.py\", line 195, in fit_loop\n    outs = f(ins)\n  File \"/home/dillon/.conda/envs/tf1.10-nightly/lib/python3.6/site-packages/tensorflow/python/keras/backend.py\", line 2897, in __call__\n    fetched = self._callable_fn(*array_vals)\n  File \"/home/dillon/.conda/envs/tf1.10-nightly/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1382, in __call__\n    run_metadata_ptr)\n  File \"/home/dillon/.conda/envs/tf1.10-nightly/lib/python3.6/site-packages/tensorflow/python/framework/errors_impl.py\", line 519, in __exit__\n    c_api.TF_GetCode(self.status.status))\ntensorflow.python.framework.errors_impl.FailedPreconditionError: Table not initialized.\n\t [[Node: hash_table_Lookup = LookupTableFindV2[Tin=DT_STRING, Tout=DT_INT64](hash_table_lookup_placeholder, StringSplit:1, hash_table_lookup_placeholder_1)]]\n\t [[Node: IteratorGetNext = IteratorGetNext[output_shapes=[[?,?,3], [?,4]], output_types=[DT_FLOAT, DT_DOUBLE], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](Iterator)]]\n\t [[Node: IteratorGetNext/_17 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device_incarnation=1, tensor_name=\"edge_18_IteratorGetNext\", tensor_type=DT_DOUBLE, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"]()]]\ndillon@dillon-linux:~/github/dillondaudert$ exit\nexit\n\nScript done on 2018-06-20 16:09:29-0400", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nLinux Ubuntu 18\r\n- **TensorFlow installed from (source or binary)**:\r\nBinary\r\n- **TensorFlow version (use command below)**:\r\nv1.8.0-3410-g79d7e11f3e, 1.10.0-dev20180616\r\n- **Python version**: \r\n3.6\r\n- **Bazel version (if compiling from source)**:\r\nN/A\r\n- **GCC/Compiler version (if compiling from source)**:\r\nN/A\r\n- **CUDA/cuDNN version**:\r\nCUDA 9.0, cuDNN 7.0\r\n- **GPU model and memory**:\r\nNVIDIA GeForce 1080\r\n- **Exact command to reproduce**:\r\nRunning the provided script should produce this error.\r\n\r\n### Describe the problem\r\ntf.keras.Model will throw a `FailedPreconditionError: Table not initialized.` error when passing a Dataset that includes a lookup table to Model.fit(). This can be worked around by creating a Session and running `tf.tables_initializer()` and `keras.backend.set_session`, but it would be nice if Keras could check for tables and initialize them automatically.\r\n\r\n### Source code / logs\r\n- **Script**:\r\n```python\r\nimport tensorflow as tf\r\nimport numpy as np\r\nfrom tensorflow.python.ops import lookup_ops\r\nfrom tensorflow import keras\r\n\r\nalphabet = ['A', 'B', 'C']\r\ntable = lookup_ops.index_table_from_tensor(tf.constant(alphabet))\r\n# generate samples of strings of different lengths\r\ninputs = [''.join([np.random.choice(alphabet) for _ in range(5)]) for _ in range(10)]\r\ntargets = np.zeros((10, 4))\r\n\r\ndataset = tf.data.Dataset.from_tensor_slices((inputs, targets))\r\ndef map_fn(x, y):\r\n    x = tf.string_split([x], delimiter=\"\").values\r\n    x = table.lookup(x)\r\n    x = tf.nn.embedding_lookup(tf.eye(3), x)\r\n    return x, y\r\ndataset = dataset.map(lambda x, y: map_fn(x, y))\r\ndataset = dataset.repeat(100)\r\ndataset = dataset.batch(5)\r\n\r\nx = keras.layers.Input(shape=(5, 3), name='input')\r\nflat = keras.layers.Flatten()(x)\r\ny = keras.layers.Dense(4, name='dense')(flat)\r\n\r\nmodel = keras.Model(x, y)\r\nmodel.compile(loss='mse', optimizer='rmsprop')\r\n\r\nmodel.fit(dataset, epochs=1, steps_per_epoch=2, verbose=1)\r\n```\r\n\r\n- **Output**:\r\n```bash\r\nScript started on 2018-06-20 16:09:12-0400\r\ndillon@dillon-linux:~/github/dillondaudert$ python keras_table_init_ex.py \r\n2018-06-20 16:09:20.610136: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\r\n2018-06-20 16:09:20.717933: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:883] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2018-06-20 16:09:20.718316: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1392] Found device 0 with properties: \r\nname: GeForce GTX 1080 major: 6 minor: 1 memoryClockRate(GHz): 1.8475\r\npciBusID: 0000:01:00.0\r\ntotalMemory: 7.93GiB freeMemory: 7.17GiB\r\n2018-06-20 16:09:20.788286: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:883] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2018-06-20 16:09:20.788649: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1392] Found device 1 with properties: \r\nname: GeForce GTX 1080 major: 6 minor: 1 memoryClockRate(GHz): 1.8475\r\npciBusID: 0000:02:00.0\r\ntotalMemory: 7.93GiB freeMemory: 7.81GiB\r\n2018-06-20 16:09:20.789264: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1471] Adding visible gpu devices: 0, 1\r\n2018-06-20 16:09:21.112863: I tensorflow/core/common_runtime/gpu/gpu_device.cc:952] Device interconnect StreamExecutor with strength 1 edge matrix:\r\n2018-06-20 16:09:21.112890: I tensorflow/core/common_runtime/gpu/gpu_device.cc:958]      0 1 \r\n2018-06-20 16:09:21.112895: I tensorflow/core/common_runtime/gpu/gpu_device.cc:971] 0:   N Y \r\n2018-06-20 16:09:21.112899: I tensorflow/core/common_runtime/gpu/gpu_device.cc:971] 1:   Y N \r\n2018-06-20 16:09:21.113086: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1084] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 6917 MB memory) -> physical GPU (device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0, compute capability: 6.1)\r\n2018-06-20 16:09:21.169182: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1084] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:1 with 7537 MB memory) -> physical GPU (device: 1, name: GeForce GTX 1080, pci bus id: 0000:02:00.0, compute capability: 6.1)\r\nEpoch 1/1\r\n2018-06-20 16:09:21.490711: W tensorflow/core/framework/op_kernel.cc:1328] OP_REQUIRES failed at lookup_table_op.cc:675 : Failed precondition: Table not initialized.\r\nTraceback (most recent call last):\r\n  File \"keras_table_init_ex.py\", line 29, in <module>\r\n    model.fit(dataset, epochs=1, steps_per_epoch=2, verbose=1)\r\n  File \"/home/dillon/.conda/envs/tf1.10-nightly/lib/python3.6/site-packages/tensorflow/python/keras/engine/training.py\", line 1353, in fit\r\n    validation_steps=validation_steps)\r\n  File \"/home/dillon/.conda/envs/tf1.10-nightly/lib/python3.6/site-packages/tensorflow/python/keras/engine/training_arrays.py\", line 195, in fit_loop\r\n    outs = f(ins)\r\n  File \"/home/dillon/.conda/envs/tf1.10-nightly/lib/python3.6/site-packages/tensorflow/python/keras/backend.py\", line 2897, in __call__\r\n    fetched = self._callable_fn(*array_vals)\r\n  File \"/home/dillon/.conda/envs/tf1.10-nightly/lib/python3.6/site-packages/tensorflow/python/client/session.py\", line 1382, in __call__\r\n    run_metadata_ptr)\r\n  File \"/home/dillon/.conda/envs/tf1.10-nightly/lib/python3.6/site-packages/tensorflow/python/framework/errors_impl.py\", line 519, in __exit__\r\n    c_api.TF_GetCode(self.status.status))\r\ntensorflow.python.framework.errors_impl.FailedPreconditionError: Table not initialized.\r\n\t [[Node: hash_table_Lookup = LookupTableFindV2[Tin=DT_STRING, Tout=DT_INT64](hash_table_lookup_placeholder, StringSplit:1, hash_table_lookup_placeholder_1)]]\r\n\t [[Node: IteratorGetNext = IteratorGetNext[output_shapes=[[?,?,3], [?,4]], output_types=[DT_FLOAT, DT_DOUBLE], _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"](Iterator)]]\r\n\t [[Node: IteratorGetNext/_17 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device_incarnation=1, tensor_name=\"edge_18_IteratorGetNext\", tensor_type=DT_DOUBLE, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"]()]]\r\ndillon@dillon-linux:~/github/dillondaudert$ exit\r\nexit\r\n\r\nScript done on 2018-06-20 16:09:29-0400\r\n```\r\n"}