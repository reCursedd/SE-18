{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/324785553", "html_url": "https://github.com/tensorflow/tensorflow/issues/12022#issuecomment-324785553", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12022", "id": 324785553, "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDc4NTU1Mw==", "user": {"login": "pk11", "id": 126080, "node_id": "MDQ6VXNlcjEyNjA4MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/126080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pk11", "html_url": "https://github.com/pk11", "followers_url": "https://api.github.com/users/pk11/followers", "following_url": "https://api.github.com/users/pk11/following{/other_user}", "gists_url": "https://api.github.com/users/pk11/gists{/gist_id}", "starred_url": "https://api.github.com/users/pk11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pk11/subscriptions", "organizations_url": "https://api.github.com/users/pk11/orgs", "repos_url": "https://api.github.com/users/pk11/repos", "events_url": "https://api.github.com/users/pk11/events{/privacy}", "received_events_url": "https://api.github.com/users/pk11/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-24T23:36:12Z", "updated_at": "2017-08-24T23:43:23Z", "author_association": "NONE", "body_html": "<p>We ran into this issue as well. I don't think your problem is related to <code>default_output_alternative_key</code> being <code>None</code> rather, it looks like <code>TensorForestEstimator</code> currently populates <code>model_ops.predictions</code> only if a <code>keys_column</code> is provided[1]. Without <code>model_ops.predictions</code> populated, <code>default_outputs</code> in <code>saved_model_export</code> will lack a default key[2]. As a result, this will make the model end up with no heads and eventually the export will fail.</p>\n<p>TLDR: Populating <code>keys_column</code> in <code>TensorForestEstimator</code> should fix your problem. That being said, it's definitely a bug if an optional argument is really required for the model to function properly. So I would leave this issue open.</p>\n<p>As a side: I did not really understand why requiring <code>keys_name</code>[3] to be part of the incoming<code>feature_columns</code> list (after all, it's not necessary a feature) and then pop it?</p>\n<p>[1]<br>\n<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/tensor_forest/client/random_forest.py#L235\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/tensor_forest/client/random_forest.py#L235</a><br>\n[2]<br>\n<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/learn/python/learn/utils/saved_model_export_utils.py#L217\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/learn/python/learn/utils/saved_model_export_utils.py#L217</a><br>\n[3]<br>\n<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/tensor_forest/client/random_forest.py#L157\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/tensor_forest/client/random_forest.py#L157</a></p>", "body_text": "We ran into this issue as well. I don't think your problem is related to default_output_alternative_key being None rather, it looks like TensorForestEstimator currently populates model_ops.predictions only if a keys_column is provided[1]. Without model_ops.predictions populated, default_outputs in saved_model_export will lack a default key[2]. As a result, this will make the model end up with no heads and eventually the export will fail.\nTLDR: Populating keys_column in TensorForestEstimator should fix your problem. That being said, it's definitely a bug if an optional argument is really required for the model to function properly. So I would leave this issue open.\nAs a side: I did not really understand why requiring keys_name[3] to be part of the incomingfeature_columns list (after all, it's not necessary a feature) and then pop it?\n[1]\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/tensor_forest/client/random_forest.py#L235\n[2]\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/learn/python/learn/utils/saved_model_export_utils.py#L217\n[3]\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/tensor_forest/client/random_forest.py#L157", "body": "We ran into this issue as well. I don't think your problem is related to `default_output_alternative_key` being `None` rather, it looks like `TensorForestEstimator` currently populates `model_ops.predictions` only if a `keys_column` is provided[1]. Without `model_ops.predictions` populated, `default_outputs` in `saved_model_export` will lack a default key[2]. As a result, this will make the model end up with no heads and eventually the export will fail. \r\n\r\nTLDR: Populating `keys_column` in `TensorForestEstimator` should fix your problem. That being said, it's definitely a bug if an optional argument is really required for the model to function properly. So I would leave this issue open.\r\n\r\nAs a side: I did not really understand why requiring `keys_name`[3] to be part of the incoming`feature_columns` list (after all, it's not necessary a feature) and then pop it?\r\n\r\n[1] \r\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/tensor_forest/client/random_forest.py#L235\r\n[2] \r\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/learn/python/learn/utils/saved_model_export_utils.py#L217\r\n[3] \r\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/tensor_forest/client/random_forest.py#L157\r\n"}