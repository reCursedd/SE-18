{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12022", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12022/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12022/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12022/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12022", "id": 247849528, "node_id": "MDU6SXNzdWUyNDc4NDk1Mjg=", "number": 12022, "title": "Error exporting TensorForestEstimator model for serving", "user": {"login": "justinshapiro", "id": 14143046, "node_id": "MDQ6VXNlcjE0MTQzMDQ2", "avatar_url": "https://avatars2.githubusercontent.com/u/14143046?v=4", "gravatar_id": "", "url": "https://api.github.com/users/justinshapiro", "html_url": "https://github.com/justinshapiro", "followers_url": "https://api.github.com/users/justinshapiro/followers", "following_url": "https://api.github.com/users/justinshapiro/following{/other_user}", "gists_url": "https://api.github.com/users/justinshapiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/justinshapiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/justinshapiro/subscriptions", "organizations_url": "https://api.github.com/users/justinshapiro/orgs", "repos_url": "https://api.github.com/users/justinshapiro/repos", "events_url": "https://api.github.com/users/justinshapiro/events{/privacy}", "received_events_url": "https://api.github.com/users/justinshapiro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 14, "created_at": "2017-08-03T22:08:10Z", "updated_at": "2018-04-18T18:21:27Z", "closed_at": "2018-04-18T18:21:27Z", "author_association": "NONE", "body_html": "<h3>Problem</h3>\n<p>I am trying to host a TensorForestEstimator model on Google Cloud's ML Engine. Everything works right, but at the very end the model fails to export with stack trace:</p>\n<pre><code>Traceback (most recent call last):\n[...]\nFile \"/root/.local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/experiment.py\", line 502, in train_and_evaluate\n  export_results = self._maybe_export(eval_result)\nFile \"/root/.local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/experiment.py\", line 597, in _maybe_export\n  eval_result=eval_result))\nFile \"/root/.local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/export_strategy.py\", line 87, in export\n  return self.export_fn(estimator, export_path, **kwargs)\nFile \"/root/.local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/utils/saved_model_export_utils.py\", line 412, in export_fn\n  checkpoint_path=checkpoint_path)\nFile \"/root/.local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 1280, in export_savedmodel\n  actual_default_output_alternative_key)\nFile \"/root/.local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/utils/saved_model_export_utils.py\", line 252, in build_all_signature_defs\n  for input_key, inputs in input_alternatives.items()\nFile \"/root/.local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/utils/saved_model_export_utils.py\", line 254, in &lt;dictcomp&gt;\n  in output_alternatives.items()}\nFile \"/root/.local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/utils/saved_model_export_utils.py\", line 119, in build_standardized_signature_def\n  input_tensors, output_tensors)\nFile \"/root/.local/lib/python2.7/site-packages/tensorflow/python/saved_model/signature_def_utils_impl.py\", line 146, in predict_signature_def\n  signature_constants.PREDICT_METHOD_NAME)\nFile \"/root/.local/lib/python2.7/site-packages/tensorflow/python/saved_model/signature_def_utils_impl.py\", line 45, in build_signature_def\n  signature_def.outputs[item].CopyFrom(outputs[item])\nTypeError: None has type NoneType, but expected one of: bytes, unicode\n</code></pre>\n<p>Based on that trace, I'm thinking the error is in the make_export_strategy function with <code>default_output_alternative_key=None</code>. So what I did is set <code>default_output_alternative_key='default'</code> but then got the error:</p>\n<pre><code>ValueError: Requested default_output_alternative: default, but available output_alternatives are: [None]\n</code></pre>\n<p>So this shows that there are no output alternatives and my model is single-headed. Here is the code:</p>\n<pre><code>def serving_input_fn():\n    feature_placeholders = {\n    column['name']: tf.placeholder(dtype=column['dtype'], shape=[None])\n    for column in columns_list if column['derived'] == 'N' and column['column_role'] != 'label'\n    }\n\n    features = {\n        key: tf.expand_dims(tensor, -1)\n        for key, tensor in feature_placeholders.items()\n    }\n\n    return InputFnOps(\n        features=features,\n        labels=None,\n        default_inputs=feature_placeholders\n    )\n\ndef get_experiment_fn(args):\n    def _experiment(run_config, hparams):\n        return Experiment(\n            estimator=TensorForestEstimator(\n                params=ForestHParams(\n                    num_trees=args.num_trees,\n                    max_nodes=10000,\n                    min_split_samples=2,\n                    num_features=7,\n                    num_classes=args.num_projections,\n                    regression=True\n                ),\n                model_dir=args.job_dir,\n                graph_builder_class=RandomForestGraphs,\n                config=run_config,\n                report_feature_importances=True,\n            ),\n            train_input_fn=get_input_fn(\n                project_name=args.project,\n                data_location=args.train_data,\n                dataset_size=args.train_size,\n                batch_size=args.train_batch_size\n            ),\n            train_steps=args.train_steps,\n            eval_input_fn=get_input_fn(\n                project_name=args.project,\n                data_location=args.eval_data,\n                dataset_size=args.eval_size,\n                batch_size=args.eval_batch_size\n            ),\n            eval_steps=args.eval_steps,\n            eval_metrics=get_eval_metrics(),\n            export_strategies=[\n                make_export_strategy(\n                    serving_input_fn,\n                    default_output_alternative_key=None,\n                    exports_to_keep=1\n                )\n            ]\n        )\n    return _experiment\n\n\ndef main():\n    args = get_arg_parser().parse_args()\n\n    learn_runner.run(\n        experiment_fn=get_experiment_fn(args),\n        run_config=RunConfig(model_dir=args.job_dir),\n        hparams=HParams(**args.__dict__)\n    )\n\nif __name__ == '__main__':\n    main()\n</code></pre>\n<p>This seems like a bug, but I could be wrong.</p>\n<h3>System information</h3>\n<pre><code>== cat /etc/issue ===============================================\nDarwin mbmagenic12 16.5.0 Darwin Kernel Version 16.5.0: Fri Mar  3 16:52:33 PST 2017; root:xnu-3789.51.2~3/RELEASE_X86_64 x86_64\nMac OS X 10.12.4\n\n== are we in docker =============================================\nNo\n\n== compiler =====================================================\nApple LLVM version 8.1.0 (clang-802.0.42)\nTarget: x86_64-apple-darwin16.5.0\nThread model: posix\nInstalledDir: /Library/Developer/CommandLineTools/usr/bin\n\n== uname -a =====================================================\nDarwin mbmagenic12 16.5.0 Darwin Kernel Version 16.5.0: Fri Mar  3 16:52:33 PST 2017; root:xnu-3789.51.2~3/RELEASE_X86_64 x86_64\n\n== check pips ===================================================\nnumpy (1.13.1)\nprotobuf (3.1.0.post1)\ntensorflow (1.2.1)\n\n== check for virtualenv =========================================\nFalse\n\n== tensorflow import ============================================\ntf.VERSION = 1.2.1\ntf.GIT_VERSION = v1.2.0-5-g435cdfc\ntf.COMPILER_VERSION = v1.2.0-5-g435cdfc\nSanity check: array([1], dtype=int32)\n\n== env ==========================================================\nLD_LIBRARY_PATH is unset\nDYLD_LIBRARY_PATH is unset\n\n== nvidia-smi ===================================================\n./tf.sh: line 105: nvidia-smi: command not found\n\n== cuda libs  ===================================================\n</code></pre>", "body_text": "Problem\nI am trying to host a TensorForestEstimator model on Google Cloud's ML Engine. Everything works right, but at the very end the model fails to export with stack trace:\nTraceback (most recent call last):\n[...]\nFile \"/root/.local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/experiment.py\", line 502, in train_and_evaluate\n  export_results = self._maybe_export(eval_result)\nFile \"/root/.local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/experiment.py\", line 597, in _maybe_export\n  eval_result=eval_result))\nFile \"/root/.local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/export_strategy.py\", line 87, in export\n  return self.export_fn(estimator, export_path, **kwargs)\nFile \"/root/.local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/utils/saved_model_export_utils.py\", line 412, in export_fn\n  checkpoint_path=checkpoint_path)\nFile \"/root/.local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 1280, in export_savedmodel\n  actual_default_output_alternative_key)\nFile \"/root/.local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/utils/saved_model_export_utils.py\", line 252, in build_all_signature_defs\n  for input_key, inputs in input_alternatives.items()\nFile \"/root/.local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/utils/saved_model_export_utils.py\", line 254, in <dictcomp>\n  in output_alternatives.items()}\nFile \"/root/.local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/utils/saved_model_export_utils.py\", line 119, in build_standardized_signature_def\n  input_tensors, output_tensors)\nFile \"/root/.local/lib/python2.7/site-packages/tensorflow/python/saved_model/signature_def_utils_impl.py\", line 146, in predict_signature_def\n  signature_constants.PREDICT_METHOD_NAME)\nFile \"/root/.local/lib/python2.7/site-packages/tensorflow/python/saved_model/signature_def_utils_impl.py\", line 45, in build_signature_def\n  signature_def.outputs[item].CopyFrom(outputs[item])\nTypeError: None has type NoneType, but expected one of: bytes, unicode\n\nBased on that trace, I'm thinking the error is in the make_export_strategy function with default_output_alternative_key=None. So what I did is set default_output_alternative_key='default' but then got the error:\nValueError: Requested default_output_alternative: default, but available output_alternatives are: [None]\n\nSo this shows that there are no output alternatives and my model is single-headed. Here is the code:\ndef serving_input_fn():\n    feature_placeholders = {\n    column['name']: tf.placeholder(dtype=column['dtype'], shape=[None])\n    for column in columns_list if column['derived'] == 'N' and column['column_role'] != 'label'\n    }\n\n    features = {\n        key: tf.expand_dims(tensor, -1)\n        for key, tensor in feature_placeholders.items()\n    }\n\n    return InputFnOps(\n        features=features,\n        labels=None,\n        default_inputs=feature_placeholders\n    )\n\ndef get_experiment_fn(args):\n    def _experiment(run_config, hparams):\n        return Experiment(\n            estimator=TensorForestEstimator(\n                params=ForestHParams(\n                    num_trees=args.num_trees,\n                    max_nodes=10000,\n                    min_split_samples=2,\n                    num_features=7,\n                    num_classes=args.num_projections,\n                    regression=True\n                ),\n                model_dir=args.job_dir,\n                graph_builder_class=RandomForestGraphs,\n                config=run_config,\n                report_feature_importances=True,\n            ),\n            train_input_fn=get_input_fn(\n                project_name=args.project,\n                data_location=args.train_data,\n                dataset_size=args.train_size,\n                batch_size=args.train_batch_size\n            ),\n            train_steps=args.train_steps,\n            eval_input_fn=get_input_fn(\n                project_name=args.project,\n                data_location=args.eval_data,\n                dataset_size=args.eval_size,\n                batch_size=args.eval_batch_size\n            ),\n            eval_steps=args.eval_steps,\n            eval_metrics=get_eval_metrics(),\n            export_strategies=[\n                make_export_strategy(\n                    serving_input_fn,\n                    default_output_alternative_key=None,\n                    exports_to_keep=1\n                )\n            ]\n        )\n    return _experiment\n\n\ndef main():\n    args = get_arg_parser().parse_args()\n\n    learn_runner.run(\n        experiment_fn=get_experiment_fn(args),\n        run_config=RunConfig(model_dir=args.job_dir),\n        hparams=HParams(**args.__dict__)\n    )\n\nif __name__ == '__main__':\n    main()\n\nThis seems like a bug, but I could be wrong.\nSystem information\n== cat /etc/issue ===============================================\nDarwin mbmagenic12 16.5.0 Darwin Kernel Version 16.5.0: Fri Mar  3 16:52:33 PST 2017; root:xnu-3789.51.2~3/RELEASE_X86_64 x86_64\nMac OS X 10.12.4\n\n== are we in docker =============================================\nNo\n\n== compiler =====================================================\nApple LLVM version 8.1.0 (clang-802.0.42)\nTarget: x86_64-apple-darwin16.5.0\nThread model: posix\nInstalledDir: /Library/Developer/CommandLineTools/usr/bin\n\n== uname -a =====================================================\nDarwin mbmagenic12 16.5.0 Darwin Kernel Version 16.5.0: Fri Mar  3 16:52:33 PST 2017; root:xnu-3789.51.2~3/RELEASE_X86_64 x86_64\n\n== check pips ===================================================\nnumpy (1.13.1)\nprotobuf (3.1.0.post1)\ntensorflow (1.2.1)\n\n== check for virtualenv =========================================\nFalse\n\n== tensorflow import ============================================\ntf.VERSION = 1.2.1\ntf.GIT_VERSION = v1.2.0-5-g435cdfc\ntf.COMPILER_VERSION = v1.2.0-5-g435cdfc\nSanity check: array([1], dtype=int32)\n\n== env ==========================================================\nLD_LIBRARY_PATH is unset\nDYLD_LIBRARY_PATH is unset\n\n== nvidia-smi ===================================================\n./tf.sh: line 105: nvidia-smi: command not found\n\n== cuda libs  ===================================================", "body": "### Problem\r\nI am trying to host a TensorForestEstimator model on Google Cloud's ML Engine. Everything works right, but at the very end the model fails to export with stack trace:\r\n\r\n```\r\nTraceback (most recent call last):\r\n[...]\r\nFile \"/root/.local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/experiment.py\", line 502, in train_and_evaluate\r\n  export_results = self._maybe_export(eval_result)\r\nFile \"/root/.local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/experiment.py\", line 597, in _maybe_export\r\n  eval_result=eval_result))\r\nFile \"/root/.local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/export_strategy.py\", line 87, in export\r\n  return self.export_fn(estimator, export_path, **kwargs)\r\nFile \"/root/.local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/utils/saved_model_export_utils.py\", line 412, in export_fn\r\n  checkpoint_path=checkpoint_path)\r\nFile \"/root/.local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py\", line 1280, in export_savedmodel\r\n  actual_default_output_alternative_key)\r\nFile \"/root/.local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/utils/saved_model_export_utils.py\", line 252, in build_all_signature_defs\r\n  for input_key, inputs in input_alternatives.items()\r\nFile \"/root/.local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/utils/saved_model_export_utils.py\", line 254, in <dictcomp>\r\n  in output_alternatives.items()}\r\nFile \"/root/.local/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/utils/saved_model_export_utils.py\", line 119, in build_standardized_signature_def\r\n  input_tensors, output_tensors)\r\nFile \"/root/.local/lib/python2.7/site-packages/tensorflow/python/saved_model/signature_def_utils_impl.py\", line 146, in predict_signature_def\r\n  signature_constants.PREDICT_METHOD_NAME)\r\nFile \"/root/.local/lib/python2.7/site-packages/tensorflow/python/saved_model/signature_def_utils_impl.py\", line 45, in build_signature_def\r\n  signature_def.outputs[item].CopyFrom(outputs[item])\r\nTypeError: None has type NoneType, but expected one of: bytes, unicode\r\n```\r\n\r\nBased on that trace, I'm thinking the error is in the make_export_strategy function with `default_output_alternative_key=None`. So what I did is set `default_output_alternative_key='default'` but then got the error:\r\n\r\n```\r\nValueError: Requested default_output_alternative: default, but available output_alternatives are: [None]\r\n```\r\n\r\nSo this shows that there are no output alternatives and my model is single-headed. Here is the code:\r\n\r\n```\r\ndef serving_input_fn():\r\n    feature_placeholders = {\r\n    column['name']: tf.placeholder(dtype=column['dtype'], shape=[None])\r\n    for column in columns_list if column['derived'] == 'N' and column['column_role'] != 'label'\r\n    }\r\n\r\n    features = {\r\n        key: tf.expand_dims(tensor, -1)\r\n        for key, tensor in feature_placeholders.items()\r\n    }\r\n\r\n    return InputFnOps(\r\n        features=features,\r\n        labels=None,\r\n        default_inputs=feature_placeholders\r\n    )\r\n\r\ndef get_experiment_fn(args):\r\n    def _experiment(run_config, hparams):\r\n        return Experiment(\r\n            estimator=TensorForestEstimator(\r\n                params=ForestHParams(\r\n                    num_trees=args.num_trees,\r\n                    max_nodes=10000,\r\n                    min_split_samples=2,\r\n                    num_features=7,\r\n                    num_classes=args.num_projections,\r\n                    regression=True\r\n                ),\r\n                model_dir=args.job_dir,\r\n                graph_builder_class=RandomForestGraphs,\r\n                config=run_config,\r\n                report_feature_importances=True,\r\n            ),\r\n            train_input_fn=get_input_fn(\r\n                project_name=args.project,\r\n                data_location=args.train_data,\r\n                dataset_size=args.train_size,\r\n                batch_size=args.train_batch_size\r\n            ),\r\n            train_steps=args.train_steps,\r\n            eval_input_fn=get_input_fn(\r\n                project_name=args.project,\r\n                data_location=args.eval_data,\r\n                dataset_size=args.eval_size,\r\n                batch_size=args.eval_batch_size\r\n            ),\r\n            eval_steps=args.eval_steps,\r\n            eval_metrics=get_eval_metrics(),\r\n            export_strategies=[\r\n                make_export_strategy(\r\n                    serving_input_fn,\r\n                    default_output_alternative_key=None,\r\n                    exports_to_keep=1\r\n                )\r\n            ]\r\n        )\r\n    return _experiment\r\n\r\n\r\ndef main():\r\n    args = get_arg_parser().parse_args()\r\n\r\n    learn_runner.run(\r\n        experiment_fn=get_experiment_fn(args),\r\n        run_config=RunConfig(model_dir=args.job_dir),\r\n        hparams=HParams(**args.__dict__)\r\n    )\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\nThis seems like a bug, but I could be wrong.\r\n\r\n### System information\r\n```\r\n== cat /etc/issue ===============================================\r\nDarwin mbmagenic12 16.5.0 Darwin Kernel Version 16.5.0: Fri Mar  3 16:52:33 PST 2017; root:xnu-3789.51.2~3/RELEASE_X86_64 x86_64\r\nMac OS X 10.12.4\r\n\r\n== are we in docker =============================================\r\nNo\r\n\r\n== compiler =====================================================\r\nApple LLVM version 8.1.0 (clang-802.0.42)\r\nTarget: x86_64-apple-darwin16.5.0\r\nThread model: posix\r\nInstalledDir: /Library/Developer/CommandLineTools/usr/bin\r\n\r\n== uname -a =====================================================\r\nDarwin mbmagenic12 16.5.0 Darwin Kernel Version 16.5.0: Fri Mar  3 16:52:33 PST 2017; root:xnu-3789.51.2~3/RELEASE_X86_64 x86_64\r\n\r\n== check pips ===================================================\r\nnumpy (1.13.1)\r\nprotobuf (3.1.0.post1)\r\ntensorflow (1.2.1)\r\n\r\n== check for virtualenv =========================================\r\nFalse\r\n\r\n== tensorflow import ============================================\r\ntf.VERSION = 1.2.1\r\ntf.GIT_VERSION = v1.2.0-5-g435cdfc\r\ntf.COMPILER_VERSION = v1.2.0-5-g435cdfc\r\nSanity check: array([1], dtype=int32)\r\n\r\n== env ==========================================================\r\nLD_LIBRARY_PATH is unset\r\nDYLD_LIBRARY_PATH is unset\r\n\r\n== nvidia-smi ===================================================\r\n./tf.sh: line 105: nvidia-smi: command not found\r\n\r\n== cuda libs  ===================================================\r\n```\r\n"}