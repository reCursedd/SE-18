{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3789", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3789/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3789/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3789/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/3789", "id": 170990119, "node_id": "MDExOlB1bGxSZXF1ZXN0ODEyMDU1MDk=", "number": 3789, "title": "Fix tensorboard CSV download in Python 3", "user": {"login": "gustavla", "id": 902935, "node_id": "MDQ6VXNlcjkwMjkzNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/902935?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gustavla", "html_url": "https://github.com/gustavla", "followers_url": "https://api.github.com/users/gustavla/followers", "following_url": "https://api.github.com/users/gustavla/following{/other_user}", "gists_url": "https://api.github.com/users/gustavla/gists{/gist_id}", "starred_url": "https://api.github.com/users/gustavla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gustavla/subscriptions", "organizations_url": "https://api.github.com/users/gustavla/orgs", "repos_url": "https://api.github.com/users/gustavla/repos", "events_url": "https://api.github.com/users/gustavla/events{/privacy}", "received_events_url": "https://api.github.com/users/gustavla/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 419840263, "node_id": "MDU6TGFiZWw0MTk4NDAyNjM=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/awaiting%20testing%20(then%20merge)", "name": "awaiting testing (then merge)", "color": "c2e0c6", "default": false}, {"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "decentralion", "id": 1400023, "node_id": "MDQ6VXNlcjE0MDAwMjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1400023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/decentralion", "html_url": "https://github.com/decentralion", "followers_url": "https://api.github.com/users/decentralion/followers", "following_url": "https://api.github.com/users/decentralion/following{/other_user}", "gists_url": "https://api.github.com/users/decentralion/gists{/gist_id}", "starred_url": "https://api.github.com/users/decentralion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/decentralion/subscriptions", "organizations_url": "https://api.github.com/users/decentralion/orgs", "repos_url": "https://api.github.com/users/decentralion/repos", "events_url": "https://api.github.com/users/decentralion/events{/privacy}", "received_events_url": "https://api.github.com/users/decentralion/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "decentralion", "id": 1400023, "node_id": "MDQ6VXNlcjE0MDAwMjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1400023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/decentralion", "html_url": "https://github.com/decentralion", "followers_url": "https://api.github.com/users/decentralion/followers", "following_url": "https://api.github.com/users/decentralion/following{/other_user}", "gists_url": "https://api.github.com/users/decentralion/gists{/gist_id}", "starred_url": "https://api.github.com/users/decentralion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/decentralion/subscriptions", "organizations_url": "https://api.github.com/users/decentralion/orgs", "repos_url": "https://api.github.com/users/decentralion/repos", "events_url": "https://api.github.com/users/decentralion/events{/privacy}", "received_events_url": "https://api.github.com/users/decentralion/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2016-08-13T03:14:33Z", "updated_at": "2016-08-22T21:30:07Z", "closed_at": "2016-08-22T21:30:07Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/3789", "html_url": "https://github.com/tensorflow/tensorflow/pull/3789", "diff_url": "https://github.com/tensorflow/tensorflow/pull/3789.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/3789.patch"}, "body_html": "<p>In Python 3, the <code>csv</code> module cannot be used with <code>six.BytesIO</code> (<code>io.BytesIO</code> in Py3) as demonstrated by this example:</p>\n<pre><code>from six import BytesIO\nimport csv\n\nout = BytesIO()\nwriter = csv.writer(out)\nwriter.writerow(('A', 'B'))\n</code></pre>\n<p>Which under Python 3 gives:</p>\n<pre><code>Traceback (most recent call last):\n  File \"bug.py\", line 6, in &lt;module&gt;\n    writer.writerow(('A', 'B'))\nTypeError: a bytes-like object is required, not 'str'\n</code></pre>\n<p>This same problem happens when downloading CSV files from Tensorboard under Python 3.</p>\n<p>This is a well-documented behavior and the solution is to change to <code>six.StringIO</code> (<a href=\"http://stackoverflow.com/questions/37866883/unable-to-write-byte-like-string-using-csv-writer-in-python3\" rel=\"nofollow\">1</a>, <a href=\"http://stackoverflow.com/questions/9157314/python-write-data-into-csv-format-as-string-not-file?noredirect=1&amp;lq=1\" rel=\"nofollow\">2</a>, <a href=\"http://stackoverflow.com/questions/13120127/how-can-i-use-io-stringio-with-the-csv-module?noredirect=1&amp;lq=1\" rel=\"nofollow\">3</a>). This solution works for both Python 2 and Python 3.</p>\n<p>There was a related problem with <code>BaseHTTPRequestHandler</code> not accepting unicode. This is also addressed in this PR by adding a <code>compat.as_bytes</code> before the <code>wfile.write</code> call.</p>\n<p>Note: I think the <code>BytesIO</code> usage <code>in _send_gzip_response</code> is fine, which is why I did not remove the <code>BytesIO</code> import.</p>", "body_text": "In Python 3, the csv module cannot be used with six.BytesIO (io.BytesIO in Py3) as demonstrated by this example:\nfrom six import BytesIO\nimport csv\n\nout = BytesIO()\nwriter = csv.writer(out)\nwriter.writerow(('A', 'B'))\n\nWhich under Python 3 gives:\nTraceback (most recent call last):\n  File \"bug.py\", line 6, in <module>\n    writer.writerow(('A', 'B'))\nTypeError: a bytes-like object is required, not 'str'\n\nThis same problem happens when downloading CSV files from Tensorboard under Python 3.\nThis is a well-documented behavior and the solution is to change to six.StringIO (1, 2, 3). This solution works for both Python 2 and Python 3.\nThere was a related problem with BaseHTTPRequestHandler not accepting unicode. This is also addressed in this PR by adding a compat.as_bytes before the wfile.write call.\nNote: I think the BytesIO usage in _send_gzip_response is fine, which is why I did not remove the BytesIO import.", "body": "In Python 3, the `csv` module cannot be used with `six.BytesIO` (`io.BytesIO` in Py3) as demonstrated by this example:\n\n```\nfrom six import BytesIO\nimport csv\n\nout = BytesIO()\nwriter = csv.writer(out)\nwriter.writerow(('A', 'B'))\n```\n\nWhich under Python 3 gives:\n\n```\nTraceback (most recent call last):\n  File \"bug.py\", line 6, in <module>\n    writer.writerow(('A', 'B'))\nTypeError: a bytes-like object is required, not 'str'\n```\n\nThis same problem happens when downloading CSV files from Tensorboard under Python 3.\n\nThis is a well-documented behavior and the solution is to change to `six.StringIO` ([1](http://stackoverflow.com/questions/37866883/unable-to-write-byte-like-string-using-csv-writer-in-python3), [2](http://stackoverflow.com/questions/9157314/python-write-data-into-csv-format-as-string-not-file?noredirect=1&lq=1), [3](http://stackoverflow.com/questions/13120127/how-can-i-use-io-stringio-with-the-csv-module?noredirect=1&lq=1)). This solution works for both Python 2 and Python 3.\n\nThere was a related problem with `BaseHTTPRequestHandler` not accepting unicode. This is also addressed in this PR by adding a `compat.as_bytes` before the `wfile.write` call.\n\nNote: I think the `BytesIO` usage `in _send_gzip_response` is fine, which is why I did not remove the `BytesIO` import.\n"}