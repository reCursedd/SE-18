{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2806", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2806/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2806/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2806/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/2806", "id": 159780825, "node_id": "MDU6SXNzdWUxNTk3ODA4MjU=", "number": 2806, "title": "Building TF with custom GCC requires hardcoded ld,nm and as", "user": {"login": "akors", "id": 3023492, "node_id": "MDQ6VXNlcjMwMjM0OTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3023492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akors", "html_url": "https://github.com/akors", "followers_url": "https://api.github.com/users/akors/followers", "following_url": "https://api.github.com/users/akors/following{/other_user}", "gists_url": "https://api.github.com/users/akors/gists{/gist_id}", "starred_url": "https://api.github.com/users/akors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akors/subscriptions", "organizations_url": "https://api.github.com/users/akors/orgs", "repos_url": "https://api.github.com/users/akors/repos", "events_url": "https://api.github.com/users/akors/events{/privacy}", "received_events_url": "https://api.github.com/users/akors/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2016-06-11T16:18:54Z", "updated_at": "2016-11-13T08:34:34Z", "closed_at": "2016-09-01T06:02:25Z", "author_association": "NONE", "body_html": "<p>Hi! I am using Fedora 23 to build TensorFlow with GPU support.</p>\n<p>GPU support requires a specific GCC version, 4.9 for successful compilation. Since this version is not available from the Fedora Package repositories, it has to be compiled from source. Unfortunately, there are a few obstacles using this version with bazel.</p>\n<p>One of those is the following:<br>\nAfter configuring TensorFlow with the self-compiled GCC, and running bazel, the compilation stops with the following message:</p>\n<p><code>gcc: error trying to exec 'as': execvp: No such file or directory</code><br>\nor<br>\n<code>gcc: error trying to exec 'nm': execvp: No such file or directory</code><br>\nor<br>\n<code>gcc: error trying to exec 'ld': execvp: No such file or directory</code></p>\n<p>To work around this, one can compile GCC by hardcoding the paths to those tools, by adding this to the configuration line of GCC:<br>\n<code>--with-ld=/bin/ld --with-nm=/bin/nm --with-as=/usr/bin/as</code></p>\n<p>This does seem rather strange, however, because those programs are on the path, and the custom GCC without bazel is capable of producing working binaries just fine. I feel that in a well-working build system, this kind of hacks should not be necessary.</p>\n<p>This is probably a bazel bug, but since I am compiling TensorFlow with it and I cannot be sure that it's not a TF issue, I am creating this here.<br>\nPlease ping bazel devs as required.</p>", "body_text": "Hi! I am using Fedora 23 to build TensorFlow with GPU support.\nGPU support requires a specific GCC version, 4.9 for successful compilation. Since this version is not available from the Fedora Package repositories, it has to be compiled from source. Unfortunately, there are a few obstacles using this version with bazel.\nOne of those is the following:\nAfter configuring TensorFlow with the self-compiled GCC, and running bazel, the compilation stops with the following message:\ngcc: error trying to exec 'as': execvp: No such file or directory\nor\ngcc: error trying to exec 'nm': execvp: No such file or directory\nor\ngcc: error trying to exec 'ld': execvp: No such file or directory\nTo work around this, one can compile GCC by hardcoding the paths to those tools, by adding this to the configuration line of GCC:\n--with-ld=/bin/ld --with-nm=/bin/nm --with-as=/usr/bin/as\nThis does seem rather strange, however, because those programs are on the path, and the custom GCC without bazel is capable of producing working binaries just fine. I feel that in a well-working build system, this kind of hacks should not be necessary.\nThis is probably a bazel bug, but since I am compiling TensorFlow with it and I cannot be sure that it's not a TF issue, I am creating this here.\nPlease ping bazel devs as required.", "body": "Hi! I am using Fedora 23 to build TensorFlow with GPU support.\n\nGPU support requires a specific GCC version, 4.9 for successful compilation. Since this version is not available from the Fedora Package repositories, it has to be compiled from source. Unfortunately, there are a few obstacles using this version with bazel.\n\nOne of those is the following:\nAfter configuring TensorFlow with the self-compiled GCC, and running bazel, the compilation stops with the following message:\n\n`gcc: error trying to exec 'as': execvp: No such file or directory`\nor\n`gcc: error trying to exec 'nm': execvp: No such file or directory`\nor\n`gcc: error trying to exec 'ld': execvp: No such file or directory`\n\nTo work around this, one can compile GCC by hardcoding the paths to those tools, by adding this to the configuration line of GCC:\n`--with-ld=/bin/ld --with-nm=/bin/nm --with-as=/usr/bin/as`\n\nThis does seem rather strange, however, because those programs are on the path, and the custom GCC without bazel is capable of producing working binaries just fine. I feel that in a well-working build system, this kind of hacks should not be necessary.\n\nThis is probably a bazel bug, but since I am compiling TensorFlow with it and I cannot be sure that it's not a TF issue, I am creating this here.\nPlease ping bazel devs as required.\n"}