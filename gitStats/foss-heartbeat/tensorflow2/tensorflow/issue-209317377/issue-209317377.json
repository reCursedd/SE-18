{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7754", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7754/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7754/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7754/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7754", "id": 209317377, "node_id": "MDU6SXNzdWUyMDkzMTczNzc=", "number": 7754, "title": "tf.split(num_or_size_splits=x,...) fails for x=Dimension(128)", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ekelsen", "id": 2533174, "node_id": "MDQ6VXNlcjI1MzMxNzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2533174?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ekelsen", "html_url": "https://github.com/ekelsen", "followers_url": "https://api.github.com/users/ekelsen/followers", "following_url": "https://api.github.com/users/ekelsen/following{/other_user}", "gists_url": "https://api.github.com/users/ekelsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ekelsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ekelsen/subscriptions", "organizations_url": "https://api.github.com/users/ekelsen/orgs", "repos_url": "https://api.github.com/users/ekelsen/repos", "events_url": "https://api.github.com/users/ekelsen/events{/privacy}", "received_events_url": "https://api.github.com/users/ekelsen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ekelsen", "id": 2533174, "node_id": "MDQ6VXNlcjI1MzMxNzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2533174?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ekelsen", "html_url": "https://github.com/ekelsen", "followers_url": "https://api.github.com/users/ekelsen/followers", "following_url": "https://api.github.com/users/ekelsen/following{/other_user}", "gists_url": "https://api.github.com/users/ekelsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ekelsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ekelsen/subscriptions", "organizations_url": "https://api.github.com/users/ekelsen/orgs", "repos_url": "https://api.github.com/users/ekelsen/repos", "events_url": "https://api.github.com/users/ekelsen/events{/privacy}", "received_events_url": "https://api.github.com/users/ekelsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-02-22T00:38:10Z", "updated_at": "2017-06-16T17:43:23Z", "closed_at": "2017-06-16T17:43:23Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Seen while upgrading our code to TF 1.0, somehow this used to work in 12.1, but in TF 1.0 the following fails with <code>IndexError: list index out of range</code> inside of <code>array_ops.py</code></p>\n<p><code>tf.split(num_or_size_splits=X.get_shape()[1], ...) </code></p>\n<p>Looking at array_ops.py, the relevant logic</p>\n<pre><code>  if isinstance(num_or_size_splits, six.integer_types):\n    return gen_array_ops._split(\n        split_dim=axis, num_split=num_or_size_splits, value=value, name=name)\n  else:\n    size_splits = ops.convert_to_tensor(num_or_size_splits)\n\n</code></pre>\n<p>So <code>Dimension(128)</code> is treated as \"Tensor\" and code fails with <code>IndexError: list index out of range</code> inside <code>array_ops.py</code>. I think it would make more sense if the Tensor path checked if <code>num_or_size_splits</code> was <code>Tensor</code> or convertible to non-scalar Tensor, and then have a catch-all <code>else</code> for all other cases. Or perhaps documentation could be updated to say that this path is taken if <code>num_split</code> is not a scalar, which is what's happening now, despite the documentation implying that this is only for <code>Tensor</code> arguments.</p>\n<p>I would fix this myself, but I already have an outstanding PR, and the current system makes it too painful to switch branches -- <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"201396346\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/6911\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/6911/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/6911\">#6911</a></p>", "body_text": "Seen while upgrading our code to TF 1.0, somehow this used to work in 12.1, but in TF 1.0 the following fails with IndexError: list index out of range inside of array_ops.py\ntf.split(num_or_size_splits=X.get_shape()[1], ...) \nLooking at array_ops.py, the relevant logic\n  if isinstance(num_or_size_splits, six.integer_types):\n    return gen_array_ops._split(\n        split_dim=axis, num_split=num_or_size_splits, value=value, name=name)\n  else:\n    size_splits = ops.convert_to_tensor(num_or_size_splits)\n\n\nSo Dimension(128) is treated as \"Tensor\" and code fails with IndexError: list index out of range inside array_ops.py. I think it would make more sense if the Tensor path checked if num_or_size_splits was Tensor or convertible to non-scalar Tensor, and then have a catch-all else for all other cases. Or perhaps documentation could be updated to say that this path is taken if num_split is not a scalar, which is what's happening now, despite the documentation implying that this is only for Tensor arguments.\nI would fix this myself, but I already have an outstanding PR, and the current system makes it too painful to switch branches -- #6911", "body": "Seen while upgrading our code to TF 1.0, somehow this used to work in 12.1, but in TF 1.0 the following fails with `IndexError: list index out of range` inside of `array_ops.py`\r\n\r\n`tf.split(num_or_size_splits=X.get_shape()[1], ...)\r\n`\r\n\r\nLooking at array_ops.py, the relevant logic\r\n\r\n```\r\n  if isinstance(num_or_size_splits, six.integer_types):\r\n    return gen_array_ops._split(\r\n        split_dim=axis, num_split=num_or_size_splits, value=value, name=name)\r\n  else:\r\n    size_splits = ops.convert_to_tensor(num_or_size_splits)\r\n\r\n```\r\n\r\nSo `Dimension(128)` is treated as \"Tensor\" and code fails with `IndexError: list index out of range` inside `array_ops.py`. I think it would make more sense if the Tensor path checked if `num_or_size_splits` was `Tensor` or convertible to non-scalar Tensor, and then have a catch-all `else` for all other cases. Or perhaps documentation could be updated to say that this path is taken if `num_split` is not a scalar, which is what's happening now, despite the documentation implying that this is only for `Tensor` arguments.\r\n\r\nI would fix this myself, but I already have an outstanding PR, and the current system makes it too painful to switch branches -- https://github.com/tensorflow/tensorflow/issues/6911\r\n"}