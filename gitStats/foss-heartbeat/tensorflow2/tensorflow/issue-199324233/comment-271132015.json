{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/271132015", "html_url": "https://github.com/tensorflow/tensorflow/issues/6706#issuecomment-271132015", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6706", "id": 271132015, "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTEzMjAxNQ==", "user": {"login": "jart", "id": 49262, "node_id": "MDQ6VXNlcjQ5MjYy", "avatar_url": "https://avatars1.githubusercontent.com/u/49262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jart", "html_url": "https://github.com/jart", "followers_url": "https://api.github.com/users/jart/followers", "following_url": "https://api.github.com/users/jart/following{/other_user}", "gists_url": "https://api.github.com/users/jart/gists{/gist_id}", "starred_url": "https://api.github.com/users/jart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jart/subscriptions", "organizations_url": "https://api.github.com/users/jart/orgs", "repos_url": "https://api.github.com/users/jart/repos", "events_url": "https://api.github.com/users/jart/events{/privacy}", "received_events_url": "https://api.github.com/users/jart/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-08T05:56:05Z", "updated_at": "2017-01-08T05:56:05Z", "author_association": "MEMBER", "body_html": "<p>Your problem most likely originated in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"197268722\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/6462\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/6462/hovercard\" href=\"https://github.com/tensorflow/tensorflow/pull/6462\">#6462</a>. I wasn't aware that other Bazel projects were referencing TensorFlow as an external dependency. So it seems fixing this should be much higher on our list of priorities.</p>\n<p>As a workaround, what we can do is add an <code>omit_jpeg</code> parameter to <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/workspace.bzl#L39\">tf_workspace</a> similar to what Closure Rules <a href=\"https://github.com/bazelbuild/rules_closure/blob/master/closure/repositories.bzl\">does</a>. Then you could copy jpeg.BUILD into your codebase, replace <code>@//</code> with <code>@org_tensorflow//</code> and then declare the new_http_archive for jpeg repository yourself. That's the best workaround that I can think of at the moment that doesn't involve patching Bazel.</p>\n<p>If you're willing to use a patched Bazel, I can take a peak into the codebase and see if I can fix the issue referenced above in the next few days.</p>", "body_text": "Your problem most likely originated in #6462. I wasn't aware that other Bazel projects were referencing TensorFlow as an external dependency. So it seems fixing this should be much higher on our list of priorities.\nAs a workaround, what we can do is add an omit_jpeg parameter to tf_workspace similar to what Closure Rules does. Then you could copy jpeg.BUILD into your codebase, replace @// with @org_tensorflow// and then declare the new_http_archive for jpeg repository yourself. That's the best workaround that I can think of at the moment that doesn't involve patching Bazel.\nIf you're willing to use a patched Bazel, I can take a peak into the codebase and see if I can fix the issue referenced above in the next few days.", "body": "Your problem most likely originated in https://github.com/tensorflow/tensorflow/pull/6462. I wasn't aware that other Bazel projects were referencing TensorFlow as an external dependency. So it seems fixing this should be much higher on our list of priorities.\r\n\r\nAs a workaround, what we can do is add an `omit_jpeg` parameter to [tf_workspace](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/workspace.bzl#L39) similar to what Closure Rules [does](https://github.com/bazelbuild/rules_closure/blob/master/closure/repositories.bzl). Then you could copy jpeg.BUILD into your codebase, replace `@//` with `@org_tensorflow//` and then declare the new_http_archive for jpeg repository yourself. That's the best workaround that I can think of at the moment that doesn't involve patching Bazel.\r\n\r\nIf you're willing to use a patched Bazel, I can take a peak into the codebase and see if I can fix the issue referenced above in the next few days."}