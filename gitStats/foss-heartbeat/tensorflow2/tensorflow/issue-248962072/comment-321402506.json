{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/321402506", "html_url": "https://github.com/tensorflow/tensorflow/issues/12133#issuecomment-321402506", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12133", "id": 321402506, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTQwMjUwNg==", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-09T22:48:19Z", "updated_at": "2017-08-09T22:49:19Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5995670\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/borissmidt\">@borissmidt</a> : Thanks for the notes. Some thoughts:</p>\n<ul>\n<li>\n<p>In general, <code>importGraphDef</code> will raise an exception when provided an invalid serialized <code>GraphDef</code> protocol message. It's just that the empty byte array is a valid serialization of an empty graph :). So I think it's working correctly for an empty graph. Are there invalid graphs for which you do not see an exception raised?</p>\n</li>\n<li>\n<p>For the other two, yeah, that seems fine to add. Though, what kinds of inspection were you interested in? You can get tensors by name using something like <a href=\"https://www.tensorflow.org/api_docs/java/reference/org/tensorflow/Graph.html#operation(java.lang.String)\" rel=\"nofollow\"><code>Graph.operation(String name)</code></a>. If you'd want some form of graph traversal, that will require some implementation work, but the underlying C API does have the functions you need to build on (e.g., <a href=\"https://github.com/tensorflow/tensorflow/blob/r1.3/tensorflow/c/c_api.h#L601\"><code>TF_OperationOutputConsumers</code></a>)</p>\n</li>\n</ul>\n<p>We (TensorFlow maintainters) will probably not get to it in the near future, but if anyone would like to contribute a PR, we'd be more than happy to take a look. Just please do outline the proposed additions to the Java API here first before sending the PR with the implementation :)</p>\n<p>Thanks!</p>", "body_text": "@borissmidt : Thanks for the notes. Some thoughts:\n\n\nIn general, importGraphDef will raise an exception when provided an invalid serialized GraphDef protocol message. It's just that the empty byte array is a valid serialization of an empty graph :). So I think it's working correctly for an empty graph. Are there invalid graphs for which you do not see an exception raised?\n\n\nFor the other two, yeah, that seems fine to add. Though, what kinds of inspection were you interested in? You can get tensors by name using something like Graph.operation(String name). If you'd want some form of graph traversal, that will require some implementation work, but the underlying C API does have the functions you need to build on (e.g., TF_OperationOutputConsumers)\n\n\nWe (TensorFlow maintainters) will probably not get to it in the near future, but if anyone would like to contribute a PR, we'd be more than happy to take a look. Just please do outline the proposed additions to the Java API here first before sending the PR with the implementation :)\nThanks!", "body": "@borissmidt : Thanks for the notes. Some thoughts:\r\n\r\n- In general, `importGraphDef` will raise an exception when provided an invalid serialized `GraphDef` protocol message. It's just that the empty byte array is a valid serialization of an empty graph :). So I think it's working correctly for an empty graph. Are there invalid graphs for which you do not see an exception raised?\r\n\r\n- For the other two, yeah, that seems fine to add. Though, what kinds of inspection were you interested in? You can get tensors by name using something like [`Graph.operation(String name)`](https://www.tensorflow.org/api_docs/java/reference/org/tensorflow/Graph.html#operation(java.lang.String)). If you'd want some form of graph traversal, that will require some implementation work, but the underlying C API does have the functions you need to build on (e.g., [`TF_OperationOutputConsumers`](https://github.com/tensorflow/tensorflow/blob/r1.3/tensorflow/c/c_api.h#L601))\r\n\r\nWe (TensorFlow maintainters) will probably not get to it in the near future, but if anyone would like to contribute a PR, we'd be more than happy to take a look. Just please do outline the proposed additions to the Java API here first before sending the PR with the implementation :)\r\n\r\nThanks!"}