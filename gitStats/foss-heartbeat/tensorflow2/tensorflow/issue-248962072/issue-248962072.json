{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12133", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12133/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12133/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12133/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12133", "id": 248962072, "node_id": "MDU6SXNzdWUyNDg5NjIwNzI=", "number": 12133, "title": "[Feature] [Java]: Inspect tensors in a Graph", "user": {"login": "borissmidt", "id": 5995670, "node_id": "MDQ6VXNlcjU5OTU2NzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/5995670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/borissmidt", "html_url": "https://github.com/borissmidt", "followers_url": "https://api.github.com/users/borissmidt/followers", "following_url": "https://api.github.com/users/borissmidt/following{/other_user}", "gists_url": "https://api.github.com/users/borissmidt/gists{/gist_id}", "starred_url": "https://api.github.com/users/borissmidt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/borissmidt/subscriptions", "organizations_url": "https://api.github.com/users/borissmidt/orgs", "repos_url": "https://api.github.com/users/borissmidt/repos", "events_url": "https://api.github.com/users/borissmidt/events{/privacy}", "received_events_url": "https://api.github.com/users/borissmidt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-08-09T08:56:44Z", "updated_at": "2017-08-22T19:36:10Z", "closed_at": "2017-08-22T19:36:10Z", "author_association": "NONE", "body_html": "<p>Dear Tensorflow maintainers,</p>\n<p>First of all i really like it that tensorflow allows easy interop from keras to tensorflow and then allows for interference to Java.</p>\n<p>I have noticed that when you load an invalid graph, for example an empty byte array, then it will just accept it without giving an error. An exception will be thrown when we try to run the graph.</p>\n<p>Thus i would propose two improvements for the tensorflow java API,</p>\n<ul>\n<li>throw an exception when loading an invalide graph.</li>\n<li>add api functionality to inspect the tensors contained in the graph</li>\n</ul>\n<p>I also noticed in the example for java that you wrapped the graph builder in a convenience java class and it seems that this could be implemented in a really clean way in scala, I would gladly offer you my assistance to implement a scala wrapper.</p>\n<p>Kind regards, Boris</p>", "body_text": "Dear Tensorflow maintainers,\nFirst of all i really like it that tensorflow allows easy interop from keras to tensorflow and then allows for interference to Java.\nI have noticed that when you load an invalid graph, for example an empty byte array, then it will just accept it without giving an error. An exception will be thrown when we try to run the graph.\nThus i would propose two improvements for the tensorflow java API,\n\nthrow an exception when loading an invalide graph.\nadd api functionality to inspect the tensors contained in the graph\n\nI also noticed in the example for java that you wrapped the graph builder in a convenience java class and it seems that this could be implemented in a really clean way in scala, I would gladly offer you my assistance to implement a scala wrapper.\nKind regards, Boris", "body": "Dear Tensorflow maintainers,\r\n\r\nFirst of all i really like it that tensorflow allows easy interop from keras to tensorflow and then allows for interference to Java.\r\n\r\nI have noticed that when you load an invalid graph, for example an empty byte array, then it will just accept it without giving an error. An exception will be thrown when we try to run the graph.\r\n\r\nThus i would propose two improvements for the tensorflow java API,\r\n* throw an exception when loading an invalide graph.\r\n* add api functionality to inspect the tensors contained in the graph\r\n\r\nI also noticed in the example for java that you wrapped the graph builder in a convenience java class and it seems that this could be implemented in a really clean way in scala, I would gladly offer you my assistance to implement a scala wrapper. \r\n\r\nKind regards, Boris"}