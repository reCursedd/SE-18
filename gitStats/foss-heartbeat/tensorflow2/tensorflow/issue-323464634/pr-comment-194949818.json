{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/194949818", "pull_request_review_id": 128219759, "id": 194949818, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDk0OTgxOA==", "diff_hunk": "@@ -19,6 +19,7 @@ XLINT_OPTS = [\n     \"-Xlint:-serial\",\n     \"-Xlint:-try\",\n     \"-Xlint:-classfile\", # see b/32750402, go/javac-warnings#classfile\n+    \"-Xlint:-deprecation\", # for exposing deprecated ops", "path": "tensorflow/java/build_defs.bzl", "position": null, "original_position": 4, "commit_id": "6156168877c9eecac04c492178e137c93da4a4b9", "original_commit_id": "744036553bfe691e0e28e23157af9a42802a7c49", "user": {"login": "karllessard", "id": 10109534, "node_id": "MDQ6VXNlcjEwMTA5NTM0", "avatar_url": "https://avatars3.githubusercontent.com/u/10109534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karllessard", "html_url": "https://github.com/karllessard", "followers_url": "https://api.github.com/users/karllessard/followers", "following_url": "https://api.github.com/users/karllessard/following{/other_user}", "gists_url": "https://api.github.com/users/karllessard/gists{/gist_id}", "starred_url": "https://api.github.com/users/karllessard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karllessard/subscriptions", "organizations_url": "https://api.github.com/users/karllessard/orgs", "repos_url": "https://api.github.com/users/karllessard/repos", "events_url": "https://api.github.com/users/karllessard/events{/privacy}", "received_events_url": "https://api.github.com/users/karllessard/received_events", "type": "User", "site_admin": false}, "body": "Mmh, that sounds logical... There might be some thinking to do though on how we gonna handle deprecated ops *after* we guarantee that stability.\r\n\r\nWe will need to keep track of which endpoints were deprecated after the first release and which were deprecated before.\r\n\r\nAlso, maybe we can enable/disable the generation of deprecated ops using an application flag provided by the bazel rule, so we simply turn that switch on when it is the right time to do so. Then I would leave the `-Xlint:-deprecation` flag there so won't fail when we enable it.\r\n\r\nWhat are you thoughts on this?", "created_at": "2018-06-13T03:52:33Z", "updated_at": "2018-06-15T01:13:26Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/19309#discussion_r194949818", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19309", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/194949818"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/19309#discussion_r194949818"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19309"}}, "body_html": "<p>Mmh, that sounds logical... There might be some thinking to do though on how we gonna handle deprecated ops <em>after</em> we guarantee that stability.</p>\n<p>We will need to keep track of which endpoints were deprecated after the first release and which were deprecated before.</p>\n<p>Also, maybe we can enable/disable the generation of deprecated ops using an application flag provided by the bazel rule, so we simply turn that switch on when it is the right time to do so. Then I would leave the <code>-Xlint:-deprecation</code> flag there so won't fail when we enable it.</p>\n<p>What are you thoughts on this?</p>", "body_text": "Mmh, that sounds logical... There might be some thinking to do though on how we gonna handle deprecated ops after we guarantee that stability.\nWe will need to keep track of which endpoints were deprecated after the first release and which were deprecated before.\nAlso, maybe we can enable/disable the generation of deprecated ops using an application flag provided by the bazel rule, so we simply turn that switch on when it is the right time to do so. Then I would leave the -Xlint:-deprecation flag there so won't fail when we enable it.\nWhat are you thoughts on this?", "in_reply_to_id": 194939002}