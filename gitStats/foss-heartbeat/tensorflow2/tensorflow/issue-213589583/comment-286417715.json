{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/286417715", "html_url": "https://github.com/tensorflow/tensorflow/issues/8320#issuecomment-286417715", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8320", "id": 286417715, "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjQxNzcxNQ==", "user": {"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-14T13:17:46Z", "updated_at": "2017-03-14T13:18:52Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6566533\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rosun82\">@rosun82</a> I think we want to go in other direction. We should be removing access to internals from external libraries. This is quite customary for libraries, where the API surface is limited and maintained with an SLA (compatibility guarantees). Internals can be refactored and changed without breaking users.</p>\n<p>An example of not doing this is the Win32 API, and more recently the LLVM API. If you have ever upgraded LLVM, this can be quite painful. And the Win32 API is cluttered with symbols and undocumented behavior that must be honored forever in the future.</p>", "body_text": "@rosun82 I think we want to go in other direction. We should be removing access to internals from external libraries. This is quite customary for libraries, where the API surface is limited and maintained with an SLA (compatibility guarantees). Internals can be refactored and changed without breaking users.\nAn example of not doing this is the Win32 API, and more recently the LLVM API. If you have ever upgraded LLVM, this can be quite painful. And the Win32 API is cluttered with symbols and undocumented behavior that must be honored forever in the future.", "body": "@rosun82 I think we want to go in other direction. We should be removing access to internals from external libraries. This is quite customary for libraries, where the API surface is limited and maintained with an SLA (compatibility guarantees). Internals can be refactored and changed without breaking users.\r\n\r\nAn example of not doing this is the Win32 API, and more recently the LLVM API. If you have ever upgraded LLVM, this can be quite painful. And the Win32 API is cluttered with symbols and undocumented behavior that must be honored forever in the future."}