{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/113729264", "pull_request_review_id": 35143089, "id": 113729264, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMzcyOTI2NA==", "diff_hunk": "@@ -0,0 +1,79 @@\n+# Copyright 2017 The TensorFlow Authors. All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ==============================================================================\n+\n+from __future__ import absolute_import\n+from __future__ import division\n+from __future__ import print_function\n+\n+from tensorflow.python.framework import dtypes\n+from tensorflow.python.framework import ops\n+\n+from tensorflow.python.ops import array_ops\n+from tensorflow.python.ops import math_ops\n+\n+def frames(signal, frame_length, frame_step, name=None):\n+  \"\"\"Frame a signal into overlapping frames.\n+  May be used in front of spectral functions.\n+  \n+  For example:\n+  \n+  ```python\n+  pcm = tf.placeholder(tf.float32, [None, 9152])\n+  frames = tf.contrib.signal.frames(pcm, 512, 180)\n+  magspec = tf.abs(tf.spectral.rfft(frames, [512]))\n+  image = tf.expand_dims(magspec, 3)\n+  ```\n+  \n+  Args:\n+    signal: A `Tensor` of shape [batch_size, signal_length].\n+    frame_length: An `int32` or `int64` `Tensor`. The length of each frame.\n+    frame_step: An `int32` or `int64` `Tensor`. The step between frames.\n+    name: A name for the operation (optional).\n+  \n+  Returns:\n+    A `Tensor` of frames with shape [batch_size, num_frames, frame_length].\n+  \"\"\"\n+  with ops.name_scope(name, \"frames\", [signal, frame_length, frame_step]) as name:\n+    signal = ops.convert_to_tensor(signal, name=\"signal\")\n+    frame_length = ops.convert_to_tensor(frame_length, name=\"frame_length\")\n+    frame_step = ops.convert_to_tensor(frame_step, name=\"frame_step\")\n+    \n+    signal_rank = signal.shape.ndims\n+    \n+    if signal_rank != 2:\n+      raise ValueError(\"expected signal to have rank 2 but was \" + signal_rank)\n+    \n+    signal_length = array_ops.shape(signal)[1]\n+    \n+    num_frames = math_ops.ceil((signal_length - frame_length) / frame_step)\n+    num_frames = 1 + math_ops.cast(num_frames, dtypes.int32)\n+    \n+    pad_length = (num_frames - 1) * frame_step + frame_length\n+    pad_signal = array_ops.pad(signal, [[0, 0], [0, pad_length - signal_length]])", "path": "tensorflow/contrib/signal/python/ops/shape_ops.py", "position": null, "original_position": 64, "commit_id": "40e9dd335712e39e9967e38221ca14096f5f7dab", "original_commit_id": "9cd3098e1b15c9913e84afc64aeabdff81ef2c2e", "user": {"login": "Androbin", "id": 16437156, "node_id": "MDQ6VXNlcjE2NDM3MTU2", "avatar_url": "https://avatars1.githubusercontent.com/u/16437156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Androbin", "html_url": "https://github.com/Androbin", "followers_url": "https://api.github.com/users/Androbin/followers", "following_url": "https://api.github.com/users/Androbin/following{/other_user}", "gists_url": "https://api.github.com/users/Androbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Androbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Androbin/subscriptions", "organizations_url": "https://api.github.com/users/Androbin/orgs", "repos_url": "https://api.github.com/users/Androbin/repos", "events_url": "https://api.github.com/users/Androbin/events{/privacy}", "received_events_url": "https://api.github.com/users/Androbin/received_events", "type": "User", "site_admin": false}, "body": "The length of this line is 81 characters. How would I reasonably wrap this?", "created_at": "2017-04-27T15:33:39Z", "updated_at": "2017-05-01T21:43:22Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/9236#discussion_r113729264", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9236", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/113729264"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/9236#discussion_r113729264"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9236"}}, "body_html": "<p>The length of this line is 81 characters. How would I reasonably wrap this?</p>", "body_text": "The length of this line is 81 characters. How would I reasonably wrap this?"}