{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/111681359", "pull_request_review_id": 32941749, "id": 111681359, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMTY4MTM1OQ==", "diff_hunk": "@@ -1273,6 +1277,57 @@ def transpose(a, perm=None, name=\"transpose\"):\n     return ret\n \n \n+def framesig(sig, frame_len, frame_step, parallel=False, name=\"framesig\"):\n+  \"\"\"Frame a signal into overlapping frames.\n+  May be used in front of spectral functions.\n+  \n+  For example:\n+  \n+  ```python\n+  pcm = tf.placeholder(tf.float32, [None, 9152])\n+  frames = tf.framesig(pcm, 512, 180)\n+  magspec = tf.abs(tf.spectral.rfft(frames, tf.constant(512, shape=[1])))\n+  image = tf.reshape(magspec, [-1, 49, 257, 1])\n+  ```\n+  \n+  Args:\n+    sig: A `Tensor` with `rank = 2`.\n+    frame_len: The length of each frame.\n+    frame_step: The step between frames.\n+    parallel: Whether to use `tf.parallel_stack` or `tf.stack`\n+    name: A name for the operation (optional).\n+  \n+  Returns:\n+    A `Tensor` of frames with shape [batch_size, num_frames, frame_len].\n+  \"\"\"\n+  sig_shape = sig.get_shape()\n+  sig_rank = len(sig_shape)\n+  \n+  if sig_rank != 2:\n+    raise ValueError(\"expected sig to have rank 2 but was \" + sig_rank)\n+  \n+  sig_len = int(sig_shape[1])\n+  \n+  num_frames = 1 + int(math.ceil((1. * sig_len - frame_len) / frame_step))\n+  pad_len = int((num_frames - 1) * frame_step + frame_len)\n+  \n+  with ops.name_scope(name, \"framesig\", [sig]) as name:\n+    if pad_len != sig_len:\n+      pad_sig = ops.pad(sig, [[0, 0], [0, pad_len - sig_len]], name=name)\n+    else:\n+      pad_sig = sig\n+    \n+    frames = []\n+    \n+    for i in xrange(num_frames):", "path": "tensorflow/python/ops/array_ops.py", "position": null, "original_position": 67, "commit_id": "40e9dd335712e39e9967e38221ca14096f5f7dab", "original_commit_id": "d28f0f519d72081d31d5092ebcd7435bcc7d1ac3", "user": {"login": "Androbin", "id": 16437156, "node_id": "MDQ6VXNlcjE2NDM3MTU2", "avatar_url": "https://avatars1.githubusercontent.com/u/16437156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Androbin", "html_url": "https://github.com/Androbin", "followers_url": "https://api.github.com/users/Androbin/followers", "following_url": "https://api.github.com/users/Androbin/following{/other_user}", "gists_url": "https://api.github.com/users/Androbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Androbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Androbin/subscriptions", "organizations_url": "https://api.github.com/users/Androbin/orgs", "repos_url": "https://api.github.com/users/Androbin/repos", "events_url": "https://api.github.com/users/Androbin/events{/privacy}", "received_events_url": "https://api.github.com/users/Androbin/received_events", "type": "User", "site_admin": false}, "body": "Alright, this should now work using `tf.gather`, `tf.tile` and `tf.range`.", "created_at": "2017-04-16T09:33:27Z", "updated_at": "2017-05-01T21:43:22Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/9236#discussion_r111681359", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9236", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/111681359"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/9236#discussion_r111681359"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9236"}}, "body_html": "<p>Alright, this should now work using <code>tf.gather</code>, <code>tf.tile</code> and <code>tf.range</code>.</p>", "body_text": "Alright, this should now work using tf.gather, tf.tile and tf.range.", "in_reply_to_id": 111677331}