{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/258939298", "html_url": "https://github.com/tensorflow/tensorflow/issues/5448#issuecomment-258939298", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5448", "id": 258939298, "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODkzOTI5OA==", "user": {"login": "ramnath-k", "id": 2484842, "node_id": "MDQ6VXNlcjI0ODQ4NDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2484842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ramnath-k", "html_url": "https://github.com/ramnath-k", "followers_url": "https://api.github.com/users/ramnath-k/followers", "following_url": "https://api.github.com/users/ramnath-k/following{/other_user}", "gists_url": "https://api.github.com/users/ramnath-k/gists{/gist_id}", "starred_url": "https://api.github.com/users/ramnath-k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ramnath-k/subscriptions", "organizations_url": "https://api.github.com/users/ramnath-k/orgs", "repos_url": "https://api.github.com/users/ramnath-k/repos", "events_url": "https://api.github.com/users/ramnath-k/events{/privacy}", "received_events_url": "https://api.github.com/users/ramnath-k/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-07T19:37:42Z", "updated_at": "2016-11-07T19:37:42Z", "author_association": "NONE", "body_html": "<p>Thanks <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a><br>\nI tried out your suggestion to move the tensorflow code over to child processes.<br>\nFirst up I moved the saving and restoring code to another module as in this <a href=\"https://gist.github.com/ramnath-k/2990b46b84278e5e24919beb44968a00\">basic_saver_restore.py</a><br>\nThen I called the saver and restore as before using multiprocessing as in <a href=\"https://gist.github.com/ramnath-k/fa25696f3f1def6ba32855f612353914\">multi_process_saver_restore.py</a><br>\nIn basic_saver_restore, I put a module level variable server equal to create_local_server (which I assume creates a child process to run the session right?).<br>\nThis seems to fix the hang I was getting.<br>\nWill this approach always work? Or is it that I am only fixing some issues but not all with this approach?</p>\n<p>Moving to Python 3 is something I will attempt later.</p>\n<p>My actual hang occurs when a Hive launches a python user defined function which calls a restore tensorflow model function. Do you think this approach of having a module level create_local_server fix such an issue also?</p>", "body_text": "Thanks @mrry\nI tried out your suggestion to move the tensorflow code over to child processes.\nFirst up I moved the saving and restoring code to another module as in this basic_saver_restore.py\nThen I called the saver and restore as before using multiprocessing as in multi_process_saver_restore.py\nIn basic_saver_restore, I put a module level variable server equal to create_local_server (which I assume creates a child process to run the session right?).\nThis seems to fix the hang I was getting.\nWill this approach always work? Or is it that I am only fixing some issues but not all with this approach?\nMoving to Python 3 is something I will attempt later.\nMy actual hang occurs when a Hive launches a python user defined function which calls a restore tensorflow model function. Do you think this approach of having a module level create_local_server fix such an issue also?", "body": "Thanks @mrry \nI tried out your suggestion to move the tensorflow code over to child processes. \nFirst up I moved the saving and restoring code to another module as in this [basic_saver_restore.py](https://gist.github.com/ramnath-k/2990b46b84278e5e24919beb44968a00)\nThen I called the saver and restore as before using multiprocessing as in [multi_process_saver_restore.py](https://gist.github.com/ramnath-k/fa25696f3f1def6ba32855f612353914)\nIn basic_saver_restore, I put a module level variable server equal to create_local_server (which I assume creates a child process to run the session right?). \nThis seems to fix the hang I was getting. \nWill this approach always work? Or is it that I am only fixing some issues but not all with this approach?\n\nMoving to Python 3 is something I will attempt later.\n\nMy actual hang occurs when a Hive launches a python user defined function which calls a restore tensorflow model function. Do you think this approach of having a module level create_local_server fix such an issue also? \n"}