{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/400889295", "html_url": "https://github.com/tensorflow/tensorflow/issues/20338#issuecomment-400889295", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20338", "id": 400889295, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDg4OTI5NQ==", "user": {"login": "David-Mao", "id": 12476624, "node_id": "MDQ6VXNlcjEyNDc2NjI0", "avatar_url": "https://avatars3.githubusercontent.com/u/12476624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/David-Mao", "html_url": "https://github.com/David-Mao", "followers_url": "https://api.github.com/users/David-Mao/followers", "following_url": "https://api.github.com/users/David-Mao/following{/other_user}", "gists_url": "https://api.github.com/users/David-Mao/gists{/gist_id}", "starred_url": "https://api.github.com/users/David-Mao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/David-Mao/subscriptions", "organizations_url": "https://api.github.com/users/David-Mao/orgs", "repos_url": "https://api.github.com/users/David-Mao/repos", "events_url": "https://api.github.com/users/David-Mao/events{/privacy}", "received_events_url": "https://api.github.com/users/David-Mao/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-28T02:17:53Z", "updated_at": "2018-06-28T02:26:34Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=19201532\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zakizhou\">@zakizhou</a><br>\nBut if I'm not using a custom submodel, say, e.g. I'm using a standard layer:</p>\n<pre><code>tf.enable_eager_execution()\ndef MyModel():\n    input = tf.keras.Input(shape=(3, 3))\n    m = tf.keras.layers.Dense(3)\n    # replace the above line to m = SubModel() would make this code not working.\n    output = m(input)\n    return tf.keras.Model(input, output)\nm = MyModel()\nm(tf.constant(tf.ones([3, 3])))\n</code></pre>\n<p>This works pretty well. So at least in this case keras.Input is compatible with eager execution. If this can work, I don't see any fundamanetal reason to prevent the custom submodel from working.</p>\n<p>Reply to your other comment on the suggestion of the subclassing code:</p>\n<p>Yeah that's basically what I'm doing now (which I don't like). I don't believe that in Keras's vision using <code>setattr</code> is the best practice...</p>", "body_text": "@zakizhou\nBut if I'm not using a custom submodel, say, e.g. I'm using a standard layer:\ntf.enable_eager_execution()\ndef MyModel():\n    input = tf.keras.Input(shape=(3, 3))\n    m = tf.keras.layers.Dense(3)\n    # replace the above line to m = SubModel() would make this code not working.\n    output = m(input)\n    return tf.keras.Model(input, output)\nm = MyModel()\nm(tf.constant(tf.ones([3, 3])))\n\nThis works pretty well. So at least in this case keras.Input is compatible with eager execution. If this can work, I don't see any fundamanetal reason to prevent the custom submodel from working.\nReply to your other comment on the suggestion of the subclassing code:\nYeah that's basically what I'm doing now (which I don't like). I don't believe that in Keras's vision using setattr is the best practice...", "body": "@zakizhou \r\nBut if I'm not using a custom submodel, say, e.g. I'm using a standard layer:\r\n```\r\ntf.enable_eager_execution()\r\ndef MyModel():\r\n    input = tf.keras.Input(shape=(3, 3))\r\n    m = tf.keras.layers.Dense(3)\r\n    # replace the above line to m = SubModel() would make this code not working.\r\n    output = m(input)\r\n    return tf.keras.Model(input, output)\r\nm = MyModel()\r\nm(tf.constant(tf.ones([3, 3])))\r\n```\r\nThis works pretty well. So at least in this case keras.Input is compatible with eager execution. If this can work, I don't see any fundamanetal reason to prevent the custom submodel from working.\r\n\r\nReply to your other comment on the suggestion of the subclassing code:\r\n\r\nYeah that's basically what I'm doing now (which I don't like). I don't believe that in Keras's vision using `setattr` is the best practice..."}