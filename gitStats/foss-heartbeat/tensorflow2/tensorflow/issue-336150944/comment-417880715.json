{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/417880715", "html_url": "https://github.com/tensorflow/tensorflow/issues/20338#issuecomment-417880715", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20338", "id": 417880715, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzg4MDcxNQ==", "user": {"login": "adityabalu", "id": 28840706, "node_id": "MDQ6VXNlcjI4ODQwNzA2", "avatar_url": "https://avatars0.githubusercontent.com/u/28840706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adityabalu", "html_url": "https://github.com/adityabalu", "followers_url": "https://api.github.com/users/adityabalu/followers", "following_url": "https://api.github.com/users/adityabalu/following{/other_user}", "gists_url": "https://api.github.com/users/adityabalu/gists{/gist_id}", "starred_url": "https://api.github.com/users/adityabalu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adityabalu/subscriptions", "organizations_url": "https://api.github.com/users/adityabalu/orgs", "repos_url": "https://api.github.com/users/adityabalu/repos", "events_url": "https://api.github.com/users/adityabalu/events{/privacy}", "received_events_url": "https://api.github.com/users/adityabalu/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-01T19:07:46Z", "updated_at": "2018-09-01T19:07:46Z", "author_association": "NONE", "body_html": "<p>I have a same issue. I am trying to use the tf.estimator for the training of the network. However, model.fit works perfectly fine...</p>\n<p>Here is the code for what I am trying to do:<br>\nmodel_params = {<br>\n\"batch_size\": args.batch_size,<br>\n\"num_conv_filters\" : [8, 16, 32],<br>\n\"conv_filter_sizes\" : [5, 5, 3],<br>\n\"code_layer_size\" : 16,<br>\n\"num_deconv_filters\" : [8, 8, 4, 1],<br>\n\"deconv_filter_sizes\" : [9, 7, 5, 4],<br>\n\"deconv_start_shape\" : [3,3,3,3],<br>\n\"useMaxPool\" : True,<br>\n\"useBN\" : True,<br>\n\"activation\" : tf.nn.relu,<br>\n\"epochs\": args.epochs,<br>\n\"backend\": args.backend,<br>\n\"padded_resolution\":args.padded_resolution,<br>\n\"resolution\": args.resolution,<br>\n\"do_plot\": args.do_plot,<br>\n\"gpu\": args.gpu,<br>\n\"input_shape\":data.inputs.shape,<br>\n\"output_shape\":data.outputs.shape,<br>\n}</p>\n<p>tf.logging.info(\"loading model\")<br>\nae = AutoEncoder(**model_params)</p>\n<p>tf.logging.info(\"compiling model\")<br>\nae.compile(optimizer = tf.train.AdamOptimizer(),<br>\nloss = tf.losses.mean_squared_error, metrics=['accuracy'])<br>\ntf.logging.info(\"training model\")<br>\nae.fit(data.inputs, data.outputs, args.batch_size, epochs=args.epochs)<br>\nae.summary()</p>\n<p>strategy = tf.contrib.distribute.MirroredStrategy()<br>\nconfig = tf.estimator.RunConfig(train_distribute=strategy)<br>\nkeras_estimator = tf.keras.estimator.model_to_estimator(<br>\nkeras_model=ae,<br>\nconfig=config,<br>\nmodel_dir='/tmp/model_dir')</p>\n<p>keras_estimator.train(input_fn=input_fn(), steps=10)</p>", "body_text": "I have a same issue. I am trying to use the tf.estimator for the training of the network. However, model.fit works perfectly fine...\nHere is the code for what I am trying to do:\nmodel_params = {\n\"batch_size\": args.batch_size,\n\"num_conv_filters\" : [8, 16, 32],\n\"conv_filter_sizes\" : [5, 5, 3],\n\"code_layer_size\" : 16,\n\"num_deconv_filters\" : [8, 8, 4, 1],\n\"deconv_filter_sizes\" : [9, 7, 5, 4],\n\"deconv_start_shape\" : [3,3,3,3],\n\"useMaxPool\" : True,\n\"useBN\" : True,\n\"activation\" : tf.nn.relu,\n\"epochs\": args.epochs,\n\"backend\": args.backend,\n\"padded_resolution\":args.padded_resolution,\n\"resolution\": args.resolution,\n\"do_plot\": args.do_plot,\n\"gpu\": args.gpu,\n\"input_shape\":data.inputs.shape,\n\"output_shape\":data.outputs.shape,\n}\ntf.logging.info(\"loading model\")\nae = AutoEncoder(**model_params)\ntf.logging.info(\"compiling model\")\nae.compile(optimizer = tf.train.AdamOptimizer(),\nloss = tf.losses.mean_squared_error, metrics=['accuracy'])\ntf.logging.info(\"training model\")\nae.fit(data.inputs, data.outputs, args.batch_size, epochs=args.epochs)\nae.summary()\nstrategy = tf.contrib.distribute.MirroredStrategy()\nconfig = tf.estimator.RunConfig(train_distribute=strategy)\nkeras_estimator = tf.keras.estimator.model_to_estimator(\nkeras_model=ae,\nconfig=config,\nmodel_dir='/tmp/model_dir')\nkeras_estimator.train(input_fn=input_fn(), steps=10)", "body": "I have a same issue. I am trying to use the tf.estimator for the training of the network. However, model.fit works perfectly fine...\r\n\r\nHere is the code for what I am trying to do:\r\nmodel_params = {\r\n        \"batch_size\": args.batch_size,\r\n        \"num_conv_filters\" : [8, 16, 32],\r\n        \"conv_filter_sizes\" : [5, 5, 3],\r\n        \"code_layer_size\" : 16,\r\n        \"num_deconv_filters\" : [8, 8, 4, 1],\r\n        \"deconv_filter_sizes\" : [9, 7, 5, 4],\r\n        \"deconv_start_shape\" : [3,3,3,3],\r\n        \"useMaxPool\" : True,\r\n        \"useBN\" : True,\r\n        \"activation\" : tf.nn.relu,\r\n        \"epochs\": args.epochs,\r\n        \"backend\": args.backend,\r\n        \"padded_resolution\":args.padded_resolution,\r\n        \"resolution\": args.resolution,\r\n        \"do_plot\": args.do_plot,\r\n        \"gpu\": args.gpu,\r\n        \"input_shape\":data.inputs.shape,\r\n        \"output_shape\":data.outputs.shape,\r\n        }\r\n\r\n\r\ntf.logging.info(\"loading model\")\r\nae = AutoEncoder(**model_params)\r\n\r\ntf.logging.info(\"compiling model\")\r\nae.compile(optimizer = tf.train.AdamOptimizer(),\r\n    loss = tf.losses.mean_squared_error, metrics=['accuracy'])\r\ntf.logging.info(\"training model\")\r\nae.fit(data.inputs, data.outputs, args.batch_size, epochs=args.epochs)\r\nae.summary()\r\n\r\nstrategy = tf.contrib.distribute.MirroredStrategy()\r\nconfig = tf.estimator.RunConfig(train_distribute=strategy)\r\nkeras_estimator = tf.keras.estimator.model_to_estimator(\r\n  keras_model=ae,\r\n  config=config,\r\n  model_dir='/tmp/model_dir')\r\n\r\nkeras_estimator.train(input_fn=input_fn(), steps=10)\r\n"}