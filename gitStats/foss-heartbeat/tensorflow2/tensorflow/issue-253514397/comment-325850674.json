{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/325850674", "html_url": "https://github.com/tensorflow/tensorflow/pull/12668#issuecomment-325850674", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12668", "id": 325850674, "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTg1MDY3NA==", "user": {"login": "resec", "id": 4277636, "node_id": "MDQ6VXNlcjQyNzc2MzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/4277636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/resec", "html_url": "https://github.com/resec", "followers_url": "https://api.github.com/users/resec/followers", "following_url": "https://api.github.com/users/resec/following{/other_user}", "gists_url": "https://api.github.com/users/resec/gists{/gist_id}", "starred_url": "https://api.github.com/users/resec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/resec/subscriptions", "organizations_url": "https://api.github.com/users/resec/orgs", "repos_url": "https://api.github.com/users/resec/repos", "events_url": "https://api.github.com/users/resec/events{/privacy}", "received_events_url": "https://api.github.com/users/resec/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-30T01:24:49Z", "updated_at": "2017-08-30T01:24:49Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16018\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/asimshankar\">@asimshankar</a> Thanks for your patience, I think for the moment I would stick with reflection to use this constructor. And I will really go trying the <code>DirectByteBuffers</code>.</p>\n<p>Once again, here is just sharing my use case, and actually I was trying my luck with this PR(to see if people can accept the idea). I think \"big model\" is a relatively common case, and Tensorflow Android API is now relying on Java API, \"model security\" problem is also be an important concern in mobile deployment.</p>\n<p>So I do hope in Android/Java API, Tensorflow will have better support for this in the future.</p>\n<p>I am fine with closing this PR. Once again, thanks.</p>", "body_text": "@asimshankar Thanks for your patience, I think for the moment I would stick with reflection to use this constructor. And I will really go trying the DirectByteBuffers.\nOnce again, here is just sharing my use case, and actually I was trying my luck with this PR(to see if people can accept the idea). I think \"big model\" is a relatively common case, and Tensorflow Android API is now relying on Java API, \"model security\" problem is also be an important concern in mobile deployment.\nSo I do hope in Android/Java API, Tensorflow will have better support for this in the future.\nI am fine with closing this PR. Once again, thanks.", "body": "@asimshankar Thanks for your patience, I think for the moment I would stick with reflection to use this constructor. And I will really go trying the `DirectByteBuffers`.\r\n\r\nOnce again, here is just sharing my use case, and actually I was trying my luck with this PR(to see if people can accept the idea). I think \"big model\" is a relatively common case, and Tensorflow Android API is now relying on Java API, \"model security\" problem is also be an important concern in mobile deployment. \r\n\r\nSo I do hope in Android/Java API, Tensorflow will have better support for this in the future.\r\n\r\nI am fine with closing this PR. Once again, thanks."}