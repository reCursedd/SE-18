{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/307226521", "html_url": "https://github.com/tensorflow/tensorflow/issues/10535#issuecomment-307226521", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10535", "id": 307226521, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzIyNjUyMQ==", "user": {"login": "laoreja", "id": 9369143, "node_id": "MDQ6VXNlcjkzNjkxNDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/9369143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laoreja", "html_url": "https://github.com/laoreja", "followers_url": "https://api.github.com/users/laoreja/followers", "following_url": "https://api.github.com/users/laoreja/following{/other_user}", "gists_url": "https://api.github.com/users/laoreja/gists{/gist_id}", "starred_url": "https://api.github.com/users/laoreja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laoreja/subscriptions", "organizations_url": "https://api.github.com/users/laoreja/orgs", "repos_url": "https://api.github.com/users/laoreja/repos", "events_url": "https://api.github.com/users/laoreja/events{/privacy}", "received_events_url": "https://api.github.com/users/laoreja/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-08T21:02:19Z", "updated_at": "2017-06-08T21:02:19Z", "author_association": "NONE", "body_html": "<p>My program did not give any output, so I made an debug_op_list, and add some debug ops after each layer of the model, like:</p>\n<div class=\"highlight highlight-source-python\"><pre>      <span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> six.moves.range(<span class=\"pl-c1\">4</span>):\n        x, layer_idx <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>._regularization_upsample(x, stored_features[<span class=\"pl-k\">-</span>i<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>], <span class=\"pl-c1\">3</span>, transposed_in_filters[i], transposed_out_filters[i], <span class=\"pl-c1\">self</span>._stride_3d_arr(<span class=\"pl-c1\">2</span>), layer_idx)\n        <span class=\"pl-c1\">self</span>.debug_op_list.append(tf.shape(x))\n      \n      <span class=\"pl-k\">with</span> tf.variable_scope(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>layer_<span class=\"pl-pds\">'</span></span><span class=\"pl-k\">+</span><span class=\"pl-c1\">str</span>(layer_idx)):\n        layer_idx <span class=\"pl-k\">+=</span> <span class=\"pl-c1\">1</span>\n        input_shape <span class=\"pl-k\">=</span> tf.shape(<span class=\"pl-c1\">self</span>.gt_disparity)\n        x <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>._conv3d_trans(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>conv_trans<span class=\"pl-pds\">'</span></span>, x, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">32</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">self</span>._stride_3d_arr(<span class=\"pl-c1\">2</span>), [input_shape[<span class=\"pl-c1\">0</span>], <span class=\"pl-c1\">self</span>.hps.max_disparity<span class=\"pl-k\">+</span><span class=\"pl-c1\">1</span>, input_shape[<span class=\"pl-c1\">1</span>], input_shape[<span class=\"pl-c1\">2</span>], <span class=\"pl-c1\">1</span>])\n        <span class=\"pl-c1\">self</span>.debug_op_list.append(tf.shape(x))</pre></div>\n<p>and then do</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">for</span> debug_op <span class=\"pl-k\">in</span> model.debug_op_list:\n  sess.run(debug_op)</pre></div>\n<p>The debug_op before this layer runs quickly, and I need to wait for about ten minutes to see the output of the debug_op right after this layer.</p>", "body_text": "My program did not give any output, so I made an debug_op_list, and add some debug ops after each layer of the model, like:\n      for i in six.moves.range(4):\n        x, layer_idx = self._regularization_upsample(x, stored_features[-i-1], 3, transposed_in_filters[i], transposed_out_filters[i], self._stride_3d_arr(2), layer_idx)\n        self.debug_op_list.append(tf.shape(x))\n      \n      with tf.variable_scope('layer_'+str(layer_idx)):\n        layer_idx += 1\n        input_shape = tf.shape(self.gt_disparity)\n        x = self._conv3d_trans('conv_trans', x, 3, 32, 1, self._stride_3d_arr(2), [input_shape[0], self.hps.max_disparity+1, input_shape[1], input_shape[2], 1])\n        self.debug_op_list.append(tf.shape(x))\nand then do\nfor debug_op in model.debug_op_list:\n  sess.run(debug_op)\nThe debug_op before this layer runs quickly, and I need to wait for about ten minutes to see the output of the debug_op right after this layer.", "body": "My program did not give any output, so I made an debug_op_list, and add some debug ops after each layer of the model, like:\r\n```python\r\n      for i in six.moves.range(4):\r\n        x, layer_idx = self._regularization_upsample(x, stored_features[-i-1], 3, transposed_in_filters[i], transposed_out_filters[i], self._stride_3d_arr(2), layer_idx)\r\n        self.debug_op_list.append(tf.shape(x))\r\n      \r\n      with tf.variable_scope('layer_'+str(layer_idx)):\r\n        layer_idx += 1\r\n        input_shape = tf.shape(self.gt_disparity)\r\n        x = self._conv3d_trans('conv_trans', x, 3, 32, 1, self._stride_3d_arr(2), [input_shape[0], self.hps.max_disparity+1, input_shape[1], input_shape[2], 1])\r\n        self.debug_op_list.append(tf.shape(x))\r\n```\r\nand then do\r\n```python\r\nfor debug_op in model.debug_op_list:\r\n  sess.run(debug_op)\r\n```\r\n\r\nThe debug_op before this layer runs quickly, and I need to wait for about ten minutes to see the output of the debug_op right after this layer."}