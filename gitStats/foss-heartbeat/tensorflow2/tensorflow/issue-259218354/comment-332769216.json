{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/332769216", "html_url": "https://github.com/tensorflow/tensorflow/issues/13190#issuecomment-332769216", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13190", "id": 332769216, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjc2OTIxNg==", "user": {"login": "suharshs", "id": 1450614, "node_id": "MDQ6VXNlcjE0NTA2MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1450614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suharshs", "html_url": "https://github.com/suharshs", "followers_url": "https://api.github.com/users/suharshs/followers", "following_url": "https://api.github.com/users/suharshs/following{/other_user}", "gists_url": "https://api.github.com/users/suharshs/gists{/gist_id}", "starred_url": "https://api.github.com/users/suharshs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suharshs/subscriptions", "organizations_url": "https://api.github.com/users/suharshs/orgs", "repos_url": "https://api.github.com/users/suharshs/repos", "events_url": "https://api.github.com/users/suharshs/events{/privacy}", "received_events_url": "https://api.github.com/users/suharshs/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-28T08:39:38Z", "updated_at": "2017-09-28T08:42:29Z", "author_association": "MEMBER", "body_html": "<p>This indeed seems strange. I can reproduce this in python as well along with some other examples to try to narrow it down.</p>\n<pre><code>import tensorflow as tf\n\nx = tf.placeholder(tf.float32)\n\ny0 = x * x\ny1 = y0 * y0\n# y2 == y3 == y4 == y5, but they y2 and y3 are incorrect.\ny2 = y1 * y1\ny3 = y0 * y0 * y0 * y0\ny4 = x * x * x * x * x * x * x * x\ny5 = tf.pow(y0, 4)\n\nga = tf.gradients([y0], x) # Correct : 6.0\ngb = tf.gradients([y1], x) # Correct : 108.0\ngc = tf.gradients([y2], x) # Correct : 17496.0\ngd = tf.gradients([y3], x) # Correct : 17496.0\nge = tf.gradients([y4], x) # Correct : 17496.0\ngf = tf.gradients([y5], x) # Correct : 17496.0\n\ng0 = tf.gradients([y0, y1], x) # Correct       : 114.0\ng1 = tf.gradients([y1, y2], x) # Correct       : 17604.0\ng2 = tf.gradients([y0, y2], x) # Incorrect     : 6.0\ng3 = tf.gradients([y0, y3], x) # Incorrect     : 4380.0\ng4 = tf.gradients([y0, y4], x) # Correct       : 17502.0\ng5 = tf.gradients([y0, y5], x) # Correct       : 17502.0\ng6 = tf.gradients([y0, y1, y2], x) # Correct   : 17610.0\n\nwith tf.Session() as sess:\n    print(sess.run([ga, gb, gc, gd, gf], feed_dict={x: 3.0}))\n    print(sess.run([g0, g1, g2, g3, g4, g5, g6], feed_dict={x: 3.0}))\n</code></pre>\n<p>It seems that building up x ^ 8 by using intermediate tensors via multiplication results in errors. Curiously using tf.pow(y0) vs y0* y0 * y0 *y0 results in different gradients when paired with y0. I don't know the issue yet, but will take another look tomorrow.</p>", "body_text": "This indeed seems strange. I can reproduce this in python as well along with some other examples to try to narrow it down.\nimport tensorflow as tf\n\nx = tf.placeholder(tf.float32)\n\ny0 = x * x\ny1 = y0 * y0\n# y2 == y3 == y4 == y5, but they y2 and y3 are incorrect.\ny2 = y1 * y1\ny3 = y0 * y0 * y0 * y0\ny4 = x * x * x * x * x * x * x * x\ny5 = tf.pow(y0, 4)\n\nga = tf.gradients([y0], x) # Correct : 6.0\ngb = tf.gradients([y1], x) # Correct : 108.0\ngc = tf.gradients([y2], x) # Correct : 17496.0\ngd = tf.gradients([y3], x) # Correct : 17496.0\nge = tf.gradients([y4], x) # Correct : 17496.0\ngf = tf.gradients([y5], x) # Correct : 17496.0\n\ng0 = tf.gradients([y0, y1], x) # Correct       : 114.0\ng1 = tf.gradients([y1, y2], x) # Correct       : 17604.0\ng2 = tf.gradients([y0, y2], x) # Incorrect     : 6.0\ng3 = tf.gradients([y0, y3], x) # Incorrect     : 4380.0\ng4 = tf.gradients([y0, y4], x) # Correct       : 17502.0\ng5 = tf.gradients([y0, y5], x) # Correct       : 17502.0\ng6 = tf.gradients([y0, y1, y2], x) # Correct   : 17610.0\n\nwith tf.Session() as sess:\n    print(sess.run([ga, gb, gc, gd, gf], feed_dict={x: 3.0}))\n    print(sess.run([g0, g1, g2, g3, g4, g5, g6], feed_dict={x: 3.0}))\n\nIt seems that building up x ^ 8 by using intermediate tensors via multiplication results in errors. Curiously using tf.pow(y0) vs y0* y0 * y0 *y0 results in different gradients when paired with y0. I don't know the issue yet, but will take another look tomorrow.", "body": "This indeed seems strange. I can reproduce this in python as well along with some other examples to try to narrow it down.\r\n\r\n```\r\nimport tensorflow as tf\r\n\r\nx = tf.placeholder(tf.float32)\r\n\r\ny0 = x * x\r\ny1 = y0 * y0\r\n# y2 == y3 == y4 == y5, but they y2 and y3 are incorrect.\r\ny2 = y1 * y1\r\ny3 = y0 * y0 * y0 * y0\r\ny4 = x * x * x * x * x * x * x * x\r\ny5 = tf.pow(y0, 4)\r\n\r\nga = tf.gradients([y0], x) # Correct : 6.0\r\ngb = tf.gradients([y1], x) # Correct : 108.0\r\ngc = tf.gradients([y2], x) # Correct : 17496.0\r\ngd = tf.gradients([y3], x) # Correct : 17496.0\r\nge = tf.gradients([y4], x) # Correct : 17496.0\r\ngf = tf.gradients([y5], x) # Correct : 17496.0\r\n\r\ng0 = tf.gradients([y0, y1], x) # Correct       : 114.0\r\ng1 = tf.gradients([y1, y2], x) # Correct       : 17604.0\r\ng2 = tf.gradients([y0, y2], x) # Incorrect     : 6.0\r\ng3 = tf.gradients([y0, y3], x) # Incorrect     : 4380.0\r\ng4 = tf.gradients([y0, y4], x) # Correct       : 17502.0\r\ng5 = tf.gradients([y0, y5], x) # Correct       : 17502.0\r\ng6 = tf.gradients([y0, y1, y2], x) # Correct   : 17610.0\r\n\r\nwith tf.Session() as sess:\r\n    print(sess.run([ga, gb, gc, gd, gf], feed_dict={x: 3.0}))\r\n    print(sess.run([g0, g1, g2, g3, g4, g5, g6], feed_dict={x: 3.0}))\r\n```\r\n\r\nIt seems that building up x ^ 8 by using intermediate tensors via multiplication results in errors. Curiously using tf.pow(y0) vs y0* y0 * y0 *y0 results in different gradients when paired with y0. I don't know the issue yet, but will take another look tomorrow. "}