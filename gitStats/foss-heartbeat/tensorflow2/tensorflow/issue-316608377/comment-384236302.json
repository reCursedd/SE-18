{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/384236302", "html_url": "https://github.com/tensorflow/tensorflow/issues/18781#issuecomment-384236302", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18781", "id": 384236302, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDIzNjMwMg==", "user": {"login": "facaiy", "id": 1112263, "node_id": "MDQ6VXNlcjExMTIyNjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1112263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/facaiy", "html_url": "https://github.com/facaiy", "followers_url": "https://api.github.com/users/facaiy/followers", "following_url": "https://api.github.com/users/facaiy/following{/other_user}", "gists_url": "https://api.github.com/users/facaiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/facaiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/facaiy/subscriptions", "organizations_url": "https://api.github.com/users/facaiy/orgs", "repos_url": "https://api.github.com/users/facaiy/repos", "events_url": "https://api.github.com/users/facaiy/events{/privacy}", "received_events_url": "https://api.github.com/users/facaiy/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-25T10:13:34Z", "updated_at": "2018-04-25T10:24:02Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9438971\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/sleighsoft\">@sleighsoft</a>  As explained before, the argument is designed for re-entering case at the first: we can reenter variable_scope and its original name scope clearly:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">with</span> tf.variable_scope(s, <span class=\"pl-v\">auxiliary_name_scope</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>) <span class=\"pl-k\">as</span> ss:\n     <span class=\"pl-k\">with</span> tf.name_scope(ss.original_name_scope) <span class=\"pl-k\">as</span> n:\n          <span class=\"pl-c\"><span class=\"pl-c\">#</span> do something</span></pre></div>\n<p>Let's clarify your request: specify the argument only once, like:</p>\n<div class=\"highlight highlight-source-python\"><pre>  <span class=\"pl-k\">with</span> tf.variable_scope(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>vs_outer<span class=\"pl-pds\">'</span></span>,\n                         <span class=\"pl-v\">auxiliary_name_scope</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>,\n                         <span class=\"pl-v\">reuse</span><span class=\"pl-k\">=</span>tf.<span class=\"pl-c1\">AUTO_REUSE</span>) <span class=\"pl-k\">as</span> <span class=\"pl-c1\">VSO</span>:\n    <span class=\"pl-k\">pass</span>\n\n  <span class=\"pl-k\">with</span> tf.name_scope(<span class=\"pl-c1\">NSO</span>):\n    <span class=\"pl-k\">with</span> tf.name_scope(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>ns_inner_1<span class=\"pl-pds\">'</span></span>):\n      <span class=\"pl-k\">with</span> tf.variable_scope(<span class=\"pl-c1\">VSO</span>):\n        <span class=\"pl-c1\">print</span>((tf.get_variable(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>var<span class=\"pl-pds\">'</span></span>, [<span class=\"pl-c1\">1</span>]), tf.constant(<span class=\"pl-c1\">1.0</span>, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>const<span class=\"pl-pds\">'</span></span>)))\n\n  <span class=\"pl-k\">with</span> tf.name_scope(<span class=\"pl-c1\">NSO</span>):\n    <span class=\"pl-k\">with</span> tf.name_scope(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>ns_inner_2<span class=\"pl-pds\">'</span></span>):\n      <span class=\"pl-k\">with</span> tf.variable_scope(<span class=\"pl-c1\">VSO</span>):\n        <span class=\"pl-c1\">print</span>((tf.get_variable(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>var<span class=\"pl-pds\">'</span></span>, [<span class=\"pl-c1\">1</span>]), tf.constant(<span class=\"pl-c1\">1.0</span>, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>const<span class=\"pl-pds\">'</span></span>)))</pre></div>\n<p>right?</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=684901\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/lukaszkaiser\">@lukaszkaiser</a> what do you think about the request?</p>", "body_text": "@sleighsoft  As explained before, the argument is designed for re-entering case at the first: we can reenter variable_scope and its original name scope clearly:\nwith tf.variable_scope(s, auxiliary_name_scope=False) as ss:\n     with tf.name_scope(ss.original_name_scope) as n:\n          # do something\nLet's clarify your request: specify the argument only once, like:\n  with tf.variable_scope('vs_outer',\n                         auxiliary_name_scope=False,\n                         reuse=tf.AUTO_REUSE) as VSO:\n    pass\n\n  with tf.name_scope(NSO):\n    with tf.name_scope('ns_inner_1'):\n      with tf.variable_scope(VSO):\n        print((tf.get_variable('var', [1]), tf.constant(1.0, name='const')))\n\n  with tf.name_scope(NSO):\n    with tf.name_scope('ns_inner_2'):\n      with tf.variable_scope(VSO):\n        print((tf.get_variable('var', [1]), tf.constant(1.0, name='const')))\nright?\n@lukaszkaiser what do you think about the request?", "body": "@sleighsoft  As explained before, the argument is designed for re-entering case at the first: we can reenter variable_scope and its original name scope clearly:\r\n```python\r\nwith tf.variable_scope(s, auxiliary_name_scope=False) as ss:\r\n     with tf.name_scope(ss.original_name_scope) as n:\r\n          # do something\r\n```\r\n\r\nLet's clarify your request: specify the argument only once, like:\r\n```python\r\n  with tf.variable_scope('vs_outer',\r\n                         auxiliary_name_scope=False,\r\n                         reuse=tf.AUTO_REUSE) as VSO:\r\n    pass\r\n\r\n  with tf.name_scope(NSO):\r\n    with tf.name_scope('ns_inner_1'):\r\n      with tf.variable_scope(VSO):\r\n        print((tf.get_variable('var', [1]), tf.constant(1.0, name='const')))\r\n\r\n  with tf.name_scope(NSO):\r\n    with tf.name_scope('ns_inner_2'):\r\n      with tf.variable_scope(VSO):\r\n        print((tf.get_variable('var', [1]), tf.constant(1.0, name='const')))\r\n```\r\nright?\r\n\r\n@lukaszkaiser what do you think about the request?"}