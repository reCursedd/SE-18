{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/399823500", "html_url": "https://github.com/tensorflow/tensorflow/issues/20266#issuecomment-399823500", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20266", "id": 399823500, "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTgyMzUwMA==", "user": {"login": "friketrike", "id": 15823711, "node_id": "MDQ6VXNlcjE1ODIzNzEx", "avatar_url": "https://avatars3.githubusercontent.com/u/15823711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/friketrike", "html_url": "https://github.com/friketrike", "followers_url": "https://api.github.com/users/friketrike/followers", "following_url": "https://api.github.com/users/friketrike/following{/other_user}", "gists_url": "https://api.github.com/users/friketrike/gists{/gist_id}", "starred_url": "https://api.github.com/users/friketrike/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/friketrike/subscriptions", "organizations_url": "https://api.github.com/users/friketrike/orgs", "repos_url": "https://api.github.com/users/friketrike/repos", "events_url": "https://api.github.com/users/friketrike/events{/privacy}", "received_events_url": "https://api.github.com/users/friketrike/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-25T03:56:04Z", "updated_at": "2018-06-25T03:56:48Z", "author_association": "NONE", "body_html": "<p>A bit of a shot in the dark since I don't see the same code from your stack-trace in the current state of the repo but since you ask for pointers, here goes:<br>\nYou could use gflags to monitor dll loading when you run python -W ignore test.py.</p>\n<ul>\n<li>Get gflags from Microsoft: <a href=\"https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/gflags-commands\" rel=\"nofollow\">https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/gflags-commands</a></li>\n<li>Run and open the Image tab</li>\n<li>Enter Python.exe as an image</li>\n<li>Select 'show loader snaps'</li>\n</ul>\n<p>Brace yourself for somewhat verbose output (remember to unset this after you've solved your issue) but you should see which dlls are being loaded and from where. You'll probably see one trying to load from each directory in your path and failing right before the stack-trace.</p>\n<p>Additionally, once you've found a couple of suspect dlls, you can use dependency walker show information regarding the dlls that they will try to load. Dependency walke has a 32b and 64b version, they don't see all dlls equally, so you might need to use both.<br>\nHope this helps and good luck</p>", "body_text": "A bit of a shot in the dark since I don't see the same code from your stack-trace in the current state of the repo but since you ask for pointers, here goes:\nYou could use gflags to monitor dll loading when you run python -W ignore test.py.\n\nGet gflags from Microsoft: https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/gflags-commands\nRun and open the Image tab\nEnter Python.exe as an image\nSelect 'show loader snaps'\n\nBrace yourself for somewhat verbose output (remember to unset this after you've solved your issue) but you should see which dlls are being loaded and from where. You'll probably see one trying to load from each directory in your path and failing right before the stack-trace.\nAdditionally, once you've found a couple of suspect dlls, you can use dependency walker show information regarding the dlls that they will try to load. Dependency walke has a 32b and 64b version, they don't see all dlls equally, so you might need to use both.\nHope this helps and good luck", "body": "A bit of a shot in the dark since I don't see the same code from your stack-trace in the current state of the repo but since you ask for pointers, here goes:\r\nYou could use gflags to monitor dll loading when you run python -W ignore test.py. \r\n- Get gflags from Microsoft: https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/gflags-commands\r\n- Run and open the Image tab\r\n- Enter Python.exe as an image\r\n- Select 'show loader snaps'\r\n\r\nBrace yourself for somewhat verbose output (remember to unset this after you've solved your issue) but you should see which dlls are being loaded and from where. You'll probably see one trying to load from each directory in your path and failing right before the stack-trace.\r\n\r\nAdditionally, once you've found a couple of suspect dlls, you can use dependency walker show information regarding the dlls that they will try to load. Dependency walke has a 32b and 64b version, they don't see all dlls equally, so you might need to use both.\r\nHope this helps and good luck"}