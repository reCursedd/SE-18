{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/320047228", "html_url": "https://github.com/tensorflow/tensorflow/issues/5609#issuecomment-320047228", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5609", "id": 320047228, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDA0NzIyOA==", "user": {"login": "Mazecreator", "id": 18412448, "node_id": "MDQ6VXNlcjE4NDEyNDQ4", "avatar_url": "https://avatars2.githubusercontent.com/u/18412448?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mazecreator", "html_url": "https://github.com/Mazecreator", "followers_url": "https://api.github.com/users/Mazecreator/followers", "following_url": "https://api.github.com/users/Mazecreator/following{/other_user}", "gists_url": "https://api.github.com/users/Mazecreator/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mazecreator/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mazecreator/subscriptions", "organizations_url": "https://api.github.com/users/Mazecreator/orgs", "repos_url": "https://api.github.com/users/Mazecreator/repos", "events_url": "https://api.github.com/users/Mazecreator/events{/privacy}", "received_events_url": "https://api.github.com/users/Mazecreator/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-03T18:09:44Z", "updated_at": "2017-08-03T18:09:44Z", "author_association": "CONTRIBUTOR", "body_html": "<div class=\"email-fragment\">This message was created automatically by mail delivery software.\n\nA message that you sent could not be delivered to one or more of its\nrecipients. This is a temporary error. The following address(es) deferred:\n\n  mazecreator@gmail.com\n    Domain mazecreator.com has exceeded the max emails per hour (26/25 (104%)) allowed.  Message will be reattempted later</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-signature-reply\">------- This is a copy of the message, including all the headers. ------\n------ The body of the message is 14836 characters long; only the first\n------ 5000 or so are included here.\nReceived: from o4.sgmail.github.com ([192.254.112.99]:55419)\n\tby server2.lowesthostingrates.com with esmtps (TLSv1.2:ECDHE-RSA-AES128-GCM-SHA256:128)\n\t(Exim 4.89)\n\t(envelope-from &lt;bounces+848413-e6d9-mazecreator=mazecreator.com@sgmail.github.com&gt;)\n\tid 1ddKNW-00048A-Fv\n\tfor mazecreator@mazecreator.com; Thu, 03 Aug 2017 12:58:17 -0500\nDKIM-Signature: v=1; a=rsa-sha1; c=relaxed/relaxed; d=github.com;\n\th=from:reply-to:to:cc:in-reply-to:references:subject:mime-version:content-type:content-transfer-encoding:list-id:list-archive:list-post:list-unsubscribe;\n\ts=s20150108; bh=B2DquR6IstTcRsdhjQeqo1ZdRQY=; b=TBqhTIoVIOwougWf\n\tp5TL8lkpdAChnGKeRPBQOoQQmp0fvwpWmR44i4zk3eWSJdbV1D4PXejPVdfRWFuj\n\txKSDJzRL2sESrE8IHpXt9Nv+QbuHd2u/XJbHIHYoXXsKOXvCFO6S4TRXEP9CXRER\n\tijCQs89ZtOqE/6Dn1fIfdOoJJAY=\nReceived: by filter0439p1mdw1.sendgrid.net with SMTP id filter0439p1mdw1-8131-59836697-54\n        2017-08-03 18:08:23.727792632 +0000 UTC\nReceived: from github-smtp2a-ext-cp1-prd.iad.github.net (github-smtp2a-ext-cp1-prd.iad.github.net [192.30.253.16])\n\tby ismtpd0030p1mdw1.sendgrid.net (SG) with ESMTP id LAxiP_e0Rlupo7wGghbOCg\n\tfor &lt;mazecreator@mazecreator.com&gt;; Thu, 03 Aug 2017 18:08:23.641 +0000 (UTC)\nDate: Thu, 03 Aug 2017 18:08:23 +0000 (UTC)\nFrom: Andreas Madsen &lt;notifications@github.com&gt;\nReply-To: tensorflow/tensorflow &lt;reply@reply.github.com&gt;\nTo: tensorflow/tensorflow &lt;tensorflow@noreply.github.com&gt;\nCc: Subscribed &lt;subscribed@noreply.github.com&gt;\nMessage-ID: &lt;tensorflow/tensorflow/issues/5609/320046002@github.com&gt;\nIn-Reply-To: &lt;tensorflow/tensorflow/issues/5609@github.com&gt;\nReferences: &lt;tensorflow/tensorflow/issues/5609@github.com&gt;\nSubject: Re: [tensorflow/tensorflow] Add documentation on how to use bucketing\n functions (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"189281953\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/5609\" href=\"https://github.com/tensorflow/tensorflow/issues/5609\">#5609</a>)\nMime-Version: 1.0\nContent-Type: multipart/alternative;\n boundary=\"--==_mimepart_598366974122_66ae3ff2e60a5c303173a8\";\n charset=UTF-8\nContent-Transfer-Encoding: 7bit\nPrecedence: list\nX-GitHub-Sender: AndreasMadsen\nX-GitHub-Recipient: Mazecreator\nX-GitHub-Reason: subscribed\nList-ID: tensorflow/tensorflow &lt;tensorflow.tensorflow.github.com&gt;\nList-Archive: <a href=\"https://github.com/tensorflow/tensorflow\">https://github.com/tensorflow/tensorflow</a>\nList-Post: &lt;mailto:reply@reply.github.com&gt;\nList-Unsubscribe: &lt;mailto:unsub+0118f3a0233cd248cebf628debe904ce04cc17dde108f66692cf00000001159b289792a169ce0b4836a1@reply.github.com&gt;,\n &lt;<a href=\"https://github.com/notifications/unsubscribe/ARjzoGUNhusBD4cFgBlx8CGVIkfpotc4ks5sUgyXgaJpZM4KyDNA\">https://github.com/notifications/unsubscribe/ARjzoGUNhusBD4cFgBlx8CGVIkfpotc4ks5sUgyXgaJpZM4KyDNA</a>&gt;\nX-Auto-Response-Suppress: All\nX-GitHub-Recipient-Address: mazecreator@mazecreator.com\nX-SG-EID: BJ4qYjf5a3yL0lCrdDNghY4YYR+k1a+cluU6wEX1JqzbEs87w+mYm/unNG0159r/UEAApwEJBsj9up\n 5/RFJG+hFL0CfCPELQXc3qRzY5x+PGzPzqlgb+gHP3WIKr5vDdVS/MY1IiP2yzfqcCTkgYjkpG38mG\n dqi0wpbITd75JwnNOdhAEnRMZ3nsOIBiGHi3DabG8lcZ32lfkkONuaTIrPgFjyJfyD45sIqHImBChB\n A=\nX-Spam-Status: No, score=\nX-Spam-Score:\nX-Spam-Bar:\nX-Ham-Report:\nX-Spam-Flag: NO</div>\n<div class=\"email-signature-reply\">----==_mimepart_598366974122_66ae3ff2e60a5c303173a8\nContent-Type: text/plain;\n charset=UTF-8\nContent-Transfer-Encoding: 7bit\n\n<a class=\"user-mention\" href=\"https://github.com/francotheengineer\">@francotheengineer</a> you can replace it with something like this:\n\n```py\n\nclass SequenceQueueExternal(SequenceQueue):\n    data_file: str\n    writer = tf.python_io.TFRecordWriter\n\n    def __init__(self, external_encoding: str, *args, **kwargs):\n        self.data_file = path.realpath(external_encoding)\n\n        # detect if data file exists\n        has_data = (path.exists(self.data_file) and\n                    os.stat(self.data_file).st_size &gt; 0)\n        super().__init__(not has_data, *args, **kwargs)\n\n        if self.need_data:\n            os.makedirs(path.dirname(self.data_file), exist_ok=True)\n            with open(self.data_file, 'w'):\n                self.writer = tf.python_io.TFRecordWriter(\n                    self.data_file,\n                    options=tf.python_io.TFRecordOptions(\n                        tf.python_io.TFRecordCompressionType.ZLIB\n                    )\n                )\n\n    def write(self,\n              length: int, source: np.ndarray, target: np.ndarray) -&gt; None:\n        if not self.need_data:\n            raise RuntimeError(\n                'queue.write should not be called when need_data is false'\n            )\n\n        example = make_sequence_example(length, source, target)\n        self.writer.write(example.SerializeToString())\n\n    def read(self) -&gt; Tuple[tf.Tensor, tf.Tensor, tf.Tensor]:\n        if self.need_data:\n            self.writer.close()\n\n        # create filename queue of one filename. TFRecordReader demands this.\n        filename_queue = tf.train.string_input_producer(\n            [self.data_file],\n            num_epochs=None if self.repeat else 1,\n            name=self.name\n        )\n\n        # read serialized data\n        reader = tf.TFRecordReader(\n            options=tf.python_io.TFRecordOptions(\n                tf.python_io.TFRecordCompressionType.ZLIB\n            )\n        )\n        reader_dequeue = reader.read(filename_queue)\n\n        # parse data\n        length, source, target = parse_sequence_example(reader_dequeue.value)\n\n        # cast to original type\n        length = tf.cast(length, dtype=tf.int32)\n        source = tf.cast(source, dtype=self.dtype)\n        target = tf.cast(target, dtype=self.dtype)\n\n        # To get a continues shuffling behaviour similar to suffle_batch\n        # put in a RandomShuffleQueue\n        if self.shuffle:\n            length, source, target = shuffle_tensor_list(\n                (length, source, target),\n                capacity=self.batch_size * 128,\n                min_after_dequeue=self.batch_size * 64,\n                seed=self.seed,\n                name=self.name\n            )\n\n        return (length, source, target)\n```</div>\n<div class=\"email-signature-reply\">-- \nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub:\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"189281953\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/5609\" href=\"https://github.com/tensorflow/tensorflow/issues/5609#issuecomment-320046002\">#5609 (comment)</a>\n----==_mimepart_598366974122_66ae3ff2e60a5c303173a8\nContent-Type: text/html;\n charset=UTF-8\nContent-Transfer-Encoding: quoted-printable\n\n&lt;p&gt;&lt;a href=3D\"<a href=\"https://github.com/francotheengineer\">https://github.com/francotheengineer</a>\" class=3D\"user-mention\"&gt;=\n<a class=\"user-mention\" href=\"https://github.com/francotheengineer\">@francotheengineer</a>&lt;/a&gt; you can replace it with something like this:&lt;/p&gt;\n&lt;div class=3D\"highlight highlight-source-python\"&gt;&lt;pre&gt;&lt;span class=3D\"pl-k\"&gt;=\nclass&lt;/span&gt; &lt;span class=3D\"pl-en\"&gt;SequenceQueueExternal&lt;/span&gt;(&lt;span class=\n=3D\"pl-e\"&gt;SequenceQueue&lt;/span&gt;):\n    data_file: &lt;span class=3D\"pl-c1\"&gt;str&lt;/span&gt;\n    writer &lt;span class=3D\"pl-k\"&gt;=3D&lt;/span&gt; tf.python_io.TFRecordWriter\n\n    &lt;span class=3D\"pl-k\"&gt;def&lt;/span&gt; &lt;span class=3D\"pl-c1\"&gt;__init__&lt;/span&gt;(&lt;=\nspan class=3D\"pl-smi\"&gt;&lt;span class=3D\"pl-smi\"&gt;self&lt;/span&gt;&lt;/span&gt;, &lt;span clas=\ns=3D\"pl-smi\"&gt;external_encoding&lt;/span&gt;: &lt;span class=3D\"pl-c1\"&gt;str&lt;/span&gt;, &lt;s=\npan class=3D\"pl-k\"&gt;*&lt;/span&gt;&lt;span class=3D\"pl-smi\"&gt;args&lt;/span&gt;, &lt;span class=\n=3D\"pl-k\"&gt;**&lt;/span&gt;&lt;span class=3D\"pl-smi\"&gt;kwargs&lt;/span&gt;):\n        &lt;span class=3D\"pl-c1\"&gt;self&lt;/span&gt;.data_file &lt;span class=3D\"pl-k\"&gt;=\n=3D&lt;/span&gt; path.realpath(external_encoding)\n\n        &lt;span class=3D\"pl-c\"&gt;&lt;span class=3D\"pl-c\"&gt;#&lt;/span&gt; detect if data f=\nile exists&lt;/span&gt;\n        has_data &lt;span class=3D\"pl-k\"&gt;=3D&lt;/span&gt; (path.exists(&lt;span class=\n=3D\"pl-c1\"&gt;self&lt;/span&gt;.data_file) &lt;span class=3D\"pl-k\"&gt;and&lt;/span&gt;\n                    os.stat(&lt;span class=3D\"pl-c1\"&gt;self&lt;/span&gt;.data_file).st=\n_size &lt;span class=3D\"pl-k\"&gt;&amp;gt;&lt;/span&gt; &lt;span class=3D\"pl-c1\"&gt;0&lt;/span&gt;)\n        &lt;span class=3D\"pl-c1\"&gt;super&lt;/span&gt;().&lt;span class=3D\"pl-c1\"&gt;__init__=\n&lt;/span&gt;(&lt;span class=3D\"pl-k\"&gt;not&lt;/span&gt; has_data, &lt;span class=3D\"pl-k\"&gt;*&lt;/s=\npan&gt;args, &lt;span class=3D\"pl-k\"&gt;**&lt;/span&gt;kwargs)\n\n        &lt;span class=3D\"pl-k\"&gt;if&lt;/span&gt; &lt;span class=3D\"pl-c1\"&gt;self&lt;/span&gt;.ne=\ned_data:\n            os.makedirs(path.dirname(&lt;span class=3D\"pl-c1\"&gt;self&lt;/span&gt;.data=\n_file), &lt;span class=3D\"pl-v\"&gt;exist_ok&lt;/span&gt;&lt;span class=3D\"pl-k\"&gt;=3D&lt;/span&gt;=\n&lt;span class=3D\"pl-c1\"&gt;True&lt;/span&gt;)\n            &lt;span class=3D\"pl-k\"&gt;with&lt;/span&gt; &lt;span class=3D\"pl-c1\"&gt;open&lt;/sp=\nan&gt;(&lt;span c</div>\n</div>", "body_text": "This message was created automatically by mail delivery software.\n\nA message that you sent could not be delivered to one or more of its\nrecipients. This is a temporary error. The following address(es) deferred:\n\n  mazecreator@gmail.com\n    Domain mazecreator.com has exceeded the max emails per hour (26/25 (104%)) allowed.  Message will be reattempted later\n\u2026\n------- This is a copy of the message, including all the headers. ------\n------ The body of the message is 14836 characters long; only the first\n------ 5000 or so are included here.\nReceived: from o4.sgmail.github.com ([192.254.112.99]:55419)\n\tby server2.lowesthostingrates.com with esmtps (TLSv1.2:ECDHE-RSA-AES128-GCM-SHA256:128)\n\t(Exim 4.89)\n\t(envelope-from <bounces+848413-e6d9-mazecreator=mazecreator.com@sgmail.github.com>)\n\tid 1ddKNW-00048A-Fv\n\tfor mazecreator@mazecreator.com; Thu, 03 Aug 2017 12:58:17 -0500\nDKIM-Signature: v=1; a=rsa-sha1; c=relaxed/relaxed; d=github.com;\n\th=from:reply-to:to:cc:in-reply-to:references:subject:mime-version:content-type:content-transfer-encoding:list-id:list-archive:list-post:list-unsubscribe;\n\ts=s20150108; bh=B2DquR6IstTcRsdhjQeqo1ZdRQY=; b=TBqhTIoVIOwougWf\n\tp5TL8lkpdAChnGKeRPBQOoQQmp0fvwpWmR44i4zk3eWSJdbV1D4PXejPVdfRWFuj\n\txKSDJzRL2sESrE8IHpXt9Nv+QbuHd2u/XJbHIHYoXXsKOXvCFO6S4TRXEP9CXRER\n\tijCQs89ZtOqE/6Dn1fIfdOoJJAY=\nReceived: by filter0439p1mdw1.sendgrid.net with SMTP id filter0439p1mdw1-8131-59836697-54\n        2017-08-03 18:08:23.727792632 +0000 UTC\nReceived: from github-smtp2a-ext-cp1-prd.iad.github.net (github-smtp2a-ext-cp1-prd.iad.github.net [192.30.253.16])\n\tby ismtpd0030p1mdw1.sendgrid.net (SG) with ESMTP id LAxiP_e0Rlupo7wGghbOCg\n\tfor <mazecreator@mazecreator.com>; Thu, 03 Aug 2017 18:08:23.641 +0000 (UTC)\nDate: Thu, 03 Aug 2017 18:08:23 +0000 (UTC)\nFrom: Andreas Madsen <notifications@github.com>\nReply-To: tensorflow/tensorflow <reply@reply.github.com>\nTo: tensorflow/tensorflow <tensorflow@noreply.github.com>\nCc: Subscribed <subscribed@noreply.github.com>\nMessage-ID: <tensorflow/tensorflow/issues/5609/320046002@github.com>\nIn-Reply-To: <tensorflow/tensorflow/issues/5609@github.com>\nReferences: <tensorflow/tensorflow/issues/5609@github.com>\nSubject: Re: [tensorflow/tensorflow] Add documentation on how to use bucketing\n functions (#5609)\nMime-Version: 1.0\nContent-Type: multipart/alternative;\n boundary=\"--==_mimepart_598366974122_66ae3ff2e60a5c303173a8\";\n charset=UTF-8\nContent-Transfer-Encoding: 7bit\nPrecedence: list\nX-GitHub-Sender: AndreasMadsen\nX-GitHub-Recipient: Mazecreator\nX-GitHub-Reason: subscribed\nList-ID: tensorflow/tensorflow <tensorflow.tensorflow.github.com>\nList-Archive: https://github.com/tensorflow/tensorflow\nList-Post: <mailto:reply@reply.github.com>\nList-Unsubscribe: <mailto:unsub+0118f3a0233cd248cebf628debe904ce04cc17dde108f66692cf00000001159b289792a169ce0b4836a1@reply.github.com>,\n <https://github.com/notifications/unsubscribe/ARjzoGUNhusBD4cFgBlx8CGVIkfpotc4ks5sUgyXgaJpZM4KyDNA>\nX-Auto-Response-Suppress: All\nX-GitHub-Recipient-Address: mazecreator@mazecreator.com\nX-SG-EID: BJ4qYjf5a3yL0lCrdDNghY4YYR+k1a+cluU6wEX1JqzbEs87w+mYm/unNG0159r/UEAApwEJBsj9up\n 5/RFJG+hFL0CfCPELQXc3qRzY5x+PGzPzqlgb+gHP3WIKr5vDdVS/MY1IiP2yzfqcCTkgYjkpG38mG\n dqi0wpbITd75JwnNOdhAEnRMZ3nsOIBiGHi3DabG8lcZ32lfkkONuaTIrPgFjyJfyD45sIqHImBChB\n A=\nX-Spam-Status: No, score=\nX-Spam-Score:\nX-Spam-Bar:\nX-Ham-Report:\nX-Spam-Flag: NO\n----==_mimepart_598366974122_66ae3ff2e60a5c303173a8\nContent-Type: text/plain;\n charset=UTF-8\nContent-Transfer-Encoding: 7bit\n\n@francotheengineer you can replace it with something like this:\n\n```py\n\nclass SequenceQueueExternal(SequenceQueue):\n    data_file: str\n    writer = tf.python_io.TFRecordWriter\n\n    def __init__(self, external_encoding: str, *args, **kwargs):\n        self.data_file = path.realpath(external_encoding)\n\n        # detect if data file exists\n        has_data = (path.exists(self.data_file) and\n                    os.stat(self.data_file).st_size > 0)\n        super().__init__(not has_data, *args, **kwargs)\n\n        if self.need_data:\n            os.makedirs(path.dirname(self.data_file), exist_ok=True)\n            with open(self.data_file, 'w'):\n                self.writer = tf.python_io.TFRecordWriter(\n                    self.data_file,\n                    options=tf.python_io.TFRecordOptions(\n                        tf.python_io.TFRecordCompressionType.ZLIB\n                    )\n                )\n\n    def write(self,\n              length: int, source: np.ndarray, target: np.ndarray) -> None:\n        if not self.need_data:\n            raise RuntimeError(\n                'queue.write should not be called when need_data is false'\n            )\n\n        example = make_sequence_example(length, source, target)\n        self.writer.write(example.SerializeToString())\n\n    def read(self) -> Tuple[tf.Tensor, tf.Tensor, tf.Tensor]:\n        if self.need_data:\n            self.writer.close()\n\n        # create filename queue of one filename. TFRecordReader demands this.\n        filename_queue = tf.train.string_input_producer(\n            [self.data_file],\n            num_epochs=None if self.repeat else 1,\n            name=self.name\n        )\n\n        # read serialized data\n        reader = tf.TFRecordReader(\n            options=tf.python_io.TFRecordOptions(\n                tf.python_io.TFRecordCompressionType.ZLIB\n            )\n        )\n        reader_dequeue = reader.read(filename_queue)\n\n        # parse data\n        length, source, target = parse_sequence_example(reader_dequeue.value)\n\n        # cast to original type\n        length = tf.cast(length, dtype=tf.int32)\n        source = tf.cast(source, dtype=self.dtype)\n        target = tf.cast(target, dtype=self.dtype)\n\n        # To get a continues shuffling behaviour similar to suffle_batch\n        # put in a RandomShuffleQueue\n        if self.shuffle:\n            length, source, target = shuffle_tensor_list(\n                (length, source, target),\n                capacity=self.batch_size * 128,\n                min_after_dequeue=self.batch_size * 64,\n                seed=self.seed,\n                name=self.name\n            )\n\n        return (length, source, target)\n```\n-- \nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub:\n#5609 (comment)\n----==_mimepart_598366974122_66ae3ff2e60a5c303173a8\nContent-Type: text/html;\n charset=UTF-8\nContent-Transfer-Encoding: quoted-printable\n\n<p><a href=3D\"https://github.com/francotheengineer\" class=3D\"user-mention\">=\n@francotheengineer</a> you can replace it with something like this:</p>\n<div class=3D\"highlight highlight-source-python\"><pre><span class=3D\"pl-k\">=\nclass</span> <span class=3D\"pl-en\">SequenceQueueExternal</span>(<span class=\n=3D\"pl-e\">SequenceQueue</span>):\n    data_file: <span class=3D\"pl-c1\">str</span>\n    writer <span class=3D\"pl-k\">=3D</span> tf.python_io.TFRecordWriter\n\n    <span class=3D\"pl-k\">def</span> <span class=3D\"pl-c1\">__init__</span>(<=\nspan class=3D\"pl-smi\"><span class=3D\"pl-smi\">self</span></span>, <span clas=\ns=3D\"pl-smi\">external_encoding</span>: <span class=3D\"pl-c1\">str</span>, <s=\npan class=3D\"pl-k\">*</span><span class=3D\"pl-smi\">args</span>, <span class=\n=3D\"pl-k\">**</span><span class=3D\"pl-smi\">kwargs</span>):\n        <span class=3D\"pl-c1\">self</span>.data_file <span class=3D\"pl-k\">=\n=3D</span> path.realpath(external_encoding)\n\n        <span class=3D\"pl-c\"><span class=3D\"pl-c\">#</span> detect if data f=\nile exists</span>\n        has_data <span class=3D\"pl-k\">=3D</span> (path.exists(<span class=\n=3D\"pl-c1\">self</span>.data_file) <span class=3D\"pl-k\">and</span>\n                    os.stat(<span class=3D\"pl-c1\">self</span>.data_file).st=\n_size <span class=3D\"pl-k\">&gt;</span> <span class=3D\"pl-c1\">0</span>)\n        <span class=3D\"pl-c1\">super</span>().<span class=3D\"pl-c1\">__init__=\n</span>(<span class=3D\"pl-k\">not</span> has_data, <span class=3D\"pl-k\">*</s=\npan>args, <span class=3D\"pl-k\">**</span>kwargs)\n\n        <span class=3D\"pl-k\">if</span> <span class=3D\"pl-c1\">self</span>.ne=\ned_data:\n            os.makedirs(path.dirname(<span class=3D\"pl-c1\">self</span>.data=\n_file), <span class=3D\"pl-v\">exist_ok</span><span class=3D\"pl-k\">=3D</span>=\n<span class=3D\"pl-c1\">True</span>)\n            <span class=3D\"pl-k\">with</span> <span class=3D\"pl-c1\">open</sp=\nan>(<span c", "body": "This message was created automatically by mail delivery software.\n\nA message that you sent could not be delivered to one or more of its\nrecipients. This is a temporary error. The following address(es) deferred:\n\n  mazecreator@gmail.com\n    Domain mazecreator.com has exceeded the max emails per hour (26/25 (104%)) allowed.  Message will be reattempted later\n\n------- This is a copy of the message, including all the headers. ------\n------ The body of the message is 14836 characters long; only the first\n------ 5000 or so are included here.\nReceived: from o4.sgmail.github.com ([192.254.112.99]:55419)\n\tby server2.lowesthostingrates.com with esmtps (TLSv1.2:ECDHE-RSA-AES128-GCM-SHA256:128)\n\t(Exim 4.89)\n\t(envelope-from <bounces+848413-e6d9-mazecreator=mazecreator.com@sgmail.github.com>)\n\tid 1ddKNW-00048A-Fv\n\tfor mazecreator@mazecreator.com; Thu, 03 Aug 2017 12:58:17 -0500\nDKIM-Signature: v=1; a=rsa-sha1; c=relaxed/relaxed; d=github.com; \n\th=from:reply-to:to:cc:in-reply-to:references:subject:mime-version:content-type:content-transfer-encoding:list-id:list-archive:list-post:list-unsubscribe; \n\ts=s20150108; bh=B2DquR6IstTcRsdhjQeqo1ZdRQY=; b=TBqhTIoVIOwougWf\n\tp5TL8lkpdAChnGKeRPBQOoQQmp0fvwpWmR44i4zk3eWSJdbV1D4PXejPVdfRWFuj\n\txKSDJzRL2sESrE8IHpXt9Nv+QbuHd2u/XJbHIHYoXXsKOXvCFO6S4TRXEP9CXRER\n\tijCQs89ZtOqE/6Dn1fIfdOoJJAY=\nReceived: by filter0439p1mdw1.sendgrid.net with SMTP id filter0439p1mdw1-8131-59836697-54\n        2017-08-03 18:08:23.727792632 +0000 UTC\nReceived: from github-smtp2a-ext-cp1-prd.iad.github.net (github-smtp2a-ext-cp1-prd.iad.github.net [192.30.253.16])\n\tby ismtpd0030p1mdw1.sendgrid.net (SG) with ESMTP id LAxiP_e0Rlupo7wGghbOCg\n\tfor <mazecreator@mazecreator.com>; Thu, 03 Aug 2017 18:08:23.641 +0000 (UTC)\nDate: Thu, 03 Aug 2017 18:08:23 +0000 (UTC)\nFrom: Andreas Madsen <notifications@github.com>\nReply-To: tensorflow/tensorflow <reply@reply.github.com>\nTo: tensorflow/tensorflow <tensorflow@noreply.github.com>\nCc: Subscribed <subscribed@noreply.github.com>\nMessage-ID: <tensorflow/tensorflow/issues/5609/320046002@github.com>\nIn-Reply-To: <tensorflow/tensorflow/issues/5609@github.com>\nReferences: <tensorflow/tensorflow/issues/5609@github.com>\nSubject: Re: [tensorflow/tensorflow] Add documentation on how to use bucketing\n functions (#5609)\nMime-Version: 1.0\nContent-Type: multipart/alternative;\n boundary=\"--==_mimepart_598366974122_66ae3ff2e60a5c303173a8\";\n charset=UTF-8\nContent-Transfer-Encoding: 7bit\nPrecedence: list\nX-GitHub-Sender: AndreasMadsen\nX-GitHub-Recipient: Mazecreator\nX-GitHub-Reason: subscribed\nList-ID: tensorflow/tensorflow <tensorflow.tensorflow.github.com>\nList-Archive: https://github.com/tensorflow/tensorflow\nList-Post: <mailto:reply@reply.github.com>\nList-Unsubscribe: <mailto:unsub+0118f3a0233cd248cebf628debe904ce04cc17dde108f66692cf00000001159b289792a169ce0b4836a1@reply.github.com>,\n <https://github.com/notifications/unsubscribe/ARjzoGUNhusBD4cFgBlx8CGVIkfpotc4ks5sUgyXgaJpZM4KyDNA>\nX-Auto-Response-Suppress: All\nX-GitHub-Recipient-Address: mazecreator@mazecreator.com\nX-SG-EID: BJ4qYjf5a3yL0lCrdDNghY4YYR+k1a+cluU6wEX1JqzbEs87w+mYm/unNG0159r/UEAApwEJBsj9up\n 5/RFJG+hFL0CfCPELQXc3qRzY5x+PGzPzqlgb+gHP3WIKr5vDdVS/MY1IiP2yzfqcCTkgYjkpG38mG\n dqi0wpbITd75JwnNOdhAEnRMZ3nsOIBiGHi3DabG8lcZ32lfkkONuaTIrPgFjyJfyD45sIqHImBChB\n A=\nX-Spam-Status: No, score=\nX-Spam-Score:\nX-Spam-Bar:\nX-Ham-Report:\nX-Spam-Flag: NO\n\n----==_mimepart_598366974122_66ae3ff2e60a5c303173a8\nContent-Type: text/plain;\n charset=UTF-8\nContent-Transfer-Encoding: 7bit\n\n@francotheengineer you can replace it with something like this:\n\n```py\n\nclass SequenceQueueExternal(SequenceQueue):\n    data_file: str\n    writer = tf.python_io.TFRecordWriter\n\n    def __init__(self, external_encoding: str, *args, **kwargs):\n        self.data_file = path.realpath(external_encoding)\n\n        # detect if data file exists\n        has_data = (path.exists(self.data_file) and\n                    os.stat(self.data_file).st_size > 0)\n        super().__init__(not has_data, *args, **kwargs)\n\n        if self.need_data:\n            os.makedirs(path.dirname(self.data_file), exist_ok=True)\n            with open(self.data_file, 'w'):\n                self.writer = tf.python_io.TFRecordWriter(\n                    self.data_file,\n                    options=tf.python_io.TFRecordOptions(\n                        tf.python_io.TFRecordCompressionType.ZLIB\n                    )\n                )\n\n    def write(self,\n              length: int, source: np.ndarray, target: np.ndarray) -> None:\n        if not self.need_data:\n            raise RuntimeError(\n                'queue.write should not be called when need_data is false'\n            )\n\n        example = make_sequence_example(length, source, target)\n        self.writer.write(example.SerializeToString())\n\n    def read(self) -> Tuple[tf.Tensor, tf.Tensor, tf.Tensor]:\n        if self.need_data:\n            self.writer.close()\n\n        # create filename queue of one filename. TFRecordReader demands this.\n        filename_queue = tf.train.string_input_producer(\n            [self.data_file],\n            num_epochs=None if self.repeat else 1,\n            name=self.name\n        )\n\n        # read serialized data\n        reader = tf.TFRecordReader(\n            options=tf.python_io.TFRecordOptions(\n                tf.python_io.TFRecordCompressionType.ZLIB\n            )\n        )\n        reader_dequeue = reader.read(filename_queue)\n\n        # parse data\n        length, source, target = parse_sequence_example(reader_dequeue.value)\n\n        # cast to original type\n        length = tf.cast(length, dtype=tf.int32)\n        source = tf.cast(source, dtype=self.dtype)\n        target = tf.cast(target, dtype=self.dtype)\n\n        # To get a continues shuffling behaviour similar to suffle_batch\n        # put in a RandomShuffleQueue\n        if self.shuffle:\n            length, source, target = shuffle_tensor_list(\n                (length, source, target),\n                capacity=self.batch_size * 128,\n                min_after_dequeue=self.batch_size * 64,\n                seed=self.seed,\n                name=self.name\n            )\n\n        return (length, source, target)\n```\n\n-- \nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub:\nhttps://github.com/tensorflow/tensorflow/issues/5609#issuecomment-320046002\n----==_mimepart_598366974122_66ae3ff2e60a5c303173a8\nContent-Type: text/html;\n charset=UTF-8\nContent-Transfer-Encoding: quoted-printable\n\n<p><a href=3D\"https://github.com/francotheengineer\" class=3D\"user-mention\">=\n@francotheengineer</a> you can replace it with something like this:</p>\n<div class=3D\"highlight highlight-source-python\"><pre><span class=3D\"pl-k\">=\nclass</span> <span class=3D\"pl-en\">SequenceQueueExternal</span>(<span class=\n=3D\"pl-e\">SequenceQueue</span>):\n    data_file: <span class=3D\"pl-c1\">str</span>\n    writer <span class=3D\"pl-k\">=3D</span> tf.python_io.TFRecordWriter\n\n    <span class=3D\"pl-k\">def</span> <span class=3D\"pl-c1\">__init__</span>(<=\nspan class=3D\"pl-smi\"><span class=3D\"pl-smi\">self</span></span>, <span clas=\ns=3D\"pl-smi\">external_encoding</span>: <span class=3D\"pl-c1\">str</span>, <s=\npan class=3D\"pl-k\">*</span><span class=3D\"pl-smi\">args</span>, <span class=\n=3D\"pl-k\">**</span><span class=3D\"pl-smi\">kwargs</span>):\n        <span class=3D\"pl-c1\">self</span>.data_file <span class=3D\"pl-k\">=\n=3D</span> path.realpath(external_encoding)\n\n        <span class=3D\"pl-c\"><span class=3D\"pl-c\">#</span> detect if data f=\nile exists</span>\n        has_data <span class=3D\"pl-k\">=3D</span> (path.exists(<span class=\n=3D\"pl-c1\">self</span>.data_file) <span class=3D\"pl-k\">and</span>\n                    os.stat(<span class=3D\"pl-c1\">self</span>.data_file).st=\n_size <span class=3D\"pl-k\">&gt;</span> <span class=3D\"pl-c1\">0</span>)\n        <span class=3D\"pl-c1\">super</span>().<span class=3D\"pl-c1\">__init__=\n</span>(<span class=3D\"pl-k\">not</span> has_data, <span class=3D\"pl-k\">*</s=\npan>args, <span class=3D\"pl-k\">**</span>kwargs)\n\n        <span class=3D\"pl-k\">if</span> <span class=3D\"pl-c1\">self</span>.ne=\ned_data:\n            os.makedirs(path.dirname(<span class=3D\"pl-c1\">self</span>.data=\n_file), <span class=3D\"pl-v\">exist_ok</span><span class=3D\"pl-k\">=3D</span>=\n<span class=3D\"pl-c1\">True</span>)\n            <span class=3D\"pl-k\">with</span> <span class=3D\"pl-c1\">open</sp=\nan>(<span c\n"}