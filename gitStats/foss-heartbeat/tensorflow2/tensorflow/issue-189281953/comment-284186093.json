{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/284186093", "html_url": "https://github.com/tensorflow/tensorflow/issues/5609#issuecomment-284186093", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5609", "id": 284186093, "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDE4NjA5Mw==", "user": {"login": "AndreasMadsen", "id": 505333, "node_id": "MDQ6VXNlcjUwNTMzMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/505333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreasMadsen", "html_url": "https://github.com/AndreasMadsen", "followers_url": "https://api.github.com/users/AndreasMadsen/followers", "following_url": "https://api.github.com/users/AndreasMadsen/following{/other_user}", "gists_url": "https://api.github.com/users/AndreasMadsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreasMadsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreasMadsen/subscriptions", "organizations_url": "https://api.github.com/users/AndreasMadsen/orgs", "repos_url": "https://api.github.com/users/AndreasMadsen/repos", "events_url": "https://api.github.com/users/AndreasMadsen/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreasMadsen/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-04T21:53:04Z", "updated_at": "2017-03-04T21:53:09Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1794715\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ebrevdo\">@ebrevdo</a> Thanks. I got something like that working for just one sequence, but I couldn't see how when using a pair of sequences. This is why I used the strategy from <code>slice_input_producer</code> (slice a <code>Tensor</code> using a <code>range_input_producer</code>.</p>\n<p>PS: Another thing I'm confused about is how to get a shuffling behavior similar to <code>shuffle_batch*</code>.</p>", "body_text": "@ebrevdo Thanks. I got something like that working for just one sequence, but I couldn't see how when using a pair of sequences. This is why I used the strategy from slice_input_producer (slice a Tensor using a range_input_producer.\nPS: Another thing I'm confused about is how to get a shuffling behavior similar to shuffle_batch*.", "body": "@ebrevdo Thanks. I got something like that working for just one sequence, but I couldn't see how when using a pair of sequences. This is why I used the strategy from `slice_input_producer` (slice a `Tensor` using a `range_input_producer`.\r\n\r\nPS: Another thing I'm confused about is how to get a shuffling behavior similar to `shuffle_batch*`."}