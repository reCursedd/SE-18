{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/110533728", "pull_request_review_id": 31716617, "id": 110533728, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDUzMzcyOA==", "diff_hunk": "@@ -62,14 +64,20 @@ class FixedLengthRecordReader : public ReaderBase {\n \n   Status ReadLocked(string* key, string* value, bool* produced,\n                     bool* at_end) override {\n-    if (input_buffer_->Tell() >= file_pos_limit_) {\n+    if (input_buffer_->Tell() >= file_pos_limit_ ||\n+        input_buffer_->Tell() + record_bytes_ > file_pos_limit_) {", "path": "tensorflow/core/kernels/fixed_length_record_reader_op.cc", "position": null, "original_position": 22, "commit_id": "0f06742554ec286fcb80d05a847661e3862a051c", "original_commit_id": "fcc524b997bf464e354e55b703a0be96a4636b0a", "user": {"login": "t13m", "id": 5397898, "node_id": "MDQ6VXNlcjUzOTc4OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/5397898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t13m", "html_url": "https://github.com/t13m", "followers_url": "https://api.github.com/users/t13m/followers", "following_url": "https://api.github.com/users/t13m/following{/other_user}", "gists_url": "https://api.github.com/users/t13m/gists{/gist_id}", "starred_url": "https://api.github.com/users/t13m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t13m/subscriptions", "organizations_url": "https://api.github.com/users/t13m/orgs", "repos_url": "https://api.github.com/users/t13m/repos", "events_url": "https://api.github.com/users/t13m/events{/privacy}", "received_events_url": "https://api.github.com/users/t13m/received_events", "type": "User", "site_admin": false}, "body": "When `hop_bytes_ < record_bytes_`, which is true in most cases, the last record will always read some bytes out of `file_pos_limit_` if we only check `input_buffer_->Tell() >= file_pos_limit_`.\r\n\r\nFor example, assume `hop_bytes_ = 2`, when reading a file with content \"0123456FF\" (\"FF\" is \"footer\"), the last record will be \"6FF\". If the file is \"0123456\", an error will be signaled when reading the last record. I thought behaviors like this is not what is expected for a reader with `hop_bytes` argument. It maybe better to have the all bytes of the last record in range of `file_pos_limit_`. What do you think? Thank you for reviewing.", "created_at": "2017-04-09T06:14:05Z", "updated_at": "2017-04-18T07:46:23Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/8970#discussion_r110533728", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/8970", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/110533728"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/8970#discussion_r110533728"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/8970"}}, "body_html": "<p>When <code>hop_bytes_ &lt; record_bytes_</code>, which is true in most cases, the last record will always read some bytes out of <code>file_pos_limit_</code> if we only check <code>input_buffer_-&gt;Tell() &gt;= file_pos_limit_</code>.</p>\n<p>For example, assume <code>hop_bytes_ = 2</code>, when reading a file with content \"0123456FF\" (\"FF\" is \"footer\"), the last record will be \"6FF\". If the file is \"0123456\", an error will be signaled when reading the last record. I thought behaviors like this is not what is expected for a reader with <code>hop_bytes</code> argument. It maybe better to have the all bytes of the last record in range of <code>file_pos_limit_</code>. What do you think? Thank you for reviewing.</p>", "body_text": "When hop_bytes_ < record_bytes_, which is true in most cases, the last record will always read some bytes out of file_pos_limit_ if we only check input_buffer_->Tell() >= file_pos_limit_.\nFor example, assume hop_bytes_ = 2, when reading a file with content \"0123456FF\" (\"FF\" is \"footer\"), the last record will be \"6FF\". If the file is \"0123456\", an error will be signaled when reading the last record. I thought behaviors like this is not what is expected for a reader with hop_bytes argument. It maybe better to have the all bytes of the last record in range of file_pos_limit_. What do you think? Thank you for reviewing.", "in_reply_to_id": 110495687}