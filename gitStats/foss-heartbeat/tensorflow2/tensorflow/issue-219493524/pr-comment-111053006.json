{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/111053006", "pull_request_review_id": 32269211, "id": 111053006, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMTA1MzAwNg==", "diff_hunk": "@@ -62,14 +64,20 @@ class FixedLengthRecordReader : public ReaderBase {\n \n   Status ReadLocked(string* key, string* value, bool* produced,\n                     bool* at_end) override {\n-    if (input_buffer_->Tell() >= file_pos_limit_) {\n+    if (input_buffer_->Tell() >= file_pos_limit_ ||\n+        input_buffer_->Tell() + record_bytes_ > file_pos_limit_) {", "path": "tensorflow/core/kernels/fixed_length_record_reader_op.cc", "position": null, "original_position": 22, "commit_id": "0f06742554ec286fcb80d05a847661e3862a051c", "original_commit_id": "fcc524b997bf464e354e55b703a0be96a4636b0a", "user": {"login": "t13m", "id": 5397898, "node_id": "MDQ6VXNlcjUzOTc4OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/5397898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t13m", "html_url": "https://github.com/t13m", "followers_url": "https://api.github.com/users/t13m/followers", "following_url": "https://api.github.com/users/t13m/following{/other_user}", "gists_url": "https://api.github.com/users/t13m/gists{/gist_id}", "starred_url": "https://api.github.com/users/t13m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t13m/subscriptions", "organizations_url": "https://api.github.com/users/t13m/orgs", "repos_url": "https://api.github.com/users/t13m/repos", "events_url": "https://api.github.com/users/t13m/events{/privacy}", "received_events_url": "https://api.github.com/users/t13m/received_events", "type": "User", "site_admin": false}, "body": "For the original `FixedLengthRecordReader`, I agree with you that the caller is possible and is responsible for setting up everything for the reader. \r\nBut I don't think it's true for the condition `hop_bytes>0`. Under this situation, it maybe not possible for caller to setting up everything. Consider following condition.\r\n\r\nFile:\r\n`0123456`\r\n\r\nReader setting:\r\n`record_bytes=3`, `hop_bytes=2`, `footer_bytes=0`, `header_bytes=0`\r\n\r\nWhat we expected is:\r\n`012`, `234`, `456`\r\n\r\nIf I get it right, with the original checking condition(`input_buffer_->Tell() >= file_pos_limit_`), what we actually get will be:\r\n`012`, `234`, `456`, `Error`.\r\nThere seems not possible to avoid the last error, because for the last record, the remaining bytes will always be less than `record_bytes`: `01234|56`(\"|\" for the start position of the last record)\r\n\r\nOr should errors like this be catched by the caller?", "created_at": "2017-04-12T02:11:10Z", "updated_at": "2017-04-18T07:46:23Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/8970#discussion_r111053006", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/8970", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/111053006"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/8970#discussion_r111053006"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/8970"}}, "body_html": "<p>For the original <code>FixedLengthRecordReader</code>, I agree with you that the caller is possible and is responsible for setting up everything for the reader.<br>\nBut I don't think it's true for the condition <code>hop_bytes&gt;0</code>. Under this situation, it maybe not possible for caller to setting up everything. Consider following condition.</p>\n<p>File:<br>\n<code>0123456</code></p>\n<p>Reader setting:<br>\n<code>record_bytes=3</code>, <code>hop_bytes=2</code>, <code>footer_bytes=0</code>, <code>header_bytes=0</code></p>\n<p>What we expected is:<br>\n<code>012</code>, <code>234</code>, <code>456</code></p>\n<p>If I get it right, with the original checking condition(<code>input_buffer_-&gt;Tell() &gt;= file_pos_limit_</code>), what we actually get will be:<br>\n<code>012</code>, <code>234</code>, <code>456</code>, <code>Error</code>.<br>\nThere seems not possible to avoid the last error, because for the last record, the remaining bytes will always be less than <code>record_bytes</code>: <code>01234|56</code>(\"|\" for the start position of the last record)</p>\n<p>Or should errors like this be catched by the caller?</p>", "body_text": "For the original FixedLengthRecordReader, I agree with you that the caller is possible and is responsible for setting up everything for the reader.\nBut I don't think it's true for the condition hop_bytes>0. Under this situation, it maybe not possible for caller to setting up everything. Consider following condition.\nFile:\n0123456\nReader setting:\nrecord_bytes=3, hop_bytes=2, footer_bytes=0, header_bytes=0\nWhat we expected is:\n012, 234, 456\nIf I get it right, with the original checking condition(input_buffer_->Tell() >= file_pos_limit_), what we actually get will be:\n012, 234, 456, Error.\nThere seems not possible to avoid the last error, because for the last record, the remaining bytes will always be less than record_bytes: 01234|56(\"|\" for the start position of the last record)\nOr should errors like this be catched by the caller?", "in_reply_to_id": 110495687}