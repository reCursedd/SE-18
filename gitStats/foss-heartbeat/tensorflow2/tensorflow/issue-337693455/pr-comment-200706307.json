{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/200706307", "pull_request_review_id": 135079757, "id": 200706307, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDcwNjMwNw==", "diff_hunk": "@@ -0,0 +1,690 @@\n+{\n+  \"nbformat\": 4,\n+  \"nbformat_minor\": 0,\n+  \"metadata\": {\n+    \"colab\": {\n+      \"name\": \"text_generation.ipynb\",\n+      \"version\": \"0.3.2\",\n+      \"views\": {},\n+      \"default_view\": {},\n+      \"provenance\": [],\n+      \"private_outputs\": true,\n+      \"collapsed_sections\": [],\n+      \"toc_visible\": true\n+    },\n+    \"kernelspec\": {\n+      \"display_name\": \"Python 3\",\n+      \"language\": \"python\",\n+      \"name\": \"python3\"\n+    },\n+    \"accelerator\": \"GPU\"\n+  },\n+  \"cells\": [\n+    {\n+      \"metadata\": {\n+        \"id\": \"hcD2nPQvPOFM\",\n+        \"colab_type\": \"text\"\n+      },\n+      \"cell_type\": \"markdown\",\n+      \"source\": [\n+        \"##### Copyright 2018 The TensorFlow Authors.\\n\",\n+        \"\\n\",\n+        \"Licensed under the Apache License, Version 2.0 (the \\\"License\\\").\\n\",\n+        \"\\n\",\n+        \"# Text Generation using a RNN\\n\",\n+        \"\\n\",\n+        \"<table align=\\\"left\\\"><td>\\n\",\n+        \"<a target=\\\"_blank\\\"  href=\\\"https://colab.sandbox.google.com/github/tensorflow/tensorflow/blob/master/tensorflow/contrib/eager/python/examples/generative_examples/text_generation.ipynb\\\">\\n\",\n+        \"    <img src=\\\"https://www.tensorflow.org/images/colab_logo_32px.png\\\" />Run in Google Colab</a>  \\n\",\n+        \"</td><td>\\n\",\n+        \"<a target=\\\"_blank\\\"  href=\\\"https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/eager/python/examples/generative_examples/text_generation.ipynb\\\"><img width=32px src=\\\"https://www.tensorflow.org/images/GitHub-Mark-32px.png\\\" />View source on Github</a></td></table>\"\n+      ]\n+    },\n+    {\n+      \"metadata\": {\n+        \"id\": \"BwpJ5IffzRG6\",\n+        \"colab_type\": \"text\"\n+      },\n+      \"cell_type\": \"markdown\",\n+      \"source\": [\n+        \"This notebook demonstrates how to generate text using an RNN using [tf.keras](https://www.tensorflow.org/programmers_guide/keras) and [eager execution](https://www.tensorflow.org/programmers_guide/eager). If you like, you can write a similar [model](https://github.com/fchollet/deep-learning-with-python-notebooks/blob/master/8.1-text-generation-with-lstm.ipynb) using less code. Here, we show a lower-level impementation that's useful to understand as prework before diving in to deeper examples in a similar, like [Neural Machine Translation with Attention](https://colab.sandbox.google.com/github/tensorflow/tensorflow/blob/master/tensorflow/contrib/eager/python/examples/nmt_with_attention/nmt_with_attention.ipynb).\\n\",\n+        \"\\n\",\n+        \"This notebook is an end-to-end example. When you run it, it will download a dataset of Shakespeare's writing. We'll use a collection of plays, borrowed from Andrej Karpathy's excellent [The Unreasonable Effectiveness of Recurrent Neural Networks](http://karpathy.github.io/2015/05/21/rnn-effectiveness/).  The notebook will train a model, and use it to generate sample output.\\n\",\n+        \"  \\n\",\n+        \"Here is the output(with start string='w') after training a single layer GRU for 30 epochs with the default settings below:\\n\",\n+        \"\\n\",\n+        \"```\\n\",\n+        \"were to the death of him\\n\",\n+        \"And nothing of the field in the view of hell,\\n\",\n+        \"When I said, banish him, I will not burn thee that would live.\\n\",\n+        \"\\n\",\n+        \"HENRY BOLINGBROKE:\\n\",\n+        \"My gracious uncle--\\n\",\n+        \"\\n\",\n+        \"DUKE OF YORK:\\n\",\n+        \"As much disgraced to the court, the gods them speak,\\n\",\n+        \"And now in peace himself excuse thee in the world.\\n\",\n+        \"\\n\",\n+        \"HORTENSIO:\\n\",\n+        \"Madam, 'tis not the cause of the counterfeit of the earth,\\n\",\n+        \"And leave me to the sun that set them on the earth\\n\",\n+        \"And leave the world and are revenged for thee.\\n\",\n+        \"\\n\",\n+        \"GLOUCESTER:\\n\",\n+        \"I would they were talking with the very name of means\\n\",\n+        \"To make a puppet of a guest, and therefore, good Grumio,\\n\",\n+        \"Nor arm'd to prison, o' the clouds, of the whole field,\\n\",\n+        \"With the admire\\n\",\n+        \"With the feeding of thy chair, and we have heard it so,\\n\",\n+        \"I thank you, sir, he is a visor friendship with your silly your bed.\\n\",\n+        \"\\n\",\n+        \"SAMPSON:\\n\",\n+        \"I do desire to live, I pray: some stand of the minds, make thee remedies\\n\",\n+        \"With the enemies of my soul.\\n\",\n+        \"\\n\",\n+        \"MENENIUS:\\n\",\n+        \"I'll keep the cause of my mistress.\\n\",\n+        \"\\n\",\n+        \"POLIXENES:\\n\",\n+        \"My brother Marcius!\\n\",\n+        \"\\n\",\n+        \"Second Servant:\\n\",\n+        \"Will't ple\\n\",\n+        \"```\\n\",\n+        \"\\n\",\n+        \"Of course, while some of the sentences are grammatical, most do not make sense. But, consider:\\n\",\n+        \"\\n\",\n+        \"* Our model is character based (when we began training, it did not yet know how to spell a valid English word, or that words were even a unit of text).\\n\",\n+        \"\\n\",\n+        \"* The structure of the output resembles a play (blocks begin with a speaker name, in all caps similar to the original text). Sentences generally end with a period. If you look at the text from a distance (or don't read the invididual words too closely, it appears as if it's an excerpt from a play).\\n\",\n+        \"\\n\",\n+        \"As a next step, you can experiment training the model on a different dataset - any large text file(ASCII) will do, and you can modify a single line of code below to make that change. Have fun!\\n\"\n+      ]\n+    },\n+    {\n+      \"metadata\": {\n+        \"id\": \"R3p22DBDsaCA\",\n+        \"colab_type\": \"text\"\n+      },\n+      \"cell_type\": \"markdown\",\n+      \"source\": [\n+        \"## Install unidecode library\\n\",\n+        \"A helpful library to convert unicode to ASCII.\"\n+      ]\n+    },\n+    {\n+      \"metadata\": {\n+        \"id\": \"wZ6LOM12wKGH\",\n+        \"colab_type\": \"code\",\n+        \"colab\": {\n+          \"autoexec\": {\n+            \"startup\": false,\n+            \"wait_interval\": 0\n+          }\n+        }\n+      },\n+      \"cell_type\": \"code\",\n+      \"source\": [\n+        \"!pip install unidecode\"\n+      ],\n+      \"execution_count\": 0,\n+      \"outputs\": []\n+    },\n+    {\n+      \"metadata\": {\n+        \"id\": \"WGyKZj3bzf9p\",\n+        \"colab_type\": \"text\"\n+      },\n+      \"cell_type\": \"markdown\",\n+      \"source\": [\n+        \"## Import tensorflow and enable eager execution.\"\n+      ]\n+    },\n+    {\n+      \"metadata\": {\n+        \"id\": \"yG_n40gFzf9s\",\n+        \"colab_type\": \"code\",\n+        \"colab\": {\n+          \"autoexec\": {\n+            \"startup\": false,\n+            \"wait_interval\": 0\n+          }\n+        }\n+      },\n+      \"cell_type\": \"code\",\n+      \"source\": [\n+        \"# Import TensorFlow >= 1.9 and enable eager execution\\n\",\n+        \"import tensorflow as tf\\n\",\n+        \"\\n\",\n+        \"# Note: Once you enable the eager execution mode, it cannot be disabled. \\n\",", "path": "tensorflow/contrib/eager/python/examples/generative_examples/text_generation.ipynb", "position": null, "original_position": 159, "commit_id": "005799649aae3fe4a01a8e69cf88ebbcd86ca8f0", "original_commit_id": "cd8cc926c172c944673ebe5713329829e5086e14", "user": {"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}, "body": "Why would the user want to restart the runtime? If you don't have a good answer I'd suggest removing this warning", "created_at": "2018-07-06T16:32:43Z", "updated_at": "2018-07-06T16:46:25Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/20488#discussion_r200706307", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/20488", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/200706307"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/20488#discussion_r200706307"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/20488"}}, "body_html": "<p>Why would the user want to restart the runtime? If you don't have a good answer I'd suggest removing this warning</p>", "body_text": "Why would the user want to restart the runtime? If you don't have a good answer I'd suggest removing this warning"}