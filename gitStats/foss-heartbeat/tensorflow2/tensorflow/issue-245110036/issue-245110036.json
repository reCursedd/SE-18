{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11719", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11719/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11719/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11719/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/11719", "id": 245110036, "node_id": "MDExOlB1bGxSZXF1ZXN0MTMyMDcyMTA2", "number": 11719, "title": "Add a custom tag for use by fusion ops", "user": {"login": "DavidNorman", "id": 606831, "node_id": "MDQ6VXNlcjYwNjgzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/606831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DavidNorman", "html_url": "https://github.com/DavidNorman", "followers_url": "https://api.github.com/users/DavidNorman/followers", "following_url": "https://api.github.com/users/DavidNorman/following{/other_user}", "gists_url": "https://api.github.com/users/DavidNorman/gists{/gist_id}", "starred_url": "https://api.github.com/users/DavidNorman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DavidNorman/subscriptions", "organizations_url": "https://api.github.com/users/DavidNorman/orgs", "repos_url": "https://api.github.com/users/DavidNorman/repos", "events_url": "https://api.github.com/users/DavidNorman/events{/privacy}", "received_events_url": "https://api.github.com/users/DavidNorman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "majnemer", "id": 353625, "node_id": "MDQ6VXNlcjM1MzYyNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/353625?v=4", "gravatar_id": "", "url": "https://api.github.com/users/majnemer", "html_url": "https://github.com/majnemer", "followers_url": "https://api.github.com/users/majnemer/followers", "following_url": "https://api.github.com/users/majnemer/following{/other_user}", "gists_url": "https://api.github.com/users/majnemer/gists{/gist_id}", "starred_url": "https://api.github.com/users/majnemer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/majnemer/subscriptions", "organizations_url": "https://api.github.com/users/majnemer/orgs", "repos_url": "https://api.github.com/users/majnemer/repos", "events_url": "https://api.github.com/users/majnemer/events{/privacy}", "received_events_url": "https://api.github.com/users/majnemer/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "majnemer", "id": 353625, "node_id": "MDQ6VXNlcjM1MzYyNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/353625?v=4", "gravatar_id": "", "url": "https://api.github.com/users/majnemer", "html_url": "https://github.com/majnemer", "followers_url": "https://api.github.com/users/majnemer/followers", "following_url": "https://api.github.com/users/majnemer/following{/other_user}", "gists_url": "https://api.github.com/users/majnemer/gists{/gist_id}", "starred_url": "https://api.github.com/users/majnemer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/majnemer/subscriptions", "organizations_url": "https://api.github.com/users/majnemer/orgs", "repos_url": "https://api.github.com/users/majnemer/repos", "events_url": "https://api.github.com/users/majnemer/events{/privacy}", "received_events_url": "https://api.github.com/users/majnemer/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2017-07-24T15:02:57Z", "updated_at": "2017-07-30T10:43:35Z", "closed_at": "2017-07-30T10:43:32Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11719", "html_url": "https://github.com/tensorflow/tensorflow/pull/11719", "diff_url": "https://github.com/tensorflow/tensorflow/pull/11719.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/11719.patch"}, "body_html": "<p>Currently when replacing an op with a fusion of many, the information which is carried by that fusion op is limited to a small fixed enumeration.</p>\n<p>I have previously added a 'custom' entry to that enumeration, however it isn't really enough to label an arbitrary and non-fixed set of fuse results.</p>\n<p>This adds a general integer that can be used by any back end to label fused ops arbitrarily.</p>\n<p>There are other ways to achieve this:</p>\n<ul>\n<li>replacing the FusionKind enumeration with an integer field</li>\n<li>allowing read-write access to the metadata structure, and replacing it with something like a map</li>\n<li>some other thing I can't think of right now.</li>\n</ul>\n<p>I'm happy to go with a different scheme, but I do think that the HloInstruction needs an annotation interface of some kind.</p>", "body_text": "Currently when replacing an op with a fusion of many, the information which is carried by that fusion op is limited to a small fixed enumeration.\nI have previously added a 'custom' entry to that enumeration, however it isn't really enough to label an arbitrary and non-fixed set of fuse results.\nThis adds a general integer that can be used by any back end to label fused ops arbitrarily.\nThere are other ways to achieve this:\n\nreplacing the FusionKind enumeration with an integer field\nallowing read-write access to the metadata structure, and replacing it with something like a map\nsome other thing I can't think of right now.\n\nI'm happy to go with a different scheme, but I do think that the HloInstruction needs an annotation interface of some kind.", "body": "Currently when replacing an op with a fusion of many, the information which is carried by that fusion op is limited to a small fixed enumeration.\r\n\r\nI have previously added a 'custom' entry to that enumeration, however it isn't really enough to label an arbitrary and non-fixed set of fuse results.\r\n\r\nThis adds a general integer that can be used by any back end to label fused ops arbitrarily.\r\n\r\nThere are other ways to achieve this:\r\n- replacing the FusionKind enumeration with an integer field\r\n- allowing read-write access to the metadata structure, and replacing it with something like a map\r\n- some other thing I can't think of right now.\r\n\r\nI'm happy to go with a different scheme, but I do think that the HloInstruction needs an annotation interface of some kind.\r\n\r\n\r\n\r\n"}