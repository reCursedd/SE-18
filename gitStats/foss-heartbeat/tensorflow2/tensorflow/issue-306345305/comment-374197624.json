{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/374197624", "html_url": "https://github.com/tensorflow/tensorflow/issues/17817#issuecomment-374197624", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17817", "id": 374197624, "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDE5NzYyNA==", "user": {"login": "chunkya", "id": 15236298, "node_id": "MDQ6VXNlcjE1MjM2Mjk4", "avatar_url": "https://avatars2.githubusercontent.com/u/15236298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chunkya", "html_url": "https://github.com/chunkya", "followers_url": "https://api.github.com/users/chunkya/followers", "following_url": "https://api.github.com/users/chunkya/following{/other_user}", "gists_url": "https://api.github.com/users/chunkya/gists{/gist_id}", "starred_url": "https://api.github.com/users/chunkya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chunkya/subscriptions", "organizations_url": "https://api.github.com/users/chunkya/orgs", "repos_url": "https://api.github.com/users/chunkya/repos", "events_url": "https://api.github.com/users/chunkya/events{/privacy}", "received_events_url": "https://api.github.com/users/chunkya/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-19T12:38:42Z", "updated_at": "2018-03-19T12:38:42Z", "author_association": "NONE", "body_html": "<p>I am using the model generated by the retrain.py code.</p>\n<pre><code>python tensorflow/examples/label_image/label_image.py --graph=/tmp/output_graph.pb --labels=/tmp/output_labels.txt --input_layer=Mul --output_layer=final_result --input_mean=128 --input_std=128\n</code></pre>\n<p>And i replaced the input in label_image.py to use a (2, 299, 299, 3) shape array.</p>\n<pre><code>graph = load_graph(model_file)\n# t = read_tensor_from_image_file(\n#     file_name,\n#     input_height=input_height,\n#     input_width=input_width,\n#     input_mean=input_mean,\n#     input_std=input_std)\n\nt = np.zeros((2, 299, 299, 3))\n\ninput_name = \"import/\" + input_layer\noutput_name = \"import/\" + output_layer\ninput_operation = graph.get_operation_by_name(input_name)\noutput_operation = graph.get_operation_by_name(output_name)\n\nwith tf.Session(graph=graph) as sess:\n  results = sess.run(output_operation.outputs[0], {\n      input_operation.outputs[0]: t\n  })\n</code></pre>", "body_text": "I am using the model generated by the retrain.py code.\npython tensorflow/examples/label_image/label_image.py --graph=/tmp/output_graph.pb --labels=/tmp/output_labels.txt --input_layer=Mul --output_layer=final_result --input_mean=128 --input_std=128\n\nAnd i replaced the input in label_image.py to use a (2, 299, 299, 3) shape array.\ngraph = load_graph(model_file)\n# t = read_tensor_from_image_file(\n#     file_name,\n#     input_height=input_height,\n#     input_width=input_width,\n#     input_mean=input_mean,\n#     input_std=input_std)\n\nt = np.zeros((2, 299, 299, 3))\n\ninput_name = \"import/\" + input_layer\noutput_name = \"import/\" + output_layer\ninput_operation = graph.get_operation_by_name(input_name)\noutput_operation = graph.get_operation_by_name(output_name)\n\nwith tf.Session(graph=graph) as sess:\n  results = sess.run(output_operation.outputs[0], {\n      input_operation.outputs[0]: t\n  })", "body": "I am using the model generated by the retrain.py code. \r\n```\r\npython tensorflow/examples/label_image/label_image.py --graph=/tmp/output_graph.pb --labels=/tmp/output_labels.txt --input_layer=Mul --output_layer=final_result --input_mean=128 --input_std=128\r\n```\r\nAnd i replaced the input in label_image.py to use a (2, 299, 299, 3) shape array.\r\n```\r\ngraph = load_graph(model_file)\r\n# t = read_tensor_from_image_file(\r\n#     file_name,\r\n#     input_height=input_height,\r\n#     input_width=input_width,\r\n#     input_mean=input_mean,\r\n#     input_std=input_std)\r\n\r\nt = np.zeros((2, 299, 299, 3))\r\n\r\ninput_name = \"import/\" + input_layer\r\noutput_name = \"import/\" + output_layer\r\ninput_operation = graph.get_operation_by_name(input_name)\r\noutput_operation = graph.get_operation_by_name(output_name)\r\n\r\nwith tf.Session(graph=graph) as sess:\r\n  results = sess.run(output_operation.outputs[0], {\r\n      input_operation.outputs[0]: t\r\n  })\r\n```"}