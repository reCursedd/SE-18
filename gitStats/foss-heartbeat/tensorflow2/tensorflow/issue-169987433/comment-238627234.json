{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/238627234", "html_url": "https://github.com/tensorflow/tensorflow/issues/3699#issuecomment-238627234", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3699", "id": 238627234, "node_id": "MDEyOklzc3VlQ29tbWVudDIzODYyNzIzNA==", "user": {"login": "patfla", "id": 979871, "node_id": "MDQ6VXNlcjk3OTg3MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/979871?v=4", "gravatar_id": "", "url": "https://api.github.com/users/patfla", "html_url": "https://github.com/patfla", "followers_url": "https://api.github.com/users/patfla/followers", "following_url": "https://api.github.com/users/patfla/following{/other_user}", "gists_url": "https://api.github.com/users/patfla/gists{/gist_id}", "starred_url": "https://api.github.com/users/patfla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/patfla/subscriptions", "organizations_url": "https://api.github.com/users/patfla/orgs", "repos_url": "https://api.github.com/users/patfla/repos", "events_url": "https://api.github.com/users/patfla/events{/privacy}", "received_events_url": "https://api.github.com/users/patfla/received_events", "type": "User", "site_admin": false}, "created_at": "2016-08-09T17:28:07Z", "updated_at": "2016-08-09T17:28:07Z", "author_association": "NONE", "body_html": "<p>Sorry - \"inline\" ended up getting used in two contexts - in the code function name itself but I used it in the sense of: is adding __n to memcpy(a,b,n) valid in itself or does it need a special compiler switch?  Now that I think about it memcpy returns a pointer so this is just standard C pointer arithmetic in which case you don't need a complier switch.</p>\n<p>If so then the question becomes: why is memcpy not declared in this scope?  Still this is not in the tensorflow codebase but rather /usr/include/string.h and so the problem is perhaps with my installation.  That said, the error pops up well into the build (at about [?] 1200 out of the 2500 files) which would see to indicate that for the most part my installation is working fine.  If there's a problem with one's installation one usually (note: usually) sees it right away.</p>", "body_text": "Sorry - \"inline\" ended up getting used in two contexts - in the code function name itself but I used it in the sense of: is adding __n to memcpy(a,b,n) valid in itself or does it need a special compiler switch?  Now that I think about it memcpy returns a pointer so this is just standard C pointer arithmetic in which case you don't need a complier switch.\nIf so then the question becomes: why is memcpy not declared in this scope?  Still this is not in the tensorflow codebase but rather /usr/include/string.h and so the problem is perhaps with my installation.  That said, the error pops up well into the build (at about [?] 1200 out of the 2500 files) which would see to indicate that for the most part my installation is working fine.  If there's a problem with one's installation one usually (note: usually) sees it right away.", "body": "Sorry - \"inline\" ended up getting used in two contexts - in the code function name itself but I used it in the sense of: is adding __n to memcpy(a,b,n) valid in itself or does it need a special compiler switch?  Now that I think about it memcpy returns a pointer so this is just standard C pointer arithmetic in which case you don't need a complier switch.\n\nIf so then the question becomes: why is memcpy not declared in this scope?  Still this is not in the tensorflow codebase but rather /usr/include/string.h and so the problem is perhaps with my installation.  That said, the error pops up well into the build (at about [?] 1200 out of the 2500 files) which would see to indicate that for the most part my installation is working fine.  If there's a problem with one's installation one usually (note: usually) sees it right away.\n"}