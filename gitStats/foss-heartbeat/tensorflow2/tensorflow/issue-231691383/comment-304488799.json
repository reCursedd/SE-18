{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/304488799", "html_url": "https://github.com/tensorflow/tensorflow/issues/10227#issuecomment-304488799", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10227", "id": 304488799, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDQ4ODc5OQ==", "user": {"login": "jart", "id": 49262, "node_id": "MDQ6VXNlcjQ5MjYy", "avatar_url": "https://avatars1.githubusercontent.com/u/49262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jart", "html_url": "https://github.com/jart", "followers_url": "https://api.github.com/users/jart/followers", "following_url": "https://api.github.com/users/jart/following{/other_user}", "gists_url": "https://api.github.com/users/jart/gists{/gist_id}", "starred_url": "https://api.github.com/users/jart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jart/subscriptions", "organizations_url": "https://api.github.com/users/jart/orgs", "repos_url": "https://api.github.com/users/jart/repos", "events_url": "https://api.github.com/users/jart/events{/privacy}", "received_events_url": "https://api.github.com/users/jart/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-28T02:35:51Z", "updated_at": "2017-05-28T02:35:51Z", "author_association": "MEMBER", "body_html": "<p>I would recommend working around this with nginx.</p>\n<div class=\"highlight highlight-source-nginx\"><pre><span class=\"pl-k\">server</span> {\n  <span class=\"pl-k\">listen</span> <span class=\"pl-s\">80</span><span class=\"pl-c1\"> default_server</span>;\n  <span class=\"pl-k\">listen</span> [::]:80<span class=\"pl-c1\"> default_server</span> ipv6only=on;\n\n  <span class=\"pl-k\">location</span> <span class=\"pl-en\">/ </span>{\n    <span class=\"pl-k\">proxy_http_version</span> <span class=\"pl-c1\">1.1</span>;\n    <span class=\"pl-k\">proxy_pass</span> http://127.0.0.1:6006;\n    <span class=\"pl-k\">add_header</span> <span class=\"pl-s\">'Access-Control-Allow-Origin'</span> <span class=\"pl-s\">'<span class=\"pl-smi\">$cors_origin</span>'</span>;\n    <span class=\"pl-k\">add_header</span> <span class=\"pl-s\">'Access-Control-Allow-Methods'</span> <span class=\"pl-s\">'GET, POST, OPTIONS'</span>;\n    <span class=\"pl-k\">add_header</span> <span class=\"pl-s\">'Access-Control-Allow-Headers'</span> <span class=\"pl-s\">'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Custom-Header-1'</span>;\n  }\n}</pre></div>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=38796628\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/dandelionmane\">@dandelionmane</a> Should we add an <code>--insecure_cors</code> flag? Or a <code>--header=Foo:bar</code> flag where the user repeats all that, and it gets applied to all responses?</p>", "body_text": "I would recommend working around this with nginx.\nserver {\n  listen 80 default_server;\n  listen [::]:80 default_server ipv6only=on;\n\n  location / {\n    proxy_http_version 1.1;\n    proxy_pass http://127.0.0.1:6006;\n    add_header 'Access-Control-Allow-Origin' '$cors_origin';\n    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';\n    add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Custom-Header-1';\n  }\n}\n@dandelionmane Should we add an --insecure_cors flag? Or a --header=Foo:bar flag where the user repeats all that, and it gets applied to all responses?", "body": "I would recommend working around this with nginx.\r\n\r\n```nginx\r\nserver {\r\n  listen 80 default_server;\r\n  listen [::]:80 default_server ipv6only=on;\r\n\r\n  location / {\r\n    proxy_http_version 1.1;\r\n    proxy_pass http://127.0.0.1:6006;\r\n    add_header 'Access-Control-Allow-Origin' '$cors_origin';\r\n    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';\r\n    add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Custom-Header-1';\r\n  }\r\n}\r\n```\r\n\r\n@dandelionmane Should we add an `--insecure_cors` flag? Or a `--header=Foo:bar` flag where the user repeats all that, and it gets applied to all responses?"}