{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/288864852", "html_url": "https://github.com/tensorflow/tensorflow/issues/8536#issuecomment-288864852", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8536", "id": 288864852, "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODg2NDg1Mg==", "user": {"login": "kirk86", "id": 2902390, "node_id": "MDQ6VXNlcjI5MDIzOTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2902390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirk86", "html_url": "https://github.com/kirk86", "followers_url": "https://api.github.com/users/kirk86/followers", "following_url": "https://api.github.com/users/kirk86/following{/other_user}", "gists_url": "https://api.github.com/users/kirk86/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirk86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirk86/subscriptions", "organizations_url": "https://api.github.com/users/kirk86/orgs", "repos_url": "https://api.github.com/users/kirk86/repos", "events_url": "https://api.github.com/users/kirk86/events{/privacy}", "received_events_url": "https://api.github.com/users/kirk86/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-23T21:25:02Z", "updated_at": "2017-03-23T21:46:19Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=88808\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/skye\">@skye</a> Hi, may I ask for a clarification. So I'm running the code inside a multiplexer session and I try to follow your example. When I run the code since it runs on multicore machine it creates pid's for each core. Which one should I choose according to you example?</p>\n<p>When I gdb on one of the pid's then I only get information about reading symbols and loaded symbols is that the expected result?</p>\n<p>An example is the following:</p>\n<pre><code>Loaded symbols for /home/user/miniconda2/envs/tf-1/lib/python2.7/site-packages/pandas/msgpack/_unpacker.so\nReading symbols from /home/user/miniconda2/envs/tf-1/lib/python2.7/site-packages/pandas/util/_move.so...done.\nLoaded symbols for /home/user/miniconda2/envs/tf-1/lib/python2.7/site-packages/pandas/util/_move.so\nReading symbols from /home/user/miniconda2/envs/tf-1/lib/python2.7/site-packages/pandas/_testing.so...done.\nLoaded symbols for /home/user/miniconda2/envs/tf-1/lib/python2.7/site-packages/pandas/_testing.so\n0x0000003f67a0d930 in sem_wait () from /lib64/libpthread.so.0\nMissing separate debuginfos, use: debuginfo-install glibc-2.12-1.149.el6_6.7.x86_64 libuuid-2.17.2-12.18.el6.x86_64\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE3 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\nterminate called after throwing an instance of 'std::bad_alloc'\n  what():  std::bad_alloc\nAborted (core dumped)\n</code></pre>", "body_text": "@skye Hi, may I ask for a clarification. So I'm running the code inside a multiplexer session and I try to follow your example. When I run the code since it runs on multicore machine it creates pid's for each core. Which one should I choose according to you example?\nWhen I gdb on one of the pid's then I only get information about reading symbols and loaded symbols is that the expected result?\nAn example is the following:\nLoaded symbols for /home/user/miniconda2/envs/tf-1/lib/python2.7/site-packages/pandas/msgpack/_unpacker.so\nReading symbols from /home/user/miniconda2/envs/tf-1/lib/python2.7/site-packages/pandas/util/_move.so...done.\nLoaded symbols for /home/user/miniconda2/envs/tf-1/lib/python2.7/site-packages/pandas/util/_move.so\nReading symbols from /home/user/miniconda2/envs/tf-1/lib/python2.7/site-packages/pandas/_testing.so...done.\nLoaded symbols for /home/user/miniconda2/envs/tf-1/lib/python2.7/site-packages/pandas/_testing.so\n0x0000003f67a0d930 in sem_wait () from /lib64/libpthread.so.0\nMissing separate debuginfos, use: debuginfo-install glibc-2.12-1.149.el6_6.7.x86_64 libuuid-2.17.2-12.18.el6.x86_64\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE3 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\nterminate called after throwing an instance of 'std::bad_alloc'\n  what():  std::bad_alloc\nAborted (core dumped)", "body": "@skye Hi, may I ask for a clarification. So I'm running the code inside a multiplexer session and I try to follow your example. When I run the code since it runs on multicore machine it creates pid's for each core. Which one should I choose according to you example?\r\n\r\nWhen I gdb on one of the pid's then I only get information about reading symbols and loaded symbols is that the expected result?\r\n\r\nAn example is the following:\r\n```\r\nLoaded symbols for /home/user/miniconda2/envs/tf-1/lib/python2.7/site-packages/pandas/msgpack/_unpacker.so\r\nReading symbols from /home/user/miniconda2/envs/tf-1/lib/python2.7/site-packages/pandas/util/_move.so...done.\r\nLoaded symbols for /home/user/miniconda2/envs/tf-1/lib/python2.7/site-packages/pandas/util/_move.so\r\nReading symbols from /home/user/miniconda2/envs/tf-1/lib/python2.7/site-packages/pandas/_testing.so...done.\r\nLoaded symbols for /home/user/miniconda2/envs/tf-1/lib/python2.7/site-packages/pandas/_testing.so\r\n0x0000003f67a0d930 in sem_wait () from /lib64/libpthread.so.0\r\nMissing separate debuginfos, use: debuginfo-install glibc-2.12-1.149.el6_6.7.x86_64 libuuid-2.17.2-12.18.el6.x86_64\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE3 instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\r\nterminate called after throwing an instance of 'std::bad_alloc'\r\n  what():  std::bad_alloc\r\nAborted (core dumped)\r\n```"}