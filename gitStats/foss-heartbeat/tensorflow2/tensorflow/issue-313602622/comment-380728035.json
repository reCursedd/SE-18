{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/380728035", "html_url": "https://github.com/tensorflow/tensorflow/issues/18450#issuecomment-380728035", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18450", "id": 380728035, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDcyODAzNQ==", "user": {"login": "rharish101", "id": 25344287, "node_id": "MDQ6VXNlcjI1MzQ0Mjg3", "avatar_url": "https://avatars0.githubusercontent.com/u/25344287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rharish101", "html_url": "https://github.com/rharish101", "followers_url": "https://api.github.com/users/rharish101/followers", "following_url": "https://api.github.com/users/rharish101/following{/other_user}", "gists_url": "https://api.github.com/users/rharish101/gists{/gist_id}", "starred_url": "https://api.github.com/users/rharish101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rharish101/subscriptions", "organizations_url": "https://api.github.com/users/rharish101/orgs", "repos_url": "https://api.github.com/users/rharish101/repos", "events_url": "https://api.github.com/users/rharish101/events{/privacy}", "received_events_url": "https://api.github.com/users/rharish101/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-12T08:52:02Z", "updated_at": "2018-04-12T08:52:02Z", "author_association": "NONE", "body_html": "<p>I'm also facing build problems even with gcc-6.</p>\n<p><strong>System information</strong><br>\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No<br>\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Arch Linux<br>\nTensorFlow installed from (source or binary): Source from master branch (r1.7)<br>\nTensorFlow version (use command below): 1.7.0<br>\nPython version: 3.6.4<br>\nBazel version (if compiling from source): 0.11.1<br>\nGCC/Compiler version (if compiling from source): 6.4.1<br>\nCUDA/cuDNN version: 9.1.85/7.1.2<br>\nGPU model and memory: Nvidia GTX 960M, 4GB<br>\nExact command to reproduce: <code>./configure &amp;&amp; bazel build --config=opt --config=cuda --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" //tensorflow/tools/pip_package:build_pip_package --verbose_failures</code></p>\n<p><strong>Logs:</strong></p>\n<pre><code>INFO: From Compiling tensorflow/contrib/reduce_slice_ops/kernels/reduce_slice_ops_gpu.cu.cc:\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple: In instantiation of 'static constexpr bool std::_TC&lt;&lt;anonymous&gt;, _Elements&gt;::_MoveConstructibleTuple() [with _UElements = {const std::tuple&lt;int, int, int&gt;&amp;}; bool &lt;anonymous&gt; = true; _Elements = {int, int, int}]':\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:626:248:   required by substitution of 'template&lt;class ... _UElements, typename std::enable_if&lt;(((std::_TC&lt;(sizeof... (_UElements) == 1), int, int, int&gt;::_NotSameTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), int, int, int&gt;::_MoveConstructibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), int, int, int&gt;::_ImplicitlyMoveConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; (3ul &gt;= 1)), bool&gt;::type &lt;anonymous&gt; &gt; constexpr std::tuple&lt; &lt;template-parameter-1-1&gt; &gt;::tuple(_UElements&amp;&amp; ...) [with _UElements = {const std::tuple&lt;int, int, int&gt;&amp;}; typename std::enable_if&lt;(((std::_TC&lt;(sizeof... (_UElements) == 1), int, int, int&gt;::_NotSameTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), int, int, int&gt;::_MoveConstructibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), int, int, int&gt;::_ImplicitlyMoveConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; (3ul &gt;= 1)), bool&gt;::type &lt;anonymous&gt; = &lt;missing&gt;]'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:970:16:   required by substitution of 'template&lt;class _Tp, class _Arg, class&gt; static std::true_type std::__do_is_direct_constructible_impl::__test(int) [with _Tp = std::tuple&lt;int, int, int&gt;; _Arg = const std::tuple&lt;int, int, int&gt;&amp;; &lt;template-parameter-1-3&gt; = &lt;missing&gt;]'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:981:40:   required from 'struct std::__is_direct_constructible_impl&lt;std::tuple&lt;int, int, int&gt;, const std::tuple&lt;int, int, int&gt;&amp;&gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:143:8:   required from 'struct std::__and_&lt;std::is_destructible&lt;std::tuple&lt;int, int, int&gt; &gt;, std::__is_direct_constructible_impl&lt;std::tuple&lt;int, int, int&gt;, const std::tuple&lt;int, int, int&gt;&amp;&gt; &gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:985:8:   required from 'struct std::__is_direct_constructible_new_safe&lt;std::tuple&lt;int, int, int&gt;, const std::tuple&lt;int, int, int&gt;&amp;&gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1067:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1115:8:   required from 'struct std::__is_constructible_impl&lt;std::tuple&lt;int, int, int&gt;, const std::tuple&lt;int, int, int&gt;&amp;&gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1126:8:   required from 'struct std::is_constructible&lt;std::tuple&lt;int, int, int&gt;, const std::tuple&lt;int, int, int&gt;&amp;&gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1138:8:   required from 'struct std::__is_copy_constructible_impl&lt;std::tuple&lt;int, int, int&gt;, true&gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1144:8:   required from 'struct std::is_copy_constructible&lt;std::tuple&lt;int, int, int&gt; &gt;'\n./tensorflow/compiler/xla/statusor.h:87:7:   required from 'class xla::StatusOr&lt;std::tuple&lt;int, int, int&gt; &gt;'\n./tensorflow/stream_executor/dnn.h:890:68:   required from here\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:483:67: error: mismatched argument pack lengths while expanding 'std::is_constructible&lt;_Elements, _UElements&amp;&amp;&gt;'\n       return __and_&lt;is_constructible&lt;_Elements, _UElements&amp;&amp;&gt;...&gt;::value;\n                                                                   ^~~~~\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:484:1: error: body of constexpr function 'static constexpr bool std::_TC&lt;&lt;anonymous&gt;, _Elements&gt;::_MoveConstructibleTuple() [with _UElements = {const std::tuple&lt;int, int, int&gt;&amp;}; bool &lt;anonymous&gt; = true; _Elements = {int, int, int}]' not a return-statement\n     }\n ^\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple: In instantiation of 'static constexpr bool std::_TC&lt;&lt;anonymous&gt;, _Elements&gt;::_ImplicitlyMoveConvertibleTuple() [with _UElements = {const std::tuple&lt;int, int, int&gt;&amp;}; bool &lt;anonymous&gt; = true; _Elements = {int, int, int}]':\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:626:362:   required by substitution of 'template&lt;class ... _UElements, typename std::enable_if&lt;(((std::_TC&lt;(sizeof... (_UElements) == 1), int, int, int&gt;::_NotSameTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), int, int, int&gt;::_MoveConstructibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), int, int, int&gt;::_ImplicitlyMoveConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; (3ul &gt;= 1)), bool&gt;::type &lt;anonymous&gt; &gt; constexpr std::tuple&lt; &lt;template-parameter-1-1&gt; &gt;::tuple(_UElements&amp;&amp; ...) [with _UElements = {const std::tuple&lt;int, int, int&gt;&amp;}; typename std::enable_if&lt;(((std::_TC&lt;(sizeof... (_UElements) == 1), int, int, int&gt;::_NotSameTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), int, int, int&gt;::_MoveConstructibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), int, int, int&gt;::_ImplicitlyMoveConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; (3ul &gt;= 1)), bool&gt;::type &lt;anonymous&gt; = &lt;missing&gt;]'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:970:16:   required by substitution of 'template&lt;class _Tp, class _Arg, class&gt; static std::true_type std::__do_is_direct_constructible_impl::__test(int) [with _Tp = std::tuple&lt;int, int, int&gt;; _Arg = const std::tuple&lt;int, int, int&gt;&amp;; &lt;template-parameter-1-3&gt; = &lt;missing&gt;]'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:981:40:   required from 'struct std::__is_direct_constructible_impl&lt;std::tuple&lt;int, int, int&gt;, const std::tuple&lt;int, int, int&gt;&amp;&gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:143:8:   required from 'struct std::__and_&lt;std::is_destructible&lt;std::tuple&lt;int, int, int&gt; &gt;, std::__is_direct_constructible_impl&lt;std::tuple&lt;int, int, int&gt;, const std::tuple&lt;int, int, int&gt;&amp;&gt; &gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:985:8:   required from 'struct std::__is_direct_constructible_new_safe&lt;std::tuple&lt;int, int, int&gt;, const std::tuple&lt;int, int, int&gt;&amp;&gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1067:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1115:8:   required from 'struct std::__is_constructible_impl&lt;std::tuple&lt;int, int, int&gt;, const std::tuple&lt;int, int, int&gt;&amp;&gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1126:8:   required from 'struct std::is_constructible&lt;std::tuple&lt;int, int, int&gt;, const std::tuple&lt;int, int, int&gt;&amp;&gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1138:8:   required from 'struct std::__is_copy_constructible_impl&lt;std::tuple&lt;int, int, int&gt;, true&gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1144:8:   required from 'struct std::is_copy_constructible&lt;std::tuple&lt;int, int, int&gt; &gt;'\n./tensorflow/compiler/xla/statusor.h:87:7:   required from 'class xla::StatusOr&lt;std::tuple&lt;int, int, int&gt; &gt;'\n./tensorflow/stream_executor/dnn.h:890:68:   required from here\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:489:65: error: mismatched argument pack lengths while expanding 'std::is_convertible&lt;_UElements&amp;&amp;, _Elements&gt;'\n       return __and_&lt;is_convertible&lt;_UElements&amp;&amp;, _Elements&gt;...&gt;::value;\n                                                                 ^~~~~\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:490:1: error: body of constexpr function 'static constexpr bool std::_TC&lt;&lt;anonymous&gt;, _Elements&gt;::_ImplicitlyMoveConvertibleTuple() [with _UElements = {const std::tuple&lt;int, int, int&gt;&amp;}; bool &lt;anonymous&gt; = true; _Elements = {int, int, int}]' not a return-statement\n     }\n ^\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple: In instantiation of 'static constexpr bool std::_TC&lt;&lt;anonymous&gt;, _Elements&gt;::_NonNestedTuple() [with _SrcTuple = const std::tuple&lt;int, int, int&gt;&amp;; bool &lt;anonymous&gt; = true; _Elements = {int, int, int}]':\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:662:419:   required by substitution of 'template&lt;class ... _UElements, class _Dummy, typename std::enable_if&lt;((std::_TC&lt;(1ul == sizeof... (_UElements)), int, int, int&gt;::_ConstructibleTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), int, int, int&gt;::_ImplicitlyConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(std::is_same&lt;_Dummy, void&gt;::value &amp;&amp; (1ul == 1)), int, int, int&gt;::_NonNestedTuple&lt;const tuple&lt;_Elements ...&gt;&amp;&gt;()), bool&gt;::type &lt;anonymous&gt; &gt; constexpr std::tuple&lt; &lt;template-parameter-1-1&gt; &gt;::tuple(const std::tuple&lt;_Args1 ...&gt;&amp;) [with _UElements = {int, int, int}; _Dummy = void; typename std::enable_if&lt;((std::_TC&lt;(1ul == sizeof... (_UElements)), int, int, int&gt;::_ConstructibleTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), int, int, int&gt;::_ImplicitlyConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(std::is_same&lt;_Dummy, void&gt;::value &amp;&amp; (1ul == 1)), int, int, int&gt;::_NonNestedTuple&lt;const tuple&lt;_Elements ...&gt;&amp;&gt;()), bool&gt;::type &lt;anonymous&gt; = &lt;missing&gt;]'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:970:16:   required by substitution of 'template&lt;class _Tp, class _Arg, class&gt; static std::true_type std::__do_is_direct_constructible_impl::__test(int) [with _Tp = std::tuple&lt;int, int, int&gt;; _Arg = const std::tuple&lt;int, int, int&gt;&amp;; &lt;template-parameter-1-3&gt; = &lt;missing&gt;]'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:981:40:   required from 'struct std::__is_direct_constructible_impl&lt;std::tuple&lt;int, int, int&gt;, const std::tuple&lt;int, int, int&gt;&amp;&gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:143:8:   required from 'struct std::__and_&lt;std::is_destructible&lt;std::tuple&lt;int, int, int&gt; &gt;, std::__is_direct_constructible_impl&lt;std::tuple&lt;int, int, int&gt;, const std::tuple&lt;int, int, int&gt;&amp;&gt; &gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:985:8:   required from 'struct std::__is_direct_constructible_new_safe&lt;std::tuple&lt;int, int, int&gt;, const std::tuple&lt;int, int, int&gt;&amp;&gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1067:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1115:8:   required from 'struct std::__is_constructible_impl&lt;std::tuple&lt;int, int, int&gt;, const std::tuple&lt;int, int, int&gt;&amp;&gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1126:8:   required from 'struct std::is_constructible&lt;std::tuple&lt;int, int, int&gt;, const std::tuple&lt;int, int, int&gt;&amp;&gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1138:8:   required from 'struct std::__is_copy_constructible_impl&lt;std::tuple&lt;int, int, int&gt;, true&gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1144:8:   required from 'struct std::is_copy_constructible&lt;std::tuple&lt;int, int, int&gt; &gt;'\n./tensorflow/compiler/xla/statusor.h:87:7:   required from 'class xla::StatusOr&lt;std::tuple&lt;int, int, int&gt; &gt;'\n./tensorflow/stream_executor/dnn.h:890:68:   required from here\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:495:244: error: wrong number of template arguments (4, should be 2)\n       return  __and_&lt;__not_&lt;is_same&lt;tuple&lt;_Elements...&gt;,\n                                                                                                                                                                                                                                                    ^    \n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1558:8: note: provided for 'template&lt;class _From, class _To&gt; struct std::is_convertible'\n     struct is_convertible\n        ^~~~~~~~~~~~~~\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:502:1: error: body of constexpr function 'static constexpr bool std::_TC&lt;&lt;anonymous&gt;, _Elements&gt;::_NonNestedTuple() [with _SrcTuple = const std::tuple&lt;int, int, int&gt;&amp;; bool &lt;anonymous&gt; = true; _Elements = {int, int, int}]' not a return-statement\n     }\n ^\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple: In instantiation of 'static constexpr bool std::_TC&lt;&lt;anonymous&gt;, _Elements&gt;::_MoveConstructibleTuple() [with _UElements = {std::tuple&lt;int, int, int&gt;}; bool &lt;anonymous&gt; = true; _Elements = {int, int, int}]':\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:626:248:   required by substitution of 'template&lt;class ... _UElements, typename std::enable_if&lt;(((std::_TC&lt;(sizeof... (_UElements) == 1), int, int, int&gt;::_NotSameTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), int, int, int&gt;::_MoveConstructibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), int, int, int&gt;::_ImplicitlyMoveConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; (3ul &gt;= 1)), bool&gt;::type &lt;anonymous&gt; &gt; constexpr std::tuple&lt; &lt;template-parameter-1-1&gt; &gt;::tuple(_UElements&amp;&amp; ...) [with _UElements = {std::tuple&lt;int, int, int&gt;}; typename std::enable_if&lt;(((std::_TC&lt;(sizeof... (_UElements) == 1), int, int, int&gt;::_NotSameTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), int, int, int&gt;::_MoveConstructibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), int, int, int&gt;::_ImplicitlyMoveConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; (3ul &gt;= 1)), bool&gt;::type &lt;anonymous&gt; = &lt;missing&gt;]'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:970:16:   required by substitution of 'template&lt;class _Tp, class _Arg, class&gt; static std::true_type std::__do_is_direct_constructible_impl::__test(int) [with _Tp = std::tuple&lt;int, int, int&gt;; _Arg = std::tuple&lt;int, int, int&gt;&amp;&amp;; &lt;template-parameter-1-3&gt; = &lt;missing&gt;]'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:981:40:   required from 'struct std::__is_direct_constructible_impl&lt;std::tuple&lt;int, int, int&gt;, std::tuple&lt;int, int, int&gt;&amp;&amp;&gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:143:8:   required from 'struct std::__and_&lt;std::is_destructible&lt;std::tuple&lt;int, int, int&gt; &gt;, std::__is_direct_constructible_impl&lt;std::tuple&lt;int, int, int&gt;, std::tuple&lt;int, int, int&gt;&amp;&amp;&gt; &gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:985:8:   required from 'struct std::__is_direct_constructible_new_safe&lt;std::tuple&lt;int, int, int&gt;, std::tuple&lt;int, int, int&gt;&amp;&amp;&gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1067:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1115:8:   required from 'struct std::__is_constructible_impl&lt;std::tuple&lt;int, int, int&gt;, std::tuple&lt;int, int, int&gt;&amp;&amp;&gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1126:8:   required from 'struct std::is_constructible&lt;std::tuple&lt;int, int, int&gt;, std::tuple&lt;int, int, int&gt;&amp;&amp;&gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1156:8:   required from 'struct std::__is_move_constructible_impl&lt;std::tuple&lt;int, int, int&gt;, true&gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1162:8:   required from 'struct std::is_move_constructible&lt;std::tuple&lt;int, int, int&gt; &gt;'\n./tensorflow/compiler/xla/statusor.h:87:7:   required from 'class xla::StatusOr&lt;std::tuple&lt;int, int, int&gt; &gt;'\n./tensorflow/stream_executor/dnn.h:890:68:   required from here\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:483:67: error: mismatched argument pack lengths while expanding 'std::is_constructible&lt;_Elements, _UElements&amp;&amp;&gt;'\n       return __and_&lt;is_constructible&lt;_Elements, _UElements&amp;&amp;&gt;...&gt;::value;\n                                                                   ^~~~~\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:484:1: error: body of constexpr function 'static constexpr bool std::_TC&lt;&lt;anonymous&gt;, _Elements&gt;::_MoveConstructibleTuple() [with _UElements = {std::tuple&lt;int, int, int&gt;}; bool &lt;anonymous&gt; = true; _Elements = {int, int, int}]' not a return-statement\n     }\n ^\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple: In instantiation of 'static constexpr bool std::_TC&lt;&lt;anonymous&gt;, _Elements&gt;::_ImplicitlyMoveConvertibleTuple() [with _UElements = {std::tuple&lt;int, int, int&gt;}; bool &lt;anonymous&gt; = true; _Elements = {int, int, int}]':\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:626:362:   required by substitution of 'template&lt;class ... _UElements, typename std::enable_if&lt;(((std::_TC&lt;(sizeof... (_UElements) == 1), int, int, int&gt;::_NotSameTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), int, int, int&gt;::_MoveConstructibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), int, int, int&gt;::_ImplicitlyMoveConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; (3ul &gt;= 1)), bool&gt;::type &lt;anonymous&gt; &gt; constexpr std::tuple&lt; &lt;template-parameter-1-1&gt; &gt;::tuple(_UElements&amp;&amp; ...) [with _UElements = {std::tuple&lt;int, int, int&gt;}; typename std::enable_if&lt;(((std::_TC&lt;(sizeof... (_UElements) == 1), int, int, int&gt;::_NotSameTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), int, int, int&gt;::_MoveConstructibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), int, int, int&gt;::_ImplicitlyMoveConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; (3ul &gt;= 1)), bool&gt;::type &lt;anonymous&gt; = &lt;missing&gt;]'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:970:16:   required by substitution of 'template&lt;class _Tp, class _Arg, class&gt; static std::true_type std::__do_is_direct_constructible_impl::__test(int) [with _Tp = std::tuple&lt;int, int, int&gt;; _Arg = std::tuple&lt;int, int, int&gt;&amp;&amp;; &lt;template-parameter-1-3&gt; = &lt;missing&gt;]'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:981:40:   required from 'struct std::__is_direct_constructible_impl&lt;std::tuple&lt;int, int, int&gt;, std::tuple&lt;int, int, int&gt;&amp;&amp;&gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:143:8:   required from 'struct std::__and_&lt;std::is_destructible&lt;std::tuple&lt;int, int, int&gt; &gt;, std::__is_direct_constructible_impl&lt;std::tuple&lt;int, int, int&gt;, std::tuple&lt;int, int, int&gt;&amp;&amp;&gt; &gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:985:8:   required from 'struct std::__is_direct_constructible_new_safe&lt;std::tuple&lt;int, int, int&gt;, std::tuple&lt;int, int, int&gt;&amp;&amp;&gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1067:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1115:8:   required from 'struct std::__is_constructible_impl&lt;std::tuple&lt;int, int, int&gt;, std::tuple&lt;int, int, int&gt;&amp;&amp;&gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1126:8:   required from 'struct std::is_constructible&lt;std::tuple&lt;int, int, int&gt;, std::tuple&lt;int, int, int&gt;&amp;&amp;&gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1156:8:   required from 'struct std::__is_move_constructible_impl&lt;std::tuple&lt;int, int, int&gt;, true&gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1162:8:   required from 'struct std::is_move_constructible&lt;std::tuple&lt;int, int, int&gt; &gt;'\n./tensorflow/compiler/xla/statusor.h:87:7:   required from 'class xla::StatusOr&lt;std::tuple&lt;int, int, int&gt; &gt;'\n./tensorflow/stream_executor/dnn.h:890:68:   required from here\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:489:65: error: mismatched argument pack lengths while expanding 'std::is_convertible&lt;_UElements&amp;&amp;, _Elements&gt;'\n       return __and_&lt;is_convertible&lt;_UElements&amp;&amp;, _Elements&gt;...&gt;::value;\n                                                                 ^~~~~\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:490:1: error: body of constexpr function 'static constexpr bool std::_TC&lt;&lt;anonymous&gt;, _Elements&gt;::_ImplicitlyMoveConvertibleTuple() [with _UElements = {std::tuple&lt;int, int, int&gt;}; bool &lt;anonymous&gt; = true; _Elements = {int, int, int}]' not a return-statement\n     }\n ^\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple: In instantiation of 'static constexpr bool std::_TC&lt;&lt;anonymous&gt;, _Elements&gt;::_NonNestedTuple() [with _SrcTuple = std::tuple&lt;int, int, int&gt;&amp;&amp;; bool &lt;anonymous&gt; = true; _Elements = {int, int, int}]':\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:686:422:   required by substitution of 'template&lt;class ... _UElements, class _Dummy, typename std::enable_if&lt;((std::_TC&lt;(1ul == sizeof... (_UElements)), int, int, int&gt;::_MoveConstructibleTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), int, int, int&gt;::_ImplicitlyMoveConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(std::is_same&lt;_Dummy, void&gt;::value &amp;&amp; (1ul == 1)), int, int, int&gt;::_NonNestedTuple&lt;tuple&lt;_Elements ...&gt;&amp;&amp;&gt;()), bool&gt;::type &lt;anonymous&gt; &gt; constexpr std::tuple&lt; &lt;template-parameter-1-1&gt; &gt;::tuple(std::tuple&lt;_Args1 ...&gt;&amp;&amp;) [with _UElements = {int, int, int}; _Dummy = void; typename std::enable_if&lt;((std::_TC&lt;(1ul == sizeof... (_UElements)), int, int, int&gt;::_MoveConstructibleTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), int, int, int&gt;::_ImplicitlyMoveConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(std::is_same&lt;_Dummy, void&gt;::value &amp;&amp; (1ul == 1)), int, int, int&gt;::_NonNestedTuple&lt;tuple&lt;_Elements ...&gt;&amp;&amp;&gt;()), bool&gt;::type &lt;anonymous&gt; = &lt;missing&gt;]'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:970:16:   required by substitution of 'template&lt;class _Tp, class _Arg, class&gt; static std::true_type std::__do_is_direct_constructible_impl::__test(int) [with _Tp = std::tuple&lt;int, int, int&gt;; _Arg = std::tuple&lt;int, int, int&gt;&amp;&amp;; &lt;template-parameter-1-3&gt; = &lt;missing&gt;]'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:981:40:   required from 'struct std::__is_direct_constructible_impl&lt;std::tuple&lt;int, int, int&gt;, std::tuple&lt;int, int, int&gt;&amp;&amp;&gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:143:8:   required from 'struct std::__and_&lt;std::is_destructible&lt;std::tuple&lt;int, int, int&gt; &gt;, std::__is_direct_constructible_impl&lt;std::tuple&lt;int, int, int&gt;, std::tuple&lt;int, int, int&gt;&amp;&amp;&gt; &gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:985:8:   required from 'struct std::__is_direct_constructible_new_safe&lt;std::tuple&lt;int, int, int&gt;, std::tuple&lt;int, int, int&gt;&amp;&amp;&gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1067:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1115:8:   required from 'struct std::__is_constructible_impl&lt;std::tuple&lt;int, int, int&gt;, std::tuple&lt;int, int, int&gt;&amp;&amp;&gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1126:8:   required from 'struct std::is_constructible&lt;std::tuple&lt;int, int, int&gt;, std::tuple&lt;int, int, int&gt;&amp;&amp;&gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1156:8:   required from 'struct std::__is_move_constructible_impl&lt;std::tuple&lt;int, int, int&gt;, true&gt;'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1162:8:   required from 'struct std::is_move_constructible&lt;std::tuple&lt;int, int, int&gt; &gt;'\n./tensorflow/compiler/xla/statusor.h:87:7:   required from 'class xla::StatusOr&lt;std::tuple&lt;int, int, int&gt; &gt;'\n./tensorflow/stream_executor/dnn.h:890:68:   required from here\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:495:244: error: wrong number of template arguments (4, should be 2)\n       return  __and_&lt;__not_&lt;is_same&lt;tuple&lt;_Elements...&gt;,\n                                                                                                                                                                                                                                                    ^    \n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1558:8: note: provided for 'template&lt;class _From, class _To&gt; struct std::is_convertible'\n     struct is_convertible\n        ^~~~~~~~~~~~~~\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:502:1: error: body of constexpr function 'static constexpr bool std::_TC&lt;&lt;anonymous&gt;, _Elements&gt;::_NonNestedTuple() [with _SrcTuple = std::tuple&lt;int, int, int&gt;&amp;&amp;; bool &lt;anonymous&gt; = true; _Elements = {int, int, int}]' not a return-statement\n     }\n ^\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple: In instantiation of 'static constexpr bool std::_TC&lt;&lt;anonymous&gt;, _Elements&gt;::_MoveConstructibleTuple() [with _UElements = {tensorflow::Status}; bool &lt;anonymous&gt; = true; _Elements = {int, int, int}]':\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:626:248:   required by substitution of 'template&lt;class ... _UElements, typename std::enable_if&lt;(((std::_TC&lt;(sizeof... (_UElements) == 1), int, int, int&gt;::_NotSameTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), int, int, int&gt;::_MoveConstructibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), int, int, int&gt;::_ImplicitlyMoveConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; (3ul &gt;= 1)), bool&gt;::type &lt;anonymous&gt; &gt; constexpr std::tuple&lt; &lt;template-parameter-1-1&gt; &gt;::tuple(_UElements&amp;&amp; ...) [with _UElements = {tensorflow::Status}; typename std::enable_if&lt;(((std::_TC&lt;(sizeof... (_UElements) == 1), int, int, int&gt;::_NotSameTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), int, int, int&gt;::_MoveConstructibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), int, int, int&gt;::_ImplicitlyMoveConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; (3ul &gt;= 1)), bool&gt;::type &lt;anonymous&gt; = &lt;missing&gt;]'\n./tensorflow/compiler/xla/statusor.h:227:80:   required from 'xla::StatusOr&lt;T&gt;::StatusOr(tensorflow::Status&amp;&amp;) [with T = std::tuple&lt;int, int, int&gt;]'\n./tensorflow/stream_executor/dnn.h:891:91:   required from here\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:483:67: error: mismatched argument pack lengths while expanding 'std::is_constructible&lt;_Elements, _UElements&amp;&amp;&gt;'\n       return __and_&lt;is_constructible&lt;_Elements, _UElements&amp;&amp;&gt;...&gt;::value;\n                                                                   ^~~~~\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:484:1: error: body of constexpr function 'static constexpr bool std::_TC&lt;&lt;anonymous&gt;, _Elements&gt;::_MoveConstructibleTuple() [with _UElements = {tensorflow::Status}; bool &lt;anonymous&gt; = true; _Elements = {int, int, int}]' not a return-statement\n     }\n ^\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple: In instantiation of 'static constexpr bool std::_TC&lt;&lt;anonymous&gt;, _Elements&gt;::_ImplicitlyMoveConvertibleTuple() [with _UElements = {tensorflow::Status}; bool &lt;anonymous&gt; = true; _Elements = {int, int, int}]':\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:626:362:   required by substitution of 'template&lt;class ... _UElements, typename std::enable_if&lt;(((std::_TC&lt;(sizeof... (_UElements) == 1), int, int, int&gt;::_NotSameTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), int, int, int&gt;::_MoveConstructibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), int, int, int&gt;::_ImplicitlyMoveConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; (3ul &gt;= 1)), bool&gt;::type &lt;anonymous&gt; &gt; constexpr std::tuple&lt; &lt;template-parameter-1-1&gt; &gt;::tuple(_UElements&amp;&amp; ...) [with _UElements = {tensorflow::Status}; typename std::enable_if&lt;(((std::_TC&lt;(sizeof... (_UElements) == 1), int, int, int&gt;::_NotSameTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), int, int, int&gt;::_MoveConstructibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), int, int, int&gt;::_ImplicitlyMoveConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; (3ul &gt;= 1)), bool&gt;::type &lt;anonymous&gt; = &lt;missing&gt;]'\n./tensorflow/compiler/xla/statusor.h:227:80:   required from 'xla::StatusOr&lt;T&gt;::StatusOr(tensorflow::Status&amp;&amp;) [with T = std::tuple&lt;int, int, int&gt;]'\n./tensorflow/stream_executor/dnn.h:891:91:   required from here\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:489:65: error: mismatched argument pack lengths while expanding 'std::is_convertible&lt;_UElements&amp;&amp;, _Elements&gt;'\n       return __and_&lt;is_convertible&lt;_UElements&amp;&amp;, _Elements&gt;...&gt;::value;\n                                                                 ^~~~~\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:490:1: error: body of constexpr function 'static constexpr bool std::_TC&lt;&lt;anonymous&gt;, _Elements&gt;::_ImplicitlyMoveConvertibleTuple() [with _UElements = {tensorflow::Status}; bool &lt;anonymous&gt; = true; _Elements = {int, int, int}]' not a return-statement\n     }\n ^\nERROR: /mnt/Data/tensorflow/tensorflow/contrib/reduce_slice_ops/BUILD:14:1: output 'tensorflow/contrib/reduce_slice_ops/_objs/python/ops/_reduce_slice_ops_gpu/tensorflow/contrib/reduce_slice_ops/kernels/reduce_slice_ops_gpu.cu.pic.o' was not created\nERROR: /mnt/Data/tensorflow/tensorflow/contrib/reduce_slice_ops/BUILD:14:1: not all outputs were created or valid\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\nINFO: Elapsed time: 167.446s, Critical Path: 47.43s\nFAILED: Build did NOT complete successfully\n</code></pre>", "body_text": "I'm also facing build problems even with gcc-6.\nSystem information\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Arch Linux\nTensorFlow installed from (source or binary): Source from master branch (r1.7)\nTensorFlow version (use command below): 1.7.0\nPython version: 3.6.4\nBazel version (if compiling from source): 0.11.1\nGCC/Compiler version (if compiling from source): 6.4.1\nCUDA/cuDNN version: 9.1.85/7.1.2\nGPU model and memory: Nvidia GTX 960M, 4GB\nExact command to reproduce: ./configure && bazel build --config=opt --config=cuda --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" //tensorflow/tools/pip_package:build_pip_package --verbose_failures\nLogs:\nINFO: From Compiling tensorflow/contrib/reduce_slice_ops/kernels/reduce_slice_ops_gpu.cu.cc:\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple: In instantiation of 'static constexpr bool std::_TC<<anonymous>, _Elements>::_MoveConstructibleTuple() [with _UElements = {const std::tuple<int, int, int>&}; bool <anonymous> = true; _Elements = {int, int, int}]':\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:626:248:   required by substitution of 'template<class ... _UElements, typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), int, int, int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {const std::tuple<int, int, int>&}; typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), int, int, int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> = <missing>]'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:970:16:   required by substitution of 'template<class _Tp, class _Arg, class> static std::true_type std::__do_is_direct_constructible_impl::__test(int) [with _Tp = std::tuple<int, int, int>; _Arg = const std::tuple<int, int, int>&; <template-parameter-1-3> = <missing>]'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:981:40:   required from 'struct std::__is_direct_constructible_impl<std::tuple<int, int, int>, const std::tuple<int, int, int>&>'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:143:8:   required from 'struct std::__and_<std::is_destructible<std::tuple<int, int, int> >, std::__is_direct_constructible_impl<std::tuple<int, int, int>, const std::tuple<int, int, int>&> >'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:985:8:   required from 'struct std::__is_direct_constructible_new_safe<std::tuple<int, int, int>, const std::tuple<int, int, int>&>'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1067:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1115:8:   required from 'struct std::__is_constructible_impl<std::tuple<int, int, int>, const std::tuple<int, int, int>&>'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1126:8:   required from 'struct std::is_constructible<std::tuple<int, int, int>, const std::tuple<int, int, int>&>'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1138:8:   required from 'struct std::__is_copy_constructible_impl<std::tuple<int, int, int>, true>'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1144:8:   required from 'struct std::is_copy_constructible<std::tuple<int, int, int> >'\n./tensorflow/compiler/xla/statusor.h:87:7:   required from 'class xla::StatusOr<std::tuple<int, int, int> >'\n./tensorflow/stream_executor/dnn.h:890:68:   required from here\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:483:67: error: mismatched argument pack lengths while expanding 'std::is_constructible<_Elements, _UElements&&>'\n       return __and_<is_constructible<_Elements, _UElements&&>...>::value;\n                                                                   ^~~~~\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:484:1: error: body of constexpr function 'static constexpr bool std::_TC<<anonymous>, _Elements>::_MoveConstructibleTuple() [with _UElements = {const std::tuple<int, int, int>&}; bool <anonymous> = true; _Elements = {int, int, int}]' not a return-statement\n     }\n ^\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple: In instantiation of 'static constexpr bool std::_TC<<anonymous>, _Elements>::_ImplicitlyMoveConvertibleTuple() [with _UElements = {const std::tuple<int, int, int>&}; bool <anonymous> = true; _Elements = {int, int, int}]':\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:626:362:   required by substitution of 'template<class ... _UElements, typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), int, int, int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {const std::tuple<int, int, int>&}; typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), int, int, int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> = <missing>]'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:970:16:   required by substitution of 'template<class _Tp, class _Arg, class> static std::true_type std::__do_is_direct_constructible_impl::__test(int) [with _Tp = std::tuple<int, int, int>; _Arg = const std::tuple<int, int, int>&; <template-parameter-1-3> = <missing>]'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:981:40:   required from 'struct std::__is_direct_constructible_impl<std::tuple<int, int, int>, const std::tuple<int, int, int>&>'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:143:8:   required from 'struct std::__and_<std::is_destructible<std::tuple<int, int, int> >, std::__is_direct_constructible_impl<std::tuple<int, int, int>, const std::tuple<int, int, int>&> >'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:985:8:   required from 'struct std::__is_direct_constructible_new_safe<std::tuple<int, int, int>, const std::tuple<int, int, int>&>'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1067:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1115:8:   required from 'struct std::__is_constructible_impl<std::tuple<int, int, int>, const std::tuple<int, int, int>&>'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1126:8:   required from 'struct std::is_constructible<std::tuple<int, int, int>, const std::tuple<int, int, int>&>'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1138:8:   required from 'struct std::__is_copy_constructible_impl<std::tuple<int, int, int>, true>'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1144:8:   required from 'struct std::is_copy_constructible<std::tuple<int, int, int> >'\n./tensorflow/compiler/xla/statusor.h:87:7:   required from 'class xla::StatusOr<std::tuple<int, int, int> >'\n./tensorflow/stream_executor/dnn.h:890:68:   required from here\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:489:65: error: mismatched argument pack lengths while expanding 'std::is_convertible<_UElements&&, _Elements>'\n       return __and_<is_convertible<_UElements&&, _Elements>...>::value;\n                                                                 ^~~~~\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:490:1: error: body of constexpr function 'static constexpr bool std::_TC<<anonymous>, _Elements>::_ImplicitlyMoveConvertibleTuple() [with _UElements = {const std::tuple<int, int, int>&}; bool <anonymous> = true; _Elements = {int, int, int}]' not a return-statement\n     }\n ^\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple: In instantiation of 'static constexpr bool std::_TC<<anonymous>, _Elements>::_NonNestedTuple() [with _SrcTuple = const std::tuple<int, int, int>&; bool <anonymous> = true; _Elements = {int, int, int}]':\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:662:419:   required by substitution of 'template<class ... _UElements, class _Dummy, typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ImplicitlyConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), int, int, int>::_NonNestedTuple<const tuple<_Elements ...>&>()), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(const std::tuple<_Args1 ...>&) [with _UElements = {int, int, int}; _Dummy = void; typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ImplicitlyConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), int, int, int>::_NonNestedTuple<const tuple<_Elements ...>&>()), bool>::type <anonymous> = <missing>]'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:970:16:   required by substitution of 'template<class _Tp, class _Arg, class> static std::true_type std::__do_is_direct_constructible_impl::__test(int) [with _Tp = std::tuple<int, int, int>; _Arg = const std::tuple<int, int, int>&; <template-parameter-1-3> = <missing>]'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:981:40:   required from 'struct std::__is_direct_constructible_impl<std::tuple<int, int, int>, const std::tuple<int, int, int>&>'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:143:8:   required from 'struct std::__and_<std::is_destructible<std::tuple<int, int, int> >, std::__is_direct_constructible_impl<std::tuple<int, int, int>, const std::tuple<int, int, int>&> >'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:985:8:   required from 'struct std::__is_direct_constructible_new_safe<std::tuple<int, int, int>, const std::tuple<int, int, int>&>'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1067:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1115:8:   required from 'struct std::__is_constructible_impl<std::tuple<int, int, int>, const std::tuple<int, int, int>&>'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1126:8:   required from 'struct std::is_constructible<std::tuple<int, int, int>, const std::tuple<int, int, int>&>'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1138:8:   required from 'struct std::__is_copy_constructible_impl<std::tuple<int, int, int>, true>'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1144:8:   required from 'struct std::is_copy_constructible<std::tuple<int, int, int> >'\n./tensorflow/compiler/xla/statusor.h:87:7:   required from 'class xla::StatusOr<std::tuple<int, int, int> >'\n./tensorflow/stream_executor/dnn.h:890:68:   required from here\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:495:244: error: wrong number of template arguments (4, should be 2)\n       return  __and_<__not_<is_same<tuple<_Elements...>,\n                                                                                                                                                                                                                                                    ^    \n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1558:8: note: provided for 'template<class _From, class _To> struct std::is_convertible'\n     struct is_convertible\n        ^~~~~~~~~~~~~~\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:502:1: error: body of constexpr function 'static constexpr bool std::_TC<<anonymous>, _Elements>::_NonNestedTuple() [with _SrcTuple = const std::tuple<int, int, int>&; bool <anonymous> = true; _Elements = {int, int, int}]' not a return-statement\n     }\n ^\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple: In instantiation of 'static constexpr bool std::_TC<<anonymous>, _Elements>::_MoveConstructibleTuple() [with _UElements = {std::tuple<int, int, int>}; bool <anonymous> = true; _Elements = {int, int, int}]':\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:626:248:   required by substitution of 'template<class ... _UElements, typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), int, int, int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {std::tuple<int, int, int>}; typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), int, int, int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> = <missing>]'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:970:16:   required by substitution of 'template<class _Tp, class _Arg, class> static std::true_type std::__do_is_direct_constructible_impl::__test(int) [with _Tp = std::tuple<int, int, int>; _Arg = std::tuple<int, int, int>&&; <template-parameter-1-3> = <missing>]'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:981:40:   required from 'struct std::__is_direct_constructible_impl<std::tuple<int, int, int>, std::tuple<int, int, int>&&>'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:143:8:   required from 'struct std::__and_<std::is_destructible<std::tuple<int, int, int> >, std::__is_direct_constructible_impl<std::tuple<int, int, int>, std::tuple<int, int, int>&&> >'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:985:8:   required from 'struct std::__is_direct_constructible_new_safe<std::tuple<int, int, int>, std::tuple<int, int, int>&&>'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1067:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1115:8:   required from 'struct std::__is_constructible_impl<std::tuple<int, int, int>, std::tuple<int, int, int>&&>'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1126:8:   required from 'struct std::is_constructible<std::tuple<int, int, int>, std::tuple<int, int, int>&&>'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1156:8:   required from 'struct std::__is_move_constructible_impl<std::tuple<int, int, int>, true>'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1162:8:   required from 'struct std::is_move_constructible<std::tuple<int, int, int> >'\n./tensorflow/compiler/xla/statusor.h:87:7:   required from 'class xla::StatusOr<std::tuple<int, int, int> >'\n./tensorflow/stream_executor/dnn.h:890:68:   required from here\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:483:67: error: mismatched argument pack lengths while expanding 'std::is_constructible<_Elements, _UElements&&>'\n       return __and_<is_constructible<_Elements, _UElements&&>...>::value;\n                                                                   ^~~~~\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:484:1: error: body of constexpr function 'static constexpr bool std::_TC<<anonymous>, _Elements>::_MoveConstructibleTuple() [with _UElements = {std::tuple<int, int, int>}; bool <anonymous> = true; _Elements = {int, int, int}]' not a return-statement\n     }\n ^\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple: In instantiation of 'static constexpr bool std::_TC<<anonymous>, _Elements>::_ImplicitlyMoveConvertibleTuple() [with _UElements = {std::tuple<int, int, int>}; bool <anonymous> = true; _Elements = {int, int, int}]':\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:626:362:   required by substitution of 'template<class ... _UElements, typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), int, int, int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {std::tuple<int, int, int>}; typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), int, int, int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> = <missing>]'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:970:16:   required by substitution of 'template<class _Tp, class _Arg, class> static std::true_type std::__do_is_direct_constructible_impl::__test(int) [with _Tp = std::tuple<int, int, int>; _Arg = std::tuple<int, int, int>&&; <template-parameter-1-3> = <missing>]'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:981:40:   required from 'struct std::__is_direct_constructible_impl<std::tuple<int, int, int>, std::tuple<int, int, int>&&>'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:143:8:   required from 'struct std::__and_<std::is_destructible<std::tuple<int, int, int> >, std::__is_direct_constructible_impl<std::tuple<int, int, int>, std::tuple<int, int, int>&&> >'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:985:8:   required from 'struct std::__is_direct_constructible_new_safe<std::tuple<int, int, int>, std::tuple<int, int, int>&&>'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1067:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1115:8:   required from 'struct std::__is_constructible_impl<std::tuple<int, int, int>, std::tuple<int, int, int>&&>'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1126:8:   required from 'struct std::is_constructible<std::tuple<int, int, int>, std::tuple<int, int, int>&&>'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1156:8:   required from 'struct std::__is_move_constructible_impl<std::tuple<int, int, int>, true>'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1162:8:   required from 'struct std::is_move_constructible<std::tuple<int, int, int> >'\n./tensorflow/compiler/xla/statusor.h:87:7:   required from 'class xla::StatusOr<std::tuple<int, int, int> >'\n./tensorflow/stream_executor/dnn.h:890:68:   required from here\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:489:65: error: mismatched argument pack lengths while expanding 'std::is_convertible<_UElements&&, _Elements>'\n       return __and_<is_convertible<_UElements&&, _Elements>...>::value;\n                                                                 ^~~~~\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:490:1: error: body of constexpr function 'static constexpr bool std::_TC<<anonymous>, _Elements>::_ImplicitlyMoveConvertibleTuple() [with _UElements = {std::tuple<int, int, int>}; bool <anonymous> = true; _Elements = {int, int, int}]' not a return-statement\n     }\n ^\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple: In instantiation of 'static constexpr bool std::_TC<<anonymous>, _Elements>::_NonNestedTuple() [with _SrcTuple = std::tuple<int, int, int>&&; bool <anonymous> = true; _Elements = {int, int, int}]':\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:686:422:   required by substitution of 'template<class ... _UElements, class _Dummy, typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_MoveConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), int, int, int>::_NonNestedTuple<tuple<_Elements ...>&&>()), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(std::tuple<_Args1 ...>&&) [with _UElements = {int, int, int}; _Dummy = void; typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_MoveConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), int, int, int>::_NonNestedTuple<tuple<_Elements ...>&&>()), bool>::type <anonymous> = <missing>]'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:970:16:   required by substitution of 'template<class _Tp, class _Arg, class> static std::true_type std::__do_is_direct_constructible_impl::__test(int) [with _Tp = std::tuple<int, int, int>; _Arg = std::tuple<int, int, int>&&; <template-parameter-1-3> = <missing>]'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:981:40:   required from 'struct std::__is_direct_constructible_impl<std::tuple<int, int, int>, std::tuple<int, int, int>&&>'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:143:8:   required from 'struct std::__and_<std::is_destructible<std::tuple<int, int, int> >, std::__is_direct_constructible_impl<std::tuple<int, int, int>, std::tuple<int, int, int>&&> >'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:985:8:   required from 'struct std::__is_direct_constructible_new_safe<std::tuple<int, int, int>, std::tuple<int, int, int>&&>'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1067:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1115:8:   required from 'struct std::__is_constructible_impl<std::tuple<int, int, int>, std::tuple<int, int, int>&&>'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1126:8:   required from 'struct std::is_constructible<std::tuple<int, int, int>, std::tuple<int, int, int>&&>'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1156:8:   required from 'struct std::__is_move_constructible_impl<std::tuple<int, int, int>, true>'\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1162:8:   required from 'struct std::is_move_constructible<std::tuple<int, int, int> >'\n./tensorflow/compiler/xla/statusor.h:87:7:   required from 'class xla::StatusOr<std::tuple<int, int, int> >'\n./tensorflow/stream_executor/dnn.h:890:68:   required from here\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:495:244: error: wrong number of template arguments (4, should be 2)\n       return  __and_<__not_<is_same<tuple<_Elements...>,\n                                                                                                                                                                                                                                                    ^    \n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1558:8: note: provided for 'template<class _From, class _To> struct std::is_convertible'\n     struct is_convertible\n        ^~~~~~~~~~~~~~\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:502:1: error: body of constexpr function 'static constexpr bool std::_TC<<anonymous>, _Elements>::_NonNestedTuple() [with _SrcTuple = std::tuple<int, int, int>&&; bool <anonymous> = true; _Elements = {int, int, int}]' not a return-statement\n     }\n ^\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple: In instantiation of 'static constexpr bool std::_TC<<anonymous>, _Elements>::_MoveConstructibleTuple() [with _UElements = {tensorflow::Status}; bool <anonymous> = true; _Elements = {int, int, int}]':\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:626:248:   required by substitution of 'template<class ... _UElements, typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), int, int, int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {tensorflow::Status}; typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), int, int, int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> = <missing>]'\n./tensorflow/compiler/xla/statusor.h:227:80:   required from 'xla::StatusOr<T>::StatusOr(tensorflow::Status&&) [with T = std::tuple<int, int, int>]'\n./tensorflow/stream_executor/dnn.h:891:91:   required from here\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:483:67: error: mismatched argument pack lengths while expanding 'std::is_constructible<_Elements, _UElements&&>'\n       return __and_<is_constructible<_Elements, _UElements&&>...>::value;\n                                                                   ^~~~~\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:484:1: error: body of constexpr function 'static constexpr bool std::_TC<<anonymous>, _Elements>::_MoveConstructibleTuple() [with _UElements = {tensorflow::Status}; bool <anonymous> = true; _Elements = {int, int, int}]' not a return-statement\n     }\n ^\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple: In instantiation of 'static constexpr bool std::_TC<<anonymous>, _Elements>::_ImplicitlyMoveConvertibleTuple() [with _UElements = {tensorflow::Status}; bool <anonymous> = true; _Elements = {int, int, int}]':\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:626:362:   required by substitution of 'template<class ... _UElements, typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), int, int, int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {tensorflow::Status}; typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), int, int, int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> = <missing>]'\n./tensorflow/compiler/xla/statusor.h:227:80:   required from 'xla::StatusOr<T>::StatusOr(tensorflow::Status&&) [with T = std::tuple<int, int, int>]'\n./tensorflow/stream_executor/dnn.h:891:91:   required from here\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:489:65: error: mismatched argument pack lengths while expanding 'std::is_convertible<_UElements&&, _Elements>'\n       return __and_<is_convertible<_UElements&&, _Elements>...>::value;\n                                                                 ^~~~~\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:490:1: error: body of constexpr function 'static constexpr bool std::_TC<<anonymous>, _Elements>::_ImplicitlyMoveConvertibleTuple() [with _UElements = {tensorflow::Status}; bool <anonymous> = true; _Elements = {int, int, int}]' not a return-statement\n     }\n ^\nERROR: /mnt/Data/tensorflow/tensorflow/contrib/reduce_slice_ops/BUILD:14:1: output 'tensorflow/contrib/reduce_slice_ops/_objs/python/ops/_reduce_slice_ops_gpu/tensorflow/contrib/reduce_slice_ops/kernels/reduce_slice_ops_gpu.cu.pic.o' was not created\nERROR: /mnt/Data/tensorflow/tensorflow/contrib/reduce_slice_ops/BUILD:14:1: not all outputs were created or valid\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\nINFO: Elapsed time: 167.446s, Critical Path: 47.43s\nFAILED: Build did NOT complete successfully", "body": "I'm also facing build problems even with gcc-6.\r\n\r\n**System information**\r\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\r\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Arch Linux\r\nTensorFlow installed from (source or binary): Source from master branch (r1.7)\r\nTensorFlow version (use command below): 1.7.0\r\nPython version: 3.6.4\r\nBazel version (if compiling from source): 0.11.1\r\nGCC/Compiler version (if compiling from source): 6.4.1\r\nCUDA/cuDNN version: 9.1.85/7.1.2\r\nGPU model and memory: Nvidia GTX 960M, 4GB\r\nExact command to reproduce: `./configure && bazel build --config=opt --config=cuda --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" //tensorflow/tools/pip_package:build_pip_package --verbose_failures`\r\n\r\n**Logs:**\r\n```\r\nINFO: From Compiling tensorflow/contrib/reduce_slice_ops/kernels/reduce_slice_ops_gpu.cu.cc:\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple: In instantiation of 'static constexpr bool std::_TC<<anonymous>, _Elements>::_MoveConstructibleTuple() [with _UElements = {const std::tuple<int, int, int>&}; bool <anonymous> = true; _Elements = {int, int, int}]':\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:626:248:   required by substitution of 'template<class ... _UElements, typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), int, int, int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {const std::tuple<int, int, int>&}; typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), int, int, int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> = <missing>]'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:970:16:   required by substitution of 'template<class _Tp, class _Arg, class> static std::true_type std::__do_is_direct_constructible_impl::__test(int) [with _Tp = std::tuple<int, int, int>; _Arg = const std::tuple<int, int, int>&; <template-parameter-1-3> = <missing>]'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:981:40:   required from 'struct std::__is_direct_constructible_impl<std::tuple<int, int, int>, const std::tuple<int, int, int>&>'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:143:8:   required from 'struct std::__and_<std::is_destructible<std::tuple<int, int, int> >, std::__is_direct_constructible_impl<std::tuple<int, int, int>, const std::tuple<int, int, int>&> >'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:985:8:   required from 'struct std::__is_direct_constructible_new_safe<std::tuple<int, int, int>, const std::tuple<int, int, int>&>'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1067:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1115:8:   required from 'struct std::__is_constructible_impl<std::tuple<int, int, int>, const std::tuple<int, int, int>&>'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1126:8:   required from 'struct std::is_constructible<std::tuple<int, int, int>, const std::tuple<int, int, int>&>'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1138:8:   required from 'struct std::__is_copy_constructible_impl<std::tuple<int, int, int>, true>'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1144:8:   required from 'struct std::is_copy_constructible<std::tuple<int, int, int> >'\r\n./tensorflow/compiler/xla/statusor.h:87:7:   required from 'class xla::StatusOr<std::tuple<int, int, int> >'\r\n./tensorflow/stream_executor/dnn.h:890:68:   required from here\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:483:67: error: mismatched argument pack lengths while expanding 'std::is_constructible<_Elements, _UElements&&>'\r\n       return __and_<is_constructible<_Elements, _UElements&&>...>::value;\r\n                                                                   ^~~~~\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:484:1: error: body of constexpr function 'static constexpr bool std::_TC<<anonymous>, _Elements>::_MoveConstructibleTuple() [with _UElements = {const std::tuple<int, int, int>&}; bool <anonymous> = true; _Elements = {int, int, int}]' not a return-statement\r\n     }\r\n ^\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple: In instantiation of 'static constexpr bool std::_TC<<anonymous>, _Elements>::_ImplicitlyMoveConvertibleTuple() [with _UElements = {const std::tuple<int, int, int>&}; bool <anonymous> = true; _Elements = {int, int, int}]':\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:626:362:   required by substitution of 'template<class ... _UElements, typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), int, int, int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {const std::tuple<int, int, int>&}; typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), int, int, int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> = <missing>]'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:970:16:   required by substitution of 'template<class _Tp, class _Arg, class> static std::true_type std::__do_is_direct_constructible_impl::__test(int) [with _Tp = std::tuple<int, int, int>; _Arg = const std::tuple<int, int, int>&; <template-parameter-1-3> = <missing>]'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:981:40:   required from 'struct std::__is_direct_constructible_impl<std::tuple<int, int, int>, const std::tuple<int, int, int>&>'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:143:8:   required from 'struct std::__and_<std::is_destructible<std::tuple<int, int, int> >, std::__is_direct_constructible_impl<std::tuple<int, int, int>, const std::tuple<int, int, int>&> >'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:985:8:   required from 'struct std::__is_direct_constructible_new_safe<std::tuple<int, int, int>, const std::tuple<int, int, int>&>'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1067:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1115:8:   required from 'struct std::__is_constructible_impl<std::tuple<int, int, int>, const std::tuple<int, int, int>&>'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1126:8:   required from 'struct std::is_constructible<std::tuple<int, int, int>, const std::tuple<int, int, int>&>'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1138:8:   required from 'struct std::__is_copy_constructible_impl<std::tuple<int, int, int>, true>'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1144:8:   required from 'struct std::is_copy_constructible<std::tuple<int, int, int> >'\r\n./tensorflow/compiler/xla/statusor.h:87:7:   required from 'class xla::StatusOr<std::tuple<int, int, int> >'\r\n./tensorflow/stream_executor/dnn.h:890:68:   required from here\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:489:65: error: mismatched argument pack lengths while expanding 'std::is_convertible<_UElements&&, _Elements>'\r\n       return __and_<is_convertible<_UElements&&, _Elements>...>::value;\r\n                                                                 ^~~~~\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:490:1: error: body of constexpr function 'static constexpr bool std::_TC<<anonymous>, _Elements>::_ImplicitlyMoveConvertibleTuple() [with _UElements = {const std::tuple<int, int, int>&}; bool <anonymous> = true; _Elements = {int, int, int}]' not a return-statement\r\n     }\r\n ^\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple: In instantiation of 'static constexpr bool std::_TC<<anonymous>, _Elements>::_NonNestedTuple() [with _SrcTuple = const std::tuple<int, int, int>&; bool <anonymous> = true; _Elements = {int, int, int}]':\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:662:419:   required by substitution of 'template<class ... _UElements, class _Dummy, typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ImplicitlyConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), int, int, int>::_NonNestedTuple<const tuple<_Elements ...>&>()), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(const std::tuple<_Args1 ...>&) [with _UElements = {int, int, int}; _Dummy = void; typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ImplicitlyConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), int, int, int>::_NonNestedTuple<const tuple<_Elements ...>&>()), bool>::type <anonymous> = <missing>]'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:970:16:   required by substitution of 'template<class _Tp, class _Arg, class> static std::true_type std::__do_is_direct_constructible_impl::__test(int) [with _Tp = std::tuple<int, int, int>; _Arg = const std::tuple<int, int, int>&; <template-parameter-1-3> = <missing>]'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:981:40:   required from 'struct std::__is_direct_constructible_impl<std::tuple<int, int, int>, const std::tuple<int, int, int>&>'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:143:8:   required from 'struct std::__and_<std::is_destructible<std::tuple<int, int, int> >, std::__is_direct_constructible_impl<std::tuple<int, int, int>, const std::tuple<int, int, int>&> >'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:985:8:   required from 'struct std::__is_direct_constructible_new_safe<std::tuple<int, int, int>, const std::tuple<int, int, int>&>'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1067:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1115:8:   required from 'struct std::__is_constructible_impl<std::tuple<int, int, int>, const std::tuple<int, int, int>&>'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1126:8:   required from 'struct std::is_constructible<std::tuple<int, int, int>, const std::tuple<int, int, int>&>'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1138:8:   required from 'struct std::__is_copy_constructible_impl<std::tuple<int, int, int>, true>'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1144:8:   required from 'struct std::is_copy_constructible<std::tuple<int, int, int> >'\r\n./tensorflow/compiler/xla/statusor.h:87:7:   required from 'class xla::StatusOr<std::tuple<int, int, int> >'\r\n./tensorflow/stream_executor/dnn.h:890:68:   required from here\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:495:244: error: wrong number of template arguments (4, should be 2)\r\n       return  __and_<__not_<is_same<tuple<_Elements...>,\r\n                                                                                                                                                                                                                                                    ^    \r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1558:8: note: provided for 'template<class _From, class _To> struct std::is_convertible'\r\n     struct is_convertible\r\n        ^~~~~~~~~~~~~~\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:502:1: error: body of constexpr function 'static constexpr bool std::_TC<<anonymous>, _Elements>::_NonNestedTuple() [with _SrcTuple = const std::tuple<int, int, int>&; bool <anonymous> = true; _Elements = {int, int, int}]' not a return-statement\r\n     }\r\n ^\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple: In instantiation of 'static constexpr bool std::_TC<<anonymous>, _Elements>::_MoveConstructibleTuple() [with _UElements = {std::tuple<int, int, int>}; bool <anonymous> = true; _Elements = {int, int, int}]':\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:626:248:   required by substitution of 'template<class ... _UElements, typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), int, int, int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {std::tuple<int, int, int>}; typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), int, int, int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> = <missing>]'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:970:16:   required by substitution of 'template<class _Tp, class _Arg, class> static std::true_type std::__do_is_direct_constructible_impl::__test(int) [with _Tp = std::tuple<int, int, int>; _Arg = std::tuple<int, int, int>&&; <template-parameter-1-3> = <missing>]'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:981:40:   required from 'struct std::__is_direct_constructible_impl<std::tuple<int, int, int>, std::tuple<int, int, int>&&>'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:143:8:   required from 'struct std::__and_<std::is_destructible<std::tuple<int, int, int> >, std::__is_direct_constructible_impl<std::tuple<int, int, int>, std::tuple<int, int, int>&&> >'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:985:8:   required from 'struct std::__is_direct_constructible_new_safe<std::tuple<int, int, int>, std::tuple<int, int, int>&&>'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1067:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1115:8:   required from 'struct std::__is_constructible_impl<std::tuple<int, int, int>, std::tuple<int, int, int>&&>'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1126:8:   required from 'struct std::is_constructible<std::tuple<int, int, int>, std::tuple<int, int, int>&&>'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1156:8:   required from 'struct std::__is_move_constructible_impl<std::tuple<int, int, int>, true>'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1162:8:   required from 'struct std::is_move_constructible<std::tuple<int, int, int> >'\r\n./tensorflow/compiler/xla/statusor.h:87:7:   required from 'class xla::StatusOr<std::tuple<int, int, int> >'\r\n./tensorflow/stream_executor/dnn.h:890:68:   required from here\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:483:67: error: mismatched argument pack lengths while expanding 'std::is_constructible<_Elements, _UElements&&>'\r\n       return __and_<is_constructible<_Elements, _UElements&&>...>::value;\r\n                                                                   ^~~~~\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:484:1: error: body of constexpr function 'static constexpr bool std::_TC<<anonymous>, _Elements>::_MoveConstructibleTuple() [with _UElements = {std::tuple<int, int, int>}; bool <anonymous> = true; _Elements = {int, int, int}]' not a return-statement\r\n     }\r\n ^\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple: In instantiation of 'static constexpr bool std::_TC<<anonymous>, _Elements>::_ImplicitlyMoveConvertibleTuple() [with _UElements = {std::tuple<int, int, int>}; bool <anonymous> = true; _Elements = {int, int, int}]':\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:626:362:   required by substitution of 'template<class ... _UElements, typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), int, int, int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {std::tuple<int, int, int>}; typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), int, int, int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> = <missing>]'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:970:16:   required by substitution of 'template<class _Tp, class _Arg, class> static std::true_type std::__do_is_direct_constructible_impl::__test(int) [with _Tp = std::tuple<int, int, int>; _Arg = std::tuple<int, int, int>&&; <template-parameter-1-3> = <missing>]'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:981:40:   required from 'struct std::__is_direct_constructible_impl<std::tuple<int, int, int>, std::tuple<int, int, int>&&>'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:143:8:   required from 'struct std::__and_<std::is_destructible<std::tuple<int, int, int> >, std::__is_direct_constructible_impl<std::tuple<int, int, int>, std::tuple<int, int, int>&&> >'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:985:8:   required from 'struct std::__is_direct_constructible_new_safe<std::tuple<int, int, int>, std::tuple<int, int, int>&&>'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1067:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1115:8:   required from 'struct std::__is_constructible_impl<std::tuple<int, int, int>, std::tuple<int, int, int>&&>'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1126:8:   required from 'struct std::is_constructible<std::tuple<int, int, int>, std::tuple<int, int, int>&&>'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1156:8:   required from 'struct std::__is_move_constructible_impl<std::tuple<int, int, int>, true>'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1162:8:   required from 'struct std::is_move_constructible<std::tuple<int, int, int> >'\r\n./tensorflow/compiler/xla/statusor.h:87:7:   required from 'class xla::StatusOr<std::tuple<int, int, int> >'\r\n./tensorflow/stream_executor/dnn.h:890:68:   required from here\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:489:65: error: mismatched argument pack lengths while expanding 'std::is_convertible<_UElements&&, _Elements>'\r\n       return __and_<is_convertible<_UElements&&, _Elements>...>::value;\r\n                                                                 ^~~~~\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:490:1: error: body of constexpr function 'static constexpr bool std::_TC<<anonymous>, _Elements>::_ImplicitlyMoveConvertibleTuple() [with _UElements = {std::tuple<int, int, int>}; bool <anonymous> = true; _Elements = {int, int, int}]' not a return-statement\r\n     }\r\n ^\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple: In instantiation of 'static constexpr bool std::_TC<<anonymous>, _Elements>::_NonNestedTuple() [with _SrcTuple = std::tuple<int, int, int>&&; bool <anonymous> = true; _Elements = {int, int, int}]':\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:686:422:   required by substitution of 'template<class ... _UElements, class _Dummy, typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_MoveConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), int, int, int>::_NonNestedTuple<tuple<_Elements ...>&&>()), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(std::tuple<_Args1 ...>&&) [with _UElements = {int, int, int}; _Dummy = void; typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_MoveConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), int, int, int>::_NonNestedTuple<tuple<_Elements ...>&&>()), bool>::type <anonymous> = <missing>]'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:970:16:   required by substitution of 'template<class _Tp, class _Arg, class> static std::true_type std::__do_is_direct_constructible_impl::__test(int) [with _Tp = std::tuple<int, int, int>; _Arg = std::tuple<int, int, int>&&; <template-parameter-1-3> = <missing>]'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:981:40:   required from 'struct std::__is_direct_constructible_impl<std::tuple<int, int, int>, std::tuple<int, int, int>&&>'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:143:8:   required from 'struct std::__and_<std::is_destructible<std::tuple<int, int, int> >, std::__is_direct_constructible_impl<std::tuple<int, int, int>, std::tuple<int, int, int>&&> >'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:985:8:   required from 'struct std::__is_direct_constructible_new_safe<std::tuple<int, int, int>, std::tuple<int, int, int>&&>'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1067:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1115:8:   required from 'struct std::__is_constructible_impl<std::tuple<int, int, int>, std::tuple<int, int, int>&&>'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1126:8:   required from 'struct std::is_constructible<std::tuple<int, int, int>, std::tuple<int, int, int>&&>'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1156:8:   required from 'struct std::__is_move_constructible_impl<std::tuple<int, int, int>, true>'\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1162:8:   required from 'struct std::is_move_constructible<std::tuple<int, int, int> >'\r\n./tensorflow/compiler/xla/statusor.h:87:7:   required from 'class xla::StatusOr<std::tuple<int, int, int> >'\r\n./tensorflow/stream_executor/dnn.h:890:68:   required from here\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:495:244: error: wrong number of template arguments (4, should be 2)\r\n       return  __and_<__not_<is_same<tuple<_Elements...>,\r\n                                                                                                                                                                                                                                                    ^    \r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/type_traits:1558:8: note: provided for 'template<class _From, class _To> struct std::is_convertible'\r\n     struct is_convertible\r\n        ^~~~~~~~~~~~~~\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:502:1: error: body of constexpr function 'static constexpr bool std::_TC<<anonymous>, _Elements>::_NonNestedTuple() [with _SrcTuple = std::tuple<int, int, int>&&; bool <anonymous> = true; _Elements = {int, int, int}]' not a return-statement\r\n     }\r\n ^\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple: In instantiation of 'static constexpr bool std::_TC<<anonymous>, _Elements>::_MoveConstructibleTuple() [with _UElements = {tensorflow::Status}; bool <anonymous> = true; _Elements = {int, int, int}]':\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:626:248:   required by substitution of 'template<class ... _UElements, typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), int, int, int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {tensorflow::Status}; typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), int, int, int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> = <missing>]'\r\n./tensorflow/compiler/xla/statusor.h:227:80:   required from 'xla::StatusOr<T>::StatusOr(tensorflow::Status&&) [with T = std::tuple<int, int, int>]'\r\n./tensorflow/stream_executor/dnn.h:891:91:   required from here\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:483:67: error: mismatched argument pack lengths while expanding 'std::is_constructible<_Elements, _UElements&&>'\r\n       return __and_<is_constructible<_Elements, _UElements&&>...>::value;\r\n                                                                   ^~~~~\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:484:1: error: body of constexpr function 'static constexpr bool std::_TC<<anonymous>, _Elements>::_MoveConstructibleTuple() [with _UElements = {tensorflow::Status}; bool <anonymous> = true; _Elements = {int, int, int}]' not a return-statement\r\n     }\r\n ^\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple: In instantiation of 'static constexpr bool std::_TC<<anonymous>, _Elements>::_ImplicitlyMoveConvertibleTuple() [with _UElements = {tensorflow::Status}; bool <anonymous> = true; _Elements = {int, int, int}]':\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:626:362:   required by substitution of 'template<class ... _UElements, typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), int, int, int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {tensorflow::Status}; typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), int, int, int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), int, int, int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> = <missing>]'\r\n./tensorflow/compiler/xla/statusor.h:227:80:   required from 'xla::StatusOr<T>::StatusOr(tensorflow::Status&&) [with T = std::tuple<int, int, int>]'\r\n./tensorflow/stream_executor/dnn.h:891:91:   required from here\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:489:65: error: mismatched argument pack lengths while expanding 'std::is_convertible<_UElements&&, _Elements>'\r\n       return __and_<is_convertible<_UElements&&, _Elements>...>::value;\r\n                                                                 ^~~~~\r\n/usr/lib/gcc/x86_64-pc-linux-gnu/6.4.1/include/c++/tuple:490:1: error: body of constexpr function 'static constexpr bool std::_TC<<anonymous>, _Elements>::_ImplicitlyMoveConvertibleTuple() [with _UElements = {tensorflow::Status}; bool <anonymous> = true; _Elements = {int, int, int}]' not a return-statement\r\n     }\r\n ^\r\nERROR: /mnt/Data/tensorflow/tensorflow/contrib/reduce_slice_ops/BUILD:14:1: output 'tensorflow/contrib/reduce_slice_ops/_objs/python/ops/_reduce_slice_ops_gpu/tensorflow/contrib/reduce_slice_ops/kernels/reduce_slice_ops_gpu.cu.pic.o' was not created\r\nERROR: /mnt/Data/tensorflow/tensorflow/contrib/reduce_slice_ops/BUILD:14:1: not all outputs were created or valid\r\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\r\nINFO: Elapsed time: 167.446s, Critical Path: 47.43s\r\nFAILED: Build did NOT complete successfully\r\n```"}