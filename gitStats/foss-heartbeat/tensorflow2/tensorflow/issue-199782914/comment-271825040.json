{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/271825040", "html_url": "https://github.com/tensorflow/tensorflow/issues/6763#issuecomment-271825040", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6763", "id": 271825040, "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTgyNTA0MA==", "user": {"login": "oorlov", "id": 1262314, "node_id": "MDQ6VXNlcjEyNjIzMTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1262314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oorlov", "html_url": "https://github.com/oorlov", "followers_url": "https://api.github.com/users/oorlov/followers", "following_url": "https://api.github.com/users/oorlov/following{/other_user}", "gists_url": "https://api.github.com/users/oorlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/oorlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oorlov/subscriptions", "organizations_url": "https://api.github.com/users/oorlov/orgs", "repos_url": "https://api.github.com/users/oorlov/repos", "events_url": "https://api.github.com/users/oorlov/events{/privacy}", "received_events_url": "https://api.github.com/users/oorlov/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-11T09:51:55Z", "updated_at": "2017-01-11T10:02:44Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3376817\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/andrewharp\">@andrewharp</a> you are right, my NDK is Pkg.Revision = 12.1.2977051 that is r12b. Misspelled a folder inspired by ndk-r10e.</p>\n<p>Another thing I've realized is that after all changes (disabled neon, and OPTFLAGS := -O0) I'm getting ~110MB libtensorflow.so artifact that <strong>DOES</strong> work in the same way as r0.11</p>\n<p>Looks like I messed up some things yesterday like android version or ndk version were different between libprotobuf and libtensorflow.so<br>\nSo to prevent this mess I've thoroughly built and tested artifacts with different environments:</p>\n<table>\n<thead>\n<tr>\n<th>...</th>\n<th>neon</th>\n<th>OPTFLAGS</th>\n<th>Android</th>\n<th>Device</th>\n<th>Result</th>\n<th>Log</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>On</td>\n<td>-O2</td>\n<td>21</td>\n<td>Galaxy S7, 6.0.1</td>\n<td>SIGSEGV</td>\n<td><a href=\"https://github.com/tensorflow/tensorflow/files/698359/neon.o2.android21.txt\">neon.o2.android21.txt</a></td>\n</tr>\n<tr>\n<td>2</td>\n<td>On</td>\n<td>-O2</td>\n<td>21</td>\n<td>Pixel, 7.1.1</td>\n<td>SIGSEGV</td>\n<td><a href=\"https://github.com/tensorflow/tensorflow/files/698359/neon.o2.android21.txt\">neon.o2.android21.txt</a></td>\n</tr>\n<tr>\n<td>3</td>\n<td>On</td>\n<td>-O2</td>\n<td>21</td>\n<td>Galaxy Note 3, 5.0.1</td>\n<td>SIGSEGV</td>\n<td><a href=\"https://github.com/tensorflow/tensorflow/files/698359/neon.o2.android21.txt\">neon.o2.android21.txt</a></td>\n</tr>\n<tr>\n<td>4</td>\n<td>OFF</td>\n<td>-O2</td>\n<td>21</td>\n<td>Galaxy S7, 6.0.1</td>\n<td>SIGSEGV</td>\n<td><a href=\"https://github.com/tensorflow/tensorflow/files/698367/no-neon.o2.android21.txt\">no-neon.o2.android21.txt</a></td>\n</tr>\n<tr>\n<td>5</td>\n<td>OFF</td>\n<td>-O2</td>\n<td>21</td>\n<td>Pixel, 7.1.1</td>\n<td>SIGSEGV</td>\n<td><a href=\"https://github.com/tensorflow/tensorflow/files/698367/no-neon.o2.android21.txt\">no-neon.o2.android21.txt</a></td>\n</tr>\n<tr>\n<td>6</td>\n<td>OFF</td>\n<td>-O2</td>\n<td>21</td>\n<td>Galaxy Note 3, 5.0.1</td>\n<td>SIGSEGV</td>\n<td><a href=\"https://github.com/tensorflow/tensorflow/files/698367/no-neon.o2.android21.txt\">no-neon.o2.android21.txt</a></td>\n</tr>\n<tr>\n<td>7</td>\n<td>OFF</td>\n<td>-O0</td>\n<td>21</td>\n<td>Galaxy S7, 6.0.1</td>\n<td>Ok</td>\n<td><a href=\"https://github.com/tensorflow/tensorflow/files/698368/no-neon.o0.android21.txt\">no-neon.o0.android21.txt</a></td>\n</tr>\n<tr>\n<td>8</td>\n<td>OFF</td>\n<td>-O0</td>\n<td>21</td>\n<td>Pixel, 7.1.1</td>\n<td>Ok</td>\n<td><a href=\"https://github.com/tensorflow/tensorflow/files/698368/no-neon.o0.android21.txt\">no-neon.o0.android21.txt</a></td>\n</tr>\n<tr>\n<td>9</td>\n<td>OFF</td>\n<td>-O0</td>\n<td>21</td>\n<td>Galaxy Note 3, 5.0.1</td>\n<td>Ok</td>\n<td><a href=\"https://github.com/tensorflow/tensorflow/files/698368/no-neon.o0.android21.txt\">no-neon.o0.android21.txt</a></td>\n</tr>\n<tr>\n<td>10</td>\n<td>On</td>\n<td>-O2</td>\n<td>21</td>\n<td>Any</td>\n<td>Compilation Error</td>\n<td><a href=\"https://github.com/tensorflow/tensorflow/files/698384/neon.o2.android21.txt\">neon.o2.android21.txt</a></td>\n</tr>\n</tbody>\n</table>\n<p>These builds are created on clean MacBook with OSX El Capitan 10.11.6, NDK r12b + libtool + autoconf. Neither Android SDK, nor Bazel installed.</p>\n<p>Seems like -O2 causes problems, not neon flag, but I cannot confirm it due to compilation error.</p>\n<p>I'm also getting Ok builds when Android version is set to android-14. I run them successfully on Moto X v1, Android 4.4.4 and Samsung/GreatCall Touch3, Android 4.3 <a href=\"https://github.com/tensorflow/tensorflow/files/698439/no-neon.o0.android14.txt\">no-neon.o0.android14.txt</a></p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=49262\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jart\">@jart</a> Thank you for suggestion, though I'm hesitating here because the only scenario I have in my hands is a tensorflow build that might be affected by system misconfiguration or my misunderstanding. If it is clear that on my side everything is correct issue will be filed.</p>", "body_text": "@andrewharp you are right, my NDK is Pkg.Revision = 12.1.2977051 that is r12b. Misspelled a folder inspired by ndk-r10e.\nAnother thing I've realized is that after all changes (disabled neon, and OPTFLAGS := -O0) I'm getting ~110MB libtensorflow.so artifact that DOES work in the same way as r0.11\nLooks like I messed up some things yesterday like android version or ndk version were different between libprotobuf and libtensorflow.so\nSo to prevent this mess I've thoroughly built and tested artifacts with different environments:\n\n\n\n...\nneon\nOPTFLAGS\nAndroid\nDevice\nResult\nLog\n\n\n\n\n1\nOn\n-O2\n21\nGalaxy S7, 6.0.1\nSIGSEGV\nneon.o2.android21.txt\n\n\n2\nOn\n-O2\n21\nPixel, 7.1.1\nSIGSEGV\nneon.o2.android21.txt\n\n\n3\nOn\n-O2\n21\nGalaxy Note 3, 5.0.1\nSIGSEGV\nneon.o2.android21.txt\n\n\n4\nOFF\n-O2\n21\nGalaxy S7, 6.0.1\nSIGSEGV\nno-neon.o2.android21.txt\n\n\n5\nOFF\n-O2\n21\nPixel, 7.1.1\nSIGSEGV\nno-neon.o2.android21.txt\n\n\n6\nOFF\n-O2\n21\nGalaxy Note 3, 5.0.1\nSIGSEGV\nno-neon.o2.android21.txt\n\n\n7\nOFF\n-O0\n21\nGalaxy S7, 6.0.1\nOk\nno-neon.o0.android21.txt\n\n\n8\nOFF\n-O0\n21\nPixel, 7.1.1\nOk\nno-neon.o0.android21.txt\n\n\n9\nOFF\n-O0\n21\nGalaxy Note 3, 5.0.1\nOk\nno-neon.o0.android21.txt\n\n\n10\nOn\n-O2\n21\nAny\nCompilation Error\nneon.o2.android21.txt\n\n\n\nThese builds are created on clean MacBook with OSX El Capitan 10.11.6, NDK r12b + libtool + autoconf. Neither Android SDK, nor Bazel installed.\nSeems like -O2 causes problems, not neon flag, but I cannot confirm it due to compilation error.\nI'm also getting Ok builds when Android version is set to android-14. I run them successfully on Moto X v1, Android 4.4.4 and Samsung/GreatCall Touch3, Android 4.3 no-neon.o0.android14.txt\n@jart Thank you for suggestion, though I'm hesitating here because the only scenario I have in my hands is a tensorflow build that might be affected by system misconfiguration or my misunderstanding. If it is clear that on my side everything is correct issue will be filed.", "body": "@andrewharp you are right, my NDK is Pkg.Revision = 12.1.2977051 that is r12b. Misspelled a folder inspired by ndk-r10e.\r\n\r\nAnother thing I've realized is that after all changes (disabled neon, and OPTFLAGS := -O0) I'm getting ~110MB libtensorflow.so artifact that **DOES** work in the same way as r0.11\r\n\r\nLooks like I messed up some things yesterday like android version or ndk version were different between libprotobuf and libtensorflow.so\r\nSo to prevent this mess I've thoroughly built and tested artifacts with different environments:\r\n\r\n...  | neon  |  OPTFLAGS  | Android | Device                | Result       | Log\r\n--- | -----|--------------|---------|-----------------|-----------|---\r\n1    | On   | -O2                | 21           | Galaxy S7, 6.0.1 | SIGSEGV | [neon.o2.android21.txt](https://github.com/tensorflow/tensorflow/files/698359/neon.o2.android21.txt) \r\n2    | On   | -O2                | 21           | Pixel, 7.1.1         | SIGSEGV |   [neon.o2.android21.txt](https://github.com/tensorflow/tensorflow/files/698359/neon.o2.android21.txt) \r\n3    | On   | -O2                | 21           | Galaxy Note 3, 5.0.1 | SIGSEGV |  [neon.o2.android21.txt](https://github.com/tensorflow/tensorflow/files/698359/neon.o2.android21.txt) \r\n4    | OFF   | -O2                | 21           | Galaxy S7, 6.0.1 | SIGSEGV |  [no-neon.o2.android21.txt](https://github.com/tensorflow/tensorflow/files/698367/no-neon.o2.android21.txt)\r\n5   | OFF   | -O2                | 21           | Pixel, 7.1.1 | SIGSEGV |  [no-neon.o2.android21.txt](https://github.com/tensorflow/tensorflow/files/698367/no-neon.o2.android21.txt)\r\n6    | OFF   | -O2                | 21           | Galaxy Note 3, 5.0.1 | SIGSEGV |  [no-neon.o2.android21.txt](https://github.com/tensorflow/tensorflow/files/698367/no-neon.o2.android21.txt)\r\n7    | OFF   | -O0                | 21           | Galaxy S7, 6.0.1 | Ok |  [no-neon.o0.android21.txt](https://github.com/tensorflow/tensorflow/files/698368/no-neon.o0.android21.txt)\r\n8   | OFF   | -O0                | 21           | Pixel, 7.1.1 | Ok |  [no-neon.o0.android21.txt](https://github.com/tensorflow/tensorflow/files/698368/no-neon.o0.android21.txt)\r\n9    | OFF   | -O0                | 21           | Galaxy Note 3, 5.0.1 | Ok |  [no-neon.o0.android21.txt](https://github.com/tensorflow/tensorflow/files/698368/no-neon.o0.android21.txt)\r\n10    | On   | -O2                | 21           | Any | Compilation Error |  [neon.o2.android21.txt](https://github.com/tensorflow/tensorflow/files/698384/neon.o2.android21.txt)\r\n\r\nThese builds are created on clean MacBook with OSX El Capitan 10.11.6, NDK r12b + libtool + autoconf. Neither Android SDK, nor Bazel installed.\r\n\r\nSeems like -O2 causes problems, not neon flag, but I cannot confirm it due to compilation error.\r\n\r\nI'm also getting Ok builds when Android version is set to android-14. I run them successfully on Moto X v1, Android 4.4.4 and Samsung/GreatCall Touch3, Android 4.3 [no-neon.o0.android14.txt](https://github.com/tensorflow/tensorflow/files/698439/no-neon.o0.android14.txt)\r\n\r\n@jart Thank you for suggestion, though I'm hesitating here because the only scenario I have in my hands is a tensorflow build that might be affected by system misconfiguration or my misunderstanding. If it is clear that on my side everything is correct issue will be filed.\r\n"}