{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/185818667", "html_url": "https://github.com/tensorflow/tensorflow/issues/1143#issuecomment-185818667", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1143", "id": 185818667, "node_id": "MDEyOklzc3VlQ29tbWVudDE4NTgxODY2Nw==", "user": {"login": "bmcfee", "id": 1190540, "node_id": "MDQ6VXNlcjExOTA1NDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1190540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmcfee", "html_url": "https://github.com/bmcfee", "followers_url": "https://api.github.com/users/bmcfee/followers", "following_url": "https://api.github.com/users/bmcfee/following{/other_user}", "gists_url": "https://api.github.com/users/bmcfee/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmcfee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmcfee/subscriptions", "organizations_url": "https://api.github.com/users/bmcfee/orgs", "repos_url": "https://api.github.com/users/bmcfee/repos", "events_url": "https://api.github.com/users/bmcfee/events{/privacy}", "received_events_url": "https://api.github.com/users/bmcfee/received_events", "type": "User", "site_admin": false}, "created_at": "2016-02-18T17:10:54Z", "updated_at": "2016-02-18T17:10:54Z", "author_association": "NONE", "body_html": "<blockquote>\n<p>This causes a segmentation fault when tensorflow 0.7.0 is installed but not when protobuf 3.0.0a3 is installed without installing tensorflow.</p>\n</blockquote>\n<p>Indeed -- doing a <code>pip install protobuf==3.0.0a3</code> on this environment fixes the segfault, but now dies with a TypeError on import you mention:</p>\n<div class=\"highlight highlight-source-python\"><pre>In [<span class=\"pl-c1\">1</span>]: <span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n[snip]\n<span class=\"pl-k\">/</span>home<span class=\"pl-k\">/</span>bmcfee<span class=\"pl-k\">/</span>miniconda<span class=\"pl-k\">/</span>envs<span class=\"pl-k\">/</span>py35<span class=\"pl-k\">/</span>lib<span class=\"pl-k\">/</span>python3.5<span class=\"pl-k\">/</span>site<span class=\"pl-k\">-</span>packages<span class=\"pl-k\">/</span>tensorflow<span class=\"pl-k\">/</span>core<span class=\"pl-k\">/</span>framework<span class=\"pl-k\">/</span>graph_pb2.py <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>()\n      <span class=\"pl-c1\">8</span> <span class=\"pl-k\">from</span> google.protobuf <span class=\"pl-k\">import</span> reflection <span class=\"pl-k\">as</span> _reflection\n      <span class=\"pl-c1\">9</span> <span class=\"pl-k\">from</span> google.protobuf <span class=\"pl-k\">import</span> symbol_database <span class=\"pl-k\">as</span> _symbol_database\n<span class=\"pl-ii\">--</span><span class=\"pl-ii\">-&gt;</span> <span class=\"pl-c1\">10</span> <span class=\"pl-k\">from</span> google.protobuf <span class=\"pl-k\">import</span> descriptor_pb2\n     <span class=\"pl-c1\">11</span> <span class=\"pl-c\"><span class=\"pl-c\">#</span> @@protoc_insertion_point(imports)</span>\n     <span class=\"pl-c1\">12</span> \n<span class=\"pl-k\">/</span>home<span class=\"pl-k\">/</span>bmcfee<span class=\"pl-k\">/</span>miniconda<span class=\"pl-k\">/</span>envs<span class=\"pl-k\">/</span>py35<span class=\"pl-k\">/</span>lib<span class=\"pl-k\">/</span>python3.5<span class=\"pl-k\">/</span>site<span class=\"pl-k\">-</span>packages<span class=\"pl-k\">/</span>google<span class=\"pl-k\">/</span>protobuf<span class=\"pl-k\">/</span>descriptor_pb2.py <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>()\n   <span class=\"pl-c1\">1531</span> FileDescriptorSet <span class=\"pl-k\">=</span> _reflection.GeneratedProtocolMessageType(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>FileDescriptorSet<span class=\"pl-pds\">'</span></span>, (_message.Message,), <span class=\"pl-c1\">dict</span>(\n   <span class=\"pl-c1\">1532</span>   <span class=\"pl-v\">DESCRIPTOR</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">_FILEDESCRIPTORSET</span>,\n<span class=\"pl-ii\">-&gt;</span> <span class=\"pl-c1\">1533</span>   <span class=\"pl-v\">__module__</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>google.protobuf.descriptor_pb2<span class=\"pl-pds\">'</span></span>\n   <span class=\"pl-c1\">1534</span>   <span class=\"pl-c\"><span class=\"pl-c\">#</span> @@protoc_insertion_point(class_scope:google.protobuf.FileDescriptorSet)</span>\n   <span class=\"pl-c1\">1535</span>   ))\n[snip]\n<span class=\"pl-c1\">TypeError</span>: metaclass conflict: the metaclass of a derived <span class=\"pl-k\">class</span> must be a (non<span class=\"pl-k\">-</span>strict) subclass of the metaclasses of <span class=\"pl-c1\">all</span> its bases</pre></div>", "body_text": "This causes a segmentation fault when tensorflow 0.7.0 is installed but not when protobuf 3.0.0a3 is installed without installing tensorflow.\n\nIndeed -- doing a pip install protobuf==3.0.0a3 on this environment fixes the segfault, but now dies with a TypeError on import you mention:\nIn [1]: import tensorflow as tf\n[snip]\n/home/bmcfee/miniconda/envs/py35/lib/python3.5/site-packages/tensorflow/core/framework/graph_pb2.py in <module>()\n      8 from google.protobuf import reflection as _reflection\n      9 from google.protobuf import symbol_database as _symbol_database\n---> 10 from google.protobuf import descriptor_pb2\n     11 # @@protoc_insertion_point(imports)\n     12 \n/home/bmcfee/miniconda/envs/py35/lib/python3.5/site-packages/google/protobuf/descriptor_pb2.py in <module>()\n   1531 FileDescriptorSet = _reflection.GeneratedProtocolMessageType('FileDescriptorSet', (_message.Message,), dict(\n   1532   DESCRIPTOR = _FILEDESCRIPTORSET,\n-> 1533   __module__ = 'google.protobuf.descriptor_pb2'\n   1534   # @@protoc_insertion_point(class_scope:google.protobuf.FileDescriptorSet)\n   1535   ))\n[snip]\nTypeError: metaclass conflict: the metaclass of a derived class must be a (non-strict) subclass of the metaclasses of all its bases", "body": "> This causes a segmentation fault when tensorflow 0.7.0 is installed but not when protobuf 3.0.0a3 is installed without installing tensorflow.\n\nIndeed -- doing a `pip install protobuf==3.0.0a3` on this environment fixes the segfault, but now dies with a TypeError on import you mention:\n\n``` python\nIn [1]: import tensorflow as tf\n[snip]\n/home/bmcfee/miniconda/envs/py35/lib/python3.5/site-packages/tensorflow/core/framework/graph_pb2.py in <module>()\n      8 from google.protobuf import reflection as _reflection\n      9 from google.protobuf import symbol_database as _symbol_database\n---> 10 from google.protobuf import descriptor_pb2\n     11 # @@protoc_insertion_point(imports)\n     12 \n/home/bmcfee/miniconda/envs/py35/lib/python3.5/site-packages/google/protobuf/descriptor_pb2.py in <module>()\n   1531 FileDescriptorSet = _reflection.GeneratedProtocolMessageType('FileDescriptorSet', (_message.Message,), dict(\n   1532   DESCRIPTOR = _FILEDESCRIPTORSET,\n-> 1533   __module__ = 'google.protobuf.descriptor_pb2'\n   1534   # @@protoc_insertion_point(class_scope:google.protobuf.FileDescriptorSet)\n   1535   ))\n[snip]\nTypeError: metaclass conflict: the metaclass of a derived class must be a (non-strict) subclass of the metaclasses of all its bases\n```\n"}