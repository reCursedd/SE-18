{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/428334506", "html_url": "https://github.com/tensorflow/tensorflow/issues/13341#issuecomment-428334506", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13341", "id": 428334506, "node_id": "MDEyOklzc3VlQ29tbWVudDQyODMzNDUwNg==", "user": {"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-09T20:13:13Z", "updated_at": "2018-10-09T20:13:13Z", "author_association": "MEMBER", "body_html": "<p>The build() / call() method on the LSTMcell actually creates the variables. So the variable_scope while creating the Cell doesn't matter as much as when its actually built (=called for the first time). My guess is that the building for both the cells is happening under the same variable scope and therefore it hits the same variable</p>\n<p>Could you produce a stack trace with your error? That could confirm this theory.</p>", "body_text": "The build() / call() method on the LSTMcell actually creates the variables. So the variable_scope while creating the Cell doesn't matter as much as when its actually built (=called for the first time). My guess is that the building for both the cells is happening under the same variable scope and therefore it hits the same variable\nCould you produce a stack trace with your error? That could confirm this theory.", "body": "The build() / call() method on the LSTMcell actually creates the variables. So the variable_scope while creating the Cell doesn't matter as much as when its actually built (=called for the first time). My guess is that the building for both the cells is happening under the same variable scope and therefore it hits the same variable\r\n\r\nCould you produce a stack trace with your error? That could confirm this theory."}