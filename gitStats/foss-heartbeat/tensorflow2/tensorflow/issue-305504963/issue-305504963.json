{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17735", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17735/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17735/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17735/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17735", "id": 305504963, "node_id": "MDU6SXNzdWUzMDU1MDQ5NjM=", "number": 17735, "title": "FEATURE REQUEST : Kindly provide the gradient for tf.assign", "user": {"login": "Raj-08", "id": 15856029, "node_id": "MDQ6VXNlcjE1ODU2MDI5", "avatar_url": "https://avatars3.githubusercontent.com/u/15856029?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Raj-08", "html_url": "https://github.com/Raj-08", "followers_url": "https://api.github.com/users/Raj-08/followers", "following_url": "https://api.github.com/users/Raj-08/following{/other_user}", "gists_url": "https://api.github.com/users/Raj-08/gists{/gist_id}", "starred_url": "https://api.github.com/users/Raj-08/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Raj-08/subscriptions", "organizations_url": "https://api.github.com/users/Raj-08/orgs", "repos_url": "https://api.github.com/users/Raj-08/repos", "events_url": "https://api.github.com/users/Raj-08/events{/privacy}", "received_events_url": "https://api.github.com/users/Raj-08/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 16, "created_at": "2018-03-15T11:02:38Z", "updated_at": "2018-11-11T06:56:38Z", "closed_at": "2018-03-16T18:01:29Z", "author_association": "NONE", "body_html": "<p>Hi, i am trying to connect a CNN to another custom layer i have created. However the custom layer that i have created requires the variables in my custom layer to be assigned from the outputs of CNN.</p>\n<p>One may think why i need variables if its assigned from CNN at every iteration.<br>\nReason for variable creation is to calculate explicit gradients(via Register gradient and pyFunc) that involves sparse linear equations ,so that i can apply these gradients on my variables so that the error is back propagated all the way into CNN.</p>\n<p>However when i call tf.gradients ,all the values are None for CNN. I found a link over stackoverflow stating that gradients are not defined for tf.assign.</p>\n<p><a href=\"https://stackoverflow.com/questions/46984316/how-tf-assign-compute-gradients-in-tensorflow\" rel=\"nofollow\">https://stackoverflow.com/questions/46984316/how-tf-assign-compute-gradients-in-tensorflow</a></p>\n<p>Could you please provide gradient for tf.assign so that i can go for an end to end training.</p>\n<p>Thanks.</p>\n<h3>Source code / logs</h3>\n<pre><code> with tf.variable_scope(\"xyz\", reuse=tf.AUTO_REUSE) as scope:        \n F = tf.get_variable(\"FXT\",  initializer=''')\n B = tf.get_variable(\"BXT\",  initializer='')   \n lambda_tf = tf.get_variable(\"lamda_tf\",initializer = [100.0],dtype=tf.float32)\n\n\nassign_op1 = tf.assign(F,Fx)\nassign_op2 = tf.assign(B,Bx)     \n\nop=custom layer(F,B)\ngrads=tf.gradients(op,tf.all_trainables())\n</code></pre>\n<p>Here Fx and Bx are values from CNN</p>\n<p>In my backprop i have custom gradients that i have explicitly calculated and over-riden with tf.RegisterGradient and gradient overide.<br>\nWhen i apply calculate grads i get<br>\n[None,None,None............None{None values returned for variables in CNN},Defined Gradients{Defined Gradients returned for variables in Custom Layer}]</p>", "body_text": "Hi, i am trying to connect a CNN to another custom layer i have created. However the custom layer that i have created requires the variables in my custom layer to be assigned from the outputs of CNN.\nOne may think why i need variables if its assigned from CNN at every iteration.\nReason for variable creation is to calculate explicit gradients(via Register gradient and pyFunc) that involves sparse linear equations ,so that i can apply these gradients on my variables so that the error is back propagated all the way into CNN.\nHowever when i call tf.gradients ,all the values are None for CNN. I found a link over stackoverflow stating that gradients are not defined for tf.assign.\nhttps://stackoverflow.com/questions/46984316/how-tf-assign-compute-gradients-in-tensorflow\nCould you please provide gradient for tf.assign so that i can go for an end to end training.\nThanks.\nSource code / logs\n with tf.variable_scope(\"xyz\", reuse=tf.AUTO_REUSE) as scope:        \n F = tf.get_variable(\"FXT\",  initializer=''')\n B = tf.get_variable(\"BXT\",  initializer='')   \n lambda_tf = tf.get_variable(\"lamda_tf\",initializer = [100.0],dtype=tf.float32)\n\n\nassign_op1 = tf.assign(F,Fx)\nassign_op2 = tf.assign(B,Bx)     \n\nop=custom layer(F,B)\ngrads=tf.gradients(op,tf.all_trainables())\n\nHere Fx and Bx are values from CNN\nIn my backprop i have custom gradients that i have explicitly calculated and over-riden with tf.RegisterGradient and gradient overide.\nWhen i apply calculate grads i get\n[None,None,None............None{None values returned for variables in CNN},Defined Gradients{Defined Gradients returned for variables in Custom Layer}]", "body": "Hi, i am trying to connect a CNN to another custom layer i have created. However the custom layer that i have created requires the variables in my custom layer to be assigned from the outputs of CNN.\r\n\r\nOne may think why i need variables if its assigned from CNN at every iteration. \r\nReason for variable creation is to calculate explicit gradients(via Register gradient and pyFunc) that involves sparse linear equations ,so that i can apply these gradients on my variables so that the error is back propagated all the way into CNN.\r\n\r\nHowever when i call tf.gradients ,all the values are None for CNN. I found a link over stackoverflow stating that gradients are not defined for tf.assign. \r\n\r\nhttps://stackoverflow.com/questions/46984316/how-tf-assign-compute-gradients-in-tensorflow\r\n\r\nCould you please provide gradient for tf.assign so that i can go for an end to end training.\r\n\r\nThanks.\r\n\r\n\r\n### Source code / logs\r\n     with tf.variable_scope(\"xyz\", reuse=tf.AUTO_REUSE) as scope:        \r\n     F = tf.get_variable(\"FXT\",  initializer=''')\r\n     B = tf.get_variable(\"BXT\",  initializer='')   \r\n     lambda_tf = tf.get_variable(\"lamda_tf\",initializer = [100.0],dtype=tf.float32)\r\n\r\n    \r\n    assign_op1 = tf.assign(F,Fx)\r\n    assign_op2 = tf.assign(B,Bx)     \r\n    \r\n    op=custom layer(F,B)\r\n    grads=tf.gradients(op,tf.all_trainables())\r\nHere Fx and Bx are values from CNN\r\n\r\nIn my backprop i have custom gradients that i have explicitly calculated and over-riden with tf.RegisterGradient and gradient overide.\r\nWhen i apply calculate grads i get\r\n[None,None,None............None{None values returned for variables in CNN},Defined Gradients{Defined Gradients returned for variables in Custom Layer}]\r\n "}