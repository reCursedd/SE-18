{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/373796755", "html_url": "https://github.com/tensorflow/tensorflow/issues/17735#issuecomment-373796755", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17735", "id": 373796755, "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mzc5Njc1NQ==", "user": {"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-16T18:01:29Z", "updated_at": "2018-03-16T18:01:29Z", "author_association": "MEMBER", "body_html": "<p>There is no plan to add a gradient to tf.assign because it's not possible in general to connect the uses of the assigned variable with the graph which assigned it.</p>\n<p>Instead, your solution of setting the weights of a network by the output of another is better implemented by not using tf.Variable at all for the computed weights, and just using tensors. We currently make it not too easy to do this using the tf.layers library but you can do this if you subclass the layers in tf.layers and override the build() method.</p>", "body_text": "There is no plan to add a gradient to tf.assign because it's not possible in general to connect the uses of the assigned variable with the graph which assigned it.\nInstead, your solution of setting the weights of a network by the output of another is better implemented by not using tf.Variable at all for the computed weights, and just using tensors. We currently make it not too easy to do this using the tf.layers library but you can do this if you subclass the layers in tf.layers and override the build() method.", "body": "There is no plan to add a gradient to tf.assign because it's not possible in general to connect the uses of the assigned variable with the graph which assigned it.\r\n\r\nInstead, your solution of setting the weights of a network by the output of another is better implemented by not using tf.Variable at all for the computed weights, and just using tensors. We currently make it not too easy to do this using the tf.layers library but you can do this if you subclass the layers in tf.layers and override the build() method."}