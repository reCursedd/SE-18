{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/263037565", "html_url": "https://github.com/tensorflow/tensorflow/issues/5853#issuecomment-263037565", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5853", "id": 263037565, "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzAzNzU2NQ==", "user": {"login": "paul-the-noob", "id": 23431488, "node_id": "MDQ6VXNlcjIzNDMxNDg4", "avatar_url": "https://avatars0.githubusercontent.com/u/23431488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paul-the-noob", "html_url": "https://github.com/paul-the-noob", "followers_url": "https://api.github.com/users/paul-the-noob/followers", "following_url": "https://api.github.com/users/paul-the-noob/following{/other_user}", "gists_url": "https://api.github.com/users/paul-the-noob/gists{/gist_id}", "starred_url": "https://api.github.com/users/paul-the-noob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paul-the-noob/subscriptions", "organizations_url": "https://api.github.com/users/paul-the-noob/orgs", "repos_url": "https://api.github.com/users/paul-the-noob/repos", "events_url": "https://api.github.com/users/paul-the-noob/events{/privacy}", "received_events_url": "https://api.github.com/users/paul-the-noob/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-26T01:29:50Z", "updated_at": "2016-11-26T01:29:50Z", "author_association": "NONE", "body_html": "<p>Thanks, prb12,  for the quick response.</p>\n<p>Unfortunately it wasn't that, see below. I also tried using float64 for the index and shape tensors but that didn't work either.</p>\n<p>Cheers, Paul</p>\n<p>####### file:  sparse_tensor_dense_matmul_v2.py</p>\n<p>import tensorflow as tf<br>\nimport numpy as np</p>\n<p>with tf.device('/gpu:0'):<br>\nM = tf.SparseTensor(np.arange(4, dtype=np.int64).reshape(2, 2),<br>\nnp.ones((2,), dtype=np.float64),<br>\nnp.array((4, 4), dtype=np.int64))<br>\nv = tf.constant(np.ones((4, 1), dtype=np.float64))<br>\np = tf.sparse_tensor_dense_matmul(M, v)</p>\n<pre><code>init = tf.initialize_all_variables()\nsess = tf.Session()\nsess.run(init)\np = sess.run (p)\n</code></pre>\n<p>############### output</p>\n<p>panzer:~$ python3 sparse_tensor_dense_matmul_v2.py<br>\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally<br>\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally<br>\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally<br>\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally<br>\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally<br>\nWARNING:tensorflow:From sparse_tensor_dense_matmul_v2.py:11 in .: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.<br>\nInstructions for updating:<br>\nUse <code>tf.global_variables_initializer</code> instead.<br>\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:936] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero<br>\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties:<br>\nname: GeForce GTX 1080<br>\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.8095<br>\npciBusID 0000:01:00.0<br>\nTotal memory: 7.92GiB<br>\nFree memory: 7.81GiB<br>\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0<br>\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y<br>\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0)<br>\nTraceback (most recent call last):<br>\nFile \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1021, in _do_call<br>\nreturn fn(*args)<br>\nFile \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 999, in _run_fn<br>\nself._extend_graph()<br>\nFile \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1048, in _extend_graph<br>\nself._session, graph_def.SerializeToString(), status)<br>\nFile \"/usr/lib/python3.5/contextlib.py\", line 66, in <strong>exit</strong><br>\nnext(self.gen)<br>\nFile \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py\", line 469, in raise_exception_on_not_ok_status<br>\npywrap_tensorflow.TF_GetCode(status))<br>\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Cannot assign a device to node 'SparseTensorDenseMatMul/SparseTensorDenseMatMul': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.<br>\n[[Node: SparseTensorDenseMatMul/SparseTensorDenseMatMul = SparseTensorDenseMatMul[T=DT_DOUBLE, adjoint_a=false, adjoint_b=false, _device=\"/device:GPU:0\"](SparseTensor/indices, SparseTensor/values, SparseTensor/shape, Const)]]</p>\n<p>During handling of the above exception, another exception occurred:</p>\n<p>Traceback (most recent call last):<br>\nFile \"sparse_tensor_dense_matmul_v2.py\", line 13, in <br>\nsess.run(init)<br>\nFile \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 766, in run<br>\nrun_metadata_ptr)<br>\nFile \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 964, in _run<br>\nfeed_dict_string, options, run_metadata)<br>\nFile \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1014, in _do_run<br>\ntarget_list, options, run_metadata)<br>\nFile \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1034, in _do_call<br>\nraise type(e)(node_def, op, message)<br>\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Cannot assign a device to node 'SparseTensorDenseMatMul/SparseTensorDenseMatMul': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.<br>\n[[Node: SparseTensorDenseMatMul/SparseTensorDenseMatMul = SparseTensorDenseMatMul[T=DT_DOUBLE, adjoint_a=false, adjoint_b=false, _device=\"/device:GPU:0\"](SparseTensor/indices, SparseTensor/values, SparseTensor/shape, Const)]]</p>\n<p>Caused by op 'SparseTensorDenseMatMul/SparseTensorDenseMatMul', defined at:<br>\nFile \"sparse_tensor_dense_matmul_v2.py\", line 9, in <br>\np = tf.sparse_tensor_dense_matmul(M, v)<br>\nFile \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/ops/sparse_ops.py\", line 1339, in sparse_tensor_dense_matmul<br>\nadjoint_b=adjoint_b)<br>\nFile \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/ops/gen_sparse_ops.py\", line 975, in _sparse_tensor_dense_mat_mul<br>\nadjoint_b=adjoint_b, name=name)<br>\nFile \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/framework/op_def_library.py\", line 759, in apply_op<br>\nop_def=op_def)<br>\nFile \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 2240, in create_op<br>\noriginal_op=self._default_original_op, op_def=op_def)<br>\nFile \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 1128, in <strong>init</strong><br>\nself._traceback = _extract_stack()</p>\n<p>InvalidArgumentError (see above for traceback): Cannot assign a device to node 'SparseTensorDenseMatMul/SparseTensorDenseMatMul': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.<br>\n[[Node: SparseTensorDenseMatMul/SparseTensorDenseMatMul = SparseTensorDenseMatMul[T=DT_DOUBLE, adjoint_a=false, adjoint_b=false, _device=\"/device:GPU:0\"](SparseTensor/indices, SparseTensor/values, SparseTensor/shape, Const)]]</p>", "body_text": "Thanks, prb12,  for the quick response.\nUnfortunately it wasn't that, see below. I also tried using float64 for the index and shape tensors but that didn't work either.\nCheers, Paul\n####### file:  sparse_tensor_dense_matmul_v2.py\nimport tensorflow as tf\nimport numpy as np\nwith tf.device('/gpu:0'):\nM = tf.SparseTensor(np.arange(4, dtype=np.int64).reshape(2, 2),\nnp.ones((2,), dtype=np.float64),\nnp.array((4, 4), dtype=np.int64))\nv = tf.constant(np.ones((4, 1), dtype=np.float64))\np = tf.sparse_tensor_dense_matmul(M, v)\ninit = tf.initialize_all_variables()\nsess = tf.Session()\nsess.run(init)\np = sess.run (p)\n\n############### output\npanzer:~$ python3 sparse_tensor_dense_matmul_v2.py\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally\nWARNING:tensorflow:From sparse_tensor_dense_matmul_v2.py:11 in .: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.\nInstructions for updating:\nUse tf.global_variables_initializer instead.\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:936] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties:\nname: GeForce GTX 1080\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.8095\npciBusID 0000:01:00.0\nTotal memory: 7.92GiB\nFree memory: 7.81GiB\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0)\nTraceback (most recent call last):\nFile \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1021, in _do_call\nreturn fn(*args)\nFile \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 999, in _run_fn\nself._extend_graph()\nFile \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1048, in _extend_graph\nself._session, graph_def.SerializeToString(), status)\nFile \"/usr/lib/python3.5/contextlib.py\", line 66, in exit\nnext(self.gen)\nFile \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py\", line 469, in raise_exception_on_not_ok_status\npywrap_tensorflow.TF_GetCode(status))\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Cannot assign a device to node 'SparseTensorDenseMatMul/SparseTensorDenseMatMul': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\n[[Node: SparseTensorDenseMatMul/SparseTensorDenseMatMul = SparseTensorDenseMatMul[T=DT_DOUBLE, adjoint_a=false, adjoint_b=false, _device=\"/device:GPU:0\"](SparseTensor/indices, SparseTensor/values, SparseTensor/shape, Const)]]\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\nFile \"sparse_tensor_dense_matmul_v2.py\", line 13, in \nsess.run(init)\nFile \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 766, in run\nrun_metadata_ptr)\nFile \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 964, in _run\nfeed_dict_string, options, run_metadata)\nFile \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1014, in _do_run\ntarget_list, options, run_metadata)\nFile \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1034, in _do_call\nraise type(e)(node_def, op, message)\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Cannot assign a device to node 'SparseTensorDenseMatMul/SparseTensorDenseMatMul': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\n[[Node: SparseTensorDenseMatMul/SparseTensorDenseMatMul = SparseTensorDenseMatMul[T=DT_DOUBLE, adjoint_a=false, adjoint_b=false, _device=\"/device:GPU:0\"](SparseTensor/indices, SparseTensor/values, SparseTensor/shape, Const)]]\nCaused by op 'SparseTensorDenseMatMul/SparseTensorDenseMatMul', defined at:\nFile \"sparse_tensor_dense_matmul_v2.py\", line 9, in \np = tf.sparse_tensor_dense_matmul(M, v)\nFile \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/ops/sparse_ops.py\", line 1339, in sparse_tensor_dense_matmul\nadjoint_b=adjoint_b)\nFile \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/ops/gen_sparse_ops.py\", line 975, in _sparse_tensor_dense_mat_mul\nadjoint_b=adjoint_b, name=name)\nFile \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/framework/op_def_library.py\", line 759, in apply_op\nop_def=op_def)\nFile \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 2240, in create_op\noriginal_op=self._default_original_op, op_def=op_def)\nFile \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 1128, in init\nself._traceback = _extract_stack()\nInvalidArgumentError (see above for traceback): Cannot assign a device to node 'SparseTensorDenseMatMul/SparseTensorDenseMatMul': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\n[[Node: SparseTensorDenseMatMul/SparseTensorDenseMatMul = SparseTensorDenseMatMul[T=DT_DOUBLE, adjoint_a=false, adjoint_b=false, _device=\"/device:GPU:0\"](SparseTensor/indices, SparseTensor/values, SparseTensor/shape, Const)]]", "body": "Thanks, prb12,  for the quick response.\r\n\r\nUnfortunately it wasn't that, see below. I also tried using float64 for the index and shape tensors but that didn't work either.\r\n\r\nCheers, Paul\r\n\r\n####### file:  sparse_tensor_dense_matmul_v2.py\r\n\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\nwith tf.device('/gpu:0'):\r\n    M = tf.SparseTensor(np.arange(4, dtype=np.int64).reshape(2, 2),\r\n                        np.ones((2,), dtype=np.float64),\r\n                        np.array((4, 4), dtype=np.int64))\r\n    v = tf.constant(np.ones((4, 1), dtype=np.float64))\r\n    p = tf.sparse_tensor_dense_matmul(M, v)\r\n\r\n    init = tf.initialize_all_variables()\r\n    sess = tf.Session()\r\n    sess.run(init)\r\n    p = sess.run (p)\r\n\r\n\r\n############### output\r\n\r\npanzer:~$ python3 sparse_tensor_dense_matmul_v2.py \r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally\r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally\r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally\r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally\r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally\r\nWARNING:tensorflow:From sparse_tensor_dense_matmul_v2.py:11 in <module>.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.\r\nInstructions for updating:\r\nUse `tf.global_variables_initializer` instead.\r\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:936] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: \r\nname: GeForce GTX 1080\r\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.8095\r\npciBusID 0000:01:00.0\r\nTotal memory: 7.92GiB\r\nFree memory: 7.81GiB\r\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 \r\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y \r\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0)\r\nTraceback (most recent call last):\r\n  File \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1021, in _do_call\r\n    return fn(*args)\r\n  File \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 999, in _run_fn\r\n    self._extend_graph()\r\n  File \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1048, in _extend_graph\r\n    self._session, graph_def.SerializeToString(), status)\r\n  File \"/usr/lib/python3.5/contextlib.py\", line 66, in __exit__\r\n    next(self.gen)\r\n  File \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py\", line 469, in raise_exception_on_not_ok_status\r\n    pywrap_tensorflow.TF_GetCode(status))\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Cannot assign a device to node 'SparseTensorDenseMatMul/SparseTensorDenseMatMul': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\r\n         [[Node: SparseTensorDenseMatMul/SparseTensorDenseMatMul = SparseTensorDenseMatMul[T=DT_DOUBLE, adjoint_a=false, adjoint_b=false, _device=\"/device:GPU:0\"](SparseTensor/indices, SparseTensor/values, SparseTensor/shape, Const)]]\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"sparse_tensor_dense_matmul_v2.py\", line 13, in <module>\r\n    sess.run(init)\r\n  File \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 766, in run\r\n    run_metadata_ptr)\r\n  File \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 964, in _run\r\n    feed_dict_string, options, run_metadata)\r\n  File \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1014, in _do_run\r\n    target_list, options, run_metadata)\r\n  File \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1034, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Cannot assign a device to node 'SparseTensorDenseMatMul/SparseTensorDenseMatMul': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\r\n         [[Node: SparseTensorDenseMatMul/SparseTensorDenseMatMul = SparseTensorDenseMatMul[T=DT_DOUBLE, adjoint_a=false, adjoint_b=false, _device=\"/device:GPU:0\"](SparseTensor/indices, SparseTensor/values, SparseTensor/shape, Const)]]\r\n\r\nCaused by op 'SparseTensorDenseMatMul/SparseTensorDenseMatMul', defined at:\r\n  File \"sparse_tensor_dense_matmul_v2.py\", line 9, in <module>\r\n    p = tf.sparse_tensor_dense_matmul(M, v)\r\n  File \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/ops/sparse_ops.py\", line 1339, in sparse_tensor_dense_matmul\r\n    adjoint_b=adjoint_b)\r\n  File \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/ops/gen_sparse_ops.py\", line 975, in _sparse_tensor_dense_mat_mul\r\n    adjoint_b=adjoint_b, name=name)\r\n  File \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/framework/op_def_library.py\", line 759, in apply_op\r\n    op_def=op_def)\r\n  File \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 2240, in create_op\r\n    original_op=self._default_original_op, op_def=op_def)\r\n  File \"/home/panzer/.local/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 1128, in __init__\r\n    self._traceback = _extract_stack()\r\n\r\nInvalidArgumentError (see above for traceback): Cannot assign a device to node 'SparseTensorDenseMatMul/SparseTensorDenseMatMul': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\r\n         [[Node: SparseTensorDenseMatMul/SparseTensorDenseMatMul = SparseTensorDenseMatMul[T=DT_DOUBLE, adjoint_a=false, adjoint_b=false, _device=\"/device:GPU:0\"](SparseTensor/indices, SparseTensor/values, SparseTensor/shape, Const)]]\r\n\r\n"}