{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/268093915", "html_url": "https://github.com/tensorflow/tensorflow/issues/5853#issuecomment-268093915", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5853", "id": 268093915, "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODA5MzkxNQ==", "user": {"login": "paul-the-noob", "id": 23431488, "node_id": "MDQ6VXNlcjIzNDMxNDg4", "avatar_url": "https://avatars0.githubusercontent.com/u/23431488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paul-the-noob", "html_url": "https://github.com/paul-the-noob", "followers_url": "https://api.github.com/users/paul-the-noob/followers", "following_url": "https://api.github.com/users/paul-the-noob/following{/other_user}", "gists_url": "https://api.github.com/users/paul-the-noob/gists{/gist_id}", "starred_url": "https://api.github.com/users/paul-the-noob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paul-the-noob/subscriptions", "organizations_url": "https://api.github.com/users/paul-the-noob/orgs", "repos_url": "https://api.github.com/users/paul-the-noob/repos", "events_url": "https://api.github.com/users/paul-the-noob/events{/privacy}", "received_events_url": "https://api.github.com/users/paul-the-noob/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-19T22:13:08Z", "updated_at": "2016-12-19T22:13:08Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=8204807\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jramapuram\">@jramapuram</a><br>\nthanks, for that. Using 32bit floats for v and the second (\"values\") argument to the SparseTensor constructor also works for me. (The \"indices\" and \"shape\" arguments are more lenient; the docs specify them as int64, perhaps constructor converts them?)</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=592670\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/concretevitamin\">@concretevitamin</a><br>\nI'm leaving this open, anyway. It would certainly be nice being able to use double precision: for example, the application I'm working on definitely requires it.<br>\nBeing essentially ignorant about the nitty-gritty of gpu programming I don't know how much of an ask this is. But if you could make it work it would help me a lot and be very much appreciated.</p>\n<p>Cheers, Paul</p>", "body_text": "@jramapuram\nthanks, for that. Using 32bit floats for v and the second (\"values\") argument to the SparseTensor constructor also works for me. (The \"indices\" and \"shape\" arguments are more lenient; the docs specify them as int64, perhaps constructor converts them?)\n@concretevitamin\nI'm leaving this open, anyway. It would certainly be nice being able to use double precision: for example, the application I'm working on definitely requires it.\nBeing essentially ignorant about the nitty-gritty of gpu programming I don't know how much of an ask this is. But if you could make it work it would help me a lot and be very much appreciated.\nCheers, Paul", "body": "@jramapuram \r\nthanks, for that. Using 32bit floats for v and the second (\"values\") argument to the SparseTensor constructor also works for me. (The \"indices\" and \"shape\" arguments are more lenient; the docs specify them as int64, perhaps constructor converts them?)\r\n\r\n@concretevitamin \r\nI'm leaving this open, anyway. It would certainly be nice being able to use double precision: for example, the application I'm working on definitely requires it.\r\nBeing essentially ignorant about the nitty-gritty of gpu programming I don't know how much of an ask this is. But if you could make it work it would help me a lot and be very much appreciated.\r\n\r\nCheers, Paul\r\n"}