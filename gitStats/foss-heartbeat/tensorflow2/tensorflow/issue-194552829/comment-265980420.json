{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/265980420", "html_url": "https://github.com/tensorflow/tensorflow/issues/6209#issuecomment-265980420", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6209", "id": 265980420, "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTk4MDQyMA==", "user": {"login": "rdipietro", "id": 5150559, "node_id": "MDQ6VXNlcjUxNTA1NTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5150559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdipietro", "html_url": "https://github.com/rdipietro", "followers_url": "https://api.github.com/users/rdipietro/followers", "following_url": "https://api.github.com/users/rdipietro/following{/other_user}", "gists_url": "https://api.github.com/users/rdipietro/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdipietro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdipietro/subscriptions", "organizations_url": "https://api.github.com/users/rdipietro/orgs", "repos_url": "https://api.github.com/users/rdipietro/repos", "events_url": "https://api.github.com/users/rdipietro/events{/privacy}", "received_events_url": "https://api.github.com/users/rdipietro/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-09T10:20:01Z", "updated_at": "2016-12-09T10:52:26Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Including a temporary fix for anyone else with custom RNN implementations that indicate specific invalid time steps instead of using the <code>sequence_length</code> option provided in TensorFlow. (This makes writing various models (time-step-level regression, sequence-level regression, time-step-level classification, sequence-level classification) simple with no edge cases.)</p>\n<p>If we pad the inputs with 0.0 instead of NaN, this bug will never occur. We can then still pad targets with NaNs and mask using the targets.</p>", "body_text": "Including a temporary fix for anyone else with custom RNN implementations that indicate specific invalid time steps instead of using the sequence_length option provided in TensorFlow. (This makes writing various models (time-step-level regression, sequence-level regression, time-step-level classification, sequence-level classification) simple with no edge cases.)\nIf we pad the inputs with 0.0 instead of NaN, this bug will never occur. We can then still pad targets with NaNs and mask using the targets.", "body": "Including a temporary fix for anyone else with custom RNN implementations that indicate specific invalid time steps instead of using the `sequence_length` option provided in TensorFlow. (This makes writing various models (time-step-level regression, sequence-level regression, time-step-level classification, sequence-level classification) simple with no edge cases.)\r\n\r\nIf we pad the inputs with 0.0 instead of NaN, this bug will never occur. We can then still pad targets with NaNs and mask using the targets."}