{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/358595905", "html_url": "https://github.com/tensorflow/tensorflow/pull/16173#issuecomment-358595905", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16173", "id": 358595905, "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODU5NTkwNQ==", "user": {"login": "jart", "id": 49262, "node_id": "MDQ6VXNlcjQ5MjYy", "avatar_url": "https://avatars1.githubusercontent.com/u/49262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jart", "html_url": "https://github.com/jart", "followers_url": "https://api.github.com/users/jart/followers", "following_url": "https://api.github.com/users/jart/following{/other_user}", "gists_url": "https://api.github.com/users/jart/gists{/gist_id}", "starred_url": "https://api.github.com/users/jart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jart/subscriptions", "organizations_url": "https://api.github.com/users/jart/orgs", "repos_url": "https://api.github.com/users/jart/repos", "events_url": "https://api.github.com/users/jart/events{/privacy}", "received_events_url": "https://api.github.com/users/jart/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-18T09:56:06Z", "updated_at": "2018-01-18T09:56:06Z", "author_association": "MEMBER", "body_html": "<p>Oh by the way <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1299636\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/case540\">@case540</a>, here are some notes I took on building Clang from source:</p>\n<div class=\"highlight highlight-source-shell\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span> Install CMake (to build Clang snapshot)</span>\nsudo apt-get purge <span class=\"pl-s\"><span class=\"pl-pds\">'</span>cmake*<span class=\"pl-pds\">'</span></span>\nwget https://cmake.org/files/v3.10/cmake-3.10.1.tar.gz\ntar xvzf cmake-3.10.1.tar.gz\n<span class=\"pl-c1\">pushd</span> cmake-3.10.1\nCFLAGS=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>-O2 -march=native<span class=\"pl-pds\">'</span></span> CXXFLAGS=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>-O2 -march=native<span class=\"pl-pds\">'</span></span> ./bootstrap --prefix=/usr --parallel=96\nmake CFLAGS=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>-O2 -march=native<span class=\"pl-pds\">'</span></span> CXXFLAGS=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>-O2 -march=native<span class=\"pl-pds\">'</span></span> -j96\nsudo make install\n<span class=\"pl-c1\">popd</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Install Ninja</span>\ngit clone git://github.com/ninja-build/ninja.git\n<span class=\"pl-c1\">pushd</span> ninja\ngit checkout release\nCC=clang-6.0 CXX=clang++-6.0 CFLAGS=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>-O2 -march=native<span class=\"pl-pds\">'</span></span> CXXFLAGS=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>-O2 -march=native<span class=\"pl-pds\">'</span></span> ./configure.py --bootstrap\nsudo cp ninja /usr/bin\n<span class=\"pl-c1\">popd</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Install Clang 7.0</span>\nsvn co http://llvm.org/svn/llvm-project/llvm/trunk llvm\n<span class=\"pl-c1\">cd</span> llvm/tools\nsvn co http://llvm.org/svn/llvm-project/cfe/trunk clang\n<span class=\"pl-c1\">cd</span> clang/tools  <span class=\"pl-c\"><span class=\"pl-c\">#</span> llvm/tools/clang/tools</span>\nsvn co http://llvm.org/svn/llvm-project/clang-tools-extra/trunk extra\n<span class=\"pl-c1\">cd</span> ../..  <span class=\"pl-c\"><span class=\"pl-c\">#</span> llvm/tools</span>\nsvn co http://llvm.org/svn/llvm-project/lld/trunk lld\nsvn co http://llvm.org/svn/llvm-project/polly/trunk polly\n<span class=\"pl-c1\">cd</span> ../projects  <span class=\"pl-c\"><span class=\"pl-c\">#</span> llvm/projects</span>\nsvn co http://llvm.org/svn/llvm-project/compiler-rt/trunk compiler-rt\nsvn co http://llvm.org/svn/llvm-project/openmp/trunk openmp\nsvn co http://llvm.org/svn/llvm-project/libcxx/trunk libcxx\nsvn co http://llvm.org/svn/llvm-project/libcxxabi/trunk libcxxabi\n<span class=\"pl-c1\">cd</span> ..  <span class=\"pl-c\"><span class=\"pl-c\">#</span> llvm</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Note: Build Clang using GCC 4.8.2+ (rather than Clang)</span>\nllvm_build_opts=(\n  -DBUILD_SHARED_LIBS=On\n  -DCMAKE_BUILD_TYPE=Release\n  -DCMAKE_CXX_FLAGS=-march=native\n  -DCMAKE_C_FLAGS=-march=native\n  -DCMAKE_EXE_LINKER_FLAGS=-fuse-ld=gold\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON\n  -DLLVM_EXPERIMENTAL_TARGETS_TO_BUILD=WebAssembly\n  -DLLVM_OPTIMIZED_TABLEGEN=On\n  -DLLVM_PARALLEL_COMPILE_JOBS=100\n  -DLLVM_PARALLEL_LINK_JOBS=50\n)\nmkdir _build\n<span class=\"pl-c1\">cd</span> _build\ncmake -G Ninja .. <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">${llvm_build_opts[@]}</span><span class=\"pl-pds\">\"</span></span>\nninja\nsudo cmake -DCMAKE_INSTALL_PREFIX=/usr/lib/llvm-7.0 -P cmake_install.cmake</pre></div>\n<p>I was experimenting to see if Clang 7.0 unstable would be a better choice, but it seemed a little\u2026 unstable, and didn't have some of the bleeding edge features out of the box I was hoping it'd have.</p>\n<p>So if you end up needing to build from source, hopefully those notes will save you time.</p>", "body_text": "Oh by the way @case540, here are some notes I took on building Clang from source:\n# Install CMake (to build Clang snapshot)\nsudo apt-get purge 'cmake*'\nwget https://cmake.org/files/v3.10/cmake-3.10.1.tar.gz\ntar xvzf cmake-3.10.1.tar.gz\npushd cmake-3.10.1\nCFLAGS='-O2 -march=native' CXXFLAGS='-O2 -march=native' ./bootstrap --prefix=/usr --parallel=96\nmake CFLAGS='-O2 -march=native' CXXFLAGS='-O2 -march=native' -j96\nsudo make install\npopd\n\n# Install Ninja\ngit clone git://github.com/ninja-build/ninja.git\npushd ninja\ngit checkout release\nCC=clang-6.0 CXX=clang++-6.0 CFLAGS='-O2 -march=native' CXXFLAGS='-O2 -march=native' ./configure.py --bootstrap\nsudo cp ninja /usr/bin\npopd\n\n# Install Clang 7.0\nsvn co http://llvm.org/svn/llvm-project/llvm/trunk llvm\ncd llvm/tools\nsvn co http://llvm.org/svn/llvm-project/cfe/trunk clang\ncd clang/tools  # llvm/tools/clang/tools\nsvn co http://llvm.org/svn/llvm-project/clang-tools-extra/trunk extra\ncd ../..  # llvm/tools\nsvn co http://llvm.org/svn/llvm-project/lld/trunk lld\nsvn co http://llvm.org/svn/llvm-project/polly/trunk polly\ncd ../projects  # llvm/projects\nsvn co http://llvm.org/svn/llvm-project/compiler-rt/trunk compiler-rt\nsvn co http://llvm.org/svn/llvm-project/openmp/trunk openmp\nsvn co http://llvm.org/svn/llvm-project/libcxx/trunk libcxx\nsvn co http://llvm.org/svn/llvm-project/libcxxabi/trunk libcxxabi\ncd ..  # llvm\n\n# Note: Build Clang using GCC 4.8.2+ (rather than Clang)\nllvm_build_opts=(\n  -DBUILD_SHARED_LIBS=On\n  -DCMAKE_BUILD_TYPE=Release\n  -DCMAKE_CXX_FLAGS=-march=native\n  -DCMAKE_C_FLAGS=-march=native\n  -DCMAKE_EXE_LINKER_FLAGS=-fuse-ld=gold\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON\n  -DLLVM_EXPERIMENTAL_TARGETS_TO_BUILD=WebAssembly\n  -DLLVM_OPTIMIZED_TABLEGEN=On\n  -DLLVM_PARALLEL_COMPILE_JOBS=100\n  -DLLVM_PARALLEL_LINK_JOBS=50\n)\nmkdir _build\ncd _build\ncmake -G Ninja .. \"${llvm_build_opts[@]}\"\nninja\nsudo cmake -DCMAKE_INSTALL_PREFIX=/usr/lib/llvm-7.0 -P cmake_install.cmake\nI was experimenting to see if Clang 7.0 unstable would be a better choice, but it seemed a little\u2026 unstable, and didn't have some of the bleeding edge features out of the box I was hoping it'd have.\nSo if you end up needing to build from source, hopefully those notes will save you time.", "body": "Oh by the way @case540, here are some notes I took on building Clang from source:\r\n\r\n```sh\r\n# Install CMake (to build Clang snapshot)\r\nsudo apt-get purge 'cmake*'\r\nwget https://cmake.org/files/v3.10/cmake-3.10.1.tar.gz\r\ntar xvzf cmake-3.10.1.tar.gz\r\npushd cmake-3.10.1\r\nCFLAGS='-O2 -march=native' CXXFLAGS='-O2 -march=native' ./bootstrap --prefix=/usr --parallel=96\r\nmake CFLAGS='-O2 -march=native' CXXFLAGS='-O2 -march=native' -j96\r\nsudo make install\r\npopd\r\n\r\n# Install Ninja\r\ngit clone git://github.com/ninja-build/ninja.git\r\npushd ninja\r\ngit checkout release\r\nCC=clang-6.0 CXX=clang++-6.0 CFLAGS='-O2 -march=native' CXXFLAGS='-O2 -march=native' ./configure.py --bootstrap\r\nsudo cp ninja /usr/bin\r\npopd\r\n\r\n# Install Clang 7.0\r\nsvn co http://llvm.org/svn/llvm-project/llvm/trunk llvm\r\ncd llvm/tools\r\nsvn co http://llvm.org/svn/llvm-project/cfe/trunk clang\r\ncd clang/tools  # llvm/tools/clang/tools\r\nsvn co http://llvm.org/svn/llvm-project/clang-tools-extra/trunk extra\r\ncd ../..  # llvm/tools\r\nsvn co http://llvm.org/svn/llvm-project/lld/trunk lld\r\nsvn co http://llvm.org/svn/llvm-project/polly/trunk polly\r\ncd ../projects  # llvm/projects\r\nsvn co http://llvm.org/svn/llvm-project/compiler-rt/trunk compiler-rt\r\nsvn co http://llvm.org/svn/llvm-project/openmp/trunk openmp\r\nsvn co http://llvm.org/svn/llvm-project/libcxx/trunk libcxx\r\nsvn co http://llvm.org/svn/llvm-project/libcxxabi/trunk libcxxabi\r\ncd ..  # llvm\r\n\r\n# Note: Build Clang using GCC 4.8.2+ (rather than Clang)\r\nllvm_build_opts=(\r\n  -DBUILD_SHARED_LIBS=On\r\n  -DCMAKE_BUILD_TYPE=Release\r\n  -DCMAKE_CXX_FLAGS=-march=native\r\n  -DCMAKE_C_FLAGS=-march=native\r\n  -DCMAKE_EXE_LINKER_FLAGS=-fuse-ld=gold\r\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON\r\n  -DLLVM_EXPERIMENTAL_TARGETS_TO_BUILD=WebAssembly\r\n  -DLLVM_OPTIMIZED_TABLEGEN=On\r\n  -DLLVM_PARALLEL_COMPILE_JOBS=100\r\n  -DLLVM_PARALLEL_LINK_JOBS=50\r\n)\r\nmkdir _build\r\ncd _build\r\ncmake -G Ninja .. \"${llvm_build_opts[@]}\"\r\nninja\r\nsudo cmake -DCMAKE_INSTALL_PREFIX=/usr/lib/llvm-7.0 -P cmake_install.cmake\r\n```\r\n\r\nI was experimenting to see if Clang 7.0 unstable would be a better choice, but it seemed a little\u2026 unstable, and didn't have some of the bleeding edge features out of the box I was hoping it'd have.\r\n\r\nSo if you end up needing to build from source, hopefully those notes will save you time."}