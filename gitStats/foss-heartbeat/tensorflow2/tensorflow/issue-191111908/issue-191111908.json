{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5790", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5790/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5790/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5790/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/5790", "id": 191111908, "node_id": "MDU6SXNzdWUxOTExMTE5MDg=", "number": 5790, "title": "Feature proposal: bilinear upsampling transposed convolution initialization.", "user": {"login": "warmspringwinds", "id": 2501383, "node_id": "MDQ6VXNlcjI1MDEzODM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2501383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/warmspringwinds", "html_url": "https://github.com/warmspringwinds", "followers_url": "https://api.github.com/users/warmspringwinds/followers", "following_url": "https://api.github.com/users/warmspringwinds/following{/other_user}", "gists_url": "https://api.github.com/users/warmspringwinds/gists{/gist_id}", "starred_url": "https://api.github.com/users/warmspringwinds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/warmspringwinds/subscriptions", "organizations_url": "https://api.github.com/users/warmspringwinds/orgs", "repos_url": "https://api.github.com/users/warmspringwinds/repos", "events_url": "https://api.github.com/users/warmspringwinds/events{/privacy}", "received_events_url": "https://api.github.com/users/warmspringwinds/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-22T20:10:32Z", "updated_at": "2017-06-16T18:00:05Z", "closed_at": "2017-06-16T18:00:05Z", "author_association": "NONE", "body_html": "<p>Hello,</p>\n<p>I have been recently <a href=\"http://warmspringwinds.github.io/tensorflow/tf-slim/2016/11/22/upsampling-and-image-segmentation-with-tensorflow-and-tf-slim/\" rel=\"nofollow\">implementing the FCN-32 network for image segmentation</a><br>\nand found out that there is no bilinear upsampling op in Tensorflow or TF-slim.<br>\nThat would be great if there will be an op that will do that, because that will make it<br>\npossible to bilinearly upsample blobs in a differentiable way or initialize upsampling<br>\nfilter with bilinear kernel.</p>\n<p>I have already implemented that and checked correctness.<br>\nYou can see more if you follow the link.<br>\nIf you are interested, I can make a pull request.</p>\n<p>Thank you.</p>", "body_text": "Hello,\nI have been recently implementing the FCN-32 network for image segmentation\nand found out that there is no bilinear upsampling op in Tensorflow or TF-slim.\nThat would be great if there will be an op that will do that, because that will make it\npossible to bilinearly upsample blobs in a differentiable way or initialize upsampling\nfilter with bilinear kernel.\nI have already implemented that and checked correctness.\nYou can see more if you follow the link.\nIf you are interested, I can make a pull request.\nThank you.", "body": "Hello,\r\n\r\nI have been recently [implementing the FCN-32 network for image segmentation](http://warmspringwinds.github.io/tensorflow/tf-slim/2016/11/22/upsampling-and-image-segmentation-with-tensorflow-and-tf-slim/)\r\nand found out that there is no bilinear upsampling op in Tensorflow or TF-slim.\r\nThat would be great if there will be an op that will do that, because that will make it\r\npossible to bilinearly upsample blobs in a differentiable way or initialize upsampling\r\nfilter with bilinear kernel.\r\n\r\nI have already implemented that and checked correctness.\r\nYou can see more if you follow the link. \r\nIf you are interested, I can make a pull request.\r\n\r\nThank you. "}