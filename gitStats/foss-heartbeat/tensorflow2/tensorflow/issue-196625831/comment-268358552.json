{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/268358552", "html_url": "https://github.com/tensorflow/tensorflow/issues/6416#issuecomment-268358552", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6416", "id": 268358552, "node_id": "MDEyOklzc3VlQ29tbWVudDI2ODM1ODU1Mg==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-20T21:01:14Z", "updated_at": "2016-12-20T21:01:14Z", "author_association": "CONTRIBUTOR", "body_html": "<p>No, TensorFlow doesn't reschedule job when machine goes down, that's job of cluster manager.</p>\n<p>You could specify your cluster using hostnames rather than IP numbers like this<br>\n<code>cluster = tf.train.ClusterSpec({\"local\": [\"machine1:2222\", \"machine2:2223\"]}) </code><br>\nThen when one machine1 goes down, it's job of cluster manager to spin up another instance, and update DNS records so that <code>machine1</code> points to that machine.</p>\n<p>With current distributed implementation, resetting a connection will terminate your <code>session.run</code> call (like in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"195659517\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/6319\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/6319/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/6319\">#6319</a> which was due to AWS resetting idle connections), so you'll need to add extra logic to restart your <code>session.run</code></p>", "body_text": "No, TensorFlow doesn't reschedule job when machine goes down, that's job of cluster manager.\nYou could specify your cluster using hostnames rather than IP numbers like this\ncluster = tf.train.ClusterSpec({\"local\": [\"machine1:2222\", \"machine2:2223\"]}) \nThen when one machine1 goes down, it's job of cluster manager to spin up another instance, and update DNS records so that machine1 points to that machine.\nWith current distributed implementation, resetting a connection will terminate your session.run call (like in #6319 which was due to AWS resetting idle connections), so you'll need to add extra logic to restart your session.run", "body": "No, TensorFlow doesn't reschedule job when machine goes down, that's job of cluster manager.\r\n\r\nYou could specify your cluster using hostnames rather than IP numbers like this\r\n`cluster = tf.train.ClusterSpec({\"local\": [\"machine1:2222\", \"machine2:2223\"]})\r\n`\r\nThen when one machine1 goes down, it's job of cluster manager to spin up another instance, and update DNS records so that `machine1` points to that machine.\r\n\r\nWith current distributed implementation, resetting a connection will terminate your `session.run` call (like in https://github.com/tensorflow/tensorflow/issues/6319 which was due to AWS resetting idle connections), so you'll need to add extra logic to restart your `session.run`"}