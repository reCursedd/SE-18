{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/307535944", "html_url": "https://github.com/tensorflow/tensorflow/issues/9072#issuecomment-307535944", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9072", "id": 307535944, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzUzNTk0NA==", "user": {"login": "qinyuhang", "id": 6239057, "node_id": "MDQ6VXNlcjYyMzkwNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/6239057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qinyuhang", "html_url": "https://github.com/qinyuhang", "followers_url": "https://api.github.com/users/qinyuhang/followers", "following_url": "https://api.github.com/users/qinyuhang/following{/other_user}", "gists_url": "https://api.github.com/users/qinyuhang/gists{/gist_id}", "starred_url": "https://api.github.com/users/qinyuhang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qinyuhang/subscriptions", "organizations_url": "https://api.github.com/users/qinyuhang/orgs", "repos_url": "https://api.github.com/users/qinyuhang/repos", "events_url": "https://api.github.com/users/qinyuhang/events{/privacy}", "received_events_url": "https://api.github.com/users/qinyuhang/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-10T02:22:31Z", "updated_at": "2017-06-10T02:22:31Z", "author_association": "NONE", "body_html": "<p>thanks to <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1946913\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/BKJackson\">@BKJackson</a> . I followed your suggestion, not choosing clang as the default compiler for cuda, it worked!</p>\n<p>this is my config log</p>\n<pre><code>\u279c  tensorflow-master ./configure                                      \nYou have bazel 0.5.1-homebrew installed.\nPlease specify the location of python. [Default is /Users/qinyuhang/anaconda/bin/python]: \nFound possible Python library paths:\n  /Users/qinyuhang/anaconda/lib/python2.7/site-packages\nPlease input the desired Python library path to use.  Default is [/Users/qinyuhang/anaconda/lib/python2.7/site-packages]\n\nUsing python library path: /Users/qinyuhang/anaconda/lib/python2.7/site-packages\nDo you wish to build TensorFlow with MKL support? [y/N] n\nNo MKL support will be enabled for TensorFlow\nPlease specify optimization flags to use during compilation when bazel option \"--config=opt\" is specified [Default is -march=native]: \nDo you wish to build TensorFlow with Google Cloud Platform support? [y/N] n\nNo Google Cloud Platform support will be enabled for TensorFlow\nDo you wish to build TensorFlow with Hadoop File System support? [y/N] y\nHadoop File System support will be enabled for TensorFlow\nDo you wish to build TensorFlow with the XLA just-in-time compiler (experimental)? [y/N] y\nXLA JIT support will be enabled for TensorFlow\nDo you wish to build TensorFlow with VERBS support? [y/N] y\nVERBS support will be enabled for TensorFlow\nDo you wish to build TensorFlow with OpenCL support? [y/N] n\nNo OpenCL support will be enabled for TensorFlow\nDo you wish to build TensorFlow with CUDA support? [y/N] y\nCUDA support will be enabled for TensorFlow\nDo you want to use clang as CUDA compiler? [y/N] n\nnvcc will be used as CUDA compiler\nPlease specify the CUDA SDK version you want to use, e.g. 7.0. [Leave empty to default to CUDA 8.0]: \nPlease specify the location where CUDA  toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: \nPlease specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]: \nPlease specify the cuDNN version you want to use. [Leave empty to default to cuDNN 6.0]: \nPlease specify the location where cuDNN  library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: \nPlease specify a list of comma-separated Cuda compute capabilities you want to build with.\nYou can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.\nPlease note that each additional compute capability significantly increases your build time and binary size.\n[Default is: \"3.5,5.2\"]: 3.0\nDo you wish to build TensorFlow with MPI support? [y/N] n\nMPI support will not be enabled for TensorFlow\nConfiguration finished\n</code></pre>", "body_text": "thanks to @BKJackson . I followed your suggestion, not choosing clang as the default compiler for cuda, it worked!\nthis is my config log\n\u279c  tensorflow-master ./configure                                      \nYou have bazel 0.5.1-homebrew installed.\nPlease specify the location of python. [Default is /Users/qinyuhang/anaconda/bin/python]: \nFound possible Python library paths:\n  /Users/qinyuhang/anaconda/lib/python2.7/site-packages\nPlease input the desired Python library path to use.  Default is [/Users/qinyuhang/anaconda/lib/python2.7/site-packages]\n\nUsing python library path: /Users/qinyuhang/anaconda/lib/python2.7/site-packages\nDo you wish to build TensorFlow with MKL support? [y/N] n\nNo MKL support will be enabled for TensorFlow\nPlease specify optimization flags to use during compilation when bazel option \"--config=opt\" is specified [Default is -march=native]: \nDo you wish to build TensorFlow with Google Cloud Platform support? [y/N] n\nNo Google Cloud Platform support will be enabled for TensorFlow\nDo you wish to build TensorFlow with Hadoop File System support? [y/N] y\nHadoop File System support will be enabled for TensorFlow\nDo you wish to build TensorFlow with the XLA just-in-time compiler (experimental)? [y/N] y\nXLA JIT support will be enabled for TensorFlow\nDo you wish to build TensorFlow with VERBS support? [y/N] y\nVERBS support will be enabled for TensorFlow\nDo you wish to build TensorFlow with OpenCL support? [y/N] n\nNo OpenCL support will be enabled for TensorFlow\nDo you wish to build TensorFlow with CUDA support? [y/N] y\nCUDA support will be enabled for TensorFlow\nDo you want to use clang as CUDA compiler? [y/N] n\nnvcc will be used as CUDA compiler\nPlease specify the CUDA SDK version you want to use, e.g. 7.0. [Leave empty to default to CUDA 8.0]: \nPlease specify the location where CUDA  toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: \nPlease specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]: \nPlease specify the cuDNN version you want to use. [Leave empty to default to cuDNN 6.0]: \nPlease specify the location where cuDNN  library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: \nPlease specify a list of comma-separated Cuda compute capabilities you want to build with.\nYou can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.\nPlease note that each additional compute capability significantly increases your build time and binary size.\n[Default is: \"3.5,5.2\"]: 3.0\nDo you wish to build TensorFlow with MPI support? [y/N] n\nMPI support will not be enabled for TensorFlow\nConfiguration finished", "body": "thanks to @BKJackson . I followed your suggestion, not choosing clang as the default compiler for cuda, it worked! \r\n\r\nthis is my config log\r\n\r\n```\r\n\u279c  tensorflow-master ./configure                                      \r\nYou have bazel 0.5.1-homebrew installed.\r\nPlease specify the location of python. [Default is /Users/qinyuhang/anaconda/bin/python]: \r\nFound possible Python library paths:\r\n  /Users/qinyuhang/anaconda/lib/python2.7/site-packages\r\nPlease input the desired Python library path to use.  Default is [/Users/qinyuhang/anaconda/lib/python2.7/site-packages]\r\n\r\nUsing python library path: /Users/qinyuhang/anaconda/lib/python2.7/site-packages\r\nDo you wish to build TensorFlow with MKL support? [y/N] n\r\nNo MKL support will be enabled for TensorFlow\r\nPlease specify optimization flags to use during compilation when bazel option \"--config=opt\" is specified [Default is -march=native]: \r\nDo you wish to build TensorFlow with Google Cloud Platform support? [y/N] n\r\nNo Google Cloud Platform support will be enabled for TensorFlow\r\nDo you wish to build TensorFlow with Hadoop File System support? [y/N] y\r\nHadoop File System support will be enabled for TensorFlow\r\nDo you wish to build TensorFlow with the XLA just-in-time compiler (experimental)? [y/N] y\r\nXLA JIT support will be enabled for TensorFlow\r\nDo you wish to build TensorFlow with VERBS support? [y/N] y\r\nVERBS support will be enabled for TensorFlow\r\nDo you wish to build TensorFlow with OpenCL support? [y/N] n\r\nNo OpenCL support will be enabled for TensorFlow\r\nDo you wish to build TensorFlow with CUDA support? [y/N] y\r\nCUDA support will be enabled for TensorFlow\r\nDo you want to use clang as CUDA compiler? [y/N] n\r\nnvcc will be used as CUDA compiler\r\nPlease specify the CUDA SDK version you want to use, e.g. 7.0. [Leave empty to default to CUDA 8.0]: \r\nPlease specify the location where CUDA  toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: \r\nPlease specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]: \r\nPlease specify the cuDNN version you want to use. [Leave empty to default to cuDNN 6.0]: \r\nPlease specify the location where cuDNN  library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: \r\nPlease specify a list of comma-separated Cuda compute capabilities you want to build with.\r\nYou can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.\r\nPlease note that each additional compute capability significantly increases your build time and binary size.\r\n[Default is: \"3.5,5.2\"]: 3.0\r\nDo you wish to build TensorFlow with MPI support? [y/N] n\r\nMPI support will not be enabled for TensorFlow\r\nConfiguration finished\r\n```\r\n\r\n"}