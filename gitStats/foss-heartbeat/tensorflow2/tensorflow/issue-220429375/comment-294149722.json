{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/294149722", "html_url": "https://github.com/tensorflow/tensorflow/issues/9072#issuecomment-294149722", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9072", "id": 294149722, "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDE0OTcyMg==", "user": {"login": "RagingTiger", "id": 22482618, "node_id": "MDQ6VXNlcjIyNDgyNjE4", "avatar_url": "https://avatars3.githubusercontent.com/u/22482618?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RagingTiger", "html_url": "https://github.com/RagingTiger", "followers_url": "https://api.github.com/users/RagingTiger/followers", "following_url": "https://api.github.com/users/RagingTiger/following{/other_user}", "gists_url": "https://api.github.com/users/RagingTiger/gists{/gist_id}", "starred_url": "https://api.github.com/users/RagingTiger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RagingTiger/subscriptions", "organizations_url": "https://api.github.com/users/RagingTiger/orgs", "repos_url": "https://api.github.com/users/RagingTiger/repos", "events_url": "https://api.github.com/users/RagingTiger/events{/privacy}", "received_events_url": "https://api.github.com/users/RagingTiger/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-14T13:00:38Z", "updated_at": "2017-04-14T13:00:38Z", "author_association": "NONE", "body_html": "<p>I can 100% corroborate the results of <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1946913\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/BKJackson\">@BKJackson</a>, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=14347945\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/cody-code-wy\">@cody-code-wy</a>, and <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7927822\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/udnaan\">@udnaan</a>. The <code>ERROR: Inconsistent crosstool configuration; no toolchain corresponding to 'local_darwin' found for cpu 'darwin'</code> error only occurs when passing the <code>--config=cuda</code> argument to <code>bazel build</code> and selecting <code>clang</code> as the compiler during the <code>./configure</code> script. And, as <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7927822\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/udnaan\">@udnaan</a> points out earlier in the discussion, on macOS gcc is just a symlink to clang so <code>-zmuldefs</code> will cause the linking error in the final steps of the build process.</p>\n<h1>Report:</h1>\n<h3>System Information</h3>\n<ul>\n<li><em>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)?</em>: <code>Not at all. I have followed TensorFlow install from source docs</code> <em>refs:</em> <a href=\"https://www.tensorflow.org/install/install_sources#PrepareMac\" rel=\"nofollow\">1</a></li>\n<li><em>OS Platform and Distribution (i.e. Linux Ubuntu 16.0)</em>: <code>macOS 10.11.6 (15G1421)</code></li>\n<li><em>TensorFlow installed from (source or binary)?</em>: <code>Source</code></li>\n<li><em>TensorFlow version</em> (use command below): <code>1.0.1</code></li>\n<li><em>Bazel version (if compiling from source)</em>: <code>0.4.5-homebrew</code></li>\n<li><em>CUDA/cuDNN version</em>: <code>8.0/5</code></li>\n<li><em>GPU Model and Memory</em>: <code>NVIDIA GeForce GT 750M, 2048 MB</code></li>\n<li><em>Exact command to reproduce</em>: <code>bazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package</code> <em>refs:</em> <a href=\"https://www.tensorflow.org/install/install_sources#PrepareMac\" rel=\"nofollow\">1</a></li>\n</ul>\n<h3>Describe the problem clearly</h3>\n<p>The problem (<a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1946913\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/BKJackson\">@BKJackson</a> references) occurs after I run <code>./configure</code> and then <code>bazel</code>:</p>\n<p><em>First I configure:</em></p>\n<pre><code>Please specify the location of python. [Default is /usr/local/bin/python]:\nPlease specify optimization flags to use during compilation when bazel option \"--config=opt\" is specified [Default is -march=native]:\nDo you wish to build TensorFlow with Google Cloud Platform support? [y/N] N\nNo Google Cloud Platform support will be enabled for TensorFlow\nDo you wish to build TensorFlow with Hadoop File System support? [y/N] N\nNo Hadoop File System support will be enabled for TensorFlow\nDo you wish to build TensorFlow with the XLA just-in-time compiler (experimental)? [y/N] N\nNo XLA JIT support will be enabled for TensorFlow\nFound possible Python library paths:\n  /usr/local/Cellar/python/2.7.12_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages\n  /Library/Python/2.7/site-packages\nPlease input the desired Python library path to use.  Default is [/usr/local/Cellar/python/2.7.12_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages]\n\nUsing python library path: /usr/local/Cellar/python/2.7.12_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages\nDo you wish to build TensorFlow with OpenCL support? [y/N] N\nNo OpenCL support will be enabled for TensorFlow\nDo you wish to build TensorFlow with CUDA support? [y/N] y\nCUDA support will be enabled for TensorFlow\nDo you want to use clang as CUDA compiler? [y/N] y\nClang will be used as CUDA compiler\nPlease specify which clang should be used as device and host compiler. [Default is /usr/bin/clang]:\nPlease specify the CUDA SDK version you want to use, e.g. 7.0. [Leave empty to use system default]: 8.0\nPlease specify the location where CUDA 8.0 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:\nPlease specify the cuDNN version you want to use. [Leave empty to use system default]: 5\nPlease specify the location where cuDNN 5 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:\nPlease specify a list of comma-separated Cuda compute capabilities you want to build with.\nYou can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.\nPlease note that each additional compute capability significantly increases your build time and binary size.\n[Default is: \"3.5,5.2\"]: 3.0\nINFO: Starting clean (this may take a while). Consider using --async if the clean takes more than several minutes.\nConfiguration finished\n</code></pre>\n<p><em>Then I execute bazel:</em></p>\n<pre><code>$ bazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package  \n  ERROR: Inconsistent crosstool configuration; no toolchain corresponding to  'local_darwin' found for cpu 'darwin'.  \n  INFO: Elapsed time: 0.503s\n</code></pre>\n<p>I believe, as <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1946913\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/BKJackson\">@BKJackson</a> stated, this is an issue with the bazel BUILD and/or<br>\nCROSSTOOL files (possibly in the third_party/gpus/cuda package?).</p>\n<h3>Source Code / Logs</h3>\n<p>See <code>Describe the problem clearly</code> section for output.</p>", "body_text": "I can 100% corroborate the results of @BKJackson, @cody-code-wy, and @udnaan. The ERROR: Inconsistent crosstool configuration; no toolchain corresponding to 'local_darwin' found for cpu 'darwin' error only occurs when passing the --config=cuda argument to bazel build and selecting clang as the compiler during the ./configure script. And, as @udnaan points out earlier in the discussion, on macOS gcc is just a symlink to clang so -zmuldefs will cause the linking error in the final steps of the build process.\nReport:\nSystem Information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow)?: Not at all. I have followed TensorFlow install from source docs refs: 1\nOS Platform and Distribution (i.e. Linux Ubuntu 16.0): macOS 10.11.6 (15G1421)\nTensorFlow installed from (source or binary)?: Source\nTensorFlow version (use command below): 1.0.1\nBazel version (if compiling from source): 0.4.5-homebrew\nCUDA/cuDNN version: 8.0/5\nGPU Model and Memory: NVIDIA GeForce GT 750M, 2048 MB\nExact command to reproduce: bazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package refs: 1\n\nDescribe the problem clearly\nThe problem (@BKJackson references) occurs after I run ./configure and then bazel:\nFirst I configure:\nPlease specify the location of python. [Default is /usr/local/bin/python]:\nPlease specify optimization flags to use during compilation when bazel option \"--config=opt\" is specified [Default is -march=native]:\nDo you wish to build TensorFlow with Google Cloud Platform support? [y/N] N\nNo Google Cloud Platform support will be enabled for TensorFlow\nDo you wish to build TensorFlow with Hadoop File System support? [y/N] N\nNo Hadoop File System support will be enabled for TensorFlow\nDo you wish to build TensorFlow with the XLA just-in-time compiler (experimental)? [y/N] N\nNo XLA JIT support will be enabled for TensorFlow\nFound possible Python library paths:\n  /usr/local/Cellar/python/2.7.12_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages\n  /Library/Python/2.7/site-packages\nPlease input the desired Python library path to use.  Default is [/usr/local/Cellar/python/2.7.12_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages]\n\nUsing python library path: /usr/local/Cellar/python/2.7.12_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages\nDo you wish to build TensorFlow with OpenCL support? [y/N] N\nNo OpenCL support will be enabled for TensorFlow\nDo you wish to build TensorFlow with CUDA support? [y/N] y\nCUDA support will be enabled for TensorFlow\nDo you want to use clang as CUDA compiler? [y/N] y\nClang will be used as CUDA compiler\nPlease specify which clang should be used as device and host compiler. [Default is /usr/bin/clang]:\nPlease specify the CUDA SDK version you want to use, e.g. 7.0. [Leave empty to use system default]: 8.0\nPlease specify the location where CUDA 8.0 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:\nPlease specify the cuDNN version you want to use. [Leave empty to use system default]: 5\nPlease specify the location where cuDNN 5 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:\nPlease specify a list of comma-separated Cuda compute capabilities you want to build with.\nYou can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.\nPlease note that each additional compute capability significantly increases your build time and binary size.\n[Default is: \"3.5,5.2\"]: 3.0\nINFO: Starting clean (this may take a while). Consider using --async if the clean takes more than several minutes.\nConfiguration finished\n\nThen I execute bazel:\n$ bazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package  \n  ERROR: Inconsistent crosstool configuration; no toolchain corresponding to  'local_darwin' found for cpu 'darwin'.  \n  INFO: Elapsed time: 0.503s\n\nI believe, as @BKJackson stated, this is an issue with the bazel BUILD and/or\nCROSSTOOL files (possibly in the third_party/gpus/cuda package?).\nSource Code / Logs\nSee Describe the problem clearly section for output.", "body": "I can 100% corroborate the results of @BKJackson, @cody-code-wy, and @udnaan. The `ERROR: Inconsistent crosstool configuration; no toolchain corresponding to 'local_darwin' found for cpu 'darwin'` error only occurs when passing the `--config=cuda` argument to `bazel build` and selecting `clang` as the compiler during the `./configure` script. And, as @udnaan points out earlier in the discussion, on macOS gcc is just a symlink to clang so `-zmuldefs` will cause the linking error in the final steps of the build process.\r\n\r\nReport:\r\n=======================================================================================\r\n### System Information\r\n- *Have I written custom code (as opposed to using a stock example script provided in TensorFlow)?*: `Not at all. I have followed TensorFlow install from source docs` *refs:* [1](https://www.tensorflow.org/install/install_sources#PrepareMac)\r\n- *OS Platform and Distribution (i.e. Linux Ubuntu 16.0)*: `macOS 10.11.6 (15G1421)`\r\n- *TensorFlow installed from (source or binary)?*: `Source`\r\n- *TensorFlow version* (use command below): `1.0.1`\r\n- *Bazel version (if compiling from source)*: `0.4.5-homebrew`\r\n- *CUDA/cuDNN version*: `8.0/5`\r\n- *GPU Model and Memory*: `NVIDIA GeForce GT 750M, 2048 MB`\r\n- *Exact command to reproduce*: `bazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package` *refs:* [1](https://www.tensorflow.org/install/install_sources#PrepareMac)\r\n\r\n\r\n### Describe the problem clearly\r\nThe problem (@BKJackson references) occurs after I run `./configure` and then `bazel`:\r\n\r\n*First I configure:*\r\n```\r\nPlease specify the location of python. [Default is /usr/local/bin/python]:\r\nPlease specify optimization flags to use during compilation when bazel option \"--config=opt\" is specified [Default is -march=native]:\r\nDo you wish to build TensorFlow with Google Cloud Platform support? [y/N] N\r\nNo Google Cloud Platform support will be enabled for TensorFlow\r\nDo you wish to build TensorFlow with Hadoop File System support? [y/N] N\r\nNo Hadoop File System support will be enabled for TensorFlow\r\nDo you wish to build TensorFlow with the XLA just-in-time compiler (experimental)? [y/N] N\r\nNo XLA JIT support will be enabled for TensorFlow\r\nFound possible Python library paths:\r\n  /usr/local/Cellar/python/2.7.12_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages\r\n  /Library/Python/2.7/site-packages\r\nPlease input the desired Python library path to use.  Default is [/usr/local/Cellar/python/2.7.12_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages]\r\n\r\nUsing python library path: /usr/local/Cellar/python/2.7.12_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages\r\nDo you wish to build TensorFlow with OpenCL support? [y/N] N\r\nNo OpenCL support will be enabled for TensorFlow\r\nDo you wish to build TensorFlow with CUDA support? [y/N] y\r\nCUDA support will be enabled for TensorFlow\r\nDo you want to use clang as CUDA compiler? [y/N] y\r\nClang will be used as CUDA compiler\r\nPlease specify which clang should be used as device and host compiler. [Default is /usr/bin/clang]:\r\nPlease specify the CUDA SDK version you want to use, e.g. 7.0. [Leave empty to use system default]: 8.0\r\nPlease specify the location where CUDA 8.0 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:\r\nPlease specify the cuDNN version you want to use. [Leave empty to use system default]: 5\r\nPlease specify the location where cuDNN 5 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:\r\nPlease specify a list of comma-separated Cuda compute capabilities you want to build with.\r\nYou can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.\r\nPlease note that each additional compute capability significantly increases your build time and binary size.\r\n[Default is: \"3.5,5.2\"]: 3.0\r\nINFO: Starting clean (this may take a while). Consider using --async if the clean takes more than several minutes.\r\nConfiguration finished\r\n```\r\n\r\n*Then I execute bazel:*\r\n```\r\n$ bazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package  \r\n  ERROR: Inconsistent crosstool configuration; no toolchain corresponding to  'local_darwin' found for cpu 'darwin'.  \r\n  INFO: Elapsed time: 0.503s\r\n```\r\n\r\nI believe, as @BKJackson stated, this is an issue with the bazel BUILD and/or\r\nCROSSTOOL files (possibly in the third_party/gpus/cuda package?).\r\n\r\n\r\n### Source Code / Logs\r\nSee `Describe the problem clearly` section for output.\r\n"}