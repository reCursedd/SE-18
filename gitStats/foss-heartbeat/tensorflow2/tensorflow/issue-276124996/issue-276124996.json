{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14800", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14800/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14800/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14800/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14800", "id": 276124996, "node_id": "MDU6SXNzdWUyNzYxMjQ5OTY=", "number": 14800, "title": "Potential memory leak from deleting array and closing file handler", "user": {"login": "orpillar", "id": 33270570, "node_id": "MDQ6VXNlcjMzMjcwNTcw", "avatar_url": "https://avatars2.githubusercontent.com/u/33270570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orpillar", "html_url": "https://github.com/orpillar", "followers_url": "https://api.github.com/users/orpillar/followers", "following_url": "https://api.github.com/users/orpillar/following{/other_user}", "gists_url": "https://api.github.com/users/orpillar/gists{/gist_id}", "starred_url": "https://api.github.com/users/orpillar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orpillar/subscriptions", "organizations_url": "https://api.github.com/users/orpillar/orgs", "repos_url": "https://api.github.com/users/orpillar/repos", "events_url": "https://api.github.com/users/orpillar/events{/privacy}", "received_events_url": "https://api.github.com/users/orpillar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-11-22T16:13:41Z", "updated_at": "2017-12-11T01:44:54Z", "closed_at": "2017-12-11T01:44:54Z", "author_association": "NONE", "body_html": "<p>Here are couple of minor memory leak for review.</p>\n<ol>\n<li>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/6c95675492aa8d25619f5e4ce1674582c051a7fe/tensorflow/c/c_api.cc#L569-L593\">tensorflow/tensorflow/c/c_api.cc</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 569 to 593\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/6c95675492aa8d25619f5e4ce1674582c051a7fe\">6c95675</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L569\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"569\"></td>\n          <td id=\"LC569\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">char</span>* base = <span class=\"pl-k\">new</span> <span class=\"pl-k\">char</span>[size]; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L570\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"570\"></td>\n          <td id=\"LC570\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">char</span>* data_start = base + <span class=\"pl-k\">sizeof</span>(tensorflow::uint64) * srcarray.<span class=\"pl-c1\">size</span>(); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L571\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"571\"></td>\n          <td id=\"LC571\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">char</span>* dst = data_start;  <span class=\"pl-c\"><span class=\"pl-c\">//</span> Where next string is encoded.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L572\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"572\"></td>\n          <td id=\"LC572\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c1\">size_t</span> dst_len = size - <span class=\"pl-k\">static_cast</span>&lt;<span class=\"pl-c1\">size_t</span>&gt;(data_start - base); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L573\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"573\"></td>\n          <td id=\"LC573\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> tensorflow::uint64* offsets = <span class=\"pl-k\">reinterpret_cast</span>&lt;tensorflow::uint64*&gt;(base); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L574\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"574\"></td>\n          <td id=\"LC574\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">for</span> (<span class=\"pl-k\">int</span> i = <span class=\"pl-c1\">0</span>; i &lt; srcarray.<span class=\"pl-c1\">size</span>(); ++i) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L575\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"575\"></td>\n          <td id=\"LC575\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   *offsets = (dst - data_start); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L576\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"576\"></td>\n          <td id=\"LC576\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   offsets++; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L577\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"577\"></td>\n          <td id=\"LC577\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">const</span> string&amp; s = <span class=\"pl-c1\">srcarray</span>(i); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L578\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"578\"></td>\n          <td id=\"LC578\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c1\">size_t</span> consumed = <span class=\"pl-c1\">TF_StringEncode</span>(s.<span class=\"pl-c1\">data</span>(), s.<span class=\"pl-c1\">size</span>(), dst, dst_len, status); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L579\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"579\"></td>\n          <td id=\"LC579\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">if</span> (!status-&gt;<span class=\"pl-smi\">status</span>.<span class=\"pl-c1\">ok</span>()) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L580\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"580\"></td>\n          <td id=\"LC580\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     status-&gt;<span class=\"pl-smi\">status</span> = <span class=\"pl-c1\">InvalidArgument</span>( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L581\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"581\"></td>\n          <td id=\"LC581\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>invalid string tensor encoding (string #<span class=\"pl-pds\">\"</span></span>, i, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> of <span class=\"pl-pds\">\"</span></span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L582\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"582\"></td>\n          <td id=\"LC582\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         srcarray.<span class=\"pl-c1\">size</span>(), <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>): <span class=\"pl-pds\">\"</span></span>, status-&gt;<span class=\"pl-smi\">status</span>.<span class=\"pl-c1\">error_message</span>()); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L583\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"583\"></td>\n          <td id=\"LC583\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-k\">return</span> <span class=\"pl-c1\">nullptr</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L584\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"584\"></td>\n          <td id=\"LC584\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L585\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"585\"></td>\n          <td id=\"LC585\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   dst += consumed; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L586\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"586\"></td>\n          <td id=\"LC586\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   dst_len -= consumed; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L587\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"587\"></td>\n          <td id=\"LC587\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L588\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"588\"></td>\n          <td id=\"LC588\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">if</span> (dst != base + size) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L589\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"589\"></td>\n          <td id=\"LC589\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   status-&gt;<span class=\"pl-smi\">status</span> = <span class=\"pl-c1\">InvalidArgument</span>( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L590\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"590\"></td>\n          <td id=\"LC590\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>invalid string tensor encoding (decoded <span class=\"pl-pds\">\"</span></span>, (dst - base), </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L591\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"591\"></td>\n          <td id=\"LC591\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> bytes, but the tensor is encoded in <span class=\"pl-pds\">\"</span></span>, size, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> bytes<span class=\"pl-pds\">\"</span></span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L592\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"592\"></td>\n          <td id=\"LC592\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">return</span> <span class=\"pl-c1\">nullptr</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L593\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"593\"></td>\n          <td id=\"LC593\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n \"delete []base;\" looks missing.</p>\n</li>\n<li>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/6c95675492aa8d25619f5e4ce1674582c051a7fe/tensorflow/core/lib/io/snappy/snappy_outputbuffer.cc#L164-L173\">tensorflow/tensorflow/core/lib/io/snappy/snappy_outputbuffer.cc</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 164 to 173\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/6c95675492aa8d25619f5e4ce1674582c051a7fe\">6c95675</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L164\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"164\"></td>\n          <td id=\"LC164\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">char</span>* compressed_length_array = <span class=\"pl-k\">new</span> <span class=\"pl-k\">char</span>[<span class=\"pl-c1\">4</span>]; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L165\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"165\"></td>\n          <td id=\"LC165\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c1\">std::fill</span>(compressed_length_array, compressed_length_array + <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">0</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L166\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"166\"></td>\n          <td id=\"LC166\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">for</span> (<span class=\"pl-k\">int</span> i = <span class=\"pl-c1\">0</span>; i &lt; <span class=\"pl-c1\">4</span>; i++) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L167\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"167\"></td>\n          <td id=\"LC167\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c\"><span class=\"pl-c\">//</span> Little endian.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L168\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"168\"></td>\n          <td id=\"LC168\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   compressed_length_array[i] = output.<span class=\"pl-c1\">size</span>() &gt;&gt; (<span class=\"pl-c1\">8</span> * (<span class=\"pl-c1\">3</span> - i)); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L169\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"169\"></td>\n          <td id=\"LC169\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L170\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"170\"></td>\n          <td id=\"LC170\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c1\">TF_RETURN_IF_ERROR</span>(<span class=\"pl-c1\">AddToOutputBuffer</span>(compressed_length_array, <span class=\"pl-c1\">4</span>)); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L171\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"171\"></td>\n          <td id=\"LC171\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L172\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"172\"></td>\n          <td id=\"LC172\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">//</span> Write compressed output to buffer.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L173\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"173\"></td>\n          <td id=\"LC173\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c1\">TF_RETURN_IF_ERROR</span>(<span class=\"pl-c1\">AddToOutputBuffer</span>(output.<span class=\"pl-c1\">data</span>(), output.<span class=\"pl-c1\">size</span>())); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n  \"delete []compressed_length_array;\" looks missing when macro TF_RETURN_IF_ERROR() fails.</p>\n</li>\n<li>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/6c95675492aa8d25619f5e4ce1674582c051a7fe/tensorflow/core/platform/profile_utils/android_armv7a_cpu_utils_helper.cc#L113-L123\">tensorflow/tensorflow/core/platform/profile_utils/android_armv7a_cpu_utils_helper.cc</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 113 to 123\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/6c95675492aa8d25619f5e4ce1674582c051a7fe\">6c95675</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L113\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"113\"></td>\n          <td id=\"LC113\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c1\">FILE</span> *fp = <span class=\"pl-c1\">fopen</span>(file_path.<span class=\"pl-c1\">c_str</span>(), <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>r<span class=\"pl-pds\">\"</span></span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L114\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"114\"></td>\n          <td id=\"LC114\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">if</span> (fp == <span class=\"pl-c1\">nullptr</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L115\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"115\"></td>\n          <td id=\"LC115\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">return</span> INVALID_CPU_FREQUENCY; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L116\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"116\"></td>\n          <td id=\"LC116\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L117\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"117\"></td>\n          <td id=\"LC117\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> int64 freq_in_khz = INVALID_CPU_FREQUENCY; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L118\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"118\"></td>\n          <td id=\"LC118\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">const</span> <span class=\"pl-k\">int</span> retval = <span class=\"pl-c1\">fscanf</span>(fp, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%lld<span class=\"pl-pds\">\"</span></span>, &amp;freq_in_khz); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L119\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"119\"></td>\n          <td id=\"LC119\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">if</span> (retval &lt; <span class=\"pl-c1\">0</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L120\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"120\"></td>\n          <td id=\"LC120\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c1\">LOG</span>(WARNING) &lt;&lt; <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Failed to <span class=\"pl-cce\">\\\"</span><span class=\"pl-pds\">\"</span></span> &lt;&lt; file_path &lt;&lt; <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-cce\">\\\"</span><span class=\"pl-pds\">\"</span></span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L121\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"121\"></td>\n          <td id=\"LC121\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">return</span> INVALID_CPU_FREQUENCY; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L122\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"122\"></td>\n          <td id=\"LC122\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L123\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"123\"></td>\n          <td id=\"LC123\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c1\">pclose</span>(fp); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n Two potential problems:<br>\na. There is no \"fclose()\" being called after fscanf() fails<br>\nb. \"fclose()\" could be called instead of \"pclose()\"</p>\n</li>\n<li>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/6c95675492aa8d25619f5e4ce1674582c051a7fe/tensorflow/tools/proto_text/gen_proto_text_functions.cc#L132-L137\">tensorflow/tensorflow/tools/proto_text/gen_proto_text_functions.cc</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 132 to 137\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/6c95675492aa8d25619f5e4ce1674582c051a7fe\">6c95675</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L132\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"132\"></td>\n          <td id=\"LC132\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c1\">FILE</span>* f = <span class=\"pl-c1\">fopen</span>(path.<span class=\"pl-c1\">c_str</span>(), <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>w<span class=\"pl-pds\">\"</span></span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L133\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"133\"></td>\n          <td id=\"LC133\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">if</span> (f == <span class=\"pl-c1\">nullptr</span>) <span class=\"pl-k\">return</span> -<span class=\"pl-c1\">1</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L134\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"134\"></td>\n          <td id=\"LC134\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">if</span> (<span class=\"pl-c1\">fwrite</span>(data.<span class=\"pl-c1\">c_str</span>(), <span class=\"pl-c1\">1</span>, data.<span class=\"pl-c1\">size</span>(), f) != data.<span class=\"pl-c1\">size</span>()) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L135\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"135\"></td>\n          <td id=\"LC135\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">return</span> -<span class=\"pl-c1\">1</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L136\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"136\"></td>\n          <td id=\"LC136\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L137\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"137\"></td>\n          <td id=\"LC137\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">if</span> (<span class=\"pl-c1\">fclose</span>(f) != <span class=\"pl-c1\">0</span>) { </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n When \"fwrite() fails\", \"fclose()\" could be called before \"return -1\".</p>\n</li>\n</ol>\n<p>PS: I don't have handy working environment setup yet, currently browsing code may be better fit for me.</p>", "body_text": "Here are couple of minor memory leak for review.\n\n\n\n  \n    \n      tensorflow/tensorflow/c/c_api.cc\n    \n    \n        Lines 569 to 593\n      in\n      6c95675\n    \n    \n    \n    \n\n        \n          \n           char* base = new char[size]; \n        \n\n        \n          \n           char* data_start = base + sizeof(tensorflow::uint64) * srcarray.size(); \n        \n\n        \n          \n           char* dst = data_start;  // Where next string is encoded. \n        \n\n        \n          \n           size_t dst_len = size - static_cast<size_t>(data_start - base); \n        \n\n        \n          \n           tensorflow::uint64* offsets = reinterpret_cast<tensorflow::uint64*>(base); \n        \n\n        \n          \n           for (int i = 0; i < srcarray.size(); ++i) { \n        \n\n        \n          \n             *offsets = (dst - data_start); \n        \n\n        \n          \n             offsets++; \n        \n\n        \n          \n             const string& s = srcarray(i); \n        \n\n        \n          \n             size_t consumed = TF_StringEncode(s.data(), s.size(), dst, dst_len, status); \n        \n\n        \n          \n             if (!status->status.ok()) { \n        \n\n        \n          \n               status->status = InvalidArgument( \n        \n\n        \n          \n                   \"invalid string tensor encoding (string #\", i, \" of \", \n        \n\n        \n          \n                   srcarray.size(), \"): \", status->status.error_message()); \n        \n\n        \n          \n               return nullptr; \n        \n\n        \n          \n             } \n        \n\n        \n          \n             dst += consumed; \n        \n\n        \n          \n             dst_len -= consumed; \n        \n\n        \n          \n           } \n        \n\n        \n          \n           if (dst != base + size) { \n        \n\n        \n          \n             status->status = InvalidArgument( \n        \n\n        \n          \n                 \"invalid string tensor encoding (decoded \", (dst - base), \n        \n\n        \n          \n                 \" bytes, but the tensor is encoded in \", size, \" bytes\"); \n        \n\n        \n          \n             return nullptr; \n        \n\n        \n          \n           } \n        \n    \n  \n\n \"delete []base;\" looks missing.\n\n\n\n  \n    \n      tensorflow/tensorflow/core/lib/io/snappy/snappy_outputbuffer.cc\n    \n    \n        Lines 164 to 173\n      in\n      6c95675\n    \n    \n    \n    \n\n        \n          \n           char* compressed_length_array = new char[4]; \n        \n\n        \n          \n           std::fill(compressed_length_array, compressed_length_array + 4, 0); \n        \n\n        \n          \n           for (int i = 0; i < 4; i++) { \n        \n\n        \n          \n             // Little endian. \n        \n\n        \n          \n             compressed_length_array[i] = output.size() >> (8 * (3 - i)); \n        \n\n        \n          \n           } \n        \n\n        \n          \n           TF_RETURN_IF_ERROR(AddToOutputBuffer(compressed_length_array, 4)); \n        \n\n        \n          \n            \n        \n\n        \n          \n           // Write compressed output to buffer. \n        \n\n        \n          \n           TF_RETURN_IF_ERROR(AddToOutputBuffer(output.data(), output.size())); \n        \n    \n  \n\n  \"delete []compressed_length_array;\" looks missing when macro TF_RETURN_IF_ERROR() fails.\n\n\n\n  \n    \n      tensorflow/tensorflow/core/platform/profile_utils/android_armv7a_cpu_utils_helper.cc\n    \n    \n        Lines 113 to 123\n      in\n      6c95675\n    \n    \n    \n    \n\n        \n          \n           FILE *fp = fopen(file_path.c_str(), \"r\"); \n        \n\n        \n          \n           if (fp == nullptr) { \n        \n\n        \n          \n             return INVALID_CPU_FREQUENCY; \n        \n\n        \n          \n           } \n        \n\n        \n          \n           int64 freq_in_khz = INVALID_CPU_FREQUENCY; \n        \n\n        \n          \n           const int retval = fscanf(fp, \"%lld\", &freq_in_khz); \n        \n\n        \n          \n           if (retval < 0) { \n        \n\n        \n          \n             LOG(WARNING) << \"Failed to \\\"\" << file_path << \"\\\"\"; \n        \n\n        \n          \n             return INVALID_CPU_FREQUENCY; \n        \n\n        \n          \n           } \n        \n\n        \n          \n           pclose(fp); \n        \n    \n  \n\n Two potential problems:\na. There is no \"fclose()\" being called after fscanf() fails\nb. \"fclose()\" could be called instead of \"pclose()\"\n\n\n\n  \n    \n      tensorflow/tensorflow/tools/proto_text/gen_proto_text_functions.cc\n    \n    \n        Lines 132 to 137\n      in\n      6c95675\n    \n    \n    \n    \n\n        \n          \n           FILE* f = fopen(path.c_str(), \"w\"); \n        \n\n        \n          \n           if (f == nullptr) return -1; \n        \n\n        \n          \n           if (fwrite(data.c_str(), 1, data.size(), f) != data.size()) { \n        \n\n        \n          \n             return -1; \n        \n\n        \n          \n           } \n        \n\n        \n          \n           if (fclose(f) != 0) { \n        \n    \n  \n\n When \"fwrite() fails\", \"fclose()\" could be called before \"return -1\".\n\n\nPS: I don't have handy working environment setup yet, currently browsing code may be better fit for me.", "body": "Here are couple of minor memory leak for review.\r\n1. https://github.com/tensorflow/tensorflow/blob/6c95675492aa8d25619f5e4ce1674582c051a7fe/tensorflow/c/c_api.cc#L569-L593 \"delete []base;\" looks missing.\r\n   \r\n\r\n2. https://github.com/tensorflow/tensorflow/blob/6c95675492aa8d25619f5e4ce1674582c051a7fe/tensorflow/core/lib/io/snappy/snappy_outputbuffer.cc#L164-L173  \"delete []compressed_length_array;\" looks missing when macro TF_RETURN_IF_ERROR() fails.\r\n\r\n3. https://github.com/tensorflow/tensorflow/blob/6c95675492aa8d25619f5e4ce1674582c051a7fe/tensorflow/core/platform/profile_utils/android_armv7a_cpu_utils_helper.cc#L113-L123 Two potential problems:\r\n    a. There is no \"fclose()\" being called after fscanf() fails\r\n    b. \"fclose()\" could be called instead of \"pclose()\"\r\n\r\n4. https://github.com/tensorflow/tensorflow/blob/6c95675492aa8d25619f5e4ce1674582c051a7fe/tensorflow/tools/proto_text/gen_proto_text_functions.cc#L132-L137 When \"fwrite() fails\", \"fclose()\" could be called before \"return -1\".\r\n\r\nPS: I don't have handy working environment setup yet, currently browsing code may be better fit for me."}