{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/255875422", "html_url": "https://github.com/tensorflow/tensorflow/issues/22#issuecomment-255875422", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22", "id": 255875422, "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTg3NTQyMg==", "user": {"login": "rybskej", "id": 23041151, "node_id": "MDQ6VXNlcjIzMDQxMTUx", "avatar_url": "https://avatars3.githubusercontent.com/u/23041151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rybskej", "html_url": "https://github.com/rybskej", "followers_url": "https://api.github.com/users/rybskej/followers", "following_url": "https://api.github.com/users/rybskej/following{/other_user}", "gists_url": "https://api.github.com/users/rybskej/gists{/gist_id}", "starred_url": "https://api.github.com/users/rybskej/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rybskej/subscriptions", "organizations_url": "https://api.github.com/users/rybskej/orgs", "repos_url": "https://api.github.com/users/rybskej/repos", "events_url": "https://api.github.com/users/rybskej/events{/privacy}", "received_events_url": "https://api.github.com/users/rybskej/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-24T21:44:57Z", "updated_at": "2016-10-24T22:58:55Z", "author_association": "NONE", "body_html": "<p>I'm experimenting building this on MacOS 10.10.5 on a MacBook late 2015 with ATI 6770M (OpenCL 1.2).</p>\n<p>I've installed Xcode 8, Anaconda (Python 3.5), and MacPorts equivalents of clang+llvm:<br>\n#instead of apt-get lines, do:<br>\nsudo port install clang-3.8 llvm-3.8<br>\n#Instead of using /proc/cpuinfo, do:<br>\nNUM_PROCS=$(system_profiler SPHardwareDataType  | grep \"Total Number of Cores\" | cut -d \":\" -f 2)<br>\n#Then modify Makefile to use macports and run make<br>\nperl -pi.bak -e 's|(CLANG)=.+|$1=/opt/local/libexec/llvm-3.8/bin/clag++|' Makefile<br>\nperl -pi -e 's|(LLVM_CONFIG)=.+|$1=/opt/local/bin/llvm-config-mp-3.8|' Makefile<br>\nperl -pi -e 's|(LLVM_INCLUDE)=.+|$1=/opt/local/libexec/llvm-3.8/include|' Makefile<br>\n#update to Macos OpenCL dirs; future: use /System/Library/Frameworks/OpenCL.framework/Versions/Current/Headers/cl.h '#ifdef <strong>APPLE</strong>' conditional<br>\ngrep -Rl 'include \"CL/' * | xargs perl -pi.bak -e 's|include \"CL/|include \"OpenCL/|g'<br>\nmake -j ${NUM_PROCS}</p>\n<p>This is as far as I get:</p>\n<p>$ make -j ${NUM_PROCS}<br>\nmkdir -p build<br>\nmkdir -p build<br>\nmkdir -p build<br>\n/opt/local/libexec/llvm-3.8/bin/clang++ -c -o build/hostside_opencl_funcs.o -std=c++11 -fPIC -g -O2 -I<code>pwd</code>/include -I<code>pwd</code>/src/EasyCL src/hostside_opencl_funcs.cpp<br>\n/opt/local/libexec/llvm-3.8/bin/clang++ -I/usr/lib/llvm-3.8/include -fPIC -fvisibility-inlines-hidden -ffunction-sections -fdata-sections -g -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -std=c++11 -fcxx-exceptions -c -o build/mutations.o -g -I/opt/local/libexec/llvm-3.8/include src/mutations.cpp<br>\n/opt/local/libexec/llvm-3.8/bin/clang++ -I/usr/lib/llvm-3.8/include -fPIC -fvisibility-inlines-hidden -ffunction-sections -fdata-sections -g -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -std=c++11 -fcxx-exceptions -c -o build/struct_clone.o -g -I/opt/local/libexec/llvm-3.8/include src/struct_clone.cpp<br>\n/opt/local/libexec/llvm-3.8/bin/clang++ -I/usr/lib/llvm-3.8/include -fPIC -fvisibility-inlines-hidden -ffunction-sections -fdata-sections -g -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -std=c++11 -fcxx-exceptions -c -o build/readIR.o -g -I/opt/local/libexec/llvm-3.8/include src/readIR.cpp<br>\nIn file included from src/hostside_opencl_funcs.cpp:17:<br>\n/Users/erybski/git/tensorflow-cl/third_party/cuda-on-cl/include/cocl/cocl.h:91:16: warning: 'host' attribute ignored [-Wignored-attributes]<br>\n<strong>attribute</strong>((host)) inline unsigned long long atomicExch(volatile unsigned long long <em>p, unsigned long long val) {<br>\n^<br>\nsrc/hostside_opencl_funcs.cpp:194:33: error: call to member function 'in' is ambiguous<br>\nlaunchConfiguration.kernel-&gt;in(offset);<br>\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~<br>\n/Users/erybski/git/tensorflow-cl/third_party/cuda-on-cl/src/EasyCL/CLKernel.h:101:15: note: candidate function<br>\nCLKernel *in(float value);<br>\n^<br>\n/Users/erybski/git/tensorflow-cl/third_party/cuda-on-cl/src/EasyCL/CLKernel.h:104:15: note: candidate function<br>\nCLKernel *in(int32_t value);<br>\n^<br>\n/Users/erybski/git/tensorflow-cl/third_party/cuda-on-cl/src/EasyCL/CLKernel.h:106:15: note: candidate function<br>\nCLKernel *in(int64_t value);<br>\n^<br>\n/Users/erybski/git/tensorflow-cl/third_party/cuda-on-cl/src/EasyCL/CLKernel.h:108:15: note: candidate function<br>\nCLKernel *in(uint64_t value);<br>\n^<br>\n/Users/erybski/git/tensorflow-cl/third_party/cuda-on-cl/src/EasyCL/CLKernel.h:110:15: note: candidate function<br>\nCLKernel *in(uint32_t value);<br>\n^<br>\n/Users/erybski/git/tensorflow-cl/third_party/cuda-on-cl/src/EasyCL/CLKernel.h:73:15: note: candidate function not viable: no known conversion from 'size_t' (aka 'unsigned long') to 'easycl::CLArray *'<br>\nfor 1st argument<br>\nCLKernel *in(CLArray *clarray1d) { return input(clarray1d); }<br>\n^<br>\n/Users/erybski/git/tensorflow-cl/third_party/cuda-on-cl/src/EasyCL/CLKernel.h:83:15: note: candidate function not viable: no known conversion from 'size_t' (aka 'unsigned long') to<br>\n'easycl::CLWrapper *' for 1st argument<br>\nCLKernel *in(CLWrapper *wrapper) { return input(wrapper); }<br>\n^<br>\n/Users/erybski/git/tensorflow-cl/third_party/cuda-on-cl/src/EasyCL/CLKernel.h:91:36: note: candidate function template not viable: requires 2 arguments, but 1 was provided<br>\ntemplate CLKernel *in(int N, const T *data);<br>\n^<br>\n1 warning and 1 error generated.<br>\nmake: *</em>* [build/hostside_opencl_funcs.o] Error 1<br>\nmake: *** Waiting for unfinished jobs....<br>\nsrc/struct_clone.cpp:245:12: warning: 11 enumeration values not handled in switch: 'HalfTyID', 'X86_FP80TyID', 'FP128TyID'... [-Wswitch]<br>\nswitch(typeID) {<br>\n^<br>\n1 warning generated.</p>", "body_text": "I'm experimenting building this on MacOS 10.10.5 on a MacBook late 2015 with ATI 6770M (OpenCL 1.2).\nI've installed Xcode 8, Anaconda (Python 3.5), and MacPorts equivalents of clang+llvm:\n#instead of apt-get lines, do:\nsudo port install clang-3.8 llvm-3.8\n#Instead of using /proc/cpuinfo, do:\nNUM_PROCS=$(system_profiler SPHardwareDataType  | grep \"Total Number of Cores\" | cut -d \":\" -f 2)\n#Then modify Makefile to use macports and run make\nperl -pi.bak -e 's|(CLANG)=.+|$1=/opt/local/libexec/llvm-3.8/bin/clag++|' Makefile\nperl -pi -e 's|(LLVM_CONFIG)=.+|$1=/opt/local/bin/llvm-config-mp-3.8|' Makefile\nperl -pi -e 's|(LLVM_INCLUDE)=.+|$1=/opt/local/libexec/llvm-3.8/include|' Makefile\n#update to Macos OpenCL dirs; future: use /System/Library/Frameworks/OpenCL.framework/Versions/Current/Headers/cl.h '#ifdef APPLE' conditional\ngrep -Rl 'include \"CL/' * | xargs perl -pi.bak -e 's|include \"CL/|include \"OpenCL/|g'\nmake -j ${NUM_PROCS}\nThis is as far as I get:\n$ make -j ${NUM_PROCS}\nmkdir -p build\nmkdir -p build\nmkdir -p build\n/opt/local/libexec/llvm-3.8/bin/clang++ -c -o build/hostside_opencl_funcs.o -std=c++11 -fPIC -g -O2 -Ipwd/include -Ipwd/src/EasyCL src/hostside_opencl_funcs.cpp\n/opt/local/libexec/llvm-3.8/bin/clang++ -I/usr/lib/llvm-3.8/include -fPIC -fvisibility-inlines-hidden -ffunction-sections -fdata-sections -g -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -std=c++11 -fcxx-exceptions -c -o build/mutations.o -g -I/opt/local/libexec/llvm-3.8/include src/mutations.cpp\n/opt/local/libexec/llvm-3.8/bin/clang++ -I/usr/lib/llvm-3.8/include -fPIC -fvisibility-inlines-hidden -ffunction-sections -fdata-sections -g -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -std=c++11 -fcxx-exceptions -c -o build/struct_clone.o -g -I/opt/local/libexec/llvm-3.8/include src/struct_clone.cpp\n/opt/local/libexec/llvm-3.8/bin/clang++ -I/usr/lib/llvm-3.8/include -fPIC -fvisibility-inlines-hidden -ffunction-sections -fdata-sections -g -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -std=c++11 -fcxx-exceptions -c -o build/readIR.o -g -I/opt/local/libexec/llvm-3.8/include src/readIR.cpp\nIn file included from src/hostside_opencl_funcs.cpp:17:\n/Users/erybski/git/tensorflow-cl/third_party/cuda-on-cl/include/cocl/cocl.h:91:16: warning: 'host' attribute ignored [-Wignored-attributes]\nattribute((host)) inline unsigned long long atomicExch(volatile unsigned long long p, unsigned long long val) {\n^\nsrc/hostside_opencl_funcs.cpp:194:33: error: call to member function 'in' is ambiguous\nlaunchConfiguration.kernel->in(offset);\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\n/Users/erybski/git/tensorflow-cl/third_party/cuda-on-cl/src/EasyCL/CLKernel.h:101:15: note: candidate function\nCLKernel *in(float value);\n^\n/Users/erybski/git/tensorflow-cl/third_party/cuda-on-cl/src/EasyCL/CLKernel.h:104:15: note: candidate function\nCLKernel *in(int32_t value);\n^\n/Users/erybski/git/tensorflow-cl/third_party/cuda-on-cl/src/EasyCL/CLKernel.h:106:15: note: candidate function\nCLKernel *in(int64_t value);\n^\n/Users/erybski/git/tensorflow-cl/third_party/cuda-on-cl/src/EasyCL/CLKernel.h:108:15: note: candidate function\nCLKernel *in(uint64_t value);\n^\n/Users/erybski/git/tensorflow-cl/third_party/cuda-on-cl/src/EasyCL/CLKernel.h:110:15: note: candidate function\nCLKernel *in(uint32_t value);\n^\n/Users/erybski/git/tensorflow-cl/third_party/cuda-on-cl/src/EasyCL/CLKernel.h:73:15: note: candidate function not viable: no known conversion from 'size_t' (aka 'unsigned long') to 'easycl::CLArray *'\nfor 1st argument\nCLKernel *in(CLArray *clarray1d) { return input(clarray1d); }\n^\n/Users/erybski/git/tensorflow-cl/third_party/cuda-on-cl/src/EasyCL/CLKernel.h:83:15: note: candidate function not viable: no known conversion from 'size_t' (aka 'unsigned long') to\n'easycl::CLWrapper *' for 1st argument\nCLKernel *in(CLWrapper *wrapper) { return input(wrapper); }\n^\n/Users/erybski/git/tensorflow-cl/third_party/cuda-on-cl/src/EasyCL/CLKernel.h:91:36: note: candidate function template not viable: requires 2 arguments, but 1 was provided\ntemplate CLKernel *in(int N, const T *data);\n^\n1 warning and 1 error generated.\nmake: ** [build/hostside_opencl_funcs.o] Error 1\nmake: *** Waiting for unfinished jobs....\nsrc/struct_clone.cpp:245:12: warning: 11 enumeration values not handled in switch: 'HalfTyID', 'X86_FP80TyID', 'FP128TyID'... [-Wswitch]\nswitch(typeID) {\n^\n1 warning generated.", "body": "I'm experimenting building this on MacOS 10.10.5 on a MacBook late 2015 with ATI 6770M (OpenCL 1.2).\n\nI've installed Xcode 8, Anaconda (Python 3.5), and MacPorts equivalents of clang+llvm:\n#instead of apt-get lines, do:\nsudo port install clang-3.8 llvm-3.8\n#Instead of using /proc/cpuinfo, do:\nNUM_PROCS=$(system_profiler SPHardwareDataType  | grep \"Total Number of Cores\" | cut -d \":\" -f 2)\n#Then modify Makefile to use macports and run make\nperl -pi.bak -e 's|(CLANG)=.+|$1=/opt/local/libexec/llvm-3.8/bin/clag++|' Makefile\nperl -pi -e 's|(LLVM_CONFIG)=.+|$1=/opt/local/bin/llvm-config-mp-3.8|' Makefile\nperl -pi -e 's|(LLVM_INCLUDE)=.+|$1=/opt/local/libexec/llvm-3.8/include|' Makefile\n#update to Macos OpenCL dirs; future: use /System/Library/Frameworks/OpenCL.framework/Versions/Current/Headers/cl.h '#ifdef **APPLE**' conditional\ngrep -Rl 'include \"CL/' \\* | xargs perl -pi.bak -e 's|include \"CL/|include \"OpenCL/|g'\nmake -j ${NUM_PROCS}\n\nThis is as far as I get:\n\n$ make -j ${NUM_PROCS}\nmkdir -p build\nmkdir -p build\nmkdir -p build\n/opt/local/libexec/llvm-3.8/bin/clang++ -c -o build/hostside_opencl_funcs.o -std=c++11 -fPIC -g -O2 -I`pwd`/include -I`pwd`/src/EasyCL src/hostside_opencl_funcs.cpp\n/opt/local/libexec/llvm-3.8/bin/clang++ -I/usr/lib/llvm-3.8/include -fPIC -fvisibility-inlines-hidden -ffunction-sections -fdata-sections -g -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -std=c++11 -fcxx-exceptions -c -o build/mutations.o -g -I/opt/local/libexec/llvm-3.8/include src/mutations.cpp\n/opt/local/libexec/llvm-3.8/bin/clang++ -I/usr/lib/llvm-3.8/include -fPIC -fvisibility-inlines-hidden -ffunction-sections -fdata-sections -g -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -std=c++11 -fcxx-exceptions -c -o build/struct_clone.o -g -I/opt/local/libexec/llvm-3.8/include src/struct_clone.cpp\n/opt/local/libexec/llvm-3.8/bin/clang++ -I/usr/lib/llvm-3.8/include -fPIC -fvisibility-inlines-hidden -ffunction-sections -fdata-sections -g -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -std=c++11 -fcxx-exceptions -c -o build/readIR.o -g -I/opt/local/libexec/llvm-3.8/include src/readIR.cpp\nIn file included from src/hostside_opencl_funcs.cpp:17:\n/Users/erybski/git/tensorflow-cl/third_party/cuda-on-cl/include/cocl/cocl.h:91:16: warning: 'host' attribute ignored [-Wignored-attributes]\n**attribute**((host)) inline unsigned long long atomicExch(volatile unsigned long long _p, unsigned long long val) {\n               ^\nsrc/hostside_opencl_funcs.cpp:194:33: error: call to member function 'in' is ambiguous\n    launchConfiguration.kernel->in(offset);\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\n/Users/erybski/git/tensorflow-cl/third_party/cuda-on-cl/src/EasyCL/CLKernel.h:101:15: note: candidate function\n    CLKernel *in(float value);\n              ^\n/Users/erybski/git/tensorflow-cl/third_party/cuda-on-cl/src/EasyCL/CLKernel.h:104:15: note: candidate function\n    CLKernel *in(int32_t value);\n              ^\n/Users/erybski/git/tensorflow-cl/third_party/cuda-on-cl/src/EasyCL/CLKernel.h:106:15: note: candidate function\n    CLKernel *in(int64_t value);\n              ^\n/Users/erybski/git/tensorflow-cl/third_party/cuda-on-cl/src/EasyCL/CLKernel.h:108:15: note: candidate function\n    CLKernel *in(uint64_t value);\n              ^\n/Users/erybski/git/tensorflow-cl/third_party/cuda-on-cl/src/EasyCL/CLKernel.h:110:15: note: candidate function\n    CLKernel *in(uint32_t value);\n              ^\n/Users/erybski/git/tensorflow-cl/third_party/cuda-on-cl/src/EasyCL/CLKernel.h:73:15: note: candidate function not viable: no known conversion from 'size_t' (aka 'unsigned long') to 'easycl::CLArray *'\n      for 1st argument\n    CLKernel *in(CLArray *clarray1d) { return input(clarray1d); }\n              ^\n/Users/erybski/git/tensorflow-cl/third_party/cuda-on-cl/src/EasyCL/CLKernel.h:83:15: note: candidate function not viable: no known conversion from 'size_t' (aka 'unsigned long') to\n      'easycl::CLWrapper *' for 1st argument\n    CLKernel *in(CLWrapper *wrapper) { return input(wrapper); }\n              ^\n/Users/erybski/git/tensorflow-cl/third_party/cuda-on-cl/src/EasyCL/CLKernel.h:91:36: note: candidate function template not viable: requires 2 arguments, but 1 was provided\n    template<typename T> CLKernel *in(int N, const T *data);\n                                   ^\n1 warning and 1 error generated.\nmake: *_\\* [build/hostside_opencl_funcs.o] Error 1\nmake: **\\* Waiting for unfinished jobs....\nsrc/struct_clone.cpp:245:12: warning: 11 enumeration values not handled in switch: 'HalfTyID', 'X86_FP80TyID', 'FP128TyID'... [-Wswitch]\n    switch(typeID) {\n           ^\n1 warning generated.\n"}