{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/211638707", "html_url": "https://github.com/tensorflow/tensorflow/pull/1991#issuecomment-211638707", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1991", "id": 211638707, "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTYzODcwNw==", "user": {"login": "zheng-xq", "id": 15736910, "node_id": "MDQ6VXNlcjE1NzM2OTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/15736910?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zheng-xq", "html_url": "https://github.com/zheng-xq", "followers_url": "https://api.github.com/users/zheng-xq/followers", "following_url": "https://api.github.com/users/zheng-xq/following{/other_user}", "gists_url": "https://api.github.com/users/zheng-xq/gists{/gist_id}", "starred_url": "https://api.github.com/users/zheng-xq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zheng-xq/subscriptions", "organizations_url": "https://api.github.com/users/zheng-xq/orgs", "repos_url": "https://api.github.com/users/zheng-xq/repos", "events_url": "https://api.github.com/users/zheng-xq/events{/privacy}", "received_events_url": "https://api.github.com/users/zheng-xq/received_events", "type": "User", "site_admin": false}, "created_at": "2016-04-18T23:58:48Z", "updated_at": "2016-04-18T23:58:48Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I've read the example more carefully, and I still like a clipping-based approach.</p>\n<p>If R=C=5, K=2, S=3. R'=C'=2<br>\nThe clipping method:<br>\npad_needed_width = (R' - 1)S + K - R = 1*3 + 2 - 5 = 0</p>\n<p>The proposed method:<br>\npad_needed_width = (R' - 1)S + max(S,K) - R = 1*3 + 3 - 5 = 1</p>\n<p>I would say the clipping method is better.</p>\n<p>The weird thing TF does with R=C=4 can also be attributed to the fact TF prefers adding an extra padding on the right. If it used the other way around, a few corner cases would be slightly easier to handle and matches Theano in that case. But at this point, too many models have already been trained this way. And this benefit seems small to make a global switch.</p>", "body_text": "I've read the example more carefully, and I still like a clipping-based approach.\nIf R=C=5, K=2, S=3. R'=C'=2\nThe clipping method:\npad_needed_width = (R' - 1)S + K - R = 1*3 + 2 - 5 = 0\nThe proposed method:\npad_needed_width = (R' - 1)S + max(S,K) - R = 1*3 + 3 - 5 = 1\nI would say the clipping method is better.\nThe weird thing TF does with R=C=4 can also be attributed to the fact TF prefers adding an extra padding on the right. If it used the other way around, a few corner cases would be slightly easier to handle and matches Theano in that case. But at this point, too many models have already been trained this way. And this benefit seems small to make a global switch.", "body": "I've read the example more carefully, and I still like a clipping-based approach. \n\nIf R=C=5, K=2, S=3. R'=C'=2\nThe clipping method:\npad_needed_width = (R' - 1)S + K - R = 1*3 + 2 - 5 = 0\n\nThe proposed method:\npad_needed_width = (R' - 1)S + max(S,K) - R = 1*3 + 3 - 5 = 1\n\nI would say the clipping method is better. \n\nThe weird thing TF does with R=C=4 can also be attributed to the fact TF prefers adding an extra padding on the right. If it used the other way around, a few corner cases would be slightly easier to handle and matches Theano in that case. But at this point, too many models have already been trained this way. And this benefit seems small to make a global switch. \n"}