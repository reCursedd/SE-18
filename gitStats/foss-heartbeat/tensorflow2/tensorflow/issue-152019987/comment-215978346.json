{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/215978346", "html_url": "https://github.com/tensorflow/tensorflow/issues/2175#issuecomment-215978346", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2175", "id": 215978346, "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTk3ODM0Ng==", "user": {"login": "neurotenguin", "id": 18723228, "node_id": "MDQ6VXNlcjE4NzIzMjI4", "avatar_url": "https://avatars1.githubusercontent.com/u/18723228?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neurotenguin", "html_url": "https://github.com/neurotenguin", "followers_url": "https://api.github.com/users/neurotenguin/followers", "following_url": "https://api.github.com/users/neurotenguin/following{/other_user}", "gists_url": "https://api.github.com/users/neurotenguin/gists{/gist_id}", "starred_url": "https://api.github.com/users/neurotenguin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neurotenguin/subscriptions", "organizations_url": "https://api.github.com/users/neurotenguin/orgs", "repos_url": "https://api.github.com/users/neurotenguin/repos", "events_url": "https://api.github.com/users/neurotenguin/events{/privacy}", "received_events_url": "https://api.github.com/users/neurotenguin/received_events", "type": "User", "site_admin": false}, "created_at": "2016-04-30T16:50:15Z", "updated_at": "2016-04-30T16:50:15Z", "author_association": "NONE", "body_html": "<p>Yep ops are on cpu. Set the visible gpu devices to blank, observed correct behaviour, and got the correct final result of the matmult.</p>\n<pre><code>(tensorflow)username@pcname:~$ export CUDA_VISIBLE_DEVICES=\n(tensorflow)username@pcname:~$ python\nPython 2.7.11 |Continuum Analytics, Inc.| (default, Dec  6 2015, 18:08:32) \n[GCC 4.4.7 20120313 (Red Hat 4.4.7-1)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\nAnaconda is brought to you by Continuum Analytics.\nPlease check out: http://continuum.io/thanks and https://anaconda.org\n&gt;&gt;&gt; import tensorflow as tf\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so locally\n&gt;&gt;&gt; \n&gt;&gt;&gt; with tf.Session() as sess:\n...     with tf.device('/cpu:0'):\n...             matrix1 = tf.constant([[3., 3.]])\n...             matrix2 = tf.constant([[2.],[2.]])\n...             product = tf.matmul(matrix1, matrix2)\n...             result = sess.run(product)\n...             print(result)\n... \nE tensorflow/stream_executor/cuda/cuda_driver.cc:481] failed call to cuInit: CUDA_ERROR_NO_DEVICE\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:114] retrieving CUDA diagnostic information for host: pcname\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:121] hostname: pcname\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:146] libcuda reported version is: 361.42\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:257] driver version file contents: \"\"\"NVRM version: NVIDIA UNIX x86_64 Kernel Module  361.42  Tue Mar 22 18:10:58 PDT 2016\nGCC version:  gcc version 5.3.1 20160413 (Ubuntu 5.3.1-14ubuntu2) \n\"\"\"\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:150] kernel reported version is: 361.42\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:226] kernel version seems to match DSO: 361.42\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:81] No GPU devices available on machine.\n[[ 12.]]\n&gt;&gt;&gt; \n</code></pre>", "body_text": "Yep ops are on cpu. Set the visible gpu devices to blank, observed correct behaviour, and got the correct final result of the matmult.\n(tensorflow)username@pcname:~$ export CUDA_VISIBLE_DEVICES=\n(tensorflow)username@pcname:~$ python\nPython 2.7.11 |Continuum Analytics, Inc.| (default, Dec  6 2015, 18:08:32) \n[GCC 4.4.7 20120313 (Red Hat 4.4.7-1)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\nAnaconda is brought to you by Continuum Analytics.\nPlease check out: http://continuum.io/thanks and https://anaconda.org\n>>> import tensorflow as tf\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so locally\n>>> \n>>> with tf.Session() as sess:\n...     with tf.device('/cpu:0'):\n...             matrix1 = tf.constant([[3., 3.]])\n...             matrix2 = tf.constant([[2.],[2.]])\n...             product = tf.matmul(matrix1, matrix2)\n...             result = sess.run(product)\n...             print(result)\n... \nE tensorflow/stream_executor/cuda/cuda_driver.cc:481] failed call to cuInit: CUDA_ERROR_NO_DEVICE\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:114] retrieving CUDA diagnostic information for host: pcname\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:121] hostname: pcname\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:146] libcuda reported version is: 361.42\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:257] driver version file contents: \"\"\"NVRM version: NVIDIA UNIX x86_64 Kernel Module  361.42  Tue Mar 22 18:10:58 PDT 2016\nGCC version:  gcc version 5.3.1 20160413 (Ubuntu 5.3.1-14ubuntu2) \n\"\"\"\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:150] kernel reported version is: 361.42\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:226] kernel version seems to match DSO: 361.42\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:81] No GPU devices available on machine.\n[[ 12.]]\n>>>", "body": "Yep ops are on cpu. Set the visible gpu devices to blank, observed correct behaviour, and got the correct final result of the matmult.\n\n```\n(tensorflow)username@pcname:~$ export CUDA_VISIBLE_DEVICES=\n(tensorflow)username@pcname:~$ python\nPython 2.7.11 |Continuum Analytics, Inc.| (default, Dec  6 2015, 18:08:32) \n[GCC 4.4.7 20120313 (Red Hat 4.4.7-1)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\nAnaconda is brought to you by Continuum Analytics.\nPlease check out: http://continuum.io/thanks and https://anaconda.org\n>>> import tensorflow as tf\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:105] successfully opened CUDA library libcurand.so locally\n>>> \n>>> with tf.Session() as sess:\n...     with tf.device('/cpu:0'):\n...             matrix1 = tf.constant([[3., 3.]])\n...             matrix2 = tf.constant([[2.],[2.]])\n...             product = tf.matmul(matrix1, matrix2)\n...             result = sess.run(product)\n...             print(result)\n... \nE tensorflow/stream_executor/cuda/cuda_driver.cc:481] failed call to cuInit: CUDA_ERROR_NO_DEVICE\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:114] retrieving CUDA diagnostic information for host: pcname\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:121] hostname: pcname\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:146] libcuda reported version is: 361.42\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:257] driver version file contents: \"\"\"NVRM version: NVIDIA UNIX x86_64 Kernel Module  361.42  Tue Mar 22 18:10:58 PDT 2016\nGCC version:  gcc version 5.3.1 20160413 (Ubuntu 5.3.1-14ubuntu2) \n\"\"\"\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:150] kernel reported version is: 361.42\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:226] kernel version seems to match DSO: 361.42\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:81] No GPU devices available on machine.\n[[ 12.]]\n>>> \n```\n"}