{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/314992529", "html_url": "https://github.com/tensorflow/tensorflow/issues/2175#issuecomment-314992529", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2175", "id": 314992529, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDk5MjUyOQ==", "user": {"login": "ed-alertedh", "id": 24605895, "node_id": "MDQ6VXNlcjI0NjA1ODk1", "avatar_url": "https://avatars1.githubusercontent.com/u/24605895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ed-alertedh", "html_url": "https://github.com/ed-alertedh", "followers_url": "https://api.github.com/users/ed-alertedh/followers", "following_url": "https://api.github.com/users/ed-alertedh/following{/other_user}", "gists_url": "https://api.github.com/users/ed-alertedh/gists{/gist_id}", "starred_url": "https://api.github.com/users/ed-alertedh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ed-alertedh/subscriptions", "organizations_url": "https://api.github.com/users/ed-alertedh/orgs", "repos_url": "https://api.github.com/users/ed-alertedh/repos", "events_url": "https://api.github.com/users/ed-alertedh/events{/privacy}", "received_events_url": "https://api.github.com/users/ed-alertedh/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-13T07:12:44Z", "updated_at": "2017-07-13T07:12:44Z", "author_association": "NONE", "body_html": "<p>When I set CUDA_VISIBLE_DEVICES=-1 on my machine with a single GPU I get the following error:</p>\n<pre><code>2017-07-13 16:13:00.617400: E tensorflow/stream_executor/cuda/cuda_driver.cc:406] failed call to cuInit: CUDA_ERROR_NO_DEVICE\n2017-07-13 16:13:00.617475: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:158] retrieving CUDA diagnostic information for host: eggplant-ed-ubuntu\n2017-07-13 16:13:00.617495: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:165] hostname: eggplant-ed-ubuntu\n2017-07-13 16:13:00.617567: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:189] libcuda reported version is: 381.22.0\n2017-07-13 16:13:00.617599: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:369] driver version file contents: \"\"\"NVRM version: NVIDIA UNIX x86_64 Kernel Module  381.22  Thu May  4 00:55:03 PDT 2017\nGCC version:  gcc version 6.3.0 20170406 (Ubuntu 6.3.0-12ubuntu2) \n\"\"\"\n2017-07-13 16:13:00.617613: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:193] kernel reported version is: 381.22.0\n2017-07-13 16:13:00.617618: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:300] kernel version seems to match DSO: 381.22.0\n</code></pre>\n<p>Seems like this is an edge case that should ideally be handled (unless there is some way to enumerate CUDA devices before calling cuInit and avoid calling it at all). Interestingly the docs for cuInit don't mention CUDA_ERROR_NO_DEVICE as a valid return code so it's probably not surprising that this is how TF behaves.</p>", "body_text": "When I set CUDA_VISIBLE_DEVICES=-1 on my machine with a single GPU I get the following error:\n2017-07-13 16:13:00.617400: E tensorflow/stream_executor/cuda/cuda_driver.cc:406] failed call to cuInit: CUDA_ERROR_NO_DEVICE\n2017-07-13 16:13:00.617475: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:158] retrieving CUDA diagnostic information for host: eggplant-ed-ubuntu\n2017-07-13 16:13:00.617495: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:165] hostname: eggplant-ed-ubuntu\n2017-07-13 16:13:00.617567: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:189] libcuda reported version is: 381.22.0\n2017-07-13 16:13:00.617599: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:369] driver version file contents: \"\"\"NVRM version: NVIDIA UNIX x86_64 Kernel Module  381.22  Thu May  4 00:55:03 PDT 2017\nGCC version:  gcc version 6.3.0 20170406 (Ubuntu 6.3.0-12ubuntu2) \n\"\"\"\n2017-07-13 16:13:00.617613: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:193] kernel reported version is: 381.22.0\n2017-07-13 16:13:00.617618: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:300] kernel version seems to match DSO: 381.22.0\n\nSeems like this is an edge case that should ideally be handled (unless there is some way to enumerate CUDA devices before calling cuInit and avoid calling it at all). Interestingly the docs for cuInit don't mention CUDA_ERROR_NO_DEVICE as a valid return code so it's probably not surprising that this is how TF behaves.", "body": "When I set CUDA_VISIBLE_DEVICES=-1 on my machine with a single GPU I get the following error:\r\n```\r\n2017-07-13 16:13:00.617400: E tensorflow/stream_executor/cuda/cuda_driver.cc:406] failed call to cuInit: CUDA_ERROR_NO_DEVICE\r\n2017-07-13 16:13:00.617475: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:158] retrieving CUDA diagnostic information for host: eggplant-ed-ubuntu\r\n2017-07-13 16:13:00.617495: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:165] hostname: eggplant-ed-ubuntu\r\n2017-07-13 16:13:00.617567: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:189] libcuda reported version is: 381.22.0\r\n2017-07-13 16:13:00.617599: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:369] driver version file contents: \"\"\"NVRM version: NVIDIA UNIX x86_64 Kernel Module  381.22  Thu May  4 00:55:03 PDT 2017\r\nGCC version:  gcc version 6.3.0 20170406 (Ubuntu 6.3.0-12ubuntu2) \r\n\"\"\"\r\n2017-07-13 16:13:00.617613: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:193] kernel reported version is: 381.22.0\r\n2017-07-13 16:13:00.617618: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:300] kernel version seems to match DSO: 381.22.0\r\n```\r\n\r\nSeems like this is an edge case that should ideally be handled (unless there is some way to enumerate CUDA devices before calling cuInit and avoid calling it at all). Interestingly the docs for cuInit don't mention CUDA_ERROR_NO_DEVICE as a valid return code so it's probably not surprising that this is how TF behaves."}