{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/415982252", "html_url": "https://github.com/tensorflow/tensorflow/issues/2175#issuecomment-415982252", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2175", "id": 415982252, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTk4MjI1Mg==", "user": {"login": "mirekphd", "id": 36706320, "node_id": "MDQ6VXNlcjM2NzA2MzIw", "avatar_url": "https://avatars3.githubusercontent.com/u/36706320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mirekphd", "html_url": "https://github.com/mirekphd", "followers_url": "https://api.github.com/users/mirekphd/followers", "following_url": "https://api.github.com/users/mirekphd/following{/other_user}", "gists_url": "https://api.github.com/users/mirekphd/gists{/gist_id}", "starred_url": "https://api.github.com/users/mirekphd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mirekphd/subscriptions", "organizations_url": "https://api.github.com/users/mirekphd/orgs", "repos_url": "https://api.github.com/users/mirekphd/repos", "events_url": "https://api.github.com/users/mirekphd/events{/privacy}", "received_events_url": "https://api.github.com/users/mirekphd/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-25T16:51:44Z", "updated_at": "2018-08-25T16:54:19Z", "author_association": "NONE", "body_html": "<p>This environment variable is pretty universal - it can be used to block out access to all GPUs completely in many ML frameworks, not restricted to DNN and Tensorflow. I've verified in a docker container with several DNN frameworks compiled with CUDA 9.0 support, that setting:</p>\n<pre><code>ENV CUDA_VISIBLE_DEVICES=-1\n</code></pre>\n<p>at the very end of the Dockerfile blocked out GPU access completely (with graceful error handling). The list where this GPU block is verified to work includes:</p>\n<ul>\n<li>Chainer</li>\n<li>CNTK</li>\n<li>Keras with Tensorflow backend</li>\n<li>Lasagne</li>\n<li>MXNET</li>\n<li>Tensorflow</li>\n<li>Theano</li>\n<li>PyTorch.</li>\n</ul>\n<p>Some of these, including Keras + Tensorflow will also fall back to CPU to complete the calculations.</p>", "body_text": "This environment variable is pretty universal - it can be used to block out access to all GPUs completely in many ML frameworks, not restricted to DNN and Tensorflow. I've verified in a docker container with several DNN frameworks compiled with CUDA 9.0 support, that setting:\nENV CUDA_VISIBLE_DEVICES=-1\n\nat the very end of the Dockerfile blocked out GPU access completely (with graceful error handling). The list where this GPU block is verified to work includes:\n\nChainer\nCNTK\nKeras with Tensorflow backend\nLasagne\nMXNET\nTensorflow\nTheano\nPyTorch.\n\nSome of these, including Keras + Tensorflow will also fall back to CPU to complete the calculations.", "body": "This environment variable is pretty universal - it can be used to block out access to all GPUs completely in many ML frameworks, not restricted to DNN and Tensorflow. I've verified in a docker container with several DNN frameworks compiled with CUDA 9.0 support, that setting:\r\n```\r\nENV CUDA_VISIBLE_DEVICES=-1\r\n```\r\nat the very end of the Dockerfile blocked out GPU access completely (with graceful error handling). The list where this GPU block is verified to work includes: \r\n- Chainer\r\n- CNTK\r\n- Keras with Tensorflow backend\r\n- Lasagne\r\n- MXNET\r\n- Tensorflow\r\n- Theano\r\n- PyTorch.\r\n\r\nSome of these, including Keras + Tensorflow will also fall back to CPU to complete the calculations.\r\n\r\n\r\n"}