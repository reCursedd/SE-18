{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/115040204", "pull_request_review_id": 36555636, "id": 115040204, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNTA0MDIwNA==", "diff_hunk": "@@ -194,6 +194,50 @@ def testBasicLSTMCell(self):\n              m.name: 0.1 * np.ones([1, 4])})\n         self.assertEqual(len(res), 2)\n \n+  def testBasicLSTMCellDimension0Error(self):\n+    \"\"\"Tests that dimension 0 in both(x and m) shape must be equal.\"\"\"\n+    with self.test_session() as sess:\n+      with variable_scope.variable_scope(\n+          \"root\", initializer=init_ops.constant_initializer(0.5)):\n+        num_units = 2\n+        state_size = num_units * 2\n+        batch_size = 3\n+        input_size = 4\n+        x = array_ops.zeros(\n+          [batch_size, input_size])\n+        m = array_ops.zeros([batch_size - 1, state_size])\n+        with self.assertRaisesRegexp(ValueError,\n+            r\"Dimension 0 in both shapes must be equal\"):\n+          g, out_m = core_rnn_cell_impl.BasicLSTMCell(\n+            num_units, state_is_tuple=False)(x, m)\n+          sess.run([variables_lib.global_variables_initializer()])\n+          sess.run(\n+            [g, out_m],\n+            {x.name: 1 * np.ones([batch_size, input_size]),\n+             m.name: 0.1 * np.ones([batch_size - 1, state_size])})\n+\n+  def testBasicLSTMCellStateSizeError(self):\n+    \"\"\"Tests that state_size must be num_units * 2.\"\"\"\n+    with self.test_session() as sess:\n+      with variable_scope.variable_scope(\n+          \"root\", initializer=init_ops.constant_initializer(0.5)):\n+        num_units = 2\n+        state_size = num_units * 3 # state_size must be num_units * 2\n+        batch_size = 3\n+        input_size = 4\n+        x = array_ops.zeros(\n+          [batch_size, input_size])\n+        m = array_ops.zeros([batch_size, state_size])\n+        with self.assertRaisesRegexp(ValueError,\n+            r\"Dimensions must be equal, but are 3 and 2\"):", "path": "tensorflow/contrib/rnn/python/kernel_tests/core_rnn_cell_test.py", "position": null, "original_position": 39, "commit_id": "ff404ee56ee9f9fb908c9cd086c034871ebfdde2", "original_commit_id": "a81cbaf1e78b77f1068e5f0078f0d42c2148427b", "user": {"login": "vrv", "id": 463737, "node_id": "MDQ6VXNlcjQ2MzczNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/463737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrv", "html_url": "https://github.com/vrv", "followers_url": "https://api.github.com/users/vrv/followers", "following_url": "https://api.github.com/users/vrv/following{/other_user}", "gists_url": "https://api.github.com/users/vrv/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrv/subscriptions", "organizations_url": "https://api.github.com/users/vrv/orgs", "repos_url": "https://api.github.com/users/vrv/repos", "events_url": "https://api.github.com/users/vrv/events{/privacy}", "received_events_url": "https://api.github.com/users/vrv/received_events", "type": "User", "site_admin": false}, "body": "It becomes difficult to change error messages when tests check for exact contents, can we just do self.assertRaises instead?", "created_at": "2017-05-05T16:45:03Z", "updated_at": "2017-05-06T03:45:33Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/9693#discussion_r115040204", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9693", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/115040204"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/9693#discussion_r115040204"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9693"}}, "body_html": "<p>It becomes difficult to change error messages when tests check for exact contents, can we just do self.assertRaises instead?</p>", "body_text": "It becomes difficult to change error messages when tests check for exact contents, can we just do self.assertRaises instead?"}