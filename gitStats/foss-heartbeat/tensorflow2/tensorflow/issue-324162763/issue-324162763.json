{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19359", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19359/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19359/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19359/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19359", "id": 324162763, "node_id": "MDU6SXNzdWUzMjQxNjI3NjM=", "number": 19359, "title": "Getting wrong predictions on a model loaded in java vs python using the tensorflow \u201csaved model\u201d api", "user": {"login": "JsFlo", "id": 3820069, "node_id": "MDQ6VXNlcjM4MjAwNjk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3820069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JsFlo", "html_url": "https://github.com/JsFlo", "followers_url": "https://api.github.com/users/JsFlo/followers", "following_url": "https://api.github.com/users/JsFlo/following{/other_user}", "gists_url": "https://api.github.com/users/JsFlo/gists{/gist_id}", "starred_url": "https://api.github.com/users/JsFlo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JsFlo/subscriptions", "organizations_url": "https://api.github.com/users/JsFlo/orgs", "repos_url": "https://api.github.com/users/JsFlo/repos", "events_url": "https://api.github.com/users/JsFlo/events{/privacy}", "received_events_url": "https://api.github.com/users/JsFlo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-05-17T19:54:12Z", "updated_at": "2018-05-18T15:02:55Z", "closed_at": "2018-05-18T15:02:55Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>custom code</strong>:</li>\n<li><strong>OS Platform and Distribution</strong>: MacOS High Sierra v10.13.3</li>\n<li><strong>TensorFlow installed from binary</strong>: pip3 install</li>\n<li>**TensorFlow version **: v1.8.0-0-g93bc2e2072 1.8.0</li>\n<li><strong>Python version</strong>: 3.6.1</li>\n<li>Have I written custom code: Yes</li>\n<li>Bazel version: n/a</li>\n<li>CUDA/cuDNN version: n/a</li>\n<li>GPU model and memory: n/a</li>\n<li>Exact command to reproduce: In the 'Code' section of this post</li>\n</ul>\n<h3>Problem</h3>\n<p>I'm trying to load a model in Java that was trained in python and saved using the saved model api (<code>from tensorflow.python.saved_model</code>).</p>\n<p>I'm able to load it in a separate Python script and from Java but the predictions are wrong in the Java version.</p>\n<p>I wrote a quick example project with a simple model that demonstrates the \"bug\" (I'm hoping my misunderstanding).</p>\n<p><strong>Python: OrTraining.py</strong></p>\n<p>Save model after training using Saved Model Api.</p>\n<pre><code>builders = saved_model_builder.SavedModelBuilder(export_path)\nbuilders.add_meta_graph_and_variables(sess, [\"or\"], signature_def_map={\n    \"predict\": tf.saved_model.signature_def_utils.predict_signature_def(\n        inputs= {\"images\": x_placeholder},\n        outputs= {\"scores\": hypothesis_function})\n    })\nbuilders.save()\n</code></pre>\n<p><a href=\"https://github.com/JsFlo/DebuggingSavedModelJava/blob/master/OrTraining.py\">https://github.com/JsFlo/DebuggingSavedModelJava/blob/master/OrTraining.py</a></p>\n<p><strong>Python: OrLoadSavedModel.py</strong></p>\n<p>Load model in a separate script using the Saved Model Api.</p>\n<pre><code>with tf.Session(graph=tf.Graph()) as sess:\ntf.saved_model.loader.load(sess, [\"or\"], \"orTrainingModels\")\ngraph = tf.get_default_graph()\nprint(graph.get_operations())\nx_placeholder = graph.get_tensor_by_name(\"or_inputs:0\")\nhypothesis_function = graph.get_tensor_by_name(\"hypothesis_output:0\")\n# sess.run(\"init\")\nprint(sess.run(hypothesis_function, feed_dict={x_placeholder: np.array([\n    np.array([1, 0]),\n    np.array([0, 1]),\n    np.array([0, 0]),\n    np.array([1, 1]),\n])}))\n</code></pre>\n<p><a href=\"https://github.com/JsFlo/DebuggingSavedModelJava/blob/master/OrLoadSavedModel.py\">https://github.com/JsFlo/DebuggingSavedModelJava/blob/master/OrLoadSavedModel.py</a></p>\n<p><strong>Java: OrLoadSavedModel.java</strong></p>\n<p>Load</p>\n<pre><code> SavedModelBundle savedModelBundle = SavedModelBundle.load(\"./orTrainingModels\", \"or\");\n Session session = savedModelBundle.session();\n</code></pre>\n<p>Run</p>\n<pre><code>Tensor result = session.runner()\n            .feed(\"or_inputs\", tensorInput)\n            .fetch(\"hypothesis_output\")\n            .run().get(0);\n</code></pre>\n<p><a href=\"https://github.com/JsFlo/DebuggingSavedModelJava/blob/master/src/main/java/OrLoadSavedModel.java\">https://github.com/JsFlo/DebuggingSavedModelJava/blob/master/src/main/java/OrLoadSavedModel.java</a></p>\n<p>Both the java version and the python version load and run the graphs without a problem but the java version doens't output the correct predictions.</p>\n<p>At first I thought it was because the weights/bias weren't being loaded but I'm able to \"run\" the weights/bias operation in the java version and see that it has the correct weights that I see in the python script after training.</p>\n<p>Check weights in java (<a href=\"https://github.com/JsFlo/DebuggingSavedModelJava\">https://github.com/JsFlo/DebuggingSavedModelJava</a>)</p>\n<pre><code>Tensor result = session.runner()\n            .fetch(\"da_weights\")\n            .run().get(0);\n</code></pre>\n<h3>Code</h3>\n<p><a href=\"https://github.com/JsFlo/DebuggingSavedModelJava\">https://github.com/JsFlo/DebuggingSavedModelJava</a></p>\n<p>I run <strong>python3 OrTraining.py</strong> which will \"train\" (really small model) on my cpu and output a folder called <code>orTrainingModels</code> which has the output of the training SavedModel API. (You don't have to run this since the folder is already in the repo but if you did want to then remove the folder first)</p>\n<pre><code>.\n\u251c\u2500\u2500 saved_model.pb\n\u2514\u2500\u2500 variables\n    \u251c\u2500\u2500 variables.data-00000-of-00001\n    \u2514\u2500\u2500 variables.index\n</code></pre>\n<p>I then run <strong>python3 OrLoadingSaveModel.py</strong> which will output the results of a small (4) validation/test set . I see the correct results in this.</p>\n<p>I run the java version <strong>(OrLoadSavedModel.java)</strong> by opening up the project in Intellij IDEA and clicking play or running <strong>./gradlew clean build :run</strong></p>\n<p>The Java version seems to load the correct weights and bias but the outputs are wrong. Running the java version should output some debugging logs (weights/bias/operations/output).</p>", "body_text": "System information\n\ncustom code:\nOS Platform and Distribution: MacOS High Sierra v10.13.3\nTensorFlow installed from binary: pip3 install\n**TensorFlow version **: v1.8.0-0-g93bc2e2072 1.8.0\nPython version: 3.6.1\nHave I written custom code: Yes\nBazel version: n/a\nCUDA/cuDNN version: n/a\nGPU model and memory: n/a\nExact command to reproduce: In the 'Code' section of this post\n\nProblem\nI'm trying to load a model in Java that was trained in python and saved using the saved model api (from tensorflow.python.saved_model).\nI'm able to load it in a separate Python script and from Java but the predictions are wrong in the Java version.\nI wrote a quick example project with a simple model that demonstrates the \"bug\" (I'm hoping my misunderstanding).\nPython: OrTraining.py\nSave model after training using Saved Model Api.\nbuilders = saved_model_builder.SavedModelBuilder(export_path)\nbuilders.add_meta_graph_and_variables(sess, [\"or\"], signature_def_map={\n    \"predict\": tf.saved_model.signature_def_utils.predict_signature_def(\n        inputs= {\"images\": x_placeholder},\n        outputs= {\"scores\": hypothesis_function})\n    })\nbuilders.save()\n\nhttps://github.com/JsFlo/DebuggingSavedModelJava/blob/master/OrTraining.py\nPython: OrLoadSavedModel.py\nLoad model in a separate script using the Saved Model Api.\nwith tf.Session(graph=tf.Graph()) as sess:\ntf.saved_model.loader.load(sess, [\"or\"], \"orTrainingModels\")\ngraph = tf.get_default_graph()\nprint(graph.get_operations())\nx_placeholder = graph.get_tensor_by_name(\"or_inputs:0\")\nhypothesis_function = graph.get_tensor_by_name(\"hypothesis_output:0\")\n# sess.run(\"init\")\nprint(sess.run(hypothesis_function, feed_dict={x_placeholder: np.array([\n    np.array([1, 0]),\n    np.array([0, 1]),\n    np.array([0, 0]),\n    np.array([1, 1]),\n])}))\n\nhttps://github.com/JsFlo/DebuggingSavedModelJava/blob/master/OrLoadSavedModel.py\nJava: OrLoadSavedModel.java\nLoad\n SavedModelBundle savedModelBundle = SavedModelBundle.load(\"./orTrainingModels\", \"or\");\n Session session = savedModelBundle.session();\n\nRun\nTensor result = session.runner()\n            .feed(\"or_inputs\", tensorInput)\n            .fetch(\"hypothesis_output\")\n            .run().get(0);\n\nhttps://github.com/JsFlo/DebuggingSavedModelJava/blob/master/src/main/java/OrLoadSavedModel.java\nBoth the java version and the python version load and run the graphs without a problem but the java version doens't output the correct predictions.\nAt first I thought it was because the weights/bias weren't being loaded but I'm able to \"run\" the weights/bias operation in the java version and see that it has the correct weights that I see in the python script after training.\nCheck weights in java (https://github.com/JsFlo/DebuggingSavedModelJava)\nTensor result = session.runner()\n            .fetch(\"da_weights\")\n            .run().get(0);\n\nCode\nhttps://github.com/JsFlo/DebuggingSavedModelJava\nI run python3 OrTraining.py which will \"train\" (really small model) on my cpu and output a folder called orTrainingModels which has the output of the training SavedModel API. (You don't have to run this since the folder is already in the repo but if you did want to then remove the folder first)\n.\n\u251c\u2500\u2500 saved_model.pb\n\u2514\u2500\u2500 variables\n    \u251c\u2500\u2500 variables.data-00000-of-00001\n    \u2514\u2500\u2500 variables.index\n\nI then run python3 OrLoadingSaveModel.py which will output the results of a small (4) validation/test set . I see the correct results in this.\nI run the java version (OrLoadSavedModel.java) by opening up the project in Intellij IDEA and clicking play or running ./gradlew clean build :run\nThe Java version seems to load the correct weights and bias but the outputs are wrong. Running the java version should output some debugging logs (weights/bias/operations/output).", "body": "### System information\r\n- **custom code**:\r\n- **OS Platform and Distribution**: MacOS High Sierra v10.13.3\r\n- **TensorFlow installed from binary**: pip3 install\r\n- **TensorFlow version **: v1.8.0-0-g93bc2e2072 1.8.0\r\n- **Python version**: 3.6.1\r\n- Have I written custom code: Yes\r\n - Bazel version: n/a\r\n- CUDA/cuDNN version: n/a\r\n- GPU model and memory: n/a\r\n- Exact command to reproduce: In the 'Code' section of this post\r\n\r\n### Problem\r\nI'm trying to load a model in Java that was trained in python and saved using the saved model api (`from tensorflow.python.saved_model`).\r\n\r\nI'm able to load it in a separate Python script and from Java but the predictions are wrong in the Java version.\r\n\r\nI wrote a quick example project with a simple model that demonstrates the \"bug\" (I'm hoping my misunderstanding).\r\n\r\n**Python: OrTraining.py**\r\n\r\nSave model after training using Saved Model Api.\r\n\r\n    builders = saved_model_builder.SavedModelBuilder(export_path)\r\n    builders.add_meta_graph_and_variables(sess, [\"or\"], signature_def_map={\r\n        \"predict\": tf.saved_model.signature_def_utils.predict_signature_def(\r\n            inputs= {\"images\": x_placeholder},\r\n            outputs= {\"scores\": hypothesis_function})\r\n        })\r\n    builders.save()\r\n\r\nhttps://github.com/JsFlo/DebuggingSavedModelJava/blob/master/OrTraining.py\r\n\r\n**Python: OrLoadSavedModel.py**\r\n\r\nLoad model in a separate script using the Saved Model Api.\r\n\r\n    with tf.Session(graph=tf.Graph()) as sess:\r\n    tf.saved_model.loader.load(sess, [\"or\"], \"orTrainingModels\")\r\n    graph = tf.get_default_graph()\r\n    print(graph.get_operations())\r\n    x_placeholder = graph.get_tensor_by_name(\"or_inputs:0\")\r\n    hypothesis_function = graph.get_tensor_by_name(\"hypothesis_output:0\")\r\n    # sess.run(\"init\")\r\n    print(sess.run(hypothesis_function, feed_dict={x_placeholder: np.array([\r\n        np.array([1, 0]),\r\n        np.array([0, 1]),\r\n        np.array([0, 0]),\r\n        np.array([1, 1]),\r\n    ])}))\r\n\r\nhttps://github.com/JsFlo/DebuggingSavedModelJava/blob/master/OrLoadSavedModel.py\r\n\r\n**Java: OrLoadSavedModel.java**\r\n\r\nLoad\r\n\r\n     SavedModelBundle savedModelBundle = SavedModelBundle.load(\"./orTrainingModels\", \"or\");\r\n     Session session = savedModelBundle.session();\r\n\r\nRun\r\n\r\n    Tensor result = session.runner()\r\n                .feed(\"or_inputs\", tensorInput)\r\n                .fetch(\"hypothesis_output\")\r\n                .run().get(0);\r\n\r\nhttps://github.com/JsFlo/DebuggingSavedModelJava/blob/master/src/main/java/OrLoadSavedModel.java\r\n\r\nBoth the java version and the python version load and run the graphs without a problem but the java version doens't output the correct predictions.\r\n\r\nAt first I thought it was because the weights/bias weren't being loaded but I'm able to \"run\" the weights/bias operation in the java version and see that it has the correct weights that I see in the python script after training.\r\n\r\nCheck weights in java (https://github.com/JsFlo/DebuggingSavedModelJava)\r\n\r\n    Tensor result = session.runner()\r\n                .fetch(\"da_weights\")\r\n                .run().get(0);\r\n\r\n### Code\r\nhttps://github.com/JsFlo/DebuggingSavedModelJava\r\n\r\nI run **python3 OrTraining.py** which will \"train\" (really small model) on my cpu and output a folder called `orTrainingModels` which has the output of the training SavedModel API. (You don't have to run this since the folder is already in the repo but if you did want to then remove the folder first)\r\n\r\n    .\r\n    \u251c\u2500\u2500 saved_model.pb\r\n    \u2514\u2500\u2500 variables\r\n        \u251c\u2500\u2500 variables.data-00000-of-00001\r\n        \u2514\u2500\u2500 variables.index\r\n\r\nI then run **python3 OrLoadingSaveModel.py** which will output the results of a small (4) validation/test set . I see the correct results in this. \r\n\r\nI run the java version **(OrLoadSavedModel.java)** by opening up the project in Intellij IDEA and clicking play or running **./gradlew clean build :run**\r\n\r\nThe Java version seems to load the correct weights and bias but the outputs are wrong. Running the java version should output some debugging logs (weights/bias/operations/output)."}