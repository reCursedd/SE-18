{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/390235703", "html_url": "https://github.com/tensorflow/tensorflow/issues/19359#issuecomment-390235703", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19359", "id": 390235703, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDIzNTcwMw==", "user": {"login": "JsFlo", "id": 3820069, "node_id": "MDQ6VXNlcjM4MjAwNjk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3820069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JsFlo", "html_url": "https://github.com/JsFlo", "followers_url": "https://api.github.com/users/JsFlo/followers", "following_url": "https://api.github.com/users/JsFlo/following{/other_user}", "gists_url": "https://api.github.com/users/JsFlo/gists{/gist_id}", "starred_url": "https://api.github.com/users/JsFlo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JsFlo/subscriptions", "organizations_url": "https://api.github.com/users/JsFlo/orgs", "repos_url": "https://api.github.com/users/JsFlo/repos", "events_url": "https://api.github.com/users/JsFlo/events{/privacy}", "received_events_url": "https://api.github.com/users/JsFlo/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-18T15:02:55Z", "updated_at": "2018-05-18T15:02:55Z", "author_association": "NONE", "body_html": "<p>This turned out an to be an issue with the way I was feeding the data in. Tensorflow doesn't like to create Tensors of <code>Boxed Types</code> (Integer vs int/ Float vs float) and there are checks to see if you're trying to pass in boxed types but it seems like the checks aren't that comprehensive.</p>\n<p>*Test from <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/java/src/test/java/org/tensorflow/TensorTest.java\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/java/src/test/java/org/tensorflow/TensorTest.java</a> *</p>\n<pre><code>@Test\npublic void testCreateFromArrayOfBoxed() {\n    Integer[] vector = new Integer[] {1, 2, 3, 4};\n    try (Tensor&lt;Integer&gt; t = Tensor.create(vector, Integer.class)) {\n        fail(\"Tensor.create() should fail because it was given an array of boxed values\"); \n    } catch (IllegalArgumentException e) {\n     // The expected exception\n   }\n}\n</code></pre>\n<p>Here's an example of my issue:</p>\n<pre><code>    Float[] input = new Float[]{0f, 1f};\n    Tensor tensorOutput = Tensor.create(input);\n    float[] floatOutput= new float[2];\n    tensorOutput.copyTo(floatOutput);\n    println(Arrays.toString(floatOutput)); // -7.377E30, -7.377E30\n\n\n    float[] input = new float[]{0f, 1f};\n    Tensor tensorOutput = Tensor.create(input);\n\n    float[] floatOutput= new float[2];\n    tensorOutput.copyTo(floatOutput);\n    println(Arrays.toString(floatOutput)); // 0, 1\n</code></pre>", "body_text": "This turned out an to be an issue with the way I was feeding the data in. Tensorflow doesn't like to create Tensors of Boxed Types (Integer vs int/ Float vs float) and there are checks to see if you're trying to pass in boxed types but it seems like the checks aren't that comprehensive.\n*Test from https://github.com/tensorflow/tensorflow/blob/master/tensorflow/java/src/test/java/org/tensorflow/TensorTest.java *\n@Test\npublic void testCreateFromArrayOfBoxed() {\n    Integer[] vector = new Integer[] {1, 2, 3, 4};\n    try (Tensor<Integer> t = Tensor.create(vector, Integer.class)) {\n        fail(\"Tensor.create() should fail because it was given an array of boxed values\"); \n    } catch (IllegalArgumentException e) {\n     // The expected exception\n   }\n}\n\nHere's an example of my issue:\n    Float[] input = new Float[]{0f, 1f};\n    Tensor tensorOutput = Tensor.create(input);\n    float[] floatOutput= new float[2];\n    tensorOutput.copyTo(floatOutput);\n    println(Arrays.toString(floatOutput)); // -7.377E30, -7.377E30\n\n\n    float[] input = new float[]{0f, 1f};\n    Tensor tensorOutput = Tensor.create(input);\n\n    float[] floatOutput= new float[2];\n    tensorOutput.copyTo(floatOutput);\n    println(Arrays.toString(floatOutput)); // 0, 1", "body": "This turned out an to be an issue with the way I was feeding the data in. Tensorflow doesn't like to create Tensors of `Boxed Types` (Integer vs int/ Float vs float) and there are checks to see if you're trying to pass in boxed types but it seems like the checks aren't that comprehensive.\r\n\r\n*Test from https://github.com/tensorflow/tensorflow/blob/master/tensorflow/java/src/test/java/org/tensorflow/TensorTest.java *\r\n\r\n    @Test\r\n    public void testCreateFromArrayOfBoxed() {\r\n        Integer[] vector = new Integer[] {1, 2, 3, 4};\r\n        try (Tensor<Integer> t = Tensor.create(vector, Integer.class)) {\r\n            fail(\"Tensor.create() should fail because it was given an array of boxed values\"); \r\n        } catch (IllegalArgumentException e) {\r\n         // The expected exception\r\n       }\r\n    }\r\n \r\nHere's an example of my issue:\r\n\r\n        Float[] input = new Float[]{0f, 1f};\r\n        Tensor tensorOutput = Tensor.create(input);\r\n        float[] floatOutput= new float[2];\r\n        tensorOutput.copyTo(floatOutput);\r\n        println(Arrays.toString(floatOutput)); // -7.377E30, -7.377E30\r\n\r\n\r\n        float[] input = new float[]{0f, 1f};\r\n        Tensor tensorOutput = Tensor.create(input);\r\n\r\n        float[] floatOutput= new float[2];\r\n        tensorOutput.copyTo(floatOutput);\r\n        println(Arrays.toString(floatOutput)); // 0, 1"}