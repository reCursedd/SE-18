{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/159611556", "pull_request_review_id": 86587786, "id": 159611556, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTYxMTU1Ng==", "diff_hunk": "@@ -158,6 +158,8 @@ public TensorFlowInferenceInterface(InputStream is) {\n       }\n     } catch (IOException e) {\n       throw new RuntimeException(\"Failed to load model from the input stream\", e);\n+    } finally {\n+       is.close(); ", "path": "tensorflow/contrib/android/java/org/tensorflow/contrib/android/TensorFlowInferenceInterface.java", "position": 5, "original_position": 5, "commit_id": "dc2428e226ca770e8bc7266d93579b4f03089950", "original_commit_id": "dc2428e226ca770e8bc7266d93579b4f03089950", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "Let me rephrase.\r\n\r\nThe constructor is `public TensorFlowInferenceInterface(InputStream is)`.\r\nWithout this PR, the constructor would not call `is.close()`. Which means that client code would look like this:\r\n\r\n```java\r\nInputStream s = createInputStream();\r\nTensorFlowInferenceInterface tf = new TensorFlowInferenceInterface(s);\r\n// Perhaps do something else with s\r\ns.close()\r\n```\r\n\r\nIn this PR, you're changing the constructor to call `is.close()`, which means that the creation and closing of the `InputStream` is asymmetric. For example:\r\n\r\n```java\r\nInputStream s = createInputStream();\r\nTensorFlowInferenceInterface tf = new TensorFlowInferenceInterface(s);\r\n// s can no longer be used by the client as it is  closed.\r\n```\r\n\r\nI don't think we should be making that change.\r\n", "created_at": "2018-01-04T09:41:00Z", "updated_at": "2018-01-04T09:41:00Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/15812#discussion_r159611556", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/15812", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/159611556"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/15812#discussion_r159611556"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/15812"}}, "body_html": "<p>Let me rephrase.</p>\n<p>The constructor is <code>public TensorFlowInferenceInterface(InputStream is)</code>.<br>\nWithout this PR, the constructor would not call <code>is.close()</code>. Which means that client code would look like this:</p>\n<div class=\"highlight highlight-source-java\"><pre><span class=\"pl-smi\">InputStream</span> s <span class=\"pl-k\">=</span> createInputStream();\n<span class=\"pl-smi\">TensorFlowInferenceInterface</span> tf <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">TensorFlowInferenceInterface</span>(s);\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Perhaps do something else with s</span>\ns<span class=\"pl-k\">.</span>close()</pre></div>\n<p>In this PR, you're changing the constructor to call <code>is.close()</code>, which means that the creation and closing of the <code>InputStream</code> is asymmetric. For example:</p>\n<div class=\"highlight highlight-source-java\"><pre><span class=\"pl-smi\">InputStream</span> s <span class=\"pl-k\">=</span> createInputStream();\n<span class=\"pl-smi\">TensorFlowInferenceInterface</span> tf <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">TensorFlowInferenceInterface</span>(s);\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> s can no longer be used by the client as it is  closed.</span></pre></div>\n<p>I don't think we should be making that change.</p>", "body_text": "Let me rephrase.\nThe constructor is public TensorFlowInferenceInterface(InputStream is).\nWithout this PR, the constructor would not call is.close(). Which means that client code would look like this:\nInputStream s = createInputStream();\nTensorFlowInferenceInterface tf = new TensorFlowInferenceInterface(s);\n// Perhaps do something else with s\ns.close()\nIn this PR, you're changing the constructor to call is.close(), which means that the creation and closing of the InputStream is asymmetric. For example:\nInputStream s = createInputStream();\nTensorFlowInferenceInterface tf = new TensorFlowInferenceInterface(s);\n// s can no longer be used by the client as it is  closed.\nI don't think we should be making that change.", "in_reply_to_id": 159601944}