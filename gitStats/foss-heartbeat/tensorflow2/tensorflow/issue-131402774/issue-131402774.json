{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/990", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/990/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/990/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/990/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/990", "id": 131402774, "node_id": "MDU6SXNzdWUxMzE0MDI3NzQ=", "number": 990, "title": "GPU device not found on Ubuntu 14.04", "user": {"login": "kibtes", "id": 12241922, "node_id": "MDQ6VXNlcjEyMjQxOTIy", "avatar_url": "https://avatars1.githubusercontent.com/u/12241922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kibtes", "html_url": "https://github.com/kibtes", "followers_url": "https://api.github.com/users/kibtes/followers", "following_url": "https://api.github.com/users/kibtes/following{/other_user}", "gists_url": "https://api.github.com/users/kibtes/gists{/gist_id}", "starred_url": "https://api.github.com/users/kibtes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kibtes/subscriptions", "organizations_url": "https://api.github.com/users/kibtes/orgs", "repos_url": "https://api.github.com/users/kibtes/repos", "events_url": "https://api.github.com/users/kibtes/events{/privacy}", "received_events_url": "https://api.github.com/users/kibtes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-02-04T16:34:32Z", "updated_at": "2017-10-27T07:56:27Z", "closed_at": "2016-02-13T19:38:02Z", "author_association": "NONE", "body_html": "<p>I have installed tensorflow python3 version using virtual environment on Ubuntu 14.04. There are three GPUs (Tesla K20c) available on the server that i work on.</p>\n<p>On the tensorflow webpage it says: \"In general you do not have to specify CPUs or GPUs explicitly. TensorFlow uses your first GPU, if you have one, for as many operations as possible.\"</p>\n<p>When i checked the examples provided on Using GPUs about using multi-GPUs</p>\n<p>import tensorflow as tf</p>\n<h1>Creates a graph.</h1>\n<p>c = []<br>\nfor d in ['/gpu:1', '/gpu:2']:<br>\nwith tf.device(d):<br>\na = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[2, 3])<br>\nb = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[3, 2])<br>\nc.append(tf.matmul(a, b))<br>\nwith tf.device('/cpu:0'):<br>\nsum = tf.add_n(c)</p>\n<h1>Creates a session with log_device_placement set to True.</h1>\n<p>sess = tf.Session(config=tf.ConfigProto(log_device_placement=True))</p>\n<h1>Runs the op.</h1>\n<p>print(sess.run(sum))</p>\n<p>the following error was displayed:</p>\n<p>I tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library                                    libcublas.so.7.0 locally<br>\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library                                    libcudnn.so.6.5 locally<br>\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library                                    libcufft.so.7.0 locally<br>\nI tensorflow/stream_executor/dso_loader.cc:93] Couldn't open CUDA library libcud                                   a.so. LD_LIBRARY_PATH: :/usr/local/cuda/lib64<br>\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:121] hostname: dmlserver<br>\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:146] libcuda reported vers                                   ion is: Not found: was unable to find libcuda.so DSO loaded into this program<br>\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:257] driver version file c                                   ontents: \"\"\"NVRM version: NVIDIA UNIX x86_64 Kernel Module  346.96  Sun Aug 23 2                                   2:29:21 PDT 2015<br>\nGCC version:  gcc version 4.8.4 (Ubuntu 4.8.4-2ubuntu1<del>14.04)<br>\n\"\"\"<br>\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:150] kernel reported versi                                   on is: 346.96<br>\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1060] LD_LIBRARY_PATH: :/                                   usr/local/cuda/lib64<br>\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1061] failed to find libc                                   uda.so on this system: Failed precondition: could not dlopen DSO: libcuda.so; dl                                   error: libcuda.so: cannot open shared object file: No such file or directory<br>\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library                                    libcurand.so.7.0 locally<br>\nI tensorflow/core/common_runtime/local_device.cc:40] Local device intra op paral                                   lelism threads: 16<br>\nE tensorflow/stream_executor/cuda/cuda_driver.cc:481] failed call to cuInit: CUD                                   A_ERROR_NO_DEVICE<br>\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:114] retrieving CUDA diagn                                   ostic information for host: dmlserver<br>\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:121] hostname: dmlserver<br>\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:146] libcuda reported vers                                   ion is: Not found: was unable to find libcuda.so DSO loaded into this program<br>\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:257] driver version file c                                   ontents: \"\"\"NVRM version: NVIDIA UNIX x86_64 Kernel Module  346.96  Sun Aug 23 2                                   2:29:21 PDT 2015<br>\nGCC version:  gcc version 4.8.4 (Ubuntu 4.8.4-2ubuntu1</del>14.04)<br>\n\"\"\"<br>\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:150] kernel reported versi                                   on is: 346.96<br>\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:127] DMA:<br>\nI tensorflow/core/common_runtime/direct_session.cc:58] Direct session inter op p                                   arallelism threads: 16<br>\nDevice mapping: no known devices.<br>\nI tensorflow/core/common_runtime/direct_session.cc:134] Device mapping:</p>\n<p>Traceback (most recent call last):<br>\nFile \"/usr/lib/python3.4/site-packages/tensorflow/python/client/session.py\", l                                   ine 428, in _do_run<br>\ntarget_list)<br>\ntensorflow.python.pywrap_tensorflow.StatusNotOK: Invalid argument: Cannot assign                                    a device to node 'Const_3': Could not satisfy explicit device specification '/g                                   pu:2'<br>\n[[Node: Const_3 = Const<a href=\"\">dtype=DT_FLOAT, value=Tensor&lt;type: float shape:                                    [3,2] values: 1 2 3...&gt;, _device=\"/gpu:2\"</a>]]</p>\n<p>During handling of the above exception, another exception occurred:</p>\n<p>Traceback (most recent call last):<br>\nFile \"checking_2.py\", line 15, in <br>\nprint(sess.run(sum))<br>\nFile \"/usr/lib/python3.4/site-packages/tensorflow/python/client/session.py\", l                                   ine 368, in run<br>\nresults = self._do_run(target_list, unique_fetch_targets, feed_dict_string)<br>\nFile \"/usr/lib/python3.4/site-packages/tensorflow/python/client/session.py\", l                                   ine 444, in _do_run<br>\ne.code)<br>\ntensorflow.python.framework.errors.InvalidArgumentError: Cannot assign a device                                    to node 'Const_3': Could not satisfy explicit device specification '/gpu:2'<br>\n[[Node: Const_3 = Const<a href=\"\">dtype=DT_FLOAT, value=Tensor&lt;type: float shape:                                    [3,2] values: 1 2 3...&gt;, _device=\"/gpu:2\"</a>]]<br>\nCaused by op 'Const_3', defined at:<br>\nFile \"checking_2.py\", line 8, in <br>\nb = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[3, 2])<br>\nFile \"/usr/lib/python3.4/site-packages/tensorflow/python/ops/constant_op.py\",                                    line 165, in constant<br>\nattrs={\"value\": tensor_value, \"dtype\": dtype_value}, name=name).outputs[0]<br>\nFile \"/usr/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", li                                   ne 1834, in create_op<br>\noriginal_op=self._default_original_op, op_def=op_def)<br>\nFile \"/usr/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", li                                   ne 1043, in <strong>init</strong><br>\nself._traceback = _extract_stack()</p>\n<p>Don't understand what the problem is? Need URGENT help!!!</p>", "body_text": "I have installed tensorflow python3 version using virtual environment on Ubuntu 14.04. There are three GPUs (Tesla K20c) available on the server that i work on.\nOn the tensorflow webpage it says: \"In general you do not have to specify CPUs or GPUs explicitly. TensorFlow uses your first GPU, if you have one, for as many operations as possible.\"\nWhen i checked the examples provided on Using GPUs about using multi-GPUs\nimport tensorflow as tf\nCreates a graph.\nc = []\nfor d in ['/gpu:1', '/gpu:2']:\nwith tf.device(d):\na = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[2, 3])\nb = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[3, 2])\nc.append(tf.matmul(a, b))\nwith tf.device('/cpu:0'):\nsum = tf.add_n(c)\nCreates a session with log_device_placement set to True.\nsess = tf.Session(config=tf.ConfigProto(log_device_placement=True))\nRuns the op.\nprint(sess.run(sum))\nthe following error was displayed:\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library                                    libcublas.so.7.0 locally\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library                                    libcudnn.so.6.5 locally\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library                                    libcufft.so.7.0 locally\nI tensorflow/stream_executor/dso_loader.cc:93] Couldn't open CUDA library libcud                                   a.so. LD_LIBRARY_PATH: :/usr/local/cuda/lib64\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:121] hostname: dmlserver\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:146] libcuda reported vers                                   ion is: Not found: was unable to find libcuda.so DSO loaded into this program\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:257] driver version file c                                   ontents: \"\"\"NVRM version: NVIDIA UNIX x86_64 Kernel Module  346.96  Sun Aug 23 2                                   2:29:21 PDT 2015\nGCC version:  gcc version 4.8.4 (Ubuntu 4.8.4-2ubuntu114.04)\n\"\"\"\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:150] kernel reported versi                                   on is: 346.96\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1060] LD_LIBRARY_PATH: :/                                   usr/local/cuda/lib64\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1061] failed to find libc                                   uda.so on this system: Failed precondition: could not dlopen DSO: libcuda.so; dl                                   error: libcuda.so: cannot open shared object file: No such file or directory\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library                                    libcurand.so.7.0 locally\nI tensorflow/core/common_runtime/local_device.cc:40] Local device intra op paral                                   lelism threads: 16\nE tensorflow/stream_executor/cuda/cuda_driver.cc:481] failed call to cuInit: CUD                                   A_ERROR_NO_DEVICE\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:114] retrieving CUDA diagn                                   ostic information for host: dmlserver\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:121] hostname: dmlserver\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:146] libcuda reported vers                                   ion is: Not found: was unable to find libcuda.so DSO loaded into this program\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:257] driver version file c                                   ontents: \"\"\"NVRM version: NVIDIA UNIX x86_64 Kernel Module  346.96  Sun Aug 23 2                                   2:29:21 PDT 2015\nGCC version:  gcc version 4.8.4 (Ubuntu 4.8.4-2ubuntu114.04)\n\"\"\"\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:150] kernel reported versi                                   on is: 346.96\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:127] DMA:\nI tensorflow/core/common_runtime/direct_session.cc:58] Direct session inter op p                                   arallelism threads: 16\nDevice mapping: no known devices.\nI tensorflow/core/common_runtime/direct_session.cc:134] Device mapping:\nTraceback (most recent call last):\nFile \"/usr/lib/python3.4/site-packages/tensorflow/python/client/session.py\", l                                   ine 428, in _do_run\ntarget_list)\ntensorflow.python.pywrap_tensorflow.StatusNotOK: Invalid argument: Cannot assign                                    a device to node 'Const_3': Could not satisfy explicit device specification '/g                                   pu:2'\n[[Node: Const_3 = Constdtype=DT_FLOAT, value=Tensor<type: float shape:                                    [3,2] values: 1 2 3...>, _device=\"/gpu:2\"]]\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\nFile \"checking_2.py\", line 15, in \nprint(sess.run(sum))\nFile \"/usr/lib/python3.4/site-packages/tensorflow/python/client/session.py\", l                                   ine 368, in run\nresults = self._do_run(target_list, unique_fetch_targets, feed_dict_string)\nFile \"/usr/lib/python3.4/site-packages/tensorflow/python/client/session.py\", l                                   ine 444, in _do_run\ne.code)\ntensorflow.python.framework.errors.InvalidArgumentError: Cannot assign a device                                    to node 'Const_3': Could not satisfy explicit device specification '/gpu:2'\n[[Node: Const_3 = Constdtype=DT_FLOAT, value=Tensor<type: float shape:                                    [3,2] values: 1 2 3...>, _device=\"/gpu:2\"]]\nCaused by op 'Const_3', defined at:\nFile \"checking_2.py\", line 8, in \nb = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[3, 2])\nFile \"/usr/lib/python3.4/site-packages/tensorflow/python/ops/constant_op.py\",                                    line 165, in constant\nattrs={\"value\": tensor_value, \"dtype\": dtype_value}, name=name).outputs[0]\nFile \"/usr/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", li                                   ne 1834, in create_op\noriginal_op=self._default_original_op, op_def=op_def)\nFile \"/usr/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", li                                   ne 1043, in init\nself._traceback = _extract_stack()\nDon't understand what the problem is? Need URGENT help!!!", "body": "I have installed tensorflow python3 version using virtual environment on Ubuntu 14.04. There are three GPUs (Tesla K20c) available on the server that i work on.\n\nOn the tensorflow webpage it says: \"In general you do not have to specify CPUs or GPUs explicitly. TensorFlow uses your first GPU, if you have one, for as many operations as possible.\"\n\nWhen i checked the examples provided on Using GPUs about using multi-GPUs \n\nimport tensorflow as tf\n# Creates a graph.\n\nc = []\nfor d in ['/gpu:1', '/gpu:2']:\n  with tf.device(d):\n    a = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[2, 3])\n    b = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[3, 2])\n    c.append(tf.matmul(a, b))\nwith tf.device('/cpu:0'):\n  sum = tf.add_n(c)\n# Creates a session with log_device_placement set to True.\n\nsess = tf.Session(config=tf.ConfigProto(log_device_placement=True))\n# Runs the op.\n\nprint(sess.run(sum))\n\nthe following error was displayed:\n\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library                                    libcublas.so.7.0 locally\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library                                    libcudnn.so.6.5 locally\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library                                    libcufft.so.7.0 locally\nI tensorflow/stream_executor/dso_loader.cc:93] Couldn't open CUDA library libcud                                   a.so. LD_LIBRARY_PATH: :/usr/local/cuda/lib64\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:121] hostname: dmlserver\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:146] libcuda reported vers                                   ion is: Not found: was unable to find libcuda.so DSO loaded into this program\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:257] driver version file c                                   ontents: \"\"\"NVRM version: NVIDIA UNIX x86_64 Kernel Module  346.96  Sun Aug 23 2                                   2:29:21 PDT 2015\nGCC version:  gcc version 4.8.4 (Ubuntu 4.8.4-2ubuntu1~14.04)\n\"\"\"\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:150] kernel reported versi                                   on is: 346.96\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1060] LD_LIBRARY_PATH: :/                                   usr/local/cuda/lib64\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:1061] failed to find libc                                   uda.so on this system: Failed precondition: could not dlopen DSO: libcuda.so; dl                                   error: libcuda.so: cannot open shared object file: No such file or directory\nI tensorflow/stream_executor/dso_loader.cc:101] successfully opened CUDA library                                    libcurand.so.7.0 locally\nI tensorflow/core/common_runtime/local_device.cc:40] Local device intra op paral                                   lelism threads: 16\nE tensorflow/stream_executor/cuda/cuda_driver.cc:481] failed call to cuInit: CUD                                   A_ERROR_NO_DEVICE\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:114] retrieving CUDA diagn                                   ostic information for host: dmlserver\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:121] hostname: dmlserver\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:146] libcuda reported vers                                   ion is: Not found: was unable to find libcuda.so DSO loaded into this program\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:257] driver version file c                                   ontents: \"\"\"NVRM version: NVIDIA UNIX x86_64 Kernel Module  346.96  Sun Aug 23 2                                   2:29:21 PDT 2015\nGCC version:  gcc version 4.8.4 (Ubuntu 4.8.4-2ubuntu1~14.04)\n\"\"\"\nI tensorflow/stream_executor/cuda/cuda_diagnostics.cc:150] kernel reported versi                                   on is: 346.96\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:127] DMA:\nI tensorflow/core/common_runtime/direct_session.cc:58] Direct session inter op p                                   arallelism threads: 16\nDevice mapping: no known devices.\nI tensorflow/core/common_runtime/direct_session.cc:134] Device mapping:\n\nTraceback (most recent call last):\n  File \"/usr/lib/python3.4/site-packages/tensorflow/python/client/session.py\", l                                   ine 428, in _do_run\n    target_list)\ntensorflow.python.pywrap_tensorflow.StatusNotOK: Invalid argument: Cannot assign                                    a device to node 'Const_3': Could not satisfy explicit device specification '/g                                   pu:2'\n         [[Node: Const_3 = Const[dtype=DT_FLOAT, value=Tensor<type: float shape:                                    [3,2] values: 1 2 3...>, _device=\"/gpu:2\"]()]]\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"checking_2.py\", line 15, in <module>\n    print(sess.run(sum))\n  File \"/usr/lib/python3.4/site-packages/tensorflow/python/client/session.py\", l                                   ine 368, in run\n    results = self._do_run(target_list, unique_fetch_targets, feed_dict_string)\n  File \"/usr/lib/python3.4/site-packages/tensorflow/python/client/session.py\", l                                   ine 444, in _do_run\n    e.code)\ntensorflow.python.framework.errors.InvalidArgumentError: Cannot assign a device                                    to node 'Const_3': Could not satisfy explicit device specification '/gpu:2'\n         [[Node: Const_3 = Const[dtype=DT_FLOAT, value=Tensor<type: float shape:                                    [3,2] values: 1 2 3...>, _device=\"/gpu:2\"]()]]\nCaused by op 'Const_3', defined at:\n  File \"checking_2.py\", line 8, in <module>\n    b = tf.constant([1.0, 2.0, 3.0, 4.0, 5.0, 6.0], shape=[3, 2])\n  File \"/usr/lib/python3.4/site-packages/tensorflow/python/ops/constant_op.py\",                                    line 165, in constant\n    attrs={\"value\": tensor_value, \"dtype\": dtype_value}, name=name).outputs[0]\n  File \"/usr/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", li                                   ne 1834, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/usr/lib/python3.4/site-packages/tensorflow/python/framework/ops.py\", li                                   ne 1043, in __init__\n    self._traceback = _extract_stack()\n\nDon't understand what the problem is? Need URGENT help!!! \n"}