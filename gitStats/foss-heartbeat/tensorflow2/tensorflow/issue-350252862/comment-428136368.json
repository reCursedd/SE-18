{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/428136368", "html_url": "https://github.com/tensorflow/tensorflow/issues/21587#issuecomment-428136368", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21587", "id": 428136368, "node_id": "MDEyOklzc3VlQ29tbWVudDQyODEzNjM2OA==", "user": {"login": "jrabary", "id": 1025387, "node_id": "MDQ6VXNlcjEwMjUzODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1025387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrabary", "html_url": "https://github.com/jrabary", "followers_url": "https://api.github.com/users/jrabary/followers", "following_url": "https://api.github.com/users/jrabary/following{/other_user}", "gists_url": "https://api.github.com/users/jrabary/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrabary/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrabary/subscriptions", "organizations_url": "https://api.github.com/users/jrabary/orgs", "repos_url": "https://api.github.com/users/jrabary/repos", "events_url": "https://api.github.com/users/jrabary/events{/privacy}", "received_events_url": "https://api.github.com/users/jrabary/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-09T10:08:23Z", "updated_at": "2018-10-09T10:08:23Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5325686\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/scotthuang1989\">@scotthuang1989</a> As far as I understand, Tensorflow will depreciate the use of global variables. I think the better way to handle this is then:</p>\n<pre><code>total_loss = loss + tf.add_n(model.losses)\n</code></pre>\n<p>Where the second term contains weights and activations regulirization losses</p>", "body_text": "@scotthuang1989 As far as I understand, Tensorflow will depreciate the use of global variables. I think the better way to handle this is then:\ntotal_loss = loss + tf.add_n(model.losses)\n\nWhere the second term contains weights and activations regulirization losses", "body": "@scotthuang1989 As far as I understand, Tensorflow will depreciate the use of global variables. I think the better way to handle this is then:\r\n```\r\ntotal_loss = loss + tf.add_n(model.losses)\r\n```\r\nWhere the second term contains weights and activations regulirization losses"}