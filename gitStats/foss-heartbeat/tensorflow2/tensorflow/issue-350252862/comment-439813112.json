{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/439813112", "html_url": "https://github.com/tensorflow/tensorflow/issues/21587#issuecomment-439813112", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21587", "id": 439813112, "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTgxMzExMg==", "user": {"login": "SayHiRay", "id": 20509343, "node_id": "MDQ6VXNlcjIwNTA5MzQz", "avatar_url": "https://avatars3.githubusercontent.com/u/20509343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SayHiRay", "html_url": "https://github.com/SayHiRay", "followers_url": "https://api.github.com/users/SayHiRay/followers", "following_url": "https://api.github.com/users/SayHiRay/following{/other_user}", "gists_url": "https://api.github.com/users/SayHiRay/gists{/gist_id}", "starred_url": "https://api.github.com/users/SayHiRay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SayHiRay/subscriptions", "organizations_url": "https://api.github.com/users/SayHiRay/orgs", "repos_url": "https://api.github.com/users/SayHiRay/repos", "events_url": "https://api.github.com/users/SayHiRay/events{/privacy}", "received_events_url": "https://api.github.com/users/SayHiRay/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-19T08:42:49Z", "updated_at": "2018-11-19T08:42:49Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I just encountered the same issue. Apparently layers in native tf and keras are different in their ways of dealing with regularization loss.</p>\n<p>I found an example of dealing with such regularization loss on tf official example: <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/eager/python/examples/densenet/densenet_graph_test.py\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/eager/python/examples/densenet/densenet_graph_test.py</a></p>\n<p>They use <code>tf.keras.model.losses</code> to collect such loss. In general I think it is nowadays a good practice to subclass tf.keras.model API for building tensorflow models. If you do have mixed sources of regularization losses, you may consider collect them using <code>tf.losses.get_regularization_loss</code> and <code>tf.keras.model.losses</code> respectively.</p>", "body_text": "I just encountered the same issue. Apparently layers in native tf and keras are different in their ways of dealing with regularization loss.\nI found an example of dealing with such regularization loss on tf official example: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/eager/python/examples/densenet/densenet_graph_test.py\nThey use tf.keras.model.losses to collect such loss. In general I think it is nowadays a good practice to subclass tf.keras.model API for building tensorflow models. If you do have mixed sources of regularization losses, you may consider collect them using tf.losses.get_regularization_loss and tf.keras.model.losses respectively.", "body": "I just encountered the same issue. Apparently layers in native tf and keras are different in their ways of dealing with regularization loss.\r\n\r\nI found an example of dealing with such regularization loss on tf official example: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/eager/python/examples/densenet/densenet_graph_test.py\r\n\r\nThey use `tf.keras.model.losses` to collect such loss. In general I think it is nowadays a good practice to subclass tf.keras.model API for building tensorflow models. If you do have mixed sources of regularization losses, you may consider collect them using `tf.losses.get_regularization_loss` and `tf.keras.model.losses` respectively."}