{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/347746832", "html_url": "https://github.com/tensorflow/tensorflow/issues/7541#issuecomment-347746832", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7541", "id": 347746832, "node_id": "MDEyOklzc3VlQ29tbWVudDM0Nzc0NjgzMg==", "user": {"login": "bipedalBit", "id": 6863219, "node_id": "MDQ6VXNlcjY4NjMyMTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6863219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bipedalBit", "html_url": "https://github.com/bipedalBit", "followers_url": "https://api.github.com/users/bipedalBit/followers", "following_url": "https://api.github.com/users/bipedalBit/following{/other_user}", "gists_url": "https://api.github.com/users/bipedalBit/gists{/gist_id}", "starred_url": "https://api.github.com/users/bipedalBit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bipedalBit/subscriptions", "organizations_url": "https://api.github.com/users/bipedalBit/orgs", "repos_url": "https://api.github.com/users/bipedalBit/repos", "events_url": "https://api.github.com/users/bipedalBit/events{/privacy}", "received_events_url": "https://api.github.com/users/bipedalBit/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-29T04:06:30Z", "updated_at": "2017-11-29T08:58:49Z", "author_association": "NONE", "body_html": "<p>I'm trying to mix C++ tensorflow code with python tensorflow code instead, with tensorflow 1.4.0. Same fatal messages encountered. Is it suggested that I should link _pywrap_tensorflow_internal.so instead of libtensorflow_cc.so when compiling the C++ DDL to avoid the conflict temporarily? Unfortunately I failed. It seem that some of C++ APIs I used are not included in C APIs and have not been exported to _pywrap_tensorflow_internal.so.</p>", "body_text": "I'm trying to mix C++ tensorflow code with python tensorflow code instead, with tensorflow 1.4.0. Same fatal messages encountered. Is it suggested that I should link _pywrap_tensorflow_internal.so instead of libtensorflow_cc.so when compiling the C++ DDL to avoid the conflict temporarily? Unfortunately I failed. It seem that some of C++ APIs I used are not included in C APIs and have not been exported to _pywrap_tensorflow_internal.so.", "body": "I'm trying to mix C++ tensorflow code with python tensorflow code instead, with tensorflow 1.4.0. Same fatal messages encountered. Is it suggested that I should link _pywrap_tensorflow_internal.so instead of libtensorflow_cc.so when compiling the C++ DDL to avoid the conflict temporarily? Unfortunately I failed. It seem that some of C++ APIs I used are not included in C APIs and have not been exported to _pywrap_tensorflow_internal.so."}