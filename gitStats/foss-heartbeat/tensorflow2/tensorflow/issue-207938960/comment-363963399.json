{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/363963399", "html_url": "https://github.com/tensorflow/tensorflow/issues/7541#issuecomment-363963399", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7541", "id": 363963399, "node_id": "MDEyOklzc3VlQ29tbWVudDM2Mzk2MzM5OQ==", "user": {"login": "allenlavoie", "id": 3731025, "node_id": "MDQ6VXNlcjM3MzEwMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3731025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allenlavoie", "html_url": "https://github.com/allenlavoie", "followers_url": "https://api.github.com/users/allenlavoie/followers", "following_url": "https://api.github.com/users/allenlavoie/following{/other_user}", "gists_url": "https://api.github.com/users/allenlavoie/gists{/gist_id}", "starred_url": "https://api.github.com/users/allenlavoie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allenlavoie/subscriptions", "organizations_url": "https://api.github.com/users/allenlavoie/orgs", "repos_url": "https://api.github.com/users/allenlavoie/repos", "events_url": "https://api.github.com/users/allenlavoie/events{/privacy}", "received_events_url": "https://api.github.com/users/allenlavoie/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-08T00:43:48Z", "updated_at": "2018-02-08T00:43:48Z", "author_association": "MEMBER", "body_html": "<p>If you want to use the C API along with Python, you need in TF &gt;=1.4 to link against _pywrap_tensorflow_internal.so (which includes the C API) and libtensorflow_framework.so (for protobuf symbols; also includes many C++ symbols). You can also build with <code>--config=monolithic</code> if you want the protobuf symbols wrapped up in _pywrap_tensorflow_internal.so.</p>\n<p>The Python and C language bindings both include ops and kernels, so you (still) can't use both of those together, even though they both link against libtensorflow_framework.so. Potentially you could remove a bunch of duplicate registration errors to make it work, or build a version of the libtensorflow.so without ops or kernels (making that easy to build manually would be neat).</p>\n<p>I think these are issues tracked elsewhere.</p>", "body_text": "If you want to use the C API along with Python, you need in TF >=1.4 to link against _pywrap_tensorflow_internal.so (which includes the C API) and libtensorflow_framework.so (for protobuf symbols; also includes many C++ symbols). You can also build with --config=monolithic if you want the protobuf symbols wrapped up in _pywrap_tensorflow_internal.so.\nThe Python and C language bindings both include ops and kernels, so you (still) can't use both of those together, even though they both link against libtensorflow_framework.so. Potentially you could remove a bunch of duplicate registration errors to make it work, or build a version of the libtensorflow.so without ops or kernels (making that easy to build manually would be neat).\nI think these are issues tracked elsewhere.", "body": "If you want to use the C API along with Python, you need in TF >=1.4 to link against _pywrap_tensorflow_internal.so (which includes the C API) and libtensorflow_framework.so (for protobuf symbols; also includes many C++ symbols). You can also build with `--config=monolithic` if you want the protobuf symbols wrapped up in _pywrap_tensorflow_internal.so.\r\n\r\nThe Python and C language bindings both include ops and kernels, so you (still) can't use both of those together, even though they both link against libtensorflow_framework.so. Potentially you could remove a bunch of duplicate registration errors to make it work, or build a version of the libtensorflow.so without ops or kernels (making that easy to build manually would be neat).\r\n\r\nI think these are issues tracked elsewhere."}