{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/234371836", "pull_request_review_id": 176011375, "id": 234371836, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNDM3MTgzNg==", "diff_hunk": "@@ -129,14 +129,19 @@ class AttrBuilder {\n     // Copied from NodeDefBuilder::Attr\n     const AttrValue* found = AttrSlice(m).Find(attr_name);\n     AttrValue attr_value;\n+    SetAttrValue(value, &attr_value);\n     if (found == nullptr) {\n-      SetAttrValue(value, &attr_value);\n       m->insert(AttrValueMap::value_type(string(attr_name), attr_value));\n     } else {\n-      // TODO(ashankar): Do what is done in\n-      // NodeDefBuilder::CheckInconsistency(attr_name, *found, attr_value);\n-      SetAttrValue(std::forward<T>(value), &attr_value);\n-      (*m)[string(attr_name)] = attr_value;\n+      // TODO(klessard): remove this validation once automatic input attributes\n+      // inference of the C API is used by all clients, or at least Python.\n+      // We use it only to verify that attributes inferred have the same values\n+      // as those currently added manually (see\n+      // github.com/tensorflow/tensorflow/pull/23468#issuecomment-438484058).\n+      CHECK_EQ(found->i(), attr_value.i()) << \" Number attribute \\\"\"", "path": "tensorflow/core/common_runtime/eager/attr_builder.h", "position": 18, "original_position": 18, "commit_id": "44c595725e46d12da70567544e1895408090be86", "original_commit_id": "44c595725e46d12da70567544e1895408090be86", "user": {"login": "karllessard", "id": 10109534, "node_id": "MDQ6VXNlcjEwMTA5NTM0", "avatar_url": "https://avatars3.githubusercontent.com/u/10109534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karllessard", "html_url": "https://github.com/karllessard", "followers_url": "https://api.github.com/users/karllessard/followers", "following_url": "https://api.github.com/users/karllessard/following{/other_user}", "gists_url": "https://api.github.com/users/karllessard/gists{/gist_id}", "starred_url": "https://api.github.com/users/karllessard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karllessard/subscriptions", "organizations_url": "https://api.github.com/users/karllessard/orgs", "repos_url": "https://api.github.com/users/karllessard/repos", "events_url": "https://api.github.com/users/karllessard/events{/privacy}", "received_events_url": "https://api.github.com/users/karllessard/received_events", "type": "User", "site_admin": false}, "body": "Replacing checks with a status requires to add a `status` parameter to this method and propagate that change in more than 30 places I've identified so far. \r\n\r\nSince this validation is supposed to be temporary (i.e. until we are confident with the solution), I suggest to keep the current interface intact and use assertive checks, even if they are not ideal. What do you think? Or could we simply log?", "created_at": "2018-11-16T22:54:59Z", "updated_at": "2018-11-16T22:55:52Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/23468#discussion_r234371836", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/23468", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/234371836"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/23468#discussion_r234371836"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/23468"}}, "body_html": "<p>Replacing checks with a status requires to add a <code>status</code> parameter to this method and propagate that change in more than 30 places I've identified so far.</p>\n<p>Since this validation is supposed to be temporary (i.e. until we are confident with the solution), I suggest to keep the current interface intact and use assertive checks, even if they are not ideal. What do you think? Or could we simply log?</p>", "body_text": "Replacing checks with a status requires to add a status parameter to this method and propagate that change in more than 30 places I've identified so far.\nSince this validation is supposed to be temporary (i.e. until we are confident with the solution), I suggest to keep the current interface intact and use assertive checks, even if they are not ideal. What do you think? Or could we simply log?", "in_reply_to_id": 234244326}