{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3599", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3599/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3599/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3599/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3599", "id": 168598838, "node_id": "MDU6SXNzdWUxNjg1OTg4Mzg=", "number": 3599, "title": "Use Retrained categories in Android Camera Demo", "user": {"login": "hongyehenry", "id": 16888791, "node_id": "MDQ6VXNlcjE2ODg4Nzkx", "avatar_url": "https://avatars3.githubusercontent.com/u/16888791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hongyehenry", "html_url": "https://github.com/hongyehenry", "followers_url": "https://api.github.com/users/hongyehenry/followers", "following_url": "https://api.github.com/users/hongyehenry/following{/other_user}", "gists_url": "https://api.github.com/users/hongyehenry/gists{/gist_id}", "starred_url": "https://api.github.com/users/hongyehenry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hongyehenry/subscriptions", "organizations_url": "https://api.github.com/users/hongyehenry/orgs", "repos_url": "https://api.github.com/users/hongyehenry/repos", "events_url": "https://api.github.com/users/hongyehenry/events{/privacy}", "received_events_url": "https://api.github.com/users/hongyehenry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-01T09:01:26Z", "updated_at": "2016-08-02T18:22:53Z", "closed_at": "2016-08-02T18:22:53Z", "author_association": "NONE", "body_html": "<p>GitHub issues are for bugs / installation problems / feature requests.<br>\nFor general support from the community, see <a href=\"https://stackoverflow.com/questions/tagged/tensorflow\" rel=\"nofollow\">StackOverflow</a>.<br>\nTo make bugs and feature requests more easy to find and organize, we close issues that are deemed<br>\nout of scope for GitHub Issues and point people to StackOverflow.</p>\n<p>For bugs or installation issues, please provide the following information.<br>\nThe more information you provide, the more easily we will be able to offer<br>\nhelp and advice.</p>\n<h3>Environment info</h3>\n<p>Operating System: Docker on Windows</p>\n<p>Installed version of CUDA and cuDNN:<br>\n(please attach the output of <code>ls -l /path/to/cuda/lib/libcud*</code>):</p>\n<p>If installed from binary pip package, provide:</p>\n<ol>\n<li>Which pip package you installed.</li>\n<li>The output from <code>python -c \"import tensorflow; print(tensorflow.__version__)\"</code>.</li>\n</ol>\n<p>If installed from source, provide</p>\n<ol>\n<li>The commit hash (<code>git rev-parse HEAD</code>)</li>\n<li>The output of <code>bazel version</code></li>\n</ol>\n<h3>Steps to reproduce</h3>\n<ol>\n<li>Successfully retrain new data with Docker. Get the two retrained files retrained_graph.pb and retrained_labels.txt<br>\n<a href=\"https://codelabs.developers.google.com/codelabs/tensorflow-for-poets/index.html?index=..%2F..%2Findex#5\" rel=\"nofollow\">https://codelabs.developers.google.com/codelabs/tensorflow-for-poets/index.html?index=..%2F..%2Findex#5</a></li>\n<li>Try to install Bazel on windows but failed. But I found an Android Demo which doesn't need Bazel. This one works well on Windows. It can recognize images into 1000 classes provided by ImageNet in an Android real-time camera.<br>\n<a href=\"https://github.com/miyosuda/TensorFlowAndroidDemo\">https://github.com/miyosuda/TensorFlowAndroidDemo</a></li>\n</ol>\n<h3>What have you tried?</h3>\n<p>Reference\uff1b <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"135957980\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/1269\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/1269/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/1269\">#1269</a><br>\nBased on the suggestions, I tried the following things:<br>\n1.Find the coded_stream.h in the google/protobuf section of your tensorflow build and modify the 64 to 256 in the following line:<br>\nstatic const int kDefaultTotalBytesLimit = 64 &lt;&lt; 20; // Change the 64 to 256 MB<br>\n2.Modify only the input_size to 299 and the image_mean to 128 in the TensorflowImageListener.java<br>\n3.Go to tensorflow_jni.cc in the android demo and modify as follows:</p>\n<pre><code>  input_tensor_mapped(0, i, j, 0) =\n      (static_cast&lt;float&gt;(src-&gt;red) - g_image_mean)/g_image_mean;\n  input_tensor_mapped(0, i, j, 1) =\n      (static_cast&lt;float&gt;(src-&gt;green) - g_image_mean)/g_image_mean;\n  input_tensor_mapped(0, i, j, 2) =\n      (static_cast&lt;float&gt;(src-&gt;blue) - g_image_mean)/g_image_mean;\n  ++src;\n</code></pre>\n<p>std::vector&lt;std::pair&lt;std::string, tensorflow::Tensor&gt; &gt; input_tensors(<br>\n{{\"Mul\", input_tensor}});</p>\n<p>std::vectorstd::string output_names({\"softmax\"});<br>\n4.Do the following changes in TensorflowImageListerner.java:<br>\nprivate static final String MODEL_FILE = \"file:///android_asset/retrained_graph.pb\";<br>\nprivate static final String LABEL_FILE =<br>\n\"file:///android_asset/retrained_labels.txt\";<br>\n5. Build the android demo</p>\n<h3>Logs or other output that would be helpful</h3>\n<p>(If logs are large, please upload as attachment).<br>\n08-01 17:36:50.015 14978-15121/org.tensorflow.tensorflowdemo A/native: jni_utils.cc:107 Check failed: message-&gt;ParseFromZeroCopyStream(&amp;adaptor)<br>\n08-01 17:36:50.015 14978-15121/org.tensorflow.tensorflowdemo A/libc: Fatal signal 6 (SIGABRT), code -6 in tid 15121 (ImageListener)</p>\n<p>I know this is a problem due to the incompatible variables of Inception v3 and Inception 5h. The Android Demo model I use is Inception 5h, But the model I used to train my new data is Inception 3v.  I've tried to edit the variables mentioned here: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"135957980\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/1269\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/1269/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/1269\">#1269</a>.<br>\nBut I still get the same errors. Anyone could help me explain how to adapt my new trained data running in the Android Demo?</p>", "body_text": "GitHub issues are for bugs / installation problems / feature requests.\nFor general support from the community, see StackOverflow.\nTo make bugs and feature requests more easy to find and organize, we close issues that are deemed\nout of scope for GitHub Issues and point people to StackOverflow.\nFor bugs or installation issues, please provide the following information.\nThe more information you provide, the more easily we will be able to offer\nhelp and advice.\nEnvironment info\nOperating System: Docker on Windows\nInstalled version of CUDA and cuDNN:\n(please attach the output of ls -l /path/to/cuda/lib/libcud*):\nIf installed from binary pip package, provide:\n\nWhich pip package you installed.\nThe output from python -c \"import tensorflow; print(tensorflow.__version__)\".\n\nIf installed from source, provide\n\nThe commit hash (git rev-parse HEAD)\nThe output of bazel version\n\nSteps to reproduce\n\nSuccessfully retrain new data with Docker. Get the two retrained files retrained_graph.pb and retrained_labels.txt\nhttps://codelabs.developers.google.com/codelabs/tensorflow-for-poets/index.html?index=..%2F..%2Findex#5\nTry to install Bazel on windows but failed. But I found an Android Demo which doesn't need Bazel. This one works well on Windows. It can recognize images into 1000 classes provided by ImageNet in an Android real-time camera.\nhttps://github.com/miyosuda/TensorFlowAndroidDemo\n\nWhat have you tried?\nReference\uff1b #1269\nBased on the suggestions, I tried the following things:\n1.Find the coded_stream.h in the google/protobuf section of your tensorflow build and modify the 64 to 256 in the following line:\nstatic const int kDefaultTotalBytesLimit = 64 << 20; // Change the 64 to 256 MB\n2.Modify only the input_size to 299 and the image_mean to 128 in the TensorflowImageListener.java\n3.Go to tensorflow_jni.cc in the android demo and modify as follows:\n  input_tensor_mapped(0, i, j, 0) =\n      (static_cast<float>(src->red) - g_image_mean)/g_image_mean;\n  input_tensor_mapped(0, i, j, 1) =\n      (static_cast<float>(src->green) - g_image_mean)/g_image_mean;\n  input_tensor_mapped(0, i, j, 2) =\n      (static_cast<float>(src->blue) - g_image_mean)/g_image_mean;\n  ++src;\n\nstd::vector<std::pair<std::string, tensorflow::Tensor> > input_tensors(\n{{\"Mul\", input_tensor}});\nstd::vectorstd::string output_names({\"softmax\"});\n4.Do the following changes in TensorflowImageListerner.java:\nprivate static final String MODEL_FILE = \"file:///android_asset/retrained_graph.pb\";\nprivate static final String LABEL_FILE =\n\"file:///android_asset/retrained_labels.txt\";\n5. Build the android demo\nLogs or other output that would be helpful\n(If logs are large, please upload as attachment).\n08-01 17:36:50.015 14978-15121/org.tensorflow.tensorflowdemo A/native: jni_utils.cc:107 Check failed: message->ParseFromZeroCopyStream(&adaptor)\n08-01 17:36:50.015 14978-15121/org.tensorflow.tensorflowdemo A/libc: Fatal signal 6 (SIGABRT), code -6 in tid 15121 (ImageListener)\nI know this is a problem due to the incompatible variables of Inception v3 and Inception 5h. The Android Demo model I use is Inception 5h, But the model I used to train my new data is Inception 3v.  I've tried to edit the variables mentioned here: #1269.\nBut I still get the same errors. Anyone could help me explain how to adapt my new trained data running in the Android Demo?", "body": "GitHub issues are for bugs / installation problems / feature requests.  \nFor general support from the community, see [StackOverflow](https://stackoverflow.com/questions/tagged/tensorflow).\nTo make bugs and feature requests more easy to find and organize, we close issues that are deemed\nout of scope for GitHub Issues and point people to StackOverflow.\n\nFor bugs or installation issues, please provide the following information.\nThe more information you provide, the more easily we will be able to offer\nhelp and advice.\n### Environment info\n\nOperating System: Docker on Windows\n\nInstalled version of CUDA and cuDNN: \n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`):\n\nIf installed from binary pip package, provide:\n1. Which pip package you installed.\n2. The output from `python -c \"import tensorflow; print(tensorflow.__version__)\"`.\n\nIf installed from source, provide \n1. The commit hash (`git rev-parse HEAD`)\n2. The output of `bazel version`\n### Steps to reproduce\n1. Successfully retrain new data with Docker. Get the two retrained files retrained_graph.pb and retrained_labels.txt\n   https://codelabs.developers.google.com/codelabs/tensorflow-for-poets/index.html?index=..%2F..%2Findex#5\n2. Try to install Bazel on windows but failed. But I found an Android Demo which doesn't need Bazel. This one works well on Windows. It can recognize images into 1000 classes provided by ImageNet in an Android real-time camera.\n   https://github.com/miyosuda/TensorFlowAndroidDemo\n### What have you tried?\n\nReference\uff1b https://github.com/tensorflow/tensorflow/issues/1269\nBased on the suggestions, I tried the following things:\n1.Find the coded_stream.h in the google/protobuf section of your tensorflow build and modify the 64 to 256 in the following line:\nstatic const int kDefaultTotalBytesLimit = 64 << 20; // Change the 64 to 256 MB\n2.Modify only the input_size to 299 and the image_mean to 128 in the TensorflowImageListener.java\n3.Go to tensorflow_jni.cc in the android demo and modify as follows:\n\n```\n  input_tensor_mapped(0, i, j, 0) =\n      (static_cast<float>(src->red) - g_image_mean)/g_image_mean;\n  input_tensor_mapped(0, i, j, 1) =\n      (static_cast<float>(src->green) - g_image_mean)/g_image_mean;\n  input_tensor_mapped(0, i, j, 2) =\n      (static_cast<float>(src->blue) - g_image_mean)/g_image_mean;\n  ++src;\n```\n\nstd::vector<std::pair<std::string, tensorflow::Tensor> > input_tensors(\n      {{\"Mul\", input_tensor}});\n\nstd::vectorstd::string output_names({\"softmax\"});\n4.Do the following changes in TensorflowImageListerner.java:\n private static final String MODEL_FILE = \"file:///android_asset/retrained_graph.pb\";\n  private static final String LABEL_FILE =\n      \"file:///android_asset/retrained_labels.txt\";\n5. Build the android demo \n### Logs or other output that would be helpful\n\n(If logs are large, please upload as attachment).\n08-01 17:36:50.015 14978-15121/org.tensorflow.tensorflowdemo A/native: jni_utils.cc:107 Check failed: message->ParseFromZeroCopyStream(&adaptor) \n08-01 17:36:50.015 14978-15121/org.tensorflow.tensorflowdemo A/libc: Fatal signal 6 (SIGABRT), code -6 in tid 15121 (ImageListener)\n\nI know this is a problem due to the incompatible variables of Inception v3 and Inception 5h. The Android Demo model I use is Inception 5h, But the model I used to train my new data is Inception 3v.  I've tried to edit the variables mentioned here: https://github.com/tensorflow/tensorflow/issues/1269.\nBut I still get the same errors. Anyone could help me explain how to adapt my new trained data running in the Android Demo?\n"}