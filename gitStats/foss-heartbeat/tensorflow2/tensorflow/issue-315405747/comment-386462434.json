{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/386462434", "html_url": "https://github.com/tensorflow/tensorflow/issues/18643#issuecomment-386462434", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18643", "id": 386462434, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjQ2MjQzNA==", "user": {"login": "psyhtest", "id": 6597818, "node_id": "MDQ6VXNlcjY1OTc4MTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/6597818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/psyhtest", "html_url": "https://github.com/psyhtest", "followers_url": "https://api.github.com/users/psyhtest/followers", "following_url": "https://api.github.com/users/psyhtest/following{/other_user}", "gists_url": "https://api.github.com/users/psyhtest/gists{/gist_id}", "starred_url": "https://api.github.com/users/psyhtest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/psyhtest/subscriptions", "organizations_url": "https://api.github.com/users/psyhtest/orgs", "repos_url": "https://api.github.com/users/psyhtest/repos", "events_url": "https://api.github.com/users/psyhtest/events{/privacy}", "received_events_url": "https://api.github.com/users/psyhtest/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-03T23:03:00Z", "updated_at": "2018-05-03T23:23:08Z", "author_association": "NONE", "body_html": "<p>By the way, for <a href=\"https://github.com/dividiti/ck-request-asplos18-mobilenets-armcl-opencl\">ReQuEST</a>, I've run MobileNets-v1 on the <a href=\"http://en.t-firefly.com/product/rk3399.html\" rel=\"nofollow\">Firefly RK3399</a> platform using TensorFlow v1.7 and v1.8. The experiments were repeated 50 times at the highest CPU frequencies (2x Cortex-A72 @ 1800 MHz; 4x Cortex-A53 @ 1416 MHz). The minimum and the maximum execution times for each model are plotted below vs. the top 1 accuracy on a set of 500 images. Given that the CPU frequencies were fixed and that the CPU temperature never exceeded 40 Celsium, I guess that the large execution time variation is due to vagaries of big.LITTLE scheduling.</p>\n<p>/cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=161459\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/petewarden\">@petewarden</a></p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/6597818/39606680-80ac2e1a-4f2e-11e8-922b-1d6f884b3315.png\"><img src=\"https://user-images.githubusercontent.com/6597818/39606680-80ac2e1a-4f2e-11e8-922b-1d6f884b3315.png\" alt=\"firefly-accuracy_top1-500-tf-complete\" style=\"max-width:100%;\"></a></p>\n<p>Here's how to read the plot:</p>\n<ul>\n<li>The <em>colour</em> of a marker denotes the version of TensorFlow: v1.8 - blue, v1.7 - cyan.</li>\n<li>The <em>size</em> of a marker is proportional to the input resolution: 224 (the largest), 192, 160, 128 (the smallest).</li>\n<li>The <em>shape</em> of a marker denotes both the channel multiplier and the execution time metric:\n<ul>\n<li>Minimum execution time: 1.00 - pentagon, 0.75 - square, 0.50 - triangle-up, 0.25 - circle.</li>\n<li>Maximum execution time: 1.00 - star, 0.75 - diamond, 0.50 - triangle-down, 0.25 - octagon.</li>\n</ul>\n</li>\n</ul>\n<p><strong>NB:</strong> Roughly speaking, a shape has <strong>N</strong> corners for the channel multiplier of <strong>(N-1) * 0.25</strong>:</p>\n<ul>\n<li>5 corners for the channel multiplier of 1.00 (pentagon or star);</li>\n<li>4 corners for the channel multiplier of 0.75 (square or diamond);</li>\n<li>3 corners for the channel multiplier of 0.50 (triangle-up or triangle-down);</li>\n<li>\"no corners\" for the channel multiplier of 0.25 (circle or octagon).</li>\n</ul>", "body_text": "By the way, for ReQuEST, I've run MobileNets-v1 on the Firefly RK3399 platform using TensorFlow v1.7 and v1.8. The experiments were repeated 50 times at the highest CPU frequencies (2x Cortex-A72 @ 1800 MHz; 4x Cortex-A53 @ 1416 MHz). The minimum and the maximum execution times for each model are plotted below vs. the top 1 accuracy on a set of 500 images. Given that the CPU frequencies were fixed and that the CPU temperature never exceeded 40 Celsium, I guess that the large execution time variation is due to vagaries of big.LITTLE scheduling.\n/cc @petewarden\n\nHere's how to read the plot:\n\nThe colour of a marker denotes the version of TensorFlow: v1.8 - blue, v1.7 - cyan.\nThe size of a marker is proportional to the input resolution: 224 (the largest), 192, 160, 128 (the smallest).\nThe shape of a marker denotes both the channel multiplier and the execution time metric:\n\nMinimum execution time: 1.00 - pentagon, 0.75 - square, 0.50 - triangle-up, 0.25 - circle.\nMaximum execution time: 1.00 - star, 0.75 - diamond, 0.50 - triangle-down, 0.25 - octagon.\n\n\n\nNB: Roughly speaking, a shape has N corners for the channel multiplier of (N-1) * 0.25:\n\n5 corners for the channel multiplier of 1.00 (pentagon or star);\n4 corners for the channel multiplier of 0.75 (square or diamond);\n3 corners for the channel multiplier of 0.50 (triangle-up or triangle-down);\n\"no corners\" for the channel multiplier of 0.25 (circle or octagon).", "body": "By the way, for [ReQuEST](https://github.com/dividiti/ck-request-asplos18-mobilenets-armcl-opencl), I've run MobileNets-v1 on the [Firefly RK3399](http://en.t-firefly.com/product/rk3399.html) platform using TensorFlow v1.7 and v1.8. The experiments were repeated 50 times at the highest CPU frequencies (2x Cortex-A72 @ 1800 MHz; 4x Cortex-A53 @ 1416 MHz). The minimum and the maximum execution times for each model are plotted below vs. the top 1 accuracy on a set of 500 images. Given that the CPU frequencies were fixed and that the CPU temperature never exceeded 40 Celsium, I guess that the large execution time variation is due to vagaries of big.LITTLE scheduling.\r\n\r\n/cc @petewarden \r\n\r\n![firefly-accuracy_top1-500-tf-complete](https://user-images.githubusercontent.com/6597818/39606680-80ac2e1a-4f2e-11e8-922b-1d6f884b3315.png)\r\n\r\nHere's how to read the plot:\r\n- The _colour_ of a marker denotes the version of TensorFlow: v1.8 - blue, v1.7 - cyan.\r\n- The _size_ of a marker is proportional to the input resolution: 224 (the largest), 192, 160, 128 (the smallest).\r\n- The _shape_ of a marker denotes both the channel multiplier and the execution time metric:\r\n  - Minimum execution time: 1.00 - pentagon, 0.75 - square, 0.50 - triangle-up, 0.25 - circle.\r\n  - Maximum execution time: 1.00 - star, 0.75 - diamond, 0.50 - triangle-down, 0.25 - octagon.\r\n\r\n**NB:** Roughly speaking, a shape has **N** corners for the channel multiplier of **(N-1) * 0.25**:\r\n- 5 corners for the channel multiplier of 1.00 (pentagon or star);\r\n- 4 corners for the channel multiplier of 0.75 (square or diamond);\r\n- 3 corners for the channel multiplier of 0.50 (triangle-up or triangle-down); \r\n- \"no corners\" for the channel multiplier of 0.25 (circle or octagon)."}