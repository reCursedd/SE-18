{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7278", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7278/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7278/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7278/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7278", "id": 205475426, "node_id": "MDU6SXNzdWUyMDU0NzU0MjY=", "number": 7278, "title": "Feature request: separable convolutions in 3D", "user": {"login": "aizvorski", "id": 5302763, "node_id": "MDQ6VXNlcjUzMDI3NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/5302763?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aizvorski", "html_url": "https://github.com/aizvorski", "followers_url": "https://api.github.com/users/aizvorski/followers", "following_url": "https://api.github.com/users/aizvorski/following{/other_user}", "gists_url": "https://api.github.com/users/aizvorski/gists{/gist_id}", "starred_url": "https://api.github.com/users/aizvorski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aizvorski/subscriptions", "organizations_url": "https://api.github.com/users/aizvorski/orgs", "repos_url": "https://api.github.com/users/aizvorski/repos", "events_url": "https://api.github.com/users/aizvorski/events{/privacy}", "received_events_url": "https://api.github.com/users/aizvorski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 23, "created_at": "2017-02-06T02:28:53Z", "updated_at": "2018-10-19T04:28:14Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>I would like a <code>tf.nn.separable_conv3d</code> identical to <code>tf.nn.separable_conv2d</code> except with separability between dimentions [1,2,3] and 4, for use with 3D CNNs.</p>\n<p>Rationale: separable convolutions perform very well in 2D (see: Xception architecture <a href=\"https://arxiv.org/abs/1610.02357\" rel=\"nofollow\">https://arxiv.org/abs/1610.02357</a> ).  In 3D, the number of parameters grows even faster for non-separable convolutions, so the reduction in parameters from using separable convolutions would be relatively even bigger.  This is one of the reasons 3D networks tend to have a simpler architecture than 2D.</p>\n<p>Necessity: There doesn't seem to be any way to implement this other than in the TF core. (Suggestions?)</p>", "body_text": "I would like a tf.nn.separable_conv3d identical to tf.nn.separable_conv2d except with separability between dimentions [1,2,3] and 4, for use with 3D CNNs.\nRationale: separable convolutions perform very well in 2D (see: Xception architecture https://arxiv.org/abs/1610.02357 ).  In 3D, the number of parameters grows even faster for non-separable convolutions, so the reduction in parameters from using separable convolutions would be relatively even bigger.  This is one of the reasons 3D networks tend to have a simpler architecture than 2D.\nNecessity: There doesn't seem to be any way to implement this other than in the TF core. (Suggestions?)", "body": "I would like a `tf.nn.separable_conv3d` identical to `tf.nn.separable_conv2d` except with separability between dimentions [1,2,3] and 4, for use with 3D CNNs.\r\n\r\nRationale: separable convolutions perform very well in 2D (see: Xception architecture https://arxiv.org/abs/1610.02357 ).  In 3D, the number of parameters grows even faster for non-separable convolutions, so the reduction in parameters from using separable convolutions would be relatively even bigger.  This is one of the reasons 3D networks tend to have a simpler architecture than 2D.  \r\n\r\nNecessity: There doesn't seem to be any way to implement this other than in the TF core. (Suggestions?)"}