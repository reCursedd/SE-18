{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23708", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23708/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23708/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23708/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23708", "id": 380105343, "node_id": "MDU6SXNzdWUzODAxMDUzNDM=", "number": 23708, "title": "Can't build TensorRT 5.0.10 within Tensorflow 1.12, Tensorflow still search for libnvinfer.so.4 not 5", "user": {"login": "oscarriddle", "id": 13745902, "node_id": "MDQ6VXNlcjEzNzQ1OTAy", "avatar_url": "https://avatars0.githubusercontent.com/u/13745902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oscarriddle", "html_url": "https://github.com/oscarriddle", "followers_url": "https://api.github.com/users/oscarriddle/followers", "following_url": "https://api.github.com/users/oscarriddle/following{/other_user}", "gists_url": "https://api.github.com/users/oscarriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/oscarriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oscarriddle/subscriptions", "organizations_url": "https://api.github.com/users/oscarriddle/orgs", "repos_url": "https://api.github.com/users/oscarriddle/repos", "events_url": "https://api.github.com/users/oscarriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/oscarriddle/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "samikama", "id": 10539540, "node_id": "MDQ6VXNlcjEwNTM5NTQw", "avatar_url": "https://avatars0.githubusercontent.com/u/10539540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samikama", "html_url": "https://github.com/samikama", "followers_url": "https://api.github.com/users/samikama/followers", "following_url": "https://api.github.com/users/samikama/following{/other_user}", "gists_url": "https://api.github.com/users/samikama/gists{/gist_id}", "starred_url": "https://api.github.com/users/samikama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samikama/subscriptions", "organizations_url": "https://api.github.com/users/samikama/orgs", "repos_url": "https://api.github.com/users/samikama/repos", "events_url": "https://api.github.com/users/samikama/events{/privacy}", "received_events_url": "https://api.github.com/users/samikama/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "samikama", "id": 10539540, "node_id": "MDQ6VXNlcjEwNTM5NTQw", "avatar_url": "https://avatars0.githubusercontent.com/u/10539540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samikama", "html_url": "https://github.com/samikama", "followers_url": "https://api.github.com/users/samikama/followers", "following_url": "https://api.github.com/users/samikama/following{/other_user}", "gists_url": "https://api.github.com/users/samikama/gists{/gist_id}", "starred_url": "https://api.github.com/users/samikama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samikama/subscriptions", "organizations_url": "https://api.github.com/users/samikama/orgs", "repos_url": "https://api.github.com/users/samikama/repos", "events_url": "https://api.github.com/users/samikama/events{/privacy}", "received_events_url": "https://api.github.com/users/samikama/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-11-13T08:12:25Z", "updated_at": "2018-11-16T07:31:14Z", "closed_at": null, "author_association": "NONE", "body_html": "<p><strong>System information</strong></p>\n<ul>\n<li>OS Platform and Distribution (e.g., Linux Ubuntu 16.04): CentOS 7</li>\n<li>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: No</li>\n<li>TensorFlow installed from (source or binary): source</li>\n<li>TensorFlow version: r1.12</li>\n<li>Python version: 2.7</li>\n<li>Installed using virtualenv? pip? conda?: No</li>\n<li>Bazel version (if compiling from source): 0.15.0</li>\n<li>GCC/Compiler version (if compiling from source): 4.9.3</li>\n<li>CUDA/cuDNN version: 9.0/7.0.5</li>\n<li>GPU model and memory: TitanXP 12GB</li>\n</ul>\n<p><strong>Describe the problem</strong><br>\nSince the TensorRT 5 is released, but official latest tensorflow is unable to import TRT5, because it still searches TRT4 (libnvinfer.so.4), I manually compiled the tensorflow r1.12 with gpu and with TRT5.0.</p>\n<p>After setting the TRT5.0.10 location in ./configure, the compilation is successfully done. Then I generated the pip wheel file and pip installed it.</p>\n<p>Then I tried to import tensorflow and from tensorflow.contrib import tensorrt, still got below error:</p>\n<pre><code>$ python\nPython 2.7.13 (default, Jan  6 2017, 21:12:18) \n[GCC 4.8.5 20150623 (Red Hat 4.8.5-4)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; import tensorflow as tf\n/home/web_server/dlpy72/dlpy.tensor1.12/lib/python2.7/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.\n  from ._conv import register_converters as _register_converters\n&gt;&gt;&gt; tf.__version__\n'1.12.0'\n&gt;&gt;&gt; from tensorflow.contrib import tensorrt\n**** Failed to initialize TensorRT. This is either because the TensorRT installation path is not in LD_LIBRARY_PATH, or because you do not have it installed. If not installed, please go to https://developer.nvidia.com/tensorrt to download and install TensorRT ****\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n  File \"/home/web_server/dlpy72/dlpy.tensor1.12/lib/python2.7/site-packages/tensorflow/contrib/tensorrt/__init__.py\", line 34, in &lt;module&gt;\n    raise e\ntensorflow.python.framework.errors_impl.NotFoundError: libnvinfer.so.4: cannot open shared object file: No such file or directory\n&gt;&gt;&gt; \n\n</code></pre>\n<p>Hence the TensorRT 5 is not supported even if compiling it with tensorflow source.</p>\n<p>Any idea will be welcome.</p>\n<p><strong>Provide the exact sequence of commands / steps that you executed before running into the problem</strong></p>\n<p><strong>Any other info / logs</strong><br>\nConfiguration log:</p>\n<pre><code>$ ./configure \nWARNING: --batch mode is deprecated. Please instead explicitly shut down your Bazel server using the command \"bazel shutdown\".\nYou have bazel 0.15.0 installed.\nDo you wish to build TensorFlow with Apache Ignite support? [Y/n]: n\nNo Apache Ignite support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with XLA JIT support? [Y/n]: n\nNo XLA JIT support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with OpenCL SYCL support? [y/N]: n\nNo OpenCL SYCL support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with ROCm support? [y/N]: n\nNo ROCm support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with CUDA support? [y/N]: y\nCUDA support will be enabled for TensorFlow.\n\nPlease specify the CUDA SDK version you want to use. [Leave empty to default to CUDA 9.0]: \n\n\nPlease specify the location where CUDA 9.0 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: /home/web_server/xiaolun/cuda-9.0\n\n\nPlease specify the cuDNN version you want to use. [Leave empty to default to cuDNN 7]: \n\n\nDo you wish to build TensorFlow with TensorRT support? [y/N]: y\nTensorRT support will be enabled for TensorFlow.\n\nPlease specify the location where TensorRT is installed. [Default is /usr/lib/x86_64-linux-gnu]:/home/web_server/xiaolun/TensorRT-5.0.0.10\n\n\nPlease specify the NCCL version you want to use. If NCCL 2.2 is not installed, then you can use version 1.3 that can be fetched automatically but it may have worse performance with multiple GPUs. [Default is 2.2]: 2.3\n\n\nAssuming NCCL header path is /media/disk1/fordata/web_server/project/xiaolun/nccl_2.3.7/lib/../include/nccl.h\nPlease specify a list of comma-separated Cuda compute capabilities you want to build with.\nYou can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.\nPlease note that each additional compute capability significantly increases your build time and binary size. [Default is: 6.1]: \n\n\nDo you want to use clang as CUDA compiler? [y/N]: n\nnvcc will be used as CUDA compiler.\n\nPlease specify which gcc should be used by nvcc as the host compiler. [Default is /home/web_server/gcc-4.9.3/bin/gcc]: \n\n\nDo you wish to build TensorFlow with MPI support? [y/N]: n\nNo MPI support will be enabled for TensorFlow.\n\nPlease specify optimization flags to use during compilation when bazel option \"--config=opt\" is specified [Default is -march=native]: \n\n\nWould you like to interactively configure ./WORKSPACE for Android builds? [y/N]: n\nNot configuring the WORKSPACE for Android builds.\n\nPreconfigured Bazel build configs. You can use any of the below by adding \"--config=&lt;&gt;\" to your build command. See tools/bazel.rc for more details.\n\t--config=mkl         \t# Build with MKL support.\n\t--config=monolithic  \t# Config for mostly static monolithic build.\n\t--config=gdr         \t# Build with GDR support.\n\t--config=verbs       \t# Build with libverbs support.\n\t--config=ngraph      \t# Build with Intel nGraph support.\nConfiguration finished\n\n</code></pre>\n<p>Compilation commands:<br>\nbazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package<br>\n./bazel-bin/tensorflow/tools/pip_package/build_pip_package ./mnt</p>", "body_text": "System information\n\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): CentOS 7\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: No\nTensorFlow installed from (source or binary): source\nTensorFlow version: r1.12\nPython version: 2.7\nInstalled using virtualenv? pip? conda?: No\nBazel version (if compiling from source): 0.15.0\nGCC/Compiler version (if compiling from source): 4.9.3\nCUDA/cuDNN version: 9.0/7.0.5\nGPU model and memory: TitanXP 12GB\n\nDescribe the problem\nSince the TensorRT 5 is released, but official latest tensorflow is unable to import TRT5, because it still searches TRT4 (libnvinfer.so.4), I manually compiled the tensorflow r1.12 with gpu and with TRT5.0.\nAfter setting the TRT5.0.10 location in ./configure, the compilation is successfully done. Then I generated the pip wheel file and pip installed it.\nThen I tried to import tensorflow and from tensorflow.contrib import tensorrt, still got below error:\n$ python\nPython 2.7.13 (default, Jan  6 2017, 21:12:18) \n[GCC 4.8.5 20150623 (Red Hat 4.8.5-4)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import tensorflow as tf\n/home/web_server/dlpy72/dlpy.tensor1.12/lib/python2.7/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.\n  from ._conv import register_converters as _register_converters\n>>> tf.__version__\n'1.12.0'\n>>> from tensorflow.contrib import tensorrt\n**** Failed to initialize TensorRT. This is either because the TensorRT installation path is not in LD_LIBRARY_PATH, or because you do not have it installed. If not installed, please go to https://developer.nvidia.com/tensorrt to download and install TensorRT ****\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/home/web_server/dlpy72/dlpy.tensor1.12/lib/python2.7/site-packages/tensorflow/contrib/tensorrt/__init__.py\", line 34, in <module>\n    raise e\ntensorflow.python.framework.errors_impl.NotFoundError: libnvinfer.so.4: cannot open shared object file: No such file or directory\n>>> \n\n\nHence the TensorRT 5 is not supported even if compiling it with tensorflow source.\nAny idea will be welcome.\nProvide the exact sequence of commands / steps that you executed before running into the problem\nAny other info / logs\nConfiguration log:\n$ ./configure \nWARNING: --batch mode is deprecated. Please instead explicitly shut down your Bazel server using the command \"bazel shutdown\".\nYou have bazel 0.15.0 installed.\nDo you wish to build TensorFlow with Apache Ignite support? [Y/n]: n\nNo Apache Ignite support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with XLA JIT support? [Y/n]: n\nNo XLA JIT support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with OpenCL SYCL support? [y/N]: n\nNo OpenCL SYCL support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with ROCm support? [y/N]: n\nNo ROCm support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with CUDA support? [y/N]: y\nCUDA support will be enabled for TensorFlow.\n\nPlease specify the CUDA SDK version you want to use. [Leave empty to default to CUDA 9.0]: \n\n\nPlease specify the location where CUDA 9.0 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: /home/web_server/xiaolun/cuda-9.0\n\n\nPlease specify the cuDNN version you want to use. [Leave empty to default to cuDNN 7]: \n\n\nDo you wish to build TensorFlow with TensorRT support? [y/N]: y\nTensorRT support will be enabled for TensorFlow.\n\nPlease specify the location where TensorRT is installed. [Default is /usr/lib/x86_64-linux-gnu]:/home/web_server/xiaolun/TensorRT-5.0.0.10\n\n\nPlease specify the NCCL version you want to use. If NCCL 2.2 is not installed, then you can use version 1.3 that can be fetched automatically but it may have worse performance with multiple GPUs. [Default is 2.2]: 2.3\n\n\nAssuming NCCL header path is /media/disk1/fordata/web_server/project/xiaolun/nccl_2.3.7/lib/../include/nccl.h\nPlease specify a list of comma-separated Cuda compute capabilities you want to build with.\nYou can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.\nPlease note that each additional compute capability significantly increases your build time and binary size. [Default is: 6.1]: \n\n\nDo you want to use clang as CUDA compiler? [y/N]: n\nnvcc will be used as CUDA compiler.\n\nPlease specify which gcc should be used by nvcc as the host compiler. [Default is /home/web_server/gcc-4.9.3/bin/gcc]: \n\n\nDo you wish to build TensorFlow with MPI support? [y/N]: n\nNo MPI support will be enabled for TensorFlow.\n\nPlease specify optimization flags to use during compilation when bazel option \"--config=opt\" is specified [Default is -march=native]: \n\n\nWould you like to interactively configure ./WORKSPACE for Android builds? [y/N]: n\nNot configuring the WORKSPACE for Android builds.\n\nPreconfigured Bazel build configs. You can use any of the below by adding \"--config=<>\" to your build command. See tools/bazel.rc for more details.\n\t--config=mkl         \t# Build with MKL support.\n\t--config=monolithic  \t# Config for mostly static monolithic build.\n\t--config=gdr         \t# Build with GDR support.\n\t--config=verbs       \t# Build with libverbs support.\n\t--config=ngraph      \t# Build with Intel nGraph support.\nConfiguration finished\n\n\nCompilation commands:\nbazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package\n./bazel-bin/tensorflow/tools/pip_package/build_pip_package ./mnt", "body": "**System information**\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04): CentOS 7\r\n- Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: No\r\n- TensorFlow installed from (source or binary): source \r\n- TensorFlow version: r1.12\r\n- Python version: 2.7\r\n- Installed using virtualenv? pip? conda?: No\r\n- Bazel version (if compiling from source): 0.15.0\r\n- GCC/Compiler version (if compiling from source): 4.9.3\r\n- CUDA/cuDNN version: 9.0/7.0.5\r\n- GPU model and memory: TitanXP 12GB\r\n\r\n\r\n\r\n**Describe the problem**\r\nSince the TensorRT 5 is released, but official latest tensorflow is unable to import TRT5, because it still searches TRT4 (libnvinfer.so.4), I manually compiled the tensorflow r1.12 with gpu and with TRT5.0.\r\n\r\nAfter setting the TRT5.0.10 location in ./configure, the compilation is successfully done. Then I generated the pip wheel file and pip installed it.\r\n\r\nThen I tried to import tensorflow and from tensorflow.contrib import tensorrt, still got below error:\r\n```\r\n$ python\r\nPython 2.7.13 (default, Jan  6 2017, 21:12:18) \r\n[GCC 4.8.5 20150623 (Red Hat 4.8.5-4)] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import tensorflow as tf\r\n/home/web_server/dlpy72/dlpy.tensor1.12/lib/python2.7/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.\r\n  from ._conv import register_converters as _register_converters\r\n>>> tf.__version__\r\n'1.12.0'\r\n>>> from tensorflow.contrib import tensorrt\r\n**** Failed to initialize TensorRT. This is either because the TensorRT installation path is not in LD_LIBRARY_PATH, or because you do not have it installed. If not installed, please go to https://developer.nvidia.com/tensorrt to download and install TensorRT ****\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/web_server/dlpy72/dlpy.tensor1.12/lib/python2.7/site-packages/tensorflow/contrib/tensorrt/__init__.py\", line 34, in <module>\r\n    raise e\r\ntensorflow.python.framework.errors_impl.NotFoundError: libnvinfer.so.4: cannot open shared object file: No such file or directory\r\n>>> \r\n\r\n```\r\nHence the TensorRT 5 is not supported even if compiling it with tensorflow source.\r\n\r\nAny idea will be welcome.\r\n\r\n**Provide the exact sequence of commands / steps that you executed before running into the problem**\r\n\r\n\r\n**Any other info / logs**\r\nConfiguration log:\r\n```\r\n$ ./configure \r\nWARNING: --batch mode is deprecated. Please instead explicitly shut down your Bazel server using the command \"bazel shutdown\".\r\nYou have bazel 0.15.0 installed.\r\nDo you wish to build TensorFlow with Apache Ignite support? [Y/n]: n\r\nNo Apache Ignite support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with XLA JIT support? [Y/n]: n\r\nNo XLA JIT support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with OpenCL SYCL support? [y/N]: n\r\nNo OpenCL SYCL support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with ROCm support? [y/N]: n\r\nNo ROCm support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with CUDA support? [y/N]: y\r\nCUDA support will be enabled for TensorFlow.\r\n\r\nPlease specify the CUDA SDK version you want to use. [Leave empty to default to CUDA 9.0]: \r\n\r\n\r\nPlease specify the location where CUDA 9.0 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: /home/web_server/xiaolun/cuda-9.0\r\n\r\n\r\nPlease specify the cuDNN version you want to use. [Leave empty to default to cuDNN 7]: \r\n\r\n\r\nDo you wish to build TensorFlow with TensorRT support? [y/N]: y\r\nTensorRT support will be enabled for TensorFlow.\r\n\r\nPlease specify the location where TensorRT is installed. [Default is /usr/lib/x86_64-linux-gnu]:/home/web_server/xiaolun/TensorRT-5.0.0.10\r\n\r\n\r\nPlease specify the NCCL version you want to use. If NCCL 2.2 is not installed, then you can use version 1.3 that can be fetched automatically but it may have worse performance with multiple GPUs. [Default is 2.2]: 2.3\r\n\r\n\r\nAssuming NCCL header path is /media/disk1/fordata/web_server/project/xiaolun/nccl_2.3.7/lib/../include/nccl.h\r\nPlease specify a list of comma-separated Cuda compute capabilities you want to build with.\r\nYou can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.\r\nPlease note that each additional compute capability significantly increases your build time and binary size. [Default is: 6.1]: \r\n\r\n\r\nDo you want to use clang as CUDA compiler? [y/N]: n\r\nnvcc will be used as CUDA compiler.\r\n\r\nPlease specify which gcc should be used by nvcc as the host compiler. [Default is /home/web_server/gcc-4.9.3/bin/gcc]: \r\n\r\n\r\nDo you wish to build TensorFlow with MPI support? [y/N]: n\r\nNo MPI support will be enabled for TensorFlow.\r\n\r\nPlease specify optimization flags to use during compilation when bazel option \"--config=opt\" is specified [Default is -march=native]: \r\n\r\n\r\nWould you like to interactively configure ./WORKSPACE for Android builds? [y/N]: n\r\nNot configuring the WORKSPACE for Android builds.\r\n\r\nPreconfigured Bazel build configs. You can use any of the below by adding \"--config=<>\" to your build command. See tools/bazel.rc for more details.\r\n\t--config=mkl         \t# Build with MKL support.\r\n\t--config=monolithic  \t# Config for mostly static monolithic build.\r\n\t--config=gdr         \t# Build with GDR support.\r\n\t--config=verbs       \t# Build with libverbs support.\r\n\t--config=ngraph      \t# Build with Intel nGraph support.\r\nConfiguration finished\r\n\r\n```\r\nCompilation commands:\r\nbazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package\r\n./bazel-bin/tensorflow/tools/pip_package/build_pip_package ./mnt\r\n"}