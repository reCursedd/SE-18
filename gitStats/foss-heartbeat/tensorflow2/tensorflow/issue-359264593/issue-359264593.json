{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22221", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22221/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22221/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22221/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22221", "id": 359264593, "node_id": "MDU6SXNzdWUzNTkyNjQ1OTM=", "number": 22221, "title": "Threading data out of one while loop into another interferes with gradients", "user": {"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-09-11T23:50:15Z", "updated_at": "2018-09-18T16:36:51Z", "closed_at": "2018-09-18T16:02:01Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Mac OS 10.13.6</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: <code>b'v1.9.0-rc2-3217-g8e5c118ce8' 1.10.0</code></li>\n<li><strong>Python version</strong>: 3.6.2</li>\n<li><strong>Bazel version (if compiling from source)</strong>: <code>0.15.2-homebrew</code></li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: <code>Apple LLVM version 9.1.0 (clang-902.0.39.2)</code></li>\n<li><strong>CUDA/cuDNN version</strong>: n/a</li>\n<li><strong>GPU model and memory</strong>: n/a</li>\n<li><strong>Exact command to reproduce</strong>: Run included script</li>\n<li><strong>Mobile device</strong>: n/a</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I have some code which</p>\n<ol>\n<li>Generates some data using an inference-only <code>tf.while_loop</code>.</li>\n<li>Uses a second while loop to run several minibatches of Adam, using the data from the first loop.</li>\n</ol>\n<p>Both while loops have <code>back_prop=False</code>.  The second loop computes gradients, but these are used only inside the second loop (which includes running the <code>train_op</code>).  I use <code>tf.stop_gradients</code> to prevent gradients from flowing backwards from the second loop to the first...but to no avail:</p>\n<pre><code>Traceback (most recent call last):\n  File \"./while-bug\", line 26, in &lt;module&gt;\n    back_prop=False)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 3281, in while_loop\n    return_same_structure)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 3001, in BuildLoop\n    pred, body, original_loop_vars, loop_vars, shape_invariants)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 2936, in _BuildLoop\n    body_result = body(*packed_vars_for_body)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 3245, in &lt;lambda&gt;\n    body = lambda i, lv: (i + 1, orig_body(lv))\n  File \"./while-bug\", line 16, in body\n    train = tf.train.AdamOptimizer(learning_rate=1e-2).minimize(loss)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/training/optimizer.py\", line 401, in minimize\n    grad_loss=grad_loss)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/training/optimizer.py\", line 517, in compute_gradients\n    colocate_gradients_with_ops=colocate_gradients_with_ops)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/gradients_impl.py\", line 610, in gradients\n    gate_gradients, aggregation_method, stop_gradients)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/gradients_impl.py\", line 674, in _GradientsHelper\n    to_ops, from_ops, colocate_gradients_with_ops, func_graphs, xs)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/gradients_impl.py\", line 204, in _PendingCount\n    between_op_list, between_ops, colocate_gradients_with_ops)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 1442, in MaybeCreateControlFlowState\n    loop_state.AddWhileContext(op, between_op_list, between_ops)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 1247, in AddWhileContext\n    grad_state = GradLoopState(forward_ctxt, outer_grad_state)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 824, in __init__\n    cnt, forward_index = forward_ctxt.AddForwardLoopCounter(outer_grad_state)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 2580, in AddForwardLoopCounter\n    name=\"f_count\")\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 249, in _Enter\n    data, frame_name, is_constant, parallel_iterations, name=name)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/gen_control_flow_ops.py\", line 179, in enter\n    parallel_iterations=parallel_iterations, name=name)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\n    op_def=op_def)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py\", line 488, in new_func\n    return func(*args, **kwargs)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 3254, in create_op\n    op_def=op_def)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 1787, in __init__\n    self._control_flow_post_processing()\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 1796, in _control_flow_post_processing\n    control_flow_util.CheckInputFromValidContext(self, input_tensor.op)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_util.py\", line 322, in CheckInputFromValidContext\n    raise ValueError(error_msg + \" See info log for more details.\")\nValueError: Cannot use 'while_1/gradients/f_count_1' as input to 'while_1/gradients/f_count' because they are in different while loops. See info log for more details.\n</code></pre>\n<p>(Caveat: line numbers for the above stacktrace may be slightly wrong, since my TF has some debug print statements.)</p>\n<p>I've traced the problem to <code>ops/gradients_impl.py:_PendingCount</code> or the surrounding code.  <code>_PendingCount</code> seems to trace right through <code>tf.stop_gradients</code>.  I'm not sure where the right fix is, though, so could use some control flow expert help.</p>\n<h3>Source code / logs</h3>\n<p>Here's a minimized test case:</p>\n<pre><code>import tensorflow as tf\n\n# First while loop\nrollouts = tf.while_loop(\n    cond=lambda _: True,\n    body=lambda _: tf.get_variable('b', []),\n    loop_vars=[tf.zeros([])],\n    maximum_iterations=1,\n    back_prop=False)\nrollouts = tf.stop_gradient(rollouts)\n\ndef body(i):\n    loss = tf.stop_gradient(rollouts)\n    train = tf.train.AdamOptimizer(learning_rate=1e-2).minimize(loss)\n    with tf.control_dependencies([train]):\n        return i + 1\n\n# Second while loop.  Crashes since it thinks the gradients depend on\n# something from the previous while loop.\ntf.while_loop(\n    cond=lambda _: True,\n    body=body, maximum_iterations=1, parallel_iterations=1,\n    loop_vars=(tf.zeros((), dtype=tf.int32),),\n    back_prop=False)\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Mac OS 10.13.6\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): b'v1.9.0-rc2-3217-g8e5c118ce8' 1.10.0\nPython version: 3.6.2\nBazel version (if compiling from source): 0.15.2-homebrew\nGCC/Compiler version (if compiling from source): Apple LLVM version 9.1.0 (clang-902.0.39.2)\nCUDA/cuDNN version: n/a\nGPU model and memory: n/a\nExact command to reproduce: Run included script\nMobile device: n/a\n\nDescribe the problem\nI have some code which\n\nGenerates some data using an inference-only tf.while_loop.\nUses a second while loop to run several minibatches of Adam, using the data from the first loop.\n\nBoth while loops have back_prop=False.  The second loop computes gradients, but these are used only inside the second loop (which includes running the train_op).  I use tf.stop_gradients to prevent gradients from flowing backwards from the second loop to the first...but to no avail:\nTraceback (most recent call last):\n  File \"./while-bug\", line 26, in <module>\n    back_prop=False)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 3281, in while_loop\n    return_same_structure)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 3001, in BuildLoop\n    pred, body, original_loop_vars, loop_vars, shape_invariants)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 2936, in _BuildLoop\n    body_result = body(*packed_vars_for_body)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 3245, in <lambda>\n    body = lambda i, lv: (i + 1, orig_body(lv))\n  File \"./while-bug\", line 16, in body\n    train = tf.train.AdamOptimizer(learning_rate=1e-2).minimize(loss)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/training/optimizer.py\", line 401, in minimize\n    grad_loss=grad_loss)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/training/optimizer.py\", line 517, in compute_gradients\n    colocate_gradients_with_ops=colocate_gradients_with_ops)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/gradients_impl.py\", line 610, in gradients\n    gate_gradients, aggregation_method, stop_gradients)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/gradients_impl.py\", line 674, in _GradientsHelper\n    to_ops, from_ops, colocate_gradients_with_ops, func_graphs, xs)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/gradients_impl.py\", line 204, in _PendingCount\n    between_op_list, between_ops, colocate_gradients_with_ops)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 1442, in MaybeCreateControlFlowState\n    loop_state.AddWhileContext(op, between_op_list, between_ops)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 1247, in AddWhileContext\n    grad_state = GradLoopState(forward_ctxt, outer_grad_state)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 824, in __init__\n    cnt, forward_index = forward_ctxt.AddForwardLoopCounter(outer_grad_state)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 2580, in AddForwardLoopCounter\n    name=\"f_count\")\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 249, in _Enter\n    data, frame_name, is_constant, parallel_iterations, name=name)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/gen_control_flow_ops.py\", line 179, in enter\n    parallel_iterations=parallel_iterations, name=name)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\n    op_def=op_def)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py\", line 488, in new_func\n    return func(*args, **kwargs)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 3254, in create_op\n    op_def=op_def)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 1787, in __init__\n    self._control_flow_post_processing()\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 1796, in _control_flow_post_processing\n    control_flow_util.CheckInputFromValidContext(self, input_tensor.op)\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_util.py\", line 322, in CheckInputFromValidContext\n    raise ValueError(error_msg + \" See info log for more details.\")\nValueError: Cannot use 'while_1/gradients/f_count_1' as input to 'while_1/gradients/f_count' because they are in different while loops. See info log for more details.\n\n(Caveat: line numbers for the above stacktrace may be slightly wrong, since my TF has some debug print statements.)\nI've traced the problem to ops/gradients_impl.py:_PendingCount or the surrounding code.  _PendingCount seems to trace right through tf.stop_gradients.  I'm not sure where the right fix is, though, so could use some control flow expert help.\nSource code / logs\nHere's a minimized test case:\nimport tensorflow as tf\n\n# First while loop\nrollouts = tf.while_loop(\n    cond=lambda _: True,\n    body=lambda _: tf.get_variable('b', []),\n    loop_vars=[tf.zeros([])],\n    maximum_iterations=1,\n    back_prop=False)\nrollouts = tf.stop_gradient(rollouts)\n\ndef body(i):\n    loss = tf.stop_gradient(rollouts)\n    train = tf.train.AdamOptimizer(learning_rate=1e-2).minimize(loss)\n    with tf.control_dependencies([train]):\n        return i + 1\n\n# Second while loop.  Crashes since it thinks the gradients depend on\n# something from the previous while loop.\ntf.while_loop(\n    cond=lambda _: True,\n    body=body, maximum_iterations=1, parallel_iterations=1,\n    loop_vars=(tf.zeros((), dtype=tf.int32),),\n    back_prop=False)", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Mac OS 10.13.6\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: `b'v1.9.0-rc2-3217-g8e5c118ce8' 1.10.0`\r\n- **Python version**: 3.6.2\r\n- **Bazel version (if compiling from source)**: `0.15.2-homebrew`\r\n- **GCC/Compiler version (if compiling from source)**: `Apple LLVM version 9.1.0 (clang-902.0.39.2)`\r\n- **CUDA/cuDNN version**: n/a\r\n- **GPU model and memory**: n/a\r\n- **Exact command to reproduce**: Run included script\r\n- **Mobile device**: n/a\r\n\r\n### Describe the problem\r\nI have some code which\r\n\r\n1. Generates some data using an inference-only `tf.while_loop`.\r\n2. Uses a second while loop to run several minibatches of Adam, using the data from the first loop.\r\n\r\nBoth while loops have `back_prop=False`.  The second loop computes gradients, but these are used only inside the second loop (which includes running the `train_op`).  I use `tf.stop_gradients` to prevent gradients from flowing backwards from the second loop to the first...but to no avail:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"./while-bug\", line 26, in <module>\r\n    back_prop=False)\r\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 3281, in while_loop\r\n    return_same_structure)\r\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 3001, in BuildLoop\r\n    pred, body, original_loop_vars, loop_vars, shape_invariants)\r\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 2936, in _BuildLoop\r\n    body_result = body(*packed_vars_for_body)\r\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 3245, in <lambda>\r\n    body = lambda i, lv: (i + 1, orig_body(lv))\r\n  File \"./while-bug\", line 16, in body\r\n    train = tf.train.AdamOptimizer(learning_rate=1e-2).minimize(loss)\r\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/training/optimizer.py\", line 401, in minimize\r\n    grad_loss=grad_loss)\r\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/training/optimizer.py\", line 517, in compute_gradients\r\n    colocate_gradients_with_ops=colocate_gradients_with_ops)\r\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/gradients_impl.py\", line 610, in gradients\r\n    gate_gradients, aggregation_method, stop_gradients)\r\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/gradients_impl.py\", line 674, in _GradientsHelper\r\n    to_ops, from_ops, colocate_gradients_with_ops, func_graphs, xs)\r\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/gradients_impl.py\", line 204, in _PendingCount\r\n    between_op_list, between_ops, colocate_gradients_with_ops)\r\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 1442, in MaybeCreateControlFlowState\r\n    loop_state.AddWhileContext(op, between_op_list, between_ops)\r\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 1247, in AddWhileContext\r\n    grad_state = GradLoopState(forward_ctxt, outer_grad_state)\r\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 824, in __init__\r\n    cnt, forward_index = forward_ctxt.AddForwardLoopCounter(outer_grad_state)\r\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 2580, in AddForwardLoopCounter\r\n    name=\"f_count\")\r\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_ops.py\", line 249, in _Enter\r\n    data, frame_name, is_constant, parallel_iterations, name=name)\r\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/gen_control_flow_ops.py\", line 179, in enter\r\n    parallel_iterations=parallel_iterations, name=name)\r\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\r\n    op_def=op_def)\r\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py\", line 488, in new_func\r\n    return func(*args, **kwargs)\r\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 3254, in create_op\r\n    op_def=op_def)\r\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 1787, in __init__\r\n    self._control_flow_post_processing()\r\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 1796, in _control_flow_post_processing\r\n    control_flow_util.CheckInputFromValidContext(self, input_tensor.op)\r\n  File \"/Users/irving/anaconda/envs/openai/lib/python3.6/site-packages/tensorflow/python/ops/control_flow_util.py\", line 322, in CheckInputFromValidContext\r\n    raise ValueError(error_msg + \" See info log for more details.\")\r\nValueError: Cannot use 'while_1/gradients/f_count_1' as input to 'while_1/gradients/f_count' because they are in different while loops. See info log for more details.\r\n```\r\n\r\n(Caveat: line numbers for the above stacktrace may be slightly wrong, since my TF has some debug print statements.)\r\n\r\nI've traced the problem to `ops/gradients_impl.py:_PendingCount` or the surrounding code.  `_PendingCount` seems to trace right through `tf.stop_gradients`.  I'm not sure where the right fix is, though, so could use some control flow expert help.\r\n\r\n### Source code / logs\r\n\r\nHere's a minimized test case:\r\n\r\n```\r\nimport tensorflow as tf\r\n\r\n# First while loop\r\nrollouts = tf.while_loop(\r\n    cond=lambda _: True,\r\n    body=lambda _: tf.get_variable('b', []),\r\n    loop_vars=[tf.zeros([])],\r\n    maximum_iterations=1,\r\n    back_prop=False)\r\nrollouts = tf.stop_gradient(rollouts)\r\n\r\ndef body(i):\r\n    loss = tf.stop_gradient(rollouts)\r\n    train = tf.train.AdamOptimizer(learning_rate=1e-2).minimize(loss)\r\n    with tf.control_dependencies([train]):\r\n        return i + 1\r\n\r\n# Second while loop.  Crashes since it thinks the gradients depend on\r\n# something from the previous while loop.\r\ntf.while_loop(\r\n    cond=lambda _: True,\r\n    body=body, maximum_iterations=1, parallel_iterations=1,\r\n    loop_vars=(tf.zeros((), dtype=tf.int32),),\r\n    back_prop=False)\r\n```"}