{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/265027853", "html_url": "https://github.com/tensorflow/tensorflow/issues/6100#issuecomment-265027853", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6100", "id": 265027853, "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTAyNzg1Mw==", "user": {"login": "oxrider", "id": 4476557, "node_id": "MDQ6VXNlcjQ0NzY1NTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/4476557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oxrider", "html_url": "https://github.com/oxrider", "followers_url": "https://api.github.com/users/oxrider/followers", "following_url": "https://api.github.com/users/oxrider/following{/other_user}", "gists_url": "https://api.github.com/users/oxrider/gists{/gist_id}", "starred_url": "https://api.github.com/users/oxrider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oxrider/subscriptions", "organizations_url": "https://api.github.com/users/oxrider/orgs", "repos_url": "https://api.github.com/users/oxrider/repos", "events_url": "https://api.github.com/users/oxrider/events{/privacy}", "received_events_url": "https://api.github.com/users/oxrider/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-06T00:54:43Z", "updated_at": "2016-12-06T06:18:22Z", "author_association": "NONE", "body_html": "<p>I'm very sorry about the typo. The loss function should look like this:</p>\n<pre><code>def func_loss(y_true, y_pred):\n\treturn -K.mean(K.prod(K.cast(K.argmax(y_pred, axis=1), K.floatx()) - 1.0, K.cast(K.argmax(y_true, axis=1), K.floatx()) - 1.0))\n</code></pre>\n<p>in which both <code>K.cast</code>s are parameters of <code>K.prod</code>.<br>\nThe error message looks the same:</p>\n<blockquote>\n<p>Traceback (most recent call last):<br>\nFile \"\", line 1, in <br>\nFile \"/usr/local/lib/python2.7/dist-packages/keras/models.py\", line 547, in compile<br>\n**kwargs)<br>\nFile \"/usr/local/lib/python2.7/dist-packages/keras/engine/training.py\", line 622, in compile<br>\nsample_weight, mask)<br>\nFile \"/usr/local/lib/python2.7/dist-packages/keras/engine/training.py\", line 324, in weighted<br>\nscore_array = fn(y_true, y_pred)<br>\nFile \"\", line 2, in func_loss<br>\nFile \"/usr/local/lib/python2.7/dist-packages/keras/backend/tensorflow_backend.py\", line 464, in prod<br>\naxis = _normalize_axis(axis, ndim(x))<br>\nFile \"/usr/local/lib/python2.7/dist-packages/keras/backend/tensorflow_backend.py\", line 435, in _normalize_axis<br>\nif axis is not None and axis &lt; 0:<br>\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 547, in <strong>nonzero</strong><br>\nraise TypeError(\"Using a <code>tf.Tensor</code> as a Python <code>bool</code> is not allowed. \"<br>\nTypeError: Using a <code>tf.Tensor</code> as a Python <code>bool</code> is not allowed. Use <code>if t is not None:</code> instead of <code>if t:</code> to test if a tensor is defined, and use TensorFlow ops such as tf.cond to execute subgraphs conditioned on the value of a tensor.</p>\n</blockquote>", "body_text": "I'm very sorry about the typo. The loss function should look like this:\ndef func_loss(y_true, y_pred):\n\treturn -K.mean(K.prod(K.cast(K.argmax(y_pred, axis=1), K.floatx()) - 1.0, K.cast(K.argmax(y_true, axis=1), K.floatx()) - 1.0))\n\nin which both K.casts are parameters of K.prod.\nThe error message looks the same:\n\nTraceback (most recent call last):\nFile \"\", line 1, in \nFile \"/usr/local/lib/python2.7/dist-packages/keras/models.py\", line 547, in compile\n**kwargs)\nFile \"/usr/local/lib/python2.7/dist-packages/keras/engine/training.py\", line 622, in compile\nsample_weight, mask)\nFile \"/usr/local/lib/python2.7/dist-packages/keras/engine/training.py\", line 324, in weighted\nscore_array = fn(y_true, y_pred)\nFile \"\", line 2, in func_loss\nFile \"/usr/local/lib/python2.7/dist-packages/keras/backend/tensorflow_backend.py\", line 464, in prod\naxis = _normalize_axis(axis, ndim(x))\nFile \"/usr/local/lib/python2.7/dist-packages/keras/backend/tensorflow_backend.py\", line 435, in _normalize_axis\nif axis is not None and axis < 0:\nFile \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 547, in nonzero\nraise TypeError(\"Using a tf.Tensor as a Python bool is not allowed. \"\nTypeError: Using a tf.Tensor as a Python bool is not allowed. Use if t is not None: instead of if t: to test if a tensor is defined, and use TensorFlow ops such as tf.cond to execute subgraphs conditioned on the value of a tensor.", "body": "I'm very sorry about the typo. The loss function should look like this: \r\n```\r\ndef func_loss(y_true, y_pred):\r\n\treturn -K.mean(K.prod(K.cast(K.argmax(y_pred, axis=1), K.floatx()) - 1.0, K.cast(K.argmax(y_true, axis=1), K.floatx()) - 1.0))\r\n```\r\nin which both `K.cast`s are parameters of `K.prod`.\r\nThe error message looks the same: \r\n\r\n> Traceback (most recent call last):\r\n>   File \"<stdin>\", line 1, in <module>\r\n>   File \"/usr/local/lib/python2.7/dist-packages/keras/models.py\", line 547, in compile\r\n>     **kwargs)\r\n>   File \"/usr/local/lib/python2.7/dist-packages/keras/engine/training.py\", line 622, in compile\r\n>     sample_weight, mask)\r\n>   File \"/usr/local/lib/python2.7/dist-packages/keras/engine/training.py\", line 324, in weighted\r\n>     score_array = fn(y_true, y_pred)\r\n>   File \"<stdin>\", line 2, in func_loss\r\n>   File \"/usr/local/lib/python2.7/dist-packages/keras/backend/tensorflow_backend.py\", line 464, in prod\r\n>     axis = _normalize_axis(axis, ndim(x))\r\n>   File \"/usr/local/lib/python2.7/dist-packages/keras/backend/tensorflow_backend.py\", line 435, in _normalize_axis\r\n>     if axis is not None and axis < 0:\r\n>   File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 547, in __nonzero__\r\n>     raise TypeError(\"Using a `tf.Tensor` as a Python `bool` is not allowed. \"\r\n> TypeError: Using a `tf.Tensor` as a Python `bool` is not allowed. Use `if t is not None:` instead of `if t:` to test if a tensor is defined, and use TensorFlow ops such as tf.cond to execute subgraphs conditioned on the value of a tensor.\r\n> \r\n"}