{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/294961004", "html_url": "https://github.com/tensorflow/tensorflow/issues/9294#issuecomment-294961004", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9294", "id": 294961004, "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDk2MTAwNA==", "user": {"login": "Engineero", "id": 7176289, "node_id": "MDQ6VXNlcjcxNzYyODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/7176289?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Engineero", "html_url": "https://github.com/Engineero", "followers_url": "https://api.github.com/users/Engineero/followers", "following_url": "https://api.github.com/users/Engineero/following{/other_user}", "gists_url": "https://api.github.com/users/Engineero/gists{/gist_id}", "starred_url": "https://api.github.com/users/Engineero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Engineero/subscriptions", "organizations_url": "https://api.github.com/users/Engineero/orgs", "repos_url": "https://api.github.com/users/Engineero/repos", "events_url": "https://api.github.com/users/Engineero/events{/privacy}", "received_events_url": "https://api.github.com/users/Engineero/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-18T19:56:07Z", "updated_at": "2017-04-18T20:52:41Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7141343\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/kevinashaw\">@kevinashaw</a>, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1794715\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ebrevdo\">@ebrevdo</a>, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=20959853\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/drpngx\">@drpngx</a>, I just ran across the same problem. My concern is that <code>state = tf.zeros([batch_size, lstm_size])</code> might not capture what needs to be captured. In the current API, the <code>lstm_state</code> is a tuple of <code>(c, h)</code> or <code>(memory, output)</code>, which should have size <code>[lstm_size, 2]</code>. Would this then require us to write <code>state = tf.zeros([batch_size, lstm_size, 2])</code>?</p>\n<p>I am working through this as I type this. So far I have not quite hit on the solution.</p>\n<p><strong>Edit:</strong> perhaps <code>state = lstm.zero_state(batch_size, dtype=tf.float32)</code>, or some other value for <code>dtype</code>? This creates a zeroed-out state tensor given the LSTM's existing state size, shape, etc.</p>", "body_text": "@kevinashaw, @ebrevdo, @drpngx, I just ran across the same problem. My concern is that state = tf.zeros([batch_size, lstm_size]) might not capture what needs to be captured. In the current API, the lstm_state is a tuple of (c, h) or (memory, output), which should have size [lstm_size, 2]. Would this then require us to write state = tf.zeros([batch_size, lstm_size, 2])?\nI am working through this as I type this. So far I have not quite hit on the solution.\nEdit: perhaps state = lstm.zero_state(batch_size, dtype=tf.float32), or some other value for dtype? This creates a zeroed-out state tensor given the LSTM's existing state size, shape, etc.", "body": "@kevinashaw, @ebrevdo, @drpngx, I just ran across the same problem. My concern is that `state = tf.zeros([batch_size, lstm_size])` might not capture what needs to be captured. In the current API, the `lstm_state` is a tuple of `(c, h)` or `(memory, output)`, which should have size `[lstm_size, 2]`. Would this then require us to write `state = tf.zeros([batch_size, lstm_size, 2])`?\r\n\r\nI am working through this as I type this. So far I have not quite hit on the solution.\r\n\r\n**Edit:** perhaps `state = lstm.zero_state(batch_size, dtype=tf.float32)`, or some other value for `dtype`? This creates a zeroed-out state tensor given the LSTM's existing state size, shape, etc."}