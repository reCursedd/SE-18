{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/281091702", "html_url": "https://github.com/tensorflow/tensorflow/issues/5141#issuecomment-281091702", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5141", "id": 281091702, "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTA5MTcwMg==", "user": {"login": "lelayf", "id": 1046340, "node_id": "MDQ6VXNlcjEwNDYzNDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1046340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lelayf", "html_url": "https://github.com/lelayf", "followers_url": "https://api.github.com/users/lelayf/followers", "following_url": "https://api.github.com/users/lelayf/following{/other_user}", "gists_url": "https://api.github.com/users/lelayf/gists{/gist_id}", "starred_url": "https://api.github.com/users/lelayf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lelayf/subscriptions", "organizations_url": "https://api.github.com/users/lelayf/orgs", "repos_url": "https://api.github.com/users/lelayf/repos", "events_url": "https://api.github.com/users/lelayf/events{/privacy}", "received_events_url": "https://api.github.com/users/lelayf/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-20T14:22:59Z", "updated_at": "2017-02-20T15:49:17Z", "author_association": "NONE", "body_html": "<p>Same issue here. Building on Mac Pro with custom Nvidia Titan Black instead of factory AMD card, macOS Sierra, trying to build r1.0 branch with bazel and SSE4.2 enabled. /usr/local/cuda/lib/libcudart.8.0.dylib exists, DYLIB_LIBRARY_PATH and DYLIB_FALLBACK_LIBRARY_PATH are set to include /usr/local/cuda/lib. Even tried using LD_LIBRARY_PATH and LIBRARY_PATH but issue persists. Also restarted OS with SIP disabled, which <code>csrutil status</code> shows it still is.</p>\n<p>To be noted I already have a running installation in a virtualenv and pre-compiled package with GPU support but no support for SSE4.2 and I validated this one is working well, therefore confirming my bash profile environment variables are somewhat right.</p>\n<p><strong>Edit</strong> I created a symlink to libcudart.8.0.dylib in /usr/local/lib and the <code>@rpath</code> build failure disappeared - now the final step of bazel build fails on a similar error :<br>\n<code>clang: warning: argument unused during compilation: '-pthread' ld: file not found: -lcudart.8.0 clang: error: linker command failed with exit code 1 (use -v to see invocation) Target //tensorflow/tools/pip_package:build_pip_package failed to build</code></p>\n<p>Having a version number in a library flag seems odd, I would expect -lcudart instead. I tried reconfiguring the build without specifying the CUDA toolkit version and leaving system default but<br>\nit still builds that name for us and therefore fails on it.</p>", "body_text": "Same issue here. Building on Mac Pro with custom Nvidia Titan Black instead of factory AMD card, macOS Sierra, trying to build r1.0 branch with bazel and SSE4.2 enabled. /usr/local/cuda/lib/libcudart.8.0.dylib exists, DYLIB_LIBRARY_PATH and DYLIB_FALLBACK_LIBRARY_PATH are set to include /usr/local/cuda/lib. Even tried using LD_LIBRARY_PATH and LIBRARY_PATH but issue persists. Also restarted OS with SIP disabled, which csrutil status shows it still is.\nTo be noted I already have a running installation in a virtualenv and pre-compiled package with GPU support but no support for SSE4.2 and I validated this one is working well, therefore confirming my bash profile environment variables are somewhat right.\nEdit I created a symlink to libcudart.8.0.dylib in /usr/local/lib and the @rpath build failure disappeared - now the final step of bazel build fails on a similar error :\nclang: warning: argument unused during compilation: '-pthread' ld: file not found: -lcudart.8.0 clang: error: linker command failed with exit code 1 (use -v to see invocation) Target //tensorflow/tools/pip_package:build_pip_package failed to build\nHaving a version number in a library flag seems odd, I would expect -lcudart instead. I tried reconfiguring the build without specifying the CUDA toolkit version and leaving system default but\nit still builds that name for us and therefore fails on it.", "body": "Same issue here. Building on Mac Pro with custom Nvidia Titan Black instead of factory AMD card, macOS Sierra, trying to build r1.0 branch with bazel and SSE4.2 enabled. /usr/local/cuda/lib/libcudart.8.0.dylib exists, DYLIB_LIBRARY_PATH and DYLIB_FALLBACK_LIBRARY_PATH are set to include /usr/local/cuda/lib. Even tried using LD_LIBRARY_PATH and LIBRARY_PATH but issue persists. Also restarted OS with SIP disabled, which `csrutil status` shows it still is. \r\n\r\nTo be noted I already have a running installation in a virtualenv and pre-compiled package with GPU support but no support for SSE4.2 and I validated this one is working well, therefore confirming my bash profile environment variables are somewhat right.\r\n\r\n**Edit** I created a symlink to libcudart.8.0.dylib in /usr/local/lib and the `@rpath` build failure disappeared - now the final step of bazel build fails on a similar error : \r\n`clang: warning: argument unused during compilation: '-pthread'\r\nld: file not found: -lcudart.8.0\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build`\r\n\r\nHaving a version number in a library flag seems odd, I would expect -lcudart instead. I tried reconfiguring the build without specifying the CUDA toolkit version and leaving system default but \r\nit still builds that name for us and therefore fails on it. \r\n\r\n"}