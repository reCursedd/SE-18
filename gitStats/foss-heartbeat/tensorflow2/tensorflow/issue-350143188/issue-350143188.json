{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21581", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21581/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21581/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21581/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21581", "id": 350143188, "node_id": "MDU6SXNzdWUzNTAxNDMxODg=", "number": 21581, "title": "Cannot convert to TFRecords", "user": {"login": "pathakrohit08", "id": 17154292, "node_id": "MDQ6VXNlcjE3MTU0Mjky", "avatar_url": "https://avatars2.githubusercontent.com/u/17154292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pathakrohit08", "html_url": "https://github.com/pathakrohit08", "followers_url": "https://api.github.com/users/pathakrohit08/followers", "following_url": "https://api.github.com/users/pathakrohit08/following{/other_user}", "gists_url": "https://api.github.com/users/pathakrohit08/gists{/gist_id}", "starred_url": "https://api.github.com/users/pathakrohit08/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pathakrohit08/subscriptions", "organizations_url": "https://api.github.com/users/pathakrohit08/orgs", "repos_url": "https://api.github.com/users/pathakrohit08/repos", "events_url": "https://api.github.com/users/pathakrohit08/events{/privacy}", "received_events_url": "https://api.github.com/users/pathakrohit08/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-08-13T18:33:16Z", "updated_at": "2018-09-16T03:49:08Z", "closed_at": "2018-09-16T03:49:08Z", "author_association": "NONE", "body_html": "<p>I have three text files <code>A.txt, B.txt,C.txt</code> the labels are <code>A,B and C</code></p>\n<pre><code>def convert(file_paths, labels, out_path):\n\n    print(\"Converting: \" + out_path)\n\n    # Number of images. Used when printing the progress.\n    num_files = len(file_paths)\n\n    # Open a TFRecordWriter for the output-file.\n   with tf.python_io.TFRecordWriter(out_path) as writer:\n\n    # Iterate over all the image-paths and class-labels.\n    for i, (path, label) in enumerate(zip(file_paths, labels)):\n           # Print the percentage-progress.\n           print_progress(count=i, total=num_files - 1)\n\n           lines=getModifiedLines(path)\n\n\n          # Create a dict with the data we want to save in the\n          # TFRecords file. You can add more relevant data here.\n          data = \\\n              {\n                  'text': wrap_int64(lines),\n                  'label': wrap_int64(label)\n              }\n\n          # Wrap the data as TensorFlow Features.\n          feature = tf.train.Features(feature=data)\n\n          # Wrap again as a TensorFlow Example.\n          example = tf.train.Example(features=feature)\n\n          # Serialize the data.\n          serialized = example.SerializeToString()\n          writer.write(serialized)\n\ndef getModifiedLines(filePath):\n    data = open(filePath, 'r', encoding='UTF8', errors='ignore').read()\n    lines = re.split(\"\\n\", data)\n    all_lines=[]\n    for line in lines:\n      _l=count_vect.fit_transform(line)\n      all_lines.append(_l)\n\nreturn all_lines\n</code></pre>\n<p>I am getting error at line <code>'text': wrap_int64(lines),</code></p>\n<blockquote>\n<p>Error<br>\n<code>[&lt;12071x21108 sparse matrix of type '&lt;class 'numpy.int64'&gt;' \twith 226655 stored elements in Compressed Sparse Row format&gt;] has type     &lt;class 'list'&gt;, but expected one of: (&lt;class 'int'&gt;,)</code></p>\n</blockquote>\n<p>Have I written custom code  <strong>Yes</strong><br>\nOS Platform and Distribution  <strong>Ubuntu 16.04</strong><br>\nTensorFlow installed from   <strong><a href=\"https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-1.10.0-cp27-none-linux_x86_64.whl\" rel=\"nofollow\">https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-1.10.0-cp27-none-linux_x86_64.whl</a></strong></p>\n<p>TensorFlow version  <strong>1.9</strong><br>\nBazel version<br>\nCUDA/cuDNN version   <strong>i think 7</strong><br>\nGPU model and memory <strong>NVIDIA Titan V 12288MB</strong><br>\nMobile device  <strong>No</strong></p>", "body_text": "I have three text files A.txt, B.txt,C.txt the labels are A,B and C\ndef convert(file_paths, labels, out_path):\n\n    print(\"Converting: \" + out_path)\n\n    # Number of images. Used when printing the progress.\n    num_files = len(file_paths)\n\n    # Open a TFRecordWriter for the output-file.\n   with tf.python_io.TFRecordWriter(out_path) as writer:\n\n    # Iterate over all the image-paths and class-labels.\n    for i, (path, label) in enumerate(zip(file_paths, labels)):\n           # Print the percentage-progress.\n           print_progress(count=i, total=num_files - 1)\n\n           lines=getModifiedLines(path)\n\n\n          # Create a dict with the data we want to save in the\n          # TFRecords file. You can add more relevant data here.\n          data = \\\n              {\n                  'text': wrap_int64(lines),\n                  'label': wrap_int64(label)\n              }\n\n          # Wrap the data as TensorFlow Features.\n          feature = tf.train.Features(feature=data)\n\n          # Wrap again as a TensorFlow Example.\n          example = tf.train.Example(features=feature)\n\n          # Serialize the data.\n          serialized = example.SerializeToString()\n          writer.write(serialized)\n\ndef getModifiedLines(filePath):\n    data = open(filePath, 'r', encoding='UTF8', errors='ignore').read()\n    lines = re.split(\"\\n\", data)\n    all_lines=[]\n    for line in lines:\n      _l=count_vect.fit_transform(line)\n      all_lines.append(_l)\n\nreturn all_lines\n\nI am getting error at line 'text': wrap_int64(lines),\n\nError\n[<12071x21108 sparse matrix of type '<class 'numpy.int64'>' \twith 226655 stored elements in Compressed Sparse Row format>] has type     <class 'list'>, but expected one of: (<class 'int'>,)\n\nHave I written custom code  Yes\nOS Platform and Distribution  Ubuntu 16.04\nTensorFlow installed from   https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-1.10.0-cp27-none-linux_x86_64.whl\nTensorFlow version  1.9\nBazel version\nCUDA/cuDNN version   i think 7\nGPU model and memory NVIDIA Titan V 12288MB\nMobile device  No", "body": "I have three text files `A.txt, B.txt,C.txt` the labels are `A,B and C`\r\n\r\n    \r\n    def convert(file_paths, labels, out_path):\r\n\r\n        print(\"Converting: \" + out_path)\r\n\r\n        # Number of images. Used when printing the progress.\r\n        num_files = len(file_paths)\r\n\r\n        # Open a TFRecordWriter for the output-file.\r\n       with tf.python_io.TFRecordWriter(out_path) as writer:\r\n    \r\n        # Iterate over all the image-paths and class-labels.\r\n        for i, (path, label) in enumerate(zip(file_paths, labels)):\r\n               # Print the percentage-progress.\r\n               print_progress(count=i, total=num_files - 1)\r\n\r\n               lines=getModifiedLines(path)\r\n\r\n\r\n              # Create a dict with the data we want to save in the\r\n              # TFRecords file. You can add more relevant data here.\r\n              data = \\\r\n                  {\r\n                      'text': wrap_int64(lines),\r\n                      'label': wrap_int64(label)\r\n                  }\r\n\r\n              # Wrap the data as TensorFlow Features.\r\n              feature = tf.train.Features(feature=data)\r\n\r\n              # Wrap again as a TensorFlow Example.\r\n              example = tf.train.Example(features=feature)\r\n\r\n              # Serialize the data.\r\n              serialized = example.SerializeToString()\r\n              writer.write(serialized)\r\n\r\n    def getModifiedLines(filePath):\r\n        data = open(filePath, 'r', encoding='UTF8', errors='ignore').read()\r\n        lines = re.split(\"\\n\", data)\r\n        all_lines=[]\r\n        for line in lines:\r\n          _l=count_vect.fit_transform(line)\r\n          all_lines.append(_l)\r\n\r\n    return all_lines\r\n\r\n I am getting error at line `'text': wrap_int64(lines),`\r\n\r\n>Error\r\n`[<12071x21108 sparse matrix of type '<class 'numpy.int64'>'\r\n\twith 226655 stored elements in Compressed Sparse Row format>] has type \r\n   <class 'list'>, but expected one of: (<class 'int'>,)`\r\n\r\n\r\n\r\n\r\nHave I written custom code  **Yes**\r\nOS Platform and Distribution  **Ubuntu 16.04**\r\nTensorFlow installed from   **https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-1.10.0-cp27-none-linux_x86_64.whl**\r\n\r\nTensorFlow version  **1.9**\r\nBazel version \r\nCUDA/cuDNN version   **i think 7**\r\nGPU model and memory **NVIDIA Titan V 12288MB**\r\nMobile device  **No**"}