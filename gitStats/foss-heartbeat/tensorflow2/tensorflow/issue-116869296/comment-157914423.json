{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/157914423", "html_url": "https://github.com/tensorflow/tensorflow/issues/212#issuecomment-157914423", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/212", "id": 157914423, "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzkxNDQyMw==", "user": {"login": "cinjon", "id": 615351, "node_id": "MDQ6VXNlcjYxNTM1MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/615351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cinjon", "html_url": "https://github.com/cinjon", "followers_url": "https://api.github.com/users/cinjon/followers", "following_url": "https://api.github.com/users/cinjon/following{/other_user}", "gists_url": "https://api.github.com/users/cinjon/gists{/gist_id}", "starred_url": "https://api.github.com/users/cinjon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cinjon/subscriptions", "organizations_url": "https://api.github.com/users/cinjon/orgs", "repos_url": "https://api.github.com/users/cinjon/repos", "events_url": "https://api.github.com/users/cinjon/events{/privacy}", "received_events_url": "https://api.github.com/users/cinjon/received_events", "type": "User", "site_admin": false}, "created_at": "2015-11-19T01:09:06Z", "updated_at": "2015-11-19T01:09:06Z", "author_association": "NONE", "body_html": "<p>I'm using a function very similar to <code>create_model</code> in models/rnn/translate/translate.py (reproduced below) to load two RNN encoder-decoders like this:</p>\n<pre><code>with tf.Session() as session:                                                                    \n    print 'Creating model two from directory %s.' % FLAGS.model_dir_one                         \n    model_two = create_model(session, forward_only=True, model_dir=FLAGS.model_dir_one)                            \n\n    print 'Creating model one from directory %s.' % FLAGS.model_dir_two                          \n    model_two = create_model(session, forward_only=True, model_dir=FLAGS.model_dir_two)                            \n</code></pre>\n<p>And I'm running into an error: <code>tensorflow.python.framework.errors.NotFoundError: Tensor name \"Variable_2\" not found in checkpoint files &lt;...&gt;/model.ckpt-&lt;###&gt;</code> (more extensive at bottom)</p>\n<p>Both of the models were built at a previous time. They were made with the same parameters (50,000 vocab size, 400 size layer, 3 layers) and if I run them in an interactive decoding mode, they both work just fine.</p>\n<p>In addition, the first model that I specify loads just fine, regardless of which one I put first. I know this because if I try running it as is, then the 1st one loads and the second one chokes. If I then remove the second one, the program runs without a hiccup. And if I switch them so that the second model comes before the first one, the same thing happens but in reverse.</p>\n<p>This leads me to think that there is something up with the graph loading but I'm quite sure what.</p>\n<pre><code>def create_model(session, forward_only, model_dir=None):                                                             \n  \"\"\"Create translation model and initialize or load parameters in session.\"\"\"                       \n  model = seq2seq_model.Seq2SeqModel(                                                                \n      FLAGS.en_vocab_size, FLAGS.fr_vocab_size, _buckets,                                            \n      FLAGS.size, FLAGS.num_layers, FLAGS.max_gradient_norm, FLAGS.batch_size,                       \n      FLAGS.learning_rate, FLAGS.learning_rate_decay_factor,                                         \n      forward_only=forward_only)\n\n  ckpt = tf.train.get_checkpoint_state(model_dir)\n  if ckpt and gfile.Exists(ckpt.model_checkpoint_path):\n    print(\"Reading model parameters from %s\" % ckpt.model_checkpoint_path)                           \n    model.saver.restore(session, ckpt.model_checkpoint_path)\n  else:\n    print(\"Created model with fresh parameters.\")                                                    \n    session.run(tf.variables.initialize_all_variables())\n  return model\n</code></pre>\n<pre><code>...\n File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/saver.py\", line 867, in restore\n    sess.run([self._restore_op_name], {self._filename_tensor_name: save_path})\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 349, in run\n    results = self._do_run(target_list, unique_fetch_targets, feed_dict_string)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 423, in _do_run\n    e.code)\ntensorflow.python.framework.errors.NotFoundError: Tensor name \"Variable_2\" not found in checkpoint files /home/ubuntu/tensorflow/research/lm/iwslt-train-tags-de-50000/translate.ckpt-59200  \n         [[Node: save_1/restore_slice_2 = RestoreSlice[dt=DT_FLOAT, preferred_shard=-1, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](_recv_save_1/Const_0, save_1/restore_slice_2/tensor_name, save_1/restore_slice_2/shape_and_slice)]]  \n         [[Node: save_1/restore_slice_12/_99 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device_incarnation=1, tensor_name=\"edge_3360_save_1/restore_slice_12\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/gpu:0\"]()]]\nCaused by op u'save_1/restore_slice_2', defined at:\n\n...\n\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/saver.py\", line 691, in __init__\n    restore_sequentially=restore_sequentially)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/saver.py\", line 411, in build\n    filename_tensor, vars_to_save, restore_sequentially, reshape)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/saver.py\", line 170, in _AddRestoreOps\n    values = self.restore_op(filename_tensor, vs, preferred_shard)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/saver.py\", line 87, in restore_op\n    preferred_shard=preferred_shard)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/io_ops.py\", line 173, in _restore_slice\n    preferred_shard, name=name)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_io_ops.py\", line 271, in _restore_slice\n    preferred_shard=preferred_shard, name=name)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/op_def_library.py\", line 638, in apply_op\n    op_def=op_def)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1733, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1008, in __init__\n    self._traceback = _extract_stack()\n</code></pre>", "body_text": "I'm using a function very similar to create_model in models/rnn/translate/translate.py (reproduced below) to load two RNN encoder-decoders like this:\nwith tf.Session() as session:                                                                    \n    print 'Creating model two from directory %s.' % FLAGS.model_dir_one                         \n    model_two = create_model(session, forward_only=True, model_dir=FLAGS.model_dir_one)                            \n\n    print 'Creating model one from directory %s.' % FLAGS.model_dir_two                          \n    model_two = create_model(session, forward_only=True, model_dir=FLAGS.model_dir_two)                            \n\nAnd I'm running into an error: tensorflow.python.framework.errors.NotFoundError: Tensor name \"Variable_2\" not found in checkpoint files <...>/model.ckpt-<###> (more extensive at bottom)\nBoth of the models were built at a previous time. They were made with the same parameters (50,000 vocab size, 400 size layer, 3 layers) and if I run them in an interactive decoding mode, they both work just fine.\nIn addition, the first model that I specify loads just fine, regardless of which one I put first. I know this because if I try running it as is, then the 1st one loads and the second one chokes. If I then remove the second one, the program runs without a hiccup. And if I switch them so that the second model comes before the first one, the same thing happens but in reverse.\nThis leads me to think that there is something up with the graph loading but I'm quite sure what.\ndef create_model(session, forward_only, model_dir=None):                                                             \n  \"\"\"Create translation model and initialize or load parameters in session.\"\"\"                       \n  model = seq2seq_model.Seq2SeqModel(                                                                \n      FLAGS.en_vocab_size, FLAGS.fr_vocab_size, _buckets,                                            \n      FLAGS.size, FLAGS.num_layers, FLAGS.max_gradient_norm, FLAGS.batch_size,                       \n      FLAGS.learning_rate, FLAGS.learning_rate_decay_factor,                                         \n      forward_only=forward_only)\n\n  ckpt = tf.train.get_checkpoint_state(model_dir)\n  if ckpt and gfile.Exists(ckpt.model_checkpoint_path):\n    print(\"Reading model parameters from %s\" % ckpt.model_checkpoint_path)                           \n    model.saver.restore(session, ckpt.model_checkpoint_path)\n  else:\n    print(\"Created model with fresh parameters.\")                                                    \n    session.run(tf.variables.initialize_all_variables())\n  return model\n\n...\n File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/saver.py\", line 867, in restore\n    sess.run([self._restore_op_name], {self._filename_tensor_name: save_path})\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 349, in run\n    results = self._do_run(target_list, unique_fetch_targets, feed_dict_string)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 423, in _do_run\n    e.code)\ntensorflow.python.framework.errors.NotFoundError: Tensor name \"Variable_2\" not found in checkpoint files /home/ubuntu/tensorflow/research/lm/iwslt-train-tags-de-50000/translate.ckpt-59200  \n         [[Node: save_1/restore_slice_2 = RestoreSlice[dt=DT_FLOAT, preferred_shard=-1, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](_recv_save_1/Const_0, save_1/restore_slice_2/tensor_name, save_1/restore_slice_2/shape_and_slice)]]  \n         [[Node: save_1/restore_slice_12/_99 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device_incarnation=1, tensor_name=\"edge_3360_save_1/restore_slice_12\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/gpu:0\"]()]]\nCaused by op u'save_1/restore_slice_2', defined at:\n\n...\n\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/saver.py\", line 691, in __init__\n    restore_sequentially=restore_sequentially)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/saver.py\", line 411, in build\n    filename_tensor, vars_to_save, restore_sequentially, reshape)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/saver.py\", line 170, in _AddRestoreOps\n    values = self.restore_op(filename_tensor, vs, preferred_shard)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/saver.py\", line 87, in restore_op\n    preferred_shard=preferred_shard)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/io_ops.py\", line 173, in _restore_slice\n    preferred_shard, name=name)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_io_ops.py\", line 271, in _restore_slice\n    preferred_shard=preferred_shard, name=name)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/op_def_library.py\", line 638, in apply_op\n    op_def=op_def)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1733, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1008, in __init__\n    self._traceback = _extract_stack()", "body": "I'm using a function very similar to `create_model` in models/rnn/translate/translate.py (reproduced below) to load two RNN encoder-decoders like this:\n\n```\nwith tf.Session() as session:                                                                    \n    print 'Creating model two from directory %s.' % FLAGS.model_dir_one                         \n    model_two = create_model(session, forward_only=True, model_dir=FLAGS.model_dir_one)                            \n\n    print 'Creating model one from directory %s.' % FLAGS.model_dir_two                          \n    model_two = create_model(session, forward_only=True, model_dir=FLAGS.model_dir_two)                            \n```\n\nAnd I'm running into an error: `tensorflow.python.framework.errors.NotFoundError: Tensor name \"Variable_2\" not found in checkpoint files <...>/model.ckpt-<###>` (more extensive at bottom)\n\nBoth of the models were built at a previous time. They were made with the same parameters (50,000 vocab size, 400 size layer, 3 layers) and if I run them in an interactive decoding mode, they both work just fine. \n\nIn addition, the first model that I specify loads just fine, regardless of which one I put first. I know this because if I try running it as is, then the 1st one loads and the second one chokes. If I then remove the second one, the program runs without a hiccup. And if I switch them so that the second model comes before the first one, the same thing happens but in reverse.\n\nThis leads me to think that there is something up with the graph loading but I'm quite sure what.\n\n```\ndef create_model(session, forward_only, model_dir=None):                                                             \n  \"\"\"Create translation model and initialize or load parameters in session.\"\"\"                       \n  model = seq2seq_model.Seq2SeqModel(                                                                \n      FLAGS.en_vocab_size, FLAGS.fr_vocab_size, _buckets,                                            \n      FLAGS.size, FLAGS.num_layers, FLAGS.max_gradient_norm, FLAGS.batch_size,                       \n      FLAGS.learning_rate, FLAGS.learning_rate_decay_factor,                                         \n      forward_only=forward_only)\n\n  ckpt = tf.train.get_checkpoint_state(model_dir)\n  if ckpt and gfile.Exists(ckpt.model_checkpoint_path):\n    print(\"Reading model parameters from %s\" % ckpt.model_checkpoint_path)                           \n    model.saver.restore(session, ckpt.model_checkpoint_path)\n  else:\n    print(\"Created model with fresh parameters.\")                                                    \n    session.run(tf.variables.initialize_all_variables())\n  return model\n```\n\n```\n...\n File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/saver.py\", line 867, in restore\n    sess.run([self._restore_op_name], {self._filename_tensor_name: save_path})\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 349, in run\n    results = self._do_run(target_list, unique_fetch_targets, feed_dict_string)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 423, in _do_run\n    e.code)\ntensorflow.python.framework.errors.NotFoundError: Tensor name \"Variable_2\" not found in checkpoint files /home/ubuntu/tensorflow/research/lm/iwslt-train-tags-de-50000/translate.ckpt-59200  \n         [[Node: save_1/restore_slice_2 = RestoreSlice[dt=DT_FLOAT, preferred_shard=-1, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](_recv_save_1/Const_0, save_1/restore_slice_2/tensor_name, save_1/restore_slice_2/shape_and_slice)]]  \n         [[Node: save_1/restore_slice_12/_99 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device_incarnation=1, tensor_name=\"edge_3360_save_1/restore_slice_12\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/gpu:0\"]()]]\nCaused by op u'save_1/restore_slice_2', defined at:\n\n...\n\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/saver.py\", line 691, in __init__\n    restore_sequentially=restore_sequentially)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/saver.py\", line 411, in build\n    filename_tensor, vars_to_save, restore_sequentially, reshape)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/saver.py\", line 170, in _AddRestoreOps\n    values = self.restore_op(filename_tensor, vs, preferred_shard)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/saver.py\", line 87, in restore_op\n    preferred_shard=preferred_shard)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/io_ops.py\", line 173, in _restore_slice\n    preferred_shard, name=name)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_io_ops.py\", line 271, in _restore_slice\n    preferred_shard=preferred_shard, name=name)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/op_def_library.py\", line 638, in apply_op\n    op_def=op_def)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1733, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1008, in __init__\n    self._traceback = _extract_stack()\n```\n"}