{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/159561903", "html_url": "https://github.com/tensorflow/tensorflow/issues/212#issuecomment-159561903", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/212", "id": 159561903, "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTU2MTkwMw==", "user": {"login": "cinjon", "id": 615351, "node_id": "MDQ6VXNlcjYxNTM1MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/615351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cinjon", "html_url": "https://github.com/cinjon", "followers_url": "https://api.github.com/users/cinjon/followers", "following_url": "https://api.github.com/users/cinjon/following{/other_user}", "gists_url": "https://api.github.com/users/cinjon/gists{/gist_id}", "starred_url": "https://api.github.com/users/cinjon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cinjon/subscriptions", "organizations_url": "https://api.github.com/users/cinjon/orgs", "repos_url": "https://api.github.com/users/cinjon/repos", "events_url": "https://api.github.com/users/cinjon/events{/privacy}", "received_events_url": "https://api.github.com/users/cinjon/received_events", "type": "User", "site_admin": false}, "created_at": "2015-11-25T10:15:05Z", "updated_at": "2015-11-25T10:15:05Z", "author_association": "NONE", "body_html": "<p>I got it to work! (I think)</p>\n<p>By following your other suggestion to set the variables explicitly, it seems to be working:</p>\n<pre><code>all_vars = tf.all_variables()\nmodel_one_vars = [k for k in all_vars if k.name.startswith(FLAGS.model_one_scope)]\nmodel_two_vars = [k for k in all_vars if k.name.startswith(FLAGS.model_two_scope)]\nj_pq_vars    = [k for k in all_vars if k.name.startswith('j_pq')]\n\ntf.train.Saver(model_one_vars).restore(sess, model_one_checkpoint)\ntf.train.Saver(model_two_vars).restore(sess, model_two_checkpoint)\n\nsaver = tf.train.Saver(j_pq_vars)\n</code></pre>\n<p>Thanks so much for your help guys!</p>", "body_text": "I got it to work! (I think)\nBy following your other suggestion to set the variables explicitly, it seems to be working:\nall_vars = tf.all_variables()\nmodel_one_vars = [k for k in all_vars if k.name.startswith(FLAGS.model_one_scope)]\nmodel_two_vars = [k for k in all_vars if k.name.startswith(FLAGS.model_two_scope)]\nj_pq_vars    = [k for k in all_vars if k.name.startswith('j_pq')]\n\ntf.train.Saver(model_one_vars).restore(sess, model_one_checkpoint)\ntf.train.Saver(model_two_vars).restore(sess, model_two_checkpoint)\n\nsaver = tf.train.Saver(j_pq_vars)\n\nThanks so much for your help guys!", "body": "I got it to work! (I think)\n\nBy following your other suggestion to set the variables explicitly, it seems to be working:\n\n```\nall_vars = tf.all_variables()\nmodel_one_vars = [k for k in all_vars if k.name.startswith(FLAGS.model_one_scope)]\nmodel_two_vars = [k for k in all_vars if k.name.startswith(FLAGS.model_two_scope)]\nj_pq_vars    = [k for k in all_vars if k.name.startswith('j_pq')]\n\ntf.train.Saver(model_one_vars).restore(sess, model_one_checkpoint)\ntf.train.Saver(model_two_vars).restore(sess, model_two_checkpoint)\n\nsaver = tf.train.Saver(j_pq_vars)\n```\n\nThanks so much for your help guys!\n"}