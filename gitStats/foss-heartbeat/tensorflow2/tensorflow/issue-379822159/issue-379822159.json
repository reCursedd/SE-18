{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23688", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23688/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23688/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23688/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23688", "id": 379822159, "node_id": "MDU6SXNzdWUzNzk4MjIxNTk=", "number": 23688, "title": "remove reduce_ from established functions, make it closer to numpy", "user": {"login": "kirk86", "id": 2902390, "node_id": "MDQ6VXNlcjI5MDIzOTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2902390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirk86", "html_url": "https://github.com/kirk86", "followers_url": "https://api.github.com/users/kirk86/followers", "following_url": "https://api.github.com/users/kirk86/following{/other_user}", "gists_url": "https://api.github.com/users/kirk86/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirk86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirk86/subscriptions", "organizations_url": "https://api.github.com/users/kirk86/orgs", "repos_url": "https://api.github.com/users/kirk86/repos", "events_url": "https://api.github.com/users/kirk86/events{/privacy}", "received_events_url": "https://api.github.com/users/kirk86/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097545817, "node_id": "MDU6TGFiZWwxMDk3NTQ1ODE3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:apis", "name": "comp:apis", "color": "0052cc", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": {"login": "karmel", "id": 667809, "node_id": "MDQ6VXNlcjY2NzgwOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/667809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karmel", "html_url": "https://github.com/karmel", "followers_url": "https://api.github.com/users/karmel/followers", "following_url": "https://api.github.com/users/karmel/following{/other_user}", "gists_url": "https://api.github.com/users/karmel/gists{/gist_id}", "starred_url": "https://api.github.com/users/karmel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karmel/subscriptions", "organizations_url": "https://api.github.com/users/karmel/orgs", "repos_url": "https://api.github.com/users/karmel/repos", "events_url": "https://api.github.com/users/karmel/events{/privacy}", "received_events_url": "https://api.github.com/users/karmel/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "karmel", "id": 667809, "node_id": "MDQ6VXNlcjY2NzgwOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/667809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karmel", "html_url": "https://github.com/karmel", "followers_url": "https://api.github.com/users/karmel/followers", "following_url": "https://api.github.com/users/karmel/following{/other_user}", "gists_url": "https://api.github.com/users/karmel/gists{/gist_id}", "starred_url": "https://api.github.com/users/karmel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karmel/subscriptions", "organizations_url": "https://api.github.com/users/karmel/orgs", "repos_url": "https://api.github.com/users/karmel/repos", "events_url": "https://api.github.com/users/karmel/events{/privacy}", "received_events_url": "https://api.github.com/users/karmel/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-11-12T15:16:26Z", "updated_at": "2018-11-21T00:11:33Z", "closed_at": null, "author_association": "NONE", "body_html": "<p><strong>System information</strong></p>\n<ul>\n<li>TensorFlow version (you are using): &gt;&gt;&gt; tf.<strong>version</strong><br>\n'1.11.0</li>\n<li>Are you willing to contribute it (Yes/No): I would like to but have no idea how.</li>\n</ul>\n<p><strong>Describe the feature and the current behavior/state.</strong><br>\nHi everyone. Thanks for your efforts in making tensorflow.<br>\nI've been using tensorflow for some time now and no matter my usecase I always find myself in the position of having forgotten how to call the max, sum, ..., etc. functions. I find that the current naming is utterly confusing and doesn't help ppl to easily learn and integrate with the api. It would have been much better if all possible functions were as close as possible to numpy naming conventions. Trying to translate code from some other framework that follows a numpy naming conventions I find myself typing <code>tf.max</code> only then to realize that it doesn't exist. Then I have to spend time re-learning that is not <code>tf.max</code> but <code>tf.reduce_max</code>. Now it could be only me but I suspect that this kind of notation doesn't stick in to ppls long term memory.</p>\n<p><strong>Will this change the current api? How?</strong><br>\nYes. Most common functions will have the same naming convention to numpy.</p>\n<p><strong>Who will benefit with this feature?</strong><br>\nAll existing and new users.</p>\n<p><strong>Any Other info.</strong><br>\nPlease keep unnecessary complexity out of tensorflow.</p>", "body_text": "System information\n\nTensorFlow version (you are using): >>> tf.version\n'1.11.0\nAre you willing to contribute it (Yes/No): I would like to but have no idea how.\n\nDescribe the feature and the current behavior/state.\nHi everyone. Thanks for your efforts in making tensorflow.\nI've been using tensorflow for some time now and no matter my usecase I always find myself in the position of having forgotten how to call the max, sum, ..., etc. functions. I find that the current naming is utterly confusing and doesn't help ppl to easily learn and integrate with the api. It would have been much better if all possible functions were as close as possible to numpy naming conventions. Trying to translate code from some other framework that follows a numpy naming conventions I find myself typing tf.max only then to realize that it doesn't exist. Then I have to spend time re-learning that is not tf.max but tf.reduce_max. Now it could be only me but I suspect that this kind of notation doesn't stick in to ppls long term memory.\nWill this change the current api? How?\nYes. Most common functions will have the same naming convention to numpy.\nWho will benefit with this feature?\nAll existing and new users.\nAny Other info.\nPlease keep unnecessary complexity out of tensorflow.", "body": "**System information**\r\n- TensorFlow version (you are using): >>> tf.__version__\r\n'1.11.0\r\n- Are you willing to contribute it (Yes/No): I would like to but have no idea how.\r\n\r\n**Describe the feature and the current behavior/state.**\r\nHi everyone. Thanks for your efforts in making tensorflow.\r\nI've been using tensorflow for some time now and no matter my usecase I always find myself in the position of having forgotten how to call the max, sum, ..., etc. functions. I find that the current naming is utterly confusing and doesn't help ppl to easily learn and integrate with the api. It would have been much better if all possible functions were as close as possible to numpy naming conventions. Trying to translate code from some other framework that follows a numpy naming conventions I find myself typing `tf.max` only then to realize that it doesn't exist. Then I have to spend time re-learning that is not `tf.max` but `tf.reduce_max`. Now it could be only me but I suspect that this kind of notation doesn't stick in to ppls long term memory.\r\n\r\n**Will this change the current api? How?**\r\nYes. Most common functions will have the same naming convention to numpy.\r\n\r\n**Who will benefit with this feature?**\r\nAll existing and new users.\r\n\r\n**Any Other info.**\r\nPlease keep unnecessary complexity out of tensorflow.  \r\n"}