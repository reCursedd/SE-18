{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14506", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14506/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14506/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14506/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14506", "id": 273286836, "node_id": "MDU6SXNzdWUyNzMyODY4MzY=", "number": 14506, "title": "poor performance when XLA works with dynamic control_flow ops", "user": {"login": "linearhit", "id": 8992445, "node_id": "MDQ6VXNlcjg5OTI0NDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/8992445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/linearhit", "html_url": "https://github.com/linearhit", "followers_url": "https://api.github.com/users/linearhit/followers", "following_url": "https://api.github.com/users/linearhit/following{/other_user}", "gists_url": "https://api.github.com/users/linearhit/gists{/gist_id}", "starred_url": "https://api.github.com/users/linearhit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/linearhit/subscriptions", "organizations_url": "https://api.github.com/users/linearhit/orgs", "repos_url": "https://api.github.com/users/linearhit/repos", "events_url": "https://api.github.com/users/linearhit/events{/privacy}", "received_events_url": "https://api.github.com/users/linearhit/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 15, "created_at": "2017-11-13T01:37:38Z", "updated_at": "2018-05-26T18:37:02Z", "closed_at": "2018-05-26T18:37:02Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.2.1</li>\n<li><strong>Python version</strong>:  2.7.14</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.4.5</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: 4.8.5</li>\n<li><strong>CUDA/cuDNN version</strong>: 8.0/5.1.10</li>\n<li><strong>GPU model and memory</strong>: M40</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<p>You can collect some of this information using our environment capture script:</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\">https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh</a></p>\n<p>You can obtain the TensorFlow version with</p>\n<p>python -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"</p>\n<h3>Describe the problem</h3>\n<p>When XLA works with:<br>\n1, dynamic_rnn<br>\n2, static_rnn with \"dynamic calculation\" enabled, specificaly, when the seq_len is assigned.</p>\n<p>In these cases, the performance of XLA is poor, even result in negative performance optimization.<br>\nFrom the time line it seems that the switch/merge ops are breaking the XLA fused instructions into pieces. But i still don't understand why it leads to negative optimization.</p>\n<p>Pls let me know if this is a known issue, are there any special reasons for XLA not to support control flow ops? or if there's anything i can do to fix it. Thanks.</p>\n<h3>Source code / logs</h3>\n<p>Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): 16.04\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): 1.2.1\nPython version:  2.7.14\nBazel version (if compiling from source): 0.4.5\nGCC/Compiler version (if compiling from source): 4.8.5\nCUDA/cuDNN version: 8.0/5.1.10\nGPU model and memory: M40\nExact command to reproduce:\n\nYou can collect some of this information using our environment capture script:\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\nYou can obtain the TensorFlow version with\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\nDescribe the problem\nWhen XLA works with:\n1, dynamic_rnn\n2, static_rnn with \"dynamic calculation\" enabled, specificaly, when the seq_len is assigned.\nIn these cases, the performance of XLA is poor, even result in negative performance optimization.\nFrom the time line it seems that the switch/merge ops are breaking the XLA fused instructions into pieces. But i still don't understand why it leads to negative optimization.\nPls let me know if this is a known issue, are there any special reasons for XLA not to support control flow ops? or if there's anything i can do to fix it. Thanks.\nSource code / logs\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: 16.04\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.2.1\r\n- **Python version**:  2.7.14\r\n- **Bazel version (if compiling from source)**: 0.4.5\r\n- **GCC/Compiler version (if compiling from source)**: 4.8.5\r\n- **CUDA/cuDNN version**: 8.0/5.1.10\r\n- **GPU model and memory**: M40\r\n- **Exact command to reproduce**: \r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nWhen XLA works with:\r\n1, dynamic_rnn\r\n2, static_rnn with \"dynamic calculation\" enabled, specificaly, when the seq_len is assigned.\r\n\r\nIn these cases, the performance of XLA is poor, even result in negative performance optimization.\r\nFrom the time line it seems that the switch/merge ops are breaking the XLA fused instructions into pieces. But i still don't understand why it leads to negative optimization.\r\n\r\nPls let me know if this is a known issue, are there any special reasons for XLA not to support control flow ops? or if there's anything i can do to fix it. Thanks.\r\n\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n"}