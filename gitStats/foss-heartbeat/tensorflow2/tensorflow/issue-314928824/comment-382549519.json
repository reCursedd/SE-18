{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/382549519", "html_url": "https://github.com/tensorflow/tensorflow/issues/18588#issuecomment-382549519", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18588", "id": 382549519, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjU0OTUxOQ==", "user": {"login": "nuchi", "id": 16771734, "node_id": "MDQ6VXNlcjE2NzcxNzM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16771734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nuchi", "html_url": "https://github.com/nuchi", "followers_url": "https://api.github.com/users/nuchi/followers", "following_url": "https://api.github.com/users/nuchi/following{/other_user}", "gists_url": "https://api.github.com/users/nuchi/gists{/gist_id}", "starred_url": "https://api.github.com/users/nuchi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nuchi/subscriptions", "organizations_url": "https://api.github.com/users/nuchi/orgs", "repos_url": "https://api.github.com/users/nuchi/repos", "events_url": "https://api.github.com/users/nuchi/events{/privacy}", "received_events_url": "https://api.github.com/users/nuchi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-18T22:30:18Z", "updated_at": "2018-04-18T22:30:18Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Update: I went ahead and fixed it. If it's ok, I'll open a PR (after I run the unit tests). It still allocates a buffer on the fly, so the memory profiling tools won't catch it, but it'll do it with an <code>Eigen::Tensor</code> instead of a <code>tf::Tensor</code> so it won't need to link in <code>core:framework</code>. I also added a proper option for single-threaded FFT (status quo assigns the multi-threaded version even when single-threaded is requested).</p>", "body_text": "Update: I went ahead and fixed it. If it's ok, I'll open a PR (after I run the unit tests). It still allocates a buffer on the fly, so the memory profiling tools won't catch it, but it'll do it with an Eigen::Tensor instead of a tf::Tensor so it won't need to link in core:framework. I also added a proper option for single-threaded FFT (status quo assigns the multi-threaded version even when single-threaded is requested).", "body": "Update: I went ahead and fixed it. If it's ok, I'll open a PR (after I run the unit tests). It still allocates a buffer on the fly, so the memory profiling tools won't catch it, but it'll do it with an `Eigen::Tensor` instead of a `tf::Tensor` so it won't need to link in `core:framework`. I also added a proper option for single-threaded FFT (status quo assigns the multi-threaded version even when single-threaded is requested)."}