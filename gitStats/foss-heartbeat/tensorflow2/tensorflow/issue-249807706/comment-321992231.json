{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/321992231", "html_url": "https://github.com/tensorflow/tensorflow/issues/12234#issuecomment-321992231", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12234", "id": 321992231, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTk5MjIzMQ==", "user": {"login": "quaeler", "id": 22581048, "node_id": "MDQ6VXNlcjIyNTgxMDQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/22581048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quaeler", "html_url": "https://github.com/quaeler", "followers_url": "https://api.github.com/users/quaeler/followers", "following_url": "https://api.github.com/users/quaeler/following{/other_user}", "gists_url": "https://api.github.com/users/quaeler/gists{/gist_id}", "starred_url": "https://api.github.com/users/quaeler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quaeler/subscriptions", "organizations_url": "https://api.github.com/users/quaeler/orgs", "repos_url": "https://api.github.com/users/quaeler/repos", "events_url": "https://api.github.com/users/quaeler/events{/privacy}", "received_events_url": "https://api.github.com/users/quaeler/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-12T16:45:48Z", "updated_at": "2017-08-12T16:45:48Z", "author_association": "CONTRIBUTOR", "body_html": "<p><code>decode_raw</code> in converting a string to an array of numbers, in a datatype specified.</p>\n<p>numpy's <code>tobytes</code> is producing a string of bytes, 8 bytes per value to represent the default numpy float value (64 bit) - so you end up with 48 bytes in your string.</p>\n<p>At that point, calling <code>decode_raw</code> with float32 as the desired data type is producing 12 values instead of the original 6 (since you've halved the bytes per value). If you called the operation with <code>tf.uint8</code> you'd see 48 values - each byte as an int value - and if you called it with <code>tf.float64</code> you'd get your original array values back (because you're just converting back to the original datatype.)</p>\n<p>Hope this helps.</p>", "body_text": "decode_raw in converting a string to an array of numbers, in a datatype specified.\nnumpy's tobytes is producing a string of bytes, 8 bytes per value to represent the default numpy float value (64 bit) - so you end up with 48 bytes in your string.\nAt that point, calling decode_raw with float32 as the desired data type is producing 12 values instead of the original 6 (since you've halved the bytes per value). If you called the operation with tf.uint8 you'd see 48 values - each byte as an int value - and if you called it with tf.float64 you'd get your original array values back (because you're just converting back to the original datatype.)\nHope this helps.", "body": "`decode_raw` in converting a string to an array of numbers, in a datatype specified.\r\n\r\nnumpy's `tobytes` is producing a string of bytes, 8 bytes per value to represent the default numpy float value (64 bit) - so you end up with 48 bytes in your string.\r\n\r\nAt that point, calling `decode_raw` with float32 as the desired data type is producing 12 values instead of the original 6 (since you've halved the bytes per value). If you called the operation with `tf.uint8` you'd see 48 values - each byte as an int value - and if you called it with `tf.float64` you'd get your original array values back (because you're just converting back to the original datatype.)\r\n\r\nHope this helps.\r\n\r\n"}