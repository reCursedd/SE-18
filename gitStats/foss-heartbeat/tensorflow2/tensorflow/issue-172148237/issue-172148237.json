{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3925", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3925/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3925/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3925/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3925", "id": 172148237, "node_id": "MDU6SXNzdWUxNzIxNDgyMzc=", "number": 3925, "title": "[bug] tensorflow/models/image/mnist/convolutional.py doesn't converge with CUDA7.5+cuDNN4", "user": {"login": "shiquanwang", "id": 732862, "node_id": "MDQ6VXNlcjczMjg2Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/732862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shiquanwang", "html_url": "https://github.com/shiquanwang", "followers_url": "https://api.github.com/users/shiquanwang/followers", "following_url": "https://api.github.com/users/shiquanwang/following{/other_user}", "gists_url": "https://api.github.com/users/shiquanwang/gists{/gist_id}", "starred_url": "https://api.github.com/users/shiquanwang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shiquanwang/subscriptions", "organizations_url": "https://api.github.com/users/shiquanwang/orgs", "repos_url": "https://api.github.com/users/shiquanwang/repos", "events_url": "https://api.github.com/users/shiquanwang/events{/privacy}", "received_events_url": "https://api.github.com/users/shiquanwang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-08-19T14:46:19Z", "updated_at": "2016-08-31T07:01:40Z", "closed_at": "2016-08-24T18:14:24Z", "author_association": "NONE", "body_html": "<h3>Environment info</h3>\n<p>Operating System: Ubuntu 14.04 64bit<br>\nActually it is a docker env<br>\nnvidia/cuda:7.5-cudnn4-devel</p>\n<p>Installed version of CUDA and cuDNN: CUDA7.5 and cuDNN4<br>\n(please attach the output of <code>ls -l /path/to/cuda/lib/libcud*</code>):</p>\n<div class=\"highlight highlight-source-shell\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span> ls -l /usr/lib/x86_64-linux-gnu/libcud* </span>\nlrwxrwxrwx 1 root root       29 Aug 12 05:12 /usr/lib/x86_64-linux-gnu/libcudnn.so -<span class=\"pl-k\">&gt;</span> /etc/alternatives/libcudnn_so\nlrwxrwxrwx 1 root root       17 Feb  9  2016 /usr/lib/x86_64-linux-gnu/libcudnn.so.4 -<span class=\"pl-k\">&gt;</span> libcudnn.so.4.0.7\n-rw-r--r-- 1 root root 61453024 Feb  9  2016 /usr/lib/x86_64-linux-gnu/libcudnn.so.4.0.7\nlrwxrwxrwx 1 root root       32 Aug 12 05:12 /usr/lib/x86_64-linux-gnu/libcudnn_static.a -<span class=\"pl-k\">&gt;</span> /etc/alternatives/libcudnn_stlib\n-rw-r--r-- 1 root root 62025862 Feb  9  2016 /usr/lib/x86_64-linux-gnu/libcudnn_static_v4.a</pre></div>\n<div class=\"highlight highlight-source-shell\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span> ls -la /usr/local/nvidia/lib64/libcud*   </span>\nlrwxrwxrwx 1  999  998      17 Aug 16 13:46 /usr/local/nvidia/lib64/libcuda.so -<span class=\"pl-k\">&gt;</span> libcuda.so.367.35\nlrwxrwxrwx 1  999  998      17 Aug 16 13:46 /usr/local/nvidia/lib64/libcuda.so.1 -<span class=\"pl-k\">&gt;</span> libcuda.so.367.35\n-rw-r--r-- 2 root root 8121032 Jul 12 05:51 /usr/local/nvidia/lib64/libcuda.so.367.35</pre></div>\n<p>If installed from binary pip package, provide:</p>\n<ol>\n<li>Which pip package you installed.</li>\n</ol>\n<p>Ubuntu/Linux 64-bit, GPU enabled, Python 2.7<br>\nRequires CUDA toolkit 7.5 and CuDNN v4. For other versions, see \"Install from sources\" below.<br>\n$ export TF_BINARY_URL=<a href=\"https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.10.0rc0-cp27-none-linux_x86_64.whl\" rel=\"nofollow\">https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.10.0rc0-cp27-none-linux_x86_64.whl</a></p>\n<ol>\n<li>The output from <code>python -c \"import tensorflow; print(tensorflow.__version__)\"</code>.</li>\n</ol>\n<div class=\"highlight highlight-source-shell\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span> python -c \"import tensorflow; print(tensorflow.__version__)\"</span>\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcurand.so locally\n0.10.0rc0</pre></div>\n<h3>Steps to reproduce</h3>\n<ol>\n<li>run docker<br>\ndocker run -it nvidia/cuda:7.5-cudnn4-devel</li>\n<li>install tensorflow as described in the doc using pip</li>\n<li>run the example, and it does not converge, logs are pasted in the end<br>\n<code>python /usr/local/lib/python2.7/dist-packages/tensorflow/models/image/mnist/convolution.py</code></li>\n</ol>\n<h3>What have you tried?</h3>\n<ol>\n<li>Install and use the CPU version<br>\nThe mnist example converges well</li>\n</ol>\n<h3>Logs or other output that would be helpful</h3>\n<div class=\"highlight highlight-source-shell\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span> python /usr/local/lib/python2.7/dist-packages/tensorflow/models/image/mnist/convolutional.py</span>\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcurand.so locally\nExtracting data/train-images-idx3-ubyte.gz\nExtracting data/train-labels-idx1-ubyte.gz\nExtracting data/t10k-images-idx3-ubyte.gz\nExtracting data/t10k-labels-idx1-ubyte.gz\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:102] Found device 0 with properties: \nname: GeForce GTX 1080\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.8225\npciBusID 0000:01:00.0\nTotal memory: 7.92GiB\nFree memory: 7.17GiB\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:126] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_init.cc:136] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:839] Creating TensorFlow device (/gpu:0) -<span class=\"pl-k\">&gt;</span> (device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0)\nInitialized<span class=\"pl-k\">!</span>\nStep 0 (epoch 0.00), 184.2 ms\nMinibatch loss: 12.054, learning rate: 0.010000\nMinibatch error: 90.6%\nValidation error: 90.2%\nStep 100 (epoch 0.12), 4.6 ms\nMinibatch loss: 5.381, learning rate: 0.010000\nMinibatch error: 85.9%\nValidation error: 88.7%\nStep 200 (epoch 0.23), 4.1 ms\nMinibatch loss: 5.389, learning rate: 0.010000\nMinibatch error: 89.1%\nValidation error: 88.7%\nStep 300 (epoch 0.35), 4.2 ms\nMinibatch loss: 5.360, learning rate: 0.010000\nMinibatch error: 93.8%\nValidation error: 88.7%\nStep 400 (epoch 0.47), 4.2 ms\nMinibatch loss: 5.287, learning rate: 0.010000\nMinibatch error: 85.9%\nValidation error: 88.7%\nStep 500 (epoch 0.58), 4.1 ms\nMinibatch loss: 5.267, learning rate: 0.010000\nMinibatch error: 85.9%\nValidation error: 88.7%\n\n... ... (too long so deleted)\n\nStep 8000 (epoch 9.31), 4.6 ms\nMinibatch loss: 3.924, learning rate: 0.006302\nMinibatch error: 89.1%\nValidation error: 88.7%\nStep 8100 (epoch 9.43), 4.9 ms\nMinibatch loss: 3.925, learning rate: 0.006302\nMinibatch error: 93.8%\nValidation error: 88.7%\nStep 8200 (epoch 9.54), 5.0 ms\nMinibatch loss: 3.898, learning rate: 0.006302\nMinibatch error: 82.8%\nValidation error: 88.7%\nStep 8300 (epoch 9.66), 4.6 ms\nMinibatch loss: 3.882, learning rate: 0.006302\nMinibatch error: 81.2%\nValidation error: 88.7%\nStep 8400 (epoch 9.77), 4.9 ms\nMinibatch loss: 3.881, learning rate: 0.006302\nMinibatch error: 85.9%\nValidation error: 88.7%\nStep 8500 (epoch 9.89), 4.7 ms\nMinibatch loss: 3.877, learning rate: 0.006302\nMinibatch error: 87.5%\nValidation error: 88.7%\nTest error: 88.7%</pre></div>", "body_text": "Environment info\nOperating System: Ubuntu 14.04 64bit\nActually it is a docker env\nnvidia/cuda:7.5-cudnn4-devel\nInstalled version of CUDA and cuDNN: CUDA7.5 and cuDNN4\n(please attach the output of ls -l /path/to/cuda/lib/libcud*):\n# ls -l /usr/lib/x86_64-linux-gnu/libcud* \nlrwxrwxrwx 1 root root       29 Aug 12 05:12 /usr/lib/x86_64-linux-gnu/libcudnn.so -> /etc/alternatives/libcudnn_so\nlrwxrwxrwx 1 root root       17 Feb  9  2016 /usr/lib/x86_64-linux-gnu/libcudnn.so.4 -> libcudnn.so.4.0.7\n-rw-r--r-- 1 root root 61453024 Feb  9  2016 /usr/lib/x86_64-linux-gnu/libcudnn.so.4.0.7\nlrwxrwxrwx 1 root root       32 Aug 12 05:12 /usr/lib/x86_64-linux-gnu/libcudnn_static.a -> /etc/alternatives/libcudnn_stlib\n-rw-r--r-- 1 root root 62025862 Feb  9  2016 /usr/lib/x86_64-linux-gnu/libcudnn_static_v4.a\n# ls -la /usr/local/nvidia/lib64/libcud*   \nlrwxrwxrwx 1  999  998      17 Aug 16 13:46 /usr/local/nvidia/lib64/libcuda.so -> libcuda.so.367.35\nlrwxrwxrwx 1  999  998      17 Aug 16 13:46 /usr/local/nvidia/lib64/libcuda.so.1 -> libcuda.so.367.35\n-rw-r--r-- 2 root root 8121032 Jul 12 05:51 /usr/local/nvidia/lib64/libcuda.so.367.35\nIf installed from binary pip package, provide:\n\nWhich pip package you installed.\n\nUbuntu/Linux 64-bit, GPU enabled, Python 2.7\nRequires CUDA toolkit 7.5 and CuDNN v4. For other versions, see \"Install from sources\" below.\n$ export TF_BINARY_URL=https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.10.0rc0-cp27-none-linux_x86_64.whl\n\nThe output from python -c \"import tensorflow; print(tensorflow.__version__)\".\n\n# python -c \"import tensorflow; print(tensorflow.__version__)\"\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcurand.so locally\n0.10.0rc0\nSteps to reproduce\n\nrun docker\ndocker run -it nvidia/cuda:7.5-cudnn4-devel\ninstall tensorflow as described in the doc using pip\nrun the example, and it does not converge, logs are pasted in the end\npython /usr/local/lib/python2.7/dist-packages/tensorflow/models/image/mnist/convolution.py\n\nWhat have you tried?\n\nInstall and use the CPU version\nThe mnist example converges well\n\nLogs or other output that would be helpful\n# python /usr/local/lib/python2.7/dist-packages/tensorflow/models/image/mnist/convolutional.py\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcurand.so locally\nExtracting data/train-images-idx3-ubyte.gz\nExtracting data/train-labels-idx1-ubyte.gz\nExtracting data/t10k-images-idx3-ubyte.gz\nExtracting data/t10k-labels-idx1-ubyte.gz\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:102] Found device 0 with properties: \nname: GeForce GTX 1080\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.8225\npciBusID 0000:01:00.0\nTotal memory: 7.92GiB\nFree memory: 7.17GiB\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:126] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_init.cc:136] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:839] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0)\nInitialized!\nStep 0 (epoch 0.00), 184.2 ms\nMinibatch loss: 12.054, learning rate: 0.010000\nMinibatch error: 90.6%\nValidation error: 90.2%\nStep 100 (epoch 0.12), 4.6 ms\nMinibatch loss: 5.381, learning rate: 0.010000\nMinibatch error: 85.9%\nValidation error: 88.7%\nStep 200 (epoch 0.23), 4.1 ms\nMinibatch loss: 5.389, learning rate: 0.010000\nMinibatch error: 89.1%\nValidation error: 88.7%\nStep 300 (epoch 0.35), 4.2 ms\nMinibatch loss: 5.360, learning rate: 0.010000\nMinibatch error: 93.8%\nValidation error: 88.7%\nStep 400 (epoch 0.47), 4.2 ms\nMinibatch loss: 5.287, learning rate: 0.010000\nMinibatch error: 85.9%\nValidation error: 88.7%\nStep 500 (epoch 0.58), 4.1 ms\nMinibatch loss: 5.267, learning rate: 0.010000\nMinibatch error: 85.9%\nValidation error: 88.7%\n\n... ... (too long so deleted)\n\nStep 8000 (epoch 9.31), 4.6 ms\nMinibatch loss: 3.924, learning rate: 0.006302\nMinibatch error: 89.1%\nValidation error: 88.7%\nStep 8100 (epoch 9.43), 4.9 ms\nMinibatch loss: 3.925, learning rate: 0.006302\nMinibatch error: 93.8%\nValidation error: 88.7%\nStep 8200 (epoch 9.54), 5.0 ms\nMinibatch loss: 3.898, learning rate: 0.006302\nMinibatch error: 82.8%\nValidation error: 88.7%\nStep 8300 (epoch 9.66), 4.6 ms\nMinibatch loss: 3.882, learning rate: 0.006302\nMinibatch error: 81.2%\nValidation error: 88.7%\nStep 8400 (epoch 9.77), 4.9 ms\nMinibatch loss: 3.881, learning rate: 0.006302\nMinibatch error: 85.9%\nValidation error: 88.7%\nStep 8500 (epoch 9.89), 4.7 ms\nMinibatch loss: 3.877, learning rate: 0.006302\nMinibatch error: 87.5%\nValidation error: 88.7%\nTest error: 88.7%", "body": "### Environment info\n\nOperating System: Ubuntu 14.04 64bit\nActually it is a docker env\nnvidia/cuda:7.5-cudnn4-devel\n\nInstalled version of CUDA and cuDNN: CUDA7.5 and cuDNN4\n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`):\n\n``` bash\n# ls -l /usr/lib/x86_64-linux-gnu/libcud* \nlrwxrwxrwx 1 root root       29 Aug 12 05:12 /usr/lib/x86_64-linux-gnu/libcudnn.so -> /etc/alternatives/libcudnn_so\nlrwxrwxrwx 1 root root       17 Feb  9  2016 /usr/lib/x86_64-linux-gnu/libcudnn.so.4 -> libcudnn.so.4.0.7\n-rw-r--r-- 1 root root 61453024 Feb  9  2016 /usr/lib/x86_64-linux-gnu/libcudnn.so.4.0.7\nlrwxrwxrwx 1 root root       32 Aug 12 05:12 /usr/lib/x86_64-linux-gnu/libcudnn_static.a -> /etc/alternatives/libcudnn_stlib\n-rw-r--r-- 1 root root 62025862 Feb  9  2016 /usr/lib/x86_64-linux-gnu/libcudnn_static_v4.a\n```\n\n``` bash\n# ls -la /usr/local/nvidia/lib64/libcud*   \nlrwxrwxrwx 1  999  998      17 Aug 16 13:46 /usr/local/nvidia/lib64/libcuda.so -> libcuda.so.367.35\nlrwxrwxrwx 1  999  998      17 Aug 16 13:46 /usr/local/nvidia/lib64/libcuda.so.1 -> libcuda.so.367.35\n-rw-r--r-- 2 root root 8121032 Jul 12 05:51 /usr/local/nvidia/lib64/libcuda.so.367.35\n```\n\nIf installed from binary pip package, provide:\n1. Which pip package you installed.\n\nUbuntu/Linux 64-bit, GPU enabled, Python 2.7\nRequires CUDA toolkit 7.5 and CuDNN v4. For other versions, see \"Install from sources\" below.\n$ export TF_BINARY_URL=https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.10.0rc0-cp27-none-linux_x86_64.whl\n1. The output from `python -c \"import tensorflow; print(tensorflow.__version__)\"`.\n\n``` bash\n# python -c \"import tensorflow; print(tensorflow.__version__)\"\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcurand.so locally\n0.10.0rc0\n```\n### Steps to reproduce\n1. run docker\n   docker run -it nvidia/cuda:7.5-cudnn4-devel\n2. install tensorflow as described in the doc using pip\n3. run the example, and it does not converge, logs are pasted in the end\n   `python /usr/local/lib/python2.7/dist-packages/tensorflow/models/image/mnist/convolution.py`\n### What have you tried?\n1. Install and use the CPU version\n   The mnist example converges well\n### Logs or other output that would be helpful\n\n``` bash\n# python /usr/local/lib/python2.7/dist-packages/tensorflow/models/image/mnist/convolutional.py\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:108] successfully opened CUDA library libcurand.so locally\nExtracting data/train-images-idx3-ubyte.gz\nExtracting data/train-labels-idx1-ubyte.gz\nExtracting data/t10k-images-idx3-ubyte.gz\nExtracting data/t10k-labels-idx1-ubyte.gz\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:102] Found device 0 with properties: \nname: GeForce GTX 1080\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.8225\npciBusID 0000:01:00.0\nTotal memory: 7.92GiB\nFree memory: 7.17GiB\nI tensorflow/core/common_runtime/gpu/gpu_init.cc:126] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_init.cc:136] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:839] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0)\nInitialized!\nStep 0 (epoch 0.00), 184.2 ms\nMinibatch loss: 12.054, learning rate: 0.010000\nMinibatch error: 90.6%\nValidation error: 90.2%\nStep 100 (epoch 0.12), 4.6 ms\nMinibatch loss: 5.381, learning rate: 0.010000\nMinibatch error: 85.9%\nValidation error: 88.7%\nStep 200 (epoch 0.23), 4.1 ms\nMinibatch loss: 5.389, learning rate: 0.010000\nMinibatch error: 89.1%\nValidation error: 88.7%\nStep 300 (epoch 0.35), 4.2 ms\nMinibatch loss: 5.360, learning rate: 0.010000\nMinibatch error: 93.8%\nValidation error: 88.7%\nStep 400 (epoch 0.47), 4.2 ms\nMinibatch loss: 5.287, learning rate: 0.010000\nMinibatch error: 85.9%\nValidation error: 88.7%\nStep 500 (epoch 0.58), 4.1 ms\nMinibatch loss: 5.267, learning rate: 0.010000\nMinibatch error: 85.9%\nValidation error: 88.7%\n\n... ... (too long so deleted)\n\nStep 8000 (epoch 9.31), 4.6 ms\nMinibatch loss: 3.924, learning rate: 0.006302\nMinibatch error: 89.1%\nValidation error: 88.7%\nStep 8100 (epoch 9.43), 4.9 ms\nMinibatch loss: 3.925, learning rate: 0.006302\nMinibatch error: 93.8%\nValidation error: 88.7%\nStep 8200 (epoch 9.54), 5.0 ms\nMinibatch loss: 3.898, learning rate: 0.006302\nMinibatch error: 82.8%\nValidation error: 88.7%\nStep 8300 (epoch 9.66), 4.6 ms\nMinibatch loss: 3.882, learning rate: 0.006302\nMinibatch error: 81.2%\nValidation error: 88.7%\nStep 8400 (epoch 9.77), 4.9 ms\nMinibatch loss: 3.881, learning rate: 0.006302\nMinibatch error: 85.9%\nValidation error: 88.7%\nStep 8500 (epoch 9.89), 4.7 ms\nMinibatch loss: 3.877, learning rate: 0.006302\nMinibatch error: 87.5%\nValidation error: 88.7%\nTest error: 88.7%\n```\n"}