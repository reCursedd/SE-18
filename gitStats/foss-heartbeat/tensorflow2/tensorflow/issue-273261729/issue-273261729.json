{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14504", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14504/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14504/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14504/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14504", "id": 273261729, "node_id": "MDU6SXNzdWUyNzMyNjE3Mjk=", "number": 14504, "title": "Cannot use keras estimator_from_model() in distributed cluster", "user": {"login": "droidicus", "id": 6981482, "node_id": "MDQ6VXNlcjY5ODE0ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6981482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/droidicus", "html_url": "https://github.com/droidicus", "followers_url": "https://api.github.com/users/droidicus/followers", "following_url": "https://api.github.com/users/droidicus/following{/other_user}", "gists_url": "https://api.github.com/users/droidicus/gists{/gist_id}", "starred_url": "https://api.github.com/users/droidicus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/droidicus/subscriptions", "organizations_url": "https://api.github.com/users/droidicus/orgs", "repos_url": "https://api.github.com/users/droidicus/repos", "events_url": "https://api.github.com/users/droidicus/events{/privacy}", "received_events_url": "https://api.github.com/users/droidicus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, {"login": "yifeif", "id": 1192265, "node_id": "MDQ6VXNlcjExOTIyNjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1192265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yifeif", "html_url": "https://github.com/yifeif", "followers_url": "https://api.github.com/users/yifeif/followers", "following_url": "https://api.github.com/users/yifeif/following{/other_user}", "gists_url": "https://api.github.com/users/yifeif/gists{/gist_id}", "starred_url": "https://api.github.com/users/yifeif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yifeif/subscriptions", "organizations_url": "https://api.github.com/users/yifeif/orgs", "repos_url": "https://api.github.com/users/yifeif/repos", "events_url": "https://api.github.com/users/yifeif/events{/privacy}", "received_events_url": "https://api.github.com/users/yifeif/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 19, "created_at": "2017-11-12T20:24:11Z", "updated_at": "2018-03-07T16:44:46Z", "closed_at": "2018-02-23T05:43:34Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: tf.VERSION = 1.4.0 tf.GIT_VERSION = v1.4.0-rc1-11-g130a514</li>\n<li><strong>Python version</strong>: 2.7.12</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: 8.0.61/6.0.21</li>\n<li><strong>GPU model and memory</strong>: NVIDIA Tesla M60 8 GB</li>\n<li><strong>Exact command to reproduce</strong>: See Below</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>When trying to use an estimator that is derived from <code>tf.keras.estimator.estimator_from_model()</code> and training with <code>tf.estimator.train_and_evaluate()</code>, it will work as expected if in a standalone non-distributed session. However, when in a distributed training cluster and the TF_CONFIG has the cluster information set, there is a an explicit device assignment of an op to a device that is not valid in the current cluster spec.</p>\n<p>Below is code to reproduce this issue. When <code>simulate_cluster</code> is set to True an error is throws as shown in the log below. When <code>simulate_cluster</code> is set to False the network is constructed and trained as intended. It should be noted that the error occurs when calling <code>tf.keras.estimator.model_to_estimator(keras_model=model)</code> and not when doing the training, the cluster config is required for the distributed training to take place.</p>\n<p>The TF_CONFIG that is set below is derived from calling the code using the gcloud SDK as follows:<br>\n<code>gcloud ml-engine local train --distributed --parameter-server-count=1 --worker-count=2 --package-path=trainer --module-name=trainer.task --</code></p>\n<h3>Source code / logs</h3>\n<p>Minimal example:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> os\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\ntf.logging.set_verbosity(tf.logging.<span class=\"pl-c1\">INFO</span>)\n\nsimulate_cluster <span class=\"pl-k\">=</span> <span class=\"pl-c1\">True</span>\n<span class=\"pl-k\">if</span> simulate_cluster:\n    os.environ[<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>TF_CONFIG<span class=\"pl-pds\">\"</span></span>] <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>{\"environment\": \"cloud\", \"cluster\": {\"worker\": [\"localhost:27184\", \"localhost:27185\"], <span class=\"pl-c1\">\\</span></span>\n<span class=\"pl-s\">               \"ps\": [\"localhost:27183\"], \"master\": [\"localhost:27182\"]}, \"job\": {\"args\": [\"\"], <span class=\"pl-c1\">\\</span></span>\n<span class=\"pl-s\">               \"job_name\": \"trainer.task\"}, \"task\": {\"index\": 0, \"type\": \"master\"<span class=\"pl-c1\">}}</span><span class=\"pl-pds\">'</span></span>\n<span class=\"pl-k\">else</span>:\n    os.environ[<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>TF_CONFIG<span class=\"pl-pds\">\"</span></span>] <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span><span class=\"pl-pds\">'</span></span>\n\ninputs <span class=\"pl-k\">=</span> tf.keras.layers.Input(<span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">10</span>,))\noutputs <span class=\"pl-k\">=</span> tf.keras.layers.Dense(<span class=\"pl-c1\">10</span>)(inputs)\nmodel <span class=\"pl-k\">=</span> tf.keras.models.Model(inputs, outputs)\nmodel.compile(<span class=\"pl-v\">optimizer</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>Adam<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">loss</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>binary_crossentropy<span class=\"pl-pds\">'</span></span>)\nest_keras <span class=\"pl-k\">=</span> tf.keras.estimator.model_to_estimator(<span class=\"pl-v\">keras_model</span><span class=\"pl-k\">=</span>model) <span class=\"pl-c\"><span class=\"pl-c\">#</span> InvalidArgumentError thrown here if simulate_cluster is True</span>\n\ninput_name <span class=\"pl-k\">=</span> model.input_names[<span class=\"pl-c1\">0</span>]\ndata <span class=\"pl-k\">=</span> np.random.rand(<span class=\"pl-c1\">1000</span>,<span class=\"pl-c1\">10</span>).astype(np.float32)\ntrain_input_fn <span class=\"pl-k\">=</span> tf.estimator.inputs.numpy_input_fn({input_name:data}, data, <span class=\"pl-v\">batch_size</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">10</span>, <span class=\"pl-v\">num_epochs</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">None</span>, <span class=\"pl-v\">shuffle</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>)\n\ntrain_spec <span class=\"pl-k\">=</span> tf.estimator.TrainSpec(<span class=\"pl-v\">input_fn</span><span class=\"pl-k\">=</span>train_input_fn, <span class=\"pl-v\">max_steps</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">100</span>)\neval_spec <span class=\"pl-k\">=</span> tf.estimator.EvalSpec(<span class=\"pl-v\">input_fn</span><span class=\"pl-k\">=</span>train_input_fn, <span class=\"pl-v\">steps</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">10</span>)\ntf.estimator.train_and_evaluate(est_keras, train_spec, eval_spec)</pre></div>\n<p>InvalidArgumentError emitted when <code>simulate_cluster = True</code>:</p>\n<div class=\"highlight highlight-source-python\"><pre>Traceback (most recent call last):\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>minimal.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">19</span>, <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>\n    est_keras <span class=\"pl-k\">=</span> tf.keras.estimator.model_to_estimator(<span class=\"pl-v\">keras_model</span><span class=\"pl-k\">=</span>model)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/estimator.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">280</span>, <span class=\"pl-k\">in</span> model_to_estimator\n    _save_first_checkpoint(keras_model, est, custom_objects, keras_weights)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/estimator.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">217</span>, <span class=\"pl-k\">in</span> _save_first_checkpoint\n    model.set_weights(keras_weights)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/engine/topology.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">766</span>, <span class=\"pl-k\">in</span> set_weights\n    K.batch_set_value(tuples)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/backend.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">2406</span>, <span class=\"pl-k\">in</span> batch_set_value\n    get_session().run(assign_ops, <span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>feed_dict)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/backend.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">376</span>, <span class=\"pl-k\">in</span> get_session\n    _initialize_variables(session)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/backend.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">554</span>, <span class=\"pl-k\">in</span> _initialize_variables\n    [variables_module.is_variable_initialized(v) <span class=\"pl-k\">for</span> v <span class=\"pl-k\">in</span> candidate_vars])\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">889</span>, <span class=\"pl-k\">in</span> run\n    run_metadata_ptr)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">1120</span>, <span class=\"pl-k\">in</span> _run\n    feed_dict_tensor, options, run_metadata)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">1317</span>, <span class=\"pl-k\">in</span> _do_run\n    options, run_metadata)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">1336</span>, <span class=\"pl-k\">in</span> _do_call\n    <span class=\"pl-k\">raise</span> <span class=\"pl-c1\">type</span>(e)(node_def, op, message)\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Cannot assign a device <span class=\"pl-k\">for</span> operation <span class=\"pl-s\"><span class=\"pl-pds\">'</span>loss/dense_1_loss/sub<span class=\"pl-pds\">'</span></span>: Operation was explicitly assigned to <span class=\"pl-k\">/</span>job:master<span class=\"pl-k\">/</span>task:<span class=\"pl-c1\">0</span> but available devices are [ <span class=\"pl-k\">/</span>job:localhost<span class=\"pl-k\">/</span>replica:<span class=\"pl-c1\">0</span><span class=\"pl-k\">/</span>task:<span class=\"pl-c1\">0</span><span class=\"pl-k\">/</span>device:<span class=\"pl-c1\">CPU</span>:<span class=\"pl-c1\">0</span>, <span class=\"pl-k\">/</span>job:localhost<span class=\"pl-k\">/</span>replica:<span class=\"pl-c1\">0</span><span class=\"pl-k\">/</span>task:<span class=\"pl-c1\">0</span><span class=\"pl-k\">/</span>device:<span class=\"pl-c1\">GPU</span>:<span class=\"pl-c1\">0</span>, <span class=\"pl-k\">/</span>job:localhost<span class=\"pl-k\">/</span>replica:<span class=\"pl-c1\">0</span><span class=\"pl-k\">/</span>task:<span class=\"pl-c1\">0</span><span class=\"pl-k\">/</span>device:<span class=\"pl-c1\">GPU</span>:<span class=\"pl-c1\">1</span>, <span class=\"pl-k\">/</span>job:localhost<span class=\"pl-k\">/</span>replica:<span class=\"pl-c1\">0</span><span class=\"pl-k\">/</span>task:<span class=\"pl-c1\">0</span><span class=\"pl-k\">/</span>device:<span class=\"pl-c1\">GPU</span>:<span class=\"pl-c1\">2</span>, <span class=\"pl-k\">/</span>job:localhost<span class=\"pl-k\">/</span>replica:<span class=\"pl-c1\">0</span><span class=\"pl-k\">/</span>task:<span class=\"pl-c1\">0</span><span class=\"pl-k\">/</span>device:<span class=\"pl-c1\">GPU</span>:<span class=\"pl-c1\">3</span> ]. Make sure the device specification refers to a valid device.\n         [[Node: loss<span class=\"pl-k\">/</span>dense_1_loss<span class=\"pl-k\">/</span>sub = Sub[T=<span class=\"pl-c1\">DT_FLOAT</span>, _device=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/job:master/task:0<span class=\"pl-pds\">\"</span></span>](loss<span class=\"pl-k\">/</span>dense_1_loss<span class=\"pl-k\">/</span>sub<span class=\"pl-k\">/</span>x, loss<span class=\"pl-k\">/</span>dense_1_loss<span class=\"pl-k\">/</span>Const)]]\n\nCaused by op <span class=\"pl-s\"><span class=\"pl-k\">u</span><span class=\"pl-pds\">'</span>loss/dense_1_loss/sub<span class=\"pl-pds\">'</span></span>, defined at:\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>minimal.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">19</span>, <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>\n    est_keras <span class=\"pl-k\">=</span> tf.keras.estimator.model_to_estimator(<span class=\"pl-v\">keras_model</span><span class=\"pl-k\">=</span>model)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/estimator.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">280</span>, <span class=\"pl-k\">in</span> model_to_estimator\n    _save_first_checkpoint(keras_model, est, custom_objects, keras_weights)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/estimator.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">209</span>, <span class=\"pl-k\">in</span> _save_first_checkpoint\n    custom_objects)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/estimator.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">124</span>, <span class=\"pl-k\">in</span> _clone_and_build_model\n    target_tensors<span class=\"pl-k\">=</span>target_tensors)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/engine/training.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">840</span>, <span class=\"pl-k\">in</span> <span class=\"pl-c1\">compile</span>\n    output_loss <span class=\"pl-k\">=</span> weighted_loss(y_true, y_pred, sample_weight, mask)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/engine/training.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">444</span>, <span class=\"pl-k\">in</span> weighted\n    score_array <span class=\"pl-k\">=</span> fn(y_true, y_pred)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/losses.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">78</span>, <span class=\"pl-k\">in</span> binary_crossentropy\n    <span class=\"pl-k\">return</span> K.mean(K.binary_crossentropy(y_true, y_pred), <span class=\"pl-v\">axis</span><span class=\"pl-k\">=</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/backend.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">3027</span>, <span class=\"pl-k\">in</span> binary_crossentropy\n    output <span class=\"pl-k\">=</span> clip_ops.clip_by_value(output, epsilon_, <span class=\"pl-c1\">1</span> <span class=\"pl-k\">-</span> epsilon_)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/math_ops.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">910</span>, <span class=\"pl-k\">in</span> r_binary_op_wrapper\n    <span class=\"pl-k\">return</span> func(x, y, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span>name)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_math_ops.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">4636</span>, <span class=\"pl-k\">in</span> _sub\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Sub<span class=\"pl-pds\">\"</span></span>, x<span class=\"pl-k\">=</span>x, y<span class=\"pl-k\">=</span>y, name<span class=\"pl-k\">=</span>name)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">787</span>, <span class=\"pl-k\">in</span> _apply_op_helper\n    op_def<span class=\"pl-k\">=</span>op_def)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">2956</span>, <span class=\"pl-k\">in</span> create_op\n    op_def<span class=\"pl-k\">=</span>op_def)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">1470</span>, <span class=\"pl-k\">in</span> <span class=\"pl-c1\">__init__</span>\n    <span class=\"pl-c1\">self</span>._traceback <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>._graph._extract_stack()  <span class=\"pl-c\"><span class=\"pl-c\">#</span> pylint: disable=protected-access</span>\n\nInvalidArgumentError (see above <span class=\"pl-k\">for</span> traceback): Cannot assign a device <span class=\"pl-k\">for</span> operation <span class=\"pl-s\"><span class=\"pl-pds\">'</span>loss/dense_1_loss/sub<span class=\"pl-pds\">'</span></span>: Operation was explicitly assigned to <span class=\"pl-k\">/</span>job:master<span class=\"pl-k\">/</span>task:<span class=\"pl-c1\">0</span> but available devices are [ <span class=\"pl-k\">/</span>job:localhost<span class=\"pl-k\">/</span>replica:<span class=\"pl-c1\">0</span><span class=\"pl-k\">/</span>task:<span class=\"pl-c1\">0</span><span class=\"pl-k\">/</span>device:<span class=\"pl-c1\">CPU</span>:<span class=\"pl-c1\">0</span>, <span class=\"pl-k\">/</span>job:localhost<span class=\"pl-k\">/</span>replica:<span class=\"pl-c1\">0</span><span class=\"pl-k\">/</span>task:<span class=\"pl-c1\">0</span><span class=\"pl-k\">/</span>device:<span class=\"pl-c1\">GPU</span>:<span class=\"pl-c1\">0</span>, <span class=\"pl-k\">/</span>job:localhost<span class=\"pl-k\">/</span>replica:<span class=\"pl-c1\">0</span><span class=\"pl-k\">/</span>task:<span class=\"pl-c1\">0</span><span class=\"pl-k\">/</span>device:<span class=\"pl-c1\">GPU</span>:<span class=\"pl-c1\">1</span>, <span class=\"pl-k\">/</span>job:localhost<span class=\"pl-k\">/</span>replica:<span class=\"pl-c1\">0</span><span class=\"pl-k\">/</span>task:<span class=\"pl-c1\">0</span><span class=\"pl-k\">/</span>device:<span class=\"pl-c1\">GPU</span>:<span class=\"pl-c1\">2</span>, <span class=\"pl-k\">/</span>job:localhost<span class=\"pl-k\">/</span>replica:<span class=\"pl-c1\">0</span><span class=\"pl-k\">/</span>task:<span class=\"pl-c1\">0</span><span class=\"pl-k\">/</span>device:<span class=\"pl-c1\">GPU</span>:<span class=\"pl-c1\">3</span> ]. Make sure the device specification refers to a valid device.\n         [[Node: loss<span class=\"pl-k\">/</span>dense_1_loss<span class=\"pl-k\">/</span>sub = Sub[T=<span class=\"pl-c1\">DT_FLOAT</span>, _device=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/job:master/task:0<span class=\"pl-pds\">\"</span></span>](loss<span class=\"pl-k\">/</span>dense_1_loss<span class=\"pl-k\">/</span>sub<span class=\"pl-k\">/</span>x, loss<span class=\"pl-k\">/</span>dense_1_loss<span class=\"pl-k\">/</span>Const)]]</pre></div>\n<p>Full logs, tf_env, and more are here: <a href=\"https://gist.github.com/droidicus/2abd4ddad81a1e9169a1c7a100057b15\">https://gist.github.com/droidicus/2abd4ddad81a1e9169a1c7a100057b15</a></p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): tf.VERSION = 1.4.0 tf.GIT_VERSION = v1.4.0-rc1-11-g130a514\nPython version: 2.7.12\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: 8.0.61/6.0.21\nGPU model and memory: NVIDIA Tesla M60 8 GB\nExact command to reproduce: See Below\n\nDescribe the problem\nWhen trying to use an estimator that is derived from tf.keras.estimator.estimator_from_model() and training with tf.estimator.train_and_evaluate(), it will work as expected if in a standalone non-distributed session. However, when in a distributed training cluster and the TF_CONFIG has the cluster information set, there is a an explicit device assignment of an op to a device that is not valid in the current cluster spec.\nBelow is code to reproduce this issue. When simulate_cluster is set to True an error is throws as shown in the log below. When simulate_cluster is set to False the network is constructed and trained as intended. It should be noted that the error occurs when calling tf.keras.estimator.model_to_estimator(keras_model=model) and not when doing the training, the cluster config is required for the distributed training to take place.\nThe TF_CONFIG that is set below is derived from calling the code using the gcloud SDK as follows:\ngcloud ml-engine local train --distributed --parameter-server-count=1 --worker-count=2 --package-path=trainer --module-name=trainer.task --\nSource code / logs\nMinimal example:\nimport os\nimport numpy as np\nimport tensorflow as tf\n\ntf.logging.set_verbosity(tf.logging.INFO)\n\nsimulate_cluster = True\nif simulate_cluster:\n    os.environ[\"TF_CONFIG\"] = '{\"environment\": \"cloud\", \"cluster\": {\"worker\": [\"localhost:27184\", \"localhost:27185\"], \\\n               \"ps\": [\"localhost:27183\"], \"master\": [\"localhost:27182\"]}, \"job\": {\"args\": [\"\"], \\\n               \"job_name\": \"trainer.task\"}, \"task\": {\"index\": 0, \"type\": \"master\"}}'\nelse:\n    os.environ[\"TF_CONFIG\"] = ''\n\ninputs = tf.keras.layers.Input(shape=(10,))\noutputs = tf.keras.layers.Dense(10)(inputs)\nmodel = tf.keras.models.Model(inputs, outputs)\nmodel.compile(optimizer='Adam', loss='binary_crossentropy')\nest_keras = tf.keras.estimator.model_to_estimator(keras_model=model) # InvalidArgumentError thrown here if simulate_cluster is True\n\ninput_name = model.input_names[0]\ndata = np.random.rand(1000,10).astype(np.float32)\ntrain_input_fn = tf.estimator.inputs.numpy_input_fn({input_name:data}, data, batch_size=10, num_epochs=None, shuffle=False)\n\ntrain_spec = tf.estimator.TrainSpec(input_fn=train_input_fn, max_steps=100)\neval_spec = tf.estimator.EvalSpec(input_fn=train_input_fn, steps=10)\ntf.estimator.train_and_evaluate(est_keras, train_spec, eval_spec)\nInvalidArgumentError emitted when simulate_cluster = True:\nTraceback (most recent call last):\n  File \"minimal.py\", line 19, in <module>\n    est_keras = tf.keras.estimator.model_to_estimator(keras_model=model)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/estimator.py\", line 280, in model_to_estimator\n    _save_first_checkpoint(keras_model, est, custom_objects, keras_weights)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/estimator.py\", line 217, in _save_first_checkpoint\n    model.set_weights(keras_weights)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/engine/topology.py\", line 766, in set_weights\n    K.batch_set_value(tuples)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/backend.py\", line 2406, in batch_set_value\n    get_session().run(assign_ops, feed_dict=feed_dict)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/backend.py\", line 376, in get_session\n    _initialize_variables(session)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/backend.py\", line 554, in _initialize_variables\n    [variables_module.is_variable_initialized(v) for v in candidate_vars])\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 889, in run\n    run_metadata_ptr)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1120, in _run\n    feed_dict_tensor, options, run_metadata)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1317, in _do_run\n    options, run_metadata)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1336, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Cannot assign a device for operation 'loss/dense_1_loss/sub': Operation was explicitly assigned to /job:master/task:0 but available devices are [ /job:localhost/replica:0/task:0/device:CPU:0, /job:localhost/replica:0/task:0/device:GPU:0, /job:localhost/replica:0/task:0/device:GPU:1, /job:localhost/replica:0/task:0/device:GPU:2, /job:localhost/replica:0/task:0/device:GPU:3 ]. Make sure the device specification refers to a valid device.\n         [[Node: loss/dense_1_loss/sub = Sub[T=DT_FLOAT, _device=\"/job:master/task:0\"](loss/dense_1_loss/sub/x, loss/dense_1_loss/Const)]]\n\nCaused by op u'loss/dense_1_loss/sub', defined at:\n  File \"minimal.py\", line 19, in <module>\n    est_keras = tf.keras.estimator.model_to_estimator(keras_model=model)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/estimator.py\", line 280, in model_to_estimator\n    _save_first_checkpoint(keras_model, est, custom_objects, keras_weights)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/estimator.py\", line 209, in _save_first_checkpoint\n    custom_objects)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/estimator.py\", line 124, in _clone_and_build_model\n    target_tensors=target_tensors)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/engine/training.py\", line 840, in compile\n    output_loss = weighted_loss(y_true, y_pred, sample_weight, mask)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/engine/training.py\", line 444, in weighted\n    score_array = fn(y_true, y_pred)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/losses.py\", line 78, in binary_crossentropy\n    return K.mean(K.binary_crossentropy(y_true, y_pred), axis=-1)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/backend.py\", line 3027, in binary_crossentropy\n    output = clip_ops.clip_by_value(output, epsilon_, 1 - epsilon_)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/math_ops.py\", line 910, in r_binary_op_wrapper\n    return func(x, y, name=name)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_math_ops.py\", line 4636, in _sub\n    \"Sub\", x=x, y=y, name=name)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\n    op_def=op_def)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 2956, in create_op\n    op_def=op_def)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1470, in __init__\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\n\nInvalidArgumentError (see above for traceback): Cannot assign a device for operation 'loss/dense_1_loss/sub': Operation was explicitly assigned to /job:master/task:0 but available devices are [ /job:localhost/replica:0/task:0/device:CPU:0, /job:localhost/replica:0/task:0/device:GPU:0, /job:localhost/replica:0/task:0/device:GPU:1, /job:localhost/replica:0/task:0/device:GPU:2, /job:localhost/replica:0/task:0/device:GPU:3 ]. Make sure the device specification refers to a valid device.\n         [[Node: loss/dense_1_loss/sub = Sub[T=DT_FLOAT, _device=\"/job:master/task:0\"](loss/dense_1_loss/sub/x, loss/dense_1_loss/Const)]]\nFull logs, tf_env, and more are here: https://gist.github.com/droidicus/2abd4ddad81a1e9169a1c7a100057b15", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: tf.VERSION = 1.4.0 tf.GIT_VERSION = v1.4.0-rc1-11-g130a514\r\n- **Python version**: 2.7.12\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: 8.0.61/6.0.21\r\n- **GPU model and memory**: NVIDIA Tesla M60 8 GB\r\n- **Exact command to reproduce**: See Below\r\n\r\n### Describe the problem\r\nWhen trying to use an estimator that is derived from ```tf.keras.estimator.estimator_from_model()``` and training with ```tf.estimator.train_and_evaluate()```, it will work as expected if in a standalone non-distributed session. However, when in a distributed training cluster and the TF_CONFIG has the cluster information set, there is a an explicit device assignment of an op to a device that is not valid in the current cluster spec.\r\n\r\nBelow is code to reproduce this issue. When ```simulate_cluster``` is set to True an error is throws as shown in the log below. When ```simulate_cluster``` is set to False the network is constructed and trained as intended. It should be noted that the error occurs when calling ```tf.keras.estimator.model_to_estimator(keras_model=model)``` and not when doing the training, the cluster config is required for the distributed training to take place.\r\n\r\nThe TF_CONFIG that is set below is derived from calling the code using the gcloud SDK as follows:\r\n```gcloud ml-engine local train --distributed --parameter-server-count=1 --worker-count=2 --package-path=trainer --module-name=trainer.task --```\r\n\r\n### Source code / logs\r\nMinimal example:\r\n```python\r\nimport os\r\nimport numpy as np\r\nimport tensorflow as tf\r\n\r\ntf.logging.set_verbosity(tf.logging.INFO)\r\n\r\nsimulate_cluster = True\r\nif simulate_cluster:\r\n    os.environ[\"TF_CONFIG\"] = '{\"environment\": \"cloud\", \"cluster\": {\"worker\": [\"localhost:27184\", \"localhost:27185\"], \\\r\n               \"ps\": [\"localhost:27183\"], \"master\": [\"localhost:27182\"]}, \"job\": {\"args\": [\"\"], \\\r\n               \"job_name\": \"trainer.task\"}, \"task\": {\"index\": 0, \"type\": \"master\"}}'\r\nelse:\r\n    os.environ[\"TF_CONFIG\"] = ''\r\n\r\ninputs = tf.keras.layers.Input(shape=(10,))\r\noutputs = tf.keras.layers.Dense(10)(inputs)\r\nmodel = tf.keras.models.Model(inputs, outputs)\r\nmodel.compile(optimizer='Adam', loss='binary_crossentropy')\r\nest_keras = tf.keras.estimator.model_to_estimator(keras_model=model) # InvalidArgumentError thrown here if simulate_cluster is True\r\n\r\ninput_name = model.input_names[0]\r\ndata = np.random.rand(1000,10).astype(np.float32)\r\ntrain_input_fn = tf.estimator.inputs.numpy_input_fn({input_name:data}, data, batch_size=10, num_epochs=None, shuffle=False)\r\n\r\ntrain_spec = tf.estimator.TrainSpec(input_fn=train_input_fn, max_steps=100)\r\neval_spec = tf.estimator.EvalSpec(input_fn=train_input_fn, steps=10)\r\ntf.estimator.train_and_evaluate(est_keras, train_spec, eval_spec)\r\n```\r\n\r\nInvalidArgumentError emitted when ```simulate_cluster = True```:\r\n```python\r\nTraceback (most recent call last):\r\n  File \"minimal.py\", line 19, in <module>\r\n    est_keras = tf.keras.estimator.model_to_estimator(keras_model=model)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/estimator.py\", line 280, in model_to_estimator\r\n    _save_first_checkpoint(keras_model, est, custom_objects, keras_weights)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/estimator.py\", line 217, in _save_first_checkpoint\r\n    model.set_weights(keras_weights)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/engine/topology.py\", line 766, in set_weights\r\n    K.batch_set_value(tuples)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/backend.py\", line 2406, in batch_set_value\r\n    get_session().run(assign_ops, feed_dict=feed_dict)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/backend.py\", line 376, in get_session\r\n    _initialize_variables(session)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/backend.py\", line 554, in _initialize_variables\r\n    [variables_module.is_variable_initialized(v) for v in candidate_vars])\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 889, in run\r\n    run_metadata_ptr)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1120, in _run\r\n    feed_dict_tensor, options, run_metadata)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1317, in _do_run\r\n    options, run_metadata)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1336, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Cannot assign a device for operation 'loss/dense_1_loss/sub': Operation was explicitly assigned to /job:master/task:0 but available devices are [ /job:localhost/replica:0/task:0/device:CPU:0, /job:localhost/replica:0/task:0/device:GPU:0, /job:localhost/replica:0/task:0/device:GPU:1, /job:localhost/replica:0/task:0/device:GPU:2, /job:localhost/replica:0/task:0/device:GPU:3 ]. Make sure the device specification refers to a valid device.\r\n         [[Node: loss/dense_1_loss/sub = Sub[T=DT_FLOAT, _device=\"/job:master/task:0\"](loss/dense_1_loss/sub/x, loss/dense_1_loss/Const)]]\r\n\r\nCaused by op u'loss/dense_1_loss/sub', defined at:\r\n  File \"minimal.py\", line 19, in <module>\r\n    est_keras = tf.keras.estimator.model_to_estimator(keras_model=model)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/estimator.py\", line 280, in model_to_estimator\r\n    _save_first_checkpoint(keras_model, est, custom_objects, keras_weights)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/estimator.py\", line 209, in _save_first_checkpoint\r\n    custom_objects)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/estimator.py\", line 124, in _clone_and_build_model\r\n    target_tensors=target_tensors)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/engine/training.py\", line 840, in compile\r\n    output_loss = weighted_loss(y_true, y_pred, sample_weight, mask)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/engine/training.py\", line 444, in weighted\r\n    score_array = fn(y_true, y_pred)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/losses.py\", line 78, in binary_crossentropy\r\n    return K.mean(K.binary_crossentropy(y_true, y_pred), axis=-1)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/keras/_impl/keras/backend.py\", line 3027, in binary_crossentropy\r\n    output = clip_ops.clip_by_value(output, epsilon_, 1 - epsilon_)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/math_ops.py\", line 910, in r_binary_op_wrapper\r\n    return func(x, y, name=name)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_math_ops.py\", line 4636, in _sub\r\n    \"Sub\", x=x, y=y, name=name)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py\", line 787, in _apply_op_helper\r\n    op_def=op_def)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 2956, in create_op\r\n    op_def=op_def)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1470, in __init__\r\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\r\n\r\nInvalidArgumentError (see above for traceback): Cannot assign a device for operation 'loss/dense_1_loss/sub': Operation was explicitly assigned to /job:master/task:0 but available devices are [ /job:localhost/replica:0/task:0/device:CPU:0, /job:localhost/replica:0/task:0/device:GPU:0, /job:localhost/replica:0/task:0/device:GPU:1, /job:localhost/replica:0/task:0/device:GPU:2, /job:localhost/replica:0/task:0/device:GPU:3 ]. Make sure the device specification refers to a valid device.\r\n         [[Node: loss/dense_1_loss/sub = Sub[T=DT_FLOAT, _device=\"/job:master/task:0\"](loss/dense_1_loss/sub/x, loss/dense_1_loss/Const)]]\r\n```\r\n\r\nFull logs, tf_env, and more are here: https://gist.github.com/droidicus/2abd4ddad81a1e9169a1c7a100057b15\r\n"}