{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/367986842", "html_url": "https://github.com/tensorflow/tensorflow/issues/14504#issuecomment-367986842", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14504", "id": 367986842, "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzk4Njg0Mg==", "user": {"login": "JVOSU", "id": 36009012, "node_id": "MDQ6VXNlcjM2MDA5MDEy", "avatar_url": "https://avatars1.githubusercontent.com/u/36009012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JVOSU", "html_url": "https://github.com/JVOSU", "followers_url": "https://api.github.com/users/JVOSU/followers", "following_url": "https://api.github.com/users/JVOSU/following{/other_user}", "gists_url": "https://api.github.com/users/JVOSU/gists{/gist_id}", "starred_url": "https://api.github.com/users/JVOSU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JVOSU/subscriptions", "organizations_url": "https://api.github.com/users/JVOSU/orgs", "repos_url": "https://api.github.com/users/JVOSU/repos", "events_url": "https://api.github.com/users/JVOSU/events{/privacy}", "received_events_url": "https://api.github.com/users/JVOSU/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-23T11:39:36Z", "updated_at": "2018-02-23T11:39:36Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1710528\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/bhack\">@bhack</a> I suspect not.  _clone_and_build_model relies on keras.models.clone_model, which appears to copy the underlying keras model, but does not preserve device placement.</p>\n<p>I had to hack model_to_estimator to call multi_gpu_model after the cloned model is created. I suspect a better fix is to have keras.models.clone_model respect device placement, or to remove the need to clone the model altogether.  It is unclear to me why this is needed, rather than to use the input keras_model directly in model_fn and _save_first_checkpoint.</p>\n<p>This is critical to support distributed training + multi_gpu.  Ideally, this would be officially supported in tf 1.6.</p>", "body_text": "@bhack I suspect not.  _clone_and_build_model relies on keras.models.clone_model, which appears to copy the underlying keras model, but does not preserve device placement.\nI had to hack model_to_estimator to call multi_gpu_model after the cloned model is created. I suspect a better fix is to have keras.models.clone_model respect device placement, or to remove the need to clone the model altogether.  It is unclear to me why this is needed, rather than to use the input keras_model directly in model_fn and _save_first_checkpoint.\nThis is critical to support distributed training + multi_gpu.  Ideally, this would be officially supported in tf 1.6.", "body": "@bhack I suspect not.  _clone_and_build_model relies on keras.models.clone_model, which appears to copy the underlying keras model, but does not preserve device placement.  \r\n\r\nI had to hack model_to_estimator to call multi_gpu_model after the cloned model is created. I suspect a better fix is to have keras.models.clone_model respect device placement, or to remove the need to clone the model altogether.  It is unclear to me why this is needed, rather than to use the input keras_model directly in model_fn and _save_first_checkpoint.\r\n\r\nThis is critical to support distributed training + multi_gpu.  Ideally, this would be officially supported in tf 1.6."}