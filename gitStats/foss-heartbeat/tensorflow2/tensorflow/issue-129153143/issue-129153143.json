{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/908", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/908/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/908/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/908/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/908", "id": 129153143, "node_id": "MDU6SXNzdWUxMjkxNTMxNDM=", "number": 908, "title": "Visualizing CNNs with TensorBoard", "user": {"login": "jeandut", "id": 11030901, "node_id": "MDQ6VXNlcjExMDMwOTAx", "avatar_url": "https://avatars1.githubusercontent.com/u/11030901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeandut", "html_url": "https://github.com/jeandut", "followers_url": "https://api.github.com/users/jeandut/followers", "following_url": "https://api.github.com/users/jeandut/following{/other_user}", "gists_url": "https://api.github.com/users/jeandut/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeandut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeandut/subscriptions", "organizations_url": "https://api.github.com/users/jeandut/orgs", "repos_url": "https://api.github.com/users/jeandut/repos", "events_url": "https://api.github.com/users/jeandut/events{/privacy}", "received_events_url": "https://api.github.com/users/jeandut/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 284285184, "node_id": "MDU6TGFiZWwyODQyODUxODQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:tensorboard", "name": "comp:tensorboard", "color": "0052cc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2016-01-27T14:04:21Z", "updated_at": "2018-11-20T17:11:25Z", "closed_at": "2016-04-15T21:51:12Z", "author_association": "NONE", "body_html": "<p>I am a huge fan of Tensorboard visualization however in my opinion it may lack good documentation when the user wants to implement non trivial visualization for example visualizing weights for a CNNs (or even features) (and also on how everything is stored and processed but that is another question).<br>\nI am runing a CNN on a set of color images the structure and the code of my cnn is almost entirely based on Deep MNIST tutorial/MNIST+tensorboard tutorial.<br>\nI have several problems :<br>\nI want to run tf.image_summary(W_conv1) every 100 steps/epochs of the training with W_conv1 being of shape (3,5,5,32) (first conv layer after an RGB image)<br>\nHowever the desired shape is (32,5,5,3) so I reshape using <code>tf.reshape(W_conv1;shape=(32,5,5,3))</code><br>\nI am only using reshape because I could not find a numpy swapaxes equivalent in tf (and from the definition of reshape in numpy doc I am not sure wether or not it does exactly what I wanted but I agree it is my problem...).<br>\nI call a <code>merge_all_summaries()</code> that I feed every 100 steps.<br>\nI run 1000 epochs so I should get 320 images, instead I get 2 or 3 actually displayed !!!<br>\nOn stackoverflow I found out that even if all the images are loaded into the memory (where?!) it does not display them all and that I should do something like initialize an empty tf.summary() and call <code>.MergefromString(image_summary)</code> but I am confused on exactly where in the code I should do that and at what time ?<br>\nMy second issue is I also want to see the weights for the second conv layer which is of shape (32,5,5,64) so I would like to split it into (32x64) 5x5 images does that seem reasonnable ?<br>\nHow would I go about displaying them ?<br>\nSame for features obtained at different layers of the CNN ?<br>\nI understand my questions are trivial but I think a lot of people would benefit (I would certainly) from an example of a clean and efficient code in tensorflow of a CNN on whatever image dataset WITH tensorboard visualization of the weights/features.<br>\nThanks for the work TF is amazing !</p>", "body_text": "I am a huge fan of Tensorboard visualization however in my opinion it may lack good documentation when the user wants to implement non trivial visualization for example visualizing weights for a CNNs (or even features) (and also on how everything is stored and processed but that is another question).\nI am runing a CNN on a set of color images the structure and the code of my cnn is almost entirely based on Deep MNIST tutorial/MNIST+tensorboard tutorial.\nI have several problems :\nI want to run tf.image_summary(W_conv1) every 100 steps/epochs of the training with W_conv1 being of shape (3,5,5,32) (first conv layer after an RGB image)\nHowever the desired shape is (32,5,5,3) so I reshape using tf.reshape(W_conv1;shape=(32,5,5,3))\nI am only using reshape because I could not find a numpy swapaxes equivalent in tf (and from the definition of reshape in numpy doc I am not sure wether or not it does exactly what I wanted but I agree it is my problem...).\nI call a merge_all_summaries() that I feed every 100 steps.\nI run 1000 epochs so I should get 320 images, instead I get 2 or 3 actually displayed !!!\nOn stackoverflow I found out that even if all the images are loaded into the memory (where?!) it does not display them all and that I should do something like initialize an empty tf.summary() and call .MergefromString(image_summary) but I am confused on exactly where in the code I should do that and at what time ?\nMy second issue is I also want to see the weights for the second conv layer which is of shape (32,5,5,64) so I would like to split it into (32x64) 5x5 images does that seem reasonnable ?\nHow would I go about displaying them ?\nSame for features obtained at different layers of the CNN ?\nI understand my questions are trivial but I think a lot of people would benefit (I would certainly) from an example of a clean and efficient code in tensorflow of a CNN on whatever image dataset WITH tensorboard visualization of the weights/features.\nThanks for the work TF is amazing !", "body": "I am a huge fan of Tensorboard visualization however in my opinion it may lack good documentation when the user wants to implement non trivial visualization for example visualizing weights for a CNNs (or even features) (and also on how everything is stored and processed but that is another question).  \nI am runing a CNN on a set of color images the structure and the code of my cnn is almost entirely based on Deep MNIST tutorial/MNIST+tensorboard tutorial.\nI have several problems :\nI want to run tf.image_summary(W_conv1) every 100 steps/epochs of the training with W_conv1 being of shape (3,5,5,32) (first conv layer after an RGB image)\nHowever the desired shape is (32,5,5,3) so I reshape using `tf.reshape(W_conv1;shape=(32,5,5,3))`\nI am only using reshape because I could not find a numpy swapaxes equivalent in tf (and from the definition of reshape in numpy doc I am not sure wether or not it does exactly what I wanted but I agree it is my problem...).\nI call a `merge_all_summaries()` that I feed every 100 steps.\nI run 1000 epochs so I should get 320 images, instead I get 2 or 3 actually displayed !!!\nOn stackoverflow I found out that even if all the images are loaded into the memory (where?!) it does not display them all and that I should do something like initialize an empty tf.summary() and call `.MergefromString(image_summary)` but I am confused on exactly where in the code I should do that and at what time ?\nMy second issue is I also want to see the weights for the second conv layer which is of shape (32,5,5,64) so I would like to split it into (32x64) 5x5 images does that seem reasonnable ?\nHow would I go about displaying them ?\nSame for features obtained at different layers of the CNN ?\nI understand my questions are trivial but I think a lot of people would benefit (I would certainly) from an example of a clean and efficient code in tensorflow of a CNN on whatever image dataset WITH tensorboard visualization of the weights/features.\nThanks for the work TF is amazing !\n"}