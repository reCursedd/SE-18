{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/176099367", "html_url": "https://github.com/tensorflow/tensorflow/issues/908#issuecomment-176099367", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/908", "id": 176099367, "node_id": "MDEyOklzc3VlQ29tbWVudDE3NjA5OTM2Nw==", "user": {"login": "jeandut", "id": 11030901, "node_id": "MDQ6VXNlcjExMDMwOTAx", "avatar_url": "https://avatars1.githubusercontent.com/u/11030901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeandut", "html_url": "https://github.com/jeandut", "followers_url": "https://api.github.com/users/jeandut/followers", "following_url": "https://api.github.com/users/jeandut/following{/other_user}", "gists_url": "https://api.github.com/users/jeandut/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeandut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeandut/subscriptions", "organizations_url": "https://api.github.com/users/jeandut/orgs", "repos_url": "https://api.github.com/users/jeandut/repos", "events_url": "https://api.github.com/users/jeandut/events{/privacy}", "received_events_url": "https://api.github.com/users/jeandut/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-28T10:04:13Z", "updated_at": "2016-01-29T08:17:59Z", "author_association": "NONE", "body_html": "<p>I did the trick to get a grid of weights, and convolutions of one image (thanks <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=719020\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/panmari\">@panmari</a> ) Nonetheless I still want to hear a clean and good solution for exemple the grid trick is not super great because the size of the entire grid seems to be limited to very short values (even using <code>tf.image.resize_images</code>).<br>\nI am sure there are better ideas out there on how to do these visualizations !<br>\nHere is what I used (based almost entirely on the answer <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1414837\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/MarkDaoust\">@MarkDaoust</a> gave to <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=719020\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/panmari\">@panmari</a> on stackoverflow):</p>\n<pre><code>with tf.name_scope(\"First_image_after_conv_i\") as scope:\n    I1=stf.slice(h_conv,(0,0,0,0),(1,-1,-1,-1))\n    I1=tf.reshape(I1,(1,size,size,width_grid,height_grid))\n    I1=tf.transpose(I1,(3,1,4,2,0))\n    I1=tf.reshape(I1,(1,width_grid*size,height_grid*size,1))\n    images_after_conv_i=image_summary(\"images_after_conv\",I1)\nwith tf.name_scope(\"W_conv_i\") as scope:\n    I2=tf.reshape(W_conv_i,(size_mask,size_mask,nb_features_map_i,nb_feature_maps_o))\n    I2=tf.transpose(I2,(2,0,3,1))\n    I2=tf.reshape(I2,(1,nb_feature_maps_i*size_mask,nb_feature_maps_o*size_mask,1))\n    weights_conv_i=image_summary(\"weights_conv_i\",I2)\n</code></pre>\n<p>Feeding the summary at each step : the only ones displayed seem to be related to the last image of the last batch not sure though. I am still quite disatisfied with this solution for the problem mentionned above and because it looks hacky.</p>", "body_text": "I did the trick to get a grid of weights, and convolutions of one image (thanks @panmari ) Nonetheless I still want to hear a clean and good solution for exemple the grid trick is not super great because the size of the entire grid seems to be limited to very short values (even using tf.image.resize_images).\nI am sure there are better ideas out there on how to do these visualizations !\nHere is what I used (based almost entirely on the answer @MarkDaoust gave to @panmari on stackoverflow):\nwith tf.name_scope(\"First_image_after_conv_i\") as scope:\n    I1=stf.slice(h_conv,(0,0,0,0),(1,-1,-1,-1))\n    I1=tf.reshape(I1,(1,size,size,width_grid,height_grid))\n    I1=tf.transpose(I1,(3,1,4,2,0))\n    I1=tf.reshape(I1,(1,width_grid*size,height_grid*size,1))\n    images_after_conv_i=image_summary(\"images_after_conv\",I1)\nwith tf.name_scope(\"W_conv_i\") as scope:\n    I2=tf.reshape(W_conv_i,(size_mask,size_mask,nb_features_map_i,nb_feature_maps_o))\n    I2=tf.transpose(I2,(2,0,3,1))\n    I2=tf.reshape(I2,(1,nb_feature_maps_i*size_mask,nb_feature_maps_o*size_mask,1))\n    weights_conv_i=image_summary(\"weights_conv_i\",I2)\n\nFeeding the summary at each step : the only ones displayed seem to be related to the last image of the last batch not sure though. I am still quite disatisfied with this solution for the problem mentionned above and because it looks hacky.", "body": "I did the trick to get a grid of weights, and convolutions of one image (thanks @panmari ) Nonetheless I still want to hear a clean and good solution for exemple the grid trick is not super great because the size of the entire grid seems to be limited to very short values (even using `tf.image.resize_images`).\nI am sure there are better ideas out there on how to do these visualizations !\nHere is what I used (based almost entirely on the answer @MarkDaoust gave to @panmari on stackoverflow):\n\n```\nwith tf.name_scope(\"First_image_after_conv_i\") as scope:\n    I1=stf.slice(h_conv,(0,0,0,0),(1,-1,-1,-1))\n    I1=tf.reshape(I1,(1,size,size,width_grid,height_grid))\n    I1=tf.transpose(I1,(3,1,4,2,0))\n    I1=tf.reshape(I1,(1,width_grid*size,height_grid*size,1))\n    images_after_conv_i=image_summary(\"images_after_conv\",I1)\nwith tf.name_scope(\"W_conv_i\") as scope:\n    I2=tf.reshape(W_conv_i,(size_mask,size_mask,nb_features_map_i,nb_feature_maps_o))\n    I2=tf.transpose(I2,(2,0,3,1))\n    I2=tf.reshape(I2,(1,nb_feature_maps_i*size_mask,nb_feature_maps_o*size_mask,1))\n    weights_conv_i=image_summary(\"weights_conv_i\",I2)\n```\n\nFeeding the summary at each step : the only ones displayed seem to be related to the last image of the last batch not sure though. I am still quite disatisfied with this solution for the problem mentionned above and because it looks hacky.\n"}