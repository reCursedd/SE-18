{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/78406229", "pull_request_review_id": null, "id": 78406229, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc4NDA2MjI5", "diff_hunk": "@@ -810,5 +810,27 @@ def testInitFromCheckpointWithScopes(self):\n       self.assertAllEqual(init_value0, var0.eval())\n       self.assertAllEqual(init_value1, var1.eval())\n \n+class ZeroInitializerOpTest(tf.test.TestCase):\n+\n+  def _testZeroInitializer(self, shape, dtype):\n+    var0 = tf.Variable(tf.zeros(shape, dtype=dtype))\n+    var1 = tf.Variable(tf.ones(shape, dtype=dtype))\n+    var0_zero = tf.contrib.framework.zero_initializer(var0)\n+    var1_zero = tf.contrib.framework.zero_initializer(var1)", "path": "tensorflow/contrib/framework/python/ops/variables_test.py", "position": null, "original_position": 10, "commit_id": "32f95e65a29c60629b8ae0b9db2891d50c8f1c1b", "original_commit_id": "3b33a6518b3550e60f325b8f1390f70f264680b9", "user": {"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}, "body": "It doesn't have to if zero_initializer is the op you wrote; the op passed to tf.Variable is just added to the initializers graph collection so it is run by tf.initialize_all_variables(). If it doesn't create any additional storage (and the op you wrote doesn't) then you should be fine. \n\nI also think we should test the memory usage by turning tracing on in the RunOptions and examining the step_stats.dev_stats.node_stats.allocator_used_memory.peak_bytes. That way the unit test will protect the code from changes which break this important property.\n", "created_at": "2016-09-12T16:30:07Z", "updated_at": "2016-09-27T10:47:14Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/4077#discussion_r78406229", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/4077", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/78406229"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/4077#discussion_r78406229"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/4077"}}, "body_html": "<p>It doesn't have to if zero_initializer is the op you wrote; the op passed to tf.Variable is just added to the initializers graph collection so it is run by tf.initialize_all_variables(). If it doesn't create any additional storage (and the op you wrote doesn't) then you should be fine.</p>\n<p>I also think we should test the memory usage by turning tracing on in the RunOptions and examining the step_stats.dev_stats.node_stats.allocator_used_memory.peak_bytes. That way the unit test will protect the code from changes which break this important property.</p>", "body_text": "It doesn't have to if zero_initializer is the op you wrote; the op passed to tf.Variable is just added to the initializers graph collection so it is run by tf.initialize_all_variables(). If it doesn't create any additional storage (and the op you wrote doesn't) then you should be fine.\nI also think we should test the memory usage by turning tracing on in the RunOptions and examining the step_stats.dev_stats.node_stats.allocator_used_memory.peak_bytes. That way the unit test will protect the code from changes which break this important property.", "in_reply_to_id": 78382447}