{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/137604284", "pull_request_review_id": 61288939, "id": 137604284, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzYwNDI4NA==", "diff_hunk": "@@ -412,34 +411,39 @@ void LaunchFusedConv2DBiasActivationOp<GPUDevice, T>::launch(\n   AlgorithmConfig algorithm_config;\n   if (cudnn_use_autotune && !AutoTuneConvBiasActivation::GetInstance()->Find(\n                                 conv_parameters, &algorithm_config)) {\n-    std::vector<AlgorithmType> algorithms;\n+    std::vector<AlgorithmType::Index> algorithms;\n     CHECK(stream->parent()->GetConvolveAlgorithms(\n         conv_parameters.ShouldIncludeWinogradNonfusedAlgo<T>(), &algorithms));\n     ProfileResult best_result;\n     ProfileResult best_result_no_scratch;\n-    for (auto profile_algorithm : algorithms) {\n-      // TODO(zhengxq): profile each algorithm multiple times to better\n-      // accuracy.\n-      CudnnScratchAllocator scratch_allocator(ConvolveScratchSize, ctx);\n-      ProfileResult profile_result;\n-      bool cudnn_launch_status =\n-          stream\n-              ->ThenConvolveWithAlgorithm(\n-                  input_desc, input_ptr, filter_desc, filter_ptr, conv_desc,\n-                  bias_ptr, cudnn_activation_mode, output_desc, &output_ptr,\n-                  &scratch_allocator, AlgorithmConfig(profile_algorithm),\n-                  &profile_result)\n-              .ok();\n-      if (cudnn_launch_status) {\n-        if (profile_result.is_valid()) {\n-          if (profile_result.elapsed_time_in_ms() <\n-              best_result.elapsed_time_in_ms()) {\n-            best_result = profile_result;\n-          }\n-          if (scratch_allocator.TotalByteSize() == 0 &&\n-              profile_result.elapsed_time_in_ms() <\n-                  best_result_no_scratch.elapsed_time_in_ms()) {\n-            best_result_no_scratch = profile_result;\n+    // TODO(benbarsdell): Ideally this should not attempt using tensor op math\n+    //                      if it's not enabled.", "path": "tensorflow/contrib/fused_conv/kernels/fused_conv2d_bias_activation_op.cc", "position": null, "original_position": 42, "commit_id": "8ddc5af4dc546baea4e075c153d834731b4487bf", "original_commit_id": "bba5967a3fde4ae6626dea9a8f477a52a744bf00", "user": {"login": "jlebar", "id": 150663, "node_id": "MDQ6VXNlcjE1MDY2Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/150663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlebar", "html_url": "https://github.com/jlebar", "followers_url": "https://api.github.com/users/jlebar/followers", "following_url": "https://api.github.com/users/jlebar/following{/other_user}", "gists_url": "https://api.github.com/users/jlebar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlebar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlebar/subscriptions", "organizations_url": "https://api.github.com/users/jlebar/orgs", "repos_url": "https://api.github.com/users/jlebar/repos", "events_url": "https://api.github.com/users/jlebar/events{/privacy}", "received_events_url": "https://api.github.com/users/jlebar/received_events", "type": "User", "site_admin": false}, "body": "...having GetConvolveAlgorithms return a vector<AlgorithmType> instead of a vector<AlgorithmType::Index> would also resolve this TODO, I think?", "created_at": "2017-09-07T17:28:37Z", "updated_at": "2017-09-15T18:08:26Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/12503#discussion_r137604284", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12503", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/137604284"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/12503#discussion_r137604284"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12503"}}, "body_html": "<p>...having GetConvolveAlgorithms return a vector instead of a vectorAlgorithmType::Index would also resolve this TODO, I think?</p>", "body_text": "...having GetConvolveAlgorithms return a vector instead of a vectorAlgorithmType::Index would also resolve this TODO, I think?"}