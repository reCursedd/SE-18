{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/309936009", "html_url": "https://github.com/tensorflow/tensorflow/issues/10862#issuecomment-309936009", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10862", "id": 309936009, "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTkzNjAwOQ==", "user": {"login": "rickyhan", "id": 1768528, "node_id": "MDQ6VXNlcjE3Njg1Mjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1768528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rickyhan", "html_url": "https://github.com/rickyhan", "followers_url": "https://api.github.com/users/rickyhan/followers", "following_url": "https://api.github.com/users/rickyhan/following{/other_user}", "gists_url": "https://api.github.com/users/rickyhan/gists{/gist_id}", "starred_url": "https://api.github.com/users/rickyhan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rickyhan/subscriptions", "organizations_url": "https://api.github.com/users/rickyhan/orgs", "repos_url": "https://api.github.com/users/rickyhan/repos", "events_url": "https://api.github.com/users/rickyhan/events{/privacy}", "received_events_url": "https://api.github.com/users/rickyhan/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-21T01:24:18Z", "updated_at": "2017-06-21T01:33:07Z", "author_association": "NONE", "body_html": "<p>Turns out there is a related bug:</p>\n<p>The state_size of output of MultiCellRNN consisting only LSTMCell and DropoutWrapper is a tuple not an LSTMStateTuple.</p>\n<h1>Code Example</h1>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">with</span> tf.variable_scope(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>DECODE<span class=\"pl-pds\">\"</span></span>):\n    dec_cells <span class=\"pl-k\">=</span> []\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> name=\"dec_cell_{}\".format(i)</span>\n    <span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">0</span>, decoder_depth):\n        <span class=\"pl-k\">with</span> tf.variable_scope(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>dec_RNN_<span class=\"pl-c1\">{}</span><span class=\"pl-pds\">'</span></span>.format(i)):\n            cell <span class=\"pl-k\">=</span> tf.contrib.rnn.GRUCell(hidden_dim <span class=\"pl-k\">*</span> <span class=\"pl-c1\">2</span>)\n            cell <span class=\"pl-k\">=</span> tf.contrib.rnn.DropoutWrapper(cell, <span class=\"pl-v\">output_keep_prob</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1.0</span><span class=\"pl-k\">-</span>dropout)\n            dec_cells.append(cell)\n    decoder_cell <span class=\"pl-k\">=</span> tf.contrib.rnn.MultiRNNCell(dec_cells)\n\n    <span class=\"pl-c1\">print</span> decoder_cell.state_size\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> (24, 24)</span>\n    <span class=\"pl-c1\">print</span> encoder_final_state <span class=\"pl-c\"><span class=\"pl-c\">#</span></span>\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> result: LSTMStateTuple(c=&lt;tf.Tensor 'ENCODE/concat_1:0' shape=(?, 24) dtype=float32&gt;, h=&lt;tf.Tensor 'ENCODE/concat_2:0' shape=(?, 24) dtype=float32&gt;)#</span>\n\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> decoder_cell = tf.contrib.rnn.LSTMCell(hidden_dim*2) # <span class=\"pl-k\">BUG</span>:</span>\n\n    decoder_outputs_ta, decoder_final_state, _ <span class=\"pl-k\">=</span> tf.nn.raw_rnn(decoder_cell, loop_fn)\n\n(<span class=\"pl-c1\">24</span>, <span class=\"pl-c1\">24</span>)\nLSTMStateTuple(<span class=\"pl-v\">c</span><span class=\"pl-k\">=</span><span class=\"pl-k\">&lt;</span>tf.Tensor <span class=\"pl-s\"><span class=\"pl-pds\">'</span>ENCODE/concat_1:0<span class=\"pl-pds\">'</span></span> <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-ii\">?</span>, <span class=\"pl-c1\">24</span>) <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>float32<span class=\"pl-k\">&gt;</span>, <span class=\"pl-v\">h</span><span class=\"pl-k\">=</span><span class=\"pl-k\">&lt;</span>tf.Tensor <span class=\"pl-s\"><span class=\"pl-pds\">'</span>ENCODE/concat_2:0<span class=\"pl-pds\">'</span></span> <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-ii\">?</span>, <span class=\"pl-c1\">24</span>) <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>float32<span class=\"pl-k\">&gt;</span>)\nTraceback (most recent call last):\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/home/g/Desktop/seq2seq/run.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">141</span>, <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>\n    decoder_outputs_ta, decoder_final_state, _ <span class=\"pl-k\">=</span> tf.nn.raw_rnn(decoder_cell, loop_fn)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/rnn.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">954</span>, <span class=\"pl-k\">in</span> raw_rnn\n    nest.assert_same_structure(initial_state, cell.state_size)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python2.7/dist-packages/tensorflow/python/util/nest.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">147</span>, <span class=\"pl-k\">in</span> assert_same_structure\n    _recursive_assert_same_structure(nest1, nest2, check_types)\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/usr/local/lib/python2.7/dist-packages/tensorflow/python/util/nest.py<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">119</span>, <span class=\"pl-k\">in</span> _recursive_assert_same_structure\n    <span class=\"pl-k\">%</span> (type_nest1, type_nest2))\n<span class=\"pl-c1\">TypeError</span>: The two structures don<span class=\"pl-s\"><span class=\"pl-pds\">'</span>t have the same sequence type. First structure has type &lt;class <span class=\"pl-pds\">'</span></span>tensorflow.python.ops.rnn_cell_impl.LSTMStateTuple<span class=\"pl-s\"><span class=\"pl-pds\">'</span>&gt;, while second structure has type &lt;type <span class=\"pl-pds\">'</span></span><span class=\"pl-c1\">tuple</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>&gt;.<span class=\"pl-ii\"></span></span></pre></div>", "body_text": "Turns out there is a related bug:\nThe state_size of output of MultiCellRNN consisting only LSTMCell and DropoutWrapper is a tuple not an LSTMStateTuple.\nCode Example\nwith tf.variable_scope(\"DECODE\"):\n    dec_cells = []\n    # name=\"dec_cell_{}\".format(i)\n    for i in range(0, decoder_depth):\n        with tf.variable_scope('dec_RNN_{}'.format(i)):\n            cell = tf.contrib.rnn.GRUCell(hidden_dim * 2)\n            cell = tf.contrib.rnn.DropoutWrapper(cell, output_keep_prob=1.0-dropout)\n            dec_cells.append(cell)\n    decoder_cell = tf.contrib.rnn.MultiRNNCell(dec_cells)\n\n    print decoder_cell.state_size\n    # (24, 24)\n    print encoder_final_state #\n    # result: LSTMStateTuple(c=<tf.Tensor 'ENCODE/concat_1:0' shape=(?, 24) dtype=float32>, h=<tf.Tensor 'ENCODE/concat_2:0' shape=(?, 24) dtype=float32>)#\n\n    # decoder_cell = tf.contrib.rnn.LSTMCell(hidden_dim*2) # BUG:\n\n    decoder_outputs_ta, decoder_final_state, _ = tf.nn.raw_rnn(decoder_cell, loop_fn)\n\n(24, 24)\nLSTMStateTuple(c=<tf.Tensor 'ENCODE/concat_1:0' shape=(?, 24) dtype=float32>, h=<tf.Tensor 'ENCODE/concat_2:0' shape=(?, 24) dtype=float32>)\nTraceback (most recent call last):\n  File \"/home/g/Desktop/seq2seq/run.py\", line 141, in <module>\n    decoder_outputs_ta, decoder_final_state, _ = tf.nn.raw_rnn(decoder_cell, loop_fn)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/rnn.py\", line 954, in raw_rnn\n    nest.assert_same_structure(initial_state, cell.state_size)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/util/nest.py\", line 147, in assert_same_structure\n    _recursive_assert_same_structure(nest1, nest2, check_types)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/util/nest.py\", line 119, in _recursive_assert_same_structure\n    % (type_nest1, type_nest2))\nTypeError: The two structures don't have the same sequence type. First structure has type <class 'tensorflow.python.ops.rnn_cell_impl.LSTMStateTuple'>, while second structure has type <type 'tuple'>.", "body": "Turns out there is a related bug:\r\n\r\nThe state_size of output of MultiCellRNN consisting only LSTMCell and DropoutWrapper is a tuple not an LSTMStateTuple.\r\n\r\n # Code Example\r\n\r\n```python\r\nwith tf.variable_scope(\"DECODE\"):\r\n    dec_cells = []\r\n    # name=\"dec_cell_{}\".format(i)\r\n    for i in range(0, decoder_depth):\r\n        with tf.variable_scope('dec_RNN_{}'.format(i)):\r\n            cell = tf.contrib.rnn.GRUCell(hidden_dim * 2)\r\n            cell = tf.contrib.rnn.DropoutWrapper(cell, output_keep_prob=1.0-dropout)\r\n            dec_cells.append(cell)\r\n    decoder_cell = tf.contrib.rnn.MultiRNNCell(dec_cells)\r\n\r\n    print decoder_cell.state_size\r\n    # (24, 24)\r\n    print encoder_final_state #\r\n    # result: LSTMStateTuple(c=<tf.Tensor 'ENCODE/concat_1:0' shape=(?, 24) dtype=float32>, h=<tf.Tensor 'ENCODE/concat_2:0' shape=(?, 24) dtype=float32>)#\r\n\r\n    # decoder_cell = tf.contrib.rnn.LSTMCell(hidden_dim*2) # BUG:\r\n\r\n    decoder_outputs_ta, decoder_final_state, _ = tf.nn.raw_rnn(decoder_cell, loop_fn)\r\n\r\n(24, 24)\r\nLSTMStateTuple(c=<tf.Tensor 'ENCODE/concat_1:0' shape=(?, 24) dtype=float32>, h=<tf.Tensor 'ENCODE/concat_2:0' shape=(?, 24) dtype=float32>)\r\nTraceback (most recent call last):\r\n  File \"/home/g/Desktop/seq2seq/run.py\", line 141, in <module>\r\n    decoder_outputs_ta, decoder_final_state, _ = tf.nn.raw_rnn(decoder_cell, loop_fn)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/rnn.py\", line 954, in raw_rnn\r\n    nest.assert_same_structure(initial_state, cell.state_size)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/util/nest.py\", line 147, in assert_same_structure\r\n    _recursive_assert_same_structure(nest1, nest2, check_types)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/util/nest.py\", line 119, in _recursive_assert_same_structure\r\n    % (type_nest1, type_nest2))\r\nTypeError: The two structures don't have the same sequence type. First structure has type <class 'tensorflow.python.ops.rnn_cell_impl.LSTMStateTuple'>, while second structure has type <type 'tuple'>.\r\n```"}