{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12733", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12733/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12733/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12733/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12733", "id": 254416115, "node_id": "MDU6SXNzdWUyNTQ0MTYxMTU=", "number": 12733, "title": "Incompatible Shapes during Validation for TensorFlow's seq2seq module", "user": {"login": "RylanSchaeffer", "id": 8942987, "node_id": "MDQ6VXNlcjg5NDI5ODc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8942987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RylanSchaeffer", "html_url": "https://github.com/RylanSchaeffer", "followers_url": "https://api.github.com/users/RylanSchaeffer/followers", "following_url": "https://api.github.com/users/RylanSchaeffer/following{/other_user}", "gists_url": "https://api.github.com/users/RylanSchaeffer/gists{/gist_id}", "starred_url": "https://api.github.com/users/RylanSchaeffer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RylanSchaeffer/subscriptions", "organizations_url": "https://api.github.com/users/RylanSchaeffer/orgs", "repos_url": "https://api.github.com/users/RylanSchaeffer/repos", "events_url": "https://api.github.com/users/RylanSchaeffer/events{/privacy}", "received_events_url": "https://api.github.com/users/RylanSchaeffer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-31T17:48:33Z", "updated_at": "2017-09-05T18:16:57Z", "closed_at": "2017-09-04T01:39:24Z", "author_association": "NONE", "body_html": "<p>I'm using TensorFlow's seq2seq module. During validation, my decoder will occasionally produce output sequences with different lengths than the target sequences; this causes the following error when calculating the loss using <code>tf.nn.sigmoid_cross_entropy_with_logits</code> (batch major, not time major):</p>\n<p><code>InvalidArgumentError (see above for traceback): Incompatible shapes: [128,22,4] vs. [128,26,4]</code></p>\n<p>What is the best practice for dealing with this problem?</p>\n<p>I checked how the NMT tutorial solved the problem. As far as I can tell, they use a TrainingHelper during validation, which forces the decoder to unroll the same number of steps as the target sequence, but this seems like cheating - they're estimating how the model will perform during inference, but the decoder is receiving additional information (the target sequence length) that it won't have at inference time. I opened an <a href=\"https://github.com/tensorflow/nmt/issues/73\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/nmt/issues/73/hovercard\">issue</a> to clarify, but I haven't heard back.</p>\n<p>I also <a href=\"https://stackoverflow.com/questions/45944131/incompatible-shapes-during-validation-for-tensorflows-seq2seq-module\" rel=\"nofollow\">posted</a> on StackOverflow, but from earlier experience, I doubt I'll receive a response.</p>\n<p>My problem isn't specific to platform or TensorFlow version, but here's that information regardless:</p>\n<p>OS: macOS Sierra version 10.12.6<br>\nTensorFlow installed from source<br>\nTensorFlow version: ('v1.3.0-rc2-20-g0787eee', '1.3.0')</p>", "body_text": "I'm using TensorFlow's seq2seq module. During validation, my decoder will occasionally produce output sequences with different lengths than the target sequences; this causes the following error when calculating the loss using tf.nn.sigmoid_cross_entropy_with_logits (batch major, not time major):\nInvalidArgumentError (see above for traceback): Incompatible shapes: [128,22,4] vs. [128,26,4]\nWhat is the best practice for dealing with this problem?\nI checked how the NMT tutorial solved the problem. As far as I can tell, they use a TrainingHelper during validation, which forces the decoder to unroll the same number of steps as the target sequence, but this seems like cheating - they're estimating how the model will perform during inference, but the decoder is receiving additional information (the target sequence length) that it won't have at inference time. I opened an issue to clarify, but I haven't heard back.\nI also posted on StackOverflow, but from earlier experience, I doubt I'll receive a response.\nMy problem isn't specific to platform or TensorFlow version, but here's that information regardless:\nOS: macOS Sierra version 10.12.6\nTensorFlow installed from source\nTensorFlow version: ('v1.3.0-rc2-20-g0787eee', '1.3.0')", "body": "I'm using TensorFlow's seq2seq module. During validation, my decoder will occasionally produce output sequences with different lengths than the target sequences; this causes the following error when calculating the loss using `tf.nn.sigmoid_cross_entropy_with_logits` (batch major, not time major):\r\n\r\n`InvalidArgumentError (see above for traceback): Incompatible shapes: [128,22,4] vs. [128,26,4]`\r\n\r\nWhat is the best practice for dealing with this problem?\r\n\r\nI checked how the NMT tutorial solved the problem. As far as I can tell, they use a TrainingHelper during validation, which forces the decoder to unroll the same number of steps as the target sequence, but this seems like cheating - they're estimating how the model will perform during inference, but the decoder is receiving additional information (the target sequence length) that it won't have at inference time. I opened an [issue](https://github.com/tensorflow/nmt/issues/73) to clarify, but I haven't heard back.\r\n\r\nI also [posted](https://stackoverflow.com/questions/45944131/incompatible-shapes-during-validation-for-tensorflows-seq2seq-module) on StackOverflow, but from earlier experience, I doubt I'll receive a response.\r\n\r\nMy problem isn't specific to platform or TensorFlow version, but here's that information regardless:\r\n\r\nOS: macOS Sierra version 10.12.6\r\nTensorFlow installed from source\r\nTensorFlow version: ('v1.3.0-rc2-20-g0787eee', '1.3.0')\r\n"}