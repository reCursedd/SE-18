{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/266782883", "html_url": "https://github.com/tensorflow/tensorflow/issues/6215#issuecomment-266782883", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6215", "id": 266782883, "node_id": "MDEyOklzc3VlQ29tbWVudDI2Njc4Mjg4Mw==", "user": {"login": "bradknox", "id": 6486184, "node_id": "MDQ6VXNlcjY0ODYxODQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6486184?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bradknox", "html_url": "https://github.com/bradknox", "followers_url": "https://api.github.com/users/bradknox/followers", "following_url": "https://api.github.com/users/bradknox/following{/other_user}", "gists_url": "https://api.github.com/users/bradknox/gists{/gist_id}", "starred_url": "https://api.github.com/users/bradknox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bradknox/subscriptions", "organizations_url": "https://api.github.com/users/bradknox/orgs", "repos_url": "https://api.github.com/users/bradknox/repos", "events_url": "https://api.github.com/users/bradknox/events{/privacy}", "received_events_url": "https://api.github.com/users/bradknox/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-13T16:16:24Z", "updated_at": "2016-12-13T16:28:34Z", "author_association": "NONE", "body_html": "<p>Thanks, Matt. I eventually figured out how to add data and metadata through trial and error, and reading the documentation confirmed what I learned and matches what you wrote.</p>\n<p>I should clarify that the bug report is primarily about the response of the UI when the wrong format is provided, not about what the right format is. Instead of hanging indefinitely on \"Computing PCA...\", it would be much more helpful if the system fails smoothly (not crashing) and lets the user know that non-numeric features and labels can only be added as metadata.</p>\n<p>The parenthetical comment (which maybe I should have put in a separate bug report, despite it being very related) is also about a lack of clarity in the UI. The example for adding metadata in the \"Load Data\" window shows a header. If someone follows that example with a single column of metadata, they will get an obfuscated piece of feedback about the system expecting n columns and instead seeing n+1. In my opinion, how to load data that follows this canonical machine learning case of a single label should be clear, not requiring the user to read into the implications of the UI's feedback or read long documentation. The solution could be a (a) preventative: a sentence in the window like \"Single column metadata should not have a header.\" and (b) informative upon failure: when the metadata has one more row than the data and has a single column, the error message should remind/inform the user to \"Please note that single column metadata should not have a header.\"</p>\n<p>(Also, thanks for supplying and/or supporting this great tool!)</p>", "body_text": "Thanks, Matt. I eventually figured out how to add data and metadata through trial and error, and reading the documentation confirmed what I learned and matches what you wrote.\nI should clarify that the bug report is primarily about the response of the UI when the wrong format is provided, not about what the right format is. Instead of hanging indefinitely on \"Computing PCA...\", it would be much more helpful if the system fails smoothly (not crashing) and lets the user know that non-numeric features and labels can only be added as metadata.\nThe parenthetical comment (which maybe I should have put in a separate bug report, despite it being very related) is also about a lack of clarity in the UI. The example for adding metadata in the \"Load Data\" window shows a header. If someone follows that example with a single column of metadata, they will get an obfuscated piece of feedback about the system expecting n columns and instead seeing n+1. In my opinion, how to load data that follows this canonical machine learning case of a single label should be clear, not requiring the user to read into the implications of the UI's feedback or read long documentation. The solution could be a (a) preventative: a sentence in the window like \"Single column metadata should not have a header.\" and (b) informative upon failure: when the metadata has one more row than the data and has a single column, the error message should remind/inform the user to \"Please note that single column metadata should not have a header.\"\n(Also, thanks for supplying and/or supporting this great tool!)", "body": "Thanks, Matt. I eventually figured out how to add data and metadata through trial and error, and reading the documentation confirmed what I learned and matches what you wrote.\r\n\r\nI should clarify that the bug report is primarily about the response of the UI when the wrong format is provided, not about what the right format is. Instead of hanging indefinitely on \"Computing PCA...\", it would be much more helpful if the system fails smoothly (not crashing) and lets the user know that non-numeric features and labels can only be added as metadata.\r\n\r\nThe parenthetical comment (which maybe I should have put in a separate bug report, despite it being very related) is also about a lack of clarity in the UI. The example for adding metadata in the \"Load Data\" window shows a header. If someone follows that example with a single column of metadata, they will get an obfuscated piece of feedback about the system expecting n columns and instead seeing n+1. In my opinion, how to load data that follows this canonical machine learning case of a single label should be clear, not requiring the user to read into the implications of the UI's feedback or read long documentation. The solution could be a (a) preventative: a sentence in the window like \"Single column metadata should not have a header.\" and (b) informative upon failure: when the metadata has one more row than the data and has a single column, the error message should remind/inform the user to \"Please note that single column metadata should not have a header.\"\r\n\r\n(Also, thanks for supplying and/or supporting this great tool!)"}