{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3992", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3992/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3992/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3992/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3992", "id": 172791768, "node_id": "MDU6SXNzdWUxNzI3OTE3Njg=", "number": 3992, "title": "Add support for pyx_library in the open-source build.", "user": {"login": "iportillo", "id": 10001157, "node_id": "MDQ6VXNlcjEwMDAxMTU3", "avatar_url": "https://avatars2.githubusercontent.com/u/10001157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iportillo", "html_url": "https://github.com/iportillo", "followers_url": "https://api.github.com/users/iportillo/followers", "following_url": "https://api.github.com/users/iportillo/following{/other_user}", "gists_url": "https://api.github.com/users/iportillo/gists{/gist_id}", "starred_url": "https://api.github.com/users/iportillo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iportillo/subscriptions", "organizations_url": "https://api.github.com/users/iportillo/orgs", "repos_url": "https://api.github.com/users/iportillo/repos", "events_url": "https://api.github.com/users/iportillo/events{/privacy}", "received_events_url": "https://api.github.com/users/iportillo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "keveman", "id": 229914, "node_id": "MDQ6VXNlcjIyOTkxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/229914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keveman", "html_url": "https://github.com/keveman", "followers_url": "https://api.github.com/users/keveman/followers", "following_url": "https://api.github.com/users/keveman/following{/other_user}", "gists_url": "https://api.github.com/users/keveman/gists{/gist_id}", "starred_url": "https://api.github.com/users/keveman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keveman/subscriptions", "organizations_url": "https://api.github.com/users/keveman/orgs", "repos_url": "https://api.github.com/users/keveman/repos", "events_url": "https://api.github.com/users/keveman/events{/privacy}", "received_events_url": "https://api.github.com/users/keveman/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "keveman", "id": 229914, "node_id": "MDQ6VXNlcjIyOTkxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/229914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keveman", "html_url": "https://github.com/keveman", "followers_url": "https://api.github.com/users/keveman/followers", "following_url": "https://api.github.com/users/keveman/following{/other_user}", "gists_url": "https://api.github.com/users/keveman/gists{/gist_id}", "starred_url": "https://api.github.com/users/keveman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keveman/subscriptions", "organizations_url": "https://api.github.com/users/keveman/orgs", "repos_url": "https://api.github.com/users/keveman/repos", "events_url": "https://api.github.com/users/keveman/events{/privacy}", "received_events_url": "https://api.github.com/users/keveman/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2016-08-23T19:58:09Z", "updated_at": "2016-08-26T18:30:57Z", "closed_at": "2016-08-24T16:36:52Z", "author_association": "NONE", "body_html": "<p>I have a model that has a lot of big constant Tensors (2048x2048), and building the graph is extremely slow. After profiling my code, I see that the bottlenecks are the functions <code>SlowAppend&lt;TYPE&gt;ArrayToTensorProto</code>  defined in <code>tensorflow/python/framework/tensor_util.py</code> which take 98% of the time.</p>\n<p>Reviewing the source code I see the following lines:</p>\n<pre><code># TODO(opensource): Add support for pyx_library in the open-source build.\n# For now, we use the slow versions that fast_tensor_util replaces.\n# pylint: disable=g-import-not-at-top\n</code></pre>\n<p>So I was wondering if it is planned to add this feature in the short term, and if not, any advice on how to speed up the graph building process?</p>\n<p>Thanks</p>", "body_text": "I have a model that has a lot of big constant Tensors (2048x2048), and building the graph is extremely slow. After profiling my code, I see that the bottlenecks are the functions SlowAppend<TYPE>ArrayToTensorProto  defined in tensorflow/python/framework/tensor_util.py which take 98% of the time.\nReviewing the source code I see the following lines:\n# TODO(opensource): Add support for pyx_library in the open-source build.\n# For now, we use the slow versions that fast_tensor_util replaces.\n# pylint: disable=g-import-not-at-top\n\nSo I was wondering if it is planned to add this feature in the short term, and if not, any advice on how to speed up the graph building process?\nThanks", "body": "I have a model that has a lot of big constant Tensors (2048x2048), and building the graph is extremely slow. After profiling my code, I see that the bottlenecks are the functions `SlowAppend<TYPE>ArrayToTensorProto`  defined in `tensorflow/python/framework/tensor_util.py` which take 98% of the time. \n\nReviewing the source code I see the following lines:\n\n```\n# TODO(opensource): Add support for pyx_library in the open-source build.\n# For now, we use the slow versions that fast_tensor_util replaces.\n# pylint: disable=g-import-not-at-top\n```\n\nSo I was wondering if it is planned to add this feature in the short term, and if not, any advice on how to speed up the graph building process? \n\nThanks\n"}