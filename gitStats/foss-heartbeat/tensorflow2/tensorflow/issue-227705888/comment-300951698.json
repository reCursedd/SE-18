{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/300951698", "html_url": "https://github.com/tensorflow/tensorflow/issues/9816#issuecomment-300951698", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9816", "id": 300951698, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDk1MTY5OA==", "user": {"login": "dloyer", "id": 3138048, "node_id": "MDQ6VXNlcjMxMzgwNDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/3138048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dloyer", "html_url": "https://github.com/dloyer", "followers_url": "https://api.github.com/users/dloyer/followers", "following_url": "https://api.github.com/users/dloyer/following{/other_user}", "gists_url": "https://api.github.com/users/dloyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/dloyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dloyer/subscriptions", "organizations_url": "https://api.github.com/users/dloyer/orgs", "repos_url": "https://api.github.com/users/dloyer/repos", "events_url": "https://api.github.com/users/dloyer/events{/privacy}", "received_events_url": "https://api.github.com/users/dloyer/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-12T00:27:52Z", "updated_at": "2017-05-12T00:27:52Z", "author_association": "NONE", "body_html": "<div class=\"email-fragment\">Hey Zongheng,\nHere is a simpler example:Notice that the \"validate_shape=False\" does not seem to be honored. \u00a0\nThanks.-Doug\n\n# sparse variable\nimport tensorflow as tf\n\n# the feature count that we maintain between batches# must be kept in a variable, but variables dont support sparse tensors# so we have to keep the source index and value arraysvar_feature_count_idx = tf.Variable(tf.zeros([1,1],dtype=tf.int64), validate_shape=False)var_feature_count_cnt = tf.Variable(tf.zeros([1],dtype=tf.int32), validate_shape=False)\nvals = tf.constant([2,3,4,2,5,2,5],dtype=tf.int64)y, idx, count = tf.unique_with_counts(vals)\u00a0 # get distinct\n# now create a sparse array with the hashbucket of as the indexy2 = tf.expand_dims(y,1)fcount = tf.SparseTensor(indices=y2,values=count,dense_shape=[1024]) # running count of features\n# update the global countst = tf.SparseTensor(indices=var_feature_count_idx, values=tf.identity(var_feature_count_cnt), dense_shape=[1024])st2 = tf.sparse_add(st, fcount)asop1 = tf.assign(var_feature_count_idx, st2.indices)asop2 = tf.assign(var_feature_count_cnt, st2.values)\n\nwith tf.Session() as sess:\u00a0 sess.run(tf.global_variables_initializer())\u00a0 print(sess.run([asop1, asop2]))\n\n\nIt will fail with:Traceback (most recent call last):\u00a0 File \"sparsevar.py\", line 28, in &lt;module&gt;\u00a0 \u00a0 print(sess.run([asop1, asop2]))\u00a0 File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 789, in run\u00a0 \u00a0 run_metadata_ptr)\u00a0 File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 997, in _run\u00a0 \u00a0 feed_dict_string, options, run_metadata)\u00a0 File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1132, in _do_run\u00a0 \u00a0 target_list, options, run_metadata)\u00a0 File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1152, in _do_call\u00a0 \u00a0 raise type(e)(node_def, op, message)tensorflow.python.framework.errors_impl.InvalidArgumentError: Assign requires shapes of both tensors to match. lhs shape= [1] rhs shape= [5]  [[Node: Assign_1 = Assign[T=DT_INT32, _class=[\"loc:@Variable_1\"], use_locking=true, validate_shape=true, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](Variable_1, SparseAdd:1)]]\nCaused by op u'Assign_1', defined at:\u00a0 File \"sparsevar.py\", line 23, in &lt;module&gt;\u00a0 \u00a0 asop2 = tf.assign(var_feature_count_cnt, st2.values)\u00a0 File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/state_ops.py\", line 271, in assign\u00a0 \u00a0 validate_shape=validate_shape)\u00a0 File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_state_ops.py\", line 47, in assign\u00a0 \u00a0 use_locking=use_locking, name=name)\u00a0 File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py\", line 767, in apply_op\u00a0 \u00a0 op_def=op_def)\u00a0 File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 2359, in create_op\u00a0 \u00a0 original_op=self._default_original_op, op_def=op_def)\u00a0 File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1242, in __init__\u00a0 \u00a0 self._traceback = _extract_stack()\nInvalidArgumentError (see above for traceback): Assign requires shapes of both tensors to match. lhs shape= [1] rhs shape= [5]  [[Node: Assign_1 = Assign[T=DT_INT32, _class=[\"loc:@Variable_1\"], use_locking=true, validate_shape=true, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](Variable_1, SparseAdd:1)]]\n\n      From: Zongheng Yang &lt;notifications@github.com&gt;\n To: tensorflow/tensorflow &lt;tensorflow@noreply.github.com&gt;\nCc: Doug Loyer &lt;dloyer123@yahoo.com&gt;; Author &lt;author@noreply.github.com&gt;\n Sent: Thursday, May 11, 2017 5:11 PM\n Subject: Re: [tensorflow/tensorflow] Variable validate_shape not honored (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"227705888\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/9816\" href=\"https://github.com/tensorflow/tensorflow/issues/9816\">#9816</a>)\n\nCan you try to isolate a shorter repro program so that we can look into this? (It'd be nice if the Github code block syntax can be fixed too :))\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.</div>", "body_text": "Hey Zongheng,\nHere is a simpler example:Notice that the \"validate_shape=False\" does not seem to be honored. \u00a0\nThanks.-Doug\n\n# sparse variable\nimport tensorflow as tf\n\n# the feature count that we maintain between batches# must be kept in a variable, but variables dont support sparse tensors# so we have to keep the source index and value arraysvar_feature_count_idx = tf.Variable(tf.zeros([1,1],dtype=tf.int64), validate_shape=False)var_feature_count_cnt = tf.Variable(tf.zeros([1],dtype=tf.int32), validate_shape=False)\nvals = tf.constant([2,3,4,2,5,2,5],dtype=tf.int64)y, idx, count = tf.unique_with_counts(vals)\u00a0 # get distinct\n# now create a sparse array with the hashbucket of as the indexy2 = tf.expand_dims(y,1)fcount = tf.SparseTensor(indices=y2,values=count,dense_shape=[1024]) # running count of features\n# update the global countst = tf.SparseTensor(indices=var_feature_count_idx, values=tf.identity(var_feature_count_cnt), dense_shape=[1024])st2 = tf.sparse_add(st, fcount)asop1 = tf.assign(var_feature_count_idx, st2.indices)asop2 = tf.assign(var_feature_count_cnt, st2.values)\n\nwith tf.Session() as sess:\u00a0 sess.run(tf.global_variables_initializer())\u00a0 print(sess.run([asop1, asop2]))\n\n\nIt will fail with:Traceback (most recent call last):\u00a0 File \"sparsevar.py\", line 28, in <module>\u00a0 \u00a0 print(sess.run([asop1, asop2]))\u00a0 File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 789, in run\u00a0 \u00a0 run_metadata_ptr)\u00a0 File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 997, in _run\u00a0 \u00a0 feed_dict_string, options, run_metadata)\u00a0 File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1132, in _do_run\u00a0 \u00a0 target_list, options, run_metadata)\u00a0 File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1152, in _do_call\u00a0 \u00a0 raise type(e)(node_def, op, message)tensorflow.python.framework.errors_impl.InvalidArgumentError: Assign requires shapes of both tensors to match. lhs shape= [1] rhs shape= [5]  [[Node: Assign_1 = Assign[T=DT_INT32, _class=[\"loc:@Variable_1\"], use_locking=true, validate_shape=true, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](Variable_1, SparseAdd:1)]]\nCaused by op u'Assign_1', defined at:\u00a0 File \"sparsevar.py\", line 23, in <module>\u00a0 \u00a0 asop2 = tf.assign(var_feature_count_cnt, st2.values)\u00a0 File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/state_ops.py\", line 271, in assign\u00a0 \u00a0 validate_shape=validate_shape)\u00a0 File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_state_ops.py\", line 47, in assign\u00a0 \u00a0 use_locking=use_locking, name=name)\u00a0 File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py\", line 767, in apply_op\u00a0 \u00a0 op_def=op_def)\u00a0 File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 2359, in create_op\u00a0 \u00a0 original_op=self._default_original_op, op_def=op_def)\u00a0 File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1242, in __init__\u00a0 \u00a0 self._traceback = _extract_stack()\nInvalidArgumentError (see above for traceback): Assign requires shapes of both tensors to match. lhs shape= [1] rhs shape= [5]  [[Node: Assign_1 = Assign[T=DT_INT32, _class=[\"loc:@Variable_1\"], use_locking=true, validate_shape=true, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](Variable_1, SparseAdd:1)]]\n\n      From: Zongheng Yang <notifications@github.com>\n To: tensorflow/tensorflow <tensorflow@noreply.github.com>\nCc: Doug Loyer <dloyer123@yahoo.com>; Author <author@noreply.github.com>\n Sent: Thursday, May 11, 2017 5:11 PM\n Subject: Re: [tensorflow/tensorflow] Variable validate_shape not honored (#9816)\n\nCan you try to isolate a shorter repro program so that we can look into this? (It'd be nice if the Github code block syntax can be fixed too :))\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.", "body": "Hey Zongheng,\nHere is a simpler example:Notice that the \"validate_shape=False\" does not seem to be honored. \u00a0\nThanks.-Doug\n\n# sparse variable\nimport tensorflow as tf\n\n# the feature count that we maintain between batches# must be kept in a variable, but variables dont support sparse tensors# so we have to keep the source index and value arraysvar_feature_count_idx = tf.Variable(tf.zeros([1,1],dtype=tf.int64), validate_shape=False)var_feature_count_cnt = tf.Variable(tf.zeros([1],dtype=tf.int32), validate_shape=False)\nvals = tf.constant([2,3,4,2,5,2,5],dtype=tf.int64)y, idx, count = tf.unique_with_counts(vals)\u00a0 # get distinct\n# now create a sparse array with the hashbucket of as the indexy2 = tf.expand_dims(y,1)fcount = tf.SparseTensor(indices=y2,values=count,dense_shape=[1024]) # running count of features\n# update the global countst = tf.SparseTensor(indices=var_feature_count_idx, values=tf.identity(var_feature_count_cnt), dense_shape=[1024])st2 = tf.sparse_add(st, fcount)asop1 = tf.assign(var_feature_count_idx, st2.indices)asop2 = tf.assign(var_feature_count_cnt, st2.values)\n\nwith tf.Session() as sess:\u00a0 sess.run(tf.global_variables_initializer())\u00a0 print(sess.run([asop1, asop2]))\n\n\nIt will fail with:Traceback (most recent call last):\u00a0 File \"sparsevar.py\", line 28, in <module>\u00a0 \u00a0 print(sess.run([asop1, asop2]))\u00a0 File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 789, in run\u00a0 \u00a0 run_metadata_ptr)\u00a0 File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 997, in _run\u00a0 \u00a0 feed_dict_string, options, run_metadata)\u00a0 File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1132, in _do_run\u00a0 \u00a0 target_list, options, run_metadata)\u00a0 File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1152, in _do_call\u00a0 \u00a0 raise type(e)(node_def, op, message)tensorflow.python.framework.errors_impl.InvalidArgumentError: Assign requires shapes of both tensors to match. lhs shape= [1] rhs shape= [5]  [[Node: Assign_1 = Assign[T=DT_INT32, _class=[\"loc:@Variable_1\"], use_locking=true, validate_shape=true, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](Variable_1, SparseAdd:1)]]\nCaused by op u'Assign_1', defined at:\u00a0 File \"sparsevar.py\", line 23, in <module>\u00a0 \u00a0 asop2 = tf.assign(var_feature_count_cnt, st2.values)\u00a0 File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/state_ops.py\", line 271, in assign\u00a0 \u00a0 validate_shape=validate_shape)\u00a0 File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_state_ops.py\", line 47, in assign\u00a0 \u00a0 use_locking=use_locking, name=name)\u00a0 File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py\", line 767, in apply_op\u00a0 \u00a0 op_def=op_def)\u00a0 File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 2359, in create_op\u00a0 \u00a0 original_op=self._default_original_op, op_def=op_def)\u00a0 File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1242, in __init__\u00a0 \u00a0 self._traceback = _extract_stack()\nInvalidArgumentError (see above for traceback): Assign requires shapes of both tensors to match. lhs shape= [1] rhs shape= [5]  [[Node: Assign_1 = Assign[T=DT_INT32, _class=[\"loc:@Variable_1\"], use_locking=true, validate_shape=true, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](Variable_1, SparseAdd:1)]]\n\n      From: Zongheng Yang <notifications@github.com>\n To: tensorflow/tensorflow <tensorflow@noreply.github.com> \nCc: Doug Loyer <dloyer123@yahoo.com>; Author <author@noreply.github.com>\n Sent: Thursday, May 11, 2017 5:11 PM\n Subject: Re: [tensorflow/tensorflow] Variable validate_shape not honored (#9816)\n   \nCan you try to isolate a shorter repro program so that we can look into this? (It'd be nice if the Github code block syntax can be fixed too :))\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.  \n\n   "}