{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23013", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23013/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23013/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23013/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23013", "id": 370515391, "node_id": "MDU6SXNzdWUzNzA1MTUzOTE=", "number": 23013, "title": "LSTM weights not loaded correctly in tf.keras", "user": {"login": "ptiwald", "id": 18571501, "node_id": "MDQ6VXNlcjE4NTcxNTAx", "avatar_url": "https://avatars2.githubusercontent.com/u/18571501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptiwald", "html_url": "https://github.com/ptiwald", "followers_url": "https://api.github.com/users/ptiwald/followers", "following_url": "https://api.github.com/users/ptiwald/following{/other_user}", "gists_url": "https://api.github.com/users/ptiwald/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptiwald/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptiwald/subscriptions", "organizations_url": "https://api.github.com/users/ptiwald/orgs", "repos_url": "https://api.github.com/users/ptiwald/repos", "events_url": "https://api.github.com/users/ptiwald/events{/privacy}", "received_events_url": "https://api.github.com/users/ptiwald/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097546578, "node_id": "MDU6TGFiZWwxMDk3NTQ2NTc4", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:keras", "name": "comp:keras", "color": "0052cc", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-10-16T09:17:40Z", "updated_at": "2018-10-24T18:21:05Z", "closed_at": "2018-10-22T16:15:40Z", "author_association": "NONE", "body_html": "<h3>Description</h3>\n<p>Running into this problem when I:</p>\n<ul>\n<li>build model A containing an LSTM layer</li>\n<li>save the model weights with <code>tf.keras.save_weights()</code> in TensorFlow format</li>\n<li>at some later point create an identical model A' and load the previously saved weights</li>\n</ul>\n<p>Inspection by eye shows the lstm weights differ between model A and A' while weights of other layers (e.g. dense) are loaded correctly from file. When running through the same procedure as above but saving the weights in HDF5 format everything works as expected.</p>\n<h3>System Information:</h3>\n<ul>\n<li>Have I written custom code: yes</li>\n<li>OS Platform and Distribution: Linux Ubuntu 16.04</li>\n<li>Mobile device: NA</li>\n<li>TensorFlow installed from (source or binary): binary (pip package)</li>\n<li>TensorFlow version: 1.10.0</li>\n<li>Python version: 3.6.6</li>\n<li>Bazel version: NA</li>\n<li>GCC/Compiler version: NA</li>\n<li>CUDA/cuDNN version: NA</li>\n<li>GPU model and memory: NA</li>\n<li>Exact command to reproduce:</li>\n</ul>\n<pre><code>import tensorflow as tf\n\ninput_layer = tf.keras.layers.Input(shape=(None, 5))\nlstm_layer = tf.keras.layers.LSTM(units=2)(input_layer)\noutput_layer = tf.keras.layers.Dense(units=2, activation='softmax')(lstm_layer)\n\nmy_model = tf.keras.Model(input_layer, output_layer)\n\nmy_model.save_weights(\"weights_test/my_weights\")\n\nprint('\\nlstm:')\nprint(my_model.layers[1].get_weights())\nprint('\\ndense:')\nprint(my_model.layers[2].get_weights())\n\n#lstm:\n#[array([[ 0.38913965,  0.4081726 , -0.23971727,  ...\n#dense:\n#[array([[-0.5567662 , -0.38940358],\n#       [ 0.16435587,  1.1092712 ]], dtype=float32), array([0., 0.], dtype=float32)]\n\nnew_input_layer = tf.keras.layers.Input(shape=(None, 5))\nnew_lstm_layer = tf.keras.layers.LSTM(units=2)(new_input_layer)\nnew_output_layer = tf.keras.layers.Dense(units=2, activation='softmax')(new_lstm_layer)\n\nmy_new_model = tf.keras.Model(new_input_layer, new_output_layer)\nmy_new_model.load_weights(\"weights_test/my_weights\")\n\nprint('\\nlstm:')\nprint(my_new_model.layers[1].get_weights())\nprint('\\ndense:')\nprint(my_new_model.layers[2].get_weights())\n\n#lstm:\n#[array([[-0.41712055,  0.67933106, -0.5161066 , ...\n#dense:\n#[array([[-0.5567662 , -0.38940358],\n#       [ 0.16435587,  1.1092712 ]], dtype=float32), array([0., 0.], dtype=float32)]\n</code></pre>", "body_text": "Description\nRunning into this problem when I:\n\nbuild model A containing an LSTM layer\nsave the model weights with tf.keras.save_weights() in TensorFlow format\nat some later point create an identical model A' and load the previously saved weights\n\nInspection by eye shows the lstm weights differ between model A and A' while weights of other layers (e.g. dense) are loaded correctly from file. When running through the same procedure as above but saving the weights in HDF5 format everything works as expected.\nSystem Information:\n\nHave I written custom code: yes\nOS Platform and Distribution: Linux Ubuntu 16.04\nMobile device: NA\nTensorFlow installed from (source or binary): binary (pip package)\nTensorFlow version: 1.10.0\nPython version: 3.6.6\nBazel version: NA\nGCC/Compiler version: NA\nCUDA/cuDNN version: NA\nGPU model and memory: NA\nExact command to reproduce:\n\nimport tensorflow as tf\n\ninput_layer = tf.keras.layers.Input(shape=(None, 5))\nlstm_layer = tf.keras.layers.LSTM(units=2)(input_layer)\noutput_layer = tf.keras.layers.Dense(units=2, activation='softmax')(lstm_layer)\n\nmy_model = tf.keras.Model(input_layer, output_layer)\n\nmy_model.save_weights(\"weights_test/my_weights\")\n\nprint('\\nlstm:')\nprint(my_model.layers[1].get_weights())\nprint('\\ndense:')\nprint(my_model.layers[2].get_weights())\n\n#lstm:\n#[array([[ 0.38913965,  0.4081726 , -0.23971727,  ...\n#dense:\n#[array([[-0.5567662 , -0.38940358],\n#       [ 0.16435587,  1.1092712 ]], dtype=float32), array([0., 0.], dtype=float32)]\n\nnew_input_layer = tf.keras.layers.Input(shape=(None, 5))\nnew_lstm_layer = tf.keras.layers.LSTM(units=2)(new_input_layer)\nnew_output_layer = tf.keras.layers.Dense(units=2, activation='softmax')(new_lstm_layer)\n\nmy_new_model = tf.keras.Model(new_input_layer, new_output_layer)\nmy_new_model.load_weights(\"weights_test/my_weights\")\n\nprint('\\nlstm:')\nprint(my_new_model.layers[1].get_weights())\nprint('\\ndense:')\nprint(my_new_model.layers[2].get_weights())\n\n#lstm:\n#[array([[-0.41712055,  0.67933106, -0.5161066 , ...\n#dense:\n#[array([[-0.5567662 , -0.38940358],\n#       [ 0.16435587,  1.1092712 ]], dtype=float32), array([0., 0.], dtype=float32)]", "body": "### Description\r\nRunning into this problem when I:\r\n- build model A containing an LSTM layer\r\n- save the model weights with `tf.keras.save_weights()` in TensorFlow format\r\n- at some later point create an identical model A' and load the previously saved weights\r\n\r\nInspection by eye shows the lstm weights differ between model A and A' while weights of other layers (e.g. dense) are loaded correctly from file. When running through the same procedure as above but saving the weights in HDF5 format everything works as expected.\r\n\r\n### System Information:\r\n- Have I written custom code: yes\r\n- OS Platform and Distribution: Linux Ubuntu 16.04\r\n- Mobile device: NA\r\n- TensorFlow installed from (source or binary): binary (pip package)\r\n- TensorFlow version: 1.10.0\r\n- Python version: 3.6.6\r\n- Bazel version: NA\r\n- GCC/Compiler version: NA\r\n- CUDA/cuDNN version: NA\r\n- GPU model and memory: NA\r\n- Exact command to reproduce:\r\n```\r\nimport tensorflow as tf\r\n\r\ninput_layer = tf.keras.layers.Input(shape=(None, 5))\r\nlstm_layer = tf.keras.layers.LSTM(units=2)(input_layer)\r\noutput_layer = tf.keras.layers.Dense(units=2, activation='softmax')(lstm_layer)\r\n\r\nmy_model = tf.keras.Model(input_layer, output_layer)\r\n\r\nmy_model.save_weights(\"weights_test/my_weights\")\r\n\r\nprint('\\nlstm:')\r\nprint(my_model.layers[1].get_weights())\r\nprint('\\ndense:')\r\nprint(my_model.layers[2].get_weights())\r\n\r\n#lstm:\r\n#[array([[ 0.38913965,  0.4081726 , -0.23971727,  ...\r\n#dense:\r\n#[array([[-0.5567662 , -0.38940358],\r\n#       [ 0.16435587,  1.1092712 ]], dtype=float32), array([0., 0.], dtype=float32)]\r\n\r\nnew_input_layer = tf.keras.layers.Input(shape=(None, 5))\r\nnew_lstm_layer = tf.keras.layers.LSTM(units=2)(new_input_layer)\r\nnew_output_layer = tf.keras.layers.Dense(units=2, activation='softmax')(new_lstm_layer)\r\n\r\nmy_new_model = tf.keras.Model(new_input_layer, new_output_layer)\r\nmy_new_model.load_weights(\"weights_test/my_weights\")\r\n\r\nprint('\\nlstm:')\r\nprint(my_new_model.layers[1].get_weights())\r\nprint('\\ndense:')\r\nprint(my_new_model.layers[2].get_weights())\r\n\r\n#lstm:\r\n#[array([[-0.41712055,  0.67933106, -0.5161066 , ...\r\n#dense:\r\n#[array([[-0.5567662 , -0.38940358],\r\n#       [ 0.16435587,  1.1092712 ]], dtype=float32), array([0., 0.], dtype=float32)]\r\n```"}