{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13521", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13521/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13521/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13521/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/13521", "id": 263399525, "node_id": "MDU6SXNzdWUyNjMzOTk1MjU=", "number": 13521, "title": "complex gradient update in optimization", "user": {"login": "keremcant", "id": 11929131, "node_id": "MDQ6VXNlcjExOTI5MTMx", "avatar_url": "https://avatars2.githubusercontent.com/u/11929131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keremcant", "html_url": "https://github.com/keremcant", "followers_url": "https://api.github.com/users/keremcant/followers", "following_url": "https://api.github.com/users/keremcant/following{/other_user}", "gists_url": "https://api.github.com/users/keremcant/gists{/gist_id}", "starred_url": "https://api.github.com/users/keremcant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keremcant/subscriptions", "organizations_url": "https://api.github.com/users/keremcant/orgs", "repos_url": "https://api.github.com/users/keremcant/repos", "events_url": "https://api.github.com/users/keremcant/events{/privacy}", "received_events_url": "https://api.github.com/users/keremcant/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-10-06T10:19:19Z", "updated_at": "2018-09-22T22:14:46Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>Is there a plan to allow complex optimization in Tensorflow in the future?</p>\n<p>When you try to do it with version 1.3, you can calculate and evaluate gradients, but you cannot apply them with opt.apply_gradients(grds_and_vars). The error message you get is:</p>\n<p>InvalidArgumentError (see above for traceback): No OpKernel was registered to support Op 'ApplyAdadelta' with these attrs.  Registered devices: [CPU,GPU], Registered kernels:<br>\ndevice='GPU'; T in [DT_DOUBLE]<br>\ndevice='GPU'; T in [DT_FLOAT]<br>\ndevice='GPU'; T in [DT_HALF]<br>\ndevice='CPU'; T in [DT_DOUBLE]<br>\ndevice='CPU'; T in [DT_FLOAT]<br>\ndevice='CPU'; T in [DT_HALF]</p>\n<hr>\n<h3>System information</h3>\n<ul>\n<li>\n<p><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nNo</p>\n</li>\n<li>\n<p>**OS Platform and Distribution<br>\nDistributor ID: Debian<br>\nDescription:    Debian GNU/Linux 8.9 (jessie)<br>\nRelease:        8.9</p>\n</li>\n<li>\n<p><strong>TensorFlow installed from (source or binary)</strong>:<br>\nusing pip install in a virtual conda environment</p>\n</li>\n<li>\n<p><strong>TensorFlow version (use command below)</strong>:<br>\n1.3</p>\n</li>\n<li>\n<p><strong>Python version</strong>:<br>\nPython 3.5.2 |Anaconda 4.3.0 (64-bit)| (default, Jul  2 2016, 17:53:06)</p>\n</li>\n<li>\n<p><strong>Bazel version (if compiling from source)</strong>:<br>\nnot applicable</p>\n</li>\n<li>\n<p><strong>CUDA/cuDNN version</strong>:<br>\n8.0/6.0</p>\n</li>\n<li>\n<p><strong>GPU model and memory</strong>:<br>\nTesla K40c, 11439MiB</p>\n</li>\n<li>\n<p><strong>Exact command to reproduce</strong>:<br>\nnot necessary, since feature request/question</p>\n</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>problem description above</p>\n<h3>Source code / logs</h3>\n<p>not applicable</p>", "body_text": "Is there a plan to allow complex optimization in Tensorflow in the future?\nWhen you try to do it with version 1.3, you can calculate and evaluate gradients, but you cannot apply them with opt.apply_gradients(grds_and_vars). The error message you get is:\nInvalidArgumentError (see above for traceback): No OpKernel was registered to support Op 'ApplyAdadelta' with these attrs.  Registered devices: [CPU,GPU], Registered kernels:\ndevice='GPU'; T in [DT_DOUBLE]\ndevice='GPU'; T in [DT_FLOAT]\ndevice='GPU'; T in [DT_HALF]\ndevice='CPU'; T in [DT_DOUBLE]\ndevice='CPU'; T in [DT_FLOAT]\ndevice='CPU'; T in [DT_HALF]\n\nSystem information\n\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nNo\n\n\n**OS Platform and Distribution\nDistributor ID: Debian\nDescription:    Debian GNU/Linux 8.9 (jessie)\nRelease:        8.9\n\n\nTensorFlow installed from (source or binary):\nusing pip install in a virtual conda environment\n\n\nTensorFlow version (use command below):\n1.3\n\n\nPython version:\nPython 3.5.2 |Anaconda 4.3.0 (64-bit)| (default, Jul  2 2016, 17:53:06)\n\n\nBazel version (if compiling from source):\nnot applicable\n\n\nCUDA/cuDNN version:\n8.0/6.0\n\n\nGPU model and memory:\nTesla K40c, 11439MiB\n\n\nExact command to reproduce:\nnot necessary, since feature request/question\n\n\nDescribe the problem\nproblem description above\nSource code / logs\nnot applicable", "body": "Is there a plan to allow complex optimization in Tensorflow in the future?\r\n\r\nWhen you try to do it with version 1.3, you can calculate and evaluate gradients, but you cannot apply them with opt.apply_gradients(grds_and_vars). The error message you get is: \r\n\r\nInvalidArgumentError (see above for traceback): No OpKernel was registered to support Op 'ApplyAdadelta' with these attrs.  Registered devices: [CPU,GPU], Registered kernels:\r\n  device='GPU'; T in [DT_DOUBLE]\r\n  device='GPU'; T in [DT_FLOAT]\r\n  device='GPU'; T in [DT_HALF]\r\n  device='CPU'; T in [DT_DOUBLE]\r\n  device='CPU'; T in [DT_FLOAT]\r\n  device='CPU'; T in [DT_HALF]\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nNo\r\n\r\n- **OS Platform and Distribution \r\nDistributor ID: Debian\r\nDescription:    Debian GNU/Linux 8.9 (jessie)\r\nRelease:        8.9\r\n\r\n- **TensorFlow installed from (source or binary)**:\r\nusing pip install in a virtual conda environment\r\n\r\n- **TensorFlow version (use command below)**:\r\n1.3\r\n\r\n- **Python version**: \r\nPython 3.5.2 |Anaconda 4.3.0 (64-bit)| (default, Jul  2 2016, 17:53:06) \r\n\r\n- **Bazel version (if compiling from source)**:\r\nnot applicable\r\n\r\n- **CUDA/cuDNN version**:\r\n8.0/6.0\r\n\r\n- **GPU model and memory**:\r\nTesla K40c, 11439MiB\r\n\r\n- **Exact command to reproduce**:\r\nnot necessary, since feature request/question\r\n\r\n### Describe the problem\r\nproblem description above\r\n\r\n### Source code / logs\r\nnot applicable\r\n"}