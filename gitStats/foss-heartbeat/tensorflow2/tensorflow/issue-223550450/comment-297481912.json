{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/297481912", "html_url": "https://github.com/tensorflow/tensorflow/issues/9379#issuecomment-297481912", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9379", "id": 297481912, "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzQ4MTkxMg==", "user": {"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-26T17:21:28Z", "updated_at": "2017-04-26T17:21:28Z", "author_association": "MEMBER", "body_html": "<p>If you have solved it please close it. On the other hand, this problem is difficult to help you solve since you didn't give us the code in B::Task. You also didn't show us the calling code. I'd guess that B was getting destroyed because A was getting destroyed after your main thread died but the thread you started survived and accessed this now deleted memory. It's also unclear why you made b_ptr shared and the thread ptr shared. You should prefer unique_ptr's unless you absolutely need shared ownership.</p>", "body_text": "If you have solved it please close it. On the other hand, this problem is difficult to help you solve since you didn't give us the code in B::Task. You also didn't show us the calling code. I'd guess that B was getting destroyed because A was getting destroyed after your main thread died but the thread you started survived and accessed this now deleted memory. It's also unclear why you made b_ptr shared and the thread ptr shared. You should prefer unique_ptr's unless you absolutely need shared ownership.", "body": "If you have solved it please close it. On the other hand, this problem is difficult to help you solve since you didn't give us the code in B::Task. You also didn't show us the calling code. I'd guess that B was getting destroyed because A was getting destroyed after your main thread died but the thread you started survived and accessed this now deleted memory. It's also unclear why you made b_ptr shared and the thread ptr shared. You should prefer unique_ptr's unless you absolutely need shared ownership."}