{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9379", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9379/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9379/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9379/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9379", "id": 223550450, "node_id": "MDU6SXNzdWUyMjM1NTA0NTA=", "number": 9379, "title": "[C++] xthread:  0xC0000005: Access violation reading location 0xFFFFFFFFFFFFFFFF", "user": {"login": "mrlzla", "id": 11842247, "node_id": "MDQ6VXNlcjExODQyMjQ3", "avatar_url": "https://avatars1.githubusercontent.com/u/11842247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrlzla", "html_url": "https://github.com/mrlzla", "followers_url": "https://api.github.com/users/mrlzla/followers", "following_url": "https://api.github.com/users/mrlzla/following{/other_user}", "gists_url": "https://api.github.com/users/mrlzla/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrlzla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrlzla/subscriptions", "organizations_url": "https://api.github.com/users/mrlzla/orgs", "repos_url": "https://api.github.com/users/mrlzla/repos", "events_url": "https://api.github.com/users/mrlzla/events{/privacy}", "received_events_url": "https://api.github.com/users/mrlzla/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 284443766, "node_id": "MDU6TGFiZWwyODQ0NDM3NjY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/languages", "name": "languages", "color": "bfe5bf", "default": false}, {"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 27, "created_at": "2017-04-22T08:43:43Z", "updated_at": "2018-03-29T01:32:18Z", "closed_at": "2017-06-16T21:38:54Z", "author_association": "NONE", "body_html": "<p>I want to read frozen graph from file.<br>\nSo I have class A:</p>\n<pre><code>class A\n{\n     std::shared_ptr&lt;B&gt; b_ptr;\npublic:\n     A()\n     {\n         b_ptr.reset(new B());\n     }\n};\n</code></pre>\n<p>class B:</p>\n<pre lang=\"//include\" data-meta=\"tensorflow\"><code>using namespace tensorflow;\nclass B\n{\n     SessionOptions _sessionOptions;\n     std::unique_ptr&lt;Session&gt; _session;\n     GraphDef _graph;\n     std::shared_ptr&lt;std::thread&gt; _thread;\npublic:\n     B()\n     {\n         graph::SetDefaultDevice(\"/cpu:0\", &amp;_graph);\n         ConfigProto&amp; config = _sessionOptions.config;\n\t config.set_intra_op_parallelism_threads(1);\n\t _session.reset(NewSession(_sessionOptions));\n         ReadBinaryProto(Env::Default(), \"path/to/graph\", &amp;_graph);\n\t _session-&gt;Create(_graph);\n         _thread.reset(new std::thread(&amp;B::Task, this));\n     }\n     void Task();\n}\n</code></pre>\n<p>And I have the problem mentioned above when I read frozen graph with ReadBinaryProto  <del>I create session</del>. If I comment a line _thread.reset(new std::thread(&amp;B::Task, this)), this code will return successfully. If I comment all the code refered with tensorflow it will return successfully too.</p>", "body_text": "I want to read frozen graph from file.\nSo I have class A:\nclass A\n{\n     std::shared_ptr<B> b_ptr;\npublic:\n     A()\n     {\n         b_ptr.reset(new B());\n     }\n};\n\nclass B:\nusing namespace tensorflow;\nclass B\n{\n     SessionOptions _sessionOptions;\n     std::unique_ptr<Session> _session;\n     GraphDef _graph;\n     std::shared_ptr<std::thread> _thread;\npublic:\n     B()\n     {\n         graph::SetDefaultDevice(\"/cpu:0\", &_graph);\n         ConfigProto& config = _sessionOptions.config;\n\t config.set_intra_op_parallelism_threads(1);\n\t _session.reset(NewSession(_sessionOptions));\n         ReadBinaryProto(Env::Default(), \"path/to/graph\", &_graph);\n\t _session->Create(_graph);\n         _thread.reset(new std::thread(&B::Task, this));\n     }\n     void Task();\n}\n\nAnd I have the problem mentioned above when I read frozen graph with ReadBinaryProto  I create session. If I comment a line _thread.reset(new std::thread(&B::Task, this)), this code will return successfully. If I comment all the code refered with tensorflow it will return successfully too.", "body": "I want to read frozen graph from file.\r\nSo I have class A:\r\n\r\n```\r\nclass A\r\n{\r\n     std::shared_ptr<B> b_ptr;\r\npublic:\r\n     A()\r\n     {\r\n         b_ptr.reset(new B());\r\n     }\r\n};\r\n```\r\n\r\nclass B:\r\n\r\n```//include tensorflow\r\nusing namespace tensorflow;\r\nclass B\r\n{\r\n     SessionOptions _sessionOptions;\r\n     std::unique_ptr<Session> _session;\r\n     GraphDef _graph;\r\n     std::shared_ptr<std::thread> _thread;\r\npublic:\r\n     B()\r\n     {\r\n         graph::SetDefaultDevice(\"/cpu:0\", &_graph);\r\n         ConfigProto& config = _sessionOptions.config;\r\n\t config.set_intra_op_parallelism_threads(1);\r\n\t _session.reset(NewSession(_sessionOptions));\r\n         ReadBinaryProto(Env::Default(), \"path/to/graph\", &_graph);\r\n\t _session->Create(_graph);\r\n         _thread.reset(new std::thread(&B::Task, this));\r\n     }\r\n     void Task();\r\n}\r\n```\r\n\r\nAnd I have the problem mentioned above when I read frozen graph with ReadBinaryProto  ~~I create session~~. If I comment a line _thread.reset(new std::thread(&B::Task, this)), this code will return successfully. If I comment all the code refered with tensorflow it will return successfully too."}