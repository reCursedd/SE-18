{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/107439309", "pull_request_review_id": 28411471, "id": 107439309, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNzQzOTMwOQ==", "diff_hunk": "@@ -0,0 +1,420 @@\n+/* Copyright 2015 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+// See docs in ../ops/nn_ops.cc.\n+#ifdef INTEL_MKL\n+\n+#include <string.h>\n+#include <map>\n+#include <vector>\n+#include \"tensorflow/core/framework/numeric_op.h\"\n+#include \"tensorflow/core/framework/op_kernel.h\"\n+#include \"tensorflow/core/framework/register_types.h\"\n+#include \"tensorflow/core/framework/tensor.h\"\n+#include \"tensorflow/core/framework/tensor_shape.h\"\n+#include \"tensorflow/core/framework/tensor_slice.h\"\n+#include \"tensorflow/core/kernels/bounds_check.h\"\n+#include \"tensorflow/core/kernels/ops_util.h\"\n+#include \"tensorflow/core/lib/core/errors.h\"\n+#include \"tensorflow/core/lib/gtl/array_slice.h\"\n+#include \"tensorflow/core/lib/strings/numbers.h\"\n+#include \"tensorflow/core/lib/strings/str_util.h\"\n+#include \"tensorflow/core/platform/logging.h\"\n+#include \"tensorflow/core/platform/macros.h\"\n+#include \"tensorflow/core/util/padding.h\"\n+#include \"tensorflow/core/util/tensor_format.h\"\n+\n+#include \"tensorflow/core/common_runtime/mkl_layer_registry.h\"\n+#include \"tensorflow/core/util/mkl_util.h\"\n+#include \"third_party/mkl/include/mkl_dnn.h\"\n+#include \"third_party/mkl/include/mkl_dnn_types.h\"\n+\n+namespace tensorflow {\n+\n+typedef Eigen::ThreadPoolDevice CPUDevice;\n+typedef Eigen::GpuDevice GPUDevice;\n+\n+template <typename Device, typename T, bool biasEnabled>\n+class MklConv2DOp : public OpKernel {\n+ public:\n+  ~MklConv2DOp() {}\n+\n+  explicit MklConv2DOp(OpKernelConstruction* context) : OpKernel(context) {\n+    OP_REQUIRES_OK(context, context->GetAttr(\"strides\", &strides_));\n+    string data_format;\n+    OP_REQUIRES_OK(context, context->GetAttr(\"data_format\", &data_format));\n+    OP_REQUIRES(context, FormatFromString(data_format, &data_format_),\n+                errors::InvalidArgument(\"Invalid data format\"));\n+    OP_REQUIRES(context, strides_.size() == 4,\n+                errors::InvalidArgument(\"Sliding window strides field must \"\n+                                        \"specify 4 dimensions\"));\n+\n+    const int64 stride_n = GetTensorDim(strides_, data_format_, 'N');\n+    const int64 stride_c = GetTensorDim(strides_, data_format_, 'C');\n+    OP_REQUIRES(\n+        context, stride_n == 1 && stride_c == 1,\n+        errors::InvalidArgument(\"Current implementation does not yet support \"\n+                                \"strides in the batch and depth dimensions.\"));\n+    OP_REQUIRES_OK(context, context->GetAttr(\"padding\", &padding_));\n+  }\n+\n+  void Compute(OpKernelContext* context) override {", "path": "tensorflow/core/kernels/mkl_conv_ops.cc", "position": 72, "original_position": 73, "commit_id": "25290780329e3e95d76357d12fafc9cf54b1f7ba", "original_commit_id": "835f8a53c1598bb5efdc60c858165bc0f7724f81", "user": {"login": "jbobba", "id": 21375855, "node_id": "MDQ6VXNlcjIxMzc1ODU1", "avatar_url": "https://avatars1.githubusercontent.com/u/21375855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbobba", "html_url": "https://github.com/jbobba", "followers_url": "https://api.github.com/users/jbobba/followers", "following_url": "https://api.github.com/users/jbobba/following{/other_user}", "gists_url": "https://api.github.com/users/jbobba/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbobba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbobba/subscriptions", "organizations_url": "https://api.github.com/users/jbobba/orgs", "repos_url": "https://api.github.com/users/jbobba/repos", "events_url": "https://api.github.com/users/jbobba/events{/privacy}", "received_events_url": "https://api.github.com/users/jbobba/received_events", "type": "User", "site_admin": false}, "body": "Thanks for the feedback. The MKL variables are not all thread-safe. So we will have to either pass them through sub-routines or revert to a single monolithic function. Do you have a preference? ", "created_at": "2017-03-22T15:07:43Z", "updated_at": "2017-03-22T15:07:43Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/7937#discussion_r107439309", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/7937", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/107439309"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/7937#discussion_r107439309"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/7937"}}, "body_html": "<p>Thanks for the feedback. The MKL variables are not all thread-safe. So we will have to either pass them through sub-routines or revert to a single monolithic function. Do you have a preference?</p>", "body_text": "Thanks for the feedback. The MKL variables are not all thread-safe. So we will have to either pass them through sub-routines or revert to a single monolithic function. Do you have a preference?", "in_reply_to_id": 103813760}