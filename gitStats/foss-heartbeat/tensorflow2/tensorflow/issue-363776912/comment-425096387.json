{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/425096387", "html_url": "https://github.com/tensorflow/tensorflow/issues/22512#issuecomment-425096387", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22512", "id": 425096387, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTA5NjM4Nw==", "user": {"login": "Overdrivr", "id": 1294805, "node_id": "MDQ6VXNlcjEyOTQ4MDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1294805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Overdrivr", "html_url": "https://github.com/Overdrivr", "followers_url": "https://api.github.com/users/Overdrivr/followers", "following_url": "https://api.github.com/users/Overdrivr/following{/other_user}", "gists_url": "https://api.github.com/users/Overdrivr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Overdrivr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Overdrivr/subscriptions", "organizations_url": "https://api.github.com/users/Overdrivr/orgs", "repos_url": "https://api.github.com/users/Overdrivr/repos", "events_url": "https://api.github.com/users/Overdrivr/events{/privacy}", "received_events_url": "https://api.github.com/users/Overdrivr/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-27T13:39:55Z", "updated_at": "2018-09-27T13:39:55Z", "author_association": "NONE", "body_html": "<p>While we're at it, I'm getting the same problem with tensorflow-cpu... on another freshly created machine.. that supports AVX.  Fun ride.</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://camo.githubusercontent.com/c4b70450593510beb166d379325f4e0ad9f748c0/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f6b6d77545a534932414c7374322f67697068792e676966\"><img src=\"https://camo.githubusercontent.com/c4b70450593510beb166d379325f4e0ad9f748c0/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f6b6d77545a534932414c7374322f67697068792e676966\" alt=\"Emotionnal rollercoaster\" data-canonical-src=\"https://media.giphy.com/media/kmwTZSI2ALst2/giphy.gif\" style=\"max-width:100%;\"></a></p>\n<p>I'm leaving this here for documentation, it might help others.</p>\n<p>In my production virtualenv with tensorflow-cpu + a bunch of other packages, I get the following error (the output comes from a tensorflow-install-checker tool that I will release in public domain):</p>\n<pre><code>INFO - Vendor ID         : GenuineIntel\nINFO - CPU name          : Intel(R) Xeon(R) CPU E5-2623 v4 @ 2.60GHz\nINFO - Microarchitecture : broadwell\nOK  - Your processor supports AVX instructions\nERR - Failed to import the TensorFlow module.\nTraceback (most recent call last):\n  File \"c:\\users\\paperspace\\.virtualenvs\\nexture-studio-dist-jrq2aiwp\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow_internal.py\", line 14, in swig_import_helper\n    return importlib.import_module(mname)\n  File \"c:\\users\\paperspace\\.virtualenvs\\nexture-studio-dist-jrq2aiwp\\lib\\importlib\\__init__.py\", line 126, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n  File \"&lt;frozen importlib._bootstrap&gt;\", line 994, in _gcd_import\n  File \"&lt;frozen importlib._bootstrap&gt;\", line 971, in _find_and_load\n  File \"&lt;frozen importlib._bootstrap&gt;\", line 955, in _find_and_load_unlocked\n  File \"&lt;frozen importlib._bootstrap&gt;\", line 658, in _load_unlocked\n  File \"&lt;frozen importlib._bootstrap&gt;\", line 571, in module_from_spec\n  File \"&lt;frozen importlib._bootstrap_external&gt;\", line 922, in create_module\n  File \"&lt;frozen importlib._bootstrap&gt;\", line 219, in _call_with_frames_removed\nImportError: DLL load failed: The specified module could not be found.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"c:\\users\\paperspace\\.virtualenvs\\nexture-studio-dist-jrq2aiwp\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow.py\", line 58, in &lt;module&gt;\n    from tensorflow.python.pywrap_tensorflow_internal import *\n  File \"c:\\users\\paperspace\\.virtualenvs\\nexture-studio-dist-jrq2aiwp\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow_internal.py\", line 17, in &lt;module&gt;\n    _pywrap_tensorflow_internal = swig_import_helper()\n  File \"c:\\users\\paperspace\\.virtualenvs\\nexture-studio-dist-jrq2aiwp\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow_internal.py\", line 16, in swig_import_helper\n    return importlib.import_module('_pywrap_tensorflow_internal')\n  File \"c:\\users\\paperspace\\.virtualenvs\\nexture-studio-dist-jrq2aiwp\\lib\\importlib\\__init__.py\", line 126, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\nModuleNotFoundError: No module named '_pywrap_tensorflow_internal'\n\n\nFailed to load the native TensorFlow runtime.\n\nSee https://www.tensorflow.org/install/install_sources#common_installation_problems\n\nfor some common reasons and solutions.  Include the entire stack trace\nabove this error message when asking for help.\nOK  - TensorFlow found at: c:\\users\\paperspace\\.virtualenvs\\nexture-studio-dist-jrq2aiwp\\lib\\site-packages\\tensorflow\nOK  - msvcp140.dll found at: c:\\users\\paperspace\\.virtualenvs\\nexture-studio-dist-jrq2aiwp\\lib\\site-packages\\scipy\\extra-dll\\msvcp140.dll\nOK  - Cuda 9.0 found at C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\bin\\cudart64_90.dll\nOK  - nvcuda.dll found at C:\\Windows\\system32\\nvcuda.dll\nOK  - cuDNN Found at C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\bin\\cudnn64_7.dll\n</code></pre>\n<p>In another virtualenv with only tensorflow-cpu, I get this one:</p>\n<pre><code>Traceback (most recent call last):\n  File \"C:\\Users\\Paperspace\\.virtualenvs\\test_tf--gQQvE-L\\lib\\site-packages\\tensorflow\\python\\platform\\self_check.py\", line 47, in preload_check\n    ctypes.WinDLL(build_info.msvcp_dll_name)\n  File \"C:\\Program Files\\Python36\\Lib\\ctypes\\__init__.py\", line 348, in __init__\n    self._handle = _dlopen(self._name, mode)\nOSError: [WinError 126] The specified module could not be found\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"&lt;string&gt;\", line 1, in &lt;module&gt;\n  File \"C:\\Users\\Paperspace\\.virtualenvs\\test_tf--gQQvE-L\\lib\\site-packages\\tensorflow\\__init__.py\", line 22, in &lt;module&gt;\n    from tensorflow.python import pywrap_tensorflow  # pylint: disable=unused-import\n  File \"C:\\Users\\Paperspace\\.virtualenvs\\test_tf--gQQvE-L\\lib\\site-packages\\tensorflow\\python\\__init__.py\", line 49, in &lt;module&gt;\n    from tensorflow.python import pywrap_tensorflow\n  File \"C:\\Users\\Paperspace\\.virtualenvs\\test_tf--gQQvE-L\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow.py\", line 30, in &lt;module&gt;\n    self_check.preload_check()\n  File \"C:\\Users\\Paperspace\\.virtualenvs\\test_tf--gQQvE-L\\lib\\site-packages\\tensorflow\\python\\platform\\self_check.py\", line 55, in preload_check\n    % build_info.msvcp_dll_name)\nImportError: Could not find 'msvcp140.dll'. TensorFlow requires that this DLL be installed in a directory that is named in your %PATH% environment variable. You may install this DLL by downloading Visual C++ 2015 Redistributable Update 3 from this URL: https://www.microsoft.com/en-us/download/details.aspx?id=53587\n</code></pre>\n<p>Hum weird right ? Let's summarize:</p>\n<ul>\n<li>In the first env, <code>msvcp140.dll</code> is found, but TF fails to load</li>\n<li>In the second env, <code>msvcp140.dll</code> is missing</li>\n</ul>\n<p>If you look closely, the <code>msvcp140.dll</code> found in the first env does not come from <code>system32</code> folder.<br>\nIt comes from scipy (<code>c:\\users\\paperspace\\.virtualenvs\\******-jrq2aiwp\\lib\\site-packages\\scipy\\extra-dll\\msvcp140.dll</code>).<br>\nScipy is (<a href=\"https://github.com/scipy/scipy/issues/7969\" data-hovercard-type=\"issue\" data-hovercard-url=\"/scipy/scipy/issues/7969/hovercard\">to solve other issues</a>) releasing <code>msvcp140.dll</code> in their extra-dll folder. This folder ends up in the PATH, and the dll in question picked up by the library finder.</p>\n<p>Now, why that's a problem:</p>\n<ul>\n<li>For machines that already have this DLL in <code>system32</code> folder, it's fine because system path takes precedence over user path.</li>\n<li>For machines without this DLL, instead of having TF crash with DLL missing, it crashes with some cryptic <code>_pywrap_tensorflow_internal...</code> error, most likely because the DLL found in scipy is different and not compatible that the latest installed by Microsoft Visual C++ 2015 Redistributable Update 3 RC. The workaround is then to simply install <a href=\"https://www.microsoft.com/en-us/download/details.aspx?id=53840\" rel=\"nofollow\">Microsoft Visual C++ 2015 Redistributable 64 bits</a>. This way, the DLL is installed in system32 folder and takes precedences over the one installed by scipy.</li>\n</ul>\n<p>After doing so on my VM, importing TF in both virtualenvs now runs properly. <g-emoji class=\"g-emoji\" alias=\"clinking_glasses\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f942.png\">\ud83e\udd42</g-emoji></p>\n<pre><code>INFO - Vendor ID         : GenuineIntel\nINFO - CPU name          : Intel(R) Xeon(R) CPU E5-2623 v4 @ 2.60GHz\nINFO - Microarchitecture : broadwell\nOK  - Your processor supports AVX instructions\nOK  - TensorFlow is functional.\nERR - TensorFlow does not include GPU support.\nOK  - TensorFlow found at: c:\\users\\paperspace\\.virtualenvs\\nexture-studio-dist-jrq2aiwp\\lib\\site-packages\\tensorflow\nOK  - msvcp140.dll found at: C:\\Windows\\system32\\msvcp140.dll\nOK  - Cuda 9.0 found at C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\bin\\cudart64_90.dll\nOK  - nvcuda.dll found at C:\\Windows\\system32\\nvcuda.dll\nOK  - cuDNN Found at C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\bin\\cudnn64_7.dll\n</code></pre>\n<p>Maybe it might be worth mentioning it in the install docs.</p>", "body_text": "While we're at it, I'm getting the same problem with tensorflow-cpu... on another freshly created machine.. that supports AVX.  Fun ride.\n\nI'm leaving this here for documentation, it might help others.\nIn my production virtualenv with tensorflow-cpu + a bunch of other packages, I get the following error (the output comes from a tensorflow-install-checker tool that I will release in public domain):\nINFO - Vendor ID         : GenuineIntel\nINFO - CPU name          : Intel(R) Xeon(R) CPU E5-2623 v4 @ 2.60GHz\nINFO - Microarchitecture : broadwell\nOK  - Your processor supports AVX instructions\nERR - Failed to import the TensorFlow module.\nTraceback (most recent call last):\n  File \"c:\\users\\paperspace\\.virtualenvs\\nexture-studio-dist-jrq2aiwp\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow_internal.py\", line 14, in swig_import_helper\n    return importlib.import_module(mname)\n  File \"c:\\users\\paperspace\\.virtualenvs\\nexture-studio-dist-jrq2aiwp\\lib\\importlib\\__init__.py\", line 126, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n  File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 955, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 658, in _load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 571, in module_from_spec\n  File \"<frozen importlib._bootstrap_external>\", line 922, in create_module\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\nImportError: DLL load failed: The specified module could not be found.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"c:\\users\\paperspace\\.virtualenvs\\nexture-studio-dist-jrq2aiwp\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow.py\", line 58, in <module>\n    from tensorflow.python.pywrap_tensorflow_internal import *\n  File \"c:\\users\\paperspace\\.virtualenvs\\nexture-studio-dist-jrq2aiwp\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow_internal.py\", line 17, in <module>\n    _pywrap_tensorflow_internal = swig_import_helper()\n  File \"c:\\users\\paperspace\\.virtualenvs\\nexture-studio-dist-jrq2aiwp\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow_internal.py\", line 16, in swig_import_helper\n    return importlib.import_module('_pywrap_tensorflow_internal')\n  File \"c:\\users\\paperspace\\.virtualenvs\\nexture-studio-dist-jrq2aiwp\\lib\\importlib\\__init__.py\", line 126, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\nModuleNotFoundError: No module named '_pywrap_tensorflow_internal'\n\n\nFailed to load the native TensorFlow runtime.\n\nSee https://www.tensorflow.org/install/install_sources#common_installation_problems\n\nfor some common reasons and solutions.  Include the entire stack trace\nabove this error message when asking for help.\nOK  - TensorFlow found at: c:\\users\\paperspace\\.virtualenvs\\nexture-studio-dist-jrq2aiwp\\lib\\site-packages\\tensorflow\nOK  - msvcp140.dll found at: c:\\users\\paperspace\\.virtualenvs\\nexture-studio-dist-jrq2aiwp\\lib\\site-packages\\scipy\\extra-dll\\msvcp140.dll\nOK  - Cuda 9.0 found at C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\bin\\cudart64_90.dll\nOK  - nvcuda.dll found at C:\\Windows\\system32\\nvcuda.dll\nOK  - cuDNN Found at C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\bin\\cudnn64_7.dll\n\nIn another virtualenv with only tensorflow-cpu, I get this one:\nTraceback (most recent call last):\n  File \"C:\\Users\\Paperspace\\.virtualenvs\\test_tf--gQQvE-L\\lib\\site-packages\\tensorflow\\python\\platform\\self_check.py\", line 47, in preload_check\n    ctypes.WinDLL(build_info.msvcp_dll_name)\n  File \"C:\\Program Files\\Python36\\Lib\\ctypes\\__init__.py\", line 348, in __init__\n    self._handle = _dlopen(self._name, mode)\nOSError: [WinError 126] The specified module could not be found\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"C:\\Users\\Paperspace\\.virtualenvs\\test_tf--gQQvE-L\\lib\\site-packages\\tensorflow\\__init__.py\", line 22, in <module>\n    from tensorflow.python import pywrap_tensorflow  # pylint: disable=unused-import\n  File \"C:\\Users\\Paperspace\\.virtualenvs\\test_tf--gQQvE-L\\lib\\site-packages\\tensorflow\\python\\__init__.py\", line 49, in <module>\n    from tensorflow.python import pywrap_tensorflow\n  File \"C:\\Users\\Paperspace\\.virtualenvs\\test_tf--gQQvE-L\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow.py\", line 30, in <module>\n    self_check.preload_check()\n  File \"C:\\Users\\Paperspace\\.virtualenvs\\test_tf--gQQvE-L\\lib\\site-packages\\tensorflow\\python\\platform\\self_check.py\", line 55, in preload_check\n    % build_info.msvcp_dll_name)\nImportError: Could not find 'msvcp140.dll'. TensorFlow requires that this DLL be installed in a directory that is named in your %PATH% environment variable. You may install this DLL by downloading Visual C++ 2015 Redistributable Update 3 from this URL: https://www.microsoft.com/en-us/download/details.aspx?id=53587\n\nHum weird right ? Let's summarize:\n\nIn the first env, msvcp140.dll is found, but TF fails to load\nIn the second env, msvcp140.dll is missing\n\nIf you look closely, the msvcp140.dll found in the first env does not come from system32 folder.\nIt comes from scipy (c:\\users\\paperspace\\.virtualenvs\\******-jrq2aiwp\\lib\\site-packages\\scipy\\extra-dll\\msvcp140.dll).\nScipy is (to solve other issues) releasing msvcp140.dll in their extra-dll folder. This folder ends up in the PATH, and the dll in question picked up by the library finder.\nNow, why that's a problem:\n\nFor machines that already have this DLL in system32 folder, it's fine because system path takes precedence over user path.\nFor machines without this DLL, instead of having TF crash with DLL missing, it crashes with some cryptic _pywrap_tensorflow_internal... error, most likely because the DLL found in scipy is different and not compatible that the latest installed by Microsoft Visual C++ 2015 Redistributable Update 3 RC. The workaround is then to simply install Microsoft Visual C++ 2015 Redistributable 64 bits. This way, the DLL is installed in system32 folder and takes precedences over the one installed by scipy.\n\nAfter doing so on my VM, importing TF in both virtualenvs now runs properly. \ud83e\udd42\nINFO - Vendor ID         : GenuineIntel\nINFO - CPU name          : Intel(R) Xeon(R) CPU E5-2623 v4 @ 2.60GHz\nINFO - Microarchitecture : broadwell\nOK  - Your processor supports AVX instructions\nOK  - TensorFlow is functional.\nERR - TensorFlow does not include GPU support.\nOK  - TensorFlow found at: c:\\users\\paperspace\\.virtualenvs\\nexture-studio-dist-jrq2aiwp\\lib\\site-packages\\tensorflow\nOK  - msvcp140.dll found at: C:\\Windows\\system32\\msvcp140.dll\nOK  - Cuda 9.0 found at C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\bin\\cudart64_90.dll\nOK  - nvcuda.dll found at C:\\Windows\\system32\\nvcuda.dll\nOK  - cuDNN Found at C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\bin\\cudnn64_7.dll\n\nMaybe it might be worth mentioning it in the install docs.", "body": "While we're at it, I'm getting the same problem with tensorflow-cpu... on another freshly created machine.. that supports AVX.  Fun ride.\r\n\r\n![Emotionnal rollercoaster](https://media.giphy.com/media/kmwTZSI2ALst2/giphy.gif)\r\n\r\nI'm leaving this here for documentation, it might help others.\r\n\r\nIn my production virtualenv with tensorflow-cpu + a bunch of other packages, I get the following error (the output comes from a tensorflow-install-checker tool that I will release in public domain):\r\n\r\n```\r\nINFO - Vendor ID         : GenuineIntel\r\nINFO - CPU name          : Intel(R) Xeon(R) CPU E5-2623 v4 @ 2.60GHz\r\nINFO - Microarchitecture : broadwell\r\nOK  - Your processor supports AVX instructions\r\nERR - Failed to import the TensorFlow module.\r\nTraceback (most recent call last):\r\n  File \"c:\\users\\paperspace\\.virtualenvs\\nexture-studio-dist-jrq2aiwp\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow_internal.py\", line 14, in swig_import_helper\r\n    return importlib.import_module(mname)\r\n  File \"c:\\users\\paperspace\\.virtualenvs\\nexture-studio-dist-jrq2aiwp\\lib\\importlib\\__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 955, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 658, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 571, in module_from_spec\r\n  File \"<frozen importlib._bootstrap_external>\", line 922, in create_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\nImportError: DLL load failed: The specified module could not be found.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"c:\\users\\paperspace\\.virtualenvs\\nexture-studio-dist-jrq2aiwp\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow.py\", line 58, in <module>\r\n    from tensorflow.python.pywrap_tensorflow_internal import *\r\n  File \"c:\\users\\paperspace\\.virtualenvs\\nexture-studio-dist-jrq2aiwp\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow_internal.py\", line 17, in <module>\r\n    _pywrap_tensorflow_internal = swig_import_helper()\r\n  File \"c:\\users\\paperspace\\.virtualenvs\\nexture-studio-dist-jrq2aiwp\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow_internal.py\", line 16, in swig_import_helper\r\n    return importlib.import_module('_pywrap_tensorflow_internal')\r\n  File \"c:\\users\\paperspace\\.virtualenvs\\nexture-studio-dist-jrq2aiwp\\lib\\importlib\\__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\nModuleNotFoundError: No module named '_pywrap_tensorflow_internal'\r\n\r\n\r\nFailed to load the native TensorFlow runtime.\r\n\r\nSee https://www.tensorflow.org/install/install_sources#common_installation_problems\r\n\r\nfor some common reasons and solutions.  Include the entire stack trace\r\nabove this error message when asking for help.\r\nOK  - TensorFlow found at: c:\\users\\paperspace\\.virtualenvs\\nexture-studio-dist-jrq2aiwp\\lib\\site-packages\\tensorflow\r\nOK  - msvcp140.dll found at: c:\\users\\paperspace\\.virtualenvs\\nexture-studio-dist-jrq2aiwp\\lib\\site-packages\\scipy\\extra-dll\\msvcp140.dll\r\nOK  - Cuda 9.0 found at C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\bin\\cudart64_90.dll\r\nOK  - nvcuda.dll found at C:\\Windows\\system32\\nvcuda.dll\r\nOK  - cuDNN Found at C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\bin\\cudnn64_7.dll\r\n```\r\n\r\nIn another virtualenv with only tensorflow-cpu, I get this one:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\Paperspace\\.virtualenvs\\test_tf--gQQvE-L\\lib\\site-packages\\tensorflow\\python\\platform\\self_check.py\", line 47, in preload_check\r\n    ctypes.WinDLL(build_info.msvcp_dll_name)\r\n  File \"C:\\Program Files\\Python36\\Lib\\ctypes\\__init__.py\", line 348, in __init__\r\n    self._handle = _dlopen(self._name, mode)\r\nOSError: [WinError 126] The specified module could not be found\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"C:\\Users\\Paperspace\\.virtualenvs\\test_tf--gQQvE-L\\lib\\site-packages\\tensorflow\\__init__.py\", line 22, in <module>\r\n    from tensorflow.python import pywrap_tensorflow  # pylint: disable=unused-import\r\n  File \"C:\\Users\\Paperspace\\.virtualenvs\\test_tf--gQQvE-L\\lib\\site-packages\\tensorflow\\python\\__init__.py\", line 49, in <module>\r\n    from tensorflow.python import pywrap_tensorflow\r\n  File \"C:\\Users\\Paperspace\\.virtualenvs\\test_tf--gQQvE-L\\lib\\site-packages\\tensorflow\\python\\pywrap_tensorflow.py\", line 30, in <module>\r\n    self_check.preload_check()\r\n  File \"C:\\Users\\Paperspace\\.virtualenvs\\test_tf--gQQvE-L\\lib\\site-packages\\tensorflow\\python\\platform\\self_check.py\", line 55, in preload_check\r\n    % build_info.msvcp_dll_name)\r\nImportError: Could not find 'msvcp140.dll'. TensorFlow requires that this DLL be installed in a directory that is named in your %PATH% environment variable. You may install this DLL by downloading Visual C++ 2015 Redistributable Update 3 from this URL: https://www.microsoft.com/en-us/download/details.aspx?id=53587\r\n```\r\n\r\nHum weird right ? Let's summarize:\r\n\r\n- In the first env, `msvcp140.dll` is found, but TF fails to load\r\n- In the second env, `msvcp140.dll` is missing\r\n\r\nIf you look closely, the `msvcp140.dll` found in the first env does not come from `system32` folder.\r\nIt comes from scipy (`c:\\users\\paperspace\\.virtualenvs\\******-jrq2aiwp\\lib\\site-packages\\scipy\\extra-dll\\msvcp140.dll`).\r\nScipy is ([to solve other issues](https://github.com/scipy/scipy/issues/7969)) releasing `msvcp140.dll` in their extra-dll folder. This folder ends up in the PATH, and the dll in question picked up by the library finder.\r\n\r\nNow, why that's a problem:\r\n\r\n- For machines that already have this DLL in `system32` folder, it's fine because system path takes precedence over user path.\r\n- For machines without this DLL, instead of having TF crash with DLL missing, it crashes with some cryptic `_pywrap_tensorflow_internal...` error, most likely because the DLL found in scipy is different and not compatible that the latest installed by Microsoft Visual C++ 2015 Redistributable Update 3 RC. The workaround is then to simply install [Microsoft Visual C++ 2015 Redistributable 64 bits](https://www.microsoft.com/en-us/download/details.aspx?id=53840). This way, the DLL is installed in system32 folder and takes precedences over the one installed by scipy.\r\n\r\nAfter doing so on my VM, importing TF in both virtualenvs now runs properly. \ud83e\udd42 \r\n\r\n```\r\nINFO - Vendor ID         : GenuineIntel\r\nINFO - CPU name          : Intel(R) Xeon(R) CPU E5-2623 v4 @ 2.60GHz\r\nINFO - Microarchitecture : broadwell\r\nOK  - Your processor supports AVX instructions\r\nOK  - TensorFlow is functional.\r\nERR - TensorFlow does not include GPU support.\r\nOK  - TensorFlow found at: c:\\users\\paperspace\\.virtualenvs\\nexture-studio-dist-jrq2aiwp\\lib\\site-packages\\tensorflow\r\nOK  - msvcp140.dll found at: C:\\Windows\\system32\\msvcp140.dll\r\nOK  - Cuda 9.0 found at C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\bin\\cudart64_90.dll\r\nOK  - nvcuda.dll found at C:\\Windows\\system32\\nvcuda.dll\r\nOK  - cuDNN Found at C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\bin\\cudnn64_7.dll\r\n```\r\n\r\nMaybe it might be worth mentioning it in the install docs."}