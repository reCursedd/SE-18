{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20906", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20906/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20906/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20906/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20906", "id": 342168929, "node_id": "MDU6SXNzdWUzNDIxNjg5Mjk=", "number": 20906, "title": "failed to load keras model with tensorflow r1.9", "user": {"login": "cheerss", "id": 15375071, "node_id": "MDQ6VXNlcjE1Mzc1MDcx", "avatar_url": "https://avatars3.githubusercontent.com/u/15375071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cheerss", "html_url": "https://github.com/cheerss", "followers_url": "https://api.github.com/users/cheerss/followers", "following_url": "https://api.github.com/users/cheerss/following{/other_user}", "gists_url": "https://api.github.com/users/cheerss/gists{/gist_id}", "starred_url": "https://api.github.com/users/cheerss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cheerss/subscriptions", "organizations_url": "https://api.github.com/users/cheerss/orgs", "repos_url": "https://api.github.com/users/cheerss/repos", "events_url": "https://api.github.com/users/cheerss/events{/privacy}", "received_events_url": "https://api.github.com/users/cheerss/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-18T04:03:32Z", "updated_at": "2018-07-18T06:13:43Z", "closed_at": "2018-07-18T06:13:43Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: from binary(pip install)</li>\n<li><strong>TensorFlow version (use command below)</strong>:1.9.0</li>\n<li><strong>Python version</strong>: 3.6.4</li>\n<li><strong>Bazel version (if compiling from source)</strong>: None</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: None</li>\n<li><strong>CUDA/cuDNN version</strong>:  CUDA-8.0</li>\n<li><strong>GPU model and memory</strong>: GTX1080Ti, 12G</li>\n<li><strong>Exact command to reproduce</strong>: just as the code below</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>As the official document <a href=\"https://www.tensorflow.org/guide/keras\" rel=\"nofollow\">here</a>, tf.keras.models could be saved with <code>model.save('my_model.h5')</code>, namely, \"The entire model can be saved to a file that contains the weight values, the model's configuration, and even the optimizer's configuration\". However, when I load the model with <code>model = tf.keras.models.load_model('lenet_mnist.h5')</code>, it throws an error: <strong>\"You are trying to load a weight file containing 5 layers into a model with 0 layers.\"</strong></p>\n<h3>Source code / logs</h3>\n<h4>source code(lenet_mnist.py)</h4>\n<pre><code>import tensorflow as tf\nimport numpy as np\ndef train_test_data():\n    (x_train, y_train),(x_test, y_test) = tf.keras.datasets.mnist.load_data()\n    x_train, x_test = x_train / 255.0, x_test / 255.0\n    x_train = np.expand_dims(x_train, -1)\n    x_test = np.expand_dims(x_test, -1)\n    return x_train, y_train, x_test, y_test\n\ndef train_fn():\n    x_train, y_train, x_test, y_test = train_test_data()\n    model = tf.keras.models.Sequential([\n        tf.keras.layers.Conv2D(6, [5, 5], strides=1, padding=\"same\", use_bias=True),\n        tf.keras.layers.AvgPool2D([2, 2], 2, padding=\"valid\"),   \n        tf.keras.layers.LeakyReLU(0),\n        tf.keras.layers.Conv2D(16, [5, 5], strides=1, padding=\"valid\", use_bias=True),\n        tf.keras.layers.AvgPool2D([2, 2], 2, padding=\"valid\"),\n        tf.keras.layers.LeakyReLU(0),\n        tf.keras.layers.Conv2D(120, [5, 5], strides=1, padding=\"valid\", use_bias=True),\n        tf.keras.layers.Flatten(),\n        tf.keras.layers.Dense(84, activation=tf.nn.relu),\n        tf.keras.layers.Dense(10, activation=tf.nn.softmax),\n    ])\n    model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])\n    model.fit(x_train, y_train, epochs=5, batch_size=300)\n    loss, test_acc = model.evaluate(x_test, y_test, verbose=1)\n    print(\"test_acc: \" + str(test_acc))\n    model.save('lenet_mnist.h5')\n\ndef test_fn():\n    x_train, y_train, x_test, y_test = train_test_data()\n    model = tf.keras.models.load_model('lenet_mnist.h5')\n    loss, test_acc = model.evaluate(x_test, y_test, verbose=1)\n    print(\"test_acc: \" + str(test_acc))\n\ndef main(unused):\n    train_fn()\n    test_fn()\n\nif __name__ == '__main__':\n    tf.app.run()\n</code></pre>\n<h4>log</h4>\n<pre><code>Traceback (most recent call last):\n  File \"lenet_mnist.py\", line 60, in &lt;module&gt;\n    tf.app.run()\n  File \"/home/wangwenxiao/anaconda3/lib/python3.6/site-packages/tensorflow/python/platform/app.py\", line 125, in run\n    _sys.exit(main(argv))\n  File \"lenet_mnist.py\", line 57, in main\n    test_fn()\n  File \"lenet_mnist.py\", line 49, in test_fn\n    model = tf.keras.models.load_model('lenet_mnist.h5')\n  File \"/home/wangwenxiao/anaconda3/lib/python3.6/site-packages/tensorflow/python/keras/engine/saving.py\", line 232, in load_model\n    load_weights_from_hdf5_group(f['model_weights'], model.layers)\n  File \"/home/wangwenxiao/anaconda3/lib/python3.6/site-packages/tensorflow/python/keras/engine/saving.py\", line 732, in load_weights_from_hdf5_group\n    ' layers.')\nValueError: You are trying to load a weight file containing 5 layers into a model with 0 layers.\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04\nTensorFlow installed from (source or binary): from binary(pip install)\nTensorFlow version (use command below):1.9.0\nPython version: 3.6.4\nBazel version (if compiling from source): None\nGCC/Compiler version (if compiling from source): None\nCUDA/cuDNN version:  CUDA-8.0\nGPU model and memory: GTX1080Ti, 12G\nExact command to reproduce: just as the code below\n\nDescribe the problem\nAs the official document here, tf.keras.models could be saved with model.save('my_model.h5'), namely, \"The entire model can be saved to a file that contains the weight values, the model's configuration, and even the optimizer's configuration\". However, when I load the model with model = tf.keras.models.load_model('lenet_mnist.h5'), it throws an error: \"You are trying to load a weight file containing 5 layers into a model with 0 layers.\"\nSource code / logs\nsource code(lenet_mnist.py)\nimport tensorflow as tf\nimport numpy as np\ndef train_test_data():\n    (x_train, y_train),(x_test, y_test) = tf.keras.datasets.mnist.load_data()\n    x_train, x_test = x_train / 255.0, x_test / 255.0\n    x_train = np.expand_dims(x_train, -1)\n    x_test = np.expand_dims(x_test, -1)\n    return x_train, y_train, x_test, y_test\n\ndef train_fn():\n    x_train, y_train, x_test, y_test = train_test_data()\n    model = tf.keras.models.Sequential([\n        tf.keras.layers.Conv2D(6, [5, 5], strides=1, padding=\"same\", use_bias=True),\n        tf.keras.layers.AvgPool2D([2, 2], 2, padding=\"valid\"),   \n        tf.keras.layers.LeakyReLU(0),\n        tf.keras.layers.Conv2D(16, [5, 5], strides=1, padding=\"valid\", use_bias=True),\n        tf.keras.layers.AvgPool2D([2, 2], 2, padding=\"valid\"),\n        tf.keras.layers.LeakyReLU(0),\n        tf.keras.layers.Conv2D(120, [5, 5], strides=1, padding=\"valid\", use_bias=True),\n        tf.keras.layers.Flatten(),\n        tf.keras.layers.Dense(84, activation=tf.nn.relu),\n        tf.keras.layers.Dense(10, activation=tf.nn.softmax),\n    ])\n    model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])\n    model.fit(x_train, y_train, epochs=5, batch_size=300)\n    loss, test_acc = model.evaluate(x_test, y_test, verbose=1)\n    print(\"test_acc: \" + str(test_acc))\n    model.save('lenet_mnist.h5')\n\ndef test_fn():\n    x_train, y_train, x_test, y_test = train_test_data()\n    model = tf.keras.models.load_model('lenet_mnist.h5')\n    loss, test_acc = model.evaluate(x_test, y_test, verbose=1)\n    print(\"test_acc: \" + str(test_acc))\n\ndef main(unused):\n    train_fn()\n    test_fn()\n\nif __name__ == '__main__':\n    tf.app.run()\n\nlog\nTraceback (most recent call last):\n  File \"lenet_mnist.py\", line 60, in <module>\n    tf.app.run()\n  File \"/home/wangwenxiao/anaconda3/lib/python3.6/site-packages/tensorflow/python/platform/app.py\", line 125, in run\n    _sys.exit(main(argv))\n  File \"lenet_mnist.py\", line 57, in main\n    test_fn()\n  File \"lenet_mnist.py\", line 49, in test_fn\n    model = tf.keras.models.load_model('lenet_mnist.h5')\n  File \"/home/wangwenxiao/anaconda3/lib/python3.6/site-packages/tensorflow/python/keras/engine/saving.py\", line 232, in load_model\n    load_weights_from_hdf5_group(f['model_weights'], model.layers)\n  File \"/home/wangwenxiao/anaconda3/lib/python3.6/site-packages/tensorflow/python/keras/engine/saving.py\", line 732, in load_weights_from_hdf5_group\n    ' layers.')\nValueError: You are trying to load a weight file containing 5 layers into a model with 0 layers.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: from binary(pip install)\r\n- **TensorFlow version (use command below)**:1.9.0\r\n- **Python version**: 3.6.4\r\n- **Bazel version (if compiling from source)**: None\r\n- **GCC/Compiler version (if compiling from source)**: None\r\n- **CUDA/cuDNN version**:  CUDA-8.0\r\n- **GPU model and memory**: GTX1080Ti, 12G\r\n- **Exact command to reproduce**: just as the code below\r\n\r\n### Describe the problem\r\nAs the official document [here](https://www.tensorflow.org/guide/keras), tf.keras.models could be saved with `model.save('my_model.h5')`, namely, \"The entire model can be saved to a file that contains the weight values, the model's configuration, and even the optimizer's configuration\". However, when I load the model with `model = tf.keras.models.load_model('lenet_mnist.h5')`, it throws an error: **\"You are trying to load a weight file containing 5 layers into a model with 0 layers.\"**\r\n\r\n### Source code / logs\r\n#### source code(lenet_mnist.py)\r\n```\r\nimport tensorflow as tf\r\nimport numpy as np\r\ndef train_test_data():\r\n    (x_train, y_train),(x_test, y_test) = tf.keras.datasets.mnist.load_data()\r\n    x_train, x_test = x_train / 255.0, x_test / 255.0\r\n    x_train = np.expand_dims(x_train, -1)\r\n    x_test = np.expand_dims(x_test, -1)\r\n    return x_train, y_train, x_test, y_test\r\n\r\ndef train_fn():\r\n    x_train, y_train, x_test, y_test = train_test_data()\r\n    model = tf.keras.models.Sequential([\r\n        tf.keras.layers.Conv2D(6, [5, 5], strides=1, padding=\"same\", use_bias=True),\r\n        tf.keras.layers.AvgPool2D([2, 2], 2, padding=\"valid\"),   \r\n        tf.keras.layers.LeakyReLU(0),\r\n        tf.keras.layers.Conv2D(16, [5, 5], strides=1, padding=\"valid\", use_bias=True),\r\n        tf.keras.layers.AvgPool2D([2, 2], 2, padding=\"valid\"),\r\n        tf.keras.layers.LeakyReLU(0),\r\n        tf.keras.layers.Conv2D(120, [5, 5], strides=1, padding=\"valid\", use_bias=True),\r\n        tf.keras.layers.Flatten(),\r\n        tf.keras.layers.Dense(84, activation=tf.nn.relu),\r\n        tf.keras.layers.Dense(10, activation=tf.nn.softmax),\r\n    ])\r\n    model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])\r\n    model.fit(x_train, y_train, epochs=5, batch_size=300)\r\n    loss, test_acc = model.evaluate(x_test, y_test, verbose=1)\r\n    print(\"test_acc: \" + str(test_acc))\r\n    model.save('lenet_mnist.h5')\r\n\r\ndef test_fn():\r\n    x_train, y_train, x_test, y_test = train_test_data()\r\n    model = tf.keras.models.load_model('lenet_mnist.h5')\r\n    loss, test_acc = model.evaluate(x_test, y_test, verbose=1)\r\n    print(\"test_acc: \" + str(test_acc))\r\n\r\ndef main(unused):\r\n    train_fn()\r\n    test_fn()\r\n\r\nif __name__ == '__main__':\r\n    tf.app.run()\r\n```\r\n\r\n#### log\r\n```\r\nTraceback (most recent call last):\r\n  File \"lenet_mnist.py\", line 60, in <module>\r\n    tf.app.run()\r\n  File \"/home/wangwenxiao/anaconda3/lib/python3.6/site-packages/tensorflow/python/platform/app.py\", line 125, in run\r\n    _sys.exit(main(argv))\r\n  File \"lenet_mnist.py\", line 57, in main\r\n    test_fn()\r\n  File \"lenet_mnist.py\", line 49, in test_fn\r\n    model = tf.keras.models.load_model('lenet_mnist.h5')\r\n  File \"/home/wangwenxiao/anaconda3/lib/python3.6/site-packages/tensorflow/python/keras/engine/saving.py\", line 232, in load_model\r\n    load_weights_from_hdf5_group(f['model_weights'], model.layers)\r\n  File \"/home/wangwenxiao/anaconda3/lib/python3.6/site-packages/tensorflow/python/keras/engine/saving.py\", line 732, in load_weights_from_hdf5_group\r\n    ' layers.')\r\nValueError: You are trying to load a weight file containing 5 layers into a model with 0 layers.\r\n```\r\n"}