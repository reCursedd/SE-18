{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/329179887", "html_url": "https://github.com/tensorflow/tensorflow/issues/12998#issuecomment-329179887", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12998", "id": 329179887, "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTE3OTg4Nw==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-13T14:10:08Z", "updated_at": "2017-09-13T14:10:08Z", "author_association": "CONTRIBUTOR", "body_html": "<p>It sounds like this is an issue with building LLVM: the <code>PRIxPTR</code> macro isn't defined on your system, but it is on the Ubuntu machines that we use to run the continuous build. Perhaps <a href=\"https://stackoverflow.com/a/30851225/3574081\" rel=\"nofollow\">this Stack Overflow answer</a> would be helpful: it suggests that with some toolchains it is necessary to <code>#define __STDC_FORMAT_MACROS</code> before using macros like <code>PRIxPTR</code>. Perhaps you could try the following modified build command to see if it fixes things (although it doesn't seem like a general solution)?</p>\n<pre><code>bazel build --config=opt --copt=\"-D__STDC_FORMAT_MACROS\" --verbose_failures --config=cuda //tensorflow/tools/pip_package:build_pip_package\n</code></pre>\n<p>(In the meantime, I'm assigning this to <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=348932\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/hawkinsp\">@hawkinsp</a>, since he wrote the external <code>BUILD</code> file for LLVM, and he might know what the proper solution is.)</p>", "body_text": "It sounds like this is an issue with building LLVM: the PRIxPTR macro isn't defined on your system, but it is on the Ubuntu machines that we use to run the continuous build. Perhaps this Stack Overflow answer would be helpful: it suggests that with some toolchains it is necessary to #define __STDC_FORMAT_MACROS before using macros like PRIxPTR. Perhaps you could try the following modified build command to see if it fixes things (although it doesn't seem like a general solution)?\nbazel build --config=opt --copt=\"-D__STDC_FORMAT_MACROS\" --verbose_failures --config=cuda //tensorflow/tools/pip_package:build_pip_package\n\n(In the meantime, I'm assigning this to @hawkinsp, since he wrote the external BUILD file for LLVM, and he might know what the proper solution is.)", "body": "It sounds like this is an issue with building LLVM: the `PRIxPTR` macro isn't defined on your system, but it is on the Ubuntu machines that we use to run the continuous build. Perhaps [this Stack Overflow answer](https://stackoverflow.com/a/30851225/3574081) would be helpful: it suggests that with some toolchains it is necessary to `#define __STDC_FORMAT_MACROS` before using macros like `PRIxPTR`. Perhaps you could try the following modified build command to see if it fixes things (although it doesn't seem like a general solution)?\r\n\r\n```\r\nbazel build --config=opt --copt=\"-D__STDC_FORMAT_MACROS\" --verbose_failures --config=cuda //tensorflow/tools/pip_package:build_pip_package\r\n```\r\n\r\n(In the meantime, I'm assigning this to @hawkinsp, since he wrote the external `BUILD` file for LLVM, and he might know what the proper solution is.)"}