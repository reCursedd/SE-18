{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/250873132", "html_url": "https://github.com/tensorflow/tensorflow/issues/4662#issuecomment-250873132", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4662", "id": 250873132, "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDg3MzEzMg==", "user": {"login": "davidzchen", "id": 5283042, "node_id": "MDQ6VXNlcjUyODMwNDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-30T23:14:08Z", "updated_at": "2016-09-30T23:14:08Z", "author_association": "MEMBER", "body_html": "<p>+cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3721087\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/damienmg\">@damienmg</a></p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=51099\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/llchan\">@llchan</a> That is a good point. For those lines where we have command substitution, would it be idiomatic to do the following to prevent the non-zero exit code:</p>\n<div class=\"highlight highlight-source-shell\"><pre>default_python_bin_path=<span class=\"pl-s\"><span class=\"pl-pds\">$(</span>which python <span class=\"pl-k\">||</span> true<span class=\"pl-pds\">)</span></span></pre></div>\n<p>It is not ideal to have to run those bazel commands in the <code>configure</code> script. We are working on improving the cache invalidation for external repositories and have plans to let repository rules declare which environment variables they consume and would invalidate the repository if they change.</p>\n<p>At the same time, ideally, a shell script as non-trivial as <code>configure</code> should try to be as strict as possible and exit immediately if any of the commands fail.</p>", "body_text": "+cc @damienmg\n@llchan That is a good point. For those lines where we have command substitution, would it be idiomatic to do the following to prevent the non-zero exit code:\ndefault_python_bin_path=$(which python || true)\nIt is not ideal to have to run those bazel commands in the configure script. We are working on improving the cache invalidation for external repositories and have plans to let repository rules declare which environment variables they consume and would invalidate the repository if they change.\nAt the same time, ideally, a shell script as non-trivial as configure should try to be as strict as possible and exit immediately if any of the commands fail.", "body": "+cc @damienmg \n\n@llchan That is a good point. For those lines where we have command substitution, would it be idiomatic to do the following to prevent the non-zero exit code:\n\n``` sh\ndefault_python_bin_path=$(which python || true)\n```\n\nIt is not ideal to have to run those bazel commands in the `configure` script. We are working on improving the cache invalidation for external repositories and have plans to let repository rules declare which environment variables they consume and would invalidate the repository if they change.\n\nAt the same time, ideally, a shell script as non-trivial as `configure` should try to be as strict as possible and exit immediately if any of the commands fail.\n"}