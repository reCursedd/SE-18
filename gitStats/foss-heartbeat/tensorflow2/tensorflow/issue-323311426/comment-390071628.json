{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/390071628", "html_url": "https://github.com/tensorflow/tensorflow/issues/19298#issuecomment-390071628", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19298", "id": 390071628, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDA3MTYyOA==", "user": {"login": "saudet", "id": 3328023, "node_id": "MDQ6VXNlcjMzMjgwMjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3328023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saudet", "html_url": "https://github.com/saudet", "followers_url": "https://api.github.com/users/saudet/followers", "following_url": "https://api.github.com/users/saudet/following{/other_user}", "gists_url": "https://api.github.com/users/saudet/gists{/gist_id}", "starred_url": "https://api.github.com/users/saudet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saudet/subscriptions", "organizations_url": "https://api.github.com/users/saudet/orgs", "repos_url": "https://api.github.com/users/saudet/repos", "events_url": "https://api.github.com/users/saudet/events{/privacy}", "received_events_url": "https://api.github.com/users/saudet/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-18T02:01:30Z", "updated_at": "2018-05-18T02:01:30Z", "author_association": "NONE", "body_html": "<p>JavaCPP keeps track of libraries already loaded from its cache, so using the <a href=\"https://github.com/bytedeco/javacpp-presets/tree/master/tensorflow\">JavaCPP Presets for TensorFlow</a> is one way to work around this. The official Java API is also bundled these days:<br>\n<a href=\"https://github.com/bytedeco/javacpp-presets/tree/1.4.1/tensorflow#documentation\">https://github.com/bytedeco/javacpp-presets/tree/1.4.1/tensorflow#documentation</a></p>\n<p>However, if sbt uses multiple class loaders, the classes of TensorFlow should be loaded by the system class loader. That's a limitation of Java and JNI.</p>", "body_text": "JavaCPP keeps track of libraries already loaded from its cache, so using the JavaCPP Presets for TensorFlow is one way to work around this. The official Java API is also bundled these days:\nhttps://github.com/bytedeco/javacpp-presets/tree/1.4.1/tensorflow#documentation\nHowever, if sbt uses multiple class loaders, the classes of TensorFlow should be loaded by the system class loader. That's a limitation of Java and JNI.", "body": "JavaCPP keeps track of libraries already loaded from its cache, so using the [JavaCPP Presets for TensorFlow](https://github.com/bytedeco/javacpp-presets/tree/master/tensorflow) is one way to work around this. The official Java API is also bundled these days:\r\nhttps://github.com/bytedeco/javacpp-presets/tree/1.4.1/tensorflow#documentation\r\n\r\nHowever, if sbt uses multiple class loaders, the classes of TensorFlow should be loaded by the system class loader. That's a limitation of Java and JNI."}