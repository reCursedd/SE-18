{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/416232544", "html_url": "https://github.com/tensorflow/tensorflow/issues/19298#issuecomment-416232544", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19298", "id": 416232544, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjIzMjU0NA==", "user": {"login": "saudet", "id": 3328023, "node_id": "MDQ6VXNlcjMzMjgwMjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3328023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saudet", "html_url": "https://github.com/saudet", "followers_url": "https://api.github.com/users/saudet/followers", "following_url": "https://api.github.com/users/saudet/following{/other_user}", "gists_url": "https://api.github.com/users/saudet/gists{/gist_id}", "starred_url": "https://api.github.com/users/saudet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saudet/subscriptions", "organizations_url": "https://api.github.com/users/saudet/orgs", "repos_url": "https://api.github.com/users/saudet/repos", "events_url": "https://api.github.com/users/saudet/events{/privacy}", "received_events_url": "https://api.github.com/users/saudet/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-27T13:48:32Z", "updated_at": "2018-08-27T13:48:32Z", "author_association": "NONE", "body_html": "<p>Actually, we just need to rename the JNI library containing the wrappers, not TensorFlow itself. I think I've successfully worked around this limitation in JavaCPP with commit <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/bytedeco/javacpp/commit/dd57c2cca04c937de8031f5dfc896f1c45b59379/hovercard\" href=\"https://github.com/bytedeco/javacpp/commit/dd57c2cca04c937de8031f5dfc896f1c45b59379\">bytedeco/javacpp@<tt>dd57c2c</tt></a> and TensorFlow seems to work well when loaded from multiple class loaders with the JavaCPP Presets for TensorFlow, which comes bundled with the official Java API, but also maps the more complete C/C++ APIs: <a href=\"https://github.com/bytedeco/javacpp-presets/tree/master/tensorflow\">https://github.com/bytedeco/javacpp-presets/tree/master/tensorflow</a><br>\nI've tested this a bit on Tomcat and it seems to work fine!</p>\n<p>This might not work as well when TensorFlow is linked statically to the JNI wrappers, as is the case with the official binaries that are deployed by Google, because TensorFlow would get loaded multiple times in the same process, but maybe it's fine. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16018\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/asimshankar\">@asimshankar</a> Is this something supported by TensorFlow?</p>", "body_text": "Actually, we just need to rename the JNI library containing the wrappers, not TensorFlow itself. I think I've successfully worked around this limitation in JavaCPP with commit bytedeco/javacpp@dd57c2c and TensorFlow seems to work well when loaded from multiple class loaders with the JavaCPP Presets for TensorFlow, which comes bundled with the official Java API, but also maps the more complete C/C++ APIs: https://github.com/bytedeco/javacpp-presets/tree/master/tensorflow\nI've tested this a bit on Tomcat and it seems to work fine!\nThis might not work as well when TensorFlow is linked statically to the JNI wrappers, as is the case with the official binaries that are deployed by Google, because TensorFlow would get loaded multiple times in the same process, but maybe it's fine. @asimshankar Is this something supported by TensorFlow?", "body": "Actually, we just need to rename the JNI library containing the wrappers, not TensorFlow itself. I think I've successfully worked around this limitation in JavaCPP with commit https://github.com/bytedeco/javacpp/commit/dd57c2cca04c937de8031f5dfc896f1c45b59379 and TensorFlow seems to work well when loaded from multiple class loaders with the JavaCPP Presets for TensorFlow, which comes bundled with the official Java API, but also maps the more complete C/C++ APIs: https://github.com/bytedeco/javacpp-presets/tree/master/tensorflow\r\nI've tested this a bit on Tomcat and it seems to work fine!\r\n\r\nThis might not work as well when TensorFlow is linked statically to the JNI wrappers, as is the case with the official binaries that are deployed by Google, because TensorFlow would get loaded multiple times in the same process, but maybe it's fine. @asimshankar Is this something supported by TensorFlow?"}