{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8585", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8585/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8585/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8585/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8585", "id": 215756673, "node_id": "MDU6SXNzdWUyMTU3NTY2NzM=", "number": 8585, "title": "Consistent dtypes for discrete tensorflow.contrib.distributions?", "user": {"login": "dustinvtran", "id": 2569867, "node_id": "MDQ6VXNlcjI1Njk4Njc=", "avatar_url": "https://avatars1.githubusercontent.com/u/2569867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dustinvtran", "html_url": "https://github.com/dustinvtran", "followers_url": "https://api.github.com/users/dustinvtran/followers", "following_url": "https://api.github.com/users/dustinvtran/following{/other_user}", "gists_url": "https://api.github.com/users/dustinvtran/gists{/gist_id}", "starred_url": "https://api.github.com/users/dustinvtran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dustinvtran/subscriptions", "organizations_url": "https://api.github.com/users/dustinvtran/orgs", "repos_url": "https://api.github.com/users/dustinvtran/repos", "events_url": "https://api.github.com/users/dustinvtran/events{/privacy}", "received_events_url": "https://api.github.com/users/dustinvtran/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2017-03-21T14:23:22Z", "updated_at": "2017-10-27T16:44:02Z", "closed_at": "2017-10-27T16:44:02Z", "author_association": "MEMBER", "body_html": "<p>In master (<a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/f4a0c2c0f1bbff6e9b4d5d4a0796e7645a974321/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/f4a0c2c0f1bbff6e9b4d5d4a0796e7645a974321\"><tt>f4a0c2c</tt></a>), the following is true:</p>\n<ul>\n<li>Bernoulli, Categorical, and OneHotCategorical accept dtype as an argument, defaulting to <code>tf.int32</code>.</li>\n<li>Binomial and Geometric have dtype given by its <code>probs</code> parameter, which is returned by the <code>get_logits_and_probs</code> utility function. It errors unless <code>probs</code> is float, meaning they must have dtype float.</li>\n<li>Deterministic has dtype given by its <code>loc</code> parameter, which can have either dtype float or int.</li>\n<li>Poisson has dtype given by its <code>rate</code> parameter, which can have either dtype float or int.</li>\n</ul>\n<p>It seems like the default dtype for discrete distributions with fixed and bounded support is int. And the dtype for discrete distributions whose support depends on a parameter, or whose support is unbounded, varies between always being float or being either float or int.</p>", "body_text": "In master (f4a0c2c), the following is true:\n\nBernoulli, Categorical, and OneHotCategorical accept dtype as an argument, defaulting to tf.int32.\nBinomial and Geometric have dtype given by its probs parameter, which is returned by the get_logits_and_probs utility function. It errors unless probs is float, meaning they must have dtype float.\nDeterministic has dtype given by its loc parameter, which can have either dtype float or int.\nPoisson has dtype given by its rate parameter, which can have either dtype float or int.\n\nIt seems like the default dtype for discrete distributions with fixed and bounded support is int. And the dtype for discrete distributions whose support depends on a parameter, or whose support is unbounded, varies between always being float or being either float or int.", "body": "In master (https://github.com/tensorflow/tensorflow/commit/f4a0c2c0f1bbff6e9b4d5d4a0796e7645a974321), the following is true:\r\n+ Bernoulli, Categorical, and OneHotCategorical accept dtype as an argument, defaulting to `tf.int32`.\r\n+ Binomial and Geometric have dtype given by its `probs` parameter, which is returned by the `get_logits_and_probs` utility function. It errors unless `probs` is float, meaning they must have dtype float.\r\n+ Deterministic has dtype given by its `loc` parameter, which can have either dtype float or int.\r\n+ Poisson has dtype given by its `rate` parameter, which can have either dtype float or int.\r\n\r\nIt seems like the default dtype for discrete distributions with fixed and bounded support is int. And the dtype for discrete distributions whose support depends on a parameter, or whose support is unbounded, varies between always being float or being either float or int."}