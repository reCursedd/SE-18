{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5887", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5887/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5887/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5887/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/5887", "id": 191879929, "node_id": "MDU6SXNzdWUxOTE4Nzk5Mjk=", "number": 5887, "title": "It's not possible to read csv without TextLineReader?", "user": {"login": "kitovyj", "id": 15792725, "node_id": "MDQ6VXNlcjE1NzkyNzI1", "avatar_url": "https://avatars3.githubusercontent.com/u/15792725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kitovyj", "html_url": "https://github.com/kitovyj", "followers_url": "https://api.github.com/users/kitovyj/followers", "following_url": "https://api.github.com/users/kitovyj/following{/other_user}", "gists_url": "https://api.github.com/users/kitovyj/gists{/gist_id}", "starred_url": "https://api.github.com/users/kitovyj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kitovyj/subscriptions", "organizations_url": "https://api.github.com/users/kitovyj/orgs", "repos_url": "https://api.github.com/users/kitovyj/repos", "events_url": "https://api.github.com/users/kitovyj/events{/privacy}", "received_events_url": "https://api.github.com/users/kitovyj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-27T19:33:45Z", "updated_at": "2016-11-27T19:58:42Z", "closed_at": "2016-11-27T19:58:42Z", "author_association": "NONE", "body_html": "<p>`def input_data(start_index, amount, shuffle):</p>\n<pre><code>data_folder = '/media/sf_vb-shared/data/'\nrange_queue = tf.train.range_input_producer(amount, shuffle = shuffle)\nrange_value = range_queue.dequeue()\n\nabs_index = tf.add(range_value, tf.constant(start_index))    \nabs_index_str = tf.as_string(abs_index, width = 9, fill = '0')\n\npng_file_name = tf.string_join([tf.constant(data_folder), tf.constant('data'), abs_index_str, tf.constant('.png')])\ncsv_file_name = tf.string_join([tf.constant(data_folder), tf.constant('data'), abs_index_str, tf.constant('.csv')])\n\ncsv_data = tf.read_file(csv_file_name)\ncsv_data = tf.Print(csv_data, [csv_data], message = \"This is csv_data: \")\nlabel_defaults = [[0.0] for x in range(n_classes)]   \nunpacked_labels = tf.decode_csv(csv_data, record_defaults = label_defaults)\nlabels = tf.pack(unpacked_labels)\nlabels = tf.Print(labels, [labels], message = \"These are labels: \")`\n</code></pre>\n<p>The output is \"This is csv_data: [0,0,0,1,0\\n]\", so<br>\ncsv_data is read ok, but \"These are labels\" never gets printed out...<br>\nIs it possible to feed decode_csv with read_file output?</p>", "body_text": "`def input_data(start_index, amount, shuffle):\ndata_folder = '/media/sf_vb-shared/data/'\nrange_queue = tf.train.range_input_producer(amount, shuffle = shuffle)\nrange_value = range_queue.dequeue()\n\nabs_index = tf.add(range_value, tf.constant(start_index))    \nabs_index_str = tf.as_string(abs_index, width = 9, fill = '0')\n\npng_file_name = tf.string_join([tf.constant(data_folder), tf.constant('data'), abs_index_str, tf.constant('.png')])\ncsv_file_name = tf.string_join([tf.constant(data_folder), tf.constant('data'), abs_index_str, tf.constant('.csv')])\n\ncsv_data = tf.read_file(csv_file_name)\ncsv_data = tf.Print(csv_data, [csv_data], message = \"This is csv_data: \")\nlabel_defaults = [[0.0] for x in range(n_classes)]   \nunpacked_labels = tf.decode_csv(csv_data, record_defaults = label_defaults)\nlabels = tf.pack(unpacked_labels)\nlabels = tf.Print(labels, [labels], message = \"These are labels: \")`\n\nThe output is \"This is csv_data: [0,0,0,1,0\\n]\", so\ncsv_data is read ok, but \"These are labels\" never gets printed out...\nIs it possible to feed decode_csv with read_file output?", "body": "`def input_data(start_index, amount, shuffle):\r\n    \r\n    data_folder = '/media/sf_vb-shared/data/'\r\n    range_queue = tf.train.range_input_producer(amount, shuffle = shuffle)\r\n    range_value = range_queue.dequeue()\r\n\r\n    abs_index = tf.add(range_value, tf.constant(start_index))    \r\n    abs_index_str = tf.as_string(abs_index, width = 9, fill = '0')\r\n    \r\n    png_file_name = tf.string_join([tf.constant(data_folder), tf.constant('data'), abs_index_str, tf.constant('.png')])\r\n    csv_file_name = tf.string_join([tf.constant(data_folder), tf.constant('data'), abs_index_str, tf.constant('.csv')])\r\n\r\n    csv_data = tf.read_file(csv_file_name)\r\n    csv_data = tf.Print(csv_data, [csv_data], message = \"This is csv_data: \")\r\n    label_defaults = [[0.0] for x in range(n_classes)]   \r\n    unpacked_labels = tf.decode_csv(csv_data, record_defaults = label_defaults)\r\n    labels = tf.pack(unpacked_labels)\r\n    labels = tf.Print(labels, [labels], message = \"These are labels: \")`\r\n\r\nThe output is \"This is csv_data: [0,0,0,1,0\\n]\", so\r\ncsv_data is read ok, but \"These are labels\" never gets printed out...\r\nIs it possible to feed decode_csv with read_file output?"}