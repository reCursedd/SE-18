{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/158291580", "html_url": "https://github.com/tensorflow/tensorflow/issues/304#issuecomment-158291580", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/304", "id": 158291580, "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODI5MTU4MA==", "user": {"login": "sirinath", "id": 637415, "node_id": "MDQ6VXNlcjYzNzQxNQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/637415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sirinath", "html_url": "https://github.com/sirinath", "followers_url": "https://api.github.com/users/sirinath/followers", "following_url": "https://api.github.com/users/sirinath/following{/other_user}", "gists_url": "https://api.github.com/users/sirinath/gists{/gist_id}", "starred_url": "https://api.github.com/users/sirinath/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sirinath/subscriptions", "organizations_url": "https://api.github.com/users/sirinath/orgs", "repos_url": "https://api.github.com/users/sirinath/repos", "events_url": "https://api.github.com/users/sirinath/events{/privacy}", "received_events_url": "https://api.github.com/users/sirinath/received_events", "type": "User", "site_admin": false}, "created_at": "2015-11-20T06:00:44Z", "updated_at": "2015-11-21T02:38:22Z", "author_association": "NONE", "body_html": "<p>Above can be further optimised using the effects and how they propagate and what the effects are on each node. Prima facie list of effects to tract in optimisation:</p>\n<ul>\n<li>IO effects</li>\n<li>Computational Operation Resource Consumption effects</li>\n<li>Memory usage effects (stack / heap allocation, stack / heap de allocation, stack / heap re use,  etc.)</li>\n<li>Volatility / scheduling / ordering effects</li>\n<li>Other user defined effects</li>\n</ul>\n<p>So there a balance can be achived between computation, memory, in inevitable system calls, IO operation and buffering (back pressure management), etc. in a formal well defined manner.</p>", "body_text": "Above can be further optimised using the effects and how they propagate and what the effects are on each node. Prima facie list of effects to tract in optimisation:\n\nIO effects\nComputational Operation Resource Consumption effects\nMemory usage effects (stack / heap allocation, stack / heap de allocation, stack / heap re use,  etc.)\nVolatility / scheduling / ordering effects\nOther user defined effects\n\nSo there a balance can be achived between computation, memory, in inevitable system calls, IO operation and buffering (back pressure management), etc. in a formal well defined manner.", "body": "Above can be further optimised using the effects and how they propagate and what the effects are on each node. Prima facie list of effects to tract in optimisation:\n- IO effects\n- Computational Operation Resource Consumption effects\n- Memory usage effects (stack / heap allocation, stack / heap de allocation, stack / heap re use,  etc.)\n- Volatility / scheduling / ordering effects\n- Other user defined effects\n\nSo there a balance can be achived between computation, memory, in inevitable system calls, IO operation and buffering (back pressure management), etc. in a formal well defined manner.\n"}