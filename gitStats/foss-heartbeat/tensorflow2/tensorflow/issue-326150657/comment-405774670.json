{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/405774670", "html_url": "https://github.com/tensorflow/tensorflow/pull/19533#issuecomment-405774670", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19533", "id": 405774670, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTc3NDY3MA==", "user": {"login": "yongtang", "id": 6932348, "node_id": "MDQ6VXNlcjY5MzIzNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6932348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yongtang", "html_url": "https://github.com/yongtang", "followers_url": "https://api.github.com/users/yongtang/followers", "following_url": "https://api.github.com/users/yongtang/following{/other_user}", "gists_url": "https://api.github.com/users/yongtang/gists{/gist_id}", "starred_url": "https://api.github.com/users/yongtang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yongtang/subscriptions", "organizations_url": "https://api.github.com/users/yongtang/orgs", "repos_url": "https://api.github.com/users/yongtang/repos", "events_url": "https://api.github.com/users/yongtang/events{/privacy}", "received_events_url": "https://api.github.com/users/yongtang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-18T00:57:03Z", "updated_at": "2018-07-18T00:57:03Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16907534\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rmlarsen\">@rmlarsen</a> Yes the related unit test is in:<br>\n<div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/6d8bc3ce794b386088a351bcf6f5f5e08ff0ebb6/tensorflow/python/framework/tensor_util_test.py#L238-L257\">tensorflow/tensorflow/python/framework/tensor_util_test.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 238 to 257\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/6d8bc3ce794b386088a351bcf6f5f5e08ff0ebb6\">6d8bc3c</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L238\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"238\"></td>\n          <td id=\"LC238\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">def</span> <span class=\"pl-en\">testBfloat16</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>): </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L239\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"239\"></td>\n          <td id=\"LC239\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     test_type <span class=\"pl-k\">=</span> dtypes.bfloat16.as_numpy_dtype </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L240\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"240\"></td>\n          <td id=\"LC240\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     t <span class=\"pl-k\">=</span> tensor_util.make_tensor_proto(np.array([<span class=\"pl-c1\">10.0</span>, <span class=\"pl-c1\">20.0</span>], <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>test_type)) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L241\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"241\"></td>\n          <td id=\"LC241\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-c\"><span class=\"pl-c\">#</span> 10.0: 16672 = 010000010(130) 0100000: (1+0/2+1/4) * 2^(130-127)</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L242\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"242\"></td>\n          <td id=\"LC242\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-c\"><span class=\"pl-c\">#</span> 20.0: 16800 = 010000011(131) 0100000: (1+0/2+1/4) * 2^(131-127)</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L243\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"243\"></td>\n          <td id=\"LC243\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-c1\">self</span>.assertProtoEquals(<span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span></span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L244\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"244\"></td>\n          <td id=\"LC244\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-s\">      dtype: DT_BFLOAT16</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L245\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"245\"></td>\n          <td id=\"LC245\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-s\">      tensor_shape {</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L246\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"246\"></td>\n          <td id=\"LC246\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-s\">        dim {</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L247\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"247\"></td>\n          <td id=\"LC247\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-s\">          size: 2</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L248\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"248\"></td>\n          <td id=\"LC248\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-s\">        }</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L249\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"249\"></td>\n          <td id=\"LC249\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-s\">      }</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L250\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"250\"></td>\n          <td id=\"LC250\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-s\">      half_val: 16672</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L251\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"251\"></td>\n          <td id=\"LC251\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-s\">      half_val: 16800</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L252\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"252\"></td>\n          <td id=\"LC252\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-s\">      <span class=\"pl-pds\">\"\"\"</span></span>, t) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L253\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"253\"></td>\n          <td id=\"LC253\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L254\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"254\"></td>\n          <td id=\"LC254\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     a <span class=\"pl-k\">=</span> tensor_util.MakeNdarray(t) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L255\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"255\"></td>\n          <td id=\"LC255\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-c1\">self</span>.assertEquals(test_type, a.dtype) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L256\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"256\"></td>\n          <td id=\"LC256\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-c1\">self</span>.assertAllClose(np.array([<span class=\"pl-c1\">10.0</span>, <span class=\"pl-c1\">20.0</span>], <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>test_type), a) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L257\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"257\"></td>\n          <td id=\"LC257\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "body_text": "@rmlarsen Yes the related unit test is in:\n\n  \n    \n      tensorflow/tensorflow/python/framework/tensor_util_test.py\n    \n    \n        Lines 238 to 257\n      in\n      6d8bc3c\n    \n    \n    \n    \n\n        \n          \n             def testBfloat16(self): \n        \n\n        \n          \n               test_type = dtypes.bfloat16.as_numpy_dtype \n        \n\n        \n          \n               t = tensor_util.make_tensor_proto(np.array([10.0, 20.0], dtype=test_type)) \n        \n\n        \n          \n               # 10.0: 16672 = 010000010(130) 0100000: (1+0/2+1/4) * 2^(130-127) \n        \n\n        \n          \n               # 20.0: 16800 = 010000011(131) 0100000: (1+0/2+1/4) * 2^(131-127) \n        \n\n        \n          \n               self.assertProtoEquals(\"\"\" \n        \n\n        \n          \n                 dtype: DT_BFLOAT16 \n        \n\n        \n          \n                 tensor_shape { \n        \n\n        \n          \n                   dim { \n        \n\n        \n          \n                     size: 2 \n        \n\n        \n          \n                   } \n        \n\n        \n          \n                 } \n        \n\n        \n          \n                 half_val: 16672 \n        \n\n        \n          \n                 half_val: 16800 \n        \n\n        \n          \n                 \"\"\", t) \n        \n\n        \n          \n            \n        \n\n        \n          \n               a = tensor_util.MakeNdarray(t) \n        \n\n        \n          \n               self.assertEquals(test_type, a.dtype) \n        \n\n        \n          \n               self.assertAllClose(np.array([10.0, 20.0], dtype=test_type), a)", "body": "@rmlarsen Yes the related unit test is in:\r\nhttps://github.com/tensorflow/tensorflow/blob/6d8bc3ce794b386088a351bcf6f5f5e08ff0ebb6/tensorflow/python/framework/tensor_util_test.py#L238-L257"}