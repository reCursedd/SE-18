{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/285495474", "html_url": "https://github.com/tensorflow/tensorflow/issues/8250#issuecomment-285495474", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8250", "id": 285495474, "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTQ5NTQ3NA==", "user": {"login": "prb12", "id": 11547801, "node_id": "MDQ6VXNlcjExNTQ3ODAx", "avatar_url": "https://avatars1.githubusercontent.com/u/11547801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prb12", "html_url": "https://github.com/prb12", "followers_url": "https://api.github.com/users/prb12/followers", "following_url": "https://api.github.com/users/prb12/following{/other_user}", "gists_url": "https://api.github.com/users/prb12/gists{/gist_id}", "starred_url": "https://api.github.com/users/prb12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prb12/subscriptions", "organizations_url": "https://api.github.com/users/prb12/orgs", "repos_url": "https://api.github.com/users/prb12/repos", "events_url": "https://api.github.com/users/prb12/events{/privacy}", "received_events_url": "https://api.github.com/users/prb12/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-09T21:53:18Z", "updated_at": "2017-03-09T21:55:19Z", "author_association": "MEMBER", "body_html": "<p>There is a section in this <a href=\"https://www.tensorflow.org/versions/master/get_started/os_setup\" rel=\"nofollow\">page</a> which suggests that configuration flags need to be supplied at the <code>./configure</code> step.  (Search for \"Optimizing CPU Performance\")</p>\n<blockquote>\n<p>To be compatible with as wide a range of machines as possible, TensorFlow defaults to only using SSE4 SIMD instructions. Most modern computers support more advanced instructions. So if you're building a binary that you'll only be running on your own machine, you can enable these by using -march=native for optimization options when running configure. Then you can build your optimized binaries with the following command:<br>\n$ bazel build --config opt //tensorflow/tools/pip_package:build_pip_package</p>\n</blockquote>\n<p>Looking at the configure script, it seems to examine the environment variable <code>CC_OPT_FLAGS</code> and add flags to the <code>tools/bazel.rc</code> file.   (maybe you have build a highly optimized <code>build_pip_package</code> binary which then builds a slow tensorflow package?)  Perhaps worth giving this a go?</p>\n<p>I don't know off the top of my head why flags passed on the bazel command line aren't being respected. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7946809\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gunan\">@gunan</a> Any ideas?</p>", "body_text": "There is a section in this page which suggests that configuration flags need to be supplied at the ./configure step.  (Search for \"Optimizing CPU Performance\")\n\nTo be compatible with as wide a range of machines as possible, TensorFlow defaults to only using SSE4 SIMD instructions. Most modern computers support more advanced instructions. So if you're building a binary that you'll only be running on your own machine, you can enable these by using -march=native for optimization options when running configure. Then you can build your optimized binaries with the following command:\n$ bazel build --config opt //tensorflow/tools/pip_package:build_pip_package\n\nLooking at the configure script, it seems to examine the environment variable CC_OPT_FLAGS and add flags to the tools/bazel.rc file.   (maybe you have build a highly optimized build_pip_package binary which then builds a slow tensorflow package?)  Perhaps worth giving this a go?\nI don't know off the top of my head why flags passed on the bazel command line aren't being respected. @gunan Any ideas?", "body": "There is a section in this [page](https://www.tensorflow.org/versions/master/get_started/os_setup\r\n) which suggests that configuration flags need to be supplied at the `./configure` step.  (Search for \"Optimizing CPU Performance\")\r\n\r\n>To be compatible with as wide a range of machines as possible, TensorFlow defaults to only using SSE4 SIMD instructions. Most modern computers support more advanced instructions. So if you're building a binary that you'll only be running on your own machine, you can enable these by using -march=native for optimization options when running configure. Then you can build your optimized binaries with the following command:\r\n$ bazel build --config opt //tensorflow/tools/pip_package:build_pip_package\r\n\r\nLooking at the configure script, it seems to examine the environment variable `CC_OPT_FLAGS` and add flags to the `tools/bazel.rc` file.   (maybe you have build a highly optimized `build_pip_package` binary which then builds a slow tensorflow package?)  Perhaps worth giving this a go?\r\n\r\nI don't know off the top of my head why flags passed on the bazel command line aren't being respected. @gunan Any ideas?"}