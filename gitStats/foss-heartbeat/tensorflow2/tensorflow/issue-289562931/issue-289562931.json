{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16218", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16218/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16218/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16218/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16218", "id": 289562931, "node_id": "MDU6SXNzdWUyODk1NjI5MzE=", "number": 16218, "title": "[feature request ? ]  How to return SparseTensor when custom ops", "user": {"login": "automateljw", "id": 5774705, "node_id": "MDQ6VXNlcjU3NzQ3MDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/5774705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/automateljw", "html_url": "https://github.com/automateljw", "followers_url": "https://api.github.com/users/automateljw/followers", "following_url": "https://api.github.com/users/automateljw/following{/other_user}", "gists_url": "https://api.github.com/users/automateljw/gists{/gist_id}", "starred_url": "https://api.github.com/users/automateljw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/automateljw/subscriptions", "organizations_url": "https://api.github.com/users/automateljw/orgs", "repos_url": "https://api.github.com/users/automateljw/repos", "events_url": "https://api.github.com/users/automateljw/events{/privacy}", "received_events_url": "https://api.github.com/users/automateljw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-18T09:41:16Z", "updated_at": "2018-03-13T08:28:22Z", "closed_at": "2018-03-13T08:28:22Z", "author_association": "NONE", "body_html": "<hr>\n<h3>Describe the problem</h3>\n<p>there exists some ops (eg: decode_libsvm) that can return SparseTensor by three dense tensor</p>\n<pre><code>#see: tensorflow/tensorflow/contrib/libsvm/\nREGISTER_OP(\"DecodeLibsvm\")\n    .Input(\"input: string\")\n    .Output(\"label: label_dtype\")\n    .Output(\"feature_indices: int64\")\n    .Output(\"feature_values: dtype\")\n    .Output(\"feature_shape: int64\")\n    .Attr(\"dtype: {float, double, int32, int64} = DT_FLOAT\")\n    .Attr(\"label_dtype: {float, double, int32, int64} = DT_INT64\")\n    .Attr(\"num_features: int &gt;= 1\")\n</code></pre>\n<p>Can I define my custom ops which can return SparseTensor directly? ,</p>\n<p>What I want to do is modify tf.decode_csv ,  some column can return Tensor,  some column can return SparseTensor.<br>\nIf i return SparseTensor by (indices,values, shape) dense tensor,  it would be  diffcult .<br>\ndoes there exists SparseTensor class in c++ api ?<br>\n<a class=\"user-mention\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/ALL/hovercard\" href=\"https://github.com/ALL\">@ALL</a>, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6932348\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yongtang\">@yongtang</a><br>\nThanks</p>\n<pre><code>  def parse_csv(value):\n    print('Parsing', data_file)\n    columns = tf.decode_csv(value, record_defaults=_CSV_COLUMN_DEFAULTS)\n    features = dict(zip(_CSV_COLUMNS, columns))\n    labels = features.pop('income_bracket')\n    return features, tf.equal(labels, '&gt;50K')\n</code></pre>\n<h3>Have I written custom code</h3>\n<h3>OS Platform and Distribution</h3>\n<h3>TensorFlow installed from</h3>\n<h3>TensorFlow version</h3>\n<h3>Bazel version</h3>\n<h3>CUDA/cuDNN version</h3>\n<h3>GPU model and memory</h3>\n<h3>Exact command to reproduce</h3>", "body_text": "Describe the problem\nthere exists some ops (eg: decode_libsvm) that can return SparseTensor by three dense tensor\n#see: tensorflow/tensorflow/contrib/libsvm/\nREGISTER_OP(\"DecodeLibsvm\")\n    .Input(\"input: string\")\n    .Output(\"label: label_dtype\")\n    .Output(\"feature_indices: int64\")\n    .Output(\"feature_values: dtype\")\n    .Output(\"feature_shape: int64\")\n    .Attr(\"dtype: {float, double, int32, int64} = DT_FLOAT\")\n    .Attr(\"label_dtype: {float, double, int32, int64} = DT_INT64\")\n    .Attr(\"num_features: int >= 1\")\n\nCan I define my custom ops which can return SparseTensor directly? ,\nWhat I want to do is modify tf.decode_csv ,  some column can return Tensor,  some column can return SparseTensor.\nIf i return SparseTensor by (indices,values, shape) dense tensor,  it would be  diffcult .\ndoes there exists SparseTensor class in c++ api ?\n@ALL, @mrry @yongtang\nThanks\n  def parse_csv(value):\n    print('Parsing', data_file)\n    columns = tf.decode_csv(value, record_defaults=_CSV_COLUMN_DEFAULTS)\n    features = dict(zip(_CSV_COLUMNS, columns))\n    labels = features.pop('income_bracket')\n    return features, tf.equal(labels, '>50K')\n\nHave I written custom code\nOS Platform and Distribution\nTensorFlow installed from\nTensorFlow version\nBazel version\nCUDA/cuDNN version\nGPU model and memory\nExact command to reproduce", "body": "------------------------\r\n### Describe the problem\r\nthere exists some ops (eg: decode_libsvm) that can return SparseTensor by three dense tensor\r\n```\r\n#see: tensorflow/tensorflow/contrib/libsvm/\r\nREGISTER_OP(\"DecodeLibsvm\")\r\n    .Input(\"input: string\")\r\n    .Output(\"label: label_dtype\")\r\n    .Output(\"feature_indices: int64\")\r\n    .Output(\"feature_values: dtype\")\r\n    .Output(\"feature_shape: int64\")\r\n    .Attr(\"dtype: {float, double, int32, int64} = DT_FLOAT\")\r\n    .Attr(\"label_dtype: {float, double, int32, int64} = DT_INT64\")\r\n    .Attr(\"num_features: int >= 1\")\r\n```\r\nCan I define my custom ops which can return SparseTensor directly? ,  \r\n\r\nWhat I want to do is modify tf.decode_csv ,  some column can return Tensor,  some column can return SparseTensor. \r\n If i return SparseTensor by (indices,values, shape) dense tensor,  it would be  diffcult . \r\ndoes there exists SparseTensor class in c++ api ?\r\n@all, @mrry @yongtang  \r\nThanks\r\n\r\n```\r\n  def parse_csv(value):\r\n    print('Parsing', data_file)\r\n    columns = tf.decode_csv(value, record_defaults=_CSV_COLUMN_DEFAULTS)\r\n    features = dict(zip(_CSV_COLUMNS, columns))\r\n    labels = features.pop('income_bracket')\r\n    return features, tf.equal(labels, '>50K')\r\n```\r\n\r\n### Have I written custom code\r\n### OS Platform and Distribution\r\n### TensorFlow installed from\r\n### TensorFlow version\r\n### Bazel version\r\n### CUDA/cuDNN version\r\n### GPU model and memory\r\n### Exact command to reproduce"}