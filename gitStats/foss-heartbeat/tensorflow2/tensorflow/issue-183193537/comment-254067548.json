{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/254067548", "html_url": "https://github.com/tensorflow/tensorflow/pull/4983#issuecomment-254067548", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4983", "id": 254067548, "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDA2NzU0OA==", "user": {"login": "jart", "id": 49262, "node_id": "MDQ6VXNlcjQ5MjYy", "avatar_url": "https://avatars1.githubusercontent.com/u/49262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jart", "html_url": "https://github.com/jart", "followers_url": "https://api.github.com/users/jart/followers", "following_url": "https://api.github.com/users/jart/following{/other_user}", "gists_url": "https://api.github.com/users/jart/gists{/gist_id}", "starred_url": "https://api.github.com/users/jart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jart/subscriptions", "organizations_url": "https://api.github.com/users/jart/orgs", "repos_url": "https://api.github.com/users/jart/repos", "events_url": "https://api.github.com/users/jart/events{/privacy}", "received_events_url": "https://api.github.com/users/jart/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-16T19:16:12Z", "updated_at": "2016-10-16T19:16:12Z", "author_association": "MEMBER", "body_html": "<p>The <code>./configure</code> script in the root of the TensorFlow repository creates a symlink to the system swig command inside <code>tensorflow/tools/swig</code>. The only reason that <code>tensorflow/tools/swig.sh</code> would try to run the swig command from the environment is if that symlink doesn't exist. So the solution is most likely to run <code>./configure</code>. Could you please confirm if that solves your problem?</p>\n<p>I would ideally prefer to not use <code>use_default_shell_env</code> because our Bazel build should ideally be hermetically sealed. That's one of the goals I'm working towards. I'm actually working on a change right now that has Bazel fetch the sources for SWIG and compiles it from scratch.</p>", "body_text": "The ./configure script in the root of the TensorFlow repository creates a symlink to the system swig command inside tensorflow/tools/swig. The only reason that tensorflow/tools/swig.sh would try to run the swig command from the environment is if that symlink doesn't exist. So the solution is most likely to run ./configure. Could you please confirm if that solves your problem?\nI would ideally prefer to not use use_default_shell_env because our Bazel build should ideally be hermetically sealed. That's one of the goals I'm working towards. I'm actually working on a change right now that has Bazel fetch the sources for SWIG and compiles it from scratch.", "body": "The `./configure` script in the root of the TensorFlow repository creates a symlink to the system swig command inside `tensorflow/tools/swig`. The only reason that `tensorflow/tools/swig.sh` would try to run the swig command from the environment is if that symlink doesn't exist. So the solution is most likely to run `./configure`. Could you please confirm if that solves your problem?\n\nI would ideally prefer to not use `use_default_shell_env` because our Bazel build should ideally be hermetically sealed. That's one of the goals I'm working towards. I'm actually working on a change right now that has Bazel fetch the sources for SWIG and compiles it from scratch.\n"}