{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/298871374", "html_url": "https://github.com/tensorflow/tensorflow/issues/9596#issuecomment-298871374", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9596", "id": 298871374, "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODg3MTM3NA==", "user": {"login": "GD06", "id": 13307515, "node_id": "MDQ6VXNlcjEzMzA3NTE1", "avatar_url": "https://avatars2.githubusercontent.com/u/13307515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GD06", "html_url": "https://github.com/GD06", "followers_url": "https://api.github.com/users/GD06/followers", "following_url": "https://api.github.com/users/GD06/following{/other_user}", "gists_url": "https://api.github.com/users/GD06/gists{/gist_id}", "starred_url": "https://api.github.com/users/GD06/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GD06/subscriptions", "organizations_url": "https://api.github.com/users/GD06/orgs", "repos_url": "https://api.github.com/users/GD06/repos", "events_url": "https://api.github.com/users/GD06/events{/privacy}", "received_events_url": "https://api.github.com/users/GD06/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-03T10:09:52Z", "updated_at": "2017-05-03T10:14:46Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=15696327\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/andydavis1\">@andydavis1</a> To ensure that the workers executing asynchronously, I improve the <a href=\"https://gist.github.com/GD06/b56d62b718bbd0b033703320e4b214dc\">training.py</a> and make worker 1 exist after the first time output information. As expected, the worker 0 continue to execute without waiting to the worker 1.</p>", "body_text": "@andydavis1 To ensure that the workers executing asynchronously, I improve the training.py and make worker 1 exist after the first time output information. As expected, the worker 0 continue to execute without waiting to the worker 1.", "body": "@andydavis1 To ensure that the workers executing asynchronously, I improve the [training.py](https://gist.github.com/GD06/b56d62b718bbd0b033703320e4b214dc) and make worker 1 exist after the first time output information. As expected, the worker 0 continue to execute without waiting to the worker 1. "}