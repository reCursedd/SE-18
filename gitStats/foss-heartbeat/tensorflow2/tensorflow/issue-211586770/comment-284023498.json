{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/284023498", "html_url": "https://github.com/tensorflow/tensorflow/issues/8040#issuecomment-284023498", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8040", "id": 284023498, "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDAyMzQ5OA==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-03T17:53:39Z", "updated_at": "2017-03-03T17:53:54Z", "author_association": "CONTRIBUTOR", "body_html": "<p>A PR to add this might take some work, but maybe there's a work-around using sitecustomize. IE, you can use sitecustomize to force Python to always run some code, and this code could be used to load tensorflow, and then monkey session init to use custom config.</p>\n<p>IE something like this:</p>\n<pre><code>oldinit = tf.Session.__init__\ndef myinit(session_object, target='', graph=None, config=None):\n    print(\"Intercepted!\")\n    config = tf.ConfigProto()\n    config.gpu_options.allow_growth = True\ntf.Session.__init__ = myinit\n\n</code></pre>\n<p>This is more flexible than env-var on the TensorFlow side because you can do arbitrary configuration. For instance, you could run some code that automatically selects least-used GPU and restricts TensorFlow to use it through <code>CUDA_VISIBLE_DEVICES</code> as I'm doing in <a href=\"https://github.com/yaroslavvb/stuff/blob/master/notebook_util.py#L46\">notebook_util</a></p>", "body_text": "A PR to add this might take some work, but maybe there's a work-around using sitecustomize. IE, you can use sitecustomize to force Python to always run some code, and this code could be used to load tensorflow, and then monkey session init to use custom config.\nIE something like this:\noldinit = tf.Session.__init__\ndef myinit(session_object, target='', graph=None, config=None):\n    print(\"Intercepted!\")\n    config = tf.ConfigProto()\n    config.gpu_options.allow_growth = True\ntf.Session.__init__ = myinit\n\n\nThis is more flexible than env-var on the TensorFlow side because you can do arbitrary configuration. For instance, you could run some code that automatically selects least-used GPU and restricts TensorFlow to use it through CUDA_VISIBLE_DEVICES as I'm doing in notebook_util", "body": "A PR to add this might take some work, but maybe there's a work-around using sitecustomize. IE, you can use sitecustomize to force Python to always run some code, and this code could be used to load tensorflow, and then monkey session init to use custom config. \r\n\r\nIE something like this:\r\n```\r\noldinit = tf.Session.__init__\r\ndef myinit(session_object, target='', graph=None, config=None):\r\n    print(\"Intercepted!\")\r\n    config = tf.ConfigProto()\r\n    config.gpu_options.allow_growth = True\r\ntf.Session.__init__ = myinit\r\n\r\n```\r\nThis is more flexible than env-var on the TensorFlow side because you can do arbitrary configuration. For instance, you could run some code that automatically selects least-used GPU and restricts TensorFlow to use it through `CUDA_VISIBLE_DEVICES` as I'm doing in [notebook_util](https://github.com/yaroslavvb/stuff/blob/master/notebook_util.py#L46)"}