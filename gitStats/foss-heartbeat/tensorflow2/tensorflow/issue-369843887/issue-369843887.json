{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22962", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22962/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22962/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22962/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22962", "id": 369843887, "node_id": "MDU6SXNzdWUzNjk4NDM4ODc=", "number": 22962, "title": "How is loss (and average loss) computed in Canned estimators?", "user": {"login": "GSonderling", "id": 10141866, "node_id": "MDQ6VXNlcjEwMTQxODY2", "avatar_url": "https://avatars1.githubusercontent.com/u/10141866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GSonderling", "html_url": "https://github.com/GSonderling", "followers_url": "https://api.github.com/users/GSonderling/followers", "following_url": "https://api.github.com/users/GSonderling/following{/other_user}", "gists_url": "https://api.github.com/users/GSonderling/gists{/gist_id}", "starred_url": "https://api.github.com/users/GSonderling/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GSonderling/subscriptions", "organizations_url": "https://api.github.com/users/GSonderling/orgs", "repos_url": "https://api.github.com/users/GSonderling/repos", "events_url": "https://api.github.com/users/GSonderling/events{/privacy}", "received_events_url": "https://api.github.com/users/GSonderling/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-10-13T21:38:17Z", "updated_at": "2018-10-21T00:53:40Z", "closed_at": "2018-10-21T00:53:40Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Largely irrelevant, the issue concerns documentation</strong></li>\n<li><strong>Tensorflow 1.11 (stable)</strong></li>\n</ul>\n<p>Documentation only specifies:</p>\n<blockquote>\n<p>loss (mean loss per mini-batch) and the average_loss (mean loss per sample)</p>\n</blockquote>\n<p>I understand that this might seem like enough, but since there are several, very different algorithms for computing loss (absolute, relative, square etc.), this can make a big difference.</p>\n<p>Especially if you are comparing your custom estimator, with canned alternatives.</p>\n<p>For example, I make my own DNN classifier, I run it and get eval dict with keys loss, accuracy, and global_step.  But does the <code>loss</code> key represent the same thing it does in canned equivalent? And even if it does, which algorithm I should pick if I want to compute average loss?</p>\n<p>If you are using the canned estimators as a baseline, and many beginners do, then making wrong assumptions about metrics is the worst possible option.</p>", "body_text": "System information\n\nLargely irrelevant, the issue concerns documentation\nTensorflow 1.11 (stable)\n\nDocumentation only specifies:\n\nloss (mean loss per mini-batch) and the average_loss (mean loss per sample)\n\nI understand that this might seem like enough, but since there are several, very different algorithms for computing loss (absolute, relative, square etc.), this can make a big difference.\nEspecially if you are comparing your custom estimator, with canned alternatives.\nFor example, I make my own DNN classifier, I run it and get eval dict with keys loss, accuracy, and global_step.  But does the loss key represent the same thing it does in canned equivalent? And even if it does, which algorithm I should pick if I want to compute average loss?\nIf you are using the canned estimators as a baseline, and many beginners do, then making wrong assumptions about metrics is the worst possible option.", "body": "### System information\r\n- **Largely irrelevant, the issue concerns documentation**\r\n- **Tensorflow 1.11 (stable)**\r\n\r\n\r\nDocumentation only specifies:\r\n\r\n> loss (mean loss per mini-batch) and the average_loss (mean loss per sample)\r\n\r\nI understand that this might seem like enough, but since there are several, very different algorithms for computing loss (absolute, relative, square etc.), this can make a big difference.\r\n\r\nEspecially if you are comparing your custom estimator, with canned alternatives.\r\n\r\nFor example, I make my own DNN classifier, I run it and get eval dict with keys loss, accuracy, and global_step.  But does the `loss` key represent the same thing it does in canned equivalent? And even if it does, which algorithm I should pick if I want to compute average loss? \r\n\r\nIf you are using the canned estimators as a baseline, and many beginners do, then making wrong assumptions about metrics is the worst possible option.\r\n\r\n"}