{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1660", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1660/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1660/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1660/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/1660", "id": 143744011, "node_id": "MDU6SXNzdWUxNDM3NDQwMTE=", "number": 1660, "title": "Possible memory leak with TensorArray", "user": {"login": "awni", "id": 1542805, "node_id": "MDQ6VXNlcjE1NDI4MDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1542805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/awni", "html_url": "https://github.com/awni", "followers_url": "https://api.github.com/users/awni/followers", "following_url": "https://api.github.com/users/awni/following{/other_user}", "gists_url": "https://api.github.com/users/awni/gists{/gist_id}", "starred_url": "https://api.github.com/users/awni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/awni/subscriptions", "organizations_url": "https://api.github.com/users/awni/orgs", "repos_url": "https://api.github.com/users/awni/repos", "events_url": "https://api.github.com/users/awni/events{/privacy}", "received_events_url": "https://api.github.com/users/awni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2016-03-26T19:57:30Z", "updated_at": "2016-05-16T18:07:57Z", "closed_at": "2016-05-16T18:07:57Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I'm not sure if the usage is incorrect (see below), but I am seeing a memory leak in cpu ram when using the <code>TensorArray</code>. Seems to be consistent regardless of device placement. I noticed this because I've been using the <code>dynamic_rnn</code>.  Happy to provide further info if needed.</p>\n<h3>Environment info</h3>\n<p>Operating System:<br>\nUbuntu 14.04</p>\n<p>If installed from sources, provide the commit hash:</p>\n<p><code>35c3f16f81b6a1d39a004c97160c22b73d3798e5</code></p>\n<h3>Steps to reproduce</h3>\n<p>Run this in a script  (I had to add <code>from tensorflow.python.ops import tensor_array_ops</code> to <code>tensorflow/python/__init__.py</code>)</p>\n<pre><code>import tensorflow as tf\n\ndef ta_mem_leak():\n\n    ta = tf.python.tensor_array_ops.TensorArray(\n                        dtype=tf.float32, size=10000)\n    ta = ta.write(0, [0.])\n    final_outputs = ta.read(0)\n    return [final_outputs]\n\nif __name__ == \"__main__\":\n    with tf.Graph().as_default(), tf.Session() as session:\n        ops = ta_mem_leak()\n        for i in xrange(200000):\n            res = session.run(ops)                          \n</code></pre>", "body_text": "I'm not sure if the usage is incorrect (see below), but I am seeing a memory leak in cpu ram when using the TensorArray. Seems to be consistent regardless of device placement. I noticed this because I've been using the dynamic_rnn.  Happy to provide further info if needed.\nEnvironment info\nOperating System:\nUbuntu 14.04\nIf installed from sources, provide the commit hash:\n35c3f16f81b6a1d39a004c97160c22b73d3798e5\nSteps to reproduce\nRun this in a script  (I had to add from tensorflow.python.ops import tensor_array_ops to tensorflow/python/__init__.py)\nimport tensorflow as tf\n\ndef ta_mem_leak():\n\n    ta = tf.python.tensor_array_ops.TensorArray(\n                        dtype=tf.float32, size=10000)\n    ta = ta.write(0, [0.])\n    final_outputs = ta.read(0)\n    return [final_outputs]\n\nif __name__ == \"__main__\":\n    with tf.Graph().as_default(), tf.Session() as session:\n        ops = ta_mem_leak()\n        for i in xrange(200000):\n            res = session.run(ops)", "body": "I'm not sure if the usage is incorrect (see below), but I am seeing a memory leak in cpu ram when using the `TensorArray`. Seems to be consistent regardless of device placement. I noticed this because I've been using the `dynamic_rnn`.  Happy to provide further info if needed.\n### Environment info\n\nOperating System:\nUbuntu 14.04\n\nIf installed from sources, provide the commit hash:\n\n`35c3f16f81b6a1d39a004c97160c22b73d3798e5`\n### Steps to reproduce\n\nRun this in a script  (I had to add `from tensorflow.python.ops import tensor_array_ops` to `tensorflow/python/__init__.py`)\n\n```\nimport tensorflow as tf\n\ndef ta_mem_leak():\n\n    ta = tf.python.tensor_array_ops.TensorArray(\n                        dtype=tf.float32, size=10000)\n    ta = ta.write(0, [0.])\n    final_outputs = ta.read(0)\n    return [final_outputs]\n\nif __name__ == \"__main__\":\n    with tf.Graph().as_default(), tf.Session() as session:\n        ops = ta_mem_leak()\n        for i in xrange(200000):\n            res = session.run(ops)                          \n```\n"}