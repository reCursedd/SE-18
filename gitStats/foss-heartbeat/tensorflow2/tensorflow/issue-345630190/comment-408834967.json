{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/408834967", "html_url": "https://github.com/tensorflow/tensorflow/issues/21234#issuecomment-408834967", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21234", "id": 408834967, "node_id": "MDEyOklzc3VlQ29tbWVudDQwODgzNDk2Nw==", "user": {"login": "tobegit3hub", "id": 2715000, "node_id": "MDQ6VXNlcjI3MTUwMDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tobegit3hub", "html_url": "https://github.com/tobegit3hub", "followers_url": "https://api.github.com/users/tobegit3hub/followers", "following_url": "https://api.github.com/users/tobegit3hub/following{/other_user}", "gists_url": "https://api.github.com/users/tobegit3hub/gists{/gist_id}", "starred_url": "https://api.github.com/users/tobegit3hub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tobegit3hub/subscriptions", "organizations_url": "https://api.github.com/users/tobegit3hub/orgs", "repos_url": "https://api.github.com/users/tobegit3hub/repos", "events_url": "https://api.github.com/users/tobegit3hub/events{/privacy}", "received_events_url": "https://api.github.com/users/tobegit3hub/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-30T11:41:12Z", "updated_at": "2018-07-30T11:41:12Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Is it possible to add another helper function just like <code>build_parsing_serving_input_fn</code> but requires base64 string as input?</p>\n<p>If so, we could send the pull-request so that everyone can use it.</p>\n<pre><code>def input_fn():\n    \"\"\"An input_fn that expects a serialized tf.Example.\"\"\"\n    serialized_tf_example = array_ops.placeholder(dtype=dtypes.string,\n                                                  shape=[default_batch_size],\n                                                  name='input_example_tensor')\n\n    # Add base64 decoding here\n\n    inputs = {'examples': serialized_tf_example}\n    features = parsing_ops.parse_example(serialized_tf_example, feature_spec)\n    labels = None  # these are not known in serving!\n    return InputFnOps(features, labels, inputs)\n</code></pre>", "body_text": "Is it possible to add another helper function just like build_parsing_serving_input_fn but requires base64 string as input?\nIf so, we could send the pull-request so that everyone can use it.\ndef input_fn():\n    \"\"\"An input_fn that expects a serialized tf.Example.\"\"\"\n    serialized_tf_example = array_ops.placeholder(dtype=dtypes.string,\n                                                  shape=[default_batch_size],\n                                                  name='input_example_tensor')\n\n    # Add base64 decoding here\n\n    inputs = {'examples': serialized_tf_example}\n    features = parsing_ops.parse_example(serialized_tf_example, feature_spec)\n    labels = None  # these are not known in serving!\n    return InputFnOps(features, labels, inputs)", "body": "Is it possible to add another helper function just like `build_parsing_serving_input_fn` but requires base64 string as input?\r\n\r\nIf so, we could send the pull-request so that everyone can use it.\r\n\r\n```\r\ndef input_fn():\r\n    \"\"\"An input_fn that expects a serialized tf.Example.\"\"\"\r\n    serialized_tf_example = array_ops.placeholder(dtype=dtypes.string,\r\n                                                  shape=[default_batch_size],\r\n                                                  name='input_example_tensor')\r\n\r\n    # Add base64 decoding here\r\n\r\n    inputs = {'examples': serialized_tf_example}\r\n    features = parsing_ops.parse_example(serialized_tf_example, feature_spec)\r\n    labels = None  # these are not known in serving!\r\n    return InputFnOps(features, labels, inputs)\r\n```"}