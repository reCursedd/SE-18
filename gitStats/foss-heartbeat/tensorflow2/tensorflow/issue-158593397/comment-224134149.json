{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/224134149", "html_url": "https://github.com/tensorflow/tensorflow/issues/2680#issuecomment-224134149", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2680", "id": 224134149, "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDEzNDE0OQ==", "user": {"login": "TianweiXing", "id": 17885178, "node_id": "MDQ6VXNlcjE3ODg1MTc4", "avatar_url": "https://avatars1.githubusercontent.com/u/17885178?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TianweiXing", "html_url": "https://github.com/TianweiXing", "followers_url": "https://api.github.com/users/TianweiXing/followers", "following_url": "https://api.github.com/users/TianweiXing/following{/other_user}", "gists_url": "https://api.github.com/users/TianweiXing/gists{/gist_id}", "starred_url": "https://api.github.com/users/TianweiXing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TianweiXing/subscriptions", "organizations_url": "https://api.github.com/users/TianweiXing/orgs", "repos_url": "https://api.github.com/users/TianweiXing/repos", "events_url": "https://api.github.com/users/TianweiXing/events{/privacy}", "received_events_url": "https://api.github.com/users/TianweiXing/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-07T01:07:18Z", "updated_at": "2016-06-07T01:08:12Z", "author_association": "NONE", "body_html": "<p>Thanks, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3376817\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/andrewharp\">@andrewharp</a> but I'm a little confused here...:</p>\n<p>1, In python code, there are 2 input(I think both of them are tensors):</p>\n<pre><code>        images_placeholder = tf.placeholder(tf.float32, shape=(FLAGS.batch_size, FLAGS.image_size, FLAGS.image_size, 3), name='input')     \n        phase_train_placeholder = tf.placeholder(tf.bool, name='phase_train')\n</code></pre>\n<p>and they are feed together to the session:</p>\n<pre><code>                feed_dict = { images_placeholder: images, phase_train_placeholder: False }\n                sess.run([embeddings], feed_dict=feed_dict)\n</code></pre>\n<p>what I 'm doing in C++ api is the same:</p>\n<pre><code>   tensorflow::Tensor input_tensor(\n        tensorflow::DT_FLOAT,\n        tensorflow::TensorShape({\n              1, IMAGE_SIZE, IMAGE_SIZE, 3}));\n    auto input_tensor_mapped = input_tensor.tensor&lt;float, 4&gt;();\n\n\n    tensorflow::Tensor tensor_phase(\n        tensorflow::DT_BOOL,\n        tensorflow::TensorShape());\n    tensor_phase.scalar&lt;bool&gt;()() = 0;\n\n// input tensor definition\n    std::vector&lt;std::pair&lt;std::string, tensorflow::Tensor&gt; &gt; input_tensors(\n        {{\"input\", input_tensor}, {\"phase_train\", tensor_phase}});\n\n    std::vector&lt;Tensor&gt; output_tensors;\n    std::vector&lt;std::string&gt; output_names({\"embeddings\"});\n\n    Status run_status = session-&gt;Run( input_tensors, output_names, {}, &amp;output_tensors );\n</code></pre>\n<p>I kind of don't understand why it works in python, but not in c++?</p>\n<p>2, I looked at the c++ api again, it seems that the input of \" tensorflow::Session::Run()\"  has to be pair&lt; string, Tensor &gt; format. So I don't really know how to feed a scalar to it....</p>", "body_text": "Thanks, @andrewharp but I'm a little confused here...:\n1, In python code, there are 2 input(I think both of them are tensors):\n        images_placeholder = tf.placeholder(tf.float32, shape=(FLAGS.batch_size, FLAGS.image_size, FLAGS.image_size, 3), name='input')     \n        phase_train_placeholder = tf.placeholder(tf.bool, name='phase_train')\n\nand they are feed together to the session:\n                feed_dict = { images_placeholder: images, phase_train_placeholder: False }\n                sess.run([embeddings], feed_dict=feed_dict)\n\nwhat I 'm doing in C++ api is the same:\n   tensorflow::Tensor input_tensor(\n        tensorflow::DT_FLOAT,\n        tensorflow::TensorShape({\n              1, IMAGE_SIZE, IMAGE_SIZE, 3}));\n    auto input_tensor_mapped = input_tensor.tensor<float, 4>();\n\n\n    tensorflow::Tensor tensor_phase(\n        tensorflow::DT_BOOL,\n        tensorflow::TensorShape());\n    tensor_phase.scalar<bool>()() = 0;\n\n// input tensor definition\n    std::vector<std::pair<std::string, tensorflow::Tensor> > input_tensors(\n        {{\"input\", input_tensor}, {\"phase_train\", tensor_phase}});\n\n    std::vector<Tensor> output_tensors;\n    std::vector<std::string> output_names({\"embeddings\"});\n\n    Status run_status = session->Run( input_tensors, output_names, {}, &output_tensors );\n\nI kind of don't understand why it works in python, but not in c++?\n2, I looked at the c++ api again, it seems that the input of \" tensorflow::Session::Run()\"  has to be pair< string, Tensor > format. So I don't really know how to feed a scalar to it....", "body": "Thanks, @andrewharp but I'm a little confused here...:\n\n1, In python code, there are 2 input(I think both of them are tensors):\n\n```\n        images_placeholder = tf.placeholder(tf.float32, shape=(FLAGS.batch_size, FLAGS.image_size, FLAGS.image_size, 3), name='input')     \n        phase_train_placeholder = tf.placeholder(tf.bool, name='phase_train')\n```\n\nand they are feed together to the session:\n\n```\n                feed_dict = { images_placeholder: images, phase_train_placeholder: False }\n                sess.run([embeddings], feed_dict=feed_dict)\n```\n\nwhat I 'm doing in C++ api is the same:\n\n```\n   tensorflow::Tensor input_tensor(\n        tensorflow::DT_FLOAT,\n        tensorflow::TensorShape({\n              1, IMAGE_SIZE, IMAGE_SIZE, 3}));\n    auto input_tensor_mapped = input_tensor.tensor<float, 4>();\n\n\n    tensorflow::Tensor tensor_phase(\n        tensorflow::DT_BOOL,\n        tensorflow::TensorShape());\n    tensor_phase.scalar<bool>()() = 0;\n\n// input tensor definition\n    std::vector<std::pair<std::string, tensorflow::Tensor> > input_tensors(\n        {{\"input\", input_tensor}, {\"phase_train\", tensor_phase}});\n\n    std::vector<Tensor> output_tensors;\n    std::vector<std::string> output_names({\"embeddings\"});\n\n    Status run_status = session->Run( input_tensors, output_names, {}, &output_tensors );\n```\n\nI kind of don't understand why it works in python, but not in c++? \n\n2, I looked at the c++ api again, it seems that the input of \" tensorflow::Session::Run()\"  has to be pair< string, Tensor > format. So I don't really know how to feed a scalar to it....\n"}