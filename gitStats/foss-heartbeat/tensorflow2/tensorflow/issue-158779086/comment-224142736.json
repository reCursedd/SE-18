{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/224142736", "html_url": "https://github.com/tensorflow/tensorflow/issues/2695#issuecomment-224142736", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2695", "id": 224142736, "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDE0MjczNg==", "user": {"login": "jihunchoi", "id": 1898501, "node_id": "MDQ6VXNlcjE4OTg1MDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1898501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jihunchoi", "html_url": "https://github.com/jihunchoi", "followers_url": "https://api.github.com/users/jihunchoi/followers", "following_url": "https://api.github.com/users/jihunchoi/following{/other_user}", "gists_url": "https://api.github.com/users/jihunchoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/jihunchoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jihunchoi/subscriptions", "organizations_url": "https://api.github.com/users/jihunchoi/orgs", "repos_url": "https://api.github.com/users/jihunchoi/repos", "events_url": "https://api.github.com/users/jihunchoi/events{/privacy}", "received_events_url": "https://api.github.com/users/jihunchoi/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-07T02:01:16Z", "updated_at": "2016-06-07T02:01:16Z", "author_association": "CONTRIBUTOR", "body_html": "<p>When you use <code>state_is_tuple</code>, it literally means that the type of state is tuple.<br>\nHowever, the first parameter should be a list of tensors and the second should be a dictionary whose key is of tensor type.<br>\nAs far as I know, you have to separate the state tuple.<br>\nSo your code should be like in the below form: (I haven't tested)</p>\n<pre><code>for batch in epoch:\n    state_c = initial_state[0].eval()\n    state_m = initial_state[1].eval()\n    feed_dict = {initial_state[0]: state_c, initial_state[1]: state_m}\n    state_c, state_m = sess.run([final_state[0], final_state[1]], feed_dict)\n</code></pre>\n<p>Note that it is applicable only for simple RNNs without stacked layers; for a multi-layer case, check out my modification of the RNN PTB example: <a href=\"https://github.com/jihunchoi/tensorflow/blob/ptb_use_state_tuple/tensorflow/models/rnn/ptb/ptb_word_lm.py\">https://github.com/jihunchoi/tensorflow/blob/ptb_use_state_tuple/tensorflow/models/rnn/ptb/ptb_word_lm.py</a>.</p>", "body_text": "When you use state_is_tuple, it literally means that the type of state is tuple.\nHowever, the first parameter should be a list of tensors and the second should be a dictionary whose key is of tensor type.\nAs far as I know, you have to separate the state tuple.\nSo your code should be like in the below form: (I haven't tested)\nfor batch in epoch:\n    state_c = initial_state[0].eval()\n    state_m = initial_state[1].eval()\n    feed_dict = {initial_state[0]: state_c, initial_state[1]: state_m}\n    state_c, state_m = sess.run([final_state[0], final_state[1]], feed_dict)\n\nNote that it is applicable only for simple RNNs without stacked layers; for a multi-layer case, check out my modification of the RNN PTB example: https://github.com/jihunchoi/tensorflow/blob/ptb_use_state_tuple/tensorflow/models/rnn/ptb/ptb_word_lm.py.", "body": "When you use `state_is_tuple`, it literally means that the type of state is tuple.\nHowever, the first parameter should be a list of tensors and the second should be a dictionary whose key is of tensor type.\nAs far as I know, you have to separate the state tuple.\nSo your code should be like in the below form: (I haven't tested)\n\n```\nfor batch in epoch:\n    state_c = initial_state[0].eval()\n    state_m = initial_state[1].eval()\n    feed_dict = {initial_state[0]: state_c, initial_state[1]: state_m}\n    state_c, state_m = sess.run([final_state[0], final_state[1]], feed_dict)\n```\n\nNote that it is applicable only for simple RNNs without stacked layers; for a multi-layer case, check out my modification of the RNN PTB example: https://github.com/jihunchoi/tensorflow/blob/ptb_use_state_tuple/tensorflow/models/rnn/ptb/ptb_word_lm.py.\n"}