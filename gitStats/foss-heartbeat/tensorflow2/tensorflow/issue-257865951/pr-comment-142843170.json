{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/142843170", "pull_request_review_id": 67263700, "id": 142843170, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Mjg0MzE3MA==", "diff_hunk": "@@ -439,17 +439,22 @@ struct GreaterThan {\n   constexpr bool operator()(int a, int b) const { return a > b; }\n };\n \n-// Tile size posibility frontier denotes the tile size combinations that consume\n-// the most computational resources constrained by\n+// The performance subspace refers to a subspace of the tile size space consists\n+// of all tile sizes satisfying the constraint of\n // - number of threads per SM limit,\n // - shared memory limit and\n // - some experimentally determined, type-specific constraint on the product of\n // two side lengths to increase grid-level parallelism.\n+// Tile size combinations lying outside this subspace are either not possible,\n+// or are slower than the alternatives\n //\n-// Tile size combinations lying on this frontier would achieve the maximum\n-// utilization of available resources, and combinations lying outside this\n-// frontier are either not possible, or are slower than the alternatives.\n-\n+// Tile size posibility frontier denotes the tile size combinations in that\n+// consume the most computational resources given a particular long side len.\n+//\n+// It is worth noting that due to the discrete nature of tile size space, the\n+// frontier does not constitute the boundary of the performant subspace. For\n+// this reason, there are tile size combinations that lie on the boundary of\n+// this performant subspace, but not on the frontier.", "path": "tensorflow/core/kernels/conv_ops_gpu_3.cu.cc", "position": null, "original_position": 41, "commit_id": "63d7a082d37c7db42ce52410cf240efda92eaa74", "original_commit_id": "607288f7be568d23aa7b9f7c76bfbdd0b859b67d", "user": {"login": "tjingrant", "id": 6410074, "node_id": "MDQ6VXNlcjY0MTAwNzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6410074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tjingrant", "html_url": "https://github.com/tjingrant", "followers_url": "https://api.github.com/users/tjingrant/followers", "following_url": "https://api.github.com/users/tjingrant/following{/other_user}", "gists_url": "https://api.github.com/users/tjingrant/gists{/gist_id}", "starred_url": "https://api.github.com/users/tjingrant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tjingrant/subscriptions", "organizations_url": "https://api.github.com/users/tjingrant/orgs", "repos_url": "https://api.github.com/users/tjingrant/repos", "events_url": "https://api.github.com/users/tjingrant/events{/privacy}", "received_events_url": "https://api.github.com/users/tjingrant/received_events", "type": "User", "site_admin": false}, "body": "I agree this way is much more economical.", "created_at": "2017-10-05T03:53:23Z", "updated_at": "2017-12-28T20:26:00Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/13049#discussion_r142843170", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13049", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/142843170"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/13049#discussion_r142843170"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13049"}}, "body_html": "<p>I agree this way is much more economical.</p>", "body_text": "I agree this way is much more economical.", "in_reply_to_id": 142842108}