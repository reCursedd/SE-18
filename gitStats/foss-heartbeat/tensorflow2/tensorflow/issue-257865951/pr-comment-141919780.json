{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/141919780", "pull_request_review_id": 66213548, "id": 141919780, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTkxOTc4MA==", "diff_hunk": "@@ -211,39 +210,50 @@ __global__ void SwapDimension1And2InTensor3UsingTiles(const T* input,\n   };\n \n   Dimension<3> input_dims_in_tiles = {\n-      input_dims[0], (input_dims[1] + TileSize - 1) / TileSize,\n-      (input_dims[2] + TileSize - 1) / TileSize,\n+      input_dims[0], (input_dims[1] + TileSizeI - 1) / TileSizeI,\n+      (input_dims[2] + TileSizeJ - 1) / TileSizeJ,\n   };\n \n   Index<3> input_tile_index =\n       FlatToTensorIndex(blockIdx.x, input_dims_in_tiles);\n \n   Index<3> input_tile_origin = {\n-      input_tile_index[0], input_tile_index[1] * TileSize,\n-      input_tile_index[2] * TileSize,\n+      input_tile_index[0], input_tile_index[1] * TileSizeI,\n+      input_tile_index[2] * TileSizeJ,\n   };\n \n   int input_origin_flat_index =\n       TensorIndexToFlat(input_tile_origin, input_dims);\n \n-  int tile_width = TileSize;\n+  int tile_width = TileSizeJ;\n+\n   // Only the last row or column may not have the full size.\n   if (input_tile_index[2] == input_dims_in_tiles[2] - 1) {\n-    tile_width = input_dims[2] - (input_dims_in_tiles[2] - 1) * TileSize;\n+    tile_width = input_dims[2] - (input_dims_in_tiles[2] - 1) * TileSizeJ;\n   }\n-  int tile_height = TileSize;\n+\n+  int tile_height = TileSizeI;\n+\n   if (input_tile_index[1] == input_dims_in_tiles[1] - 1) {\n-    tile_height = input_dims[1] - (input_dims_in_tiles[1] - 1) * TileSize;\n+    tile_height = input_dims[1] - (input_dims_in_tiles[1] - 1) * TileSizeI;\n   }\n \n-  int input_flat_index = input_origin_flat_index + x;\n-  int y_start = static_cast<int>(threadIdx.y) * kSubTileSize;\n-\n-  // Load the data from input memory to the shared memory tile.\n-  if (x < tile_width) {\n-    int y_end = min(y_start + kSubTileSize, tile_height);\n-    for (int y = y_start; y < y_end; y++) {\n-      shared_memory_tile[y][x] = input[input_flat_index + y * input_dims[2]];\n+  // Calculate effective thread number. This ensures that we use the largest\n+  // number of threads available to form a regular thread block with no\n+  // trailing incomplete lines.\n+  int effective_thread_num = NumThread / TileSizeJ * TileSizeJ;\n+\n+  if (x < effective_thread_num) {\n+    // Orient the logical thread block with respect to the input array.\n+    // ie. align the contiguous dimension of thread blocks with contiguous", "path": "tensorflow/core/kernels/conv_ops_gpu_3.cu.cc", "position": null, "original_position": 122, "commit_id": "63d7a082d37c7db42ce52410cf240efda92eaa74", "original_commit_id": "372d4111b99467a9eb4b4866ae8b53ecba505512", "user": {"login": "jlebar", "id": 150663, "node_id": "MDQ6VXNlcjE1MDY2Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/150663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlebar", "html_url": "https://github.com/jlebar", "followers_url": "https://api.github.com/users/jlebar/followers", "following_url": "https://api.github.com/users/jlebar/following{/other_user}", "gists_url": "https://api.github.com/users/jlebar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlebar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlebar/subscriptions", "organizations_url": "https://api.github.com/users/jlebar/orgs", "repos_url": "https://api.github.com/users/jlebar/repos", "events_url": "https://api.github.com/users/jlebar/events{/privacy}", "received_events_url": "https://api.github.com/users/jlebar/received_events", "type": "User", "site_admin": false}, "body": "with the contiguous dimension?", "created_at": "2017-09-29T17:11:59Z", "updated_at": "2017-12-28T20:26:00Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/13049#discussion_r141919780", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13049", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/141919780"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/13049#discussion_r141919780"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13049"}}, "body_html": "<p>with the contiguous dimension?</p>", "body_text": "with the contiguous dimension?"}