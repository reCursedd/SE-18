{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/338864261", "html_url": "https://github.com/tensorflow/tensorflow/pull/13049#issuecomment-338864261", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13049", "id": 338864261, "node_id": "MDEyOklzc3VlQ29tbWVudDMzODg2NDI2MQ==", "user": {"login": "tjingrant", "id": 6410074, "node_id": "MDQ6VXNlcjY0MTAwNzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6410074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tjingrant", "html_url": "https://github.com/tjingrant", "followers_url": "https://api.github.com/users/tjingrant/followers", "following_url": "https://api.github.com/users/tjingrant/following{/other_user}", "gists_url": "https://api.github.com/users/tjingrant/gists{/gist_id}", "starred_url": "https://api.github.com/users/tjingrant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tjingrant/subscriptions", "organizations_url": "https://api.github.com/users/tjingrant/orgs", "repos_url": "https://api.github.com/users/tjingrant/repos", "events_url": "https://api.github.com/users/tjingrant/events{/privacy}", "received_events_url": "https://api.github.com/users/tjingrant/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-24T03:44:44Z", "updated_at": "2017-10-24T03:45:56Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1002405\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yzhwang\">@yzhwang</a> Thanks for getting back to me! Glad to know you are interested in my implementation.</p>\n<p>I sure will be working closely with the TF team. But now I'm temporarily busy with other things our team is working on related to TF for this week so likely I'll get back to you with more substance some time next week. From my experience, the frontier indeed needs to be tuned. However the kernel also needs some tweaking. I noticed that on P100, cuda does not realize that I'm reading from contiguous memory locations possibly because of the thread ID relabeling process. With nvprof, the resulting shared memory store transactions are significantly higher. I'm not very sure about the exact cause of it yet because we have a custom cuda driver that may break things.</p>\n<p>Regarding the hardware constraint, I have access to all the machines you are interested in but the constraint is that I may have a slightly customized driver and therefore it would be useful for you to post your performance results so that we can cross-check.</p>\n<p>Again thanks a lot for actively resolving the conflict!</p>", "body_text": "@yzhwang Thanks for getting back to me! Glad to know you are interested in my implementation.\nI sure will be working closely with the TF team. But now I'm temporarily busy with other things our team is working on related to TF for this week so likely I'll get back to you with more substance some time next week. From my experience, the frontier indeed needs to be tuned. However the kernel also needs some tweaking. I noticed that on P100, cuda does not realize that I'm reading from contiguous memory locations possibly because of the thread ID relabeling process. With nvprof, the resulting shared memory store transactions are significantly higher. I'm not very sure about the exact cause of it yet because we have a custom cuda driver that may break things.\nRegarding the hardware constraint, I have access to all the machines you are interested in but the constraint is that I may have a slightly customized driver and therefore it would be useful for you to post your performance results so that we can cross-check.\nAgain thanks a lot for actively resolving the conflict!", "body": "@yzhwang Thanks for getting back to me! Glad to know you are interested in my implementation.\r\n\r\nI sure will be working closely with the TF team. But now I'm temporarily busy with other things our team is working on related to TF for this week so likely I'll get back to you with more substance some time next week. From my experience, the frontier indeed needs to be tuned. However the kernel also needs some tweaking. I noticed that on P100, cuda does not realize that I'm reading from contiguous memory locations possibly because of the thread ID relabeling process. With nvprof, the resulting shared memory store transactions are significantly higher. I'm not very sure about the exact cause of it yet because we have a custom cuda driver that may break things. \r\n\r\nRegarding the hardware constraint, I have access to all the machines you are interested in but the constraint is that I may have a slightly customized driver and therefore it would be useful for you to post your performance results so that we can cross-check.\r\n\r\nAgain thanks a lot for actively resolving the conflict!\r\n"}