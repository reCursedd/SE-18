{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/129561548", "pull_request_review_id": 52346808, "id": 129561548, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyOTU2MTU0OA==", "diff_hunk": "@@ -0,0 +1,136 @@\n+# Copyright 2015 The TensorFlow Authors. All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+# ==============================================================================\n+\n+\"\"\"Functional test for sgdr learning rate decay.\"\"\"\n+from __future__ import absolute_import\n+from __future__ import division\n+from __future__ import print_function\n+\n+import math\n+\n+from sgdr_learning_rate_decay import sgdr_decay\n+from tensorflow.python.platform import googletest\n+from tensorflow.python.framework import test_util\n+from tensorflow.python.ops import gen_state_ops\n+from tensorflow.python.ops import state_ops\n+from tensorflow.python.framework import dtypes\n+\n+\n+class SGDRDecayTest(test_util.TensorFlowTestCase):\n+\n+  # Original iterative approach\n+  # https://github.com/loshchil/SGDR/blob/master/SGDR_WRNs.py\n+  def get_original_values(self, lr, Te, multFactor, iter_per_epoch, epochs):\n+    t0 = math.pi / 2.0\n+    tt = 0\n+    TeNext = Te\n+\n+    lr_values = []\n+    sh_lr = lr\n+    for epoch in range(epochs):\n+      for iteration in range(iter_per_epoch):\n+        # In the original approach training function is executed here\n+        lr_values.append(sh_lr)\n+\n+        dt = 2.0 * math.pi / float(2.0 * Te)\n+        tt = tt + float(dt) / iter_per_epoch\n+        if tt >= math.pi:\n+          tt = tt - math.pi\n+        curT = t0 + tt\n+        new_lr = lr * (1.0 + math.sin(curT)) / 2.0  # lr_min = 0, lr_max = lr\n+        sh_lr = new_lr\n+      if (epoch + 1) == TeNext:  # time to restart\n+        sh_lr = lr\n+        tt = 0                # by setting to 0 we set lr to lr_max, see above\n+        Te = Te * multFactor  # change the period of restarts\n+        TeNext = TeNext + Te  # note the next restart's epoch\n+\n+    return lr_values\n+\n+  def get_sgdr_values(self, lr, Te, multFactor, iters):\n+    step = gen_state_ops._variable(shape=[], dtype=dtypes.int32,", "path": "tensorflow/contrib/training/python/training/sgdr_learning_rate_decay_test.py", "position": null, "original_position": 63, "commit_id": "d330eb5eac6ba848842ee6966fa47cccefed33d9", "original_commit_id": "871a2c05b14decbff7b67b0ff0a2133a9ac10e72", "user": {"login": "PatrykChrabaszcz", "id": 21221121, "node_id": "MDQ6VXNlcjIxMjIxMTIx", "avatar_url": "https://avatars1.githubusercontent.com/u/21221121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PatrykChrabaszcz", "html_url": "https://github.com/PatrykChrabaszcz", "followers_url": "https://api.github.com/users/PatrykChrabaszcz/followers", "following_url": "https://api.github.com/users/PatrykChrabaszcz/following{/other_user}", "gists_url": "https://api.github.com/users/PatrykChrabaszcz/gists{/gist_id}", "starred_url": "https://api.github.com/users/PatrykChrabaszcz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PatrykChrabaszcz/subscriptions", "organizations_url": "https://api.github.com/users/PatrykChrabaszcz/orgs", "repos_url": "https://api.github.com/users/PatrykChrabaszcz/repos", "events_url": "https://api.github.com/users/PatrykChrabaszcz/events{/privacy}", "received_events_url": "https://api.github.com/users/PatrykChrabaszcz/received_events", "type": "User", "site_admin": false}, "body": "That's right, we could use a placeholder, but this tests implementation is inspired by test cases for other learning rate decay algorithms:\r\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/training/learning_rate_decay_test.py\r\n\r\nSo we use assignment ops as other tests do. Should we change it?\r\n", "created_at": "2017-07-26T12:50:39Z", "updated_at": "2017-08-08T19:53:22Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/11749#discussion_r129561548", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11749", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/129561548"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/11749#discussion_r129561548"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11749"}}, "body_html": "<p>That's right, we could use a placeholder, but this tests implementation is inspired by test cases for other learning rate decay algorithms:<br>\n<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/training/learning_rate_decay_test.py\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/training/learning_rate_decay_test.py</a></p>\n<p>So we use assignment ops as other tests do. Should we change it?</p>", "body_text": "That's right, we could use a placeholder, but this tests implementation is inspired by test cases for other learning rate decay algorithms:\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/training/learning_rate_decay_test.py\nSo we use assignment ops as other tests do. Should we change it?", "in_reply_to_id": 129477211}