{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/347284551", "html_url": "https://github.com/tensorflow/tensorflow/issues/14913#issuecomment-347284551", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14913", "id": 347284551, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzI4NDU1MQ==", "user": {"login": "dantkz", "id": 5220571, "node_id": "MDQ6VXNlcjUyMjA1NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5220571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dantkz", "html_url": "https://github.com/dantkz", "followers_url": "https://api.github.com/users/dantkz/followers", "following_url": "https://api.github.com/users/dantkz/following{/other_user}", "gists_url": "https://api.github.com/users/dantkz/gists{/gist_id}", "starred_url": "https://api.github.com/users/dantkz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dantkz/subscriptions", "organizations_url": "https://api.github.com/users/dantkz/orgs", "repos_url": "https://api.github.com/users/dantkz/repos", "events_url": "https://api.github.com/users/dantkz/events{/privacy}", "received_events_url": "https://api.github.com/users/dantkz/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-27T18:48:34Z", "updated_at": "2017-11-27T18:48:34Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=581947\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yilei\">@yilei</a> yes, the example code works with tensorflow 1.4.</p>\n<p>I call <code>main</code> manually just to show that the arguments are parsed by python. I wouldn't call it in a usual usecase. I don't think I would want any arguments from <code>tf.app.run</code>.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a> Unfortunately the work-around doesn't work:</p>\n<pre><code>(nightly) daniyar@sleepy-prism:~/tmp/argsparse$ python test.py --myarg buzz\nTraceback (most recent call last):\n  File \"test.py\", line 13, in &lt;module&gt;\n    tf.app.run(argv=[])\n  File \"/home/daniyar/anaconda2/envs/tensorsource/lib/python3.5/site-packages/tensorflow/python/platform/app.py\", line 119, in run\n    argv = flags.FLAGS(_sys.argv if argv is None else argv)\n  File \"/home/daniyar/anaconda2/envs/tensorsource/lib/python3.5/site-packages/absl/flags/_flagvalues.py\", line 634, in __call__\n    'argv cannot be an empty list, and must contain the program name as '\nValueError: argv cannot be an empty list, and must contain the program name as the first element.\n</code></pre>\n<p>This, however, works:</p>\n<pre><code>if __name__ == '__main__':\n    import sys\n    tf.app.run(argv=sys.argv[1:])\n</code></pre>\n<p>and this doesn't:</p>\n<pre><code>if __name__ == '__main__':\n    import sys\n    tf.app.run(argv=sys.argv)\n</code></pre>", "body_text": "@yilei yes, the example code works with tensorflow 1.4.\nI call main manually just to show that the arguments are parsed by python. I wouldn't call it in a usual usecase. I don't think I would want any arguments from tf.app.run.\n@mrry Unfortunately the work-around doesn't work:\n(nightly) daniyar@sleepy-prism:~/tmp/argsparse$ python test.py --myarg buzz\nTraceback (most recent call last):\n  File \"test.py\", line 13, in <module>\n    tf.app.run(argv=[])\n  File \"/home/daniyar/anaconda2/envs/tensorsource/lib/python3.5/site-packages/tensorflow/python/platform/app.py\", line 119, in run\n    argv = flags.FLAGS(_sys.argv if argv is None else argv)\n  File \"/home/daniyar/anaconda2/envs/tensorsource/lib/python3.5/site-packages/absl/flags/_flagvalues.py\", line 634, in __call__\n    'argv cannot be an empty list, and must contain the program name as '\nValueError: argv cannot be an empty list, and must contain the program name as the first element.\n\nThis, however, works:\nif __name__ == '__main__':\n    import sys\n    tf.app.run(argv=sys.argv[1:])\n\nand this doesn't:\nif __name__ == '__main__':\n    import sys\n    tf.app.run(argv=sys.argv)", "body": "@yilei yes, the example code works with tensorflow 1.4.\r\n\r\nI call `main` manually just to show that the arguments are parsed by python. I wouldn't call it in a usual usecase. I don't think I would want any arguments from `tf.app.run`.\r\n\r\n\r\n@mrry Unfortunately the work-around doesn't work:\r\n```\r\n(nightly) daniyar@sleepy-prism:~/tmp/argsparse$ python test.py --myarg buzz\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 13, in <module>\r\n    tf.app.run(argv=[])\r\n  File \"/home/daniyar/anaconda2/envs/tensorsource/lib/python3.5/site-packages/tensorflow/python/platform/app.py\", line 119, in run\r\n    argv = flags.FLAGS(_sys.argv if argv is None else argv)\r\n  File \"/home/daniyar/anaconda2/envs/tensorsource/lib/python3.5/site-packages/absl/flags/_flagvalues.py\", line 634, in __call__\r\n    'argv cannot be an empty list, and must contain the program name as '\r\nValueError: argv cannot be an empty list, and must contain the program name as the first element.\r\n```\r\n\r\nThis, however, works:\r\n```\r\nif __name__ == '__main__':\r\n    import sys\r\n    tf.app.run(argv=sys.argv[1:])\r\n```\r\nand this doesn't:\r\n```\r\nif __name__ == '__main__':\r\n    import sys\r\n    tf.app.run(argv=sys.argv)\r\n```"}