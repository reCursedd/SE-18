{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7656", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7656/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7656/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7656/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7656", "id": 208680565, "node_id": "MDU6SXNzdWUyMDg2ODA1NjU=", "number": 7656, "title": "tf.sparse_placeholder does not accept fully specified shapes", "user": {"login": "standy66", "id": 1818586, "node_id": "MDQ6VXNlcjE4MTg1ODY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1818586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/standy66", "html_url": "https://github.com/standy66", "followers_url": "https://api.github.com/users/standy66/followers", "following_url": "https://api.github.com/users/standy66/following{/other_user}", "gists_url": "https://api.github.com/users/standy66/gists{/gist_id}", "starred_url": "https://api.github.com/users/standy66/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/standy66/subscriptions", "organizations_url": "https://api.github.com/users/standy66/orgs", "repos_url": "https://api.github.com/users/standy66/repos", "events_url": "https://api.github.com/users/standy66/events{/privacy}", "received_events_url": "https://api.github.com/users/standy66/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-18T23:38:50Z", "updated_at": "2018-02-08T10:25:06Z", "closed_at": "2017-03-03T23:39:32Z", "author_association": "CONTRIBUTOR", "body_html": "<p>When I try to construct <code>tf.sparse_placeholder</code> with fully specified shape, like this</p>\n<pre><code>tf.sparse_placeholder(tf.float32, shape=(10000, 10000))\n</code></pre>\n<p>I get</p>\n<pre><code>ValueError                                Traceback (most recent call last)\n&lt;ipython-input-15-977303dad90f&gt; in &lt;module&gt;()\n----&gt; 1 tf.sparse_placeholder(tf.float32, shape=(10000, 10000))\n\n/Users/astepanov/.virtualenvs/py_asr/lib/python3.6/site-packages/tensorflow/python/ops/array_ops.py in sparse_placeholder(dtype, shape, name)\n   1584           dtypes.int64, shape=[None, None],\n   1585           name=(name + \"/indices\") if name is not None else None),\n-&gt; 1586       dense_shape=shape)\n   1587 # pylint: enable=redefined-outer-name\n   1588 \n\n/Users/astepanov/.virtualenvs/py_asr/lib/python3.6/site-packages/tensorflow/python/framework/sparse_tensor.py in __init__(self, indices, values, dense_shape)\n    134           values, name=\"values\", as_ref=True)\n    135       dense_shape = ops.convert_to_tensor(\n--&gt; 136           dense_shape, name=\"dense_shape\", dtype=dtypes.int64)\n    137     self._indices = indices\n    138     self._values = values\n\n/Users/astepanov/.virtualenvs/py_asr/lib/python3.6/site-packages/tensorflow/python/framework/ops.py in convert_to_tensor(value, dtype, name, preferred_dtype)\n    649       name=name,\n    650       preferred_dtype=preferred_dtype,\n--&gt; 651       as_ref=False)\n    652 \n    653 \n\n/Users/astepanov/.virtualenvs/py_asr/lib/python3.6/site-packages/tensorflow/python/framework/ops.py in internal_convert_to_tensor(value, dtype, name, as_ref, preferred_dtype)\n    714 \n    715         if ret is None:\n--&gt; 716           ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n    717 \n    718         if ret is NotImplemented:\n\n/Users/astepanov/.virtualenvs/py_asr/lib/python3.6/site-packages/tensorflow/python/framework/ops.py in _TensorTensorConversionFunction(t, dtype, name, as_ref)\n    587     raise ValueError(\n    588         \"Tensor conversion requested dtype %s for Tensor with dtype %s: %r\"\n--&gt; 589         % (dtype.name, t.dtype.name, str(t)))\n    590   return t\n    591 \n\nValueError: Tensor conversion requested dtype int64 for Tensor with dtype int32: 'Tensor(\"Const_5:0\", shape=(2,), dtype=int32)'\n</code></pre>\n<p>But when the shape is not fully specified, it is doing OK</p>\n<pre><code>In [16]: tf.sparse_placeholder(tf.float32, shape=(10000, None))\nOut[16]: &lt;tensorflow.python.framework.sparse_tensor.SparseTensor at 0x112a7ff60&gt;\n</code></pre>\n<p>I don't think that's the desired behaviour here. As a workaround for now I dropped the shape altogether in my code, but this way I cannot ensure runtime correctness of values being fed in feed_dict.</p>\n<h3>Environment info</h3>\n<p>Operating System: MacOS Sierra</p>\n<p>Installed version of CUDA and cuDNN: none</p>\n<p>If installed from binary pip package, provide:</p>\n<ol>\n<li>A link to the pip package you installed: <code>pip install tensorflow==1.0.0</code></li>\n<li>The output from <code>python -c \"import tensorflow; print(tensorflow.__version__)\"</code>: 1.0.0</li>\n</ol>", "body_text": "When I try to construct tf.sparse_placeholder with fully specified shape, like this\ntf.sparse_placeholder(tf.float32, shape=(10000, 10000))\n\nI get\nValueError                                Traceback (most recent call last)\n<ipython-input-15-977303dad90f> in <module>()\n----> 1 tf.sparse_placeholder(tf.float32, shape=(10000, 10000))\n\n/Users/astepanov/.virtualenvs/py_asr/lib/python3.6/site-packages/tensorflow/python/ops/array_ops.py in sparse_placeholder(dtype, shape, name)\n   1584           dtypes.int64, shape=[None, None],\n   1585           name=(name + \"/indices\") if name is not None else None),\n-> 1586       dense_shape=shape)\n   1587 # pylint: enable=redefined-outer-name\n   1588 \n\n/Users/astepanov/.virtualenvs/py_asr/lib/python3.6/site-packages/tensorflow/python/framework/sparse_tensor.py in __init__(self, indices, values, dense_shape)\n    134           values, name=\"values\", as_ref=True)\n    135       dense_shape = ops.convert_to_tensor(\n--> 136           dense_shape, name=\"dense_shape\", dtype=dtypes.int64)\n    137     self._indices = indices\n    138     self._values = values\n\n/Users/astepanov/.virtualenvs/py_asr/lib/python3.6/site-packages/tensorflow/python/framework/ops.py in convert_to_tensor(value, dtype, name, preferred_dtype)\n    649       name=name,\n    650       preferred_dtype=preferred_dtype,\n--> 651       as_ref=False)\n    652 \n    653 \n\n/Users/astepanov/.virtualenvs/py_asr/lib/python3.6/site-packages/tensorflow/python/framework/ops.py in internal_convert_to_tensor(value, dtype, name, as_ref, preferred_dtype)\n    714 \n    715         if ret is None:\n--> 716           ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n    717 \n    718         if ret is NotImplemented:\n\n/Users/astepanov/.virtualenvs/py_asr/lib/python3.6/site-packages/tensorflow/python/framework/ops.py in _TensorTensorConversionFunction(t, dtype, name, as_ref)\n    587     raise ValueError(\n    588         \"Tensor conversion requested dtype %s for Tensor with dtype %s: %r\"\n--> 589         % (dtype.name, t.dtype.name, str(t)))\n    590   return t\n    591 \n\nValueError: Tensor conversion requested dtype int64 for Tensor with dtype int32: 'Tensor(\"Const_5:0\", shape=(2,), dtype=int32)'\n\nBut when the shape is not fully specified, it is doing OK\nIn [16]: tf.sparse_placeholder(tf.float32, shape=(10000, None))\nOut[16]: <tensorflow.python.framework.sparse_tensor.SparseTensor at 0x112a7ff60>\n\nI don't think that's the desired behaviour here. As a workaround for now I dropped the shape altogether in my code, but this way I cannot ensure runtime correctness of values being fed in feed_dict.\nEnvironment info\nOperating System: MacOS Sierra\nInstalled version of CUDA and cuDNN: none\nIf installed from binary pip package, provide:\n\nA link to the pip package you installed: pip install tensorflow==1.0.0\nThe output from python -c \"import tensorflow; print(tensorflow.__version__)\": 1.0.0", "body": "When I try to construct `tf.sparse_placeholder` with fully specified shape, like this\r\n```\r\ntf.sparse_placeholder(tf.float32, shape=(10000, 10000))\r\n```\r\nI get\r\n\r\n```\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-15-977303dad90f> in <module>()\r\n----> 1 tf.sparse_placeholder(tf.float32, shape=(10000, 10000))\r\n\r\n/Users/astepanov/.virtualenvs/py_asr/lib/python3.6/site-packages/tensorflow/python/ops/array_ops.py in sparse_placeholder(dtype, shape, name)\r\n   1584           dtypes.int64, shape=[None, None],\r\n   1585           name=(name + \"/indices\") if name is not None else None),\r\n-> 1586       dense_shape=shape)\r\n   1587 # pylint: enable=redefined-outer-name\r\n   1588 \r\n\r\n/Users/astepanov/.virtualenvs/py_asr/lib/python3.6/site-packages/tensorflow/python/framework/sparse_tensor.py in __init__(self, indices, values, dense_shape)\r\n    134           values, name=\"values\", as_ref=True)\r\n    135       dense_shape = ops.convert_to_tensor(\r\n--> 136           dense_shape, name=\"dense_shape\", dtype=dtypes.int64)\r\n    137     self._indices = indices\r\n    138     self._values = values\r\n\r\n/Users/astepanov/.virtualenvs/py_asr/lib/python3.6/site-packages/tensorflow/python/framework/ops.py in convert_to_tensor(value, dtype, name, preferred_dtype)\r\n    649       name=name,\r\n    650       preferred_dtype=preferred_dtype,\r\n--> 651       as_ref=False)\r\n    652 \r\n    653 \r\n\r\n/Users/astepanov/.virtualenvs/py_asr/lib/python3.6/site-packages/tensorflow/python/framework/ops.py in internal_convert_to_tensor(value, dtype, name, as_ref, preferred_dtype)\r\n    714 \r\n    715         if ret is None:\r\n--> 716           ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n    717 \r\n    718         if ret is NotImplemented:\r\n\r\n/Users/astepanov/.virtualenvs/py_asr/lib/python3.6/site-packages/tensorflow/python/framework/ops.py in _TensorTensorConversionFunction(t, dtype, name, as_ref)\r\n    587     raise ValueError(\r\n    588         \"Tensor conversion requested dtype %s for Tensor with dtype %s: %r\"\r\n--> 589         % (dtype.name, t.dtype.name, str(t)))\r\n    590   return t\r\n    591 \r\n\r\nValueError: Tensor conversion requested dtype int64 for Tensor with dtype int32: 'Tensor(\"Const_5:0\", shape=(2,), dtype=int32)'\r\n```\r\n\r\nBut when the shape is not fully specified, it is doing OK\r\n\r\n```\r\nIn [16]: tf.sparse_placeholder(tf.float32, shape=(10000, None))\r\nOut[16]: <tensorflow.python.framework.sparse_tensor.SparseTensor at 0x112a7ff60>\r\n```\r\n\r\nI don't think that's the desired behaviour here. As a workaround for now I dropped the shape altogether in my code, but this way I cannot ensure runtime correctness of values being fed in feed_dict.\r\n\r\n### Environment info\r\nOperating System: MacOS Sierra\r\n\r\nInstalled version of CUDA and cuDNN: none\r\n\r\nIf installed from binary pip package, provide:\r\n\r\n1. A link to the pip package you installed: `pip install tensorflow==1.0.0`\r\n2. The output from `python -c \"import tensorflow; print(tensorflow.__version__)\"`: 1.0.0\r\n\r\n"}