{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/245668861", "html_url": "https://github.com/tensorflow/tensorflow/issues/1122#issuecomment-245668861", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1122", "id": 245668861, "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTY2ODg2MQ==", "user": {"login": "bsautermeister", "id": 2537736, "node_id": "MDQ6VXNlcjI1Mzc3MzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2537736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bsautermeister", "html_url": "https://github.com/bsautermeister", "followers_url": "https://api.github.com/users/bsautermeister/followers", "following_url": "https://api.github.com/users/bsautermeister/following{/other_user}", "gists_url": "https://api.github.com/users/bsautermeister/gists{/gist_id}", "starred_url": "https://api.github.com/users/bsautermeister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bsautermeister/subscriptions", "organizations_url": "https://api.github.com/users/bsautermeister/orgs", "repos_url": "https://api.github.com/users/bsautermeister/repos", "events_url": "https://api.github.com/users/bsautermeister/events{/privacy}", "received_events_url": "https://api.github.com/users/bsautermeister/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-08T17:10:54Z", "updated_at": "2016-09-09T09:02:17Z", "author_association": "NONE", "body_html": "<p>Nevertheless, the documentation seams to be out-dated. It tells to do the following:</p>\n<pre><code>update_ops = tf.get_collection(tf.GraphKeys.UPDATE_OPS)\nif update_ops:\n    updates = tf.group(update_ops)\n    total_loss = control_flow_ops.with_dependencies([updates], total_loss)\n</code></pre>\n<p>But:</p>\n<ul>\n<li><em>tf.group()</em> does not accept a list. I replaced it with <em>tf.tuple()</em></li>\n<li><del>I don't know how to access <em>control_flow_ops.with_dependencies()</em>. How can I access functions within control_flow_ops module? I have seen other examples just using tf.with_dependecies(), but I cannot do that with Tensorflow 0.10.</del> I found it here: <em>tf.python.control_flow_ops.with_dependencies()</em></li>\n</ul>\n<p><strong>EDIT:</strong></p>\n<p>The documentation should be updated to s.th. like this:</p>\n<pre><code>from tensorflow.python import control_flow_ops\n\nupdate_ops = tf.get_collection(tf.GraphKeys.UPDATE_OPS)\nif update_ops:\n    updates = tf.tuple(update_ops)\n    total_loss = control_flow_ops.with_dependencies(updates, total_loss)\n</code></pre>\n<p><strong>EDIT 2:</strong></p>\n<p>After doing some runs on my network, I have to say that <del>I can not see any performance difference between using  <em>updates_collections=None</em> in contrast to manually fetching <em>tf.GraphKeys.UPDATE_OPS</em> while graph construction</del>. Even with heavy use of batch normalization (in total, my <em>tf.get_collection(tf.GraphKeys.UPDATE_OPS)</em> returns 140 Update-Ops, all of them are BN-ops only)</p>\n<p>Edit: Hard to say, if my results are correct, but the whole network indeed seams to be 1.5x faster. As far as I know, BN-statistics are calculated on CPU, not GPU so far.</p>\n<p>Can anyone of you see any performance benefits as well? Please share your results :)</p>", "body_text": "Nevertheless, the documentation seams to be out-dated. It tells to do the following:\nupdate_ops = tf.get_collection(tf.GraphKeys.UPDATE_OPS)\nif update_ops:\n    updates = tf.group(update_ops)\n    total_loss = control_flow_ops.with_dependencies([updates], total_loss)\n\nBut:\n\ntf.group() does not accept a list. I replaced it with tf.tuple()\nI don't know how to access control_flow_ops.with_dependencies(). How can I access functions within control_flow_ops module? I have seen other examples just using tf.with_dependecies(), but I cannot do that with Tensorflow 0.10. I found it here: tf.python.control_flow_ops.with_dependencies()\n\nEDIT:\nThe documentation should be updated to s.th. like this:\nfrom tensorflow.python import control_flow_ops\n\nupdate_ops = tf.get_collection(tf.GraphKeys.UPDATE_OPS)\nif update_ops:\n    updates = tf.tuple(update_ops)\n    total_loss = control_flow_ops.with_dependencies(updates, total_loss)\n\nEDIT 2:\nAfter doing some runs on my network, I have to say that I can not see any performance difference between using  updates_collections=None in contrast to manually fetching tf.GraphKeys.UPDATE_OPS while graph construction. Even with heavy use of batch normalization (in total, my tf.get_collection(tf.GraphKeys.UPDATE_OPS) returns 140 Update-Ops, all of them are BN-ops only)\nEdit: Hard to say, if my results are correct, but the whole network indeed seams to be 1.5x faster. As far as I know, BN-statistics are calculated on CPU, not GPU so far.\nCan anyone of you see any performance benefits as well? Please share your results :)", "body": "Nevertheless, the documentation seams to be out-dated. It tells to do the following:\n\n```\nupdate_ops = tf.get_collection(tf.GraphKeys.UPDATE_OPS)\nif update_ops:\n    updates = tf.group(update_ops)\n    total_loss = control_flow_ops.with_dependencies([updates], total_loss)\n```\n\nBut:\n- _tf.group()_ does not accept a list. I replaced it with _tf.tuple()_\n- ~~I don't know how to access _control_flow_ops.with_dependencies()_. How can I access functions within control_flow_ops module? I have seen other examples just using tf.with_dependecies(), but I cannot do that with Tensorflow 0.10.~~ I found it here: _tf.python.control_flow_ops.with_dependencies()_\n\n**EDIT:**\n\nThe documentation should be updated to s.th. like this:\n\n```\nfrom tensorflow.python import control_flow_ops\n\nupdate_ops = tf.get_collection(tf.GraphKeys.UPDATE_OPS)\nif update_ops:\n    updates = tf.tuple(update_ops)\n    total_loss = control_flow_ops.with_dependencies(updates, total_loss)\n```\n\n**EDIT 2:** \n\nAfter doing some runs on my network, I have to say that ~~I can not see any performance difference between using  _updates_collections=None_ in contrast to manually fetching _tf.GraphKeys.UPDATE_OPS_ while graph construction~~. Even with heavy use of batch normalization (in total, my _tf.get_collection(tf.GraphKeys.UPDATE_OPS)_ returns 140 Update-Ops, all of them are BN-ops only)\n\nEdit: Hard to say, if my results are correct, but the whole network indeed seams to be 1.5x faster. As far as I know, BN-statistics are calculated on CPU, not GPU so far.\n\nCan anyone of you see any performance benefits as well? Please share your results :)\n"}