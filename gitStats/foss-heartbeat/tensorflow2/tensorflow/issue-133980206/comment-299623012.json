{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/299623012", "html_url": "https://github.com/tensorflow/tensorflow/issues/1122#issuecomment-299623012", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1122", "id": 299623012, "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTYyMzAxMg==", "user": {"login": "MisayaZ", "id": 16910475, "node_id": "MDQ6VXNlcjE2OTEwNDc1", "avatar_url": "https://avatars2.githubusercontent.com/u/16910475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MisayaZ", "html_url": "https://github.com/MisayaZ", "followers_url": "https://api.github.com/users/MisayaZ/followers", "following_url": "https://api.github.com/users/MisayaZ/following{/other_user}", "gists_url": "https://api.github.com/users/MisayaZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/MisayaZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MisayaZ/subscriptions", "organizations_url": "https://api.github.com/users/MisayaZ/orgs", "repos_url": "https://api.github.com/users/MisayaZ/repos", "events_url": "https://api.github.com/users/MisayaZ/events{/privacy}", "received_events_url": "https://api.github.com/users/MisayaZ/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-06T07:51:03Z", "updated_at": "2017-05-06T07:57:11Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1766524\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/sguada\">@sguada</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1855278\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/brando90\">@brando90</a></p>\n<pre><code>def batch_norm_layer(self, x,train_phase, scope_bn):\n        bn_train = batch_norm(x, decay=0.9, center=False, scale=True,\n        updates_collections=None,\n        is_training=True,\n        reuse=None,\n        variables_collections= [UPDATE_OPS_COLLECTION],\n        trainable=True,\n        scope=scope_bn)\n        bn_inference = batch_norm(x, decay=0.9, center=False, scale=True,\n        updates_collections=None,\n        is_training=False,\n        reuse=True,\n        variables_collections= [UPDATE_OPS_COLLECTION],\n        trainable=True,\n        scope=scope_bn)\n        z = tf.cond(train_phase, lambda: bn_train, lambda: bn_inference)\n        return z\n</code></pre>\n<p>I build batchnorm like this, however, the moving mean and moving variable are updated during test, I can not find the reason.</p>", "body_text": "@sguada @brando90\ndef batch_norm_layer(self, x,train_phase, scope_bn):\n        bn_train = batch_norm(x, decay=0.9, center=False, scale=True,\n        updates_collections=None,\n        is_training=True,\n        reuse=None,\n        variables_collections= [UPDATE_OPS_COLLECTION],\n        trainable=True,\n        scope=scope_bn)\n        bn_inference = batch_norm(x, decay=0.9, center=False, scale=True,\n        updates_collections=None,\n        is_training=False,\n        reuse=True,\n        variables_collections= [UPDATE_OPS_COLLECTION],\n        trainable=True,\n        scope=scope_bn)\n        z = tf.cond(train_phase, lambda: bn_train, lambda: bn_inference)\n        return z\n\nI build batchnorm like this, however, the moving mean and moving variable are updated during test, I can not find the reason.", "body": "@sguada @brando90 \r\n```\r\ndef batch_norm_layer(self, x,train_phase, scope_bn):\r\n        bn_train = batch_norm(x, decay=0.9, center=False, scale=True,\r\n        updates_collections=None,\r\n        is_training=True,\r\n        reuse=None,\r\n        variables_collections= [UPDATE_OPS_COLLECTION],\r\n        trainable=True,\r\n        scope=scope_bn)\r\n        bn_inference = batch_norm(x, decay=0.9, center=False, scale=True,\r\n        updates_collections=None,\r\n        is_training=False,\r\n        reuse=True,\r\n        variables_collections= [UPDATE_OPS_COLLECTION],\r\n        trainable=True,\r\n        scope=scope_bn)\r\n        z = tf.cond(train_phase, lambda: bn_train, lambda: bn_inference)\r\n        return z\r\n```\r\n\r\n\r\nI build batchnorm like this, however, the moving mean and moving variable are updated during test, I can not find the reason."}