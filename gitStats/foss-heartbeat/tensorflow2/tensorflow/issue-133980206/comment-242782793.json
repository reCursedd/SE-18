{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/242782793", "html_url": "https://github.com/tensorflow/tensorflow/issues/1122#issuecomment-242782793", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1122", "id": 242782793, "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mjc4Mjc5Mw==", "user": {"login": "jpiabrantes", "id": 2369107, "node_id": "MDQ6VXNlcjIzNjkxMDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2369107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpiabrantes", "html_url": "https://github.com/jpiabrantes", "followers_url": "https://api.github.com/users/jpiabrantes/followers", "following_url": "https://api.github.com/users/jpiabrantes/following{/other_user}", "gists_url": "https://api.github.com/users/jpiabrantes/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpiabrantes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpiabrantes/subscriptions", "organizations_url": "https://api.github.com/users/jpiabrantes/orgs", "repos_url": "https://api.github.com/users/jpiabrantes/repos", "events_url": "https://api.github.com/users/jpiabrantes/events{/privacy}", "received_events_url": "https://api.github.com/users/jpiabrantes/received_events", "type": "User", "site_admin": false}, "created_at": "2016-08-26T16:25:32Z", "updated_at": "2016-08-27T09:23:14Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1766524\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/sguada\">@sguada</a> I am not understanding the right way of using <code>batch_norm</code> specially concerning the flag <code>updates_collections</code>. If I understood correctly if the flag is <code>None</code> the network is not efficient, so I should let <code>updates_collections=tf.GraphKeys.UPDATE_OPS</code> and then I should collect all the batch_norm updates and run them together.</p>\n<p>You collect the batch_norms updates by doing: <code>update_ops = tf.group(tf.get_collection(tf.GraphKeys.UPDATE_OPS))</code>.</p>\n<p>I have many different models that use different batch_norm layers, this wouldn't work right?:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span>model 1</span>\ny1 <span class=\"pl-k\">=</span> build_model_with_batch_norm(x, is_training)\nupdate_ops1 <span class=\"pl-k\">=</span> tf.group(tf.get_collection(tf.GraphKeys.<span class=\"pl-c1\">UPDATE_OPS</span>))\nsess.run([y1, update_ops1])\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>model 2</span>\ny2 <span class=\"pl-k\">=</span> build_model_with_batch_norm(x, is_training)\nupdate_ops2 <span class=\"pl-k\">=</span> tf.group(tf.get_collection(tf.GraphKeys.<span class=\"pl-c1\">UPDATE_OPS</span>))\nsess.run([y2, update_ops2])</pre></div>\n<p>Could you explain this part with a bit more details? Thank you very much.</p>", "body_text": "@sguada I am not understanding the right way of using batch_norm specially concerning the flag updates_collections. If I understood correctly if the flag is None the network is not efficient, so I should let updates_collections=tf.GraphKeys.UPDATE_OPS and then I should collect all the batch_norm updates and run them together.\nYou collect the batch_norms updates by doing: update_ops = tf.group(tf.get_collection(tf.GraphKeys.UPDATE_OPS)).\nI have many different models that use different batch_norm layers, this wouldn't work right?:\n#model 1\ny1 = build_model_with_batch_norm(x, is_training)\nupdate_ops1 = tf.group(tf.get_collection(tf.GraphKeys.UPDATE_OPS))\nsess.run([y1, update_ops1])\n#model 2\ny2 = build_model_with_batch_norm(x, is_training)\nupdate_ops2 = tf.group(tf.get_collection(tf.GraphKeys.UPDATE_OPS))\nsess.run([y2, update_ops2])\nCould you explain this part with a bit more details? Thank you very much.", "body": "@sguada I am not understanding the right way of using `batch_norm` specially concerning the flag `updates_collections`. If I understood correctly if the flag is `None` the network is not efficient, so I should let `updates_collections=tf.GraphKeys.UPDATE_OPS` and then I should collect all the batch_norm updates and run them together.\n\nYou collect the batch_norms updates by doing: `update_ops = tf.group(tf.get_collection(tf.GraphKeys.UPDATE_OPS))`.\n\nI have many different models that use different batch_norm layers, this wouldn't work right?:\n\n``` python\n#model 1\ny1 = build_model_with_batch_norm(x, is_training)\nupdate_ops1 = tf.group(tf.get_collection(tf.GraphKeys.UPDATE_OPS))\nsess.run([y1, update_ops1])\n#model 2\ny2 = build_model_with_batch_norm(x, is_training)\nupdate_ops2 = tf.group(tf.get_collection(tf.GraphKeys.UPDATE_OPS))\nsess.run([y2, update_ops2])\n```\n\nCould you explain this part with a bit more details? Thank you very much.\n"}