{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11091", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11091/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11091/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11091/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/11091", "id": 238980160, "node_id": "MDU6SXNzdWUyMzg5ODAxNjA=", "number": 11091, "title": "tf.nn.elu: incorrect second derivative", "user": {"login": "anishathalye", "id": 3526486, "node_id": "MDQ6VXNlcjM1MjY0ODY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3526486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anishathalye", "html_url": "https://github.com/anishathalye", "followers_url": "https://api.github.com/users/anishathalye/followers", "following_url": "https://api.github.com/users/anishathalye/following{/other_user}", "gists_url": "https://api.github.com/users/anishathalye/gists{/gist_id}", "starred_url": "https://api.github.com/users/anishathalye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anishathalye/subscriptions", "organizations_url": "https://api.github.com/users/anishathalye/orgs", "repos_url": "https://api.github.com/users/anishathalye/repos", "events_url": "https://api.github.com/users/anishathalye/events{/privacy}", "received_events_url": "https://api.github.com/users/anishathalye/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2017-06-27T20:57:44Z", "updated_at": "2017-07-17T16:05:06Z", "closed_at": "2017-07-17T16:04:54Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 14.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.2.0</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: CUDA 8.0 / cuDNN 6.0</li>\n<li><strong>GPU model and memory</strong>: GTX 1080 Ti 11GB</li>\n<li><strong>Exact command to reproduce</strong>: see below</li>\n</ul>\n<p><code>tf.nn.elu</code> gives incorrect second derivatives:</p>\n<p>Consider the graph <code>y = 2 * elu(-x)</code>.</p>\n<div class=\"highlight highlight-source-python\"><pre>x <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, ())\ny <span class=\"pl-k\">=</span> <span class=\"pl-c1\">2</span> <span class=\"pl-k\">*</span> tf.nn.elu(<span class=\"pl-k\">-</span>x)</pre></div>\n<p>We'll be evaluating at x=1:</p>\n<div class=\"highlight highlight-source-python\"><pre>x_ <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1</span></pre></div>\n<p>We can evaluate first derivatives with automatic differentiation:</p>\n<div class=\"highlight highlight-source-python\"><pre>dy, <span class=\"pl-k\">=</span> tf.gradients(y, x)\ndy.eval({x: x_})\n<span class=\"pl-k\">=</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">-</span><span class=\"pl-c1\">0.7357589</span></pre></div>\n<p>This lines up with the analytic answer: <code>y' = -2e^(-x)</code></p>\n<p>However, for the second derivative:</p>\n<div class=\"highlight highlight-source-python\"><pre>ddy, <span class=\"pl-k\">=</span> tf.gradients(dy, x)\nddy.eval({x: x_})\n<span class=\"pl-k\">=</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0.36787945</span></pre></div>\n<p>Whoops, this doesn't look right! Analytically, the derivative is <code>y'' = 2e^(-x)</code>. Evaluated at <code>x=1</code>, this is <code>0.7357588</code>!</p>\n<h3>Workaround</h3>\n<p>Just in case anyone else needs to work around this until it's fixed:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">elu</span>(<span class=\"pl-smi\">x</span>):\n    <span class=\"pl-k\">return</span> tf.where(x <span class=\"pl-k\">&gt;=</span> <span class=\"pl-c1\">0.0</span>, x, tf.exp(x) <span class=\"pl-k\">-</span> <span class=\"pl-c1\">1</span>)</pre></div>\n<p>Looks like second derivatives work with that.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 14.04\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.2.0\nBazel version (if compiling from source): N/A\nCUDA/cuDNN version: CUDA 8.0 / cuDNN 6.0\nGPU model and memory: GTX 1080 Ti 11GB\nExact command to reproduce: see below\n\ntf.nn.elu gives incorrect second derivatives:\nConsider the graph y = 2 * elu(-x).\nx = tf.placeholder(tf.float32, ())\ny = 2 * tf.nn.elu(-x)\nWe'll be evaluating at x=1:\nx_ = 1\nWe can evaluate first derivatives with automatic differentiation:\ndy, = tf.gradients(y, x)\ndy.eval({x: x_})\n=> -0.7357589\nThis lines up with the analytic answer: y' = -2e^(-x)\nHowever, for the second derivative:\nddy, = tf.gradients(dy, x)\nddy.eval({x: x_})\n=> 0.36787945\nWhoops, this doesn't look right! Analytically, the derivative is y'' = 2e^(-x). Evaluated at x=1, this is 0.7357588!\nWorkaround\nJust in case anyone else needs to work around this until it's fixed:\ndef elu(x):\n    return tf.where(x >= 0.0, x, tf.exp(x) - 1)\nLooks like second derivatives work with that.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 14.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.2.0\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: CUDA 8.0 / cuDNN 6.0\r\n- **GPU model and memory**: GTX 1080 Ti 11GB\r\n- **Exact command to reproduce**: see below\r\n\r\n`tf.nn.elu` gives incorrect second derivatives:\r\n\r\nConsider the graph `y = 2 * elu(-x)`.\r\n\r\n```python\r\nx = tf.placeholder(tf.float32, ())\r\ny = 2 * tf.nn.elu(-x)\r\n```\r\n\r\nWe'll be evaluating at x=1:\r\n\r\n```python\r\nx_ = 1\r\n```\r\n\r\nWe can evaluate first derivatives with automatic differentiation:\r\n\r\n```python\r\ndy, = tf.gradients(y, x)\r\ndy.eval({x: x_})\r\n=> -0.7357589\r\n```\r\n\r\nThis lines up with the analytic answer: `y' = -2e^(-x)`\r\n\r\nHowever, for the second derivative:\r\n\r\n```python\r\nddy, = tf.gradients(dy, x)\r\nddy.eval({x: x_})\r\n=> 0.36787945\r\n```\r\n\r\nWhoops, this doesn't look right! Analytically, the derivative is `y'' = 2e^(-x)`. Evaluated at `x=1`, this is `0.7357588`!\r\n\r\n### Workaround\r\n\r\nJust in case anyone else needs to work around this until it's fixed:\r\n\r\n```python\r\ndef elu(x):\r\n    return tf.where(x >= 0.0, x, tf.exp(x) - 1)\r\n```\r\n\r\nLooks like second derivatives work with that."}