{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/292122739", "html_url": "https://github.com/tensorflow/tensorflow/issues/5985#issuecomment-292122739", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5985", "id": 292122739, "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjEyMjczOQ==", "user": {"login": "vladfi1", "id": 691536, "node_id": "MDQ6VXNlcjY5MTUzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/691536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vladfi1", "html_url": "https://github.com/vladfi1", "followers_url": "https://api.github.com/users/vladfi1/followers", "following_url": "https://api.github.com/users/vladfi1/following{/other_user}", "gists_url": "https://api.github.com/users/vladfi1/gists{/gist_id}", "starred_url": "https://api.github.com/users/vladfi1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vladfi1/subscriptions", "organizations_url": "https://api.github.com/users/vladfi1/orgs", "repos_url": "https://api.github.com/users/vladfi1/repos", "events_url": "https://api.github.com/users/vladfi1/events{/privacy}", "received_events_url": "https://api.github.com/users/vladfi1/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-06T09:42:57Z", "updated_at": "2017-04-06T09:42:57Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=2134563\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ankeshanand\">@ankeshanand</a> I think it might work in 0.10/0.11, but I don't remember for sure. I just ended up writing my own unroller:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">rnn</span>(<span class=\"pl-smi\">cell</span>, <span class=\"pl-smi\">inputs</span>, <span class=\"pl-smi\">initial_state</span>):\n  inputs <span class=\"pl-k\">=</span> tf.unpack(inputs, <span class=\"pl-v\">axis</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>)\n  outputs <span class=\"pl-k\">=</span> []\n  state <span class=\"pl-k\">=</span> initial_state\n  <span class=\"pl-k\">for</span> input_ <span class=\"pl-k\">in</span> inputs:\n    output, state <span class=\"pl-k\">=</span> cell(input_, state)\n    outputs.append(output)\n  outputs <span class=\"pl-k\">=</span> tf.pack(outputs, <span class=\"pl-v\">axis</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>)\n  <span class=\"pl-k\">return</span> outputs, state</pre></div>\n<p>This assumes the time axis is 1. In more recent tensorflow versions, <code>[un]pack</code> has been renamed to <code>[un]stack</code>.</p>", "body_text": "@ankeshanand I think it might work in 0.10/0.11, but I don't remember for sure. I just ended up writing my own unroller:\ndef rnn(cell, inputs, initial_state):\n  inputs = tf.unpack(inputs, axis=1)\n  outputs = []\n  state = initial_state\n  for input_ in inputs:\n    output, state = cell(input_, state)\n    outputs.append(output)\n  outputs = tf.pack(outputs, axis=1)\n  return outputs, state\nThis assumes the time axis is 1. In more recent tensorflow versions, [un]pack has been renamed to [un]stack.", "body": "@ankeshanand I think it might work in 0.10/0.11, but I don't remember for sure. I just ended up writing my own unroller:\r\n\r\n```python\r\ndef rnn(cell, inputs, initial_state):\r\n  inputs = tf.unpack(inputs, axis=1)\r\n  outputs = []\r\n  state = initial_state\r\n  for input_ in inputs:\r\n    output, state = cell(input_, state)\r\n    outputs.append(output)\r\n  outputs = tf.pack(outputs, axis=1)\r\n  return outputs, state\r\n```\r\n\r\nThis assumes the time axis is 1. In more recent tensorflow versions, `[un]pack` has been renamed to `[un]stack`."}