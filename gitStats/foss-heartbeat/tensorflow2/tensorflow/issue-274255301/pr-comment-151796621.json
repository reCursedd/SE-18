{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/151796621", "pull_request_review_id": 77568213, "id": 151796621, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTc5NjYyMQ==", "diff_hunk": "@@ -118,52 +113,51 @@ - (UIImage *)fixrotation:(UIImage *)image{\n     \n     // Now we draw the underlying CGImage into a new context, applying the transform\n     // calculated above.\n-    CGContextRef ctx = CGBitmapContextCreate(NULL, (size_t) image.size.width, (size_t) image.size.height,\n+    CGContextRef ctx = CGBitmapContextCreate(NULL, (size_t)image.size.width, (size_t) image.size.height,\n                                              CGImageGetBitsPerComponent(image.CGImage), 0,\n                                              CGImageGetColorSpace(image.CGImage),\n                                              CGImageGetBitmapInfo(image.CGImage));\n     CGContextConcatCTM(ctx, transform);\n+    CGRect rect;\n     switch (image.imageOrientation) {\n         case UIImageOrientationLeft:\n         case UIImageOrientationLeftMirrored:\n         case UIImageOrientationRight:\n         case UIImageOrientationRightMirrored:\n-            // Grr...\n-            CGContextDrawImage(ctx, CGRectMake(0,0,image.size.height,image.size.width), image.CGImage);\n+            rect = CGRectMake(0,0,image.size.height,image.size.width);\n             break;\n-            \n         default:\n-            CGContextDrawImage(ctx, CGRectMake(0,0,image.size.width,image.size.height), image.CGImage);\n+            rect = CGRectMake(0,0,image.size.width,image.size.height);\n             break;\n     }\n+    CGContextDrawImage(ctx, rect, image.CGImage);\n     \n     // And now we just create a new UIImage from the drawing context\n     CGImageRef cgimg = CGBitmapContextCreateImage(ctx);\n     UIImage *img = [UIImage imageWithCGImage:cgimg];\n     CGContextRelease(ctx);\n     CGImageRelease(cgimg);\n     return img;\n-    \n }\n \n--(NSString*) filePathForResourceName:(NSString*) name withExtension:(NSString*) extension {\n+- (NSString*)filePathForResourceName:(NSString*)name withExtension:(NSString*)extension {\n     NSString* file_path = [[NSBundle mainBundle] pathForResource:name ofType:extension];\n-    if (file_path == NULL) {\n+    if (!file_path) {\n         LOG(FATAL) << \"Couldn't find '\" << [name UTF8String] << \".\"\n         << [extension UTF8String] << \"' in bundle.\";\n     }\n     return file_path;\n }\n \n--(NSString*) runInferenceOnImage:(UIImage *) image {\n+- (NSString*)runInferenceOnImage:(UIImage *)image {\n     std::string graph;\n     const int num_threads = 1;\n     std::string input_layer_type = \"float\";\n     std::vector<int> sizes = {1, 224, 224, 3};\n     \n     NSString* graph_path = [self filePathForResourceName:@\"mobilenet_v1_1.0_224\" withExtension: @\"tflite\"];\n     \n-    std::unique_ptr<tflite::FlatBufferModel> model(tflite::FlatBufferModel::BuildFromFile([graph_path UTF8String]));\n+    std::unique_ptr<tflite::FlatBufferModel> model(tflite::FlatBufferModel::BuildFromFile([graph_path fileSystemRepresentation]));\n     if (!model) {\n         LOG(FATAL) << \"Failed to mmap model \" << graph;", "path": "tensorflow/contrib/lite/examples/ios/simple/RunModelViewController.mm", "position": null, "original_position": 101, "commit_id": "0027f6bad02d840afe9c9e6e8f4ce23668b91070", "original_commit_id": "603d559332b585f63c603bd61612315ea4cfc914", "user": {"login": "dmaclach", "id": 320201, "node_id": "MDQ6VXNlcjMyMDIwMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/320201?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmaclach", "html_url": "https://github.com/dmaclach", "followers_url": "https://api.github.com/users/dmaclach/followers", "following_url": "https://api.github.com/users/dmaclach/following{/other_user}", "gists_url": "https://api.github.com/users/dmaclach/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmaclach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmaclach/subscriptions", "organizations_url": "https://api.github.com/users/dmaclach/orgs", "repos_url": "https://api.github.com/users/dmaclach/repos", "events_url": "https://api.github.com/users/dmaclach/events{/privacy}", "received_events_url": "https://api.github.com/users/dmaclach/received_events", "type": "User", "site_admin": false}, "body": "Use an NSAssert here... as it is, graph is going to be useless info.. you probably want graph_path.", "created_at": "2017-11-17T21:45:08Z", "updated_at": "2018-07-31T08:30:25Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/14592#discussion_r151796621", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14592", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/151796621"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/14592#discussion_r151796621"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14592"}}, "body_html": "<p>Use an NSAssert here... as it is, graph is going to be useless info.. you probably want graph_path.</p>", "body_text": "Use an NSAssert here... as it is, graph is going to be useless info.. you probably want graph_path."}