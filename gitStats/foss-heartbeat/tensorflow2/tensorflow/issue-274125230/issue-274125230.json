{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14583", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14583/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14583/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14583/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14583", "id": 274125230, "node_id": "MDU6SXNzdWUyNzQxMjUyMzA=", "number": 14583, "title": "contrib.slim.conv2d doesn't check input dimension", "user": {"login": "Linusnie", "id": 12471058, "node_id": "MDQ6VXNlcjEyNDcxMDU4", "avatar_url": "https://avatars1.githubusercontent.com/u/12471058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Linusnie", "html_url": "https://github.com/Linusnie", "followers_url": "https://api.github.com/users/Linusnie/followers", "following_url": "https://api.github.com/users/Linusnie/following{/other_user}", "gists_url": "https://api.github.com/users/Linusnie/gists{/gist_id}", "starred_url": "https://api.github.com/users/Linusnie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Linusnie/subscriptions", "organizations_url": "https://api.github.com/users/Linusnie/orgs", "repos_url": "https://api.github.com/users/Linusnie/repos", "events_url": "https://api.github.com/users/Linusnie/events{/privacy}", "received_events_url": "https://api.github.com/users/Linusnie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2017-11-15T11:36:10Z", "updated_at": "2018-04-12T01:26:12Z", "closed_at": "2018-04-12T01:26:12Z", "author_association": "NONE", "body_html": "<p>tensorflow version: v1.4.0-rc1-11-g130a514 (installed from pip)</p>\n<p>contrib.slim.conv2d doesn't check for input dimensionality. So if you give it a 5D tensor it instead performs a 3D convolution.</p>\n<p>Here is a quick way to see this:</p>\n<pre><code>sess = tf.InteractiveSession()\n\nimage_ph = tf.placeholder(tf.float32,\n                          shape=(None, None, 10, 10),\n                          name='image')\nimage = tf.expand_dims(image_ph, -1)\nconv = tf.contrib.slim.conv2d(image, 3, 3, padding=\"VALID\")\n\nsess.run(tf.global_variables_initializer())\nconv_out = conv.eval({image_ph: np.random.random((16, 20, 10, 10))})\n</code></pre>\n<p>conv_out will have shape <code>[16, 18, 8, 8, 3]</code>, meaning that the time dimension (dim 1) has decreased due to the VALID padding.</p>\n<p>As a side note I think it would be convenient if all conv2d implementations let you specify which dimensions to act on (or acted on the last 3 dims of the input by default). This is useful for example if you have sequential data and want to apply a 2d convolution to each frame independently.</p>", "body_text": "tensorflow version: v1.4.0-rc1-11-g130a514 (installed from pip)\ncontrib.slim.conv2d doesn't check for input dimensionality. So if you give it a 5D tensor it instead performs a 3D convolution.\nHere is a quick way to see this:\nsess = tf.InteractiveSession()\n\nimage_ph = tf.placeholder(tf.float32,\n                          shape=(None, None, 10, 10),\n                          name='image')\nimage = tf.expand_dims(image_ph, -1)\nconv = tf.contrib.slim.conv2d(image, 3, 3, padding=\"VALID\")\n\nsess.run(tf.global_variables_initializer())\nconv_out = conv.eval({image_ph: np.random.random((16, 20, 10, 10))})\n\nconv_out will have shape [16, 18, 8, 8, 3], meaning that the time dimension (dim 1) has decreased due to the VALID padding.\nAs a side note I think it would be convenient if all conv2d implementations let you specify which dimensions to act on (or acted on the last 3 dims of the input by default). This is useful for example if you have sequential data and want to apply a 2d convolution to each frame independently.", "body": "tensorflow version: v1.4.0-rc1-11-g130a514 (installed from pip)\r\n\r\ncontrib.slim.conv2d doesn't check for input dimensionality. So if you give it a 5D tensor it instead performs a 3D convolution.\r\n\r\nHere is a quick way to see this:\r\n```\r\nsess = tf.InteractiveSession()\r\n\r\nimage_ph = tf.placeholder(tf.float32,\r\n                          shape=(None, None, 10, 10),\r\n                          name='image')\r\nimage = tf.expand_dims(image_ph, -1)\r\nconv = tf.contrib.slim.conv2d(image, 3, 3, padding=\"VALID\")\r\n\r\nsess.run(tf.global_variables_initializer())\r\nconv_out = conv.eval({image_ph: np.random.random((16, 20, 10, 10))})\r\n```\r\n\r\nconv_out will have shape `[16, 18, 8, 8, 3]`, meaning that the time dimension (dim 1) has decreased due to the VALID padding. \r\n\r\nAs a side note I think it would be convenient if all conv2d implementations let you specify which dimensions to act on (or acted on the last 3 dims of the input by default). This is useful for example if you have sequential data and want to apply a 2d convolution to each frame independently.  "}