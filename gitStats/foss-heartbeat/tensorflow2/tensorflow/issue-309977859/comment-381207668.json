{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/381207668", "html_url": "https://github.com/tensorflow/tensorflow/issues/18111#issuecomment-381207668", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18111", "id": 381207668, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTIwNzY2OA==", "user": {"login": "erickrf", "id": 294483, "node_id": "MDQ6VXNlcjI5NDQ4Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/294483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickrf", "html_url": "https://github.com/erickrf", "followers_url": "https://api.github.com/users/erickrf/followers", "following_url": "https://api.github.com/users/erickrf/following{/other_user}", "gists_url": "https://api.github.com/users/erickrf/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickrf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickrf/subscriptions", "organizations_url": "https://api.github.com/users/erickrf/orgs", "repos_url": "https://api.github.com/users/erickrf/repos", "events_url": "https://api.github.com/users/erickrf/events{/privacy}", "received_events_url": "https://api.github.com/users/erickrf/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-13T17:33:50Z", "updated_at": "2018-04-13T17:33:50Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=38073972\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/stefanievonk\">@stefanievonk</a> you can create a logging filter. A bit cumbersome but it gets the job done:</p>\n<pre><code>import logging\n\nclass WarningFilter(logging.Filter):\n    def filter(self, record):\n        msg = record.getMessage()\n        tf_warning = 'retry (from tensorflow.contrib.learn.python.learn.datasets.base)' in msg\n        return not tf_warning\n            \nlogger = logging.getLogger('tensorflow')\nlogger.addFilter(WarningFilter())\n</code></pre>", "body_text": "@stefanievonk you can create a logging filter. A bit cumbersome but it gets the job done:\nimport logging\n\nclass WarningFilter(logging.Filter):\n    def filter(self, record):\n        msg = record.getMessage()\n        tf_warning = 'retry (from tensorflow.contrib.learn.python.learn.datasets.base)' in msg\n        return not tf_warning\n            \nlogger = logging.getLogger('tensorflow')\nlogger.addFilter(WarningFilter())", "body": "@stefanievonk you can create a logging filter. A bit cumbersome but it gets the job done:\r\n\r\n```\r\nimport logging\r\n\r\nclass WarningFilter(logging.Filter):\r\n    def filter(self, record):\r\n        msg = record.getMessage()\r\n        tf_warning = 'retry (from tensorflow.contrib.learn.python.learn.datasets.base)' in msg\r\n        return not tf_warning\r\n            \r\nlogger = logging.getLogger('tensorflow')\r\nlogger.addFilter(WarningFilter())\r\n```\r\n"}