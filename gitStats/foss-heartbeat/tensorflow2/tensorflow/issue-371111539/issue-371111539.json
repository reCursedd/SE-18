{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23045", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23045/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23045/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23045/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23045", "id": 371111539, "node_id": "MDU6SXNzdWUzNzExMTE1Mzk=", "number": 23045, "title": "tf.contrib.layers.layer_norm fails in tf.estimator.train_and_evaluate() if drop_remainder==False", "user": {"login": "dopexxx", "id": 15703818, "node_id": "MDQ6VXNlcjE1NzAzODE4", "avatar_url": "https://avatars0.githubusercontent.com/u/15703818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dopexxx", "html_url": "https://github.com/dopexxx", "followers_url": "https://api.github.com/users/dopexxx/followers", "following_url": "https://api.github.com/users/dopexxx/following{/other_user}", "gists_url": "https://api.github.com/users/dopexxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/dopexxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dopexxx/subscriptions", "organizations_url": "https://api.github.com/users/dopexxx/orgs", "repos_url": "https://api.github.com/users/dopexxx/repos", "events_url": "https://api.github.com/users/dopexxx/events{/privacy}", "received_events_url": "https://api.github.com/users/dopexxx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097545817, "node_id": "MDU6TGFiZWwxMDk3NTQ1ODE3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:apis", "name": "comp:apis", "color": "0052cc", "default": false}, {"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "harshini-gadige", "id": 42781361, "node_id": "MDQ6VXNlcjQyNzgxMzYx", "avatar_url": "https://avatars1.githubusercontent.com/u/42781361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harshini-gadige", "html_url": "https://github.com/harshini-gadige", "followers_url": "https://api.github.com/users/harshini-gadige/followers", "following_url": "https://api.github.com/users/harshini-gadige/following{/other_user}", "gists_url": "https://api.github.com/users/harshini-gadige/gists{/gist_id}", "starred_url": "https://api.github.com/users/harshini-gadige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harshini-gadige/subscriptions", "organizations_url": "https://api.github.com/users/harshini-gadige/orgs", "repos_url": "https://api.github.com/users/harshini-gadige/repos", "events_url": "https://api.github.com/users/harshini-gadige/events{/privacy}", "received_events_url": "https://api.github.com/users/harshini-gadige/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "harshini-gadige", "id": 42781361, "node_id": "MDQ6VXNlcjQyNzgxMzYx", "avatar_url": "https://avatars1.githubusercontent.com/u/42781361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harshini-gadige", "html_url": "https://github.com/harshini-gadige", "followers_url": "https://api.github.com/users/harshini-gadige/followers", "following_url": "https://api.github.com/users/harshini-gadige/following{/other_user}", "gists_url": "https://api.github.com/users/harshini-gadige/gists{/gist_id}", "starred_url": "https://api.github.com/users/harshini-gadige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harshini-gadige/subscriptions", "organizations_url": "https://api.github.com/users/harshini-gadige/orgs", "repos_url": "https://api.github.com/users/harshini-gadige/repos", "events_url": "https://api.github.com/users/harshini-gadige/events{/privacy}", "received_events_url": "https://api.github.com/users/harshini-gadige/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-10-17T14:38:35Z", "updated_at": "2018-10-30T22:44:04Z", "closed_at": "2018-10-30T22:44:04Z", "author_association": "NONE", "body_html": "<p>Please go to Stack Overflow for help and support:</p>\n<p><a href=\"https://stackoverflow.com/questions/tagged/tensorflow\" rel=\"nofollow\">https://stackoverflow.com/questions/tagged/tensorflow</a></p>\n<p>If you open a GitHub issue, here is our policy:</p>\n<ol>\n<li>It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).</li>\n<li>The form below must be filled out.</li>\n<li>It shouldn't be a TensorBoard issue. Those go <a href=\"https://github.com/tensorflow/tensorboard/issues\">here</a>.</li>\n</ol>\n<p><strong>Here's why we have that policy</strong>: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.</p>\n<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Red Hat Enterprise Linux 7.5,</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>:</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: unknown</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.8.0</li>\n<li><strong>Python version</strong>: 3.5.4+</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.15.2- (@non-git)</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: 6.4.1</li>\n<li><strong>CUDA/cuDNN version</strong>: V9.2.148</li>\n<li><strong>GPU model and memory</strong>: None</li>\n<li><strong>Exact command to reproduce</strong>: None</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I have a model using  <code>tf.contrib.layers.layer_norm</code> that runs fine throughout training but fails as soon as evaluation starts with the error displayed below (the input to  <code>tf.contrib.layers.layer_norm</code> has undefined rank). I suspect this to arise as soon as tensorflow uses a dynamic batch size during evaluation, at least when I set <code>drop_remainder==True</code> the problem disappears. The exact line of code causing the error is:<br>\n<code>output = tf.contrib.layers.layer_norm( tf.add(first_sublayer, pos_layer_2) )</code><br>\nAny help/hints/ideas?</p>\n<h3>Source code / logs</h3>\n<p><code> tf.add(first_sublayer, pos_layer_2) File \"/hpc_modules/at10.0-based/deeplearning/tensorflow/tensorflow-v1.8.0_openmpi-3.1.2/lib64/python3.5/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 183, in func_with_args return func(*args, **current_args) File \"/hpc_modules/at10.0-based/deeplearning/tensorflow/tensorflow-v1.8.0_openmpi-3.1.2/lib64/python3.5/site-packages/tensorflow/contrib/layers/python/layers/layers.py\", line 2135, in layer_norm raise ValueError('Inputs %s has undefined rank.' % inputs.name) ValueError: Inputs smiles_attention/Add_1:0 has undefined rank.</code></p>", "body_text": "Please go to Stack Overflow for help and support:\nhttps://stackoverflow.com/questions/tagged/tensorflow\nIf you open a GitHub issue, here is our policy:\n\nIt must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\nThe form below must be filled out.\nIt shouldn't be a TensorBoard issue. Those go here.\n\nHere's why we have that policy: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\n\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Red Hat Enterprise Linux 7.5,\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:\nTensorFlow installed from (source or binary): unknown\nTensorFlow version (use command below): 1.8.0\nPython version: 3.5.4+\nBazel version (if compiling from source): 0.15.2- (@non-git)\nGCC/Compiler version (if compiling from source): 6.4.1\nCUDA/cuDNN version: V9.2.148\nGPU model and memory: None\nExact command to reproduce: None\n\nDescribe the problem\nI have a model using  tf.contrib.layers.layer_norm that runs fine throughout training but fails as soon as evaluation starts with the error displayed below (the input to  tf.contrib.layers.layer_norm has undefined rank). I suspect this to arise as soon as tensorflow uses a dynamic batch size during evaluation, at least when I set drop_remainder==True the problem disappears. The exact line of code causing the error is:\noutput = tf.contrib.layers.layer_norm( tf.add(first_sublayer, pos_layer_2) )\nAny help/hints/ideas?\nSource code / logs\n tf.add(first_sublayer, pos_layer_2) File \"/hpc_modules/at10.0-based/deeplearning/tensorflow/tensorflow-v1.8.0_openmpi-3.1.2/lib64/python3.5/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 183, in func_with_args return func(*args, **current_args) File \"/hpc_modules/at10.0-based/deeplearning/tensorflow/tensorflow-v1.8.0_openmpi-3.1.2/lib64/python3.5/site-packages/tensorflow/contrib/layers/python/layers/layers.py\", line 2135, in layer_norm raise ValueError('Inputs %s has undefined rank.' % inputs.name) ValueError: Inputs smiles_attention/Add_1:0 has undefined rank.", "body": "Please go to Stack Overflow for help and support:\r\n\r\nhttps://stackoverflow.com/questions/tagged/tensorflow\r\n\r\nIf you open a GitHub issue, here is our policy:\r\n\r\n1. It must be a bug, a feature request, or a significant problem with documentation (for small docs fixes please send a PR instead).\r\n2. The form below must be filled out.\r\n3. It shouldn't be a TensorBoard issue. Those go [here](https://github.com/tensorflow/tensorboard/issues).\r\n\r\n**Here's why we have that policy**: TensorFlow developers respond to issues. We want to focus on work that benefits the whole community, e.g., fixing bugs and adding features. Support only helps individuals. GitHub also notifies thousands of people when issues are filed. We want them to see you communicating an interesting problem, rather than being redirected to Stack Overflow.\r\n\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes \r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Red Hat Enterprise Linux 7.5, \r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**:\r\n- **TensorFlow installed from (source or binary)**: unknown\r\n- **TensorFlow version (use command below)**: 1.8.0\r\n- **Python version**: 3.5.4+\r\n- **Bazel version (if compiling from source)**: 0.15.2- (@non-git)\r\n- **GCC/Compiler version (if compiling from source)**: 6.4.1\r\n- **CUDA/cuDNN version**: V9.2.148\r\n- **GPU model and memory**: None\r\n- **Exact command to reproduce**: None\r\n\r\n\r\n### Describe the problem\r\nI have a model using  `tf.contrib.layers.layer_norm` that runs fine throughout training but fails as soon as evaluation starts with the error displayed below (the input to  `tf.contrib.layers.layer_norm` has undefined rank). I suspect this to arise as soon as tensorflow uses a dynamic batch size during evaluation, at least when I set `drop_remainder==True` the problem disappears. The exact line of code causing the error is:\r\n`output = tf.contrib.layers.layer_norm(\r\n            tf.add(first_sublayer, pos_layer_2)\r\n        )`\r\nAny help/hints/ideas?\r\n\r\n### Source code / logs\r\n`  tf.add(first_sublayer, pos_layer_2)\r\n  File \"/hpc_modules/at10.0-based/deeplearning/tensorflow/tensorflow-v1.8.0_openmpi-3.1.2/lib64/python3.5/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 183, in func_with_args\r\n    return func(*args, **current_args)\r\n  File \"/hpc_modules/at10.0-based/deeplearning/tensorflow/tensorflow-v1.8.0_openmpi-3.1.2/lib64/python3.5/site-packages/tensorflow/contrib/layers/python/layers/layers.py\", line 2135, in layer_norm\r\n    raise ValueError('Inputs %s has undefined rank.' % inputs.name)\r\nValueError: Inputs smiles_attention/Add_1:0 has undefined rank.\r\n`\r\n"}