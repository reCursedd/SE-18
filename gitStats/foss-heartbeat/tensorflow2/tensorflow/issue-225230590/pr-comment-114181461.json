{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/114181461", "pull_request_review_id": 35627050, "id": 114181461, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNDE4MTQ2MQ==", "diff_hunk": "@@ -273,28 +273,28 @@ def _VerifyGeneratedGradients(grads, op):\n   if len(grads) != len(op.inputs):\n     raise ValueError(\"Num gradients %d generated for op %s do not match num \"\n                      \"inputs %d\" % (len(grads), op.node_def, len(op.inputs)))\n-    for i in xrange(len(grads)):\n-      grad = grads[i]\n-      inp = op.inputs[i]\n-      if grad is None:\n-        continue\n-      if grad.dtype.is_floating:\n-        if not inp.dtype.is_floating:\n-          raise TypeError(\"Gradient type %s generated for real-valued op %s \"\n-                           \"with type %s must be real\" %\n-                           (dtypes.as_dtype(grad.dtype).name, op.node_def,\n-                            dtypes.as_dtype(inp.dtype).name))\n-      elif grad.dtype.is_complex:\n-        if not inp.dtype.is_complex:\n-          raise TypeError(\"Gradient type %s generated for complex-valued op %s\"\n-                           \" with type %s must be complex\" %\n-                           (dtypes.as_dtype(grad.dtype).name, op.node_def,\n-                            dtypes.as_dtype(inp.dtype).name))\n-      else:\n-        raise TypeError(\"Gradient type %s generated for op %s \"\n-                         \"with type %s must be either real or complex\" %\n-                         (dtypes.as_dtype(grad.dtype).name, op.node_def,\n-                          dtypes.as_dtype(inp.dtype).name))\n+  for i in xrange(len(grads)):", "path": "tensorflow/python/ops/gradients_impl.py", "position": null, "original_position": 26, "commit_id": "b94472779efa29abf4eac8d1a1866ca97be44d39", "original_commit_id": "7919505ecca5a0e94a0a5eaf40818a7696cca075", "user": {"login": "vrv", "id": 463737, "node_id": "MDQ6VXNlcjQ2MzczNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/463737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrv", "html_url": "https://github.com/vrv", "followers_url": "https://api.github.com/users/vrv/followers", "following_url": "https://api.github.com/users/vrv/following{/other_user}", "gists_url": "https://api.github.com/users/vrv/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrv/subscriptions", "organizations_url": "https://api.github.com/users/vrv/orgs", "repos_url": "https://api.github.com/users/vrv/repos", "events_url": "https://api.github.com/users/vrv/events{/privacy}", "received_events_url": "https://api.github.com/users/vrv/received_events", "type": "User", "site_admin": false}, "body": "Whoa, this was bad, thank you for finding this.\r\n\r\nThe fact that no tests failed means that there's no test that exercises this.  Can you conceive of a test in the gradients_test.py file that would have exercised this code?  Thank you!", "created_at": "2017-05-01T19:18:46Z", "updated_at": "2017-05-07T19:09:17Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/9529#discussion_r114181461", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9529", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/114181461"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/9529#discussion_r114181461"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9529"}}, "body_html": "<p>Whoa, this was bad, thank you for finding this.</p>\n<p>The fact that no tests failed means that there's no test that exercises this.  Can you conceive of a test in the gradients_test.py file that would have exercised this code?  Thank you!</p>", "body_text": "Whoa, this was bad, thank you for finding this.\nThe fact that no tests failed means that there's no test that exercises this.  Can you conceive of a test in the gradients_test.py file that would have exercised this code?  Thank you!"}