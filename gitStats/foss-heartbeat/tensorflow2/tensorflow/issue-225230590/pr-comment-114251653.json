{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/114251653", "pull_request_review_id": 35700969, "id": 114251653, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNDI1MTY1Mw==", "diff_hunk": "@@ -273,28 +273,28 @@ def _VerifyGeneratedGradients(grads, op):\n   if len(grads) != len(op.inputs):\n     raise ValueError(\"Num gradients %d generated for op %s do not match num \"\n                      \"inputs %d\" % (len(grads), op.node_def, len(op.inputs)))\n-    for i in xrange(len(grads)):\n-      grad = grads[i]\n-      inp = op.inputs[i]\n-      if grad is None:\n-        continue\n-      if grad.dtype.is_floating:\n-        if not inp.dtype.is_floating:\n-          raise TypeError(\"Gradient type %s generated for real-valued op %s \"\n-                           \"with type %s must be real\" %\n-                           (dtypes.as_dtype(grad.dtype).name, op.node_def,\n-                            dtypes.as_dtype(inp.dtype).name))\n-      elif grad.dtype.is_complex:\n-        if not inp.dtype.is_complex:\n-          raise TypeError(\"Gradient type %s generated for complex-valued op %s\"\n-                           \" with type %s must be complex\" %\n-                           (dtypes.as_dtype(grad.dtype).name, op.node_def,\n-                            dtypes.as_dtype(inp.dtype).name))\n-      else:\n-        raise TypeError(\"Gradient type %s generated for op %s \"\n-                         \"with type %s must be either real or complex\" %\n-                         (dtypes.as_dtype(grad.dtype).name, op.node_def,\n-                          dtypes.as_dtype(inp.dtype).name))\n+  for i in xrange(len(grads)):", "path": "tensorflow/python/ops/gradients_impl.py", "position": null, "original_position": 26, "commit_id": "b94472779efa29abf4eac8d1a1866ca97be44d39", "original_commit_id": "7919505ecca5a0e94a0a5eaf40818a7696cca075", "user": {"login": "YuMS", "id": 2035734, "node_id": "MDQ6VXNlcjIwMzU3MzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2035734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YuMS", "html_url": "https://github.com/YuMS", "followers_url": "https://api.github.com/users/YuMS/followers", "following_url": "https://api.github.com/users/YuMS/following{/other_user}", "gists_url": "https://api.github.com/users/YuMS/gists{/gist_id}", "starred_url": "https://api.github.com/users/YuMS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YuMS/subscriptions", "organizations_url": "https://api.github.com/users/YuMS/orgs", "repos_url": "https://api.github.com/users/YuMS/repos", "events_url": "https://api.github.com/users/YuMS/events{/privacy}", "received_events_url": "https://api.github.com/users/YuMS/received_events", "type": "User", "site_admin": false}, "body": "I'd like to, when your final call is to keep these line.", "created_at": "2017-05-02T05:44:29Z", "updated_at": "2017-05-07T19:09:17Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/9529#discussion_r114251653", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9529", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/114251653"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/9529#discussion_r114251653"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9529"}}, "body_html": "<p>I'd like to, when your final call is to keep these line.</p>", "body_text": "I'd like to, when your final call is to keep these line.", "in_reply_to_id": 114181461}