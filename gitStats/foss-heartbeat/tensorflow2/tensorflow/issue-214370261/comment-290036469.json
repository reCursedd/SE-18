{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/290036469", "html_url": "https://github.com/tensorflow/tensorflow/issues/8431#issuecomment-290036469", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8431", "id": 290036469, "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDAzNjQ2OQ==", "user": {"login": "AndreasMadsen", "id": 505333, "node_id": "MDQ6VXNlcjUwNTMzMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/505333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreasMadsen", "html_url": "https://github.com/AndreasMadsen", "followers_url": "https://api.github.com/users/AndreasMadsen/followers", "following_url": "https://api.github.com/users/AndreasMadsen/following{/other_user}", "gists_url": "https://api.github.com/users/AndreasMadsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreasMadsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreasMadsen/subscriptions", "organizations_url": "https://api.github.com/users/AndreasMadsen/orgs", "repos_url": "https://api.github.com/users/AndreasMadsen/repos", "events_url": "https://api.github.com/users/AndreasMadsen/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreasMadsen/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-29T09:34:14Z", "updated_at": "2017-03-29T10:07:37Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I have very little experience with CuDNN, but is it possible that dilation is already supported?</p>\n<p><strong>in <code>5.1/include/cudnn.h</code></strong></p>\n<div class=\"highlight highlight-source-c\"><pre>cudnnStatus_t CUDNNWINAPI <span class=\"pl-en\">cudnnSetConvolution2dDescriptor_v5</span>( cudnnConvolutionDescriptor_t convDesc,\n                                                             <span class=\"pl-k\">int</span> pad_h,    <span class=\"pl-c\"><span class=\"pl-c\">//</span> zero-padding height</span>\n                                                             <span class=\"pl-k\">int</span> pad_w,    <span class=\"pl-c\"><span class=\"pl-c\">//</span> zero-padding width</span>\n                                                             <span class=\"pl-k\">int</span> u,   <span class=\"pl-c\"><span class=\"pl-c\">//</span> vertical filter stride</span>\n                                                             <span class=\"pl-k\">int</span> v,   <span class=\"pl-c\"><span class=\"pl-c\">//</span> horizontal filter stride</span>\n                                                             <span class=\"pl-k\">int</span> upscalex, <span class=\"pl-c\"><span class=\"pl-c\">//</span> upscale the input in x-direction</span>\n                                                             <span class=\"pl-k\">int</span> upscaley, <span class=\"pl-c\"><span class=\"pl-c\">//</span> upscale the input in y-direction</span>\n                                                             cudnnConvolutionMode_t mode,\n                                                             cudnnDataType_t dataType\n                                                           );</pre></div>\n<p><code>upscalex</code> kinda sounds like another word for dilation and in cuDNN v6 RC (<a href=\"http://blog.yannisassael.com/2017/02/cudnn-v6-0-rc/\" rel=\"nofollow\">http://blog.yannisassael.com/2017/02/cudnn-v6-0-rc/</a>) it appears to have been renamed to <code>dilation_h</code>.</p>\n<p><strong>in <code>6.0/include/cudnn.h</code></strong></p>\n<div class=\"highlight highlight-source-c\"><pre>cudnnStatus_t CUDNNWINAPI <span class=\"pl-en\">cudnnGetConvolution2dDescriptor_v5</span>(  <span class=\"pl-k\">const</span> cudnnConvolutionDescriptor_t convDesc,\n                                                            <span class=\"pl-k\">int</span>* pad_h,    <span class=\"pl-c\"><span class=\"pl-c\">//</span> zero-padding height</span>\n                                                            <span class=\"pl-k\">int</span>* pad_w,    <span class=\"pl-c\"><span class=\"pl-c\">//</span> zero-padding width</span>\n                                                            <span class=\"pl-k\">int</span>* u,        <span class=\"pl-c\"><span class=\"pl-c\">//</span> vertical filter stride</span>\n                                                            <span class=\"pl-k\">int</span>* v,        <span class=\"pl-c\"><span class=\"pl-c\">//</span> horizontal filter stride</span>\n                                                            <span class=\"pl-k\">int</span>* dilation_h, <span class=\"pl-c\"><span class=\"pl-c\">//</span> filter dilation in the vertical dimension</span>\n                                                            <span class=\"pl-k\">int</span>* dilation_w, <span class=\"pl-c\"><span class=\"pl-c\">//</span> filter dilation in the horizontal dimension</span>\n                                                            cudnnConvolutionMode_t* mode,\n                                                            cudnnDataType_t *computeType\n                                                         );</pre></div>\n<p>edit: currently <code>upscale</code> is just set to 1, which would correspond to no dilation: <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/stream_executor/cuda/cuda_dnn.cc#L545\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/stream_executor/cuda/cuda_dnn.cc#L545</a></p>", "body_text": "I have very little experience with CuDNN, but is it possible that dilation is already supported?\nin 5.1/include/cudnn.h\ncudnnStatus_t CUDNNWINAPI cudnnSetConvolution2dDescriptor_v5( cudnnConvolutionDescriptor_t convDesc,\n                                                             int pad_h,    // zero-padding height\n                                                             int pad_w,    // zero-padding width\n                                                             int u,   // vertical filter stride\n                                                             int v,   // horizontal filter stride\n                                                             int upscalex, // upscale the input in x-direction\n                                                             int upscaley, // upscale the input in y-direction\n                                                             cudnnConvolutionMode_t mode,\n                                                             cudnnDataType_t dataType\n                                                           );\nupscalex kinda sounds like another word for dilation and in cuDNN v6 RC (http://blog.yannisassael.com/2017/02/cudnn-v6-0-rc/) it appears to have been renamed to dilation_h.\nin 6.0/include/cudnn.h\ncudnnStatus_t CUDNNWINAPI cudnnGetConvolution2dDescriptor_v5(  const cudnnConvolutionDescriptor_t convDesc,\n                                                            int* pad_h,    // zero-padding height\n                                                            int* pad_w,    // zero-padding width\n                                                            int* u,        // vertical filter stride\n                                                            int* v,        // horizontal filter stride\n                                                            int* dilation_h, // filter dilation in the vertical dimension\n                                                            int* dilation_w, // filter dilation in the horizontal dimension\n                                                            cudnnConvolutionMode_t* mode,\n                                                            cudnnDataType_t *computeType\n                                                         );\nedit: currently upscale is just set to 1, which would correspond to no dilation: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/stream_executor/cuda/cuda_dnn.cc#L545", "body": "I have very little experience with CuDNN, but is it possible that dilation is already supported?\r\n\r\n**in `5.1/include/cudnn.h`**\r\n\r\n```h\r\ncudnnStatus_t CUDNNWINAPI cudnnSetConvolution2dDescriptor_v5( cudnnConvolutionDescriptor_t convDesc,\r\n                                                             int pad_h,    // zero-padding height\r\n                                                             int pad_w,    // zero-padding width\r\n                                                             int u,   // vertical filter stride\r\n                                                             int v,   // horizontal filter stride\r\n                                                             int upscalex, // upscale the input in x-direction\r\n                                                             int upscaley, // upscale the input in y-direction\r\n                                                             cudnnConvolutionMode_t mode,\r\n                                                             cudnnDataType_t dataType\r\n                                                           );\r\n```\r\n\r\n`upscalex` kinda sounds like another word for dilation and in cuDNN v6 RC (http://blog.yannisassael.com/2017/02/cudnn-v6-0-rc/) it appears to have been renamed to `dilation_h`.\r\n\r\n**in `6.0/include/cudnn.h`**\r\n\r\n```h\r\ncudnnStatus_t CUDNNWINAPI cudnnGetConvolution2dDescriptor_v5(  const cudnnConvolutionDescriptor_t convDesc,\r\n                                                            int* pad_h,    // zero-padding height\r\n                                                            int* pad_w,    // zero-padding width\r\n                                                            int* u,        // vertical filter stride\r\n                                                            int* v,        // horizontal filter stride\r\n                                                            int* dilation_h, // filter dilation in the vertical dimension\r\n                                                            int* dilation_w, // filter dilation in the horizontal dimension\r\n                                                            cudnnConvolutionMode_t* mode,\r\n                                                            cudnnDataType_t *computeType\r\n                                                         );\r\n```\r\n\r\nedit: currently `upscale` is just set to 1, which would correspond to no dilation: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/stream_executor/cuda/cuda_dnn.cc#L545"}