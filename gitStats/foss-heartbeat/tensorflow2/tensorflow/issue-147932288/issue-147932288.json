{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1899", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1899/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1899/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1899/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/1899", "id": 147932288, "node_id": "MDU6SXNzdWUxNDc5MzIyODg=", "number": 1899, "title": "partial_run won't accept optimizers as fetch", "user": {"login": "bdambrosio", "id": 2271133, "node_id": "MDQ6VXNlcjIyNzExMzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2271133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdambrosio", "html_url": "https://github.com/bdambrosio", "followers_url": "https://api.github.com/users/bdambrosio/followers", "following_url": "https://api.github.com/users/bdambrosio/following{/other_user}", "gists_url": "https://api.github.com/users/bdambrosio/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdambrosio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdambrosio/subscriptions", "organizations_url": "https://api.github.com/users/bdambrosio/orgs", "repos_url": "https://api.github.com/users/bdambrosio/repos", "events_url": "https://api.github.com/users/bdambrosio/events{/privacy}", "received_events_url": "https://api.github.com/users/bdambrosio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-13T02:55:45Z", "updated_at": "2016-04-13T04:23:16Z", "closed_at": "2016-04-13T04:23:16Z", "author_association": "NONE", "body_html": "<h3>Environment info</h3>\n<p>Operating System: ubuntu 14.04<br>\ntensorflow 0.7.1<br>\nInstalled version of CUDA and cuDNN: cuda-7.5, cuDNN 4</p>\n<p>I'd like to use partial_run to insert some lookahead processing during training attention-based image processing, but I can't complete the step because partial_run won't accept an operation as a fetch arg, and optimizers don't return any downstream variables. See the trivial case below.<br>\nSeems like a bug in the partial_run implementation, or do I misunderstand its use?<br>\n....<br>\ny_conv=tf.nn.softmax(tf.matmul(h_fc1_drop, W_fc2) + b_fc2,name='softmax')<br>\ncross_entropy = -tf.reduce_sum(y_*tf.log(y_conv))<br>\ntrain_step = tf.train.AdamOptimizer(1e-4).minimize(cross_entropy)<br>\ntf.initialize_all_variables().run()<br>\nfor i in range(100000):<br>\nbatch =shapes.train.next_batch(batch_size)<br>\nh = sess.partial_run_setup([y_conv,train_step],[x,y_,keep_prob])<br>\nim_state=sess.partial_run(h,y_conv,feed_dict={x:batch[0], y_: batch[1], keep_prob: 0.5})<br>\nfinal=sess.partial_run(h,[train_step])</p>\n<p>looking at the code, it seems any ops put in fetch are moved to the target_list, which must be empty when _do_call is running for partial_run. As a result, this error on the \"final=\" last step above:</p>\n<p>/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.pyc in _prun_fn(session, handle, feed_dict, fetch_list)<br>\n557     def _prun_fn(session, handle, feed_dict, fetch_list):<br>\n558       if target_list:<br>\n--&gt; 559         raise RuntimeError('partial_run() requires empty target_list.')<br>\n560       return tf_session.TF_PRun(session, handle, feed_dict, fetch_list)<br>\n561<br>\nRuntimeError: partial_run() requires empty target_list.</p>", "body_text": "Environment info\nOperating System: ubuntu 14.04\ntensorflow 0.7.1\nInstalled version of CUDA and cuDNN: cuda-7.5, cuDNN 4\nI'd like to use partial_run to insert some lookahead processing during training attention-based image processing, but I can't complete the step because partial_run won't accept an operation as a fetch arg, and optimizers don't return any downstream variables. See the trivial case below.\nSeems like a bug in the partial_run implementation, or do I misunderstand its use?\n....\ny_conv=tf.nn.softmax(tf.matmul(h_fc1_drop, W_fc2) + b_fc2,name='softmax')\ncross_entropy = -tf.reduce_sum(y_*tf.log(y_conv))\ntrain_step = tf.train.AdamOptimizer(1e-4).minimize(cross_entropy)\ntf.initialize_all_variables().run()\nfor i in range(100000):\nbatch =shapes.train.next_batch(batch_size)\nh = sess.partial_run_setup([y_conv,train_step],[x,y_,keep_prob])\nim_state=sess.partial_run(h,y_conv,feed_dict={x:batch[0], y_: batch[1], keep_prob: 0.5})\nfinal=sess.partial_run(h,[train_step])\nlooking at the code, it seems any ops put in fetch are moved to the target_list, which must be empty when _do_call is running for partial_run. As a result, this error on the \"final=\" last step above:\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.pyc in _prun_fn(session, handle, feed_dict, fetch_list)\n557     def _prun_fn(session, handle, feed_dict, fetch_list):\n558       if target_list:\n--> 559         raise RuntimeError('partial_run() requires empty target_list.')\n560       return tf_session.TF_PRun(session, handle, feed_dict, fetch_list)\n561\nRuntimeError: partial_run() requires empty target_list.", "body": "### Environment info\n\nOperating System: ubuntu 14.04\ntensorflow 0.7.1\nInstalled version of CUDA and cuDNN: cuda-7.5, cuDNN 4\n\nI'd like to use partial_run to insert some lookahead processing during training attention-based image processing, but I can't complete the step because partial_run won't accept an operation as a fetch arg, and optimizers don't return any downstream variables. See the trivial case below.\nSeems like a bug in the partial_run implementation, or do I misunderstand its use?\n....\ny_conv=tf.nn.softmax(tf.matmul(h_fc1_drop, W_fc2) + b_fc2,name='softmax')\ncross_entropy = -tf.reduce_sum(y_*tf.log(y_conv))\ntrain_step = tf.train.AdamOptimizer(1e-4).minimize(cross_entropy)\ntf.initialize_all_variables().run()\nfor i in range(100000):\n    batch =shapes.train.next_batch(batch_size)\n    h = sess.partial_run_setup([y_conv,train_step],[x,y_,keep_prob])\n    im_state=sess.partial_run(h,y_conv,feed_dict={x:batch[0], y_: batch[1], keep_prob: 0.5})\n    final=sess.partial_run(h,[train_step])\n\nlooking at the code, it seems any ops put in fetch are moved to the target_list, which must be empty when _do_call is running for partial_run. As a result, this error on the \"final=\" last step above:\n\n/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.pyc in _prun_fn(session, handle, feed_dict, fetch_list)\n    557     def _prun_fn(session, handle, feed_dict, fetch_list):\n    558       if target_list:\n--> 559         raise RuntimeError('partial_run() requires empty target_list.')\n    560       return tf_session.TF_PRun(session, handle, feed_dict, fetch_list)\n    561 \nRuntimeError: partial_run() requires empty target_list.\n"}