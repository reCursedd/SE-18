{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/361538638", "html_url": "https://github.com/tensorflow/tensorflow/issues/16138#issuecomment-361538638", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16138", "id": 361538638, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTUzODYzOA==", "user": {"login": "jstumpin", "id": 27394196, "node_id": "MDQ6VXNlcjI3Mzk0MTk2", "avatar_url": "https://avatars2.githubusercontent.com/u/27394196?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jstumpin", "html_url": "https://github.com/jstumpin", "followers_url": "https://api.github.com/users/jstumpin/followers", "following_url": "https://api.github.com/users/jstumpin/following{/other_user}", "gists_url": "https://api.github.com/users/jstumpin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jstumpin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jstumpin/subscriptions", "organizations_url": "https://api.github.com/users/jstumpin/orgs", "repos_url": "https://api.github.com/users/jstumpin/repos", "events_url": "https://api.github.com/users/jstumpin/events{/privacy}", "received_events_url": "https://api.github.com/users/jstumpin/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-30T09:52:27Z", "updated_at": "2018-01-30T09:52:27Z", "author_association": "NONE", "body_html": "<p>\"defined(EIGEN_HAS_CUDA_FP16)\" is present (no action needed):</p>\n<pre><code>#if defined(EIGEN_HAS_CUDA_FP16) &amp;&amp; defined(EIGEN_CUDA_ARCH) &amp;&amp; EIGEN_CUDA_ARCH &gt;= 300\n  __half tmp_ff = __float2half(ff);\n  return *(__half_raw*)&amp;tmp_ff;\n#elif defined(EIGEN_HAS_FP16_C)\n  __half_raw h;\n  h.x = _cvtss_sh(ff, 0);\n  return h;\n#else\n</code></pre>\n<p>\"defined(EIGEN_HAS_CUDA_FP16)\" is absent:</p>\n<pre><code>EIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half exp(const half&amp; a) {\n//#if EIGEN_CUDACC_VER &gt;= 80000 &amp;&amp; defined EIGEN_CUDA_ARCH &amp;&amp; EIGEN_CUDA_ARCH &gt;= 530\n//  return half(hexp(a));\n//#else\n   return half(::expf(float(a)));\n//#endif\n}\n</code></pre>", "body_text": "\"defined(EIGEN_HAS_CUDA_FP16)\" is present (no action needed):\n#if defined(EIGEN_HAS_CUDA_FP16) && defined(EIGEN_CUDA_ARCH) && EIGEN_CUDA_ARCH >= 300\n  __half tmp_ff = __float2half(ff);\n  return *(__half_raw*)&tmp_ff;\n#elif defined(EIGEN_HAS_FP16_C)\n  __half_raw h;\n  h.x = _cvtss_sh(ff, 0);\n  return h;\n#else\n\n\"defined(EIGEN_HAS_CUDA_FP16)\" is absent:\nEIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half exp(const half& a) {\n//#if EIGEN_CUDACC_VER >= 80000 && defined EIGEN_CUDA_ARCH && EIGEN_CUDA_ARCH >= 530\n//  return half(hexp(a));\n//#else\n   return half(::expf(float(a)));\n//#endif\n}", "body": "\"defined(EIGEN_HAS_CUDA_FP16)\" is present (no action needed):\r\n```\r\n#if defined(EIGEN_HAS_CUDA_FP16) && defined(EIGEN_CUDA_ARCH) && EIGEN_CUDA_ARCH >= 300\r\n  __half tmp_ff = __float2half(ff);\r\n  return *(__half_raw*)&tmp_ff;\r\n#elif defined(EIGEN_HAS_FP16_C)\r\n  __half_raw h;\r\n  h.x = _cvtss_sh(ff, 0);\r\n  return h;\r\n#else\r\n```\r\n\r\n\"defined(EIGEN_HAS_CUDA_FP16)\" is absent:\r\n```\r\nEIGEN_STRONG_INLINE EIGEN_DEVICE_FUNC half exp(const half& a) {\r\n//#if EIGEN_CUDACC_VER >= 80000 && defined EIGEN_CUDA_ARCH && EIGEN_CUDA_ARCH >= 530\r\n//  return half(hexp(a));\r\n//#else\r\n   return half(::expf(float(a)));\r\n//#endif\r\n}\r\n```\r\n"}