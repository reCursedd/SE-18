{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/360371224", "html_url": "https://github.com/tensorflow/tensorflow/issues/16138#issuecomment-360371224", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16138", "id": 360371224, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDM3MTIyNA==", "user": {"login": "jstumpin", "id": 27394196, "node_id": "MDQ6VXNlcjI3Mzk0MTk2", "avatar_url": "https://avatars2.githubusercontent.com/u/27394196?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jstumpin", "html_url": "https://github.com/jstumpin", "followers_url": "https://api.github.com/users/jstumpin/followers", "following_url": "https://api.github.com/users/jstumpin/following{/other_user}", "gists_url": "https://api.github.com/users/jstumpin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jstumpin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jstumpin/subscriptions", "organizations_url": "https://api.github.com/users/jstumpin/orgs", "repos_url": "https://api.github.com/users/jstumpin/repos", "events_url": "https://api.github.com/users/jstumpin/events{/privacy}", "received_events_url": "https://api.github.com/users/jstumpin/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-25T06:11:05Z", "updated_at": "2018-01-25T06:21:09Z", "author_association": "NONE", "body_html": "<p>For a workaround on issue pertaining to the \"adjust_contrast_op_gpu.cu.cc\" error (and many more Eigen::half-related errors afterwards), do try out these steps:</p>\n<ol>\n<li>\n<p>[Post-CMake] Make proper amendments to all targeted CUDA capabilities in \"..\\tensorflow\\contrib\\cmake\\CMakeLists.txt\" (fixing \"cuda_config.h\" after CMake as suggested in <a href=\"https://github.com/tensorflow/tensorflow/issues/14691#issuecomment-357742568\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/14691/hovercard\">here</a> won't ensure targeted CUDA capabilities get implemented because the content will eventually be overwritten with default settings amidst building. On the other hand, default settings won't produce the said error, at least not on my configurations (TF1.5.0-rc1, AVX2, CUDA9.1, CUDNN7, VS2017-v140). The error only cropped up when I add CUDA capability to include 6.1 (GTX1080).</p>\n</li>\n<li>\n<p>[Pre-MSBuild] Comment out \"#define EIGEN_HAS_CUDA_FP16\" in \"..\\tensorflow\\stream_executor\\cuda\\cuda_blas.cc\" and \"..\\tensorflow\\contrib\\cmake\\build\\external\\eigen_archive\\Eigen\\Core\". Comment out conditions in \"..\\tensorflow\\contrib\\cmake\\build\\external\\eigen_archive\\Eigen\\src\\Core\\arch\\CUDA\\Half.h\" only when \"defined(EIGEN_HAS_CUDA_FP16)\" is absent (since we have undefined the macro earlier), effectively forcing the function to return the latter of two definitions. This would of course, render fp16 unusable. Then again for consumer grade GTX like mine, this yield no harm, owing to the fact that its fp16 performance is crippled.</p>\n</li>\n</ol>\n<p>In addition, there is a linkage issue pertaining to \"proto_text.vcxproj\" where it seems to be linking to the wrong \"libprotobuf.lib\". A quick remedy is to overwrite the content of \"..\\tensorflow\\contrib\\cmake\\build\\protobuf\\src\\protobuf\\Release\" with the one in \"..\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\third_party\\protobuf\\Release\", granted \"-Dtensorflow_ENABLE_GRPC_SUPPORT=ON\" or else the correct \"libprotobuf.lib\" won't be available).</p>", "body_text": "For a workaround on issue pertaining to the \"adjust_contrast_op_gpu.cu.cc\" error (and many more Eigen::half-related errors afterwards), do try out these steps:\n\n\n[Post-CMake] Make proper amendments to all targeted CUDA capabilities in \"..\\tensorflow\\contrib\\cmake\\CMakeLists.txt\" (fixing \"cuda_config.h\" after CMake as suggested in here won't ensure targeted CUDA capabilities get implemented because the content will eventually be overwritten with default settings amidst building. On the other hand, default settings won't produce the said error, at least not on my configurations (TF1.5.0-rc1, AVX2, CUDA9.1, CUDNN7, VS2017-v140). The error only cropped up when I add CUDA capability to include 6.1 (GTX1080).\n\n\n[Pre-MSBuild] Comment out \"#define EIGEN_HAS_CUDA_FP16\" in \"..\\tensorflow\\stream_executor\\cuda\\cuda_blas.cc\" and \"..\\tensorflow\\contrib\\cmake\\build\\external\\eigen_archive\\Eigen\\Core\". Comment out conditions in \"..\\tensorflow\\contrib\\cmake\\build\\external\\eigen_archive\\Eigen\\src\\Core\\arch\\CUDA\\Half.h\" only when \"defined(EIGEN_HAS_CUDA_FP16)\" is absent (since we have undefined the macro earlier), effectively forcing the function to return the latter of two definitions. This would of course, render fp16 unusable. Then again for consumer grade GTX like mine, this yield no harm, owing to the fact that its fp16 performance is crippled.\n\n\nIn addition, there is a linkage issue pertaining to \"proto_text.vcxproj\" where it seems to be linking to the wrong \"libprotobuf.lib\". A quick remedy is to overwrite the content of \"..\\tensorflow\\contrib\\cmake\\build\\protobuf\\src\\protobuf\\Release\" with the one in \"..\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\third_party\\protobuf\\Release\", granted \"-Dtensorflow_ENABLE_GRPC_SUPPORT=ON\" or else the correct \"libprotobuf.lib\" won't be available).", "body": "For a workaround on issue pertaining to the \"adjust_contrast_op_gpu.cu.cc\" error (and many more Eigen::half-related errors afterwards), do try out these steps: \r\n\r\n1. [Post-CMake] Make proper amendments to all targeted CUDA capabilities in \"..\\tensorflow\\contrib\\cmake\\CMakeLists.txt\" (fixing \"cuda_config.h\" after CMake as suggested in [here](https://github.com/tensorflow/tensorflow/issues/14691#issuecomment-357742568) won't ensure targeted CUDA capabilities get implemented because the content will eventually be overwritten with default settings amidst building. On the other hand, default settings won't produce the said error, at least not on my configurations (TF1.5.0-rc1, AVX2, CUDA9.1, CUDNN7, VS2017-v140). The error only cropped up when I add CUDA capability to include 6.1 (GTX1080).\r\n\r\n2. [Pre-MSBuild] Comment out \"#define EIGEN_HAS_CUDA_FP16\" in \"..\\tensorflow\\stream_executor\\cuda\\cuda_blas.cc\" and \"..\\tensorflow\\contrib\\cmake\\build\\external\\eigen_archive\\Eigen\\Core\". Comment out conditions in \"..\\tensorflow\\contrib\\cmake\\build\\external\\eigen_archive\\Eigen\\src\\Core\\arch\\CUDA\\Half.h\" only when \"defined(EIGEN_HAS_CUDA_FP16)\" is absent (since we have undefined the macro earlier), effectively forcing the function to return the latter of two definitions. This would of course, render fp16 unusable. Then again for consumer grade GTX like mine, this yield no harm, owing to the fact that its fp16 performance is crippled.\r\n\r\nIn addition, there is a linkage issue pertaining to \"proto_text.vcxproj\" where it seems to be linking to the wrong \"libprotobuf.lib\". A quick remedy is to overwrite the content of \"..\\tensorflow\\contrib\\cmake\\build\\protobuf\\src\\protobuf\\Release\" with the one in \"..\\tensorflow\\contrib\\cmake\\build\\grpc\\src\\grpc\\third_party\\protobuf\\Release\", granted \"-Dtensorflow_ENABLE_GRPC_SUPPORT=ON\" or else the correct \"libprotobuf.lib\" won't be available)."}