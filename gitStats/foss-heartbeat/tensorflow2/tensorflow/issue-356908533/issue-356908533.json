{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22058", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22058/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22058/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22058/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22058", "id": 356908533, "node_id": "MDU6SXNzdWUzNTY5MDg1MzM=", "number": 22058, "title": "tf.estimator.Estimator with distribution strategy messes up TensorBoard readability", "user": {"login": "patzm", "id": 5219726, "node_id": "MDQ6VXNlcjUyMTk3MjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/5219726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/patzm", "html_url": "https://github.com/patzm", "followers_url": "https://api.github.com/users/patzm/followers", "following_url": "https://api.github.com/users/patzm/following{/other_user}", "gists_url": "https://api.github.com/users/patzm/gists{/gist_id}", "starred_url": "https://api.github.com/users/patzm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/patzm/subscriptions", "organizations_url": "https://api.github.com/users/patzm/orgs", "repos_url": "https://api.github.com/users/patzm/repos", "events_url": "https://api.github.com/users/patzm/events{/privacy}", "received_events_url": "https://api.github.com/users/patzm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 996845227, "node_id": "MDU6TGFiZWw5OTY4NDUyMjc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:dist-strat", "name": "comp:dist-strat", "color": "0052cc", "default": false}], "state": "open", "locked": false, "assignee": {"login": "yuefengz", "id": 1647833, "node_id": "MDQ6VXNlcjE2NDc4MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1647833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuefengz", "html_url": "https://github.com/yuefengz", "followers_url": "https://api.github.com/users/yuefengz/followers", "following_url": "https://api.github.com/users/yuefengz/following{/other_user}", "gists_url": "https://api.github.com/users/yuefengz/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuefengz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuefengz/subscriptions", "organizations_url": "https://api.github.com/users/yuefengz/orgs", "repos_url": "https://api.github.com/users/yuefengz/repos", "events_url": "https://api.github.com/users/yuefengz/events{/privacy}", "received_events_url": "https://api.github.com/users/yuefengz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yuefengz", "id": 1647833, "node_id": "MDQ6VXNlcjE2NDc4MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1647833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuefengz", "html_url": "https://github.com/yuefengz", "followers_url": "https://api.github.com/users/yuefengz/followers", "following_url": "https://api.github.com/users/yuefengz/following{/other_user}", "gists_url": "https://api.github.com/users/yuefengz/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuefengz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuefengz/subscriptions", "organizations_url": "https://api.github.com/users/yuefengz/orgs", "repos_url": "https://api.github.com/users/yuefengz/repos", "events_url": "https://api.github.com/users/yuefengz/events{/privacy}", "received_events_url": "https://api.github.com/users/yuefengz/received_events", "type": "User", "site_admin": false}, {"login": "seemuch", "id": 2233625, "node_id": "MDQ6VXNlcjIyMzM2MjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2233625?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seemuch", "html_url": "https://github.com/seemuch", "followers_url": "https://api.github.com/users/seemuch/followers", "following_url": "https://api.github.com/users/seemuch/following{/other_user}", "gists_url": "https://api.github.com/users/seemuch/gists{/gist_id}", "starred_url": "https://api.github.com/users/seemuch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seemuch/subscriptions", "organizations_url": "https://api.github.com/users/seemuch/orgs", "repos_url": "https://api.github.com/users/seemuch/repos", "events_url": "https://api.github.com/users/seemuch/events{/privacy}", "received_events_url": "https://api.github.com/users/seemuch/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-09-04T17:36:03Z", "updated_at": "2018-11-20T13:30:36Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: no</li>\n<li><strong>OS Platform and Distribution</strong>: Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.8.0</li>\n<li><strong>Python version</strong>: 2.7</li>\n<li><strong>Bazel version</strong>: N/A</li>\n<li><strong>Mobile device</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: cuda-9-0 / libcudnn.so.7</li>\n<li><strong>GPU model and memory</strong>: 2x Tesla P100, 16GB</li>\n<li><strong>Exact command to reproduce</strong>: example provided here: <a href=\"https://github.com/patzm/tf-estimator-distribute-so\">https://github.com/patzm/tf-estimator-distribute-so</a></li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Using a <code>tf.estimator.Estimator</code> with a distribution strategy like <code>OneDeviceStrategy</code> or <code>MirroredStrategy</code> creates a lot of tensors / operations that are not enclosed in a common scope.<br>\nIf one views the graph in TensorBoard, it is very annoying.<br>\nTensorBoard automatically zooms out until all nodes are visible, making everything so tiny and unreadable.<br>\nAlso TensorBoard becomes pretty slow.<br>\nIn essence this is the</p>\n<div class=\"highlight highlight-source-python\"><pre>    run_config <span class=\"pl-k\">=</span> tf.estimator.RunConfig(\n        <span class=\"pl-v\">model_dir</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>/tmp/some/dir<span class=\"pl-pds\">'</span></span>,\n        <span class=\"pl-v\">session_config</span><span class=\"pl-k\">=</span>session_config,\n        <span class=\"pl-v\">train_distribute</span><span class=\"pl-k\">=</span>MirroredStrategy(<span class=\"pl-v\">num_gpus</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">2</span>),  <span class=\"pl-c\"><span class=\"pl-c\">#</span> or OneDeviceStrategy(device)</span>\n        <span class=\"pl-v\">save_summary_steps</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>,\n        <span class=\"pl-v\">save_checkpoints_steps</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1e4</span>,\n    )\n\n    estimator <span class=\"pl-k\">=</span> tf.estimator.Estimator(\n        <span class=\"pl-v\">model_fn</span><span class=\"pl-k\">=</span>model_fn,\n        <span class=\"pl-v\">config</span><span class=\"pl-k\">=</span>run_config,\n        <span class=\"pl-v\">params</span><span class=\"pl-k\">=</span>{},\n    )</pre></div>\n<p>Here are two example images:</p>\n<ul>\n<li>\n<p><code>OneDeviceStrategy</code>:</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://raw.githubusercontent.com/patzm/tf-estimator-distribute-so/master/images/OneDeviceStrategy.png\"><img src=\"https://raw.githubusercontent.com/patzm/tf-estimator-distribute-so/master/images/OneDeviceStrategy.png\" alt=\"OneDeviceStrategy\" style=\"max-width:100%;\"></a></p>\n</li>\n<li>\n<p><code>MirroredStrategy</code>:</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://raw.githubusercontent.com/patzm/tf-estimator-distribute-so/master/images/MirroredStrategy.png\"><img src=\"https://raw.githubusercontent.com/patzm/tf-estimator-distribute-so/master/images/MirroredStrategy.png\" alt=\"MirroredStrategy\" style=\"max-width:100%;\"></a></p>\n</li>\n</ul>\n<p>The row / column of <code>Read_&lt;num&gt;</code> / <code>group_deps_&lt;num&gt;</code> nodes continues way beyond the area of the screenshot.<br>\nThe initial view of the TensorBoard could look like this, with the nodes almost invisible, because they are so tiny:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://camo.githubusercontent.com/b356f57caaed8a4b6f147f3724016d0e18a7b85a/68747470733a2f2f692e696d6775722e636f6d2f697568784c434b2e706e67\"><img src=\"https://camo.githubusercontent.com/b356f57caaed8a4b6f147f3724016d0e18a7b85a/68747470733a2f2f692e696d6775722e636f6d2f697568784c434b2e706e67\" alt=\"TensorBoardInitialView\" data-canonical-src=\"https://i.imgur.com/iuhxLCK.png\" style=\"max-width:100%;\"></a></p>\n<h3>Source code / logs</h3>\n<p>example provided here: <a href=\"https://github.com/patzm/tf-estimator-distribute-so\">https://github.com/patzm/tf-estimator-distribute-so</a><br>\nI also raised the issue on StackOverflow: <a href=\"https://stackoverflow.com/questions/50924287/how-to-influence-the-name-scope-of-collated-variables-slots\" rel=\"nofollow\">https://stackoverflow.com/questions/50924287/how-to-influence-the-name-scope-of-collated-variables-slots</a></p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): no\nOS Platform and Distribution: Ubuntu 16.04\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): 1.8.0\nPython version: 2.7\nBazel version: N/A\nMobile device: N/A\nCUDA/cuDNN version: cuda-9-0 / libcudnn.so.7\nGPU model and memory: 2x Tesla P100, 16GB\nExact command to reproduce: example provided here: https://github.com/patzm/tf-estimator-distribute-so\n\nDescribe the problem\nUsing a tf.estimator.Estimator with a distribution strategy like OneDeviceStrategy or MirroredStrategy creates a lot of tensors / operations that are not enclosed in a common scope.\nIf one views the graph in TensorBoard, it is very annoying.\nTensorBoard automatically zooms out until all nodes are visible, making everything so tiny and unreadable.\nAlso TensorBoard becomes pretty slow.\nIn essence this is the\n    run_config = tf.estimator.RunConfig(\n        model_dir='/tmp/some/dir',\n        session_config=session_config,\n        train_distribute=MirroredStrategy(num_gpus=2),  # or OneDeviceStrategy(device)\n        save_summary_steps=1,\n        save_checkpoints_steps=1e4,\n    )\n\n    estimator = tf.estimator.Estimator(\n        model_fn=model_fn,\n        config=run_config,\n        params={},\n    )\nHere are two example images:\n\n\nOneDeviceStrategy:\n\n\n\nMirroredStrategy:\n\n\n\nThe row / column of Read_<num> / group_deps_<num> nodes continues way beyond the area of the screenshot.\nThe initial view of the TensorBoard could look like this, with the nodes almost invisible, because they are so tiny:\n\nSource code / logs\nexample provided here: https://github.com/patzm/tf-estimator-distribute-so\nI also raised the issue on StackOverflow: https://stackoverflow.com/questions/50924287/how-to-influence-the-name-scope-of-collated-variables-slots", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: no\r\n- **OS Platform and Distribution**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.8.0\r\n- **Python version**: 2.7\r\n- **Bazel version**: N/A\r\n- **Mobile device**: N/A\r\n- **CUDA/cuDNN version**: cuda-9-0 / libcudnn.so.7\r\n- **GPU model and memory**: 2x Tesla P100, 16GB\r\n- **Exact command to reproduce**: example provided here: https://github.com/patzm/tf-estimator-distribute-so\r\n\r\n### Describe the problem\r\nUsing a `tf.estimator.Estimator` with a distribution strategy like `OneDeviceStrategy` or `MirroredStrategy` creates a lot of tensors / operations that are not enclosed in a common scope.\r\nIf one views the graph in TensorBoard, it is very annoying.\r\nTensorBoard automatically zooms out until all nodes are visible, making everything so tiny and unreadable.\r\nAlso TensorBoard becomes pretty slow.\r\nIn essence this is the\r\n```python\r\n    run_config = tf.estimator.RunConfig(\r\n        model_dir='/tmp/some/dir',\r\n        session_config=session_config,\r\n        train_distribute=MirroredStrategy(num_gpus=2),  # or OneDeviceStrategy(device)\r\n        save_summary_steps=1,\r\n        save_checkpoints_steps=1e4,\r\n    )\r\n\r\n    estimator = tf.estimator.Estimator(\r\n        model_fn=model_fn,\r\n        config=run_config,\r\n        params={},\r\n    )\r\n```\r\nHere are two example images:\r\n\r\n* `OneDeviceStrategy`:\r\n  \r\n  ![OneDeviceStrategy](https://raw.githubusercontent.com/patzm/tf-estimator-distribute-so/master/images/OneDeviceStrategy.png)\r\n\r\n* `MirroredStrategy`:\r\n\r\n  ![MirroredStrategy](https://raw.githubusercontent.com/patzm/tf-estimator-distribute-so/master/images/MirroredStrategy.png)\r\n\r\nThe row / column of `Read_<num>` / `group_deps_<num>` nodes continues way beyond the area of the screenshot.\r\nThe initial view of the TensorBoard could look like this, with the nodes almost invisible, because they are so tiny:\r\n![TensorBoardInitialView](https://i.imgur.com/iuhxLCK.png)\r\n\r\n### Source code / logs\r\nexample provided here: https://github.com/patzm/tf-estimator-distribute-so\r\nI also raised the issue on StackOverflow: https://stackoverflow.com/questions/50924287/how-to-influence-the-name-scope-of-collated-variables-slots\r\n\r\n"}