{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/155132690", "pull_request_review_id": 81399626, "id": 155132690, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NTEzMjY5MA==", "diff_hunk": "@@ -41,6 +41,11 @@ limitations under the License.\n #include \"tensorflow/compiler/xla/types.h\"\n #include \"tensorflow/core/platform/logging.h\"\n \n+#if defined(__APPLE__)\n+static void sincos(double, double*, double*)  __attribute__((weakref (\"__sincos\")));", "path": "tensorflow/compiler/xla/service/cpu/simple_orc_jit.cc", "position": null, "original_position": 5, "commit_id": "dcd7431b6d0f4681941860b6b20c3edfd618035b", "original_commit_id": "c495089d3c46d7e7a8008d6c673d820d9061eaf4", "user": {"login": "sanjoy", "id": 136291, "node_id": "MDQ6VXNlcjEzNjI5MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/136291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanjoy", "html_url": "https://github.com/sanjoy", "followers_url": "https://api.github.com/users/sanjoy/followers", "following_url": "https://api.github.com/users/sanjoy/following{/other_user}", "gists_url": "https://api.github.com/users/sanjoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanjoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanjoy/subscriptions", "organizations_url": "https://api.github.com/users/sanjoy/orgs", "repos_url": "https://api.github.com/users/sanjoy/repos", "events_url": "https://api.github.com/users/sanjoy/events{/privacy}", "received_events_url": "https://api.github.com/users/sanjoy/received_events", "type": "User", "site_admin": false}, "body": "I'm wary of using non-standard attributes here that aren't used elsewhere in TensorFlow.\r\n\r\nCan we instead  handle this by `REGSTER_CPU_RUNTIME_SYMBOL`ing differently on `__APPLE__`?  I don't think we need the name anywhere in LLVM IR generation (so no need for a `GetSinCosFunctionName()` helper) and if the LLVM optimizer generates a call to sincos(f) it should use the correct symbol name for the compilation target.", "created_at": "2017-12-06T02:29:32Z", "updated_at": "2017-12-07T01:30:50Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/14893#discussion_r155132690", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14893", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/155132690"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/14893#discussion_r155132690"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/14893"}}, "body_html": "<p>I'm wary of using non-standard attributes here that aren't used elsewhere in TensorFlow.</p>\n<p>Can we instead  handle this by <code>REGSTER_CPU_RUNTIME_SYMBOL</code>ing differently on <code>__APPLE__</code>?  I don't think we need the name anywhere in LLVM IR generation (so no need for a <code>GetSinCosFunctionName()</code> helper) and if the LLVM optimizer generates a call to sincos(f) it should use the correct symbol name for the compilation target.</p>", "body_text": "I'm wary of using non-standard attributes here that aren't used elsewhere in TensorFlow.\nCan we instead  handle this by REGSTER_CPU_RUNTIME_SYMBOLing differently on __APPLE__?  I don't think we need the name anywhere in LLVM IR generation (so no need for a GetSinCosFunctionName() helper) and if the LLVM optimizer generates a call to sincos(f) it should use the correct symbol name for the compilation target."}