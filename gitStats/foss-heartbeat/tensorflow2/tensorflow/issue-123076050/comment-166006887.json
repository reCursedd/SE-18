{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/166006887", "html_url": "https://github.com/tensorflow/tensorflow/pull/557#issuecomment-166006887", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/557", "id": 166006887, "node_id": "MDEyOklzc3VlQ29tbWVudDE2NjAwNjg4Nw==", "user": {"login": "vrv", "id": 463737, "node_id": "MDQ6VXNlcjQ2MzczNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/463737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrv", "html_url": "https://github.com/vrv", "followers_url": "https://api.github.com/users/vrv/followers", "following_url": "https://api.github.com/users/vrv/following{/other_user}", "gists_url": "https://api.github.com/users/vrv/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrv/subscriptions", "organizations_url": "https://api.github.com/users/vrv/orgs", "repos_url": "https://api.github.com/users/vrv/repos", "events_url": "https://api.github.com/users/vrv/events{/privacy}", "received_events_url": "https://api.github.com/users/vrv/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-19T17:34:22Z", "updated_at": "2015-12-19T17:34:22Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hi <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=2099293\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/srjoglekar246\">@srjoglekar246</a>, this looks pretty cool, and thanks for going through the work to put this together!</p>\n<p>One of the ideas we have been working on is a notion of \"Functions\" in the GraphDef, which would allow for re-usable components.  See <a href=\"https://github.com/tensorflow/tensorflow/blob/d6357a5849db980df51d00d8a9ff874cda2faeb3/tensorflow/core/framework/function.proto#L14\">here</a> for the proto definition.</p>\n<p>It's not ready yet and still needs some work (we may not do this as a proto in the GraphDef) but the underlying idea would be something that would obviate the need for copying elements around with unique names: you could define a subgraph as a function with inputs and outputs, and then re-use them.  So instead of having multiple versions of the graph stamped out at once, each with unique names, you could have one named function that could be called, ported across graphs, etc.</p>\n<p>Do you feel that such a feature would accomplish your higher level goals?</p>", "body_text": "Hi @srjoglekar246, this looks pretty cool, and thanks for going through the work to put this together!\nOne of the ideas we have been working on is a notion of \"Functions\" in the GraphDef, which would allow for re-usable components.  See here for the proto definition.\nIt's not ready yet and still needs some work (we may not do this as a proto in the GraphDef) but the underlying idea would be something that would obviate the need for copying elements around with unique names: you could define a subgraph as a function with inputs and outputs, and then re-use them.  So instead of having multiple versions of the graph stamped out at once, each with unique names, you could have one named function that could be called, ported across graphs, etc.\nDo you feel that such a feature would accomplish your higher level goals?", "body": "Hi @srjoglekar246, this looks pretty cool, and thanks for going through the work to put this together!\n\nOne of the ideas we have been working on is a notion of \"Functions\" in the GraphDef, which would allow for re-usable components.  See [here](https://github.com/tensorflow/tensorflow/blob/d6357a5849db980df51d00d8a9ff874cda2faeb3/tensorflow/core/framework/function.proto#L14) for the proto definition.\n\nIt's not ready yet and still needs some work (we may not do this as a proto in the GraphDef) but the underlying idea would be something that would obviate the need for copying elements around with unique names: you could define a subgraph as a function with inputs and outputs, and then re-use them.  So instead of having multiple versions of the graph stamped out at once, each with unique names, you could have one named function that could be called, ported across graphs, etc.\n\nDo you feel that such a feature would accomplish your higher level goals?\n"}