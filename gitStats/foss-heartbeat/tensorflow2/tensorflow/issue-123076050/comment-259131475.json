{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/259131475", "html_url": "https://github.com/tensorflow/tensorflow/pull/557#issuecomment-259131475", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/557", "id": 259131475, "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTEzMTQ3NQ==", "user": {"login": "thjashin", "id": 5267554, "node_id": "MDQ6VXNlcjUyNjc1NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5267554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thjashin", "html_url": "https://github.com/thjashin", "followers_url": "https://api.github.com/users/thjashin/followers", "following_url": "https://api.github.com/users/thjashin/following{/other_user}", "gists_url": "https://api.github.com/users/thjashin/gists{/gist_id}", "starred_url": "https://api.github.com/users/thjashin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thjashin/subscriptions", "organizations_url": "https://api.github.com/users/thjashin/orgs", "repos_url": "https://api.github.com/users/thjashin/repos", "events_url": "https://api.github.com/users/thjashin/events{/privacy}", "received_events_url": "https://api.github.com/users/thjashin/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-08T13:06:35Z", "updated_at": "2016-11-08T13:07:50Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hi <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=463737\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vrv\">@vrv</a> ,</p>\n<p>I'm currently writing some high-level library based on tensorflow. I'm relying a lot on copying existing ops to achieve re-usability of data flow structures. So I'm very interested in the \"Functions\" idea you mentioned here. I'm wondering how this is going on.<br>\nBecause I recently met some problems due to not copying op._control_flow_context, which makes gradients through tf.cond fail in copied subgraph. This problem also exists in this contribution.</p>", "body_text": "Hi @vrv ,\nI'm currently writing some high-level library based on tensorflow. I'm relying a lot on copying existing ops to achieve re-usability of data flow structures. So I'm very interested in the \"Functions\" idea you mentioned here. I'm wondering how this is going on.\nBecause I recently met some problems due to not copying op._control_flow_context, which makes gradients through tf.cond fail in copied subgraph. This problem also exists in this contribution.", "body": "Hi @vrv ,\n\nI'm currently writing some high-level library based on tensorflow. I'm relying a lot on copying existing ops to achieve re-usability of data flow structures. So I'm very interested in the \"Functions\" idea you mentioned here. I'm wondering how this is going on.\nBecause I recently met some problems due to not copying op._control_flow_context, which makes gradients through tf.cond fail in copied subgraph. This problem also exists in this contribution.\n"}