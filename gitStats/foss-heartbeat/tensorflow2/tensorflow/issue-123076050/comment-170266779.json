{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/170266779", "html_url": "https://github.com/tensorflow/tensorflow/pull/557#issuecomment-170266779", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/557", "id": 170266779, "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDI2Njc3OQ==", "user": {"login": "srjoglekar246", "id": 2099293, "node_id": "MDQ6VXNlcjIwOTkyOTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/2099293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srjoglekar246", "html_url": "https://github.com/srjoglekar246", "followers_url": "https://api.github.com/users/srjoglekar246/followers", "following_url": "https://api.github.com/users/srjoglekar246/following{/other_user}", "gists_url": "https://api.github.com/users/srjoglekar246/gists{/gist_id}", "starred_url": "https://api.github.com/users/srjoglekar246/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srjoglekar246/subscriptions", "organizations_url": "https://api.github.com/users/srjoglekar246/orgs", "repos_url": "https://api.github.com/users/srjoglekar246/repos", "events_url": "https://api.github.com/users/srjoglekar246/events{/privacy}", "received_events_url": "https://api.github.com/users/srjoglekar246/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-09T18:18:13Z", "updated_at": "2016-01-09T18:18:13Z", "author_association": "MEMBER", "body_html": "<p>I guess once we can define reusable functions, we could do away with initialising ops as \"tf.add\", instead going for the method used here: <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/framework/function_test.py#L99\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/framework/function_test.py#L99</a> . My only suggestion would be to make the system smarter with respect to argument types (like adding float types to int types should automatically return a float, assuming shapes are compatible). But I guess it won't be too easy, especially in C++.</p>", "body_text": "I guess once we can define reusable functions, we could do away with initialising ops as \"tf.add\", instead going for the method used here: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/framework/function_test.py#L99 . My only suggestion would be to make the system smarter with respect to argument types (like adding float types to int types should automatically return a float, assuming shapes are compatible). But I guess it won't be too easy, especially in C++.", "body": "I guess once we can define reusable functions, we could do away with initialising ops as \"tf.add\", instead going for the method used here: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/framework/function_test.py#L99 . My only suggestion would be to make the system smarter with respect to argument types (like adding float types to int types should automatically return a float, assuming shapes are compatible). But I guess it won't be too easy, especially in C++.\n"}