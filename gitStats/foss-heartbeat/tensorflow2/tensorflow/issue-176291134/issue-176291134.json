{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4330", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4330/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4330/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4330/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4330", "id": 176291134, "node_id": "MDU6SXNzdWUxNzYyOTExMzQ=", "number": 4330, "title": "overparametrized convolution error in tf.nn.separable_conv2d ", "user": {"login": "Jongchan", "id": 5811413, "node_id": "MDQ6VXNlcjU4MTE0MTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/5811413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jongchan", "html_url": "https://github.com/Jongchan", "followers_url": "https://api.github.com/users/Jongchan/followers", "following_url": "https://api.github.com/users/Jongchan/following{/other_user}", "gists_url": "https://api.github.com/users/Jongchan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jongchan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jongchan/subscriptions", "organizations_url": "https://api.github.com/users/Jongchan/orgs", "repos_url": "https://api.github.com/users/Jongchan/repos", "events_url": "https://api.github.com/users/Jongchan/events{/privacy}", "received_events_url": "https://api.github.com/users/Jongchan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "vincentvanhoucke", "id": 15737127, "node_id": "MDQ6VXNlcjE1NzM3MTI3", "avatar_url": "https://avatars3.githubusercontent.com/u/15737127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vincentvanhoucke", "html_url": "https://github.com/vincentvanhoucke", "followers_url": "https://api.github.com/users/vincentvanhoucke/followers", "following_url": "https://api.github.com/users/vincentvanhoucke/following{/other_user}", "gists_url": "https://api.github.com/users/vincentvanhoucke/gists{/gist_id}", "starred_url": "https://api.github.com/users/vincentvanhoucke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vincentvanhoucke/subscriptions", "organizations_url": "https://api.github.com/users/vincentvanhoucke/orgs", "repos_url": "https://api.github.com/users/vincentvanhoucke/repos", "events_url": "https://api.github.com/users/vincentvanhoucke/events{/privacy}", "received_events_url": "https://api.github.com/users/vincentvanhoucke/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "vincentvanhoucke", "id": 15737127, "node_id": "MDQ6VXNlcjE1NzM3MTI3", "avatar_url": "https://avatars3.githubusercontent.com/u/15737127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vincentvanhoucke", "html_url": "https://github.com/vincentvanhoucke", "followers_url": "https://api.github.com/users/vincentvanhoucke/followers", "following_url": "https://api.github.com/users/vincentvanhoucke/following{/other_user}", "gists_url": "https://api.github.com/users/vincentvanhoucke/gists{/gist_id}", "starred_url": "https://api.github.com/users/vincentvanhoucke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vincentvanhoucke/subscriptions", "organizations_url": "https://api.github.com/users/vincentvanhoucke/orgs", "repos_url": "https://api.github.com/users/vincentvanhoucke/repos", "events_url": "https://api.github.com/users/vincentvanhoucke/events{/privacy}", "received_events_url": "https://api.github.com/users/vincentvanhoucke/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 15, "created_at": "2016-09-12T04:11:10Z", "updated_at": "2017-11-09T03:31:20Z", "closed_at": "2016-09-21T15:14:28Z", "author_association": "NONE", "body_html": "<p>I'm trying to build a network of layers with channel-wise separable convolution. (Just like the paper <a href=\"http://128.84.21.199/abs/1608.04337\" rel=\"nofollow\">Factorized CNN</a>)</p>\n<p>I've found that separable_conv2d and depthwise_conv2d is the two options, and I'm trying out these two.</p>\n<p>What I am trying to build is as below</p>\n<pre><code>depthwise_filter = tf.get_variable(\"depth_conv_w\", [3,3,64,3], initialize=tf.random_normal_initializer(stddev=np.sqrt(2.0/9/32)))\npointwise_filter = tf.get_variable(\"point_conv_w\", [1,1,192,64], initializer=tf.random_normal_initializer(stddev=np.sqrt(2.0/9/128)))\nconv_tensor = tf.nn.depthwise_conv2d(tensor, depthwise_filter, [1,1,1,1], padding='SAME')\nconv_tensor = tf.nn.conv2d(conv_tensor, pointwise_filter, [1,1,1,1], padding='VALID')\n</code></pre>\n<p>and it works fine.</p>\n<p>However, if I switch the last 2 lines with</p>\n<pre><code>conv_tensor=tf.nn.separable_conv2d(tensor,depthwise_filter,pointwise_filter,[1,1,1,1],padding='SAME')\n</code></pre>\n<p>then tensorflow gives me 'overparamatrized convolution error' as specified in <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/nn.py#L705\">here</a></p>\n<p>I think <strong>channel_multiplier * in_channel</strong> is usually larger than or equal to the <strong>out_channel</strong>.<br>\nSo I believe this is an error.</p>\n<p>PS) I can get the same result as the <strong>separable_conv2d</strong> with <strong>depthwise_conv2d and 1x1 convolution</strong>. Is there any advantage of using <strong>separable_conv2d</strong>?</p>", "body_text": "I'm trying to build a network of layers with channel-wise separable convolution. (Just like the paper Factorized CNN)\nI've found that separable_conv2d and depthwise_conv2d is the two options, and I'm trying out these two.\nWhat I am trying to build is as below\ndepthwise_filter = tf.get_variable(\"depth_conv_w\", [3,3,64,3], initialize=tf.random_normal_initializer(stddev=np.sqrt(2.0/9/32)))\npointwise_filter = tf.get_variable(\"point_conv_w\", [1,1,192,64], initializer=tf.random_normal_initializer(stddev=np.sqrt(2.0/9/128)))\nconv_tensor = tf.nn.depthwise_conv2d(tensor, depthwise_filter, [1,1,1,1], padding='SAME')\nconv_tensor = tf.nn.conv2d(conv_tensor, pointwise_filter, [1,1,1,1], padding='VALID')\n\nand it works fine.\nHowever, if I switch the last 2 lines with\nconv_tensor=tf.nn.separable_conv2d(tensor,depthwise_filter,pointwise_filter,[1,1,1,1],padding='SAME')\n\nthen tensorflow gives me 'overparamatrized convolution error' as specified in here\nI think channel_multiplier * in_channel is usually larger than or equal to the out_channel.\nSo I believe this is an error.\nPS) I can get the same result as the separable_conv2d with depthwise_conv2d and 1x1 convolution. Is there any advantage of using separable_conv2d?", "body": "I'm trying to build a network of layers with channel-wise separable convolution. (Just like the paper [Factorized CNN](http://128.84.21.199/abs/1608.04337))\n\nI've found that separable_conv2d and depthwise_conv2d is the two options, and I'm trying out these two.\n\nWhat I am trying to build is as below\n\n```\ndepthwise_filter = tf.get_variable(\"depth_conv_w\", [3,3,64,3], initialize=tf.random_normal_initializer(stddev=np.sqrt(2.0/9/32)))\npointwise_filter = tf.get_variable(\"point_conv_w\", [1,1,192,64], initializer=tf.random_normal_initializer(stddev=np.sqrt(2.0/9/128)))\nconv_tensor = tf.nn.depthwise_conv2d(tensor, depthwise_filter, [1,1,1,1], padding='SAME')\nconv_tensor = tf.nn.conv2d(conv_tensor, pointwise_filter, [1,1,1,1], padding='VALID')\n```\n\nand it works fine.\n\nHowever, if I switch the last 2 lines with\n\n```\nconv_tensor=tf.nn.separable_conv2d(tensor,depthwise_filter,pointwise_filter,[1,1,1,1],padding='SAME')\n```\n\nthen tensorflow gives me 'overparamatrized convolution error' as specified in [here](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/nn.py#L705)\n\nI think **channel_multiplier \\* in_channel** is usually larger than or equal to the **out_channel**.\nSo I believe this is an error.\n\nPS) I can get the same result as the **separable_conv2d** with **depthwise_conv2d and 1x1 convolution**. Is there any advantage of using **separable_conv2d**?\n"}