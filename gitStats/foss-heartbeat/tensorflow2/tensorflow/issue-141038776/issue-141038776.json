{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1515", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1515/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1515/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1515/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/1515", "id": 141038776, "node_id": "MDU6SXNzdWUxNDEwMzg3NzY=", "number": 1515, "title": "rnn.bidirectional_rnn  cause a problem", "user": {"login": "hjyCoder", "id": 11908460, "node_id": "MDQ6VXNlcjExOTA4NDYw", "avatar_url": "https://avatars2.githubusercontent.com/u/11908460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjyCoder", "html_url": "https://github.com/hjyCoder", "followers_url": "https://api.github.com/users/hjyCoder/followers", "following_url": "https://api.github.com/users/hjyCoder/following{/other_user}", "gists_url": "https://api.github.com/users/hjyCoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjyCoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjyCoder/subscriptions", "organizations_url": "https://api.github.com/users/hjyCoder/orgs", "repos_url": "https://api.github.com/users/hjyCoder/repos", "events_url": "https://api.github.com/users/hjyCoder/events{/privacy}", "received_events_url": "https://api.github.com/users/hjyCoder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2016-03-15T17:07:32Z", "updated_at": "2016-03-16T03:15:36Z", "closed_at": "2016-03-16T03:15:36Z", "author_association": "NONE", "body_html": "<p>code:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">from</span> tensorflow.models.rnn <span class=\"pl-k\">import</span> rnn,rnn_cell\n\nseq_length <span class=\"pl-k\">=</span> <span class=\"pl-c1\">5</span>\nrnn_size <span class=\"pl-k\">=</span> <span class=\"pl-c1\">6</span>\ninput_data <span class=\"pl-k\">=</span> [[<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">4</span>,<span class=\"pl-c1\">5</span>],[<span class=\"pl-c1\">6</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">8</span>,<span class=\"pl-c1\">9</span>,<span class=\"pl-c1\">10</span>],[<span class=\"pl-c1\">11</span>,<span class=\"pl-c1\">12</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">14</span>,<span class=\"pl-c1\">15</span>]]\n<span class=\"pl-k\">with</span> tf.device(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/cpu:0<span class=\"pl-pds\">\"</span></span>):\n embedding <span class=\"pl-k\">=</span> tf.get_variable(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>embedding<span class=\"pl-pds\">\"</span></span>, [<span class=\"pl-c1\">20</span>, rnn_size])\n result <span class=\"pl-k\">=</span> tf.nn.embedding_lookup(embedding, input_data)\n inputs <span class=\"pl-k\">=</span> tf.split(<span class=\"pl-c1\">1</span>,seq_length,result)\n inputs <span class=\"pl-k\">=</span> [tf.squeeze(input_, [<span class=\"pl-c1\">1</span>]) <span class=\"pl-k\">for</span> input_ <span class=\"pl-k\">in</span> inputs]\n\ncell_bw <span class=\"pl-k\">=</span> rnn_cell.BasicLSTMCell(rnn_size)\ncell_fw <span class=\"pl-k\">=</span> rnn_cell.BasicLSTMCell(rnn_size)\nbi <span class=\"pl-k\">=</span> rnn.bidirectional_rnn(cell_fw,cell_bw,inputs,cell_fw.zero_state(<span class=\"pl-c1\">3</span>, tf.float32),cell_bw.zero_state(<span class=\"pl-c1\">3</span>, tf.float32),<span class=\"pl-v\">sequence_length</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">5</span>)\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> session:\n    tf.initialize_all_variables().run()\n    <span class=\"pl-c1\">print</span>(session.run(bi))</pre></div>\n<p>error:<br>\n\"Shapes %s and %s must have the same rank\" % (self, other))<br>\nValueError: Shapes TensorShape([]) and TensorShape([Dimension(None)]) must have the same rank</p>\n<p>it seem that the inputs have a problem, Can you tell me why ?</p>", "body_text": "code:\nimport tensorflow as tf\nfrom tensorflow.models.rnn import rnn,rnn_cell\n\nseq_length = 5\nrnn_size = 6\ninput_data = [[1,2,3,4,5],[6,1,8,9,10],[11,12,1,14,15]]\nwith tf.device(\"/cpu:0\"):\n embedding = tf.get_variable(\"embedding\", [20, rnn_size])\n result = tf.nn.embedding_lookup(embedding, input_data)\n inputs = tf.split(1,seq_length,result)\n inputs = [tf.squeeze(input_, [1]) for input_ in inputs]\n\ncell_bw = rnn_cell.BasicLSTMCell(rnn_size)\ncell_fw = rnn_cell.BasicLSTMCell(rnn_size)\nbi = rnn.bidirectional_rnn(cell_fw,cell_bw,inputs,cell_fw.zero_state(3, tf.float32),cell_bw.zero_state(3, tf.float32),sequence_length=5)\n\nwith tf.Session() as session:\n    tf.initialize_all_variables().run()\n    print(session.run(bi))\nerror:\n\"Shapes %s and %s must have the same rank\" % (self, other))\nValueError: Shapes TensorShape([]) and TensorShape([Dimension(None)]) must have the same rank\nit seem that the inputs have a problem, Can you tell me why ?", "body": "code:\n\n``` python\nimport tensorflow as tf\nfrom tensorflow.models.rnn import rnn,rnn_cell\n\nseq_length = 5\nrnn_size = 6\ninput_data = [[1,2,3,4,5],[6,1,8,9,10],[11,12,1,14,15]]\nwith tf.device(\"/cpu:0\"):\n embedding = tf.get_variable(\"embedding\", [20, rnn_size])\n result = tf.nn.embedding_lookup(embedding, input_data)\n inputs = tf.split(1,seq_length,result)\n inputs = [tf.squeeze(input_, [1]) for input_ in inputs]\n\ncell_bw = rnn_cell.BasicLSTMCell(rnn_size)\ncell_fw = rnn_cell.BasicLSTMCell(rnn_size)\nbi = rnn.bidirectional_rnn(cell_fw,cell_bw,inputs,cell_fw.zero_state(3, tf.float32),cell_bw.zero_state(3, tf.float32),sequence_length=5)\n\nwith tf.Session() as session:\n    tf.initialize_all_variables().run()\n    print(session.run(bi))\n```\n\nerror:\n\"Shapes %s and %s must have the same rank\" % (self, other))\nValueError: Shapes TensorShape([]) and TensorShape([Dimension(None)]) must have the same rank\n\nit seem that the inputs have a problem, Can you tell me why ?\n"}