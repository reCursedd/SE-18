{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/359317439", "html_url": "https://github.com/tensorflow/tensorflow/issues/16271#issuecomment-359317439", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16271", "id": 359317439, "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTMxNzQzOQ==", "user": {"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-22T03:44:57Z", "updated_at": "2018-01-22T03:44:57Z", "author_association": "MEMBER", "body_html": "<p>Closing as this is working as intended as <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6221162\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/EugenHotaj\">@EugenHotaj</a> indicates. For your, model you can deifne things such that you make sure you never take a power of a negative base. This can be accomplished in a number of ways... the simplest being</p>\n<p>math.pow(math.max(epsilon, a) , b)<br>\nwhere epsilon is some small constant like 1e-3 to make sure you don't make something 0 either (because 0^negative is NaN as well). You can ask on StackOverflow if you have more concrete questions about how to make your model more numerically robust.<br>\nGood luck!</p>", "body_text": "Closing as this is working as intended as @EugenHotaj indicates. For your, model you can deifne things such that you make sure you never take a power of a negative base. This can be accomplished in a number of ways... the simplest being\nmath.pow(math.max(epsilon, a) , b)\nwhere epsilon is some small constant like 1e-3 to make sure you don't make something 0 either (because 0^negative is NaN as well). You can ask on StackOverflow if you have more concrete questions about how to make your model more numerically robust.\nGood luck!", "body": "Closing as this is working as intended as @EugenHotaj indicates. For your, model you can deifne things such that you make sure you never take a power of a negative base. This can be accomplished in a number of ways... the simplest being\r\n\r\nmath.pow(math.max(epsilon, a) , b)\r\nwhere epsilon is some small constant like 1e-3 to make sure you don't make something 0 either (because 0^negative is NaN as well). You can ask on StackOverflow if you have more concrete questions about how to make your model more numerically robust.\r\nGood luck!"}