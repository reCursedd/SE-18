{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15852", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15852/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15852/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15852/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15852", "id": 286031528, "node_id": "MDU6SXNzdWUyODYwMzE1Mjg=", "number": 15852, "title": "Eager: crashed when using embedding_lookup in tfe.defun in tfe.GradientTape", "user": {"login": "traveller59", "id": 28866047, "node_id": "MDQ6VXNlcjI4ODY2MDQ3", "avatar_url": "https://avatars1.githubusercontent.com/u/28866047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/traveller59", "html_url": "https://github.com/traveller59", "followers_url": "https://api.github.com/users/traveller59/followers", "following_url": "https://api.github.com/users/traveller59/following{/other_user}", "gists_url": "https://api.github.com/users/traveller59/gists{/gist_id}", "starred_url": "https://api.github.com/users/traveller59/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/traveller59/subscriptions", "organizations_url": "https://api.github.com/users/traveller59/orgs", "repos_url": "https://api.github.com/users/traveller59/repos", "events_url": "https://api.github.com/users/traveller59/events{/privacy}", "received_events_url": "https://api.github.com/users/traveller59/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 736653459, "node_id": "MDU6TGFiZWw3MzY2NTM0NTk=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:eager", "name": "comp:eager", "color": "0052cc", "default": false}, {"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-01-04T16:01:07Z", "updated_at": "2018-01-24T16:50:20Z", "closed_at": "2018-01-24T16:50:20Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:Win10</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:binary</li>\n<li><strong>TensorFlow version (use command below)</strong>:1.5.0dev20171230</li>\n<li><strong>Python version</strong>: 3.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>:N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:N/A</li>\n<li><strong>CUDA/cuDNN version</strong>:9.0/7.0</li>\n<li><strong>GPU model and memory</strong>:pascal</li>\n<li><strong>Exact command to reproduce</strong>:N/A</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>When I train a seq2seq model in eager, backward will raise a error:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-ii\">--------------------------------------------------------------------------</span><span class=\"pl-k\">-</span>\nInvalidArgumentError                      Traceback (most recent call last)\nc:\\<span class=\"pl-ii\">users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py in get_attr(self, name)</span>\n   <span class=\"pl-c1\">2162</span>           <span class=\"pl-k\">with</span> errors.raise_exception_on_not_ok_status() <span class=\"pl-k\">as</span> status:\n<span class=\"pl-ii\">-&gt;</span> <span class=\"pl-c1\">2163</span>             c_api.TF_OperationGetAttrValueProto(<span class=\"pl-c1\">self</span>._c_op, name, buf, status)\n   <span class=\"pl-c1\">2164</span>           data <span class=\"pl-k\">=</span> c_api.TF_GetBuffer(buf)\n\nc:\\<span class=\"pl-ii\">users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\errors_impl.py in __exit__(self, type_arg, value_arg, traceback_arg)</span>\n    <span class=\"pl-c1\">472</span>             compat.as_text(c_api.TF_Message(<span class=\"pl-c1\">self</span>.status.status)),\n<span class=\"pl-ii\">--</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">473</span>             c_api.TF_GetCode(<span class=\"pl-c1\">self</span>.status.status))\n    <span class=\"pl-c1\">474</span>     <span class=\"pl-c\"><span class=\"pl-c\">#</span> Delete the underlying status object from memory otherwise it stays alive</span>\n\nInvalidArgumentError: Operation <span class=\"pl-s\"><span class=\"pl-pds\">'</span>embedding_lookup<span class=\"pl-pds\">'</span></span> has no attr named <span class=\"pl-s\"><span class=\"pl-pds\">'</span>_XlaCompile<span class=\"pl-pds\">'</span></span>.\n\nDuring handling of the above exception, another exception occurred:\n\n<span class=\"pl-c1\">ValueError</span>                                Traceback (most recent call last)\nc:\\<span class=\"pl-ii\">users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\gradients_impl.py in _MaybeCompile(scope, op, func, grad_fn)</span>\n    <span class=\"pl-c1\">369</span>     <span class=\"pl-k\">try</span>:\n<span class=\"pl-ii\">--</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">370</span>       xla_compile <span class=\"pl-k\">=</span> op.get_attr(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>_XlaCompile<span class=\"pl-pds\">\"</span></span>)\n    <span class=\"pl-c1\">371</span>       xla_separate_compiled_gradients <span class=\"pl-k\">=</span> op.get_attr(\n\nc:\\<span class=\"pl-ii\">users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py in get_attr(self, name)</span>\n   <span class=\"pl-c1\">2166</span>         <span class=\"pl-c\"><span class=\"pl-c\">#</span> Convert to ValueError for backwards compatibility.</span>\n<span class=\"pl-ii\">-&gt;</span> <span class=\"pl-c1\">2167</span>         <span class=\"pl-k\">raise</span> <span class=\"pl-c1\">ValueError</span>(<span class=\"pl-c1\">str</span>(e))\n   <span class=\"pl-c1\">2168</span>       <span class=\"pl-v\">x</span> <span class=\"pl-k\">=</span> attr_value_pb2.AttrValue()\n\n<span class=\"pl-c1\">ValueError</span>: Operation <span class=\"pl-s\"><span class=\"pl-pds\">'</span>embedding_lookup<span class=\"pl-pds\">'</span></span> has no attr named <span class=\"pl-s\"><span class=\"pl-pds\">'</span>_XlaCompile<span class=\"pl-pds\">'</span></span>.\n\nDuring handling of the above exception, another exception occurred:\n\n<span class=\"pl-c1\">IndexError</span>                                Traceback (most recent call last)\n<span class=\"pl-k\">&lt;</span>ipython<span class=\"pl-k\">-</span><span class=\"pl-c1\">input</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span><span class=\"pl-k\">-</span>ed6ea9045e3f<span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>()\n     <span class=\"pl-c1\">12</span>         <span class=\"pl-v\">embed</span> <span class=\"pl-k\">=</span> tfe.Variable(np.ones((<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">100</span>)).astype(np.float32))\n     <span class=\"pl-c1\">13</span>         <span class=\"pl-v\">toy_data</span> <span class=\"pl-k\">=</span> np.ones((<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">10</span>)).astype(np.int64)\n<span class=\"pl-ii\">--</span><span class=\"pl-ii\">-&gt;</span> <span class=\"pl-c1\">14</span>         embedding_crash(toy_data, embed)\n\nc:\\<span class=\"pl-ii\">users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\eager\\function.py in decorated(*args, **kwds)</span>\n    <span class=\"pl-c1\">639</span>       arguments_to_functions[cache_key] <span class=\"pl-k\">=</span> _defun_internal(\n    <span class=\"pl-c1\">640</span>           name, func, args, kwds)\n<span class=\"pl-ii\">--</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">641</span>     <span class=\"pl-k\">return</span> arguments_to_functions[cache_key](<span class=\"pl-k\">*</span>args)\n    <span class=\"pl-c1\">642</span> \n    <span class=\"pl-c1\">643</span>   <span class=\"pl-k\">return</span> decorated\n\nc:\\<span class=\"pl-ii\">users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\eager\\function.py in __call__(self, *args)</span>\n    <span class=\"pl-c1\">461</span>         <span class=\"pl-c1\">self</span>._extra_inputs):\n    <span class=\"pl-c1\">462</span>       <span class=\"pl-k\">if</span> <span class=\"pl-k\">not</span> <span class=\"pl-c1\">self</span>._has_backprop:\n<span class=\"pl-ii\">--</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">463</span>         <span class=\"pl-c1\">self</span>._compute_backprop()\n    <span class=\"pl-c1\">464</span>       <span class=\"pl-k\">return</span> <span class=\"pl-c1\">self</span>._backprop_call(tensor_inputs)\n    <span class=\"pl-c1\">465</span> \n\nc:\\<span class=\"pl-ii\">users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\eager\\function.py in _compute_backprop(self)</span>\n    <span class=\"pl-c1\">359</span>             filtered_outputs,\n    <span class=\"pl-c1\">360</span>             <span class=\"pl-c1\">self</span>._input_placeholders,\n<span class=\"pl-ii\">--</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">361</span>             grad_ys<span class=\"pl-k\">=</span><span class=\"pl-c1\">self</span>._out_grad_placeholders)\n    <span class=\"pl-c1\">362</span>         shapes <span class=\"pl-k\">=</span> <span class=\"pl-c1\">tuple</span>(x.shape <span class=\"pl-k\">for</span> x <span class=\"pl-k\">in</span> in_gradients <span class=\"pl-k\">if</span> x <span class=\"pl-k\">is</span> <span class=\"pl-k\">not</span> <span class=\"pl-c1\">None</span>)\n    <span class=\"pl-c1\">363</span>     captures <span class=\"pl-k\">=</span> <span class=\"pl-c1\">list</span>(<span class=\"pl-c1\">sorted</span>(c.captured_tensors, <span class=\"pl-v\">key</span><span class=\"pl-k\">=</span><span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">x</span>: x.name))\n\nc:\\<span class=\"pl-ii\">users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\gradients_impl.py in gradients(ys, xs, grad_ys, name, colocate_gradients_with_ops, gate_gradients, aggregation_method, stop_gradients)</span>\n    <span class=\"pl-c1\">607</span>                 <span class=\"pl-c\"><span class=\"pl-c\">#</span> functions.</span>\n    <span class=\"pl-c1\">608</span>                 in_grads <span class=\"pl-k\">=</span> _MaybeCompile(\n<span class=\"pl-ii\">--</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">609</span>                     grad_scope, op, func_call, <span class=\"pl-k\">lambda</span>: grad_fn(op, <span class=\"pl-k\">*</span>out_grads))\n    <span class=\"pl-c1\">610</span>               <span class=\"pl-k\">else</span>:\n    <span class=\"pl-c1\">611</span>                 <span class=\"pl-c\"><span class=\"pl-c\">#</span> For function call ops, we add a 'SymbolicGradient'</span>\n\nc:\\<span class=\"pl-ii\">users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\gradients_impl.py in _MaybeCompile(scope, op, func, grad_fn)</span>\n    <span class=\"pl-c1\">373</span>       xla_scope <span class=\"pl-k\">=</span> op.get_attr(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>_XlaScope<span class=\"pl-pds\">\"</span></span>).decode()\n    <span class=\"pl-c1\">374</span>     <span class=\"pl-k\">except</span> <span class=\"pl-c1\">ValueError</span>:\n<span class=\"pl-ii\">--</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">375</span>       <span class=\"pl-k\">return</span> grad_fn()  <span class=\"pl-c\"><span class=\"pl-c\">#</span> Exit early</span>\n    <span class=\"pl-c1\">376</span> \n    <span class=\"pl-c1\">377</span>   <span class=\"pl-k\">if</span> <span class=\"pl-k\">not</span> xla_compile:\n\nc:\\<span class=\"pl-ii\">users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\gradients_impl.py in &lt;lambda&gt;()</span>\n    <span class=\"pl-c1\">607</span>                 <span class=\"pl-c\"><span class=\"pl-c\">#</span> functions.</span>\n    <span class=\"pl-c1\">608</span>                 in_grads <span class=\"pl-k\">=</span> _MaybeCompile(\n<span class=\"pl-ii\">--</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">609</span>                     grad_scope, op, func_call, <span class=\"pl-k\">lambda</span>: grad_fn(op, <span class=\"pl-k\">*</span>out_grads))\n    <span class=\"pl-c1\">610</span>               <span class=\"pl-k\">else</span>:\n    <span class=\"pl-c1\">611</span>                 <span class=\"pl-c\"><span class=\"pl-c\">#</span> For function call ops, we add a 'SymbolicGradient'</span>\n\nc:\\<span class=\"pl-ii\">users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\resource_variable_ops.py in _GatherGrad(op, grad)</span>\n    <span class=\"pl-c1\">895</span>     <span class=\"pl-c\"><span class=\"pl-c\">#</span> <span class=\"pl-k\">TODO</span>(apassos): implement this for EAGER mode.</span>\n    <span class=\"pl-c1\">896</span>     <span class=\"pl-k\">while</span> handle.op.type <span class=\"pl-k\">!=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>VarHandleOp<span class=\"pl-pds\">\"</span></span>:\n<span class=\"pl-ii\">--</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">897</span>       handle <span class=\"pl-k\">=</span> handle.op.inputs[<span class=\"pl-c1\">0</span>]\n    <span class=\"pl-c1\">898</span>   params_shape <span class=\"pl-k\">=</span> gen_resource_variable_ops.variable_shape(handle)\n    <span class=\"pl-c1\">899</span>   size <span class=\"pl-k\">=</span> array_ops.expand_dims(array_ops.size(indices), <span class=\"pl-c1\">0</span>)\n\nc:\\<span class=\"pl-ii\">users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py in __getitem__(self, i)</span>\n   <span class=\"pl-c1\">1992</span> \n   <span class=\"pl-c1\">1993</span>     <span class=\"pl-k\">def</span> <span class=\"pl-c1\">__getitem__</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">i</span>):\n<span class=\"pl-ii\">-&gt;</span> <span class=\"pl-c1\">1994</span>       <span class=\"pl-k\">return</span> <span class=\"pl-c1\">self</span>._inputs[i]\n   <span class=\"pl-c1\">1995</span> \n   <span class=\"pl-c1\">1996</span> <span class=\"pl-c\"><span class=\"pl-c\">#</span> pylint: enable=protected-access</span>\n\n<span class=\"pl-c1\">IndexError</span>: <span class=\"pl-c1\">list</span> index out of <span class=\"pl-c1\">range</span></pre></div>\n<p>No problem when remove @tfe.defun, but eager is very slow without defun so I need to compile model with tfe.defun.<br>\ncode to reproduce error:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">import</span> tensorflow.contrib.eager <span class=\"pl-k\">as</span> tfe\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\ntfe.enable_eager_execution()\n<span class=\"pl-en\">@tfe.defun</span>\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">embedding_crash</span>(<span class=\"pl-smi\">x</span>, <span class=\"pl-smi\">embedding</span>):\n    <span class=\"pl-k\">return</span> tf.nn.embedding_lookup(embedding, x)\n<span class=\"pl-k\">with</span> tf.device(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>gpu:0<span class=\"pl-pds\">\"</span></span>):\n    <span class=\"pl-k\">with</span> tfe.GradientTape() <span class=\"pl-k\">as</span> g:\n        embed <span class=\"pl-k\">=</span> tfe.Variable(np.ones((<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">100</span>)).astype(np.float32))\n        toy_data <span class=\"pl-k\">=</span> np.ones((<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">10</span>)).astype(np.int64)\n        embedding_crash(toy_data, embed)</pre></div>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):Win10\nTensorFlow installed from (source or binary):binary\nTensorFlow version (use command below):1.5.0dev20171230\nPython version: 3.6\nBazel version (if compiling from source):N/A\nGCC/Compiler version (if compiling from source):N/A\nCUDA/cuDNN version:9.0/7.0\nGPU model and memory:pascal\nExact command to reproduce:N/A\n\nDescribe the problem\nWhen I train a seq2seq model in eager, backward will raise a error:\n---------------------------------------------------------------------------\nInvalidArgumentError                      Traceback (most recent call last)\nc:\\users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py in get_attr(self, name)\n   2162           with errors.raise_exception_on_not_ok_status() as status:\n-> 2163             c_api.TF_OperationGetAttrValueProto(self._c_op, name, buf, status)\n   2164           data = c_api.TF_GetBuffer(buf)\n\nc:\\users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\errors_impl.py in __exit__(self, type_arg, value_arg, traceback_arg)\n    472             compat.as_text(c_api.TF_Message(self.status.status)),\n--> 473             c_api.TF_GetCode(self.status.status))\n    474     # Delete the underlying status object from memory otherwise it stays alive\n\nInvalidArgumentError: Operation 'embedding_lookup' has no attr named '_XlaCompile'.\n\nDuring handling of the above exception, another exception occurred:\n\nValueError                                Traceback (most recent call last)\nc:\\users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\gradients_impl.py in _MaybeCompile(scope, op, func, grad_fn)\n    369     try:\n--> 370       xla_compile = op.get_attr(\"_XlaCompile\")\n    371       xla_separate_compiled_gradients = op.get_attr(\n\nc:\\users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py in get_attr(self, name)\n   2166         # Convert to ValueError for backwards compatibility.\n-> 2167         raise ValueError(str(e))\n   2168       x = attr_value_pb2.AttrValue()\n\nValueError: Operation 'embedding_lookup' has no attr named '_XlaCompile'.\n\nDuring handling of the above exception, another exception occurred:\n\nIndexError                                Traceback (most recent call last)\n<ipython-input-1-ed6ea9045e3f> in <module>()\n     12         embed = tfe.Variable(np.ones((10, 100)).astype(np.float32))\n     13         toy_data = np.ones((1, 10)).astype(np.int64)\n---> 14         embedding_crash(toy_data, embed)\n\nc:\\users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\eager\\function.py in decorated(*args, **kwds)\n    639       arguments_to_functions[cache_key] = _defun_internal(\n    640           name, func, args, kwds)\n--> 641     return arguments_to_functions[cache_key](*args)\n    642 \n    643   return decorated\n\nc:\\users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\eager\\function.py in __call__(self, *args)\n    461         self._extra_inputs):\n    462       if not self._has_backprop:\n--> 463         self._compute_backprop()\n    464       return self._backprop_call(tensor_inputs)\n    465 \n\nc:\\users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\eager\\function.py in _compute_backprop(self)\n    359             filtered_outputs,\n    360             self._input_placeholders,\n--> 361             grad_ys=self._out_grad_placeholders)\n    362         shapes = tuple(x.shape for x in in_gradients if x is not None)\n    363     captures = list(sorted(c.captured_tensors, key=lambda x: x.name))\n\nc:\\users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\gradients_impl.py in gradients(ys, xs, grad_ys, name, colocate_gradients_with_ops, gate_gradients, aggregation_method, stop_gradients)\n    607                 # functions.\n    608                 in_grads = _MaybeCompile(\n--> 609                     grad_scope, op, func_call, lambda: grad_fn(op, *out_grads))\n    610               else:\n    611                 # For function call ops, we add a 'SymbolicGradient'\n\nc:\\users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\gradients_impl.py in _MaybeCompile(scope, op, func, grad_fn)\n    373       xla_scope = op.get_attr(\"_XlaScope\").decode()\n    374     except ValueError:\n--> 375       return grad_fn()  # Exit early\n    376 \n    377   if not xla_compile:\n\nc:\\users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\gradients_impl.py in <lambda>()\n    607                 # functions.\n    608                 in_grads = _MaybeCompile(\n--> 609                     grad_scope, op, func_call, lambda: grad_fn(op, *out_grads))\n    610               else:\n    611                 # For function call ops, we add a 'SymbolicGradient'\n\nc:\\users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\resource_variable_ops.py in _GatherGrad(op, grad)\n    895     # TODO(apassos): implement this for EAGER mode.\n    896     while handle.op.type != \"VarHandleOp\":\n--> 897       handle = handle.op.inputs[0]\n    898   params_shape = gen_resource_variable_ops.variable_shape(handle)\n    899   size = array_ops.expand_dims(array_ops.size(indices), 0)\n\nc:\\users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py in __getitem__(self, i)\n   1992 \n   1993     def __getitem__(self, i):\n-> 1994       return self._inputs[i]\n   1995 \n   1996 # pylint: enable=protected-access\n\nIndexError: list index out of range\nNo problem when remove @tfe.defun, but eager is very slow without defun so I need to compile model with tfe.defun.\ncode to reproduce error:\nimport tensorflow as tf\nimport tensorflow.contrib.eager as tfe\nimport numpy as np\ntfe.enable_eager_execution()\n@tfe.defun\ndef embedding_crash(x, embedding):\n    return tf.nn.embedding_lookup(embedding, x)\nwith tf.device(\"gpu:0\"):\n    with tfe.GradientTape() as g:\n        embed = tfe.Variable(np.ones((10, 100)).astype(np.float32))\n        toy_data = np.ones((1, 10)).astype(np.int64)\n        embedding_crash(toy_data, embed)", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:Win10\r\n- **TensorFlow installed from (source or binary)**:binary\r\n- **TensorFlow version (use command below)**:1.5.0dev20171230\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**:N/A\r\n- **GCC/Compiler version (if compiling from source)**:N/A\r\n- **CUDA/cuDNN version**:9.0/7.0\r\n- **GPU model and memory**:pascal\r\n- **Exact command to reproduce**:N/A\r\n### Describe the problem\r\nWhen I train a seq2seq model in eager, backward will raise a error:\r\n```Python\r\n---------------------------------------------------------------------------\r\nInvalidArgumentError                      Traceback (most recent call last)\r\nc:\\users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py in get_attr(self, name)\r\n   2162           with errors.raise_exception_on_not_ok_status() as status:\r\n-> 2163             c_api.TF_OperationGetAttrValueProto(self._c_op, name, buf, status)\r\n   2164           data = c_api.TF_GetBuffer(buf)\r\n\r\nc:\\users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\errors_impl.py in __exit__(self, type_arg, value_arg, traceback_arg)\r\n    472             compat.as_text(c_api.TF_Message(self.status.status)),\r\n--> 473             c_api.TF_GetCode(self.status.status))\r\n    474     # Delete the underlying status object from memory otherwise it stays alive\r\n\r\nInvalidArgumentError: Operation 'embedding_lookup' has no attr named '_XlaCompile'.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nValueError                                Traceback (most recent call last)\r\nc:\\users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\gradients_impl.py in _MaybeCompile(scope, op, func, grad_fn)\r\n    369     try:\r\n--> 370       xla_compile = op.get_attr(\"_XlaCompile\")\r\n    371       xla_separate_compiled_gradients = op.get_attr(\r\n\r\nc:\\users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py in get_attr(self, name)\r\n   2166         # Convert to ValueError for backwards compatibility.\r\n-> 2167         raise ValueError(str(e))\r\n   2168       x = attr_value_pb2.AttrValue()\r\n\r\nValueError: Operation 'embedding_lookup' has no attr named '_XlaCompile'.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nIndexError                                Traceback (most recent call last)\r\n<ipython-input-1-ed6ea9045e3f> in <module>()\r\n     12         embed = tfe.Variable(np.ones((10, 100)).astype(np.float32))\r\n     13         toy_data = np.ones((1, 10)).astype(np.int64)\r\n---> 14         embedding_crash(toy_data, embed)\r\n\r\nc:\\users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\eager\\function.py in decorated(*args, **kwds)\r\n    639       arguments_to_functions[cache_key] = _defun_internal(\r\n    640           name, func, args, kwds)\r\n--> 641     return arguments_to_functions[cache_key](*args)\r\n    642 \r\n    643   return decorated\r\n\r\nc:\\users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\eager\\function.py in __call__(self, *args)\r\n    461         self._extra_inputs):\r\n    462       if not self._has_backprop:\r\n--> 463         self._compute_backprop()\r\n    464       return self._backprop_call(tensor_inputs)\r\n    465 \r\n\r\nc:\\users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\eager\\function.py in _compute_backprop(self)\r\n    359             filtered_outputs,\r\n    360             self._input_placeholders,\r\n--> 361             grad_ys=self._out_grad_placeholders)\r\n    362         shapes = tuple(x.shape for x in in_gradients if x is not None)\r\n    363     captures = list(sorted(c.captured_tensors, key=lambda x: x.name))\r\n\r\nc:\\users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\gradients_impl.py in gradients(ys, xs, grad_ys, name, colocate_gradients_with_ops, gate_gradients, aggregation_method, stop_gradients)\r\n    607                 # functions.\r\n    608                 in_grads = _MaybeCompile(\r\n--> 609                     grad_scope, op, func_call, lambda: grad_fn(op, *out_grads))\r\n    610               else:\r\n    611                 # For function call ops, we add a 'SymbolicGradient'\r\n\r\nc:\\users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\gradients_impl.py in _MaybeCompile(scope, op, func, grad_fn)\r\n    373       xla_scope = op.get_attr(\"_XlaScope\").decode()\r\n    374     except ValueError:\r\n--> 375       return grad_fn()  # Exit early\r\n    376 \r\n    377   if not xla_compile:\r\n\r\nc:\\users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\gradients_impl.py in <lambda>()\r\n    607                 # functions.\r\n    608                 in_grads = _MaybeCompile(\r\n--> 609                     grad_scope, op, func_call, lambda: grad_fn(op, *out_grads))\r\n    610               else:\r\n    611                 # For function call ops, we add a 'SymbolicGradient'\r\n\r\nc:\\users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\ops\\resource_variable_ops.py in _GatherGrad(op, grad)\r\n    895     # TODO(apassos): implement this for EAGER mode.\r\n    896     while handle.op.type != \"VarHandleOp\":\r\n--> 897       handle = handle.op.inputs[0]\r\n    898   params_shape = gen_resource_variable_ops.variable_shape(handle)\r\n    899   size = array_ops.expand_dims(array_ops.size(indices), 0)\r\n\r\nc:\\users\\yanyan\\anaconda3\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py in __getitem__(self, i)\r\n   1992 \r\n   1993     def __getitem__(self, i):\r\n-> 1994       return self._inputs[i]\r\n   1995 \r\n   1996 # pylint: enable=protected-access\r\n\r\nIndexError: list index out of range\r\n```\r\nNo problem when remove @tfe.defun, but eager is very slow without defun so I need to compile model with tfe.defun.\r\ncode to reproduce error:\r\n```Python\r\nimport tensorflow as tf\r\nimport tensorflow.contrib.eager as tfe\r\nimport numpy as np\r\ntfe.enable_eager_execution()\r\n@tfe.defun\r\ndef embedding_crash(x, embedding):\r\n    return tf.nn.embedding_lookup(embedding, x)\r\nwith tf.device(\"gpu:0\"):\r\n    with tfe.GradientTape() as g:\r\n        embed = tfe.Variable(np.ones((10, 100)).astype(np.float32))\r\n        toy_data = np.ones((1, 10)).astype(np.int64)\r\n        embedding_crash(toy_data, embed)\r\n```\r\n  "}