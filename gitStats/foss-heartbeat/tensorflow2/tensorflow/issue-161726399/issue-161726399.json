{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2996", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2996/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2996/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2996/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/2996", "id": 161726399, "node_id": "MDU6SXNzdWUxNjE3MjYzOTk=", "number": 2996, "title": "tf.reduce_sum(a) is slow", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-22T16:20:24Z", "updated_at": "2016-06-25T01:27:33Z", "closed_at": "2016-06-22T18:15:36Z", "author_association": "CONTRIBUTOR", "body_html": "<p>For large vectors, cost of <code>tf.reduce_sum(a)</code> is dominated by cost of <code>range</code> that's called to construct list of reduction indices.</p>\n<p>Summing up 10k elements 1500 times, I get about 0.8 seconds spent in <code>_sum</code> while 2 seconds is spent in <code>range</code>. Also, transferring all those indices to sum probably slows things down. This only happens when static graph optimizations don't apply. Will update with reproducible benchmark in a bit</p>", "body_text": "For large vectors, cost of tf.reduce_sum(a) is dominated by cost of range that's called to construct list of reduction indices.\nSumming up 10k elements 1500 times, I get about 0.8 seconds spent in _sum while 2 seconds is spent in range. Also, transferring all those indices to sum probably slows things down. This only happens when static graph optimizations don't apply. Will update with reproducible benchmark in a bit", "body": "For large vectors, cost of `tf.reduce_sum(a)` is dominated by cost of `range` that's called to construct list of reduction indices.\n\nSumming up 10k elements 1500 times, I get about 0.8 seconds spent in `_sum` while 2 seconds is spent in `range`. Also, transferring all those indices to sum probably slows things down. This only happens when static graph optimizations don't apply. Will update with reproducible benchmark in a bit\n"}