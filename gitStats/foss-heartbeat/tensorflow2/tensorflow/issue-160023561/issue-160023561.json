{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2838", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2838/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2838/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2838/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/2838", "id": 160023561, "node_id": "MDU6SXNzdWUxNjAwMjM1NjE=", "number": 2838, "title": "Get placeholder for initial state of nested RNN", "user": {"login": "danijar", "id": 2111293, "node_id": "MDQ6VXNlcjIxMTEyOTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2111293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danijar", "html_url": "https://github.com/danijar", "followers_url": "https://api.github.com/users/danijar/followers", "following_url": "https://api.github.com/users/danijar/following{/other_user}", "gists_url": "https://api.github.com/users/danijar/gists{/gist_id}", "starred_url": "https://api.github.com/users/danijar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danijar/subscriptions", "organizations_url": "https://api.github.com/users/danijar/orgs", "repos_url": "https://api.github.com/users/danijar/repos", "events_url": "https://api.github.com/users/danijar/events{/privacy}", "received_events_url": "https://api.github.com/users/danijar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 24, "created_at": "2016-06-13T19:14:08Z", "updated_at": "2018-07-26T18:48:24Z", "closed_at": "2016-08-31T00:10:56Z", "author_association": "MEMBER", "body_html": "<p>For RNN cells, we get the initial state using <code>cell.zero_state()</code> and the last state after processing a sequence using <code>rnn.dynamic_rnn()</code>. However, to use the last state as the initial state for the next run, one must create a <code>tf.placeholder()</code>. As far as I know, currently there is no way to create and fill such  a placeholder (or nested tuple of placeholders) automatically. Such a feature would be very useful so that we don't have to adjust the placeholder manually when changing the RNN cell.</p>", "body_text": "For RNN cells, we get the initial state using cell.zero_state() and the last state after processing a sequence using rnn.dynamic_rnn(). However, to use the last state as the initial state for the next run, one must create a tf.placeholder(). As far as I know, currently there is no way to create and fill such  a placeholder (or nested tuple of placeholders) automatically. Such a feature would be very useful so that we don't have to adjust the placeholder manually when changing the RNN cell.", "body": "For RNN cells, we get the initial state using `cell.zero_state()` and the last state after processing a sequence using `rnn.dynamic_rnn()`. However, to use the last state as the initial state for the next run, one must create a `tf.placeholder()`. As far as I know, currently there is no way to create and fill such  a placeholder (or nested tuple of placeholders) automatically. Such a feature would be very useful so that we don't have to adjust the placeholder manually when changing the RNN cell.\n"}