{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/194948885", "html_url": "https://github.com/tensorflow/tensorflow/issues/1287#issuecomment-194948885", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1287", "id": 194948885, "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDk0ODg4NQ==", "user": {"login": "jameswex", "id": 15835086, "node_id": "MDQ6VXNlcjE1ODM1MDg2", "avatar_url": "https://avatars1.githubusercontent.com/u/15835086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jameswex", "html_url": "https://github.com/jameswex", "followers_url": "https://api.github.com/users/jameswex/followers", "following_url": "https://api.github.com/users/jameswex/following{/other_user}", "gists_url": "https://api.github.com/users/jameswex/gists{/gist_id}", "starred_url": "https://api.github.com/users/jameswex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jameswex/subscriptions", "organizations_url": "https://api.github.com/users/jameswex/orgs", "repos_url": "https://api.github.com/users/jameswex/repos", "events_url": "https://api.github.com/users/jameswex/events{/privacy}", "received_events_url": "https://api.github.com/users/jameswex/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-10T16:50:58Z", "updated_at": "2016-03-10T16:50:58Z", "author_association": "CONTRIBUTOR", "body_html": "<p>From what I see locally, it seems like this was fixed in Tensorboard in commit <a href=\"https://github.com/tensorflow/tensorflow/commit/3212eb3c874452ea928e23246e524b147f31cd15#diff-ec1b56f78fd3bd9bf0a48af0a61dd71f\">3212eb3</a>. Basically, the graphdef contains huge embedded constant tensors, making the graphdef size too large for the client to handle when it is based from Tensorboard server to the client browser. That commit adds server-side filtering out of large embedded constants, making the client able to handle the served graph data.</p>\n<p>So, building Tensorboard from scratch on master should allow visualization of inception_v3. Also, the next tagged release should also include a rebuilt Tensorboard with the fix.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1332812\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/dgolden1\">@dgolden1</a> and <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4504507\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ffmpbgrnn\">@ffmpbgrnn</a>, did you rebuild the Tensorboard frontend and backend explicitly? Perhaps rebuilding from the TF root doesn't rebuild the Tensorboard components?</p>", "body_text": "From what I see locally, it seems like this was fixed in Tensorboard in commit 3212eb3. Basically, the graphdef contains huge embedded constant tensors, making the graphdef size too large for the client to handle when it is based from Tensorboard server to the client browser. That commit adds server-side filtering out of large embedded constants, making the client able to handle the served graph data.\nSo, building Tensorboard from scratch on master should allow visualization of inception_v3. Also, the next tagged release should also include a rebuilt Tensorboard with the fix.\n@dgolden1 and @ffmpbgrnn, did you rebuild the Tensorboard frontend and backend explicitly? Perhaps rebuilding from the TF root doesn't rebuild the Tensorboard components?", "body": "From what I see locally, it seems like this was fixed in Tensorboard in commit [3212eb3](https://github.com/tensorflow/tensorflow/commit/3212eb3c874452ea928e23246e524b147f31cd15#diff-ec1b56f78fd3bd9bf0a48af0a61dd71f). Basically, the graphdef contains huge embedded constant tensors, making the graphdef size too large for the client to handle when it is based from Tensorboard server to the client browser. That commit adds server-side filtering out of large embedded constants, making the client able to handle the served graph data.\n\nSo, building Tensorboard from scratch on master should allow visualization of inception_v3. Also, the next tagged release should also include a rebuilt Tensorboard with the fix.\n\n@dgolden1 and @ffmpbgrnn, did you rebuild the Tensorboard frontend and backend explicitly? Perhaps rebuilding from the TF root doesn't rebuild the Tensorboard components?\n"}