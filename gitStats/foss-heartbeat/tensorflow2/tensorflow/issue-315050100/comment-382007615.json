{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/382007615", "html_url": "https://github.com/tensorflow/tensorflow/issues/18598#issuecomment-382007615", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18598", "id": 382007615, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjAwNzYxNQ==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-17T14:13:24Z", "updated_at": "2018-04-17T14:13:24Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=22060313\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/annarev\">@annarev</a> When I trace through this code in Python 3, it does indeed look like <code>tf.compat.as_str()</code> is mapped to this function:</p>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/3128b43eb0bf37ac3c49cb22a6e1789d8ea346e8/tensorflow/python/util/compat.py#L48-L68\">tensorflow/tensorflow/python/util/compat.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 48 to 68\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/3128b43eb0bf37ac3c49cb22a6e1789d8ea346e8\">3128b43</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L48\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"48\"></td>\n          <td id=\"LC48\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-en\">@tf_export</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>compat.as_bytes<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>compat.as_str<span class=\"pl-pds\">'</span></span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L49\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"49\"></td>\n          <td id=\"LC49\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">def</span> <span class=\"pl-en\">as_bytes</span>(<span class=\"pl-smi\">bytes_or_text</span>, <span class=\"pl-smi\">encoding</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>utf-8<span class=\"pl-pds\">'</span></span>): </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L50\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"50\"></td>\n          <td id=\"LC50\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span>Converts either bytes or unicode to `bytes`, using utf-8 encoding for text.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L51\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"51\"></td>\n          <td id=\"LC51\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-s\"></span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L52\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"52\"></td>\n          <td id=\"LC52\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-s\">  Args:</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L53\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"53\"></td>\n          <td id=\"LC53\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-s\">    bytes_or_text: A `bytes`, `str`, or `unicode` object.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L54\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"54\"></td>\n          <td id=\"LC54\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-s\">    encoding: A string indicating the charset for encoding unicode.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L55\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"55\"></td>\n          <td id=\"LC55\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-s\"></span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L56\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"56\"></td>\n          <td id=\"LC56\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-s\">  Returns:</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L57\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"57\"></td>\n          <td id=\"LC57\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-s\">    A `bytes` object.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L58\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"58\"></td>\n          <td id=\"LC58\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-s\"></span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L59\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"59\"></td>\n          <td id=\"LC59\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-s\">  Raises:</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L60\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"60\"></td>\n          <td id=\"LC60\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-s\">    TypeError: If `bytes_or_text` is not a binary or unicode string.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L61\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"61\"></td>\n          <td id=\"LC61\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-s\">  <span class=\"pl-pds\">\"\"\"</span></span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L62\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"62\"></td>\n          <td id=\"LC62\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">if</span> <span class=\"pl-c1\">isinstance</span>(bytes_or_text, _six.text_type): </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L63\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"63\"></td>\n          <td id=\"LC63\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-k\">return</span> bytes_or_text.encode(encoding) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L64\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"64\"></td>\n          <td id=\"LC64\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">elif</span> <span class=\"pl-c1\">isinstance</span>(bytes_or_text, <span class=\"pl-c1\">bytes</span>): </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L65\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"65\"></td>\n          <td id=\"LC65\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-k\">return</span> bytes_or_text </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L66\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"66\"></td>\n          <td id=\"LC66\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">else</span>: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L67\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"67\"></td>\n          <td id=\"LC67\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-k\">raise</span> <span class=\"pl-c1\">TypeError</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Expected binary or unicode string, got <span class=\"pl-c1\">%r</span><span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">%</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L68\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"68\"></td>\n          <td id=\"LC68\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">                     (bytes_or_text,)) </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>However, if I do <code>from tensorflow.python.util import compat</code>, <code>compat.as_str()</code> maps to <code>as_text()</code> via (presumably) this appropriate redirection:</p>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/3128b43eb0bf37ac3c49cb22a6e1789d8ea346e8/tensorflow/python/util/compat.py#L93-L97\">tensorflow/tensorflow/python/util/compat.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 93 to 97\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/3128b43eb0bf37ac3c49cb22a6e1789d8ea346e8\">3128b43</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L93\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"93\"></td>\n          <td id=\"LC93\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">#</span> Convert an object to a `str` in both Python 2 and 3.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L94\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"94\"></td>\n          <td id=\"LC94\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">if</span> _six.<span class=\"pl-c1\">PY2</span>: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L95\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"95\"></td>\n          <td id=\"LC95\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   as_str <span class=\"pl-k\">=</span> as_bytes </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L96\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"96\"></td>\n          <td id=\"LC96\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">else</span>: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L97\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"97\"></td>\n          <td id=\"LC97\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   as_str <span class=\"pl-k\">=</span> as_text </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>Is it possible that the <code>@tf_export()</code> decorator is rebinding the symbol incorrectly? From what I can tell, it has the correct behavior in Python 2, but should have different behavior in Python 3.</p>", "body_text": "@annarev When I trace through this code in Python 3, it does indeed look like tf.compat.as_str() is mapped to this function:\n\n  \n    \n      tensorflow/tensorflow/python/util/compat.py\n    \n    \n        Lines 48 to 68\n      in\n      3128b43\n    \n    \n    \n    \n\n        \n          \n           @tf_export('compat.as_bytes', 'compat.as_str') \n        \n\n        \n          \n           def as_bytes(bytes_or_text, encoding='utf-8'): \n        \n\n        \n          \n             \"\"\"Converts either bytes or unicode to `bytes`, using utf-8 encoding for text. \n        \n\n        \n          \n            \n        \n\n        \n          \n             Args: \n        \n\n        \n          \n               bytes_or_text: A `bytes`, `str`, or `unicode` object. \n        \n\n        \n          \n               encoding: A string indicating the charset for encoding unicode. \n        \n\n        \n          \n            \n        \n\n        \n          \n             Returns: \n        \n\n        \n          \n               A `bytes` object. \n        \n\n        \n          \n            \n        \n\n        \n          \n             Raises: \n        \n\n        \n          \n               TypeError: If `bytes_or_text` is not a binary or unicode string. \n        \n\n        \n          \n             \"\"\" \n        \n\n        \n          \n             if isinstance(bytes_or_text, _six.text_type): \n        \n\n        \n          \n               return bytes_or_text.encode(encoding) \n        \n\n        \n          \n             elif isinstance(bytes_or_text, bytes): \n        \n\n        \n          \n               return bytes_or_text \n        \n\n        \n          \n             else: \n        \n\n        \n          \n               raise TypeError('Expected binary or unicode string, got %r' % \n        \n\n        \n          \n                               (bytes_or_text,)) \n        \n    \n  \n\n\nHowever, if I do from tensorflow.python.util import compat, compat.as_str() maps to as_text() via (presumably) this appropriate redirection:\n\n  \n    \n      tensorflow/tensorflow/python/util/compat.py\n    \n    \n        Lines 93 to 97\n      in\n      3128b43\n    \n    \n    \n    \n\n        \n          \n           # Convert an object to a `str` in both Python 2 and 3. \n        \n\n        \n          \n           if _six.PY2: \n        \n\n        \n          \n             as_str = as_bytes \n        \n\n        \n          \n           else: \n        \n\n        \n          \n             as_str = as_text \n        \n    \n  \n\n\nIs it possible that the @tf_export() decorator is rebinding the symbol incorrectly? From what I can tell, it has the correct behavior in Python 2, but should have different behavior in Python 3.", "body": "@annarev When I trace through this code in Python 3, it does indeed look like `tf.compat.as_str()` is mapped to this function:\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/3128b43eb0bf37ac3c49cb22a6e1789d8ea346e8/tensorflow/python/util/compat.py#L48-L68\r\n\r\nHowever, if I do `from tensorflow.python.util import compat`, `compat.as_str()` maps to `as_text()` via (presumably) this appropriate redirection:\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/3128b43eb0bf37ac3c49cb22a6e1789d8ea346e8/tensorflow/python/util/compat.py#L93-L97\r\n\r\nIs it possible that the `@tf_export()` decorator is rebinding the symbol incorrectly? From what I can tell, it has the correct behavior in Python 2, but should have different behavior in Python 3."}