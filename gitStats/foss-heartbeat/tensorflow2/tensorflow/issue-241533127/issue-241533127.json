{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11395", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11395/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11395/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11395/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/11395", "id": 241533127, "node_id": "MDU6SXNzdWUyNDE1MzMxMjc=", "number": 11395, "title": "Gradients are not registered", "user": {"login": "DimanNe", "id": 279056, "node_id": "MDQ6VXNlcjI3OTA1Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/279056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DimanNe", "html_url": "https://github.com/DimanNe", "followers_url": "https://api.github.com/users/DimanNe/followers", "following_url": "https://api.github.com/users/DimanNe/following{/other_user}", "gists_url": "https://api.github.com/users/DimanNe/gists{/gist_id}", "starred_url": "https://api.github.com/users/DimanNe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DimanNe/subscriptions", "organizations_url": "https://api.github.com/users/DimanNe/orgs", "repos_url": "https://api.github.com/users/DimanNe/repos", "events_url": "https://api.github.com/users/DimanNe/events{/privacy}", "received_events_url": "https://api.github.com/users/DimanNe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-09T15:45:25Z", "updated_at": "2018-09-15T00:55:34Z", "closed_at": "2018-09-15T00:53:54Z", "author_association": "CONTRIBUTOR", "body_html": "<p>(System information probably is not relevant to the issue, so I moved it below)</p>\n<h2>The Problem</h2>\n<p>It seems that the code, generated by macros <code>REGISTER_GRADIENT_OP</code> in <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/cc/gradients/math_grad.cc\">math_grad.cc</a> is never executed:<br>\n<code>static bool unused_ret_val_123 = ::tensorflow::ops::GradOpRegistry::Global()-&gt;Register(name, fn);</code></p>\n<p>My <code>BUILD</code> file:</p>\n<pre><code>cc_binary(\n    name = \"bitwise_operations\",\n    srcs = [\n       \"main.cpp\"\n    ],\n    deps = [\n        \"//tensorflow/cc:grad_ops\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/cc:client_session\",\n        \"//tensorflow/core:tensorflow\",\n        \"//tensorflow/cc/DimanNe/tensorflow_utils:tensorflow_utils\",\n    ],\n)\n</code></pre>\n<h2>The cause</h2>\n<p><code>Bazel</code> generates such <code>tensorflow/bazel-out/local-dbg/bin/tensorflow/cc/DimanNe/bitwise_operations/bitwise_operations-2.params</code> that instructs linker to put <code>math_grad.pic.o</code> in separate static library, here is how it looks in the params file containing linking instructions:</p>\n<pre><code>--start-lib\nbazel-out/local-dbg/bin/tensorflow/cc/_objs/real_math_grad/tensorflow/cc/gradients/real_math_grad.pic.o\n--end-lib\n</code></pre>\n<p>And <a href=\"https://www.google.ru/search?q=global+symbols+in+static+libraries&amp;oq=global+symbols+in+static+libraries&amp;aqs=chrome..69i57.7343j0j7&amp;client=ubuntu&amp;sourceid=chrome&amp;ie=UTF-8#newwindow=1&amp;q=global+initializer+in+static+libraries\" rel=\"nofollow\">here1</a>/<a href=\"https://stackoverflow.com/questions/9459980/c-global-variable-not-initialized-when-linked-through-static-libraries-but-ok\" rel=\"nofollow\">here2</a> you can find a lot of complaints about static global variables not being initialized, being linked as static libraries.</p>\n<h2>The solution</h2>\n<p>Add <code>alwayslink = 1,</code> to <code>math_grad</code> library in <code>tensorflow/cc/BUILD</code> (and actually any *_grad library, since all of them use the same mechanism of registration of gradients).<br>\nExactly the same has already been done here - <code>tensorflow/core/BUILD</code>.</p>\n<p>It the solution is OK, I can make a pull-request.</p>\n<h2>System information</h2>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nYes.</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nKubuntu 17.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\nCompiled from sources</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\n<code>remotes/origin/r1.2</code></li>\n<li><strong>Python version</strong>:<br>\nDo not use it</li>\n<li><strong>Bazel version (if compiling from source)</strong>:<br>\n$ bazel version<br>\nBuild label: 0.5.1<br>\nBuild target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar<br>\nBuild time: Tue Jun 6 10:34:11 2017 (1496745251)<br>\nBuild timestamp: 1496745251<br>\nBuild timestamp as int: 1496745251</li>\n<li><strong>CUDA/cuDNN version</strong>:<br>\nno cude</li>\n<li><strong>GPU model and memory</strong>:<br>\n01:00.0 VGA compatible controller: NVIDIA Corporation GK106 [GeForce GTX 650 Ti Boost] (rev a1)</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>", "body_text": "(System information probably is not relevant to the issue, so I moved it below)\nThe Problem\nIt seems that the code, generated by macros REGISTER_GRADIENT_OP in math_grad.cc is never executed:\nstatic bool unused_ret_val_123 = ::tensorflow::ops::GradOpRegistry::Global()->Register(name, fn);\nMy BUILD file:\ncc_binary(\n    name = \"bitwise_operations\",\n    srcs = [\n       \"main.cpp\"\n    ],\n    deps = [\n        \"//tensorflow/cc:grad_ops\",\n        \"//tensorflow/cc:cc_ops\",\n        \"//tensorflow/cc:client_session\",\n        \"//tensorflow/core:tensorflow\",\n        \"//tensorflow/cc/DimanNe/tensorflow_utils:tensorflow_utils\",\n    ],\n)\n\nThe cause\nBazel generates such tensorflow/bazel-out/local-dbg/bin/tensorflow/cc/DimanNe/bitwise_operations/bitwise_operations-2.params that instructs linker to put math_grad.pic.o in separate static library, here is how it looks in the params file containing linking instructions:\n--start-lib\nbazel-out/local-dbg/bin/tensorflow/cc/_objs/real_math_grad/tensorflow/cc/gradients/real_math_grad.pic.o\n--end-lib\n\nAnd here1/here2 you can find a lot of complaints about static global variables not being initialized, being linked as static libraries.\nThe solution\nAdd alwayslink = 1, to math_grad library in tensorflow/cc/BUILD (and actually any *_grad library, since all of them use the same mechanism of registration of gradients).\nExactly the same has already been done here - tensorflow/core/BUILD.\nIt the solution is OK, I can make a pull-request.\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nYes.\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nKubuntu 17.04\nTensorFlow installed from (source or binary):\nCompiled from sources\nTensorFlow version (use command below):\nremotes/origin/r1.2\nPython version:\nDo not use it\nBazel version (if compiling from source):\n$ bazel version\nBuild label: 0.5.1\nBuild target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\nBuild time: Tue Jun 6 10:34:11 2017 (1496745251)\nBuild timestamp: 1496745251\nBuild timestamp as int: 1496745251\nCUDA/cuDNN version:\nno cude\nGPU model and memory:\n01:00.0 VGA compatible controller: NVIDIA Corporation GK106 [GeForce GTX 650 Ti Boost] (rev a1)\nExact command to reproduce:", "body": "(System information probably is not relevant to the issue, so I moved it below)\r\n\r\n## The Problem\r\n\r\nIt seems that the code, generated by macros `REGISTER_GRADIENT_OP` in [math_grad.cc](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/cc/gradients/math_grad.cc) is never executed:\r\n`static bool unused_ret_val_123 = ::tensorflow::ops::GradOpRegistry::Global()->Register(name, fn);`\r\n\r\nMy `BUILD` file:\r\n```\r\ncc_binary(\r\n    name = \"bitwise_operations\",\r\n    srcs = [\r\n       \"main.cpp\"\r\n    ],\r\n    deps = [\r\n        \"//tensorflow/cc:grad_ops\",\r\n        \"//tensorflow/cc:cc_ops\",\r\n        \"//tensorflow/cc:client_session\",\r\n        \"//tensorflow/core:tensorflow\",\r\n        \"//tensorflow/cc/DimanNe/tensorflow_utils:tensorflow_utils\",\r\n    ],\r\n)\r\n```\r\n\r\n## The cause\r\n\r\n`Bazel` generates such `tensorflow/bazel-out/local-dbg/bin/tensorflow/cc/DimanNe/bitwise_operations/bitwise_operations-2.params` that instructs linker to put `math_grad.pic.o` in separate static library, here is how it looks in the params file containing linking instructions:\r\n```\r\n--start-lib\r\nbazel-out/local-dbg/bin/tensorflow/cc/_objs/real_math_grad/tensorflow/cc/gradients/real_math_grad.pic.o\r\n--end-lib\r\n```\r\nAnd [here1](https://www.google.ru/search?q=global+symbols+in+static+libraries&oq=global+symbols+in+static+libraries&aqs=chrome..69i57.7343j0j7&client=ubuntu&sourceid=chrome&ie=UTF-8#newwindow=1&q=global+initializer+in+static+libraries)/[here2](https://stackoverflow.com/questions/9459980/c-global-variable-not-initialized-when-linked-through-static-libraries-but-ok) you can find a lot of complaints about static global variables not being initialized, being linked as static libraries.\r\n\r\n\r\n## The solution\r\nAdd `alwayslink = 1,` to `math_grad` library in `tensorflow/cc/BUILD` (and actually any *_grad library, since all of them use the same mechanism of registration of gradients).\r\nExactly the same has already been done here - `tensorflow/core/BUILD`.\r\n\r\nIt the solution is OK, I can make a pull-request.\r\n\r\n## System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nYes.\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nKubuntu 17.04\r\n- **TensorFlow installed from (source or binary)**:\r\nCompiled from sources\r\n- **TensorFlow version (use command below)**:\r\n`remotes/origin/r1.2`\r\n- **Python version**: \r\nDo not use it\r\n- **Bazel version (if compiling from source)**:\r\n$ bazel version\r\nBuild label: 0.5.1\r\nBuild target: bazel-out/local-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\r\nBuild time: Tue Jun 6 10:34:11 2017 (1496745251)\r\nBuild timestamp: 1496745251\r\nBuild timestamp as int: 1496745251\r\n- **CUDA/cuDNN version**:\r\nno cude\r\n- **GPU model and memory**:\r\n01:00.0 VGA compatible controller: NVIDIA Corporation GK106 [GeForce GTX 650 Ti Boost] (rev a1)\r\n- **Exact command to reproduce**:"}