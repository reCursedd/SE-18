{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10968", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10968/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10968/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10968/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10968", "id": 237733133, "node_id": "MDU6SXNzdWUyMzc3MzMxMzM=", "number": 10968, "title": "bayesflow w/ higher order functions loops endlessly", "user": {"login": "j-wilson", "id": 6174242, "node_id": "MDQ6VXNlcjYxNzQyNDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6174242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j-wilson", "html_url": "https://github.com/j-wilson", "followers_url": "https://api.github.com/users/j-wilson/followers", "following_url": "https://api.github.com/users/j-wilson/following{/other_user}", "gists_url": "https://api.github.com/users/j-wilson/gists{/gist_id}", "starred_url": "https://api.github.com/users/j-wilson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j-wilson/subscriptions", "organizations_url": "https://api.github.com/users/j-wilson/orgs", "repos_url": "https://api.github.com/users/j-wilson/repos", "events_url": "https://api.github.com/users/j-wilson/events{/privacy}", "received_events_url": "https://api.github.com/users/j-wilson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-22T05:07:59Z", "updated_at": "2017-06-23T00:03:27Z", "closed_at": "2017-06-23T00:03:27Z", "author_association": "NONE", "body_html": "<p><strong>Environment</strong>: TensorFlow v1.2.0-rc2-21-g12f033d 1.2.0 running on Mac OS X (v10.12.5)</p>\n<p><strong>Issue</strong>:<br>\nUse of <code>tensorflow.contrib.bayesflow.stochastic_tensor.StochasticTensor</code> in conjunction with higher order functions, such as <code>tf.map_fn</code> and <code>tf.while_loop</code>, results in a seemingly endless loop during construction of the associated stochastic graph's <code>surrogate_loss</code>. Within the source code, the aforementioned loop occurs <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/bayesflow/python/ops/stochastic_graph_impl.py#L85\">here</a>. A minimal example is provided below.</p>\n<p><strong>Example</strong>:</p>\n<pre><code># Dependencies\nimport tensorflow as tf\nfrom tensorflow.contrib.distributions import Bernoulli\nfrom tensorflow.contrib.bayesflow import\\\n\tstochastic_tensor as st, stochastic_graph as sg\n\n# Flags and variable declaration\n_int, _float = 'int32', 'float32'\nnum_logits = 0 #doesn't seem to matter\nlogits = tf.get_variable('logits', shape=[num_logits, 1], dtype=_float)\n\n# Pass `logits` to a distribution and then wrap with a StochasticTensor\ndist = Bernoulli(logits, dtype=_float)\nwith st.value_type(st.SampleValue()):\n\tsamples = st.StochasticTensor(dist)\n</code></pre>\n<p>Building off of the above, the following seem to loop endlessly. Using <code>tf.map_fn</code>,</p>\n<pre><code>losses = tf.map_fn(lambda x: x, samples, _float)\nloss = sg.surrogate_loss([tf.reduce_mean(losses, axis=0)])# &lt;- loops endlessly\n</code></pre>\n<p>Using <code>tf.while_loop</code> in conjunction with <code>tf.TensorArray</code>,</p>\n<pre><code>array = tf.TensorArray(_float, num_logits).unstack(samples)\ndef cond(k, *args):\n\treturn tf.less(k, num_logits)\ndef body(k, losses):\n\treturn k+1, tf.concat([losses, array.read(k)], 0)\nloop_v = [0, tf.zeros([0], _float)]\ninvars = [tf.TensorShape([]), tf.TensorShape([None])]\nlosses = tf.while_loop(cond, body, loop_v, shape_invariants=invars)[1]\nloss = sg.surrogate_loss([tf.reduce_mean(losses, keep_dims=True)])# &lt;- loops endlessly\n</code></pre>", "body_text": "Environment: TensorFlow v1.2.0-rc2-21-g12f033d 1.2.0 running on Mac OS X (v10.12.5)\nIssue:\nUse of tensorflow.contrib.bayesflow.stochastic_tensor.StochasticTensor in conjunction with higher order functions, such as tf.map_fn and tf.while_loop, results in a seemingly endless loop during construction of the associated stochastic graph's surrogate_loss. Within the source code, the aforementioned loop occurs here. A minimal example is provided below.\nExample:\n# Dependencies\nimport tensorflow as tf\nfrom tensorflow.contrib.distributions import Bernoulli\nfrom tensorflow.contrib.bayesflow import\\\n\tstochastic_tensor as st, stochastic_graph as sg\n\n# Flags and variable declaration\n_int, _float = 'int32', 'float32'\nnum_logits = 0 #doesn't seem to matter\nlogits = tf.get_variable('logits', shape=[num_logits, 1], dtype=_float)\n\n# Pass `logits` to a distribution and then wrap with a StochasticTensor\ndist = Bernoulli(logits, dtype=_float)\nwith st.value_type(st.SampleValue()):\n\tsamples = st.StochasticTensor(dist)\n\nBuilding off of the above, the following seem to loop endlessly. Using tf.map_fn,\nlosses = tf.map_fn(lambda x: x, samples, _float)\nloss = sg.surrogate_loss([tf.reduce_mean(losses, axis=0)])# <- loops endlessly\n\nUsing tf.while_loop in conjunction with tf.TensorArray,\narray = tf.TensorArray(_float, num_logits).unstack(samples)\ndef cond(k, *args):\n\treturn tf.less(k, num_logits)\ndef body(k, losses):\n\treturn k+1, tf.concat([losses, array.read(k)], 0)\nloop_v = [0, tf.zeros([0], _float)]\ninvars = [tf.TensorShape([]), tf.TensorShape([None])]\nlosses = tf.while_loop(cond, body, loop_v, shape_invariants=invars)[1]\nloss = sg.surrogate_loss([tf.reduce_mean(losses, keep_dims=True)])# <- loops endlessly", "body": "**Environment**: TensorFlow v1.2.0-rc2-21-g12f033d 1.2.0 running on Mac OS X (v10.12.5)\r\n\r\n**Issue**:\r\nUse of `tensorflow.contrib.bayesflow.stochastic_tensor.StochasticTensor` in conjunction with higher order functions, such as `tf.map_fn` and `tf.while_loop`, results in a seemingly endless loop during construction of the associated stochastic graph's `surrogate_loss`. Within the source code, the aforementioned loop occurs [here](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/bayesflow/python/ops/stochastic_graph_impl.py#L85). A minimal example is provided below.\r\n\r\n**Example**:\r\n```\r\n# Dependencies\r\nimport tensorflow as tf\r\nfrom tensorflow.contrib.distributions import Bernoulli\r\nfrom tensorflow.contrib.bayesflow import\\\r\n\tstochastic_tensor as st, stochastic_graph as sg\r\n\r\n# Flags and variable declaration\r\n_int, _float = 'int32', 'float32'\r\nnum_logits = 0 #doesn't seem to matter\r\nlogits = tf.get_variable('logits', shape=[num_logits, 1], dtype=_float)\r\n\r\n# Pass `logits` to a distribution and then wrap with a StochasticTensor\r\ndist = Bernoulli(logits, dtype=_float)\r\nwith st.value_type(st.SampleValue()):\r\n\tsamples = st.StochasticTensor(dist)\r\n```\r\nBuilding off of the above, the following seem to loop endlessly. Using `tf.map_fn`,\r\n```\r\nlosses = tf.map_fn(lambda x: x, samples, _float)\r\nloss = sg.surrogate_loss([tf.reduce_mean(losses, axis=0)])# <- loops endlessly\r\n```\r\nUsing `tf.while_loop` in conjunction with `tf.TensorArray`,\r\n```\r\narray = tf.TensorArray(_float, num_logits).unstack(samples)\r\ndef cond(k, *args):\r\n\treturn tf.less(k, num_logits)\r\ndef body(k, losses):\r\n\treturn k+1, tf.concat([losses, array.read(k)], 0)\r\nloop_v = [0, tf.zeros([0], _float)]\r\ninvars = [tf.TensorShape([]), tf.TensorShape([None])]\r\nlosses = tf.while_loop(cond, body, loop_v, shape_invariants=invars)[1]\r\nloss = sg.surrogate_loss([tf.reduce_mean(losses, keep_dims=True)])# <- loops endlessly\r\n```\r\n"}