{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/196967414", "html_url": "https://github.com/tensorflow/tensorflow/issues/1517#issuecomment-196967414", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1517", "id": 196967414, "node_id": "MDEyOklzc3VlQ29tbWVudDE5Njk2NzQxNA==", "user": {"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-15T18:41:24Z", "updated_at": "2016-03-15T18:41:24Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=15258583\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/josh11b\">@josh11b</a>: In a perfect world the op spec would say you can't take the real part of a <code>complex128</code> and get a <code>float32</code>.  Reasonable to just ban that by not registering the kernels?</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=890531\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ibab\">@ibab</a>: If so, your solution is fine.  I'd change it to <code>Tout=in.dtype.real_dtype</code>, but otherwise good.  There will be no backwards compatibility issues since both defaults are the old values.</p>", "body_text": "@josh11b: In a perfect world the op spec would say you can't take the real part of a complex128 and get a float32.  Reasonable to just ban that by not registering the kernels?\n@ibab: If so, your solution is fine.  I'd change it to Tout=in.dtype.real_dtype, but otherwise good.  There will be no backwards compatibility issues since both defaults are the old values.", "body": "@josh11b: In a perfect world the op spec would say you can't take the real part of a `complex128` and get a `float32`.  Reasonable to just ban that by not registering the kernels?\n\n@ibab: If so, your solution is fine.  I'd change it to `Tout=in.dtype.real_dtype`, but otherwise good.  There will be no backwards compatibility issues since both defaults are the old values.\n"}