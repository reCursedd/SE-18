{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/197936279", "html_url": "https://github.com/tensorflow/tensorflow/issues/1517#issuecomment-197936279", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1517", "id": 197936279, "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzkzNjI3OQ==", "user": {"login": "sjperkins", "id": 3530212, "node_id": "MDQ6VXNlcjM1MzAyMTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3530212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjperkins", "html_url": "https://github.com/sjperkins", "followers_url": "https://api.github.com/users/sjperkins/followers", "following_url": "https://api.github.com/users/sjperkins/following{/other_user}", "gists_url": "https://api.github.com/users/sjperkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjperkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjperkins/subscriptions", "organizations_url": "https://api.github.com/users/sjperkins/orgs", "repos_url": "https://api.github.com/users/sjperkins/repos", "events_url": "https://api.github.com/users/sjperkins/events{/privacy}", "received_events_url": "https://api.github.com/users/sjperkins/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-17T15:37:39Z", "updated_at": "2016-03-17T15:37:39Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=890531\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ibab\">@ibab</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=70511\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/girving\">@girving</a> I believe <a href=\"https://github.com/pydata/numexpr\">numexpr</a> has to consider similar issues when dealing with conversion between between float32, float64, complex64 and complex128. A contributor suggested the use of a casting table, <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"97956669\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pydata/numexpr/issues/181\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pydata/numexpr/pull/181/hovercard\" href=\"https://github.com/pydata/numexpr/pull/181\">pydata/numexpr#181</a> may provide more insight.</p>", "body_text": "@ibab @girving I believe numexpr has to consider similar issues when dealing with conversion between between float32, float64, complex64 and complex128. A contributor suggested the use of a casting table, pydata/numexpr#181 may provide more insight.", "body": "@ibab @girving I believe [numexpr](https://github.com/pydata/numexpr) has to consider similar issues when dealing with conversion between between float32, float64, complex64 and complex128. A contributor suggested the use of a casting table, https://github.com/pydata/numexpr/pull/181 may provide more insight.\n"}