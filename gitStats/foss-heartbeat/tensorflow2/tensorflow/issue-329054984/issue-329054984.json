{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19748", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19748/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19748/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19748/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19748", "id": 329054984, "node_id": "MDU6SXNzdWUzMjkwNTQ5ODQ=", "number": 19748, "title": "DirectSession::Run with Saver restore operation crashes during nsync wait", "user": {"login": "jayadeepk", "id": 5885220, "node_id": "MDQ6VXNlcjU4ODUyMjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5885220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayadeepk", "html_url": "https://github.com/jayadeepk", "followers_url": "https://api.github.com/users/jayadeepk/followers", "following_url": "https://api.github.com/users/jayadeepk/following{/other_user}", "gists_url": "https://api.github.com/users/jayadeepk/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayadeepk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayadeepk/subscriptions", "organizations_url": "https://api.github.com/users/jayadeepk/orgs", "repos_url": "https://api.github.com/users/jayadeepk/repos", "events_url": "https://api.github.com/users/jayadeepk/events{/privacy}", "received_events_url": "https://api.github.com/users/jayadeepk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "robieta", "id": 13089297, "node_id": "MDQ6VXNlcjEzMDg5Mjk3", "avatar_url": "https://avatars0.githubusercontent.com/u/13089297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robieta", "html_url": "https://github.com/robieta", "followers_url": "https://api.github.com/users/robieta/followers", "following_url": "https://api.github.com/users/robieta/following{/other_user}", "gists_url": "https://api.github.com/users/robieta/gists{/gist_id}", "starred_url": "https://api.github.com/users/robieta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robieta/subscriptions", "organizations_url": "https://api.github.com/users/robieta/orgs", "repos_url": "https://api.github.com/users/robieta/repos", "events_url": "https://api.github.com/users/robieta/events{/privacy}", "received_events_url": "https://api.github.com/users/robieta/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "robieta", "id": 13089297, "node_id": "MDQ6VXNlcjEzMDg5Mjk3", "avatar_url": "https://avatars0.githubusercontent.com/u/13089297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robieta", "html_url": "https://github.com/robieta", "followers_url": "https://api.github.com/users/robieta/followers", "following_url": "https://api.github.com/users/robieta/following{/other_user}", "gists_url": "https://api.github.com/users/robieta/gists{/gist_id}", "starred_url": "https://api.github.com/users/robieta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robieta/subscriptions", "organizations_url": "https://api.github.com/users/robieta/orgs", "repos_url": "https://api.github.com/users/robieta/repos", "events_url": "https://api.github.com/users/robieta/events{/privacy}", "received_events_url": "https://api.github.com/users/robieta/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-06-04T13:26:12Z", "updated_at": "2018-11-19T23:25:29Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<p>Have I written custom code: Yes<br>\nOS Platform and Distribution: Tizen<br>\nTensorFlow installed from: Source<br>\nTensorFlow version: 1.4<br>\nBazel version: N/A<br>\nCUDA/cuDNN version: N/A<br>\nGPU model and memory: N/A<br>\nExact command to reproduce: N/A</p>\n<h3>Problem</h3>\n<p>I am using Tensorflow 1.4 C++ API to read graph from meta file and load weights from checkpoint file.</p>\n<pre><code>#include &lt;tensorflow/cc/ops/standard_ops.h&gt;\n#include &lt;tensorflow/core/framework/tensor.h&gt;\n#include &lt;tensorflow/core/public/session.h&gt;\n#include &lt;tensorflow/core/protobuf/meta_graph.pb.h&gt;\n\n#define GRAPH_PATH \"path-to-graph.meta\"\n#define CHECKPOINT_PATH \"path-to-checkpoint.data-00000-of-00001\"\n\nMetaGraphDef graph_def;\nTensor checkpoint_path_tensor(DT_STRING, TensorShape());\nauto session = NewSession(SessionOptions());\nstatus = ReadBinaryProto(Env::Default(), GRAPH_PATH, &amp;graph_def);\nstatus = session-&gt;Create(graph_def.graph_def());\ncheckpoint_path_tensor.scalar&lt;string&gt;()() = CHECKPOINT_PATH;\nstatus = session-&gt;Run(\n        {{ graph_def.saver_def().filename_tensor_name(), checkpoint_path_tensor },},\n        {},\n        {graph_def.saver_def().restore_op_name()},\n        nullptr);\n</code></pre>\n<p>While loading weights into graph from checkpoint, the program crashes during session-&gt;Run() with following trace:</p>\n<pre><code>#0  0xf1268e14 in std::condition_variable::condition_variable() () from /lib/libstdc++.so.6\n#1  0xf555701c in nsync::nsync_mu_semaphore_init(nsync::nsync_semaphore_s_*) () from /lib/libpywrap_tensorflow_internal.so\n#2  0xf5557ae4 in nsync::nsync_waiter_new_() () from /lib/libpywrap_tensorflow_internal.so\n#3  0xf55558fc in nsync::nsync_cv_wait_with_deadline_generic(nsync::nsync_cv_s_*, void*, void (*)(void*), void (*)(void*), timespec, nsync::nsync_note_s_*) () from /lib/libpywrap_tensorflow_internal.so\n#4  0xf5556004 in nsync::nsync_cv_wait_with_deadline(nsync::nsync_cv_s_*, nsync::nsync_mu_s_*, timespec, nsync::nsync_note_s_*) () from /lib/libpywrap_tensorflow_internal.so\n#5  0xf5556040 in nsync::nsync_cv_wait(nsync::nsync_cv_s_*, nsync::nsync_mu_s_*) () from /lib/libpywrap_tensorflow_internal.so\n#6  0xf2d6ba30 in tensorflow::condition_variable::wait(tensorflow::mutex_lock&amp;) () from /lib/libpywrap_tensorflow_internal.so\n#7  0xf2d6c0d4 in tensorflow::Notification::WaitForNotification() () from /lib/libpywrap_tensorflow_internal.so\n#8  0xf34f2078 in tensorflow::DirectSession::WaitForNotification(tensorflow::Notification*, long long) () from /lib/libpywrap_tensorflow_internal.so\n#9  0xf34f1f14 in tensorflow::DirectSession::WaitForNotification(tensorflow::DirectSession::RunState*, tensorflow::CancellationManager*, long long) () from /lib/libpywrap_tensorflow_internal.so\n#10 0xf34ebfc4 in tensorflow::DirectSession::Run(tensorflow::RunOptions const&amp;, std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, tensorflow::Tensor&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, tensorflow::Tensor&gt; &gt; &gt; const&amp;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;, std::vector&lt;tensorflow::Tensor, std::allocator&lt;tensorflow::Tensor&gt; &gt;*, tensorflow::RunMetadata*) () from /lib/libpywrap_tensorflow_internal.so\n#11 0xf34eadfc in tensorflow::DirectSession::Run(std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, tensorflow::Tensor&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, tensorflow::Tensor&gt; &gt; &gt; const&amp;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; const&amp;, std::vector&lt;tensorflow::Tensor, std::allocator&lt;tensorflow::Tensor&gt; &gt;*) () from /lib/libpywrap_tensorflow_internal.so\n</code></pre>", "body_text": "System information\nHave I written custom code: Yes\nOS Platform and Distribution: Tizen\nTensorFlow installed from: Source\nTensorFlow version: 1.4\nBazel version: N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce: N/A\nProblem\nI am using Tensorflow 1.4 C++ API to read graph from meta file and load weights from checkpoint file.\n#include <tensorflow/cc/ops/standard_ops.h>\n#include <tensorflow/core/framework/tensor.h>\n#include <tensorflow/core/public/session.h>\n#include <tensorflow/core/protobuf/meta_graph.pb.h>\n\n#define GRAPH_PATH \"path-to-graph.meta\"\n#define CHECKPOINT_PATH \"path-to-checkpoint.data-00000-of-00001\"\n\nMetaGraphDef graph_def;\nTensor checkpoint_path_tensor(DT_STRING, TensorShape());\nauto session = NewSession(SessionOptions());\nstatus = ReadBinaryProto(Env::Default(), GRAPH_PATH, &graph_def);\nstatus = session->Create(graph_def.graph_def());\ncheckpoint_path_tensor.scalar<string>()() = CHECKPOINT_PATH;\nstatus = session->Run(\n        {{ graph_def.saver_def().filename_tensor_name(), checkpoint_path_tensor },},\n        {},\n        {graph_def.saver_def().restore_op_name()},\n        nullptr);\n\nWhile loading weights into graph from checkpoint, the program crashes during session->Run() with following trace:\n#0  0xf1268e14 in std::condition_variable::condition_variable() () from /lib/libstdc++.so.6\n#1  0xf555701c in nsync::nsync_mu_semaphore_init(nsync::nsync_semaphore_s_*) () from /lib/libpywrap_tensorflow_internal.so\n#2  0xf5557ae4 in nsync::nsync_waiter_new_() () from /lib/libpywrap_tensorflow_internal.so\n#3  0xf55558fc in nsync::nsync_cv_wait_with_deadline_generic(nsync::nsync_cv_s_*, void*, void (*)(void*), void (*)(void*), timespec, nsync::nsync_note_s_*) () from /lib/libpywrap_tensorflow_internal.so\n#4  0xf5556004 in nsync::nsync_cv_wait_with_deadline(nsync::nsync_cv_s_*, nsync::nsync_mu_s_*, timespec, nsync::nsync_note_s_*) () from /lib/libpywrap_tensorflow_internal.so\n#5  0xf5556040 in nsync::nsync_cv_wait(nsync::nsync_cv_s_*, nsync::nsync_mu_s_*) () from /lib/libpywrap_tensorflow_internal.so\n#6  0xf2d6ba30 in tensorflow::condition_variable::wait(tensorflow::mutex_lock&) () from /lib/libpywrap_tensorflow_internal.so\n#7  0xf2d6c0d4 in tensorflow::Notification::WaitForNotification() () from /lib/libpywrap_tensorflow_internal.so\n#8  0xf34f2078 in tensorflow::DirectSession::WaitForNotification(tensorflow::Notification*, long long) () from /lib/libpywrap_tensorflow_internal.so\n#9  0xf34f1f14 in tensorflow::DirectSession::WaitForNotification(tensorflow::DirectSession::RunState*, tensorflow::CancellationManager*, long long) () from /lib/libpywrap_tensorflow_internal.so\n#10 0xf34ebfc4 in tensorflow::DirectSession::Run(tensorflow::RunOptions const&, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, tensorflow::RunMetadata*) () from /lib/libpywrap_tensorflow_internal.so\n#11 0xf34eadfc in tensorflow::DirectSession::Run(std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*) () from /lib/libpywrap_tensorflow_internal.so", "body": "### System information\r\nHave I written custom code: Yes\r\nOS Platform and Distribution: Tizen\r\nTensorFlow installed from: Source\r\nTensorFlow version: 1.4\r\nBazel version: N/A\r\nCUDA/cuDNN version: N/A\r\nGPU model and memory: N/A\r\nExact command to reproduce: N/A\r\n\r\n### Problem\r\nI am using Tensorflow 1.4 C++ API to read graph from meta file and load weights from checkpoint file.\r\n\r\n```\r\n#include <tensorflow/cc/ops/standard_ops.h>\r\n#include <tensorflow/core/framework/tensor.h>\r\n#include <tensorflow/core/public/session.h>\r\n#include <tensorflow/core/protobuf/meta_graph.pb.h>\r\n\r\n#define GRAPH_PATH \"path-to-graph.meta\"\r\n#define CHECKPOINT_PATH \"path-to-checkpoint.data-00000-of-00001\"\r\n\r\nMetaGraphDef graph_def;\r\nTensor checkpoint_path_tensor(DT_STRING, TensorShape());\r\nauto session = NewSession(SessionOptions());\r\nstatus = ReadBinaryProto(Env::Default(), GRAPH_PATH, &graph_def);\r\nstatus = session->Create(graph_def.graph_def());\r\ncheckpoint_path_tensor.scalar<string>()() = CHECKPOINT_PATH;\r\nstatus = session->Run(\r\n        {{ graph_def.saver_def().filename_tensor_name(), checkpoint_path_tensor },},\r\n        {},\r\n        {graph_def.saver_def().restore_op_name()},\r\n        nullptr);\r\n```\r\n\r\nWhile loading weights into graph from checkpoint, the program crashes during session->Run() with following trace:\r\n```\r\n#0  0xf1268e14 in std::condition_variable::condition_variable() () from /lib/libstdc++.so.6\r\n#1  0xf555701c in nsync::nsync_mu_semaphore_init(nsync::nsync_semaphore_s_*) () from /lib/libpywrap_tensorflow_internal.so\r\n#2  0xf5557ae4 in nsync::nsync_waiter_new_() () from /lib/libpywrap_tensorflow_internal.so\r\n#3  0xf55558fc in nsync::nsync_cv_wait_with_deadline_generic(nsync::nsync_cv_s_*, void*, void (*)(void*), void (*)(void*), timespec, nsync::nsync_note_s_*) () from /lib/libpywrap_tensorflow_internal.so\r\n#4  0xf5556004 in nsync::nsync_cv_wait_with_deadline(nsync::nsync_cv_s_*, nsync::nsync_mu_s_*, timespec, nsync::nsync_note_s_*) () from /lib/libpywrap_tensorflow_internal.so\r\n#5  0xf5556040 in nsync::nsync_cv_wait(nsync::nsync_cv_s_*, nsync::nsync_mu_s_*) () from /lib/libpywrap_tensorflow_internal.so\r\n#6  0xf2d6ba30 in tensorflow::condition_variable::wait(tensorflow::mutex_lock&) () from /lib/libpywrap_tensorflow_internal.so\r\n#7  0xf2d6c0d4 in tensorflow::Notification::WaitForNotification() () from /lib/libpywrap_tensorflow_internal.so\r\n#8  0xf34f2078 in tensorflow::DirectSession::WaitForNotification(tensorflow::Notification*, long long) () from /lib/libpywrap_tensorflow_internal.so\r\n#9  0xf34f1f14 in tensorflow::DirectSession::WaitForNotification(tensorflow::DirectSession::RunState*, tensorflow::CancellationManager*, long long) () from /lib/libpywrap_tensorflow_internal.so\r\n#10 0xf34ebfc4 in tensorflow::DirectSession::Run(tensorflow::RunOptions const&, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, tensorflow::RunMetadata*) () from /lib/libpywrap_tensorflow_internal.so\r\n#11 0xf34eadfc in tensorflow::DirectSession::Run(std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*) () from /lib/libpywrap_tensorflow_internal.so\r\n```\r\n"}