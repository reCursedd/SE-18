{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21541", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21541/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21541/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21541/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/21541", "id": 349421921, "node_id": "MDExOlB1bGxSZXF1ZXN0MjA3NTQwNzEz", "number": 21541, "title": "Fix nn_test.py on AVX512 builds", "user": {"login": "markdryan", "id": 984073, "node_id": "MDQ6VXNlcjk4NDA3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/984073?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markdryan", "html_url": "https://github.com/markdryan", "followers_url": "https://api.github.com/users/markdryan/followers", "following_url": "https://api.github.com/users/markdryan/following{/other_user}", "gists_url": "https://api.github.com/users/markdryan/gists{/gist_id}", "starred_url": "https://api.github.com/users/markdryan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markdryan/subscriptions", "organizations_url": "https://api.github.com/users/markdryan/orgs", "repos_url": "https://api.github.com/users/markdryan/repos", "events_url": "https://api.github.com/users/markdryan/events{/privacy}", "received_events_url": "https://api.github.com/users/markdryan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}, {"id": 987666414, "node_id": "MDU6TGFiZWw5ODc2NjY0MTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/ready%20to%20pull", "name": "ready to pull", "color": "2cd643", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "drpngx", "id": 20959853, "node_id": "MDQ6VXNlcjIwOTU5ODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/20959853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drpngx", "html_url": "https://github.com/drpngx", "followers_url": "https://api.github.com/users/drpngx/followers", "following_url": "https://api.github.com/users/drpngx/following{/other_user}", "gists_url": "https://api.github.com/users/drpngx/gists{/gist_id}", "starred_url": "https://api.github.com/users/drpngx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drpngx/subscriptions", "organizations_url": "https://api.github.com/users/drpngx/orgs", "repos_url": "https://api.github.com/users/drpngx/repos", "events_url": "https://api.github.com/users/drpngx/events{/privacy}", "received_events_url": "https://api.github.com/users/drpngx/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-08-10T08:27:17Z", "updated_at": "2018-08-11T17:58:38Z", "closed_at": "2018-08-11T17:58:38Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/21541", "html_url": "https://github.com/tensorflow/tensorflow/pull/21541", "diff_url": "https://github.com/tensorflow/tensorflow/pull/21541.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/21541.patch"}, "body_html": "<p>This patch modifies the nn_test test case L2LossTest.testGradient<br>\nso that it passes on AVX512 builds.  The test case is failing<br>\nas the error tolerance used in the test case is too strict.<br>\nThe test case compares the difference of pairs of tensor reductions<br>\nto an expected result.  If the comparison is out by more than 1e-11<br>\nthe test case fails.  The problem here is that the results of a<br>\nsummation reduction of doubles of the same tensor can differ slightly<br>\non different builds.  AVX2, AVX512 and non vectorized versions of the<br>\ntensor contraction algorithm add the tensor's contents together in<br>\ndifferent orders and this different ordering can produce slightly<br>\ndifferent results due to rounding errors.</p>\n<p>The accuracy of AVX512 tensor reduction is no worse than the AVX2<br>\nimplementation.  In fact, it's only luck that this test case passes<br>\non AVX2 builds and fails on AVX512 builds.  If the seed at the start of<br>\nthe test is changed from 1 to 3, the test passes on AVX512 builds and<br>\nfails on AVX2 builds.  Rather than trying to find a seed that allows<br>\nthe test case to pass on all CPU architectures, it is better to relax<br>\nthe test criteria a little bit.</p>\n<p>Signed-off-by: Mark Ryan <a href=\"mailto:mark.d.ryan@intel.com\">mark.d.ryan@intel.com</a></p>", "body_text": "This patch modifies the nn_test test case L2LossTest.testGradient\nso that it passes on AVX512 builds.  The test case is failing\nas the error tolerance used in the test case is too strict.\nThe test case compares the difference of pairs of tensor reductions\nto an expected result.  If the comparison is out by more than 1e-11\nthe test case fails.  The problem here is that the results of a\nsummation reduction of doubles of the same tensor can differ slightly\non different builds.  AVX2, AVX512 and non vectorized versions of the\ntensor contraction algorithm add the tensor's contents together in\ndifferent orders and this different ordering can produce slightly\ndifferent results due to rounding errors.\nThe accuracy of AVX512 tensor reduction is no worse than the AVX2\nimplementation.  In fact, it's only luck that this test case passes\non AVX2 builds and fails on AVX512 builds.  If the seed at the start of\nthe test is changed from 1 to 3, the test passes on AVX512 builds and\nfails on AVX2 builds.  Rather than trying to find a seed that allows\nthe test case to pass on all CPU architectures, it is better to relax\nthe test criteria a little bit.\nSigned-off-by: Mark Ryan mark.d.ryan@intel.com", "body": "This patch modifies the nn_test test case L2LossTest.testGradient\r\nso that it passes on AVX512 builds.  The test case is failing\r\nas the error tolerance used in the test case is too strict.\r\nThe test case compares the difference of pairs of tensor reductions\r\nto an expected result.  If the comparison is out by more than 1e-11\r\nthe test case fails.  The problem here is that the results of a\r\nsummation reduction of doubles of the same tensor can differ slightly\r\non different builds.  AVX2, AVX512 and non vectorized versions of the\r\ntensor contraction algorithm add the tensor's contents together in\r\ndifferent orders and this different ordering can produce slightly\r\ndifferent results due to rounding errors.\r\n\r\nThe accuracy of AVX512 tensor reduction is no worse than the AVX2\r\nimplementation.  In fact, it's only luck that this test case passes\r\non AVX2 builds and fails on AVX512 builds.  If the seed at the start of\r\nthe test is changed from 1 to 3, the test passes on AVX512 builds and\r\nfails on AVX2 builds.  Rather than trying to find a seed that allows\r\nthe test case to pass on all CPU architectures, it is better to relax\r\nthe test criteria a little bit.\r\n\r\nSigned-off-by: Mark Ryan <mark.d.ryan@intel.com>"}