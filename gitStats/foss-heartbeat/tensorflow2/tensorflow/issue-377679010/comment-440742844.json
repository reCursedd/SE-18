{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/440742844", "html_url": "https://github.com/tensorflow/tensorflow/issues/23542#issuecomment-440742844", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23542", "id": 440742844, "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDc0Mjg0NA==", "user": {"login": "xianlopez", "id": 22598615, "node_id": "MDQ6VXNlcjIyNTk4NjE1", "avatar_url": "https://avatars3.githubusercontent.com/u/22598615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xianlopez", "html_url": "https://github.com/xianlopez", "followers_url": "https://api.github.com/users/xianlopez/followers", "following_url": "https://api.github.com/users/xianlopez/following{/other_user}", "gists_url": "https://api.github.com/users/xianlopez/gists{/gist_id}", "starred_url": "https://api.github.com/users/xianlopez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xianlopez/subscriptions", "organizations_url": "https://api.github.com/users/xianlopez/orgs", "repos_url": "https://api.github.com/users/xianlopez/repos", "events_url": "https://api.github.com/users/xianlopez/events{/privacy}", "received_events_url": "https://api.github.com/users/xianlopez/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-21T17:11:51Z", "updated_at": "2018-11-21T17:14:21Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Windows10</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>:</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: r1.12</li>\n<li><strong>Python version</strong>: 3.5</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.15</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: vc140</li>\n<li><strong>CUDA/cuDNN version</strong>: CUDA 10 / cuDNN 7.4.1.5</li>\n<li><strong>GPU model and memory</strong>: GTX 1080Ti / 11 GB</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<p>Similar problem over here. I followed the official instructions to build Tensorflow in Windows using bazel (although I had to make a patch for eigen, as described <a href=\"https://medium.com/@amsokol.com/update-1-how-to-build-and-install-tensorflow-gpu-cpu-for-windows-from-source-code-using-bazel-and-c2e86fec9ef2\" rel=\"nofollow\">here</a>), and executed <code>bazel build \u2013config=opt \u2013config=cuda //tensorflow:libtensorflow_cc.so</code>. The compilation succeded.</p>\n<p>However, the problems come when I want to include it in my own project (which I have in Visual Studio). I could not find any official documentation on how to do this; instead I had to search over many blogs or issues... Most of the explanations (if not all) refer to using the cmake build of Tensorflow, which now is not possible to do with the latest version.</p>\n<p>Anyway, I found all the necessary headers around the bazel build. I had to include the following directories:</p>\n<pre><code>C:\\development\\tensorflow\\bazel-tensorflow\\external\\eigen_archive\nC:\\development\\tensorflow\\bazel-tensorflow\\external\\com_google_absl\nC:\\development\\tensorflow\\bazel-tensorflow\\external\\protobuf_archive_src\nC:\\development\\tensorflow\\bazel-genfiles\nC:\\development\\tensorflow\\bazel-tensorflow\n</code></pre>\n<p>But the problem comes when linking...</p>\n<p>When I execute <code>dumpbin /exports libtensorflow_cc.so</code> I get far more symbols than you (3061). To be able to link them, I had to build the .lib file from libtensorflow_cc.so. I did <code>dumpbin /EXPORTS libtensorflow_cc.so &gt; myfile.exports</code>, I copied all the functions names and pasted them in a file called myfile.def (and added a line with the word EXPORTS at the beginning), and then did <code>lib /def:myfile.def /out:tensorflow.lib /machine:x64</code>. Then in Visual Studio I included tensorflow.lib.</p>\n<p>However, when compiling my project, it is still requiring more symbols than those present in libtensorflow_cc.so. This is the output I get:</p>\n<pre lang=\"1&gt;------\" data-meta=\"Build started: Project: BrainServer, Configuration: Release x64 ------\"><code>1&gt;stdafx.cpp\n1&gt;BrainServer.cpp\n1&gt;c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(3): warning C4005: 'COMPILER_MSVC': macro redefinition\n1&gt;c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(3): note: command-line arguments:  see previous definition of 'COMPILER_MSVC'\n1&gt;c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(4): warning C4005: 'NOMINMAX': macro redefinition\n1&gt;c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(4): note: command-line arguments:  see previous definition of 'NOMINMAX'\n1&gt;BrainServer.cpp(62): warning C4101: 'm_logLevel': unreferenced local variable\n1&gt;BrainServerConfig.cpp\n1&gt;ClassificationRunner.cpp\n1&gt;c:\\development\\daview\\brainserver\\brainserver\\ClassificationRunner.h(3): warning C4005: 'COMPILER_MSVC': macro redefinition\n1&gt;c:\\development\\daview\\brainserver\\brainserver\\ClassificationRunner.h(3): note: command-line arguments:  see previous definition of 'COMPILER_MSVC'\n1&gt;c:\\development\\daview\\brainserver\\brainserver\\ClassificationRunner.h(4): warning C4005: 'NOMINMAX': macro redefinition\n1&gt;c:\\development\\daview\\brainserver\\brainserver\\ClassificationRunner.h(4): note: command-line arguments:  see previous definition of 'NOMINMAX'\n1&gt;Crop.cpp\n1&gt;SharedListsManager.cpp\n1&gt;ImageSaver.cpp\n1&gt;NetworkRunner.cpp\n1&gt;c:\\development\\daview\\brainserver\\brainserver\\NetworkRunner.h(3): warning C4005: 'COMPILER_MSVC': macro redefinition\n1&gt;c:\\development\\daview\\brainserver\\brainserver\\NetworkRunner.h(3): note: command-line arguments:  see previous definition of 'COMPILER_MSVC'\n1&gt;c:\\development\\daview\\brainserver\\brainserver\\NetworkRunner.h(4): warning C4005: 'NOMINMAX': macro redefinition\n1&gt;c:\\development\\daview\\brainserver\\brainserver\\NetworkRunner.h(4): note: command-line arguments:  see previous definition of 'NOMINMAX'\n1&gt;NetworkRunner.cpp(205): warning C4101: 'ex': unreferenced local variable\n1&gt;Query.cpp\n1&gt;Server.cpp\n1&gt;c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(3): warning C4005: 'COMPILER_MSVC': macro redefinition\n1&gt;c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(3): note: command-line arguments:  see previous definition of 'COMPILER_MSVC'\n1&gt;c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(4): warning C4005: 'NOMINMAX': macro redefinition\n1&gt;c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(4): note: command-line arguments:  see previous definition of 'NOMINMAX'\n1&gt;Session.cpp\n1&gt;c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(3): warning C4005: 'COMPILER_MSVC': macro redefinition\n1&gt;c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(3): note: command-line arguments:  see previous definition of 'COMPILER_MSVC'\n1&gt;c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(4): warning C4005: 'NOMINMAX': macro redefinition\n1&gt;c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(4): note: command-line arguments:  see previous definition of 'NOMINMAX'\n1&gt;TamperingRunner.cpp\n1&gt;c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(3): warning C4005: 'COMPILER_MSVC': macro redefinition\n1&gt;c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(3): note: command-line arguments:  see previous definition of 'COMPILER_MSVC'\n1&gt;c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(4): warning C4005: 'NOMINMAX': macro redefinition\n1&gt;c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(4): note: command-line arguments:  see previous definition of 'NOMINMAX'\n1&gt;tinystr.cpp\n1&gt;tinyxml.cpp\n1&gt;tinyxmlerror.cpp\n1&gt;tinyxmlparser.cpp\n1&gt;BrainServer.obj : error LNK2001: unresolved external symbol \"char const * __cdecl tensorflow::core::GetVarint32PtrFallback(char const *,char const *,unsigned int *)\" (?GetVarint32PtrFallback@core@tensorflow@@YAPEBDPEBD0PEAI@Z)\n1&gt;BrainServer.obj : error LNK2001: unresolved external symbol \"public: __cdecl tensorflow::Tensor::~Tensor(void)\" (??1Tensor@tensorflow@@QEAA@XZ)\n1&gt;ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: void __cdecl google::protobuf::internal::LogFinisher::operator=(class google::protobuf::internal::LogMessage &amp;)\" (??4LogFinisher@internal@protobuf@google@@QEAAXAEAVLogMessage@123@@Z)\n1&gt;ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: class google::protobuf::internal::LogMessage &amp; __cdecl google::protobuf::internal::LogMessage::operator&lt;&lt;(char const *)\" (??6LogMessage@internal@protobuf@google@@QEAAAEAV0123@PEBD@Z)\n1&gt;ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: __cdecl google::protobuf::internal::LogMessage::LogMessage(enum google::protobuf::LogLevel,char const *,int)\" (??0LogMessage@internal@protobuf@google@@QEAA@W4LogLevel@23@PEBDH@Z)\n1&gt;ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: __cdecl google::protobuf::internal::LogMessage::~LogMessage(void)\" (??1LogMessage@internal@protobuf@google@@QEAA@XZ)\n1&gt;ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: __cdecl tensorflow::internal::LogMessageFatal::LogMessageFatal(char const *,int)\" (??0LogMessageFatal@internal@tensorflow@@QEAA@PEBDH@Z)\n1&gt;ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: virtual __cdecl tensorflow::internal::LogMessageFatal::~LogMessageFatal(void)\" (??1LogMessageFatal@internal@tensorflow@@UEAA@XZ)\n1&gt;ClassificationRunner.obj : error LNK2001: unresolved external symbol \"private: void __cdecl tensorflow::TensorShapeRep::SlowCopyFrom(class tensorflow::TensorShapeRep const &amp;)\" (?SlowCopyFrom@TensorShapeRep@tensorflow@@AEAAXAEBV12@@Z)\n1&gt;ClassificationRunner.obj : error LNK2001: unresolved external symbol \"private: void __cdecl tensorflow::TensorShapeRep::DestructorOutOfLine(void)\" (?DestructorOutOfLine@TensorShapeRep@tensorflow@@AEAAXXZ)\n1&gt;ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: __cdecl tensorflow::Tensor::Tensor(void)\" (??0Tensor@tensorflow@@QEAA@XZ)\n1&gt;ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: __cdecl tensorflow::Tensor::Tensor(enum tensorflow::DataType,class tensorflow::TensorShape const &amp;)\" (??0Tensor@tensorflow@@QEAA@W4DataType@1@AEBVTensorShape@1@@Z)\n1&gt;ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: __cdecl tensorflow::TensorShapeBase&lt;class tensorflow::TensorShape&gt;::TensorShapeBase&lt;class tensorflow::TensorShape&gt;(void)\" (??0?$TensorShapeBase@VTensorShape@tensorflow@@@tensorflow@@QEAA@XZ)\n1&gt;ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: __cdecl tensorflow::TensorShapeBase&lt;class tensorflow::TensorShape&gt;::TensorShapeBase&lt;class tensorflow::TensorShape&gt;(class absl::Span&lt;__int64 const &gt;)\" (??0?$TensorShapeBase@VTensorShape@tensorflow@@@tensorflow@@QEAA@V?$Span@$$CB_J@absl@@@Z)\n1&gt;ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: __cdecl tensorflow::internal::CheckOpMessageBuilder::CheckOpMessageBuilder(char const *)\" (??0CheckOpMessageBuilder@internal@tensorflow@@QEAA@PEBD@Z)\n1&gt;ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: __cdecl tensorflow::internal::CheckOpMessageBuilder::~CheckOpMessageBuilder(void)\" (??1CheckOpMessageBuilder@internal@tensorflow@@QEAA@XZ)\n1&gt;ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: class std::basic_ostream&lt;char,struct std::char_traits&lt;char&gt; &gt; * __cdecl tensorflow::internal::CheckOpMessageBuilder::ForVar2(void)\" (?ForVar2@CheckOpMessageBuilder@internal@tensorflow@@QEAAPEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@XZ)\n1&gt;ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; * __cdecl tensorflow::internal::CheckOpMessageBuilder::NewString(void)\" (?NewString@CheckOpMessageBuilder@internal@tensorflow@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ)\n1&gt;ClassificationRunner.obj : error LNK2001: unresolved external symbol \"private: void __cdecl tensorflow::Tensor::CheckIsAlignedAndSingleElement(void)const \" (?CheckIsAlignedAndSingleElement@Tensor@tensorflow@@AEBAXXZ)\n1&gt;ClassificationRunner.obj : error LNK2001: unresolved external symbol \"private: static class absl::InlinedVector&lt;__int64,4,class std::allocator&lt;__int64&gt; &gt; __cdecl tensorflow::Tensor::ComputeFlatInnerDims(class absl::Span&lt;__int64 const &gt;,__int64)\" (?ComputeFlatInnerDims@Tensor@tensorflow@@CA?AV?$InlinedVector@_J$03V?$allocator@_J@std@@@absl@@V?$Span@$$CB_J@4@_J@Z)\n1&gt;ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: class absl::InlinedVector&lt;__int64,4,class std::allocator&lt;__int64&gt; &gt; __cdecl tensorflow::TensorShapeBase&lt;class tensorflow::TensorShape&gt;::dim_sizes(void)const \" (?dim_sizes@?$TensorShapeBase@VTensorShape@tensorflow@@@tensorflow@@QEBA?AV?$InlinedVector@_J$03V?$allocator@_J@std@@@absl@@XZ)\n1&gt;ClassificationRunner.obj : error LNK2001: unresolved external symbol \"private: void __cdecl tensorflow::Tensor::CheckTypeAndIsAligned(enum tensorflow::DataType)const \" (?CheckTypeAndIsAligned@Tensor@tensorflow@@AEBAXW4DataType@2@@Z)\n1&gt;NetworkRunner.obj : error LNK2001: unresolved external symbol \"public: __cdecl tensorflow::GraphDef::GraphDef(void)\" (??0GraphDef@tensorflow@@QEAA@XZ)\n1&gt;NetworkRunner.obj : error LNK2001: unresolved external symbol \"public: virtual __cdecl tensorflow::GraphDef::~GraphDef(void)\" (??1GraphDef@tensorflow@@UEAA@XZ)\n1&gt;NetworkRunner.obj : error LNK2001: unresolved external symbol \"public: __int64 __cdecl tensorflow::TensorShapeBase&lt;class tensorflow::TensorShape&gt;::dim_size(int)const \" (?dim_size@?$TensorShapeBase@VTensorShape@tensorflow@@@tensorflow@@QEBA_JH@Z)\n1&gt;NetworkRunner.obj : error LNK2001: unresolved external symbol \"public: virtual __cdecl tensorflow::ConfigProto::~ConfigProto(void)\" (??1ConfigProto@tensorflow@@UEAA@XZ)\n1&gt;NetworkRunner.obj : error LNK2001: unresolved external symbol \"class tensorflow::Status __cdecl tensorflow::ReadBinaryProto(class tensorflow::Env *,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;,class google::protobuf::MessageLite *)\" (?ReadBinaryProto@tensorflow@@YA?AVStatus@1@PEAVEnv@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVMessageLite@protobuf@google@@@Z)\n1&gt;NetworkRunner.obj : error LNK2001: unresolved external symbol \"public: static class tensorflow::Env * __cdecl tensorflow::Env::Default(void)\" (?Default@Env@tensorflow@@SAPEAV12@XZ)\n1&gt;NetworkRunner.obj : error LNK2001: unresolved external symbol \"class tensorflow::Status __cdecl tensorflow::ReadTextProto(class tensorflow::Env *,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;,class google::protobuf::Message *)\" (?ReadTextProto@tensorflow@@YA?AVStatus@1@PEAVEnv@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVMessage@protobuf@google@@@Z)\n1&gt;NetworkRunner.obj : error LNK2001: unresolved external symbol \"public: __cdecl tensorflow::SessionOptions::SessionOptions(void)\" (??0SessionOptions@tensorflow@@QEAA@XZ)\n1&gt;NetworkRunner.obj : error LNK2001: unresolved external symbol \"class tensorflow::Session * __cdecl tensorflow::NewSession(struct tensorflow::SessionOptions const &amp;)\" (?NewSession@tensorflow@@YAPEAVSession@1@AEBUSessionOptions@1@@Z)\n1&gt;NetworkRunner.obj : error LNK2001: unresolved external symbol \"private: static class tensorflow::GPUOptions * __cdecl google::protobuf::Arena::CreateMaybeMessage&lt;class tensorflow::GPUOptions&gt;(class google::protobuf::Arena *)\" (??$CreateMaybeMessage@VGPUOptions@tensorflow@@$$V@Arena@protobuf@google@@CAPEAVGPUOptions@tensorflow@@PEAV012@@Z)\n1&gt;NetworkRunner.obj : error LNK2001: unresolved external symbol \"private: void __cdecl tensorflow::TensorShape::CheckDimsEqual(int)const \" (?CheckDimsEqual@TensorShape@tensorflow@@AEBAXH@Z)\n1&gt;NetworkRunner.obj : error LNK2001: unresolved external symbol \"private: void __cdecl tensorflow::TensorShape::CheckDimsAtLeast(int)const \" (?CheckDimsAtLeast@TensorShape@tensorflow@@AEBAXH@Z)\n1&gt;C:\\development\\daview\\BrainServer\\x64\\Release\\BrainServer.exe : fatal error LNK1120: 34 unresolved externals\n1&gt;Done building project \"BrainServer.vcxproj\" -- FAILED.\n========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========\n</code></pre>\n<p>In any case, it would be appreciated if there were some instructions on how to use the C++ API of Tensorflow in an independent project (not having to build it with bazel).</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows10\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): r1.12\nPython version: 3.5\nBazel version (if compiling from source): 0.15\nGCC/Compiler version (if compiling from source): vc140\nCUDA/cuDNN version: CUDA 10 / cuDNN 7.4.1.5\nGPU model and memory: GTX 1080Ti / 11 GB\nExact command to reproduce:\n\nSimilar problem over here. I followed the official instructions to build Tensorflow in Windows using bazel (although I had to make a patch for eigen, as described here), and executed bazel build \u2013config=opt \u2013config=cuda //tensorflow:libtensorflow_cc.so. The compilation succeded.\nHowever, the problems come when I want to include it in my own project (which I have in Visual Studio). I could not find any official documentation on how to do this; instead I had to search over many blogs or issues... Most of the explanations (if not all) refer to using the cmake build of Tensorflow, which now is not possible to do with the latest version.\nAnyway, I found all the necessary headers around the bazel build. I had to include the following directories:\nC:\\development\\tensorflow\\bazel-tensorflow\\external\\eigen_archive\nC:\\development\\tensorflow\\bazel-tensorflow\\external\\com_google_absl\nC:\\development\\tensorflow\\bazel-tensorflow\\external\\protobuf_archive_src\nC:\\development\\tensorflow\\bazel-genfiles\nC:\\development\\tensorflow\\bazel-tensorflow\n\nBut the problem comes when linking...\nWhen I execute dumpbin /exports libtensorflow_cc.so I get far more symbols than you (3061). To be able to link them, I had to build the .lib file from libtensorflow_cc.so. I did dumpbin /EXPORTS libtensorflow_cc.so > myfile.exports, I copied all the functions names and pasted them in a file called myfile.def (and added a line with the word EXPORTS at the beginning), and then did lib /def:myfile.def /out:tensorflow.lib /machine:x64. Then in Visual Studio I included tensorflow.lib.\nHowever, when compiling my project, it is still requiring more symbols than those present in libtensorflow_cc.so. This is the output I get:\n1>stdafx.cpp\n1>BrainServer.cpp\n1>c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(3): warning C4005: 'COMPILER_MSVC': macro redefinition\n1>c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(3): note: command-line arguments:  see previous definition of 'COMPILER_MSVC'\n1>c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(4): warning C4005: 'NOMINMAX': macro redefinition\n1>c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(4): note: command-line arguments:  see previous definition of 'NOMINMAX'\n1>BrainServer.cpp(62): warning C4101: 'm_logLevel': unreferenced local variable\n1>BrainServerConfig.cpp\n1>ClassificationRunner.cpp\n1>c:\\development\\daview\\brainserver\\brainserver\\ClassificationRunner.h(3): warning C4005: 'COMPILER_MSVC': macro redefinition\n1>c:\\development\\daview\\brainserver\\brainserver\\ClassificationRunner.h(3): note: command-line arguments:  see previous definition of 'COMPILER_MSVC'\n1>c:\\development\\daview\\brainserver\\brainserver\\ClassificationRunner.h(4): warning C4005: 'NOMINMAX': macro redefinition\n1>c:\\development\\daview\\brainserver\\brainserver\\ClassificationRunner.h(4): note: command-line arguments:  see previous definition of 'NOMINMAX'\n1>Crop.cpp\n1>SharedListsManager.cpp\n1>ImageSaver.cpp\n1>NetworkRunner.cpp\n1>c:\\development\\daview\\brainserver\\brainserver\\NetworkRunner.h(3): warning C4005: 'COMPILER_MSVC': macro redefinition\n1>c:\\development\\daview\\brainserver\\brainserver\\NetworkRunner.h(3): note: command-line arguments:  see previous definition of 'COMPILER_MSVC'\n1>c:\\development\\daview\\brainserver\\brainserver\\NetworkRunner.h(4): warning C4005: 'NOMINMAX': macro redefinition\n1>c:\\development\\daview\\brainserver\\brainserver\\NetworkRunner.h(4): note: command-line arguments:  see previous definition of 'NOMINMAX'\n1>NetworkRunner.cpp(205): warning C4101: 'ex': unreferenced local variable\n1>Query.cpp\n1>Server.cpp\n1>c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(3): warning C4005: 'COMPILER_MSVC': macro redefinition\n1>c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(3): note: command-line arguments:  see previous definition of 'COMPILER_MSVC'\n1>c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(4): warning C4005: 'NOMINMAX': macro redefinition\n1>c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(4): note: command-line arguments:  see previous definition of 'NOMINMAX'\n1>Session.cpp\n1>c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(3): warning C4005: 'COMPILER_MSVC': macro redefinition\n1>c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(3): note: command-line arguments:  see previous definition of 'COMPILER_MSVC'\n1>c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(4): warning C4005: 'NOMINMAX': macro redefinition\n1>c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(4): note: command-line arguments:  see previous definition of 'NOMINMAX'\n1>TamperingRunner.cpp\n1>c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(3): warning C4005: 'COMPILER_MSVC': macro redefinition\n1>c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(3): note: command-line arguments:  see previous definition of 'COMPILER_MSVC'\n1>c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(4): warning C4005: 'NOMINMAX': macro redefinition\n1>c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(4): note: command-line arguments:  see previous definition of 'NOMINMAX'\n1>tinystr.cpp\n1>tinyxml.cpp\n1>tinyxmlerror.cpp\n1>tinyxmlparser.cpp\n1>BrainServer.obj : error LNK2001: unresolved external symbol \"char const * __cdecl tensorflow::core::GetVarint32PtrFallback(char const *,char const *,unsigned int *)\" (?GetVarint32PtrFallback@core@tensorflow@@YAPEBDPEBD0PEAI@Z)\n1>BrainServer.obj : error LNK2001: unresolved external symbol \"public: __cdecl tensorflow::Tensor::~Tensor(void)\" (??1Tensor@tensorflow@@QEAA@XZ)\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: void __cdecl google::protobuf::internal::LogFinisher::operator=(class google::protobuf::internal::LogMessage &)\" (??4LogFinisher@internal@protobuf@google@@QEAAXAEAVLogMessage@123@@Z)\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: class google::protobuf::internal::LogMessage & __cdecl google::protobuf::internal::LogMessage::operator<<(char const *)\" (??6LogMessage@internal@protobuf@google@@QEAAAEAV0123@PEBD@Z)\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: __cdecl google::protobuf::internal::LogMessage::LogMessage(enum google::protobuf::LogLevel,char const *,int)\" (??0LogMessage@internal@protobuf@google@@QEAA@W4LogLevel@23@PEBDH@Z)\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: __cdecl google::protobuf::internal::LogMessage::~LogMessage(void)\" (??1LogMessage@internal@protobuf@google@@QEAA@XZ)\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: __cdecl tensorflow::internal::LogMessageFatal::LogMessageFatal(char const *,int)\" (??0LogMessageFatal@internal@tensorflow@@QEAA@PEBDH@Z)\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: virtual __cdecl tensorflow::internal::LogMessageFatal::~LogMessageFatal(void)\" (??1LogMessageFatal@internal@tensorflow@@UEAA@XZ)\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"private: void __cdecl tensorflow::TensorShapeRep::SlowCopyFrom(class tensorflow::TensorShapeRep const &)\" (?SlowCopyFrom@TensorShapeRep@tensorflow@@AEAAXAEBV12@@Z)\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"private: void __cdecl tensorflow::TensorShapeRep::DestructorOutOfLine(void)\" (?DestructorOutOfLine@TensorShapeRep@tensorflow@@AEAAXXZ)\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: __cdecl tensorflow::Tensor::Tensor(void)\" (??0Tensor@tensorflow@@QEAA@XZ)\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: __cdecl tensorflow::Tensor::Tensor(enum tensorflow::DataType,class tensorflow::TensorShape const &)\" (??0Tensor@tensorflow@@QEAA@W4DataType@1@AEBVTensorShape@1@@Z)\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: __cdecl tensorflow::TensorShapeBase<class tensorflow::TensorShape>::TensorShapeBase<class tensorflow::TensorShape>(void)\" (??0?$TensorShapeBase@VTensorShape@tensorflow@@@tensorflow@@QEAA@XZ)\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: __cdecl tensorflow::TensorShapeBase<class tensorflow::TensorShape>::TensorShapeBase<class tensorflow::TensorShape>(class absl::Span<__int64 const >)\" (??0?$TensorShapeBase@VTensorShape@tensorflow@@@tensorflow@@QEAA@V?$Span@$$CB_J@absl@@@Z)\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: __cdecl tensorflow::internal::CheckOpMessageBuilder::CheckOpMessageBuilder(char const *)\" (??0CheckOpMessageBuilder@internal@tensorflow@@QEAA@PEBD@Z)\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: __cdecl tensorflow::internal::CheckOpMessageBuilder::~CheckOpMessageBuilder(void)\" (??1CheckOpMessageBuilder@internal@tensorflow@@QEAA@XZ)\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: class std::basic_ostream<char,struct std::char_traits<char> > * __cdecl tensorflow::internal::CheckOpMessageBuilder::ForVar2(void)\" (?ForVar2@CheckOpMessageBuilder@internal@tensorflow@@QEAAPEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@XZ)\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __cdecl tensorflow::internal::CheckOpMessageBuilder::NewString(void)\" (?NewString@CheckOpMessageBuilder@internal@tensorflow@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ)\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"private: void __cdecl tensorflow::Tensor::CheckIsAlignedAndSingleElement(void)const \" (?CheckIsAlignedAndSingleElement@Tensor@tensorflow@@AEBAXXZ)\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"private: static class absl::InlinedVector<__int64,4,class std::allocator<__int64> > __cdecl tensorflow::Tensor::ComputeFlatInnerDims(class absl::Span<__int64 const >,__int64)\" (?ComputeFlatInnerDims@Tensor@tensorflow@@CA?AV?$InlinedVector@_J$03V?$allocator@_J@std@@@absl@@V?$Span@$$CB_J@4@_J@Z)\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: class absl::InlinedVector<__int64,4,class std::allocator<__int64> > __cdecl tensorflow::TensorShapeBase<class tensorflow::TensorShape>::dim_sizes(void)const \" (?dim_sizes@?$TensorShapeBase@VTensorShape@tensorflow@@@tensorflow@@QEBA?AV?$InlinedVector@_J$03V?$allocator@_J@std@@@absl@@XZ)\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"private: void __cdecl tensorflow::Tensor::CheckTypeAndIsAligned(enum tensorflow::DataType)const \" (?CheckTypeAndIsAligned@Tensor@tensorflow@@AEBAXW4DataType@2@@Z)\n1>NetworkRunner.obj : error LNK2001: unresolved external symbol \"public: __cdecl tensorflow::GraphDef::GraphDef(void)\" (??0GraphDef@tensorflow@@QEAA@XZ)\n1>NetworkRunner.obj : error LNK2001: unresolved external symbol \"public: virtual __cdecl tensorflow::GraphDef::~GraphDef(void)\" (??1GraphDef@tensorflow@@UEAA@XZ)\n1>NetworkRunner.obj : error LNK2001: unresolved external symbol \"public: __int64 __cdecl tensorflow::TensorShapeBase<class tensorflow::TensorShape>::dim_size(int)const \" (?dim_size@?$TensorShapeBase@VTensorShape@tensorflow@@@tensorflow@@QEBA_JH@Z)\n1>NetworkRunner.obj : error LNK2001: unresolved external symbol \"public: virtual __cdecl tensorflow::ConfigProto::~ConfigProto(void)\" (??1ConfigProto@tensorflow@@UEAA@XZ)\n1>NetworkRunner.obj : error LNK2001: unresolved external symbol \"class tensorflow::Status __cdecl tensorflow::ReadBinaryProto(class tensorflow::Env *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class google::protobuf::MessageLite *)\" (?ReadBinaryProto@tensorflow@@YA?AVStatus@1@PEAVEnv@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVMessageLite@protobuf@google@@@Z)\n1>NetworkRunner.obj : error LNK2001: unresolved external symbol \"public: static class tensorflow::Env * __cdecl tensorflow::Env::Default(void)\" (?Default@Env@tensorflow@@SAPEAV12@XZ)\n1>NetworkRunner.obj : error LNK2001: unresolved external symbol \"class tensorflow::Status __cdecl tensorflow::ReadTextProto(class tensorflow::Env *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class google::protobuf::Message *)\" (?ReadTextProto@tensorflow@@YA?AVStatus@1@PEAVEnv@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVMessage@protobuf@google@@@Z)\n1>NetworkRunner.obj : error LNK2001: unresolved external symbol \"public: __cdecl tensorflow::SessionOptions::SessionOptions(void)\" (??0SessionOptions@tensorflow@@QEAA@XZ)\n1>NetworkRunner.obj : error LNK2001: unresolved external symbol \"class tensorflow::Session * __cdecl tensorflow::NewSession(struct tensorflow::SessionOptions const &)\" (?NewSession@tensorflow@@YAPEAVSession@1@AEBUSessionOptions@1@@Z)\n1>NetworkRunner.obj : error LNK2001: unresolved external symbol \"private: static class tensorflow::GPUOptions * __cdecl google::protobuf::Arena::CreateMaybeMessage<class tensorflow::GPUOptions>(class google::protobuf::Arena *)\" (??$CreateMaybeMessage@VGPUOptions@tensorflow@@$$V@Arena@protobuf@google@@CAPEAVGPUOptions@tensorflow@@PEAV012@@Z)\n1>NetworkRunner.obj : error LNK2001: unresolved external symbol \"private: void __cdecl tensorflow::TensorShape::CheckDimsEqual(int)const \" (?CheckDimsEqual@TensorShape@tensorflow@@AEBAXH@Z)\n1>NetworkRunner.obj : error LNK2001: unresolved external symbol \"private: void __cdecl tensorflow::TensorShape::CheckDimsAtLeast(int)const \" (?CheckDimsAtLeast@TensorShape@tensorflow@@AEBAXH@Z)\n1>C:\\development\\daview\\BrainServer\\x64\\Release\\BrainServer.exe : fatal error LNK1120: 34 unresolved externals\n1>Done building project \"BrainServer.vcxproj\" -- FAILED.\n========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========\n\nIn any case, it would be appreciated if there were some instructions on how to use the C++ API of Tensorflow in an independent project (not having to build it with bazel).", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows10\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**:\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: r1.12\r\n- **Python version**: 3.5\r\n- **Bazel version (if compiling from source)**: 0.15\r\n- **GCC/Compiler version (if compiling from source)**: vc140\r\n- **CUDA/cuDNN version**: CUDA 10 / cuDNN 7.4.1.5\r\n- **GPU model and memory**: GTX 1080Ti / 11 GB\r\n- **Exact command to reproduce**:\r\n\r\nSimilar problem over here. I followed the official instructions to build Tensorflow in Windows using bazel (although I had to make a patch for eigen, as described [here](https://medium.com/@amsokol.com/update-1-how-to-build-and-install-tensorflow-gpu-cpu-for-windows-from-source-code-using-bazel-and-c2e86fec9ef2)), and executed `bazel build \u2013config=opt \u2013config=cuda //tensorflow:libtensorflow_cc.so`. The compilation succeded.\r\n\r\nHowever, the problems come when I want to include it in my own project (which I have in Visual Studio). I could not find any official documentation on how to do this; instead I had to search over many blogs or issues... Most of the explanations (if not all) refer to using the cmake build of Tensorflow, which now is not possible to do with the latest version.\r\n\r\nAnyway, I found all the necessary headers around the bazel build. I had to include the following directories:\r\n```\r\nC:\\development\\tensorflow\\bazel-tensorflow\\external\\eigen_archive\r\nC:\\development\\tensorflow\\bazel-tensorflow\\external\\com_google_absl\r\nC:\\development\\tensorflow\\bazel-tensorflow\\external\\protobuf_archive_src\r\nC:\\development\\tensorflow\\bazel-genfiles\r\nC:\\development\\tensorflow\\bazel-tensorflow\r\n```\r\nBut the problem comes when linking...\r\n\r\nWhen I execute `dumpbin /exports libtensorflow_cc.so` I get far more symbols than you (3061). To be able to link them, I had to build the .lib file from libtensorflow_cc.so. I did `dumpbin /EXPORTS libtensorflow_cc.so > myfile.exports`, I copied all the functions names and pasted them in a file called myfile.def (and added a line with the word EXPORTS at the beginning), and then did `lib /def:myfile.def /out:tensorflow.lib /machine:x64`. Then in Visual Studio I included tensorflow.lib.\r\n\r\nHowever, when compiling my project, it is still requiring more symbols than those present in libtensorflow_cc.so. This is the output I get:\r\n\r\n```1>------ Build started: Project: BrainServer, Configuration: Release x64 ------\r\n1>stdafx.cpp\r\n1>BrainServer.cpp\r\n1>c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(3): warning C4005: 'COMPILER_MSVC': macro redefinition\r\n1>c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(3): note: command-line arguments:  see previous definition of 'COMPILER_MSVC'\r\n1>c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(4): warning C4005: 'NOMINMAX': macro redefinition\r\n1>c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(4): note: command-line arguments:  see previous definition of 'NOMINMAX'\r\n1>BrainServer.cpp(62): warning C4101: 'm_logLevel': unreferenced local variable\r\n1>BrainServerConfig.cpp\r\n1>ClassificationRunner.cpp\r\n1>c:\\development\\daview\\brainserver\\brainserver\\ClassificationRunner.h(3): warning C4005: 'COMPILER_MSVC': macro redefinition\r\n1>c:\\development\\daview\\brainserver\\brainserver\\ClassificationRunner.h(3): note: command-line arguments:  see previous definition of 'COMPILER_MSVC'\r\n1>c:\\development\\daview\\brainserver\\brainserver\\ClassificationRunner.h(4): warning C4005: 'NOMINMAX': macro redefinition\r\n1>c:\\development\\daview\\brainserver\\brainserver\\ClassificationRunner.h(4): note: command-line arguments:  see previous definition of 'NOMINMAX'\r\n1>Crop.cpp\r\n1>SharedListsManager.cpp\r\n1>ImageSaver.cpp\r\n1>NetworkRunner.cpp\r\n1>c:\\development\\daview\\brainserver\\brainserver\\NetworkRunner.h(3): warning C4005: 'COMPILER_MSVC': macro redefinition\r\n1>c:\\development\\daview\\brainserver\\brainserver\\NetworkRunner.h(3): note: command-line arguments:  see previous definition of 'COMPILER_MSVC'\r\n1>c:\\development\\daview\\brainserver\\brainserver\\NetworkRunner.h(4): warning C4005: 'NOMINMAX': macro redefinition\r\n1>c:\\development\\daview\\brainserver\\brainserver\\NetworkRunner.h(4): note: command-line arguments:  see previous definition of 'NOMINMAX'\r\n1>NetworkRunner.cpp(205): warning C4101: 'ex': unreferenced local variable\r\n1>Query.cpp\r\n1>Server.cpp\r\n1>c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(3): warning C4005: 'COMPILER_MSVC': macro redefinition\r\n1>c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(3): note: command-line arguments:  see previous definition of 'COMPILER_MSVC'\r\n1>c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(4): warning C4005: 'NOMINMAX': macro redefinition\r\n1>c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(4): note: command-line arguments:  see previous definition of 'NOMINMAX'\r\n1>Session.cpp\r\n1>c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(3): warning C4005: 'COMPILER_MSVC': macro redefinition\r\n1>c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(3): note: command-line arguments:  see previous definition of 'COMPILER_MSVC'\r\n1>c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(4): warning C4005: 'NOMINMAX': macro redefinition\r\n1>c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(4): note: command-line arguments:  see previous definition of 'NOMINMAX'\r\n1>TamperingRunner.cpp\r\n1>c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(3): warning C4005: 'COMPILER_MSVC': macro redefinition\r\n1>c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(3): note: command-line arguments:  see previous definition of 'COMPILER_MSVC'\r\n1>c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(4): warning C4005: 'NOMINMAX': macro redefinition\r\n1>c:\\development\\daview\\brainserver\\brainserver\\TamperingRunner.h(4): note: command-line arguments:  see previous definition of 'NOMINMAX'\r\n1>tinystr.cpp\r\n1>tinyxml.cpp\r\n1>tinyxmlerror.cpp\r\n1>tinyxmlparser.cpp\r\n1>BrainServer.obj : error LNK2001: unresolved external symbol \"char const * __cdecl tensorflow::core::GetVarint32PtrFallback(char const *,char const *,unsigned int *)\" (?GetVarint32PtrFallback@core@tensorflow@@YAPEBDPEBD0PEAI@Z)\r\n1>BrainServer.obj : error LNK2001: unresolved external symbol \"public: __cdecl tensorflow::Tensor::~Tensor(void)\" (??1Tensor@tensorflow@@QEAA@XZ)\r\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: void __cdecl google::protobuf::internal::LogFinisher::operator=(class google::protobuf::internal::LogMessage &)\" (??4LogFinisher@internal@protobuf@google@@QEAAXAEAVLogMessage@123@@Z)\r\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: class google::protobuf::internal::LogMessage & __cdecl google::protobuf::internal::LogMessage::operator<<(char const *)\" (??6LogMessage@internal@protobuf@google@@QEAAAEAV0123@PEBD@Z)\r\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: __cdecl google::protobuf::internal::LogMessage::LogMessage(enum google::protobuf::LogLevel,char const *,int)\" (??0LogMessage@internal@protobuf@google@@QEAA@W4LogLevel@23@PEBDH@Z)\r\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: __cdecl google::protobuf::internal::LogMessage::~LogMessage(void)\" (??1LogMessage@internal@protobuf@google@@QEAA@XZ)\r\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: __cdecl tensorflow::internal::LogMessageFatal::LogMessageFatal(char const *,int)\" (??0LogMessageFatal@internal@tensorflow@@QEAA@PEBDH@Z)\r\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: virtual __cdecl tensorflow::internal::LogMessageFatal::~LogMessageFatal(void)\" (??1LogMessageFatal@internal@tensorflow@@UEAA@XZ)\r\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"private: void __cdecl tensorflow::TensorShapeRep::SlowCopyFrom(class tensorflow::TensorShapeRep const &)\" (?SlowCopyFrom@TensorShapeRep@tensorflow@@AEAAXAEBV12@@Z)\r\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"private: void __cdecl tensorflow::TensorShapeRep::DestructorOutOfLine(void)\" (?DestructorOutOfLine@TensorShapeRep@tensorflow@@AEAAXXZ)\r\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: __cdecl tensorflow::Tensor::Tensor(void)\" (??0Tensor@tensorflow@@QEAA@XZ)\r\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: __cdecl tensorflow::Tensor::Tensor(enum tensorflow::DataType,class tensorflow::TensorShape const &)\" (??0Tensor@tensorflow@@QEAA@W4DataType@1@AEBVTensorShape@1@@Z)\r\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: __cdecl tensorflow::TensorShapeBase<class tensorflow::TensorShape>::TensorShapeBase<class tensorflow::TensorShape>(void)\" (??0?$TensorShapeBase@VTensorShape@tensorflow@@@tensorflow@@QEAA@XZ)\r\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: __cdecl tensorflow::TensorShapeBase<class tensorflow::TensorShape>::TensorShapeBase<class tensorflow::TensorShape>(class absl::Span<__int64 const >)\" (??0?$TensorShapeBase@VTensorShape@tensorflow@@@tensorflow@@QEAA@V?$Span@$$CB_J@absl@@@Z)\r\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: __cdecl tensorflow::internal::CheckOpMessageBuilder::CheckOpMessageBuilder(char const *)\" (??0CheckOpMessageBuilder@internal@tensorflow@@QEAA@PEBD@Z)\r\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: __cdecl tensorflow::internal::CheckOpMessageBuilder::~CheckOpMessageBuilder(void)\" (??1CheckOpMessageBuilder@internal@tensorflow@@QEAA@XZ)\r\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: class std::basic_ostream<char,struct std::char_traits<char> > * __cdecl tensorflow::internal::CheckOpMessageBuilder::ForVar2(void)\" (?ForVar2@CheckOpMessageBuilder@internal@tensorflow@@QEAAPEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@XZ)\r\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > * __cdecl tensorflow::internal::CheckOpMessageBuilder::NewString(void)\" (?NewString@CheckOpMessageBuilder@internal@tensorflow@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ)\r\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"private: void __cdecl tensorflow::Tensor::CheckIsAlignedAndSingleElement(void)const \" (?CheckIsAlignedAndSingleElement@Tensor@tensorflow@@AEBAXXZ)\r\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"private: static class absl::InlinedVector<__int64,4,class std::allocator<__int64> > __cdecl tensorflow::Tensor::ComputeFlatInnerDims(class absl::Span<__int64 const >,__int64)\" (?ComputeFlatInnerDims@Tensor@tensorflow@@CA?AV?$InlinedVector@_J$03V?$allocator@_J@std@@@absl@@V?$Span@$$CB_J@4@_J@Z)\r\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"public: class absl::InlinedVector<__int64,4,class std::allocator<__int64> > __cdecl tensorflow::TensorShapeBase<class tensorflow::TensorShape>::dim_sizes(void)const \" (?dim_sizes@?$TensorShapeBase@VTensorShape@tensorflow@@@tensorflow@@QEBA?AV?$InlinedVector@_J$03V?$allocator@_J@std@@@absl@@XZ)\r\n1>ClassificationRunner.obj : error LNK2001: unresolved external symbol \"private: void __cdecl tensorflow::Tensor::CheckTypeAndIsAligned(enum tensorflow::DataType)const \" (?CheckTypeAndIsAligned@Tensor@tensorflow@@AEBAXW4DataType@2@@Z)\r\n1>NetworkRunner.obj : error LNK2001: unresolved external symbol \"public: __cdecl tensorflow::GraphDef::GraphDef(void)\" (??0GraphDef@tensorflow@@QEAA@XZ)\r\n1>NetworkRunner.obj : error LNK2001: unresolved external symbol \"public: virtual __cdecl tensorflow::GraphDef::~GraphDef(void)\" (??1GraphDef@tensorflow@@UEAA@XZ)\r\n1>NetworkRunner.obj : error LNK2001: unresolved external symbol \"public: __int64 __cdecl tensorflow::TensorShapeBase<class tensorflow::TensorShape>::dim_size(int)const \" (?dim_size@?$TensorShapeBase@VTensorShape@tensorflow@@@tensorflow@@QEBA_JH@Z)\r\n1>NetworkRunner.obj : error LNK2001: unresolved external symbol \"public: virtual __cdecl tensorflow::ConfigProto::~ConfigProto(void)\" (??1ConfigProto@tensorflow@@UEAA@XZ)\r\n1>NetworkRunner.obj : error LNK2001: unresolved external symbol \"class tensorflow::Status __cdecl tensorflow::ReadBinaryProto(class tensorflow::Env *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class google::protobuf::MessageLite *)\" (?ReadBinaryProto@tensorflow@@YA?AVStatus@1@PEAVEnv@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVMessageLite@protobuf@google@@@Z)\r\n1>NetworkRunner.obj : error LNK2001: unresolved external symbol \"public: static class tensorflow::Env * __cdecl tensorflow::Env::Default(void)\" (?Default@Env@tensorflow@@SAPEAV12@XZ)\r\n1>NetworkRunner.obj : error LNK2001: unresolved external symbol \"class tensorflow::Status __cdecl tensorflow::ReadTextProto(class tensorflow::Env *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class google::protobuf::Message *)\" (?ReadTextProto@tensorflow@@YA?AVStatus@1@PEAVEnv@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAVMessage@protobuf@google@@@Z)\r\n1>NetworkRunner.obj : error LNK2001: unresolved external symbol \"public: __cdecl tensorflow::SessionOptions::SessionOptions(void)\" (??0SessionOptions@tensorflow@@QEAA@XZ)\r\n1>NetworkRunner.obj : error LNK2001: unresolved external symbol \"class tensorflow::Session * __cdecl tensorflow::NewSession(struct tensorflow::SessionOptions const &)\" (?NewSession@tensorflow@@YAPEAVSession@1@AEBUSessionOptions@1@@Z)\r\n1>NetworkRunner.obj : error LNK2001: unresolved external symbol \"private: static class tensorflow::GPUOptions * __cdecl google::protobuf::Arena::CreateMaybeMessage<class tensorflow::GPUOptions>(class google::protobuf::Arena *)\" (??$CreateMaybeMessage@VGPUOptions@tensorflow@@$$V@Arena@protobuf@google@@CAPEAVGPUOptions@tensorflow@@PEAV012@@Z)\r\n1>NetworkRunner.obj : error LNK2001: unresolved external symbol \"private: void __cdecl tensorflow::TensorShape::CheckDimsEqual(int)const \" (?CheckDimsEqual@TensorShape@tensorflow@@AEBAXH@Z)\r\n1>NetworkRunner.obj : error LNK2001: unresolved external symbol \"private: void __cdecl tensorflow::TensorShape::CheckDimsAtLeast(int)const \" (?CheckDimsAtLeast@TensorShape@tensorflow@@AEBAXH@Z)\r\n1>C:\\development\\daview\\BrainServer\\x64\\Release\\BrainServer.exe : fatal error LNK1120: 34 unresolved externals\r\n1>Done building project \"BrainServer.vcxproj\" -- FAILED.\r\n========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========\r\n```\r\n\r\nIn any case, it would be appreciated if there were some instructions on how to use the C++ API of Tensorflow in an independent project (not having to build it with bazel)."}