{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/251674915", "html_url": "https://github.com/tensorflow/tensorflow/issues/4229#issuecomment-251674915", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4229", "id": 251674915, "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTY3NDkxNQ==", "user": {"login": "berlogb", "id": 19537028, "node_id": "MDQ6VXNlcjE5NTM3MDI4", "avatar_url": "https://avatars0.githubusercontent.com/u/19537028?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berlogb", "html_url": "https://github.com/berlogb", "followers_url": "https://api.github.com/users/berlogb/followers", "following_url": "https://api.github.com/users/berlogb/following{/other_user}", "gists_url": "https://api.github.com/users/berlogb/gists{/gist_id}", "starred_url": "https://api.github.com/users/berlogb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berlogb/subscriptions", "organizations_url": "https://api.github.com/users/berlogb/orgs", "repos_url": "https://api.github.com/users/berlogb/repos", "events_url": "https://api.github.com/users/berlogb/events{/privacy}", "received_events_url": "https://api.github.com/users/berlogb/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-05T13:31:05Z", "updated_at": "2016-10-05T13:31:05Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5453737\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/tatatodd\">@tatatodd</a>  Sorry, work caught up with me.<br>\nSo, repeated test on old driver simply copy pasting the same code as above into 3 different python processes on the same machine, using the same CPU.</p>\n<p>Unfortunately, doesn't seem that situation changes much. On old 361 driver I've got :<br>\n<code>a = [[ 1.  1.] [ 1. -5.]] b = [[ 2.  3.] [ 4.  5.]] sqared diff = [[ nan  nan] [ nan  nan]]</code></p>\n<p>and after upgrading</p>\n<p><code>nvidia-smi  Wed Oct  5 15:28:26 2016        +-----------------------------------------------------------------------------+ | NVIDIA-SMI 367.44                 Driver Version: 367.44                    |</code></p>\n<p><code>sqared diff = [[ -1.70120404e+38  -1.70141163e+38] [             nan              nan]] </code></p>\n<p>(When it works fine , it should look like this:<br>\n<code>sqared diff = [[   1.    4.] [   9.  100.]]</code><br>\n)<br>\nInterestingly, it seems that if I open another python , I finally get error I was looking for :</p>\n<p><code>W tensorflow/core/common_runtime/gpu/gpu_init.cc:163] Not initializing the GPU, could not create GPU MachineManager. Error: Internal: failed initializing StreamExecutor for CUDA device ordinal 0: Internal: failed call to cuCtxCreate: CUDA_ERROR_OUT_OF_MEMORY; total memory reported: 18446744073709551615</code></p>\n<p>So, looks like we do get that error, but somewhere in between, there is a situation when we fail to calculate stuff properly, but still don't through that error.</p>", "body_text": "@tatatodd  Sorry, work caught up with me.\nSo, repeated test on old driver simply copy pasting the same code as above into 3 different python processes on the same machine, using the same CPU.\nUnfortunately, doesn't seem that situation changes much. On old 361 driver I've got :\na = [[ 1.  1.] [ 1. -5.]] b = [[ 2.  3.] [ 4.  5.]] sqared diff = [[ nan  nan] [ nan  nan]]\nand after upgrading\nnvidia-smi  Wed Oct  5 15:28:26 2016        +-----------------------------------------------------------------------------+ | NVIDIA-SMI 367.44                 Driver Version: 367.44                    |\nsqared diff = [[ -1.70120404e+38  -1.70141163e+38] [             nan              nan]] \n(When it works fine , it should look like this:\nsqared diff = [[   1.    4.] [   9.  100.]]\n)\nInterestingly, it seems that if I open another python , I finally get error I was looking for :\nW tensorflow/core/common_runtime/gpu/gpu_init.cc:163] Not initializing the GPU, could not create GPU MachineManager. Error: Internal: failed initializing StreamExecutor for CUDA device ordinal 0: Internal: failed call to cuCtxCreate: CUDA_ERROR_OUT_OF_MEMORY; total memory reported: 18446744073709551615\nSo, looks like we do get that error, but somewhere in between, there is a situation when we fail to calculate stuff properly, but still don't through that error.", "body": "@tatatodd  Sorry, work caught up with me. \nSo, repeated test on old driver simply copy pasting the same code as above into 3 different python processes on the same machine, using the same CPU.\n\nUnfortunately, doesn't seem that situation changes much. On old 361 driver I've got :\n`a = [[ 1.  1.]\n [ 1. -5.]]\n b = [[ 2.  3.]\n [ 4.  5.]]\n sqared diff = [[ nan  nan]\n [ nan  nan]]`\n\nand after upgrading \n\n`nvidia-smi \nWed Oct  5 15:28:26 2016       \n+-----------------------------------------------------------------------------+\n| NVIDIA-SMI 367.44                 Driver Version: 367.44                    |`\n\n`sqared diff = [[ -1.70120404e+38  -1.70141163e+38]\n [             nan              nan]]\n`\n\n(When it works fine , it should look like this:\n`sqared diff = [[   1.    4.]\n [   9.  100.]]`\n)\nInterestingly, it seems that if I open another python , I finally get error I was looking for :\n\n`W tensorflow/core/common_runtime/gpu/gpu_init.cc:163] Not initializing the GPU, could not create GPU MachineManager. Error: Internal: failed initializing StreamExecutor for CUDA device ordinal 0: Internal: failed call to cuCtxCreate: CUDA_ERROR_OUT_OF_MEMORY; total memory reported: 18446744073709551615`\n\nSo, looks like we do get that error, but somewhere in between, there is a situation when we fail to calculate stuff properly, but still don't through that error.\n"}