{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19284", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19284/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19284/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19284/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19284", "id": 323048377, "node_id": "MDU6SXNzdWUzMjMwNDgzNzc=", "number": 19284, "title": "Training bug in mobilenet v1 extractor for Faster r-cnn", "user": {"login": "yryun", "id": 39238559, "node_id": "MDQ6VXNlcjM5MjM4NTU5", "avatar_url": "https://avatars1.githubusercontent.com/u/39238559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yryun", "html_url": "https://github.com/yryun", "followers_url": "https://api.github.com/users/yryun/followers", "following_url": "https://api.github.com/users/yryun/following{/other_user}", "gists_url": "https://api.github.com/users/yryun/gists{/gist_id}", "starred_url": "https://api.github.com/users/yryun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yryun/subscriptions", "organizations_url": "https://api.github.com/users/yryun/orgs", "repos_url": "https://api.github.com/users/yryun/repos", "events_url": "https://api.github.com/users/yryun/events{/privacy}", "received_events_url": "https://api.github.com/users/yryun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-15T02:51:53Z", "updated_at": "2018-05-15T02:58:33Z", "closed_at": "2018-05-15T02:58:33Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\ncustom kitti format dataset (good performance in Inception, Resnet extractor)</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nLinux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\nSource</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.6.0</li>\n<li><strong>Python version</strong>: 3.4</li>\n<li><strong>Bazel version (if compiling from source)</strong>: No</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: GCC 4.8.4</li>\n<li><strong>CUDA/cuDNN version</strong>: 9, 7</li>\n<li><strong>GPU model and memory</strong>: Tesla 40</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>It seems like training bug with Faster R-CNN Mobilenet.<br>\nI've been training Faster R-CNN with mobilenet feature extractor for 400k iteration, batch 8, learning rate 3e-03(mentioned in HuangMurphy_2017_Speed,accuracy trade-offs for modern convolutional object detectors). But it's mAP is \"zero\".  I'm using my own dataset and it's going well with InceptionV2, Resnet50, 101. mAP of InceptionV2, Resnet50, 101 is 0.7. So it's not about hyperparameter tuning problem.</p>\n<h3>Source code / logs</h3>\n<p>here is loss of inception v2, which has good mAP.<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/39238559/40033921-76956e36-5835-11e8-966f-347359f9588d.png\"><img src=\"https://user-images.githubusercontent.com/39238559/40033921-76956e36-5835-11e8-966f-347359f9588d.png\" alt=\"image\" style=\"max-width:100%;\"></a></p>\n<p>here is loss of mobilenet. Second stage loss is strangely low (loss is zero almost of time)<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/39238559/40033856-352ec6ae-5835-11e8-973e-44c2806cacea.png\"><img src=\"https://user-images.githubusercontent.com/39238559/40033856-352ec6ae-5835-11e8-973e-44c2806cacea.png\" alt=\"image\" style=\"max-width:100%;\"></a></p>\n<p>here is mAP of mobilenet. How can it be a zero?<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/39238559/40033951-b43a1142-5835-11e8-8166-c4315a83a17c.png\"><img src=\"https://user-images.githubusercontent.com/39238559/40033951-b43a1142-5835-11e8-8166-c4315a83a17c.png\" alt=\"image\" style=\"max-width:100%;\"></a></p>\n<p>here is my tensorboard distributions. Compared to Incepction V2, mobilenet has No change in second stage conv2d_12, conv2d_13 - moving_mean, moving_variance. I think it could be a clue of cause.<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/39238559/40034051-1937993e-5836-11e8-860c-e722bb71725b.png\"><img src=\"https://user-images.githubusercontent.com/39238559/40034051-1937993e-5836-11e8-860c-e722bb71725b.png\" alt=\"image\" style=\"max-width:100%;\"></a></p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\ncustom kitti format dataset (good performance in Inception, Resnet extractor)\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nLinux Ubuntu 16.04\nTensorFlow installed from (source or binary):\nSource\nTensorFlow version (use command below): 1.6.0\nPython version: 3.4\nBazel version (if compiling from source): No\nGCC/Compiler version (if compiling from source): GCC 4.8.4\nCUDA/cuDNN version: 9, 7\nGPU model and memory: Tesla 40\nExact command to reproduce:\n\nDescribe the problem\nIt seems like training bug with Faster R-CNN Mobilenet.\nI've been training Faster R-CNN with mobilenet feature extractor for 400k iteration, batch 8, learning rate 3e-03(mentioned in HuangMurphy_2017_Speed,accuracy trade-offs for modern convolutional object detectors). But it's mAP is \"zero\".  I'm using my own dataset and it's going well with InceptionV2, Resnet50, 101. mAP of InceptionV2, Resnet50, 101 is 0.7. So it's not about hyperparameter tuning problem.\nSource code / logs\nhere is loss of inception v2, which has good mAP.\n\nhere is loss of mobilenet. Second stage loss is strangely low (loss is zero almost of time)\n\nhere is mAP of mobilenet. How can it be a zero?\n\nhere is my tensorboard distributions. Compared to Incepction V2, mobilenet has No change in second stage conv2d_12, conv2d_13 - moving_mean, moving_variance. I think it could be a clue of cause.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\ncustom kitti format dataset (good performance in Inception, Resnet extractor)\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nLinux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**:\r\nSource\r\n- **TensorFlow version (use command below)**: 1.6.0\r\n- **Python version**: 3.4\r\n- **Bazel version (if compiling from source)**: No\r\n- **GCC/Compiler version (if compiling from source)**: GCC 4.8.4\r\n- **CUDA/cuDNN version**: 9, 7\r\n- **GPU model and memory**: Tesla 40\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\nIt seems like training bug with Faster R-CNN Mobilenet.\r\nI've been training Faster R-CNN with mobilenet feature extractor for 400k iteration, batch 8, learning rate 3e-03(mentioned in HuangMurphy_2017_Speed,accuracy trade-offs for modern convolutional object detectors). But it's mAP is \"zero\".  I'm using my own dataset and it's going well with InceptionV2, Resnet50, 101. mAP of InceptionV2, Resnet50, 101 is 0.7. So it's not about hyperparameter tuning problem.\r\n\r\n\r\n### Source code / logs\r\nhere is loss of inception v2, which has good mAP.\r\n![image](https://user-images.githubusercontent.com/39238559/40033921-76956e36-5835-11e8-966f-347359f9588d.png)\r\n\r\nhere is loss of mobilenet. Second stage loss is strangely low (loss is zero almost of time)\r\n![image](https://user-images.githubusercontent.com/39238559/40033856-352ec6ae-5835-11e8-973e-44c2806cacea.png)\r\n\r\nhere is mAP of mobilenet. How can it be a zero?\r\n![image](https://user-images.githubusercontent.com/39238559/40033951-b43a1142-5835-11e8-8166-c4315a83a17c.png)\r\n\r\nhere is my tensorboard distributions. Compared to Incepction V2, mobilenet has No change in second stage conv2d_12, conv2d_13 - moving_mean, moving_variance. I think it could be a clue of cause.\r\n![image](https://user-images.githubusercontent.com/39238559/40034051-1937993e-5836-11e8-860c-e722bb71725b.png)\r\n\r\n"}