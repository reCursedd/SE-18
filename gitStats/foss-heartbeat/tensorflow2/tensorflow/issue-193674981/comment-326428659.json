{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/326428659", "html_url": "https://github.com/tensorflow/tensorflow/issues/6110#issuecomment-326428659", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6110", "id": 326428659, "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjQyODY1OQ==", "user": {"login": "dpressel", "id": 247881, "node_id": "MDQ6VXNlcjI0Nzg4MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/247881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dpressel", "html_url": "https://github.com/dpressel", "followers_url": "https://api.github.com/users/dpressel/followers", "following_url": "https://api.github.com/users/dpressel/following{/other_user}", "gists_url": "https://api.github.com/users/dpressel/gists{/gist_id}", "starred_url": "https://api.github.com/users/dpressel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dpressel/subscriptions", "organizations_url": "https://api.github.com/users/dpressel/orgs", "repos_url": "https://api.github.com/users/dpressel/repos", "events_url": "https://api.github.com/users/dpressel/events{/privacy}", "received_events_url": "https://api.github.com/users/dpressel/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-31T21:43:55Z", "updated_at": "2017-08-31T21:45:12Z", "author_association": "NONE", "body_html": "<p>I think the details of the original issue are out of date, but it still doesnt seem possible to use sparse tensors as part of a signature.  Is this intended behavior?</p>\n<p>From this doc:</p>\n<p><a href=\"https://github.com/tensorflow/serving/blob/master/tensorflow_serving/g3doc/signature_defs.md\">https://github.com/tensorflow/serving/blob/master/tensorflow_serving/g3doc/signature_defs.md</a></p>\n<p>\"Note that TensorInfo itself requires specification of name, dtype and tensor shape. While tensor information is already present in the graph, it is useful to explicitly have the TensorInfo defined as part of the SignatureDef since tools can then perform signature validation, etc. without having to read the graph definition.\"</p>\n<p>(linked from here: <a href=\"https://github.com/tensorflow/tensorflow/tree/master/tensorflow/python/saved_model\">https://github.com/tensorflow/tensorflow/tree/master/tensorflow/python/saved_model</a>)</p>\n<p>This seems consistent with the code -- looking here (in  <code>def _validate_signature_def_map(self, signature_def_map)</code>):</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/builder_impl.py#L202\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/builder_impl.py#L202</a></p>\n<p>The definition of TensorInfo seems to show that sparse will not have a name (there is a name in each sub-field instead):<br>\n<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/protobuf/meta_graph.proto\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/protobuf/meta_graph.proto</a></p>\n<p>So basically, when using a VarLenFeature, export fails:</p>\n<pre><code>AssertionError: All TensorInfo protos used in the SignatureDefs must have the name field set: dtype: DT_STRING\n</code></pre>\n<p>This fix from a few days ago in <code>saved_model.utils.py</code> seems to imply that using a SparseTensor should be possible, but maybe I'm misinterpreting:</p>\n<p><a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/eb27277809c038d93edcfb7221295608654589d7/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/eb27277809c038d93edcfb7221295608654589d7\"><tt>eb27277</tt></a></p>", "body_text": "I think the details of the original issue are out of date, but it still doesnt seem possible to use sparse tensors as part of a signature.  Is this intended behavior?\nFrom this doc:\nhttps://github.com/tensorflow/serving/blob/master/tensorflow_serving/g3doc/signature_defs.md\n\"Note that TensorInfo itself requires specification of name, dtype and tensor shape. While tensor information is already present in the graph, it is useful to explicitly have the TensorInfo defined as part of the SignatureDef since tools can then perform signature validation, etc. without having to read the graph definition.\"\n(linked from here: https://github.com/tensorflow/tensorflow/tree/master/tensorflow/python/saved_model)\nThis seems consistent with the code -- looking here (in  def _validate_signature_def_map(self, signature_def_map)):\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/builder_impl.py#L202\nThe definition of TensorInfo seems to show that sparse will not have a name (there is a name in each sub-field instead):\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/protobuf/meta_graph.proto\nSo basically, when using a VarLenFeature, export fails:\nAssertionError: All TensorInfo protos used in the SignatureDefs must have the name field set: dtype: DT_STRING\n\nThis fix from a few days ago in saved_model.utils.py seems to imply that using a SparseTensor should be possible, but maybe I'm misinterpreting:\neb27277", "body": "I think the details of the original issue are out of date, but it still doesnt seem possible to use sparse tensors as part of a signature.  Is this intended behavior?\r\n\r\nFrom this doc:\r\n\r\nhttps://github.com/tensorflow/serving/blob/master/tensorflow_serving/g3doc/signature_defs.md\r\n\r\n\"Note that TensorInfo itself requires specification of name, dtype and tensor shape. While tensor information is already present in the graph, it is useful to explicitly have the TensorInfo defined as part of the SignatureDef since tools can then perform signature validation, etc. without having to read the graph definition.\"\r\n\r\n(linked from here: https://github.com/tensorflow/tensorflow/tree/master/tensorflow/python/saved_model)\r\n\r\nThis seems consistent with the code -- looking here (in  `def _validate_signature_def_map(self, signature_def_map)`):\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/builder_impl.py#L202\r\n\r\nThe definition of TensorInfo seems to show that sparse will not have a name (there is a name in each sub-field instead):\r\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/protobuf/meta_graph.proto\r\n\r\nSo basically, when using a VarLenFeature, export fails:\r\n```\r\nAssertionError: All TensorInfo protos used in the SignatureDefs must have the name field set: dtype: DT_STRING\r\n```\r\n\r\nThis fix from a few days ago in `saved_model.utils.py` seems to imply that using a SparseTensor should be possible, but maybe I'm misinterpreting:\r\n\r\nhttps://github.com/tensorflow/tensorflow/commit/eb27277809c038d93edcfb7221295608654589d7\r\n\r\n"}