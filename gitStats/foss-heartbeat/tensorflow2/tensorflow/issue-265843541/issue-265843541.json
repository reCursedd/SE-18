{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13751", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13751/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13751/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13751/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/13751", "id": 265843541, "node_id": "MDU6SXNzdWUyNjU4NDM1NDE=", "number": 13751, "title": "Parsing TFRecords bug in TensorFlow v1.2", "user": {"login": "jstypka", "id": 4479536, "node_id": "MDQ6VXNlcjQ0Nzk1MzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/4479536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jstypka", "html_url": "https://github.com/jstypka", "followers_url": "https://api.github.com/users/jstypka/followers", "following_url": "https://api.github.com/users/jstypka/following{/other_user}", "gists_url": "https://api.github.com/users/jstypka/gists{/gist_id}", "starred_url": "https://api.github.com/users/jstypka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jstypka/subscriptions", "organizations_url": "https://api.github.com/users/jstypka/orgs", "repos_url": "https://api.github.com/users/jstypka/repos", "events_url": "https://api.github.com/users/jstypka/events{/privacy}", "received_events_url": "https://api.github.com/users/jstypka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 15, "created_at": "2017-10-16T17:03:41Z", "updated_at": "2017-10-19T11:45:36Z", "closed_at": "2017-10-19T11:45:36Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: macOS High Sierra 10.13</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: ('v1.2.0-rc2-21-g12f033d', '1.2.0')</li>\n<li><strong>Python version</strong>: 2.7.10</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>: See below</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I believe there's a bug in TensorFlow v1.2. The code below runs fine in v1.4, while erroring out in v1.2. Here's the code:</p>\n<div class=\"highlight highlight-source-python\"><pre>filenames <span class=\"pl-k\">=</span> [<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>gs://bucket/file.tfrecords<span class=\"pl-pds\">\"</span></span>]\ndataset <span class=\"pl-k\">=</span> tf.contrib.data.TFRecordDataset(filenames)\nparse_fn <span class=\"pl-k\">=</span> <span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">r</span>: tf.parse_single_example(r, {<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>f1<span class=\"pl-pds\">\"</span></span>: tf.VarLenFeature(tf.int64)})\ndataset.map(parse_fn)</pre></div>\n<p>Here's the stacktrace that I get:</p>\n<pre><code>TypeError                                 Traceback (most recent call last)\n&lt;ipython-input-42-0473d32d7931&gt; in &lt;module&gt;()\n----&gt; 1 dataset.map(parser)\n\n/Users/stypka/env/tf-1.2/lib/python2.7/site-packages/tensorflow/contrib/data/python/ops/dataset_ops.pyc in map(self, map_func, num_threads, output_buffer_size)\n    811       A `Dataset`.\n    812     \"\"\"\n--&gt; 813     return MapDataset(self, map_func, num_threads, output_buffer_size)\n    814\n    815   def flat_map(self, map_func):\n\n/Users/stypka/env/tf-1.2/lib/python2.7/site-packages/tensorflow/contrib/data/python/ops/dataset_ops.pyc in __init__(self, input_dataset, map_func, num_threads, output_buffer_size)\n   1434\n   1435     self._map_func = tf_map_func\n-&gt; 1436     self._map_func.add_to_graph(ops.get_default_graph())\n   1437     if num_threads is not None:\n   1438       self._num_threads = ops.convert_to_tensor(\n\n/Users/stypka/env/tf-1.2/lib/python2.7/site-packages/tensorflow/python/framework/function.pyc in add_to_graph(self, g)\n    617   def add_to_graph(self, g):\n    618     \"\"\"Adds this function into the graph g.\"\"\"\n--&gt; 619     self._create_definition_if_needed()\n    620\n    621     # pylint: disable=protected-access\n\n/Users/stypka/env/tf-1.2/lib/python2.7/site-packages/tensorflow/contrib/data/python/framework/function.pyc in _create_definition_if_needed(self)\n    165       # Call func and gather the output tensors.\n    166       with vs.variable_scope(\"\", custom_getter=temp_graph.getvar):\n--&gt; 167         outputs = self._func(*inputs)\n    168       # If func only returned one value, make it a tuple.\n    169       if not isinstance(outputs, (list, tuple)):\n\n/Users/stypka/env/tf-1.2/lib/python2.7/site-packages/tensorflow/contrib/data/python/ops/dataset_ops.pyc in tf_map_func(*args)\n   1425\n   1426       # Extract shape information from the returned values.\n-&gt; 1427       flattened_ret = [ops.convert_to_tensor(t) for t in nest.flatten(ret)]\n   1428       self._output_shapes = nest.pack_sequence_as(\n   1429           ret, [t.get_shape() for t in flattened_ret])\n\n/Users/stypka/env/tf-1.2/lib/python2.7/site-packages/tensorflow/python/framework/ops.pyc in convert_to_tensor(value, dtype, name, preferred_dtype)\n    674       name=name,\n    675       preferred_dtype=preferred_dtype,\n--&gt; 676       as_ref=False)\n    677\n    678\n\n/Users/stypka/env/tf-1.2/lib/python2.7/site-packages/tensorflow/python/framework/ops.pyc in internal_convert_to_tensor(value, dtype, name, as_ref, preferred_dtype)\n    739\n    740         if ret is None:\n--&gt; 741           ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n    742\n    743         if ret is NotImplemented:\n\n/Users/stypka/env/tf-1.2/lib/python2.7/site-packages/tensorflow/python/framework/constant_op.pyc in _constant_tensor_conversion_function(v, dtype, name, as_ref)\n    111                                          as_ref=False):\n    112   _ = as_ref\n--&gt; 113   return constant(v, dtype=dtype, name=name)\n    114\n    115\n\n/Users/stypka/env/tf-1.2/lib/python2.7/site-packages/tensorflow/python/framework/constant_op.pyc in constant(value, dtype, shape, name, verify_shape)\n    100   tensor_value = attr_value_pb2.AttrValue()\n    101   tensor_value.tensor.CopyFrom(\n--&gt; 102       tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape, verify_shape=verify_shape))\n    103   dtype_value = attr_value_pb2.AttrValue(type=tensor_value.tensor.dtype)\n    104   const_tensor = g.create_op(\n\n/Users/stypka/env/tf-1.2/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.pyc in make_tensor_proto(values, dtype, shape, verify_shape)\n    460       raise TypeError(\"Failed to convert object of type %s to Tensor. \"\n    461                       \"Contents: %s. Consider casting elements to a \"\n--&gt; 462                       \"supported type.\" % (type(values), values))\n    463     tensor_proto.string_val.extend(str_values)\n    464     return tensor_proto\n\nTypeError: Failed to convert object of type &lt;type 'dict'&gt; to Tensor. Contents: {'f1': &lt;tensorflow.python.framework.sparse_tensor.SparseTensor object at 0x117918410&gt;}. Consider casting elements to a supported type.\n</code></pre>\n<p>And again, this works fine in TensorFlow v1.4.0rc0 that I tested.</p>\n<p>Let me know if I should provide any more info!</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS High Sierra 10.13\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): ('v1.2.0-rc2-21-g12f033d', '1.2.0')\nPython version: 2.7.10\nBazel version (if compiling from source): N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce: See below\n\nDescribe the problem\nI believe there's a bug in TensorFlow v1.2. The code below runs fine in v1.4, while erroring out in v1.2. Here's the code:\nfilenames = [\"gs://bucket/file.tfrecords\"]\ndataset = tf.contrib.data.TFRecordDataset(filenames)\nparse_fn = lambda r: tf.parse_single_example(r, {\"f1\": tf.VarLenFeature(tf.int64)})\ndataset.map(parse_fn)\nHere's the stacktrace that I get:\nTypeError                                 Traceback (most recent call last)\n<ipython-input-42-0473d32d7931> in <module>()\n----> 1 dataset.map(parser)\n\n/Users/stypka/env/tf-1.2/lib/python2.7/site-packages/tensorflow/contrib/data/python/ops/dataset_ops.pyc in map(self, map_func, num_threads, output_buffer_size)\n    811       A `Dataset`.\n    812     \"\"\"\n--> 813     return MapDataset(self, map_func, num_threads, output_buffer_size)\n    814\n    815   def flat_map(self, map_func):\n\n/Users/stypka/env/tf-1.2/lib/python2.7/site-packages/tensorflow/contrib/data/python/ops/dataset_ops.pyc in __init__(self, input_dataset, map_func, num_threads, output_buffer_size)\n   1434\n   1435     self._map_func = tf_map_func\n-> 1436     self._map_func.add_to_graph(ops.get_default_graph())\n   1437     if num_threads is not None:\n   1438       self._num_threads = ops.convert_to_tensor(\n\n/Users/stypka/env/tf-1.2/lib/python2.7/site-packages/tensorflow/python/framework/function.pyc in add_to_graph(self, g)\n    617   def add_to_graph(self, g):\n    618     \"\"\"Adds this function into the graph g.\"\"\"\n--> 619     self._create_definition_if_needed()\n    620\n    621     # pylint: disable=protected-access\n\n/Users/stypka/env/tf-1.2/lib/python2.7/site-packages/tensorflow/contrib/data/python/framework/function.pyc in _create_definition_if_needed(self)\n    165       # Call func and gather the output tensors.\n    166       with vs.variable_scope(\"\", custom_getter=temp_graph.getvar):\n--> 167         outputs = self._func(*inputs)\n    168       # If func only returned one value, make it a tuple.\n    169       if not isinstance(outputs, (list, tuple)):\n\n/Users/stypka/env/tf-1.2/lib/python2.7/site-packages/tensorflow/contrib/data/python/ops/dataset_ops.pyc in tf_map_func(*args)\n   1425\n   1426       # Extract shape information from the returned values.\n-> 1427       flattened_ret = [ops.convert_to_tensor(t) for t in nest.flatten(ret)]\n   1428       self._output_shapes = nest.pack_sequence_as(\n   1429           ret, [t.get_shape() for t in flattened_ret])\n\n/Users/stypka/env/tf-1.2/lib/python2.7/site-packages/tensorflow/python/framework/ops.pyc in convert_to_tensor(value, dtype, name, preferred_dtype)\n    674       name=name,\n    675       preferred_dtype=preferred_dtype,\n--> 676       as_ref=False)\n    677\n    678\n\n/Users/stypka/env/tf-1.2/lib/python2.7/site-packages/tensorflow/python/framework/ops.pyc in internal_convert_to_tensor(value, dtype, name, as_ref, preferred_dtype)\n    739\n    740         if ret is None:\n--> 741           ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n    742\n    743         if ret is NotImplemented:\n\n/Users/stypka/env/tf-1.2/lib/python2.7/site-packages/tensorflow/python/framework/constant_op.pyc in _constant_tensor_conversion_function(v, dtype, name, as_ref)\n    111                                          as_ref=False):\n    112   _ = as_ref\n--> 113   return constant(v, dtype=dtype, name=name)\n    114\n    115\n\n/Users/stypka/env/tf-1.2/lib/python2.7/site-packages/tensorflow/python/framework/constant_op.pyc in constant(value, dtype, shape, name, verify_shape)\n    100   tensor_value = attr_value_pb2.AttrValue()\n    101   tensor_value.tensor.CopyFrom(\n--> 102       tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape, verify_shape=verify_shape))\n    103   dtype_value = attr_value_pb2.AttrValue(type=tensor_value.tensor.dtype)\n    104   const_tensor = g.create_op(\n\n/Users/stypka/env/tf-1.2/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.pyc in make_tensor_proto(values, dtype, shape, verify_shape)\n    460       raise TypeError(\"Failed to convert object of type %s to Tensor. \"\n    461                       \"Contents: %s. Consider casting elements to a \"\n--> 462                       \"supported type.\" % (type(values), values))\n    463     tensor_proto.string_val.extend(str_values)\n    464     return tensor_proto\n\nTypeError: Failed to convert object of type <type 'dict'> to Tensor. Contents: {'f1': <tensorflow.python.framework.sparse_tensor.SparseTensor object at 0x117918410>}. Consider casting elements to a supported type.\n\nAnd again, this works fine in TensorFlow v1.4.0rc0 that I tested.\nLet me know if I should provide any more info!", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: macOS High Sierra 10.13\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: ('v1.2.0-rc2-21-g12f033d', '1.2.0')\r\n- **Python version**: 2.7.10\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: See below\r\n\r\n### Describe the problem\r\nI believe there's a bug in TensorFlow v1.2. The code below runs fine in v1.4, while erroring out in v1.2. Here's the code:\r\n```python\r\nfilenames = [\"gs://bucket/file.tfrecords\"]\r\ndataset = tf.contrib.data.TFRecordDataset(filenames)\r\nparse_fn = lambda r: tf.parse_single_example(r, {\"f1\": tf.VarLenFeature(tf.int64)})\r\ndataset.map(parse_fn)\r\n```\r\n\r\nHere's the stacktrace that I get:\r\n```\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-42-0473d32d7931> in <module>()\r\n----> 1 dataset.map(parser)\r\n\r\n/Users/stypka/env/tf-1.2/lib/python2.7/site-packages/tensorflow/contrib/data/python/ops/dataset_ops.pyc in map(self, map_func, num_threads, output_buffer_size)\r\n    811       A `Dataset`.\r\n    812     \"\"\"\r\n--> 813     return MapDataset(self, map_func, num_threads, output_buffer_size)\r\n    814\r\n    815   def flat_map(self, map_func):\r\n\r\n/Users/stypka/env/tf-1.2/lib/python2.7/site-packages/tensorflow/contrib/data/python/ops/dataset_ops.pyc in __init__(self, input_dataset, map_func, num_threads, output_buffer_size)\r\n   1434\r\n   1435     self._map_func = tf_map_func\r\n-> 1436     self._map_func.add_to_graph(ops.get_default_graph())\r\n   1437     if num_threads is not None:\r\n   1438       self._num_threads = ops.convert_to_tensor(\r\n\r\n/Users/stypka/env/tf-1.2/lib/python2.7/site-packages/tensorflow/python/framework/function.pyc in add_to_graph(self, g)\r\n    617   def add_to_graph(self, g):\r\n    618     \"\"\"Adds this function into the graph g.\"\"\"\r\n--> 619     self._create_definition_if_needed()\r\n    620\r\n    621     # pylint: disable=protected-access\r\n\r\n/Users/stypka/env/tf-1.2/lib/python2.7/site-packages/tensorflow/contrib/data/python/framework/function.pyc in _create_definition_if_needed(self)\r\n    165       # Call func and gather the output tensors.\r\n    166       with vs.variable_scope(\"\", custom_getter=temp_graph.getvar):\r\n--> 167         outputs = self._func(*inputs)\r\n    168       # If func only returned one value, make it a tuple.\r\n    169       if not isinstance(outputs, (list, tuple)):\r\n\r\n/Users/stypka/env/tf-1.2/lib/python2.7/site-packages/tensorflow/contrib/data/python/ops/dataset_ops.pyc in tf_map_func(*args)\r\n   1425\r\n   1426       # Extract shape information from the returned values.\r\n-> 1427       flattened_ret = [ops.convert_to_tensor(t) for t in nest.flatten(ret)]\r\n   1428       self._output_shapes = nest.pack_sequence_as(\r\n   1429           ret, [t.get_shape() for t in flattened_ret])\r\n\r\n/Users/stypka/env/tf-1.2/lib/python2.7/site-packages/tensorflow/python/framework/ops.pyc in convert_to_tensor(value, dtype, name, preferred_dtype)\r\n    674       name=name,\r\n    675       preferred_dtype=preferred_dtype,\r\n--> 676       as_ref=False)\r\n    677\r\n    678\r\n\r\n/Users/stypka/env/tf-1.2/lib/python2.7/site-packages/tensorflow/python/framework/ops.pyc in internal_convert_to_tensor(value, dtype, name, as_ref, preferred_dtype)\r\n    739\r\n    740         if ret is None:\r\n--> 741           ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n    742\r\n    743         if ret is NotImplemented:\r\n\r\n/Users/stypka/env/tf-1.2/lib/python2.7/site-packages/tensorflow/python/framework/constant_op.pyc in _constant_tensor_conversion_function(v, dtype, name, as_ref)\r\n    111                                          as_ref=False):\r\n    112   _ = as_ref\r\n--> 113   return constant(v, dtype=dtype, name=name)\r\n    114\r\n    115\r\n\r\n/Users/stypka/env/tf-1.2/lib/python2.7/site-packages/tensorflow/python/framework/constant_op.pyc in constant(value, dtype, shape, name, verify_shape)\r\n    100   tensor_value = attr_value_pb2.AttrValue()\r\n    101   tensor_value.tensor.CopyFrom(\r\n--> 102       tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape, verify_shape=verify_shape))\r\n    103   dtype_value = attr_value_pb2.AttrValue(type=tensor_value.tensor.dtype)\r\n    104   const_tensor = g.create_op(\r\n\r\n/Users/stypka/env/tf-1.2/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.pyc in make_tensor_proto(values, dtype, shape, verify_shape)\r\n    460       raise TypeError(\"Failed to convert object of type %s to Tensor. \"\r\n    461                       \"Contents: %s. Consider casting elements to a \"\r\n--> 462                       \"supported type.\" % (type(values), values))\r\n    463     tensor_proto.string_val.extend(str_values)\r\n    464     return tensor_proto\r\n\r\nTypeError: Failed to convert object of type <type 'dict'> to Tensor. Contents: {'f1': <tensorflow.python.framework.sparse_tensor.SparseTensor object at 0x117918410>}. Consider casting elements to a supported type.\r\n```\r\n\r\nAnd again, this works fine in TensorFlow v1.4.0rc0 that I tested.\r\n\r\nLet me know if I should provide any more info!"}