{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23060", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23060/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23060/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23060/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23060", "id": 371327923, "node_id": "MDU6SXNzdWUzNzEzMjc5MjM=", "number": 23060, "title": "Attributes values not inferred by TFE C API (eager mode)", "user": {"login": "karllessard", "id": 10109534, "node_id": "MDQ6VXNlcjEwMTA5NTM0", "avatar_url": "https://avatars3.githubusercontent.com/u/10109534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karllessard", "html_url": "https://github.com/karllessard", "followers_url": "https://api.github.com/users/karllessard/followers", "following_url": "https://api.github.com/users/karllessard/following{/other_user}", "gists_url": "https://api.github.com/users/karllessard/gists{/gist_id}", "starred_url": "https://api.github.com/users/karllessard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karllessard/subscriptions", "organizations_url": "https://api.github.com/users/karllessard/orgs", "repos_url": "https://api.github.com/users/karllessard/repos", "events_url": "https://api.github.com/users/karllessard/events{/privacy}", "received_events_url": "https://api.github.com/users/karllessard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1097545817, "node_id": "MDU6TGFiZWwxMDk3NTQ1ODE3", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:apis", "name": "comp:apis", "color": "0052cc", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-10-18T01:38:56Z", "updated_at": "2018-11-02T22:02:11Z", "closed_at": "2018-11-02T22:02:11Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I'm trying to enable eager execution mode in Java based on the<code>TFE_*</code> methods exposed by TensorFlow C API and I have noticed that those method do not infer attribute values the same way that graph execution does.</p>\n<p>For example, the <code>NodeDefBuilder</code> class (used in graph execution mode) will infer type attribute values automatically based on the type of the tensors the node receives in input (see <a href=\"https://github.com/tensorflow/tensorflow/blob/7e0257d953401288bc10dc11d07b418371bbc56d/tensorflow/core/framework/node_def_builder.cc#L123\"><code>NodeDefBuilder::SingleInput</code></a>. Eager classes do not. Also, in graph mode, default values are assigned automatically when some attributes are not provided (see <a href=\"https://github.com/tensorflow/tensorflow/blob/7e0257d953401288bc10dc11d07b418371bbc56d/tensorflow/core/framework/node_def_builder.cc#L245\"><code>NodeDefBuilder::Finalize</code></a>). Again, eager classes do not.</p>\n<p>My question is are those features missing by design or should they be part of the eager C API as well?</p>\n<p>I can do a work around in the Java client, as <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1294940\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/eaplatanios\">@eaplatanios</a> did for Scala, but I'm tempted to think that this should be implemented in the C API and that the graph and eager methods should be more symmetric to avoid moving this complexity in all the clients.</p>\n<hr>\n<p>Have I written custom code: N/A<br>\nOS Platform and Distribution: N/A<br>\nTensorFlow installed from: N/A<br>\nTensorFlow version: 1.11<br>\nBazel version: N/A<br>\nCUDA/cuDNN version: N/A<br>\nGPU model and memory: N/A<br>\nExact command to reproduce: N/A<br>\nMobile device: N/A</p>", "body_text": "I'm trying to enable eager execution mode in Java based on theTFE_* methods exposed by TensorFlow C API and I have noticed that those method do not infer attribute values the same way that graph execution does.\nFor example, the NodeDefBuilder class (used in graph execution mode) will infer type attribute values automatically based on the type of the tensors the node receives in input (see NodeDefBuilder::SingleInput. Eager classes do not. Also, in graph mode, default values are assigned automatically when some attributes are not provided (see NodeDefBuilder::Finalize). Again, eager classes do not.\nMy question is are those features missing by design or should they be part of the eager C API as well?\nI can do a work around in the Java client, as @eaplatanios did for Scala, but I'm tempted to think that this should be implemented in the C API and that the graph and eager methods should be more symmetric to avoid moving this complexity in all the clients.\n\nHave I written custom code: N/A\nOS Platform and Distribution: N/A\nTensorFlow installed from: N/A\nTensorFlow version: 1.11\nBazel version: N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce: N/A\nMobile device: N/A", "body": "I'm trying to enable eager execution mode in Java based on the`TFE_*` methods exposed by TensorFlow C API and I have noticed that those method do not infer attribute values the same way that graph execution does.\r\n\r\nFor example, the `NodeDefBuilder` class (used in graph execution mode) will infer type attribute values automatically based on the type of the tensors the node receives in input (see [`NodeDefBuilder::SingleInput`](https://github.com/tensorflow/tensorflow/blob/7e0257d953401288bc10dc11d07b418371bbc56d/tensorflow/core/framework/node_def_builder.cc#L123). Eager classes do not. Also, in graph mode, default values are assigned automatically when some attributes are not provided (see [`NodeDefBuilder::Finalize`](https://github.com/tensorflow/tensorflow/blob/7e0257d953401288bc10dc11d07b418371bbc56d/tensorflow/core/framework/node_def_builder.cc#L245)). Again, eager classes do not.\r\n\r\nMy question is are those features missing by design or should they be part of the eager C API as well? \r\n\r\nI can do a work around in the Java client, as @eaplatanios did for Scala, but I'm tempted to think that this should be implemented in the C API and that the graph and eager methods should be more symmetric to avoid moving this complexity in all the clients.\r\n\r\n-----------\r\n\r\nHave I written custom code: N/A\r\nOS Platform and Distribution: N/A\r\nTensorFlow installed from: N/A\r\nTensorFlow version: 1.11\r\nBazel version: N/A\r\nCUDA/cuDNN version: N/A\r\nGPU model and memory: N/A\r\nExact command to reproduce: N/A\r\nMobile device: N/A"}