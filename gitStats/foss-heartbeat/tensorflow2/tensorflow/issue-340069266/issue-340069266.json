{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20680", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20680/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20680/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20680/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20680", "id": 340069266, "node_id": "MDU6SXNzdWUzNDAwNjkyNjY=", "number": 20680, "title": "The default values of tf.app.flags are printed event though passed parameters at the first time", "user": {"login": "tobegit3hub", "id": 2715000, "node_id": "MDQ6VXNlcjI3MTUwMDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tobegit3hub", "html_url": "https://github.com/tobegit3hub", "followers_url": "https://api.github.com/users/tobegit3hub/followers", "following_url": "https://api.github.com/users/tobegit3hub/following{/other_user}", "gists_url": "https://api.github.com/users/tobegit3hub/gists{/gist_id}", "starred_url": "https://api.github.com/users/tobegit3hub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tobegit3hub/subscriptions", "organizations_url": "https://api.github.com/users/tobegit3hub/orgs", "repos_url": "https://api.github.com/users/tobegit3hub/repos", "events_url": "https://api.github.com/users/tobegit3hub/events{/privacy}", "received_events_url": "https://api.github.com/users/tobegit3hub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "robieta", "id": 13089297, "node_id": "MDQ6VXNlcjEzMDg5Mjk3", "avatar_url": "https://avatars0.githubusercontent.com/u/13089297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robieta", "html_url": "https://github.com/robieta", "followers_url": "https://api.github.com/users/robieta/followers", "following_url": "https://api.github.com/users/robieta/following{/other_user}", "gists_url": "https://api.github.com/users/robieta/gists{/gist_id}", "starred_url": "https://api.github.com/users/robieta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robieta/subscriptions", "organizations_url": "https://api.github.com/users/robieta/orgs", "repos_url": "https://api.github.com/users/robieta/repos", "events_url": "https://api.github.com/users/robieta/events{/privacy}", "received_events_url": "https://api.github.com/users/robieta/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "robieta", "id": 13089297, "node_id": "MDQ6VXNlcjEzMDg5Mjk3", "avatar_url": "https://avatars0.githubusercontent.com/u/13089297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robieta", "html_url": "https://github.com/robieta", "followers_url": "https://api.github.com/users/robieta/followers", "following_url": "https://api.github.com/users/robieta/following{/other_user}", "gists_url": "https://api.github.com/users/robieta/gists{/gist_id}", "starred_url": "https://api.github.com/users/robieta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robieta/subscriptions", "organizations_url": "https://api.github.com/users/robieta/orgs", "repos_url": "https://api.github.com/users/robieta/repos", "events_url": "https://api.github.com/users/robieta/events{/privacy}", "received_events_url": "https://api.github.com/users/robieta/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-07-11T02:29:18Z", "updated_at": "2018-11-22T18:57:09Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<p>== cat /etc/issue ===============================================<br>\nDarwin mbp-2.local 17.5.0 Darwin Kernel Version 17.5.0: Fri Apr 13 19:32:32 PDT 2018; root:xnu-4570.51.2~1/RELEASE_X86_64 x86_64<br>\nMac OS X 10.13.4</p>\n<p>== are we in docker =============================================<br>\nNo</p>\n<p>== compiler =====================================================<br>\nApple LLVM version 9.1.0 (clang-902.0.39.1)<br>\nTarget: x86_64-apple-darwin17.5.0<br>\nThread model: posix<br>\nInstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin</p>\n<p>== uname -a =====================================================<br>\nDarwin mbp-2.local 17.5.0 Darwin Kernel Version 17.5.0: Fri Apr 13 19:32:32 PDT 2018; root:xnu-4570.51.2~1/RELEASE_X86_64 x86_64</p>\n<p>== check pips ===================================================<br>\nnumpy                              1.14.2<br>\nprotobuf                           3.5.2.post1<br>\ntensorflow                         1.8.0<br>\ntensorflow-hub                     0.1.0<br>\ntensorflow-model-analysis          0.6.0<br>\ntensorflow-serving-api             1.8.0<br>\ntensorflow-tensorboard             1.5.0<br>\ntensorflow-transform               0.6.0<br>\ntensorflowjs                       0.1.0<br>\ntensorflowonspark                  1.0.0</p>\n<p>== check for virtualenv =========================================<br>\nFalse</p>\n<p>== tensorflow import ============================================<br>\ntf.VERSION = 1.8.0<br>\ntf.GIT_VERSION = v1.8.0-0-g93bc2e2072<br>\ntf.COMPILER_VERSION = v1.8.0-0-g93bc2e2072<br>\nSanity check: array([1], dtype=int32)<br>\n/usr/local/lib/python2.7/site-packages/h5py/<strong>init</strong>.py:36: FutureWarning: Conversion of the second argument of issubdtype from <code>float</code> to <code>np.floating</code> is deprecated. In future, it will be treated as <code>np .float64 == np.dtype(float).type</code>.<br>\nfrom ._conv import register_converters as _register_converters</p>\n<p>== env ==========================================================<br>\nLD_LIBRARY_PATH is unset<br>\nDYLD_LIBRARY_PATH is unset</p>\n<p>== nvidia-smi ===================================================<br>\ntf_env_collect.sh: line 106: nvidia-smi: command not found</p>\n<p>== cuda libs  ===================================================</p>\n<h3>Describe the problem</h3>\n<p>We usually use <code>tf.app.flags</code> to declare the command-line parameters for TensorFlow scripts. But If we try to print the values of these parameters, it prints the default values at the first time even though we have passed the values.</p>\n<p>And if we actually \"get\" the values equal or more than one times, we can print the parameter values as expected.</p>\n<h3>Source code / logs</h3>\n<p>Here is the example code to re-produce the issue.</p>\n<pre><code>import tensorflow as tf\n\nflags = tf.app.flags\nflags.DEFINE_integer(\"image_width\", 224, \"Width of the image\")\nflags.DEFINE_integer(\"image_height\", 224, \"Height of the image\")\nflags.DEFINE_integer(\"channels\", 3, \"Channel of the image\")\n\nFLAGS = flags.FLAGS\nparameter_value_map = {}\nfor key in FLAGS.__flags.keys():\n  parameter_value_map[key] = FLAGS.__flags[key].value\nprint(\"Parameters: {}\".format(parameter_value_map))\n# Parameters: {'channels': 3, 'image_height': 224, 'image_width': 224}\n\nFLAGS.channels\nfor key in FLAGS.__flags.keys():\n    parameter_value_map[key] = FLAGS.__flags[key].value\nprint(\"Parameters: {}\".format(parameter_value_map))\n# Parameters: {'channels': 1, 'image_height': 1, 'image_width': 1}\n</code></pre>\n<p>We can run the script with parameter <code>--image_width=1 --image_height=1 --channels=1</code>. And the results to print are different.</p>", "body_text": "System information\n== cat /etc/issue ===============================================\nDarwin mbp-2.local 17.5.0 Darwin Kernel Version 17.5.0: Fri Apr 13 19:32:32 PDT 2018; root:xnu-4570.51.2~1/RELEASE_X86_64 x86_64\nMac OS X 10.13.4\n== are we in docker =============================================\nNo\n== compiler =====================================================\nApple LLVM version 9.1.0 (clang-902.0.39.1)\nTarget: x86_64-apple-darwin17.5.0\nThread model: posix\nInstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin\n== uname -a =====================================================\nDarwin mbp-2.local 17.5.0 Darwin Kernel Version 17.5.0: Fri Apr 13 19:32:32 PDT 2018; root:xnu-4570.51.2~1/RELEASE_X86_64 x86_64\n== check pips ===================================================\nnumpy                              1.14.2\nprotobuf                           3.5.2.post1\ntensorflow                         1.8.0\ntensorflow-hub                     0.1.0\ntensorflow-model-analysis          0.6.0\ntensorflow-serving-api             1.8.0\ntensorflow-tensorboard             1.5.0\ntensorflow-transform               0.6.0\ntensorflowjs                       0.1.0\ntensorflowonspark                  1.0.0\n== check for virtualenv =========================================\nFalse\n== tensorflow import ============================================\ntf.VERSION = 1.8.0\ntf.GIT_VERSION = v1.8.0-0-g93bc2e2072\ntf.COMPILER_VERSION = v1.8.0-0-g93bc2e2072\nSanity check: array([1], dtype=int32)\n/usr/local/lib/python2.7/site-packages/h5py/init.py:36: FutureWarning: Conversion of the second argument of issubdtype from float to np.floating is deprecated. In future, it will be treated as np .float64 == np.dtype(float).type.\nfrom ._conv import register_converters as _register_converters\n== env ==========================================================\nLD_LIBRARY_PATH is unset\nDYLD_LIBRARY_PATH is unset\n== nvidia-smi ===================================================\ntf_env_collect.sh: line 106: nvidia-smi: command not found\n== cuda libs  ===================================================\nDescribe the problem\nWe usually use tf.app.flags to declare the command-line parameters for TensorFlow scripts. But If we try to print the values of these parameters, it prints the default values at the first time even though we have passed the values.\nAnd if we actually \"get\" the values equal or more than one times, we can print the parameter values as expected.\nSource code / logs\nHere is the example code to re-produce the issue.\nimport tensorflow as tf\n\nflags = tf.app.flags\nflags.DEFINE_integer(\"image_width\", 224, \"Width of the image\")\nflags.DEFINE_integer(\"image_height\", 224, \"Height of the image\")\nflags.DEFINE_integer(\"channels\", 3, \"Channel of the image\")\n\nFLAGS = flags.FLAGS\nparameter_value_map = {}\nfor key in FLAGS.__flags.keys():\n  parameter_value_map[key] = FLAGS.__flags[key].value\nprint(\"Parameters: {}\".format(parameter_value_map))\n# Parameters: {'channels': 3, 'image_height': 224, 'image_width': 224}\n\nFLAGS.channels\nfor key in FLAGS.__flags.keys():\n    parameter_value_map[key] = FLAGS.__flags[key].value\nprint(\"Parameters: {}\".format(parameter_value_map))\n# Parameters: {'channels': 1, 'image_height': 1, 'image_width': 1}\n\nWe can run the script with parameter --image_width=1 --image_height=1 --channels=1. And the results to print are different.", "body": "\r\n### System information\r\n\r\n== cat /etc/issue ===============================================\r\nDarwin mbp-2.local 17.5.0 Darwin Kernel Version 17.5.0: Fri Apr 13 19:32:32 PDT 2018; root:xnu-4570.51.2~1/RELEASE_X86_64 x86_64\r\nMac OS X 10.13.4\r\n\r\n== are we in docker =============================================\r\nNo\r\n\r\n== compiler =====================================================\r\nApple LLVM version 9.1.0 (clang-902.0.39.1)\r\nTarget: x86_64-apple-darwin17.5.0\r\nThread model: posix\r\nInstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin\r\n\r\n== uname -a =====================================================\r\nDarwin mbp-2.local 17.5.0 Darwin Kernel Version 17.5.0: Fri Apr 13 19:32:32 PDT 2018; root:xnu-4570.51.2~1/RELEASE_X86_64 x86_64\r\n\r\n== check pips ===================================================\r\nnumpy                              1.14.2\r\nprotobuf                           3.5.2.post1\r\ntensorflow                         1.8.0\r\ntensorflow-hub                     0.1.0\r\ntensorflow-model-analysis          0.6.0\r\ntensorflow-serving-api             1.8.0\r\ntensorflow-tensorboard             1.5.0\r\ntensorflow-transform               0.6.0\r\ntensorflowjs                       0.1.0\r\ntensorflowonspark                  1.0.0\r\n\r\n== check for virtualenv =========================================\r\nFalse\r\n\r\n== tensorflow import ============================================\r\ntf.VERSION = 1.8.0\r\ntf.GIT_VERSION = v1.8.0-0-g93bc2e2072\r\ntf.COMPILER_VERSION = v1.8.0-0-g93bc2e2072\r\nSanity check: array([1], dtype=int32)\r\n/usr/local/lib/python2.7/site-packages/h5py/__init__.py:36: FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np\r\n.float64 == np.dtype(float).type`.\r\n  from ._conv import register_converters as _register_converters\r\n\r\n== env ==========================================================\r\nLD_LIBRARY_PATH is unset\r\nDYLD_LIBRARY_PATH is unset\r\n\r\n== nvidia-smi ===================================================\r\ntf_env_collect.sh: line 106: nvidia-smi: command not found\r\n\r\n== cuda libs  ===================================================\r\n\r\n### Describe the problem\r\n\r\nWe usually use `tf.app.flags` to declare the command-line parameters for TensorFlow scripts. But If we try to print the values of these parameters, it prints the default values at the first time even though we have passed the values.\r\n\r\nAnd if we actually \"get\" the values equal or more than one times, we can print the parameter values as expected.\r\n\r\n### Source code / logs\r\n\r\nHere is the example code to re-produce the issue.\r\n\r\n```\r\nimport tensorflow as tf\r\n\r\nflags = tf.app.flags\r\nflags.DEFINE_integer(\"image_width\", 224, \"Width of the image\")\r\nflags.DEFINE_integer(\"image_height\", 224, \"Height of the image\")\r\nflags.DEFINE_integer(\"channels\", 3, \"Channel of the image\")\r\n\r\nFLAGS = flags.FLAGS\r\nparameter_value_map = {}\r\nfor key in FLAGS.__flags.keys():\r\n  parameter_value_map[key] = FLAGS.__flags[key].value\r\nprint(\"Parameters: {}\".format(parameter_value_map))\r\n# Parameters: {'channels': 3, 'image_height': 224, 'image_width': 224}\r\n\r\nFLAGS.channels\r\nfor key in FLAGS.__flags.keys():\r\n    parameter_value_map[key] = FLAGS.__flags[key].value\r\nprint(\"Parameters: {}\".format(parameter_value_map))\r\n# Parameters: {'channels': 1, 'image_height': 1, 'image_width': 1}\r\n```\r\n\r\nWe can run the script with parameter `--image_width=1 --image_height=1 --channels=1`. And the results to print are different.\r\n"}