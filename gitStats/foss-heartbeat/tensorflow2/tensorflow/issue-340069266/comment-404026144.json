{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/404026144", "html_url": "https://github.com/tensorflow/tensorflow/issues/20680#issuecomment-404026144", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20680", "id": 404026144, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDAyNjE0NA==", "user": {"login": "tobegit3hub", "id": 2715000, "node_id": "MDQ6VXNlcjI3MTUwMDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tobegit3hub", "html_url": "https://github.com/tobegit3hub", "followers_url": "https://api.github.com/users/tobegit3hub/followers", "following_url": "https://api.github.com/users/tobegit3hub/following{/other_user}", "gists_url": "https://api.github.com/users/tobegit3hub/gists{/gist_id}", "starred_url": "https://api.github.com/users/tobegit3hub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tobegit3hub/subscriptions", "organizations_url": "https://api.github.com/users/tobegit3hub/orgs", "repos_url": "https://api.github.com/users/tobegit3hub/repos", "events_url": "https://api.github.com/users/tobegit3hub/events{/privacy}", "received_events_url": "https://api.github.com/users/tobegit3hub/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-11T02:38:11Z", "updated_at": "2018-07-11T03:15:00Z", "author_association": "CONTRIBUTOR", "body_html": "<p>After diving into to source of <code>tensorflow/python/platform/flags.py</code>, we found that \"tf.flags.FLAGS implicitly parses flags with sys.argv when accessing the FLAGS values before it's explicitly parsed\".</p>\n<p>I'm not sure if it is by design. It is a little confusing if we want to print the \"final parameters\" before starting training or using the parameters.</p>\n<p>Now the parameter are implicit parsed when getting the values. It would be much better to provide an explicitly way to parse the parameters as well.</p>\n<pre><code>  def __getattr__(self, name):\n    wrapped = self.__dict__['__wrapped']\n    # To maintain backwards compatibility, implicitly parse flags when reading\n    # a flag.\n    if not wrapped.is_parsed():\n      wrapped(_sys.argv)\n    return wrapped.__getattr__(name)\n</code></pre>", "body_text": "After diving into to source of tensorflow/python/platform/flags.py, we found that \"tf.flags.FLAGS implicitly parses flags with sys.argv when accessing the FLAGS values before it's explicitly parsed\".\nI'm not sure if it is by design. It is a little confusing if we want to print the \"final parameters\" before starting training or using the parameters.\nNow the parameter are implicit parsed when getting the values. It would be much better to provide an explicitly way to parse the parameters as well.\n  def __getattr__(self, name):\n    wrapped = self.__dict__['__wrapped']\n    # To maintain backwards compatibility, implicitly parse flags when reading\n    # a flag.\n    if not wrapped.is_parsed():\n      wrapped(_sys.argv)\n    return wrapped.__getattr__(name)", "body": "After diving into to source of `tensorflow/python/platform/flags.py`, we found that \"tf.flags.FLAGS implicitly parses flags with sys.argv when accessing the FLAGS values before it's explicitly parsed\".\r\n\r\nI'm not sure if it is by design. It is a little confusing if we want to print the \"final parameters\" before starting training or using the parameters.\r\n\r\nNow the parameter are implicit parsed when getting the values. It would be much better to provide an explicitly way to parse the parameters as well.\r\n\r\n```\r\n  def __getattr__(self, name):\r\n    wrapped = self.__dict__['__wrapped']\r\n    # To maintain backwards compatibility, implicitly parse flags when reading\r\n    # a flag.\r\n    if not wrapped.is_parsed():\r\n      wrapped(_sys.argv)\r\n    return wrapped.__getattr__(name)\r\n```"}