{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4213", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4213/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4213/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4213/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4213", "id": 175133479, "node_id": "MDU6SXNzdWUxNzUxMzM0Nzk=", "number": 4213, "title": "FCNs cannot be used for segmentation of variable size images after training.", "user": {"login": "Huxwell", "id": 9086268, "node_id": "MDQ6VXNlcjkwODYyNjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/9086268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Huxwell", "html_url": "https://github.com/Huxwell", "followers_url": "https://api.github.com/users/Huxwell/followers", "following_url": "https://api.github.com/users/Huxwell/following{/other_user}", "gists_url": "https://api.github.com/users/Huxwell/gists{/gist_id}", "starred_url": "https://api.github.com/users/Huxwell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Huxwell/subscriptions", "organizations_url": "https://api.github.com/users/Huxwell/orgs", "repos_url": "https://api.github.com/users/Huxwell/repos", "events_url": "https://api.github.com/users/Huxwell/events{/privacy}", "received_events_url": "https://api.github.com/users/Huxwell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-09-05T22:37:30Z", "updated_at": "2017-02-09T22:36:56Z", "closed_at": "2017-01-25T20:01:03Z", "author_association": "NONE", "body_html": "<p>Yann LeCun pointed,  ConvNets don't need to have a fixed-size input.<br>\nOne can train Fully-convolutional network using small images, and than use the model (without scaling or cropping) and feed it with large images for segmentation.<br>\nIt works right away with Keras+Theano.<br>\nIf one trains the same model with TensorFlow as Keras'es backend, during application of pretrained model on image larger than the images used for training, he will get A ValueError due to tensor shape mismatch (same for manual model definition directly in TF).</p>\n<p>The shape check needs to be disabled and the convolution layers need to work properly with variable size during model using/testing phase if the framework is to be competitive.</p>\n<h3>What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?</h3>\n<p><a href=\"https://www.facebook.com/yann.lecun/posts/10152820758292143\" rel=\"nofollow\">https://www.facebook.com/yann.lecun/posts/10152820758292143</a><br>\n<a href=\"http://stackoverflow.com/questions/39050557/fully-convolutional-network-training-image-size\" rel=\"nofollow\">http://stackoverflow.com/questions/39050557/fully-convolutional-network-training-image-size</a><br>\n<a href=\"https://www.quora.com/How-does-the-conversion-of-last-layers-of-CNN-from-fully-connected-to-fully-convolutional-allow-it-to-process-images-of-different-size\" rel=\"nofollow\">https://www.quora.com/How-does-the-conversion-of-last-layers-of-CNN-from-fully-connected-to-fully-convolutional-allow-it-to-process-images-of-different-size</a><br>\n<a href=\"http://tutorial.caffe.berkeleyvision.org/caffe-cvpr15-pixels.pdf\" rel=\"nofollow\">http://tutorial.caffe.berkeleyvision.org/caffe-cvpr15-pixels.pdf</a></p>\n<h3>Environment info</h3>\n<p>Operating System:  Ubuntu 14.04.4 LTS<br>\nInstalled version of CUDA and cuDNN:<br>\n(please attach the output of <code>ls -l /path/to/cuda/lib/libcud*</code>):<br>\n<a href=\"https://github.com/tensorflow/tensorflow/files/455666/cuda_config.txt\">cuda_config.txt</a></p>\n<h3>Error log:</h3>\n<p>ValueError: Cannot feed value of shape (1, 3, 350, 600) for Tensor u'convolution2d_input_2:0', which has shape '(?, 3, 15, 15)'</p>", "body_text": "Yann LeCun pointed,  ConvNets don't need to have a fixed-size input.\nOne can train Fully-convolutional network using small images, and than use the model (without scaling or cropping) and feed it with large images for segmentation.\nIt works right away with Keras+Theano.\nIf one trains the same model with TensorFlow as Keras'es backend, during application of pretrained model on image larger than the images used for training, he will get A ValueError due to tensor shape mismatch (same for manual model definition directly in TF).\nThe shape check needs to be disabled and the convolution layers need to work properly with variable size during model using/testing phase if the framework is to be competitive.\nWhat related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\nhttps://www.facebook.com/yann.lecun/posts/10152820758292143\nhttp://stackoverflow.com/questions/39050557/fully-convolutional-network-training-image-size\nhttps://www.quora.com/How-does-the-conversion-of-last-layers-of-CNN-from-fully-connected-to-fully-convolutional-allow-it-to-process-images-of-different-size\nhttp://tutorial.caffe.berkeleyvision.org/caffe-cvpr15-pixels.pdf\nEnvironment info\nOperating System:  Ubuntu 14.04.4 LTS\nInstalled version of CUDA and cuDNN:\n(please attach the output of ls -l /path/to/cuda/lib/libcud*):\ncuda_config.txt\nError log:\nValueError: Cannot feed value of shape (1, 3, 350, 600) for Tensor u'convolution2d_input_2:0', which has shape '(?, 3, 15, 15)'", "body": "Yann LeCun pointed,  ConvNets don't need to have a fixed-size input.\nOne can train Fully-convolutional network using small images, and than use the model (without scaling or cropping) and feed it with large images for segmentation.\nIt works right away with Keras+Theano.\nIf one trains the same model with TensorFlow as Keras'es backend, during application of pretrained model on image larger than the images used for training, he will get A ValueError due to tensor shape mismatch (same for manual model definition directly in TF).\n\nThe shape check needs to be disabled and the convolution layers need to work properly with variable size during model using/testing phase if the framework is to be competitive.\n### What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\n\nhttps://www.facebook.com/yann.lecun/posts/10152820758292143\nhttp://stackoverflow.com/questions/39050557/fully-convolutional-network-training-image-size\nhttps://www.quora.com/How-does-the-conversion-of-last-layers-of-CNN-from-fully-connected-to-fully-convolutional-allow-it-to-process-images-of-different-size \nhttp://tutorial.caffe.berkeleyvision.org/caffe-cvpr15-pixels.pdf\n### Environment info\n\nOperating System:  Ubuntu 14.04.4 LTS \nInstalled version of CUDA and cuDNN: \n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`):\n[cuda_config.txt](https://github.com/tensorflow/tensorflow/files/455666/cuda_config.txt)\n### Error log:\n\nValueError: Cannot feed value of shape (1, 3, 350, 600) for Tensor u'convolution2d_input_2:0', which has shape '(?, 3, 15, 15)'\n"}