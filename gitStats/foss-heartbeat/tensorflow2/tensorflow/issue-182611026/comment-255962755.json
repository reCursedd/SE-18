{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/255962755", "html_url": "https://github.com/tensorflow/tensorflow/issues/4920#issuecomment-255962755", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4920", "id": 255962755, "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTk2Mjc1NQ==", "user": {"login": "DjangoPeng", "id": 16943353, "node_id": "MDQ6VXNlcjE2OTQzMzUz", "avatar_url": "https://avatars3.githubusercontent.com/u/16943353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DjangoPeng", "html_url": "https://github.com/DjangoPeng", "followers_url": "https://api.github.com/users/DjangoPeng/followers", "following_url": "https://api.github.com/users/DjangoPeng/following{/other_user}", "gists_url": "https://api.github.com/users/DjangoPeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/DjangoPeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DjangoPeng/subscriptions", "organizations_url": "https://api.github.com/users/DjangoPeng/orgs", "repos_url": "https://api.github.com/users/DjangoPeng/repos", "events_url": "https://api.github.com/users/DjangoPeng/events{/privacy}", "received_events_url": "https://api.github.com/users/DjangoPeng/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-25T07:51:35Z", "updated_at": "2016-10-26T15:29:27Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=23068\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yaroslavvb\">@yaroslavvb</a>  You said initializer of <code>a</code> has been run twice, do you mean <code>b</code> and <code>d</code> both call <code>a.initialized_value()</code>? Then it makes <code>d == a</code> in the second call, while <code>b</code> equals the first call of <code>a</code>, isn't it?</p>", "body_text": "@yaroslavvb  You said initializer of a has been run twice, do you mean b and d both call a.initialized_value()? Then it makes d == a in the second call, while b equals the first call of a, isn't it?", "body": "@yaroslavvb  You said initializer of `a` has been run twice, do you mean `b` and `d` both call `a.initialized_value()`? Then it makes `d == a` in the second call, while `b` equals the first call of `a`, isn't it?\n"}