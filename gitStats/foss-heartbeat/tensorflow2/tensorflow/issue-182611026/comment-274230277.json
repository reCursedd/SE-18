{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/274230277", "html_url": "https://github.com/tensorflow/tensorflow/issues/4920#issuecomment-274230277", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4920", "id": 274230277, "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDIzMDI3Nw==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-21T03:22:23Z", "updated_at": "2017-01-21T03:22:23Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=287200\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/eamartin\">@eamartin</a> actually, maybe easier solution than toposort with multiple session.run calls is to have a wrapper around variable that recovers previous behavior (separate variable/read op which you can use to trigger initialization on read). Then you could do var = wrap_variable(var), and that would give you an op that runs variable initialization first time it's read using <code>tf.cond(var.is_initialized)</code></p>", "body_text": "@eamartin actually, maybe easier solution than toposort with multiple session.run calls is to have a wrapper around variable that recovers previous behavior (separate variable/read op which you can use to trigger initialization on read). Then you could do var = wrap_variable(var), and that would give you an op that runs variable initialization first time it's read using tf.cond(var.is_initialized)", "body": "@eamartin actually, maybe easier solution than toposort with multiple session.run calls is to have a wrapper around variable that recovers previous behavior (separate variable/read op which you can use to trigger initialization on read). Then you could do var = wrap_variable(var), and that would give you an op that runs variable initialization first time it's read using `tf.cond(var.is_initialized)`"}