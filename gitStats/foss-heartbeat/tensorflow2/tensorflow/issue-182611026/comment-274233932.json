{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/274233932", "html_url": "https://github.com/tensorflow/tensorflow/issues/4920#issuecomment-274233932", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4920", "id": 274233932, "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDIzMzkzMg==", "user": {"login": "eamartin", "id": 287200, "node_id": "MDQ6VXNlcjI4NzIwMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/287200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eamartin", "html_url": "https://github.com/eamartin", "followers_url": "https://api.github.com/users/eamartin/followers", "following_url": "https://api.github.com/users/eamartin/following{/other_user}", "gists_url": "https://api.github.com/users/eamartin/gists{/gist_id}", "starred_url": "https://api.github.com/users/eamartin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eamartin/subscriptions", "organizations_url": "https://api.github.com/users/eamartin/orgs", "repos_url": "https://api.github.com/users/eamartin/repos", "events_url": "https://api.github.com/users/eamartin/events{/privacy}", "received_events_url": "https://api.github.com/users/eamartin/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-21T04:22:01Z", "updated_at": "2017-01-21T04:22:01Z", "author_association": "NONE", "body_html": "<div class=\"email-fragment\">I tried something like that strategy using tf.select (on a bool placeholder\nindicating whether or not to initialize). This failed because the select op\nwasn't happy with a non initialized variable as input.\n\nCan tf.cond handle a non-initialized variable input?\n\nI like this approach (assuming it works) as it uses a single sess.run call.\nThe downside is that it requires a custom variable creation function and\ninitialization is implicit rather than explicit.\n\n\nOn Jan 20, 2017 20:23, \"Yaroslav Bulatov\" &lt;notifications@github.com&gt; wrote:\n\n<a class=\"user-mention\" href=\"https://github.com/eamartin\">@eamartin</a> &lt;<a href=\"https://github.com/eamartin\">https://github.com/eamartin</a>&gt; actually, maybe easier solution\nthan toposort with multiple session.run calls is to have a wrapper around\nvariable that recovers previous behavior (separate variable/read op which\nyou can use to trigger initialization on read). Then you could do var =\nwrap_variable(var), and that would give you an op that runs variable\ninitialization first time it's read using tf.cond(var.is_initialized)\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\n&lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"182611026\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/4920\" href=\"https://github.com/tensorflow/tensorflow/issues/4920#issuecomment-274230277\">#4920 (comment)</a>&gt;,\nor mute the thread\n&lt;<a href=\"https://github.com/notifications/unsubscribe-auth/AARh4IH3LDmts0sFXwzUALYRBwRZInuMks5rUXo2gaJpZM4KVHy9\">https://github.com/notifications/unsubscribe-auth/AARh4IH3LDmts0sFXwzUALYRBwRZInuMks5rUXo2gaJpZM4KVHy9</a>&gt;\n.</div>", "body_text": "I tried something like that strategy using tf.select (on a bool placeholder\nindicating whether or not to initialize). This failed because the select op\nwasn't happy with a non initialized variable as input.\n\nCan tf.cond handle a non-initialized variable input?\n\nI like this approach (assuming it works) as it uses a single sess.run call.\nThe downside is that it requires a custom variable creation function and\ninitialization is implicit rather than explicit.\n\n\nOn Jan 20, 2017 20:23, \"Yaroslav Bulatov\" <notifications@github.com> wrote:\n\n@eamartin <https://github.com/eamartin> actually, maybe easier solution\nthan toposort with multiple session.run calls is to have a wrapper around\nvariable that recovers previous behavior (separate variable/read op which\nyou can use to trigger initialization on read). Then you could do var =\nwrap_variable(var), and that would give you an op that runs variable\ninitialization first time it's read using tf.cond(var.is_initialized)\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\n<#4920 (comment)>,\nor mute the thread\n<https://github.com/notifications/unsubscribe-auth/AARh4IH3LDmts0sFXwzUALYRBwRZInuMks5rUXo2gaJpZM4KVHy9>\n.", "body": "I tried something like that strategy using tf.select (on a bool placeholder\nindicating whether or not to initialize). This failed because the select op\nwasn't happy with a non initialized variable as input.\n\nCan tf.cond handle a non-initialized variable input?\n\nI like this approach (assuming it works) as it uses a single sess.run call.\nThe downside is that it requires a custom variable creation function and\ninitialization is implicit rather than explicit.\n\n\nOn Jan 20, 2017 20:23, \"Yaroslav Bulatov\" <notifications@github.com> wrote:\n\n@eamartin <https://github.com/eamartin> actually, maybe easier solution\nthan toposort with multiple session.run calls is to have a wrapper around\nvariable that recovers previous behavior (separate variable/read op which\nyou can use to trigger initialization on read). Then you could do var =\nwrap_variable(var), and that would give you an op that runs variable\ninitialization first time it's read using tf.cond(var.is_initialized)\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\n<https://github.com/tensorflow/tensorflow/issues/4920#issuecomment-274230277>,\nor mute the thread\n<https://github.com/notifications/unsubscribe-auth/AARh4IH3LDmts0sFXwzUALYRBwRZInuMks5rUXo2gaJpZM4KVHy9>\n.\n"}