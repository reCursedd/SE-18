{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/255964930", "html_url": "https://github.com/tensorflow/tensorflow/issues/4920#issuecomment-255964930", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4920", "id": 255964930, "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTk2NDkzMA==", "user": {"login": "DjangoPeng", "id": 16943353, "node_id": "MDQ6VXNlcjE2OTQzMzUz", "avatar_url": "https://avatars3.githubusercontent.com/u/16943353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DjangoPeng", "html_url": "https://github.com/DjangoPeng", "followers_url": "https://api.github.com/users/DjangoPeng/followers", "following_url": "https://api.github.com/users/DjangoPeng/following{/other_user}", "gists_url": "https://api.github.com/users/DjangoPeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/DjangoPeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DjangoPeng/subscriptions", "organizations_url": "https://api.github.com/users/DjangoPeng/orgs", "repos_url": "https://api.github.com/users/DjangoPeng/repos", "events_url": "https://api.github.com/users/DjangoPeng/events{/privacy}", "received_events_url": "https://api.github.com/users/DjangoPeng/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-25T08:01:26Z", "updated_at": "2016-10-25T08:52:16Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Thanks for your advise on <code>initilzier_once</code>.<br>\nWhile I find a interesting output of your example by using <code>tf.initialize_all_variables()</code>, it works well.</p>\n<pre><code>a = tf.get_variable(\"a\", shape=())\nb = tf.get_variable(\"b\", initializer=a.initialized_value())\nc = tf.placeholder(tf.float32, shape=())\nd = tf.get_variable(\"d\", initializer=a.initialized_value()+c)\n\nsess = tf.Session()\nsess.run(tf.initialize_all_variables(), feed_dict={c: 0})\nsess.run([a, b, d])\n\nOut[1]:  [1.1102008, 1.1102008, 1.1102008]\n</code></pre>", "body_text": "Thanks for your advise on initilzier_once.\nWhile I find a interesting output of your example by using tf.initialize_all_variables(), it works well.\na = tf.get_variable(\"a\", shape=())\nb = tf.get_variable(\"b\", initializer=a.initialized_value())\nc = tf.placeholder(tf.float32, shape=())\nd = tf.get_variable(\"d\", initializer=a.initialized_value()+c)\n\nsess = tf.Session()\nsess.run(tf.initialize_all_variables(), feed_dict={c: 0})\nsess.run([a, b, d])\n\nOut[1]:  [1.1102008, 1.1102008, 1.1102008]", "body": "Thanks for your advise on `initilzier_once`.\nWhile I find a interesting output of your example by using `tf.initialize_all_variables()`, it works well.\n\n```\na = tf.get_variable(\"a\", shape=())\nb = tf.get_variable(\"b\", initializer=a.initialized_value())\nc = tf.placeholder(tf.float32, shape=())\nd = tf.get_variable(\"d\", initializer=a.initialized_value()+c)\n\nsess = tf.Session()\nsess.run(tf.initialize_all_variables(), feed_dict={c: 0})\nsess.run([a, b, d])\n\nOut[1]:  [1.1102008, 1.1102008, 1.1102008]\n```\n"}