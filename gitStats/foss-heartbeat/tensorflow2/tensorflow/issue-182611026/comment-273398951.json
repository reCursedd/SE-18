{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/273398951", "html_url": "https://github.com/tensorflow/tensorflow/issues/4920#issuecomment-273398951", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4920", "id": 273398951, "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzM5ODk1MQ==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-18T06:57:38Z", "updated_at": "2017-01-18T06:57:38Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=11959472\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ZhimingZhou\">@ZhimingZhou</a> thanks for the easy to reproduce test case. It seems the semantics of variables changed. I would add dependency on \"variable/read\" node to force conditional initialization subgraph to run when \"variable\" is being read. But now this no longer works. I tried adding dependency on <code>var.read_value()</code>, but that creates new nodes on each evaluation.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5061\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alextp\">@alextp</a> is there some way to force some op to run when variable is being read?</p>", "body_text": "@ZhimingZhou thanks for the easy to reproduce test case. It seems the semantics of variables changed. I would add dependency on \"variable/read\" node to force conditional initialization subgraph to run when \"variable\" is being read. But now this no longer works. I tried adding dependency on var.read_value(), but that creates new nodes on each evaluation.\n@alextp is there some way to force some op to run when variable is being read?", "body": "@ZhimingZhou thanks for the easy to reproduce test case. It seems the semantics of variables changed. I would add dependency on \"variable/read\" node to force conditional initialization subgraph to run when \"variable\" is being read. But now this no longer works. I tried adding dependency on `var.read_value()`, but that creates new nodes on each evaluation.\r\n\r\n@alextp is there some way to force some op to run when variable is being read?"}