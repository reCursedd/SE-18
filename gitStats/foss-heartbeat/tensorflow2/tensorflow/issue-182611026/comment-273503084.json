{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/273503084", "html_url": "https://github.com/tensorflow/tensorflow/issues/4920#issuecomment-273503084", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4920", "id": 273503084, "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzUwMzA4NA==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-18T15:17:05Z", "updated_at": "2017-01-18T15:17:05Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=11959472\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ZhimingZhou\">@ZhimingZhou</a> here's a fixed version using <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5061\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alextp\">@alextp</a>  suggestion -- <a href=\"http://pastebin.com/5zqcc5Q9\" rel=\"nofollow\">http://pastebin.com/5zqcc5Q9</a></p>\n<p>This needs a bit more thought though, I don't like the idea of users needing to keep separate tensors for variable write and variable read. Ideally one would be able to do <code>a=tf.Variable(b+c)</code> and have this work, running regardless of whether <code>b,c</code> is a tensor or a variable, with initialization order being handled automatically</p>", "body_text": "@ZhimingZhou here's a fixed version using @alextp  suggestion -- http://pastebin.com/5zqcc5Q9\nThis needs a bit more thought though, I don't like the idea of users needing to keep separate tensors for variable write and variable read. Ideally one would be able to do a=tf.Variable(b+c) and have this work, running regardless of whether b,c is a tensor or a variable, with initialization order being handled automatically", "body": "@ZhimingZhou here's a fixed version using @alextp  suggestion -- http://pastebin.com/5zqcc5Q9\r\n\r\nThis needs a bit more thought though, I don't like the idea of users needing to keep separate tensors for variable write and variable read. Ideally one would be able to do `a=tf.Variable(b+c)` and have this work, running regardless of whether `b,c` is a tensor or a variable, with initialization order being handled automatically"}