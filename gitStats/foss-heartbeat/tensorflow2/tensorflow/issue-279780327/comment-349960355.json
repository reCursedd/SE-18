{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/349960355", "html_url": "https://github.com/tensorflow/tensorflow/issues/15158#issuecomment-349960355", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15158", "id": 349960355, "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTk2MDM1NQ==", "user": {"login": "maxfiedler", "id": 4192637, "node_id": "MDQ6VXNlcjQxOTI2Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/4192637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxfiedler", "html_url": "https://github.com/maxfiedler", "followers_url": "https://api.github.com/users/maxfiedler/followers", "following_url": "https://api.github.com/users/maxfiedler/following{/other_user}", "gists_url": "https://api.github.com/users/maxfiedler/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxfiedler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxfiedler/subscriptions", "organizations_url": "https://api.github.com/users/maxfiedler/orgs", "repos_url": "https://api.github.com/users/maxfiedler/repos", "events_url": "https://api.github.com/users/maxfiedler/events{/privacy}", "received_events_url": "https://api.github.com/users/maxfiedler/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-07T13:01:21Z", "updated_at": "2017-12-07T13:06:12Z", "author_association": "NONE", "body_html": "<p>Why not at least implement a simple switch with which you can signal that a specific session.run should NOT trigger the hooks?<br>\ni.e. <code>MonitoredSession.run(..., trigger_hooks=False)</code> (default=True)<br>\nor a separate wrapper <code>MonitoredSession.run_without_hooks</code><br>\nSeems way more straightforward than having to implement a step_fn with an if-statement that is executed only once and then never again (in the example you gave:</p>\n<pre><code>def step_fn(step_context):\n  if handle_train is None:\n    handle_train, handle_val = sess.run([iter_train_handle, iter_val_handle])\n  return step_context.run_with_hooks(fetches=..., feed_dict=...)\n</code></pre>", "body_text": "Why not at least implement a simple switch with which you can signal that a specific session.run should NOT trigger the hooks?\ni.e. MonitoredSession.run(..., trigger_hooks=False) (default=True)\nor a separate wrapper MonitoredSession.run_without_hooks\nSeems way more straightforward than having to implement a step_fn with an if-statement that is executed only once and then never again (in the example you gave:\ndef step_fn(step_context):\n  if handle_train is None:\n    handle_train, handle_val = sess.run([iter_train_handle, iter_val_handle])\n  return step_context.run_with_hooks(fetches=..., feed_dict=...)", "body": "Why not at least implement a simple switch with which you can signal that a specific session.run should NOT trigger the hooks?\r\ni.e. `MonitoredSession.run(..., trigger_hooks=False)` (default=True)\r\nor a separate wrapper `MonitoredSession.run_without_hooks`\r\nSeems way more straightforward than having to implement a step_fn with an if-statement that is executed only once and then never again (in the example you gave:\r\n```\r\ndef step_fn(step_context):\r\n  if handle_train is None:\r\n    handle_train, handle_val = sess.run([iter_train_handle, iter_val_handle])\r\n  return step_context.run_with_hooks(fetches=..., feed_dict=...)\r\n``` "}