{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/276207340", "html_url": "https://github.com/tensorflow/tensorflow/issues/7149#issuecomment-276207340", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7149", "id": 276207340, "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjIwNzM0MA==", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-30T22:07:43Z", "updated_at": "2017-01-30T22:07:43Z", "author_association": "MEMBER", "body_html": "<p>Having generated code for ops in Java is indeed a next step for the Java API, but we haven't gotten around to it, or figuring out what an appropriate API would be.</p>\n<p>We'd be happy to hear any suggestions/proposals you may have. As for the suggestion above, I don't think we want to put all operations as methods in a single <code>GraphBuilder</code> class for a few reasons such as (a) Per-op attribute handling seems a bit tricky, (b) What about custom operations defined by other external libraries (e.g. as per the <a href=\"https://www.tensorflow.org/how_tos/adding_an_op/\" rel=\"nofollow\">Adding a new op HOWTO</a>).</p>\n<p>We can take inspiration from the generated C++ API (see the <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/label_image/main.cc#L102\">label_image example</a> and the Go API, but it does require more thought.</p>", "body_text": "Having generated code for ops in Java is indeed a next step for the Java API, but we haven't gotten around to it, or figuring out what an appropriate API would be.\nWe'd be happy to hear any suggestions/proposals you may have. As for the suggestion above, I don't think we want to put all operations as methods in a single GraphBuilder class for a few reasons such as (a) Per-op attribute handling seems a bit tricky, (b) What about custom operations defined by other external libraries (e.g. as per the Adding a new op HOWTO).\nWe can take inspiration from the generated C++ API (see the label_image example and the Go API, but it does require more thought.", "body": "Having generated code for ops in Java is indeed a next step for the Java API, but we haven't gotten around to it, or figuring out what an appropriate API would be.\r\n\r\nWe'd be happy to hear any suggestions/proposals you may have. As for the suggestion above, I don't think we want to put all operations as methods in a single `GraphBuilder` class for a few reasons such as (a) Per-op attribute handling seems a bit tricky, (b) What about custom operations defined by other external libraries (e.g. as per the [Adding a new op HOWTO](https://www.tensorflow.org/how_tos/adding_an_op/)).\r\n\r\nWe can take inspiration from the generated C++ API (see the [label_image example](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/label_image/main.cc#L102) and the Go API, but it does require more thought."}