{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/140867371", "pull_request_review_id": 64757494, "id": 140867371, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDg2NzM3MQ==", "diff_hunk": "@@ -190,47 +224,85 @@ public static Tensor create(long[] shape, DoubleBuffer data) {\n    * @param data a buffer containing the tensor data.\n    * @throws IllegalArgumentException If the tensor shape is not compatible with the buffer\n    */\n-  public static Tensor create(long[] shape, LongBuffer data) {\n-    Tensor t = allocateForBuffer(DataType.INT64, shape, data.remaining());\n+  public static Tensor<Long> create(long[] shape, LongBuffer data) {\n+    Tensor<Long> t = allocateForBuffer(DataType.INT64, shape, data.remaining());\n     t.buffer().asLongBuffer().put(data);\n     return t;\n   }\n \n   /**\n-   * Create a Tensor with data from the given buffer.\n+   * Create a Tensor of any type with data from the given buffer.\n    *\n    * <p>Creates a Tensor with the provided shape of any type where the tensor's data has been\n    * encoded into {@code data} as per the specification of the TensorFlow <a\n    * href=\"https://www.tensorflow.org/code/tensorflow/c/c_api.h\">C API</a>.\n    *\n-   * @param dataType the tensor datatype.\n+   * @param <T> the tensor element type\n+   * @param type the tensor element type, represented as a class object.\n    * @param shape the tensor shape.\n    * @param data a buffer containing the tensor data.\n    * @throws IllegalArgumentException If the tensor datatype or shape is not compatible with the\n    *     buffer\n    */\n-  public static Tensor create(DataType dataType, long[] shape, ByteBuffer data) {\n+  @SuppressWarnings(\"unchecked\")", "path": "tensorflow/java/src/main/java/org/tensorflow/Tensor.java", "position": null, "original_position": 249, "commit_id": "bf2c8b494abf6c330c87b3ba18e6644fc8c0b22d", "original_commit_id": "d594284af0ace286b153f1fd7c424731e3f65c2c", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "Should we tighten the scope of the `@SuppressWarnings` annotations by moving them to be right above the line that would generate the warning instead of being at the method level? (Like you've done earlier in this file)", "created_at": "2017-09-25T18:59:21Z", "updated_at": "2017-09-28T14:09:48Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/11535#discussion_r140867371", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11535", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/140867371"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/11535#discussion_r140867371"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11535"}}, "body_html": "<p>Should we tighten the scope of the <code>@SuppressWarnings</code> annotations by moving them to be right above the line that would generate the warning instead of being at the method level? (Like you've done earlier in this file)</p>", "body_text": "Should we tighten the scope of the @SuppressWarnings annotations by moving them to be right above the line that would generate the warning instead of being at the method level? (Like you've done earlier in this file)"}