{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/384924531", "html_url": "https://github.com/tensorflow/tensorflow/issues/16152#issuecomment-384924531", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16152", "id": 384924531, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDkyNDUzMQ==", "user": {"login": "pwaller", "id": 438648, "node_id": "MDQ6VXNlcjQzODY0OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/438648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pwaller", "html_url": "https://github.com/pwaller", "followers_url": "https://api.github.com/users/pwaller/followers", "following_url": "https://api.github.com/users/pwaller/following{/other_user}", "gists_url": "https://api.github.com/users/pwaller/gists{/gist_id}", "starred_url": "https://api.github.com/users/pwaller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pwaller/subscriptions", "organizations_url": "https://api.github.com/users/pwaller/orgs", "repos_url": "https://api.github.com/users/pwaller/repos", "events_url": "https://api.github.com/users/pwaller/events{/privacy}", "received_events_url": "https://api.github.com/users/pwaller/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-27T09:56:26Z", "updated_at": "2018-04-27T09:58:03Z", "author_association": "NONE", "body_html": "<p>Reproducer below tested on 1.8.0-rc1. Was hard to make a reproducer because the warning did not show up unless I had <code>warnings.filterwarnings('error')</code>, which I use to make it easier to find the sources of warnings.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\n<span class=\"pl-k\">import</span> warnings\nwarnings.filterwarnings(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>error<span class=\"pl-pds\">'</span></span>)\n\ntf.reduce_sum(tf.placeholder(tf.float64))</pre></div>\n<p>Full stack trace below.</p>\n<details>\n<div class=\"highlight highlight-text-python-traceback\"><pre>---------------------------------------------------------------------------\nDeprecationWarning                        Traceback (most recent call last)\n&lt;ipython-input-1-1de048b23827&gt; in &lt;module&gt;()\n      <span class=\"pl-c1\">4</span> warnings.filterwarnings(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>error<span class=\"pl-pds\">'</span></span>)\n      <span class=\"pl-c1\">5</span> \n----&gt; 6 tf.reduce_sum(tf.placeholder(tf.float64))\n\n~/Library/Python/3.6/lib/python/site-packages/tensorflow/python/util/deprecation.py in new_func(*args, **kwargs)\n    <span class=\"pl-c1\">403</span>       <span class=\"pl-k\">if</span> is_in_graph_mode.IS_IN_GRAPH_MODE() <span class=\"pl-k\">and</span> <span class=\"pl-c1\">_PRINT_DEPRECATION_WARNINGS</span>:\n    <span class=\"pl-c1\">404</span>         invalid_args <span class=\"pl-k\">=</span> []\n--&gt; 405         named_args = tf_inspect.getcallargs(func, *args, **kwargs)\n    <span class=\"pl-c1\">406</span>         <span class=\"pl-k\">for</span> arg_name, spec <span class=\"pl-k\">in</span> <span class=\"pl-c1\">iter</span>(deprecated_positions.items()):\n    <span class=\"pl-c1\">407</span>           <span class=\"pl-k\">if</span> (spec.position <span class=\"pl-k\">&lt;</span> <span class=\"pl-c1\">len</span>(args) <span class=\"pl-k\">and</span>\n\n~/Library/Python/3.6/lib/python/site-packages/tensorflow/python/util/tf_inspect.py in getcallargs(func, *positional, **named)\n    <span class=\"pl-c1\">107</span>   argspec will be used.\n    <span class=\"pl-c1\">108</span>   <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span></span>\n--&gt; 109   argspec = getargspec(func)\n    <span class=\"pl-c1\">110</span>   call_args <span class=\"pl-k\">=</span> named.copy()\n    <span class=\"pl-c1\">111</span>   this <span class=\"pl-k\">=</span> <span class=\"pl-c1\">getattr</span>(func, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>im_self<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">None</span>) <span class=\"pl-k\">or</span> <span class=\"pl-c1\">getattr</span>(func, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>__self__<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">None</span>)\n\n~/Library/Python/3.6/lib/python/site-packages/tensorflow/python/util/tf_inspect.py in getargspec(object)\n     <span class=\"pl-c1\">53</span>   decorators, target <span class=\"pl-k\">=</span> tf_decorator.unwrap(<span class=\"pl-c1\">object</span>)\n     <span class=\"pl-c1\">54</span>   <span class=\"pl-k\">return</span> <span class=\"pl-c1\">next</span>((d.decorator_argspec <span class=\"pl-k\">for</span> d <span class=\"pl-k\">in</span> decorators\n---&gt; 55                if d.decorator_argspec is not None), _inspect.getargspec(target))\n     <span class=\"pl-c1\">56</span> \n     <span class=\"pl-c1\">57</span> \n\n/usr/local/Cellar/python/3.6.5/Frameworks/Python.framework/Versions/3.6/lib/python3.6/inspect.py in getargspec(func)\n   1069     warnings.warn(\"inspect.getargspec() is deprecated, \"\n   1070                   \"use inspect.signature() or inspect.getfullargspec()\",\n-&gt; 1071                   DeprecationWarning, stacklevel=2)\n   1072     args, varargs, varkw, defaults, kwonlyargs, kwonlydefaults, ann = \\\n   1073         getfullargspec(func)\n\n<span class=\"pl-en\">DeprecationWarning</span>: <span class=\"pl-s\">inspect.getargspec() is deprecated, use inspect.signature() or inspect.getfullargspec()</span></pre></div>\n</details>", "body_text": "Reproducer below tested on 1.8.0-rc1. Was hard to make a reproducer because the warning did not show up unless I had warnings.filterwarnings('error'), which I use to make it easier to find the sources of warnings.\nimport tensorflow as tf\n\nimport warnings\nwarnings.filterwarnings('error')\n\ntf.reduce_sum(tf.placeholder(tf.float64))\nFull stack trace below.\n\n---------------------------------------------------------------------------\nDeprecationWarning                        Traceback (most recent call last)\n<ipython-input-1-1de048b23827> in <module>()\n      4 warnings.filterwarnings('error')\n      5 \n----> 6 tf.reduce_sum(tf.placeholder(tf.float64))\n\n~/Library/Python/3.6/lib/python/site-packages/tensorflow/python/util/deprecation.py in new_func(*args, **kwargs)\n    403       if is_in_graph_mode.IS_IN_GRAPH_MODE() and _PRINT_DEPRECATION_WARNINGS:\n    404         invalid_args = []\n--> 405         named_args = tf_inspect.getcallargs(func, *args, **kwargs)\n    406         for arg_name, spec in iter(deprecated_positions.items()):\n    407           if (spec.position < len(args) and\n\n~/Library/Python/3.6/lib/python/site-packages/tensorflow/python/util/tf_inspect.py in getcallargs(func, *positional, **named)\n    107   argspec will be used.\n    108   \"\"\"\n--> 109   argspec = getargspec(func)\n    110   call_args = named.copy()\n    111   this = getattr(func, 'im_self', None) or getattr(func, '__self__', None)\n\n~/Library/Python/3.6/lib/python/site-packages/tensorflow/python/util/tf_inspect.py in getargspec(object)\n     53   decorators, target = tf_decorator.unwrap(object)\n     54   return next((d.decorator_argspec for d in decorators\n---> 55                if d.decorator_argspec is not None), _inspect.getargspec(target))\n     56 \n     57 \n\n/usr/local/Cellar/python/3.6.5/Frameworks/Python.framework/Versions/3.6/lib/python3.6/inspect.py in getargspec(func)\n   1069     warnings.warn(\"inspect.getargspec() is deprecated, \"\n   1070                   \"use inspect.signature() or inspect.getfullargspec()\",\n-> 1071                   DeprecationWarning, stacklevel=2)\n   1072     args, varargs, varkw, defaults, kwonlyargs, kwonlydefaults, ann = \\\n   1073         getfullargspec(func)\n\nDeprecationWarning: inspect.getargspec() is deprecated, use inspect.signature() or inspect.getfullargspec()", "body": "Reproducer below tested on 1.8.0-rc1. Was hard to make a reproducer because the warning did not show up unless I had `warnings.filterwarnings('error')`, which I use to make it easier to find the sources of warnings.\r\n\r\n```python3\r\nimport tensorflow as tf\r\n\r\nimport warnings\r\nwarnings.filterwarnings('error')\r\n\r\ntf.reduce_sum(tf.placeholder(tf.float64))\r\n```\r\n\r\nFull stack trace below.\r\n\r\n<details>\r\n\r\n```.pytb\r\n---------------------------------------------------------------------------\r\nDeprecationWarning                        Traceback (most recent call last)\r\n<ipython-input-1-1de048b23827> in <module>()\r\n      4 warnings.filterwarnings('error')\r\n      5 \r\n----> 6 tf.reduce_sum(tf.placeholder(tf.float64))\r\n\r\n~/Library/Python/3.6/lib/python/site-packages/tensorflow/python/util/deprecation.py in new_func(*args, **kwargs)\r\n    403       if is_in_graph_mode.IS_IN_GRAPH_MODE() and _PRINT_DEPRECATION_WARNINGS:\r\n    404         invalid_args = []\r\n--> 405         named_args = tf_inspect.getcallargs(func, *args, **kwargs)\r\n    406         for arg_name, spec in iter(deprecated_positions.items()):\r\n    407           if (spec.position < len(args) and\r\n\r\n~/Library/Python/3.6/lib/python/site-packages/tensorflow/python/util/tf_inspect.py in getcallargs(func, *positional, **named)\r\n    107   argspec will be used.\r\n    108   \"\"\"\r\n--> 109   argspec = getargspec(func)\r\n    110   call_args = named.copy()\r\n    111   this = getattr(func, 'im_self', None) or getattr(func, '__self__', None)\r\n\r\n~/Library/Python/3.6/lib/python/site-packages/tensorflow/python/util/tf_inspect.py in getargspec(object)\r\n     53   decorators, target = tf_decorator.unwrap(object)\r\n     54   return next((d.decorator_argspec for d in decorators\r\n---> 55                if d.decorator_argspec is not None), _inspect.getargspec(target))\r\n     56 \r\n     57 \r\n\r\n/usr/local/Cellar/python/3.6.5/Frameworks/Python.framework/Versions/3.6/lib/python3.6/inspect.py in getargspec(func)\r\n   1069     warnings.warn(\"inspect.getargspec() is deprecated, \"\r\n   1070                   \"use inspect.signature() or inspect.getfullargspec()\",\r\n-> 1071                   DeprecationWarning, stacklevel=2)\r\n   1072     args, varargs, varkw, defaults, kwonlyargs, kwonlydefaults, ann = \\\r\n   1073         getfullargspec(func)\r\n\r\nDeprecationWarning: inspect.getargspec() is deprecated, use inspect.signature() or inspect.getfullargspec()\r\n```\r\n\r\n</details>"}