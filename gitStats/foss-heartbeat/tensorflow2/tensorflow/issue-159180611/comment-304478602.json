{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/304478602", "html_url": "https://github.com/tensorflow/tensorflow/issues/2732#issuecomment-304478602", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2732", "id": 304478602, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDQ3ODYwMg==", "user": {"login": "benjrossi", "id": 18267168, "node_id": "MDQ6VXNlcjE4MjY3MTY4", "avatar_url": "https://avatars0.githubusercontent.com/u/18267168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benjrossi", "html_url": "https://github.com/benjrossi", "followers_url": "https://api.github.com/users/benjrossi/followers", "following_url": "https://api.github.com/users/benjrossi/following{/other_user}", "gists_url": "https://api.github.com/users/benjrossi/gists{/gist_id}", "starred_url": "https://api.github.com/users/benjrossi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benjrossi/subscriptions", "organizations_url": "https://api.github.com/users/benjrossi/orgs", "repos_url": "https://api.github.com/users/benjrossi/repos", "events_url": "https://api.github.com/users/benjrossi/events{/privacy}", "received_events_url": "https://api.github.com/users/benjrossi/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-27T21:53:46Z", "updated_at": "2017-12-06T14:28:20Z", "author_association": "NONE", "body_html": "<p>Check out a <a href=\"https://www.twosigma.com/insights/a-workaround-for-non-determinism-in-tensorflow\" rel=\"nofollow\">workaround</a> for training a simple fully-connected net with repeatable results on the GPU. It's no panacea, but it seems relevant to the discussion! One caveat is that the reduce_sum replacement in the workaround does not handle partial reduction (i.e. it does not accept an axis argument). This is more a proof of concept, but shows it can be done. Perhaps a slower but deterministic reduce_sum backend for the GPU can be added to TensorFlow that does not rely on CUDA atomics, and an option to Session can determine whether reduce_sum uses the deterministic or fast backend (but haven't studied the TF architecture enough to know if this is feasible).</p>", "body_text": "Check out a workaround for training a simple fully-connected net with repeatable results on the GPU. It's no panacea, but it seems relevant to the discussion! One caveat is that the reduce_sum replacement in the workaround does not handle partial reduction (i.e. it does not accept an axis argument). This is more a proof of concept, but shows it can be done. Perhaps a slower but deterministic reduce_sum backend for the GPU can be added to TensorFlow that does not rely on CUDA atomics, and an option to Session can determine whether reduce_sum uses the deterministic or fast backend (but haven't studied the TF architecture enough to know if this is feasible).", "body": "Check out a [workaround](https://www.twosigma.com/insights/a-workaround-for-non-determinism-in-tensorflow) for training a simple fully-connected net with repeatable results on the GPU. It's no panacea, but it seems relevant to the discussion! One caveat is that the reduce_sum replacement in the workaround does not handle partial reduction (i.e. it does not accept an axis argument). This is more a proof of concept, but shows it can be done. Perhaps a slower but deterministic reduce_sum backend for the GPU can be added to TensorFlow that does not rely on CUDA atomics, and an option to Session can determine whether reduce_sum uses the deterministic or fast backend (but haven't studied the TF architecture enough to know if this is feasible)."}