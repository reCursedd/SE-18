{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/329954196", "html_url": "https://github.com/tensorflow/tensorflow/issues/2732#issuecomment-329954196", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2732", "id": 329954196, "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTk1NDE5Ng==", "user": {"login": "huanghoujing", "id": 13362456, "node_id": "MDQ6VXNlcjEzMzYyNDU2", "avatar_url": "https://avatars2.githubusercontent.com/u/13362456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huanghoujing", "html_url": "https://github.com/huanghoujing", "followers_url": "https://api.github.com/users/huanghoujing/followers", "following_url": "https://api.github.com/users/huanghoujing/following{/other_user}", "gists_url": "https://api.github.com/users/huanghoujing/gists{/gist_id}", "starred_url": "https://api.github.com/users/huanghoujing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huanghoujing/subscriptions", "organizations_url": "https://api.github.com/users/huanghoujing/orgs", "repos_url": "https://api.github.com/users/huanghoujing/repos", "events_url": "https://api.github.com/users/huanghoujing/events{/privacy}", "received_events_url": "https://api.github.com/users/huanghoujing/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-16T08:17:52Z", "updated_at": "2017-09-16T08:47:53Z", "author_association": "NONE", "body_html": "<p>Although I was not using TensorFlow, I think my experience may be useful for some case.</p>\n<p>I found that <strong>multi-thread pre-fetching</strong> training samples also introduces randomness. In the multi-thread way, in a new run the samples are put into the queue in a new order, determined by the relative speed of the threads. I had to set the number of pre-fetching threads to <code>1</code> to solve the problem.</p>\n<p>BTW, I implemented the multi-threading in my own way using package <code>threading</code>.</p>", "body_text": "Although I was not using TensorFlow, I think my experience may be useful for some case.\nI found that multi-thread pre-fetching training samples also introduces randomness. In the multi-thread way, in a new run the samples are put into the queue in a new order, determined by the relative speed of the threads. I had to set the number of pre-fetching threads to 1 to solve the problem.\nBTW, I implemented the multi-threading in my own way using package threading.", "body": "Although I was not using TensorFlow, I think my experience may be useful for some case.\r\n\r\nI found that **multi-thread pre-fetching** training samples also introduces randomness. In the multi-thread way, in a new run the samples are put into the queue in a new order, determined by the relative speed of the threads. I had to set the number of pre-fetching threads to `1` to solve the problem.\r\n\r\nBTW, I implemented the multi-threading in my own way using package `threading`."}