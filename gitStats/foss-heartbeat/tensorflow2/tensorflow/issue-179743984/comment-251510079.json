{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/251510079", "html_url": "https://github.com/tensorflow/tensorflow/issues/4624#issuecomment-251510079", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4624", "id": 251510079, "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTUxMDA3OQ==", "user": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-04T20:53:03Z", "updated_at": "2016-10-04T20:53:03Z", "author_association": "MEMBER", "body_html": "<p>Thanks for filing the bug @barty777!</p>\n<p>I'm able to reproduce on my machine.  I'm not an expert on the slim framework, but it does seem like the <code>outputs_collections</code> argument to <code>slim.fully_connected</code> causes import_meta_graph to fail.  In particular, we end up with an extra field in the MetaGraphDef:</p>\n<pre><code>  collection_def: { # (tensorflow.MetaGraphDef.CollectionDefEntry) size=25B\n    key  : \"activations\"    # size=11\n    value: {    # (tensorflow.CollectionDef) size=10B\n      node_list: {  # (tensorflow.CollectionDef.NodeList) size=8B\n        value: [ \"logits\" ] # size=6\n      } # collection_def[0].value.node_list\n    }   # collection_def[0].value\n  } # collection_def[0]\n</code></pre>\n<p>This field causes the crash reported above.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1766524\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/sguada\">@sguada</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=21178140\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/nathansilberman\">@nathansilberman</a> Can you take a look at this?  Thanks!</p>", "body_text": "Thanks for filing the bug @barty777!\nI'm able to reproduce on my machine.  I'm not an expert on the slim framework, but it does seem like the outputs_collections argument to slim.fully_connected causes import_meta_graph to fail.  In particular, we end up with an extra field in the MetaGraphDef:\n  collection_def: { # (tensorflow.MetaGraphDef.CollectionDefEntry) size=25B\n    key  : \"activations\"    # size=11\n    value: {    # (tensorflow.CollectionDef) size=10B\n      node_list: {  # (tensorflow.CollectionDef.NodeList) size=8B\n        value: [ \"logits\" ] # size=6\n      } # collection_def[0].value.node_list\n    }   # collection_def[0].value\n  } # collection_def[0]\n\nThis field causes the crash reported above.\n@sguada @nathansilberman Can you take a look at this?  Thanks!", "body": "Thanks for filing the bug @barty777!\n\nI'm able to reproduce on my machine.  I'm not an expert on the slim framework, but it does seem like the `outputs_collections` argument to `slim.fully_connected` causes import_meta_graph to fail.  In particular, we end up with an extra field in the MetaGraphDef:\n\n```\n  collection_def: { # (tensorflow.MetaGraphDef.CollectionDefEntry) size=25B\n    key  : \"activations\"    # size=11\n    value: {    # (tensorflow.CollectionDef) size=10B\n      node_list: {  # (tensorflow.CollectionDef.NodeList) size=8B\n        value: [ \"logits\" ] # size=6\n      } # collection_def[0].value.node_list\n    }   # collection_def[0].value\n  } # collection_def[0]\n```\n\nThis field causes the crash reported above.\n\n@sguada @nathansilberman Can you take a look at this?  Thanks!\n"}