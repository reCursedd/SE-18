{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4094", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4094/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4094/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4094/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4094", "id": 173787623, "node_id": "MDU6SXNzdWUxNzM3ODc2MjM=", "number": 4094, "title": "Queue operation in conditional execution context fails with \"operation has been marked as not fetchable\"", "user": {"login": "matthiasreisser", "id": 8858505, "node_id": "MDQ6VXNlcjg4NTg1MDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/8858505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiasreisser", "html_url": "https://github.com/matthiasreisser", "followers_url": "https://api.github.com/users/matthiasreisser/followers", "following_url": "https://api.github.com/users/matthiasreisser/following{/other_user}", "gists_url": "https://api.github.com/users/matthiasreisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiasreisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiasreisser/subscriptions", "organizations_url": "https://api.github.com/users/matthiasreisser/orgs", "repos_url": "https://api.github.com/users/matthiasreisser/repos", "events_url": "https://api.github.com/users/matthiasreisser/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiasreisser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-08-29T14:28:19Z", "updated_at": "2018-09-27T21:34:25Z", "closed_at": "2016-08-30T09:09:24Z", "author_association": "NONE", "body_html": "<p>Hey TensorFlow Community,<br>\na while ago I wrote some code for doing gradient descent in a distributed environment. I adapted code from <code>tensorflow/tensorflow/python/training/sync_replicas_optimizer.py</code> and wrote my own <code>apply_gradients</code> method. Crucially, I included a conditional op, that either performed (distributed, synchronised) gradient descent or returned the <code>apply_gradients</code> op from the original optimizer.<br>\nThis code worked well when I used it with TensorFlow 0.8, but it broke with 0.9 and is still broken in my current installation from source (see below). The QueueRunner that is responsible for the synchronization op between the workers now fails with the error message \"operation has been marked as not fetchable\".<br>\nA bit of searching in the execution stack led me to the lines<br>\n<code>if self._control_flow_context is not None:</code><br>\n<code>self._control_flow_context.AddOp(self)</code><br>\nin <code>tensorflow/tensorflow/python/framework/ops.py</code><br>\nfrom which I take that the error comes from the fact that the queue operations are placed inside the conditional execution context.</p>\n<p>Out of curiosity: What is the idea behind \"fetchable\" ops - and why should enqueuing and dequeueing be \"dangerous to fetch\"?</p>\n<p>Any help would be appreciated!</p>\n<p>Matthias</p>\n<h3>Environment info</h3>\n<p>Operating System:<br>\nDistributor ID: LinuxMint<br>\nDescription:    Linux Mint 17.2 Rafaela<br>\nRelease:    17.2<br>\nCodename:   rafaela</p>\n<p>Installed version of CUDA and cuDNN:<br>\n(please attach the output of <code>ls -l /path/to/cuda/lib/libcud*</code>):</p>\n<p>cuda/lib64/libcudadevrt.a<br>\ncuda/lib64/libcudart.so -&gt; libcudart.so.8.0<br>\ncuda/lib64/libcudart.so.8.0 -&gt; libcudart.so.8.0.27<br>\ncuda/lib64/libcudart.so.8.0.27<br>\ncuda/lib64/libcudart_static.a<br>\ncuda/lib64/libcudnn.so<br>\ncuda/lib64/libcudnn.so.5<br>\ncuda/lib64/libcudnn.so.5.1.5<br>\ncuda/lib64/libcudnn_static.a<br>\nIf installed from binary pip package, provide:</p>\n<p>If installed from source, provide</p>\n<ol>\n<li>The commit hash (<code>git rev-parse HEAD</code>)<br>\n<code>57ff9d9be2f1faaba9598a3d99ef6c3af02342a4</code></li>\n</ol>\n<h3>If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)</h3>\n<h3>What other attempted solutions have you tried?</h3>\n<p>Removing the conditional execution clause removes the error</p>\n<h3>Logs or other output that would be helpful</h3>\n<p>(If logs are large, please upload as attachment or provide link).</p>", "body_text": "Hey TensorFlow Community,\na while ago I wrote some code for doing gradient descent in a distributed environment. I adapted code from tensorflow/tensorflow/python/training/sync_replicas_optimizer.py and wrote my own apply_gradients method. Crucially, I included a conditional op, that either performed (distributed, synchronised) gradient descent or returned the apply_gradients op from the original optimizer.\nThis code worked well when I used it with TensorFlow 0.8, but it broke with 0.9 and is still broken in my current installation from source (see below). The QueueRunner that is responsible for the synchronization op between the workers now fails with the error message \"operation has been marked as not fetchable\".\nA bit of searching in the execution stack led me to the lines\nif self._control_flow_context is not None:\nself._control_flow_context.AddOp(self)\nin tensorflow/tensorflow/python/framework/ops.py\nfrom which I take that the error comes from the fact that the queue operations are placed inside the conditional execution context.\nOut of curiosity: What is the idea behind \"fetchable\" ops - and why should enqueuing and dequeueing be \"dangerous to fetch\"?\nAny help would be appreciated!\nMatthias\nEnvironment info\nOperating System:\nDistributor ID: LinuxMint\nDescription:    Linux Mint 17.2 Rafaela\nRelease:    17.2\nCodename:   rafaela\nInstalled version of CUDA and cuDNN:\n(please attach the output of ls -l /path/to/cuda/lib/libcud*):\ncuda/lib64/libcudadevrt.a\ncuda/lib64/libcudart.so -> libcudart.so.8.0\ncuda/lib64/libcudart.so.8.0 -> libcudart.so.8.0.27\ncuda/lib64/libcudart.so.8.0.27\ncuda/lib64/libcudart_static.a\ncuda/lib64/libcudnn.so\ncuda/lib64/libcudnn.so.5\ncuda/lib64/libcudnn.so.5.1.5\ncuda/lib64/libcudnn_static.a\nIf installed from binary pip package, provide:\nIf installed from source, provide\n\nThe commit hash (git rev-parse HEAD)\n57ff9d9be2f1faaba9598a3d99ef6c3af02342a4\n\nIf possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\nWhat other attempted solutions have you tried?\nRemoving the conditional execution clause removes the error\nLogs or other output that would be helpful\n(If logs are large, please upload as attachment or provide link).", "body": "Hey TensorFlow Community,\na while ago I wrote some code for doing gradient descent in a distributed environment. I adapted code from `tensorflow/tensorflow/python/training/sync_replicas_optimizer.py` and wrote my own `apply_gradients` method. Crucially, I included a conditional op, that either performed (distributed, synchronised) gradient descent or returned the `apply_gradients` op from the original optimizer. \nThis code worked well when I used it with TensorFlow 0.8, but it broke with 0.9 and is still broken in my current installation from source (see below). The QueueRunner that is responsible for the synchronization op between the workers now fails with the error message \"operation has been marked as not fetchable\".\nA bit of searching in the execution stack led me to the lines \n`if self._control_flow_context is not None:`\n      `self._control_flow_context.AddOp(self)`\nin `tensorflow/tensorflow/python/framework/ops.py`\nfrom which I take that the error comes from the fact that the queue operations are placed inside the conditional execution context. \n\nOut of curiosity: What is the idea behind \"fetchable\" ops - and why should enqueuing and dequeueing be \"dangerous to fetch\"? \n\nAny help would be appreciated!\n\nMatthias\n### Environment info\n\nOperating System: \nDistributor ID: LinuxMint\nDescription:    Linux Mint 17.2 Rafaela\nRelease:    17.2\nCodename:   rafaela\n\nInstalled version of CUDA and cuDNN: \n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`):\n\ncuda/lib64/libcudadevrt.a\ncuda/lib64/libcudart.so -> libcudart.so.8.0\ncuda/lib64/libcudart.so.8.0 -> libcudart.so.8.0.27\ncuda/lib64/libcudart.so.8.0.27\ncuda/lib64/libcudart_static.a\ncuda/lib64/libcudnn.so\ncuda/lib64/libcudnn.so.5\ncuda/lib64/libcudnn.so.5.1.5\ncuda/lib64/libcudnn_static.a\nIf installed from binary pip package, provide:\n\nIf installed from source, provide \n1. The commit hash (`git rev-parse HEAD`)\n   `57ff9d9be2f1faaba9598a3d99ef6c3af02342a4`\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\n### What other attempted solutions have you tried?\n\nRemoving the conditional execution clause removes the error\n### Logs or other output that would be helpful\n\n(If logs are large, please upload as attachment or provide link).\n"}