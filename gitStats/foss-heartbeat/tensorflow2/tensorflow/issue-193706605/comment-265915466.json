{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/265915466", "html_url": "https://github.com/tensorflow/tensorflow/issues/6116#issuecomment-265915466", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6116", "id": 265915466, "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTkxNTQ2Ng==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-09T02:19:20Z", "updated_at": "2016-12-09T02:19:47Z", "author_association": "CONTRIBUTOR", "body_html": "<p>As discussed off-channel, we were looking at slightly different benchmarks. My original <a href=\"https://gist.github.com/yaroslavvb/1124bb02a9fd4abce3d86caf2f950cb2\"> local_distributed_benchmark.py</a> does <code>sess.run(add_op)</code> which fetches the buffer back into Python runtime, while timings in this issue is for <code>sess.run(add_op.op)</code> which doesn't.</p>\n<p>The \"fetching into Python\" version is ridiculously slow for gRPC runtime (0.05 GB/sec grpc vs 3.4 GB/sec in-process), whereas the non-fetching is just slow (0.9 GB/sec grpc vs 20.2 GB/sec in-process) for <code>Xeon(R) CPU E5-2630 v3 @ 2.40GHz</code></p>", "body_text": "As discussed off-channel, we were looking at slightly different benchmarks. My original  local_distributed_benchmark.py does sess.run(add_op) which fetches the buffer back into Python runtime, while timings in this issue is for sess.run(add_op.op) which doesn't.\nThe \"fetching into Python\" version is ridiculously slow for gRPC runtime (0.05 GB/sec grpc vs 3.4 GB/sec in-process), whereas the non-fetching is just slow (0.9 GB/sec grpc vs 20.2 GB/sec in-process) for Xeon(R) CPU E5-2630 v3 @ 2.40GHz", "body": "As discussed off-channel, we were looking at slightly different benchmarks. My original [ local_distributed_benchmark.py](https://gist.github.com/yaroslavvb/1124bb02a9fd4abce3d86caf2f950cb2) does `sess.run(add_op)` which fetches the buffer back into Python runtime, while timings in this issue is for `sess.run(add_op.op)` which doesn't.\r\n\r\nThe \"fetching into Python\" version is ridiculously slow for gRPC runtime (0.05 GB/sec grpc vs 3.4 GB/sec in-process), whereas the non-fetching is just slow (0.9 GB/sec grpc vs 20.2 GB/sec in-process) for `Xeon(R) CPU E5-2630 v3 @ 2.40GHz`\r\n"}