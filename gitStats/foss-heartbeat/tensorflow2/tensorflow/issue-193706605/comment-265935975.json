{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/265935975", "html_url": "https://github.com/tensorflow/tensorflow/issues/6116#issuecomment-265935975", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6116", "id": 265935975, "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTkzNTk3NQ==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-09T05:18:45Z", "updated_at": "2016-12-09T05:18:45Z", "author_association": "CONTRIBUTOR", "body_html": "<p>BTW, you can partially mitigate this problem by running multiple ps processes and sharding your variables over\u00a0them.<br>\nOn a 32 core Xeon, I can get transfer rate to go from 0.9 GB/s to 2.6 GB/s<br>\n<a href=\"https://gist.github.com/yaroslavvb/ea1b1bae0a75c4aae593df7eca72d9ca\">sharded_ps_benchmark.py</a></p>\n<p>this makes the logic more complicated unfortunately</p>\n<pre><code>./sharded_ps_benchmark.py --ps=8\n...\nworker 0 done: 2555.34 MB per second\n\n</code></pre>", "body_text": "BTW, you can partially mitigate this problem by running multiple ps processes and sharding your variables over\u00a0them.\nOn a 32 core Xeon, I can get transfer rate to go from 0.9 GB/s to 2.6 GB/s\nsharded_ps_benchmark.py\nthis makes the logic more complicated unfortunately\n./sharded_ps_benchmark.py --ps=8\n...\nworker 0 done: 2555.34 MB per second", "body": "BTW, you can partially mitigate this problem by running multiple ps processes and sharding your variables over\u00a0them.\r\nOn a 32 core Xeon, I can get transfer rate to go from 0.9 GB/s to 2.6 GB/s\r\n[sharded_ps_benchmark.py](https://gist.github.com/yaroslavvb/ea1b1bae0a75c4aae593df7eca72d9ca)\r\n\r\nthis makes the logic more complicated unfortunately\r\n```\r\n./sharded_ps_benchmark.py --ps=8\r\n...\r\nworker 0 done: 2555.34 MB per second\r\n\r\n```"}