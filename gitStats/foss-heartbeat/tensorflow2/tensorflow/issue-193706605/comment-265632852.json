{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/265632852", "html_url": "https://github.com/tensorflow/tensorflow/issues/6116#issuecomment-265632852", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6116", "id": 265632852, "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTYzMjg1Mg==", "user": {"login": "llhe", "id": 192829, "node_id": "MDQ6VXNlcjE5MjgyOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/192829?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llhe", "html_url": "https://github.com/llhe", "followers_url": "https://api.github.com/users/llhe/followers", "following_url": "https://api.github.com/users/llhe/following{/other_user}", "gists_url": "https://api.github.com/users/llhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/llhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llhe/subscriptions", "organizations_url": "https://api.github.com/users/llhe/orgs", "repos_url": "https://api.github.com/users/llhe/repos", "events_url": "https://api.github.com/users/llhe/events{/privacy}", "received_events_url": "https://api.github.com/users/llhe/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-08T02:08:07Z", "updated_at": "2016-12-08T02:49:49Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=23068\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yaroslavvb\">@yaroslavvb</a> Do you mean the serialization in sending side? I haven't identified that issue. I use float32 with size 100MB, and looks like it goes in to <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/distributed_runtime/rpc/grpc_tensor_coding.cc#L220\">this branch</a> as expected. And in the receiving side, it also goes to <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/distributed_runtime/tensor_coding.cc#L199\">this branch</a> and in <a href=\"https://github.com/google/protobuf/blob/master/src/google/protobuf/io/coded_stream_inl.h#L70\">protobuf</a>.</p>\n<p>However, the 18.2% time consumption looks unexpected high to me for the bare <code>memcpy</code>, compared to AssignOp's <code>memcpy</code>. Maybe just caused by poor alignment?</p>", "body_text": "@yaroslavvb Do you mean the serialization in sending side? I haven't identified that issue. I use float32 with size 100MB, and looks like it goes in to this branch as expected. And in the receiving side, it also goes to this branch and in protobuf.\nHowever, the 18.2% time consumption looks unexpected high to me for the bare memcpy, compared to AssignOp's memcpy. Maybe just caused by poor alignment?", "body": "@yaroslavvb Do you mean the serialization in sending side? I haven't identified that issue. I use float32 with size 100MB, and looks like it goes in to [this branch](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/distributed_runtime/rpc/grpc_tensor_coding.cc#L220) as expected. And in the receiving side, it also goes to [this branch](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/distributed_runtime/tensor_coding.cc#L199) and in [protobuf](https://github.com/google/protobuf/blob/master/src/google/protobuf/io/coded_stream_inl.h#L70).\r\n\r\nHowever, the 18.2% time consumption looks unexpected high to me for the bare `memcpy`, compared to AssignOp's `memcpy`. Maybe just caused by poor alignment?"}