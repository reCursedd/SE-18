{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/334080725", "html_url": "https://github.com/tensorflow/tensorflow/issues/13288#issuecomment-334080725", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13288", "id": 334080725, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDA4MDcyNQ==", "user": {"login": "EFanZh", "id": 2160692, "node_id": "MDQ6VXNlcjIxNjA2OTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2160692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EFanZh", "html_url": "https://github.com/EFanZh", "followers_url": "https://api.github.com/users/EFanZh/followers", "following_url": "https://api.github.com/users/EFanZh/following{/other_user}", "gists_url": "https://api.github.com/users/EFanZh/gists{/gist_id}", "starred_url": "https://api.github.com/users/EFanZh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EFanZh/subscriptions", "organizations_url": "https://api.github.com/users/EFanZh/orgs", "repos_url": "https://api.github.com/users/EFanZh/repos", "events_url": "https://api.github.com/users/EFanZh/events{/privacy}", "received_events_url": "https://api.github.com/users/EFanZh/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-04T08:08:57Z", "updated_at": "2017-10-04T08:10:24Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16018\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/asimshankar\">@asimshankar</a> Maybe my description is not very clear, but I was not asking a question. I am fairly sure this is a bug, because the code\u2019s behavior is different than the documented behavior. I think either the implementation is wrong, or the documentation is wrong.</p>\n<p>Consider the following two pieces of codes:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">from</span> tensorflow.contrib <span class=\"pl-k\">import</span> staging\n\nstaging.StagingArea(<span class=\"pl-v\">dtypes</span><span class=\"pl-k\">=</span>[tf.int32]).put(tf.constant(<span class=\"pl-c1\">1</span>))</pre></div>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">from</span> tensorflow.contrib <span class=\"pl-k\">import</span> staging\n\nstaging.StagingArea(<span class=\"pl-v\">dtypes</span><span class=\"pl-k\">=</span>[tf.int32]).put((tf.constant(<span class=\"pl-c1\">1</span>),))</pre></div>\n<p>The first one won\u2019t work as I described, the second one works. If the documentation is correct, both ones should work, so I think this is a bug that need to be fixed.</p>", "body_text": "@asimshankar Maybe my description is not very clear, but I was not asking a question. I am fairly sure this is a bug, because the code\u2019s behavior is different than the documented behavior. I think either the implementation is wrong, or the documentation is wrong.\nConsider the following two pieces of codes:\nimport tensorflow as tf\nfrom tensorflow.contrib import staging\n\nstaging.StagingArea(dtypes=[tf.int32]).put(tf.constant(1))\nimport tensorflow as tf\nfrom tensorflow.contrib import staging\n\nstaging.StagingArea(dtypes=[tf.int32]).put((tf.constant(1),))\nThe first one won\u2019t work as I described, the second one works. If the documentation is correct, both ones should work, so I think this is a bug that need to be fixed.", "body": "@asimshankar Maybe my description is not very clear, but I was not asking a question. I am fairly sure this is a bug, because the code\u2019s behavior is different than the documented behavior. I think either the implementation is wrong, or the documentation is wrong.\r\n\r\nConsider the following two pieces of codes:\r\n\r\n```python\r\nimport tensorflow as tf\r\nfrom tensorflow.contrib import staging\r\n\r\nstaging.StagingArea(dtypes=[tf.int32]).put(tf.constant(1))\r\n```\r\n\r\n```python\r\nimport tensorflow as tf\r\nfrom tensorflow.contrib import staging\r\n\r\nstaging.StagingArea(dtypes=[tf.int32]).put((tf.constant(1),))\r\n```\r\n\r\nThe first one won\u2019t work as I described, the second one works. If the documentation is correct, both ones should work, so I think this is a bug that need to be fixed."}