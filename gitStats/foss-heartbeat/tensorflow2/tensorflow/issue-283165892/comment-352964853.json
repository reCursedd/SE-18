{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/352964853", "html_url": "https://github.com/tensorflow/tensorflow/pull/15475#issuecomment-352964853", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15475", "id": 352964853, "node_id": "MDEyOklzc3VlQ29tbWVudDM1Mjk2NDg1Mw==", "user": {"login": "snnn", "id": 856316, "node_id": "MDQ6VXNlcjg1NjMxNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/856316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snnn", "html_url": "https://github.com/snnn", "followers_url": "https://api.github.com/users/snnn/followers", "following_url": "https://api.github.com/users/snnn/following{/other_user}", "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}", "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snnn/subscriptions", "organizations_url": "https://api.github.com/users/snnn/orgs", "repos_url": "https://api.github.com/users/snnn/repos", "events_url": "https://api.github.com/users/snnn/events{/privacy}", "received_events_url": "https://api.github.com/users/snnn/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-20T04:56:49Z", "updated_at": "2017-12-20T09:55:29Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hi <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=10532244\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/laszlocsomor\">@laszlocsomor</a></p>\n<p>Current implementation has a limit: it only has file to file mappings, no folder to folder mappings. Say, If we have a function which takes a folder as input, e.g.</p>\n<p>model.h</p>\n<div class=\"highlight highlight-source-c++\"><pre><span class=\"pl-k\">void</span> <span class=\"pl-en\">LoadModel</span>(<span class=\"pl-k\">const</span> string&amp; model_dir);</pre></div>\n<p>And we want to test this function.</p>\n<p>model_test.cc</p>\n<div class=\"highlight highlight-source-c++\"><pre><span class=\"pl-en\">TEST</span>(Model, LoadModelFromLocalDir) {\n   string dirname = <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>data/checkpoint1<span class=\"pl-pds\">\"</span></span>\n   dirname = <span class=\"pl-c1\">TranslateDirNameByUsingManifestInfo</span>(dirname); <span class=\"pl-c\"><span class=\"pl-c\">//</span>This step is not do-able</span>\n   <span class=\"pl-c1\">LoadModel</span>(dirname); \n}</pre></div>\n<p>It's not do-able. Because the path, \"data/checkpoint1\", doesn't exist in the MANIFEST file, which only has things like:</p>\n<pre><code>data/checkpoint1/aaa/bbb.txt        C:/xxx/aaa/bbb.txt\ndata/checkpoint1/aaa/ccc/ddd.txt        C:/xxx/aaa/ccc/ddd.txt\n</code></pre>\n<p>There is no entry for \"data/checkpoint1\"</p>", "body_text": "Hi @laszlocsomor\nCurrent implementation has a limit: it only has file to file mappings, no folder to folder mappings. Say, If we have a function which takes a folder as input, e.g.\nmodel.h\nvoid LoadModel(const string& model_dir);\nAnd we want to test this function.\nmodel_test.cc\nTEST(Model, LoadModelFromLocalDir) {\n   string dirname = \"data/checkpoint1\"\n   dirname = TranslateDirNameByUsingManifestInfo(dirname); //This step is not do-able\n   LoadModel(dirname); \n}\nIt's not do-able. Because the path, \"data/checkpoint1\", doesn't exist in the MANIFEST file, which only has things like:\ndata/checkpoint1/aaa/bbb.txt        C:/xxx/aaa/bbb.txt\ndata/checkpoint1/aaa/ccc/ddd.txt        C:/xxx/aaa/ccc/ddd.txt\n\nThere is no entry for \"data/checkpoint1\"", "body": "Hi @laszlocsomor \r\n\r\nCurrent implementation has a limit: it only has file to file mappings, no folder to folder mappings. Say, If we have a function which takes a folder as input, e.g.\r\n\r\nmodel.h\r\n```c++\r\nvoid LoadModel(const string& model_dir);\r\n```\r\nAnd we want to test this function.\r\n\r\nmodel_test.cc\r\n```c++\r\nTEST(Model, LoadModelFromLocalDir) {\r\n   string dirname = \"data/checkpoint1\"\r\n   dirname = TranslateDirNameByUsingManifestInfo(dirname); //This step is not do-able\r\n   LoadModel(dirname); \r\n}\r\n```\r\n\r\nIt's not do-able. Because the path, \"data/checkpoint1\", doesn't exist in the MANIFEST file, which only has things like:\r\n```\r\ndata/checkpoint1/aaa/bbb.txt        C:/xxx/aaa/bbb.txt\r\ndata/checkpoint1/aaa/ccc/ddd.txt        C:/xxx/aaa/ccc/ddd.txt\r\n```\r\nThere is no entry for \"data/checkpoint1\"\r\n\r\n\r\n"}