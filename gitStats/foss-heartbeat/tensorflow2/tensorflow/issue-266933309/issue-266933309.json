{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13835", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13835/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13835/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13835/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/13835", "id": 266933309, "node_id": "MDU6SXNzdWUyNjY5MzMzMDk=", "number": 13835, "title": "Feature query: How to load the graph(model) only once and then give series of inputs", "user": {"login": "serendipity24", "id": 31762790, "node_id": "MDQ6VXNlcjMxNzYyNzkw", "avatar_url": "https://avatars0.githubusercontent.com/u/31762790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/serendipity24", "html_url": "https://github.com/serendipity24", "followers_url": "https://api.github.com/users/serendipity24/followers", "following_url": "https://api.github.com/users/serendipity24/following{/other_user}", "gists_url": "https://api.github.com/users/serendipity24/gists{/gist_id}", "starred_url": "https://api.github.com/users/serendipity24/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/serendipity24/subscriptions", "organizations_url": "https://api.github.com/users/serendipity24/orgs", "repos_url": "https://api.github.com/users/serendipity24/repos", "events_url": "https://api.github.com/users/serendipity24/events{/privacy}", "received_events_url": "https://api.github.com/users/serendipity24/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "petewarden", "id": 161459, "node_id": "MDQ6VXNlcjE2MTQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/161459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petewarden", "html_url": "https://github.com/petewarden", "followers_url": "https://api.github.com/users/petewarden/followers", "following_url": "https://api.github.com/users/petewarden/following{/other_user}", "gists_url": "https://api.github.com/users/petewarden/gists{/gist_id}", "starred_url": "https://api.github.com/users/petewarden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petewarden/subscriptions", "organizations_url": "https://api.github.com/users/petewarden/orgs", "repos_url": "https://api.github.com/users/petewarden/repos", "events_url": "https://api.github.com/users/petewarden/events{/privacy}", "received_events_url": "https://api.github.com/users/petewarden/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "petewarden", "id": 161459, "node_id": "MDQ6VXNlcjE2MTQ1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/161459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petewarden", "html_url": "https://github.com/petewarden", "followers_url": "https://api.github.com/users/petewarden/followers", "following_url": "https://api.github.com/users/petewarden/following{/other_user}", "gists_url": "https://api.github.com/users/petewarden/gists{/gist_id}", "starred_url": "https://api.github.com/users/petewarden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petewarden/subscriptions", "organizations_url": "https://api.github.com/users/petewarden/orgs", "repos_url": "https://api.github.com/users/petewarden/repos", "events_url": "https://api.github.com/users/petewarden/events{/privacy}", "received_events_url": "https://api.github.com/users/petewarden/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2017-10-19T17:56:41Z", "updated_at": "2018-01-04T19:27:18Z", "closed_at": "2018-01-04T19:27:18Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:No. Running the Simple Audio recognition network tutorial</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Ubuntu 14.04<br>\n-<strong>TensorFlow installed from (source or binary)</strong>: Source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.3</li>\n<li><strong>Python version</strong>: 3.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.6.0</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I am a tensorflow and neural network novice. I was able to run the <a href=\"https://www.tensorflow.org/versions/master/tutorials/audio_recognition\" rel=\"nofollow\">Simple audio recognition</a> network. For a given input wavefile the model obtained gives the result in approx. 5 seconds. I want reduce this time to 100s of milliseconds. From the issue <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"244125723\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/11618\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/11618/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/11618\">#11618</a>, there seems to be a way to do this using the graph.</p>\n<p>I used the graph optimisation tool but there wasn't a considerable reduction in time.I heard that loading the graph is what takes time and hence I need to figure out how to load the graph only once and then feed the inputs without feeding all the parameters every time a new input needs to be tested.</p>\n<p>The command that is used for decoding is as follows:</p>\n<p>python tensorflow/examples/speech_commands/label_wav.py <br>\n--graph=/tmp/my_frozen_graph.pb <br>\n--labels=/tmp/speech_commands_train/conv_labels.txt <br>\n--wav=/tmp/speech_dataset/left/a5d485dc_nohash_0.wav</p>\n<p>Also does anyone know if there is official data on how long alexa/google home take to respond to trigger words?</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):No. Running the Simple Audio recognition network tutorial\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 14.04\n-TensorFlow installed from (source or binary): Source\nTensorFlow version (use command below): 1.3\nPython version: 3.6\nBazel version (if compiling from source): 0.6.0\n\nDescribe the problem\nI am a tensorflow and neural network novice. I was able to run the Simple audio recognition network. For a given input wavefile the model obtained gives the result in approx. 5 seconds. I want reduce this time to 100s of milliseconds. From the issue #11618, there seems to be a way to do this using the graph.\nI used the graph optimisation tool but there wasn't a considerable reduction in time.I heard that loading the graph is what takes time and hence I need to figure out how to load the graph only once and then feed the inputs without feeding all the parameters every time a new input needs to be tested.\nThe command that is used for decoding is as follows:\npython tensorflow/examples/speech_commands/label_wav.py \n--graph=/tmp/my_frozen_graph.pb \n--labels=/tmp/speech_commands_train/conv_labels.txt \n--wav=/tmp/speech_dataset/left/a5d485dc_nohash_0.wav\nAlso does anyone know if there is official data on how long alexa/google home take to respond to trigger words?", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:No. Running the Simple Audio recognition network tutorial\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 14.04 \r\n-**TensorFlow installed from (source or binary)**: Source\r\n- **TensorFlow version (use command below)**: 1.3\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: 0.6.0\r\n\r\n### Describe the problem\r\nI am a tensorflow and neural network novice. I was able to run the [Simple audio recognition](https://www.tensorflow.org/versions/master/tutorials/audio_recognition) network. For a given input wavefile the model obtained gives the result in approx. 5 seconds. I want reduce this time to 100s of milliseconds. From the issue https://github.com/tensorflow/tensorflow/issues/11618, there seems to be a way to do this using the graph. \r\n\r\nI used the graph optimisation tool but there wasn't a considerable reduction in time.I heard that loading the graph is what takes time and hence I need to figure out how to load the graph only once and then feed the inputs without feeding all the parameters every time a new input needs to be tested.\r\n\r\nThe command that is used for decoding is as follows: \r\n\r\npython tensorflow/examples/speech_commands/label_wav.py \\\r\n--graph=/tmp/my_frozen_graph.pb \\\r\n--labels=/tmp/speech_commands_train/conv_labels.txt \\\r\n--wav=/tmp/speech_dataset/left/a5d485dc_nohash_0.wav\r\n\r\nAlso does anyone know if there is official data on how long alexa/google home take to respond to trigger words?"}