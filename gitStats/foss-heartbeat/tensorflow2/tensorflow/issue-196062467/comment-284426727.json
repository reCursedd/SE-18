{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/284426727", "html_url": "https://github.com/tensorflow/tensorflow/issues/6360#issuecomment-284426727", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6360", "id": 284426727, "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDQyNjcyNw==", "user": {"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-06T15:21:49Z", "updated_at": "2017-03-06T15:21:49Z", "author_association": "MEMBER", "body_html": "<div class=\"email-fragment\"><a class=\"user-mention\" href=\"https://github.com/benring\">@benring</a>, I need more information to understand what is going on. Can your\ncustom op be trying to access state on another machine or something?</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On Mon, Mar 6, 2017 at 12:26 AM, benring ***@***.***&gt; wrote:\n I have a different use case and/or question -- which may need another\n thread. I am trying to implement a custom op to run a L-BFGS solver. On the\n C++, I have a co-routine using threads: one runs the solver detached, the\n other manages the TF control. It operates inside a TF while_loop with the\n compute call serving as a defacto generator function to fetch data when\n needed. I can run this on a single node, but it seems to lock up the graph\n somewhere when I run it in distributed. Can I prevent another thread from\n trying to acquire a lock and/or can I manage the locks to update the\n variable when needed and release the lock otherwise?\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"196062467\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/6360\" href=\"https://github.com/tensorflow/tensorflow/issues/6360#issuecomment-284331206\">#6360 (comment)</a>&gt;,\n or mute the thread\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/AAATxdynpYZsNle_AvPvFSTtSy8_xjA9ks5ri8NBgaJpZM4LPMvQ\">https://github.com/notifications/unsubscribe-auth/AAATxdynpYZsNle_AvPvFSTtSy8_xjA9ks5ri8NBgaJpZM4LPMvQ</a>&gt;\n .\n</div>\n<div class=\"email-fragment\"></div>\n<div class=\"email-signature-reply\">-- \n - Alex</div>\n</div>", "body_text": "@benring, I need more information to understand what is going on. Can your\ncustom op be trying to access state on another machine or something?\n\u2026\nOn Mon, Mar 6, 2017 at 12:26 AM, benring ***@***.***> wrote:\n I have a different use case and/or question -- which may need another\n thread. I am trying to implement a custom op to run a L-BFGS solver. On the\n C++, I have a co-routine using threads: one runs the solver detached, the\n other manages the TF control. It operates inside a TF while_loop with the\n compute call serving as a defacto generator function to fetch data when\n needed. I can run this on a single node, but it seems to lock up the graph\n somewhere when I run it in distributed. Can I prevent another thread from\n trying to acquire a lock and/or can I manage the locks to update the\n variable when needed and release the lock otherwise?\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#6360 (comment)>,\n or mute the thread\n <https://github.com/notifications/unsubscribe-auth/AAATxdynpYZsNle_AvPvFSTtSy8_xjA9ks5ri8NBgaJpZM4LPMvQ>\n .\n\n\n-- \n - Alex", "body": "@benring, I need more information to understand what is going on. Can your\ncustom op be trying to access state on another machine or something?\n\nOn Mon, Mar 6, 2017 at 12:26 AM, benring <notifications@github.com> wrote:\n\n> I have a different use case and/or question -- which may need another\n> thread. I am trying to implement a custom op to run a L-BFGS solver. On the\n> C++, I have a co-routine using threads: one runs the solver detached, the\n> other manages the TF control. It operates inside a TF while_loop with the\n> compute call serving as a defacto generator function to fetch data when\n> needed. I can run this on a single node, but it seems to lock up the graph\n> somewhere when I run it in distributed. Can I prevent another thread from\n> trying to acquire a lock and/or can I manage the locks to update the\n> variable when needed and release the lock otherwise?\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/issues/6360#issuecomment-284331206>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAATxdynpYZsNle_AvPvFSTtSy8_xjA9ks5ri8NBgaJpZM4LPMvQ>\n> .\n>\n\n\n\n-- \n - Alex\n"}