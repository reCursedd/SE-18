{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/269550226", "html_url": "https://github.com/tensorflow/tensorflow/issues/6360#issuecomment-269550226", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6360", "id": 269550226, "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTU1MDIyNg==", "user": {"login": "danijar", "id": 2111293, "node_id": "MDQ6VXNlcjIxMTEyOTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2111293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danijar", "html_url": "https://github.com/danijar", "followers_url": "https://api.github.com/users/danijar/followers", "following_url": "https://api.github.com/users/danijar/following{/other_user}", "gists_url": "https://api.github.com/users/danijar/gists{/gist_id}", "starred_url": "https://api.github.com/users/danijar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danijar/subscriptions", "organizations_url": "https://api.github.com/users/danijar/orgs", "repos_url": "https://api.github.com/users/danijar/repos", "events_url": "https://api.github.com/users/danijar/events{/privacy}", "received_events_url": "https://api.github.com/users/danijar/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-28T22:19:05Z", "updated_at": "2016-12-28T22:19:05Z", "author_association": "MEMBER", "body_html": "<p>Exactly, but it seems quite counter-intuitive to me. I'd expect a write lock to block both reads and writes. There are some people on Github who tried to implement A3C (Mnih et al.; 2016) and ran into this issue. They ended up using processes and aggregating updates on the Python side with Numpy. Would be interesting to hear an opinoin from <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a>.</p>", "body_text": "Exactly, but it seems quite counter-intuitive to me. I'd expect a write lock to block both reads and writes. There are some people on Github who tried to implement A3C (Mnih et al.; 2016) and ran into this issue. They ended up using processes and aggregating updates on the Python side with Numpy. Would be interesting to hear an opinoin from @mrry.", "body": "Exactly, but it seems quite counter-intuitive to me. I'd expect a write lock to block both reads and writes. There are some people on Github who tried to implement A3C (Mnih et al.; 2016) and ran into this issue. They ended up using processes and aggregating updates on the Python side with Numpy. Would be interesting to hear an opinoin from @mrry."}