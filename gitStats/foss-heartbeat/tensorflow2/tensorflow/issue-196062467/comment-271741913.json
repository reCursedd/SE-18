{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/271741913", "html_url": "https://github.com/tensorflow/tensorflow/issues/6360#issuecomment-271741913", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6360", "id": 271741913, "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTc0MTkxMw==", "user": {"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-11T00:29:58Z", "updated_at": "2017-01-11T00:29:58Z", "author_association": "MEMBER", "body_html": "<div class=\"email-fragment\">Instead there will be a sister class to variable (now named\nResourceVariable, already in the codebase but hidden as it's still\nincompatible with a lot of things) with different behavior. It will have a\nRead op where a Read is guaranteed to see the result of all writes on which\nit depends and to not see the results of writes which depend on it. It'll\nalso be possible to add operations with stronger contracts, such as the\ngroup snapshot read Yaroslav mentioned (which I might add from the start).</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On Tue, Jan 10, 2017 at 3:57 PM, Danijar Hafner ***@***.***&gt; wrote:\n <a class=\"user-mention\" href=\"https://github.com/alextp\">@alextp</a> &lt;<a href=\"https://github.com/alextp\">https://github.com/alextp</a>&gt; Okay cool. Will this change the last\n paragraph of the tf.Variable.value() docs? I think that's the unexpected\n behavior we ran into for A3C. It's definitely not safe behavior when\n running sessions from multiple threads.\n\n tf.Variable.value()\n\n Returns the last snapshot of this variable.\n\n You usually do not need to call this method as all ops that need the value\n of the variable call it automatically through a convert_to_tensor() call.\n\n Returns a Tensor which holds the value of the variable. You can not assign\n a new value to this tensor as it is not a reference to the variable. See\n ref() if you want to get a reference to the variable.\n\n To avoid copies, if the consumer of the returned value is on the same\n device as the variable, this actually returns the live value of the\n variable, not a copy. Updates to the variable are seen by the consumer. If\n the consumer is on a different device it will get a copy of the variable.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"196062467\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/6360\" href=\"https://github.com/tensorflow/tensorflow/issues/6360#issuecomment-271736413\">#6360 (comment)</a>&gt;,\n or mute the thread\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/AAATxZrtuYPX1_IsBHJq3N_nxDS3iR-3ks5rRBsHgaJpZM4LPMvQ\">https://github.com/notifications/unsubscribe-auth/AAATxZrtuYPX1_IsBHJq3N_nxDS3iR-3ks5rRBsHgaJpZM4LPMvQ</a>&gt;\n .\n</div>\n<div class=\"email-fragment\"></div>\n<div class=\"email-signature-reply\">-- \n - Alex</div>\n</div>", "body_text": "Instead there will be a sister class to variable (now named\nResourceVariable, already in the codebase but hidden as it's still\nincompatible with a lot of things) with different behavior. It will have a\nRead op where a Read is guaranteed to see the result of all writes on which\nit depends and to not see the results of writes which depend on it. It'll\nalso be possible to add operations with stronger contracts, such as the\ngroup snapshot read Yaroslav mentioned (which I might add from the start).\n\u2026\nOn Tue, Jan 10, 2017 at 3:57 PM, Danijar Hafner ***@***.***> wrote:\n @alextp <https://github.com/alextp> Okay cool. Will this change the last\n paragraph of the tf.Variable.value() docs? I think that's the unexpected\n behavior we ran into for A3C. It's definitely not safe behavior when\n running sessions from multiple threads.\n\n tf.Variable.value()\n\n Returns the last snapshot of this variable.\n\n You usually do not need to call this method as all ops that need the value\n of the variable call it automatically through a convert_to_tensor() call.\n\n Returns a Tensor which holds the value of the variable. You can not assign\n a new value to this tensor as it is not a reference to the variable. See\n ref() if you want to get a reference to the variable.\n\n To avoid copies, if the consumer of the returned value is on the same\n device as the variable, this actually returns the live value of the\n variable, not a copy. Updates to the variable are seen by the consumer. If\n the consumer is on a different device it will get a copy of the variable.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#6360 (comment)>,\n or mute the thread\n <https://github.com/notifications/unsubscribe-auth/AAATxZrtuYPX1_IsBHJq3N_nxDS3iR-3ks5rRBsHgaJpZM4LPMvQ>\n .\n\n\n-- \n - Alex", "body": "Instead there will be a sister class to variable (now named\nResourceVariable, already in the codebase but hidden as it's still\nincompatible with a lot of things) with different behavior. It will have a\nRead op where a Read is guaranteed to see the result of all writes on which\nit depends and to not see the results of writes which depend on it. It'll\nalso be possible to add operations with stronger contracts, such as the\ngroup snapshot read Yaroslav mentioned (which I might add from the start).\n\nOn Tue, Jan 10, 2017 at 3:57 PM, Danijar Hafner <notifications@github.com>\nwrote:\n\n> @alextp <https://github.com/alextp> Okay cool. Will this change the last\n> paragraph of the tf.Variable.value() docs? I think that's the unexpected\n> behavior we ran into for A3C. It's definitely not safe behavior when\n> running sessions from multiple threads.\n>\n> tf.Variable.value()\n>\n> Returns the last snapshot of this variable.\n>\n> You usually do not need to call this method as all ops that need the value\n> of the variable call it automatically through a convert_to_tensor() call.\n>\n> Returns a Tensor which holds the value of the variable. You can not assign\n> a new value to this tensor as it is not a reference to the variable. See\n> ref() if you want to get a reference to the variable.\n>\n> To avoid copies, if the consumer of the returned value is on the same\n> device as the variable, this actually returns the live value of the\n> variable, not a copy. Updates to the variable are seen by the consumer. If\n> the consumer is on a different device it will get a copy of the variable.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/issues/6360#issuecomment-271736413>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAATxZrtuYPX1_IsBHJq3N_nxDS3iR-3ks5rRBsHgaJpZM4LPMvQ>\n> .\n>\n\n\n\n-- \n - Alex\n"}