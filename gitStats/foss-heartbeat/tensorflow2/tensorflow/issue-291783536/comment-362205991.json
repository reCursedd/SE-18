{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/362205991", "html_url": "https://github.com/tensorflow/tensorflow/pull/16433#issuecomment-362205991", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16433", "id": 362205991, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjIwNTk5MQ==", "user": {"login": "chofchof", "id": 16874885, "node_id": "MDQ6VXNlcjE2ODc0ODg1", "avatar_url": "https://avatars1.githubusercontent.com/u/16874885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chofchof", "html_url": "https://github.com/chofchof", "followers_url": "https://api.github.com/users/chofchof/followers", "following_url": "https://api.github.com/users/chofchof/following{/other_user}", "gists_url": "https://api.github.com/users/chofchof/gists{/gist_id}", "starred_url": "https://api.github.com/users/chofchof/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chofchof/subscriptions", "organizations_url": "https://api.github.com/users/chofchof/orgs", "repos_url": "https://api.github.com/users/chofchof/repos", "events_url": "https://api.github.com/users/chofchof/events{/privacy}", "received_events_url": "https://api.github.com/users/chofchof/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-01T09:19:55Z", "updated_at": "2018-02-01T09:19:55Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16907534\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rmlarsen\">@rmlarsen</a> Do you want for me to open a new \"Pull request\"? To pass the test, <code>tensorflow/python/kernel_tests/losses_test.py</code> needs to be fixed as follows:</p>\n<pre><code>--- losses_test.py.orig 2018-02-01 18:10:54.865671816 +0900\n+++ losses_test.py      2018-02-01 18:05:41.668652970 +0900\n@@ -953,14 +953,14 @@\n     # Compute the expected loss 'manually'.\n     total = np.zeros((batch_size,))\n     for b in range(batch_size):\n-      for i in range(dims):\n-        for j in range(dims):\n+      for i in range(dims-1):\n+        for j in range(i+1, dims):\n           x = self._predictions[b, i].item() - self._predictions[b, j].item()\n           y = self._labels[b, i].item() - self._labels[b, j].item()\n           diff = (x - y)\n           total[b] += (diff * diff)\n\n-    self._expected_losses = np.divide(total, 9.0)\n+    self._expected_losses = np.divide(total, 3.0)\n\n   def testValueErrorThrownWhenWeightIsNone(self):\n     with self.test_session():\n@@ -1060,7 +1060,7 @@\n         [[8, 1, 3], [7, 8, 9], [10, 11, 12]],\n     ])\n     self._test_valid_weights(\n-        labels, predictions, expected_loss=122.22222)\n+        labels, predictions, expected_loss=137.5)\n\n   def test3dWeightedScalar(self):\n     labels = np.array([\n@@ -1073,7 +1073,7 @@\n     ])\n     weight = 3.0\n     self._test_valid_weights(\n-        labels, predictions, expected_loss=weight * 122.22222,\n+        labels, predictions, expected_loss=weight * 137.5,\n         weights=weight)\n\n   def _test_invalid_weights(\n@@ -1124,7 +1124,7 @@\n     ])\n     self._test_valid_weights(\n         # TODO(ptucker): This doesn't look right.\n-        labels, predictions, expected_loss=9 * 122.22222,\n+        labels, predictions, expected_loss=9 * 137.5,\n         weights=np.ones((2, 3, 3)))\n\n   def testLossWithAllZeroBatchSpecificWeights(self):\n</code></pre>", "body_text": "@rmlarsen Do you want for me to open a new \"Pull request\"? To pass the test, tensorflow/python/kernel_tests/losses_test.py needs to be fixed as follows:\n--- losses_test.py.orig 2018-02-01 18:10:54.865671816 +0900\n+++ losses_test.py      2018-02-01 18:05:41.668652970 +0900\n@@ -953,14 +953,14 @@\n     # Compute the expected loss 'manually'.\n     total = np.zeros((batch_size,))\n     for b in range(batch_size):\n-      for i in range(dims):\n-        for j in range(dims):\n+      for i in range(dims-1):\n+        for j in range(i+1, dims):\n           x = self._predictions[b, i].item() - self._predictions[b, j].item()\n           y = self._labels[b, i].item() - self._labels[b, j].item()\n           diff = (x - y)\n           total[b] += (diff * diff)\n\n-    self._expected_losses = np.divide(total, 9.0)\n+    self._expected_losses = np.divide(total, 3.0)\n\n   def testValueErrorThrownWhenWeightIsNone(self):\n     with self.test_session():\n@@ -1060,7 +1060,7 @@\n         [[8, 1, 3], [7, 8, 9], [10, 11, 12]],\n     ])\n     self._test_valid_weights(\n-        labels, predictions, expected_loss=122.22222)\n+        labels, predictions, expected_loss=137.5)\n\n   def test3dWeightedScalar(self):\n     labels = np.array([\n@@ -1073,7 +1073,7 @@\n     ])\n     weight = 3.0\n     self._test_valid_weights(\n-        labels, predictions, expected_loss=weight * 122.22222,\n+        labels, predictions, expected_loss=weight * 137.5,\n         weights=weight)\n\n   def _test_invalid_weights(\n@@ -1124,7 +1124,7 @@\n     ])\n     self._test_valid_weights(\n         # TODO(ptucker): This doesn't look right.\n-        labels, predictions, expected_loss=9 * 122.22222,\n+        labels, predictions, expected_loss=9 * 137.5,\n         weights=np.ones((2, 3, 3)))\n\n   def testLossWithAllZeroBatchSpecificWeights(self):", "body": "@rmlarsen Do you want for me to open a new \"Pull request\"? To pass the test, `tensorflow/python/kernel_tests/losses_test.py` needs to be fixed as follows:\r\n\r\n    --- losses_test.py.orig 2018-02-01 18:10:54.865671816 +0900\r\n    +++ losses_test.py      2018-02-01 18:05:41.668652970 +0900\r\n    @@ -953,14 +953,14 @@\r\n         # Compute the expected loss 'manually'.\r\n         total = np.zeros((batch_size,))\r\n         for b in range(batch_size):\r\n    -      for i in range(dims):\r\n    -        for j in range(dims):\r\n    +      for i in range(dims-1):\r\n    +        for j in range(i+1, dims):\r\n               x = self._predictions[b, i].item() - self._predictions[b, j].item()\r\n               y = self._labels[b, i].item() - self._labels[b, j].item()\r\n               diff = (x - y)\r\n               total[b] += (diff * diff)\r\n\r\n    -    self._expected_losses = np.divide(total, 9.0)\r\n    +    self._expected_losses = np.divide(total, 3.0)\r\n\r\n       def testValueErrorThrownWhenWeightIsNone(self):\r\n         with self.test_session():\r\n    @@ -1060,7 +1060,7 @@\r\n             [[8, 1, 3], [7, 8, 9], [10, 11, 12]],\r\n         ])\r\n         self._test_valid_weights(\r\n    -        labels, predictions, expected_loss=122.22222)\r\n    +        labels, predictions, expected_loss=137.5)\r\n\r\n       def test3dWeightedScalar(self):\r\n         labels = np.array([\r\n    @@ -1073,7 +1073,7 @@\r\n         ])\r\n         weight = 3.0\r\n         self._test_valid_weights(\r\n    -        labels, predictions, expected_loss=weight * 122.22222,\r\n    +        labels, predictions, expected_loss=weight * 137.5,\r\n             weights=weight)\r\n\r\n       def _test_invalid_weights(\r\n    @@ -1124,7 +1124,7 @@\r\n         ])\r\n         self._test_valid_weights(\r\n             # TODO(ptucker): This doesn't look right.\r\n    -        labels, predictions, expected_loss=9 * 122.22222,\r\n    +        labels, predictions, expected_loss=9 * 137.5,\r\n             weights=np.ones((2, 3, 3)))\r\n\r\n       def testLossWithAllZeroBatchSpecificWeights(self):"}