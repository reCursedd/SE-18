{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/253976437", "html_url": "https://github.com/tensorflow/tensorflow/issues/3703#issuecomment-253976437", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3703", "id": 253976437, "node_id": "MDEyOklzc3VlQ29tbWVudDI1Mzk3NjQzNw==", "user": {"login": "zhedongzheng", "id": 16261331, "node_id": "MDQ6VXNlcjE2MjYxMzMx", "avatar_url": "https://avatars2.githubusercontent.com/u/16261331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhedongzheng", "html_url": "https://github.com/zhedongzheng", "followers_url": "https://api.github.com/users/zhedongzheng/followers", "following_url": "https://api.github.com/users/zhedongzheng/following{/other_user}", "gists_url": "https://api.github.com/users/zhedongzheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhedongzheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhedongzheng/subscriptions", "organizations_url": "https://api.github.com/users/zhedongzheng/orgs", "repos_url": "https://api.github.com/users/zhedongzheng/repos", "events_url": "https://api.github.com/users/zhedongzheng/events{/privacy}", "received_events_url": "https://api.github.com/users/zhedongzheng/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-15T10:40:58Z", "updated_at": "2016-10-15T10:40:58Z", "author_association": "NONE", "body_html": "<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">from</span> tensorflow.contrib.learn <span class=\"pl-k\">import</span> TensorFlowRNNRegressor\n<span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">rnn_input_fn</span>(<span class=\"pl-smi\">x</span>):\n    <span class=\"pl-k\">return</span> tf.split(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">5</span>, x)\n\nX <span class=\"pl-k\">=</span> [[<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">5</span>], [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">5</span>], [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">5</span>]]\ny <span class=\"pl-k\">=</span> [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>]\n\nX <span class=\"pl-k\">=</span> np.array(<span class=\"pl-c1\">list</span>(X), <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>np.int32)\ny <span class=\"pl-k\">=</span> np.array(<span class=\"pl-c1\">list</span>(y), <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>np.int32)\n\nregr <span class=\"pl-k\">=</span> TensorFlowRNNRegressor(<span class=\"pl-v\">n_classes</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">2</span>, <span class=\"pl-v\">rnn_size</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">10</span>, <span class=\"pl-v\">input_op_fn</span><span class=\"pl-k\">=</span>rnn_input_fn)\nregr.fit(X, y)</pre></div>\n<p>This is how I make this example work.</p>", "body_text": "import numpy as np\nfrom tensorflow.contrib.learn import TensorFlowRNNRegressor\nimport tensorflow as tf\n\ndef rnn_input_fn(x):\n    return tf.split(1, 5, x)\n\nX = [[1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]]\ny = [1, 1, 1]\n\nX = np.array(list(X), dtype=np.int32)\ny = np.array(list(y), dtype=np.int32)\n\nregr = TensorFlowRNNRegressor(n_classes=2, rnn_size=10, input_op_fn=rnn_input_fn)\nregr.fit(X, y)\nThis is how I make this example work.", "body": "``` python\nimport numpy as np\nfrom tensorflow.contrib.learn import TensorFlowRNNRegressor\nimport tensorflow as tf\n\ndef rnn_input_fn(x):\n    return tf.split(1, 5, x)\n\nX = [[1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]]\ny = [1, 1, 1]\n\nX = np.array(list(X), dtype=np.int32)\ny = np.array(list(y), dtype=np.int32)\n\nregr = TensorFlowRNNRegressor(n_classes=2, rnn_size=10, input_op_fn=rnn_input_fn)\nregr.fit(X, y)\n```\n\nThis is how I make this example work.\n"}