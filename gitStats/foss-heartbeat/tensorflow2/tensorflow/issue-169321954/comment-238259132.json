{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/238259132", "html_url": "https://github.com/tensorflow/tensorflow/issues/3638#issuecomment-238259132", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3638", "id": 238259132, "node_id": "MDEyOklzc3VlQ29tbWVudDIzODI1OTEzMg==", "user": {"login": "ibab", "id": 890531, "node_id": "MDQ6VXNlcjg5MDUzMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/890531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibab", "html_url": "https://github.com/ibab", "followers_url": "https://api.github.com/users/ibab/followers", "following_url": "https://api.github.com/users/ibab/following{/other_user}", "gists_url": "https://api.github.com/users/ibab/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibab/subscriptions", "organizations_url": "https://api.github.com/users/ibab/orgs", "repos_url": "https://api.github.com/users/ibab/repos", "events_url": "https://api.github.com/users/ibab/events{/privacy}", "received_events_url": "https://api.github.com/users/ibab/received_events", "type": "User", "site_admin": false}, "created_at": "2016-08-08T14:42:00Z", "updated_at": "2016-08-08T14:42:00Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6200749\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/hholst80\">@hholst80</a>: You can only put <code>NaN</code> into the output if <code>T</code> is a floating point type, so I'm afraid that the idea can't work for all types :(</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=15736910\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zheng-xq\">@zheng-xq</a>: Do you know whether it's possible to somehow signal an error in TensorFlow after <code>OpKernel::Compute()</code> has already finished? It seems that this might not be possible through the <code>OpKernelContext</code>, as it's only guaranteed to live roughly until the end of <code>OpKernel::Compute()</code>.<br>\nFrom reading the <code>Executor</code> code at <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/00700f00fdf71baec1342d1afd7849e16fbd2a33/tensorflow/core/common_runtime/executor.cc#L1210\">tensorflow/tensorflow/core/common_runtime/executor.cc</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 1210\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/00700f00fdf71baec1342d1afd7849e16fbd2a33\">00700f0</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L1210\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1210\"></td>\n          <td id=\"LC1210\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> device-&gt;<span class=\"pl-c1\">Compute</span>(<span class=\"pl-c1\">CHECK_NOTNULL</span>(op_kernel), &amp;ctx); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n it doesn't seem like there's an opportunity to pass a <code>Status</code> from our asynchronous functor to the <code>Executor</code>, but I might be wrong here.</p>", "body_text": "@hholst80: You can only put NaN into the output if T is a floating point type, so I'm afraid that the idea can't work for all types :(\n@zheng-xq: Do you know whether it's possible to somehow signal an error in TensorFlow after OpKernel::Compute() has already finished? It seems that this might not be possible through the OpKernelContext, as it's only guaranteed to live roughly until the end of OpKernel::Compute().\nFrom reading the Executor code at \n  \n    \n      tensorflow/tensorflow/core/common_runtime/executor.cc\n    \n    \n         Line 1210\n      in\n      00700f0\n    \n    \n    \n    \n\n        \n          \n           device->Compute(CHECK_NOTNULL(op_kernel), &ctx); \n        \n    \n  \n\n it doesn't seem like there's an opportunity to pass a Status from our asynchronous functor to the Executor, but I might be wrong here.", "body": "@hholst80: You can only put `NaN` into the output if `T` is a floating point type, so I'm afraid that the idea can't work for all types :(\n\n@zheng-xq: Do you know whether it's possible to somehow signal an error in TensorFlow after `OpKernel::Compute()` has already finished? It seems that this might not be possible through the `OpKernelContext`, as it's only guaranteed to live roughly until the end of `OpKernel::Compute()`.\nFrom reading the `Executor` code at https://github.com/tensorflow/tensorflow/blob/00700f00fdf71baec1342d1afd7849e16fbd2a33/tensorflow/core/common_runtime/executor.cc#L1210 it doesn't seem like there's an opportunity to pass a `Status` from our asynchronous functor to the `Executor`, but I might be wrong here.\n"}