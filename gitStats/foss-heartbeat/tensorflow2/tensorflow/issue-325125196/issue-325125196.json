{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19448", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19448/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19448/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19448/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19448", "id": 325125196, "node_id": "MDU6SXNzdWUzMjUxMjUxOTY=", "number": 19448, "title": "In TF Stylize demo,I replace the camera captured bitmap with a predefined one,but not work", "user": {"login": "GL1920", "id": 29230625, "node_id": "MDQ6VXNlcjI5MjMwNjI1", "avatar_url": "https://avatars3.githubusercontent.com/u/29230625?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GL1920", "html_url": "https://github.com/GL1920", "followers_url": "https://api.github.com/users/GL1920/followers", "following_url": "https://api.github.com/users/GL1920/following{/other_user}", "gists_url": "https://api.github.com/users/GL1920/gists{/gist_id}", "starred_url": "https://api.github.com/users/GL1920/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GL1920/subscriptions", "organizations_url": "https://api.github.com/users/GL1920/orgs", "repos_url": "https://api.github.com/users/GL1920/repos", "events_url": "https://api.github.com/users/GL1920/events{/privacy}", "received_events_url": "https://api.github.com/users/GL1920/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-05-22T03:07:15Z", "updated_at": "2018-06-04T22:28:40Z", "closed_at": "2018-06-04T22:28:39Z", "author_association": "NONE", "body_html": "<p>I replace the camera captured bitmap with a predefined one,but not work.<br>\nThe code changes as follows:<br>\n`@TargetApi(Build.VERSION_CODES.LOLLIPOP)<br>\npublic class StylizeActivity  extends Activity  {</p>\n<p>private static final Logger LOGGER = new Logger();</p>\n<p>private static final String MODEL_FILE = \"file:///android_asset/stylize_quantized.pb\";<br>\nprivate static final String INPUT_NODE = \"input\";<br>\nprivate static final String STYLE_NODE = \"style_num\";<br>\nprivate static final String OUTPUT_NODE = \"transformer/expand/conv3/conv/Sigmoid\";<br>\nprivate static final int NUM_STYLES = 26;</p>\n<p>private static final boolean SAVE_PREVIEW_BITMAP = false;<br>\nprivate static final boolean NORMALIZE_SLIDERS = true;</p>\n<p>private static final float TEXT_SIZE_DIP = 12;</p>\n<p>private static final boolean DEBUG_MODEL = false;<br>\nprivate Handler handler;<br>\nprivate HandlerThread handlerThread;<br>\nprivate int desiredSize = 256;<br>\nprivate long lastProcessingTimeMs;<br>\nprivate final float[] styleVals = new float[NUM_STYLES];<br>\nprivate int[] intValues;<br>\nprivate float[] floatValues;</p>\n<p>private int frameNum = 0;<br>\nprivate ImageView imageView;</p>\n<p>private Bitmap textureCopyBitmap;<br>\nprivate Bitmap bitmap;<br>\nprivate Bitmap newbm;<br>\nprivate Bitmap test;</p>\n<p>private TensorFlowInferenceInterface inferenceInterface;</p>\n<p>private int lastOtherStyle = 1;</p>\n<p>private boolean allZero = false;</p>\n<p>private ImageGridAdapter adapter;<br>\nprivate GridView grid;<br>\nprivate int[] rgbBytes = null;<br>\nprivate Runnable imageConverter;<br>\n// which image<br>\nint position_now;<br>\n// image url<br>\nString url = null;<br>\nprivate Boolean debug=false;</p>\n<p>private final OnTouchListener gridTouchAdapter =<br>\nnew OnTouchListener() {<br>\nImageSlider slider = null;</p>\n<pre><code>        @Override\n        public boolean onTouch(final View v, final MotionEvent event) {\n          switch (event.getActionMasked()) {\n            case MotionEvent.ACTION_DOWN:\n              for (int i = 0; i &lt; NUM_STYLES; ++i) {\n                final ImageSlider child = adapter.items[i];\n                final Rect rect = new Rect();\n                child.getHitRect(rect);\n                if (rect.contains((int) event.getX(), (int) event.getY())) {\n                  slider = child;\n                  slider.setHilighted(true);\n                }\n              }\n              **chuli();**\n              break;\n\n            case MotionEvent.ACTION_MOVE:\n              if (slider != null) {\n                final Rect rect = new Rect();\n                slider.getHitRect(rect);\n\n                final float newSliderVal =\n                        (float)\n                                Math.min(\n                                        1.0,\n                                        Math.max(\n                                                0.0, 1.0 - (event.getY() - slider.getTop()) / slider.getHeight()));\n\n                setStyle(slider, newSliderVal);\n              }\n              **chuli();**\n              break;\n\n            case MotionEvent.ACTION_UP:\n              if (slider != null) {\n                slider.setHilighted(false);\n                slider = null;\n              }\n              **chuli();**\n              break;\n\n            default: // fall out\n\n          }\n          return true;\n        }\n      };\n</code></pre>\n<p>private int previewWidth;<br>\nprivate int previewHeight;</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=27325127\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/override\">@override</a><br>\nprotected void onCreate(Bundle savedInstanceState) {<br>\nsuper.onCreate(savedInstanceState);<br>\nsetContentView(R.layout.camera_connection_fragment_stylize);<br>\n// get intent information<br>\ngetMessage();<br>\ninitView();</p>\n<p>}</p>\n<p>private void initView(){<br>\nadapter = new ImageGridAdapter();<br>\ngrid = (GridView) findViewById(R.id.grid_layout);<br>\ngrid.setAdapter(adapter);<br>\ngrid.setOnTouchListener(gridTouchAdapter);<br>\nimageView=(ImageView)findViewById(R.id.ivs);<br>\ninferenceInterface = new TensorFlowInferenceInterface(getAssets(), MODEL_FILE);</p>\n<p>intValues = new int[desiredSize * desiredSize];<br>\nfloatValues = new float[desiredSize * desiredSize * 3];<br>\nBitmapFactory.Options options = new BitmapFactory.Options();<br>\noptions.inPreferredConfig = Config.ARGB_8888;<br>\nbitmap = BitmapFactory.decodeFile(url, options);<br>\npreviewWidth=bitmap.getWidth();<br>\npreviewHeight=bitmap.getHeight();</p>\n<p><strong>newbm=Bitmap.createScaledBitmap(bitmap,desiredSize,desiredSize,true);</strong><br>\n**imageView.setImageBitmap(bitmap);</p>\n<p>if(textureCopyBitmap!=null){<br>\ntest=big(textureCopyBitmap);<br>\nimageView.setImageBitmap(test);<br>\n}**</p>\n<p>}<br>\nprivate  Bitmap big(Bitmap bitmap) {<br>\nMatrix matrix = new Matrix();<br>\nmatrix.postScale(2.f,2.f); //\u957f\u548c\u5bbd\u653e\u5927\u7f29\u5c0f\u7684\u6bd4\u4f8b<br>\nBitmap resizeBmp = Bitmap.createBitmap(bitmap,0,0,bitmap.getWidth(),bitmap.getHeight(),matrix,true);<br>\nreturn resizeBmp;<br>\n}<br>\nprivate void chuli(){<br>\nrunInBackground(<br>\nnew Runnable() {<br>\n<a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=27325127\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/override\">@override</a><br>\npublic void run() {<br>\nfinal long startTime = SystemClock.uptimeMillis();<br>\nstylizeImage(newbm);<br>\nlastProcessingTimeMs = SystemClock.uptimeMillis() - startTime;<br>\ntextureCopyBitmap = Bitmap.createBitmap(newbm);<br>\nrequestRender();</p>\n<pre><code>        }\n      });\n</code></pre>\n<p>}<br>\nprotected void getMessage() {<br>\nIntent intent = getIntent();<br>\ntry {<br>\nposition_now = intent.getIntExtra(\"position\", -1);<br>\nurl  = intent.getStringExtra(\"url\");<br>\n} catch (Exception e) {<br>\nLog.d(\"ERROR: \", \"\" + e);<br>\n}<br>\nLog.d(\"Info: \", \"\" + position_now + \" \" + url);<br>\n}</p>\n<p>private static Bitmap getBitmapFromAsset(final Context context, final String filePath) {<br>\nfinal AssetManager assetManager = context.getAssets();</p>\n<pre><code>Bitmap bitmap = null;\ntry {\n  final InputStream inputStream = assetManager.open(filePath);\n  bitmap = BitmapFactory.decodeStream(inputStream);\n} catch (final IOException e) {\n  LOGGER.e(\"Error opening bitmap!\", e);\n}\n\nreturn bitmap;\n</code></pre>\n<p>}</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=27325127\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/override\">@override</a><br>\npublic synchronized void onStart() {<br>\nLOGGER.d(\"onStart \" + this);<br>\nsuper.onStart();<br>\n}</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=27325127\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/override\">@override</a><br>\npublic synchronized void onResume() {<br>\nLOGGER.d(\"onResume \" + this);<br>\nsuper.onResume();</p>\n<pre><code>handlerThread = new HandlerThread(\"inference\");\nhandlerThread.start();\nhandler = new Handler(handlerThread.getLooper());\n</code></pre>\n<p>}</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=27325127\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/override\">@override</a><br>\npublic synchronized void onPause() {<br>\nLOGGER.d(\"onPause \" + this);</p>\n<pre><code>if (!isFinishing()) {\n  LOGGER.d(\"Requesting finish\");\n  finish();\n}\n\nhandlerThread.quitSafely();\ntry {\n  handlerThread.join();\n  handlerThread = null;\n  handler = null;\n} catch (final InterruptedException e) {\n  LOGGER.e(e, \"Exception!\");\n}\n\nsuper.onPause();\n</code></pre>\n<p>}</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=27325127\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/override\">@override</a><br>\npublic synchronized void onStop() {<br>\nLOGGER.d(\"onStop \" + this);<br>\nsuper.onStop();<br>\n}</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=27325127\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/override\">@override</a><br>\npublic synchronized void onDestroy() {<br>\nLOGGER.d(\"onDestroy \" + this);<br>\nsuper.onDestroy();<br>\n}</p>\n<p>protected synchronized void runInBackground(final Runnable r) {<br>\nif (handler != null) {<br>\nhandler.post(r);<br>\n}<br>\n}</p>\n<p>//gridview imagestyle<br>\nprivate class ImageSlider extends android.support.v7.widget.AppCompatImageView {<br>\nprivate float value = 0.0f;<br>\nprivate boolean hilighted = false;</p>\n<pre><code>private final Paint boxPaint;\nprivate final Paint linePaint;\n\npublic ImageSlider(final Context context) {\n  super(context);\n  value = 0.0f;\n\n  boxPaint = new Paint();\n  boxPaint.setColor(Color.BLACK);\n  boxPaint.setAlpha(128);\n\n  linePaint = new Paint();\n  linePaint.setColor(Color.WHITE);\n  linePaint.setStrokeWidth(10.0f);\n  linePaint.setStyle(Style.STROKE);\n}\n\n@Override\npublic void onDraw(final Canvas canvas) {\n  super.onDraw(canvas);\n  final float y = (1.0f - value) * canvas.getHeight();\n\n  // If all sliders are zero, don't bother shading anything.\n  if (!allZero) {\n    canvas.drawRect(0, 0, canvas.getWidth(), y, boxPaint);\n  }\n\n  if (value &gt; 0.0f) {\n    canvas.drawLine(0, y, canvas.getWidth(), y, linePaint);\n  }\n\n  if (hilighted) {\n    canvas.drawRect(0, 0, getWidth(), getHeight(), linePaint);\n  }\n}\n\n@Override\nprotected void onMeasure(final int widthMeasureSpec, final int heightMeasureSpec) {\n  super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n  setMeasuredDimension(getMeasuredWidth(), getMeasuredWidth());\n}\n\npublic void setValue(final float value) {\n  this.value = value;\n  postInvalidate();\n}\n\npublic void setHilighted(final boolean highlighted) {\n  this.hilighted = highlighted;\n  this.postInvalidate();\n}\n</code></pre>\n<p>}</p>\n<p>public void requestRender() {<br>\nfinal OverlayView overlay = (OverlayView) findViewById(R.id.debug_overlay);<br>\nif (overlay != null) {<br>\noverlay.postInvalidate();<br>\n}<br>\n}</p>\n<p>public void addCallback(final OverlayView.DrawCallback callback) {<br>\nfinal OverlayView overlay = (OverlayView) findViewById(R.id.debug_overlay);<br>\nif (overlay != null) {<br>\noverlay.addCallback(callback);<br>\n}<br>\n}</p>\n<p>private class ImageGridAdapter extends BaseAdapter {<br>\nfinal ImageSlider[] items = new ImageSlider[NUM_STYLES];<br>\nfinal ArrayList buttons = new ArrayList&lt;&gt;();</p><p></p>\n<pre><code>{\n  final Button saveButton =\n      new android.support.v7.widget.AppCompatButton(StylizeActivity.this) {\n        @Override\n        protected void onMeasure(final int widthMeasureSpec, final int heightMeasureSpec) {\n          super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n          setMeasuredDimension(getMeasuredWidth(), getMeasuredWidth());\n        }\n      };\n  saveButton.setText(\"save\");\n  saveButton.setTextSize(12);\n\n  saveButton.setOnClickListener(\n      new OnClickListener() {\n        @Override\n        public void onClick(final View v) {\n          if ( test != null) {\n            // TODO(andrewharp): Save as jpeg with guaranteed unique filename.\n            ImageUtils.saveBitmap(test, \"stylized\" + url + \".png\");\n            Toast.makeText(\n                    StylizeActivity.this,\n                    \"Saved image to: /sdcard/tensorflow/\" + \"stylized\" + url + \".png\",\n                    Toast.LENGTH_LONG)\n                .show();\n          }\n        }\n      });\n\n\n  buttons.add(saveButton);\n\n  for (int i = 0; i &lt; NUM_STYLES; ++i) {\n    LOGGER.v(\"Creating item %d\", i);\n\n    if (items[i] == null) {\n      final ImageSlider slider = new ImageSlider(StylizeActivity.this);\n      final Bitmap bm =\n          getBitmapFromAsset(StylizeActivity.this, \"thumbnails/style\" + i + \".jpg\");\n      slider.setImageBitmap(bm);\n\n      items[i] = slider;\n    }\n  }\n}\n\n@Override\npublic int getCount() {\n  return buttons.size() + NUM_STYLES;\n}\n\n@Override\npublic Object getItem(final int position) {\n  if (position &lt; buttons.size()) {\n    return buttons.get(position);\n  } else {\n    return items[position - buttons.size()];\n  }\n}\n\n@Override\npublic long getItemId(final int position) {\n  return getItem(position).hashCode();\n}\n\n@Override\npublic View getView(final int position, final View convertView, final ViewGroup parent) {\n  if (convertView != null) {\n    return convertView;\n  }\n  return (View) getItem(position);\n}\n</code></pre>\n<p>}</p>\n<p>private void setStyle(final ImageSlider slider, final float value) {<br>\nslider.setValue(value);</p>\n<pre><code>if (NORMALIZE_SLIDERS) {\n  // Slider vals correspond directly to the input tensor vals, and normalization is visually\n  // maintained by remanipulating non-selected sliders.\n  float otherSum = 0.0f;\n\n  for (int i = 0; i &lt; NUM_STYLES; ++i) {\n    if (adapter.items[i] != slider) {\n      otherSum += adapter.items[i].value;\n    }\n  }\n\n  if (otherSum &gt; 0.0) {\n    float highestOtherVal = 0;\n    final float factor = otherSum &gt; 0.0f ? (1.0f - value) / otherSum : 0.0f;\n    for (int i = 0; i &lt; NUM_STYLES; ++i) {\n      final ImageSlider child = adapter.items[i];\n      if (child == slider) {\n        continue;\n      }\n      final float newVal = child.value * factor;\n      child.setValue(newVal &gt; 0.01f ? newVal : 0.0f);\n\n      if (child.value &gt; highestOtherVal) {\n        lastOtherStyle = i;\n        highestOtherVal = child.value;\n      }\n    }\n  } else {\n    // Everything else is 0, so just pick a suitable slider to push up when the\n    // selected one goes down.\n    if (adapter.items[lastOtherStyle] == slider) {\n      lastOtherStyle = (lastOtherStyle + 1) % NUM_STYLES;\n    }\n    adapter.items[lastOtherStyle].setValue(1.0f - value);\n  }\n}\n\nfinal boolean lastAllZero = allZero;\nfloat sum = 0.0f;\nfor (int i = 0; i &lt; NUM_STYLES; ++i) {\n  sum += adapter.items[i].value;\n}\nallZero = sum == 0.0f;\n\n// Now update the values used for the input tensor. If nothing is set, mix in everything\n// equally. Otherwise everything is normalized to sum to 1.0.\nfor (int i = 0; i &lt; NUM_STYLES; ++i) {\n  styleVals[i] = allZero ? 1.0f / NUM_STYLES : adapter.items[i].value / sum;\n\n  if (lastAllZero != allZero) {\n    adapter.items[i].postInvalidate();\n  }\n}\n</code></pre>\n<p>}</p>\n<p>public boolean isDebug() {<br>\nreturn debug;<br>\n}</p>\n<p>private void stylizeImage(final Bitmap bitmap) {<br>\n++frameNum;<br>\nbitmap.getPixels(intValues, 0, bitmap.getWidth(), 0, 0, bitmap.getWidth(), bitmap.getHeight());</p>\n<pre><code>if (DEBUG_MODEL) {\n  // Create a white square that steps through a black background 1 pixel per frame.\n  final int centerX = (frameNum + bitmap.getWidth() / 2) % bitmap.getWidth();\n  final int centerY = bitmap.getHeight() / 2;\n  final int squareSize = 10;\n  for (int i = 0; i &lt; intValues.length; ++i) {\n    final int x = i % bitmap.getWidth();\n    final int y = i / bitmap.getHeight();\n    final float val =\n        Math.abs(x - centerX) &lt; squareSize &amp;&amp; Math.abs(y - centerY) &lt; squareSize ? 1.0f : 0.0f;\n    floatValues[i * 3] = val;\n    floatValues[i * 3 + 1] = val;\n    floatValues[i * 3 + 2] = val;\n  }\n} else {\n  for (int i = 0; i &lt; intValues.length; ++i) {\n    final int val = intValues[i];\n    floatValues[i * 3] = ((val &gt;&gt; 16) &amp; 0xFF) / 255.0f;\n    floatValues[i * 3 + 1] = ((val &gt;&gt; 8) &amp; 0xFF) / 255.0f;\n    floatValues[i * 3 + 2] = (val &amp; 0xFF) / 255.0f;\n  }\n}\n\n// Copy the input data into TensorFlow.\nLOGGER.i(\"Width: %s , Height: %s\", bitmap.getWidth(), bitmap.getHeight());\ninferenceInterface.feed(\n    INPUT_NODE, floatValues, 1, bitmap.getWidth(), bitmap.getHeight(), 3);\ninferenceInterface.feed(STYLE_NODE, styleVals, NUM_STYLES);\ninferenceInterface.run(new String[] {OUTPUT_NODE}, isDebug());\ninferenceInterface.fetch(OUTPUT_NODE, floatValues);\nfor (int i = 0; i &lt; intValues.length; ++i) {\n  intValues[i] =\n      0xFF000000\n          | (((int) (floatValues[i * 3] * 255)) &lt;&lt; 16)\n          | (((int) (floatValues[i * 3 + 1] * 255)) &lt;&lt; 8)\n          | ((int) (floatValues[i * 3 + 2] * 255));\n}\n\nbitmap.setPixels(intValues, 0, bitmap.getWidth(), 0, 0, bitmap.getWidth(), bitmap.getHeight());\n</code></pre>\n<p>}</p>\n<p>public void onSetDebug(final boolean debug) {}<br>\n<a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=27325127\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/override\">@override</a><br>\npublic boolean onKeyDown(int keyCode, KeyEvent event) {<br>\nint moveOffset = 0;<br>\nswitch (keyCode) {<br>\ncase KeyEvent.KEYCODE_DPAD_LEFT:<br>\nmoveOffset = -1;<br>\nbreak;<br>\ncase KeyEvent.KEYCODE_DPAD_RIGHT:<br>\nmoveOffset = 1;<br>\nbreak;<br>\ncase KeyEvent.KEYCODE_DPAD_UP:<br>\nmoveOffset = -1 * grid.getNumColumns();<br>\nbreak;<br>\ncase KeyEvent.KEYCODE_DPAD_DOWN:<br>\nmoveOffset = grid.getNumColumns();<br>\nbreak;<br>\ndefault:<br>\n<strong>if (keyCode == KeyEvent.KEYCODE_VOLUME_DOWN || keyCode == KeyEvent.KEYCODE_VOLUME_UP<br>\n|| keyCode == KeyEvent.KEYCODE_BUTTON_L1 || keyCode == KeyEvent.KEYCODE_DPAD_CENTER) {<br>\ndebug = !debug;<br>\nrequestRender();<br>\nonSetDebug(debug);<br>\nreturn true;<br>\n}</strong><br>\nreturn super.onKeyDown(keyCode, event);<br>\n}</p>\n<pre><code>// get the highest selected style\nint currentSelect = 0;\nfloat highestValue = 0;\nfor (int i = 0; i &lt; adapter.getCount(); i++) {\n  if (adapter.items[i].value &gt; highestValue) {\n    currentSelect = i;\n    highestValue = adapter.items[i].value;\n  }\n}\nsetStyle(adapter.items[(currentSelect + moveOffset + adapter.getCount()) % adapter.getCount()], 1);\n\nreturn true;\n</code></pre>\n<p>}</p>\n<p>}<br>\n`<br>\nI preprocessed the bitmap and resized it to(256,256).But when I touch the grideview ,nothing happend. So I want to know how should I modify it so that it can achieve stylize??</p><p></p>", "body_text": "I replace the camera captured bitmap with a predefined one,but not work.\nThe code changes as follows:\n`@TargetApi(Build.VERSION_CODES.LOLLIPOP)\npublic class StylizeActivity  extends Activity  {\nprivate static final Logger LOGGER = new Logger();\nprivate static final String MODEL_FILE = \"file:///android_asset/stylize_quantized.pb\";\nprivate static final String INPUT_NODE = \"input\";\nprivate static final String STYLE_NODE = \"style_num\";\nprivate static final String OUTPUT_NODE = \"transformer/expand/conv3/conv/Sigmoid\";\nprivate static final int NUM_STYLES = 26;\nprivate static final boolean SAVE_PREVIEW_BITMAP = false;\nprivate static final boolean NORMALIZE_SLIDERS = true;\nprivate static final float TEXT_SIZE_DIP = 12;\nprivate static final boolean DEBUG_MODEL = false;\nprivate Handler handler;\nprivate HandlerThread handlerThread;\nprivate int desiredSize = 256;\nprivate long lastProcessingTimeMs;\nprivate final float[] styleVals = new float[NUM_STYLES];\nprivate int[] intValues;\nprivate float[] floatValues;\nprivate int frameNum = 0;\nprivate ImageView imageView;\nprivate Bitmap textureCopyBitmap;\nprivate Bitmap bitmap;\nprivate Bitmap newbm;\nprivate Bitmap test;\nprivate TensorFlowInferenceInterface inferenceInterface;\nprivate int lastOtherStyle = 1;\nprivate boolean allZero = false;\nprivate ImageGridAdapter adapter;\nprivate GridView grid;\nprivate int[] rgbBytes = null;\nprivate Runnable imageConverter;\n// which image\nint position_now;\n// image url\nString url = null;\nprivate Boolean debug=false;\nprivate final OnTouchListener gridTouchAdapter =\nnew OnTouchListener() {\nImageSlider slider = null;\n        @Override\n        public boolean onTouch(final View v, final MotionEvent event) {\n          switch (event.getActionMasked()) {\n            case MotionEvent.ACTION_DOWN:\n              for (int i = 0; i < NUM_STYLES; ++i) {\n                final ImageSlider child = adapter.items[i];\n                final Rect rect = new Rect();\n                child.getHitRect(rect);\n                if (rect.contains((int) event.getX(), (int) event.getY())) {\n                  slider = child;\n                  slider.setHilighted(true);\n                }\n              }\n              **chuli();**\n              break;\n\n            case MotionEvent.ACTION_MOVE:\n              if (slider != null) {\n                final Rect rect = new Rect();\n                slider.getHitRect(rect);\n\n                final float newSliderVal =\n                        (float)\n                                Math.min(\n                                        1.0,\n                                        Math.max(\n                                                0.0, 1.0 - (event.getY() - slider.getTop()) / slider.getHeight()));\n\n                setStyle(slider, newSliderVal);\n              }\n              **chuli();**\n              break;\n\n            case MotionEvent.ACTION_UP:\n              if (slider != null) {\n                slider.setHilighted(false);\n                slider = null;\n              }\n              **chuli();**\n              break;\n\n            default: // fall out\n\n          }\n          return true;\n        }\n      };\n\nprivate int previewWidth;\nprivate int previewHeight;\n@override\nprotected void onCreate(Bundle savedInstanceState) {\nsuper.onCreate(savedInstanceState);\nsetContentView(R.layout.camera_connection_fragment_stylize);\n// get intent information\ngetMessage();\ninitView();\n}\nprivate void initView(){\nadapter = new ImageGridAdapter();\ngrid = (GridView) findViewById(R.id.grid_layout);\ngrid.setAdapter(adapter);\ngrid.setOnTouchListener(gridTouchAdapter);\nimageView=(ImageView)findViewById(R.id.ivs);\ninferenceInterface = new TensorFlowInferenceInterface(getAssets(), MODEL_FILE);\nintValues = new int[desiredSize * desiredSize];\nfloatValues = new float[desiredSize * desiredSize * 3];\nBitmapFactory.Options options = new BitmapFactory.Options();\noptions.inPreferredConfig = Config.ARGB_8888;\nbitmap = BitmapFactory.decodeFile(url, options);\npreviewWidth=bitmap.getWidth();\npreviewHeight=bitmap.getHeight();\nnewbm=Bitmap.createScaledBitmap(bitmap,desiredSize,desiredSize,true);\n**imageView.setImageBitmap(bitmap);\nif(textureCopyBitmap!=null){\ntest=big(textureCopyBitmap);\nimageView.setImageBitmap(test);\n}**\n}\nprivate  Bitmap big(Bitmap bitmap) {\nMatrix matrix = new Matrix();\nmatrix.postScale(2.f,2.f); //\u957f\u548c\u5bbd\u653e\u5927\u7f29\u5c0f\u7684\u6bd4\u4f8b\nBitmap resizeBmp = Bitmap.createBitmap(bitmap,0,0,bitmap.getWidth(),bitmap.getHeight(),matrix,true);\nreturn resizeBmp;\n}\nprivate void chuli(){\nrunInBackground(\nnew Runnable() {\n@override\npublic void run() {\nfinal long startTime = SystemClock.uptimeMillis();\nstylizeImage(newbm);\nlastProcessingTimeMs = SystemClock.uptimeMillis() - startTime;\ntextureCopyBitmap = Bitmap.createBitmap(newbm);\nrequestRender();\n        }\n      });\n\n}\nprotected void getMessage() {\nIntent intent = getIntent();\ntry {\nposition_now = intent.getIntExtra(\"position\", -1);\nurl  = intent.getStringExtra(\"url\");\n} catch (Exception e) {\nLog.d(\"ERROR: \", \"\" + e);\n}\nLog.d(\"Info: \", \"\" + position_now + \" \" + url);\n}\nprivate static Bitmap getBitmapFromAsset(final Context context, final String filePath) {\nfinal AssetManager assetManager = context.getAssets();\nBitmap bitmap = null;\ntry {\n  final InputStream inputStream = assetManager.open(filePath);\n  bitmap = BitmapFactory.decodeStream(inputStream);\n} catch (final IOException e) {\n  LOGGER.e(\"Error opening bitmap!\", e);\n}\n\nreturn bitmap;\n\n}\n@override\npublic synchronized void onStart() {\nLOGGER.d(\"onStart \" + this);\nsuper.onStart();\n}\n@override\npublic synchronized void onResume() {\nLOGGER.d(\"onResume \" + this);\nsuper.onResume();\nhandlerThread = new HandlerThread(\"inference\");\nhandlerThread.start();\nhandler = new Handler(handlerThread.getLooper());\n\n}\n@override\npublic synchronized void onPause() {\nLOGGER.d(\"onPause \" + this);\nif (!isFinishing()) {\n  LOGGER.d(\"Requesting finish\");\n  finish();\n}\n\nhandlerThread.quitSafely();\ntry {\n  handlerThread.join();\n  handlerThread = null;\n  handler = null;\n} catch (final InterruptedException e) {\n  LOGGER.e(e, \"Exception!\");\n}\n\nsuper.onPause();\n\n}\n@override\npublic synchronized void onStop() {\nLOGGER.d(\"onStop \" + this);\nsuper.onStop();\n}\n@override\npublic synchronized void onDestroy() {\nLOGGER.d(\"onDestroy \" + this);\nsuper.onDestroy();\n}\nprotected synchronized void runInBackground(final Runnable r) {\nif (handler != null) {\nhandler.post(r);\n}\n}\n//gridview imagestyle\nprivate class ImageSlider extends android.support.v7.widget.AppCompatImageView {\nprivate float value = 0.0f;\nprivate boolean hilighted = false;\nprivate final Paint boxPaint;\nprivate final Paint linePaint;\n\npublic ImageSlider(final Context context) {\n  super(context);\n  value = 0.0f;\n\n  boxPaint = new Paint();\n  boxPaint.setColor(Color.BLACK);\n  boxPaint.setAlpha(128);\n\n  linePaint = new Paint();\n  linePaint.setColor(Color.WHITE);\n  linePaint.setStrokeWidth(10.0f);\n  linePaint.setStyle(Style.STROKE);\n}\n\n@Override\npublic void onDraw(final Canvas canvas) {\n  super.onDraw(canvas);\n  final float y = (1.0f - value) * canvas.getHeight();\n\n  // If all sliders are zero, don't bother shading anything.\n  if (!allZero) {\n    canvas.drawRect(0, 0, canvas.getWidth(), y, boxPaint);\n  }\n\n  if (value > 0.0f) {\n    canvas.drawLine(0, y, canvas.getWidth(), y, linePaint);\n  }\n\n  if (hilighted) {\n    canvas.drawRect(0, 0, getWidth(), getHeight(), linePaint);\n  }\n}\n\n@Override\nprotected void onMeasure(final int widthMeasureSpec, final int heightMeasureSpec) {\n  super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n  setMeasuredDimension(getMeasuredWidth(), getMeasuredWidth());\n}\n\npublic void setValue(final float value) {\n  this.value = value;\n  postInvalidate();\n}\n\npublic void setHilighted(final boolean highlighted) {\n  this.hilighted = highlighted;\n  this.postInvalidate();\n}\n\n}\npublic void requestRender() {\nfinal OverlayView overlay = (OverlayView) findViewById(R.id.debug_overlay);\nif (overlay != null) {\noverlay.postInvalidate();\n}\n}\npublic void addCallback(final OverlayView.DrawCallback callback) {\nfinal OverlayView overlay = (OverlayView) findViewById(R.id.debug_overlay);\nif (overlay != null) {\noverlay.addCallback(callback);\n}\n}\nprivate class ImageGridAdapter extends BaseAdapter {\nfinal ImageSlider[] items = new ImageSlider[NUM_STYLES];\nfinal ArrayList buttons = new ArrayList<>();\n{\n  final Button saveButton =\n      new android.support.v7.widget.AppCompatButton(StylizeActivity.this) {\n        @Override\n        protected void onMeasure(final int widthMeasureSpec, final int heightMeasureSpec) {\n          super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n          setMeasuredDimension(getMeasuredWidth(), getMeasuredWidth());\n        }\n      };\n  saveButton.setText(\"save\");\n  saveButton.setTextSize(12);\n\n  saveButton.setOnClickListener(\n      new OnClickListener() {\n        @Override\n        public void onClick(final View v) {\n          if ( test != null) {\n            // TODO(andrewharp): Save as jpeg with guaranteed unique filename.\n            ImageUtils.saveBitmap(test, \"stylized\" + url + \".png\");\n            Toast.makeText(\n                    StylizeActivity.this,\n                    \"Saved image to: /sdcard/tensorflow/\" + \"stylized\" + url + \".png\",\n                    Toast.LENGTH_LONG)\n                .show();\n          }\n        }\n      });\n\n\n  buttons.add(saveButton);\n\n  for (int i = 0; i < NUM_STYLES; ++i) {\n    LOGGER.v(\"Creating item %d\", i);\n\n    if (items[i] == null) {\n      final ImageSlider slider = new ImageSlider(StylizeActivity.this);\n      final Bitmap bm =\n          getBitmapFromAsset(StylizeActivity.this, \"thumbnails/style\" + i + \".jpg\");\n      slider.setImageBitmap(bm);\n\n      items[i] = slider;\n    }\n  }\n}\n\n@Override\npublic int getCount() {\n  return buttons.size() + NUM_STYLES;\n}\n\n@Override\npublic Object getItem(final int position) {\n  if (position < buttons.size()) {\n    return buttons.get(position);\n  } else {\n    return items[position - buttons.size()];\n  }\n}\n\n@Override\npublic long getItemId(final int position) {\n  return getItem(position).hashCode();\n}\n\n@Override\npublic View getView(final int position, final View convertView, final ViewGroup parent) {\n  if (convertView != null) {\n    return convertView;\n  }\n  return (View) getItem(position);\n}\n\n}\nprivate void setStyle(final ImageSlider slider, final float value) {\nslider.setValue(value);\nif (NORMALIZE_SLIDERS) {\n  // Slider vals correspond directly to the input tensor vals, and normalization is visually\n  // maintained by remanipulating non-selected sliders.\n  float otherSum = 0.0f;\n\n  for (int i = 0; i < NUM_STYLES; ++i) {\n    if (adapter.items[i] != slider) {\n      otherSum += adapter.items[i].value;\n    }\n  }\n\n  if (otherSum > 0.0) {\n    float highestOtherVal = 0;\n    final float factor = otherSum > 0.0f ? (1.0f - value) / otherSum : 0.0f;\n    for (int i = 0; i < NUM_STYLES; ++i) {\n      final ImageSlider child = adapter.items[i];\n      if (child == slider) {\n        continue;\n      }\n      final float newVal = child.value * factor;\n      child.setValue(newVal > 0.01f ? newVal : 0.0f);\n\n      if (child.value > highestOtherVal) {\n        lastOtherStyle = i;\n        highestOtherVal = child.value;\n      }\n    }\n  } else {\n    // Everything else is 0, so just pick a suitable slider to push up when the\n    // selected one goes down.\n    if (adapter.items[lastOtherStyle] == slider) {\n      lastOtherStyle = (lastOtherStyle + 1) % NUM_STYLES;\n    }\n    adapter.items[lastOtherStyle].setValue(1.0f - value);\n  }\n}\n\nfinal boolean lastAllZero = allZero;\nfloat sum = 0.0f;\nfor (int i = 0; i < NUM_STYLES; ++i) {\n  sum += adapter.items[i].value;\n}\nallZero = sum == 0.0f;\n\n// Now update the values used for the input tensor. If nothing is set, mix in everything\n// equally. Otherwise everything is normalized to sum to 1.0.\nfor (int i = 0; i < NUM_STYLES; ++i) {\n  styleVals[i] = allZero ? 1.0f / NUM_STYLES : adapter.items[i].value / sum;\n\n  if (lastAllZero != allZero) {\n    adapter.items[i].postInvalidate();\n  }\n}\n\n}\npublic boolean isDebug() {\nreturn debug;\n}\nprivate void stylizeImage(final Bitmap bitmap) {\n++frameNum;\nbitmap.getPixels(intValues, 0, bitmap.getWidth(), 0, 0, bitmap.getWidth(), bitmap.getHeight());\nif (DEBUG_MODEL) {\n  // Create a white square that steps through a black background 1 pixel per frame.\n  final int centerX = (frameNum + bitmap.getWidth() / 2) % bitmap.getWidth();\n  final int centerY = bitmap.getHeight() / 2;\n  final int squareSize = 10;\n  for (int i = 0; i < intValues.length; ++i) {\n    final int x = i % bitmap.getWidth();\n    final int y = i / bitmap.getHeight();\n    final float val =\n        Math.abs(x - centerX) < squareSize && Math.abs(y - centerY) < squareSize ? 1.0f : 0.0f;\n    floatValues[i * 3] = val;\n    floatValues[i * 3 + 1] = val;\n    floatValues[i * 3 + 2] = val;\n  }\n} else {\n  for (int i = 0; i < intValues.length; ++i) {\n    final int val = intValues[i];\n    floatValues[i * 3] = ((val >> 16) & 0xFF) / 255.0f;\n    floatValues[i * 3 + 1] = ((val >> 8) & 0xFF) / 255.0f;\n    floatValues[i * 3 + 2] = (val & 0xFF) / 255.0f;\n  }\n}\n\n// Copy the input data into TensorFlow.\nLOGGER.i(\"Width: %s , Height: %s\", bitmap.getWidth(), bitmap.getHeight());\ninferenceInterface.feed(\n    INPUT_NODE, floatValues, 1, bitmap.getWidth(), bitmap.getHeight(), 3);\ninferenceInterface.feed(STYLE_NODE, styleVals, NUM_STYLES);\ninferenceInterface.run(new String[] {OUTPUT_NODE}, isDebug());\ninferenceInterface.fetch(OUTPUT_NODE, floatValues);\nfor (int i = 0; i < intValues.length; ++i) {\n  intValues[i] =\n      0xFF000000\n          | (((int) (floatValues[i * 3] * 255)) << 16)\n          | (((int) (floatValues[i * 3 + 1] * 255)) << 8)\n          | ((int) (floatValues[i * 3 + 2] * 255));\n}\n\nbitmap.setPixels(intValues, 0, bitmap.getWidth(), 0, 0, bitmap.getWidth(), bitmap.getHeight());\n\n}\npublic void onSetDebug(final boolean debug) {}\n@override\npublic boolean onKeyDown(int keyCode, KeyEvent event) {\nint moveOffset = 0;\nswitch (keyCode) {\ncase KeyEvent.KEYCODE_DPAD_LEFT:\nmoveOffset = -1;\nbreak;\ncase KeyEvent.KEYCODE_DPAD_RIGHT:\nmoveOffset = 1;\nbreak;\ncase KeyEvent.KEYCODE_DPAD_UP:\nmoveOffset = -1 * grid.getNumColumns();\nbreak;\ncase KeyEvent.KEYCODE_DPAD_DOWN:\nmoveOffset = grid.getNumColumns();\nbreak;\ndefault:\nif (keyCode == KeyEvent.KEYCODE_VOLUME_DOWN || keyCode == KeyEvent.KEYCODE_VOLUME_UP\n|| keyCode == KeyEvent.KEYCODE_BUTTON_L1 || keyCode == KeyEvent.KEYCODE_DPAD_CENTER) {\ndebug = !debug;\nrequestRender();\nonSetDebug(debug);\nreturn true;\n}\nreturn super.onKeyDown(keyCode, event);\n}\n// get the highest selected style\nint currentSelect = 0;\nfloat highestValue = 0;\nfor (int i = 0; i < adapter.getCount(); i++) {\n  if (adapter.items[i].value > highestValue) {\n    currentSelect = i;\n    highestValue = adapter.items[i].value;\n  }\n}\nsetStyle(adapter.items[(currentSelect + moveOffset + adapter.getCount()) % adapter.getCount()], 1);\n\nreturn true;\n\n}\n}\n`\nI preprocessed the bitmap and resized it to(256,256).But when I touch the grideview ,nothing happend. So I want to know how should I modify it so that it can achieve stylize??", "body": "I replace the camera captured bitmap with a predefined one,but not work.\r\nThe code changes as follows:\r\n`@TargetApi(Build.VERSION_CODES.LOLLIPOP)\r\npublic class StylizeActivity  extends Activity  {\r\n\r\n  private static final Logger LOGGER = new Logger();\r\n\r\n  private static final String MODEL_FILE = \"file:///android_asset/stylize_quantized.pb\";\r\n  private static final String INPUT_NODE = \"input\";\r\n  private static final String STYLE_NODE = \"style_num\";\r\n  private static final String OUTPUT_NODE = \"transformer/expand/conv3/conv/Sigmoid\";\r\n  private static final int NUM_STYLES = 26;\r\n\r\n  private static final boolean SAVE_PREVIEW_BITMAP = false;\r\n  private static final boolean NORMALIZE_SLIDERS = true;\r\n\r\n  private static final float TEXT_SIZE_DIP = 12;\r\n\r\n  private static final boolean DEBUG_MODEL = false;\r\n  private Handler handler;\r\n  private HandlerThread handlerThread;\r\n  private int desiredSize = 256;\r\n  private long lastProcessingTimeMs;\r\n  private final float[] styleVals = new float[NUM_STYLES];\r\n  private int[] intValues;\r\n  private float[] floatValues;\r\n\r\n  private int frameNum = 0;\r\n  private ImageView imageView;\r\n\r\n  private Bitmap textureCopyBitmap;\r\n  private Bitmap bitmap;\r\n  private Bitmap newbm;\r\n  private Bitmap test;\r\n\r\n  private TensorFlowInferenceInterface inferenceInterface;\r\n\r\n  private int lastOtherStyle = 1;\r\n\r\n  private boolean allZero = false;\r\n\r\n  private ImageGridAdapter adapter;\r\n  private GridView grid;\r\n  private int[] rgbBytes = null;\r\n  private Runnable imageConverter;\r\n  // which image\r\n  int position_now;\r\n  // image url\r\n  String url = null;\r\n  private Boolean debug=false;\r\n\r\n\r\n\r\n\r\n  private final OnTouchListener gridTouchAdapter =\r\n          new OnTouchListener() {\r\n            ImageSlider slider = null;\r\n\r\n            @Override\r\n            public boolean onTouch(final View v, final MotionEvent event) {\r\n              switch (event.getActionMasked()) {\r\n                case MotionEvent.ACTION_DOWN:\r\n                  for (int i = 0; i < NUM_STYLES; ++i) {\r\n                    final ImageSlider child = adapter.items[i];\r\n                    final Rect rect = new Rect();\r\n                    child.getHitRect(rect);\r\n                    if (rect.contains((int) event.getX(), (int) event.getY())) {\r\n                      slider = child;\r\n                      slider.setHilighted(true);\r\n                    }\r\n                  }\r\n                  **chuli();**\r\n                  break;\r\n\r\n                case MotionEvent.ACTION_MOVE:\r\n                  if (slider != null) {\r\n                    final Rect rect = new Rect();\r\n                    slider.getHitRect(rect);\r\n\r\n                    final float newSliderVal =\r\n                            (float)\r\n                                    Math.min(\r\n                                            1.0,\r\n                                            Math.max(\r\n                                                    0.0, 1.0 - (event.getY() - slider.getTop()) / slider.getHeight()));\r\n\r\n                    setStyle(slider, newSliderVal);\r\n                  }\r\n                  **chuli();**\r\n                  break;\r\n\r\n                case MotionEvent.ACTION_UP:\r\n                  if (slider != null) {\r\n                    slider.setHilighted(false);\r\n                    slider = null;\r\n                  }\r\n                  **chuli();**\r\n                  break;\r\n\r\n                default: // fall out\r\n\r\n              }\r\n              return true;\r\n            }\r\n          };\r\n  private int previewWidth;\r\n  private int previewHeight;\r\n\r\n  @Override\r\n  protected void onCreate(Bundle savedInstanceState) {\r\n    super.onCreate(savedInstanceState);\r\n    setContentView(R.layout.camera_connection_fragment_stylize);\r\n    // get intent information\r\n    getMessage();\r\n    initView();\r\n\r\n\r\n  }\r\n\r\nprivate void initView(){\r\n  adapter = new ImageGridAdapter();\r\n  grid = (GridView) findViewById(R.id.grid_layout);\r\n  grid.setAdapter(adapter);\r\n  grid.setOnTouchListener(gridTouchAdapter);\r\n  imageView=(ImageView)findViewById(R.id.ivs);\r\n  inferenceInterface = new TensorFlowInferenceInterface(getAssets(), MODEL_FILE);\r\n\r\n  intValues = new int[desiredSize * desiredSize];\r\n  floatValues = new float[desiredSize * desiredSize * 3];\r\n  BitmapFactory.Options options = new BitmapFactory.Options();\r\n  options.inPreferredConfig = Config.ARGB_8888;\r\n  bitmap = BitmapFactory.decodeFile(url, options);\r\n  previewWidth=bitmap.getWidth();\r\n  previewHeight=bitmap.getHeight();\r\n\r\n  **newbm=Bitmap.createScaledBitmap(bitmap,desiredSize,desiredSize,true);**\r\n  **imageView.setImageBitmap(bitmap);\r\n\r\n  if(textureCopyBitmap!=null){\r\n    test=big(textureCopyBitmap);\r\n    imageView.setImageBitmap(test);\r\n  }**\r\n\r\n}\r\n  private  Bitmap big(Bitmap bitmap) {\r\n    Matrix matrix = new Matrix();\r\n    matrix.postScale(2.f,2.f); //\u957f\u548c\u5bbd\u653e\u5927\u7f29\u5c0f\u7684\u6bd4\u4f8b\r\n    Bitmap resizeBmp = Bitmap.createBitmap(bitmap,0,0,bitmap.getWidth(),bitmap.getHeight(),matrix,true);\r\n    return resizeBmp;\r\n  }\r\nprivate void chuli(){\r\n  runInBackground(\r\n          new Runnable() {\r\n            @Override\r\n            public void run() {\r\n              final long startTime = SystemClock.uptimeMillis();\r\n              stylizeImage(newbm);\r\n              lastProcessingTimeMs = SystemClock.uptimeMillis() - startTime;\r\n              textureCopyBitmap = Bitmap.createBitmap(newbm);\r\n              requestRender();\r\n          \r\n            }\r\n          });\r\n}\r\n  protected void getMessage() {\r\n    Intent intent = getIntent();\r\n    try {\r\n      position_now = intent.getIntExtra(\"position\", -1);\r\n      url  = intent.getStringExtra(\"url\");\r\n    } catch (Exception e) {\r\n      Log.d(\"ERROR: \", \"\" + e);\r\n    }\r\n    Log.d(\"Info: \", \"\" + position_now + \" \" + url);\r\n  }\r\n\r\n\r\n\r\n  private static Bitmap getBitmapFromAsset(final Context context, final String filePath) {\r\n    final AssetManager assetManager = context.getAssets();\r\n\r\n    Bitmap bitmap = null;\r\n    try {\r\n      final InputStream inputStream = assetManager.open(filePath);\r\n      bitmap = BitmapFactory.decodeStream(inputStream);\r\n    } catch (final IOException e) {\r\n      LOGGER.e(\"Error opening bitmap!\", e);\r\n    }\r\n\r\n    return bitmap;\r\n  }\r\n\r\n\r\n  @Override\r\n  public synchronized void onStart() {\r\n    LOGGER.d(\"onStart \" + this);\r\n    super.onStart();\r\n  }\r\n\r\n  @Override\r\n  public synchronized void onResume() {\r\n    LOGGER.d(\"onResume \" + this);\r\n    super.onResume();\r\n\r\n    handlerThread = new HandlerThread(\"inference\");\r\n    handlerThread.start();\r\n    handler = new Handler(handlerThread.getLooper());\r\n  }\r\n\r\n  @Override\r\n  public synchronized void onPause() {\r\n    LOGGER.d(\"onPause \" + this);\r\n\r\n    if (!isFinishing()) {\r\n      LOGGER.d(\"Requesting finish\");\r\n      finish();\r\n    }\r\n\r\n    handlerThread.quitSafely();\r\n    try {\r\n      handlerThread.join();\r\n      handlerThread = null;\r\n      handler = null;\r\n    } catch (final InterruptedException e) {\r\n      LOGGER.e(e, \"Exception!\");\r\n    }\r\n\r\n    super.onPause();\r\n  }\r\n\r\n  @Override\r\n  public synchronized void onStop() {\r\n    LOGGER.d(\"onStop \" + this);\r\n    super.onStop();\r\n  }\r\n\r\n  @Override\r\n  public synchronized void onDestroy() {\r\n    LOGGER.d(\"onDestroy \" + this);\r\n    super.onDestroy();\r\n  }\r\n\r\n  protected synchronized void runInBackground(final Runnable r) {\r\n    if (handler != null) {\r\n      handler.post(r);\r\n    }\r\n  }\r\n\r\n//gridview imagestyle\r\n  private class ImageSlider extends android.support.v7.widget.AppCompatImageView {\r\n    private float value = 0.0f;\r\n    private boolean hilighted = false;\r\n\r\n    private final Paint boxPaint;\r\n    private final Paint linePaint;\r\n\r\n    public ImageSlider(final Context context) {\r\n      super(context);\r\n      value = 0.0f;\r\n\r\n      boxPaint = new Paint();\r\n      boxPaint.setColor(Color.BLACK);\r\n      boxPaint.setAlpha(128);\r\n\r\n      linePaint = new Paint();\r\n      linePaint.setColor(Color.WHITE);\r\n      linePaint.setStrokeWidth(10.0f);\r\n      linePaint.setStyle(Style.STROKE);\r\n    }\r\n\r\n    @Override\r\n    public void onDraw(final Canvas canvas) {\r\n      super.onDraw(canvas);\r\n      final float y = (1.0f - value) * canvas.getHeight();\r\n\r\n      // If all sliders are zero, don't bother shading anything.\r\n      if (!allZero) {\r\n        canvas.drawRect(0, 0, canvas.getWidth(), y, boxPaint);\r\n      }\r\n\r\n      if (value > 0.0f) {\r\n        canvas.drawLine(0, y, canvas.getWidth(), y, linePaint);\r\n      }\r\n\r\n      if (hilighted) {\r\n        canvas.drawRect(0, 0, getWidth(), getHeight(), linePaint);\r\n      }\r\n    }\r\n\r\n    @Override\r\n    protected void onMeasure(final int widthMeasureSpec, final int heightMeasureSpec) {\r\n      super.onMeasure(widthMeasureSpec, heightMeasureSpec);\r\n      setMeasuredDimension(getMeasuredWidth(), getMeasuredWidth());\r\n    }\r\n\r\n    public void setValue(final float value) {\r\n      this.value = value;\r\n      postInvalidate();\r\n    }\r\n\r\n    public void setHilighted(final boolean highlighted) {\r\n      this.hilighted = highlighted;\r\n      this.postInvalidate();\r\n    }\r\n  }\r\n\r\n  public void requestRender() {\r\n    final OverlayView overlay = (OverlayView) findViewById(R.id.debug_overlay);\r\n    if (overlay != null) {\r\n      overlay.postInvalidate();\r\n    }\r\n  }\r\n\r\n  public void addCallback(final OverlayView.DrawCallback callback) {\r\n    final OverlayView overlay = (OverlayView) findViewById(R.id.debug_overlay);\r\n    if (overlay != null) {\r\n      overlay.addCallback(callback);\r\n    }\r\n  }\r\n  \r\n  private class ImageGridAdapter extends BaseAdapter {\r\n    final ImageSlider[] items = new ImageSlider[NUM_STYLES];\r\n    final ArrayList<Button> buttons = new ArrayList<>();\r\n\r\n    {\r\n      final Button saveButton =\r\n          new android.support.v7.widget.AppCompatButton(StylizeActivity.this) {\r\n            @Override\r\n            protected void onMeasure(final int widthMeasureSpec, final int heightMeasureSpec) {\r\n              super.onMeasure(widthMeasureSpec, heightMeasureSpec);\r\n              setMeasuredDimension(getMeasuredWidth(), getMeasuredWidth());\r\n            }\r\n          };\r\n      saveButton.setText(\"save\");\r\n      saveButton.setTextSize(12);\r\n\r\n      saveButton.setOnClickListener(\r\n          new OnClickListener() {\r\n            @Override\r\n            public void onClick(final View v) {\r\n              if ( test != null) {\r\n                // TODO(andrewharp): Save as jpeg with guaranteed unique filename.\r\n                ImageUtils.saveBitmap(test, \"stylized\" + url + \".png\");\r\n                Toast.makeText(\r\n                        StylizeActivity.this,\r\n                        \"Saved image to: /sdcard/tensorflow/\" + \"stylized\" + url + \".png\",\r\n                        Toast.LENGTH_LONG)\r\n                    .show();\r\n              }\r\n            }\r\n          });\r\n\r\n\r\n      buttons.add(saveButton);\r\n\r\n      for (int i = 0; i < NUM_STYLES; ++i) {\r\n        LOGGER.v(\"Creating item %d\", i);\r\n\r\n        if (items[i] == null) {\r\n          final ImageSlider slider = new ImageSlider(StylizeActivity.this);\r\n          final Bitmap bm =\r\n              getBitmapFromAsset(StylizeActivity.this, \"thumbnails/style\" + i + \".jpg\");\r\n          slider.setImageBitmap(bm);\r\n\r\n          items[i] = slider;\r\n        }\r\n      }\r\n    }\r\n\r\n    @Override\r\n    public int getCount() {\r\n      return buttons.size() + NUM_STYLES;\r\n    }\r\n\r\n    @Override\r\n    public Object getItem(final int position) {\r\n      if (position < buttons.size()) {\r\n        return buttons.get(position);\r\n      } else {\r\n        return items[position - buttons.size()];\r\n      }\r\n    }\r\n\r\n    @Override\r\n    public long getItemId(final int position) {\r\n      return getItem(position).hashCode();\r\n    }\r\n\r\n    @Override\r\n    public View getView(final int position, final View convertView, final ViewGroup parent) {\r\n      if (convertView != null) {\r\n        return convertView;\r\n      }\r\n      return (View) getItem(position);\r\n    }\r\n  }\r\n\r\n\r\n  private void setStyle(final ImageSlider slider, final float value) {\r\n    slider.setValue(value);\r\n\r\n    if (NORMALIZE_SLIDERS) {\r\n      // Slider vals correspond directly to the input tensor vals, and normalization is visually\r\n      // maintained by remanipulating non-selected sliders.\r\n      float otherSum = 0.0f;\r\n\r\n      for (int i = 0; i < NUM_STYLES; ++i) {\r\n        if (adapter.items[i] != slider) {\r\n          otherSum += adapter.items[i].value;\r\n        }\r\n      }\r\n\r\n      if (otherSum > 0.0) {\r\n        float highestOtherVal = 0;\r\n        final float factor = otherSum > 0.0f ? (1.0f - value) / otherSum : 0.0f;\r\n        for (int i = 0; i < NUM_STYLES; ++i) {\r\n          final ImageSlider child = adapter.items[i];\r\n          if (child == slider) {\r\n            continue;\r\n          }\r\n          final float newVal = child.value * factor;\r\n          child.setValue(newVal > 0.01f ? newVal : 0.0f);\r\n\r\n          if (child.value > highestOtherVal) {\r\n            lastOtherStyle = i;\r\n            highestOtherVal = child.value;\r\n          }\r\n        }\r\n      } else {\r\n        // Everything else is 0, so just pick a suitable slider to push up when the\r\n        // selected one goes down.\r\n        if (adapter.items[lastOtherStyle] == slider) {\r\n          lastOtherStyle = (lastOtherStyle + 1) % NUM_STYLES;\r\n        }\r\n        adapter.items[lastOtherStyle].setValue(1.0f - value);\r\n      }\r\n    }\r\n\r\n    final boolean lastAllZero = allZero;\r\n    float sum = 0.0f;\r\n    for (int i = 0; i < NUM_STYLES; ++i) {\r\n      sum += adapter.items[i].value;\r\n    }\r\n    allZero = sum == 0.0f;\r\n\r\n    // Now update the values used for the input tensor. If nothing is set, mix in everything\r\n    // equally. Otherwise everything is normalized to sum to 1.0.\r\n    for (int i = 0; i < NUM_STYLES; ++i) {\r\n      styleVals[i] = allZero ? 1.0f / NUM_STYLES : adapter.items[i].value / sum;\r\n\r\n      if (lastAllZero != allZero) {\r\n        adapter.items[i].postInvalidate();\r\n      }\r\n    }\r\n  }\r\n\r\npublic boolean isDebug() {\r\n  return debug;\r\n}\r\n\r\n  private void stylizeImage(final Bitmap bitmap) {\r\n    ++frameNum;\r\n    bitmap.getPixels(intValues, 0, bitmap.getWidth(), 0, 0, bitmap.getWidth(), bitmap.getHeight());\r\n\r\n    if (DEBUG_MODEL) {\r\n      // Create a white square that steps through a black background 1 pixel per frame.\r\n      final int centerX = (frameNum + bitmap.getWidth() / 2) % bitmap.getWidth();\r\n      final int centerY = bitmap.getHeight() / 2;\r\n      final int squareSize = 10;\r\n      for (int i = 0; i < intValues.length; ++i) {\r\n        final int x = i % bitmap.getWidth();\r\n        final int y = i / bitmap.getHeight();\r\n        final float val =\r\n            Math.abs(x - centerX) < squareSize && Math.abs(y - centerY) < squareSize ? 1.0f : 0.0f;\r\n        floatValues[i * 3] = val;\r\n        floatValues[i * 3 + 1] = val;\r\n        floatValues[i * 3 + 2] = val;\r\n      }\r\n    } else {\r\n      for (int i = 0; i < intValues.length; ++i) {\r\n        final int val = intValues[i];\r\n        floatValues[i * 3] = ((val >> 16) & 0xFF) / 255.0f;\r\n        floatValues[i * 3 + 1] = ((val >> 8) & 0xFF) / 255.0f;\r\n        floatValues[i * 3 + 2] = (val & 0xFF) / 255.0f;\r\n      }\r\n    }\r\n\r\n    // Copy the input data into TensorFlow.\r\n    LOGGER.i(\"Width: %s , Height: %s\", bitmap.getWidth(), bitmap.getHeight());\r\n    inferenceInterface.feed(\r\n        INPUT_NODE, floatValues, 1, bitmap.getWidth(), bitmap.getHeight(), 3);\r\n    inferenceInterface.feed(STYLE_NODE, styleVals, NUM_STYLES);\r\n    inferenceInterface.run(new String[] {OUTPUT_NODE}, isDebug());\r\n    inferenceInterface.fetch(OUTPUT_NODE, floatValues);\r\n    for (int i = 0; i < intValues.length; ++i) {\r\n      intValues[i] =\r\n          0xFF000000\r\n              | (((int) (floatValues[i * 3] * 255)) << 16)\r\n              | (((int) (floatValues[i * 3 + 1] * 255)) << 8)\r\n              | ((int) (floatValues[i * 3 + 2] * 255));\r\n    }\r\n\r\n    bitmap.setPixels(intValues, 0, bitmap.getWidth(), 0, 0, bitmap.getWidth(), bitmap.getHeight());\r\n  }\r\n\r\npublic void onSetDebug(final boolean debug) {}\r\n  @Override\r\n  public boolean onKeyDown(int keyCode, KeyEvent event) {\r\n    int moveOffset = 0;\r\n    switch (keyCode) {\r\n      case KeyEvent.KEYCODE_DPAD_LEFT:\r\n        moveOffset = -1;\r\n        break;\r\n      case KeyEvent.KEYCODE_DPAD_RIGHT:\r\n        moveOffset = 1;\r\n        break;\r\n      case KeyEvent.KEYCODE_DPAD_UP:\r\n        moveOffset = -1 * grid.getNumColumns();\r\n        break;\r\n      case KeyEvent.KEYCODE_DPAD_DOWN:\r\n        moveOffset = grid.getNumColumns();\r\n        break;\r\n      default:\r\n        **if (keyCode == KeyEvent.KEYCODE_VOLUME_DOWN || keyCode == KeyEvent.KEYCODE_VOLUME_UP\r\n                || keyCode == KeyEvent.KEYCODE_BUTTON_L1 || keyCode == KeyEvent.KEYCODE_DPAD_CENTER) {\r\n          debug = !debug;\r\n          requestRender();\r\n          onSetDebug(debug);\r\n          return true;\r\n        }**\r\n        return super.onKeyDown(keyCode, event);\r\n    }\r\n\r\n    // get the highest selected style\r\n    int currentSelect = 0;\r\n    float highestValue = 0;\r\n    for (int i = 0; i < adapter.getCount(); i++) {\r\n      if (adapter.items[i].value > highestValue) {\r\n        currentSelect = i;\r\n        highestValue = adapter.items[i].value;\r\n      }\r\n    }\r\n    setStyle(adapter.items[(currentSelect + moveOffset + adapter.getCount()) % adapter.getCount()], 1);\r\n\r\n    return true;\r\n  }\r\n\r\n}\r\n`\r\nI preprocessed the bitmap and resized it to(256,256).But when I touch the grideview ,nothing happend. So I want to know how should I modify it so that it can achieve stylize??\r\n"}