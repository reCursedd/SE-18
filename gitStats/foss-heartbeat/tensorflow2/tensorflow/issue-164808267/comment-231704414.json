{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/231704414", "html_url": "https://github.com/tensorflow/tensorflow/pull/3269#issuecomment-231704414", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3269", "id": 231704414, "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTcwNDQxNA==", "user": {"login": "davidzchen", "id": 5283042, "node_id": "MDQ6VXNlcjUyODMwNDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "created_at": "2016-07-11T11:01:02Z", "updated_at": "2016-07-11T11:01:02Z", "author_association": "MEMBER", "body_html": "<p>Building using the system's default version of cuda libraries (running <code>bazel test --config=cuda //tensorflow/...</code> without `CUDA_VERSION=7.5) causes all the Python targets to raise the following import error:</p>\n<pre><code>\u276f\u276f\u276f bazel test --config=cuda //tensorflow/python:summary_writer_test --test_output=errors\nWARNING: /usr/local/google/home/dzc/Projects/tensorflow/tensorflow/util/python/BUILD:11:16: in includes attribute of cc_library rule //util/python:python_headers: 'python_include' resolves to 'util/python/python_include' not in 'third_party'. This will be an error in the future\nINFO: Analysed target //tensorflow/python:summary_writer_test (0 packages loaded).\nINFO: Found 1 test target...\nFAIL: //tensorflow/python:summary_writer_test (see /usr/local/google/home/dzc/.cache/bazel/_bazel_dzc/97010c3bd7554ebe07410261582c4d5e/execroot/tensorflow/bazel-out/local_linux-fastbuild/testlogs/tensorflow/python/summary_writer_test/test.log)\nINFO: From Testing //tensorflow/python:summary_writer_test:\n==================== Test output for //tensorflow/python:summary_writer_test:\nTraceback (most recent call last):\n  File \"/usr/local/google/home/dzc/.cache/bazel/_bazel_dzc/97010c3bd7554ebe07410261582c4d5e/execroot/tensorflow/bazel-out/local_linux-fastbuild/bin/tensorflow/python/summary_writer_test.runfiles/org_tensorflow/tensorflow/python/training/summary_writer_test.py\", line 26, in &lt;module&gt;\n    import tensorflow as tf\n  File \"/usr/local/google/home/dzc/.cache/bazel/_bazel_dzc/97010c3bd7554ebe07410261582c4d5e/execroot/tensorflow/bazel-out/local_linux-fastbuild/bin/tensorflow/python/summary_writer_test.runfiles/org_tensorflow/tensorflow/__init__.py\", line 23, in &lt;module&gt;\n    from tensorflow.python import *\n  File \"/usr/local/google/home/dzc/.cache/bazel/_bazel_dzc/97010c3bd7554ebe07410261582c4d5e/execroot/tensorflow/bazel-out/local_linux-fastbuild/bin/tensorflow/python/summary_writer_test.runfiles/org_tensorflow/tensorflow/python/__init__.py\", line 48, in &lt;module&gt;\n    from tensorflow.python import pywrap_tensorflow\n  File \"/usr/local/google/home/dzc/.cache/bazel/_bazel_dzc/97010c3bd7554ebe07410261582c4d5e/execroot/tensorflow/bazel-out/local_linux-fastbuild/bin/tensorflow/python/summary_writer_test.runfiles/org_tensorflow/tensorflow/python/pywrap_tensorflow.py\", line 28, in &lt;module&gt;\n    _pywrap_tensorflow = swig_import_helper()\n  File \"/usr/local/google/home/dzc/.cache/bazel/_bazel_dzc/97010c3bd7554ebe07410261582c4d5e/execroot/tensorflow/bazel-out/local_linux-fastbuild/bin/tensorflow/python/summary_writer_test.runfiles/org_tensorflow/tensorflow/python/pywrap_tensorflow.py\", line 24, in swig_import_helper\n    _mod = imp.load_module('_pywrap_tensorflow', fp, pathname, description)\nImportError: libcudart.so.7.5: cannot open shared object file: No such file or directory\n================================================================================\nTarget //tensorflow/python:summary_writer_test up-to-date:\n  bazel-bin/tensorflow/python/summary_writer_test\nINFO: Elapsed time: 0.447s, Critical Path: 0.10s\nINFO: Build completed, 1 test FAILED, 2 total actions\n//tensorflow/python:summary_writer_test                                  FAILED in 0.1s\n  /usr/local/google/home/dzc/.cache/bazel/_bazel_dzc/97010c3bd7554ebe07410261582c4d5e/execroot/tensorflow/bazel-out/local_linux-fastbuild/testlogs/tensorflow/python/summary_writer_test/test.log\n\nExecuted 1 out of 1 test: 1 fails locally.\n</code></pre>\n<p>As expected, the <code>local_config_cuda/cuda/lib64</code> directory only contains the symlinks to the <code>.so</code>'s without the version suffix (<code>libcudart.so</code> rather than <code>libcudart.so.7.5</code>). However, it appears that the SWIG wrapper still ends up looking for the versioned libraries. I'm not familiar with how SWIG or <code>imp</code> works, but the string <code>\"7\\.5\"</code> does not appear any of the files under the files generated by <code>cuda_configure()</code> under <code>bazel-tensorflow/external/local_config_cuda</code>. Is the cuda version getting hard-coded somewhere else, causing the SWIG wrapper to look for the versioned library instead of the unversioned one?</p>", "body_text": "Building using the system's default version of cuda libraries (running bazel test --config=cuda //tensorflow/... without `CUDA_VERSION=7.5) causes all the Python targets to raise the following import error:\n\u276f\u276f\u276f bazel test --config=cuda //tensorflow/python:summary_writer_test --test_output=errors\nWARNING: /usr/local/google/home/dzc/Projects/tensorflow/tensorflow/util/python/BUILD:11:16: in includes attribute of cc_library rule //util/python:python_headers: 'python_include' resolves to 'util/python/python_include' not in 'third_party'. This will be an error in the future\nINFO: Analysed target //tensorflow/python:summary_writer_test (0 packages loaded).\nINFO: Found 1 test target...\nFAIL: //tensorflow/python:summary_writer_test (see /usr/local/google/home/dzc/.cache/bazel/_bazel_dzc/97010c3bd7554ebe07410261582c4d5e/execroot/tensorflow/bazel-out/local_linux-fastbuild/testlogs/tensorflow/python/summary_writer_test/test.log)\nINFO: From Testing //tensorflow/python:summary_writer_test:\n==================== Test output for //tensorflow/python:summary_writer_test:\nTraceback (most recent call last):\n  File \"/usr/local/google/home/dzc/.cache/bazel/_bazel_dzc/97010c3bd7554ebe07410261582c4d5e/execroot/tensorflow/bazel-out/local_linux-fastbuild/bin/tensorflow/python/summary_writer_test.runfiles/org_tensorflow/tensorflow/python/training/summary_writer_test.py\", line 26, in <module>\n    import tensorflow as tf\n  File \"/usr/local/google/home/dzc/.cache/bazel/_bazel_dzc/97010c3bd7554ebe07410261582c4d5e/execroot/tensorflow/bazel-out/local_linux-fastbuild/bin/tensorflow/python/summary_writer_test.runfiles/org_tensorflow/tensorflow/__init__.py\", line 23, in <module>\n    from tensorflow.python import *\n  File \"/usr/local/google/home/dzc/.cache/bazel/_bazel_dzc/97010c3bd7554ebe07410261582c4d5e/execroot/tensorflow/bazel-out/local_linux-fastbuild/bin/tensorflow/python/summary_writer_test.runfiles/org_tensorflow/tensorflow/python/__init__.py\", line 48, in <module>\n    from tensorflow.python import pywrap_tensorflow\n  File \"/usr/local/google/home/dzc/.cache/bazel/_bazel_dzc/97010c3bd7554ebe07410261582c4d5e/execroot/tensorflow/bazel-out/local_linux-fastbuild/bin/tensorflow/python/summary_writer_test.runfiles/org_tensorflow/tensorflow/python/pywrap_tensorflow.py\", line 28, in <module>\n    _pywrap_tensorflow = swig_import_helper()\n  File \"/usr/local/google/home/dzc/.cache/bazel/_bazel_dzc/97010c3bd7554ebe07410261582c4d5e/execroot/tensorflow/bazel-out/local_linux-fastbuild/bin/tensorflow/python/summary_writer_test.runfiles/org_tensorflow/tensorflow/python/pywrap_tensorflow.py\", line 24, in swig_import_helper\n    _mod = imp.load_module('_pywrap_tensorflow', fp, pathname, description)\nImportError: libcudart.so.7.5: cannot open shared object file: No such file or directory\n================================================================================\nTarget //tensorflow/python:summary_writer_test up-to-date:\n  bazel-bin/tensorflow/python/summary_writer_test\nINFO: Elapsed time: 0.447s, Critical Path: 0.10s\nINFO: Build completed, 1 test FAILED, 2 total actions\n//tensorflow/python:summary_writer_test                                  FAILED in 0.1s\n  /usr/local/google/home/dzc/.cache/bazel/_bazel_dzc/97010c3bd7554ebe07410261582c4d5e/execroot/tensorflow/bazel-out/local_linux-fastbuild/testlogs/tensorflow/python/summary_writer_test/test.log\n\nExecuted 1 out of 1 test: 1 fails locally.\n\nAs expected, the local_config_cuda/cuda/lib64 directory only contains the symlinks to the .so's without the version suffix (libcudart.so rather than libcudart.so.7.5). However, it appears that the SWIG wrapper still ends up looking for the versioned libraries. I'm not familiar with how SWIG or imp works, but the string \"7\\.5\" does not appear any of the files under the files generated by cuda_configure() under bazel-tensorflow/external/local_config_cuda. Is the cuda version getting hard-coded somewhere else, causing the SWIG wrapper to look for the versioned library instead of the unversioned one?", "body": "Building using the system's default version of cuda libraries (running `bazel test --config=cuda //tensorflow/...` without `CUDA_VERSION=7.5) causes all the Python targets to raise the following import error:\n\n```\n\u276f\u276f\u276f bazel test --config=cuda //tensorflow/python:summary_writer_test --test_output=errors\nWARNING: /usr/local/google/home/dzc/Projects/tensorflow/tensorflow/util/python/BUILD:11:16: in includes attribute of cc_library rule //util/python:python_headers: 'python_include' resolves to 'util/python/python_include' not in 'third_party'. This will be an error in the future\nINFO: Analysed target //tensorflow/python:summary_writer_test (0 packages loaded).\nINFO: Found 1 test target...\nFAIL: //tensorflow/python:summary_writer_test (see /usr/local/google/home/dzc/.cache/bazel/_bazel_dzc/97010c3bd7554ebe07410261582c4d5e/execroot/tensorflow/bazel-out/local_linux-fastbuild/testlogs/tensorflow/python/summary_writer_test/test.log)\nINFO: From Testing //tensorflow/python:summary_writer_test:\n==================== Test output for //tensorflow/python:summary_writer_test:\nTraceback (most recent call last):\n  File \"/usr/local/google/home/dzc/.cache/bazel/_bazel_dzc/97010c3bd7554ebe07410261582c4d5e/execroot/tensorflow/bazel-out/local_linux-fastbuild/bin/tensorflow/python/summary_writer_test.runfiles/org_tensorflow/tensorflow/python/training/summary_writer_test.py\", line 26, in <module>\n    import tensorflow as tf\n  File \"/usr/local/google/home/dzc/.cache/bazel/_bazel_dzc/97010c3bd7554ebe07410261582c4d5e/execroot/tensorflow/bazel-out/local_linux-fastbuild/bin/tensorflow/python/summary_writer_test.runfiles/org_tensorflow/tensorflow/__init__.py\", line 23, in <module>\n    from tensorflow.python import *\n  File \"/usr/local/google/home/dzc/.cache/bazel/_bazel_dzc/97010c3bd7554ebe07410261582c4d5e/execroot/tensorflow/bazel-out/local_linux-fastbuild/bin/tensorflow/python/summary_writer_test.runfiles/org_tensorflow/tensorflow/python/__init__.py\", line 48, in <module>\n    from tensorflow.python import pywrap_tensorflow\n  File \"/usr/local/google/home/dzc/.cache/bazel/_bazel_dzc/97010c3bd7554ebe07410261582c4d5e/execroot/tensorflow/bazel-out/local_linux-fastbuild/bin/tensorflow/python/summary_writer_test.runfiles/org_tensorflow/tensorflow/python/pywrap_tensorflow.py\", line 28, in <module>\n    _pywrap_tensorflow = swig_import_helper()\n  File \"/usr/local/google/home/dzc/.cache/bazel/_bazel_dzc/97010c3bd7554ebe07410261582c4d5e/execroot/tensorflow/bazel-out/local_linux-fastbuild/bin/tensorflow/python/summary_writer_test.runfiles/org_tensorflow/tensorflow/python/pywrap_tensorflow.py\", line 24, in swig_import_helper\n    _mod = imp.load_module('_pywrap_tensorflow', fp, pathname, description)\nImportError: libcudart.so.7.5: cannot open shared object file: No such file or directory\n================================================================================\nTarget //tensorflow/python:summary_writer_test up-to-date:\n  bazel-bin/tensorflow/python/summary_writer_test\nINFO: Elapsed time: 0.447s, Critical Path: 0.10s\nINFO: Build completed, 1 test FAILED, 2 total actions\n//tensorflow/python:summary_writer_test                                  FAILED in 0.1s\n  /usr/local/google/home/dzc/.cache/bazel/_bazel_dzc/97010c3bd7554ebe07410261582c4d5e/execroot/tensorflow/bazel-out/local_linux-fastbuild/testlogs/tensorflow/python/summary_writer_test/test.log\n\nExecuted 1 out of 1 test: 1 fails locally.\n```\n\nAs expected, the `local_config_cuda/cuda/lib64` directory only contains the symlinks to the `.so`'s without the version suffix (`libcudart.so` rather than `libcudart.so.7.5`). However, it appears that the SWIG wrapper still ends up looking for the versioned libraries. I'm not familiar with how SWIG or `imp` works, but the string `\"7\\.5\"` does not appear any of the files under the files generated by `cuda_configure()` under `bazel-tensorflow/external/local_config_cuda`. Is the cuda version getting hard-coded somewhere else, causing the SWIG wrapper to look for the versioned library instead of the unversioned one?\n"}