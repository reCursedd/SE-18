{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/72601068", "pull_request_review_id": null, "id": 72601068, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcyNjAxMDY4", "diff_hunk": "@@ -0,0 +1,235 @@\n+licenses([\"restricted\"])  # MPL2, portions GPL v3, LGPL v3, BSD-like\n+\n+load(\"@local_config_cuda//cuda:build_defs.bzl\", \"if_cuda\")\n+load(\"@local_config_cuda//cuda:platform.bzl\", \"cuda_library_path\")\n+load(\"@local_config_cuda//cuda:platform.bzl\", \"cuda_static_library_path\")\n+load(\"@local_config_cuda//cuda:platform.bzl\", \"cudnn_library_path\")\n+load(\"@local_config_cuda//cuda:platform.bzl\", \"cupti_library_path\")\n+load(\"@local_config_cuda//cuda:platform.bzl\", \"readlink_command\")\n+\n+package(default_visibility = [\"//visibility:public\"])\n+\n+config_setting(\n+    name = \"using_gcudacc\",\n+    values = {\n+        \"define\": \"using_cuda_gcudacc=true\",\n+    },\n+    visibility = [\"//visibility:public\"],\n+)\n+\n+config_setting(\n+    name = \"using_nvcc\",\n+    values = {\n+        \"define\": \"using_cuda_nvcc=true\",\n+    },\n+)\n+\n+config_setting(\n+    name = \"using_clang\",\n+    values = {\n+        \"define\": \"using_cuda_clang=true\",\n+    },\n+)\n+\n+# Equivalent to using_clang && -c opt.\n+config_setting(\n+    name = \"using_clang_opt\",\n+    values = {\n+        \"define\": \"using_cuda_clang=true\",\n+        \"compilation_mode\": \"opt\",\n+    },\n+)\n+\n+config_setting(\n+    name = \"darwin\",\n+    values = {\"cpu\": \"darwin\"},\n+    visibility = [\"//visibility:public\"],\n+)\n+\n+cc_library(\n+    name = \"cuda_headers\",\n+    hdrs = glob([\n+        \"**/*.h\",\n+    ]),\n+    includes = [\".\", \"include\"],\n+    visibility = [\"//visibility:public\"],\n+)\n+\n+cc_library(\n+    name = \"cudart_static\",\n+    srcs = [\n+        cuda_static_library_path(\"cudart\"),\n+    ],\n+    includes = [\"include/\"],\n+    linkopts = [\n+        \"-ldl\",\n+        \"-lpthread\",\n+    ] + select({\n+        \"@//tensorflow:darwin\": [],\n+        \"//conditions:default\": [\"-lrt\"]\n+    }),\n+    visibility = [\"//visibility:public\"],\n+)\n+\n+cc_library(\n+    name = \"cudart\",\n+    srcs = [\n+        cuda_library_path(\"cudart\")\n+    ],\n+    data = [\n+        cuda_library_path(\"cudart\")\n+    ],\n+    includes = [\"include/\"],\n+    visibility = [\"//visibility:public\"],\n+    linkstatic = 1,\n+)\n+\n+cc_library(\n+    name = \"cublas\",\n+    srcs = [\n+        cuda_library_path(\"cublas\")\n+    ],\n+    data = [\n+        cuda_library_path(\"cublas\")\n+    ],\n+    includes = [\"include/\"],\n+    visibility = [\"//visibility:public\"],\n+    linkstatic = 1,\n+)\n+\n+cc_library(\n+    name = \"cudnn\",\n+    srcs = [\n+        cudnn_library_path()\n+    ],\n+    data = [\n+        cudnn_library_path()\n+    ],\n+    includes = [\"include/\"],\n+    visibility = [\"//visibility:public\"],\n+    linkstatic = 1,\n+)\n+\n+cc_library(\n+    name = \"cufft\",\n+    srcs = [\n+        cuda_library_path(\"cufft\")\n+    ],\n+    data = [\n+        cuda_library_path(\"cufft\")\n+    ],\n+    includes = [\"include/\"],\n+    visibility = [\"//visibility:public\"],\n+    linkstatic = 1,\n+)\n+\n+cc_library(\n+    name = \"curand\",\n+    srcs = [\n+        cuda_library_path(\"curand\")\n+    ],\n+    data = [\n+        cuda_library_path(\"curand\")\n+    ],\n+    includes = [\"include/\"],\n+    visibility = [\"//visibility:public\"],\n+    linkstatic = 1,\n+)\n+\n+cc_library(\n+    name = \"cuda\",\n+    deps = [\n+        \":cuda_headers\",\n+        \":cudart\",\n+        \":cublas\",\n+        \":cudnn\",\n+        \":cufft\",\n+        \":curand\",\n+    ],\n+    visibility = [\"//visibility:public\"],\n+)\n+\n+cc_library(\n+    name = \"cupti_headers\",\n+    hdrs = glob([\n+        \"**/*.h\",\n+    ]),\n+    includes = [\".\", \"extras/CUPTI/include/\"],\n+    visibility = [\"//visibility:public\"],\n+)\n+\n+cc_library(\n+    name = \"cupti_dsos\",\n+    data = [\n+        cupti_library_path(),\n+    ],\n+    visibility = [\"//visibility:public\"],\n+)\n+\n+\n+# TODO(opensource): for now, we have to invoke the cuda_config.sh manually in the source tree.\n+# This rule checks if Cuda libraries in the source tree has been properly configured.\n+# The output list makes bazel runs this rule first if the Cuda files are missing.\n+# This gives us an opportunity to check and print a meaningful error message.\n+# But we will need to create the output file list to make bazel happy in a successful run.\n+#genrule(", "path": "third_party/gpus/cuda/BUILD.tpl", "position": null, "original_position": 175, "commit_id": "353235e0b2b35f3df43f42ef84ca00ccda7a3a6d", "original_commit_id": "96a4da93ddddb723216a601f3a876b466f78558c", "user": {"login": "damienmg", "id": 3721087, "node_id": "MDQ6VXNlcjM3MjEwODc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3721087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/damienmg", "html_url": "https://github.com/damienmg", "followers_url": "https://api.github.com/users/damienmg/followers", "following_url": "https://api.github.com/users/damienmg/following{/other_user}", "gists_url": "https://api.github.com/users/damienmg/gists{/gist_id}", "starred_url": "https://api.github.com/users/damienmg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/damienmg/subscriptions", "organizations_url": "https://api.github.com/users/damienmg/orgs", "repos_url": "https://api.github.com/users/damienmg/repos", "events_url": "https://api.github.com/users/damienmg/events{/privacy}", "received_events_url": "https://api.github.com/users/damienmg/received_events", "type": "User", "site_admin": false}, "body": "I was always considering this as a way to warn the user about cuda\nconfiguration being unavailable. If cuda is deactivating, TF should fails\nwith a nice message when trying to build for cuda, right?\n\nOn Thu, Jul 28, 2016 at 12:17 PM David Z. Chen notifications@github.com\nwrote:\n\n> In third_party/gpus/cuda/BUILD.tpl\n> https://github.com/tensorflow/tensorflow/pull/3269#discussion_r72597490:\n> \n> > +\n> > +cc_library(\n> > -    name = \"cupti_dsos\",\n> > -    data = [\n> > -        cupti_library_path(),\n> > -    ],\n> > -    visibility = [\"//visibility:public\"],\n> >   +)\n> >   +\n> >   +\n> >   +# TODO(opensource): for now, we have to invoke the cuda_config.sh manually in the source tree.\n> >   +# This rule checks if Cuda libraries in the source tree has been properly configured.\n> >   +# The output list makes bazel runs this rule first if the Cuda files are missing.\n> >   +# This gives us an opportunity to check and print a meaningful error message.\n> >   +# But we will need to create the output file list to make bazel happy in a successful run.\n> >   +#genrule(\n> \n> I'm not completely following. This is a sanity check to determine whether\n> the cuda files are set up correctly. In the context of this change, we\n> would want a similar sanity check to determine whether @local_config_cuda\n> is reasonable, which, come to think of it, might be more suitable\n> implemented in cuda_configure.bzl rather than as a build target. WDYT?\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> \n> Reply to this email directly, view it on GitHub\n> https://github.com/tensorflow/tensorflow/pull/3269/files/96a4da93ddddb723216a601f3a876b466f78558c#r72597490,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/ADjHf_gPZztewrxTPWKs1p872-5RQoGQks5qaIHIgaJpZM4JJPRy\n> .\n", "created_at": "2016-07-28T10:46:18Z", "updated_at": "2016-08-20T09:45:57Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/3269#discussion_r72601068", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/3269", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/72601068"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/3269#discussion_r72601068"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/3269"}}, "body_html": "<p>I was always considering this as a way to warn the user about cuda<br>\nconfiguration being unavailable. If cuda is deactivating, TF should fails<br>\nwith a nice message when trying to build for cuda, right?</p>\n<p>On Thu, Jul 28, 2016 at 12:17 PM David Z. Chen <a href=\"mailto:notifications@github.com\">notifications@github.com</a><br>\nwrote:</p>\n<blockquote>\n<p>In third_party/gpus/cuda/BUILD.tpl<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"164808267\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/3269\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/3269/hovercard?comment_id=72597490&amp;comment_type=review_comment\" href=\"https://github.com/tensorflow/tensorflow/pull/3269#discussion_r72597490\">#3269 (comment)</a>:</p>\n<blockquote>\n<ul>\n<li></li>\n</ul>\n<p>+cc_library(</p>\n<ul>\n<li>name = \"cupti_dsos\",</li>\n<li>data = [</li>\n<li>\n<pre><code>   cupti_library_path(),\n</code></pre>\n</li>\n<li>],</li>\n<li>visibility = [\"//visibility:public\"],<br>\n+)</li>\n</ul>\n<ul>\n<li></li>\n<li></li>\n</ul>\n<p>+# TODO(opensource): for now, we have to invoke the cuda_config.sh manually in the source tree.<br>\n+# This rule checks if Cuda libraries in the source tree has been properly configured.<br>\n+# The output list makes bazel runs this rule first if the Cuda files are missing.<br>\n+# This gives us an opportunity to check and print a meaningful error message.<br>\n+# But we will need to create the output file list to make bazel happy in a successful run.<br>\n+#genrule(</p>\n</blockquote>\n<p>I'm not completely following. This is a sanity check to determine whether<br>\nthe cuda files are set up correctly. In the context of this change, we<br>\nwould want a similar sanity check to determine whether @local_config_cuda<br>\nis reasonable, which, come to think of it, might be more suitable<br>\nimplemented in cuda_configure.bzl rather than as a build target. WDYT?</p>\n<p>\u2014<br>\nYou are receiving this because you were mentioned.</p>\n<p>Reply to this email directly, view it on GitHub<br>\n<a href=\"https://github.com/tensorflow/tensorflow/pull/3269/files/96a4da93ddddb723216a601f3a876b466f78558c#r72597490\">https://github.com/tensorflow/tensorflow/pull/3269/files/96a4da93ddddb723216a601f3a876b466f78558c#r72597490</a>,<br>\nor mute the thread<br>\n<a href=\"https://github.com/notifications/unsubscribe-auth/ADjHf_gPZztewrxTPWKs1p872-5RQoGQks5qaIHIgaJpZM4JJPRy\">https://github.com/notifications/unsubscribe-auth/ADjHf_gPZztewrxTPWKs1p872-5RQoGQks5qaIHIgaJpZM4JJPRy</a><br>\n.</p>\n</blockquote>", "body_text": "I was always considering this as a way to warn the user about cuda\nconfiguration being unavailable. If cuda is deactivating, TF should fails\nwith a nice message when trying to build for cuda, right?\nOn Thu, Jul 28, 2016 at 12:17 PM David Z. Chen notifications@github.com\nwrote:\n\nIn third_party/gpus/cuda/BUILD.tpl\n#3269 (comment):\n\n\n\n\n+cc_library(\n\nname = \"cupti_dsos\",\ndata = [\n\n   cupti_library_path(),\n\n\n],\nvisibility = [\"//visibility:public\"],\n+)\n\n\n\n\n\n+# TODO(opensource): for now, we have to invoke the cuda_config.sh manually in the source tree.\n+# This rule checks if Cuda libraries in the source tree has been properly configured.\n+# The output list makes bazel runs this rule first if the Cuda files are missing.\n+# This gives us an opportunity to check and print a meaningful error message.\n+# But we will need to create the output file list to make bazel happy in a successful run.\n+#genrule(\n\nI'm not completely following. This is a sanity check to determine whether\nthe cuda files are set up correctly. In the context of this change, we\nwould want a similar sanity check to determine whether @local_config_cuda\nis reasonable, which, come to think of it, might be more suitable\nimplemented in cuda_configure.bzl rather than as a build target. WDYT?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/tensorflow/tensorflow/pull/3269/files/96a4da93ddddb723216a601f3a876b466f78558c#r72597490,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADjHf_gPZztewrxTPWKs1p872-5RQoGQks5qaIHIgaJpZM4JJPRy\n."}