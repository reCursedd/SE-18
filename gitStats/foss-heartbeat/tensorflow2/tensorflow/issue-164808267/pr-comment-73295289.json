{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/73295289", "pull_request_review_id": null, "id": 73295289, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDczMjk1Mjg5", "diff_hunk": "@@ -0,0 +1,235 @@\n+licenses([\"restricted\"])  # MPL2, portions GPL v3, LGPL v3, BSD-like\n+\n+load(\"@local_config_cuda//cuda:build_defs.bzl\", \"if_cuda\")\n+load(\"@local_config_cuda//cuda:platform.bzl\", \"cuda_library_path\")\n+load(\"@local_config_cuda//cuda:platform.bzl\", \"cuda_static_library_path\")\n+load(\"@local_config_cuda//cuda:platform.bzl\", \"cudnn_library_path\")\n+load(\"@local_config_cuda//cuda:platform.bzl\", \"cupti_library_path\")\n+load(\"@local_config_cuda//cuda:platform.bzl\", \"readlink_command\")\n+\n+package(default_visibility = [\"//visibility:public\"])\n+\n+config_setting(\n+    name = \"using_gcudacc\",\n+    values = {\n+        \"define\": \"using_cuda_gcudacc=true\",\n+    },\n+    visibility = [\"//visibility:public\"],\n+)\n+\n+config_setting(\n+    name = \"using_nvcc\",\n+    values = {\n+        \"define\": \"using_cuda_nvcc=true\",\n+    },\n+)\n+\n+config_setting(\n+    name = \"using_clang\",\n+    values = {\n+        \"define\": \"using_cuda_clang=true\",\n+    },\n+)\n+\n+# Equivalent to using_clang && -c opt.\n+config_setting(\n+    name = \"using_clang_opt\",\n+    values = {\n+        \"define\": \"using_cuda_clang=true\",\n+        \"compilation_mode\": \"opt\",\n+    },\n+)\n+\n+config_setting(\n+    name = \"darwin\",\n+    values = {\"cpu\": \"darwin\"},\n+    visibility = [\"//visibility:public\"],\n+)\n+\n+cc_library(\n+    name = \"cuda_headers\",\n+    hdrs = glob([\n+        \"**/*.h\",\n+    ]),\n+    includes = [\".\", \"include\"],\n+    visibility = [\"//visibility:public\"],\n+)\n+\n+cc_library(\n+    name = \"cudart_static\",\n+    srcs = [\n+        cuda_static_library_path(\"cudart\"),\n+    ],\n+    includes = [\"include/\"],\n+    linkopts = [\n+        \"-ldl\",\n+        \"-lpthread\",\n+    ] + select({\n+        \"@//tensorflow:darwin\": [],\n+        \"//conditions:default\": [\"-lrt\"]\n+    }),\n+    visibility = [\"//visibility:public\"],\n+)\n+\n+cc_library(\n+    name = \"cudart\",\n+    srcs = [\n+        cuda_library_path(\"cudart\")\n+    ],\n+    data = [\n+        cuda_library_path(\"cudart\")\n+    ],\n+    includes = [\"include/\"],\n+    visibility = [\"//visibility:public\"],\n+    linkstatic = 1,\n+)\n+\n+cc_library(\n+    name = \"cublas\",\n+    srcs = [\n+        cuda_library_path(\"cublas\")\n+    ],\n+    data = [\n+        cuda_library_path(\"cublas\")\n+    ],\n+    includes = [\"include/\"],\n+    visibility = [\"//visibility:public\"],\n+    linkstatic = 1,\n+)\n+\n+cc_library(\n+    name = \"cudnn\",\n+    srcs = [\n+        cudnn_library_path()\n+    ],\n+    data = [\n+        cudnn_library_path()\n+    ],\n+    includes = [\"include/\"],\n+    visibility = [\"//visibility:public\"],\n+    linkstatic = 1,\n+)\n+\n+cc_library(\n+    name = \"cufft\",\n+    srcs = [\n+        cuda_library_path(\"cufft\")\n+    ],\n+    data = [\n+        cuda_library_path(\"cufft\")\n+    ],\n+    includes = [\"include/\"],\n+    visibility = [\"//visibility:public\"],\n+    linkstatic = 1,\n+)\n+\n+cc_library(\n+    name = \"curand\",\n+    srcs = [\n+        cuda_library_path(\"curand\")\n+    ],\n+    data = [\n+        cuda_library_path(\"curand\")\n+    ],\n+    includes = [\"include/\"],\n+    visibility = [\"//visibility:public\"],\n+    linkstatic = 1,\n+)\n+\n+cc_library(\n+    name = \"cuda\",\n+    deps = [\n+        \":cuda_headers\",\n+        \":cudart\",\n+        \":cublas\",\n+        \":cudnn\",\n+        \":cufft\",\n+        \":curand\",\n+    ],\n+    visibility = [\"//visibility:public\"],\n+)\n+\n+cc_library(\n+    name = \"cupti_headers\",\n+    hdrs = glob([\n+        \"**/*.h\",\n+    ]),\n+    includes = [\".\", \"extras/CUPTI/include/\"],\n+    visibility = [\"//visibility:public\"],\n+)\n+\n+cc_library(\n+    name = \"cupti_dsos\",\n+    data = [\n+        cupti_library_path(),\n+    ],\n+    visibility = [\"//visibility:public\"],\n+)\n+\n+\n+# TODO(opensource): for now, we have to invoke the cuda_config.sh manually in the source tree.\n+# This rule checks if Cuda libraries in the source tree has been properly configured.\n+# The output list makes bazel runs this rule first if the Cuda files are missing.\n+# This gives us an opportunity to check and print a meaningful error message.\n+# But we will need to create the output file list to make bazel happy in a successful run.\n+#genrule(", "path": "third_party/gpus/cuda/BUILD.tpl", "position": null, "original_position": 175, "commit_id": "353235e0b2b35f3df43f42ef84ca00ccda7a3a6d", "original_commit_id": "96a4da93ddddb723216a601f3a876b466f78558c", "user": {"login": "davidzchen", "id": 5283042, "node_id": "MDQ6VXNlcjUyODMwNDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5283042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidzchen", "html_url": "https://github.com/davidzchen", "followers_url": "https://api.github.com/users/davidzchen/followers", "following_url": "https://api.github.com/users/davidzchen/following{/other_user}", "gists_url": "https://api.github.com/users/davidzchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidzchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidzchen/subscriptions", "organizations_url": "https://api.github.com/users/davidzchen/orgs", "repos_url": "https://api.github.com/users/davidzchen/repos", "events_url": "https://api.github.com/users/davidzchen/events{/privacy}", "received_events_url": "https://api.github.com/users/davidzchen/received_events", "type": "User", "site_admin": false}, "body": "Actually, it seems that even with the build configured with GPU support turned off, `tensorflow/platform/default/build_config:cuda` still expects the CUDA toolkit files to be present. I have added some code to create dummy CUDA toolkit files in `cuda_configure` for the codepath where CUDA support is disabled, which allowed the sanity tests to pass.\n", "created_at": "2016-08-03T07:57:56Z", "updated_at": "2016-08-20T09:45:57Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/3269#discussion_r73295289", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/3269", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/73295289"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/3269#discussion_r73295289"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/3269"}}, "body_html": "<p>Actually, it seems that even with the build configured with GPU support turned off, <code>tensorflow/platform/default/build_config:cuda</code> still expects the CUDA toolkit files to be present. I have added some code to create dummy CUDA toolkit files in <code>cuda_configure</code> for the codepath where CUDA support is disabled, which allowed the sanity tests to pass.</p>", "body_text": "Actually, it seems that even with the build configured with GPU support turned off, tensorflow/platform/default/build_config:cuda still expects the CUDA toolkit files to be present. I have added some code to create dummy CUDA toolkit files in cuda_configure for the codepath where CUDA support is disabled, which allowed the sanity tests to pass."}