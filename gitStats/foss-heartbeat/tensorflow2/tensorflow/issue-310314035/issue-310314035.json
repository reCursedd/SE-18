{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18158", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18158/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18158/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18158/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18158", "id": 310314035, "node_id": "MDU6SXNzdWUzMTAzMTQwMzU=", "number": 18158, "title": "Centos: C++, No OpKernel was registered to support Op 'RandomUniform' with these attrs.", "user": {"login": "jw2100", "id": 25952087, "node_id": "MDQ6VXNlcjI1OTUyMDg3", "avatar_url": "https://avatars0.githubusercontent.com/u/25952087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jw2100", "html_url": "https://github.com/jw2100", "followers_url": "https://api.github.com/users/jw2100/followers", "following_url": "https://api.github.com/users/jw2100/following{/other_user}", "gists_url": "https://api.github.com/users/jw2100/gists{/gist_id}", "starred_url": "https://api.github.com/users/jw2100/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jw2100/subscriptions", "organizations_url": "https://api.github.com/users/jw2100/orgs", "repos_url": "https://api.github.com/users/jw2100/repos", "events_url": "https://api.github.com/users/jw2100/events{/privacy}", "received_events_url": "https://api.github.com/users/jw2100/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2018-04-01T10:34:42Z", "updated_at": "2018-06-10T18:59:20Z", "closed_at": "2018-06-10T18:33:30Z", "author_association": "NONE", "body_html": "<p>OS Platform : Cestos7<br>\npython:2.7<br>\ngcc:4.8<br>\nTensorFlow installed from source<br>\ntf version : ('v1.4.0-19-ga52c8d9', '1.4.1')<br>\nBazel version:N/A<br>\nCUDA Version 8.0.61<br>\nCUDNN_MAJOR : 6<br>\nGPU model and memory: 22912MiB*4</p>\n<p>Invalid argument: No OpKernel was registered to support Op 'RandomUniform' with these attrs.  Registered devices: [CPU], Registered kernels:<br>\n<br>\n[[Node: loss/transitions/Initializer/random_uniform/RandomUniform = RandomUniform<a href=\"loss/transitions/Initializer/random_uniform/shape\">T=DT_INT32, _class=[\"loc:@loss/transitions\"], _output_shapes=[[71,71]], dtype=DT_FLOAT, seed=0, seed2=0</a>]]</p>\n<p>the C++ code is :</p>\n<pre><code>int main(int argc, char* argv[]) {\n\n\tstd::cout &lt;&lt; \"test start----.\\n\";\n\tSession* session;\n\tStatus status = NewSession(SessionOptions(), &amp;session);\n\tif (!status.ok()) {\n\t\tstd::cout &lt;&lt; status.ToString() &lt;&lt; \"\\n\";\n\t\treturn 1;\n\t}\n\tstd::cout &lt;&lt; \"Session successfully created..\\n\";\n\n\n\t//GraphDef graph_def;\n\t//status = ReadBinaryProto(Env::Default(), \"../demo/deep_model/freeze_graph.pb\", &amp;graph_def);\n\t//\n\tMetaGraphDef graph_def;\n\tstatus = ReadBinaryProto(Env::Default(), \"../src/checkpoints/model-1.meta\", &amp;graph_def);\n\tif (!status.ok()) {\n\t\tstd::cout &lt;&lt; \"readerror=\" &lt;&lt; status.ToString() &lt;&lt; std::endl;\n\t\treturn 0;\n\t} \n\telse {\n\t\tstd::cout &lt;&lt; \"Load graph protobuf successfully\" &lt;&lt; std::endl;\n\t}\n\n\n\t//status = session-&gt;Create(graph_def);\n\tstatus = session-&gt;Create(graph_def.graph_def());\n\tif (!status.ok()) {\n  \t\tstd::cout &lt;&lt; std::endl &lt;&lt; std::endl &lt;&lt; \"error:\"&lt;&lt; status.ToString() &lt;&lt; std::endl;\n\t} \n\telse {\n  \t\tstd::cout &lt;&lt; \"Add graph to session successfully\" &lt;&lt; std::endl;\n\t}\n\n\ttensorflow::Tensor checkpointTensor(DT_STRING, tensorflow::TensorShape());\n\tcheckpointTensor.scalar&lt;string&gt;()() = \"../src/checkpoints/model-1\";\n   \n\tstatus = session-&gt;Run(\n\t\t{{ graph_def.saver_def().filename_tensor_name(), checkpointTensor }},\n        \t{},\n        \t{graph_def.saver_def().restore_op_name()},\n       \t\tnullptr);\n\tif (!status.ok()) {\n\t\tstd::cout &lt;&lt; \"run1:\" &lt;&lt; status.ToString() &lt;&lt; std::endl;\n\t\treturn 0;\n\t}\n\tstd::cout &lt;&lt; \"ok\" &lt;&lt; std::endl;\n\n\tsession-&gt;Close();\n\t\n}\n</code></pre>", "body_text": "OS Platform : Cestos7\npython:2.7\ngcc:4.8\nTensorFlow installed from source\ntf version : ('v1.4.0-19-ga52c8d9', '1.4.1')\nBazel version:N/A\nCUDA Version 8.0.61\nCUDNN_MAJOR : 6\nGPU model and memory: 22912MiB*4\nInvalid argument: No OpKernel was registered to support Op 'RandomUniform' with these attrs.  Registered devices: [CPU], Registered kernels:\n\n[[Node: loss/transitions/Initializer/random_uniform/RandomUniform = RandomUniformT=DT_INT32, _class=[\"loc:@loss/transitions\"], _output_shapes=[[71,71]], dtype=DT_FLOAT, seed=0, seed2=0]]\nthe C++ code is :\nint main(int argc, char* argv[]) {\n\n\tstd::cout << \"test start----.\\n\";\n\tSession* session;\n\tStatus status = NewSession(SessionOptions(), &session);\n\tif (!status.ok()) {\n\t\tstd::cout << status.ToString() << \"\\n\";\n\t\treturn 1;\n\t}\n\tstd::cout << \"Session successfully created..\\n\";\n\n\n\t//GraphDef graph_def;\n\t//status = ReadBinaryProto(Env::Default(), \"../demo/deep_model/freeze_graph.pb\", &graph_def);\n\t//\n\tMetaGraphDef graph_def;\n\tstatus = ReadBinaryProto(Env::Default(), \"../src/checkpoints/model-1.meta\", &graph_def);\n\tif (!status.ok()) {\n\t\tstd::cout << \"readerror=\" << status.ToString() << std::endl;\n\t\treturn 0;\n\t} \n\telse {\n\t\tstd::cout << \"Load graph protobuf successfully\" << std::endl;\n\t}\n\n\n\t//status = session->Create(graph_def);\n\tstatus = session->Create(graph_def.graph_def());\n\tif (!status.ok()) {\n  \t\tstd::cout << std::endl << std::endl << \"error:\"<< status.ToString() << std::endl;\n\t} \n\telse {\n  \t\tstd::cout << \"Add graph to session successfully\" << std::endl;\n\t}\n\n\ttensorflow::Tensor checkpointTensor(DT_STRING, tensorflow::TensorShape());\n\tcheckpointTensor.scalar<string>()() = \"../src/checkpoints/model-1\";\n   \n\tstatus = session->Run(\n\t\t{{ graph_def.saver_def().filename_tensor_name(), checkpointTensor }},\n        \t{},\n        \t{graph_def.saver_def().restore_op_name()},\n       \t\tnullptr);\n\tif (!status.ok()) {\n\t\tstd::cout << \"run1:\" << status.ToString() << std::endl;\n\t\treturn 0;\n\t}\n\tstd::cout << \"ok\" << std::endl;\n\n\tsession->Close();\n\t\n}", "body": "OS Platform : Cestos7\r\npython:2.7\r\ngcc:4.8\r\nTensorFlow installed from source\r\ntf version : ('v1.4.0-19-ga52c8d9', '1.4.1')\r\nBazel version:N/A\r\nCUDA Version 8.0.61\r\nCUDNN_MAJOR : 6\r\nGPU model and memory: 22912MiB*4\r\n\r\n\r\nInvalid argument: No OpKernel was registered to support Op 'RandomUniform' with these attrs.  Registered devices: [CPU], Registered kernels:\r\n  <no registered kernels>\r\n[[Node: loss/transitions/Initializer/random_uniform/RandomUniform = RandomUniform[T=DT_INT32, _class=[\"loc:@loss/transitions\"], _output_shapes=[[71,71]], dtype=DT_FLOAT, seed=0, seed2=0](loss/transitions/Initializer/random_uniform/shape)]]\r\n\r\nthe C++ code is :\r\n\r\n```\r\nint main(int argc, char* argv[]) {\r\n\r\n\tstd::cout << \"test start----.\\n\";\r\n\tSession* session;\r\n\tStatus status = NewSession(SessionOptions(), &session);\r\n\tif (!status.ok()) {\r\n\t\tstd::cout << status.ToString() << \"\\n\";\r\n\t\treturn 1;\r\n\t}\r\n\tstd::cout << \"Session successfully created..\\n\";\r\n\r\n\r\n\t//GraphDef graph_def;\r\n\t//status = ReadBinaryProto(Env::Default(), \"../demo/deep_model/freeze_graph.pb\", &graph_def);\r\n\t//\r\n\tMetaGraphDef graph_def;\r\n\tstatus = ReadBinaryProto(Env::Default(), \"../src/checkpoints/model-1.meta\", &graph_def);\r\n\tif (!status.ok()) {\r\n\t\tstd::cout << \"readerror=\" << status.ToString() << std::endl;\r\n\t\treturn 0;\r\n\t} \r\n\telse {\r\n\t\tstd::cout << \"Load graph protobuf successfully\" << std::endl;\r\n\t}\r\n\r\n\r\n\t//status = session->Create(graph_def);\r\n\tstatus = session->Create(graph_def.graph_def());\r\n\tif (!status.ok()) {\r\n  \t\tstd::cout << std::endl << std::endl << \"error:\"<< status.ToString() << std::endl;\r\n\t} \r\n\telse {\r\n  \t\tstd::cout << \"Add graph to session successfully\" << std::endl;\r\n\t}\r\n\r\n\ttensorflow::Tensor checkpointTensor(DT_STRING, tensorflow::TensorShape());\r\n\tcheckpointTensor.scalar<string>()() = \"../src/checkpoints/model-1\";\r\n   \r\n\tstatus = session->Run(\r\n\t\t{{ graph_def.saver_def().filename_tensor_name(), checkpointTensor }},\r\n        \t{},\r\n        \t{graph_def.saver_def().restore_op_name()},\r\n       \t\tnullptr);\r\n\tif (!status.ok()) {\r\n\t\tstd::cout << \"run1:\" << status.ToString() << std::endl;\r\n\t\treturn 0;\r\n\t}\r\n\tstd::cout << \"ok\" << std::endl;\r\n\r\n\tsession->Close();\r\n\t\r\n}\r\n```"}