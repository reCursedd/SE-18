{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/240776254", "html_url": "https://github.com/tensorflow/tensorflow/issues/3903#issuecomment-240776254", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3903", "id": 240776254, "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDc3NjI1NA==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2016-08-18T16:19:11Z", "updated_at": "2016-08-18T16:19:11Z", "author_association": "CONTRIBUTOR", "body_html": "<p>In general, some shape information is lost if you call <code>Graph.as_graph_def(add_shapes=False)</code>, because when you build the graph there are often cases where <code>Tensor.set_shape()</code> is called to provide extra information. This happens in particular for variables, queues, <code>tf.nn.embedding_lookup()</code>, and other cases where the Python graph construction function has additional information about the semantics of a composition of ops that is not available when you look at each op in turn (as the shape inference does).</p>\n<p>Assuming you create the graph yourself, calling <code>as_graph_def(add_shapes=True)</code> will add that information to the <code>GraphDef</code> so that you can restore it when it is imported. If the <code>GraphDef</code> was created by someone else, and they didn't add the inferred shapes to it, I'm not aware of anything you can do to infer that information.</p>", "body_text": "In general, some shape information is lost if you call Graph.as_graph_def(add_shapes=False), because when you build the graph there are often cases where Tensor.set_shape() is called to provide extra information. This happens in particular for variables, queues, tf.nn.embedding_lookup(), and other cases where the Python graph construction function has additional information about the semantics of a composition of ops that is not available when you look at each op in turn (as the shape inference does).\nAssuming you create the graph yourself, calling as_graph_def(add_shapes=True) will add that information to the GraphDef so that you can restore it when it is imported. If the GraphDef was created by someone else, and they didn't add the inferred shapes to it, I'm not aware of anything you can do to infer that information.", "body": "In general, some shape information is lost if you call `Graph.as_graph_def(add_shapes=False)`, because when you build the graph there are often cases where `Tensor.set_shape()` is called to provide extra information. This happens in particular for variables, queues, `tf.nn.embedding_lookup()`, and other cases where the Python graph construction function has additional information about the semantics of a composition of ops that is not available when you look at each op in turn (as the shape inference does).\n\nAssuming you create the graph yourself, calling `as_graph_def(add_shapes=True)` will add that information to the `GraphDef` so that you can restore it when it is imported. If the `GraphDef` was created by someone else, and they didn't add the inferred shapes to it, I'm not aware of anything you can do to infer that information.\n"}