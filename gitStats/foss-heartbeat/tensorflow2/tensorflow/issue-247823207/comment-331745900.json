{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/331745900", "html_url": "https://github.com/tensorflow/tensorflow/issues/12019#issuecomment-331745900", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12019", "id": 331745900, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTc0NTkwMA==", "user": {"login": "yongtang", "id": 6932348, "node_id": "MDQ6VXNlcjY5MzIzNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6932348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yongtang", "html_url": "https://github.com/yongtang", "followers_url": "https://api.github.com/users/yongtang/followers", "following_url": "https://api.github.com/users/yongtang/following{/other_user}", "gists_url": "https://api.github.com/users/yongtang/gists{/gist_id}", "starred_url": "https://api.github.com/users/yongtang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yongtang/subscriptions", "organizations_url": "https://api.github.com/users/yongtang/orgs", "repos_url": "https://api.github.com/users/yongtang/repos", "events_url": "https://api.github.com/users/yongtang/events{/privacy}", "received_events_url": "https://api.github.com/users/yongtang/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-24T22:53:03Z", "updated_at": "2017-09-24T22:53:03Z", "author_association": "MEMBER", "body_html": "<p>Currently <code>tf.foldl</code> and <code>tf.foldr</code> converts input elems into a <code>Tensor</code>, and then the converted <code>Tensor</code> is converted into a <code>TensorArray</code>:<br>\n<div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/1e1b3d90295f9396a25b9cfd4c571f7949716182/tensorflow/python/ops/functional_ops.py#L100-L106\">tensorflow/tensorflow/python/ops/functional_ops.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 100 to 106\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/1e1b3d90295f9396a25b9cfd4c571f7949716182\">1e1b3d9</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L100\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"100\"></td>\n          <td id=\"LC100\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">#</span> Convert elems to tensor array.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L101\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"101\"></td>\n          <td id=\"LC101\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> elems <span class=\"pl-k\">=</span> ops.convert_to_tensor(elems, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>elems<span class=\"pl-pds\">\"</span></span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L102\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"102\"></td>\n          <td id=\"LC102\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> n <span class=\"pl-k\">=</span> array_ops.shape(elems)[<span class=\"pl-c1\">0</span>] </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L103\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"103\"></td>\n          <td id=\"LC103\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> elems_ta <span class=\"pl-k\">=</span> tensor_array_ops.TensorArray(<span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>elems.dtype, <span class=\"pl-v\">size</span><span class=\"pl-k\">=</span>n, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L104\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"104\"></td>\n          <td id=\"LC104\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">                                         <span class=\"pl-v\">dynamic_size</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L105\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"105\"></td>\n          <td id=\"LC105\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">                                         <span class=\"pl-v\">infer_shape</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L106\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"106\"></td>\n          <td id=\"LC106\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> elems_ta <span class=\"pl-k\">=</span> elems_ta.unstack(elems) </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>It is possible to bypass the step of <code>ops.convert_to_tensor()</code> and convert the input elems directly to a <code>TensorArray</code>. In this way, the restriction mentioned in this issue would be gone and the input elems could be any type as long as it is <code>Iterable</code>.</p>\n<p>However, this might be a change in behavior so I am not sure. Nevertheless I created a PR <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"260122329\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/13282\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/13282/hovercard\" href=\"https://github.com/tensorflow/tensorflow/pull/13282\">#13282</a> so that further discussion could be done there.</p>", "body_text": "Currently tf.foldl and tf.foldr converts input elems into a Tensor, and then the converted Tensor is converted into a TensorArray:\n\n  \n    \n      tensorflow/tensorflow/python/ops/functional_ops.py\n    \n    \n        Lines 100 to 106\n      in\n      1e1b3d9\n    \n    \n    \n    \n\n        \n          \n           # Convert elems to tensor array. \n        \n\n        \n          \n           elems = ops.convert_to_tensor(elems, name=\"elems\") \n        \n\n        \n          \n           n = array_ops.shape(elems)[0] \n        \n\n        \n          \n           elems_ta = tensor_array_ops.TensorArray(dtype=elems.dtype, size=n, \n        \n\n        \n          \n                                                   dynamic_size=False, \n        \n\n        \n          \n                                                   infer_shape=True) \n        \n\n        \n          \n           elems_ta = elems_ta.unstack(elems) \n        \n    \n  \n\n\nIt is possible to bypass the step of ops.convert_to_tensor() and convert the input elems directly to a TensorArray. In this way, the restriction mentioned in this issue would be gone and the input elems could be any type as long as it is Iterable.\nHowever, this might be a change in behavior so I am not sure. Nevertheless I created a PR #13282 so that further discussion could be done there.", "body": "Currently `tf.foldl` and `tf.foldr` converts input elems into a `Tensor`, and then the converted `Tensor` is converted into a `TensorArray`:\r\nhttps://github.com/tensorflow/tensorflow/blob/1e1b3d90295f9396a25b9cfd4c571f7949716182/tensorflow/python/ops/functional_ops.py#L100-L106\r\n\r\nIt is possible to bypass the step of `ops.convert_to_tensor()` and convert the input elems directly to a `TensorArray`. In this way, the restriction mentioned in this issue would be gone and the input elems could be any type as long as it is `Iterable`.\r\n\r\nHowever, this might be a change in behavior so I am not sure. Nevertheless I created a PR #13282 so that further discussion could be done there."}