{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/295497238", "html_url": "https://github.com/tensorflow/tensorflow/issues/9150#issuecomment-295497238", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9150", "id": 295497238, "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTQ5NzIzOA==", "user": {"login": "eaplatanios", "id": 1294940, "node_id": "MDQ6VXNlcjEyOTQ5NDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1294940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eaplatanios", "html_url": "https://github.com/eaplatanios", "followers_url": "https://api.github.com/users/eaplatanios/followers", "following_url": "https://api.github.com/users/eaplatanios/following{/other_user}", "gists_url": "https://api.github.com/users/eaplatanios/gists{/gist_id}", "starred_url": "https://api.github.com/users/eaplatanios/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eaplatanios/subscriptions", "organizations_url": "https://api.github.com/users/eaplatanios/orgs", "repos_url": "https://api.github.com/users/eaplatanios/repos", "events_url": "https://api.github.com/users/eaplatanios/events{/privacy}", "received_events_url": "https://api.github.com/users/eaplatanios/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-19T23:46:40Z", "updated_at": "2017-04-19T23:46:40Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5061\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alextp\">@alextp</a> Given that reference data types are going away, what input should I feed to ops such as <code>StridedSliceAssign</code> that have a <code>Ref(T)</code> input type?</p>\n<p>The op registration in the C++ code looks like this:</p>\n<div class=\"highlight highlight-source-c++\"><pre><span class=\"pl-en\">REGISTER_OP</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>StridedSliceAssign<span class=\"pl-pds\">\"</span></span>)\n    .Input(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ref: Ref(T)<span class=\"pl-pds\">\"</span></span>)\n    .Input(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>begin: Index<span class=\"pl-pds\">\"</span></span>)\n    .Input(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>end: Index<span class=\"pl-pds\">\"</span></span>)\n    .Input(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>strides: Index<span class=\"pl-pds\">\"</span></span>)\n    .Input(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>value: T<span class=\"pl-pds\">\"</span></span>)\n    .Output(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>output_ref: Ref(T)<span class=\"pl-pds\">\"</span></span>)\n    .Attr(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>T: type<span class=\"pl-pds\">\"</span></span>)\n    .Attr(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Index: {int32, int64}<span class=\"pl-pds\">\"</span></span>)\n    .Attr(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>begin_mask: int = 0<span class=\"pl-pds\">\"</span></span>)\n    .Attr(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>end_mask: int = 0<span class=\"pl-pds\">\"</span></span>)\n    .Attr(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ellipsis_mask: int = 0<span class=\"pl-pds\">\"</span></span>)\n    .Attr(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>new_axis_mask: int = 0<span class=\"pl-pds\">\"</span></span>)\n    .Attr(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>shrink_axis_mask: int = 0<span class=\"pl-pds\">\"</span></span>)</pre></div>\n<p>And similarly, what is the output data type of such an op?</p>", "body_text": "@alextp Given that reference data types are going away, what input should I feed to ops such as StridedSliceAssign that have a Ref(T) input type?\nThe op registration in the C++ code looks like this:\nREGISTER_OP(\"StridedSliceAssign\")\n    .Input(\"ref: Ref(T)\")\n    .Input(\"begin: Index\")\n    .Input(\"end: Index\")\n    .Input(\"strides: Index\")\n    .Input(\"value: T\")\n    .Output(\"output_ref: Ref(T)\")\n    .Attr(\"T: type\")\n    .Attr(\"Index: {int32, int64}\")\n    .Attr(\"begin_mask: int = 0\")\n    .Attr(\"end_mask: int = 0\")\n    .Attr(\"ellipsis_mask: int = 0\")\n    .Attr(\"new_axis_mask: int = 0\")\n    .Attr(\"shrink_axis_mask: int = 0\")\nAnd similarly, what is the output data type of such an op?", "body": "@alextp Given that reference data types are going away, what input should I feed to ops such as `StridedSliceAssign` that have a `Ref(T)` input type?\r\n\r\nThe op registration in the C++ code looks like this:\r\n\r\n```cpp\r\nREGISTER_OP(\"StridedSliceAssign\")\r\n    .Input(\"ref: Ref(T)\")\r\n    .Input(\"begin: Index\")\r\n    .Input(\"end: Index\")\r\n    .Input(\"strides: Index\")\r\n    .Input(\"value: T\")\r\n    .Output(\"output_ref: Ref(T)\")\r\n    .Attr(\"T: type\")\r\n    .Attr(\"Index: {int32, int64}\")\r\n    .Attr(\"begin_mask: int = 0\")\r\n    .Attr(\"end_mask: int = 0\")\r\n    .Attr(\"ellipsis_mask: int = 0\")\r\n    .Attr(\"new_axis_mask: int = 0\")\r\n    .Attr(\"shrink_axis_mask: int = 0\")\r\n```\r\n\r\nAnd similarly, what is the output data type of such an op?"}