{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/293994703", "html_url": "https://github.com/tensorflow/tensorflow/issues/9150#issuecomment-293994703", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9150", "id": 293994703, "node_id": "MDEyOklzc3VlQ29tbWVudDI5Mzk5NDcwMw==", "user": {"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-13T19:10:32Z", "updated_at": "2017-04-13T19:10:32Z", "author_association": "MEMBER", "body_html": "<div class=\"email-fragment\">For the python-c bridge we create at different points a numpy array which\npoints to TF-managed memory (and when the refcount of this numpy array goes\nto zero it decrements the refcount of the tf-managed memory) and a TF\nTensor which points to numpy-managed memory (and when the refcount of the\nTF Tensor goes to 0 it decrements the refcount of the numpy array). This\nway all interactions are correct.\n\nIf you can trigger unrefing of the scala object when TF calls the\ndestructor and trigger unrefing of the Tensor when scala is done with the\nbyte buffer all will be well I think.</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On Thu, Apr 13, 2017 at 10:35 AM, Anthony Platanios &lt; ***@***.***&gt; wrote:\n Also, since in the Python API for session.run, you do not copy the numpy\n array but only pass a pointer to its buffer, couldn't the Python garbage\n collector also deallocate the array, even when the native library might\n still be using it? That is, how is that problem avoided in the Python API?\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"221112357\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/9150\" href=\"https://github.com/tensorflow/tensorflow/issues/9150#issuecomment-293969307\">#9150 (comment)</a>&gt;,\n or mute the thread\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/AAATxTbsPO8WqREb9K_2lffABidhTvZlks5rvlzygaJpZM4M6yMu\">https://github.com/notifications/unsubscribe-auth/AAATxTbsPO8WqREb9K_2lffABidhTvZlks5rvlzygaJpZM4M6yMu</a>&gt;\n .\n</div>\n<div class=\"email-fragment\"></div>\n<div class=\"email-signature-reply\">-- \n - Alex</div>\n</div>", "body_text": "For the python-c bridge we create at different points a numpy array which\npoints to TF-managed memory (and when the refcount of this numpy array goes\nto zero it decrements the refcount of the tf-managed memory) and a TF\nTensor which points to numpy-managed memory (and when the refcount of the\nTF Tensor goes to 0 it decrements the refcount of the numpy array). This\nway all interactions are correct.\n\nIf you can trigger unrefing of the scala object when TF calls the\ndestructor and trigger unrefing of the Tensor when scala is done with the\nbyte buffer all will be well I think.\n\u2026\nOn Thu, Apr 13, 2017 at 10:35 AM, Anthony Platanios < ***@***.***> wrote:\n Also, since in the Python API for session.run, you do not copy the numpy\n array but only pass a pointer to its buffer, couldn't the Python garbage\n collector also deallocate the array, even when the native library might\n still be using it? That is, how is that problem avoided in the Python API?\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#9150 (comment)>,\n or mute the thread\n <https://github.com/notifications/unsubscribe-auth/AAATxTbsPO8WqREb9K_2lffABidhTvZlks5rvlzygaJpZM4M6yMu>\n .\n\n\n-- \n - Alex", "body": "For the python-c bridge we create at different points a numpy array which\npoints to TF-managed memory (and when the refcount of this numpy array goes\nto zero it decrements the refcount of the tf-managed memory) and a TF\nTensor which points to numpy-managed memory (and when the refcount of the\nTF Tensor goes to 0 it decrements the refcount of the numpy array). This\nway all interactions are correct.\n\nIf you can trigger unrefing of the scala object when TF calls the\ndestructor and trigger unrefing of the Tensor when scala is done with the\nbyte buffer all will be well I think.\n\nOn Thu, Apr 13, 2017 at 10:35 AM, Anthony Platanios <\nnotifications@github.com> wrote:\n\n> Also, since in the Python API for session.run, you do not copy the numpy\n> array but only pass a pointer to its buffer, couldn't the Python garbage\n> collector also deallocate the array, even when the native library might\n> still be using it? That is, how is that problem avoided in the Python API?\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/issues/9150#issuecomment-293969307>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAATxTbsPO8WqREb9K_2lffABidhTvZlks5rvlzygaJpZM4M6yMu>\n> .\n>\n\n\n\n-- \n - Alex\n"}