{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/296824819", "html_url": "https://github.com/tensorflow/tensorflow/issues/9150#issuecomment-296824819", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9150", "id": 296824819, "node_id": "MDEyOklzc3VlQ29tbWVudDI5NjgyNDgxOQ==", "user": {"login": "eaplatanios", "id": 1294940, "node_id": "MDQ6VXNlcjEyOTQ5NDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1294940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eaplatanios", "html_url": "https://github.com/eaplatanios", "followers_url": "https://api.github.com/users/eaplatanios/followers", "following_url": "https://api.github.com/users/eaplatanios/following{/other_user}", "gists_url": "https://api.github.com/users/eaplatanios/gists{/gist_id}", "starred_url": "https://api.github.com/users/eaplatanios/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eaplatanios/subscriptions", "organizations_url": "https://api.github.com/users/eaplatanios/orgs", "repos_url": "https://api.github.com/users/eaplatanios/repos", "events_url": "https://api.github.com/users/eaplatanios/events{/privacy}", "received_events_url": "https://api.github.com/users/eaplatanios/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-24T21:16:57Z", "updated_at": "2017-04-24T21:16:57Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Yeah I understand the misuse argument and I agree.</p>\n<p>One potential solution might be to expose \"dangerous\" functionality in the C API using some convention (e.g., naming <code>Unsafe...</code>) and to clearly state that such functionality is unsafe, might change in the future, and that it is recommended not to use it.</p>\n<p>If there is an alternative way to implement control flow ops and gradients using the current C API that's fine, but I think that missing support for something so important is quite limiting. While loops are very useful for RNNs and I would like to support them in the Scala API.</p>\n<p>The rest of the functionality needed (e.g., stacks, etc.) for computing gradients over loops is exposed through the data flow ops. I haven't found something that's not supported yet on that front, but if I do I'll mention it.</p>", "body_text": "Yeah I understand the misuse argument and I agree.\nOne potential solution might be to expose \"dangerous\" functionality in the C API using some convention (e.g., naming Unsafe...) and to clearly state that such functionality is unsafe, might change in the future, and that it is recommended not to use it.\nIf there is an alternative way to implement control flow ops and gradients using the current C API that's fine, but I think that missing support for something so important is quite limiting. While loops are very useful for RNNs and I would like to support them in the Scala API.\nThe rest of the functionality needed (e.g., stacks, etc.) for computing gradients over loops is exposed through the data flow ops. I haven't found something that's not supported yet on that front, but if I do I'll mention it.", "body": "Yeah I understand the misuse argument and I agree.\r\n\r\nOne potential solution might be to expose \"dangerous\" functionality in the C API using some convention (e.g., naming `Unsafe...`) and to clearly state that such functionality is unsafe, might change in the future, and that it is recommended not to use it.\r\n\r\nIf there is an alternative way to implement control flow ops and gradients using the current C API that's fine, but I think that missing support for something so important is quite limiting. While loops are very useful for RNNs and I would like to support them in the Scala API.\r\n\r\nThe rest of the functionality needed (e.g., stacks, etc.) for computing gradients over loops is exposed through the data flow ops. I haven't found something that's not supported yet on that front, but if I do I'll mention it."}