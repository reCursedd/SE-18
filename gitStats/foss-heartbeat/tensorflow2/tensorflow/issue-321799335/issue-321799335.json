{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19192", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19192/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19192/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19192/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19192", "id": 321799335, "node_id": "MDU6SXNzdWUzMjE3OTkzMzU=", "number": 19192, "title": "classifier.predict can't stop if input_fn return a sample tuple", "user": {"login": "mymusise", "id": 6883957, "node_id": "MDQ6VXNlcjY4ODM5NTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/6883957?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mymusise", "html_url": "https://github.com/mymusise", "followers_url": "https://api.github.com/users/mymusise/followers", "following_url": "https://api.github.com/users/mymusise/following{/other_user}", "gists_url": "https://api.github.com/users/mymusise/gists{/gist_id}", "starred_url": "https://api.github.com/users/mymusise/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mymusise/subscriptions", "organizations_url": "https://api.github.com/users/mymusise/orgs", "repos_url": "https://api.github.com/users/mymusise/repos", "events_url": "https://api.github.com/users/mymusise/events{/privacy}", "received_events_url": "https://api.github.com/users/mymusise/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jhseu", "id": 170179, "node_id": "MDQ6VXNlcjE3MDE3OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/170179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhseu", "html_url": "https://github.com/jhseu", "followers_url": "https://api.github.com/users/jhseu/followers", "following_url": "https://api.github.com/users/jhseu/following{/other_user}", "gists_url": "https://api.github.com/users/jhseu/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhseu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhseu/subscriptions", "organizations_url": "https://api.github.com/users/jhseu/orgs", "repos_url": "https://api.github.com/users/jhseu/repos", "events_url": "https://api.github.com/users/jhseu/events{/privacy}", "received_events_url": "https://api.github.com/users/jhseu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jhseu", "id": 170179, "node_id": "MDQ6VXNlcjE3MDE3OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/170179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhseu", "html_url": "https://github.com/jhseu", "followers_url": "https://api.github.com/users/jhseu/followers", "following_url": "https://api.github.com/users/jhseu/following{/other_user}", "gists_url": "https://api.github.com/users/jhseu/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhseu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhseu/subscriptions", "organizations_url": "https://api.github.com/users/jhseu/orgs", "repos_url": "https://api.github.com/users/jhseu/repos", "events_url": "https://api.github.com/users/jhseu/events{/privacy}", "received_events_url": "https://api.github.com/users/jhseu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-05-10T03:41:51Z", "updated_at": "2018-06-28T19:54:51Z", "closed_at": "2018-05-21T21:06:33Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: y</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.8</li>\n<li><strong>Python version</strong>: 3.6</li>\n<li><strong>Bazel version</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>: N/A</li>\n</ul>\n<div class=\"highlight highlight-source-python\"><pre>In [<span class=\"pl-c1\">7</span>]: <span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf; <span class=\"pl-c1\">print</span>(tf.<span class=\"pl-c1\">GIT_VERSION</span>, tf.<span class=\"pl-c1\">VERSION</span>)\nv1.8.0<span class=\"pl-k\">-</span><span class=\"pl-c1\">0</span><span class=\"pl-k\">-</span>g93bc2e2072 <span class=\"pl-c1\">1.8</span>.0</pre></div>\n<h1>Describe the problem</h1>\n<p>If <code>input_fn</code> return a sample tuple, it won't stop and predict again and again</p>\n<div class=\"highlight highlight-source-python\"><pre>result <span class=\"pl-k\">=</span> classifier.predict(<span class=\"pl-k\">lambda</span>: (ev_data,))</pre></div>\n<p>But, if <code>input_fn</code> return a <code>tf.data.Dataset</code>, it work well.</p>\n<div class=\"highlight highlight-source-python\"><pre>result <span class=\"pl-k\">=</span> classifier.predict(<span class=\"pl-k\">lambda</span>: eval_input_fn(ev_data, <span class=\"pl-v\">labels</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">None</span>, <span class=\"pl-v\">batch_size</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>))</pre></div>\n<p>After debug, i found a while loop can't stop in here <a href=\"https://github.com/tensorflow/tensorflow/blob/r1.8/tensorflow/python/estimator/estimator.py#L508\"><code>while not mon_sess.should_stop()</code></a></p>\n<p>But it seem like tuple is supported<a href=\"https://github.com/tensorflow/tensorflow/blob/r1.8/tensorflow/python/estimator/estimator.py#L456\"></a><br>\nSo, the return of <code>input_fn</code> must be <code>tf.data.Dataset</code> type? Or, should I give it a <a href=\"https://github.com/tensorflow/tensorflow/blob/r1.8/tensorflow/python/estimator/estimator.py#L445\">end-of-input exception</a>by myself?</p>\n<h3>Source code / logs</h3>\n<p>Here is my code</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">eval_input_fn</span>(<span class=\"pl-smi\">features</span>, <span class=\"pl-smi\">labels</span>, <span class=\"pl-smi\">batch_size</span>):\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span>An input function for evaluation or prediction<span class=\"pl-pds\">\"\"\"</span></span>\n    features <span class=\"pl-k\">=</span> <span class=\"pl-c1\">dict</span>(features)\n    <span class=\"pl-k\">if</span> labels <span class=\"pl-k\">is</span> <span class=\"pl-c1\">None</span>:\n        <span class=\"pl-c\"><span class=\"pl-c\">#</span> No labels, use only features.</span>\n        inputs <span class=\"pl-k\">=</span> features\n    <span class=\"pl-k\">else</span>:\n        inputs <span class=\"pl-k\">=</span> (features, labels)\n\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> Convert the inputs to a Dataset.</span>\n    dataset <span class=\"pl-k\">=</span> tf.data.Dataset.from_tensor_slices(inputs)\n\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> Batch the examples</span>\n    <span class=\"pl-k\">assert</span> batch_size <span class=\"pl-k\">is</span> <span class=\"pl-k\">not</span> <span class=\"pl-c1\">None</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>batch_size must not be None<span class=\"pl-pds\">\"</span></span>\n    dataset <span class=\"pl-k\">=</span> dataset.batch(batch_size)\n\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> Return the dataset.</span>\n    <span class=\"pl-k\">return</span> dataset\n\n\ntrain_x <span class=\"pl-k\">=</span> {<span class=\"pl-s\"><span class=\"pl-pds\">'</span>x1<span class=\"pl-pds\">'</span></span>: [<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>], <span class=\"pl-s\"><span class=\"pl-pds\">'</span>x2<span class=\"pl-pds\">'</span></span>: [<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>]}\nlabel <span class=\"pl-k\">=</span> [<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">0</span>]\n\nev_data <span class=\"pl-k\">=</span> {<span class=\"pl-s\"><span class=\"pl-pds\">'</span>x1<span class=\"pl-pds\">'</span></span>: [<span class=\"pl-c1\">0.5</span>, <span class=\"pl-c1\">0.5</span>, <span class=\"pl-c1\">0.5</span>, <span class=\"pl-c1\">1</span>], <span class=\"pl-s\"><span class=\"pl-pds\">'</span>x2<span class=\"pl-pds\">'</span></span>: [<span class=\"pl-c1\">0.5</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>]}\n\ntrain_steps <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1000</span>\nmy_feature_columns <span class=\"pl-k\">=</span> []\n<span class=\"pl-k\">for</span> key <span class=\"pl-k\">in</span> train_x.keys():\n    my_feature_columns.append(tf.feature_column.numeric_column(<span class=\"pl-v\">key</span><span class=\"pl-k\">=</span>key))\n\nclassifier <span class=\"pl-k\">=</span> tf.estimator.DNNClassifier(\n    <span class=\"pl-v\">feature_columns</span><span class=\"pl-k\">=</span>my_feature_columns,\n    <span class=\"pl-v\">hidden_units</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">4</span>],\n    <span class=\"pl-v\">n_classes</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">2</span>)\n\nclassifier.train(<span class=\"pl-k\">lambda</span>: (train_x, label), <span class=\"pl-v\">steps</span><span class=\"pl-k\">=</span>train_steps)\n\nresult <span class=\"pl-k\">=</span> classifier.predict(<span class=\"pl-k\">lambda</span>: eval_input_fn(ev_data, <span class=\"pl-v\">labels</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">None</span>, <span class=\"pl-v\">batch_size</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>))\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> result = classifier.predict(lambda: (ev_data,)) # it won't stop</span>\n<span class=\"pl-k\">for</span> r <span class=\"pl-k\">in</span> result:\n    <span class=\"pl-c1\">print</span>(r)</pre></div>\n<p>If I return <code>tf.data.Dataset</code>, here is output:</p>\n<pre lang=\"text\"><code>INFO:tensorflow:Using default config.\nWARNING:tensorflow:Using temporary folder as model directory: /tmp/tmpyu6blxd6\nINFO:tensorflow:Using config: {'_model_dir': '/tmp/tmpyu6blxd6', '_tf_random_seed': None, '_save_summary_steps': 100, '_save_checkpoints_steps': None, '_save_checkpoints_secs': 600, '_session_config': None, '_keep_checkpoint_max': 5, '_keep_checkpoint_every_n_hours': 10000, '_log_step_count_steps': 100, '_train_distribute': None, '_service': None, '_cluster_spec': &lt;tensorflow.python.training.server_lib.ClusterSpec object at 0x7f5c9dfcdd30&gt;, '_task_type': 'worker', '_task_id': 0, '_global_id_in_cluster': 0, '_master': '', '_evaluation_master': '', '_is_chief': True, '_num_ps_replicas': 0, '_num_worker_replicas': 1}\nINFO:tensorflow:Calling model_fn.\nINFO:tensorflow:Done calling model_fn.\nINFO:tensorflow:Create CheckpointSaverHook.\nINFO:tensorflow:Graph was finalized.\nINFO:tensorflow:Running local_init_op.\nINFO:tensorflow:Done running local_init_op.\nINFO:tensorflow:Saving checkpoints for 1 into /tmp/tmpyu6blxd6/model.ckpt.\nINFO:tensorflow:loss = 2.571034, step = 1\nINFO:tensorflow:global_step/sec: 792.849\nINFO:tensorflow:loss = 1.2854626, step = 101 (0.126 sec)\nINFO:tensorflow:global_step/sec: 1621.83\nINFO:tensorflow:loss = 0.58735335, step = 201 (0.062 sec)\nINFO:tensorflow:global_step/sec: 1585.9\nINFO:tensorflow:loss = 0.37925595, step = 301 (0.063 sec)\nINFO:tensorflow:global_step/sec: 1579.13\nINFO:tensorflow:loss = 0.286068, step = 401 (0.063 sec)\nINFO:tensorflow:global_step/sec: 1656.07\nINFO:tensorflow:loss = 0.23221238, step = 501 (0.060 sec)\nINFO:tensorflow:global_step/sec: 1624.02\nINFO:tensorflow:loss = 0.1968127, step = 601 (0.062 sec)\nINFO:tensorflow:global_step/sec: 1565.82\nINFO:tensorflow:loss = 0.1710473, step = 701 (0.064 sec)\nINFO:tensorflow:global_step/sec: 1619.16\nINFO:tensorflow:loss = 0.15148035, step = 801 (0.062 sec)\nINFO:tensorflow:global_step/sec: 1600.48\nINFO:tensorflow:loss = 0.13629705, step = 901 (0.063 sec)\nINFO:tensorflow:Saving checkpoints for 1000 into /tmp/tmpyu6blxd6/model.ckpt.\nINFO:tensorflow:Loss for final step: 0.12395525.\nINFO:tensorflow:Calling model_fn.\nINFO:tensorflow:Done calling model_fn.\nINFO:tensorflow:Graph was finalized.\nINFO:tensorflow:Restoring parameters from /tmp/tmpyu6blxd6/model.ckpt-1000\nINFO:tensorflow:Running local_init_op.\nINFO:tensorflow:Done running local_init_op.\n{'logits': array([-2.8130803], dtype=float32), 'logistic': array([0.05662142], dtype=float32), 'probabilities': array([0.94337857, 0.05662142], dtype=float32), 'class_ids': array([0]), 'classes': array([b'0'], dtype=object)}\n{'logits': array([2.2674427], dtype=float32), 'logistic': array([0.90614456], dtype=float32), 'probabilities': array([0.09385548, 0.90614456], dtype=float32), 'class_ids': array([1]), 'classes': array([b'1'], dtype=object)}\n{'logits': array([1.0914161], dtype=float32), 'logistic': array([0.7486483], dtype=float32), 'probabilities': array([0.2513517, 0.7486483], dtype=float32), 'class_ids': array([1]), 'classes': array([b'1'], dtype=object)}\n{'logits': array([-2.8130803], dtype=float32), 'logistic': array([0.05662142], dtype=float32), 'probabilities': array([0.94337857, 0.05662142], dtype=float32), 'class_ids': array([0]), 'classes': array([b'0'], dtype=object)}\n</code></pre>\n<p>But if I return a sample tuple, the output whould stop like this:</p>\n<pre><code>...\n...\n...\nINFO:tensorflow:Done running local_init_op.\n{'logits': array([-2.8130803], dtype=float32), 'logistic': array([0.05662142], dtype=float32), 'probabilities': array([0.94337857, 0.05662142], dtype=float32), 'class_ids': array([0]), 'classes': array([b'0'], dtype=object)}\n{'logits': array([2.2674427], dtype=float32), 'logistic': array([0.90614456], dtype=float32), 'probabilities': array([0.09385548, 0.90614456], dtype=float32), 'class_ids': array([1]), 'classes': array([b'1'], dtype=object)}\n{'logits': array([1.0914161], dtype=float32), 'logistic': array([0.7486483], dtype=float32), 'probabilities': array([0.2513517, 0.7486483], dtype=float32), 'class_ids': array([1]), 'classes': array([b'1'], dtype=object)}\n{'logits': array([-2.8130803], dtype=float32), 'logistic': array([0.05662142], dtype=float32), 'probabilities': array([0.94337857, 0.05662142], dtype=float32), 'class_ids': array([0]), 'classes': array([b'0'], dtype=object)}\n{'logits': array([-2.8130803], dtype=float32), 'logistic': array([0.05662142], dtype=float32), 'probabilities': array([0.94337857, 0.05662142], dtype=float32), 'class_ids': array([0]), 'classes': array([b'0'], dtype=object)}\n{'logits': array([2.2674427], dtype=float32), 'logistic': array([0.90614456], dtype=float32), 'probabilities': array([0.09385548, 0.90614456], dtype=float32), 'class_ids': array([1]), 'classes': array([b'1'], dtype=object)}\n{'logits': array([1.0914161], dtype=float32), 'logistic': array([0.7486483], dtype=float32), 'probabilities': array([0.2513517, 0.7486483], dtype=float32), 'class_ids': array([1]), 'classes': array([b'1'], dtype=object)}\n{'logits': array([-2.8130803], dtype=float32), 'logistic': array([0.05662142], dtype=float32), 'probabilities': array([0.94337857, 0.05662142], dtype=float32), 'class_ids': array([0]), 'classes': array([b'0'], dtype=object)}\n{'logits': array([-2.8130803], dtype=float32), 'logistic': array([0.05662142], dtype=float32), 'probabilities': array([0.94337857, 0.05662142], dtype=float32), 'class_ids': array([0]), 'classes': array([b'0'], dtype=object)}\n{'logits': array([2.2674427], dtype=float32), 'logistic': array([0.90614456], dtype=float32), 'probabilities': array([0.09385548, 0.90614456], dtype=float32), 'class_ids': array([1]), 'classes': array([b'1'], dtype=object)}\n{'logits': array([1.0914161], dtype=float32), 'logistic': array([0.7486483], dtype=float32), 'probabilities': array([0.2513517, 0.7486483], dtype=float32), 'class_ids': array([1]), 'classes': array([b'1'], dtype=object)}\n{'logits': array([-2.8130803], dtype=float32), 'logistic': array([0.05662142], dtype=float32), 'probabilities': array([0.94337857, 0.05662142], dtype=float32), 'class_ids': array([0]), 'classes': array([b'0'], dtype=object)}\n.....more\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): y\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 16.04\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): 1.8\nPython version: 3.6\nBazel version: N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce: N/A\n\nIn [7]: import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\nv1.8.0-0-g93bc2e2072 1.8.0\nDescribe the problem\nIf input_fn return a sample tuple, it won't stop and predict again and again\nresult = classifier.predict(lambda: (ev_data,))\nBut, if input_fn return a tf.data.Dataset, it work well.\nresult = classifier.predict(lambda: eval_input_fn(ev_data, labels=None, batch_size=1))\nAfter debug, i found a while loop can't stop in here while not mon_sess.should_stop()\nBut it seem like tuple is supported\nSo, the return of input_fn must be tf.data.Dataset type? Or, should I give it a end-of-input exceptionby myself?\nSource code / logs\nHere is my code\nimport tensorflow as tf\n\n\ndef eval_input_fn(features, labels, batch_size):\n    \"\"\"An input function for evaluation or prediction\"\"\"\n    features = dict(features)\n    if labels is None:\n        # No labels, use only features.\n        inputs = features\n    else:\n        inputs = (features, labels)\n\n    # Convert the inputs to a Dataset.\n    dataset = tf.data.Dataset.from_tensor_slices(inputs)\n\n    # Batch the examples\n    assert batch_size is not None, \"batch_size must not be None\"\n    dataset = dataset.batch(batch_size)\n\n    # Return the dataset.\n    return dataset\n\n\ntrain_x = {'x1': [0, 1, 0, 1], 'x2': [0, 0, 1, 1]}\nlabel = [0, 1, 1, 0]\n\nev_data = {'x1': [0.5, 0.5, 0.5, 1], 'x2': [0.5, 0, 1, 1]}\n\ntrain_steps = 1000\nmy_feature_columns = []\nfor key in train_x.keys():\n    my_feature_columns.append(tf.feature_column.numeric_column(key=key))\n\nclassifier = tf.estimator.DNNClassifier(\n    feature_columns=my_feature_columns,\n    hidden_units=[4, 4],\n    n_classes=2)\n\nclassifier.train(lambda: (train_x, label), steps=train_steps)\n\nresult = classifier.predict(lambda: eval_input_fn(ev_data, labels=None, batch_size=1))\n# result = classifier.predict(lambda: (ev_data,)) # it won't stop\nfor r in result:\n    print(r)\nIf I return tf.data.Dataset, here is output:\nINFO:tensorflow:Using default config.\nWARNING:tensorflow:Using temporary folder as model directory: /tmp/tmpyu6blxd6\nINFO:tensorflow:Using config: {'_model_dir': '/tmp/tmpyu6blxd6', '_tf_random_seed': None, '_save_summary_steps': 100, '_save_checkpoints_steps': None, '_save_checkpoints_secs': 600, '_session_config': None, '_keep_checkpoint_max': 5, '_keep_checkpoint_every_n_hours': 10000, '_log_step_count_steps': 100, '_train_distribute': None, '_service': None, '_cluster_spec': <tensorflow.python.training.server_lib.ClusterSpec object at 0x7f5c9dfcdd30>, '_task_type': 'worker', '_task_id': 0, '_global_id_in_cluster': 0, '_master': '', '_evaluation_master': '', '_is_chief': True, '_num_ps_replicas': 0, '_num_worker_replicas': 1}\nINFO:tensorflow:Calling model_fn.\nINFO:tensorflow:Done calling model_fn.\nINFO:tensorflow:Create CheckpointSaverHook.\nINFO:tensorflow:Graph was finalized.\nINFO:tensorflow:Running local_init_op.\nINFO:tensorflow:Done running local_init_op.\nINFO:tensorflow:Saving checkpoints for 1 into /tmp/tmpyu6blxd6/model.ckpt.\nINFO:tensorflow:loss = 2.571034, step = 1\nINFO:tensorflow:global_step/sec: 792.849\nINFO:tensorflow:loss = 1.2854626, step = 101 (0.126 sec)\nINFO:tensorflow:global_step/sec: 1621.83\nINFO:tensorflow:loss = 0.58735335, step = 201 (0.062 sec)\nINFO:tensorflow:global_step/sec: 1585.9\nINFO:tensorflow:loss = 0.37925595, step = 301 (0.063 sec)\nINFO:tensorflow:global_step/sec: 1579.13\nINFO:tensorflow:loss = 0.286068, step = 401 (0.063 sec)\nINFO:tensorflow:global_step/sec: 1656.07\nINFO:tensorflow:loss = 0.23221238, step = 501 (0.060 sec)\nINFO:tensorflow:global_step/sec: 1624.02\nINFO:tensorflow:loss = 0.1968127, step = 601 (0.062 sec)\nINFO:tensorflow:global_step/sec: 1565.82\nINFO:tensorflow:loss = 0.1710473, step = 701 (0.064 sec)\nINFO:tensorflow:global_step/sec: 1619.16\nINFO:tensorflow:loss = 0.15148035, step = 801 (0.062 sec)\nINFO:tensorflow:global_step/sec: 1600.48\nINFO:tensorflow:loss = 0.13629705, step = 901 (0.063 sec)\nINFO:tensorflow:Saving checkpoints for 1000 into /tmp/tmpyu6blxd6/model.ckpt.\nINFO:tensorflow:Loss for final step: 0.12395525.\nINFO:tensorflow:Calling model_fn.\nINFO:tensorflow:Done calling model_fn.\nINFO:tensorflow:Graph was finalized.\nINFO:tensorflow:Restoring parameters from /tmp/tmpyu6blxd6/model.ckpt-1000\nINFO:tensorflow:Running local_init_op.\nINFO:tensorflow:Done running local_init_op.\n{'logits': array([-2.8130803], dtype=float32), 'logistic': array([0.05662142], dtype=float32), 'probabilities': array([0.94337857, 0.05662142], dtype=float32), 'class_ids': array([0]), 'classes': array([b'0'], dtype=object)}\n{'logits': array([2.2674427], dtype=float32), 'logistic': array([0.90614456], dtype=float32), 'probabilities': array([0.09385548, 0.90614456], dtype=float32), 'class_ids': array([1]), 'classes': array([b'1'], dtype=object)}\n{'logits': array([1.0914161], dtype=float32), 'logistic': array([0.7486483], dtype=float32), 'probabilities': array([0.2513517, 0.7486483], dtype=float32), 'class_ids': array([1]), 'classes': array([b'1'], dtype=object)}\n{'logits': array([-2.8130803], dtype=float32), 'logistic': array([0.05662142], dtype=float32), 'probabilities': array([0.94337857, 0.05662142], dtype=float32), 'class_ids': array([0]), 'classes': array([b'0'], dtype=object)}\n\nBut if I return a sample tuple, the output whould stop like this:\n...\n...\n...\nINFO:tensorflow:Done running local_init_op.\n{'logits': array([-2.8130803], dtype=float32), 'logistic': array([0.05662142], dtype=float32), 'probabilities': array([0.94337857, 0.05662142], dtype=float32), 'class_ids': array([0]), 'classes': array([b'0'], dtype=object)}\n{'logits': array([2.2674427], dtype=float32), 'logistic': array([0.90614456], dtype=float32), 'probabilities': array([0.09385548, 0.90614456], dtype=float32), 'class_ids': array([1]), 'classes': array([b'1'], dtype=object)}\n{'logits': array([1.0914161], dtype=float32), 'logistic': array([0.7486483], dtype=float32), 'probabilities': array([0.2513517, 0.7486483], dtype=float32), 'class_ids': array([1]), 'classes': array([b'1'], dtype=object)}\n{'logits': array([-2.8130803], dtype=float32), 'logistic': array([0.05662142], dtype=float32), 'probabilities': array([0.94337857, 0.05662142], dtype=float32), 'class_ids': array([0]), 'classes': array([b'0'], dtype=object)}\n{'logits': array([-2.8130803], dtype=float32), 'logistic': array([0.05662142], dtype=float32), 'probabilities': array([0.94337857, 0.05662142], dtype=float32), 'class_ids': array([0]), 'classes': array([b'0'], dtype=object)}\n{'logits': array([2.2674427], dtype=float32), 'logistic': array([0.90614456], dtype=float32), 'probabilities': array([0.09385548, 0.90614456], dtype=float32), 'class_ids': array([1]), 'classes': array([b'1'], dtype=object)}\n{'logits': array([1.0914161], dtype=float32), 'logistic': array([0.7486483], dtype=float32), 'probabilities': array([0.2513517, 0.7486483], dtype=float32), 'class_ids': array([1]), 'classes': array([b'1'], dtype=object)}\n{'logits': array([-2.8130803], dtype=float32), 'logistic': array([0.05662142], dtype=float32), 'probabilities': array([0.94337857, 0.05662142], dtype=float32), 'class_ids': array([0]), 'classes': array([b'0'], dtype=object)}\n{'logits': array([-2.8130803], dtype=float32), 'logistic': array([0.05662142], dtype=float32), 'probabilities': array([0.94337857, 0.05662142], dtype=float32), 'class_ids': array([0]), 'classes': array([b'0'], dtype=object)}\n{'logits': array([2.2674427], dtype=float32), 'logistic': array([0.90614456], dtype=float32), 'probabilities': array([0.09385548, 0.90614456], dtype=float32), 'class_ids': array([1]), 'classes': array([b'1'], dtype=object)}\n{'logits': array([1.0914161], dtype=float32), 'logistic': array([0.7486483], dtype=float32), 'probabilities': array([0.2513517, 0.7486483], dtype=float32), 'class_ids': array([1]), 'classes': array([b'1'], dtype=object)}\n{'logits': array([-2.8130803], dtype=float32), 'logistic': array([0.05662142], dtype=float32), 'probabilities': array([0.94337857, 0.05662142], dtype=float32), 'class_ids': array([0]), 'classes': array([b'0'], dtype=object)}\n.....more", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: y\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.8\r\n- **Python version**: 3.6\r\n- **Bazel version**: N/A\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**: N/A\r\n\r\n```python\r\nIn [7]: import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\r\nv1.8.0-0-g93bc2e2072 1.8.0\r\n```\r\n\r\n# Describe the problem\r\nIf `input_fn` return a sample tuple, it won't stop and predict again and again\r\n```python\r\nresult = classifier.predict(lambda: (ev_data,))\r\n```\r\nBut, if `input_fn` return a `tf.data.Dataset`, it work well.\r\n```python\r\nresult = classifier.predict(lambda: eval_input_fn(ev_data, labels=None, batch_size=1))\r\n```\r\nAfter debug, i found a while loop can't stop in here [`while not mon_sess.should_stop()`](https://github.com/tensorflow/tensorflow/blob/r1.8/tensorflow/python/estimator/estimator.py#L508)\r\n\r\nBut it seem like tuple is supported[](https://github.com/tensorflow/tensorflow/blob/r1.8/tensorflow/python/estimator/estimator.py#L456)\r\nSo, the return of `input_fn` must be `tf.data.Dataset` type? Or, should I give it a [end-of-input exception](https://github.com/tensorflow/tensorflow/blob/r1.8/tensorflow/python/estimator/estimator.py#L445)by myself?\r\n\r\n### Source code / logs\r\nHere is my code\r\n```python\r\nimport tensorflow as tf\r\n\r\n\r\ndef eval_input_fn(features, labels, batch_size):\r\n    \"\"\"An input function for evaluation or prediction\"\"\"\r\n    features = dict(features)\r\n    if labels is None:\r\n        # No labels, use only features.\r\n        inputs = features\r\n    else:\r\n        inputs = (features, labels)\r\n\r\n    # Convert the inputs to a Dataset.\r\n    dataset = tf.data.Dataset.from_tensor_slices(inputs)\r\n\r\n    # Batch the examples\r\n    assert batch_size is not None, \"batch_size must not be None\"\r\n    dataset = dataset.batch(batch_size)\r\n\r\n    # Return the dataset.\r\n    return dataset\r\n\r\n\r\ntrain_x = {'x1': [0, 1, 0, 1], 'x2': [0, 0, 1, 1]}\r\nlabel = [0, 1, 1, 0]\r\n\r\nev_data = {'x1': [0.5, 0.5, 0.5, 1], 'x2': [0.5, 0, 1, 1]}\r\n\r\ntrain_steps = 1000\r\nmy_feature_columns = []\r\nfor key in train_x.keys():\r\n    my_feature_columns.append(tf.feature_column.numeric_column(key=key))\r\n\r\nclassifier = tf.estimator.DNNClassifier(\r\n    feature_columns=my_feature_columns,\r\n    hidden_units=[4, 4],\r\n    n_classes=2)\r\n\r\nclassifier.train(lambda: (train_x, label), steps=train_steps)\r\n\r\nresult = classifier.predict(lambda: eval_input_fn(ev_data, labels=None, batch_size=1))\r\n# result = classifier.predict(lambda: (ev_data,)) # it won't stop\r\nfor r in result:\r\n    print(r)\r\n```\r\nIf I return `tf.data.Dataset`, here is output:\r\n```text\r\nINFO:tensorflow:Using default config.\r\nWARNING:tensorflow:Using temporary folder as model directory: /tmp/tmpyu6blxd6\r\nINFO:tensorflow:Using config: {'_model_dir': '/tmp/tmpyu6blxd6', '_tf_random_seed': None, '_save_summary_steps': 100, '_save_checkpoints_steps': None, '_save_checkpoints_secs': 600, '_session_config': None, '_keep_checkpoint_max': 5, '_keep_checkpoint_every_n_hours': 10000, '_log_step_count_steps': 100, '_train_distribute': None, '_service': None, '_cluster_spec': <tensorflow.python.training.server_lib.ClusterSpec object at 0x7f5c9dfcdd30>, '_task_type': 'worker', '_task_id': 0, '_global_id_in_cluster': 0, '_master': '', '_evaluation_master': '', '_is_chief': True, '_num_ps_replicas': 0, '_num_worker_replicas': 1}\r\nINFO:tensorflow:Calling model_fn.\r\nINFO:tensorflow:Done calling model_fn.\r\nINFO:tensorflow:Create CheckpointSaverHook.\r\nINFO:tensorflow:Graph was finalized.\r\nINFO:tensorflow:Running local_init_op.\r\nINFO:tensorflow:Done running local_init_op.\r\nINFO:tensorflow:Saving checkpoints for 1 into /tmp/tmpyu6blxd6/model.ckpt.\r\nINFO:tensorflow:loss = 2.571034, step = 1\r\nINFO:tensorflow:global_step/sec: 792.849\r\nINFO:tensorflow:loss = 1.2854626, step = 101 (0.126 sec)\r\nINFO:tensorflow:global_step/sec: 1621.83\r\nINFO:tensorflow:loss = 0.58735335, step = 201 (0.062 sec)\r\nINFO:tensorflow:global_step/sec: 1585.9\r\nINFO:tensorflow:loss = 0.37925595, step = 301 (0.063 sec)\r\nINFO:tensorflow:global_step/sec: 1579.13\r\nINFO:tensorflow:loss = 0.286068, step = 401 (0.063 sec)\r\nINFO:tensorflow:global_step/sec: 1656.07\r\nINFO:tensorflow:loss = 0.23221238, step = 501 (0.060 sec)\r\nINFO:tensorflow:global_step/sec: 1624.02\r\nINFO:tensorflow:loss = 0.1968127, step = 601 (0.062 sec)\r\nINFO:tensorflow:global_step/sec: 1565.82\r\nINFO:tensorflow:loss = 0.1710473, step = 701 (0.064 sec)\r\nINFO:tensorflow:global_step/sec: 1619.16\r\nINFO:tensorflow:loss = 0.15148035, step = 801 (0.062 sec)\r\nINFO:tensorflow:global_step/sec: 1600.48\r\nINFO:tensorflow:loss = 0.13629705, step = 901 (0.063 sec)\r\nINFO:tensorflow:Saving checkpoints for 1000 into /tmp/tmpyu6blxd6/model.ckpt.\r\nINFO:tensorflow:Loss for final step: 0.12395525.\r\nINFO:tensorflow:Calling model_fn.\r\nINFO:tensorflow:Done calling model_fn.\r\nINFO:tensorflow:Graph was finalized.\r\nINFO:tensorflow:Restoring parameters from /tmp/tmpyu6blxd6/model.ckpt-1000\r\nINFO:tensorflow:Running local_init_op.\r\nINFO:tensorflow:Done running local_init_op.\r\n{'logits': array([-2.8130803], dtype=float32), 'logistic': array([0.05662142], dtype=float32), 'probabilities': array([0.94337857, 0.05662142], dtype=float32), 'class_ids': array([0]), 'classes': array([b'0'], dtype=object)}\r\n{'logits': array([2.2674427], dtype=float32), 'logistic': array([0.90614456], dtype=float32), 'probabilities': array([0.09385548, 0.90614456], dtype=float32), 'class_ids': array([1]), 'classes': array([b'1'], dtype=object)}\r\n{'logits': array([1.0914161], dtype=float32), 'logistic': array([0.7486483], dtype=float32), 'probabilities': array([0.2513517, 0.7486483], dtype=float32), 'class_ids': array([1]), 'classes': array([b'1'], dtype=object)}\r\n{'logits': array([-2.8130803], dtype=float32), 'logistic': array([0.05662142], dtype=float32), 'probabilities': array([0.94337857, 0.05662142], dtype=float32), 'class_ids': array([0]), 'classes': array([b'0'], dtype=object)}\r\n```\r\nBut if I return a sample tuple, the output whould stop like this:\r\n```\r\n...\r\n...\r\n...\r\nINFO:tensorflow:Done running local_init_op.\r\n{'logits': array([-2.8130803], dtype=float32), 'logistic': array([0.05662142], dtype=float32), 'probabilities': array([0.94337857, 0.05662142], dtype=float32), 'class_ids': array([0]), 'classes': array([b'0'], dtype=object)}\r\n{'logits': array([2.2674427], dtype=float32), 'logistic': array([0.90614456], dtype=float32), 'probabilities': array([0.09385548, 0.90614456], dtype=float32), 'class_ids': array([1]), 'classes': array([b'1'], dtype=object)}\r\n{'logits': array([1.0914161], dtype=float32), 'logistic': array([0.7486483], dtype=float32), 'probabilities': array([0.2513517, 0.7486483], dtype=float32), 'class_ids': array([1]), 'classes': array([b'1'], dtype=object)}\r\n{'logits': array([-2.8130803], dtype=float32), 'logistic': array([0.05662142], dtype=float32), 'probabilities': array([0.94337857, 0.05662142], dtype=float32), 'class_ids': array([0]), 'classes': array([b'0'], dtype=object)}\r\n{'logits': array([-2.8130803], dtype=float32), 'logistic': array([0.05662142], dtype=float32), 'probabilities': array([0.94337857, 0.05662142], dtype=float32), 'class_ids': array([0]), 'classes': array([b'0'], dtype=object)}\r\n{'logits': array([2.2674427], dtype=float32), 'logistic': array([0.90614456], dtype=float32), 'probabilities': array([0.09385548, 0.90614456], dtype=float32), 'class_ids': array([1]), 'classes': array([b'1'], dtype=object)}\r\n{'logits': array([1.0914161], dtype=float32), 'logistic': array([0.7486483], dtype=float32), 'probabilities': array([0.2513517, 0.7486483], dtype=float32), 'class_ids': array([1]), 'classes': array([b'1'], dtype=object)}\r\n{'logits': array([-2.8130803], dtype=float32), 'logistic': array([0.05662142], dtype=float32), 'probabilities': array([0.94337857, 0.05662142], dtype=float32), 'class_ids': array([0]), 'classes': array([b'0'], dtype=object)}\r\n{'logits': array([-2.8130803], dtype=float32), 'logistic': array([0.05662142], dtype=float32), 'probabilities': array([0.94337857, 0.05662142], dtype=float32), 'class_ids': array([0]), 'classes': array([b'0'], dtype=object)}\r\n{'logits': array([2.2674427], dtype=float32), 'logistic': array([0.90614456], dtype=float32), 'probabilities': array([0.09385548, 0.90614456], dtype=float32), 'class_ids': array([1]), 'classes': array([b'1'], dtype=object)}\r\n{'logits': array([1.0914161], dtype=float32), 'logistic': array([0.7486483], dtype=float32), 'probabilities': array([0.2513517, 0.7486483], dtype=float32), 'class_ids': array([1]), 'classes': array([b'1'], dtype=object)}\r\n{'logits': array([-2.8130803], dtype=float32), 'logistic': array([0.05662142], dtype=float32), 'probabilities': array([0.94337857, 0.05662142], dtype=float32), 'class_ids': array([0]), 'classes': array([b'0'], dtype=object)}\r\n.....more\r\n```\r\n"}