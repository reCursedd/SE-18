{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/347931122", "html_url": "https://github.com/tensorflow/tensorflow/issues/14954#issuecomment-347931122", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14954", "id": 347931122, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzkzMTEyMg==", "user": {"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-29T17:16:54Z", "updated_at": "2017-11-29T17:16:54Z", "author_association": "MEMBER", "body_html": "<p>Sure, so just do</p>\n<pre><code>sum([np.dot(i,j) for i,j in zip(gradients_1, gradients_2)])\n</code></pre>\n<p>and that will be the cosine. The point is tf.gradients gives you an array entry for the gradient with respect to each discrete variable instead of a flattened one, because the optimizer needs to apply the gradients to each object in turn. .</p>", "body_text": "Sure, so just do\nsum([np.dot(i,j) for i,j in zip(gradients_1, gradients_2)])\n\nand that will be the cosine. The point is tf.gradients gives you an array entry for the gradient with respect to each discrete variable instead of a flattened one, because the optimizer needs to apply the gradients to each object in turn. .", "body": "Sure, so just do\r\n```\r\nsum([np.dot(i,j) for i,j in zip(gradients_1, gradients_2)])\r\n```\r\nand that will be the cosine. The point is tf.gradients gives you an array entry for the gradient with respect to each discrete variable instead of a flattened one, because the optimizer needs to apply the gradients to each object in turn. ."}