{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23605", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23605/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23605/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23605/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23605", "id": 378799347, "node_id": "MDU6SXNzdWUzNzg3OTkzNDc=", "number": 23605, "title": "Tensorboard projector visualisation - PCA keeps loading or not working", "user": {"login": "shakthydoss", "id": 1910237, "node_id": "MDQ6VXNlcjE5MTAyMzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1910237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shakthydoss", "html_url": "https://github.com/shakthydoss", "followers_url": "https://api.github.com/users/shakthydoss/followers", "following_url": "https://api.github.com/users/shakthydoss/following{/other_user}", "gists_url": "https://api.github.com/users/shakthydoss/gists{/gist_id}", "starred_url": "https://api.github.com/users/shakthydoss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shakthydoss/subscriptions", "organizations_url": "https://api.github.com/users/shakthydoss/orgs", "repos_url": "https://api.github.com/users/shakthydoss/repos", "events_url": "https://api.github.com/users/shakthydoss/events{/privacy}", "received_events_url": "https://api.github.com/users/shakthydoss/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 284285184, "node_id": "MDU6TGFiZWwyODQyODUxODQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:tensorboard", "name": "comp:tensorboard", "color": "0052cc", "default": false}, {"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "open", "locked": false, "assignee": {"login": "dsmilkov", "id": 2294279, "node_id": "MDQ6VXNlcjIyOTQyNzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2294279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsmilkov", "html_url": "https://github.com/dsmilkov", "followers_url": "https://api.github.com/users/dsmilkov/followers", "following_url": "https://api.github.com/users/dsmilkov/following{/other_user}", "gists_url": "https://api.github.com/users/dsmilkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsmilkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsmilkov/subscriptions", "organizations_url": "https://api.github.com/users/dsmilkov/orgs", "repos_url": "https://api.github.com/users/dsmilkov/repos", "events_url": "https://api.github.com/users/dsmilkov/events{/privacy}", "received_events_url": "https://api.github.com/users/dsmilkov/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dsmilkov", "id": 2294279, "node_id": "MDQ6VXNlcjIyOTQyNzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2294279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsmilkov", "html_url": "https://github.com/dsmilkov", "followers_url": "https://api.github.com/users/dsmilkov/followers", "following_url": "https://api.github.com/users/dsmilkov/following{/other_user}", "gists_url": "https://api.github.com/users/dsmilkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsmilkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsmilkov/subscriptions", "organizations_url": "https://api.github.com/users/dsmilkov/orgs", "repos_url": "https://api.github.com/users/dsmilkov/repos", "events_url": "https://api.github.com/users/dsmilkov/events{/privacy}", "received_events_url": "https://api.github.com/users/dsmilkov/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-11-08T16:02:30Z", "updated_at": "2018-11-19T19:58:40Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>Tensorboard projector visualisation - PCA keeps hanging.<br>\nI wrote a simple NN to predict the class type of iris dataset. NN model works fine.</p>\n<pre><code>import pandas as pd \nimport numpy as np\n\nfrom sklearn.datasets import load_iris\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import preprocessing\n\nimport tensorflow as tf\nimport tensorflow as tf\nfrom tensorflow import keras\n\niris_data = load_iris()\nx = pd.DataFrame(iris_data.data, columns=iris_data.feature_names)\ny = pd.DataFrame(iris_data.target, columns=['class'])\n\nencoder = preprocessing.OneHotEncoder(categories='auto')\nencoder.fit(y)\n#Transform\ny_enc = encoder.transform(y).toarray()\n\nx_train, x_test, y_train, y_test = train_test_split(x, y_enc)\n\n\nmodel = keras.Sequential()\nmodel.add(keras.layers.Dense(8, name='input_layer', activation=tf.nn.relu, input_shape=(x_train.shape[1],)))\nmodel.add(keras.layers.Dense(4, name='hidden_layer', activation=tf.nn.relu, input_shape=(x_train.shape[1],)))\nmodel.add(keras.layers.Dense(3, name='out_layer', activation=tf.nn.softmax))\n\nmodel.compile(optimizer=tf.keras.optimizers.Adam(0.005),\n              loss=keras.losses.binary_crossentropy,\n              metrics=[keras.metrics.categorical_accuracy])\nmodel.fit(x_train, y_train, epochs=50, verbose=0)\nresult = model.predict(x_test)\n</code></pre>\n<p>Now I am trying to visualise the output of the test set. Below is the code for Tensorboard projector. I don't what I am missing but PCA keeps loading even after starting the Tensorboard several minutes ago.</p>\n<pre><code>import tensorflow as tf\nfrom tensorflow.contrib.tensorboard.plugins import projector\nimport numpy as np\nimport os\n\nLOG_DIR = 'logs'  # FULL PATH HERE!!!\n\nmetadata_file = os.path.join(LOG_DIR, 'metadata.tsv')\nwith open(metadata_file, 'w') as f:\nf.write('{}\\t{}\\n'.format('class_name','class_id'))\nwith open(metadata_file, 'a') as f:\nfor i in range(len(y_test)):\n    c = np.nonzero(y_test[i])[0][0]\n    f.write('{}\\t{}\\n'.format(iris_data.target_names[c],c))\n\n\nembedding_var = tf.Variable(result,  name='final_layer_embedding')\nsess = tf.Session()\nsess.run(embedding_var.initializer)\nsummary_writer = tf.summary.FileWriter(LOG_DIR)\nconfig = projector.ProjectorConfig()\nembedding = config.embeddings.add()\nembedding.tensor_name = embedding_var.name\n\nembedding.metadata_path = 'metadata.tsv'\n\nprojector.visualize_embeddings(summary_writer, config)\nsaver = tf.train.Saver([embedding_var])\nsaver.save(sess, os.path.join(LOG_DIR, 'model.ckpt'), 1)\n</code></pre>\n<p>I googled to understand what I am doing wrong but I could not fix it. Despite being my model is small very I could not visualise. Any help to resolve this problem would be highly appreciable.</p>", "body_text": "Tensorboard projector visualisation - PCA keeps hanging.\nI wrote a simple NN to predict the class type of iris dataset. NN model works fine.\nimport pandas as pd \nimport numpy as np\n\nfrom sklearn.datasets import load_iris\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import preprocessing\n\nimport tensorflow as tf\nimport tensorflow as tf\nfrom tensorflow import keras\n\niris_data = load_iris()\nx = pd.DataFrame(iris_data.data, columns=iris_data.feature_names)\ny = pd.DataFrame(iris_data.target, columns=['class'])\n\nencoder = preprocessing.OneHotEncoder(categories='auto')\nencoder.fit(y)\n#Transform\ny_enc = encoder.transform(y).toarray()\n\nx_train, x_test, y_train, y_test = train_test_split(x, y_enc)\n\n\nmodel = keras.Sequential()\nmodel.add(keras.layers.Dense(8, name='input_layer', activation=tf.nn.relu, input_shape=(x_train.shape[1],)))\nmodel.add(keras.layers.Dense(4, name='hidden_layer', activation=tf.nn.relu, input_shape=(x_train.shape[1],)))\nmodel.add(keras.layers.Dense(3, name='out_layer', activation=tf.nn.softmax))\n\nmodel.compile(optimizer=tf.keras.optimizers.Adam(0.005),\n              loss=keras.losses.binary_crossentropy,\n              metrics=[keras.metrics.categorical_accuracy])\nmodel.fit(x_train, y_train, epochs=50, verbose=0)\nresult = model.predict(x_test)\n\nNow I am trying to visualise the output of the test set. Below is the code for Tensorboard projector. I don't what I am missing but PCA keeps loading even after starting the Tensorboard several minutes ago.\nimport tensorflow as tf\nfrom tensorflow.contrib.tensorboard.plugins import projector\nimport numpy as np\nimport os\n\nLOG_DIR = 'logs'  # FULL PATH HERE!!!\n\nmetadata_file = os.path.join(LOG_DIR, 'metadata.tsv')\nwith open(metadata_file, 'w') as f:\nf.write('{}\\t{}\\n'.format('class_name','class_id'))\nwith open(metadata_file, 'a') as f:\nfor i in range(len(y_test)):\n    c = np.nonzero(y_test[i])[0][0]\n    f.write('{}\\t{}\\n'.format(iris_data.target_names[c],c))\n\n\nembedding_var = tf.Variable(result,  name='final_layer_embedding')\nsess = tf.Session()\nsess.run(embedding_var.initializer)\nsummary_writer = tf.summary.FileWriter(LOG_DIR)\nconfig = projector.ProjectorConfig()\nembedding = config.embeddings.add()\nembedding.tensor_name = embedding_var.name\n\nembedding.metadata_path = 'metadata.tsv'\n\nprojector.visualize_embeddings(summary_writer, config)\nsaver = tf.train.Saver([embedding_var])\nsaver.save(sess, os.path.join(LOG_DIR, 'model.ckpt'), 1)\n\nI googled to understand what I am doing wrong but I could not fix it. Despite being my model is small very I could not visualise. Any help to resolve this problem would be highly appreciable.", "body": "Tensorboard projector visualisation - PCA keeps hanging.\r\nI wrote a simple NN to predict the class type of iris dataset. NN model works fine.\r\n```\r\nimport pandas as pd \r\nimport numpy as np\r\n\r\nfrom sklearn.datasets import load_iris\r\nfrom sklearn.model_selection import train_test_split\r\nfrom sklearn import preprocessing\r\n\r\nimport tensorflow as tf\r\nimport tensorflow as tf\r\nfrom tensorflow import keras\r\n\r\niris_data = load_iris()\r\nx = pd.DataFrame(iris_data.data, columns=iris_data.feature_names)\r\ny = pd.DataFrame(iris_data.target, columns=['class'])\r\n\r\nencoder = preprocessing.OneHotEncoder(categories='auto')\r\nencoder.fit(y)\r\n#Transform\r\ny_enc = encoder.transform(y).toarray()\r\n\r\nx_train, x_test, y_train, y_test = train_test_split(x, y_enc)\r\n\r\n\r\nmodel = keras.Sequential()\r\nmodel.add(keras.layers.Dense(8, name='input_layer', activation=tf.nn.relu, input_shape=(x_train.shape[1],)))\r\nmodel.add(keras.layers.Dense(4, name='hidden_layer', activation=tf.nn.relu, input_shape=(x_train.shape[1],)))\r\nmodel.add(keras.layers.Dense(3, name='out_layer', activation=tf.nn.softmax))\r\n\r\nmodel.compile(optimizer=tf.keras.optimizers.Adam(0.005),\r\n              loss=keras.losses.binary_crossentropy,\r\n              metrics=[keras.metrics.categorical_accuracy])\r\nmodel.fit(x_train, y_train, epochs=50, verbose=0)\r\nresult = model.predict(x_test)\r\n```\r\nNow I am trying to visualise the output of the test set. Below is the code for Tensorboard projector. I don't what I am missing but PCA keeps loading even after starting the Tensorboard several minutes ago.\r\n\r\n```\r\nimport tensorflow as tf\r\nfrom tensorflow.contrib.tensorboard.plugins import projector\r\nimport numpy as np\r\nimport os\r\n\r\nLOG_DIR = 'logs'  # FULL PATH HERE!!!\r\n\r\nmetadata_file = os.path.join(LOG_DIR, 'metadata.tsv')\r\nwith open(metadata_file, 'w') as f:\r\nf.write('{}\\t{}\\n'.format('class_name','class_id'))\r\nwith open(metadata_file, 'a') as f:\r\nfor i in range(len(y_test)):\r\n    c = np.nonzero(y_test[i])[0][0]\r\n    f.write('{}\\t{}\\n'.format(iris_data.target_names[c],c))\r\n\r\n\r\nembedding_var = tf.Variable(result,  name='final_layer_embedding')\r\nsess = tf.Session()\r\nsess.run(embedding_var.initializer)\r\nsummary_writer = tf.summary.FileWriter(LOG_DIR)\r\nconfig = projector.ProjectorConfig()\r\nembedding = config.embeddings.add()\r\nembedding.tensor_name = embedding_var.name\r\n\r\nembedding.metadata_path = 'metadata.tsv'\r\n\r\nprojector.visualize_embeddings(summary_writer, config)\r\nsaver = tf.train.Saver([embedding_var])\r\nsaver.save(sess, os.path.join(LOG_DIR, 'model.ckpt'), 1)\r\n```\r\nI googled to understand what I am doing wrong but I could not fix it. Despite being my model is small very I could not visualise. Any help to resolve this problem would be highly appreciable.\r\n"}