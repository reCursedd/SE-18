{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/173864461", "html_url": "https://github.com/tensorflow/tensorflow/issues/830#issuecomment-173864461", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/830", "id": 173864461, "node_id": "MDEyOklzc3VlQ29tbWVudDE3Mzg2NDQ2MQ==", "user": {"login": "taras-sereda", "id": 7364100, "node_id": "MDQ6VXNlcjczNjQxMDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/7364100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taras-sereda", "html_url": "https://github.com/taras-sereda", "followers_url": "https://api.github.com/users/taras-sereda/followers", "following_url": "https://api.github.com/users/taras-sereda/following{/other_user}", "gists_url": "https://api.github.com/users/taras-sereda/gists{/gist_id}", "starred_url": "https://api.github.com/users/taras-sereda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taras-sereda/subscriptions", "organizations_url": "https://api.github.com/users/taras-sereda/orgs", "repos_url": "https://api.github.com/users/taras-sereda/repos", "events_url": "https://api.github.com/users/taras-sereda/events{/privacy}", "received_events_url": "https://api.github.com/users/taras-sereda/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-22T09:52:04Z", "updated_at": "2016-01-22T09:53:59Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hey <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=70511\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/girving\">@girving</a> , here is minimal test case:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">import</span> sys\n\nx <span class=\"pl-k\">=</span> tf.constant(np.array([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>]))\ny <span class=\"pl-k\">=</span> tf.constant(np.array([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>]))\n\nsingle_x, single_y <span class=\"pl-k\">=</span> tf.train.slice_input_producer([x, y], <span class=\"pl-v\">num_epochs</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">3</span>)\nbatch_x, batch_y <span class=\"pl-k\">=</span> tf.train.batch([single_x, single_y], <span class=\"pl-v\">batch_size</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>)\n\nsum_op <span class=\"pl-k\">=</span> batch_x <span class=\"pl-k\">+</span> batch_y\n\nsess <span class=\"pl-k\">=</span> tf.Session()\nsess.run(tf.initialize_all_variables())\n\ncoord <span class=\"pl-k\">=</span> tf.train.Coordinator()\nthreads <span class=\"pl-k\">=</span> tf.train.start_queue_runners(<span class=\"pl-v\">sess</span><span class=\"pl-k\">=</span>sess, <span class=\"pl-v\">coord</span><span class=\"pl-k\">=</span>coord)\n\n\n\n<span class=\"pl-k\">try</span>:\n    step <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>\n    <span class=\"pl-k\">while</span> <span class=\"pl-k\">not</span> coord.should_stop():\n        res <span class=\"pl-k\">=</span> sess.run(sum_op)\n        step <span class=\"pl-k\">+=</span> <span class=\"pl-c1\">1</span>\n        <span class=\"pl-c1\">print</span>(res, step)\n        sys.stdout.flush()\n<span class=\"pl-k\">except</span> tf.errors.OutOfRangeError:\n    <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Exception hear<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-k\">finally</span>:\n    coord.request_stop()\n\ncoord.join(threads)</pre></div>\n<p>Ok, I'm splitting the issue.</p>", "body_text": "Hey @girving , here is minimal test case:\nimport tensorflow as tf\nimport numpy as np\nimport sys\n\nx = tf.constant(np.array([1, 2, 3, 4]))\ny = tf.constant(np.array([1, 2, 3, 4]))\n\nsingle_x, single_y = tf.train.slice_input_producer([x, y], num_epochs=3)\nbatch_x, batch_y = tf.train.batch([single_x, single_y], batch_size=1)\n\nsum_op = batch_x + batch_y\n\nsess = tf.Session()\nsess.run(tf.initialize_all_variables())\n\ncoord = tf.train.Coordinator()\nthreads = tf.train.start_queue_runners(sess=sess, coord=coord)\n\n\n\ntry:\n    step = 0\n    while not coord.should_stop():\n        res = sess.run(sum_op)\n        step += 1\n        print(res, step)\n        sys.stdout.flush()\nexcept tf.errors.OutOfRangeError:\n    print(\"Exception hear\")\nfinally:\n    coord.request_stop()\n\ncoord.join(threads)\nOk, I'm splitting the issue.", "body": "Hey @girving , here is minimal test case:\n\n``` python\nimport tensorflow as tf\nimport numpy as np\nimport sys\n\nx = tf.constant(np.array([1, 2, 3, 4]))\ny = tf.constant(np.array([1, 2, 3, 4]))\n\nsingle_x, single_y = tf.train.slice_input_producer([x, y], num_epochs=3)\nbatch_x, batch_y = tf.train.batch([single_x, single_y], batch_size=1)\n\nsum_op = batch_x + batch_y\n\nsess = tf.Session()\nsess.run(tf.initialize_all_variables())\n\ncoord = tf.train.Coordinator()\nthreads = tf.train.start_queue_runners(sess=sess, coord=coord)\n\n\n\ntry:\n    step = 0\n    while not coord.should_stop():\n        res = sess.run(sum_op)\n        step += 1\n        print(res, step)\n        sys.stdout.flush()\nexcept tf.errors.OutOfRangeError:\n    print(\"Exception hear\")\nfinally:\n    coord.request_stop()\n\ncoord.join(threads)\n```\n\nOk, I'm splitting the issue.\n"}