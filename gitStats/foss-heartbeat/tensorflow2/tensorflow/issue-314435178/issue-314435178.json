{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18536", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18536/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18536/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18536/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18536", "id": 314435178, "node_id": "MDU6SXNzdWUzMTQ0MzUxNzg=", "number": 18536, "title": "DNNRegressor.predict issue", "user": {"login": "5Volts", "id": 34149262, "node_id": "MDQ6VXNlcjM0MTQ5MjYy", "avatar_url": "https://avatars3.githubusercontent.com/u/34149262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/5Volts", "html_url": "https://github.com/5Volts", "followers_url": "https://api.github.com/users/5Volts/followers", "following_url": "https://api.github.com/users/5Volts/following{/other_user}", "gists_url": "https://api.github.com/users/5Volts/gists{/gist_id}", "starred_url": "https://api.github.com/users/5Volts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/5Volts/subscriptions", "organizations_url": "https://api.github.com/users/5Volts/orgs", "repos_url": "https://api.github.com/users/5Volts/repos", "events_url": "https://api.github.com/users/5Volts/events{/privacy}", "received_events_url": "https://api.github.com/users/5Volts/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "cy89", "id": 29663194, "node_id": "MDQ6VXNlcjI5NjYzMTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/29663194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cy89", "html_url": "https://github.com/cy89", "followers_url": "https://api.github.com/users/cy89/followers", "following_url": "https://api.github.com/users/cy89/following{/other_user}", "gists_url": "https://api.github.com/users/cy89/gists{/gist_id}", "starred_url": "https://api.github.com/users/cy89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cy89/subscriptions", "organizations_url": "https://api.github.com/users/cy89/orgs", "repos_url": "https://api.github.com/users/cy89/repos", "events_url": "https://api.github.com/users/cy89/events{/privacy}", "received_events_url": "https://api.github.com/users/cy89/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cy89", "id": 29663194, "node_id": "MDQ6VXNlcjI5NjYzMTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/29663194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cy89", "html_url": "https://github.com/cy89", "followers_url": "https://api.github.com/users/cy89/followers", "following_url": "https://api.github.com/users/cy89/following{/other_user}", "gists_url": "https://api.github.com/users/cy89/gists{/gist_id}", "starred_url": "https://api.github.com/users/cy89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cy89/subscriptions", "organizations_url": "https://api.github.com/users/cy89/orgs", "repos_url": "https://api.github.com/users/cy89/repos", "events_url": "https://api.github.com/users/cy89/events{/privacy}", "received_events_url": "https://api.github.com/users/cy89/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-04-15T17:33:23Z", "updated_at": "2018-06-12T22:49:58Z", "closed_at": "2018-06-12T22:49:58Z", "author_association": "NONE", "body_html": "<p>I have trained a Deep Neural Network Regressor on some weather data. When I tried classifier.predict(), it return a generator object. Usually what we do is to put list() over the object to get the prediction. But it is not working.<br>\nI was unable to get the my code to turn into it's code form with the `` symbol by the way. So bare with me.</p>\n<p>import numpy as np<br>\nimport time<br>\nimport itertools<br>\nfrom onehotencode import load_single_data<br>\nfrom onehotencode import training_week_data,training_week_price,<br>\ntesting_week_data,testing_week_price,uber_price<br>\nimport tensorflow as tf</p>\n<p>feature_columns = [tf.feature_column.numeric_column(\"x\", shape=[163])]<br>\nclassifier = tf.estimator.DNNRegressor(feature_columns=feature_columns,<br>\nhidden_units=[200, 175, 150, 125, 100, 75, 50, 25, 17, 10, 8, 5, 3],<br>\nmodel_dir='great_model/'<br>\n)<br>\nonehot,price=load_single_data([[5,18,16,1],'Mostly Sunny','Mostly Sunny',46.5])</p>\n<p>my_input_fn = tf.estimator.inputs.numpy_input_fn(<br>\nx={\"x\": np.array(onehot)},<br>\ny=None,<br>\nnum_epochs=None,<br>\nshuffle=False)<br>\ny = classifier.predict(input_fn=my_input_fn)<br>\n#This line produced the error<br>\nprint(list(y))</p>\n<p>The error produced is :</p>\n<p><code>ValueError: Dimension size must be evenly divisible by 163 but is 128 for 'dnn/input_from_feature_columns/input_layer/x/Reshape' (op: 'Reshape') with input shapes: [128,1], [2] and with input tensors computed as partial shapes: input[1] = [?,163].</code></p>", "body_text": "I have trained a Deep Neural Network Regressor on some weather data. When I tried classifier.predict(), it return a generator object. Usually what we do is to put list() over the object to get the prediction. But it is not working.\nI was unable to get the my code to turn into it's code form with the `` symbol by the way. So bare with me.\nimport numpy as np\nimport time\nimport itertools\nfrom onehotencode import load_single_data\nfrom onehotencode import training_week_data,training_week_price,\ntesting_week_data,testing_week_price,uber_price\nimport tensorflow as tf\nfeature_columns = [tf.feature_column.numeric_column(\"x\", shape=[163])]\nclassifier = tf.estimator.DNNRegressor(feature_columns=feature_columns,\nhidden_units=[200, 175, 150, 125, 100, 75, 50, 25, 17, 10, 8, 5, 3],\nmodel_dir='great_model/'\n)\nonehot,price=load_single_data([[5,18,16,1],'Mostly Sunny','Mostly Sunny',46.5])\nmy_input_fn = tf.estimator.inputs.numpy_input_fn(\nx={\"x\": np.array(onehot)},\ny=None,\nnum_epochs=None,\nshuffle=False)\ny = classifier.predict(input_fn=my_input_fn)\n#This line produced the error\nprint(list(y))\nThe error produced is :\nValueError: Dimension size must be evenly divisible by 163 but is 128 for 'dnn/input_from_feature_columns/input_layer/x/Reshape' (op: 'Reshape') with input shapes: [128,1], [2] and with input tensors computed as partial shapes: input[1] = [?,163].", "body": "I have trained a Deep Neural Network Regressor on some weather data. When I tried classifier.predict(), it return a generator object. Usually what we do is to put list() over the object to get the prediction. But it is not working.\r\nI was unable to get the my code to turn into it's code form with the `` symbol by the way. So bare with me.\r\n\r\nimport numpy as np\r\nimport time\r\nimport itertools\r\nfrom onehotencode import load_single_data\r\nfrom onehotencode import training_week_data,training_week_price,\\\r\n    testing_week_data,testing_week_price,uber_price\r\nimport tensorflow as tf\r\n\r\nfeature_columns = [tf.feature_column.numeric_column(\"x\", shape=[163])]\r\nclassifier = tf.estimator.DNNRegressor(feature_columns=feature_columns,\r\n                                       hidden_units=[200, 175, 150, 125, 100, 75, 50, 25, 17, 10, 8, 5, 3],\r\n                                        model_dir='great_model/'\r\n                                        )\r\nonehot,price=load_single_data([[5,18,16,1],'Mostly Sunny','Mostly Sunny',46.5])\r\n\r\nmy_input_fn = tf.estimator.inputs.numpy_input_fn(\r\n        x={\"x\": np.array(onehot)},\r\n        y=None,\r\n        num_epochs=None,\r\n        shuffle=False)\r\ny = classifier.predict(input_fn=my_input_fn)\r\n#This line produced the error\r\nprint(list(y))\r\n\r\nThe error produced is :\r\n\r\n`ValueError: Dimension size must be evenly divisible by 163 but is 128 for 'dnn/input_from_feature_columns/input_layer/x/Reshape' (op: 'Reshape') with input shapes: [128,1], [2] and with input tensors computed as partial shapes: input[1] = [?,163].`\r\n"}