{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/415517186", "html_url": "https://github.com/tensorflow/tensorflow/issues/21818#issuecomment-415517186", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21818", "id": 415517186, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTUxNzE4Ng==", "user": {"login": "nehaljwani", "id": 1779189, "node_id": "MDQ6VXNlcjE3NzkxODk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1779189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nehaljwani", "html_url": "https://github.com/nehaljwani", "followers_url": "https://api.github.com/users/nehaljwani/followers", "following_url": "https://api.github.com/users/nehaljwani/following{/other_user}", "gists_url": "https://api.github.com/users/nehaljwani/gists{/gist_id}", "starred_url": "https://api.github.com/users/nehaljwani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nehaljwani/subscriptions", "organizations_url": "https://api.github.com/users/nehaljwani/orgs", "repos_url": "https://api.github.com/users/nehaljwani/repos", "events_url": "https://api.github.com/users/nehaljwani/events{/privacy}", "received_events_url": "https://api.github.com/users/nehaljwani/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-23T18:15:13Z", "updated_at": "2018-08-23T18:15:13Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The scripts are:</p>\n<pre><code>/xxx/execroot/org_tensorflow/bazel-out/darwin-opt/bin/tensorflow/contrib/tensorrt/wrap_conversion_versionscript.lds\n/xxx/execroot/org_tensorflow/bazel-out/darwin-opt/bin/tensorflow/python/pywrap_tensorflow_internal_versionscript.lds\n</code></pre>\n<p>Probably generated by: <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/4a00a658050e105fca6304f4e73d15b383f472c7/tensorflow/tensorflow.bzl#L1388-L1427\">tensorflow/tensorflow/tensorflow.bzl</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 1388 to 1427\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/4a00a658050e105fca6304f4e73d15b383f472c7\">4a00a65</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L1388\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1388\"></td>\n          <td id=\"LC1388\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">#</span> In tf_py_wrap_cc generated libraries</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1389\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1389\"></td>\n          <td id=\"LC1389\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">#</span> module init functions are not exported unless</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1390\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1390\"></td>\n          <td id=\"LC1390\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">#</span> they contain one of the keywords in the version file</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1391\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1391\"></td>\n          <td id=\"LC1391\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">#</span> this prevents custom python modules.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1392\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1392\"></td>\n          <td id=\"LC1392\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">#</span> This function attempts to append init_module_name to list of</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1393\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1393\"></td>\n          <td id=\"LC1393\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">#</span> exported functions in version script</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1394\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1394\"></td>\n          <td id=\"LC1394\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">def</span> <span class=\"pl-en\">_append_init_to_versionscript_impl</span>(<span class=\"pl-smi\">ctx</span>): </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1395\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1395\"></td>\n          <td id=\"LC1395\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   mod_name <span class=\"pl-k\">=</span> ctx.attr.module_name </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1396\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1396\"></td>\n          <td id=\"LC1396\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">if</span> ctx.attr.is_version_script: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1397\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1397\"></td>\n          <td id=\"LC1397\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     ctx.actions.expand_template( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1398\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1398\"></td>\n          <td id=\"LC1398\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       <span class=\"pl-v\">template</span><span class=\"pl-k\">=</span>ctx.file.template_file, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1399\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1399\"></td>\n          <td id=\"LC1399\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       <span class=\"pl-v\">output</span><span class=\"pl-k\">=</span>ctx.outputs.versionscript, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1400\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1400\"></td>\n          <td id=\"LC1400\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       <span class=\"pl-v\">substitutions</span><span class=\"pl-k\">=</span>{ </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1401\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1401\"></td>\n          <td id=\"LC1401\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>global:<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>global:<span class=\"pl-cce\">\\n</span>     init_<span class=\"pl-c1\">%s</span>;<span class=\"pl-cce\">\\n</span>     PyInit_*;<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">%</span>(mod_name), </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1402\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1402\"></td>\n          <td id=\"LC1402\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       }, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1403\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1403\"></td>\n          <td id=\"LC1403\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       <span class=\"pl-v\">is_executable</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1404\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1404\"></td>\n          <td id=\"LC1404\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     ) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1405\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1405\"></td>\n          <td id=\"LC1405\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">else</span>: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1406\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1406\"></td>\n          <td id=\"LC1406\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     ctx.actions.expand_template( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1407\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1407\"></td>\n          <td id=\"LC1407\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       <span class=\"pl-v\">template</span><span class=\"pl-k\">=</span>ctx.file.template_file, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1408\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1408\"></td>\n          <td id=\"LC1408\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       <span class=\"pl-v\">output</span><span class=\"pl-k\">=</span>ctx.outputs.versionscript, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1409\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1409\"></td>\n          <td id=\"LC1409\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       <span class=\"pl-v\">substitutions</span><span class=\"pl-k\">=</span>{ </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1410\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1410\"></td>\n          <td id=\"LC1410\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>*tensorflow*<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>*tensorflow*<span class=\"pl-cce\">\\n</span>init_<span class=\"pl-c1\">%s</span><span class=\"pl-cce\">\\n</span>PyInit_*<span class=\"pl-cce\">\\n</span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">%</span>(mod_name), </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1411\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1411\"></td>\n          <td id=\"LC1411\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       }, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1412\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1412\"></td>\n          <td id=\"LC1412\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       <span class=\"pl-v\">is_executable</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1413\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1413\"></td>\n          <td id=\"LC1413\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     ) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1414\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1414\"></td>\n          <td id=\"LC1414\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1415\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1415\"></td>\n          <td id=\"LC1415\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1416\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1416\"></td>\n          <td id=\"LC1416\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> _append_init_to_versionscript<span class=\"pl-k\">=</span> rule( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1417\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1417\"></td>\n          <td id=\"LC1417\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-v\">implementation</span><span class=\"pl-k\">=</span>_append_init_to_versionscript_impl, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1418\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1418\"></td>\n          <td id=\"LC1418\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-v\">attrs</span><span class=\"pl-k\">=</span>{ </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1419\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1419\"></td>\n          <td id=\"LC1419\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>module_name<span class=\"pl-pds\">\"</span></span>:attr.string(<span class=\"pl-v\">mandatory</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>), </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1420\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1420\"></td>\n          <td id=\"LC1420\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>template_file<span class=\"pl-pds\">\"</span></span>:attr.label(<span class=\"pl-v\">allow_files</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>,<span class=\"pl-v\">single_file</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>,<span class=\"pl-v\">mandatory</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>), </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1421\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1421\"></td>\n          <td id=\"LC1421\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>is_version_script<span class=\"pl-pds\">\"</span></span>:attr.bool(<span class=\"pl-v\">default</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1422\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1422\"></td>\n          <td id=\"LC1422\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       <span class=\"pl-v\">doc</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>whether target is a ld version script or exported symbol list<span class=\"pl-pds\">'</span></span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1423\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1423\"></td>\n          <td id=\"LC1423\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       <span class=\"pl-v\">mandatory</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>), </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1424\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1424\"></td>\n          <td id=\"LC1424\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   }, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1425\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1425\"></td>\n          <td id=\"LC1425\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-v\">outputs</span><span class=\"pl-k\">=</span>{<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>versionscript<span class=\"pl-pds\">\"</span></span>:<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>%<span class=\"pl-c1\">{name}</span>.lds<span class=\"pl-pds\">\"</span></span>}, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1426\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1426\"></td>\n          <td id=\"LC1426\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> ) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1427\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1427\"></td>\n          <td id=\"LC1427\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "body_text": "The scripts are:\n/xxx/execroot/org_tensorflow/bazel-out/darwin-opt/bin/tensorflow/contrib/tensorrt/wrap_conversion_versionscript.lds\n/xxx/execroot/org_tensorflow/bazel-out/darwin-opt/bin/tensorflow/python/pywrap_tensorflow_internal_versionscript.lds\n\nProbably generated by: \n  \n    \n      tensorflow/tensorflow/tensorflow.bzl\n    \n    \n        Lines 1388 to 1427\n      in\n      4a00a65\n    \n    \n    \n    \n\n        \n          \n           # In tf_py_wrap_cc generated libraries \n        \n\n        \n          \n           # module init functions are not exported unless \n        \n\n        \n          \n           # they contain one of the keywords in the version file \n        \n\n        \n          \n           # this prevents custom python modules. \n        \n\n        \n          \n           # This function attempts to append init_module_name to list of \n        \n\n        \n          \n           # exported functions in version script \n        \n\n        \n          \n           def _append_init_to_versionscript_impl(ctx): \n        \n\n        \n          \n             mod_name = ctx.attr.module_name \n        \n\n        \n          \n             if ctx.attr.is_version_script: \n        \n\n        \n          \n               ctx.actions.expand_template( \n        \n\n        \n          \n                 template=ctx.file.template_file, \n        \n\n        \n          \n                 output=ctx.outputs.versionscript, \n        \n\n        \n          \n                 substitutions={ \n        \n\n        \n          \n                   \"global:\":\"global:\\n     init_%s;\\n     PyInit_*;\"%(mod_name), \n        \n\n        \n          \n                 }, \n        \n\n        \n          \n                 is_executable=False, \n        \n\n        \n          \n               ) \n        \n\n        \n          \n             else: \n        \n\n        \n          \n               ctx.actions.expand_template( \n        \n\n        \n          \n                 template=ctx.file.template_file, \n        \n\n        \n          \n                 output=ctx.outputs.versionscript, \n        \n\n        \n          \n                 substitutions={ \n        \n\n        \n          \n                   \"*tensorflow*\":\"*tensorflow*\\ninit_%s\\nPyInit_*\\n\"%(mod_name), \n        \n\n        \n          \n                 }, \n        \n\n        \n          \n                 is_executable=False, \n        \n\n        \n          \n               ) \n        \n\n        \n          \n            \n        \n\n        \n          \n            \n        \n\n        \n          \n           _append_init_to_versionscript= rule( \n        \n\n        \n          \n             implementation=_append_init_to_versionscript_impl, \n        \n\n        \n          \n             attrs={ \n        \n\n        \n          \n               \"module_name\":attr.string(mandatory=True), \n        \n\n        \n          \n               \"template_file\":attr.label(allow_files=True,single_file=True,mandatory=True), \n        \n\n        \n          \n               \"is_version_script\":attr.bool(default=True, \n        \n\n        \n          \n                 doc='whether target is a ld version script or exported symbol list', \n        \n\n        \n          \n                 mandatory=False), \n        \n\n        \n          \n             }, \n        \n\n        \n          \n             outputs={\"versionscript\":\"%{name}.lds\"}, \n        \n\n        \n          \n           )", "body": "The scripts are:\r\n```\r\n/xxx/execroot/org_tensorflow/bazel-out/darwin-opt/bin/tensorflow/contrib/tensorrt/wrap_conversion_versionscript.lds\r\n/xxx/execroot/org_tensorflow/bazel-out/darwin-opt/bin/tensorflow/python/pywrap_tensorflow_internal_versionscript.lds\r\n```\r\nProbably generated by: https://github.com/tensorflow/tensorflow/blob/4a00a658050e105fca6304f4e73d15b383f472c7/tensorflow/tensorflow.bzl#L1388-L1427"}