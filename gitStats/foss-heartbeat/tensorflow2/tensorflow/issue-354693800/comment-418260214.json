{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/418260214", "html_url": "https://github.com/tensorflow/tensorflow/issues/21920#issuecomment-418260214", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21920", "id": 418260214, "node_id": "MDEyOklzc3VlQ29tbWVudDQxODI2MDIxNA==", "user": {"login": "weiwancheng", "id": 13504420, "node_id": "MDQ6VXNlcjEzNTA0NDIw", "avatar_url": "https://avatars0.githubusercontent.com/u/13504420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiwancheng", "html_url": "https://github.com/weiwancheng", "followers_url": "https://api.github.com/users/weiwancheng/followers", "following_url": "https://api.github.com/users/weiwancheng/following{/other_user}", "gists_url": "https://api.github.com/users/weiwancheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiwancheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiwancheng/subscriptions", "organizations_url": "https://api.github.com/users/weiwancheng/orgs", "repos_url": "https://api.github.com/users/weiwancheng/repos", "events_url": "https://api.github.com/users/weiwancheng/events{/privacy}", "received_events_url": "https://api.github.com/users/weiwancheng/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-04T06:52:52Z", "updated_at": "2018-09-04T06:53:32Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6018251\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/georgesterpu\">@georgesterpu</a> Thank you for your reply.<br>\nYes,I have done something as your said. About beam search API, the main part in my code as follow :<br>\n<code>inference_decoder=  BeamSearchDecoder( cell=self.decoder_cell, embedding=embed_and_input_proj, start_tokens=start_tokens, end_token=end_token, initial_state=self.decoder_initial_state, beam_width=self.beam_width, output_layer=self.decoder_output_projection, )</code><br>\n....<br>\n<code>(self.decoder_outputs_decode,self.final_state,_ ) = (seq2seq.dynamic_decode(decoder=inference_decoder,output_time_major=self.time_major,maximum_iterations=max_decode_step,swap_memory=True,scope=decoder_scope))</code></p>\n<p>I feel very strange, I did not find any problems. This problem bothering me many days. I have trained the model for other tasks, but this problem still existed. There were still repeated sentences in the prediction, and the encounter with eos does not stop. But It stopped when the length is set length.<br>\nAnyway,Thank you very much. you are very kindful. I am very looking forward to your projects to open.</p>", "body_text": "@georgesterpu Thank you for your reply.\nYes,I have done something as your said. About beam search API, the main part in my code as follow :\ninference_decoder=  BeamSearchDecoder( cell=self.decoder_cell, embedding=embed_and_input_proj, start_tokens=start_tokens, end_token=end_token, initial_state=self.decoder_initial_state, beam_width=self.beam_width, output_layer=self.decoder_output_projection, )\n....\n(self.decoder_outputs_decode,self.final_state,_ ) = (seq2seq.dynamic_decode(decoder=inference_decoder,output_time_major=self.time_major,maximum_iterations=max_decode_step,swap_memory=True,scope=decoder_scope))\nI feel very strange, I did not find any problems. This problem bothering me many days. I have trained the model for other tasks, but this problem still existed. There were still repeated sentences in the prediction, and the encounter with eos does not stop. But It stopped when the length is set length.\nAnyway,Thank you very much. you are very kindful. I am very looking forward to your projects to open.", "body": "@georgesterpu Thank you for your reply.\r\nYes,I have done something as your said. About beam search API, the main part in my code as follow :\r\n`inference_decoder= \r\nBeamSearchDecoder( cell=self.decoder_cell, embedding=embed_and_input_proj, start_tokens=start_tokens, end_token=end_token, initial_state=self.decoder_initial_state, beam_width=self.beam_width, output_layer=self.decoder_output_projection, )` \r\n....\r\n`(self.decoder_outputs_decode,self.final_state,_ ) = (seq2seq.dynamic_decode(decoder=inference_decoder,output_time_major=self.time_major,maximum_iterations=max_decode_step,swap_memory=True,scope=decoder_scope))`\r\n\r\n\r\nI feel very strange, I did not find any problems. This problem bothering me many days. I have trained the model for other tasks, but this problem still existed. There were still repeated sentences in the prediction, and the encounter with eos does not stop. But It stopped when the length is set length. \r\nAnyway,Thank you very much. you are very kindful. I am very looking forward to your projects to open."}