{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/401624766", "html_url": "https://github.com/tensorflow/tensorflow/issues/20448#issuecomment-401624766", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20448", "id": 401624766, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTYyNDc2Ng==", "user": {"login": "joshburkart", "id": 3888181, "node_id": "MDQ6VXNlcjM4ODgxODE=", "avatar_url": "https://avatars2.githubusercontent.com/u/3888181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshburkart", "html_url": "https://github.com/joshburkart", "followers_url": "https://api.github.com/users/joshburkart/followers", "following_url": "https://api.github.com/users/joshburkart/following{/other_user}", "gists_url": "https://api.github.com/users/joshburkart/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshburkart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshburkart/subscriptions", "organizations_url": "https://api.github.com/users/joshburkart/orgs", "repos_url": "https://api.github.com/users/joshburkart/repos", "events_url": "https://api.github.com/users/joshburkart/events{/privacy}", "received_events_url": "https://api.github.com/users/joshburkart/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-01T18:39:36Z", "updated_at": "2018-07-01T18:39:36Z", "author_association": "NONE", "body_html": "<p>TensorFlow uses a computation graph for dependency control, so it's a bit different than typical procedural programming. Asking for the same thing twice in one call to <code>session.run</code> will always (I think?) yield the same result twice. Maybe the following is what you're looking for?</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\nsess <span class=\"pl-k\">=</span> tf.Session()\n\nx <span class=\"pl-k\">=</span> tf.Variable(<span class=\"pl-c1\">0</span>.)\nassign_one <span class=\"pl-k\">=</span> tf.assign(x, <span class=\"pl-c1\">1</span>)\nz <span class=\"pl-k\">=</span> x<span class=\"pl-k\">**</span><span class=\"pl-c1\">2</span>\ngradients <span class=\"pl-k\">=</span> tf.gradients(z, [x])[<span class=\"pl-c1\">0</span>]\n<span class=\"pl-k\">with</span> tf.control_dependencies([assign_one]):\n    z_after_assign <span class=\"pl-k\">=</span> x<span class=\"pl-k\">**</span><span class=\"pl-c1\">2</span>\ngradients_after_assign <span class=\"pl-k\">=</span> tf.gradients(z_after_assign, [x])[<span class=\"pl-c1\">0</span>]\n\nsess.run(tf.global_variables_initializer())\nsess.run([gradients, gradients_after_assign])\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> [0.0, 2.0]</span></pre></div>\n<p>(Also, if I understand correctly, Stack Overflow is the TF maintainers' preferred place for questions, for future reference.)</p>", "body_text": "TensorFlow uses a computation graph for dependency control, so it's a bit different than typical procedural programming. Asking for the same thing twice in one call to session.run will always (I think?) yield the same result twice. Maybe the following is what you're looking for?\nimport tensorflow as tf\n\nsess = tf.Session()\n\nx = tf.Variable(0.)\nassign_one = tf.assign(x, 1)\nz = x**2\ngradients = tf.gradients(z, [x])[0]\nwith tf.control_dependencies([assign_one]):\n    z_after_assign = x**2\ngradients_after_assign = tf.gradients(z_after_assign, [x])[0]\n\nsess.run(tf.global_variables_initializer())\nsess.run([gradients, gradients_after_assign])\n\n# [0.0, 2.0]\n(Also, if I understand correctly, Stack Overflow is the TF maintainers' preferred place for questions, for future reference.)", "body": "TensorFlow uses a computation graph for dependency control, so it's a bit different than typical procedural programming. Asking for the same thing twice in one call to `session.run` will always (I think?) yield the same result twice. Maybe the following is what you're looking for?\r\n\r\n```python\r\nimport tensorflow as tf\r\n\r\nsess = tf.Session()\r\n\r\nx = tf.Variable(0.)\r\nassign_one = tf.assign(x, 1)\r\nz = x**2\r\ngradients = tf.gradients(z, [x])[0]\r\nwith tf.control_dependencies([assign_one]):\r\n    z_after_assign = x**2\r\ngradients_after_assign = tf.gradients(z_after_assign, [x])[0]\r\n\r\nsess.run(tf.global_variables_initializer())\r\nsess.run([gradients, gradients_after_assign])\r\n\r\n# [0.0, 2.0]\r\n```\r\n\r\n(Also, if I understand correctly, Stack Overflow is the TF maintainers' preferred place for questions, for future reference.)"}