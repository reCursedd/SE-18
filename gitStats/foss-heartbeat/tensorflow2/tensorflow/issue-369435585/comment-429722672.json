{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/429722672", "html_url": "https://github.com/tensorflow/tensorflow/issues/22930#issuecomment-429722672", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22930", "id": 429722672, "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTcyMjY3Mg==", "user": {"login": "Nagamani732", "id": 10580443, "node_id": "MDQ6VXNlcjEwNTgwNDQz", "avatar_url": "https://avatars2.githubusercontent.com/u/10580443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nagamani732", "html_url": "https://github.com/Nagamani732", "followers_url": "https://api.github.com/users/Nagamani732/followers", "following_url": "https://api.github.com/users/Nagamani732/following{/other_user}", "gists_url": "https://api.github.com/users/Nagamani732/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nagamani732/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nagamani732/subscriptions", "organizations_url": "https://api.github.com/users/Nagamani732/orgs", "repos_url": "https://api.github.com/users/Nagamani732/repos", "events_url": "https://api.github.com/users/Nagamani732/events{/privacy}", "received_events_url": "https://api.github.com/users/Nagamani732/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-15T06:25:12Z", "updated_at": "2018-10-25T07:17:04Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nNo</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nWindows 8</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>:<br>\nN/A</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:<br>\nSource (Tried to build using cmake 3.11.1 but failed)</li>\n<li><strong>TensorFlow version (use command below)</strong>:<br>\n1.10.0</li>\n<li><strong>Python version</strong>:<br>\nN/A</li>\n<li><strong>Bazel version (if compiling from source)</strong>:<br>\nN/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:<br>\nVisual Studio 2015 - Visual C++ 14.0</li>\n<li><strong>CUDA/cuDNN version</strong>:<br>\nN/A</li>\n<li><strong>GPU model and memory</strong>:<br>\nN/A</li>\n<li><strong>Exact command to reproduce</strong>:<br>\ncmake .. -A x64 -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtensorflow_BUILD_CC_EXAMPLE=OFF -Dtensorflow_ENABLE_GRPC_SUPPORT=OFF -Dtensorflow_BUILD_CC_TESTS=OFF -Dtensorflow_BUILD_PYTHON_TESTS=OFF -Dtensorflow_ENABLE_GPU=OFF -Dtensorflow_WIN_CPU_SIMD_OPTIONS=/arch:AVX -Dtensorflow_BUILD_SHARED_LIB=ON -Dtensorflow_BUILD_PYTHON_BINDINGS=OFF</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I am trying to build tensorflow as a standalone project and have been following this tutorial</p>\n<p><a href=\"http://www.stefanseibert.com/2017/10/tensorflow-as-dll-into-your-windows-c-project-with-gpu-support-and-cmake-v1-3/\" rel=\"nofollow\">http://www.stefanseibert.com/2017/10/tensorflow-as-dll-into-your-windows-c-project-with-gpu-support-and-cmake-v1-3/</a></p>\n<p>but alternatively with cpu support</p>\n<p>Here are the steps I used to generate the shared lib</p>\n<ul>\n<li>Acquired source code from <a href=\"https://github.com/tensorflow/tensorflow.git\">https://github.com/tensorflow/tensorflow.git</a></li>\n<li>Have installed the dependencies since I do not use the python bindings, there is no need for SWIG, so I installed Git (version 2.15.1.windows.2) and cmake 3.11.1</li>\n<li>I used the 64bit tools from Visual Studio 2015 since VS2015 is necessary to build the DLL. I should be able to open the \u201cVS2015 x64 Native Tools Command Prompt\u201d. This is needed so VS uses the 64 bit toolset.</li>\n<li>Navigated in the commandline to the \u201ctensorflow/contrib/cmake\u201d subfolder of the source code and create a directory with \u201cmkdir build\u201d. Afterwards navigate to the fresh build folder with \u201ccd build\u201d.</li>\n<li>Create a build solution: cmake .. -A x64 -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtensorflow_BUILD_CC_EXAMPLE=OFF -Dtensorflow_ENABLE_GRPC_SUPPORT=OFF -Dtensorflow_BUILD_CC_TESTS=OFF -Dtensorflow_BUILD_PYTHON_TESTS=OFF -Dtensorflow_ENABLE_GPU=OFF -Dtensorflow_WIN_CPU_SIMD_OPTIONS=/arch:AVX -Dtensorflow_BUILD_SHARED_LIB=ON -Dtensorflow_BUILD_PYTHON_BINDINGS=OFF</li>\n<li>Everything went fine till this. To build the tensorflow.dll, I issued the following command: MSBuild /p:Configuration=RelWithDebInfo tensorflow.vcxproj</li>\n<li>This throws an error: D:\\work\\tensorflow\\tensorflow/core/lib/core/stringpiece.h(34): fatal error C1083: Cannot open include file: 'absl/strings/string_view.h': No such file or directory ( compiling source file D:\\work\\tensorflow\\tensorflow\\core\\lib\\core\\coding.cc) [D:\\work\\tensorflow\\tensorflow\\contrib\\cmake\\build\\tf_core_lib.vcxproj].</li>\n<li>I fixed the above error with this: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"356230397\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/22007\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/22007/hovercard?comment_id=424553600&amp;comment_type=issue_comment\" href=\"https://github.com/tensorflow/tensorflow/issues/22007#issuecomment-424553600\">#22007 (comment)</a>.</li>\n<li>Doing the above I ended up with link error LNK2019:</li>\n</ul>\n<p>This error seems simple but is frustrating me, and I would greatly appreciate all help in getting this done quickly, thanks!</p>\n<h3>Source code / logs</h3>\n<ul>\n<li>error LNK2019: unresolved external symbol \"void __cdecl absl::base_internal::ThrowStdOutOfRange(char const *)\" (?ThrowStdOutOfRange@base_internal@absl@<a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=37194469\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ya\">@ya</a> XPEBD@Z) referenced in function \"class std::basic_string,class std::allocator &gt; __cdecl tensorflow::io::internal::JoinPathIm</li>\n</ul>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nNo\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nWindows 8\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:\nN/A\nTensorFlow installed from (source or binary):\nSource (Tried to build using cmake 3.11.1 but failed)\nTensorFlow version (use command below):\n1.10.0\nPython version:\nN/A\nBazel version (if compiling from source):\nN/A\nGCC/Compiler version (if compiling from source):\nVisual Studio 2015 - Visual C++ 14.0\nCUDA/cuDNN version:\nN/A\nGPU model and memory:\nN/A\nExact command to reproduce:\ncmake .. -A x64 -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtensorflow_BUILD_CC_EXAMPLE=OFF -Dtensorflow_ENABLE_GRPC_SUPPORT=OFF -Dtensorflow_BUILD_CC_TESTS=OFF -Dtensorflow_BUILD_PYTHON_TESTS=OFF -Dtensorflow_ENABLE_GPU=OFF -Dtensorflow_WIN_CPU_SIMD_OPTIONS=/arch:AVX -Dtensorflow_BUILD_SHARED_LIB=ON -Dtensorflow_BUILD_PYTHON_BINDINGS=OFF\n\nDescribe the problem\nI am trying to build tensorflow as a standalone project and have been following this tutorial\nhttp://www.stefanseibert.com/2017/10/tensorflow-as-dll-into-your-windows-c-project-with-gpu-support-and-cmake-v1-3/\nbut alternatively with cpu support\nHere are the steps I used to generate the shared lib\n\nAcquired source code from https://github.com/tensorflow/tensorflow.git\nHave installed the dependencies since I do not use the python bindings, there is no need for SWIG, so I installed Git (version 2.15.1.windows.2) and cmake 3.11.1\nI used the 64bit tools from Visual Studio 2015 since VS2015 is necessary to build the DLL. I should be able to open the \u201cVS2015 x64 Native Tools Command Prompt\u201d. This is needed so VS uses the 64 bit toolset.\nNavigated in the commandline to the \u201ctensorflow/contrib/cmake\u201d subfolder of the source code and create a directory with \u201cmkdir build\u201d. Afterwards navigate to the fresh build folder with \u201ccd build\u201d.\nCreate a build solution: cmake .. -A x64 -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtensorflow_BUILD_CC_EXAMPLE=OFF -Dtensorflow_ENABLE_GRPC_SUPPORT=OFF -Dtensorflow_BUILD_CC_TESTS=OFF -Dtensorflow_BUILD_PYTHON_TESTS=OFF -Dtensorflow_ENABLE_GPU=OFF -Dtensorflow_WIN_CPU_SIMD_OPTIONS=/arch:AVX -Dtensorflow_BUILD_SHARED_LIB=ON -Dtensorflow_BUILD_PYTHON_BINDINGS=OFF\nEverything went fine till this. To build the tensorflow.dll, I issued the following command: MSBuild /p:Configuration=RelWithDebInfo tensorflow.vcxproj\nThis throws an error: D:\\work\\tensorflow\\tensorflow/core/lib/core/stringpiece.h(34): fatal error C1083: Cannot open include file: 'absl/strings/string_view.h': No such file or directory ( compiling source file D:\\work\\tensorflow\\tensorflow\\core\\lib\\core\\coding.cc) [D:\\work\\tensorflow\\tensorflow\\contrib\\cmake\\build\\tf_core_lib.vcxproj].\nI fixed the above error with this: #22007 (comment).\nDoing the above I ended up with link error LNK2019:\n\nThis error seems simple but is frustrating me, and I would greatly appreciate all help in getting this done quickly, thanks!\nSource code / logs\n\nerror LNK2019: unresolved external symbol \"void __cdecl absl::base_internal::ThrowStdOutOfRange(char const *)\" (?ThrowStdOutOfRange@base_internal@absl@@ya XPEBD@Z) referenced in function \"class std::basic_string,class std::allocator > __cdecl tensorflow::io::internal::JoinPathIm", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nNo\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nWindows 8\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**:\r\nN/A\r\n- **TensorFlow installed from (source or binary)**:\r\nSource (Tried to build using cmake 3.11.1 but failed)\r\n- **TensorFlow version (use command below)**:\r\n1.10.0\r\n- **Python version**:\r\nN/A\r\n- **Bazel version (if compiling from source)**:\r\nN/A\r\n- **GCC/Compiler version (if compiling from source)**:\r\nVisual Studio 2015 - Visual C++ 14.0\r\n- **CUDA/cuDNN version**:\r\nN/A\r\n- **GPU model and memory**:\r\nN/A\r\n- **Exact command to reproduce**:\r\ncmake .. -A x64 -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtensorflow_BUILD_CC_EXAMPLE=OFF -Dtensorflow_ENABLE_GRPC_SUPPORT=OFF -Dtensorflow_BUILD_CC_TESTS=OFF -Dtensorflow_BUILD_PYTHON_TESTS=OFF -Dtensorflow_ENABLE_GPU=OFF -Dtensorflow_WIN_CPU_SIMD_OPTIONS=/arch:AVX -Dtensorflow_BUILD_SHARED_LIB=ON -Dtensorflow_BUILD_PYTHON_BINDINGS=OFF\r\n### Describe the problem\r\nI am trying to build tensorflow as a standalone project and have been following this tutorial\r\n\r\nhttp://www.stefanseibert.com/2017/10/tensorflow-as-dll-into-your-windows-c-project-with-gpu-support-and-cmake-v1-3/\r\n\r\nbut alternatively with cpu support\r\n\r\nHere are the steps I used to generate the shared lib\r\n\r\n- Acquired source code from https://github.com/tensorflow/tensorflow.git\r\n- Have installed the dependencies since I do not use the python bindings, there is no need for SWIG, so I installed Git (version 2.15.1.windows.2) and cmake 3.11.1\r\n- I used the 64bit tools from Visual Studio 2015 since VS2015 is necessary to build the DLL. I should be able to open the \u201cVS2015 x64 Native Tools Command Prompt\u201d. This is needed so VS uses the 64 bit toolset.\r\n- Navigated in the commandline to the \u201ctensorflow/contrib/cmake\u201d subfolder of the source code and create a directory with \u201cmkdir build\u201d. Afterwards navigate to the fresh build folder with \u201ccd build\u201d.\r\n- Create a build solution: cmake .. -A x64 -DCMAKE_BUILD_TYPE=RelWithDebInfo -Dtensorflow_BUILD_CC_EXAMPLE=OFF -Dtensorflow_ENABLE_GRPC_SUPPORT=OFF -Dtensorflow_BUILD_CC_TESTS=OFF -Dtensorflow_BUILD_PYTHON_TESTS=OFF -Dtensorflow_ENABLE_GPU=OFF -Dtensorflow_WIN_CPU_SIMD_OPTIONS=/arch:AVX -Dtensorflow_BUILD_SHARED_LIB=ON -Dtensorflow_BUILD_PYTHON_BINDINGS=OFF\r\n- Everything went fine till this. To build the tensorflow.dll, I issued the following command: MSBuild /p:Configuration=RelWithDebInfo tensorflow.vcxproj\r\n- This throws an error: D:\\work\\tensorflow\\tensorflow/core/lib/core/stringpiece.h(34): fatal error C1083: Cannot open include file: 'absl/strings/string_view.h': No such file or directory ( compiling source file D:\\work\\tensorflow\\tensorflow\\core\\lib\\core\\coding.cc) [D:\\work\\tensorflow\\tensorflow\\contrib\\cmake\\build\\tf_core_lib.vcxproj].\r\n- I fixed the above error with this: https://github.com/tensorflow/tensorflow/issues/22007#issuecomment-424553600.\r\n- Doing the above I ended up with link error LNK2019: \r\n\r\nThis error seems simple but is frustrating me, and I would greatly appreciate all help in getting this done quickly, thanks!\r\n\r\n### Source code / logs\r\n- error LNK2019: unresolved external symbol \"void __cdecl absl::base_internal::ThrowStdOutOfRange(char const *)\" (?ThrowStdOutOfRange@base_internal@absl@@YA XPEBD@Z) referenced in function \"class std::basic_string,class std::allocator > __cdecl tensorflow::io::internal::JoinPathIm\r\n"}