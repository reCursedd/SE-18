{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7123", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7123/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7123/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7123/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7123", "id": 203781714, "node_id": "MDU6SXNzdWUyMDM3ODE3MTQ=", "number": 7123, "title": "try ... catch like structure when loading tfrecords?", "user": {"login": "zijunwei", "id": 8821750, "node_id": "MDQ6VXNlcjg4MjE3NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/8821750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zijunwei", "html_url": "https://github.com/zijunwei", "followers_url": "https://api.github.com/users/zijunwei/followers", "following_url": "https://api.github.com/users/zijunwei/following{/other_user}", "gists_url": "https://api.github.com/users/zijunwei/gists{/gist_id}", "starred_url": "https://api.github.com/users/zijunwei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zijunwei/subscriptions", "organizations_url": "https://api.github.com/users/zijunwei/orgs", "repos_url": "https://api.github.com/users/zijunwei/repos", "events_url": "https://api.github.com/users/zijunwei/events{/privacy}", "received_events_url": "https://api.github.com/users/zijunwei/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "sherrym", "id": 12770037, "node_id": "MDQ6VXNlcjEyNzcwMDM3", "avatar_url": "https://avatars0.githubusercontent.com/u/12770037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherrym", "html_url": "https://github.com/sherrym", "followers_url": "https://api.github.com/users/sherrym/followers", "following_url": "https://api.github.com/users/sherrym/following{/other_user}", "gists_url": "https://api.github.com/users/sherrym/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherrym/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherrym/subscriptions", "organizations_url": "https://api.github.com/users/sherrym/orgs", "repos_url": "https://api.github.com/users/sherrym/repos", "events_url": "https://api.github.com/users/sherrym/events{/privacy}", "received_events_url": "https://api.github.com/users/sherrym/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherrym", "id": 12770037, "node_id": "MDQ6VXNlcjEyNzcwMDM3", "avatar_url": "https://avatars0.githubusercontent.com/u/12770037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherrym", "html_url": "https://github.com/sherrym", "followers_url": "https://api.github.com/users/sherrym/followers", "following_url": "https://api.github.com/users/sherrym/following{/other_user}", "gists_url": "https://api.github.com/users/sherrym/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherrym/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherrym/subscriptions", "organizations_url": "https://api.github.com/users/sherrym/orgs", "repos_url": "https://api.github.com/users/sherrym/repos", "events_url": "https://api.github.com/users/sherrym/events{/privacy}", "received_events_url": "https://api.github.com/users/sherrym/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-01-28T02:21:06Z", "updated_at": "2017-06-16T20:58:27Z", "closed_at": "2017-06-16T20:58:27Z", "author_association": "NONE", "body_html": "<p>When transferring tfrecords from place to place, some of them might be damaged or become incomplete. In this case, tensorflow will just return a queue error.</p>\n<p>Is it possible to put some try...catch structure into the data loading process to avoid the interuption?</p>\n<p>Some of the core errors:<br>\n<code>W tensorflow/core/framework/op_kernel.cc:975] Invalid argument: Could not parse example inpu</code></p>\n<p>`tensorflow.python.framework.errors_impl.OutOfRangeError: FIFOQueue '_0_batch/fifo_queue' is closed and has insufficient elements (requested 1, current size 0)<br>\n[[Node: batch = QueueDequeueMany[_class=[\"loc:@batch/fifo_queue\"], component_types=[DT_FLOAT, DT_INT64, DT_STRING], timeout_ms=-1, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](batch/fifo_queue, batch/n)]]</p>\n<p>Caused by op u'batch', defined at:<br>\nFile \"check_tf_records.py\", line 34, in `</p>\n<p><code>OutOfRangeError (see above for traceback): FIFOQueue '_0_batch/fifo_queue' is closed and has insufficient elements (requested 1, current size 0) [[Node: batch = QueueDequeueMany[_class=[\"loc:@batch/fifo_queue\"], component_types=[DT_FLOAT, DT_INT64, DT_STRING], timeout_ms=-1, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](batch/fifo_queue, batch/n)]]</code></p>", "body_text": "When transferring tfrecords from place to place, some of them might be damaged or become incomplete. In this case, tensorflow will just return a queue error.\nIs it possible to put some try...catch structure into the data loading process to avoid the interuption?\nSome of the core errors:\nW tensorflow/core/framework/op_kernel.cc:975] Invalid argument: Could not parse example inpu\n`tensorflow.python.framework.errors_impl.OutOfRangeError: FIFOQueue '_0_batch/fifo_queue' is closed and has insufficient elements (requested 1, current size 0)\n[[Node: batch = QueueDequeueMany[_class=[\"loc:@batch/fifo_queue\"], component_types=[DT_FLOAT, DT_INT64, DT_STRING], timeout_ms=-1, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](batch/fifo_queue, batch/n)]]\nCaused by op u'batch', defined at:\nFile \"check_tf_records.py\", line 34, in `\nOutOfRangeError (see above for traceback): FIFOQueue '_0_batch/fifo_queue' is closed and has insufficient elements (requested 1, current size 0) [[Node: batch = QueueDequeueMany[_class=[\"loc:@batch/fifo_queue\"], component_types=[DT_FLOAT, DT_INT64, DT_STRING], timeout_ms=-1, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](batch/fifo_queue, batch/n)]]", "body": "When transferring tfrecords from place to place, some of them might be damaged or become incomplete. In this case, tensorflow will just return a queue error. \r\n\r\nIs it possible to put some try...catch structure into the data loading process to avoid the interuption?\r\n\r\nSome of the core errors:\r\n`W tensorflow/core/framework/op_kernel.cc:975] Invalid argument: Could not parse example inpu`\r\n\r\n`tensorflow.python.framework.errors_impl.OutOfRangeError: FIFOQueue '_0_batch/fifo_queue' is closed and has insufficient elements (requested 1, current size 0)\r\n\t [[Node: batch = QueueDequeueMany[_class=[\"loc:@batch/fifo_queue\"], component_types=[DT_FLOAT, DT_INT64, DT_STRING], timeout_ms=-1, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](batch/fifo_queue, batch/n)]]\r\n\r\nCaused by op u'batch', defined at:\r\n  File \"check_tf_records.py\", line 34, in <module>`\r\n\r\n`OutOfRangeError (see above for traceback): FIFOQueue '_0_batch/fifo_queue' is closed and has insufficient elements (requested 1, current size 0)\r\n\t [[Node: batch = QueueDequeueMany[_class=[\"loc:@batch/fifo_queue\"], component_types=[DT_FLOAT, DT_INT64, DT_STRING], timeout_ms=-1, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](batch/fifo_queue, batch/n)]]`\r\n"}