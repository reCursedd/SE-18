{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14768", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14768/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14768/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14768/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14768", "id": 275831988, "node_id": "MDU6SXNzdWUyNzU4MzE5ODg=", "number": 14768, "title": "Feature request: Control order of 'feature_column.input_layer'", "user": {"login": "malmaud", "id": 987837, "node_id": "MDQ6VXNlcjk4NzgzNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/987837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malmaud", "html_url": "https://github.com/malmaud", "followers_url": "https://api.github.com/users/malmaud/followers", "following_url": "https://api.github.com/users/malmaud/following{/other_user}", "gists_url": "https://api.github.com/users/malmaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/malmaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malmaud/subscriptions", "organizations_url": "https://api.github.com/users/malmaud/orgs", "repos_url": "https://api.github.com/users/malmaud/repos", "events_url": "https://api.github.com/users/malmaud/events{/privacy}", "received_events_url": "https://api.github.com/users/malmaud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-11-21T19:28:10Z", "updated_at": "2017-11-28T05:43:23Z", "closed_at": "2017-11-27T17:23:12Z", "author_association": "CONTRIBUTOR", "body_html": "<p>On master (<a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/80e7c9f45c7911b97c1da92d0a40063f9d2ae50c/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/80e7c9f45c7911b97c1da92d0a40063f9d2ae50c\"><tt>80e7c9f</tt></a>).</p>\n<p>It seems that the mapping of features to columns in dense the input matrix is always sorted by the alphabetical order of the feature names. It would be nice is this was customizable, perhaps by respecting the order of the feature columns in the second argument to <code>input_layer</code>. Mainly useful  for debugging and introspecting the network to know which columns correspond to which features.</p>\n<p>eg:</p>\n<div class=\"highlight highlight-source-python\"><pre>sess.run(tf.feature_column.input_layer({<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>: [<span class=\"pl-c1\">1</span>], <span class=\"pl-s\"><span class=\"pl-pds\">'</span>b<span class=\"pl-pds\">'</span></span>: [<span class=\"pl-c1\">2</span>]}, [tf.feature_column.numeric_column(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>), tf.feature_column.numeric_column(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>b<span class=\"pl-pds\">'</span></span>)]))</pre></div>\n<p>gives <code>[1, 2</code>],</p>\n<p>as does switching the order of the feature columns:</p>\n<div class=\"highlight highlight-source-python\"><pre>sess.run(tf.feature_column.input_layer({<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>: [<span class=\"pl-c1\">1</span>], <span class=\"pl-s\"><span class=\"pl-pds\">'</span>b<span class=\"pl-pds\">'</span></span>: [<span class=\"pl-c1\">2</span>]}, [tf.feature_column.numeric_column(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>b<span class=\"pl-pds\">'</span></span>), tf.feature_column.numeric_column(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>)]))</pre></div>\n<p>I also tried giving the features as an <code>OrderedDict</code>, but <code>input_layer</code> doesn't seem to care about the ordering in that  situation either.</p>", "body_text": "On master (80e7c9f).\nIt seems that the mapping of features to columns in dense the input matrix is always sorted by the alphabetical order of the feature names. It would be nice is this was customizable, perhaps by respecting the order of the feature columns in the second argument to input_layer. Mainly useful  for debugging and introspecting the network to know which columns correspond to which features.\neg:\nsess.run(tf.feature_column.input_layer({'a': [1], 'b': [2]}, [tf.feature_column.numeric_column('a'), tf.feature_column.numeric_column('b')]))\ngives [1, 2],\nas does switching the order of the feature columns:\nsess.run(tf.feature_column.input_layer({'a': [1], 'b': [2]}, [tf.feature_column.numeric_column('b'), tf.feature_column.numeric_column('a')]))\nI also tried giving the features as an OrderedDict, but input_layer doesn't seem to care about the ordering in that  situation either.", "body": "On master (80e7c9f45c).\r\n\r\nIt seems that the mapping of features to columns in dense the input matrix is always sorted by the alphabetical order of the feature names. It would be nice is this was customizable, perhaps by respecting the order of the feature columns in the second argument to `input_layer`. Mainly useful  for debugging and introspecting the network to know which columns correspond to which features.\r\n\r\neg:\r\n\r\n```python\r\nsess.run(tf.feature_column.input_layer({'a': [1], 'b': [2]}, [tf.feature_column.numeric_column('a'), tf.feature_column.numeric_column('b')]))\r\n```\r\n\r\ngives `[1, 2`],\r\n\r\nas does switching the order of the feature columns:\r\n\r\n```python\r\nsess.run(tf.feature_column.input_layer({'a': [1], 'b': [2]}, [tf.feature_column.numeric_column('b'), tf.feature_column.numeric_column('a')]))\r\n```\r\n\r\nI also tried giving the features as an `OrderedDict`, but `input_layer` doesn't seem to care about the ordering in that  situation either. \r\n"}