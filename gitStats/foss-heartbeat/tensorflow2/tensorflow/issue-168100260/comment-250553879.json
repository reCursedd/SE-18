{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/250553879", "html_url": "https://github.com/tensorflow/tensorflow/issues/3549#issuecomment-250553879", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3549", "id": 250553879, "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDU1Mzg3OQ==", "user": {"login": "sammyer", "id": 3265457, "node_id": "MDQ6VXNlcjMyNjU0NTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3265457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sammyer", "html_url": "https://github.com/sammyer", "followers_url": "https://api.github.com/users/sammyer/followers", "following_url": "https://api.github.com/users/sammyer/following{/other_user}", "gists_url": "https://api.github.com/users/sammyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/sammyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sammyer/subscriptions", "organizations_url": "https://api.github.com/users/sammyer/orgs", "repos_url": "https://api.github.com/users/sammyer/repos", "events_url": "https://api.github.com/users/sammyer/events{/privacy}", "received_events_url": "https://api.github.com/users/sammyer/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-29T18:37:45Z", "updated_at": "2016-09-29T18:37:45Z", "author_association": "NONE", "body_html": "<p>Re: <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3147213\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/lingz\">@lingz</a> :  I was able to compile with selective registration, but it didn't help reduce the file size for me.  Instead, I ended up using the makefile from tensorflow/contrib/makefile, removing all the unused ops classes from <a href=\"https://github.com/tensorflow/tensorflow/blob/f71cc62282bf2e066f9ebd08cf3f605fc98c6e41/tensorflow/contrib/makefile/tf_op_files.txt\">tf_op_files.txt.</a></p>\n<p>For what it's worth, this is what I had in my <code>ops_to_register.h</code>:</p>\n<div class=\"highlight highlight-source-c++\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-k\">bool</span> <span class=\"pl-c1\">kRequiresSymbolicGradients</span> = <span class=\"pl-c1\">false</span>;\n<span class=\"pl-k\">const</span> <span class=\"pl-k\">char</span>* <span class=\"pl-c1\">kNecessaryOpKernelClasses</span> = \n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>,Add,<span class=\"pl-pds\">\"</span></span>\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>,Const,<span class=\"pl-pds\">\"</span></span>\n    ...\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>,Softmax,<span class=\"pl-pds\">\"</span></span>;\n\n\n<span class=\"pl-k\">constexpr</span> <span class=\"pl-k\">bool</span> <span class=\"pl-en\">ShouldRegisterOp</span>(<span class=\"pl-k\">const</span> <span class=\"pl-k\">char</span>* name) {\n    <span class=\"pl-k\">return</span> <span class=\"pl-c1\">strcmp</span>(name,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Add<span class=\"pl-pds\">\"</span></span>) ? <span class=\"pl-c1\">true</span> :\n        <span class=\"pl-c1\">strcmp</span>(name,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Const<span class=\"pl-pds\">\"</span></span>) ? <span class=\"pl-c1\">true</span> :\n        ...\n        <span class=\"pl-c1\">strcmp</span>(name,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Softmax<span class=\"pl-pds\">\"</span></span>) ? <span class=\"pl-c1\">true</span> :\n        <span class=\"pl-c1\">false</span>;\n}</pre></div>\n<p>The <code>SHOULD_REGISTER_OP</code> macro from <a href=\"https://github.com/tensorflow/tensorflow/blob/f71cc62282bf2e066f9ebd08cf3f605fc98c6e41/tensorflow/core/framework/selective_registration.h\">tensorflow/core/framework/selective_registration.h</a> calls ShouldRegisterOp, which returns true if the op should be registered.<br>\nThe <code>SHOULD_REGISTER_OP_KERNEL</code> macro does a string search in <code>kNecessaryOpKernelClasses</code></p>", "body_text": "Re: @lingz :  I was able to compile with selective registration, but it didn't help reduce the file size for me.  Instead, I ended up using the makefile from tensorflow/contrib/makefile, removing all the unused ops classes from tf_op_files.txt.\nFor what it's worth, this is what I had in my ops_to_register.h:\nconst bool kRequiresSymbolicGradients = false;\nconst char* kNecessaryOpKernelClasses = \n    \",Add,\"\n    \",Const,\"\n    ...\n    \",Softmax,\";\n\n\nconstexpr bool ShouldRegisterOp(const char* name) {\n    return strcmp(name,\"Add\") ? true :\n        strcmp(name,\"Const\") ? true :\n        ...\n        strcmp(name,\"Softmax\") ? true :\n        false;\n}\nThe SHOULD_REGISTER_OP macro from tensorflow/core/framework/selective_registration.h calls ShouldRegisterOp, which returns true if the op should be registered.\nThe SHOULD_REGISTER_OP_KERNEL macro does a string search in kNecessaryOpKernelClasses", "body": "Re: @lingz :  I was able to compile with selective registration, but it didn't help reduce the file size for me.  Instead, I ended up using the makefile from tensorflow/contrib/makefile, removing all the unused ops classes from [tf_op_files.txt.](https://github.com/tensorflow/tensorflow/blob/f71cc62282bf2e066f9ebd08cf3f605fc98c6e41/tensorflow/contrib/makefile/tf_op_files.txt)  \n\nFor what it's worth, this is what I had in my `ops_to_register.h`:\n\n``` C++\nconst bool kRequiresSymbolicGradients = false;\nconst char* kNecessaryOpKernelClasses = \n    \",Add,\"\n    \",Const,\"\n    ...\n    \",Softmax,\";\n\n\nconstexpr bool ShouldRegisterOp(const char* name) {\n    return strcmp(name,\"Add\") ? true :\n        strcmp(name,\"Const\") ? true :\n        ...\n        strcmp(name,\"Softmax\") ? true :\n        false;\n}\n```\n\nThe `SHOULD_REGISTER_OP` macro from [tensorflow/core/framework/selective_registration.h](https://github.com/tensorflow/tensorflow/blob/f71cc62282bf2e066f9ebd08cf3f605fc98c6e41/tensorflow/core/framework/selective_registration.h) calls ShouldRegisterOp, which returns true if the op should be registered.\nThe `SHOULD_REGISTER_OP_KERNEL` macro does a string search in `kNecessaryOpKernelClasses`\n"}