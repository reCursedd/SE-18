{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/342771311", "html_url": "https://github.com/tensorflow/tensorflow/issues/3549#issuecomment-342771311", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3549", "id": 342771311, "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mjc3MTMxMQ==", "user": {"login": "eli99999", "id": 13930252, "node_id": "MDQ6VXNlcjEzOTMwMjUy", "avatar_url": "https://avatars3.githubusercontent.com/u/13930252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eli99999", "html_url": "https://github.com/eli99999", "followers_url": "https://api.github.com/users/eli99999/followers", "following_url": "https://api.github.com/users/eli99999/following{/other_user}", "gists_url": "https://api.github.com/users/eli99999/gists{/gist_id}", "starred_url": "https://api.github.com/users/eli99999/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eli99999/subscriptions", "organizations_url": "https://api.github.com/users/eli99999/orgs", "repos_url": "https://api.github.com/users/eli99999/repos", "events_url": "https://api.github.com/users/eli99999/events{/privacy}", "received_events_url": "https://api.github.com/users/eli99999/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-08T10:11:14Z", "updated_at": "2017-11-08T10:11:14Z", "author_association": "NONE", "body_html": "<p>thanks <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4453739\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/bobeo\">@bobeo</a> ,<br>\nI did this process with a few pb graphs including the ones from the example app<br>\nand in in time I'm the print_selective_registration_header process i see that the ops_to_register.h file is updated according to the graph but the resulting libtensorflow_inference.so is always in the same size.<br>\ni tried all the bazel clean / bazel dump options that i have found, but nothing helped<br>\nso it is either a bazel caching issue. or that the build from ops_to_register.h does not work properly.</p>", "body_text": "thanks @bobeo ,\nI did this process with a few pb graphs including the ones from the example app\nand in in time I'm the print_selective_registration_header process i see that the ops_to_register.h file is updated according to the graph but the resulting libtensorflow_inference.so is always in the same size.\ni tried all the bazel clean / bazel dump options that i have found, but nothing helped\nso it is either a bazel caching issue. or that the build from ops_to_register.h does not work properly.", "body": "thanks @bobeo ,\r\nI did this process with a few pb graphs including the ones from the example app\r\nand in in time I'm the print_selective_registration_header process i see that the ops_to_register.h file is updated according to the graph but the resulting libtensorflow_inference.so is always in the same size.\r\ni tried all the bazel clean / bazel dump options that i have found, but nothing helped\r\nso it is either a bazel caching issue. or that the build from ops_to_register.h does not work properly."}