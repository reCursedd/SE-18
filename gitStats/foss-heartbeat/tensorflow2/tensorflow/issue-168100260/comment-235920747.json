{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/235920747", "html_url": "https://github.com/tensorflow/tensorflow/issues/3549#issuecomment-235920747", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3549", "id": 235920747, "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTkyMDc0Nw==", "user": {"login": "lingz", "id": 3147213, "node_id": "MDQ6VXNlcjMxNDcyMTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3147213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lingz", "html_url": "https://github.com/lingz", "followers_url": "https://api.github.com/users/lingz/followers", "following_url": "https://api.github.com/users/lingz/following{/other_user}", "gists_url": "https://api.github.com/users/lingz/gists{/gist_id}", "starred_url": "https://api.github.com/users/lingz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lingz/subscriptions", "organizations_url": "https://api.github.com/users/lingz/orgs", "repos_url": "https://api.github.com/users/lingz/repos", "events_url": "https://api.github.com/users/lingz/events{/privacy}", "received_events_url": "https://api.github.com/users/lingz/received_events", "type": "User", "site_admin": false}, "created_at": "2016-07-28T14:58:07Z", "updated_at": "2016-07-28T14:59:02Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Okay, but it would be nice to be able to do selective registration eventually, so I can get the minimal size for my own graph right.</p>\n<p>I tried to do it on my own, and replaced the android_cc_library, to depend on <code>android_all_ops</code> instead. Like this:</p>\n<pre><code>cc_library(\n    name = \"android_tensorflow_kernels\",\n    srcs = select({\n        \"//tensorflow:android\": [\n            \"//tensorflow/core/kernels:android_all_ops\",\n        ],\n        \"//conditions:default\": [],\n    }),\n    copts = tf_copts(),\n    tags = [\n        \"manual\",\n        \"notap\",\n    ],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \"//tensorflow/core:android_tensorflow_lib_lite\",\n        \"//tensorflow/core:protos_cc\",\n        \"//third_party/eigen3\",\n    ],\n    alwayslink = 1,\n)\n</code></pre>\n<p>But then I got the following error during compilation:</p>\n<pre><code>external/eigen_archive/eigen-eigen-d02e6a705c30/unsupported/Eigen/CXX11/../../../Eigen/src/Core/util/StaticAssert.h:32:40: error: static assertion failed: THIS_TYPE_IS_NOT_SUPPORTED\n     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);\n                                        ^\nexternal/eigen_archive/eigen-eigen-d02e6a705c30/unsupported/Eigen/CXX11/../../../Eigen/src/Core/SpecialFunctions.h:976:9: note: in expansion of macro 'EIGEN_STATIC_ASSERT'\n         EIGEN_STATIC_ASSERT((internal::is_same&lt;Scalar, Scalar&gt;::value == false),\n</code></pre>\n<p>This is my main build file:</p>\n<pre><code>cc_binary(\n    name = \"myapp\",\n    srcs = [\n        \"main.cc\",\n        \"ops_to_register.h\"\n    ],\n    copts = [\n        \"-fno-exceptions\",\n        \"-DEIGEN_AVOID_STL_ARRAY\",\n        \"-DSELECTIVE_REGISTRATION\",\n        \"-mfpu=neon\", # This one for ARM only\n        \"-std=c++11\",\n        \"-DMIN_LOG_LEVEL=0\",\n        \"-DTF_LEAN_BINARY\",\n        \"-O2\",\n        \"-fPIE\",\n    ],\n    linkopts = [\n        \"-landroid\",\n        \"-llog\",\n        \"-lm\",\n        \"-z defs\",\n        \"-s\",\n        \"-Wl,--icf=all\",  # Identical Code Folding\n        \"-Wl,--exclude-libs,ALL\",  # Exclude syms in all libs from auto export\n        \"-pie\",\n    ],\n    deps = [\n        \"@org_tensorflow//tensorflow/core:android_tensorflow_lib\",\n    ],\n)\n</code></pre>\n<p>And finally my <code>ops_to_register.h</code> looks like this:</p>\n<pre><code>#ifndef METALANG_OPS_TO_REGISTER\n#define METALANG_OPS_TO_REGISTER\n\n#include \"tensorflow/core/framework/selective_registration.h\"\n\nSHOULD_REGISTER_OP(\"Add\")\nSHOULD_REGISTER_OP(\"AddN\")\nSHOULD_REGISTER_OP(\"All\")\nSHOULD_REGISTER_OP(\"ApplyAdam\")\nSHOULD_REGISTER_OP(\"ArgMax\")\n....\n....\n\n#endif\n</code></pre>\n<p>Any ideas as to why it might be failing to compile with EIGEN?</p>", "body_text": "Okay, but it would be nice to be able to do selective registration eventually, so I can get the minimal size for my own graph right.\nI tried to do it on my own, and replaced the android_cc_library, to depend on android_all_ops instead. Like this:\ncc_library(\n    name = \"android_tensorflow_kernels\",\n    srcs = select({\n        \"//tensorflow:android\": [\n            \"//tensorflow/core/kernels:android_all_ops\",\n        ],\n        \"//conditions:default\": [],\n    }),\n    copts = tf_copts(),\n    tags = [\n        \"manual\",\n        \"notap\",\n    ],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \"//tensorflow/core:android_tensorflow_lib_lite\",\n        \"//tensorflow/core:protos_cc\",\n        \"//third_party/eigen3\",\n    ],\n    alwayslink = 1,\n)\n\nBut then I got the following error during compilation:\nexternal/eigen_archive/eigen-eigen-d02e6a705c30/unsupported/Eigen/CXX11/../../../Eigen/src/Core/util/StaticAssert.h:32:40: error: static assertion failed: THIS_TYPE_IS_NOT_SUPPORTED\n     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);\n                                        ^\nexternal/eigen_archive/eigen-eigen-d02e6a705c30/unsupported/Eigen/CXX11/../../../Eigen/src/Core/SpecialFunctions.h:976:9: note: in expansion of macro 'EIGEN_STATIC_ASSERT'\n         EIGEN_STATIC_ASSERT((internal::is_same<Scalar, Scalar>::value == false),\n\nThis is my main build file:\ncc_binary(\n    name = \"myapp\",\n    srcs = [\n        \"main.cc\",\n        \"ops_to_register.h\"\n    ],\n    copts = [\n        \"-fno-exceptions\",\n        \"-DEIGEN_AVOID_STL_ARRAY\",\n        \"-DSELECTIVE_REGISTRATION\",\n        \"-mfpu=neon\", # This one for ARM only\n        \"-std=c++11\",\n        \"-DMIN_LOG_LEVEL=0\",\n        \"-DTF_LEAN_BINARY\",\n        \"-O2\",\n        \"-fPIE\",\n    ],\n    linkopts = [\n        \"-landroid\",\n        \"-llog\",\n        \"-lm\",\n        \"-z defs\",\n        \"-s\",\n        \"-Wl,--icf=all\",  # Identical Code Folding\n        \"-Wl,--exclude-libs,ALL\",  # Exclude syms in all libs from auto export\n        \"-pie\",\n    ],\n    deps = [\n        \"@org_tensorflow//tensorflow/core:android_tensorflow_lib\",\n    ],\n)\n\nAnd finally my ops_to_register.h looks like this:\n#ifndef METALANG_OPS_TO_REGISTER\n#define METALANG_OPS_TO_REGISTER\n\n#include \"tensorflow/core/framework/selective_registration.h\"\n\nSHOULD_REGISTER_OP(\"Add\")\nSHOULD_REGISTER_OP(\"AddN\")\nSHOULD_REGISTER_OP(\"All\")\nSHOULD_REGISTER_OP(\"ApplyAdam\")\nSHOULD_REGISTER_OP(\"ArgMax\")\n....\n....\n\n#endif\n\nAny ideas as to why it might be failing to compile with EIGEN?", "body": "Okay, but it would be nice to be able to do selective registration eventually, so I can get the minimal size for my own graph right.\n\nI tried to do it on my own, and replaced the android_cc_library, to depend on `android_all_ops` instead. Like this:\n\n```\ncc_library(\n    name = \"android_tensorflow_kernels\",\n    srcs = select({\n        \"//tensorflow:android\": [\n            \"//tensorflow/core/kernels:android_all_ops\",\n        ],\n        \"//conditions:default\": [],\n    }),\n    copts = tf_copts(),\n    tags = [\n        \"manual\",\n        \"notap\",\n    ],\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \"//tensorflow/core:android_tensorflow_lib_lite\",\n        \"//tensorflow/core:protos_cc\",\n        \"//third_party/eigen3\",\n    ],\n    alwayslink = 1,\n)\n```\n\nBut then I got the following error during compilation:\n\n```\nexternal/eigen_archive/eigen-eigen-d02e6a705c30/unsupported/Eigen/CXX11/../../../Eigen/src/Core/util/StaticAssert.h:32:40: error: static assertion failed: THIS_TYPE_IS_NOT_SUPPORTED\n     #define EIGEN_STATIC_ASSERT(X,MSG) static_assert(X,#MSG);\n                                        ^\nexternal/eigen_archive/eigen-eigen-d02e6a705c30/unsupported/Eigen/CXX11/../../../Eigen/src/Core/SpecialFunctions.h:976:9: note: in expansion of macro 'EIGEN_STATIC_ASSERT'\n         EIGEN_STATIC_ASSERT((internal::is_same<Scalar, Scalar>::value == false),\n```\n\nThis is my main build file:\n\n```\ncc_binary(\n    name = \"myapp\",\n    srcs = [\n        \"main.cc\",\n        \"ops_to_register.h\"\n    ],\n    copts = [\n        \"-fno-exceptions\",\n        \"-DEIGEN_AVOID_STL_ARRAY\",\n        \"-DSELECTIVE_REGISTRATION\",\n        \"-mfpu=neon\", # This one for ARM only\n        \"-std=c++11\",\n        \"-DMIN_LOG_LEVEL=0\",\n        \"-DTF_LEAN_BINARY\",\n        \"-O2\",\n        \"-fPIE\",\n    ],\n    linkopts = [\n        \"-landroid\",\n        \"-llog\",\n        \"-lm\",\n        \"-z defs\",\n        \"-s\",\n        \"-Wl,--icf=all\",  # Identical Code Folding\n        \"-Wl,--exclude-libs,ALL\",  # Exclude syms in all libs from auto export\n        \"-pie\",\n    ],\n    deps = [\n        \"@org_tensorflow//tensorflow/core:android_tensorflow_lib\",\n    ],\n)\n```\n\nAnd finally my `ops_to_register.h` looks like this:\n\n```\n#ifndef METALANG_OPS_TO_REGISTER\n#define METALANG_OPS_TO_REGISTER\n\n#include \"tensorflow/core/framework/selective_registration.h\"\n\nSHOULD_REGISTER_OP(\"Add\")\nSHOULD_REGISTER_OP(\"AddN\")\nSHOULD_REGISTER_OP(\"All\")\nSHOULD_REGISTER_OP(\"ApplyAdam\")\nSHOULD_REGISTER_OP(\"ArgMax\")\n....\n....\n\n#endif\n```\n\nAny ideas as to why it might be failing to compile with EIGEN?\n"}