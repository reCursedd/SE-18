{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/250599976", "html_url": "https://github.com/tensorflow/tensorflow/issues/3549#issuecomment-250599976", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3549", "id": 250599976, "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDU5OTk3Ng==", "user": {"login": "cwhipkey", "id": 17578177, "node_id": "MDQ6VXNlcjE3NTc4MTc3", "avatar_url": "https://avatars0.githubusercontent.com/u/17578177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cwhipkey", "html_url": "https://github.com/cwhipkey", "followers_url": "https://api.github.com/users/cwhipkey/followers", "following_url": "https://api.github.com/users/cwhipkey/following{/other_user}", "gists_url": "https://api.github.com/users/cwhipkey/gists{/gist_id}", "starred_url": "https://api.github.com/users/cwhipkey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cwhipkey/subscriptions", "organizations_url": "https://api.github.com/users/cwhipkey/orgs", "repos_url": "https://api.github.com/users/cwhipkey/repos", "events_url": "https://api.github.com/users/cwhipkey/events{/privacy}", "received_events_url": "https://api.github.com/users/cwhipkey/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-29T21:43:18Z", "updated_at": "2016-09-29T22:18:41Z", "author_association": "MEMBER", "body_html": "<p>For why the header didn't make the size smaller, I think there are a few<br>\npossibilities to check:</p>\n<ol>\n<li>selective registration can only make code deleted if the expressions can<br>\nbe evaluated as constexprs.  Using const char* instead of const char[] on<br>\nthe definition of kNecessaryOpKernelClasses may be enough to prevent this.<br>\nBut even with that,  I would have expected some drop by the const bool<br>\nkRequiresSymbolicGradients = false;  line.  Was it no change at all in<br>\nsize, or a small change?</li>\n<li>doublecheck that SELECTIVE_REGISTRATION macro is defined for calls to<br>\ncompile the ops and kernels.</li>\n<li>what compiler are you using?  Maybe compiler differences could explain<br>\nit as well.</li>\n</ol>\n<p>Here's an example ops_to_register.h that gets generated by the tool that<br>\nwill be opensourced soon:</p>\n<p>#ifndef OPS_TO_REGISTER<br>\n#define OPS_TO_REGISTER<br>\nconstexpr inline bool ShouldRegisterOp(const char op[]) {<br>\nreturn false<br>\n|| (strcmp(op, \"AvgPool\") == 0)<br>\n|| (strcmp(op, \"BiasAdd\") == 0)<br>\n|| (strcmp(op, \"Concat\") == 0)<br>\n|| (strcmp(op, \"Const\") == 0)<br>\n|| (strcmp(op, \"Conv2D\") == 0)<br>\n|| (strcmp(op, \"Identity\") == 0)<br>\n|| (strcmp(op, \"LRN\") == 0)<br>\n|| (strcmp(op, \"MatMul\") == 0)<br>\n|| (strcmp(op, \"MaxPool\") == 0)<br>\n|| (strcmp(op, \"NoOp\") == 0)<br>\n|| (strcmp(op, \"Placeholder\") == 0)<br>\n|| (strcmp(op, \"Relu\") == 0)<br>\n|| (strcmp(op, \"Reshape\") == 0)<br>\n|| (strcmp(op, \"Softmax\") == 0)<br>\n|| (strcmp(op, \"_Recv\") == 0)<br>\n|| (strcmp(op, \"_Send\") == 0)<br>\n;<br>\n}<br>\nconst char kNecessaryOpKernelClasses[] = \",\"<br>\n\"AvgPoolingOp&lt;CPUDevice, float&gt;,\"<br>\n\"BiasOp&lt;CPUDevice, float&gt;,\"<br>\n\"ConcatOp&lt;CPUDevice, float&gt;,\"<br>\n\"ConstantOp,\"<br>\n\"Conv2DOp&lt;CPUDevice, float&gt;,\"<br>\n\"IdentityOp,\"<br>\n\"LRNOp&lt;CPUDevice, float&gt;,\"<br>\n\"MatMulOp&lt;CPUDevice, float, false &gt;,\"<br>\n\"MaxPoolingOp&lt;CPUDevice, float&gt;,\"<br>\n\"NoOp,\"<br>\n\"PlaceholderOp,\"<br>\n\"ReluOp&lt;CPUDevice, float&gt;,\"<br>\n\"ReshapeOp,\"<br>\n\"SoftmaxOp&lt;CPUDevice, float&gt;,\"<br>\n\"RecvOp,\"<br>\n\"SendOp,\"<br>\n;<br>\nconst bool kRequiresSymbolicGradients = false;<br>\n#endif</p>\n<h2></h2>\n<p>On Thu, Sep 29, 2016 at 11:39 AM, Sam <a href=\"mailto:notifications@github.com\">notifications@github.com</a> wrote:</p>\n<blockquote>\n<p>Re: <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3147213\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/lingz\">@lingz</a> <a href=\"https://github.com/lingz\">https://github.com/lingz</a> : I was able to compile with<br>\nselective registration, but it didn't help reduce the file size for me.<br>\nInstead, I ended up using the makefile from tensorflow/contrib/makefile,<br>\nremoving all the unused ops classes from tf_op_files.txt.<br>\n<a href=\"https://github.com/tensorflow/tensorflow/blob/f71cc62282bf2e066f9ebd08cf3f605fc98c6e41/tensorflow/contrib/makefile/tf_op_files.txt\">https://github.com/tensorflow/tensorflow/blob/f71cc62282bf2e066f9ebd08cf3f605fc98c6e41/tensorflow/contrib/makefile/tf_op_files.txt</a></p>\n<p>For what it's worth, this is what I had in my ops_to_register.h:</p>\n<p>const bool kRequiresSymbolicGradients = false;const char* kNecessaryOpKernelClasses =<br>\n\",Add,\"<br>\n\",Const,\"<br>\n...<br>\n\",Softmax,\";</p>\n<p>constexpr bool ShouldRegisterOp(const char* name) {<br>\nreturn strcmp(name,\"Add\") ? true :<br>\nstrcmp(name,\"Const\") ? true :<br>\n...<br>\nstrcmp(name,\"Softmax\") ? true :<br>\nfalse;<br>\n}</p>\n<p>The SHOULD_REGISTER_OP macro from tensorflow/core/framework/<br>\nselective_registration.h<br>\n<a href=\"https://github.com/tensorflow/tensorflow/blob/f71cc62282bf2e066f9ebd08cf3f605fc98c6e41/tensorflow/core/framework/selective_registration.h\">https://github.com/tensorflow/tensorflow/blob/f71cc62282bf2e066f9ebd08cf3f605fc98c6e41/tensorflow/core/framework/selective_registration.h</a><br>\ncalls ShouldRegisterOp, which returns true if the op should be registered.<br>\nThe SHOULD_REGISTER_OP_KERNEL macro does a string search in<br>\nkNecessaryOpKernelClasses</p>\n<p>\u2014<br>\nYou are receiving this because you were mentioned.<br>\nReply to this email directly, view it on GitHub<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"168100260\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/3549\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/3549/hovercard?comment_id=250553879&amp;comment_type=issue_comment\" href=\"https://github.com/tensorflow/tensorflow/issues/3549#issuecomment-250553879\">#3549 (comment)</a>,<br>\nor mute the thread<br>\n<a href=\"https://github.com/notifications/unsubscribe-auth/AQw4wQ7SVEzQUTsU3512180ZgGITJBZTks5qvAXugaJpZM4JXOz-\">https://github.com/notifications/unsubscribe-auth/AQw4wQ7SVEzQUTsU3512180ZgGITJBZTks5qvAXugaJpZM4JXOz-</a><br>\n.</p>\n</blockquote>", "body_text": "For why the header didn't make the size smaller, I think there are a few\npossibilities to check:\n\nselective registration can only make code deleted if the expressions can\nbe evaluated as constexprs.  Using const char* instead of const char[] on\nthe definition of kNecessaryOpKernelClasses may be enough to prevent this.\nBut even with that,  I would have expected some drop by the const bool\nkRequiresSymbolicGradients = false;  line.  Was it no change at all in\nsize, or a small change?\ndoublecheck that SELECTIVE_REGISTRATION macro is defined for calls to\ncompile the ops and kernels.\nwhat compiler are you using?  Maybe compiler differences could explain\nit as well.\n\nHere's an example ops_to_register.h that gets generated by the tool that\nwill be opensourced soon:\n#ifndef OPS_TO_REGISTER\n#define OPS_TO_REGISTER\nconstexpr inline bool ShouldRegisterOp(const char op[]) {\nreturn false\n|| (strcmp(op, \"AvgPool\") == 0)\n|| (strcmp(op, \"BiasAdd\") == 0)\n|| (strcmp(op, \"Concat\") == 0)\n|| (strcmp(op, \"Const\") == 0)\n|| (strcmp(op, \"Conv2D\") == 0)\n|| (strcmp(op, \"Identity\") == 0)\n|| (strcmp(op, \"LRN\") == 0)\n|| (strcmp(op, \"MatMul\") == 0)\n|| (strcmp(op, \"MaxPool\") == 0)\n|| (strcmp(op, \"NoOp\") == 0)\n|| (strcmp(op, \"Placeholder\") == 0)\n|| (strcmp(op, \"Relu\") == 0)\n|| (strcmp(op, \"Reshape\") == 0)\n|| (strcmp(op, \"Softmax\") == 0)\n|| (strcmp(op, \"_Recv\") == 0)\n|| (strcmp(op, \"_Send\") == 0)\n;\n}\nconst char kNecessaryOpKernelClasses[] = \",\"\n\"AvgPoolingOp<CPUDevice, float>,\"\n\"BiasOp<CPUDevice, float>,\"\n\"ConcatOp<CPUDevice, float>,\"\n\"ConstantOp,\"\n\"Conv2DOp<CPUDevice, float>,\"\n\"IdentityOp,\"\n\"LRNOp<CPUDevice, float>,\"\n\"MatMulOp<CPUDevice, float, false >,\"\n\"MaxPoolingOp<CPUDevice, float>,\"\n\"NoOp,\"\n\"PlaceholderOp,\"\n\"ReluOp<CPUDevice, float>,\"\n\"ReshapeOp,\"\n\"SoftmaxOp<CPUDevice, float>,\"\n\"RecvOp,\"\n\"SendOp,\"\n;\nconst bool kRequiresSymbolicGradients = false;\n#endif\n\nOn Thu, Sep 29, 2016 at 11:39 AM, Sam notifications@github.com wrote:\n\nRe: @lingz https://github.com/lingz : I was able to compile with\nselective registration, but it didn't help reduce the file size for me.\nInstead, I ended up using the makefile from tensorflow/contrib/makefile,\nremoving all the unused ops classes from tf_op_files.txt.\nhttps://github.com/tensorflow/tensorflow/blob/f71cc62282bf2e066f9ebd08cf3f605fc98c6e41/tensorflow/contrib/makefile/tf_op_files.txt\nFor what it's worth, this is what I had in my ops_to_register.h:\nconst bool kRequiresSymbolicGradients = false;const char* kNecessaryOpKernelClasses =\n\",Add,\"\n\",Const,\"\n...\n\",Softmax,\";\nconstexpr bool ShouldRegisterOp(const char* name) {\nreturn strcmp(name,\"Add\") ? true :\nstrcmp(name,\"Const\") ? true :\n...\nstrcmp(name,\"Softmax\") ? true :\nfalse;\n}\nThe SHOULD_REGISTER_OP macro from tensorflow/core/framework/\nselective_registration.h\nhttps://github.com/tensorflow/tensorflow/blob/f71cc62282bf2e066f9ebd08cf3f605fc98c6e41/tensorflow/core/framework/selective_registration.h\ncalls ShouldRegisterOp, which returns true if the op should be registered.\nThe SHOULD_REGISTER_OP_KERNEL macro does a string search in\nkNecessaryOpKernelClasses\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\n#3549 (comment),\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AQw4wQ7SVEzQUTsU3512180ZgGITJBZTks5qvAXugaJpZM4JXOz-\n.", "body": "For why the header didn't make the size smaller, I think there are a few\npossibilities to check:\n1. selective registration can only make code deleted if the expressions can\n   be evaluated as constexprs.  Using const char\\* instead of const char[] on\n   the definition of kNecessaryOpKernelClasses may be enough to prevent this.\n   But even with that,  I would have expected some drop by the const bool\n   kRequiresSymbolicGradients = false;  line.  Was it no change at all in\n   size, or a small change?\n2. doublecheck that SELECTIVE_REGISTRATION macro is defined for calls to\n   compile the ops and kernels.\n3. what compiler are you using?  Maybe compiler differences could explain\n   it as well.\n\nHere's an example ops_to_register.h that gets generated by the tool that\nwill be opensourced soon:\n\n#ifndef OPS_TO_REGISTER\n#define OPS_TO_REGISTER\nconstexpr inline bool ShouldRegisterOp(const char op[]) {\n  return false\n     || (strcmp(op, \"AvgPool\") == 0)\n     || (strcmp(op, \"BiasAdd\") == 0)\n     || (strcmp(op, \"Concat\") == 0)\n     || (strcmp(op, \"Const\") == 0)\n     || (strcmp(op, \"Conv2D\") == 0)\n     || (strcmp(op, \"Identity\") == 0)\n     || (strcmp(op, \"LRN\") == 0)\n     || (strcmp(op, \"MatMul\") == 0)\n     || (strcmp(op, \"MaxPool\") == 0)\n     || (strcmp(op, \"NoOp\") == 0)\n     || (strcmp(op, \"Placeholder\") == 0)\n     || (strcmp(op, \"Relu\") == 0)\n     || (strcmp(op, \"Reshape\") == 0)\n     || (strcmp(op, \"Softmax\") == 0)\n     || (strcmp(op, \"_Recv\") == 0)\n     || (strcmp(op, \"_Send\") == 0)\n  ;\n}\nconst char kNecessaryOpKernelClasses[] = \",\"\n\"AvgPoolingOp<CPUDevice, float>,\"\n\"BiasOp<CPUDevice, float>,\"\n\"ConcatOp<CPUDevice, float>,\"\n\"ConstantOp,\"\n\"Conv2DOp<CPUDevice, float>,\"\n\"IdentityOp,\"\n\"LRNOp<CPUDevice, float>,\"\n\"MatMulOp<CPUDevice, float, false >,\"\n\"MaxPoolingOp<CPUDevice, float>,\"\n\"NoOp,\"\n\"PlaceholderOp,\"\n\"ReluOp<CPUDevice, float>,\"\n\"ReshapeOp,\"\n\"SoftmaxOp<CPUDevice, float>,\"\n\"RecvOp,\"\n\"SendOp,\"\n;\nconst bool kRequiresSymbolicGradients = false;\n#endif\n\n## \n\nOn Thu, Sep 29, 2016 at 11:39 AM, Sam notifications@github.com wrote:\n\n> Re: @lingz https://github.com/lingz : I was able to compile with\n> selective registration, but it didn't help reduce the file size for me.\n> Instead, I ended up using the makefile from tensorflow/contrib/makefile,\n> removing all the unused ops classes from tf_op_files.txt.\n> https://github.com/tensorflow/tensorflow/blob/f71cc62282bf2e066f9ebd08cf3f605fc98c6e41/tensorflow/contrib/makefile/tf_op_files.txt\n> \n> For what it's worth, this is what I had in my ops_to_register.h:\n> \n> const bool kRequiresSymbolicGradients = false;const char\\* kNecessaryOpKernelClasses =\n>     \",Add,\"\n>     \",Const,\"\n>     ...\n>     \",Softmax,\";\n> \n> constexpr bool ShouldRegisterOp(const char\\* name) {\n>     return strcmp(name,\"Add\") ? true :\n>         strcmp(name,\"Const\") ? true :\n>         ...\n>         strcmp(name,\"Softmax\") ? true :\n>         false;\n> }\n> \n> The SHOULD_REGISTER_OP macro from tensorflow/core/framework/\n> selective_registration.h\n> https://github.com/tensorflow/tensorflow/blob/f71cc62282bf2e066f9ebd08cf3f605fc98c6e41/tensorflow/core/framework/selective_registration.h\n> calls ShouldRegisterOp, which returns true if the op should be registered.\n> The SHOULD_REGISTER_OP_KERNEL macro does a string search in\n> kNecessaryOpKernelClasses\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/tensorflow/tensorflow/issues/3549#issuecomment-250553879,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AQw4wQ7SVEzQUTsU3512180ZgGITJBZTks5qvAXugaJpZM4JXOz-\n> .\n"}