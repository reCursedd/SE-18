{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9007", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9007/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9007/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9007/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9007", "id": 219775850, "node_id": "MDU6SXNzdWUyMTk3NzU4NTA=", "number": 9007, "title": "Takes more than 2min to load a small model.", "user": {"login": "AndrewZhengXiao", "id": 21032479, "node_id": "MDQ6VXNlcjIxMDMyNDc5", "avatar_url": "https://avatars1.githubusercontent.com/u/21032479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndrewZhengXiao", "html_url": "https://github.com/AndrewZhengXiao", "followers_url": "https://api.github.com/users/AndrewZhengXiao/followers", "following_url": "https://api.github.com/users/AndrewZhengXiao/following{/other_user}", "gists_url": "https://api.github.com/users/AndrewZhengXiao/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndrewZhengXiao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndrewZhengXiao/subscriptions", "organizations_url": "https://api.github.com/users/AndrewZhengXiao/orgs", "repos_url": "https://api.github.com/users/AndrewZhengXiao/repos", "events_url": "https://api.github.com/users/AndrewZhengXiao/events{/privacy}", "received_events_url": "https://api.github.com/users/AndrewZhengXiao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-06T03:21:47Z", "updated_at": "2017-04-06T09:12:57Z", "closed_at": "2017-04-06T07:37:40Z", "author_association": "NONE", "body_html": "<p>NOTE: Issues that are not bugs or feature requests will be closed. Please ask usage questions on StackOverflow.</p>\n<h3>You must complete this information or else your issue will be closed</h3>\n<ul>\n<li><em>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)?</em>: Y</li>\n<li><em>TensorFlow installed from (source or binary)?</em>:  Installing with native pip</li>\n<li><em>TensorFlow version</em>:   libcurand.so.8.0 locally 1.0.1</li>\n<li><em>Bazel version (if compiling from source)</em>:</li>\n<li><em>CUDA/cuDNN version</em>:</li>\n<li><em>GPU Model and Memory</em>:</li>\n<li><em>Exact command to reproduce</em>:</li>\n</ul>\n<h3>Describe the problem clearly</h3>\n<p>After shows following, the program waiting for more than 2min to load a small model.</p>\n<p>I tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0<br>\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y<br>\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX 1070, pci bus id: 0000:01:00.0)</p>\n<p>And at the end it shows like this:</p>\n<p>I tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0<br>\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y<br>\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX 1070, pci bus id: 0000:01:00.0)<br>\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX 1070, pci bus id: 0000:01:00.0)<br>\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX 1070, pci bus id: 0000:01:00.0)<br>\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX 1070, pci bus id: 0000:01:00.0)<br>\nmodel loaded!</p>\n<h3>Source Code / Logs</h3>\n<p>`</p>\n<h1>If you have already created the dataset:</h1>\n<p>if os.path.exists('train_data.npy'):<br>\ntrain_data = np.load('train_data.npy')<br>\nelse:<br>\ntrain_data = create_train_data()</p>\n<p>if os.path.exists('test_data.npy'):<br>\ntest_data = np.load('test_data.npy')<br>\nelse:<br>\ntest_data = process_test_data()</p>\n<h1>Convlotion model----------------</h1>\n<p>convnet = input_data(shape=[None, IMG_SIZE, IMG_SIZE, 1], name='input')</p>\n<h1>----------------</h1>\n<p>convnet = conv_2d(convnet, 32, 5, activation='relu')<br>\nconvnet = max_pool_2d(convnet, 5)</p>\n<h1>----------------</h1>\n<p>convnet = conv_2d(convnet, 64, 5, activation='relu')<br>\nconvnet = max_pool_2d(convnet, 5)</p>\n<h1>----------------</h1>\n<p>convnet = conv_2d(convnet, 32, 5, activation='relu')<br>\nconvnet = max_pool_2d(convnet, 5)</p>\n<h1>----------------</h1>\n<p>convnet = conv_2d(convnet, 64, 5, activation='relu')<br>\nconvnet = max_pool_2d(convnet, 5)</p>\n<h1>----------------</h1>\n<p>convnet = conv_2d(convnet, 32, 5, activation='relu')<br>\nconvnet = max_pool_2d(convnet, 5)</p>\n<h1>----------------</h1>\n<p>convnet = conv_2d(convnet, 64, 5, activation='relu')<br>\nconvnet = max_pool_2d(convnet, 5)</p>\n<h1>----------------</h1>\n<p>convnet = fully_connected(convnet, 1024, activation='relu')<br>\nconvnet = dropout(convnet, 0.8)</p>\n<h1>----------------</h1>\n<p>convnet = fully_connected(convnet, 512, activation='relu')<br>\nconvnet = dropout(convnet, 0.6)</p>\n<h1>----------------</h1>\n<p>convnet = fully_connected(convnet, 2, activation='softmax')<br>\nconvnet = regression(convnet, optimizer='adam', learning_rate=LR, loss='categorical_crossentropy', name='targets')</p>\n<h1>----------------</h1>\n<p>model = tflearn.DNN(convnet, tensorboard_dir='log')</p>\n<p>if os.path.exists('{}.meta'.format(MODEL_NAME)):<br>\nmodel.load(MODEL_NAME)<br>\nprint('model loaded!')<br>\nelse:<br>\nprint \"Nothing loaded\"</p>\n<p>train = train_data[:-500]<br>\ntest = train_data[-500:]</p>\n<h1>print train</h1>\n<p>`</p>", "body_text": "NOTE: Issues that are not bugs or feature requests will be closed. Please ask usage questions on StackOverflow.\nYou must complete this information or else your issue will be closed\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow)?: Y\nTensorFlow installed from (source or binary)?:  Installing with native pip\nTensorFlow version:   libcurand.so.8.0 locally 1.0.1\nBazel version (if compiling from source):\nCUDA/cuDNN version:\nGPU Model and Memory:\nExact command to reproduce:\n\nDescribe the problem clearly\nAfter shows following, the program waiting for more than 2min to load a small model.\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1070, pci bus id: 0000:01:00.0)\nAnd at the end it shows like this:\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1070, pci bus id: 0000:01:00.0)\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1070, pci bus id: 0000:01:00.0)\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1070, pci bus id: 0000:01:00.0)\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1070, pci bus id: 0000:01:00.0)\nmodel loaded!\nSource Code / Logs\n`\nIf you have already created the dataset:\nif os.path.exists('train_data.npy'):\ntrain_data = np.load('train_data.npy')\nelse:\ntrain_data = create_train_data()\nif os.path.exists('test_data.npy'):\ntest_data = np.load('test_data.npy')\nelse:\ntest_data = process_test_data()\nConvlotion model----------------\nconvnet = input_data(shape=[None, IMG_SIZE, IMG_SIZE, 1], name='input')\n----------------\nconvnet = conv_2d(convnet, 32, 5, activation='relu')\nconvnet = max_pool_2d(convnet, 5)\n----------------\nconvnet = conv_2d(convnet, 64, 5, activation='relu')\nconvnet = max_pool_2d(convnet, 5)\n----------------\nconvnet = conv_2d(convnet, 32, 5, activation='relu')\nconvnet = max_pool_2d(convnet, 5)\n----------------\nconvnet = conv_2d(convnet, 64, 5, activation='relu')\nconvnet = max_pool_2d(convnet, 5)\n----------------\nconvnet = conv_2d(convnet, 32, 5, activation='relu')\nconvnet = max_pool_2d(convnet, 5)\n----------------\nconvnet = conv_2d(convnet, 64, 5, activation='relu')\nconvnet = max_pool_2d(convnet, 5)\n----------------\nconvnet = fully_connected(convnet, 1024, activation='relu')\nconvnet = dropout(convnet, 0.8)\n----------------\nconvnet = fully_connected(convnet, 512, activation='relu')\nconvnet = dropout(convnet, 0.6)\n----------------\nconvnet = fully_connected(convnet, 2, activation='softmax')\nconvnet = regression(convnet, optimizer='adam', learning_rate=LR, loss='categorical_crossentropy', name='targets')\n----------------\nmodel = tflearn.DNN(convnet, tensorboard_dir='log')\nif os.path.exists('{}.meta'.format(MODEL_NAME)):\nmodel.load(MODEL_NAME)\nprint('model loaded!')\nelse:\nprint \"Nothing loaded\"\ntrain = train_data[:-500]\ntest = train_data[-500:]\nprint train\n`", "body": "NOTE: Issues that are not bugs or feature requests will be closed. Please ask usage questions on StackOverflow.\r\n\r\n### You must complete this information or else your issue will be closed\r\n- *Have I written custom code (as opposed to using a stock example script provided in TensorFlow)?*: Y\r\n- *TensorFlow installed from (source or binary)?*:  Installing with native pip\r\n- *TensorFlow version*:   libcurand.so.8.0 locally 1.0.1\r\n- *Bazel version (if compiling from source)*:\r\n- *CUDA/cuDNN version*:\r\n- *GPU Model and Memory*:\r\n- *Exact command to reproduce*:\r\n\r\n### Describe the problem clearly\r\nAfter shows following, the program waiting for more than 2min to load a small model.  \r\n\r\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 \r\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y \r\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1070, pci bus id: 0000:01:00.0)\r\n \r\nAnd at the end it shows like this:\r\n\r\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 \r\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y \r\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1070, pci bus id: 0000:01:00.0)\r\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1070, pci bus id: 0000:01:00.0)\r\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1070, pci bus id: 0000:01:00.0)\r\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1070, pci bus id: 0000:01:00.0)\r\nmodel loaded!\r\n\r\n\r\n### Source Code / Logs\r\n`\r\n# If you have already created the dataset:\r\nif os.path.exists('train_data.npy'):\r\n    train_data = np.load('train_data.npy')\r\nelse:\r\n    train_data = create_train_data()\r\n\r\nif os.path.exists('test_data.npy'):\r\n    test_data = np.load('test_data.npy')\r\nelse:\r\n    test_data = process_test_data()\r\n\r\n# Convlotion model----------------\r\nconvnet = input_data(shape=[None, IMG_SIZE, IMG_SIZE, 1], name='input')\r\n# ----------------\r\nconvnet = conv_2d(convnet, 32, 5, activation='relu')\r\nconvnet = max_pool_2d(convnet, 5)\r\n# ----------------\r\nconvnet = conv_2d(convnet, 64, 5, activation='relu')\r\nconvnet = max_pool_2d(convnet, 5)\r\n# ----------------\r\nconvnet = conv_2d(convnet, 32, 5, activation='relu')\r\nconvnet = max_pool_2d(convnet, 5)\r\n# ----------------\r\nconvnet = conv_2d(convnet, 64, 5, activation='relu')\r\nconvnet = max_pool_2d(convnet, 5)\r\n# ----------------\r\nconvnet = conv_2d(convnet, 32, 5, activation='relu')\r\nconvnet = max_pool_2d(convnet, 5)\r\n# ----------------\r\nconvnet = conv_2d(convnet, 64, 5, activation='relu')\r\nconvnet = max_pool_2d(convnet, 5)\r\n# ----------------\r\nconvnet = fully_connected(convnet, 1024, activation='relu')\r\nconvnet = dropout(convnet, 0.8)\r\n# ----------------\r\nconvnet = fully_connected(convnet, 512, activation='relu')\r\nconvnet = dropout(convnet, 0.6)\r\n# ----------------\r\nconvnet = fully_connected(convnet, 2, activation='softmax')\r\nconvnet = regression(convnet, optimizer='adam', learning_rate=LR, loss='categorical_crossentropy', name='targets')\r\n# ----------------\r\nmodel = tflearn.DNN(convnet, tensorboard_dir='log')\r\n\r\nif os.path.exists('{}.meta'.format(MODEL_NAME)):\r\n    model.load(MODEL_NAME)\r\n    print('model loaded!')\r\nelse:\r\n    print \"Nothing loaded\"\r\n\r\ntrain = train_data[:-500]\r\ntest = train_data[-500:]\r\n# print train\r\n\r\n`\r\n"}