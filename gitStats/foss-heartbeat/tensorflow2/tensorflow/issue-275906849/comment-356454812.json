{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/356454812", "html_url": "https://github.com/tensorflow/tensorflow/issues/14776#issuecomment-356454812", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14776", "id": 356454812, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjQ1NDgxMg==", "user": {"login": "droidicus", "id": 6981482, "node_id": "MDQ6VXNlcjY5ODE0ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6981482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/droidicus", "html_url": "https://github.com/droidicus", "followers_url": "https://api.github.com/users/droidicus/followers", "following_url": "https://api.github.com/users/droidicus/following{/other_user}", "gists_url": "https://api.github.com/users/droidicus/gists{/gist_id}", "starred_url": "https://api.github.com/users/droidicus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/droidicus/subscriptions", "organizations_url": "https://api.github.com/users/droidicus/orgs", "repos_url": "https://api.github.com/users/droidicus/repos", "events_url": "https://api.github.com/users/droidicus/events{/privacy}", "received_events_url": "https://api.github.com/users/droidicus/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-10T00:04:09Z", "updated_at": "2018-01-10T00:04:09Z", "author_association": "NONE", "body_html": "<p>Just as an FYI, while this is still a problem in TFv1.5rc0 we were able to do the following as a workaround for now, by setting the default session manually the memory fraction is respected:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> os\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\ntf.logging.set_verbosity(tf.logging.<span class=\"pl-c1\">INFO</span>)\n\ngpu_options <span class=\"pl-k\">=</span> tf.GPUOptions(<span class=\"pl-v\">per_process_gpu_memory_fraction</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0.5</span>)\nsess_config <span class=\"pl-k\">=</span> tf.ConfigProto(<span class=\"pl-v\">gpu_options</span><span class=\"pl-k\">=</span>gpu_options)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Manually set the default session instead</span>\ntf.Session(<span class=\"pl-v\">config</span><span class=\"pl-k\">=</span>sess_config).as_default()\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>run_config = tf.estimator.RunConfig(session_config=sess_config)</span>\n\ninputs <span class=\"pl-k\">=</span> tf.keras.layers.Input(<span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">10</span>,))\noutputs <span class=\"pl-k\">=</span> tf.keras.layers.Dense(<span class=\"pl-c1\">10</span>)(inputs)\nmodel <span class=\"pl-k\">=</span> tf.keras.models.Model(inputs, outputs)\nmodel.compile(<span class=\"pl-v\">optimizer</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>sgd<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">loss</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>mse<span class=\"pl-pds\">'</span></span>)\nest_keras <span class=\"pl-k\">=</span> tf.keras.estimator.model_to_estimator(<span class=\"pl-v\">keras_model</span><span class=\"pl-k\">=</span>model)<span class=\"pl-c\"><span class=\"pl-c\">#</span>, config=run_config)</span>\n\ninput_name <span class=\"pl-k\">=</span> model.input_names[<span class=\"pl-c1\">0</span>]\ndata <span class=\"pl-k\">=</span> np.random.rand(<span class=\"pl-c1\">1000</span>,<span class=\"pl-c1\">10</span>).astype(np.float32)\ntrain_input_fn <span class=\"pl-k\">=</span> tf.estimator.inputs.numpy_input_fn({input_name:data}, data, <span class=\"pl-v\">batch_size</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">10</span>, <span class=\"pl-v\">num_epochs</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">None</span>, <span class=\"pl-v\">shuffle</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>)\n\ntrain_spec <span class=\"pl-k\">=</span> tf.estimator.TrainSpec(<span class=\"pl-v\">input_fn</span><span class=\"pl-k\">=</span>train_input_fn, <span class=\"pl-v\">max_steps</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">100000</span>)\neval_spec <span class=\"pl-k\">=</span> tf.estimator.EvalSpec(<span class=\"pl-v\">input_fn</span><span class=\"pl-k\">=</span>train_input_fn, <span class=\"pl-v\">steps</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">10</span>)\ntf.estimator.train_and_evaluate(est_keras, train_spec, eval_spec)</pre></div>", "body_text": "Just as an FYI, while this is still a problem in TFv1.5rc0 we were able to do the following as a workaround for now, by setting the default session manually the memory fraction is respected:\nimport os\nimport numpy as np\nimport tensorflow as tf\n\ntf.logging.set_verbosity(tf.logging.INFO)\n\ngpu_options = tf.GPUOptions(per_process_gpu_memory_fraction=0.5)\nsess_config = tf.ConfigProto(gpu_options=gpu_options)\n# Manually set the default session instead\ntf.Session(config=sess_config).as_default()\n#run_config = tf.estimator.RunConfig(session_config=sess_config)\n\ninputs = tf.keras.layers.Input(shape=(10,))\noutputs = tf.keras.layers.Dense(10)(inputs)\nmodel = tf.keras.models.Model(inputs, outputs)\nmodel.compile(optimizer='sgd', loss='mse')\nest_keras = tf.keras.estimator.model_to_estimator(keras_model=model)#, config=run_config)\n\ninput_name = model.input_names[0]\ndata = np.random.rand(1000,10).astype(np.float32)\ntrain_input_fn = tf.estimator.inputs.numpy_input_fn({input_name:data}, data, batch_size=10, num_epochs=None, shuffle=False)\n\ntrain_spec = tf.estimator.TrainSpec(input_fn=train_input_fn, max_steps=100000)\neval_spec = tf.estimator.EvalSpec(input_fn=train_input_fn, steps=10)\ntf.estimator.train_and_evaluate(est_keras, train_spec, eval_spec)", "body": "Just as an FYI, while this is still a problem in TFv1.5rc0 we were able to do the following as a workaround for now, by setting the default session manually the memory fraction is respected:\r\n```python\r\nimport os\r\nimport numpy as np\r\nimport tensorflow as tf\r\n\r\ntf.logging.set_verbosity(tf.logging.INFO)\r\n\r\ngpu_options = tf.GPUOptions(per_process_gpu_memory_fraction=0.5)\r\nsess_config = tf.ConfigProto(gpu_options=gpu_options)\r\n# Manually set the default session instead\r\ntf.Session(config=sess_config).as_default()\r\n#run_config = tf.estimator.RunConfig(session_config=sess_config)\r\n\r\ninputs = tf.keras.layers.Input(shape=(10,))\r\noutputs = tf.keras.layers.Dense(10)(inputs)\r\nmodel = tf.keras.models.Model(inputs, outputs)\r\nmodel.compile(optimizer='sgd', loss='mse')\r\nest_keras = tf.keras.estimator.model_to_estimator(keras_model=model)#, config=run_config)\r\n\r\ninput_name = model.input_names[0]\r\ndata = np.random.rand(1000,10).astype(np.float32)\r\ntrain_input_fn = tf.estimator.inputs.numpy_input_fn({input_name:data}, data, batch_size=10, num_epochs=None, shuffle=False)\r\n\r\ntrain_spec = tf.estimator.TrainSpec(input_fn=train_input_fn, max_steps=100000)\r\neval_spec = tf.estimator.EvalSpec(input_fn=train_input_fn, steps=10)\r\ntf.estimator.train_and_evaluate(est_keras, train_spec, eval_spec)\r\n```"}