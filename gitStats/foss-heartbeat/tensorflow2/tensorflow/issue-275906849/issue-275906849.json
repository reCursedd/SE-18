{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14776", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14776/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14776/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14776/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14776", "id": 275906849, "node_id": "MDU6SXNzdWUyNzU5MDY4NDk=", "number": 14776, "title": "tf.keras.estimator.estimator_from_model does not respect options set in RunConfig", "user": {"login": "droidicus", "id": 6981482, "node_id": "MDQ6VXNlcjY5ODE0ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6981482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/droidicus", "html_url": "https://github.com/droidicus", "followers_url": "https://api.github.com/users/droidicus/followers", "following_url": "https://api.github.com/users/droidicus/following{/other_user}", "gists_url": "https://api.github.com/users/droidicus/gists{/gist_id}", "starred_url": "https://api.github.com/users/droidicus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/droidicus/subscriptions", "organizations_url": "https://api.github.com/users/droidicus/orgs", "repos_url": "https://api.github.com/users/droidicus/repos", "events_url": "https://api.github.com/users/droidicus/events{/privacy}", "received_events_url": "https://api.github.com/users/droidicus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "yifeif", "id": 1192265, "node_id": "MDQ6VXNlcjExOTIyNjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1192265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yifeif", "html_url": "https://github.com/yifeif", "followers_url": "https://api.github.com/users/yifeif/followers", "following_url": "https://api.github.com/users/yifeif/following{/other_user}", "gists_url": "https://api.github.com/users/yifeif/gists{/gist_id}", "starred_url": "https://api.github.com/users/yifeif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yifeif/subscriptions", "organizations_url": "https://api.github.com/users/yifeif/orgs", "repos_url": "https://api.github.com/users/yifeif/repos", "events_url": "https://api.github.com/users/yifeif/events{/privacy}", "received_events_url": "https://api.github.com/users/yifeif/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yifeif", "id": 1192265, "node_id": "MDQ6VXNlcjExOTIyNjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1192265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yifeif", "html_url": "https://github.com/yifeif", "followers_url": "https://api.github.com/users/yifeif/followers", "following_url": "https://api.github.com/users/yifeif/following{/other_user}", "gists_url": "https://api.github.com/users/yifeif/gists{/gist_id}", "starred_url": "https://api.github.com/users/yifeif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yifeif/subscriptions", "organizations_url": "https://api.github.com/users/yifeif/orgs", "repos_url": "https://api.github.com/users/yifeif/repos", "events_url": "https://api.github.com/users/yifeif/events{/privacy}", "received_events_url": "https://api.github.com/users/yifeif/received_events", "type": "User", "site_admin": false}, {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}, {"login": "ispirmustafa", "id": 19293677, "node_id": "MDQ6VXNlcjE5MjkzNjc3", "avatar_url": "https://avatars1.githubusercontent.com/u/19293677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ispirmustafa", "html_url": "https://github.com/ispirmustafa", "followers_url": "https://api.github.com/users/ispirmustafa/followers", "following_url": "https://api.github.com/users/ispirmustafa/following{/other_user}", "gists_url": "https://api.github.com/users/ispirmustafa/gists{/gist_id}", "starred_url": "https://api.github.com/users/ispirmustafa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ispirmustafa/subscriptions", "organizations_url": "https://api.github.com/users/ispirmustafa/orgs", "repos_url": "https://api.github.com/users/ispirmustafa/repos", "events_url": "https://api.github.com/users/ispirmustafa/events{/privacy}", "received_events_url": "https://api.github.com/users/ispirmustafa/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 17, "created_at": "2017-11-22T00:35:51Z", "updated_at": "2018-03-07T01:17:02Z", "closed_at": "2018-03-07T01:17:02Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: tf.VERSION = 1.4.0 tf.GIT_VERSION = v1.4.0-rc1-11-g130a514</li>\n<li><strong>Python version</strong>: 2.7.12</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: N/A</li>\n<li><strong>CUDA/cuDNN version</strong>: 8.0.61/6.0.21</li>\n<li><strong>GPU model and memory</strong>: NVIDIA Tesla M60 8 GB</li>\n<li><strong>Exact command to reproduce</strong>: See Below</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>When trying to use an estimator that is derived from <code>tf.keras.estimator.estimator_from_model()</code> and training with <code>tf.estimator.train_and_evaluate()</code>, setting <code>gpu_options</code> in the <code>session_config</code> of <code>tf.estimator.RunConfig</code> does not cause the settings to be respected when passed to the estimator_from_model function. For example setting <code>per_process_gpu_memory_fraction=0.5</code> does not decrease the memory allocated to the process on the GPU, similarly setting <code>allow_growth=True</code> continues to allocate all of the memory and does not allow memory growth.</p>\n<p>I also tested this with the canned estimator <code>tf.estimator.DNNRegressor</code>, and the settings were applied as expected when the RunConfig was passed to the estimator.</p>\n<p>Below is code to demonstrate this issue.</p>\n<h3>Source code / logs</h3>\n<p>Minimal example, runs to completion and trains successfully. But, changing the GPUOptions settings does not cause the GPU memory to be utilized as expected:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> os\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\ntf.logging.set_verbosity(tf.logging.<span class=\"pl-c1\">INFO</span>)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Neither of these GPUOptions are respected</span>\ngpu_options <span class=\"pl-k\">=</span> tf.GPUOptions(<span class=\"pl-v\">per_process_gpu_memory_fraction</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0.5</span>)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>gpu_options = tf.GPUOptions(allow_growth=True)</span>\nsess_config <span class=\"pl-k\">=</span> tf.ConfigProto(<span class=\"pl-v\">gpu_options</span><span class=\"pl-k\">=</span>gpu_options)\nrun_config <span class=\"pl-k\">=</span> tf.estimator.RunConfig(<span class=\"pl-v\">session_config</span><span class=\"pl-k\">=</span>sess_config)\n\ninputs <span class=\"pl-k\">=</span> tf.keras.layers.Input(<span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">10</span>,))\noutputs <span class=\"pl-k\">=</span> tf.keras.layers.Dense(<span class=\"pl-c1\">10</span>)(inputs)\nmodel <span class=\"pl-k\">=</span> tf.keras.models.Model(inputs, outputs)\nmodel.compile(<span class=\"pl-v\">optimizer</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>sgd<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">loss</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>mse<span class=\"pl-pds\">'</span></span>)\nest_keras <span class=\"pl-k\">=</span> tf.keras.estimator.model_to_estimator(<span class=\"pl-v\">keras_model</span><span class=\"pl-k\">=</span>model, <span class=\"pl-v\">config</span><span class=\"pl-k\">=</span>run_config)\n\ninput_name <span class=\"pl-k\">=</span> model.input_names[<span class=\"pl-c1\">0</span>]\ndata <span class=\"pl-k\">=</span> np.random.rand(<span class=\"pl-c1\">1000</span>,<span class=\"pl-c1\">10</span>).astype(np.float32)\ntrain_input_fn <span class=\"pl-k\">=</span> tf.estimator.inputs.numpy_input_fn({input_name:data}, data, <span class=\"pl-v\">batch_size</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">10</span>, <span class=\"pl-v\">num_epochs</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">None</span>, <span class=\"pl-v\">shuffle</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>)\n\ntrain_spec <span class=\"pl-k\">=</span> tf.estimator.TrainSpec(<span class=\"pl-v\">input_fn</span><span class=\"pl-k\">=</span>train_input_fn, <span class=\"pl-v\">max_steps</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">100000</span>)\neval_spec <span class=\"pl-k\">=</span> tf.estimator.EvalSpec(<span class=\"pl-v\">input_fn</span><span class=\"pl-k\">=</span>train_input_fn, <span class=\"pl-v\">steps</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">10</span>)\ntf.estimator.train_and_evaluate(est_keras, train_spec, eval_spec)</pre></div>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): tf.VERSION = 1.4.0 tf.GIT_VERSION = v1.4.0-rc1-11-g130a514\nPython version: 2.7.12\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: 8.0.61/6.0.21\nGPU model and memory: NVIDIA Tesla M60 8 GB\nExact command to reproduce: See Below\n\nDescribe the problem\nWhen trying to use an estimator that is derived from tf.keras.estimator.estimator_from_model() and training with tf.estimator.train_and_evaluate(), setting gpu_options in the session_config of tf.estimator.RunConfig does not cause the settings to be respected when passed to the estimator_from_model function. For example setting per_process_gpu_memory_fraction=0.5 does not decrease the memory allocated to the process on the GPU, similarly setting allow_growth=True continues to allocate all of the memory and does not allow memory growth.\nI also tested this with the canned estimator tf.estimator.DNNRegressor, and the settings were applied as expected when the RunConfig was passed to the estimator.\nBelow is code to demonstrate this issue.\nSource code / logs\nMinimal example, runs to completion and trains successfully. But, changing the GPUOptions settings does not cause the GPU memory to be utilized as expected:\nimport os\nimport numpy as np\nimport tensorflow as tf\n\ntf.logging.set_verbosity(tf.logging.INFO)\n\n# Neither of these GPUOptions are respected\ngpu_options = tf.GPUOptions(per_process_gpu_memory_fraction=0.5)\n#gpu_options = tf.GPUOptions(allow_growth=True)\nsess_config = tf.ConfigProto(gpu_options=gpu_options)\nrun_config = tf.estimator.RunConfig(session_config=sess_config)\n\ninputs = tf.keras.layers.Input(shape=(10,))\noutputs = tf.keras.layers.Dense(10)(inputs)\nmodel = tf.keras.models.Model(inputs, outputs)\nmodel.compile(optimizer='sgd', loss='mse')\nest_keras = tf.keras.estimator.model_to_estimator(keras_model=model, config=run_config)\n\ninput_name = model.input_names[0]\ndata = np.random.rand(1000,10).astype(np.float32)\ntrain_input_fn = tf.estimator.inputs.numpy_input_fn({input_name:data}, data, batch_size=10, num_epochs=None, shuffle=False)\n\ntrain_spec = tf.estimator.TrainSpec(input_fn=train_input_fn, max_steps=100000)\neval_spec = tf.estimator.EvalSpec(input_fn=train_input_fn, steps=10)\ntf.estimator.train_and_evaluate(est_keras, train_spec, eval_spec)", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: tf.VERSION = 1.4.0 tf.GIT_VERSION = v1.4.0-rc1-11-g130a514\r\n- **Python version**: 2.7.12\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: N/A\r\n- **CUDA/cuDNN version**: 8.0.61/6.0.21\r\n- **GPU model and memory**: NVIDIA Tesla M60 8 GB\r\n- **Exact command to reproduce**: See Below\r\n\r\n### Describe the problem\r\nWhen trying to use an estimator that is derived from ```tf.keras.estimator.estimator_from_model()``` and training with ```tf.estimator.train_and_evaluate()```, setting ```gpu_options``` in the ```session_config``` of ```tf.estimator.RunConfig``` does not cause the settings to be respected when passed to the estimator_from_model function. For example setting ```per_process_gpu_memory_fraction=0.5``` does not decrease the memory allocated to the process on the GPU, similarly setting ```allow_growth=True``` continues to allocate all of the memory and does not allow memory growth.\r\n\r\nI also tested this with the canned estimator ```tf.estimator.DNNRegressor```, and the settings were applied as expected when the RunConfig was passed to the estimator.\r\n\r\nBelow is code to demonstrate this issue. \r\n\r\n### Source code / logs\r\nMinimal example, runs to completion and trains successfully. But, changing the GPUOptions settings does not cause the GPU memory to be utilized as expected:\r\n```python\r\nimport os\r\nimport numpy as np\r\nimport tensorflow as tf\r\n\r\ntf.logging.set_verbosity(tf.logging.INFO)\r\n\r\n# Neither of these GPUOptions are respected\r\ngpu_options = tf.GPUOptions(per_process_gpu_memory_fraction=0.5)\r\n#gpu_options = tf.GPUOptions(allow_growth=True)\r\nsess_config = tf.ConfigProto(gpu_options=gpu_options)\r\nrun_config = tf.estimator.RunConfig(session_config=sess_config)\r\n\r\ninputs = tf.keras.layers.Input(shape=(10,))\r\noutputs = tf.keras.layers.Dense(10)(inputs)\r\nmodel = tf.keras.models.Model(inputs, outputs)\r\nmodel.compile(optimizer='sgd', loss='mse')\r\nest_keras = tf.keras.estimator.model_to_estimator(keras_model=model, config=run_config)\r\n\r\ninput_name = model.input_names[0]\r\ndata = np.random.rand(1000,10).astype(np.float32)\r\ntrain_input_fn = tf.estimator.inputs.numpy_input_fn({input_name:data}, data, batch_size=10, num_epochs=None, shuffle=False)\r\n\r\ntrain_spec = tf.estimator.TrainSpec(input_fn=train_input_fn, max_steps=100000)\r\neval_spec = tf.estimator.EvalSpec(input_fn=train_input_fn, steps=10)\r\ntf.estimator.train_and_evaluate(est_keras, train_spec, eval_spec)\r\n```"}