{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/232891827", "html_url": "https://github.com/tensorflow/tensorflow/issues/1140#issuecomment-232891827", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1140", "id": 232891827, "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjg5MTgyNw==", "user": {"login": "siddharth-agrawal", "id": 2789456, "node_id": "MDQ6VXNlcjI3ODk0NTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/2789456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siddharth-agrawal", "html_url": "https://github.com/siddharth-agrawal", "followers_url": "https://api.github.com/users/siddharth-agrawal/followers", "following_url": "https://api.github.com/users/siddharth-agrawal/following{/other_user}", "gists_url": "https://api.github.com/users/siddharth-agrawal/gists{/gist_id}", "starred_url": "https://api.github.com/users/siddharth-agrawal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siddharth-agrawal/subscriptions", "organizations_url": "https://api.github.com/users/siddharth-agrawal/orgs", "repos_url": "https://api.github.com/users/siddharth-agrawal/repos", "events_url": "https://api.github.com/users/siddharth-agrawal/events{/privacy}", "received_events_url": "https://api.github.com/users/siddharth-agrawal/received_events", "type": "User", "site_admin": false}, "created_at": "2016-07-15T08:21:46Z", "updated_at": "2016-07-15T08:21:46Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=70511\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/girving\">@girving</a> I did some digging on <code>LogUniformSampler</code> to see how it works. I found that the sampling is done using <code>RandDouble()</code> which is a part of the class <code>SimplePhilox</code>. However, <code>RangeSampler</code> which is the general class that <code>LogUniformSampler</code> uses, has been written so as to make it work only for the CPU. Is there a reason for this? If not, how should I go about making the changes (some pointers would be good, things that I should keep in mind while making the changes)? Since we have to write GPU implementations, should this be tracked in a different issue (as it is not specifically for <code>float64</code>)?</p>", "body_text": "@girving I did some digging on LogUniformSampler to see how it works. I found that the sampling is done using RandDouble() which is a part of the class SimplePhilox. However, RangeSampler which is the general class that LogUniformSampler uses, has been written so as to make it work only for the CPU. Is there a reason for this? If not, how should I go about making the changes (some pointers would be good, things that I should keep in mind while making the changes)? Since we have to write GPU implementations, should this be tracked in a different issue (as it is not specifically for float64)?", "body": "@girving I did some digging on `LogUniformSampler` to see how it works. I found that the sampling is done using `RandDouble()` which is a part of the class `SimplePhilox`. However, `RangeSampler` which is the general class that `LogUniformSampler` uses, has been written so as to make it work only for the CPU. Is there a reason for this? If not, how should I go about making the changes (some pointers would be good, things that I should keep in mind while making the changes)? Since we have to write GPU implementations, should this be tracked in a different issue (as it is not specifically for `float64`)?\n"}