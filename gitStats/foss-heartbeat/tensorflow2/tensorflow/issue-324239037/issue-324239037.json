{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19368", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19368/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19368/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19368/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19368", "id": 324239037, "node_id": "MDU6SXNzdWUzMjQyMzkwMzc=", "number": 19368, "title": "tf.control_dependencies fails to update the dependent op.", "user": {"login": "mingyr", "id": 5569293, "node_id": "MDQ6VXNlcjU1NjkyOTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5569293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mingyr", "html_url": "https://github.com/mingyr", "followers_url": "https://api.github.com/users/mingyr/followers", "following_url": "https://api.github.com/users/mingyr/following{/other_user}", "gists_url": "https://api.github.com/users/mingyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/mingyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mingyr/subscriptions", "organizations_url": "https://api.github.com/users/mingyr/orgs", "repos_url": "https://api.github.com/users/mingyr/repos", "events_url": "https://api.github.com/users/mingyr/events{/privacy}", "received_events_url": "https://api.github.com/users/mingyr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-05-18T01:24:00Z", "updated_at": "2018-11-19T23:25:13Z", "closed_at": null, "author_association": "NONE", "body_html": "<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Redhat 7.3</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Source</li>\n<li><strong>TensorFlow version (use command below)</strong>: r1.8</li>\n<li><strong>Python version</strong>: 2.7.5</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.12</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>: 9.1/7.0.5</li>\n<li><strong>GPU model and memory</strong>: P5000/16G</li>\n<li><strong>Exact command to reproduce</strong>: N/A</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>During the test of tf.metrics, two pieces of code snippets are believed to be equivalent outputting totally different results.</p>\n<h3>Source code / logs</h3>\n<p>Code snippet 1:</p>\n<pre><code>import tensorflow as tf\n\na = tf.constant([1.], tf.float32)\nmean_a, mean_a_uop = tf.metrics.mean(a)\n\nsess = tf.InteractiveSession()\ntf.global_variables_initializer().run()\ntf.local_variables_initializer().run()\n\nfor _ in range(10):\n  sess.run(mean_a_uop)\n  print(sess.run(mean_a))\n\n</code></pre>\n<p>outputs:</p>\n<pre><code>1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n\n</code></pre>\n<p>Code snippet 2:</p>\n<pre><code>import tensorflow as tf\n\na = tf.constant([1.], tf.float32)\nmean_a, mean_a_uop = tf.metrics.mean(a)\n\nwith tf.control_dependencies([mean_a_uop]):\n  mean_a = tf.identity(mean_a)\n\nsess = tf.InteractiveSession()\ntf.global_variables_initializer().run()\ntf.local_variables_initializer().run()\n\nfor _ in range(10):\n  print(sess.run(mean_a))\n\n</code></pre>\n<p>outputs:</p>\n<pre><code>0.0\n2.0\n1.5\n1.3333334\n1.25\n1.2\n1.1666666\n1.1428572\n1.125\n1.1111112\n\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Redhat 7.3\nTensorFlow installed from (source or binary): Source\nTensorFlow version (use command below): r1.8\nPython version: 2.7.5\nBazel version (if compiling from source): 0.12\nGCC/Compiler version (if compiling from source):\nCUDA/cuDNN version: 9.1/7.0.5\nGPU model and memory: P5000/16G\nExact command to reproduce: N/A\n\nDescribe the problem\nDuring the test of tf.metrics, two pieces of code snippets are believed to be equivalent outputting totally different results.\nSource code / logs\nCode snippet 1:\nimport tensorflow as tf\n\na = tf.constant([1.], tf.float32)\nmean_a, mean_a_uop = tf.metrics.mean(a)\n\nsess = tf.InteractiveSession()\ntf.global_variables_initializer().run()\ntf.local_variables_initializer().run()\n\nfor _ in range(10):\n  sess.run(mean_a_uop)\n  print(sess.run(mean_a))\n\n\noutputs:\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n\n\nCode snippet 2:\nimport tensorflow as tf\n\na = tf.constant([1.], tf.float32)\nmean_a, mean_a_uop = tf.metrics.mean(a)\n\nwith tf.control_dependencies([mean_a_uop]):\n  mean_a = tf.identity(mean_a)\n\nsess = tf.InteractiveSession()\ntf.global_variables_initializer().run()\ntf.local_variables_initializer().run()\n\nfor _ in range(10):\n  print(sess.run(mean_a))\n\n\noutputs:\n0.0\n2.0\n1.5\n1.3333334\n1.25\n1.2\n1.1666666\n1.1428572\n1.125\n1.1111112", "body": "------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Redhat 7.3\r\n- **TensorFlow installed from (source or binary)**: Source\r\n- **TensorFlow version (use command below)**: r1.8\r\n- **Python version**: 2.7.5\r\n- **Bazel version (if compiling from source)**: 0.12\r\n- **GCC/Compiler version (if compiling from source)**: \r\n- **CUDA/cuDNN version**: 9.1/7.0.5\r\n- **GPU model and memory**: P5000/16G\r\n- **Exact command to reproduce**: N/A\r\n\r\n\r\n### Describe the problem\r\n\r\nDuring the test of tf.metrics, two pieces of code snippets are believed to be equivalent outputting totally different results.\r\n\r\n### Source code / logs\r\nCode snippet 1:\r\n\r\n```\r\nimport tensorflow as tf\r\n\r\na = tf.constant([1.], tf.float32)\r\nmean_a, mean_a_uop = tf.metrics.mean(a)\r\n\r\nsess = tf.InteractiveSession()\r\ntf.global_variables_initializer().run()\r\ntf.local_variables_initializer().run()\r\n\r\nfor _ in range(10):\r\n  sess.run(mean_a_uop)\r\n  print(sess.run(mean_a))\r\n\r\n```\r\noutputs:\r\n```\r\n1.0\r\n1.0\r\n1.0\r\n1.0\r\n1.0\r\n1.0\r\n1.0\r\n1.0\r\n1.0\r\n1.0\r\n\r\n```\r\n\r\nCode snippet 2:\r\n```\r\nimport tensorflow as tf\r\n\r\na = tf.constant([1.], tf.float32)\r\nmean_a, mean_a_uop = tf.metrics.mean(a)\r\n\r\nwith tf.control_dependencies([mean_a_uop]):\r\n  mean_a = tf.identity(mean_a)\r\n\r\nsess = tf.InteractiveSession()\r\ntf.global_variables_initializer().run()\r\ntf.local_variables_initializer().run()\r\n\r\nfor _ in range(10):\r\n  print(sess.run(mean_a))\r\n\r\n```\r\n\r\noutputs:\r\n\r\n```\r\n0.0\r\n2.0\r\n1.5\r\n1.3333334\r\n1.25\r\n1.2\r\n1.1666666\r\n1.1428572\r\n1.125\r\n1.1111112\r\n\r\n```\r\n"}