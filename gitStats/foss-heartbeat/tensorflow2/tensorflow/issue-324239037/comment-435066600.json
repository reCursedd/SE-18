{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/435066600", "html_url": "https://github.com/tensorflow/tensorflow/issues/19368#issuecomment-435066600", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19368", "id": 435066600, "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTA2NjYwMA==", "user": {"login": "Qwlouse", "id": 1160920, "node_id": "MDQ6VXNlcjExNjA5MjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1160920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Qwlouse", "html_url": "https://github.com/Qwlouse", "followers_url": "https://api.github.com/users/Qwlouse/followers", "following_url": "https://api.github.com/users/Qwlouse/following{/other_user}", "gists_url": "https://api.github.com/users/Qwlouse/gists{/gist_id}", "starred_url": "https://api.github.com/users/Qwlouse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Qwlouse/subscriptions", "organizations_url": "https://api.github.com/users/Qwlouse/orgs", "repos_url": "https://api.github.com/users/Qwlouse/repos", "events_url": "https://api.github.com/users/Qwlouse/events{/privacy}", "received_events_url": "https://api.github.com/users/Qwlouse/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-01T14:55:38Z", "updated_at": "2018-11-01T14:55:38Z", "author_association": "NONE", "body_html": "<p>Fun fact: With a non-interactive session this seems to work.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\na <span class=\"pl-k\">=</span> tf.constant([<span class=\"pl-c1\">1</span>.], tf.float32)\nmean_a, mean_a_uop <span class=\"pl-k\">=</span> tf.metrics.mean(a)\n\n<span class=\"pl-k\">with</span> tf.control_dependencies([mean_a_uop]):\n  mean_a <span class=\"pl-k\">=</span> tf.identity(mean_a)\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n  sess.run(tf.global_variables_initializer())\n  sess.run(tf.local_variables_initializer())\n\n  <span class=\"pl-k\">for</span> _ <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">10</span>):\n    <span class=\"pl-c1\">print</span>(sess.run(foo))</pre></div>\n<p>Outputs:</p>\n<pre><code>1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n</code></pre>", "body_text": "Fun fact: With a non-interactive session this seems to work.\nimport tensorflow as tf\n\na = tf.constant([1.], tf.float32)\nmean_a, mean_a_uop = tf.metrics.mean(a)\n\nwith tf.control_dependencies([mean_a_uop]):\n  mean_a = tf.identity(mean_a)\n\nwith tf.Session() as sess:\n  sess.run(tf.global_variables_initializer())\n  sess.run(tf.local_variables_initializer())\n\n  for _ in range(10):\n    print(sess.run(foo))\nOutputs:\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0\n1.0", "body": "Fun fact: With a non-interactive session this seems to work.\r\n``` python\r\nimport tensorflow as tf\r\n\r\na = tf.constant([1.], tf.float32)\r\nmean_a, mean_a_uop = tf.metrics.mean(a)\r\n\r\nwith tf.control_dependencies([mean_a_uop]):\r\n  mean_a = tf.identity(mean_a)\r\n\r\nwith tf.Session() as sess:\r\n  sess.run(tf.global_variables_initializer())\r\n  sess.run(tf.local_variables_initializer())\r\n\r\n  for _ in range(10):\r\n    print(sess.run(foo))\r\n```\r\nOutputs:\r\n```\r\n1.0\r\n1.0\r\n1.0\r\n1.0\r\n1.0\r\n1.0\r\n1.0\r\n1.0\r\n1.0\r\n1.0\r\n```"}