{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13298", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13298/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13298/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13298/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/13298", "id": 260388351, "node_id": "MDU6SXNzdWUyNjAzODgzNTE=", "number": 13298, "title": "wrong tf.svd documentation in tensorflow 1.3.0 version", "user": {"login": "pswpswpsw", "id": 7966776, "node_id": "MDQ6VXNlcjc5NjY3NzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7966776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pswpswpsw", "html_url": "https://github.com/pswpswpsw", "followers_url": "https://api.github.com/users/pswpswpsw/followers", "following_url": "https://api.github.com/users/pswpswpsw/following{/other_user}", "gists_url": "https://api.github.com/users/pswpswpsw/gists{/gist_id}", "starred_url": "https://api.github.com/users/pswpswpsw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pswpswpsw/subscriptions", "organizations_url": "https://api.github.com/users/pswpswpsw/orgs", "repos_url": "https://api.github.com/users/pswpswpsw/repos", "events_url": "https://api.github.com/users/pswpswpsw/events{/privacy}", "received_events_url": "https://api.github.com/users/pswpswpsw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 284443156, "node_id": "MDU6TGFiZWwyODQ0NDMxNTY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:docs", "name": "type:docs", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-09-25T19:27:24Z", "updated_at": "2017-10-20T22:48:48Z", "closed_at": "2017-10-20T21:20:58Z", "author_association": "NONE", "body_html": "<p>In tf.svd documentation, it was said that the tensorflow implementation of svd is simply np.linalg.svd</p>\n<p>in fact it was not the same, in tensorflow, the index for V matrix is transposed..different from np.linalg.svd default setting. Funny thing is, this type of problem is a famous bug in matlab code people usually write, which is row selection and transpose is not equal to transpose then column selection.</p>\n<p>code demonstration:</p>\n<pre><code>import tensorflow as tf\ntf.__version__\n\n## benchmark using numpy svd\nimport numpy as np\n\nx = np.array([1.0,2.0,3.0,4.0,5.0,6,7,8,9])\nx = x.reshape(3,3)\n\nu_,s_,v_=np.linalg.svd(x,compute_uv=True)\n# print s_\nprint u_\nprint v_\n\nr = 2\ndiagS = np.diag(s_)\nprint diagS\ndiagS = diagS[:r,:r]\nx_rank1 = np.matmul(u_[:,:r], np.matmul(diagS, v_[:r,:]))\n\nprint 'original = \\n',x\nprint 'rank1 approximation\\n',x_rank1\n</code></pre>\n<p>Result is</p>\n<pre><code>[[-0.21483724  0.88723069  0.40824829]\n [-0.52058739  0.24964395 -0.81649658]\n [-0.82633754 -0.38794278  0.40824829]]\n[[-0.47967118 -0.57236779 -0.66506441]\n [-0.77669099 -0.07568647  0.62531805]\n [-0.40824829  0.81649658 -0.40824829]]\n[[  1.68481034e+01   0.00000000e+00   0.00000000e+00]\n [  0.00000000e+00   1.06836951e+00   0.00000000e+00]\n [  0.00000000e+00   0.00000000e+00   4.41842475e-16]]\noriginal = \n[[ 1.  2.  3.]\n [ 4.  5.  6.]\n [ 7.  8.  9.]]\nrank1 approximation\n[[ 1.  2.  3.]\n [ 4.  5.  6.]\n [ 7.  8.  9.]]\n</code></pre>\n<p>But in tensorflow svd</p>\n<pre><code>X = tf.constant([1.0,2.0,3.0,4.0,5.0,6,7,8,9],shape=[3,3])\n\nsess = tf.InteractiveSession()\n    \nprint sess.run(X)\n\ns,u,v = tf.svd(X)\n\nprint sess.run(u)\nprint sess.run(v)\n\ndiagS_tf = tf.diag(s)\n# print sess.run(diagS_tf)\n\ntmp_correct =  tf.matmul(diagS_tf[:r,:r], tf.transpose(v[:,:r]))\ntmp_wrong = tf.matmul(diagS_tf[:r,:r], v[:r,:])\n\nprint 'following differs'\nprint sess.run(tf.transpose(v[:,:r]))\nprint sess.run(v[:r,:])\n\n# print sess.run(tmp)\n\nx_rank1_tf_correct= tf.matmul(u[:,:r], tmp_correct)\nx_rank1_tf_wrong= tf.matmul(u[:,:r], tmp_wrong)\n\nprint 'printing rank1 approximation from tensorflow'\nprint sess.run(x_rank1_tf_correct)\nprint sess.run(x_rank1_tf_wrong)\n</code></pre>\n<p>the output is</p>\n<pre><code>[[ 1.  2.  3.]\n [ 4.  5.  6.]\n [ 7.  8.  9.]]\n[[ 0.21483716  0.88723052 -0.40824857]\n [ 0.52058721  0.24964423  0.81649649]\n [ 0.82633758 -0.38794291 -0.4082481 ]]\n[[ 0.47967106 -0.77669096  0.40824836]\n [ 0.57236761 -0.07568647 -0.81649655]\n [ 0.66506428  0.62531805  0.40824822]]\nfollowing differs\n[[ 0.47967106  0.57236761  0.66506428]\n [-0.77669096 -0.07568647  0.62531805]]\n[[ 0.47967106 -0.77669096  0.40824836]\n [ 0.57236761 -0.07568647 -0.81649655]]\nprinting rank1 approximation from tensorflow\n[[ 0.99999887  1.99999869  2.99999857]\n [ 3.9999969   4.99999666  5.99999666]\n [ 6.99999809  7.99999809  8.99999809]]\n[[  2.27875805  -2.88305187   0.7037462 ]\n [  4.35980749  -6.83247042   3.36293888]\n [  6.44085884 -10.78189278   6.0221343 ]]\n\n</code></pre>", "body_text": "In tf.svd documentation, it was said that the tensorflow implementation of svd is simply np.linalg.svd\nin fact it was not the same, in tensorflow, the index for V matrix is transposed..different from np.linalg.svd default setting. Funny thing is, this type of problem is a famous bug in matlab code people usually write, which is row selection and transpose is not equal to transpose then column selection.\ncode demonstration:\nimport tensorflow as tf\ntf.__version__\n\n## benchmark using numpy svd\nimport numpy as np\n\nx = np.array([1.0,2.0,3.0,4.0,5.0,6,7,8,9])\nx = x.reshape(3,3)\n\nu_,s_,v_=np.linalg.svd(x,compute_uv=True)\n# print s_\nprint u_\nprint v_\n\nr = 2\ndiagS = np.diag(s_)\nprint diagS\ndiagS = diagS[:r,:r]\nx_rank1 = np.matmul(u_[:,:r], np.matmul(diagS, v_[:r,:]))\n\nprint 'original = \\n',x\nprint 'rank1 approximation\\n',x_rank1\n\nResult is\n[[-0.21483724  0.88723069  0.40824829]\n [-0.52058739  0.24964395 -0.81649658]\n [-0.82633754 -0.38794278  0.40824829]]\n[[-0.47967118 -0.57236779 -0.66506441]\n [-0.77669099 -0.07568647  0.62531805]\n [-0.40824829  0.81649658 -0.40824829]]\n[[  1.68481034e+01   0.00000000e+00   0.00000000e+00]\n [  0.00000000e+00   1.06836951e+00   0.00000000e+00]\n [  0.00000000e+00   0.00000000e+00   4.41842475e-16]]\noriginal = \n[[ 1.  2.  3.]\n [ 4.  5.  6.]\n [ 7.  8.  9.]]\nrank1 approximation\n[[ 1.  2.  3.]\n [ 4.  5.  6.]\n [ 7.  8.  9.]]\n\nBut in tensorflow svd\nX = tf.constant([1.0,2.0,3.0,4.0,5.0,6,7,8,9],shape=[3,3])\n\nsess = tf.InteractiveSession()\n    \nprint sess.run(X)\n\ns,u,v = tf.svd(X)\n\nprint sess.run(u)\nprint sess.run(v)\n\ndiagS_tf = tf.diag(s)\n# print sess.run(diagS_tf)\n\ntmp_correct =  tf.matmul(diagS_tf[:r,:r], tf.transpose(v[:,:r]))\ntmp_wrong = tf.matmul(diagS_tf[:r,:r], v[:r,:])\n\nprint 'following differs'\nprint sess.run(tf.transpose(v[:,:r]))\nprint sess.run(v[:r,:])\n\n# print sess.run(tmp)\n\nx_rank1_tf_correct= tf.matmul(u[:,:r], tmp_correct)\nx_rank1_tf_wrong= tf.matmul(u[:,:r], tmp_wrong)\n\nprint 'printing rank1 approximation from tensorflow'\nprint sess.run(x_rank1_tf_correct)\nprint sess.run(x_rank1_tf_wrong)\n\nthe output is\n[[ 1.  2.  3.]\n [ 4.  5.  6.]\n [ 7.  8.  9.]]\n[[ 0.21483716  0.88723052 -0.40824857]\n [ 0.52058721  0.24964423  0.81649649]\n [ 0.82633758 -0.38794291 -0.4082481 ]]\n[[ 0.47967106 -0.77669096  0.40824836]\n [ 0.57236761 -0.07568647 -0.81649655]\n [ 0.66506428  0.62531805  0.40824822]]\nfollowing differs\n[[ 0.47967106  0.57236761  0.66506428]\n [-0.77669096 -0.07568647  0.62531805]]\n[[ 0.47967106 -0.77669096  0.40824836]\n [ 0.57236761 -0.07568647 -0.81649655]]\nprinting rank1 approximation from tensorflow\n[[ 0.99999887  1.99999869  2.99999857]\n [ 3.9999969   4.99999666  5.99999666]\n [ 6.99999809  7.99999809  8.99999809]]\n[[  2.27875805  -2.88305187   0.7037462 ]\n [  4.35980749  -6.83247042   3.36293888]\n [  6.44085884 -10.78189278   6.0221343 ]]", "body": "In tf.svd documentation, it was said that the tensorflow implementation of svd is simply np.linalg.svd\r\n\r\nin fact it was not the same, in tensorflow, the index for V matrix is transposed..different from np.linalg.svd default setting. Funny thing is, this type of problem is a famous bug in matlab code people usually write, which is row selection and transpose is not equal to transpose then column selection.\r\n\r\ncode demonstration:\r\n\r\n\r\n```\r\nimport tensorflow as tf\r\ntf.__version__\r\n\r\n## benchmark using numpy svd\r\nimport numpy as np\r\n\r\nx = np.array([1.0,2.0,3.0,4.0,5.0,6,7,8,9])\r\nx = x.reshape(3,3)\r\n\r\nu_,s_,v_=np.linalg.svd(x,compute_uv=True)\r\n# print s_\r\nprint u_\r\nprint v_\r\n\r\nr = 2\r\ndiagS = np.diag(s_)\r\nprint diagS\r\ndiagS = diagS[:r,:r]\r\nx_rank1 = np.matmul(u_[:,:r], np.matmul(diagS, v_[:r,:]))\r\n\r\nprint 'original = \\n',x\r\nprint 'rank1 approximation\\n',x_rank1\r\n```\r\nResult is\r\n```\r\n[[-0.21483724  0.88723069  0.40824829]\r\n [-0.52058739  0.24964395 -0.81649658]\r\n [-0.82633754 -0.38794278  0.40824829]]\r\n[[-0.47967118 -0.57236779 -0.66506441]\r\n [-0.77669099 -0.07568647  0.62531805]\r\n [-0.40824829  0.81649658 -0.40824829]]\r\n[[  1.68481034e+01   0.00000000e+00   0.00000000e+00]\r\n [  0.00000000e+00   1.06836951e+00   0.00000000e+00]\r\n [  0.00000000e+00   0.00000000e+00   4.41842475e-16]]\r\noriginal = \r\n[[ 1.  2.  3.]\r\n [ 4.  5.  6.]\r\n [ 7.  8.  9.]]\r\nrank1 approximation\r\n[[ 1.  2.  3.]\r\n [ 4.  5.  6.]\r\n [ 7.  8.  9.]]\r\n```\r\n\r\nBut in tensorflow svd\r\n```\r\nX = tf.constant([1.0,2.0,3.0,4.0,5.0,6,7,8,9],shape=[3,3])\r\n\r\nsess = tf.InteractiveSession()\r\n    \r\nprint sess.run(X)\r\n\r\ns,u,v = tf.svd(X)\r\n\r\nprint sess.run(u)\r\nprint sess.run(v)\r\n\r\ndiagS_tf = tf.diag(s)\r\n# print sess.run(diagS_tf)\r\n\r\ntmp_correct =  tf.matmul(diagS_tf[:r,:r], tf.transpose(v[:,:r]))\r\ntmp_wrong = tf.matmul(diagS_tf[:r,:r], v[:r,:])\r\n\r\nprint 'following differs'\r\nprint sess.run(tf.transpose(v[:,:r]))\r\nprint sess.run(v[:r,:])\r\n\r\n# print sess.run(tmp)\r\n\r\nx_rank1_tf_correct= tf.matmul(u[:,:r], tmp_correct)\r\nx_rank1_tf_wrong= tf.matmul(u[:,:r], tmp_wrong)\r\n\r\nprint 'printing rank1 approximation from tensorflow'\r\nprint sess.run(x_rank1_tf_correct)\r\nprint sess.run(x_rank1_tf_wrong)\r\n```\r\n\r\nthe output is \r\n```\r\n[[ 1.  2.  3.]\r\n [ 4.  5.  6.]\r\n [ 7.  8.  9.]]\r\n[[ 0.21483716  0.88723052 -0.40824857]\r\n [ 0.52058721  0.24964423  0.81649649]\r\n [ 0.82633758 -0.38794291 -0.4082481 ]]\r\n[[ 0.47967106 -0.77669096  0.40824836]\r\n [ 0.57236761 -0.07568647 -0.81649655]\r\n [ 0.66506428  0.62531805  0.40824822]]\r\nfollowing differs\r\n[[ 0.47967106  0.57236761  0.66506428]\r\n [-0.77669096 -0.07568647  0.62531805]]\r\n[[ 0.47967106 -0.77669096  0.40824836]\r\n [ 0.57236761 -0.07568647 -0.81649655]]\r\nprinting rank1 approximation from tensorflow\r\n[[ 0.99999887  1.99999869  2.99999857]\r\n [ 3.9999969   4.99999666  5.99999666]\r\n [ 6.99999809  7.99999809  8.99999809]]\r\n[[  2.27875805  -2.88305187   0.7037462 ]\r\n [  4.35980749  -6.83247042   3.36293888]\r\n [  6.44085884 -10.78189278   6.0221343 ]]\r\n\r\n```\r\n\r\n\r\n"}