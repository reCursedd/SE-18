{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/414157588", "html_url": "https://github.com/tensorflow/tensorflow/issues/21612#issuecomment-414157588", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21612", "id": 414157588, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDE1NzU4OA==", "user": {"login": "yongtang", "id": 6932348, "node_id": "MDQ6VXNlcjY5MzIzNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6932348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yongtang", "html_url": "https://github.com/yongtang", "followers_url": "https://api.github.com/users/yongtang/followers", "following_url": "https://api.github.com/users/yongtang/following{/other_user}", "gists_url": "https://api.github.com/users/yongtang/gists{/gist_id}", "starred_url": "https://api.github.com/users/yongtang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yongtang/subscriptions", "organizations_url": "https://api.github.com/users/yongtang/orgs", "repos_url": "https://api.github.com/users/yongtang/repos", "events_url": "https://api.github.com/users/yongtang/events{/privacy}", "received_events_url": "https://api.github.com/users/yongtang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-19T21:34:42Z", "updated_at": "2018-08-19T21:34:42Z", "author_association": "MEMBER", "body_html": "<p>It looks like the documentation of <code>conv2d</code> is automatically generated from tensorflow/core/api_def/base_api/api_def_Conv2D.pbtxt, and <code>nn_ops.cc</code>:<br>\n<div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/62191da0819b25906c1b2ed96159cfe36ba00383/tensorflow/core/ops/nn_ops.cc#L265-L270\">tensorflow/tensorflow/core/ops/nn_ops.cc</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 265 to 270\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/62191da0819b25906c1b2ed96159cfe36ba00383\">62191da</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L265\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"265\"></td>\n          <td id=\"LC265\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-en\">REGISTER_OP</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Conv2D<span class=\"pl-pds\">\"</span></span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L266\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"266\"></td>\n          <td id=\"LC266\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     .Input(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>input: T<span class=\"pl-pds\">\"</span></span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L267\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"267\"></td>\n          <td id=\"LC267\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     .Input(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>filter: T<span class=\"pl-pds\">\"</span></span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L268\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"268\"></td>\n          <td id=\"LC268\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     .Output(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>output: T<span class=\"pl-pds\">\"</span></span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L269\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"269\"></td>\n          <td id=\"LC269\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     .Attr(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>T: {half, bfloat16, float, double}<span class=\"pl-pds\">\"</span></span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L270\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"270\"></td>\n          <td id=\"LC270\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     .Attr(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>strides: list(int)<span class=\"pl-pds\">\"</span></span>) </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>Deleting <code>bfloat16</code> from <code>nn_ops.cc</code> will fix the doc issue although that may break API backward compatibility I think.</p>\n<p>Alternatively it might possible to create a python wrapper of <code>def conv2d</code> in <code>nn_ops.py</code>, that calls <code>gen_nn_ops.conv2d</code>. Then inside <code>def conv2d</code> we could have the correct documentation.</p>\n<p>Not sure the best way to handle this situation. Would be happy to create a PR with some guidance.</p>", "body_text": "It looks like the documentation of conv2d is automatically generated from tensorflow/core/api_def/base_api/api_def_Conv2D.pbtxt, and nn_ops.cc:\n\n  \n    \n      tensorflow/tensorflow/core/ops/nn_ops.cc\n    \n    \n        Lines 265 to 270\n      in\n      62191da\n    \n    \n    \n    \n\n        \n          \n           REGISTER_OP(\"Conv2D\") \n        \n\n        \n          \n               .Input(\"input: T\") \n        \n\n        \n          \n               .Input(\"filter: T\") \n        \n\n        \n          \n               .Output(\"output: T\") \n        \n\n        \n          \n               .Attr(\"T: {half, bfloat16, float, double}\") \n        \n\n        \n          \n               .Attr(\"strides: list(int)\") \n        \n    \n  \n\n\nDeleting bfloat16 from nn_ops.cc will fix the doc issue although that may break API backward compatibility I think.\nAlternatively it might possible to create a python wrapper of def conv2d in nn_ops.py, that calls gen_nn_ops.conv2d. Then inside def conv2d we could have the correct documentation.\nNot sure the best way to handle this situation. Would be happy to create a PR with some guidance.", "body": "It looks like the documentation of `conv2d` is automatically generated from tensorflow/core/api_def/base_api/api_def_Conv2D.pbtxt, and `nn_ops.cc`:\r\nhttps://github.com/tensorflow/tensorflow/blob/62191da0819b25906c1b2ed96159cfe36ba00383/tensorflow/core/ops/nn_ops.cc#L265-L270\r\n\r\nDeleting `bfloat16` from `nn_ops.cc` will fix the doc issue although that may break API backward compatibility I think.\r\n\r\nAlternatively it might possible to create a python wrapper of `def conv2d` in `nn_ops.py`, that calls `gen_nn_ops.conv2d`. Then inside `def conv2d` we could have the correct documentation.\r\n\r\nNot sure the best way to handle this situation. Would be happy to create a PR with some guidance."}