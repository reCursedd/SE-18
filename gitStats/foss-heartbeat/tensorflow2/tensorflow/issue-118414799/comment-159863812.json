{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/159863812", "html_url": "https://github.com/tensorflow/tensorflow/issues/336#issuecomment-159863812", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/336", "id": 159863812, "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTg2MzgxMg==", "user": {"login": "casiciaco", "id": 2345400, "node_id": "MDQ6VXNlcjIzNDU0MDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2345400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/casiciaco", "html_url": "https://github.com/casiciaco", "followers_url": "https://api.github.com/users/casiciaco/followers", "following_url": "https://api.github.com/users/casiciaco/following{/other_user}", "gists_url": "https://api.github.com/users/casiciaco/gists{/gist_id}", "starred_url": "https://api.github.com/users/casiciaco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/casiciaco/subscriptions", "organizations_url": "https://api.github.com/users/casiciaco/orgs", "repos_url": "https://api.github.com/users/casiciaco/repos", "events_url": "https://api.github.com/users/casiciaco/events{/privacy}", "received_events_url": "https://api.github.com/users/casiciaco/received_events", "type": "User", "site_admin": false}, "created_at": "2015-11-26T09:54:40Z", "updated_at": "2015-11-26T13:30:44Z", "author_association": "NONE", "body_html": "<p>Hi,<br>\nI think it is not a bazel exclusive problem.   I get the error when I execute the following:</p>\n<pre><code>bazel build -c opt --config=cuda //tensorflow/cc:tutorials_example_trainer\n</code></pre>\n<p>Then I get the above error at this stage:</p>\n<pre><code>(cd $HOME/.cache/bazel/_bazel_$USER/2d4cdeea5be55811d371414ca0f7bd15/tensorflow &amp;&amp; \\\n  exec env - \\\n    PATH=$HOME/jdk1.8.0_65/bin/:$HOME/local.gcc-4.8.1/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:$HOME/bin \\\n  third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc -U_FORTIFY_SOURCE '-D_FORTIFY_SOURCE=1' ... -- see above for full command --)\n</code></pre>\n<p>I execute:</p>\n<pre><code>(cd $HOME/.cache/bazel/_bazel_$USER/2d4cdeea5be55811d371414ca0f7bd15/tensorflow &amp;&amp; \\\n  exec env - \\\n    PATH=$HOME/jdk1.8.0_65/bin/:$HOME/local.gcc-4.8.1/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:$HOME/bin \\\n  gcc  -U_FORTIFY_SOURCE '-D_FORTIFY_SOURCE=1'  ... )\n</code></pre>\n<p>Then this compilation step works. I think :</p>\n<pre><code>third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc\n</code></pre>\n<p>Is not getting the correct gcc.<br>\nMoreover if  I remove the cuda flag (<code>--config=cuda</code>) and execute this:</p>\n<pre><code>bazel build -c opt  //tensorflow/cc:tutorials_example_trainer\n</code></pre>\n<p>Then the wrapper is different (<code>external/bazel_tools/tools/cpp/gcc_wrapper.sh</code> instead of <code>third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc </code>  ) and it compiles (there was a librt.so problem I solved via addint <code>-lrt to LDFLAGS</code>) . So it seems to be a specific problem of tensorFlow + Cuda + the <strong>crosstool_wrapper_driver_is_not_gcc</strong> .  Note that the <code>gcc_wrapper.sh</code> is a wapper that I needed to write so that bazel gets the correct gcc and LD_LIBRARY_FLAGS:</p>\n<pre><code>#!/bin/bash\nset -e\nLD_LIBRARY_PATH=$HOME/local/lib64:/$HOME/jdk1.8.0_65/lib:/usr/local/cuda-7.0/lib64  $HOME/local/bin/gcc \"$@\"\n</code></pre>\n<p>*<em>How can I fix the compiler when <code>--config=cuda</code> is provided ? *</em><br>\nI have tried to modify the script <code>crosstool_wrapper_driver_is_not_gcc</code> to point to my gcc in the initial declarations:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c1\">CPU_COMPILER</span><span class=\"pl-k\">=</span> (<span class=\"pl-s\"><span class=\"pl-pds\">'</span>/path/to/local/bin/gcc<span class=\"pl-pds\">'</span></span>)\n<span class=\"pl-c1\">GCC_HOST_COMPILER_PATH</span> <span class=\"pl-k\">=</span>  (<span class=\"pl-s\"><span class=\"pl-pds\">'</span>/path/to/local/bin/gcc<span class=\"pl-pds\">'</span></span>)\n<span class=\"pl-c1\">...</span></pre></div>\n<p>But then I get another error:</p>\n<pre><code>ERROR: $HOME/tensorflow/google/protobuf/BUILD:267:1: undeclared inclusion(s) in rule '//google/protobuf:protoc':\nthis rule is missing dependency declarations for the following files included by 'google/protobuf/src/google/protobuf/compiler/main.cc':\n  '$HOME/local/include/c++/4.8.4/string'\n  '$HOME/local/include/c++/4.8.4/x86_64-unknown-linux-gnu/bits/c++config.h'\n...\n  '$HOME/local/include/c++/4.8.4/bits/stl_iterator_base_funcs.h'\n...\n  '$HOME/local/include/c++/4.8.4/bits/stl_relops.h'.\n</code></pre>", "body_text": "Hi,\nI think it is not a bazel exclusive problem.   I get the error when I execute the following:\nbazel build -c opt --config=cuda //tensorflow/cc:tutorials_example_trainer\n\nThen I get the above error at this stage:\n(cd $HOME/.cache/bazel/_bazel_$USER/2d4cdeea5be55811d371414ca0f7bd15/tensorflow && \\\n  exec env - \\\n    PATH=$HOME/jdk1.8.0_65/bin/:$HOME/local.gcc-4.8.1/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:$HOME/bin \\\n  third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc -U_FORTIFY_SOURCE '-D_FORTIFY_SOURCE=1' ... -- see above for full command --)\n\nI execute:\n(cd $HOME/.cache/bazel/_bazel_$USER/2d4cdeea5be55811d371414ca0f7bd15/tensorflow && \\\n  exec env - \\\n    PATH=$HOME/jdk1.8.0_65/bin/:$HOME/local.gcc-4.8.1/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:$HOME/bin \\\n  gcc  -U_FORTIFY_SOURCE '-D_FORTIFY_SOURCE=1'  ... )\n\nThen this compilation step works. I think :\nthird_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc\n\nIs not getting the correct gcc.\nMoreover if  I remove the cuda flag (--config=cuda) and execute this:\nbazel build -c opt  //tensorflow/cc:tutorials_example_trainer\n\nThen the wrapper is different (external/bazel_tools/tools/cpp/gcc_wrapper.sh instead of third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc   ) and it compiles (there was a librt.so problem I solved via addint -lrt to LDFLAGS) . So it seems to be a specific problem of tensorFlow + Cuda + the crosstool_wrapper_driver_is_not_gcc .  Note that the gcc_wrapper.sh is a wapper that I needed to write so that bazel gets the correct gcc and LD_LIBRARY_FLAGS:\n#!/bin/bash\nset -e\nLD_LIBRARY_PATH=$HOME/local/lib64:/$HOME/jdk1.8.0_65/lib:/usr/local/cuda-7.0/lib64  $HOME/local/bin/gcc \"$@\"\n\n*How can I fix the compiler when --config=cuda is provided ? *\nI have tried to modify the script crosstool_wrapper_driver_is_not_gcc to point to my gcc in the initial declarations:\nCPU_COMPILER= ('/path/to/local/bin/gcc')\nGCC_HOST_COMPILER_PATH =  ('/path/to/local/bin/gcc')\n...\nBut then I get another error:\nERROR: $HOME/tensorflow/google/protobuf/BUILD:267:1: undeclared inclusion(s) in rule '//google/protobuf:protoc':\nthis rule is missing dependency declarations for the following files included by 'google/protobuf/src/google/protobuf/compiler/main.cc':\n  '$HOME/local/include/c++/4.8.4/string'\n  '$HOME/local/include/c++/4.8.4/x86_64-unknown-linux-gnu/bits/c++config.h'\n...\n  '$HOME/local/include/c++/4.8.4/bits/stl_iterator_base_funcs.h'\n...\n  '$HOME/local/include/c++/4.8.4/bits/stl_relops.h'.", "body": "Hi,\nI think it is not a bazel exclusive problem.   I get the error when I execute the following: \n\n```\nbazel build -c opt --config=cuda //tensorflow/cc:tutorials_example_trainer\n```\n\nThen I get the above error at this stage:\n\n```\n(cd $HOME/.cache/bazel/_bazel_$USER/2d4cdeea5be55811d371414ca0f7bd15/tensorflow && \\\n  exec env - \\\n    PATH=$HOME/jdk1.8.0_65/bin/:$HOME/local.gcc-4.8.1/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:$HOME/bin \\\n  third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc -U_FORTIFY_SOURCE '-D_FORTIFY_SOURCE=1' ... -- see above for full command --)\n```\n\nI execute:\n\n```\n(cd $HOME/.cache/bazel/_bazel_$USER/2d4cdeea5be55811d371414ca0f7bd15/tensorflow && \\\n  exec env - \\\n    PATH=$HOME/jdk1.8.0_65/bin/:$HOME/local.gcc-4.8.1/bin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:$HOME/bin \\\n  gcc  -U_FORTIFY_SOURCE '-D_FORTIFY_SOURCE=1'  ... )\n```\n\nThen this compilation step works. I think : \n\n```\nthird_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc\n```\n\nIs not getting the correct gcc. \nMoreover if  I remove the cuda flag (`--config=cuda`) and execute this:\n\n```\nbazel build -c opt  //tensorflow/cc:tutorials_example_trainer\n```\n\nThen the wrapper is different (`external/bazel_tools/tools/cpp/gcc_wrapper.sh` instead of `third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc\n`  ) and it compiles (there was a librt.so problem I solved via addint `-lrt to LDFLAGS`) . So it seems to be a specific problem of tensorFlow + Cuda + the **crosstool_wrapper_driver_is_not_gcc** .  Note that the `gcc_wrapper.sh` is a wapper that I needed to write so that bazel gets the correct gcc and LD_LIBRARY_FLAGS:\n\n```\n#!/bin/bash\nset -e\nLD_LIBRARY_PATH=$HOME/local/lib64:/$HOME/jdk1.8.0_65/lib:/usr/local/cuda-7.0/lib64  $HOME/local/bin/gcc \"$@\"\n```\n\n*_How can I fix the compiler when `--config=cuda` is provided ? *_\nI have tried to modify the script `crosstool_wrapper_driver_is_not_gcc` to point to my gcc in the initial declarations:\n\n``` python\nCPU_COMPILER= ('/path/to/local/bin/gcc')\nGCC_HOST_COMPILER_PATH =  ('/path/to/local/bin/gcc')\n...\n```\n\nBut then I get another error:\n\n```\nERROR: $HOME/tensorflow/google/protobuf/BUILD:267:1: undeclared inclusion(s) in rule '//google/protobuf:protoc':\nthis rule is missing dependency declarations for the following files included by 'google/protobuf/src/google/protobuf/compiler/main.cc':\n  '$HOME/local/include/c++/4.8.4/string'\n  '$HOME/local/include/c++/4.8.4/x86_64-unknown-linux-gnu/bits/c++config.h'\n...\n  '$HOME/local/include/c++/4.8.4/bits/stl_iterator_base_funcs.h'\n...\n  '$HOME/local/include/c++/4.8.4/bits/stl_relops.h'.\n```\n"}