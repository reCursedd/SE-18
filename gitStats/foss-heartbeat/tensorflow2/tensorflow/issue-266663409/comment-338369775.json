{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/338369775", "html_url": "https://github.com/tensorflow/tensorflow/issues/13822#issuecomment-338369775", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13822", "id": 338369775, "node_id": "MDEyOklzc3VlQ29tbWVudDMzODM2OTc3NQ==", "user": {"login": "antifriz", "id": 6382271, "node_id": "MDQ6VXNlcjYzODIyNzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6382271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antifriz", "html_url": "https://github.com/antifriz", "followers_url": "https://api.github.com/users/antifriz/followers", "following_url": "https://api.github.com/users/antifriz/following{/other_user}", "gists_url": "https://api.github.com/users/antifriz/gists{/gist_id}", "starred_url": "https://api.github.com/users/antifriz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antifriz/subscriptions", "organizations_url": "https://api.github.com/users/antifriz/orgs", "repos_url": "https://api.github.com/users/antifriz/repos", "events_url": "https://api.github.com/users/antifriz/events{/privacy}", "received_events_url": "https://api.github.com/users/antifriz/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-21T07:09:14Z", "updated_at": "2017-10-21T07:30:46Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=577277\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/martinwicke\">@martinwicke</a>, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=710255\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fchollet\">@fchollet</a></p>\n<p>I included visual comparison of keras and tf.keras behaviors to clarify what I think is wrong with tf.keras scoping.</p>\n<p>So for two layers tf.keras produces three scopes where second layer is splitted in two scopes:</p>\n<pre><code>import tensorflow as tf\n\nfrom tensorflow.contrib.keras.api.keras.layers import Conv2D\nfrom tensorflow.contrib.keras.api.keras.layers import Input\n\na = Input(shape=(None, 32, 3))\na = Conv2D(32, (3, 3))(a)\na = Conv2D(32, (3, 3))(a)\n</code></pre>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/6382271/31848812-5089a624-b639-11e7-9238-855ec6418792.png\"><img width=\"717\" alt=\"screen shot 2017-10-21 at 8 21 56 am\" src=\"https://user-images.githubusercontent.com/6382271/31848812-5089a624-b639-11e7-9238-855ec6418792.png\" style=\"max-width:100%;\"></a></p>\n<p>With keras scoping is as expected:</p>\n<pre><code>from keras.layers import Conv2D\nfrom keras.layers import Input\n\na = Input(shape=(None, 32, 3))\na = Conv2D(32, (3, 3))(a)\na = Conv2D(32, (3, 3))(a)\n</code></pre>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/6382271/31848813-50a64e96-b639-11e7-8489-d5beb1c309d4.png\"><img width=\"422\" alt=\"screen shot 2017-10-21 at 8 23 34 am\" src=\"https://user-images.githubusercontent.com/6382271/31848813-50a64e96-b639-11e7-8489-d5beb1c309d4.png\" style=\"max-width:100%;\"></a></p>\n<p>In tf.keras this happens only if you do not explicitly specify the name of the layer. If it is specified, result is as expected (like keras one).</p>\n<pre><code>import tensorflow as tf\n\nfrom tensorflow.contrib.keras.api.keras.layers import Conv2D\nfrom tensorflow.contrib.keras.api.keras.layers import Input\n\na = Input(shape=(None, 32, 3))\na = Conv2D(32, (3, 3), name='conv_first')(a)\na = Conv2D(32, (3, 3), name='conv_second')(a)\n</code></pre>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/6382271/31848926-dffd175e-b63a-11e7-9f0a-b9cd7d7837cf.png\"><img width=\"480\" alt=\"screen shot 2017-10-21 at 8 35 10 am\" src=\"https://user-images.githubusercontent.com/6382271/31848926-dffd175e-b63a-11e7-9f0a-b9cd7d7837cf.png\" style=\"max-width:100%;\"></a></p>\n<p>Also to mention, with three repeating layers, scope <code>conv2d_2</code> contains ops for the second layer and weights for the third.</p>\n<pre><code>import tensorflow as tf\n\nfrom tensorflow.contrib.keras.api.keras.layers import Conv2D\nfrom tensorflow.contrib.keras.api.keras.layers import Input\n\na = Input(shape=(None, 32, 3))\na = Conv2D(32, (3, 3))(a)\na = Conv2D(32, (3, 3))(a)\na = Conv2D(32, (3, 3))(a)\n</code></pre>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/6382271/31849438-41cc4700-b642-11e7-8757-6437ebf42467.png\"><img width=\"665\" alt=\"screen shot 2017-10-21 at 9 25 51 am\" src=\"https://user-images.githubusercontent.com/6382271/31849438-41cc4700-b642-11e7-8757-6437ebf42467.png\" style=\"max-width:100%;\"></a></p>", "body_text": "@martinwicke, @fchollet\nI included visual comparison of keras and tf.keras behaviors to clarify what I think is wrong with tf.keras scoping.\nSo for two layers tf.keras produces three scopes where second layer is splitted in two scopes:\nimport tensorflow as tf\n\nfrom tensorflow.contrib.keras.api.keras.layers import Conv2D\nfrom tensorflow.contrib.keras.api.keras.layers import Input\n\na = Input(shape=(None, 32, 3))\na = Conv2D(32, (3, 3))(a)\na = Conv2D(32, (3, 3))(a)\n\n\nWith keras scoping is as expected:\nfrom keras.layers import Conv2D\nfrom keras.layers import Input\n\na = Input(shape=(None, 32, 3))\na = Conv2D(32, (3, 3))(a)\na = Conv2D(32, (3, 3))(a)\n\n\nIn tf.keras this happens only if you do not explicitly specify the name of the layer. If it is specified, result is as expected (like keras one).\nimport tensorflow as tf\n\nfrom tensorflow.contrib.keras.api.keras.layers import Conv2D\nfrom tensorflow.contrib.keras.api.keras.layers import Input\n\na = Input(shape=(None, 32, 3))\na = Conv2D(32, (3, 3), name='conv_first')(a)\na = Conv2D(32, (3, 3), name='conv_second')(a)\n\n\nAlso to mention, with three repeating layers, scope conv2d_2 contains ops for the second layer and weights for the third.\nimport tensorflow as tf\n\nfrom tensorflow.contrib.keras.api.keras.layers import Conv2D\nfrom tensorflow.contrib.keras.api.keras.layers import Input\n\na = Input(shape=(None, 32, 3))\na = Conv2D(32, (3, 3))(a)\na = Conv2D(32, (3, 3))(a)\na = Conv2D(32, (3, 3))(a)", "body": "@martinwicke, @fchollet \r\n\r\nI included visual comparison of keras and tf.keras behaviors to clarify what I think is wrong with tf.keras scoping.\r\n\r\nSo for two layers tf.keras produces three scopes where second layer is splitted in two scopes:\r\n```\r\nimport tensorflow as tf\r\n\r\nfrom tensorflow.contrib.keras.api.keras.layers import Conv2D\r\nfrom tensorflow.contrib.keras.api.keras.layers import Input\r\n\r\na = Input(shape=(None, 32, 3))\r\na = Conv2D(32, (3, 3))(a)\r\na = Conv2D(32, (3, 3))(a)\r\n```\r\n\r\n<img width=\"717\" alt=\"screen shot 2017-10-21 at 8 21 56 am\" src=\"https://user-images.githubusercontent.com/6382271/31848812-5089a624-b639-11e7-9238-855ec6418792.png\">\r\n\r\nWith keras scoping is as expected:\r\n```\r\nfrom keras.layers import Conv2D\r\nfrom keras.layers import Input\r\n\r\na = Input(shape=(None, 32, 3))\r\na = Conv2D(32, (3, 3))(a)\r\na = Conv2D(32, (3, 3))(a)\r\n```\r\n<img width=\"422\" alt=\"screen shot 2017-10-21 at 8 23 34 am\" src=\"https://user-images.githubusercontent.com/6382271/31848813-50a64e96-b639-11e7-8489-d5beb1c309d4.png\">\r\n\r\nIn tf.keras this happens only if you do not explicitly specify the name of the layer. If it is specified, result is as expected (like keras one).\r\n```\r\nimport tensorflow as tf\r\n\r\nfrom tensorflow.contrib.keras.api.keras.layers import Conv2D\r\nfrom tensorflow.contrib.keras.api.keras.layers import Input\r\n\r\na = Input(shape=(None, 32, 3))\r\na = Conv2D(32, (3, 3), name='conv_first')(a)\r\na = Conv2D(32, (3, 3), name='conv_second')(a)\r\n```\r\n<img width=\"480\" alt=\"screen shot 2017-10-21 at 8 35 10 am\" src=\"https://user-images.githubusercontent.com/6382271/31848926-dffd175e-b63a-11e7-9f0a-b9cd7d7837cf.png\">\r\n\r\nAlso to mention, with three repeating layers, scope `conv2d_2` contains ops for the second layer and weights for the third.\r\n```\r\nimport tensorflow as tf\r\n\r\nfrom tensorflow.contrib.keras.api.keras.layers import Conv2D\r\nfrom tensorflow.contrib.keras.api.keras.layers import Input\r\n\r\na = Input(shape=(None, 32, 3))\r\na = Conv2D(32, (3, 3))(a)\r\na = Conv2D(32, (3, 3))(a)\r\na = Conv2D(32, (3, 3))(a)\r\n```\r\n<img width=\"665\" alt=\"screen shot 2017-10-21 at 9 25 51 am\" src=\"https://user-images.githubusercontent.com/6382271/31849438-41cc4700-b642-11e7-8757-6437ebf42467.png\">\r\n"}