{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/399343581", "html_url": "https://github.com/tensorflow/tensorflow/issues/20008#issuecomment-399343581", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20008", "id": 399343581, "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTM0MzU4MQ==", "user": {"login": "sandipmgiri", "id": 16284232, "node_id": "MDQ6VXNlcjE2Mjg0MjMy", "avatar_url": "https://avatars0.githubusercontent.com/u/16284232?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sandipmgiri", "html_url": "https://github.com/sandipmgiri", "followers_url": "https://api.github.com/users/sandipmgiri/followers", "following_url": "https://api.github.com/users/sandipmgiri/following{/other_user}", "gists_url": "https://api.github.com/users/sandipmgiri/gists{/gist_id}", "starred_url": "https://api.github.com/users/sandipmgiri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sandipmgiri/subscriptions", "organizations_url": "https://api.github.com/users/sandipmgiri/orgs", "repos_url": "https://api.github.com/users/sandipmgiri/repos", "events_url": "https://api.github.com/users/sandipmgiri/events{/privacy}", "received_events_url": "https://api.github.com/users/sandipmgiri/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-22T07:06:59Z", "updated_at": "2018-06-22T07:12:05Z", "author_association": "CONTRIBUTOR", "body_html": "<p>On both the platform (x86 and ppc64le) getting same \"mg\"(metagraph) value , see below :</p>\n<pre><code>meta_info_def {\n  stripped_op_list {\n    op {\n      name: \"AddN\"\n      input_arg {\n        name: \"inputs\"\n        type_attr: \"T\"\n        number_attr: \"N\"\n      }\n      output_arg {\n        name: \"sum\"\n        type_attr: \"T\"\n      }\n      attr {\n        name: \"N\"\n        type: \"int\"\n        has_minimum: true\n        minimum: 1\n      }\n      attr {\n        name: \"T\"\n        type: \"type\"\n        allowed_values {\n          list {\n            type: DT_FLOAT\n            type: DT_DOUBLE\n            type: DT_INT32\n            type: DT_UINT8\n            type: DT_INT16\n            type: DT_INT8\n            type: DT_COMPLEX64\n            type: DT_INT64\n            type: DT_QINT8\n            type: DT_QUINT8\n            type: DT_QINT32\n            type: DT_BFLOAT16\n            type: DT_UINT16\n            type: DT_COMPLEX128\n            type: DT_HALF\n            type: DT_UINT32\n            type: DT_UINT64\n            type: DT_VARIANT\n          }\n        }\n      }\n      is_aggregate: true\n      is_commutative: true\n    }\n    op {\n      name: \"Const\"\n      output_arg {\n        name: \"output\"\n        type_attr: \"dtype\"\n      }\n      attr {\n        name: \"value\"\n        type: \"tensor\"\n      }\n      attr {\n        name: \"dtype\"\n        type: \"type\"\n      }\n    }\n  }\n  tensorflow_version: \"1.9.0-rc0\"\n  tensorflow_git_version: \"v1.8.0-3287-g5ae5ab4\"\n}\ngraph_def {\n  node {\n    name: \"a\"\n    op: \"Const\"\n    device: \"/device:CPU:0\"\n    attr {\n      key: \"_output_shapes\"\n      value {\n        list {\n          shape {\n          }\n        }\n      }\n    }\n    attr {\n      key: \"dtype\"\n      value {\n        type: DT_INT32\n      }\n    }\n    attr {\n      key: \"value\"\n      value {\n        tensor {\n          dtype: DT_INT32\n          tensor_shape {\n          }\n          int_val: 10\n        }\n      }\n    }\n  }\n  node {\n    name: \"b\"\n    op: \"Const\"\n    device: \"/device:CPU:0\"\n    attr {\n      key: \"_output_shapes\"\n      value {\n        list {\n          shape {\n          }\n        }\n      }\n    }\n    attr {\n      key: \"dtype\"\n      value {\n        type: DT_INT32\n      }\n    }\n    attr {\n      key: \"value\"\n      value {\n        tensor {\n          dtype: DT_INT32\n          tensor_shape {\n          }\n          int_val: 20\n        }\n      }\n    }\n  }\n  node {\n    name: \"c\"\n    op: \"AddN\"\n    input: \"a\"\n    input: \"b\"\n    device: \"/device:CPU:0\"\n    attr {\n      key: \"N\"\n      value {\n        i: 2\n      }\n    }\n    attr {\n      key: \"T\"\n      value {\n        type: DT_INT32\n      }\n    }\n    attr {\n      key: \"_output_shapes\"\n      value {\n        list {\n          shape {\n          }\n        }\n      }\n    }\n  }\n  node {\n    name: \"d\"\n    op: \"AddN\"\n    input: \"b\"\n    input: \"c\"\n    device: \"/device:CPU:0\"\n    attr {\n      key: \"N\"\n      value {\n        i: 2\n      }\n    }\n    attr {\n      key: \"T\"\n      value {\n        type: DT_INT32\n      }\n    }\n    attr {\n      key: \"_output_shapes\"\n      value {\n        list {\n          shape {\n          }\n        }\n      }\n    }\n  }\n  versions {\n    producer: 26\n  }\n}\ncollection_def {\n  key: \"train_op\"\n  value {\n    node_list {\n      value: \"d:0\"\n    }\n  }\n}\n\n</code></pre>\n<p>However , <code>report = cost_analyzer.GenerateMemoryReport(mg)</code> line returns incorrect result on ppc64le :</p>\n<pre><code>Peak usage for device /job:localhost/replica:0/task:0/device:CPU:0: 12 bytes\n  a:0 uses 4 bytes\n  b:0 uses 4 bytes\n  c:0 uses 4 bytes\n</code></pre>\n<p>Expected :</p>\n<pre><code>Peak usage for device /job:localhost/replica:0/task:0/device:CPU:0: 16 bytes\n  a:0 uses 4 bytes\n  b:0 uses 4 bytes\n  d:0 uses 4 bytes\n  c:0 uses 4 bytes\n  \n</code></pre>\n<p>I have looked into the <code>GenerateMemoryReport() </code>function in file <code>tensorflow/python/grappler/cost_analyzer.py</code>, and got to know that the <code>peak_usage = cluster.DeterminePeakMemoryUsage(item) </code>line returning incorrect value.</p>\n<p>Now looking into the DeterminePeakMemoryUsage() code.</p>", "body_text": "On both the platform (x86 and ppc64le) getting same \"mg\"(metagraph) value , see below :\nmeta_info_def {\n  stripped_op_list {\n    op {\n      name: \"AddN\"\n      input_arg {\n        name: \"inputs\"\n        type_attr: \"T\"\n        number_attr: \"N\"\n      }\n      output_arg {\n        name: \"sum\"\n        type_attr: \"T\"\n      }\n      attr {\n        name: \"N\"\n        type: \"int\"\n        has_minimum: true\n        minimum: 1\n      }\n      attr {\n        name: \"T\"\n        type: \"type\"\n        allowed_values {\n          list {\n            type: DT_FLOAT\n            type: DT_DOUBLE\n            type: DT_INT32\n            type: DT_UINT8\n            type: DT_INT16\n            type: DT_INT8\n            type: DT_COMPLEX64\n            type: DT_INT64\n            type: DT_QINT8\n            type: DT_QUINT8\n            type: DT_QINT32\n            type: DT_BFLOAT16\n            type: DT_UINT16\n            type: DT_COMPLEX128\n            type: DT_HALF\n            type: DT_UINT32\n            type: DT_UINT64\n            type: DT_VARIANT\n          }\n        }\n      }\n      is_aggregate: true\n      is_commutative: true\n    }\n    op {\n      name: \"Const\"\n      output_arg {\n        name: \"output\"\n        type_attr: \"dtype\"\n      }\n      attr {\n        name: \"value\"\n        type: \"tensor\"\n      }\n      attr {\n        name: \"dtype\"\n        type: \"type\"\n      }\n    }\n  }\n  tensorflow_version: \"1.9.0-rc0\"\n  tensorflow_git_version: \"v1.8.0-3287-g5ae5ab4\"\n}\ngraph_def {\n  node {\n    name: \"a\"\n    op: \"Const\"\n    device: \"/device:CPU:0\"\n    attr {\n      key: \"_output_shapes\"\n      value {\n        list {\n          shape {\n          }\n        }\n      }\n    }\n    attr {\n      key: \"dtype\"\n      value {\n        type: DT_INT32\n      }\n    }\n    attr {\n      key: \"value\"\n      value {\n        tensor {\n          dtype: DT_INT32\n          tensor_shape {\n          }\n          int_val: 10\n        }\n      }\n    }\n  }\n  node {\n    name: \"b\"\n    op: \"Const\"\n    device: \"/device:CPU:0\"\n    attr {\n      key: \"_output_shapes\"\n      value {\n        list {\n          shape {\n          }\n        }\n      }\n    }\n    attr {\n      key: \"dtype\"\n      value {\n        type: DT_INT32\n      }\n    }\n    attr {\n      key: \"value\"\n      value {\n        tensor {\n          dtype: DT_INT32\n          tensor_shape {\n          }\n          int_val: 20\n        }\n      }\n    }\n  }\n  node {\n    name: \"c\"\n    op: \"AddN\"\n    input: \"a\"\n    input: \"b\"\n    device: \"/device:CPU:0\"\n    attr {\n      key: \"N\"\n      value {\n        i: 2\n      }\n    }\n    attr {\n      key: \"T\"\n      value {\n        type: DT_INT32\n      }\n    }\n    attr {\n      key: \"_output_shapes\"\n      value {\n        list {\n          shape {\n          }\n        }\n      }\n    }\n  }\n  node {\n    name: \"d\"\n    op: \"AddN\"\n    input: \"b\"\n    input: \"c\"\n    device: \"/device:CPU:0\"\n    attr {\n      key: \"N\"\n      value {\n        i: 2\n      }\n    }\n    attr {\n      key: \"T\"\n      value {\n        type: DT_INT32\n      }\n    }\n    attr {\n      key: \"_output_shapes\"\n      value {\n        list {\n          shape {\n          }\n        }\n      }\n    }\n  }\n  versions {\n    producer: 26\n  }\n}\ncollection_def {\n  key: \"train_op\"\n  value {\n    node_list {\n      value: \"d:0\"\n    }\n  }\n}\n\n\nHowever , report = cost_analyzer.GenerateMemoryReport(mg) line returns incorrect result on ppc64le :\nPeak usage for device /job:localhost/replica:0/task:0/device:CPU:0: 12 bytes\n  a:0 uses 4 bytes\n  b:0 uses 4 bytes\n  c:0 uses 4 bytes\n\nExpected :\nPeak usage for device /job:localhost/replica:0/task:0/device:CPU:0: 16 bytes\n  a:0 uses 4 bytes\n  b:0 uses 4 bytes\n  d:0 uses 4 bytes\n  c:0 uses 4 bytes\n  \n\nI have looked into the GenerateMemoryReport() function in file tensorflow/python/grappler/cost_analyzer.py, and got to know that the peak_usage = cluster.DeterminePeakMemoryUsage(item) line returning incorrect value.\nNow looking into the DeterminePeakMemoryUsage() code.", "body": "On both the platform (x86 and ppc64le) getting same \"mg\"(metagraph) value , see below :\r\n\r\n```\r\nmeta_info_def {\r\n  stripped_op_list {\r\n    op {\r\n      name: \"AddN\"\r\n      input_arg {\r\n        name: \"inputs\"\r\n        type_attr: \"T\"\r\n        number_attr: \"N\"\r\n      }\r\n      output_arg {\r\n        name: \"sum\"\r\n        type_attr: \"T\"\r\n      }\r\n      attr {\r\n        name: \"N\"\r\n        type: \"int\"\r\n        has_minimum: true\r\n        minimum: 1\r\n      }\r\n      attr {\r\n        name: \"T\"\r\n        type: \"type\"\r\n        allowed_values {\r\n          list {\r\n            type: DT_FLOAT\r\n            type: DT_DOUBLE\r\n            type: DT_INT32\r\n            type: DT_UINT8\r\n            type: DT_INT16\r\n            type: DT_INT8\r\n            type: DT_COMPLEX64\r\n            type: DT_INT64\r\n            type: DT_QINT8\r\n            type: DT_QUINT8\r\n            type: DT_QINT32\r\n            type: DT_BFLOAT16\r\n            type: DT_UINT16\r\n            type: DT_COMPLEX128\r\n            type: DT_HALF\r\n            type: DT_UINT32\r\n            type: DT_UINT64\r\n            type: DT_VARIANT\r\n          }\r\n        }\r\n      }\r\n      is_aggregate: true\r\n      is_commutative: true\r\n    }\r\n    op {\r\n      name: \"Const\"\r\n      output_arg {\r\n        name: \"output\"\r\n        type_attr: \"dtype\"\r\n      }\r\n      attr {\r\n        name: \"value\"\r\n        type: \"tensor\"\r\n      }\r\n      attr {\r\n        name: \"dtype\"\r\n        type: \"type\"\r\n      }\r\n    }\r\n  }\r\n  tensorflow_version: \"1.9.0-rc0\"\r\n  tensorflow_git_version: \"v1.8.0-3287-g5ae5ab4\"\r\n}\r\ngraph_def {\r\n  node {\r\n    name: \"a\"\r\n    op: \"Const\"\r\n    device: \"/device:CPU:0\"\r\n    attr {\r\n      key: \"_output_shapes\"\r\n      value {\r\n        list {\r\n          shape {\r\n          }\r\n        }\r\n      }\r\n    }\r\n    attr {\r\n      key: \"dtype\"\r\n      value {\r\n        type: DT_INT32\r\n      }\r\n    }\r\n    attr {\r\n      key: \"value\"\r\n      value {\r\n        tensor {\r\n          dtype: DT_INT32\r\n          tensor_shape {\r\n          }\r\n          int_val: 10\r\n        }\r\n      }\r\n    }\r\n  }\r\n  node {\r\n    name: \"b\"\r\n    op: \"Const\"\r\n    device: \"/device:CPU:0\"\r\n    attr {\r\n      key: \"_output_shapes\"\r\n      value {\r\n        list {\r\n          shape {\r\n          }\r\n        }\r\n      }\r\n    }\r\n    attr {\r\n      key: \"dtype\"\r\n      value {\r\n        type: DT_INT32\r\n      }\r\n    }\r\n    attr {\r\n      key: \"value\"\r\n      value {\r\n        tensor {\r\n          dtype: DT_INT32\r\n          tensor_shape {\r\n          }\r\n          int_val: 20\r\n        }\r\n      }\r\n    }\r\n  }\r\n  node {\r\n    name: \"c\"\r\n    op: \"AddN\"\r\n    input: \"a\"\r\n    input: \"b\"\r\n    device: \"/device:CPU:0\"\r\n    attr {\r\n      key: \"N\"\r\n      value {\r\n        i: 2\r\n      }\r\n    }\r\n    attr {\r\n      key: \"T\"\r\n      value {\r\n        type: DT_INT32\r\n      }\r\n    }\r\n    attr {\r\n      key: \"_output_shapes\"\r\n      value {\r\n        list {\r\n          shape {\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  node {\r\n    name: \"d\"\r\n    op: \"AddN\"\r\n    input: \"b\"\r\n    input: \"c\"\r\n    device: \"/device:CPU:0\"\r\n    attr {\r\n      key: \"N\"\r\n      value {\r\n        i: 2\r\n      }\r\n    }\r\n    attr {\r\n      key: \"T\"\r\n      value {\r\n        type: DT_INT32\r\n      }\r\n    }\r\n    attr {\r\n      key: \"_output_shapes\"\r\n      value {\r\n        list {\r\n          shape {\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  versions {\r\n    producer: 26\r\n  }\r\n}\r\ncollection_def {\r\n  key: \"train_op\"\r\n  value {\r\n    node_list {\r\n      value: \"d:0\"\r\n    }\r\n  }\r\n}\r\n\r\n```\r\n\r\nHowever , `report = cost_analyzer.GenerateMemoryReport(mg)` line returns incorrect result on ppc64le :\r\n```\r\nPeak usage for device /job:localhost/replica:0/task:0/device:CPU:0: 12 bytes\r\n  a:0 uses 4 bytes\r\n  b:0 uses 4 bytes\r\n  c:0 uses 4 bytes\r\n```\r\n  \r\nExpected :\r\n```\r\nPeak usage for device /job:localhost/replica:0/task:0/device:CPU:0: 16 bytes\r\n  a:0 uses 4 bytes\r\n  b:0 uses 4 bytes\r\n  d:0 uses 4 bytes\r\n  c:0 uses 4 bytes\r\n  \r\n```\r\n\r\nI have looked into the `GenerateMemoryReport() `function in file `tensorflow/python/grappler/cost_analyzer.py`, and got to know that the `peak_usage = cluster.DeterminePeakMemoryUsage(item) `line returning incorrect value.\r\n\r\nNow looking into the DeterminePeakMemoryUsage() code.\r\n  \r\n"}