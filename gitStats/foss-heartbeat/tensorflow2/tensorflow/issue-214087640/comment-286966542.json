{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/286966542", "html_url": "https://github.com/tensorflow/tensorflow/issues/8397#issuecomment-286966542", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8397", "id": 286966542, "node_id": "MDEyOklzc3VlQ29tbWVudDI4Njk2NjU0Mg==", "user": {"login": "ANeeK181", "id": 10502710, "node_id": "MDQ6VXNlcjEwNTAyNzEw", "avatar_url": "https://avatars1.githubusercontent.com/u/10502710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ANeeK181", "html_url": "https://github.com/ANeeK181", "followers_url": "https://api.github.com/users/ANeeK181/followers", "following_url": "https://api.github.com/users/ANeeK181/following{/other_user}", "gists_url": "https://api.github.com/users/ANeeK181/gists{/gist_id}", "starred_url": "https://api.github.com/users/ANeeK181/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ANeeK181/subscriptions", "organizations_url": "https://api.github.com/users/ANeeK181/orgs", "repos_url": "https://api.github.com/users/ANeeK181/repos", "events_url": "https://api.github.com/users/ANeeK181/events{/privacy}", "received_events_url": "https://api.github.com/users/ANeeK181/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-16T06:08:33Z", "updated_at": "2017-03-16T06:08:33Z", "author_association": "NONE", "body_html": "<p>(1) If I use the process outlined in the original ReadMe at Github, <a href=\"url\">https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/cmake</a></p>\n<p>Then using 64 bit tools, and using cmake<br>\ncmake .. -A x64 -DCMAKE_BUILD_TYPE=Release ^ ... (rest of command)</p>\n<p>The process runs fine, and 64bit exe is generated for sample code. I even changed the sample code and got it to read from already built graph and it works fine.</p>\n<p>(2) If I repeat the process, that is setup 64-bit tools of VS and then run the same cmake command but without mentioning architecture, i.e. -A FLAG</p>\n<p>cmake ..  -DCMAKE_BUILD_TYPE=Release ^ ... (rest of command)</p>\n<p>Then VS projects are for Win32 Platform and the process again halts with error, but this time error is of linking 64bit library \"libprotobuf.lib\" with the target exe for x86. Here is the attached error log:</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/files/846812/log_2.txt\">log_2.txt</a></p>\n<p>I guess that this library is downloaded when repo of protobuf is cloned when building the projects. So does this mean that exe for 32-bit platform can't be generated?</p>", "body_text": "(1) If I use the process outlined in the original ReadMe at Github, https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/cmake\nThen using 64 bit tools, and using cmake\ncmake .. -A x64 -DCMAKE_BUILD_TYPE=Release ^ ... (rest of command)\nThe process runs fine, and 64bit exe is generated for sample code. I even changed the sample code and got it to read from already built graph and it works fine.\n(2) If I repeat the process, that is setup 64-bit tools of VS and then run the same cmake command but without mentioning architecture, i.e. -A FLAG\ncmake ..  -DCMAKE_BUILD_TYPE=Release ^ ... (rest of command)\nThen VS projects are for Win32 Platform and the process again halts with error, but this time error is of linking 64bit library \"libprotobuf.lib\" with the target exe for x86. Here is the attached error log:\nlog_2.txt\nI guess that this library is downloaded when repo of protobuf is cloned when building the projects. So does this mean that exe for 32-bit platform can't be generated?", "body": "(1) If I use the process outlined in the original ReadMe at Github, [https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/cmake](url)\r\n\r\nThen using 64 bit tools, and using cmake \r\ncmake .. -A x64 -DCMAKE_BUILD_TYPE=Release ^ ... (rest of command)\r\n\r\nThe process runs fine, and 64bit exe is generated for sample code. I even changed the sample code and got it to read from already built graph and it works fine. \r\n\r\n(2) If I repeat the process, that is setup 64-bit tools of VS and then run the same cmake command but without mentioning architecture, i.e. -A FLAG\r\n\r\ncmake ..  -DCMAKE_BUILD_TYPE=Release ^ ... (rest of command)\r\n\r\nThen VS projects are for Win32 Platform and the process again halts with error, but this time error is of linking 64bit library \"libprotobuf.lib\" with the target exe for x86. Here is the attached error log:\r\n\r\n[log_2.txt](https://github.com/tensorflow/tensorflow/files/846812/log_2.txt)\r\n\r\nI guess that this library is downloaded when repo of protobuf is cloned when building the projects. So does this mean that exe for 32-bit platform can't be generated?\r\n"}