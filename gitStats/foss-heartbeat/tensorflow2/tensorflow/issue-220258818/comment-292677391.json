{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/292677391", "html_url": "https://github.com/tensorflow/tensorflow/issues/9047#issuecomment-292677391", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9047", "id": 292677391, "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjY3NzM5MQ==", "user": {"login": "taion", "id": 3112159, "node_id": "MDQ6VXNlcjMxMTIxNTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3112159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taion", "html_url": "https://github.com/taion", "followers_url": "https://api.github.com/users/taion/followers", "following_url": "https://api.github.com/users/taion/following{/other_user}", "gists_url": "https://api.github.com/users/taion/gists{/gist_id}", "starred_url": "https://api.github.com/users/taion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taion/subscriptions", "organizations_url": "https://api.github.com/users/taion/orgs", "repos_url": "https://api.github.com/users/taion/repos", "events_url": "https://api.github.com/users/taion/events{/privacy}", "received_events_url": "https://api.github.com/users/taion/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-07T23:49:17Z", "updated_at": "2017-04-07T23:49:25Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Oops, yeah \u2013 I think it should be something like:</p>\n<div class=\"highlight highlight-source-python\"><pre>epsilon_hat <span class=\"pl-k\">=</span> epsilon_t <span class=\"pl-k\">*</span> tf.sqrt(<span class=\"pl-c1\">1</span> <span class=\"pl-k\">-</span> beta2_power)</pre></div>\n<p>Otherwise without this scaling the effective epsilon is scaled by <code>1. / tf.sqrt(1 - beta2_power)</code>.</p>\n<p>With the default settings it probably barely matters (so you get an epsilon of ~3e-7 instead of 1e-8... big deal), but if you follow the recommendations in the comments and e.g. set epsilon to 1 or 0.1, then you effectively will barely update the weights for the first few iterations until <code>beta2_power</code> gets closer to 0 \u2013 like if you set <code>epsilon</code> to 1, then the effective \"epsilon\" you'd use for the first iteration would be ~31.</p>\n<p>I can't really think of a reason why you'd want to incorrectly scale the epsilon in this case.</p>", "body_text": "Oops, yeah \u2013 I think it should be something like:\nepsilon_hat = epsilon_t * tf.sqrt(1 - beta2_power)\nOtherwise without this scaling the effective epsilon is scaled by 1. / tf.sqrt(1 - beta2_power).\nWith the default settings it probably barely matters (so you get an epsilon of ~3e-7 instead of 1e-8... big deal), but if you follow the recommendations in the comments and e.g. set epsilon to 1 or 0.1, then you effectively will barely update the weights for the first few iterations until beta2_power gets closer to 0 \u2013 like if you set epsilon to 1, then the effective \"epsilon\" you'd use for the first iteration would be ~31.\nI can't really think of a reason why you'd want to incorrectly scale the epsilon in this case.", "body": "Oops, yeah \u2013 I think it should be something like:\r\n\r\n```python\r\nepsilon_hat = epsilon_t * tf.sqrt(1 - beta2_power)\r\n```\r\n\r\nOtherwise without this scaling the effective epsilon is scaled by `1. / tf.sqrt(1 - beta2_power)`.\r\n\r\nWith the default settings it probably barely matters (so you get an epsilon of ~3e-7 instead of 1e-8... big deal), but if you follow the recommendations in the comments and e.g. set epsilon to 1 or 0.1, then you effectively will barely update the weights for the first few iterations until `beta2_power` gets closer to 0 \u2013 like if you set `epsilon` to 1, then the effective \"epsilon\" you'd use for the first iteration would be ~31.\r\n\r\nI can't really think of a reason why you'd want to incorrectly scale the epsilon in this case."}