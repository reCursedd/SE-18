{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/193636846", "pull_request_review_id": 126646359, "id": 193636846, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzYzNjg0Ng==", "diff_hunk": "@@ -743,24 +743,51 @@ set(api_init_list_file \"${tensorflow_source_dir}/api_init_files_list.txt\")\n file(WRITE \"${api_init_list_file}\" \"${api_init_files}\")\n \n # Run create_python_api.py to generate __init__.py files.\n-add_custom_command(\n-      OUTPUT ${api_init_files}\n-      DEPENDS tf_python_ops tf_python_copy_scripts_to_destination pywrap_tensorflow_internal tf_python_touchup_modules tf_extension_ops\n-\n-      # tensorflow/__init__.py depends on files generated in this step. So, remove it while\n-      # this step is running since the files aren't there yet.\n-      COMMAND ${CMAKE_COMMAND} -E remove -f ${CMAKE_CURRENT_BINARY_DIR}/tf_python/tensorflow/__init__.py\n-\n-      # Run create_python_api.py to generate API init files.\n-      COMMAND ${CMAKE_COMMAND} -E env PYTHONPATH=${CMAKE_CURRENT_BINARY_DIR}/tf_python ${PYTHON_EXECUTABLE}\n-              \"${CMAKE_CURRENT_BINARY_DIR}/tf_python/tensorflow/tools/api/generator/create_python_api.py\"\n-              \"--root_init_template=${CMAKE_CURRENT_BINARY_DIR}/tf_python/tensorflow/api_template.__init__.py\"\n-              \"--apidir=${CMAKE_CURRENT_BINARY_DIR}/tf_python/tensorflow\"\n-              \"${api_init_list_file}\"\n-\n-      COMMENT \"Generating __init__.py files for Python API.\"\n-      WORKING_DIRECTORY \"${CMAKE_CURRENT_BINARY_DIR}/tf_python\"\n-)\n+if (tensorflow_ENABLE_MKL_SUPPORT)\n+    # add mkl dist dlls to system path for python\n+    # TODO: In current cmake version, PY_RUNTIME_ENV behaves strange with multiple paths,\n+    # so we have to specify only one path in it to work around the issue. We need this if/else\n+    # to protect overwriting CUDA environments\n+    set(PY_RUNTIME_ENV ${mkl_BIN_DIRS})\n+    add_custom_command(", "path": "tensorflow/contrib/cmake/tf_python.cmake", "position": 39, "original_position": 28, "commit_id": "0eaef273d91f149cae8a0a45893a4af32735bdee", "original_commit_id": "f63d264a977784a7ea9bc41b132689e9df630eca", "user": {"login": "LoSealL", "id": 11640576, "node_id": "MDQ6VXNlcjExNjQwNTc2", "avatar_url": "https://avatars3.githubusercontent.com/u/11640576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LoSealL", "html_url": "https://github.com/LoSealL", "followers_url": "https://api.github.com/users/LoSealL/followers", "following_url": "https://api.github.com/users/LoSealL/following{/other_user}", "gists_url": "https://api.github.com/users/LoSealL/gists{/gist_id}", "starred_url": "https://api.github.com/users/LoSealL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LoSealL/subscriptions", "organizations_url": "https://api.github.com/users/LoSealL/orgs", "repos_url": "https://api.github.com/users/LoSealL/repos", "events_url": "https://api.github.com/users/LoSealL/events{/privacy}", "received_events_url": "https://api.github.com/users/LoSealL/received_events", "type": "User", "site_admin": false}, "body": "@mrry It's a work-around \r\n```cmake\r\nadd_custom_command(\r\n...\r\n  COMMAND ${CMAKE_COMMAND} -E env PYTHONPATH=${CMAKE_CURRENT_BINARY_DIR}/tf_python PATH=${PY_RUNTIME_ENV} \r\n...\r\n)\r\n```\r\nwhere `PATH=${PY_RUNTIME_ENV}` can only pass one path as argument successfully. If wrap more than one paths, separated by `;`, cmake somehow parse the variable and remove `;`, hence causing this sentence failed on executing.\r\n\r\nSo I only set MKL library path to it, which however will overwrite CUDA path. AFAIK, MKL doesn't compile with CUDA, and vice versa. So if CUDA enabled, `tensorflow_ENABLE_MKL_SUPPORT` must be disabled, and I don't want to overwrite CUDA path.\r\n\r\n**P.S**\r\nin the `else()` block, there's no `PATH=...`, so path in system is kept.", "created_at": "2018-06-07T06:25:29Z", "updated_at": "2018-06-13T08:40:26Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/19715#discussion_r193636846", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19715", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/193636846"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/19715#discussion_r193636846"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19715"}}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a> It's a work-around</p>\n<div class=\"highlight highlight-source-cmake\"><pre><span class=\"pl-c1\">add_custom_command</span>(\n...\n  <span class=\"pl-k\">COMMAND</span> <span class=\"pl-smi\">${CMAKE_COMMAND}</span> -E env PYTHONPATH=<span class=\"pl-smi\">${CMAKE_CURRENT_BINARY_DIR}</span>/tf_python PATH=<span class=\"pl-smi\">${PY_RUNTIME_ENV}</span> \n...\n)</pre></div>\n<p>where <code>PATH=${PY_RUNTIME_ENV}</code> can only pass one path as argument successfully. If wrap more than one paths, separated by <code>;</code>, cmake somehow parse the variable and remove <code>;</code>, hence causing this sentence failed on executing.</p>\n<p>So I only set MKL library path to it, which however will overwrite CUDA path. AFAIK, MKL doesn't compile with CUDA, and vice versa. So if CUDA enabled, <code>tensorflow_ENABLE_MKL_SUPPORT</code> must be disabled, and I don't want to overwrite CUDA path.</p>\n<p><strong>P.S</strong><br>\nin the <code>else()</code> block, there's no <code>PATH=...</code>, so path in system is kept.</p>", "body_text": "@mrry It's a work-around\nadd_custom_command(\n...\n  COMMAND ${CMAKE_COMMAND} -E env PYTHONPATH=${CMAKE_CURRENT_BINARY_DIR}/tf_python PATH=${PY_RUNTIME_ENV} \n...\n)\nwhere PATH=${PY_RUNTIME_ENV} can only pass one path as argument successfully. If wrap more than one paths, separated by ;, cmake somehow parse the variable and remove ;, hence causing this sentence failed on executing.\nSo I only set MKL library path to it, which however will overwrite CUDA path. AFAIK, MKL doesn't compile with CUDA, and vice versa. So if CUDA enabled, tensorflow_ENABLE_MKL_SUPPORT must be disabled, and I don't want to overwrite CUDA path.\nP.S\nin the else() block, there's no PATH=..., so path in system is kept.", "in_reply_to_id": 193574171}