{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17671", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17671/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17671/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17671/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17671", "id": 304649778, "node_id": "MDU6SXNzdWUzMDQ2NDk3Nzg=", "number": 17671, "title": "concat puts gradients as 0.0", "user": {"login": "sarthmit", "id": 19748754, "node_id": "MDQ6VXNlcjE5NzQ4NzU0", "avatar_url": "https://avatars3.githubusercontent.com/u/19748754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sarthmit", "html_url": "https://github.com/sarthmit", "followers_url": "https://api.github.com/users/sarthmit/followers", "following_url": "https://api.github.com/users/sarthmit/following{/other_user}", "gists_url": "https://api.github.com/users/sarthmit/gists{/gist_id}", "starred_url": "https://api.github.com/users/sarthmit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sarthmit/subscriptions", "organizations_url": "https://api.github.com/users/sarthmit/orgs", "repos_url": "https://api.github.com/users/sarthmit/repos", "events_url": "https://api.github.com/users/sarthmit/events{/privacy}", "received_events_url": "https://api.github.com/users/sarthmit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-03-13T07:06:34Z", "updated_at": "2018-05-16T23:12:34Z", "closed_at": "2018-05-16T23:12:34Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.5.0</li>\n<li><strong>Python version</strong>: 2.7</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.11.0</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: 5.4.0</li>\n<li><strong>CUDA/cuDNN version</strong>: CuDA 9.0</li>\n<li><strong>GPU model and memory</strong>: 4Gb, Nvidia GTX960M</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>When I write delt to get gradients of pi with respect to v, I get the gradients. Same for rem with respect to v. However, when I ask for gradients of z with respect to v, I get a matrix of 0s, which is clearly not the gradient as z is just the concatenation of pi and rem, both of which have non-zero gradients. Why is this happening?</p>\n<h3>Source code / logs</h3>\n<pre><code>def latent_space(v):\n\t# Calculate pi\n\twith tf.name_scope('pi'):\n\t\tdef fn(previous_output,current_input):\n\t\t\t[stick,remaining] = previous_output\n\t\t\ti = current_input\n\t\t\tstick = v[:,i]*remaining\n\t\t\tremaining *= (1-v[:,i])\n\t\t\treturn [stick,remaining]\n\n\t\telems = tf.Variable(tf.range(latent-1))\n\t\t[pi,rem] = tf.scan(fn,elems,initializer=[tf.ones([bs]),tf.ones([bs])])\n\t\trem = tf.reshape(rem[-1,:],[1,bs])\n\t\tz = tf.concat([pi,rem],axis=0)\n\t\tz = tf.transpose(z)\n\t\tdelt = tf.gradients(z,v)\n\treturn z,delt\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): 1.5.0\nPython version: 2.7\nBazel version (if compiling from source): 0.11.0\nGCC/Compiler version (if compiling from source): 5.4.0\nCUDA/cuDNN version: CuDA 9.0\nGPU model and memory: 4Gb, Nvidia GTX960M\nExact command to reproduce:\n\nDescribe the problem\nWhen I write delt to get gradients of pi with respect to v, I get the gradients. Same for rem with respect to v. However, when I ask for gradients of z with respect to v, I get a matrix of 0s, which is clearly not the gradient as z is just the concatenation of pi and rem, both of which have non-zero gradients. Why is this happening?\nSource code / logs\ndef latent_space(v):\n\t# Calculate pi\n\twith tf.name_scope('pi'):\n\t\tdef fn(previous_output,current_input):\n\t\t\t[stick,remaining] = previous_output\n\t\t\ti = current_input\n\t\t\tstick = v[:,i]*remaining\n\t\t\tremaining *= (1-v[:,i])\n\t\t\treturn [stick,remaining]\n\n\t\telems = tf.Variable(tf.range(latent-1))\n\t\t[pi,rem] = tf.scan(fn,elems,initializer=[tf.ones([bs]),tf.ones([bs])])\n\t\trem = tf.reshape(rem[-1,:],[1,bs])\n\t\tz = tf.concat([pi,rem],axis=0)\n\t\tz = tf.transpose(z)\n\t\tdelt = tf.gradients(z,v)\n\treturn z,delt", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.5.0\r\n- **Python version**: 2.7\r\n- **Bazel version (if compiling from source)**: 0.11.0\r\n- **GCC/Compiler version (if compiling from source)**: 5.4.0\r\n- **CUDA/cuDNN version**: CuDA 9.0\r\n- **GPU model and memory**: 4Gb, Nvidia GTX960M\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\nWhen I write delt to get gradients of pi with respect to v, I get the gradients. Same for rem with respect to v. However, when I ask for gradients of z with respect to v, I get a matrix of 0s, which is clearly not the gradient as z is just the concatenation of pi and rem, both of which have non-zero gradients. Why is this happening?\r\n\r\n\r\n### Source code / logs\r\n\r\n\tdef latent_space(v):\r\n\t\t# Calculate pi\r\n\t\twith tf.name_scope('pi'):\r\n\t\t\tdef fn(previous_output,current_input):\r\n\t\t\t\t[stick,remaining] = previous_output\r\n\t\t\t\ti = current_input\r\n\t\t\t\tstick = v[:,i]*remaining\r\n\t\t\t\tremaining *= (1-v[:,i])\r\n\t\t\t\treturn [stick,remaining]\r\n\r\n\t\t\telems = tf.Variable(tf.range(latent-1))\r\n\t\t\t[pi,rem] = tf.scan(fn,elems,initializer=[tf.ones([bs]),tf.ones([bs])])\r\n\t\t\trem = tf.reshape(rem[-1,:],[1,bs])\r\n\t\t\tz = tf.concat([pi,rem],axis=0)\r\n\t\t\tz = tf.transpose(z)\r\n\t\t\tdelt = tf.gradients(z,v)\r\n\t\treturn z,delt"}