{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/108699242", "pull_request_review_id": 29747240, "id": 108699242, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwODY5OTI0Mg==", "diff_hunk": "@@ -218,6 +220,50 @@ def __call__(self):\n     return feed_dict\n \n \n+class _GeneratorFeedFn(object):\n+    \"\"\"Creates feed dictionaries from `Generator` of `dicts` of numpy arrays.\"\"\"\n+\n+    def __init__(self,\n+                 placeholders,\n+                 generator,\n+                 batch_size,\n+                 random_start=False,\n+                 seed=None,\n+                 num_epochs=None):\n+        first_sample = next(generator())\n+        if len(placeholders) != len(first_sample):\n+            raise ValueError(\"Expected {} placeholders; got {}.\".format(\n+                len(first_sample), len(placeholders)))\n+        self._col_placeholders = placeholders\n+        self._generator_function = generator\n+        self._iterator = generator()\n+        self._batch_size = batch_size\n+        self._num_epochs = num_epochs\n+        self._epoch = 0\n+        random.seed(seed)\n+\n+    def __call__(self):\n+        if self._num_epochs and self._epoch >= self._num_epochs:\n+            raise errors.OutOfRangeError(\n+                None, None, \"Already emitted %s epochs.\" % self._epoch)\n+        list_dict = {}\n+        list_dict_size = 0\n+        while list_dict_size < self._batch_size:\n+            try:\n+                data_row = next(self._iterator)\n+            except StopIteration:\n+                self._epoch += 1\n+                self._iterator = self._generator_function()\n+                data_row = next(self._iterator)\n+            for index, key in enumerate(sorted(data_row.keys())):\n+                list_dict.setdefault(self._col_placeholders[index],\n+                                     list()).append(data_row[key])\n+            list_dict_size += 1\n+        feed_dict = {key: np.asarray(item)\n+                        for key, item in list(list_dict.items())}", "path": "tensorflow/python/estimator/inputs/queues/feeding_functions.py", "position": null, "original_position": 53, "commit_id": "075d7c4bb35bd4b44705cb0d473fed8300742405", "original_commit_id": "6634588fbd699a494f8c7e9e8c2725e006b012af", "user": {"login": "agistrueai", "id": 23721105, "node_id": "MDQ6VXNlcjIzNzIxMTA1", "avatar_url": "https://avatars3.githubusercontent.com/u/23721105?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agistrueai", "html_url": "https://github.com/agistrueai", "followers_url": "https://api.github.com/users/agistrueai/followers", "following_url": "https://api.github.com/users/agistrueai/following{/other_user}", "gists_url": "https://api.github.com/users/agistrueai/gists{/gist_id}", "starred_url": "https://api.github.com/users/agistrueai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agistrueai/subscriptions", "organizations_url": "https://api.github.com/users/agistrueai/orgs", "repos_url": "https://api.github.com/users/agistrueai/repos", "events_url": "https://api.github.com/users/agistrueai/events{/privacy}", "received_events_url": "https://api.github.com/users/agistrueai/received_events", "type": "User", "site_admin": false}, "body": "Done. ", "created_at": "2017-03-29T14:58:30Z", "updated_at": "2017-03-30T06:43:17Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/7045#discussion_r108699242", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/7045", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/108699242"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/7045#discussion_r108699242"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/7045"}}, "body_html": "<p>Done.</p>", "body_text": "Done.", "in_reply_to_id": 108552477}