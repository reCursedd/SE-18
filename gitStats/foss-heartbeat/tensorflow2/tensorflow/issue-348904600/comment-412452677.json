{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/412452677", "html_url": "https://github.com/tensorflow/tensorflow/issues/21492#issuecomment-412452677", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21492", "id": 412452677, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjQ1MjY3Nw==", "user": {"login": "superbobry", "id": 185856, "node_id": "MDQ6VXNlcjE4NTg1Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/185856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/superbobry", "html_url": "https://github.com/superbobry", "followers_url": "https://api.github.com/users/superbobry/followers", "following_url": "https://api.github.com/users/superbobry/following{/other_user}", "gists_url": "https://api.github.com/users/superbobry/gists{/gist_id}", "starred_url": "https://api.github.com/users/superbobry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/superbobry/subscriptions", "organizations_url": "https://api.github.com/users/superbobry/orgs", "repos_url": "https://api.github.com/users/superbobry/repos", "events_url": "https://api.github.com/users/superbobry/events{/privacy}", "received_events_url": "https://api.github.com/users/superbobry/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-13T08:58:52Z", "updated_at": "2018-08-13T08:58:52Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1184671\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/xiejw\">@xiejw</a> I thought about this more over a weekend and came up with another use-case for preemption: port reservation.</p>\n<p>YARN does not manage the network on the containers, so in order to run TF on YARN one has to manually reserve a port on each of the allocated containers, communicate it to all other tasks to assemble a <code>ClusterSpec</code> and only then start the server. IIUC with the current API there is no race-free way of doing this is in TF. Could you advise?</p>", "body_text": "@xiejw I thought about this more over a weekend and came up with another use-case for preemption: port reservation.\nYARN does not manage the network on the containers, so in order to run TF on YARN one has to manually reserve a port on each of the allocated containers, communicate it to all other tasks to assemble a ClusterSpec and only then start the server. IIUC with the current API there is no race-free way of doing this is in TF. Could you advise?", "body": "@xiejw I thought about this more over a weekend and came up with another use-case for preemption: port reservation. \r\n\r\nYARN does not manage the network on the containers, so in order to run TF on YARN one has to manually reserve a port on each of the allocated containers, communicate it to all other tasks to assemble a `ClusterSpec` and only then start the server. IIUC with the current API there is no race-free way of doing this is in TF. Could you advise?\r\n"}