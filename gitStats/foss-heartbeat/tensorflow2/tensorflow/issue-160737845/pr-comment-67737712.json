{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/67737712", "pull_request_review_id": null, "id": 67737712, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NzM3NzEy", "diff_hunk": "@@ -40,6 +40,36 @@ EIGEN_DEVICE_FUNC inline Packet pexpand_bf16_u(const Packet& from) {\n   return reinterpret_cast<const float&>(tmp);\n }\n \n+// Specialization non-scalar version on non-sse.\n+#ifndef EIGEN_VECTORIZE_SSE2\n+template <typename Packet>\n+EIGEN_DEVICE_FUNC inline Packet4f pexpand_bf16_l(const Packet4f& from) {\n+  Packet4f res;", "path": "tensorflow/core/kernels/sparse_matmul_op.h", "position": null, "original_position": 8, "commit_id": "e1bdac551714fc3ec31a8f0766582fdcdb9c7ca6", "original_commit_id": "a1de95f38b442b0534f1f8871bc5cb16390725ae", "user": {"login": "benoitsteiner", "id": 6969686, "node_id": "MDQ6VXNlcjY5Njk2ODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6969686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benoitsteiner", "html_url": "https://github.com/benoitsteiner", "followers_url": "https://api.github.com/users/benoitsteiner/followers", "following_url": "https://api.github.com/users/benoitsteiner/following{/other_user}", "gists_url": "https://api.github.com/users/benoitsteiner/gists{/gist_id}", "starred_url": "https://api.github.com/users/benoitsteiner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benoitsteiner/subscriptions", "organizations_url": "https://api.github.com/users/benoitsteiner/orgs", "repos_url": "https://api.github.com/users/benoitsteiner/repos", "events_url": "https://api.github.com/users/benoitsteiner/events{/privacy}", "received_events_url": "https://api.github.com/users/benoitsteiner/received_events", "type": "User", "site_admin": false}, "body": "The packet4f struct should remain opaque. A more portable version of the code would be:\nfloat r[4];\npstoreu(r, from);\nfloat p[4];\n p[0] = static_cast<float>((r[0] << 16) & 0xffff0000);\n p[1] = static_cast<float>(r[0] & 0xffff0000);\n p[2] = static_cast<float>((r[1] << 16) & 0xffff0000);\n p[3] = static_cast<float>(r[1] & 0xffff0000);\nreturn ploadu(p);\n", "created_at": "2016-06-20T18:08:27Z", "updated_at": "2016-06-20T22:36:55Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/2911#discussion_r67737712", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/2911", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/67737712"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/2911#discussion_r67737712"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/2911"}}, "body_html": "<p>The packet4f struct should remain opaque. A more portable version of the code would be:<br>\nfloat r[4];<br>\npstoreu(r, from);<br>\nfloat p[4];<br>\np[0] = static_cast((r[0] &lt;&lt; 16) &amp; 0xffff0000);<br>\np[1] = static_cast(r[0] &amp; 0xffff0000);<br>\np[2] = static_cast((r[1] &lt;&lt; 16) &amp; 0xffff0000);<br>\np[3] = static_cast(r[1] &amp; 0xffff0000);<br>\nreturn ploadu(p);</p>", "body_text": "The packet4f struct should remain opaque. A more portable version of the code would be:\nfloat r[4];\npstoreu(r, from);\nfloat p[4];\np[0] = static_cast((r[0] << 16) & 0xffff0000);\np[1] = static_cast(r[0] & 0xffff0000);\np[2] = static_cast((r[1] << 16) & 0xffff0000);\np[3] = static_cast(r[1] & 0xffff0000);\nreturn ploadu(p);"}