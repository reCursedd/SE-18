{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/253722281", "html_url": "https://github.com/tensorflow/tensorflow/issues/2455#issuecomment-253722281", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2455", "id": 253722281, "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzcyMjI4MQ==", "user": {"login": "tongda", "id": 653425, "node_id": "MDQ6VXNlcjY1MzQyNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/653425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tongda", "html_url": "https://github.com/tongda", "followers_url": "https://api.github.com/users/tongda/followers", "following_url": "https://api.github.com/users/tongda/following{/other_user}", "gists_url": "https://api.github.com/users/tongda/gists{/gist_id}", "starred_url": "https://api.github.com/users/tongda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tongda/subscriptions", "organizations_url": "https://api.github.com/users/tongda/orgs", "repos_url": "https://api.github.com/users/tongda/repos", "events_url": "https://api.github.com/users/tongda/events{/privacy}", "received_events_url": "https://api.github.com/users/tongda/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-14T06:44:39Z", "updated_at": "2016-10-14T06:44:39Z", "author_association": "NONE", "body_html": "<p>Hi, I got a similar problem.</p>\n<p>Operating System: macOS 10.12</p>\n<p>Installed version of CUDA and cuDNN: None</p>\n<p>TensorFlow 0.11.0 installed from source.</p>\n<p>I followed the <a href=\"https://www.tensorflow.org/versions/r0.11/how_tos/adding_an_op/index.html\" rel=\"nofollow\">add new op</a> tutorial, adding zero_out.cc file:</p>\n<pre><code>#include \"tensorflow/core/framework/op.h\"\n\nREGISTER_OP(\"ZeroOut\")\n    .Input(\"to_zero: int32\")\n    .Output(\"zeroed: int32\");\n\n#include \"tensorflow/core/framework/op_kernel.h\"\n\nusing namespace tensorflow;\n\nclass ZeroOutOp : public OpKernel {\n public:\n  explicit ZeroOutOp(OpKernelConstruction* context) : OpKernel(context) {}\n\n  void Compute(OpKernelContext* context) override {\n    // Grab the input tensor\n    const Tensor&amp; input_tensor = context-&gt;input(0);\n    auto input = input_tensor.flat&lt;int32&gt;();\n\n    // Create an output tensor\n    Tensor* output_tensor = NULL;\n    OP_REQUIRES_OK(context, context-&gt;allocate_output(0, input_tensor.shape(),\n                                                     &amp;output_tensor));\n    auto output = output_tensor-&gt;flat&lt;int32&gt;();\n\n    // Set all but the first element of the output tensor to 0.\n    const int N = input.size();\n    for (int i = 1; i &lt; N; i++) {\n      output(i) = 0;\n    }\n\n    // Preserve the first input value if possible.\n    if (N &gt; 0) output(0) = input(0);\n  }\n};\n\nREGISTER_KERNEL_BUILDER(Name(\"ZeroOut\").Device(DEVICE_CPU), ZeroOutOp);\n</code></pre>\n<p>and bazel BUILD file:</p>\n<pre><code>load(\"//tensorflow:tensorflow.bzl\", \"tf_custom_op_library\")\n\ntf_custom_op_library(\n    name = \"zero_out.so\",\n    srcs = [\"zero_out.cc\"]\n)\n</code></pre>\n<p>then I run:</p>\n<pre><code>bazel build -c opt //tensorflow/core/user_ops:zero_out.so\n</code></pre>\n<p>output:</p>\n<pre><code>INFO: Waiting for response from Bazel server (pid 28589)...\nINFO: Found 1 target...\nTarget //tensorflow/core/user_ops:zero_out.so up-to-date:\n  bazel-bin/tensorflow/core/user_ops/zero_out.so\nINFO: Elapsed time: 5.115s, Critical Path: 0.00s\n</code></pre>\n<p>The generated shared library located in bazel-bin. When I tried to load it like this:</p>\n<pre><code>tf.load_op_library('/Users/dtong/code/data/tensorflow/bazel-bin/tensorflow/core/user_ops/zero_out.so')\n</code></pre>\n<p>the result:</p>\n<pre><code>python(41716,0x7fffb7e123c0) malloc: *** error for object 0x7f9e9cd2de18: pointer being freed was not allocated\n*** set a breakpoint in malloc_error_break to debug\n</code></pre>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=229914\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/keveman\">@keveman</a> could you please help take a look at this problem?</p>", "body_text": "Hi, I got a similar problem.\nOperating System: macOS 10.12\nInstalled version of CUDA and cuDNN: None\nTensorFlow 0.11.0 installed from source.\nI followed the add new op tutorial, adding zero_out.cc file:\n#include \"tensorflow/core/framework/op.h\"\n\nREGISTER_OP(\"ZeroOut\")\n    .Input(\"to_zero: int32\")\n    .Output(\"zeroed: int32\");\n\n#include \"tensorflow/core/framework/op_kernel.h\"\n\nusing namespace tensorflow;\n\nclass ZeroOutOp : public OpKernel {\n public:\n  explicit ZeroOutOp(OpKernelConstruction* context) : OpKernel(context) {}\n\n  void Compute(OpKernelContext* context) override {\n    // Grab the input tensor\n    const Tensor& input_tensor = context->input(0);\n    auto input = input_tensor.flat<int32>();\n\n    // Create an output tensor\n    Tensor* output_tensor = NULL;\n    OP_REQUIRES_OK(context, context->allocate_output(0, input_tensor.shape(),\n                                                     &output_tensor));\n    auto output = output_tensor->flat<int32>();\n\n    // Set all but the first element of the output tensor to 0.\n    const int N = input.size();\n    for (int i = 1; i < N; i++) {\n      output(i) = 0;\n    }\n\n    // Preserve the first input value if possible.\n    if (N > 0) output(0) = input(0);\n  }\n};\n\nREGISTER_KERNEL_BUILDER(Name(\"ZeroOut\").Device(DEVICE_CPU), ZeroOutOp);\n\nand bazel BUILD file:\nload(\"//tensorflow:tensorflow.bzl\", \"tf_custom_op_library\")\n\ntf_custom_op_library(\n    name = \"zero_out.so\",\n    srcs = [\"zero_out.cc\"]\n)\n\nthen I run:\nbazel build -c opt //tensorflow/core/user_ops:zero_out.so\n\noutput:\nINFO: Waiting for response from Bazel server (pid 28589)...\nINFO: Found 1 target...\nTarget //tensorflow/core/user_ops:zero_out.so up-to-date:\n  bazel-bin/tensorflow/core/user_ops/zero_out.so\nINFO: Elapsed time: 5.115s, Critical Path: 0.00s\n\nThe generated shared library located in bazel-bin. When I tried to load it like this:\ntf.load_op_library('/Users/dtong/code/data/tensorflow/bazel-bin/tensorflow/core/user_ops/zero_out.so')\n\nthe result:\npython(41716,0x7fffb7e123c0) malloc: *** error for object 0x7f9e9cd2de18: pointer being freed was not allocated\n*** set a breakpoint in malloc_error_break to debug\n\n@keveman could you please help take a look at this problem?", "body": "Hi, I got a similar problem.\n\nOperating System: macOS 10.12\n\nInstalled version of CUDA and cuDNN: None\n\nTensorFlow 0.11.0 installed from source.\n\nI followed the [add new op](https://www.tensorflow.org/versions/r0.11/how_tos/adding_an_op/index.html) tutorial, adding zero_out.cc file:\n\n```\n#include \"tensorflow/core/framework/op.h\"\n\nREGISTER_OP(\"ZeroOut\")\n    .Input(\"to_zero: int32\")\n    .Output(\"zeroed: int32\");\n\n#include \"tensorflow/core/framework/op_kernel.h\"\n\nusing namespace tensorflow;\n\nclass ZeroOutOp : public OpKernel {\n public:\n  explicit ZeroOutOp(OpKernelConstruction* context) : OpKernel(context) {}\n\n  void Compute(OpKernelContext* context) override {\n    // Grab the input tensor\n    const Tensor& input_tensor = context->input(0);\n    auto input = input_tensor.flat<int32>();\n\n    // Create an output tensor\n    Tensor* output_tensor = NULL;\n    OP_REQUIRES_OK(context, context->allocate_output(0, input_tensor.shape(),\n                                                     &output_tensor));\n    auto output = output_tensor->flat<int32>();\n\n    // Set all but the first element of the output tensor to 0.\n    const int N = input.size();\n    for (int i = 1; i < N; i++) {\n      output(i) = 0;\n    }\n\n    // Preserve the first input value if possible.\n    if (N > 0) output(0) = input(0);\n  }\n};\n\nREGISTER_KERNEL_BUILDER(Name(\"ZeroOut\").Device(DEVICE_CPU), ZeroOutOp);\n```\n\nand bazel BUILD file:\n\n```\nload(\"//tensorflow:tensorflow.bzl\", \"tf_custom_op_library\")\n\ntf_custom_op_library(\n    name = \"zero_out.so\",\n    srcs = [\"zero_out.cc\"]\n)\n```\n\nthen I run:\n\n```\nbazel build -c opt //tensorflow/core/user_ops:zero_out.so\n```\n\noutput:\n\n```\nINFO: Waiting for response from Bazel server (pid 28589)...\nINFO: Found 1 target...\nTarget //tensorflow/core/user_ops:zero_out.so up-to-date:\n  bazel-bin/tensorflow/core/user_ops/zero_out.so\nINFO: Elapsed time: 5.115s, Critical Path: 0.00s\n```\n\nThe generated shared library located in bazel-bin. When I tried to load it like this:\n\n```\ntf.load_op_library('/Users/dtong/code/data/tensorflow/bazel-bin/tensorflow/core/user_ops/zero_out.so')\n```\n\nthe result:\n\n```\npython(41716,0x7fffb7e123c0) malloc: *** error for object 0x7f9e9cd2de18: pointer being freed was not allocated\n*** set a breakpoint in malloc_error_break to debug\n```\n\n@keveman could you please help take a look at this problem?\n"}