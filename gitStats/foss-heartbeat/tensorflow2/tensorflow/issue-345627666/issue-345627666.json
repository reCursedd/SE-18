{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21233", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21233/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21233/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21233/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21233", "id": 345627666, "node_id": "MDU6SXNzdWUzNDU2Mjc2NjY=", "number": 21233, "title": "report the tf.boolean_mask runtime problem", "user": {"login": "yemaosheng-roadstar", "id": 39898274, "node_id": "MDQ6VXNlcjM5ODk4Mjc0", "avatar_url": "https://avatars2.githubusercontent.com/u/39898274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yemaosheng-roadstar", "html_url": "https://github.com/yemaosheng-roadstar", "followers_url": "https://api.github.com/users/yemaosheng-roadstar/followers", "following_url": "https://api.github.com/users/yemaosheng-roadstar/following{/other_user}", "gists_url": "https://api.github.com/users/yemaosheng-roadstar/gists{/gist_id}", "starred_url": "https://api.github.com/users/yemaosheng-roadstar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yemaosheng-roadstar/subscriptions", "organizations_url": "https://api.github.com/users/yemaosheng-roadstar/orgs", "repos_url": "https://api.github.com/users/yemaosheng-roadstar/repos", "events_url": "https://api.github.com/users/yemaosheng-roadstar/events{/privacy}", "received_events_url": "https://api.github.com/users/yemaosheng-roadstar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tatianashp", "id": 986732, "node_id": "MDQ6VXNlcjk4NjczMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/986732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianashp", "html_url": "https://github.com/tatianashp", "followers_url": "https://api.github.com/users/tatianashp/followers", "following_url": "https://api.github.com/users/tatianashp/following{/other_user}", "gists_url": "https://api.github.com/users/tatianashp/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianashp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianashp/subscriptions", "organizations_url": "https://api.github.com/users/tatianashp/orgs", "repos_url": "https://api.github.com/users/tatianashp/repos", "events_url": "https://api.github.com/users/tatianashp/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianashp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-07-30T06:30:41Z", "updated_at": "2018-11-14T19:23:52Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>System information</p>\n<pre><code>Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04.5 LTS (Xenial Xerus)\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A\nTensorFlow installed from (source or binary): pip (binary)\nTensorFlow version (use command below): (tf.GIT_VERSION, tf.VERSION) == ('v1.9.0-0-g25c197e023', '1.9.0')\nPython version: 2.7.12\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: 9.0/6.1\nGPU model and memory: NVIDIA GeForce GTX 1080Ti 11177MiB\nExact command to reproduce: tf.boolean_mask\n</code></pre>\n<p>Describe the problem<br>\nI found the tf.boolean_mask() espect the same dimension of input, but when the shape of data passed to the function is None, the graph will be built successfully. But when shape of input data is different, it runs successfully. I think it may cause some problems.</p>\n<p>Code.</p>\n<pre lang=\"import\" data-meta=\"tensorflow as tf\"><code>import numpy as np\n\nx = tf.placeholder(tf.float32, [None, 3])\ny = tf.placeholder(tf.float32, [None, 3])\n\nmask = x[:, 0] &gt; 0.1\nx_gather = tf.boolean_mask(x, mask)\ny_gather = tf.boolean_mask(y, mask)\n\ndata_x = np.array([\n  [0, 1, 2],\n  [1., 2., 3.],\n  [4., 2, 3.]])\ndata_y = np.array([\n  [0, 1, 2],\n  [11., 2., 3.] )\nwith tf.Session() as sess:\n  print(sess.run(y_gather, feed_dict={x: data_x, y: data_y}))\n  print(sess.run(x_gather, feed_dict={x: data_x, y: data_y}))\n\nit outputs\n [[11.  2.  3.]\n [ 0.  0.  0.]]\n[[1. 2. 3.]\n [4. 2. 3.]] rather than throw a shape error\n    \n</code></pre>", "body_text": "System information\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04.5 LTS (Xenial Xerus)\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A\nTensorFlow installed from (source or binary): pip (binary)\nTensorFlow version (use command below): (tf.GIT_VERSION, tf.VERSION) == ('v1.9.0-0-g25c197e023', '1.9.0')\nPython version: 2.7.12\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): N/A\nCUDA/cuDNN version: 9.0/6.1\nGPU model and memory: NVIDIA GeForce GTX 1080Ti 11177MiB\nExact command to reproduce: tf.boolean_mask\n\nDescribe the problem\nI found the tf.boolean_mask() espect the same dimension of input, but when the shape of data passed to the function is None, the graph will be built successfully. But when shape of input data is different, it runs successfully. I think it may cause some problems.\nCode.\nimport numpy as np\n\nx = tf.placeholder(tf.float32, [None, 3])\ny = tf.placeholder(tf.float32, [None, 3])\n\nmask = x[:, 0] > 0.1\nx_gather = tf.boolean_mask(x, mask)\ny_gather = tf.boolean_mask(y, mask)\n\ndata_x = np.array([\n  [0, 1, 2],\n  [1., 2., 3.],\n  [4., 2, 3.]])\ndata_y = np.array([\n  [0, 1, 2],\n  [11., 2., 3.] )\nwith tf.Session() as sess:\n  print(sess.run(y_gather, feed_dict={x: data_x, y: data_y}))\n  print(sess.run(x_gather, feed_dict={x: data_x, y: data_y}))\n\nit outputs\n [[11.  2.  3.]\n [ 0.  0.  0.]]\n[[1. 2. 3.]\n [4. 2. 3.]] rather than throw a shape error", "body": "System information\r\n\r\n    Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\r\n    OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04.5 LTS (Xenial Xerus)\r\n    Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: N/A\r\n    TensorFlow installed from (source or binary): pip (binary)\r\n    TensorFlow version (use command below): (tf.GIT_VERSION, tf.VERSION) == ('v1.9.0-0-g25c197e023', '1.9.0')\r\n    Python version: 2.7.12\r\n    Bazel version (if compiling from source): N/A\r\n    GCC/Compiler version (if compiling from source): N/A\r\n    CUDA/cuDNN version: 9.0/6.1\r\n    GPU model and memory: NVIDIA GeForce GTX 1080Ti 11177MiB\r\n    Exact command to reproduce: tf.boolean_mask\r\n\r\nDescribe the problem\r\n    I found the tf.boolean_mask() espect the same dimension of input, but when the shape of data passed to the function is None, the graph will be built successfully. But when shape of input data is different, it runs successfully. I think it may cause some problems.\r\n\r\nCode.\r\n```import tensorflow as tf\r\nimport numpy as np\r\n\r\nx = tf.placeholder(tf.float32, [None, 3])\r\ny = tf.placeholder(tf.float32, [None, 3])\r\n\r\nmask = x[:, 0] > 0.1\r\nx_gather = tf.boolean_mask(x, mask)\r\ny_gather = tf.boolean_mask(y, mask)\r\n\r\ndata_x = np.array([\r\n  [0, 1, 2],\r\n  [1., 2., 3.],\r\n  [4., 2, 3.]])\r\ndata_y = np.array([\r\n  [0, 1, 2],\r\n  [11., 2., 3.] )\r\nwith tf.Session() as sess:\r\n  print(sess.run(y_gather, feed_dict={x: data_x, y: data_y}))\r\n  print(sess.run(x_gather, feed_dict={x: data_x, y: data_y}))\r\n\r\nit outputs\r\n [[11.  2.  3.]\r\n [ 0.  0.  0.]]\r\n[[1. 2. 3.]\r\n [4. 2. 3.]] rather than throw a shape error\r\n    \r\n"}