{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/327968033", "html_url": "https://github.com/tensorflow/tensorflow/issues/12876#issuecomment-327968033", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12876", "id": 327968033, "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzk2ODAzMw==", "user": {"login": "quaeler", "id": 22581048, "node_id": "MDQ6VXNlcjIyNTgxMDQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/22581048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quaeler", "html_url": "https://github.com/quaeler", "followers_url": "https://api.github.com/users/quaeler/followers", "following_url": "https://api.github.com/users/quaeler/following{/other_user}", "gists_url": "https://api.github.com/users/quaeler/gists{/gist_id}", "starred_url": "https://api.github.com/users/quaeler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quaeler/subscriptions", "organizations_url": "https://api.github.com/users/quaeler/orgs", "repos_url": "https://api.github.com/users/quaeler/repos", "events_url": "https://api.github.com/users/quaeler/events{/privacy}", "received_events_url": "https://api.github.com/users/quaeler/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-08T00:42:27Z", "updated_at": "2017-09-08T00:42:27Z", "author_association": "CONTRIBUTOR", "body_html": "<p>This is a problem at the ProtocolBuffer layer. (<a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=577277\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/martinwicke\">@martinwicke</a> i don't know who to tag about this)</p>\n<p>If i do the following using your code:</p>\n<pre><code>def main(unused_argv):\n\texample = make_example([3, 5, 7], [4, 6, 8], 4.3)\n\tprint example\n\t\n\tserialized = example.SerializeToString()\n\n\treconstituted = tf.train.SequenceExample()\n\treconstituted.ParseFromString(serialized)\n\tprint reconstituted\n\t\n\tsomething, label = _parse_function(serialized)\n\tresult = tf.contrib.learn.run_n({\"label\": label})\n\tprint result\n</code></pre>\n<p>I'll get:</p>\n<pre><code>context {\n  feature {\n    key: \"label\"\n    value {\n      float_list {\n        value: 4.3\n      }\n    }\n  }\n...\n</code></pre>\n<p>for <code>example</code>, and</p>\n<pre><code>context {\n  feature {\n    key: \"label\"\n    value {\n      float_list {\n        value: 4.30000019073\n      }\n    }\n  }\n...\n</code></pre>\n<p>for <code>reconstituted</code> (and ultimately <code>[{'label': 4.3000002}]</code> for <code>result</code>)</p>\n<p>I ran this against Python 2.7.10, and TF built from source from the head of master 5 days ago.</p>", "body_text": "This is a problem at the ProtocolBuffer layer. (@martinwicke i don't know who to tag about this)\nIf i do the following using your code:\ndef main(unused_argv):\n\texample = make_example([3, 5, 7], [4, 6, 8], 4.3)\n\tprint example\n\t\n\tserialized = example.SerializeToString()\n\n\treconstituted = tf.train.SequenceExample()\n\treconstituted.ParseFromString(serialized)\n\tprint reconstituted\n\t\n\tsomething, label = _parse_function(serialized)\n\tresult = tf.contrib.learn.run_n({\"label\": label})\n\tprint result\n\nI'll get:\ncontext {\n  feature {\n    key: \"label\"\n    value {\n      float_list {\n        value: 4.3\n      }\n    }\n  }\n...\n\nfor example, and\ncontext {\n  feature {\n    key: \"label\"\n    value {\n      float_list {\n        value: 4.30000019073\n      }\n    }\n  }\n...\n\nfor reconstituted (and ultimately [{'label': 4.3000002}] for result)\nI ran this against Python 2.7.10, and TF built from source from the head of master 5 days ago.", "body": "This is a problem at the ProtocolBuffer layer. (@martinwicke i don't know who to tag about this)\r\n\r\nIf i do the following using your code:\r\n```\r\ndef main(unused_argv):\r\n\texample = make_example([3, 5, 7], [4, 6, 8], 4.3)\r\n\tprint example\r\n\t\r\n\tserialized = example.SerializeToString()\r\n\r\n\treconstituted = tf.train.SequenceExample()\r\n\treconstituted.ParseFromString(serialized)\r\n\tprint reconstituted\r\n\t\r\n\tsomething, label = _parse_function(serialized)\r\n\tresult = tf.contrib.learn.run_n({\"label\": label})\r\n\tprint result\r\n```\r\n\r\nI'll get:\r\n```\r\ncontext {\r\n  feature {\r\n    key: \"label\"\r\n    value {\r\n      float_list {\r\n        value: 4.3\r\n      }\r\n    }\r\n  }\r\n...\r\n```\r\nfor `example`, and\r\n```\r\ncontext {\r\n  feature {\r\n    key: \"label\"\r\n    value {\r\n      float_list {\r\n        value: 4.30000019073\r\n      }\r\n    }\r\n  }\r\n...\r\n```\r\nfor `reconstituted` (and ultimately `[{'label': 4.3000002}]` for `result`)\r\n\r\nI ran this against Python 2.7.10, and TF built from source from the head of master 5 days ago.\r\n"}