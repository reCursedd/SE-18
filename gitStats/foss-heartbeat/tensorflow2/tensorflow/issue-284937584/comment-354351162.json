{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/354351162", "html_url": "https://github.com/tensorflow/tensorflow/issues/15697#issuecomment-354351162", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15697", "id": 354351162, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDM1MTE2Mg==", "user": {"login": "Bihaqo", "id": 5630697, "node_id": "MDQ6VXNlcjU2MzA2OTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5630697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bihaqo", "html_url": "https://github.com/Bihaqo", "followers_url": "https://api.github.com/users/Bihaqo/followers", "following_url": "https://api.github.com/users/Bihaqo/following{/other_user}", "gists_url": "https://api.github.com/users/Bihaqo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bihaqo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bihaqo/subscriptions", "organizations_url": "https://api.github.com/users/Bihaqo/orgs", "repos_url": "https://api.github.com/users/Bihaqo/repos", "events_url": "https://api.github.com/users/Bihaqo/events{/privacy}", "received_events_url": "https://api.github.com/users/Bihaqo/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-28T20:11:30Z", "updated_at": "2017-12-28T20:11:30Z", "author_association": "CONTRIBUTOR", "body_html": "<p>It still very slow with the static graph approach above as well. Also, copying memory doesn't explain the operation being <em>that</em> slower (10000x!): e.g. tf.tile(b, [1, 2, 1, 1, 1, 1, 1]).op (which should be much slower if memory copying is the bottleneck) takes 261 ms while transpose takes 7.9 s.</p>\n<p>My friend <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=11041610\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mfigurnov\">@mfigurnov</a> suggests that the reason for this behavior may be here: <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/f284c708a8f3e2672d41dd3e7f6f03b9d26f0c80/tensorflow/core/kernels/transpose_functor_cpu.cc#L70\">tensorflow/tensorflow/core/kernels/transpose_functor_cpu.cc</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 70\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/f284c708a8f3e2672d41dd3e7f6f03b9d26f0c80\">f284c70</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L70\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"70\"></td>\n          <td id=\"LC70\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">template </span>&lt;<span class=\"pl-k\">typename</span> T, <span class=\"pl-k\">bool</span> conjugate&gt; </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>For &lt;= 5 dimension tf uses efficient transpose, and in other cases, it uses some baseline code.</p>", "body_text": "It still very slow with the static graph approach above as well. Also, copying memory doesn't explain the operation being that slower (10000x!): e.g. tf.tile(b, [1, 2, 1, 1, 1, 1, 1]).op (which should be much slower if memory copying is the bottleneck) takes 261 ms while transpose takes 7.9 s.\nMy friend @mfigurnov suggests that the reason for this behavior may be here: \n  \n    \n      tensorflow/tensorflow/core/kernels/transpose_functor_cpu.cc\n    \n    \n         Line 70\n      in\n      f284c70\n    \n    \n    \n    \n\n        \n          \n           template <typename T, bool conjugate> \n        \n    \n  \n\n\nFor <= 5 dimension tf uses efficient transpose, and in other cases, it uses some baseline code.", "body": "It still very slow with the static graph approach above as well. Also, copying memory doesn't explain the operation being _that_ slower (10000x!): e.g. tf.tile(b, [1, 2, 1, 1, 1, 1, 1]).op (which should be much slower if memory copying is the bottleneck) takes 261 ms while transpose takes 7.9 s.\r\n\r\nMy friend @mfigurnov suggests that the reason for this behavior may be here: https://github.com/tensorflow/tensorflow/blob/f284c708a8f3e2672d41dd3e7f6f03b9d26f0c80/tensorflow/core/kernels/transpose_functor_cpu.cc#L70\r\n\r\nFor <= 5 dimension tf uses efficient transpose, and in other cases, it uses some baseline code."}