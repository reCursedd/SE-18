{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/165665382", "html_url": "https://github.com/tensorflow/tensorflow/issues/537#issuecomment-165665382", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/537", "id": 165665382, "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTY2NTM4Mg==", "user": {"login": "lukaszkaiser", "id": 684901, "node_id": "MDQ6VXNlcjY4NDkwMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/684901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukaszkaiser", "html_url": "https://github.com/lukaszkaiser", "followers_url": "https://api.github.com/users/lukaszkaiser/followers", "following_url": "https://api.github.com/users/lukaszkaiser/following{/other_user}", "gists_url": "https://api.github.com/users/lukaszkaiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukaszkaiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukaszkaiser/subscriptions", "organizations_url": "https://api.github.com/users/lukaszkaiser/orgs", "repos_url": "https://api.github.com/users/lukaszkaiser/repos", "events_url": "https://api.github.com/users/lukaszkaiser/events{/privacy}", "received_events_url": "https://api.github.com/users/lukaszkaiser/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-18T04:01:06Z", "updated_at": "2015-12-18T04:01:06Z", "author_association": "MEMBER", "body_html": "<p>Thanks for your report cinjon, I think it's a bug in seq2seq.model_with_buckets.<br>\nIn particular, I think the problem is in these lines.<br>\nif j &gt; 0:<br>\nvs.get_variable_scope().reuse_variables()<br>\nIt just set variable sharing for the current scope, which is not the right thing to do: it should create a separate scope (reusing or not, depending on j). For now, this setting leaks outside of this function and compromises your second module.</p>\n<p>We'll work on a fix, I'll also test it with a bunch of other models. In the meantime, can you try replacing these two lines in model_with_buckets by something like this:<br>\nwith tf.variable_scope(\"model_with_buckets\", reuse=True if j &gt; 0 else None):<br>\n... and shift the body to be in this scope ...</p>\n<p>I think that should help and be better than doing your own variables.</p>\n<p>Thanks for catching this problem!</p>", "body_text": "Thanks for your report cinjon, I think it's a bug in seq2seq.model_with_buckets.\nIn particular, I think the problem is in these lines.\nif j > 0:\nvs.get_variable_scope().reuse_variables()\nIt just set variable sharing for the current scope, which is not the right thing to do: it should create a separate scope (reusing or not, depending on j). For now, this setting leaks outside of this function and compromises your second module.\nWe'll work on a fix, I'll also test it with a bunch of other models. In the meantime, can you try replacing these two lines in model_with_buckets by something like this:\nwith tf.variable_scope(\"model_with_buckets\", reuse=True if j > 0 else None):\n... and shift the body to be in this scope ...\nI think that should help and be better than doing your own variables.\nThanks for catching this problem!", "body": "Thanks for your report cinjon, I think it's a bug in seq2seq.model_with_buckets.\nIn particular, I think the problem is in these lines.\n      if j > 0:\n        vs.get_variable_scope().reuse_variables()\nIt just set variable sharing for the current scope, which is not the right thing to do: it should create a separate scope (reusing or not, depending on j). For now, this setting leaks outside of this function and compromises your second module.\n\nWe'll work on a fix, I'll also test it with a bunch of other models. In the meantime, can you try replacing these two lines in model_with_buckets by something like this:\n  with tf.variable_scope(\"model_with_buckets\", reuse=True if j > 0 else None):\n ... and shift the body to be in this scope ...\n\nI think that should help and be better than doing your own variables.\n\nThanks for catching this problem!\n"}