{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/435664814", "html_url": "https://github.com/tensorflow/tensorflow/issues/21141#issuecomment-435664814", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21141", "id": 435664814, "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTY2NDgxNA==", "user": {"login": "faezakamran", "id": 22791060, "node_id": "MDQ6VXNlcjIyNzkxMDYw", "avatar_url": "https://avatars3.githubusercontent.com/u/22791060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faezakamran", "html_url": "https://github.com/faezakamran", "followers_url": "https://api.github.com/users/faezakamran/followers", "following_url": "https://api.github.com/users/faezakamran/following{/other_user}", "gists_url": "https://api.github.com/users/faezakamran/gists{/gist_id}", "starred_url": "https://api.github.com/users/faezakamran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faezakamran/subscriptions", "organizations_url": "https://api.github.com/users/faezakamran/orgs", "repos_url": "https://api.github.com/users/faezakamran/repos", "events_url": "https://api.github.com/users/faezakamran/events{/privacy}", "received_events_url": "https://api.github.com/users/faezakamran/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-04T12:17:47Z", "updated_at": "2018-11-04T12:17:47Z", "author_association": "NONE", "body_html": "<p>I am getting the same error:<br>\nTraceback (most recent call last):<br>\nFile \"cnn.py\", line 77, in <br>\nsaver = tf.train.Saver()<br>\nFile \"/home/faeza/.local/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 1094, in <strong>init</strong><br>\nself.build()<br>\nFile \"/home/faeza/.local/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 1106, in build<br>\nself._build(self._filename, build_save=True, build_restore=True)<br>\nFile \"/home/faeza/.local/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 1131, in _build<br>\nraise ValueError(\"No variables to save\")<br>\nValueError: No variables to save</p>\n<p>and here is the code:</p>\n<pre><code>saver = tf.train.Saver()\n\ndef train_neural_network(x):\n    prediction = convolutional_neural_network(x)\n    cost = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(logits=prediction, labels=y))\n    optimizer = tf.train.AdamOptimizer(learning_rate=1e-3).minimize(cost)\n\n    hm_epochs = 5\n    with tf.Session() as sess:\n        sess.run(tf.global_variables_initializer())\n\n        successful_runs = 0\n        total_runs = 0\n\n        for epoch in range(hm_epochs):\n            epoch_loss = 0\n            for data in train_data:\n                total_runs += 1\n                try:\n                    x_batch = data[0]\n                    y_batch = data[1]\n                    _, c = sess.run([optimizer, cost], feed_dict={x: x_batch, y: y_batch})\n                    epoch_loss += c\n                    successful_runs += 1\n\n                except Exception as e:\n                    # I am passing for the sake of notebook space, but we are getting 1 shaping issue from one\n                    # input tensor. Not sure why, will have to look into it. Guessing it's\n                    # one of the depths that doesn't come to 20.\n                    pass\n                    #print(str(e))\n\n            #print('Epoch', epoch + 1, 'completed out of', hm_epochs, 'loss:', epoch_loss)\n\n            correct = tf.equal(tf.argmax(prediction), tf.argmax(y))\n            accuracy = tf.reduce_mean(tf.cast(correct, 'float'))\n\n            #print('Accuracy:', accuracy.eval({x: [i[0] for i in validation_data], y: [i[1] for i in validation_data]}))\n        correct = tf.equal(tf.argmax(prediction), tf.argmax(y))\n        accuracy = tf.reduce_mean(tf.cast(correct, 'float'))\n        saver.save(sess, \"model.ckpt\")\n        print('Done. Finishing accuracy:')\n        a =  accuracy.eval({x: [i[0] for i in validation_data], y: [i[1] for i in validation_data]})\n        print('Accuracy:', a)\n</code></pre>", "body_text": "I am getting the same error:\nTraceback (most recent call last):\nFile \"cnn.py\", line 77, in \nsaver = tf.train.Saver()\nFile \"/home/faeza/.local/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 1094, in init\nself.build()\nFile \"/home/faeza/.local/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 1106, in build\nself._build(self._filename, build_save=True, build_restore=True)\nFile \"/home/faeza/.local/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 1131, in _build\nraise ValueError(\"No variables to save\")\nValueError: No variables to save\nand here is the code:\nsaver = tf.train.Saver()\n\ndef train_neural_network(x):\n    prediction = convolutional_neural_network(x)\n    cost = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(logits=prediction, labels=y))\n    optimizer = tf.train.AdamOptimizer(learning_rate=1e-3).minimize(cost)\n\n    hm_epochs = 5\n    with tf.Session() as sess:\n        sess.run(tf.global_variables_initializer())\n\n        successful_runs = 0\n        total_runs = 0\n\n        for epoch in range(hm_epochs):\n            epoch_loss = 0\n            for data in train_data:\n                total_runs += 1\n                try:\n                    x_batch = data[0]\n                    y_batch = data[1]\n                    _, c = sess.run([optimizer, cost], feed_dict={x: x_batch, y: y_batch})\n                    epoch_loss += c\n                    successful_runs += 1\n\n                except Exception as e:\n                    # I am passing for the sake of notebook space, but we are getting 1 shaping issue from one\n                    # input tensor. Not sure why, will have to look into it. Guessing it's\n                    # one of the depths that doesn't come to 20.\n                    pass\n                    #print(str(e))\n\n            #print('Epoch', epoch + 1, 'completed out of', hm_epochs, 'loss:', epoch_loss)\n\n            correct = tf.equal(tf.argmax(prediction), tf.argmax(y))\n            accuracy = tf.reduce_mean(tf.cast(correct, 'float'))\n\n            #print('Accuracy:', accuracy.eval({x: [i[0] for i in validation_data], y: [i[1] for i in validation_data]}))\n        correct = tf.equal(tf.argmax(prediction), tf.argmax(y))\n        accuracy = tf.reduce_mean(tf.cast(correct, 'float'))\n        saver.save(sess, \"model.ckpt\")\n        print('Done. Finishing accuracy:')\n        a =  accuracy.eval({x: [i[0] for i in validation_data], y: [i[1] for i in validation_data]})\n        print('Accuracy:', a)", "body": "I am getting the same error: \r\nTraceback (most recent call last):\r\n  File \"cnn.py\", line 77, in <module>\r\n    saver = tf.train.Saver()\r\n  File \"/home/faeza/.local/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 1094, in __init__\r\n    self.build()\r\n  File \"/home/faeza/.local/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 1106, in build\r\n    self._build(self._filename, build_save=True, build_restore=True)\r\n  File \"/home/faeza/.local/lib/python3.6/site-packages/tensorflow/python/training/saver.py\", line 1131, in _build\r\n    raise ValueError(\"No variables to save\")\r\nValueError: No variables to save\r\n\r\nand here is the code:\r\n```\r\nsaver = tf.train.Saver()\r\n\r\ndef train_neural_network(x):\r\n    prediction = convolutional_neural_network(x)\r\n    cost = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(logits=prediction, labels=y))\r\n    optimizer = tf.train.AdamOptimizer(learning_rate=1e-3).minimize(cost)\r\n\r\n    hm_epochs = 5\r\n    with tf.Session() as sess:\r\n        sess.run(tf.global_variables_initializer())\r\n\r\n        successful_runs = 0\r\n        total_runs = 0\r\n\r\n        for epoch in range(hm_epochs):\r\n            epoch_loss = 0\r\n            for data in train_data:\r\n                total_runs += 1\r\n                try:\r\n                    x_batch = data[0]\r\n                    y_batch = data[1]\r\n                    _, c = sess.run([optimizer, cost], feed_dict={x: x_batch, y: y_batch})\r\n                    epoch_loss += c\r\n                    successful_runs += 1\r\n\r\n                except Exception as e:\r\n                    # I am passing for the sake of notebook space, but we are getting 1 shaping issue from one\r\n                    # input tensor. Not sure why, will have to look into it. Guessing it's\r\n                    # one of the depths that doesn't come to 20.\r\n                    pass\r\n                    #print(str(e))\r\n\r\n            #print('Epoch', epoch + 1, 'completed out of', hm_epochs, 'loss:', epoch_loss)\r\n\r\n            correct = tf.equal(tf.argmax(prediction), tf.argmax(y))\r\n            accuracy = tf.reduce_mean(tf.cast(correct, 'float'))\r\n\r\n            #print('Accuracy:', accuracy.eval({x: [i[0] for i in validation_data], y: [i[1] for i in validation_data]}))\r\n        correct = tf.equal(tf.argmax(prediction), tf.argmax(y))\r\n        accuracy = tf.reduce_mean(tf.cast(correct, 'float'))\r\n        saver.save(sess, \"model.ckpt\")\r\n        print('Done. Finishing accuracy:')\r\n        a =  accuracy.eval({x: [i[0] for i in validation_data], y: [i[1] for i in validation_data]})\r\n        print('Accuracy:', a)\r\n```"}