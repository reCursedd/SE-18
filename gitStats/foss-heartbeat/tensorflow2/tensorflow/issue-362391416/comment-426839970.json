{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/426839970", "html_url": "https://github.com/tensorflow/tensorflow/pull/22429#issuecomment-426839970", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22429", "id": 426839970, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjgzOTk3MA==", "user": {"login": "feihugis", "id": 5057740, "node_id": "MDQ6VXNlcjUwNTc3NDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5057740?v=4", "gravatar_id": "", "url": "https://api.github.com/users/feihugis", "html_url": "https://github.com/feihugis", "followers_url": "https://api.github.com/users/feihugis/followers", "following_url": "https://api.github.com/users/feihugis/following{/other_user}", "gists_url": "https://api.github.com/users/feihugis/gists{/gist_id}", "starred_url": "https://api.github.com/users/feihugis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/feihugis/subscriptions", "organizations_url": "https://api.github.com/users/feihugis/orgs", "repos_url": "https://api.github.com/users/feihugis/repos", "events_url": "https://api.github.com/users/feihugis/events{/privacy}", "received_events_url": "https://api.github.com/users/feihugis/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-03T23:48:55Z", "updated_at": "2018-10-03T23:55:46Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1072079\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jsimsa\">@jsimsa</a> For the comment at Line 268, if we use the threadpool, does it mean a thread pool needs to be created for each call? I attach some sample code here. Will it be efficient? Do you have any suggestion?</p>\n<div class=\"highlight highlight-source-c++\"><pre><span class=\"pl-k\">int</span> num_threads = std::min(<span class=\"pl-c1\">8</span>, children.size());\nthread::ThreadPool <span class=\"pl-en\">threads</span>(Env::Default(), \"ForEach\", num_threads);\nthreads.TransformRangeConcurrently(<span class=\"pl-c1\">1</span>, children.size(), is_directory_fn);</pre></div>\n<pre><code>------------------------------------\nLine 268 (Iterator.UpdateIterator):\n          counter.Wait();\n\nApparently we have a new utility method to help with code like this: tensorflow/core/lib/core/threadpool.h?l=62-69\n------------------------------------\n</code></pre>", "body_text": "@jsimsa For the comment at Line 268, if we use the threadpool, does it mean a thread pool needs to be created for each call? I attach some sample code here. Will it be efficient? Do you have any suggestion?\nint num_threads = std::min(8, children.size());\nthread::ThreadPool threads(Env::Default(), \"ForEach\", num_threads);\nthreads.TransformRangeConcurrently(1, children.size(), is_directory_fn);\n------------------------------------\nLine 268 (Iterator.UpdateIterator):\n          counter.Wait();\n\nApparently we have a new utility method to help with code like this: tensorflow/core/lib/core/threadpool.h?l=62-69\n------------------------------------", "body": "@jsimsa For the comment at Line 268, if we use the threadpool, does it mean a thread pool needs to be created for each call? I attach some sample code here. Will it be efficient? Do you have any suggestion? \r\n```C++\r\nint num_threads = std::min(8, children.size());\r\nthread::ThreadPool threads(Env::Default(), \"ForEach\", num_threads);\r\nthreads.TransformRangeConcurrently(1, children.size(), is_directory_fn);\r\n```\r\n\r\n```\r\n------------------------------------\r\nLine 268 (Iterator.UpdateIterator):\r\n          counter.Wait();\r\n\r\nApparently we have a new utility method to help with code like this: tensorflow/core/lib/core/threadpool.h?l=62-69\r\n------------------------------------\r\n```"}