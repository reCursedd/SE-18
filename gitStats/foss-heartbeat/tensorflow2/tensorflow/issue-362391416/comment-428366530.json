{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/428366530", "html_url": "https://github.com/tensorflow/tensorflow/pull/22429#issuecomment-428366530", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22429", "id": 428366530, "node_id": "MDEyOklzc3VlQ29tbWVudDQyODM2NjUzMA==", "user": {"login": "feihugis", "id": 5057740, "node_id": "MDQ6VXNlcjUwNTc3NDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5057740?v=4", "gravatar_id": "", "url": "https://api.github.com/users/feihugis", "html_url": "https://github.com/feihugis", "followers_url": "https://api.github.com/users/feihugis/followers", "following_url": "https://api.github.com/users/feihugis/following{/other_user}", "gists_url": "https://api.github.com/users/feihugis/gists{/gist_id}", "starred_url": "https://api.github.com/users/feihugis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/feihugis/subscriptions", "organizations_url": "https://api.github.com/users/feihugis/orgs", "repos_url": "https://api.github.com/users/feihugis/repos", "events_url": "https://api.github.com/users/feihugis/events{/privacy}", "received_events_url": "https://api.github.com/users/feihugis/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-09T21:55:03Z", "updated_at": "2018-10-09T23:24:30Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1072079\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jsimsa\">@jsimsa</a> I am trying to fix the backslash problem by adding the following code right before the <a href=\"https://github.com/tensorflow/tensorflow/blob/597f04e949285f7e72682c7c3a6ed656a5aedb1e/tensorflow/core/kernels/data/matching_files_dataset_op.cc#L129\">line 129</a>. Are there any existing API in the FileSytem class that can be used to do it?</p>\n<div class=\"highlight highlight-source-c++\"><pre><span class=\"pl-k\">if</span> (<span class=\"pl-k\">dynamic_cast</span>&lt;WindowsFileSystem*&gt;(fs) != <span class=\"pl-c1\">nullptr</span>) {\n              <span class=\"pl-c1\">std::replace</span>(current_pattern_.<span class=\"pl-c1\">begin</span>(), current_pattern_.<span class=\"pl-c1\">end</span>(),\n                           <span class=\"pl-s\"><span class=\"pl-pds\">'</span><span class=\"pl-cce\">\\\\</span><span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/<span class=\"pl-pds\">'</span></span>);\n}</pre></div>\n<p>If using the above code, I am not clear how to add WindowsFileSystem dependency to <code>data/BUILD</code> file. The following build configuration fails.</p>\n<pre><code>tf_kernel_library(\n    name = \"matching_files_dataset_op\",\n    srcs = [\"matching_files_dataset_op.cc\"],\n    deps = [\n        \":dataset\",\n        \"//tensorflow/core:dataset_ops_op_lib\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core:platform_file_system\",\n    ],\n)\n</code></pre>\n<p>Or, is it OK to use the backslash as the indicator of Windows path?</p>\n<div class=\"highlight highlight-source-c++\"><pre><span class=\"pl-k\">if</span> (current_pattern_.find(<span class=\"pl-s\"><span class=\"pl-pds\">'</span><span class=\"pl-cce\">\\\\</span><span class=\"pl-pds\">'</span></span>) != std::string::npos) {\n              <span class=\"pl-c1\">std::replace</span>(current_pattern_.<span class=\"pl-c1\">begin</span>(), current_pattern_.<span class=\"pl-c1\">end</span>(),\n                           <span class=\"pl-s\"><span class=\"pl-pds\">'</span><span class=\"pl-cce\">\\\\</span><span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/<span class=\"pl-pds\">'</span></span>);\n}</pre></div>", "body_text": "@jsimsa I am trying to fix the backslash problem by adding the following code right before the line 129. Are there any existing API in the FileSytem class that can be used to do it?\nif (dynamic_cast<WindowsFileSystem*>(fs) != nullptr) {\n              std::replace(current_pattern_.begin(), current_pattern_.end(),\n                           '\\\\', '/');\n}\nIf using the above code, I am not clear how to add WindowsFileSystem dependency to data/BUILD file. The following build configuration fails.\ntf_kernel_library(\n    name = \"matching_files_dataset_op\",\n    srcs = [\"matching_files_dataset_op.cc\"],\n    deps = [\n        \":dataset\",\n        \"//tensorflow/core:dataset_ops_op_lib\",\n        \"//tensorflow/core:framework\",\n        \"//tensorflow/core:lib\",\n        \"//tensorflow/core:lib_internal\",\n        \"//tensorflow/core:platform_file_system\",\n    ],\n)\n\nOr, is it OK to use the backslash as the indicator of Windows path?\nif (current_pattern_.find('\\\\') != std::string::npos) {\n              std::replace(current_pattern_.begin(), current_pattern_.end(),\n                           '\\\\', '/');\n}", "body": "@jsimsa I am trying to fix the backslash problem by adding the following code right before the [line 129](https://github.com/tensorflow/tensorflow/blob/597f04e949285f7e72682c7c3a6ed656a5aedb1e/tensorflow/core/kernels/data/matching_files_dataset_op.cc#L129). Are there any existing API in the FileSytem class that can be used to do it?\r\n\r\n```C++\r\nif (dynamic_cast<WindowsFileSystem*>(fs) != nullptr) {\r\n              std::replace(current_pattern_.begin(), current_pattern_.end(),\r\n                           '\\\\', '/');\r\n}\r\n```\r\n\r\nIf using the above code, I am not clear how to add WindowsFileSystem dependency to `data/BUILD` file. The following build configuration fails.\r\n\r\n```\r\ntf_kernel_library(\r\n    name = \"matching_files_dataset_op\",\r\n    srcs = [\"matching_files_dataset_op.cc\"],\r\n    deps = [\r\n        \":dataset\",\r\n        \"//tensorflow/core:dataset_ops_op_lib\",\r\n        \"//tensorflow/core:framework\",\r\n        \"//tensorflow/core:lib\",\r\n        \"//tensorflow/core:lib_internal\",\r\n        \"//tensorflow/core:platform_file_system\",\r\n    ],\r\n)\r\n```\r\n\r\nOr, is it OK to use the backslash as the indicator of Windows path?\r\n```C++\r\nif (current_pattern_.find('\\\\') != std::string::npos) {\r\n              std::replace(current_pattern_.begin(), current_pattern_.end(),\r\n                           '\\\\', '/');\r\n}\r\n```\r\n\r\n\r\n"}