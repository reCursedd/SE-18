{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/223141741", "pull_request_review_id": 162207729, "id": 223141741, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzE0MTc0MQ==", "diff_hunk": "@@ -0,0 +1,321 @@\n+/* Copyright 2018 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+#include <queue>\n+#include \"tensorflow/core/framework/op_kernel.h\"\n+#include \"tensorflow/core/framework/partial_tensor_shape.h\"\n+#include \"tensorflow/core/framework/tensor.h\"\n+#include \"tensorflow/core/framework/tensor_shape.h\"\n+#include \"tensorflow/core/kernels/data/dataset.h\"\n+#include \"tensorflow/core/lib/core/blocking_counter.h\"\n+#include \"tensorflow/core/lib/core/errors.h\"\n+#include \"tensorflow/core/lib/core/threadpool.h\"\n+#include \"tensorflow/core/lib/io/buffered_inputstream.h\"\n+#include \"tensorflow/core/lib/io/inputbuffer.h\"\n+#include \"tensorflow/core/lib/io/path.h\"\n+#include \"tensorflow/core/lib/io/random_inputstream.h\"\n+#include \"tensorflow/core/lib/io/record_reader.h\"\n+#include \"tensorflow/core/lib/io/zlib_compression_options.h\"\n+#include \"tensorflow/core/lib/io/zlib_inputstream.h\"\n+#include \"tensorflow/core/platform/env.h\"\n+\n+namespace tensorflow {\n+namespace data {\n+namespace {\n+\n+class MatchingFilesDatasetOp : public DatasetOpKernel {\n+ public:\n+  using DatasetOpKernel::DatasetOpKernel;\n+\n+  void MakeDataset(OpKernelContext* ctx, DatasetBase** output) override {\n+    const Tensor* patterns_t;\n+    OP_REQUIRES_OK(ctx, ctx->input(\"patterns\", &patterns_t));\n+    const auto patterns = patterns_t->flat<string>();\n+    size_t num_patterns = static_cast<size_t>(patterns.size());\n+    std::vector<string> pattern_strs;\n+    pattern_strs.reserve(num_patterns);\n+\n+    for (size_t i = 0; i < num_patterns; i++) {\n+      pattern_strs.push_back(patterns(i));\n+    }\n+\n+    *output = new Dataset(ctx, std::move(pattern_strs));\n+  }\n+\n+ private:\n+  class Dataset : public DatasetBase {\n+   public:\n+    Dataset(OpKernelContext* ctx, std::vector<string> patterns)\n+        : DatasetBase(DatasetContext(ctx)), patterns_(std::move(patterns)) {}\n+\n+    std::unique_ptr<IteratorBase> MakeIteratorInternal(\n+        const string& prefix) const override {\n+      return std::unique_ptr<IteratorBase>(\n+          new Iterator({this, strings::StrCat(prefix, \"::MatchingFiles\")}));\n+    }\n+\n+    const DataTypeVector& output_dtypes() const override {\n+      static DataTypeVector* dtypes = new DataTypeVector({DT_STRING});\n+      return *dtypes;\n+    }\n+\n+    const std::vector<PartialTensorShape>& output_shapes() const override {\n+      static std::vector<PartialTensorShape>* shapes =\n+          new std::vector<PartialTensorShape>({{}});\n+      return *shapes;\n+    }\n+\n+    string DebugString() const override {\n+      return \"MatchingFilesDatasetOp::Dataset\";\n+    }\n+\n+   protected:\n+    Status AsGraphDefInternal(SerializationContext* ctx,\n+                              DatasetGraphDefBuilder* b,\n+                              Node** output) const override {\n+      Node* patterns_node = nullptr;\n+      TF_RETURN_IF_ERROR(b->AddVector(patterns_, &patterns_node));\n+      TF_RETURN_IF_ERROR(b->AddDataset(this, {patterns_node}, output));\n+      return Status::OK();\n+    }\n+\n+   private:\n+    class Iterator : public DatasetIterator<Dataset> {\n+     public:\n+      explicit Iterator(const Params& params)\n+          : DatasetIterator<Dataset>(params) {}\n+\n+      Status GetNextInternal(IteratorContext* ctx,\n+                             std::vector<Tensor>* out_tensors,\n+                             bool* end_of_sequence) override {\n+        mutex_lock l(mu_);\n+        Status ret;  // Status to return", "path": "tensorflow/core/kernels/data/matching_files_dataset_op.cc", "position": null, "original_position": 103, "commit_id": "0d5b9d20cc3e3062aa4d443bc772bb3aed698d15", "original_commit_id": "c74b28d2dcdee2723a76f40a613b483c25214b92", "user": {"login": "jsimsa", "id": 1072079, "node_id": "MDQ6VXNlcjEwNzIwNzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1072079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsimsa", "html_url": "https://github.com/jsimsa", "followers_url": "https://api.github.com/users/jsimsa/followers", "following_url": "https://api.github.com/users/jsimsa/following{/other_user}", "gists_url": "https://api.github.com/users/jsimsa/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsimsa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsimsa/subscriptions", "organizations_url": "https://api.github.com/users/jsimsa/orgs", "repos_url": "https://api.github.com/users/jsimsa/repos", "events_url": "https://api.github.com/users/jsimsa/events{/privacy}", "received_events_url": "https://api.github.com/users/jsimsa/received_events", "type": "User", "site_admin": false}, "body": "the comment does not add any information, so I would just remove it", "created_at": "2018-10-05T21:20:42Z", "updated_at": "2018-10-15T21:38:29Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/22429#discussion_r223141741", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/22429", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/223141741"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/22429#discussion_r223141741"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/22429"}}, "body_html": "<p>the comment does not add any information, so I would just remove it</p>", "body_text": "the comment does not add any information, so I would just remove it"}