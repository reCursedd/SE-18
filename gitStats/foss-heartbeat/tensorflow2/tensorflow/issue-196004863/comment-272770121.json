{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/272770121", "html_url": "https://github.com/tensorflow/tensorflow/issues/6357#issuecomment-272770121", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6357", "id": 272770121, "node_id": "MDEyOklzc3VlQ29tbWVudDI3Mjc3MDEyMQ==", "user": {"login": "samjabrahams", "id": 11607205, "node_id": "MDQ6VXNlcjExNjA3MjA1", "avatar_url": "https://avatars0.githubusercontent.com/u/11607205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samjabrahams", "html_url": "https://github.com/samjabrahams", "followers_url": "https://api.github.com/users/samjabrahams/followers", "following_url": "https://api.github.com/users/samjabrahams/following{/other_user}", "gists_url": "https://api.github.com/users/samjabrahams/gists{/gist_id}", "starred_url": "https://api.github.com/users/samjabrahams/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samjabrahams/subscriptions", "organizations_url": "https://api.github.com/users/samjabrahams/orgs", "repos_url": "https://api.github.com/users/samjabrahams/repos", "events_url": "https://api.github.com/users/samjabrahams/events{/privacy}", "received_events_url": "https://api.github.com/users/samjabrahams/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-16T04:12:29Z", "updated_at": "2017-01-16T04:12:29Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Just saw this thread: I figured I may as well chip in a few bits of info:</p>\n<p>Regarding Makefile support:</p>\n<ul>\n<li>If you're simply looking for any kind of inference support, the \"most officially supported\" thing to do is to try and modify the <a href=\"https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/makefile\">Makefile instructions</a> to work on whatever system you're trying to build. This leaves you with a static library that can run your model.</li>\n<li>You could try following the <a href=\"https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/pi_examples\">Raspberry Pi Makefile tutorial</a> to figure out the necessary flags to work on your system.</li>\n<li>Once you've got a decent idea of how to compile, you could replace the pre-trained Inception model from the tutorial with whatever trained model you want to use\n<ul>\n<li>You'll want to <a href=\"\">freeze</a> and <a href=\"\">optimize</a> your exported model so that it's contained in a single protobuf file (which is what the Inception model looks like)</li>\n</ul>\n</li>\n<li>All this said, I can't say for sure if ARMv7-M would compile successfully (I'm fairly confident ARMv6 doesn't have the right instructions to work properly with the current codebase)</li>\n</ul>\n<p>Regarding my repository:</p>\n<ul>\n<li>If you want full TensorFlow functionality and/or the ability to run it from Python, you're going to have to get Bazel installed on whatever system you're running (the majority of the work done for my repo is figuring out how to compile new versions of Bazel)</li>\n<li>You'll also want to figure out a reasonable cross-compilation setup, if possible. I'm still looking for a consistent way to avoid compiling everything directly on the Raspberry Pi</li>\n<li>I'm a little behind on the current versions of TensorFlow/Bazel- holidays + vacation + work has led to much less time going toward the repo. Hopefully I can get it together by 1.0.0-final!</li>\n</ul>", "body_text": "Just saw this thread: I figured I may as well chip in a few bits of info:\nRegarding Makefile support:\n\nIf you're simply looking for any kind of inference support, the \"most officially supported\" thing to do is to try and modify the Makefile instructions to work on whatever system you're trying to build. This leaves you with a static library that can run your model.\nYou could try following the Raspberry Pi Makefile tutorial to figure out the necessary flags to work on your system.\nOnce you've got a decent idea of how to compile, you could replace the pre-trained Inception model from the tutorial with whatever trained model you want to use\n\nYou'll want to freeze and optimize your exported model so that it's contained in a single protobuf file (which is what the Inception model looks like)\n\n\nAll this said, I can't say for sure if ARMv7-M would compile successfully (I'm fairly confident ARMv6 doesn't have the right instructions to work properly with the current codebase)\n\nRegarding my repository:\n\nIf you want full TensorFlow functionality and/or the ability to run it from Python, you're going to have to get Bazel installed on whatever system you're running (the majority of the work done for my repo is figuring out how to compile new versions of Bazel)\nYou'll also want to figure out a reasonable cross-compilation setup, if possible. I'm still looking for a consistent way to avoid compiling everything directly on the Raspberry Pi\nI'm a little behind on the current versions of TensorFlow/Bazel- holidays + vacation + work has led to much less time going toward the repo. Hopefully I can get it together by 1.0.0-final!", "body": "Just saw this thread: I figured I may as well chip in a few bits of info:\r\n\r\nRegarding Makefile support:\r\n\r\n* If you're simply looking for any kind of inference support, the \"most officially supported\" thing to do is to try and modify the [Makefile instructions](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/makefile) to work on whatever system you're trying to build. This leaves you with a static library that can run your model.\r\n* You could try following the [Raspberry Pi Makefile tutorial](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/pi_examples) to figure out the necessary flags to work on your system.\r\n* Once you've got a decent idea of how to compile, you could replace the pre-trained Inception model from the tutorial with whatever trained model you want to use \r\n    * You'll want to [freeze]() and [optimize]() your exported model so that it's contained in a single protobuf file (which is what the Inception model looks like)\r\n* All this said, I can't say for sure if ARMv7-M would compile successfully (I'm fairly confident ARMv6 doesn't have the right instructions to work properly with the current codebase)\r\n\r\nRegarding my repository:\r\n\r\n* If you want full TensorFlow functionality and/or the ability to run it from Python, you're going to have to get Bazel installed on whatever system you're running (the majority of the work done for my repo is figuring out how to compile new versions of Bazel)\r\n* You'll also want to figure out a reasonable cross-compilation setup, if possible. I'm still looking for a consistent way to avoid compiling everything directly on the Raspberry Pi\r\n* I'm a little behind on the current versions of TensorFlow/Bazel- holidays + vacation + work has led to much less time going toward the repo. Hopefully I can get it together by 1.0.0-final!"}