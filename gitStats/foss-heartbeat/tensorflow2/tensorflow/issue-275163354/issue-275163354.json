{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14703", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14703/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14703/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14703/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14703", "id": 275163354, "node_id": "MDU6SXNzdWUyNzUxNjMzNTQ=", "number": 14703, "title": "tf.layers uses wrong variable scope", "user": {"login": "ppwwyyxx", "id": 1381301, "node_id": "MDQ6VXNlcjEzODEzMDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1381301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ppwwyyxx", "html_url": "https://github.com/ppwwyyxx", "followers_url": "https://api.github.com/users/ppwwyyxx/followers", "following_url": "https://api.github.com/users/ppwwyyxx/following{/other_user}", "gists_url": "https://api.github.com/users/ppwwyyxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/ppwwyyxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ppwwyyxx/subscriptions", "organizations_url": "https://api.github.com/users/ppwwyyxx/orgs", "repos_url": "https://api.github.com/users/ppwwyyxx/repos", "events_url": "https://api.github.com/users/ppwwyyxx/events{/privacy}", "received_events_url": "https://api.github.com/users/ppwwyyxx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 24, "created_at": "2017-11-19T14:33:03Z", "updated_at": "2018-11-01T05:50:25Z", "closed_at": "2018-03-27T19:56:12Z", "author_association": "CONTRIBUTOR", "body_html": "<p>TF 1.4.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">f</span>(<span class=\"pl-smi\">x</span>):\n    <span class=\"pl-k\">return</span> tf.layers.conv2d(x, <span class=\"pl-c1\">30</span>, <span class=\"pl-c1\">3</span>)\n\nx <span class=\"pl-k\">=</span> tf.zeros([<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">20</span>, <span class=\"pl-c1\">20</span>, <span class=\"pl-c1\">1</span>])\n\n<span class=\"pl-k\">with</span> tf.variable_scope(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>):\n    <span class=\"pl-c1\">print</span>(f(x))\n<span class=\"pl-k\">with</span> tf.variable_scope(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">reuse</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>):\n    <span class=\"pl-c1\">print</span>(f(x)) <span class=\"pl-c\"><span class=\"pl-c\">#</span> works</span>\n\n<span class=\"pl-c1\">print</span>(f(x))\n<span class=\"pl-k\">with</span> tf.variable_scope(tf.get_variable_scope(), <span class=\"pl-v\">reuse</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>):\n    <span class=\"pl-c1\">print</span>(f(x)) <span class=\"pl-c\"><span class=\"pl-c\">#</span> failed with:</span>\n<span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span></span>\n<span class=\"pl-s\">ValueError: Variable conv2d_1/kernel does not exist, or was not created with tf.get_variable(). Did you mean to set reuse=None in VarScope?</span>\n<span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span></span></pre></div>\n<p>From what I can see, tf.layers is trying to create the variables under a wrong variable scope name, making variable sharing impossible if used under the root scope.</p>\n<p>I found that this works:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">with</span> tf.variable_scope(tf.get_variable_scope()):\n    <span class=\"pl-c1\">print</span>(f(x))\n<span class=\"pl-k\">with</span> tf.variable_scope(tf.get_variable_scope(), <span class=\"pl-v\">reuse</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>):\n    <span class=\"pl-c1\">print</span>(f(x)) <span class=\"pl-c\"><span class=\"pl-c\">#</span> works</span></pre></div>\n<p>But the first line seems redundant and counter-intuitive.</p>\n<p>//UPDATE:<br>\nIt also works if I don't use tf.layers:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">f</span>(<span class=\"pl-smi\">x</span>):\n    W <span class=\"pl-k\">=</span> tf.get_variable(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>w<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">1</span>])\n    <span class=\"pl-k\">return</span> x <span class=\"pl-k\">+</span> W</pre></div>", "body_text": "TF 1.4.\nimport tensorflow as tf\ndef f(x):\n    return tf.layers.conv2d(x, 30, 3)\n\nx = tf.zeros([3, 20, 20, 1])\n\nwith tf.variable_scope('a'):\n    print(f(x))\nwith tf.variable_scope('a', reuse=True):\n    print(f(x)) # works\n\nprint(f(x))\nwith tf.variable_scope(tf.get_variable_scope(), reuse=True):\n    print(f(x)) # failed with:\n\"\"\"\nValueError: Variable conv2d_1/kernel does not exist, or was not created with tf.get_variable(). Did you mean to set reuse=None in VarScope?\n\"\"\"\nFrom what I can see, tf.layers is trying to create the variables under a wrong variable scope name, making variable sharing impossible if used under the root scope.\nI found that this works:\nwith tf.variable_scope(tf.get_variable_scope()):\n    print(f(x))\nwith tf.variable_scope(tf.get_variable_scope(), reuse=True):\n    print(f(x)) # works\nBut the first line seems redundant and counter-intuitive.\n//UPDATE:\nIt also works if I don't use tf.layers:\ndef f(x):\n    W = tf.get_variable('w', shape=[1])\n    return x + W", "body": "TF 1.4.\r\n```python\r\nimport tensorflow as tf\r\ndef f(x):\r\n    return tf.layers.conv2d(x, 30, 3)\r\n\r\nx = tf.zeros([3, 20, 20, 1])\r\n\r\nwith tf.variable_scope('a'):\r\n    print(f(x))\r\nwith tf.variable_scope('a', reuse=True):\r\n    print(f(x)) # works\r\n\r\nprint(f(x))\r\nwith tf.variable_scope(tf.get_variable_scope(), reuse=True):\r\n    print(f(x)) # failed with:\r\n\"\"\"\r\nValueError: Variable conv2d_1/kernel does not exist, or was not created with tf.get_variable(). Did you mean to set reuse=None in VarScope?\r\n\"\"\"\r\n```\r\n\r\nFrom what I can see, tf.layers is trying to create the variables under a wrong variable scope name, making variable sharing impossible if used under the root scope.\r\n\r\nI found that this works:\r\n```python\r\nwith tf.variable_scope(tf.get_variable_scope()):\r\n    print(f(x))\r\nwith tf.variable_scope(tf.get_variable_scope(), reuse=True):\r\n    print(f(x)) # works\r\n```\r\nBut the first line seems redundant and counter-intuitive.\r\n\r\n//UPDATE:\r\nIt also works if I don't use tf.layers:\r\n```python\r\ndef f(x):\r\n    W = tf.get_variable('w', shape=[1])\r\n    return x + W\r\n```"}