{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/346342198", "html_url": "https://github.com/tensorflow/tensorflow/issues/14703#issuecomment-346342198", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14703", "id": 346342198, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjM0MjE5OA==", "user": {"login": "ppwwyyxx", "id": 1381301, "node_id": "MDQ6VXNlcjEzODEzMDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1381301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ppwwyyxx", "html_url": "https://github.com/ppwwyyxx", "followers_url": "https://api.github.com/users/ppwwyyxx/followers", "following_url": "https://api.github.com/users/ppwwyyxx/following{/other_user}", "gists_url": "https://api.github.com/users/ppwwyyxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/ppwwyyxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ppwwyyxx/subscriptions", "organizations_url": "https://api.github.com/users/ppwwyyxx/orgs", "repos_url": "https://api.github.com/users/ppwwyyxx/repos", "events_url": "https://api.github.com/users/ppwwyyxx/events{/privacy}", "received_events_url": "https://api.github.com/users/ppwwyyxx/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-22T12:55:28Z", "updated_at": "2017-11-22T12:55:28Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I thought the expectation is obvious. To clarify, if I write the following <strong>naive</strong> \"add\" layer:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">f</span>(<span class=\"pl-smi\">x</span>):\n    W <span class=\"pl-k\">=</span> tf.get_variable(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>w<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">1</span>])\n    <span class=\"pl-k\">return</span> x <span class=\"pl-k\">+</span> W</pre></div>\n<p>Then my snippet can run with my expected variable sharing behavior. But tf.layers is doing something different now.</p>", "body_text": "I thought the expectation is obvious. To clarify, if I write the following naive \"add\" layer:\ndef f(x):\n    W = tf.get_variable('w', shape=[1])\n    return x + W\nThen my snippet can run with my expected variable sharing behavior. But tf.layers is doing something different now.", "body": "I thought the expectation is obvious. To clarify, if I write the following __naive__ \"add\" layer:\r\n```python\r\ndef f(x):\r\n    W = tf.get_variable('w', shape=[1])\r\n    return x + W\r\n```\r\nThen my snippet can run with my expected variable sharing behavior. But tf.layers is doing something different now."}