{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16260", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16260/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16260/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16260/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16260", "id": 290205449, "node_id": "MDU6SXNzdWUyOTAyMDU0NDk=", "number": 16260, "title": "easier installation debugging", "user": {"login": "wintsonpryme", "id": 35429407, "node_id": "MDQ6VXNlcjM1NDI5NDA3", "avatar_url": "https://avatars2.githubusercontent.com/u/35429407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wintsonpryme", "html_url": "https://github.com/wintsonpryme", "followers_url": "https://api.github.com/users/wintsonpryme/followers", "following_url": "https://api.github.com/users/wintsonpryme/following{/other_user}", "gists_url": "https://api.github.com/users/wintsonpryme/gists{/gist_id}", "starred_url": "https://api.github.com/users/wintsonpryme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wintsonpryme/subscriptions", "organizations_url": "https://api.github.com/users/wintsonpryme/orgs", "repos_url": "https://api.github.com/users/wintsonpryme/repos", "events_url": "https://api.github.com/users/wintsonpryme/events{/privacy}", "received_events_url": "https://api.github.com/users/wintsonpryme/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "angersson", "id": 32465472, "node_id": "MDQ6VXNlcjMyNDY1NDcy", "avatar_url": "https://avatars2.githubusercontent.com/u/32465472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/angersson", "html_url": "https://github.com/angersson", "followers_url": "https://api.github.com/users/angersson/followers", "following_url": "https://api.github.com/users/angersson/following{/other_user}", "gists_url": "https://api.github.com/users/angersson/gists{/gist_id}", "starred_url": "https://api.github.com/users/angersson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/angersson/subscriptions", "organizations_url": "https://api.github.com/users/angersson/orgs", "repos_url": "https://api.github.com/users/angersson/repos", "events_url": "https://api.github.com/users/angersson/events{/privacy}", "received_events_url": "https://api.github.com/users/angersson/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "angersson", "id": 32465472, "node_id": "MDQ6VXNlcjMyNDY1NDcy", "avatar_url": "https://avatars2.githubusercontent.com/u/32465472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/angersson", "html_url": "https://github.com/angersson", "followers_url": "https://api.github.com/users/angersson/followers", "following_url": "https://api.github.com/users/angersson/following{/other_user}", "gists_url": "https://api.github.com/users/angersson/gists{/gist_id}", "starred_url": "https://api.github.com/users/angersson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/angersson/subscriptions", "organizations_url": "https://api.github.com/users/angersson/orgs", "repos_url": "https://api.github.com/users/angersson/repos", "events_url": "https://api.github.com/users/angersson/events{/privacy}", "received_events_url": "https://api.github.com/users/angersson/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2018-01-20T16:48:21Z", "updated_at": "2018-05-23T19:26:23Z", "closed_at": "2018-04-03T17:47:45Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Windows 10 with Java API</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.3.0</li>\n<li><strong>Python version</strong>:</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>: 8 with cudnn64_6.dll</li>\n<li><strong>GPU model and memory</strong>: 1080</li>\n<li><strong>Exact command to reproduce</strong>: HelloTF.java</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Default error message from NativeLibrary load() method is not helpful enough.<br>\nSimple suggested improvement: please print the contents in the string variable \"frameworkResourceName\", which is the missing resource, when throwing a new UnsatisfiedLinkError exception.</p>\n<h3>Source code / logs</h3>\n<p>Suggested Source Code Improvement for NativeLibrary.java:</p>\n<pre><code>if (jniResource == null) {\n  throw new UnsatisfiedLinkError(\n      String.format(\n          \"Cannot find TensorFlow native library %s for OS: %s, architecture: %s. See \"\n              + \"https://github.com/tensorflow/tensorflow/tree/master/tensorflow/java/README.md\"\n              + \" for possible solutions (such as building the library from source). Additional\"\n              + \" information on attempts to find the native library can be obtained by adding\"\n              + \" org.tensorflow.NativeLibrary.DEBUG=1 to the system properties of the JVM.\",\n              frameworkResourceName,\n          os(), architecture()));\n}\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10 with Java API\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.3.0\nPython version:\nBazel version (if compiling from source):\nGCC/Compiler version (if compiling from source):\nCUDA/cuDNN version: 8 with cudnn64_6.dll\nGPU model and memory: 1080\nExact command to reproduce: HelloTF.java\n\nDescribe the problem\nDefault error message from NativeLibrary load() method is not helpful enough.\nSimple suggested improvement: please print the contents in the string variable \"frameworkResourceName\", which is the missing resource, when throwing a new UnsatisfiedLinkError exception.\nSource code / logs\nSuggested Source Code Improvement for NativeLibrary.java:\nif (jniResource == null) {\n  throw new UnsatisfiedLinkError(\n      String.format(\n          \"Cannot find TensorFlow native library %s for OS: %s, architecture: %s. See \"\n              + \"https://github.com/tensorflow/tensorflow/tree/master/tensorflow/java/README.md\"\n              + \" for possible solutions (such as building the library from source). Additional\"\n              + \" information on attempts to find the native library can be obtained by adding\"\n              + \" org.tensorflow.NativeLibrary.DEBUG=1 to the system properties of the JVM.\",\n              frameworkResourceName,\n          os(), architecture()));\n}", "body": "\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10 with Java API\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.3.0\r\n- **Python version**: \r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**: 8 with cudnn64_6.dll\r\n- **GPU model and memory**: 1080\r\n- **Exact command to reproduce**: HelloTF.java\r\n\r\n### Describe the problem\r\nDefault error message from NativeLibrary load() method is not helpful enough.   \r\nSimple suggested improvement: please print the contents in the string variable \"frameworkResourceName\", which is the missing resource, when throwing a new UnsatisfiedLinkError exception.\r\n\r\n### Source code / logs\r\nSuggested Source Code Improvement for NativeLibrary.java:\r\n\r\n    if (jniResource == null) {\r\n      throw new UnsatisfiedLinkError(\r\n          String.format(\r\n              \"Cannot find TensorFlow native library %s for OS: %s, architecture: %s. See \"\r\n                  + \"https://github.com/tensorflow/tensorflow/tree/master/tensorflow/java/README.md\"\r\n                  + \" for possible solutions (such as building the library from source). Additional\"\r\n                  + \" information on attempts to find the native library can be obtained by adding\"\r\n                  + \" org.tensorflow.NativeLibrary.DEBUG=1 to the system properties of the JVM.\",\r\n                  frameworkResourceName,\r\n              os(), architecture()));\r\n    }\r\n"}