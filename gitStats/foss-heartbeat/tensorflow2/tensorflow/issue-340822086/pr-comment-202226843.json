{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/202226843", "pull_request_review_id": 136886011, "id": 202226843, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjIyNjg0Mw==", "diff_hunk": "@@ -77,11 +77,63 @@ inline tensorflow::Status ConvertDType(tensorflow::DataType tf_dtype,\n       break;\n     default:\n       return tensorflow::errors::InvalidArgument(\n-          \"Unsupported data type \" + tensorflow::DataTypeString(tf_dtype));\n+          \"Unsupported data type \", tensorflow::DataTypeString(tf_dtype));\n   }\n   return tensorflow::Status::OK();\n }\n \n+void GetInputProperties(const grappler::GraphProperties& graph_properties,\n+                        const Node* outside_node, const int out_port,\n+                        PartialTensorShape* shape,\n+                        tensorflow::DataType* dtype) {\n+  if (graph_properties.HasOutputProperties(outside_node->name())) {\n+    auto output_params =\n+        graph_properties.GetOutputProperties(outside_node->name());\n+    auto out_shape = output_params.at(out_port);\n+    *dtype = out_shape.dtype();\n+    *shape = out_shape.shape();\n+  } else {\n+    VLOG(0) << \"Unknown output shape\" << outside_node->name();\n+    *dtype = outside_node->output_type(out_port);\n+  }\n+}\n+\n+void GetOutputProperties(const grappler::GraphProperties& graph_properties,\n+                         const Node* outside_node, const int in_port,\n+                        PartialTensorShape* shape,\n+                        tensorflow::DataType* dtype) {\n+  if (graph_properties.HasInputProperties(outside_node->name())) {\n+    auto input_params =\n+        graph_properties.GetInputProperties(outside_node->name());\n+    auto in_shape = input_params.at(in_port);\n+    *dtype = in_shape.dtype();\n+    *shape = in_shape.shape();\n+  } else {\n+    *dtype = outside_node->input_type(in_port);\n+  }\n+}\n+\n+tensorflow::Status ValidateInputProperties(const PartialTensorShape& shape,\n+                                           const tensorflow::DataType dtype,\n+                                           nvinfer1::DataType* trt_dtype) {\n+  TF_RETURN_IF_ERROR(ConvertDType(dtype, trt_dtype));\n+  if (shape.dims() < 0) {\n+    return tensorflow::errors::InvalidArgument(\n+        \"Input tensor rank is unknown.\");\n+  }\n+  if (shape.dims() > 8) {\n+    return tensorflow::errors::OutOfRange(\n+        \"Input tensor rank is greater than 8.\");\n+  }\n+  for (int d = 1; d < shape.dims(); ++d) {\n+    if (shape.dim_size(d) < 0) {\n+      return tensorflow::errors::InvalidArgument(\n+          \"Input tensor has a unknow non-batch dimemension at dim \", d);", "path": "tensorflow/contrib/tensorrt/convert/convert_nodes.cc", "position": null, "original_position": 72, "commit_id": "482b056d3ba925f52ccad8e7166a81120f43a761", "original_commit_id": "86f632e29810fa93db559f882567b9569dabfad5", "user": {"login": "samikama", "id": 10539540, "node_id": "MDQ6VXNlcjEwNTM5NTQw", "avatar_url": "https://avatars0.githubusercontent.com/u/10539540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samikama", "html_url": "https://github.com/samikama", "followers_url": "https://api.github.com/users/samikama/followers", "following_url": "https://api.github.com/users/samikama/following{/other_user}", "gists_url": "https://api.github.com/users/samikama/gists{/gist_id}", "starred_url": "https://api.github.com/users/samikama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samikama/subscriptions", "organizations_url": "https://api.github.com/users/samikama/orgs", "repos_url": "https://api.github.com/users/samikama/repos", "events_url": "https://api.github.com/users/samikama/events{/privacy}", "received_events_url": "https://api.github.com/users/samikama/received_events", "type": "User", "site_admin": false}, "body": "unknow->unknown", "created_at": "2018-07-13T02:03:23Z", "updated_at": "2018-07-23T15:40:30Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/20755#discussion_r202226843", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/20755", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/202226843"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/20755#discussion_r202226843"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/20755"}}, "body_html": "<p>unknow-&gt;unknown</p>", "body_text": "unknow->unknown"}