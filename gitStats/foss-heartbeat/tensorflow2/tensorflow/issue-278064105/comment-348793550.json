{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/348793550", "html_url": "https://github.com/tensorflow/tensorflow/issues/14998#issuecomment-348793550", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14998", "id": 348793550, "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODc5MzU1MA==", "user": {"login": "boeddeker", "id": 13744128, "node_id": "MDQ6VXNlcjEzNzQ0MTI4", "avatar_url": "https://avatars3.githubusercontent.com/u/13744128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boeddeker", "html_url": "https://github.com/boeddeker", "followers_url": "https://api.github.com/users/boeddeker/followers", "following_url": "https://api.github.com/users/boeddeker/following{/other_user}", "gists_url": "https://api.github.com/users/boeddeker/gists{/gist_id}", "starred_url": "https://api.github.com/users/boeddeker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boeddeker/subscriptions", "organizations_url": "https://api.github.com/users/boeddeker/orgs", "repos_url": "https://api.github.com/users/boeddeker/repos", "events_url": "https://api.github.com/users/boeddeker/events{/privacy}", "received_events_url": "https://api.github.com/users/boeddeker/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-03T16:38:16Z", "updated_at": "2017-12-03T16:38:16Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The Code is already finished (see initial comment) and since the current reshape is powerful enough, only a small wrapper is necessary to extend the API. (The function is inside my code base and I thought that maybe also some other people find it useful.)</p>\n<p>I agree that <code>partial_reshape</code> would highlight, what the function will do, but it is an extension of <code>reshape</code> and not a modification of <code>reshape</code>. So the default arguments of <code>partial_reshape</code> represent a wrapper around <code>reshape</code>. Then some people would not use <code>partial_reshape</code>, because they do not know it and other will make an alias and use only <code>partial_reshape</code>. (In the case somebody can imagine another extension of reshape that is incompatible with my suggestion, I agree that a separate function will be better.)</p>\n<p>When you compare <code>tf.matmul</code> with <code>np.matmul</code> both have a common interface, but <code>tf</code> extends the base idea to be more powerful. So it is already done in tensorflow to add more keywords.</p>\n<p>Another point is, that it is quite easy to calculate the desired shape in numpy, because in numpy the shape is a list of int, while in tensorflow it can happen that the shape is undefined or there are more than one undefined shapes.</p>", "body_text": "The Code is already finished (see initial comment) and since the current reshape is powerful enough, only a small wrapper is necessary to extend the API. (The function is inside my code base and I thought that maybe also some other people find it useful.)\nI agree that partial_reshape would highlight, what the function will do, but it is an extension of reshape and not a modification of reshape. So the default arguments of partial_reshape represent a wrapper around reshape. Then some people would not use partial_reshape, because they do not know it and other will make an alias and use only partial_reshape. (In the case somebody can imagine another extension of reshape that is incompatible with my suggestion, I agree that a separate function will be better.)\nWhen you compare tf.matmul with np.matmul both have a common interface, but tf extends the base idea to be more powerful. So it is already done in tensorflow to add more keywords.\nAnother point is, that it is quite easy to calculate the desired shape in numpy, because in numpy the shape is a list of int, while in tensorflow it can happen that the shape is undefined or there are more than one undefined shapes.", "body": "The Code is already finished (see initial comment) and since the current reshape is powerful enough, only a small wrapper is necessary to extend the API. (The function is inside my code base and I thought that maybe also some other people find it useful.)\r\n\r\nI agree that `partial_reshape` would highlight, what the function will do, but it is an extension of `reshape` and not a modification of `reshape`. So the default arguments of `partial_reshape` represent a wrapper around `reshape`. Then some people would not use `partial_reshape`, because they do not know it and other will make an alias and use only `partial_reshape`. (In the case somebody can imagine another extension of reshape that is incompatible with my suggestion, I agree that a separate function will be better.)\r\n\r\nWhen you compare `tf.matmul` with `np.matmul` both have a common interface, but `tf` extends the base idea to be more powerful. So it is already done in tensorflow to add more keywords.\r\n\r\nAnother point is, that it is quite easy to calculate the desired shape in numpy, because in numpy the shape is a list of int, while in tensorflow it can happen that the shape is undefined or there are more than one undefined shapes.\r\n\r\n\r\n\r\n"}