{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/344781736", "html_url": "https://github.com/tensorflow/tensorflow/issues/14169#issuecomment-344781736", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14169", "id": 344781736, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDc4MTczNg==", "user": {"login": "yzhwang", "id": 1002405, "node_id": "MDQ6VXNlcjEwMDI0MDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1002405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzhwang", "html_url": "https://github.com/yzhwang", "followers_url": "https://api.github.com/users/yzhwang/followers", "following_url": "https://api.github.com/users/yzhwang/following{/other_user}", "gists_url": "https://api.github.com/users/yzhwang/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzhwang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzhwang/subscriptions", "organizations_url": "https://api.github.com/users/yzhwang/orgs", "repos_url": "https://api.github.com/users/yzhwang/repos", "events_url": "https://api.github.com/users/yzhwang/events{/privacy}", "received_events_url": "https://api.github.com/users/yzhwang/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-16T01:05:10Z", "updated_at": "2017-11-16T01:05:10Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hi <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=8793654\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vincentfung13\">@vincentfung13</a> I've made a commit that should solve the problem: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/4535bd5df4d077072a8f207146bf4cd051971237/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/4535bd5df4d077072a8f207146bf4cd051971237\"><tt>4535bd5</tt></a> Now each process that runs a TF program will try to initialize CUDA runtime before the giant device memory allocation, and if the remaining memory is insufficient, there should be an error for session creation. Please verify if this solves the problem. Thanks!</p>", "body_text": "Hi @vincentfung13 I've made a commit that should solve the problem: 4535bd5 Now each process that runs a TF program will try to initialize CUDA runtime before the giant device memory allocation, and if the remaining memory is insufficient, there should be an error for session creation. Please verify if this solves the problem. Thanks!", "body": "Hi @vincentfung13 I've made a commit that should solve the problem: https://github.com/tensorflow/tensorflow/commit/4535bd5df4d077072a8f207146bf4cd051971237 Now each process that runs a TF program will try to initialize CUDA runtime before the giant device memory allocation, and if the remaining memory is insufficient, there should be an error for session creation. Please verify if this solves the problem. Thanks!"}