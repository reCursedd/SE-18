{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/292241294", "html_url": "https://github.com/tensorflow/tensorflow/issues/8962#issuecomment-292241294", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8962", "id": 292241294, "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjI0MTI5NA==", "user": {"login": "eaplatanios", "id": 1294940, "node_id": "MDQ6VXNlcjEyOTQ5NDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1294940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eaplatanios", "html_url": "https://github.com/eaplatanios", "followers_url": "https://api.github.com/users/eaplatanios/followers", "following_url": "https://api.github.com/users/eaplatanios/following{/other_user}", "gists_url": "https://api.github.com/users/eaplatanios/gists{/gist_id}", "starred_url": "https://api.github.com/users/eaplatanios/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eaplatanios/subscriptions", "organizations_url": "https://api.github.com/users/eaplatanios/orgs", "repos_url": "https://api.github.com/users/eaplatanios/repos", "events_url": "https://api.github.com/users/eaplatanios/events{/privacy}", "received_events_url": "https://api.github.com/users/eaplatanios/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-06T17:09:29Z", "updated_at": "2017-04-06T17:09:29Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Ok for now I'll use a temporary Scala-only solution, but will also look into what would be required for supporting that in the C API.</p>\n<p>I am aware of Java API. I actually took the JNI bindings from that project, extended them to support more features of the C API (e.g., control inputs, obtaining all ops in the graph, among others), and built an entirely new Scala library on top of it. It is loosely based on the Java library but supports more features (such as a createWith function for specifying name scopes, control dependencies, device contexts, among others). My goal is to make it support much of what the Python API supports so I am currently going through the Python code and adding features. I plan to open it to the public once it is complete enough to be usable in wider contexts than the Java API.</p>", "body_text": "Ok for now I'll use a temporary Scala-only solution, but will also look into what would be required for supporting that in the C API.\nI am aware of Java API. I actually took the JNI bindings from that project, extended them to support more features of the C API (e.g., control inputs, obtaining all ops in the graph, among others), and built an entirely new Scala library on top of it. It is loosely based on the Java library but supports more features (such as a createWith function for specifying name scopes, control dependencies, device contexts, among others). My goal is to make it support much of what the Python API supports so I am currently going through the Python code and adding features. I plan to open it to the public once it is complete enough to be usable in wider contexts than the Java API.", "body": "Ok for now I'll use a temporary Scala-only solution, but will also look into what would be required for supporting that in the C API.\r\n\r\nI am aware of Java API. I actually took the JNI bindings from that project, extended them to support more features of the C API (e.g., control inputs, obtaining all ops in the graph, among others), and built an entirely new Scala library on top of it. It is loosely based on the Java library but supports more features (such as a createWith function for specifying name scopes, control dependencies, device contexts, among others). My goal is to make it support much of what the Python API supports so I am currently going through the Python code and adding features. I plan to open it to the public once it is complete enough to be usable in wider contexts than the Java API."}