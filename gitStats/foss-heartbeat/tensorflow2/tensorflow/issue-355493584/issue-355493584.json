{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21968", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21968/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21968/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21968/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21968", "id": 355493584, "node_id": "MDU6SXNzdWUzNTU0OTM1ODQ=", "number": 21968, "title": "AssertionError: tensorflow mulitiple GPU train with MirroredStrategy", "user": {"login": "honeytidy", "id": 1021165, "node_id": "MDQ6VXNlcjEwMjExNjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1021165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/honeytidy", "html_url": "https://github.com/honeytidy", "followers_url": "https://api.github.com/users/honeytidy/followers", "following_url": "https://api.github.com/users/honeytidy/following{/other_user}", "gists_url": "https://api.github.com/users/honeytidy/gists{/gist_id}", "starred_url": "https://api.github.com/users/honeytidy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/honeytidy/subscriptions", "organizations_url": "https://api.github.com/users/honeytidy/orgs", "repos_url": "https://api.github.com/users/honeytidy/repos", "events_url": "https://api.github.com/users/honeytidy/events{/privacy}", "received_events_url": "https://api.github.com/users/honeytidy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 996845227, "node_id": "MDU6TGFiZWw5OTY4NDUyMjc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:dist-strat", "name": "comp:dist-strat", "color": "0052cc", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "yuefengz", "id": 1647833, "node_id": "MDQ6VXNlcjE2NDc4MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1647833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuefengz", "html_url": "https://github.com/yuefengz", "followers_url": "https://api.github.com/users/yuefengz/followers", "following_url": "https://api.github.com/users/yuefengz/following{/other_user}", "gists_url": "https://api.github.com/users/yuefengz/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuefengz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuefengz/subscriptions", "organizations_url": "https://api.github.com/users/yuefengz/orgs", "repos_url": "https://api.github.com/users/yuefengz/repos", "events_url": "https://api.github.com/users/yuefengz/events{/privacy}", "received_events_url": "https://api.github.com/users/yuefengz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yuefengz", "id": 1647833, "node_id": "MDQ6VXNlcjE2NDc4MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1647833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuefengz", "html_url": "https://github.com/yuefengz", "followers_url": "https://api.github.com/users/yuefengz/followers", "following_url": "https://api.github.com/users/yuefengz/following{/other_user}", "gists_url": "https://api.github.com/users/yuefengz/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuefengz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuefengz/subscriptions", "organizations_url": "https://api.github.com/users/yuefengz/orgs", "repos_url": "https://api.github.com/users/yuefengz/repos", "events_url": "https://api.github.com/users/yuefengz/events{/privacy}", "received_events_url": "https://api.github.com/users/yuefengz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2018-08-30T09:09:51Z", "updated_at": "2018-10-19T22:21:28Z", "closed_at": "2018-10-19T22:21:28Z", "author_association": "NONE", "body_html": "<p>I want to train with multiple gpu with tensorflow-1.10. I use the estimator and MirroredStrategy. The model is resnet50 which is official model of tensorflow . The following is my code and error log. Am I use MirroredStrategy in the wrong way?</p>\n<pre><code>import tensorflow as tf\nimport numpy as np\nfrom tensorflow.contrib.slim.nets import resnet_v2\nimport tensorflow.contrib.slim as slim\n\n(x_train, y_train), (x_test, y_test) = tf.keras.datasets.mnist.load_data(path='mnist.npz')\nx_train = np.expand_dims(x_train, 3).astype(np.float32)\ny_train = y_train.astype(np.int32)\nx_test = np.expand_dims(x_test, 3).astype(np.float32)\ny_test = y_test.astype(np.int32)\n\ntf.logging.set_verbosity(tf.logging.INFO)\n\ncls_num = 10\n\n\ndef model_fn(features, labels, mode):\n    is_training = (mode == tf.estimator.ModeKeys.TRAIN)\n    with slim.arg_scope(resnet_v2.resnet_arg_scope()):\n        logits, endpoints = resnet_v2.resnet_v2_50(features, \n                num_classes=cls_num,\n                is_training=is_training)\n\n    logits = tf.squeeze(logits, [1, 2])\n    preds = tf.argmax(logits, 1)\n    loss = tf.losses.sparse_softmax_cross_entropy(labels=labels, logits=logits)\n    optimizer = tf.train.AdagradOptimizer(learning_rate=0.01)\n    update_ops = tf.get_collection(tf.GraphKeys.UPDATE_OPS)\n    with tf.control_dependencies(update_ops):\n        train_op = optimizer.minimize(loss, global_step=tf.train.get_global_step())\n\n    accuracy = tf.metrics.accuracy(labels=labels, predictions=preds)\n    metrics = {'accuracy': accuracy}\n\n    if mode == tf.estimator.ModeKeys.EVAL:\n        return tf.estimator.EstimatorSpec(mode, loss=loss, eval_metric_ops=metrics)\n\n    return tf.estimator.EstimatorSpec(mode, loss=loss, train_op=train_op) \n\n\ndef train_input_fn():\n    dataset = tf.data.Dataset.from_tensor_slices((x_train, y_train))\n    dataset = dataset.repeat(1).batch(128)\n    return dataset\n\ndef eval_input_fn():\n    dataset = tf.data.Dataset.from_tensor_slices((x_test, y_test))\n    dataset = dataset.repeat(1).batch(128)\n    return dataset\n\n\ndistribution = tf.contrib.distribute.MirroredStrategy()\nconfig = tf.estimator.RunConfig(train_distribute=distribution)\nestimator = tf.estimator.Estimator(model_fn=model_fn, model_dir='logs', config=config)\ntrain_spec = tf.estimator.TrainSpec(input_fn=train_input_fn)\neval_specs = tf.estimator.EvalSpec(input_fn=eval_input_fn)\nfor _ in xrange(100):\n    tf.estimator.train_and_evaluate(estimator, train_spec, eval_specs)\n</code></pre>\n<p>This is the error log:</p>\n<pre><code>2018-08-30 16:58:47.446417: I tensorflow/core/common_runtime/gpu/gpu_device.cc:971]      0 1 \n2018-08-30 16:58:47.446428: I tensorflow/core/common_runtime/gpu/gpu_device.cc:984] 0:   N Y \n2018-08-30 16:58:47.446437: I tensorflow/core/common_runtime/gpu/gpu_device.cc:984] 1:   Y N \n2018-08-30 16:58:47.446877: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1097] Created TensorFlow device (/device:GPU:0 with 21544 MB memory) -&gt; physical GPU (device: 0, name: Tesla P40, pci bus id: 0000:83:00.0, compute capability: 6.1)\n2018-08-30 16:58:47.447098: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1097] Created TensorFlow device (/device:GPU:1 with 21544 MB memory) -&gt; physical GPU (device: 1, name: Tesla P40, pci bus id: 0000:84:00.0, compute capability: 6.1)\nINFO:tensorflow:Device is available but not used by distribute strategy: /device:CPU:0\nINFO:tensorflow:Configured nccl all-reduce.\nINFO:tensorflow:Calling model_fn.\nINFO:tensorflow:Error reported to Coordinator: \nTraceback (most recent call last):\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/training/coordinator.py\", line 297, in stop_on_exception\n    yield\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 519, in run\n    self.main_result = self.main_fn(*self.main_args, **self.main_kwargs)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 1133, in _call_model_fn\n    model_fn_results = self._model_fn(features=features, **kwargs)\n  File \"test_mnist.py\", line 22, in model_fn\n    is_training=is_training)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/slim/python/slim/nets/resnet_v2.py\", line 287, in resnet_v2_50\n    scope=scope)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/slim/python/slim/nets/resnet_v2.py\", line 216, in resnet_v2\n    net = resnet_utils.stack_blocks_dense(net, blocks, output_stride)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 183, in func_with_args\n    return func(*args, **current_args)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/slim/python/slim/nets/resnet_utils.py\", line 215, in stack_blocks_dense\n    net = block.unit_fn(net, rate=1, **unit)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 183, in func_with_args\n    return func(*args, **current_args)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/slim/python/slim/nets/resnet_v2.py\", line 101, in bottleneck\n    inputs, activation_fn=nn_ops.relu, scope='preact')\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 183, in func_with_args\n    return func(*args, **current_args)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/layers/python/layers/layers.py\", line 650, in batch_norm\n    outputs = layer.apply(inputs, training=is_training)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/keras/engine/base_layer.py\", line 805, in apply\n    return self.__call__(inputs, *args, **kwargs)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 362, in __call__\n    outputs = super(Layer, self).__call__(inputs, *args, **kwargs)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/keras/engine/base_layer.py\", line 736, in __call__\n    outputs = self.call(inputs, *args, **kwargs)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/layers/normalization.py\", line 158, in call\n    return super(BatchNormalization, self).call(inputs, training=training)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/keras/layers/normalization.py\", line 514, in call\n    outputs = self._fused_batch_norm(inputs, training=training)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/keras/layers/normalization.py\", line 420, in _fused_batch_norm\n    momentum)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/keras/layers/normalization.py\", line 369, in _assign_moving_average\n    with ops.colocate_with(variable):\n  File \"/home/soft/lib/python2.7/contextlib.py\", line 17, in __enter__\n    return self.gen.next()\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 3939, in _colocate_with_for_gradient\n    with self.colocate_with(op, ignore_existing):\n  File \"/home/soft/lib/python2.7/contextlib.py\", line 17, in __enter__\n    return self.gen.next()\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 3992, in colocate_with\n    op = internal_convert_to_tensor_or_indexed_slices(op, as_ref=True).op\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1255, in internal_convert_to_tensor_or_indexed_slices\n    value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1094, in internal_convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/distribute/python/values.py\", line 414, in _tensor_conversion_mirrored\n    assert not as_ref\nAssertionError\nTraceback (most recent call last):\n  File \"test_mnist.py\", line 58, in &lt;module&gt;\n    tf.estimator.train_and_evaluate(estimator, train_spec, eval_specs)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/estimator/training.py\", line 451, in train_and_evaluate\n    return executor.run()\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/estimator/training.py\", line 590, in run\n    return self.run_local()\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/estimator/training.py\", line 691, in run_local\n    saving_listeners=saving_listeners)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 376, in train\n    loss = self._train_model(input_fn, hooks, saving_listeners)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 1143, in _train_model\n    return self._train_model_distributed(input_fn, hooks, saving_listeners)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 1255, in _train_model_distributed\n    self.config)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/training/distribute.py\", line 777, in call_for_each_tower\n    return self._call_for_each_tower(fn, *args, **kwargs)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 308, in _call_for_each_tower\n    coord.join(threads)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/training/coordinator.py\", line 389, in join\n    six.reraise(*self._exc_info_to_raise)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/training/coordinator.py\", line 297, in stop_on_exception\n    yield\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 519, in run\n    self.main_result = self.main_fn(*self.main_args, **self.main_kwargs)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 1133, in _call_model_fn\n    model_fn_results = self._model_fn(features=features, **kwargs)\n  File \"test_mnist.py\", line 22, in model_fn\n    is_training=is_training)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/slim/python/slim/nets/resnet_v2.py\", line 287, in resnet_v2_50\n    scope=scope)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/slim/python/slim/nets/resnet_v2.py\", line 216, in resnet_v2\n    net = resnet_utils.stack_blocks_dense(net, blocks, output_stride)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 183, in func_with_args\n    return func(*args, **current_args)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/slim/python/slim/nets/resnet_utils.py\", line 215, in stack_blocks_dense\n    net = block.unit_fn(net, rate=1, **unit)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 183, in func_with_args\n    return func(*args, **current_args)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/slim/python/slim/nets/resnet_v2.py\", line 101, in bottleneck\n    inputs, activation_fn=nn_ops.relu, scope='preact')\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 183, in func_with_args\n    return func(*args, **current_args)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/layers/python/layers/layers.py\", line 650, in batch_norm\n    outputs = layer.apply(inputs, training=is_training)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/keras/engine/base_layer.py\", line 805, in apply\n    return self.__call__(inputs, *args, **kwargs)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 362, in __call__\n    outputs = super(Layer, self).__call__(inputs, *args, **kwargs)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/keras/engine/base_layer.py\", line 736, in __call__\n    outputs = self.call(inputs, *args, **kwargs)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/layers/normalization.py\", line 158, in call\n    return super(BatchNormalization, self).call(inputs, training=training)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/keras/layers/normalization.py\", line 514, in call\n    outputs = self._fused_batch_norm(inputs, training=training)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/keras/layers/normalization.py\", line 420, in _fused_batch_norm\n    momentum)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/keras/layers/normalization.py\", line 369, in _assign_moving_average\n    with ops.colocate_with(variable):\n  File \"/home/soft/lib/python2.7/contextlib.py\", line 17, in __enter__\n    return self.gen.next()\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 3939, in _colocate_with_for_gradient\n    with self.colocate_with(op, ignore_existing):\n  File \"/home/soft/lib/python2.7/contextlib.py\", line 17, in __enter__\n    return self.gen.next()\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 3992, in colocate_with\n    op = internal_convert_to_tensor_or_indexed_slices(op, as_ref=True).op\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1255, in internal_convert_to_tensor_or_indexed_slices\n    value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1094, in internal_convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/distribute/python/values.py\", line 414, in _tensor_conversion_mirrored\n    assert not as_ref\nAssertionError\n</code></pre>", "body_text": "I want to train with multiple gpu with tensorflow-1.10. I use the estimator and MirroredStrategy. The model is resnet50 which is official model of tensorflow . The following is my code and error log. Am I use MirroredStrategy in the wrong way?\nimport tensorflow as tf\nimport numpy as np\nfrom tensorflow.contrib.slim.nets import resnet_v2\nimport tensorflow.contrib.slim as slim\n\n(x_train, y_train), (x_test, y_test) = tf.keras.datasets.mnist.load_data(path='mnist.npz')\nx_train = np.expand_dims(x_train, 3).astype(np.float32)\ny_train = y_train.astype(np.int32)\nx_test = np.expand_dims(x_test, 3).astype(np.float32)\ny_test = y_test.astype(np.int32)\n\ntf.logging.set_verbosity(tf.logging.INFO)\n\ncls_num = 10\n\n\ndef model_fn(features, labels, mode):\n    is_training = (mode == tf.estimator.ModeKeys.TRAIN)\n    with slim.arg_scope(resnet_v2.resnet_arg_scope()):\n        logits, endpoints = resnet_v2.resnet_v2_50(features, \n                num_classes=cls_num,\n                is_training=is_training)\n\n    logits = tf.squeeze(logits, [1, 2])\n    preds = tf.argmax(logits, 1)\n    loss = tf.losses.sparse_softmax_cross_entropy(labels=labels, logits=logits)\n    optimizer = tf.train.AdagradOptimizer(learning_rate=0.01)\n    update_ops = tf.get_collection(tf.GraphKeys.UPDATE_OPS)\n    with tf.control_dependencies(update_ops):\n        train_op = optimizer.minimize(loss, global_step=tf.train.get_global_step())\n\n    accuracy = tf.metrics.accuracy(labels=labels, predictions=preds)\n    metrics = {'accuracy': accuracy}\n\n    if mode == tf.estimator.ModeKeys.EVAL:\n        return tf.estimator.EstimatorSpec(mode, loss=loss, eval_metric_ops=metrics)\n\n    return tf.estimator.EstimatorSpec(mode, loss=loss, train_op=train_op) \n\n\ndef train_input_fn():\n    dataset = tf.data.Dataset.from_tensor_slices((x_train, y_train))\n    dataset = dataset.repeat(1).batch(128)\n    return dataset\n\ndef eval_input_fn():\n    dataset = tf.data.Dataset.from_tensor_slices((x_test, y_test))\n    dataset = dataset.repeat(1).batch(128)\n    return dataset\n\n\ndistribution = tf.contrib.distribute.MirroredStrategy()\nconfig = tf.estimator.RunConfig(train_distribute=distribution)\nestimator = tf.estimator.Estimator(model_fn=model_fn, model_dir='logs', config=config)\ntrain_spec = tf.estimator.TrainSpec(input_fn=train_input_fn)\neval_specs = tf.estimator.EvalSpec(input_fn=eval_input_fn)\nfor _ in xrange(100):\n    tf.estimator.train_and_evaluate(estimator, train_spec, eval_specs)\n\nThis is the error log:\n2018-08-30 16:58:47.446417: I tensorflow/core/common_runtime/gpu/gpu_device.cc:971]      0 1 \n2018-08-30 16:58:47.446428: I tensorflow/core/common_runtime/gpu/gpu_device.cc:984] 0:   N Y \n2018-08-30 16:58:47.446437: I tensorflow/core/common_runtime/gpu/gpu_device.cc:984] 1:   Y N \n2018-08-30 16:58:47.446877: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1097] Created TensorFlow device (/device:GPU:0 with 21544 MB memory) -> physical GPU (device: 0, name: Tesla P40, pci bus id: 0000:83:00.0, compute capability: 6.1)\n2018-08-30 16:58:47.447098: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1097] Created TensorFlow device (/device:GPU:1 with 21544 MB memory) -> physical GPU (device: 1, name: Tesla P40, pci bus id: 0000:84:00.0, compute capability: 6.1)\nINFO:tensorflow:Device is available but not used by distribute strategy: /device:CPU:0\nINFO:tensorflow:Configured nccl all-reduce.\nINFO:tensorflow:Calling model_fn.\nINFO:tensorflow:Error reported to Coordinator: \nTraceback (most recent call last):\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/training/coordinator.py\", line 297, in stop_on_exception\n    yield\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 519, in run\n    self.main_result = self.main_fn(*self.main_args, **self.main_kwargs)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 1133, in _call_model_fn\n    model_fn_results = self._model_fn(features=features, **kwargs)\n  File \"test_mnist.py\", line 22, in model_fn\n    is_training=is_training)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/slim/python/slim/nets/resnet_v2.py\", line 287, in resnet_v2_50\n    scope=scope)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/slim/python/slim/nets/resnet_v2.py\", line 216, in resnet_v2\n    net = resnet_utils.stack_blocks_dense(net, blocks, output_stride)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 183, in func_with_args\n    return func(*args, **current_args)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/slim/python/slim/nets/resnet_utils.py\", line 215, in stack_blocks_dense\n    net = block.unit_fn(net, rate=1, **unit)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 183, in func_with_args\n    return func(*args, **current_args)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/slim/python/slim/nets/resnet_v2.py\", line 101, in bottleneck\n    inputs, activation_fn=nn_ops.relu, scope='preact')\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 183, in func_with_args\n    return func(*args, **current_args)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/layers/python/layers/layers.py\", line 650, in batch_norm\n    outputs = layer.apply(inputs, training=is_training)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/keras/engine/base_layer.py\", line 805, in apply\n    return self.__call__(inputs, *args, **kwargs)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 362, in __call__\n    outputs = super(Layer, self).__call__(inputs, *args, **kwargs)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/keras/engine/base_layer.py\", line 736, in __call__\n    outputs = self.call(inputs, *args, **kwargs)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/layers/normalization.py\", line 158, in call\n    return super(BatchNormalization, self).call(inputs, training=training)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/keras/layers/normalization.py\", line 514, in call\n    outputs = self._fused_batch_norm(inputs, training=training)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/keras/layers/normalization.py\", line 420, in _fused_batch_norm\n    momentum)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/keras/layers/normalization.py\", line 369, in _assign_moving_average\n    with ops.colocate_with(variable):\n  File \"/home/soft/lib/python2.7/contextlib.py\", line 17, in __enter__\n    return self.gen.next()\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 3939, in _colocate_with_for_gradient\n    with self.colocate_with(op, ignore_existing):\n  File \"/home/soft/lib/python2.7/contextlib.py\", line 17, in __enter__\n    return self.gen.next()\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 3992, in colocate_with\n    op = internal_convert_to_tensor_or_indexed_slices(op, as_ref=True).op\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1255, in internal_convert_to_tensor_or_indexed_slices\n    value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1094, in internal_convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/distribute/python/values.py\", line 414, in _tensor_conversion_mirrored\n    assert not as_ref\nAssertionError\nTraceback (most recent call last):\n  File \"test_mnist.py\", line 58, in <module>\n    tf.estimator.train_and_evaluate(estimator, train_spec, eval_specs)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/estimator/training.py\", line 451, in train_and_evaluate\n    return executor.run()\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/estimator/training.py\", line 590, in run\n    return self.run_local()\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/estimator/training.py\", line 691, in run_local\n    saving_listeners=saving_listeners)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 376, in train\n    loss = self._train_model(input_fn, hooks, saving_listeners)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 1143, in _train_model\n    return self._train_model_distributed(input_fn, hooks, saving_listeners)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 1255, in _train_model_distributed\n    self.config)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/training/distribute.py\", line 777, in call_for_each_tower\n    return self._call_for_each_tower(fn, *args, **kwargs)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 308, in _call_for_each_tower\n    coord.join(threads)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/training/coordinator.py\", line 389, in join\n    six.reraise(*self._exc_info_to_raise)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/training/coordinator.py\", line 297, in stop_on_exception\n    yield\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 519, in run\n    self.main_result = self.main_fn(*self.main_args, **self.main_kwargs)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 1133, in _call_model_fn\n    model_fn_results = self._model_fn(features=features, **kwargs)\n  File \"test_mnist.py\", line 22, in model_fn\n    is_training=is_training)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/slim/python/slim/nets/resnet_v2.py\", line 287, in resnet_v2_50\n    scope=scope)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/slim/python/slim/nets/resnet_v2.py\", line 216, in resnet_v2\n    net = resnet_utils.stack_blocks_dense(net, blocks, output_stride)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 183, in func_with_args\n    return func(*args, **current_args)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/slim/python/slim/nets/resnet_utils.py\", line 215, in stack_blocks_dense\n    net = block.unit_fn(net, rate=1, **unit)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 183, in func_with_args\n    return func(*args, **current_args)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/slim/python/slim/nets/resnet_v2.py\", line 101, in bottleneck\n    inputs, activation_fn=nn_ops.relu, scope='preact')\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 183, in func_with_args\n    return func(*args, **current_args)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/layers/python/layers/layers.py\", line 650, in batch_norm\n    outputs = layer.apply(inputs, training=is_training)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/keras/engine/base_layer.py\", line 805, in apply\n    return self.__call__(inputs, *args, **kwargs)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 362, in __call__\n    outputs = super(Layer, self).__call__(inputs, *args, **kwargs)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/keras/engine/base_layer.py\", line 736, in __call__\n    outputs = self.call(inputs, *args, **kwargs)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/layers/normalization.py\", line 158, in call\n    return super(BatchNormalization, self).call(inputs, training=training)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/keras/layers/normalization.py\", line 514, in call\n    outputs = self._fused_batch_norm(inputs, training=training)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/keras/layers/normalization.py\", line 420, in _fused_batch_norm\n    momentum)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/keras/layers/normalization.py\", line 369, in _assign_moving_average\n    with ops.colocate_with(variable):\n  File \"/home/soft/lib/python2.7/contextlib.py\", line 17, in __enter__\n    return self.gen.next()\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 3939, in _colocate_with_for_gradient\n    with self.colocate_with(op, ignore_existing):\n  File \"/home/soft/lib/python2.7/contextlib.py\", line 17, in __enter__\n    return self.gen.next()\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 3992, in colocate_with\n    op = internal_convert_to_tensor_or_indexed_slices(op, as_ref=True).op\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1255, in internal_convert_to_tensor_or_indexed_slices\n    value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1094, in internal_convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/distribute/python/values.py\", line 414, in _tensor_conversion_mirrored\n    assert not as_ref\nAssertionError", "body": "I want to train with multiple gpu with tensorflow-1.10. I use the estimator and MirroredStrategy. The model is resnet50 which is official model of tensorflow . The following is my code and error log. Am I use MirroredStrategy in the wrong way?\r\n```\r\nimport tensorflow as tf\r\nimport numpy as np\r\nfrom tensorflow.contrib.slim.nets import resnet_v2\r\nimport tensorflow.contrib.slim as slim\r\n\r\n(x_train, y_train), (x_test, y_test) = tf.keras.datasets.mnist.load_data(path='mnist.npz')\r\nx_train = np.expand_dims(x_train, 3).astype(np.float32)\r\ny_train = y_train.astype(np.int32)\r\nx_test = np.expand_dims(x_test, 3).astype(np.float32)\r\ny_test = y_test.astype(np.int32)\r\n\r\ntf.logging.set_verbosity(tf.logging.INFO)\r\n\r\ncls_num = 10\r\n\r\n\r\ndef model_fn(features, labels, mode):\r\n    is_training = (mode == tf.estimator.ModeKeys.TRAIN)\r\n    with slim.arg_scope(resnet_v2.resnet_arg_scope()):\r\n        logits, endpoints = resnet_v2.resnet_v2_50(features, \r\n                num_classes=cls_num,\r\n                is_training=is_training)\r\n\r\n    logits = tf.squeeze(logits, [1, 2])\r\n    preds = tf.argmax(logits, 1)\r\n    loss = tf.losses.sparse_softmax_cross_entropy(labels=labels, logits=logits)\r\n    optimizer = tf.train.AdagradOptimizer(learning_rate=0.01)\r\n    update_ops = tf.get_collection(tf.GraphKeys.UPDATE_OPS)\r\n    with tf.control_dependencies(update_ops):\r\n        train_op = optimizer.minimize(loss, global_step=tf.train.get_global_step())\r\n\r\n    accuracy = tf.metrics.accuracy(labels=labels, predictions=preds)\r\n    metrics = {'accuracy': accuracy}\r\n\r\n    if mode == tf.estimator.ModeKeys.EVAL:\r\n        return tf.estimator.EstimatorSpec(mode, loss=loss, eval_metric_ops=metrics)\r\n\r\n    return tf.estimator.EstimatorSpec(mode, loss=loss, train_op=train_op) \r\n\r\n\r\ndef train_input_fn():\r\n    dataset = tf.data.Dataset.from_tensor_slices((x_train, y_train))\r\n    dataset = dataset.repeat(1).batch(128)\r\n    return dataset\r\n\r\ndef eval_input_fn():\r\n    dataset = tf.data.Dataset.from_tensor_slices((x_test, y_test))\r\n    dataset = dataset.repeat(1).batch(128)\r\n    return dataset\r\n\r\n\r\ndistribution = tf.contrib.distribute.MirroredStrategy()\r\nconfig = tf.estimator.RunConfig(train_distribute=distribution)\r\nestimator = tf.estimator.Estimator(model_fn=model_fn, model_dir='logs', config=config)\r\ntrain_spec = tf.estimator.TrainSpec(input_fn=train_input_fn)\r\neval_specs = tf.estimator.EvalSpec(input_fn=eval_input_fn)\r\nfor _ in xrange(100):\r\n    tf.estimator.train_and_evaluate(estimator, train_spec, eval_specs)\r\n```\r\n\r\nThis is the error log:\r\n```\r\n2018-08-30 16:58:47.446417: I tensorflow/core/common_runtime/gpu/gpu_device.cc:971]      0 1 \r\n2018-08-30 16:58:47.446428: I tensorflow/core/common_runtime/gpu/gpu_device.cc:984] 0:   N Y \r\n2018-08-30 16:58:47.446437: I tensorflow/core/common_runtime/gpu/gpu_device.cc:984] 1:   Y N \r\n2018-08-30 16:58:47.446877: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1097] Created TensorFlow device (/device:GPU:0 with 21544 MB memory) -> physical GPU (device: 0, name: Tesla P40, pci bus id: 0000:83:00.0, compute capability: 6.1)\r\n2018-08-30 16:58:47.447098: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1097] Created TensorFlow device (/device:GPU:1 with 21544 MB memory) -> physical GPU (device: 1, name: Tesla P40, pci bus id: 0000:84:00.0, compute capability: 6.1)\r\nINFO:tensorflow:Device is available but not used by distribute strategy: /device:CPU:0\r\nINFO:tensorflow:Configured nccl all-reduce.\r\nINFO:tensorflow:Calling model_fn.\r\nINFO:tensorflow:Error reported to Coordinator: \r\nTraceback (most recent call last):\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/training/coordinator.py\", line 297, in stop_on_exception\r\n    yield\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 519, in run\r\n    self.main_result = self.main_fn(*self.main_args, **self.main_kwargs)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 1133, in _call_model_fn\r\n    model_fn_results = self._model_fn(features=features, **kwargs)\r\n  File \"test_mnist.py\", line 22, in model_fn\r\n    is_training=is_training)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/slim/python/slim/nets/resnet_v2.py\", line 287, in resnet_v2_50\r\n    scope=scope)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/slim/python/slim/nets/resnet_v2.py\", line 216, in resnet_v2\r\n    net = resnet_utils.stack_blocks_dense(net, blocks, output_stride)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 183, in func_with_args\r\n    return func(*args, **current_args)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/slim/python/slim/nets/resnet_utils.py\", line 215, in stack_blocks_dense\r\n    net = block.unit_fn(net, rate=1, **unit)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 183, in func_with_args\r\n    return func(*args, **current_args)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/slim/python/slim/nets/resnet_v2.py\", line 101, in bottleneck\r\n    inputs, activation_fn=nn_ops.relu, scope='preact')\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 183, in func_with_args\r\n    return func(*args, **current_args)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/layers/python/layers/layers.py\", line 650, in batch_norm\r\n    outputs = layer.apply(inputs, training=is_training)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/keras/engine/base_layer.py\", line 805, in apply\r\n    return self.__call__(inputs, *args, **kwargs)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 362, in __call__\r\n    outputs = super(Layer, self).__call__(inputs, *args, **kwargs)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/keras/engine/base_layer.py\", line 736, in __call__\r\n    outputs = self.call(inputs, *args, **kwargs)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/layers/normalization.py\", line 158, in call\r\n    return super(BatchNormalization, self).call(inputs, training=training)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/keras/layers/normalization.py\", line 514, in call\r\n    outputs = self._fused_batch_norm(inputs, training=training)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/keras/layers/normalization.py\", line 420, in _fused_batch_norm\r\n    momentum)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/keras/layers/normalization.py\", line 369, in _assign_moving_average\r\n    with ops.colocate_with(variable):\r\n  File \"/home/soft/lib/python2.7/contextlib.py\", line 17, in __enter__\r\n    return self.gen.next()\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 3939, in _colocate_with_for_gradient\r\n    with self.colocate_with(op, ignore_existing):\r\n  File \"/home/soft/lib/python2.7/contextlib.py\", line 17, in __enter__\r\n    return self.gen.next()\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 3992, in colocate_with\r\n    op = internal_convert_to_tensor_or_indexed_slices(op, as_ref=True).op\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1255, in internal_convert_to_tensor_or_indexed_slices\r\n    value, dtype=dtype, name=name, as_ref=as_ref)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1094, in internal_convert_to_tensor\r\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/distribute/python/values.py\", line 414, in _tensor_conversion_mirrored\r\n    assert not as_ref\r\nAssertionError\r\nTraceback (most recent call last):\r\n  File \"test_mnist.py\", line 58, in <module>\r\n    tf.estimator.train_and_evaluate(estimator, train_spec, eval_specs)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/estimator/training.py\", line 451, in train_and_evaluate\r\n    return executor.run()\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/estimator/training.py\", line 590, in run\r\n    return self.run_local()\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/estimator/training.py\", line 691, in run_local\r\n    saving_listeners=saving_listeners)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 376, in train\r\n    loss = self._train_model(input_fn, hooks, saving_listeners)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 1143, in _train_model\r\n    return self._train_model_distributed(input_fn, hooks, saving_listeners)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 1255, in _train_model_distributed\r\n    self.config)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/training/distribute.py\", line 777, in call_for_each_tower\r\n    return self._call_for_each_tower(fn, *args, **kwargs)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 308, in _call_for_each_tower\r\n    coord.join(threads)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/training/coordinator.py\", line 389, in join\r\n    six.reraise(*self._exc_info_to_raise)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/training/coordinator.py\", line 297, in stop_on_exception\r\n    yield\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/distribute/python/mirrored_strategy.py\", line 519, in run\r\n    self.main_result = self.main_fn(*self.main_args, **self.main_kwargs)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/estimator/estimator.py\", line 1133, in _call_model_fn\r\n    model_fn_results = self._model_fn(features=features, **kwargs)\r\n  File \"test_mnist.py\", line 22, in model_fn\r\n    is_training=is_training)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/slim/python/slim/nets/resnet_v2.py\", line 287, in resnet_v2_50\r\n    scope=scope)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/slim/python/slim/nets/resnet_v2.py\", line 216, in resnet_v2\r\n    net = resnet_utils.stack_blocks_dense(net, blocks, output_stride)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 183, in func_with_args\r\n    return func(*args, **current_args)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/slim/python/slim/nets/resnet_utils.py\", line 215, in stack_blocks_dense\r\n    net = block.unit_fn(net, rate=1, **unit)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 183, in func_with_args\r\n    return func(*args, **current_args)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/slim/python/slim/nets/resnet_v2.py\", line 101, in bottleneck\r\n    inputs, activation_fn=nn_ops.relu, scope='preact')\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/framework/python/ops/arg_scope.py\", line 183, in func_with_args\r\n    return func(*args, **current_args)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/layers/python/layers/layers.py\", line 650, in batch_norm\r\n    outputs = layer.apply(inputs, training=is_training)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/keras/engine/base_layer.py\", line 805, in apply\r\n    return self.__call__(inputs, *args, **kwargs)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/layers/base.py\", line 362, in __call__\r\n    outputs = super(Layer, self).__call__(inputs, *args, **kwargs)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/keras/engine/base_layer.py\", line 736, in __call__\r\n    outputs = self.call(inputs, *args, **kwargs)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/layers/normalization.py\", line 158, in call\r\n    return super(BatchNormalization, self).call(inputs, training=training)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/keras/layers/normalization.py\", line 514, in call\r\n    outputs = self._fused_batch_norm(inputs, training=training)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/keras/layers/normalization.py\", line 420, in _fused_batch_norm\r\n    momentum)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/keras/layers/normalization.py\", line 369, in _assign_moving_average\r\n    with ops.colocate_with(variable):\r\n  File \"/home/soft/lib/python2.7/contextlib.py\", line 17, in __enter__\r\n    return self.gen.next()\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 3939, in _colocate_with_for_gradient\r\n    with self.colocate_with(op, ignore_existing):\r\n  File \"/home/soft/lib/python2.7/contextlib.py\", line 17, in __enter__\r\n    return self.gen.next()\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 3992, in colocate_with\r\n    op = internal_convert_to_tensor_or_indexed_slices(op, as_ref=True).op\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1255, in internal_convert_to_tensor_or_indexed_slices\r\n    value, dtype=dtype, name=name, as_ref=as_ref)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1094, in internal_convert_to_tensor\r\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n  File \"/home/soft/lib/python2.7/site-packages/tensorflow/contrib/distribute/python/values.py\", line 414, in _tensor_conversion_mirrored\r\n    assert not as_ref\r\nAssertionError\r\n```"}