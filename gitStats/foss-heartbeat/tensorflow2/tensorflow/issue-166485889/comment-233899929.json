{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/233899929", "html_url": "https://github.com/tensorflow/tensorflow/issues/3402#issuecomment-233899929", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3402", "id": 233899929, "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzg5OTkyOQ==", "user": {"login": "leihe001", "id": 20062851, "node_id": "MDQ6VXNlcjIwMDYyODUx", "avatar_url": "https://avatars0.githubusercontent.com/u/20062851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leihe001", "html_url": "https://github.com/leihe001", "followers_url": "https://api.github.com/users/leihe001/followers", "following_url": "https://api.github.com/users/leihe001/following{/other_user}", "gists_url": "https://api.github.com/users/leihe001/gists{/gist_id}", "starred_url": "https://api.github.com/users/leihe001/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leihe001/subscriptions", "organizations_url": "https://api.github.com/users/leihe001/orgs", "repos_url": "https://api.github.com/users/leihe001/repos", "events_url": "https://api.github.com/users/leihe001/events{/privacy}", "received_events_url": "https://api.github.com/users/leihe001/received_events", "type": "User", "site_admin": false}, "created_at": "2016-07-20T09:32:14Z", "updated_at": "2016-07-20T09:32:14Z", "author_association": "NONE", "body_html": "<p>Got it! I implement unpooling function in the layer4.</p>\n<pre><code>def UnPooling2x2ZeroFilled(x):\n  out = tf.concat(3, [x, tf.zeros_like(x)])\n  out = tf.concat(2, [out, tf.zeros_like(out)])\n\n  sh = x.get_shape().as_list()\n  if None not in sh[1:]:\n    out_size = [-1, sh[1] * 2, sh[2] * 2, sh[3]]\n    return tf.reshape(out, out_size)\n  else:\n    sh = tf.shape(x)\n    ret = tf.reshape(out, tf.pack([-1, sh[1] * 2, sh[2] * 2, sh[3]]))\n    ret.set_shape([None, None, None, sh[3]])\n    return ret\n```def UnPooling2x2ZeroFilled(x):\n  out = tf.concat(3, [x, tf.zeros_like(x)])\n  out = tf.concat(2, [out, tf.zeros_like(out)])\n\n  sh = x.get_shape().as_list()\n  if None not in sh[1:]:\n    out_size = [-1, sh[1] * 2, sh[2] * 2, sh[3]]\n    return tf.reshape(out, out_size)\n  else:\n    sh = tf.shape(x)\n    ret = tf.reshape(out, tf.pack([-1, sh[1] * 2, sh[2] * 2, sh[3]]))\n    ret.set_shape([None, None, None, sh[3]])\n    return ret\n\nwhere x and tf.zeros_like(x) are two tensors, is right? In addition, when the gradient is computed , the error raises as follow:\n\n![3](https://cloud.githubusercontent.com/assets/20062851/16981952/d60e861e-4e9f-11e6-9400-e830989b885c.jpg)\n\nCould you tell me what's wrong? Thank you very much!\n</code></pre>", "body_text": "Got it! I implement unpooling function in the layer4.\ndef UnPooling2x2ZeroFilled(x):\n  out = tf.concat(3, [x, tf.zeros_like(x)])\n  out = tf.concat(2, [out, tf.zeros_like(out)])\n\n  sh = x.get_shape().as_list()\n  if None not in sh[1:]:\n    out_size = [-1, sh[1] * 2, sh[2] * 2, sh[3]]\n    return tf.reshape(out, out_size)\n  else:\n    sh = tf.shape(x)\n    ret = tf.reshape(out, tf.pack([-1, sh[1] * 2, sh[2] * 2, sh[3]]))\n    ret.set_shape([None, None, None, sh[3]])\n    return ret\n```def UnPooling2x2ZeroFilled(x):\n  out = tf.concat(3, [x, tf.zeros_like(x)])\n  out = tf.concat(2, [out, tf.zeros_like(out)])\n\n  sh = x.get_shape().as_list()\n  if None not in sh[1:]:\n    out_size = [-1, sh[1] * 2, sh[2] * 2, sh[3]]\n    return tf.reshape(out, out_size)\n  else:\n    sh = tf.shape(x)\n    ret = tf.reshape(out, tf.pack([-1, sh[1] * 2, sh[2] * 2, sh[3]]))\n    ret.set_shape([None, None, None, sh[3]])\n    return ret\n\nwhere x and tf.zeros_like(x) are two tensors, is right? In addition, when the gradient is computed , the error raises as follow:\n\n![3](https://cloud.githubusercontent.com/assets/20062851/16981952/d60e861e-4e9f-11e6-9400-e830989b885c.jpg)\n\nCould you tell me what's wrong? Thank you very much!", "body": "Got it! I implement unpooling function in the layer4.\n\n``````\ndef UnPooling2x2ZeroFilled(x):\n  out = tf.concat(3, [x, tf.zeros_like(x)])\n  out = tf.concat(2, [out, tf.zeros_like(out)])\n\n  sh = x.get_shape().as_list()\n  if None not in sh[1:]:\n    out_size = [-1, sh[1] * 2, sh[2] * 2, sh[3]]\n    return tf.reshape(out, out_size)\n  else:\n    sh = tf.shape(x)\n    ret = tf.reshape(out, tf.pack([-1, sh[1] * 2, sh[2] * 2, sh[3]]))\n    ret.set_shape([None, None, None, sh[3]])\n    return ret\n```def UnPooling2x2ZeroFilled(x):\n  out = tf.concat(3, [x, tf.zeros_like(x)])\n  out = tf.concat(2, [out, tf.zeros_like(out)])\n\n  sh = x.get_shape().as_list()\n  if None not in sh[1:]:\n    out_size = [-1, sh[1] * 2, sh[2] * 2, sh[3]]\n    return tf.reshape(out, out_size)\n  else:\n    sh = tf.shape(x)\n    ret = tf.reshape(out, tf.pack([-1, sh[1] * 2, sh[2] * 2, sh[3]]))\n    ret.set_shape([None, None, None, sh[3]])\n    return ret\n\nwhere x and tf.zeros_like(x) are two tensors, is right? In addition, when the gradient is computed , the error raises as follow:\n\n![3](https://cloud.githubusercontent.com/assets/20062851/16981952/d60e861e-4e9f-11e6-9400-e830989b885c.jpg)\n\nCould you tell me what's wrong? Thank you very much!\n``````\n"}