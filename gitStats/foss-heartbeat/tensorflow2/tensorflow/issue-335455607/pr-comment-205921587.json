{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/205921587", "pull_request_review_id": 141295305, "id": 205921587, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTkyMTU4Nw==", "diff_hunk": "@@ -52,7 +52,8 @@ load(\n     \"//third_party/mkl:build_defs.bzl\",\n     \"if_mkl\",\n )\n-load(\"@local_config_cuda//cuda:build_defs.bzl\", \"if_cuda\")\n+load(\"@local_config_cuda//cuda:build_defs.bzl\", \"if_cuda\", \"if_cuda_is_configured\")\n+load(\"@local_config_rocm//rocm:build_defs.bzl\", \"if_rocm\", \"if_rocm_is_configured\")", "path": "tensorflow/core/kernels/BUILD", "position": null, "original_position": 6, "commit_id": "69d3b8faf41791834301a74a05e288964940427d", "original_commit_id": "4885f5e61c204ddc79d2a48cfe91c6c4b7688b18", "user": {"login": "Artem-B", "id": 526795, "node_id": "MDQ6VXNlcjUyNjc5NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/526795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Artem-B", "html_url": "https://github.com/Artem-B", "followers_url": "https://api.github.com/users/Artem-B/followers", "following_url": "https://api.github.com/users/Artem-B/following{/other_user}", "gists_url": "https://api.github.com/users/Artem-B/gists{/gist_id}", "starred_url": "https://api.github.com/users/Artem-B/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Artem-B/subscriptions", "organizations_url": "https://api.github.com/users/Artem-B/orgs", "repos_url": "https://api.github.com/users/Artem-B/repos", "events_url": "https://api.github.com/users/Artem-B/events{/privacy}", "received_events_url": "https://api.github.com/users/Artem-B/received_events", "type": "User", "site_admin": false}, "body": "Sorry, I've completely forgot that OSS TF still uses custom crosstool to compile with nvcc. :-(\r\nThat's going to be a problem. Crosstool is not something that can be switched per build target,\r\nand NVCC does not support clang as the host compiler. That forces us to have multiple build configurations. We still would be able to do something like `bazel --config=nvcc foo_cuda foo_cpu`, or `bazel foo_rocm foo_cpu` (probably with something like `--config=rocm`) but we will not be able to do all three at once. This complicates things.\r\n\r\nI'll need to think about it a bit.\r\n\r\n@gregestren -- It sounds like bazel has grown a lot of features lately that I've been missing for CUDA compilation. I'm glad to see that my handwavy proposal for TF compilation seems to be roughly in line with the general direction bazel configurability roadmap seems to head towards. I'll need to take a closer look at the recent changes to get better idea what we can do these days, but it appears that I may have more tools at my disposal than I used to in the past. \r\n", "created_at": "2018-07-27T23:34:39Z", "updated_at": "2018-09-06T00:48:23Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/20277#discussion_r205921587", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/20277", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/205921587"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/20277#discussion_r205921587"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/20277"}}, "body_html": "<p>Sorry, I've completely forgot that OSS TF still uses custom crosstool to compile with nvcc. :-(<br>\nThat's going to be a problem. Crosstool is not something that can be switched per build target,<br>\nand NVCC does not support clang as the host compiler. That forces us to have multiple build configurations. We still would be able to do something like <code>bazel --config=nvcc foo_cuda foo_cpu</code>, or <code>bazel foo_rocm foo_cpu</code> (probably with something like <code>--config=rocm</code>) but we will not be able to do all three at once. This complicates things.</p>\n<p>I'll need to think about it a bit.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5130366\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gregestren\">@gregestren</a> -- It sounds like bazel has grown a lot of features lately that I've been missing for CUDA compilation. I'm glad to see that my handwavy proposal for TF compilation seems to be roughly in line with the general direction bazel configurability roadmap seems to head towards. I'll need to take a closer look at the recent changes to get better idea what we can do these days, but it appears that I may have more tools at my disposal than I used to in the past.</p>", "body_text": "Sorry, I've completely forgot that OSS TF still uses custom crosstool to compile with nvcc. :-(\nThat's going to be a problem. Crosstool is not something that can be switched per build target,\nand NVCC does not support clang as the host compiler. That forces us to have multiple build configurations. We still would be able to do something like bazel --config=nvcc foo_cuda foo_cpu, or bazel foo_rocm foo_cpu (probably with something like --config=rocm) but we will not be able to do all three at once. This complicates things.\nI'll need to think about it a bit.\n@gregestren -- It sounds like bazel has grown a lot of features lately that I've been missing for CUDA compilation. I'm glad to see that my handwavy proposal for TF compilation seems to be roughly in line with the general direction bazel configurability roadmap seems to head towards. I'll need to take a closer look at the recent changes to get better idea what we can do these days, but it appears that I may have more tools at my disposal than I used to in the past.", "in_reply_to_id": 202820055}