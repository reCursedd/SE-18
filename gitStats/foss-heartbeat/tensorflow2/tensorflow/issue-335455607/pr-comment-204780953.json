{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/204780953", "pull_request_review_id": 139920957, "id": 204780953, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDc4MDk1Mw==", "diff_hunk": "@@ -52,7 +52,8 @@ load(\n     \"//third_party/mkl:build_defs.bzl\",\n     \"if_mkl\",\n )\n-load(\"@local_config_cuda//cuda:build_defs.bzl\", \"if_cuda\")\n+load(\"@local_config_cuda//cuda:build_defs.bzl\", \"if_cuda\", \"if_cuda_is_configured\")\n+load(\"@local_config_rocm//rocm:build_defs.bzl\", \"if_rocm\", \"if_rocm_is_configured\")", "path": "tensorflow/core/kernels/BUILD", "position": null, "original_position": 6, "commit_id": "69d3b8faf41791834301a74a05e288964940427d", "original_commit_id": "4885f5e61c204ddc79d2a48cfe91c6c4b7688b18", "user": {"login": "whchung", "id": 1673574, "node_id": "MDQ6VXNlcjE2NzM1NzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1673574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whchung", "html_url": "https://github.com/whchung", "followers_url": "https://api.github.com/users/whchung/followers", "following_url": "https://api.github.com/users/whchung/following{/other_user}", "gists_url": "https://api.github.com/users/whchung/gists{/gist_id}", "starred_url": "https://api.github.com/users/whchung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whchung/subscriptions", "organizations_url": "https://api.github.com/users/whchung/orgs", "repos_url": "https://api.github.com/users/whchung/repos", "events_url": "https://api.github.com/users/whchung/events{/privacy}", "received_events_url": "https://api.github.com/users/whchung/received_events", "type": "User", "site_admin": false}, "body": "@Artem-B / @jlebar let me see if i understand this correctly to assess the efforts. It seems you expect one `bazel build` to get executables for all specified targets, and ditch `--config=XXX`.\r\n\r\nAs a corollary, would the following command be good for you? 1 bazel build get 3 PIP packages:\r\n\r\n```\r\n# 1 bazel build get 3 PIP packages\r\nbazel build //tensorflow/tools/pip_package:build_cpu_pip_package //tensorflow/tools/pip_package:build_cuda_pip_package //tensorflow/tools/pip_package:build_rocm_pip_package\r\n```\r\n\r\nAlso I'm wondering how shall we deal with test targets in `bazel test`?", "created_at": "2018-07-24T14:33:44Z", "updated_at": "2018-09-06T00:48:23Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/20277#discussion_r204780953", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/20277", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/204780953"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/20277#discussion_r204780953"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/20277"}}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=526795\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Artem-B\">@Artem-B</a> / <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=150663\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jlebar\">@jlebar</a> let me see if i understand this correctly to assess the efforts. It seems you expect one <code>bazel build</code> to get executables for all specified targets, and ditch <code>--config=XXX</code>.</p>\n<p>As a corollary, would the following command be good for you? 1 bazel build get 3 PIP packages:</p>\n<pre><code># 1 bazel build get 3 PIP packages\nbazel build //tensorflow/tools/pip_package:build_cpu_pip_package //tensorflow/tools/pip_package:build_cuda_pip_package //tensorflow/tools/pip_package:build_rocm_pip_package\n</code></pre>\n<p>Also I'm wondering how shall we deal with test targets in <code>bazel test</code>?</p>", "body_text": "@Artem-B / @jlebar let me see if i understand this correctly to assess the efforts. It seems you expect one bazel build to get executables for all specified targets, and ditch --config=XXX.\nAs a corollary, would the following command be good for you? 1 bazel build get 3 PIP packages:\n# 1 bazel build get 3 PIP packages\nbazel build //tensorflow/tools/pip_package:build_cpu_pip_package //tensorflow/tools/pip_package:build_cuda_pip_package //tensorflow/tools/pip_package:build_rocm_pip_package\n\nAlso I'm wondering how shall we deal with test targets in bazel test?", "in_reply_to_id": 202820055}