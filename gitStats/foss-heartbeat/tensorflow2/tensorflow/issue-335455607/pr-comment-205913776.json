{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/205913776", "pull_request_review_id": 141286118, "id": 205913776, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTkxMzc3Ng==", "diff_hunk": "@@ -52,7 +52,8 @@ load(\n     \"//third_party/mkl:build_defs.bzl\",\n     \"if_mkl\",\n )\n-load(\"@local_config_cuda//cuda:build_defs.bzl\", \"if_cuda\")\n+load(\"@local_config_cuda//cuda:build_defs.bzl\", \"if_cuda\", \"if_cuda_is_configured\")\n+load(\"@local_config_rocm//rocm:build_defs.bzl\", \"if_rocm\", \"if_rocm_is_configured\")", "path": "tensorflow/core/kernels/BUILD", "position": null, "original_position": 6, "commit_id": "69d3b8faf41791834301a74a05e288964940427d", "original_commit_id": "4885f5e61c204ddc79d2a48cfe91c6c4b7688b18", "user": {"login": "whchung", "id": 1673574, "node_id": "MDQ6VXNlcjE2NzM1NzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1673574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whchung", "html_url": "https://github.com/whchung", "followers_url": "https://api.github.com/users/whchung/followers", "following_url": "https://api.github.com/users/whchung/following{/other_user}", "gists_url": "https://api.github.com/users/whchung/gists{/gist_id}", "starred_url": "https://api.github.com/users/whchung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whchung/subscriptions", "organizations_url": "https://api.github.com/users/whchung/orgs", "repos_url": "https://api.github.com/users/whchung/repos", "events_url": "https://api.github.com/users/whchung/events{/privacy}", "received_events_url": "https://api.github.com/users/whchung/received_events", "type": "User", "site_admin": false}, "body": "@jlebar / @Artem-B I've spent some time finding how to do this in bazel. Essentially we need a mechanism to make build targets/configure options/toolchains be dynamically composed.\r\n\r\nTo be more specific: in order to get rid of `--config=cuda` or `--config=rocm`, `--crosstool_top` shall also be made obsolete.\r\n\r\nAnd it seems bazel developers are actively working on this:\r\n- https://www.bazel.build/roadmaps/configuration.html\r\n- https://www.bazel.build/roadmaps/platforms.html\r\n- https://docs.google.com/document/d/1p7pdEwqnLOC-ATl-FdyHBJdk4Ae-5GzAYDvpJeMh4tU/edit?ts=5ac517b9#\r\n- https://docs.google.com/document/d/1vc8v-kXjvgZOdQdnxPTaV0rrLxtP2XwnD2tAZlYJOqw/edit#\r\n\r\nBut although it seems it's getting close, up till now (7/27/2018), the feature is still under development. And there is really not much references or examples on how to adopt it into TensorFlow. It'd be fun to help change TF build system to leverage this upcoming feature of bazel but could you help provide more references / examples / tests, or invite bazel developers to the mix?\r\n\r\ncc @bensander for awareness.", "created_at": "2018-07-27T22:25:59Z", "updated_at": "2018-09-06T00:48:23Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/20277#discussion_r205913776", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/20277", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/205913776"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/20277#discussion_r205913776"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/20277"}}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=150663\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jlebar\">@jlebar</a> / <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=526795\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Artem-B\">@Artem-B</a> I've spent some time finding how to do this in bazel. Essentially we need a mechanism to make build targets/configure options/toolchains be dynamically composed.</p>\n<p>To be more specific: in order to get rid of <code>--config=cuda</code> or <code>--config=rocm</code>, <code>--crosstool_top</code> shall also be made obsolete.</p>\n<p>And it seems bazel developers are actively working on this:</p>\n<ul>\n<li><a href=\"https://www.bazel.build/roadmaps/configuration.html\" rel=\"nofollow\">https://www.bazel.build/roadmaps/configuration.html</a></li>\n<li><a href=\"https://www.bazel.build/roadmaps/platforms.html\" rel=\"nofollow\">https://www.bazel.build/roadmaps/platforms.html</a></li>\n<li><a href=\"https://docs.google.com/document/d/1p7pdEwqnLOC-ATl-FdyHBJdk4Ae-5GzAYDvpJeMh4tU/edit?ts=5ac517b9#\" rel=\"nofollow\">https://docs.google.com/document/d/1p7pdEwqnLOC-ATl-FdyHBJdk4Ae-5GzAYDvpJeMh4tU/edit?ts=5ac517b9#</a></li>\n<li><a href=\"https://docs.google.com/document/d/1vc8v-kXjvgZOdQdnxPTaV0rrLxtP2XwnD2tAZlYJOqw/edit#\" rel=\"nofollow\">https://docs.google.com/document/d/1vc8v-kXjvgZOdQdnxPTaV0rrLxtP2XwnD2tAZlYJOqw/edit#</a></li>\n</ul>\n<p>But although it seems it's getting close, up till now (7/27/2018), the feature is still under development. And there is really not much references or examples on how to adopt it into TensorFlow. It'd be fun to help change TF build system to leverage this upcoming feature of bazel but could you help provide more references / examples / tests, or invite bazel developers to the mix?</p>\n<p>cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=2494978\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/bensander\">@bensander</a> for awareness.</p>", "body_text": "@jlebar / @Artem-B I've spent some time finding how to do this in bazel. Essentially we need a mechanism to make build targets/configure options/toolchains be dynamically composed.\nTo be more specific: in order to get rid of --config=cuda or --config=rocm, --crosstool_top shall also be made obsolete.\nAnd it seems bazel developers are actively working on this:\n\nhttps://www.bazel.build/roadmaps/configuration.html\nhttps://www.bazel.build/roadmaps/platforms.html\nhttps://docs.google.com/document/d/1p7pdEwqnLOC-ATl-FdyHBJdk4Ae-5GzAYDvpJeMh4tU/edit?ts=5ac517b9#\nhttps://docs.google.com/document/d/1vc8v-kXjvgZOdQdnxPTaV0rrLxtP2XwnD2tAZlYJOqw/edit#\n\nBut although it seems it's getting close, up till now (7/27/2018), the feature is still under development. And there is really not much references or examples on how to adopt it into TensorFlow. It'd be fun to help change TF build system to leverage this upcoming feature of bazel but could you help provide more references / examples / tests, or invite bazel developers to the mix?\ncc @bensander for awareness.", "in_reply_to_id": 202820055}