{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/351815819", "html_url": "https://github.com/tensorflow/tensorflow/issues/15343#issuecomment-351815819", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15343", "id": 351815819, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTgxNTgxOQ==", "user": {"login": "agrinh", "id": 2157859, "node_id": "MDQ6VXNlcjIxNTc4NTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/2157859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agrinh", "html_url": "https://github.com/agrinh", "followers_url": "https://api.github.com/users/agrinh/followers", "following_url": "https://api.github.com/users/agrinh/following{/other_user}", "gists_url": "https://api.github.com/users/agrinh/gists{/gist_id}", "starred_url": "https://api.github.com/users/agrinh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agrinh/subscriptions", "organizations_url": "https://api.github.com/users/agrinh/orgs", "repos_url": "https://api.github.com/users/agrinh/repos", "events_url": "https://api.github.com/users/agrinh/events{/privacy}", "received_events_url": "https://api.github.com/users/agrinh/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-14T19:44:25Z", "updated_at": "2017-12-14T19:44:25Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1284535\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/saeta\">@saeta</a> Thanks for helping out, that seemed to solve that particular problem.</p>\n<p>I was applying the <code>repeat()</code> before caching (both in the example and in my real data loader), so I assume the cache releases the lock and produces the index file on <code>tf.errors.OutOfRangeError</code>. When I move the repeat to after the caching and make sure to run through all data this example works.</p>\n<p>Perhaps this behaviour could be documented. Some interactions (e.g. <code>repeat</code> - <code>cache</code>, <code>shuffle</code> - <code>cache</code> etc.) are pretty non-obvious to me and it would save me a huge amount of time to get at least some of those details listed.</p>\n<p>Thanks again,<br>\nAgrin</p>", "body_text": "@saeta Thanks for helping out, that seemed to solve that particular problem.\nI was applying the repeat() before caching (both in the example and in my real data loader), so I assume the cache releases the lock and produces the index file on tf.errors.OutOfRangeError. When I move the repeat to after the caching and make sure to run through all data this example works.\nPerhaps this behaviour could be documented. Some interactions (e.g. repeat - cache, shuffle - cache etc.) are pretty non-obvious to me and it would save me a huge amount of time to get at least some of those details listed.\nThanks again,\nAgrin", "body": "@saeta Thanks for helping out, that seemed to solve that particular problem.\r\n\r\nI was applying the `repeat()` before caching (both in the example and in my real data loader), so I assume the cache releases the lock and produces the index file on `tf.errors.OutOfRangeError`. When I move the repeat to after the caching and make sure to run through all data this example works.\r\n\r\nPerhaps this behaviour could be documented. Some interactions (e.g. `repeat` - `cache`, `shuffle` - `cache` etc.) are pretty non-obvious to me and it would save me a huge amount of time to get at least some of those details listed.\r\n\r\nThanks again,\r\nAgrin"}