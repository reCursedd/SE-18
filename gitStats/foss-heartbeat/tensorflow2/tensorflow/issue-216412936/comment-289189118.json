{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/289189118", "html_url": "https://github.com/tensorflow/tensorflow/issues/8656#issuecomment-289189118", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8656", "id": 289189118, "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTE4OTExOA==", "user": {"login": "vrv", "id": 463737, "node_id": "MDQ6VXNlcjQ2MzczNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/463737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrv", "html_url": "https://github.com/vrv", "followers_url": "https://api.github.com/users/vrv/followers", "following_url": "https://api.github.com/users/vrv/following{/other_user}", "gists_url": "https://api.github.com/users/vrv/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrv/subscriptions", "organizations_url": "https://api.github.com/users/vrv/orgs", "repos_url": "https://api.github.com/users/vrv/repos", "events_url": "https://api.github.com/users/vrv/events{/privacy}", "received_events_url": "https://api.github.com/users/vrv/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-25T04:55:09Z", "updated_at": "2017-03-25T04:55:49Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I think this is not a bug:  Consider what the data flow graph looks like, and the fact that fetching [train_op, a] says nothing about which value of 'a' should be fetched: the one before train_op complete or after it completes (fetching [train_op, a] is the same as [a, train_op]).  Because there is no contract, there is no inconsistency.  Due to the timing of the execution of the graphs, my guess is you're likely to get one answer more than another in a given configuration, but that's not a guarantee.</p>\n<p>The control dependency enforces the order, so I'd expect that to be consistent no matter what devices ops are on.</p>\n<p>At least, that's what I am interpreting from the code.</p>", "body_text": "I think this is not a bug:  Consider what the data flow graph looks like, and the fact that fetching [train_op, a] says nothing about which value of 'a' should be fetched: the one before train_op complete or after it completes (fetching [train_op, a] is the same as [a, train_op]).  Because there is no contract, there is no inconsistency.  Due to the timing of the execution of the graphs, my guess is you're likely to get one answer more than another in a given configuration, but that's not a guarantee.\nThe control dependency enforces the order, so I'd expect that to be consistent no matter what devices ops are on.\nAt least, that's what I am interpreting from the code.", "body": "I think this is not a bug:  Consider what the data flow graph looks like, and the fact that fetching [train_op, a] says nothing about which value of 'a' should be fetched: the one before train_op complete or after it completes (fetching [train_op, a] is the same as [a, train_op]).  Because there is no contract, there is no inconsistency.  Due to the timing of the execution of the graphs, my guess is you're likely to get one answer more than another in a given configuration, but that's not a guarantee.\r\n\r\nThe control dependency enforces the order, so I'd expect that to be consistent no matter what devices ops are on.\r\n\r\nAt least, that's what I am interpreting from the code.\r\n"}