{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/257714089", "html_url": "https://github.com/tensorflow/tensorflow/issues/3008#issuecomment-257714089", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3008", "id": 257714089, "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzcxNDA4OQ==", "user": {"login": "ilblackdragon", "id": 175486, "node_id": "MDQ6VXNlcjE3NTQ4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/175486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilblackdragon", "html_url": "https://github.com/ilblackdragon", "followers_url": "https://api.github.com/users/ilblackdragon/followers", "following_url": "https://api.github.com/users/ilblackdragon/following{/other_user}", "gists_url": "https://api.github.com/users/ilblackdragon/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilblackdragon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilblackdragon/subscriptions", "organizations_url": "https://api.github.com/users/ilblackdragon/orgs", "repos_url": "https://api.github.com/users/ilblackdragon/repos", "events_url": "https://api.github.com/users/ilblackdragon/events{/privacy}", "received_events_url": "https://api.github.com/users/ilblackdragon/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-01T22:09:13Z", "updated_at": "2016-11-01T22:09:13Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=10407758\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/IsaacBanjo\">@IsaacBanjo</a> Not sure what do you mean by model_type? You can pass any parameter via <code>params</code> that you will receive in your model function. To get <code>predict_proba</code> just run <code>predict</code> on the probability predictions.</p>\n<p>E.g. it's just <code>est.predict(..., outputs=['probability'])['probability']</code> if your model function returns something like this <code>return {'probability': probs, 'class': tf.argmax(probs, axis=1)}, loss, train_op</code></p>", "body_text": "@IsaacBanjo Not sure what do you mean by model_type? You can pass any parameter via params that you will receive in your model function. To get predict_proba just run predict on the probability predictions.\nE.g. it's just est.predict(..., outputs=['probability'])['probability'] if your model function returns something like this return {'probability': probs, 'class': tf.argmax(probs, axis=1)}, loss, train_op", "body": "@IsaacBanjo Not sure what do you mean by model_type? You can pass any parameter via `params` that you will receive in your model function. To get `predict_proba` just run `predict` on the probability predictions. \n\nE.g. it's just `est.predict(..., outputs=['probability'])['probability']` if your model function returns something like this `return {'probability': probs, 'class': tf.argmax(probs, axis=1)}, loss, train_op`\n"}