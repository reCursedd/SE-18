{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/366805089", "html_url": "https://github.com/tensorflow/tensorflow/issues/17016#issuecomment-366805089", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17016", "id": 366805089, "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjgwNTA4OQ==", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-19T21:19:12Z", "updated_at": "2018-02-19T21:19:12Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=11736571\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/AakashKumarNain\">@AakashKumarNain</a> : Is it possible that there is some issue with your input generation? I'm unable to reproduce the problem after following the very similar example in the <a href=\"https://github.com/tensorflow/tensorflow/blob/eb38b9c/tensorflow/contrib/eager/python/g3doc/guide.md#using-keras-and-the-layers-api\">eager user guide</a> or even after modifying the portion of your snippet that feeds the data (since the snippet didn't include the definitions of <code>X_train</code> and <code>train_data_gen</code> etc. I could not repeat your setup). Specifically, I used your snippet all up to the line <code>batch_size = 8</code> and then replaced the remainder with:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">from</span> tensorflow.examples.tutorials.mnist <span class=\"pl-k\">import</span> input_data\ndata <span class=\"pl-k\">=</span> input_data.read_data_sets(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>./mnist_data<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-v\">one_hot</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\nnb_epochs <span class=\"pl-k\">=</span> <span class=\"pl-c1\">5</span>\nbatch_size <span class=\"pl-k\">=</span> <span class=\"pl-c1\">8</span>\n<span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(nb_epochs):\n    <span class=\"pl-k\">with</span> tf.device(device):\n        <span class=\"pl-k\">for</span> j <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">20</span>):\n            (inputs, targets) <span class=\"pl-k\">=</span> data.train.next_batch(batch_size)\n            optimizer.apply_gradients(grad(model, inputs, targets))\n            <span class=\"pl-k\">if</span> j <span class=\"pl-k\">%</span> <span class=\"pl-c1\">10</span> <span class=\"pl-k\">==</span> <span class=\"pl-c1\">0</span>:\n                <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Step <span class=\"pl-c1\">%d</span>: Loss on training set : <span class=\"pl-c1\">%f</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span>(i, loss(model, inputs, targets).numpy()))</pre></div>\n<p>I suspect there is something weird about how you're creating <code>inputs</code> and <code>targets</code>.</p>", "body_text": "@AakashKumarNain : Is it possible that there is some issue with your input generation? I'm unable to reproduce the problem after following the very similar example in the eager user guide or even after modifying the portion of your snippet that feeds the data (since the snippet didn't include the definitions of X_train and train_data_gen etc. I could not repeat your setup). Specifically, I used your snippet all up to the line batch_size = 8 and then replaced the remainder with:\nfrom tensorflow.examples.tutorials.mnist import input_data\ndata = input_data.read_data_sets(\"./mnist_data\", one_hot=True)\nnb_epochs = 5\nbatch_size = 8\nfor i in range(nb_epochs):\n    with tf.device(device):\n        for j in range(20):\n            (inputs, targets) = data.train.next_batch(batch_size)\n            optimizer.apply_gradients(grad(model, inputs, targets))\n            if j % 10 == 0:\n                print(\"Step %d: Loss on training set : %f\" %(i, loss(model, inputs, targets).numpy()))\nI suspect there is something weird about how you're creating inputs and targets.", "body": "@AakashKumarNain : Is it possible that there is some issue with your input generation? I'm unable to reproduce the problem after following the very similar example in the [eager user guide](https://github.com/tensorflow/tensorflow/blob/eb38b9c/tensorflow/contrib/eager/python/g3doc/guide.md#using-keras-and-the-layers-api) or even after modifying the portion of your snippet that feeds the data (since the snippet didn't include the definitions of `X_train` and `train_data_gen` etc. I could not repeat your setup). Specifically, I used your snippet all up to the line `batch_size = 8` and then replaced the remainder with:\r\n\r\n```python\r\nfrom tensorflow.examples.tutorials.mnist import input_data\r\ndata = input_data.read_data_sets(\"./mnist_data\", one_hot=True)\r\nnb_epochs = 5\r\nbatch_size = 8\r\nfor i in range(nb_epochs):\r\n    with tf.device(device):\r\n        for j in range(20):\r\n            (inputs, targets) = data.train.next_batch(batch_size)\r\n            optimizer.apply_gradients(grad(model, inputs, targets))\r\n            if j % 10 == 0:\r\n                print(\"Step %d: Loss on training set : %f\" %(i, loss(model, inputs, targets).numpy()))\r\n```\r\n\r\nI suspect there is something weird about how you're creating `inputs` and `targets`."}