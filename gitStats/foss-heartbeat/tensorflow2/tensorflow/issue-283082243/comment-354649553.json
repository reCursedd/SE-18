{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/354649553", "html_url": "https://github.com/tensorflow/tensorflow/issues/15465#issuecomment-354649553", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15465", "id": 354649553, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDY0OTU1Mw==", "user": {"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-01T11:55:50Z", "updated_at": "2018-01-01T11:56:03Z", "author_association": "CONTRIBUTOR", "body_html": "<p>TensorFlow matrix exponentiates via Eigen, which does repeated squaring + Pad\u00e9 approximation.  The Eigen code is <a href=\"https://bitbucket.org/eigen/eigen/src/034b6c3e101792a3cc3ccabd9bfaddcabe85bb58/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h?at=default&amp;fileviewer=file-view-default\" rel=\"nofollow\">https://bitbucket.org/eigen/eigen/src/034b6c3e101792a3cc3ccabd9bfaddcabe85bb58/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h?at=default&amp;fileviewer=file-view-default</a>.</p>\n<p>The whole algorithm is differentiable, so one option is to differentiate through Eigen's implementation including all approximation errors.  If you're doing optimization based on matrix exponentiation, that would be optimal including treatment of errors.  It's \"technically straightforward\", but would require either mimicking the Eigen code or heavily modifying it.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16907534\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rmlarsen\">@rmlarsen</a> probably has a better sense for the best practical solution.</p>", "body_text": "TensorFlow matrix exponentiates via Eigen, which does repeated squaring + Pad\u00e9 approximation.  The Eigen code is https://bitbucket.org/eigen/eigen/src/034b6c3e101792a3cc3ccabd9bfaddcabe85bb58/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h?at=default&fileviewer=file-view-default.\nThe whole algorithm is differentiable, so one option is to differentiate through Eigen's implementation including all approximation errors.  If you're doing optimization based on matrix exponentiation, that would be optimal including treatment of errors.  It's \"technically straightforward\", but would require either mimicking the Eigen code or heavily modifying it.\n@rmlarsen probably has a better sense for the best practical solution.", "body": "TensorFlow matrix exponentiates via Eigen, which does repeated squaring + Pad\u00e9 approximation.  The Eigen code is https://bitbucket.org/eigen/eigen/src/034b6c3e101792a3cc3ccabd9bfaddcabe85bb58/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h?at=default&fileviewer=file-view-default.\r\n\r\nThe whole algorithm is differentiable, so one option is to differentiate through Eigen's implementation including all approximation errors.  If you're doing optimization based on matrix exponentiation, that would be optimal including treatment of errors.  It's \"technically straightforward\", but would require either mimicking the Eigen code or heavily modifying it.\r\n\r\n@rmlarsen probably has a better sense for the best practical solution."}