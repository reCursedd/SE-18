{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/342344011", "html_url": "https://github.com/tensorflow/tensorflow/pull/12191#issuecomment-342344011", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12191", "id": 342344011, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjM0NDAxMQ==", "user": {"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-07T01:20:10Z", "updated_at": "2017-11-07T01:20:10Z", "author_association": "MEMBER", "body_html": "<p>I am still not convinced this actually is a needed bugfix:</p>\n<p>The old behavior is</p>\n<pre><code>new = old * (max+0.5)\n</code></pre>\n<p>with the assumption that values are between 0 and 1 before. The desired behavior is a clean floor, i.e., if <code>old == n/max</code>, then <code>new = n</code>. The old way does this, I think, while the new could produce either <code>new = n</code> or <code>new = n+1</code> depending on how the numerics dice fall.</p>\n<p>But it's been a bit, I may have messed up too.</p>", "body_text": "I am still not convinced this actually is a needed bugfix:\nThe old behavior is\nnew = old * (max+0.5)\n\nwith the assumption that values are between 0 and 1 before. The desired behavior is a clean floor, i.e., if old == n/max, then new = n. The old way does this, I think, while the new could produce either new = n or new = n+1 depending on how the numerics dice fall.\nBut it's been a bit, I may have messed up too.", "body": "I am still not convinced this actually is a needed bugfix:\r\n\r\nThe old behavior is\r\n```\r\nnew = old * (max+0.5)\r\n```\r\nwith the assumption that values are between 0 and 1 before. The desired behavior is a clean floor, i.e., if `old == n/max`, then `new = n`. The old way does this, I think, while the new could produce either `new = n` or `new = n+1` depending on how the numerics dice fall.\r\n\r\nBut it's been a bit, I may have messed up too.\r\n"}