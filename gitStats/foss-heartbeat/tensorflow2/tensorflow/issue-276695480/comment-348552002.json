{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/348552002", "html_url": "https://github.com/tensorflow/tensorflow/pull/14870#issuecomment-348552002", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14870", "id": 348552002, "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODU1MjAwMg==", "user": {"login": "jvdillon", "id": 1137078, "node_id": "MDQ6VXNlcjExMzcwNzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1137078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvdillon", "html_url": "https://github.com/jvdillon", "followers_url": "https://api.github.com/users/jvdillon/followers", "following_url": "https://api.github.com/users/jvdillon/following{/other_user}", "gists_url": "https://api.github.com/users/jvdillon/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvdillon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvdillon/subscriptions", "organizations_url": "https://api.github.com/users/jvdillon/orgs", "repos_url": "https://api.github.com/users/jvdillon/repos", "events_url": "https://api.github.com/users/jvdillon/events{/privacy}", "received_events_url": "https://api.github.com/users/jvdillon/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-01T17:09:57Z", "updated_at": "2017-12-01T17:10:24Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=591830\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mwytock\">@mwytock</a> can you add this to the accompanying unit-test?</p>\n<pre><code>def testSampleAndLogProbBatch(self):\n  with self.test_session():\n    gm = mixture_same_family_lib.MixtureSameFamily(\n        mixture_distribution=categorical_lib.Categorical(probs=[[0.3, 0.7]]),\n        components_distribution=normal_lib.Normal(\n            loc=[[-1., 1]], scale=[[0.1, 0.5]]))\n    x = gm.sample([4, 5], seed=42)\n    log_prob_x = gm.log_prob(x)\n    self.assertEqual([4, 5, 1], x.shape)\n    self.assertEqual([4, 5, 1], log_prob_x.shape)\n</code></pre>", "body_text": "@mwytock can you add this to the accompanying unit-test?\ndef testSampleAndLogProbBatch(self):\n  with self.test_session():\n    gm = mixture_same_family_lib.MixtureSameFamily(\n        mixture_distribution=categorical_lib.Categorical(probs=[[0.3, 0.7]]),\n        components_distribution=normal_lib.Normal(\n            loc=[[-1., 1]], scale=[[0.1, 0.5]]))\n    x = gm.sample([4, 5], seed=42)\n    log_prob_x = gm.log_prob(x)\n    self.assertEqual([4, 5, 1], x.shape)\n    self.assertEqual([4, 5, 1], log_prob_x.shape)", "body": "@mwytock can you add this to the accompanying unit-test?\r\n\r\n    def testSampleAndLogProbBatch(self):\r\n      with self.test_session():\r\n        gm = mixture_same_family_lib.MixtureSameFamily(\r\n            mixture_distribution=categorical_lib.Categorical(probs=[[0.3, 0.7]]),\r\n            components_distribution=normal_lib.Normal(\r\n                loc=[[-1., 1]], scale=[[0.1, 0.5]]))\r\n        x = gm.sample([4, 5], seed=42)\r\n        log_prob_x = gm.log_prob(x)\r\n        self.assertEqual([4, 5, 1], x.shape)\r\n        self.assertEqual([4, 5, 1], log_prob_x.shape)"}