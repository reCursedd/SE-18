{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/439426428", "html_url": "https://github.com/tensorflow/tensorflow/issues/23591#issuecomment-439426428", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23591", "id": 439426428, "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTQyNjQyOA==", "user": {"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-16T15:21:19Z", "updated_at": "2018-11-16T15:21:19Z", "author_association": "MEMBER", "body_html": "<div class=\"email-fragment\">Yes, correct.</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On Thu, Nov 15, 2018 at 5:36 PM Sambhav Jain ***@***.***&gt; wrote:\n Aah makes sense. Thanks <a class=\"user-mention\" href=\"https://github.com/alextp\">@alextp</a> &lt;<a href=\"https://github.com/alextp\">https://github.com/alextp</a>&gt;. I guess to\n conclude we can say:\n The from_proto method is not as useful when metagraph is available (which\n already contains collections of variables to be restored). The real\n use-case is when just the graphdef (.pb) is available (no metagraph). In\n this case, the (seemingly) only way to restore a variable is to create an\n empty variable_def, populate its proto fields, and use\n tf.Variable.from_proto(variable_def). Correct?\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"378535158\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/23591\" href=\"https://github.com/tensorflow/tensorflow/issues/23591#issuecomment-439251187\">#23591 (comment)</a>&gt;,\n or mute the thread\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/AAATxVmVyxHq8O5UOAaOWCLmuTBYsjuIks5uvhaZgaJpZM4YTzTj\">https://github.com/notifications/unsubscribe-auth/AAATxVmVyxHq8O5UOAaOWCLmuTBYsjuIks5uvhaZgaJpZM4YTzTj</a>&gt;\n .\n</div>\n<div class=\"email-fragment\"></div>\n<div class=\"email-signature-reply\">-- \n - Alex</div>\n</div>", "body_text": "Yes, correct.\n\u2026\nOn Thu, Nov 15, 2018 at 5:36 PM Sambhav Jain ***@***.***> wrote:\n Aah makes sense. Thanks @alextp <https://github.com/alextp>. I guess to\n conclude we can say:\n The from_proto method is not as useful when metagraph is available (which\n already contains collections of variables to be restored). The real\n use-case is when just the graphdef (.pb) is available (no metagraph). In\n this case, the (seemingly) only way to restore a variable is to create an\n empty variable_def, populate its proto fields, and use\n tf.Variable.from_proto(variable_def). Correct?\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#23591 (comment)>,\n or mute the thread\n <https://github.com/notifications/unsubscribe-auth/AAATxVmVyxHq8O5UOAaOWCLmuTBYsjuIks5uvhaZgaJpZM4YTzTj>\n .\n\n\n-- \n - Alex", "body": "Yes, correct.\n\nOn Thu, Nov 15, 2018 at 5:36 PM Sambhav Jain <notifications@github.com>\nwrote:\n\n> Aah makes sense. Thanks @alextp <https://github.com/alextp>. I guess to\n> conclude we can say:\n> The from_proto method is not as useful when metagraph is available (which\n> already contains collections of variables to be restored). The real\n> use-case is when just the graphdef (.pb) is available (no metagraph). In\n> this case, the (seemingly) only way to restore a variable is to create an\n> empty variable_def, populate its proto fields, and use\n> tf.Variable.from_proto(variable_def). Correct?\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/issues/23591#issuecomment-439251187>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAATxVmVyxHq8O5UOAaOWCLmuTBYsjuIks5uvhaZgaJpZM4YTzTj>\n> .\n>\n\n\n-- \n - Alex\n"}