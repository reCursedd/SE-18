{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5281", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5281/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5281/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5281/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/5281", "id": 186113845, "node_id": "MDU6SXNzdWUxODYxMTM4NDU=", "number": 5281, "title": "feature: permutation", "user": {"login": "thjashin", "id": 5267554, "node_id": "MDQ6VXNlcjUyNjc1NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5267554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thjashin", "html_url": "https://github.com/thjashin", "followers_url": "https://api.github.com/users/thjashin/followers", "following_url": "https://api.github.com/users/thjashin/following{/other_user}", "gists_url": "https://api.github.com/users/thjashin/gists{/gist_id}", "starred_url": "https://api.github.com/users/thjashin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thjashin/subscriptions", "organizations_url": "https://api.github.com/users/thjashin/orgs", "repos_url": "https://api.github.com/users/thjashin/repos", "events_url": "https://api.github.com/users/thjashin/events{/privacy}", "received_events_url": "https://api.github.com/users/thjashin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-10-30T03:00:51Z", "updated_at": "2017-06-16T18:04:54Z", "closed_at": "2017-06-16T18:04:54Z", "author_association": "CONTRIBUTOR", "body_html": "<p>This is a feature request on a Tensor creation function based on problems met when using tf.transpose.<br>\nSuppose I want to transpose a Tensor <code>a</code> (not variable) into a new Tensor, exchanging its two dimensions. Indices of the two dimensions are represented by two Tensors <code>b</code> and <code>c</code>.<br>\nFrom what I understand, there are only one complicated way of generating the argument <code>perm</code> in tf.transpose to achieve this in Tensorflow. That's by using tf.select twice.</p>\n<div class=\"highlight highlight-source-python\"><pre>dims <span class=\"pl-k\">=</span> tf.range(<span class=\"pl-c1\">5</span>)\nb <span class=\"pl-k\">=</span> tf.constant(<span class=\"pl-c1\">1</span>)\nc <span class=\"pl-k\">=</span> tf.constant(<span class=\"pl-c1\">3</span>)\nb_mask <span class=\"pl-k\">=</span> tf.cast(tf.one_hot(b, <span class=\"pl-c1\">5</span>), tf.bool)\nc_mask <span class=\"pl-k\">=</span> tf.cast(tf.one_hot(c, <span class=\"pl-c1\">5</span>), tf.bool)\nbs <span class=\"pl-k\">=</span> tf.ones(<span class=\"pl-c1\">5</span>, tf.int32) <span class=\"pl-k\">*</span> b\ncs <span class=\"pl-k\">=</span> tf.ones(<span class=\"pl-c1\">5</span>, tf.int32) <span class=\"pl-k\">*</span> c\nperm_1 <span class=\"pl-k\">=</span> tf.select(b_mask, cs, dims)\nperm_2 <span class=\"pl-k\">=</span> tf.select(c_mask, bs, perm_1)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> ==&gt; perm2: [0, 3, 2, 1, 4]</span></pre></div>\n<p>I personally feel this is too redundant for achieving such a simple operation. Could it be possible to add some op that generate permutations when it is not possible to be achieved by tf.gather (target dims are dynamic)?</p>", "body_text": "This is a feature request on a Tensor creation function based on problems met when using tf.transpose.\nSuppose I want to transpose a Tensor a (not variable) into a new Tensor, exchanging its two dimensions. Indices of the two dimensions are represented by two Tensors b and c.\nFrom what I understand, there are only one complicated way of generating the argument perm in tf.transpose to achieve this in Tensorflow. That's by using tf.select twice.\ndims = tf.range(5)\nb = tf.constant(1)\nc = tf.constant(3)\nb_mask = tf.cast(tf.one_hot(b, 5), tf.bool)\nc_mask = tf.cast(tf.one_hot(c, 5), tf.bool)\nbs = tf.ones(5, tf.int32) * b\ncs = tf.ones(5, tf.int32) * c\nperm_1 = tf.select(b_mask, cs, dims)\nperm_2 = tf.select(c_mask, bs, perm_1)\n# ==> perm2: [0, 3, 2, 1, 4]\nI personally feel this is too redundant for achieving such a simple operation. Could it be possible to add some op that generate permutations when it is not possible to be achieved by tf.gather (target dims are dynamic)?", "body": "This is a feature request on a Tensor creation function based on problems met when using tf.transpose.\nSuppose I want to transpose a Tensor `a` (not variable) into a new Tensor, exchanging its two dimensions. Indices of the two dimensions are represented by two Tensors `b` and `c`.\nFrom what I understand, there are only one complicated way of generating the argument `perm` in tf.transpose to achieve this in Tensorflow. That's by using tf.select twice.\n\n``` python\ndims = tf.range(5)\nb = tf.constant(1)\nc = tf.constant(3)\nb_mask = tf.cast(tf.one_hot(b, 5), tf.bool)\nc_mask = tf.cast(tf.one_hot(c, 5), tf.bool)\nbs = tf.ones(5, tf.int32) * b\ncs = tf.ones(5, tf.int32) * c\nperm_1 = tf.select(b_mask, cs, dims)\nperm_2 = tf.select(c_mask, bs, perm_1)\n# ==> perm2: [0, 3, 2, 1, 4]\n```\n\nI personally feel this is too redundant for achieving such a simple operation. Could it be possible to add some op that generate permutations when it is not possible to be achieved by tf.gather (target dims are dynamic)?\n"}