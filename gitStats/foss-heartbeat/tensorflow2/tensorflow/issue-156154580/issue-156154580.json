{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2464", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2464/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2464/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2464/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/2464", "id": 156154580, "node_id": "MDU6SXNzdWUxNTYxNTQ1ODA=", "number": 2464, "title": "Inconsistent tensor shapes in documentation for tf.nn.sampled_softmax_loss", "user": {"login": "roysmeding", "id": 919702, "node_id": "MDQ6VXNlcjkxOTcwMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/919702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roysmeding", "html_url": "https://github.com/roysmeding", "followers_url": "https://api.github.com/users/roysmeding/followers", "following_url": "https://api.github.com/users/roysmeding/following{/other_user}", "gists_url": "https://api.github.com/users/roysmeding/gists{/gist_id}", "starred_url": "https://api.github.com/users/roysmeding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roysmeding/subscriptions", "organizations_url": "https://api.github.com/users/roysmeding/orgs", "repos_url": "https://api.github.com/users/roysmeding/repos", "events_url": "https://api.github.com/users/roysmeding/events{/privacy}", "received_events_url": "https://api.github.com/users/roysmeding/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2016-05-22T14:25:16Z", "updated_at": "2016-05-23T23:25:19Z", "closed_at": "2016-05-23T23:25:19Z", "author_association": "NONE", "body_html": "<p>Hi,</p>\n<p>In the documentation for tf.nn.sampled_softmax_loss (as viewed <a href=\"https://www.tensorflow.org/versions/master/api_docs/python/nn.html#sampled_softmax_loss\" rel=\"nofollow\">here</a>) it says the equivalent full softmax probabilities can be computed using <code>tf.nn.softmax(tf.matmul(inputs, weights) + biases)</code>. However, under 'Args' it also states that <code>inputs</code> has shape <code>batch_size, dim</code> and <code>weights</code> has shape <code>[num_classes, dim]</code> \u2014 The dimensions of these tensors are incompatible for matrix multiplication.</p>\n<p>I suspect that the <em>actual</em> equivalent operation would be something like <code>tf.nn.softmax(tf.matmul(inputs, tf.transpose(weights)) + biases)</code> but I'm not 100% sure.</p>", "body_text": "Hi,\nIn the documentation for tf.nn.sampled_softmax_loss (as viewed here) it says the equivalent full softmax probabilities can be computed using tf.nn.softmax(tf.matmul(inputs, weights) + biases). However, under 'Args' it also states that inputs has shape batch_size, dim and weights has shape [num_classes, dim] \u2014 The dimensions of these tensors are incompatible for matrix multiplication.\nI suspect that the actual equivalent operation would be something like tf.nn.softmax(tf.matmul(inputs, tf.transpose(weights)) + biases) but I'm not 100% sure.", "body": "Hi,\n\nIn the documentation for tf.nn.sampled_softmax_loss (as viewed [here](https://www.tensorflow.org/versions/master/api_docs/python/nn.html#sampled_softmax_loss)) it says the equivalent full softmax probabilities can be computed using `tf.nn.softmax(tf.matmul(inputs, weights) + biases)`. However, under 'Args' it also states that `inputs` has shape `batch_size, dim` and `weights` has shape `[num_classes, dim]` \u2014 The dimensions of these tensors are incompatible for matrix multiplication.\n\nI suspect that the _actual_ equivalent operation would be something like `tf.nn.softmax(tf.matmul(inputs, tf.transpose(weights)) + biases)` but I'm not 100% sure.\n"}