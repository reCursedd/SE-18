{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/114902428", "pull_request_review_id": 36396589, "id": 114902428, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNDkwMjQyOA==", "diff_hunk": "@@ -48,33 +48,61 @@ typedef Eigen::ThreadPoolDevice CPUDevice;\n typedef Eigen::GpuDevice GPUDevice;\n \n template <typename Device, typename T>\n-class AvgPoolingOp : public UnaryOp<T> {\n+class AvgPoolingOp : public OpKernel {\n  public:\n-  explicit AvgPoolingOp(OpKernelConstruction* context) : UnaryOp<T>(context) {\n+  explicit AvgPoolingOp(OpKernelConstruction* context) : OpKernel(context) {\n     string data_format;\n     OP_REQUIRES_OK(context, context->GetAttr(\"data_format\", &data_format));\n     OP_REQUIRES(context, FormatFromString(data_format, &data_format_),\n                 errors::InvalidArgument(\"Invalid data format\"));\n     OP_REQUIRES(\n         context, data_format_ == FORMAT_NHWC,\n         errors::InvalidArgument(\"Default AvgPoolingOp only supports NHWC.\"));\n-    OP_REQUIRES_OK(context, context->GetAttr(\"ksize\", &ksize_));\n-    OP_REQUIRES(context, ksize_.size() == 4,\n+    if (context->num_inputs() == 1) {\n+      OP_REQUIRES_OK(context, context->GetAttr(\"ksize\", &ksize_));\n+      OP_REQUIRES(context, ksize_.size() == 4,\n+                  errors::InvalidArgument(\"Sliding window ksize field must \"\n+                                          \"specify 4 dimensions\"));\n+      OP_REQUIRES_OK(context, context->GetAttr(\"strides\", &stride_));\n+      OP_REQUIRES(context, stride_.size() == 4,\n+                  errors::InvalidArgument(\"Sliding window stride field must \"\n+                                          \"specify 4 dimensions\"));\n+      OP_REQUIRES(context, ksize_[0] == 1 && stride_[0] == 1,\n+                  errors::Unimplemented(\n+                      \"Pooling is not yet supported on the batch dimension.\"));\n+    }\n+    OP_REQUIRES_OK(context, context->GetAttr(\"padding\", &padding_));\n+  }\n+\n+  void Compute(OpKernelContext* context) override {\n+    const Tensor& tensor_in = context->input(0);\n+\n+    std::vector<int32> ksize = ksize_;\n+    std::vector<int32> stride = stride_;\n+\n+    if (context->num_inputs() != 1) {", "path": "tensorflow/core/kernels/avgpooling_op.cc", "position": null, "original_position": 40, "commit_id": "1a090b4a6f7f6cb2e533d1de13c0549e96e5354c", "original_commit_id": "79f5e940677bb2238fe720d5e3cc4bcd3fe1f4eb", "user": {"login": "yzhwang", "id": 1002405, "node_id": "MDQ6VXNlcjEwMDI0MDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1002405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yzhwang", "html_url": "https://github.com/yzhwang", "followers_url": "https://api.github.com/users/yzhwang/followers", "following_url": "https://api.github.com/users/yzhwang/following{/other_user}", "gists_url": "https://api.github.com/users/yzhwang/gists{/gist_id}", "starred_url": "https://api.github.com/users/yzhwang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yzhwang/subscriptions", "organizations_url": "https://api.github.com/users/yzhwang/orgs", "repos_url": "https://api.github.com/users/yzhwang/repos", "events_url": "https://api.github.com/users/yzhwang/events{/privacy}", "received_events_url": "https://api.github.com/users/yzhwang/received_events", "type": "User", "site_admin": false}, "body": "Same comment on `context->num_inputs()` elsewhere.", "created_at": "2017-05-04T22:30:47Z", "updated_at": "2017-05-18T18:25:03Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/9514#discussion_r114902428", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9514", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/114902428"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/9514#discussion_r114902428"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/9514"}}, "body_html": "<p>Same comment on <code>context-&gt;num_inputs()</code> elsewhere.</p>", "body_text": "Same comment on context->num_inputs() elsewhere."}