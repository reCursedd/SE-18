{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/350264555", "html_url": "https://github.com/tensorflow/tensorflow/issues/15212#issuecomment-350264555", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15212", "id": 350264555, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDI2NDU1NQ==", "user": {"login": "MtDersvan", "id": 7069222, "node_id": "MDQ6VXNlcjcwNjkyMjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/7069222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MtDersvan", "html_url": "https://github.com/MtDersvan", "followers_url": "https://api.github.com/users/MtDersvan/followers", "following_url": "https://api.github.com/users/MtDersvan/following{/other_user}", "gists_url": "https://api.github.com/users/MtDersvan/gists{/gist_id}", "starred_url": "https://api.github.com/users/MtDersvan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MtDersvan/subscriptions", "organizations_url": "https://api.github.com/users/MtDersvan/orgs", "repos_url": "https://api.github.com/users/MtDersvan/repos", "events_url": "https://api.github.com/users/MtDersvan/events{/privacy}", "received_events_url": "https://api.github.com/users/MtDersvan/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-08T13:35:50Z", "updated_at": "2017-12-08T13:35:50Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Actually, exposing a <code>shared_name</code> var, <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/lookup_ops.py#L1095\">here</a>, and assigning explicitly a unique string solves the problem for the eager execution mode.<br>\nSolution:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">from</span> tensorflow.python.ops <span class=\"pl-k\">import</span> lookup_ops\n<span class=\"pl-k\">import</span> tensorflow.contrib.eager <span class=\"pl-k\">as</span> tfe\ntfe.enable_eager_execution()\n\ninpt <span class=\"pl-k\">=</span> [<span class=\"pl-s\"><span class=\"pl-pds\">'</span>1611<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>1612<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>1613<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>1615<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>1616<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>1617<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>1618<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>1619<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>1621<span class=\"pl-pds\">'</span></span>]\n\na <span class=\"pl-k\">=</span> lookup_ops.index_table_from_tensor(inpt, <span class=\"pl-v\">shared_name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>)\nb <span class=\"pl-k\">=</span> lookup_ops.index_table_from_tensor(inpt, <span class=\"pl-v\">shared_name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>b<span class=\"pl-pds\">'</span></span>)</pre></div>\n<p>I do not know if a <code>shared_name</code> was intentionally abandoned, but I can submit a PR, assuming that adding a <code>shared_name</code> argument to <code>lookup_ops</code> is an acceptable workaround.</p>", "body_text": "Actually, exposing a shared_name var, here, and assigning explicitly a unique string solves the problem for the eager execution mode.\nSolution:\nfrom tensorflow.python.ops import lookup_ops\nimport tensorflow.contrib.eager as tfe\ntfe.enable_eager_execution()\n\ninpt = ['1611', '1612', '1613', '1615', '1616', '1617', '1618', '1619', '1621']\n\na = lookup_ops.index_table_from_tensor(inpt, shared_name='a')\nb = lookup_ops.index_table_from_tensor(inpt, shared_name='b')\nI do not know if a shared_name was intentionally abandoned, but I can submit a PR, assuming that adding a shared_name argument to lookup_ops is an acceptable workaround.", "body": "Actually, exposing a `shared_name` var, [here](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/lookup_ops.py#L1095), and assigning explicitly a unique string solves the problem for the eager execution mode.\r\nSolution:\r\n~~~python\r\nfrom tensorflow.python.ops import lookup_ops\r\nimport tensorflow.contrib.eager as tfe\r\ntfe.enable_eager_execution()\r\n\r\ninpt = ['1611', '1612', '1613', '1615', '1616', '1617', '1618', '1619', '1621']\r\n\r\na = lookup_ops.index_table_from_tensor(inpt, shared_name='a')\r\nb = lookup_ops.index_table_from_tensor(inpt, shared_name='b')\r\n~~~\r\nI do not know if a `shared_name` was intentionally abandoned, but I can submit a PR, assuming that adding a `shared_name` argument to `lookup_ops` is an acceptable workaround."}