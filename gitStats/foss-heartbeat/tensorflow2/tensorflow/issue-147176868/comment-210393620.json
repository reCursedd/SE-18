{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/210393620", "html_url": "https://github.com/tensorflow/tensorflow/pull/1834#issuecomment-210393620", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1834", "id": 210393620, "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDM5MzYyMA==", "user": {"login": "tillahoffmann", "id": 966348, "node_id": "MDQ6VXNlcjk2NjM0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/966348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tillahoffmann", "html_url": "https://github.com/tillahoffmann", "followers_url": "https://api.github.com/users/tillahoffmann/followers", "following_url": "https://api.github.com/users/tillahoffmann/following{/other_user}", "gists_url": "https://api.github.com/users/tillahoffmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/tillahoffmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tillahoffmann/subscriptions", "organizations_url": "https://api.github.com/users/tillahoffmann/orgs", "repos_url": "https://api.github.com/users/tillahoffmann/repos", "events_url": "https://api.github.com/users/tillahoffmann/events{/privacy}", "received_events_url": "https://api.github.com/users/tillahoffmann/received_events", "type": "User", "site_admin": false}, "created_at": "2016-04-15T09:49:38Z", "updated_at": "2016-04-15T09:49:38Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I'm having second thoughts about the suggested implementation. I'm sure it works fine but I'm a bit worried about consistency: a number of functions in <code>SpecialFunctions.h</code> in eigen use equality tests. For example, <code>igamma</code> tests for equality with zero and I also test for equality with one in the implementation of the zeta function. Is there something special about the representation of one and zero in memory that we don't have to worry about serialisation issues? Would it be worthwhile adding a helper function <code>integer_equal_impl</code> for all such comparisons?</p>", "body_text": "I'm having second thoughts about the suggested implementation. I'm sure it works fine but I'm a bit worried about consistency: a number of functions in SpecialFunctions.h in eigen use equality tests. For example, igamma tests for equality with zero and I also test for equality with one in the implementation of the zeta function. Is there something special about the representation of one and zero in memory that we don't have to worry about serialisation issues? Would it be worthwhile adding a helper function integer_equal_impl for all such comparisons?", "body": "I'm having second thoughts about the suggested implementation. I'm sure it works fine but I'm a bit worried about consistency: a number of functions in `SpecialFunctions.h` in eigen use equality tests. For example, `igamma` tests for equality with zero and I also test for equality with one in the implementation of the zeta function. Is there something special about the representation of one and zero in memory that we don't have to worry about serialisation issues? Would it be worthwhile adding a helper function `integer_equal_impl` for all such comparisons?\n"}