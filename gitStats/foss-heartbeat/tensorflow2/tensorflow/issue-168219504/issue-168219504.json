{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3554", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3554/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3554/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3554/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3554", "id": 168219504, "node_id": "MDU6SXNzdWUxNjgyMTk1MDQ=", "number": 3554, "title": "Different outputs using tensorflow.contrib.learn.Estimator.predict()", "user": {"login": "dzenteno2", "id": 11094140, "node_id": "MDQ6VXNlcjExMDk0MTQw", "avatar_url": "https://avatars0.githubusercontent.com/u/11094140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dzenteno2", "html_url": "https://github.com/dzenteno2", "followers_url": "https://api.github.com/users/dzenteno2/followers", "following_url": "https://api.github.com/users/dzenteno2/following{/other_user}", "gists_url": "https://api.github.com/users/dzenteno2/gists{/gist_id}", "starred_url": "https://api.github.com/users/dzenteno2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dzenteno2/subscriptions", "organizations_url": "https://api.github.com/users/dzenteno2/orgs", "repos_url": "https://api.github.com/users/dzenteno2/repos", "events_url": "https://api.github.com/users/dzenteno2/events{/privacy}", "received_events_url": "https://api.github.com/users/dzenteno2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-28T23:25:21Z", "updated_at": "2016-07-29T00:09:39Z", "closed_at": "2016-07-29T00:09:39Z", "author_association": "NONE", "body_html": "<p>I trained a tensorflow model using skflow, but when I tried to predict some new value of my data, things didn't work. This is what is happening.</p>\n<p>I have X, the matrix containing the observations.</p>\n<p>When I run</p>\n<p><code>y_predicted = classifier.predict(X, batch_size=128)</code></p>\n<p>I'm interested in the output of indexes 855, 15035, 49536, 856, 857</p>\n<p>so</p>\n<p><code>y_predicted['class'][(855, 15035, 49536, 856, 857), ]</code></p>\n<p>the results are exactly what I have expected</p>\n<p><code>array([0, 0, 0, 3, 3])</code></p>\n<p>Everything is fine up to here, but if I pass to predict function just the indexes of interest, the results are different. Here is an example:</p>\n<p><code>y_predicted = classifier.predict(X[(855, 15035, 49536, 856, 857), :], batch_size=128)</code></p>\n<p>Then, the output is wrong</p>\n<p>`y_predicted['class']``</p>\n<p>gives</p>\n<p><code>array([0, 0, 0, 2, 0])</code></p>\n<p>I tried several ways to do this, and I always get the wrong results.</p>\n<p>Thank you.</p>", "body_text": "I trained a tensorflow model using skflow, but when I tried to predict some new value of my data, things didn't work. This is what is happening.\nI have X, the matrix containing the observations.\nWhen I run\ny_predicted = classifier.predict(X, batch_size=128)\nI'm interested in the output of indexes 855, 15035, 49536, 856, 857\nso\ny_predicted['class'][(855, 15035, 49536, 856, 857), ]\nthe results are exactly what I have expected\narray([0, 0, 0, 3, 3])\nEverything is fine up to here, but if I pass to predict function just the indexes of interest, the results are different. Here is an example:\ny_predicted = classifier.predict(X[(855, 15035, 49536, 856, 857), :], batch_size=128)\nThen, the output is wrong\n`y_predicted['class']``\ngives\narray([0, 0, 0, 2, 0])\nI tried several ways to do this, and I always get the wrong results.\nThank you.", "body": "I trained a tensorflow model using skflow, but when I tried to predict some new value of my data, things didn't work. This is what is happening.\n\nI have X, the matrix containing the observations.\n\nWhen I run\n\n`y_predicted = classifier.predict(X, batch_size=128)`\n\nI'm interested in the output of indexes 855, 15035, 49536, 856, 857\n\nso\n\n`y_predicted['class'][(855, 15035, 49536, 856, 857), ]`\n\nthe results are exactly what I have expected\n\n`array([0, 0, 0, 3, 3])`\n\nEverything is fine up to here, but if I pass to predict function just the indexes of interest, the results are different. Here is an example:\n\n`y_predicted = classifier.predict(X[(855, 15035, 49536, 856, 857), :], batch_size=128)`\n\nThen, the output is wrong\n\n`y_predicted['class']``\n\ngives\n\n`array([0, 0, 0, 2, 0])`\n\nI tried several ways to do this, and I always get the wrong results.\n\nThank you.\n"}