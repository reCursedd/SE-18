{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11514", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11514/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11514/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11514/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/11514", "id": 243165849, "node_id": "MDU6SXNzdWUyNDMxNjU4NDk=", "number": 11514, "title": "tf.assign is much slower than tf.assign_add on CPU", "user": {"login": "suiyuan2009", "id": 5105569, "node_id": "MDQ6VXNlcjUxMDU1Njk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5105569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suiyuan2009", "html_url": "https://github.com/suiyuan2009", "followers_url": "https://api.github.com/users/suiyuan2009/followers", "following_url": "https://api.github.com/users/suiyuan2009/following{/other_user}", "gists_url": "https://api.github.com/users/suiyuan2009/gists{/gist_id}", "starred_url": "https://api.github.com/users/suiyuan2009/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suiyuan2009/subscriptions", "organizations_url": "https://api.github.com/users/suiyuan2009/orgs", "repos_url": "https://api.github.com/users/suiyuan2009/repos", "events_url": "https://api.github.com/users/suiyuan2009/events{/privacy}", "received_events_url": "https://api.github.com/users/suiyuan2009/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "zhangyaobit", "id": 1034716, "node_id": "MDQ6VXNlcjEwMzQ3MTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1034716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyaobit", "html_url": "https://github.com/zhangyaobit", "followers_url": "https://api.github.com/users/zhangyaobit/followers", "following_url": "https://api.github.com/users/zhangyaobit/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyaobit/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyaobit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyaobit/subscriptions", "organizations_url": "https://api.github.com/users/zhangyaobit/orgs", "repos_url": "https://api.github.com/users/zhangyaobit/repos", "events_url": "https://api.github.com/users/zhangyaobit/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyaobit/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "zhangyaobit", "id": 1034716, "node_id": "MDQ6VXNlcjEwMzQ3MTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1034716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyaobit", "html_url": "https://github.com/zhangyaobit", "followers_url": "https://api.github.com/users/zhangyaobit/followers", "following_url": "https://api.github.com/users/zhangyaobit/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyaobit/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyaobit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyaobit/subscriptions", "organizations_url": "https://api.github.com/users/zhangyaobit/orgs", "repos_url": "https://api.github.com/users/zhangyaobit/repos", "events_url": "https://api.github.com/users/zhangyaobit/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyaobit/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-07-15T09:57:32Z", "updated_at": "2018-09-28T21:29:34Z", "closed_at": "2018-09-28T21:29:34Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: ubuntu 14.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: ('v0.8.0rc0-16474-gac98d11', '1.2.1')</li>\n<li><strong>Python version</strong>: Python 2.7.13 :: Anaconda custom (64-bit)</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.4.5</li>\n<li><strong>CUDA/cuDNN version</strong>:cuda8.0/cudnn6.0</li>\n<li><strong>GPU model and memory</strong>:old titan x / 12GB</li>\n<li><strong>Exact command to reproduce</strong>: a python script</li>\n</ul>\n<h3>Describe the problem</h3>\n<p><code>tf.assign</code> is much slower than <code>tf.assign_add</code> on CPU when <code>intra_op_parallelism_threads</code> set to 10. Although tensorflow treats these two operations a little different(maybe because <code>tf.assign</code> allows uninitialized tensor, accepts more tensor types), they all use a same class in eigen. I find this problem when doing some test about <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"241760279\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/11411\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/11411/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/11411\">#11411</a>.</p>\n<h3>Source code / logs</h3>\n<p>script is on <a href=\"https://gist.github.com/suiyuan2009/24315b35915bddbe2d53b764164bb8fb\">gist</a>,</p>\n<pre><code>dtype is &lt;dtype: 'float32'&gt;\nuse tf.assign: 3480.53776469 MB/s\nuse tf.assign_add: 10737.1193186 MB/s\n</code></pre>\n<p>set <code>intra_op_parallelism_threads</code> to 1,</p>\n<pre><code>dtype is &lt;dtype: 'float32'&gt;\nuse tf.assign: 3481.3296105 MB/s\nuse tf.assign_add: 4244.41816359 MB/s\n</code></pre>\n<p>on GPU,</p>\n<pre><code>dtype is &lt;dtype: 'float32'&gt;\nuse tf.assign: 120361.172131 MB/s\nuse tf.assign_add: 77835.7152633 MB/s\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): ubuntu 14.04\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): ('v0.8.0rc0-16474-gac98d11', '1.2.1')\nPython version: Python 2.7.13 :: Anaconda custom (64-bit)\nBazel version (if compiling from source): 0.4.5\nCUDA/cuDNN version:cuda8.0/cudnn6.0\nGPU model and memory:old titan x / 12GB\nExact command to reproduce: a python script\n\nDescribe the problem\ntf.assign is much slower than tf.assign_add on CPU when intra_op_parallelism_threads set to 10. Although tensorflow treats these two operations a little different(maybe because tf.assign allows uninitialized tensor, accepts more tensor types), they all use a same class in eigen. I find this problem when doing some test about #11411.\nSource code / logs\nscript is on gist,\ndtype is <dtype: 'float32'>\nuse tf.assign: 3480.53776469 MB/s\nuse tf.assign_add: 10737.1193186 MB/s\n\nset intra_op_parallelism_threads to 1,\ndtype is <dtype: 'float32'>\nuse tf.assign: 3481.3296105 MB/s\nuse tf.assign_add: 4244.41816359 MB/s\n\non GPU,\ndtype is <dtype: 'float32'>\nuse tf.assign: 120361.172131 MB/s\nuse tf.assign_add: 77835.7152633 MB/s", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: ubuntu 14.04\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: ('v0.8.0rc0-16474-gac98d11', '1.2.1')\r\n- **Python version**: Python 2.7.13 :: Anaconda custom (64-bit)\r\n- **Bazel version (if compiling from source)**: 0.4.5\r\n- **CUDA/cuDNN version**:cuda8.0/cudnn6.0\r\n- **GPU model and memory**:old titan x / 12GB\r\n- **Exact command to reproduce**: a python script\r\n\r\n### Describe the problem\r\n`tf.assign` is much slower than `tf.assign_add` on CPU when `intra_op_parallelism_threads` set to 10. Although tensorflow treats these two operations a little different(maybe because `tf.assign` allows uninitialized tensor, accepts more tensor types), they all use a same class in eigen. I find this problem when doing some test about #11411.\r\n\r\n### Source code / logs\r\nscript is on [gist](https://gist.github.com/suiyuan2009/24315b35915bddbe2d53b764164bb8fb),\r\n```\r\ndtype is <dtype: 'float32'>\r\nuse tf.assign: 3480.53776469 MB/s\r\nuse tf.assign_add: 10737.1193186 MB/s\r\n```\r\nset `intra_op_parallelism_threads` to 1, \r\n```\r\ndtype is <dtype: 'float32'>\r\nuse tf.assign: 3481.3296105 MB/s\r\nuse tf.assign_add: 4244.41816359 MB/s\r\n```\r\non GPU,\r\n```\r\ndtype is <dtype: 'float32'>\r\nuse tf.assign: 120361.172131 MB/s\r\nuse tf.assign_add: 77835.7152633 MB/s\r\n```"}