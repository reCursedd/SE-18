{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/249751947", "html_url": "https://github.com/tensorflow/tensorflow/issues/4432#issuecomment-249751947", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4432", "id": 249751947, "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTc1MTk0Nw==", "user": {"login": "cherishlc", "id": 13269703, "node_id": "MDQ6VXNlcjEzMjY5NzAz", "avatar_url": "https://avatars0.githubusercontent.com/u/13269703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cherishlc", "html_url": "https://github.com/cherishlc", "followers_url": "https://api.github.com/users/cherishlc/followers", "following_url": "https://api.github.com/users/cherishlc/following{/other_user}", "gists_url": "https://api.github.com/users/cherishlc/gists{/gist_id}", "starred_url": "https://api.github.com/users/cherishlc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cherishlc/subscriptions", "organizations_url": "https://api.github.com/users/cherishlc/orgs", "repos_url": "https://api.github.com/users/cherishlc/repos", "events_url": "https://api.github.com/users/cherishlc/events{/privacy}", "received_events_url": "https://api.github.com/users/cherishlc/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-27T02:40:08Z", "updated_at": "2016-09-27T02:40:08Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=23068\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yaroslavvb\">@yaroslavvb</a> thanks for you explanation~<br>\nI follow the stackoverflow solution and it works.</p>\n<p><strong>Just move the dependency into f1()!!!</strong></p>\n<p>For the convenience of other people, the correct version is <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji><br>\n`def testTF_case_with_control_dependencies():</p>\n<pre><code>isTraining=tf.placeholder(tf.bool,shape=[])\ntfvar=tf.Variable(tf.constant(0),tf.int32);\n\n#increase_tfvar_op=tf.assign_add(tfvar.ref(), 1); #this line is moved to f1()\n\nsess=tf.Session()\nsess.run(tf.initialize_all_variables())\n\ndef f1():\n    print ('f1')\n    increase_tfvar_op=tf.assign_add(tfvar.ref(), 1);\n    with tf.control_dependencies([increase_tfvar_op]):\n        return -tfvar;  #if return tfvar directly, no control_dependencies is added\n\ndef f2():\n    print('f2')\n    with tf.control_dependencies([]):\n        return tfvar*10;\ncaseResult = tf.case([(isTraining, f1)], default=f2)\n\nb=True;\nfor t in range(4):\n    b=not b;\n    print('\\n------')\n    print('isTraining: ',end='')\n    print(b)\n    beforeCase=sess.run(tfvar)\n    print('\\ttfvar before run case: %d'%beforeCase)\n    r=sess.run(caseResult,feed_dict={isTraining:b})\n    print('case result:%d'%r)\n    aftercase=sess.run(tfvar)\n    print('\\ttfvar after run case: %d'%aftercase)`\n</code></pre>", "body_text": "@yaroslavvb thanks for you explanation~\nI follow the stackoverflow solution and it works.\nJust move the dependency into f1()!!!\nFor the convenience of other people, the correct version is \ud83d\udc4d\n`def testTF_case_with_control_dependencies():\nisTraining=tf.placeholder(tf.bool,shape=[])\ntfvar=tf.Variable(tf.constant(0),tf.int32);\n\n#increase_tfvar_op=tf.assign_add(tfvar.ref(), 1); #this line is moved to f1()\n\nsess=tf.Session()\nsess.run(tf.initialize_all_variables())\n\ndef f1():\n    print ('f1')\n    increase_tfvar_op=tf.assign_add(tfvar.ref(), 1);\n    with tf.control_dependencies([increase_tfvar_op]):\n        return -tfvar;  #if return tfvar directly, no control_dependencies is added\n\ndef f2():\n    print('f2')\n    with tf.control_dependencies([]):\n        return tfvar*10;\ncaseResult = tf.case([(isTraining, f1)], default=f2)\n\nb=True;\nfor t in range(4):\n    b=not b;\n    print('\\n------')\n    print('isTraining: ',end='')\n    print(b)\n    beforeCase=sess.run(tfvar)\n    print('\\ttfvar before run case: %d'%beforeCase)\n    r=sess.run(caseResult,feed_dict={isTraining:b})\n    print('case result:%d'%r)\n    aftercase=sess.run(tfvar)\n    print('\\ttfvar after run case: %d'%aftercase)`", "body": "@yaroslavvb thanks for you explanation~  \nI follow the stackoverflow solution and it works.\n\n**Just move the dependency into f1()!!!**  \n\nFor the convenience of other people, the correct version is :+1: \n`def testTF_case_with_control_dependencies():\n\n```\nisTraining=tf.placeholder(tf.bool,shape=[])\ntfvar=tf.Variable(tf.constant(0),tf.int32);\n\n#increase_tfvar_op=tf.assign_add(tfvar.ref(), 1); #this line is moved to f1()\n\nsess=tf.Session()\nsess.run(tf.initialize_all_variables())\n\ndef f1():\n    print ('f1')\n    increase_tfvar_op=tf.assign_add(tfvar.ref(), 1);\n    with tf.control_dependencies([increase_tfvar_op]):\n        return -tfvar;  #if return tfvar directly, no control_dependencies is added\n\ndef f2():\n    print('f2')\n    with tf.control_dependencies([]):\n        return tfvar*10;\ncaseResult = tf.case([(isTraining, f1)], default=f2)\n\nb=True;\nfor t in range(4):\n    b=not b;\n    print('\\n------')\n    print('isTraining: ',end='')\n    print(b)\n    beforeCase=sess.run(tfvar)\n    print('\\ttfvar before run case: %d'%beforeCase)\n    r=sess.run(caseResult,feed_dict={isTraining:b})\n    print('case result:%d'%r)\n    aftercase=sess.run(tfvar)\n    print('\\ttfvar after run case: %d'%aftercase)`\n```\n"}