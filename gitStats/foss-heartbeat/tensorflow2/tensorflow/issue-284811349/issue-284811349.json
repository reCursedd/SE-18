{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15672", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15672/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15672/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15672/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15672", "id": 284811349, "node_id": "MDU6SXNzdWUyODQ4MTEzNDk=", "number": 15672, "title": "matmul back-propagation quadratic memory consumption", "user": {"login": "russellw", "id": 299692, "node_id": "MDQ6VXNlcjI5OTY5Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/299692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/russellw", "html_url": "https://github.com/russellw", "followers_url": "https://api.github.com/users/russellw/followers", "following_url": "https://api.github.com/users/russellw/following{/other_user}", "gists_url": "https://api.github.com/users/russellw/gists{/gist_id}", "starred_url": "https://api.github.com/users/russellw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/russellw/subscriptions", "organizations_url": "https://api.github.com/users/russellw/orgs", "repos_url": "https://api.github.com/users/russellw/repos", "events_url": "https://api.github.com/users/russellw/events{/privacy}", "received_events_url": "https://api.github.com/users/russellw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-27T23:10:47Z", "updated_at": "2017-12-30T16:51:40Z", "closed_at": "2017-12-30T16:51:40Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Windows 7</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.3.0</li>\n<li><strong>Python version</strong>: 3.6.3</li>\n<li><strong>CUDA/cuDNN version</strong>: using CPU only</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>tf.matmul in back-propagation has memory consumption quadratic in the number of records of data. Test case and discussion here:<br>\n<a href=\"https://stackoverflow.com/questions/47991747/back-propagation-exhibiting-quadratic-memory-consumption\" rel=\"nofollow\">https://stackoverflow.com/questions/47991747/back-propagation-exhibiting-quadratic-memory-consumption</a></p>\n<p>One answer at time of writing suggests a workaround using mini-batches, appears to confirm quadratic memory consumption is not expected. I've also tried using tf.tensordot(a,b,1) which seems to be a synonym of tf.matmul(a,b) and does not use as much memory. This despite the existence of another discussion indicating tf.matmul should be more efficient:<br>\n<a href=\"https://stackoverflow.com/questions/43100679/tensorflow-einsum-vs-matmul-vs-tensordot\" rel=\"nofollow\">https://stackoverflow.com/questions/43100679/tensorflow-einsum-vs-matmul-vs-tensordot</a></p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 7\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): 1.3.0\nPython version: 3.6.3\nCUDA/cuDNN version: using CPU only\n\nDescribe the problem\ntf.matmul in back-propagation has memory consumption quadratic in the number of records of data. Test case and discussion here:\nhttps://stackoverflow.com/questions/47991747/back-propagation-exhibiting-quadratic-memory-consumption\nOne answer at time of writing suggests a workaround using mini-batches, appears to confirm quadratic memory consumption is not expected. I've also tried using tf.tensordot(a,b,1) which seems to be a synonym of tf.matmul(a,b) and does not use as much memory. This despite the existence of another discussion indicating tf.matmul should be more efficient:\nhttps://stackoverflow.com/questions/43100679/tensorflow-einsum-vs-matmul-vs-tensordot", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 7\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: 1.3.0\r\n- **Python version**: 3.6.3\r\n- **CUDA/cuDNN version**: using CPU only\r\n\r\n### Describe the problem\r\ntf.matmul in back-propagation has memory consumption quadratic in the number of records of data. Test case and discussion here:\r\nhttps://stackoverflow.com/questions/47991747/back-propagation-exhibiting-quadratic-memory-consumption\r\n\r\nOne answer at time of writing suggests a workaround using mini-batches, appears to confirm quadratic memory consumption is not expected. I've also tried using tf.tensordot(a,b,1) which seems to be a synonym of tf.matmul(a,b) and does not use as much memory. This despite the existence of another discussion indicating tf.matmul should be more efficient:\r\nhttps://stackoverflow.com/questions/43100679/tensorflow-einsum-vs-matmul-vs-tensordot\r\n"}