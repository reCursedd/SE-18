{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/245004308", "html_url": "https://github.com/tensorflow/tensorflow/issues/4175#issuecomment-245004308", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4175", "id": 245004308, "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTAwNDMwOA==", "user": {"login": "gilberthendry", "id": 18124217, "node_id": "MDQ6VXNlcjE4MTI0MjE3", "avatar_url": "https://avatars0.githubusercontent.com/u/18124217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gilberthendry", "html_url": "https://github.com/gilberthendry", "followers_url": "https://api.github.com/users/gilberthendry/followers", "following_url": "https://api.github.com/users/gilberthendry/following{/other_user}", "gists_url": "https://api.github.com/users/gilberthendry/gists{/gist_id}", "starred_url": "https://api.github.com/users/gilberthendry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gilberthendry/subscriptions", "organizations_url": "https://api.github.com/users/gilberthendry/orgs", "repos_url": "https://api.github.com/users/gilberthendry/repos", "events_url": "https://api.github.com/users/gilberthendry/events{/privacy}", "received_events_url": "https://api.github.com/users/gilberthendry/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-06T16:16:22Z", "updated_at": "2016-09-06T16:16:22Z", "author_association": "NONE", "body_html": "<p>The RandomForest Estimator currently only supports passing one of ['sigmoid_entropy', 'softmax_entropy', 'accuracy', 'r2', 'predictions'] in the accuracy_metric argument of the constructor to use for evaluation. If passing streaming_auc in the metrics argument of evaluate() worked with casted inputs, that's great, but I would be wary that it's giving you the right results.  We pass class probabilities and one-hot labels to the metric, which not all metrics are expecting. For instance, streaming_accuracy is expecting predictions, so we wrap it in a function that performs an argmax.</p>\n<p>We have an action item to improve the compatibility of the underlying random forest implementation with the tf.learn wrapper, so thanks for pointing this out so it can be included.</p>", "body_text": "The RandomForest Estimator currently only supports passing one of ['sigmoid_entropy', 'softmax_entropy', 'accuracy', 'r2', 'predictions'] in the accuracy_metric argument of the constructor to use for evaluation. If passing streaming_auc in the metrics argument of evaluate() worked with casted inputs, that's great, but I would be wary that it's giving you the right results.  We pass class probabilities and one-hot labels to the metric, which not all metrics are expecting. For instance, streaming_accuracy is expecting predictions, so we wrap it in a function that performs an argmax.\nWe have an action item to improve the compatibility of the underlying random forest implementation with the tf.learn wrapper, so thanks for pointing this out so it can be included.", "body": "The RandomForest Estimator currently only supports passing one of ['sigmoid_entropy', 'softmax_entropy', 'accuracy', 'r2', 'predictions'] in the accuracy_metric argument of the constructor to use for evaluation. If passing streaming_auc in the metrics argument of evaluate() worked with casted inputs, that's great, but I would be wary that it's giving you the right results.  We pass class probabilities and one-hot labels to the metric, which not all metrics are expecting. For instance, streaming_accuracy is expecting predictions, so we wrap it in a function that performs an argmax. \n\nWe have an action item to improve the compatibility of the underlying random forest implementation with the tf.learn wrapper, so thanks for pointing this out so it can be included.\n"}