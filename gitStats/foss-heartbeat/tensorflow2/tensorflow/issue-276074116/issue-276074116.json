{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14796", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14796/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14796/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14796/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14796", "id": 276074116, "node_id": "MDU6SXNzdWUyNzYwNzQxMTY=", "number": 14796, "title": "Error Too many value to unpack during export_savedmodel in tensorflow", "user": {"login": "AKhilGarg91", "id": 9513952, "node_id": "MDQ6VXNlcjk1MTM5NTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/9513952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AKhilGarg91", "html_url": "https://github.com/AKhilGarg91", "followers_url": "https://api.github.com/users/AKhilGarg91/followers", "following_url": "https://api.github.com/users/AKhilGarg91/following{/other_user}", "gists_url": "https://api.github.com/users/AKhilGarg91/gists{/gist_id}", "starred_url": "https://api.github.com/users/AKhilGarg91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AKhilGarg91/subscriptions", "organizations_url": "https://api.github.com/users/AKhilGarg91/orgs", "repos_url": "https://api.github.com/users/AKhilGarg91/repos", "events_url": "https://api.github.com/users/AKhilGarg91/events{/privacy}", "received_events_url": "https://api.github.com/users/AKhilGarg91/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-22T13:49:58Z", "updated_at": "2017-11-22T15:42:23Z", "closed_at": "2017-11-22T15:42:23Z", "author_association": "NONE", "body_html": "<p>TensorFlow 1.4.0</p>\n<p>sendingcurrency = tf.feature_column.categorical_column_with_vocabulary_list('sendincurrency', vocabulary_list=['AUD', 'EUR','GBP','USD'])<br>\nrecievercurrency = tf.feature_column.categorical_column_with_vocabulary_list('recievercurrency', vocabulary_list=['AUD', 'EUR','GBP','INR','NZD','USD','XCD','XOF'])<br>\nCBRate = tf.feature_column.numeric_column(\"CBRate\",dtype=tf.float32)<br>\nlinear_features = [sendingcurrency,recievercurrency,CBRate]<br>\nregressor = tf.contrib.learn.LinearRegressor(feature_columns=linear_features,config=tf.contrib.learn.RunConfig(model_dir=\"/tmp/akhil\"))</p>\n<p>feature_spec = tf.feature_column.make_parse_example_spec(linear_features)<br>\nexport_input_fn = tf.estimator.export.build_parsing_serving_input_receiver_fn(feature_spec)<br>\nmodel.export_savedmodel(\"/tmp/akhil/\",serving_input_fn=export_input_fn)</p>", "body_text": "TensorFlow 1.4.0\nsendingcurrency = tf.feature_column.categorical_column_with_vocabulary_list('sendincurrency', vocabulary_list=['AUD', 'EUR','GBP','USD'])\nrecievercurrency = tf.feature_column.categorical_column_with_vocabulary_list('recievercurrency', vocabulary_list=['AUD', 'EUR','GBP','INR','NZD','USD','XCD','XOF'])\nCBRate = tf.feature_column.numeric_column(\"CBRate\",dtype=tf.float32)\nlinear_features = [sendingcurrency,recievercurrency,CBRate]\nregressor = tf.contrib.learn.LinearRegressor(feature_columns=linear_features,config=tf.contrib.learn.RunConfig(model_dir=\"/tmp/akhil\"))\nfeature_spec = tf.feature_column.make_parse_example_spec(linear_features)\nexport_input_fn = tf.estimator.export.build_parsing_serving_input_receiver_fn(feature_spec)\nmodel.export_savedmodel(\"/tmp/akhil/\",serving_input_fn=export_input_fn)", "body": "TensorFlow 1.4.0\r\n\r\n sendingcurrency = tf.feature_column.categorical_column_with_vocabulary_list('sendincurrency', vocabulary_list=['AUD', 'EUR','GBP','USD'])\r\n    recievercurrency = tf.feature_column.categorical_column_with_vocabulary_list('recievercurrency', vocabulary_list=['AUD', 'EUR','GBP','INR','NZD','USD','XCD','XOF'])\r\n    CBRate = tf.feature_column.numeric_column(\"CBRate\",dtype=tf.float32)\r\nlinear_features = [sendingcurrency,recievercurrency,CBRate]\r\nregressor = tf.contrib.learn.LinearRegressor(feature_columns=linear_features,config=tf.contrib.learn.RunConfig(model_dir=\"/tmp/akhil\"))\r\n       \r\nfeature_spec = tf.feature_column.make_parse_example_spec(linear_features)\r\nexport_input_fn = tf.estimator.export.build_parsing_serving_input_receiver_fn(feature_spec)\r\nmodel.export_savedmodel(\"/tmp/akhil/\",serving_input_fn=export_input_fn)"}