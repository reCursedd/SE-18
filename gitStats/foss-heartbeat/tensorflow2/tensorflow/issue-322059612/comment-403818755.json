{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/403818755", "html_url": "https://github.com/tensorflow/tensorflow/issues/19208#issuecomment-403818755", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19208", "id": 403818755, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzgxODc1NQ==", "user": {"login": "sleighsoft", "id": 9438971, "node_id": "MDQ6VXNlcjk0Mzg5NzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/9438971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sleighsoft", "html_url": "https://github.com/sleighsoft", "followers_url": "https://api.github.com/users/sleighsoft/followers", "following_url": "https://api.github.com/users/sleighsoft/following{/other_user}", "gists_url": "https://api.github.com/users/sleighsoft/gists{/gist_id}", "starred_url": "https://api.github.com/users/sleighsoft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sleighsoft/subscriptions", "organizations_url": "https://api.github.com/users/sleighsoft/orgs", "repos_url": "https://api.github.com/users/sleighsoft/repos", "events_url": "https://api.github.com/users/sleighsoft/events{/privacy}", "received_events_url": "https://api.github.com/users/sleighsoft/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-10T13:18:57Z", "updated_at": "2018-07-10T13:18:57Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3731025\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/allenlavoie\">@allenlavoie</a> I have some remarks to the current solution.<br>\nWhen using e.g. <code>DropoutWrapper</code> then it is no longer possible to switch between not using it e.g. during <code>inference</code> while using it during <code>training</code>. There are a lot of implementations currently that are programmed like this that do not work anymore. Same goes for <code>DeviceWrapper</code>. There either has to be an updated documentation stating that is important to keep these object wrappers when using checkpointing or a different solution is necessary that skips the wrapper in the dependency tree.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">if</span> training:\n   cell <span class=\"pl-k\">=</span> DropoutWrapper(cell, prob)\n<span class=\"pl-k\">else</span>:\n   <span class=\"pl-c\"><span class=\"pl-c\">#</span> leave cell as is</span></pre></div>\n<p>This code does not work when doing checkpointing!</p>", "body_text": "@allenlavoie I have some remarks to the current solution.\nWhen using e.g. DropoutWrapper then it is no longer possible to switch between not using it e.g. during inference while using it during training. There are a lot of implementations currently that are programmed like this that do not work anymore. Same goes for DeviceWrapper. There either has to be an updated documentation stating that is important to keep these object wrappers when using checkpointing or a different solution is necessary that skips the wrapper in the dependency tree.\nif training:\n   cell = DropoutWrapper(cell, prob)\nelse:\n   # leave cell as is\nThis code does not work when doing checkpointing!", "body": "@allenlavoie I have some remarks to the current solution.\r\nWhen using e.g. `DropoutWrapper` then it is no longer possible to switch between not using it e.g. during `inference` while using it during `training`. There are a lot of implementations currently that are programmed like this that do not work anymore. Same goes for `DeviceWrapper`. There either has to be an updated documentation stating that is important to keep these object wrappers when using checkpointing or a different solution is necessary that skips the wrapper in the dependency tree.\r\n\r\n```python\r\nif training:\r\n   cell = DropoutWrapper(cell, prob)\r\nelse:\r\n   # leave cell as is\r\n```\r\nThis code does not work when doing checkpointing!"}