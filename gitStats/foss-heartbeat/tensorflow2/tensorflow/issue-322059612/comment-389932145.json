{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/389932145", "html_url": "https://github.com/tensorflow/tensorflow/issues/19208#issuecomment-389932145", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19208", "id": 389932145, "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTkzMjE0NQ==", "user": {"login": "allenlavoie", "id": 3731025, "node_id": "MDQ6VXNlcjM3MzEwMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3731025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allenlavoie", "html_url": "https://github.com/allenlavoie", "followers_url": "https://api.github.com/users/allenlavoie/followers", "following_url": "https://api.github.com/users/allenlavoie/following{/other_user}", "gists_url": "https://api.github.com/users/allenlavoie/gists{/gist_id}", "starred_url": "https://api.github.com/users/allenlavoie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allenlavoie/subscriptions", "organizations_url": "https://api.github.com/users/allenlavoie/orgs", "repos_url": "https://api.github.com/users/allenlavoie/repos", "events_url": "https://api.github.com/users/allenlavoie/events{/privacy}", "received_events_url": "https://api.github.com/users/allenlavoie/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-17T16:42:28Z", "updated_at": "2018-05-17T16:42:28Z", "author_association": "MEMBER", "body_html": "<p>Yeah, this is what several of the eager examples do: e.g. <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/d8f9538ab48e3c677aaf532769d29bc29a05b76e/tensorflow/contrib/eager/python/examples/rnn_colorbot/rnn_colorbot.py#L211\">tensorflow/tensorflow/contrib/eager/python/examples/rnn_colorbot/rnn_colorbot.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 211\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/d8f9538ab48e3c677aaf532769d29bc29a05b76e\">d8f9538</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L211\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"211\"></td>\n          <td id=\"LC211\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">for</span> i, c <span class=\"pl-k\">in</span> <span class=\"pl-c1\">enumerate</span>(cells): </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>It's fine, but we should add checkpointable data structures (which also forward Layers). I'm almost done with an append-only list datastructure. Whether we support regular Python lists is another interesting question (somewhat tricky semantics with restore-on-create, but doable...).</p>", "body_text": "Yeah, this is what several of the eager examples do: e.g. \n  \n    \n      tensorflow/tensorflow/contrib/eager/python/examples/rnn_colorbot/rnn_colorbot.py\n    \n    \n         Line 211\n      in\n      d8f9538\n    \n    \n    \n    \n\n        \n          \n           for i, c in enumerate(cells): \n        \n    \n  \n\n\nIt's fine, but we should add checkpointable data structures (which also forward Layers). I'm almost done with an append-only list datastructure. Whether we support regular Python lists is another interesting question (somewhat tricky semantics with restore-on-create, but doable...).", "body": "Yeah, this is what several of the eager examples do: e.g. https://github.com/tensorflow/tensorflow/blob/d8f9538ab48e3c677aaf532769d29bc29a05b76e/tensorflow/contrib/eager/python/examples/rnn_colorbot/rnn_colorbot.py#L211\r\n\r\nIt's fine, but we should add checkpointable data structures (which also forward Layers). I'm almost done with an append-only list datastructure. Whether we support regular Python lists is another interesting question (somewhat tricky semantics with restore-on-create, but doable...)."}