{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/405326960", "html_url": "https://github.com/tensorflow/tensorflow/issues/19208#issuecomment-405326960", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19208", "id": 405326960, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTMyNjk2MA==", "user": {"login": "allenlavoie", "id": 3731025, "node_id": "MDQ6VXNlcjM3MzEwMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3731025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allenlavoie", "html_url": "https://github.com/allenlavoie", "followers_url": "https://api.github.com/users/allenlavoie/followers", "following_url": "https://api.github.com/users/allenlavoie/following{/other_user}", "gists_url": "https://api.github.com/users/allenlavoie/gists{/gist_id}", "starred_url": "https://api.github.com/users/allenlavoie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allenlavoie/subscriptions", "organizations_url": "https://api.github.com/users/allenlavoie/orgs", "repos_url": "https://api.github.com/users/allenlavoie/repos", "events_url": "https://api.github.com/users/allenlavoie/events{/privacy}", "received_events_url": "https://api.github.com/users/allenlavoie/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-16T17:52:38Z", "updated_at": "2018-07-16T17:52:38Z", "author_association": "MEMBER", "body_html": "<p><a href=\"https://github.com/tensorflow/tensorflow/issues/19208#issuecomment-388218570\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/19208/hovercard\">Totally agree</a>, we should do dependency forwarding so that removing a wrapper doesn't break the checkpoint. It's on my list.</p>\n<p>Isn't that a bit of an unusual use-case, though? My expectation is that the model is created in an <strong>init</strong> before training/not training is known, then <code>training</code> is passed through to DropoutWrapper's call(). Creating the object conditionally (in call?) seems a bit wasteful, although I guess it doesn't matter so much unless eager execution is enabled.</p>", "body_text": "Totally agree, we should do dependency forwarding so that removing a wrapper doesn't break the checkpoint. It's on my list.\nIsn't that a bit of an unusual use-case, though? My expectation is that the model is created in an init before training/not training is known, then training is passed through to DropoutWrapper's call(). Creating the object conditionally (in call?) seems a bit wasteful, although I guess it doesn't matter so much unless eager execution is enabled.", "body": "[Totally agree](https://github.com/tensorflow/tensorflow/issues/19208#issuecomment-388218570), we should do dependency forwarding so that removing a wrapper doesn't break the checkpoint. It's on my list.\r\n\r\nIsn't that a bit of an unusual use-case, though? My expectation is that the model is created in an __init__ before training/not training is known, then `training` is passed through to DropoutWrapper's call(). Creating the object conditionally (in call?) seems a bit wasteful, although I guess it doesn't matter so much unless eager execution is enabled."}