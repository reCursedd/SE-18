{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/281770844", "html_url": "https://github.com/tensorflow/tensorflow/issues/7755#issuecomment-281770844", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7755", "id": 281770844, "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTc3MDg0NA==", "user": {"login": "chrisranderson", "id": 5461398, "node_id": "MDQ6VXNlcjU0NjEzOTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5461398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisranderson", "html_url": "https://github.com/chrisranderson", "followers_url": "https://api.github.com/users/chrisranderson/followers", "following_url": "https://api.github.com/users/chrisranderson/following{/other_user}", "gists_url": "https://api.github.com/users/chrisranderson/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisranderson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisranderson/subscriptions", "organizations_url": "https://api.github.com/users/chrisranderson/orgs", "repos_url": "https://api.github.com/users/chrisranderson/repos", "events_url": "https://api.github.com/users/chrisranderson/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisranderson/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-22T19:13:33Z", "updated_at": "2017-02-22T19:15:41Z", "author_association": "NONE", "body_html": "<blockquote>\n<p>Is it the first call, or can it be the second call?</p>\n</blockquote>\n<p>There's only one call to sess.run - for initializing the variables. If you're talking about running the script as a whole, so far it has been kinda unpredictable.</p>\n<blockquote>\n<p>If it's the first call, it could have something to do with CUDA generating PTX, which happens the first time op is executed and is slow (and mega-slow if you are on nfs,</p>\n</blockquote>\n<p>I'm running this all on my own machine.</p>\n<blockquote>\n<p>set CUDA_CACHE_PATH=/non_nfs_dir). Whether or not PTX has to be generated depends on whether the binary was built with compute capability of your card</p>\n</blockquote>\n<p>It's a GTX 1060, so that's compute capability 6.1, I guess.</p>\n<blockquote>\n<p>Does the problem disappear if you revert to older version? Does it happen with CPU-only TensorFlow?</p>\n</blockquote>\n<p>I switched to 0.12, CPU version: <code>tensorflow-0.12.0-cp27-cp27mu-manylinux1_x86_64.whl</code>. Waaaaay better! After that, I tried 0.12, GPU version: <code>tensorflow_gpu-0.12.0-cp27-cp27mu-manylinux1_x86_64.whl</code>. This returned to the same problem.</p>", "body_text": "Is it the first call, or can it be the second call?\n\nThere's only one call to sess.run - for initializing the variables. If you're talking about running the script as a whole, so far it has been kinda unpredictable.\n\nIf it's the first call, it could have something to do with CUDA generating PTX, which happens the first time op is executed and is slow (and mega-slow if you are on nfs,\n\nI'm running this all on my own machine.\n\nset CUDA_CACHE_PATH=/non_nfs_dir). Whether or not PTX has to be generated depends on whether the binary was built with compute capability of your card\n\nIt's a GTX 1060, so that's compute capability 6.1, I guess.\n\nDoes the problem disappear if you revert to older version? Does it happen with CPU-only TensorFlow?\n\nI switched to 0.12, CPU version: tensorflow-0.12.0-cp27-cp27mu-manylinux1_x86_64.whl. Waaaaay better! After that, I tried 0.12, GPU version: tensorflow_gpu-0.12.0-cp27-cp27mu-manylinux1_x86_64.whl. This returned to the same problem.", "body": "> Is it the first call, or can it be the second call? \r\n\r\nThere's only one call to sess.run - for initializing the variables. If you're talking about running the script as a whole, so far it has been kinda unpredictable.\r\n\r\n> If it's the first call, it could have something to do with CUDA generating PTX, which happens the first time op is executed and is slow (and mega-slow if you are on nfs, \r\n\r\nI'm running this all on my own machine.\r\n\r\n> set CUDA_CACHE_PATH=/non_nfs_dir). Whether or not PTX has to be generated depends on whether the binary was built with compute capability of your card\r\n\r\nIt's a GTX 1060, so that's compute capability 6.1, I guess.\r\n\r\n> Does the problem disappear if you revert to older version? Does it happen with CPU-only TensorFlow?\r\n\r\nI switched to 0.12, CPU version: `tensorflow-0.12.0-cp27-cp27mu-manylinux1_x86_64.whl`. Waaaaay better! After that, I tried 0.12, GPU version: `tensorflow_gpu-0.12.0-cp27-cp27mu-manylinux1_x86_64.whl`. This returned to the same problem.\r\n\r\n"}