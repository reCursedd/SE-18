{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21463", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21463/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21463/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21463/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21463", "id": 348521765, "node_id": "MDU6SXNzdWUzNDg1MjE3NjU=", "number": 21463, "title": "Keras model with SparseTensor as inputs", "user": {"login": "chtran", "id": 1075503, "node_id": "MDQ6VXNlcjEwNzU1MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1075503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chtran", "html_url": "https://github.com/chtran", "followers_url": "https://api.github.com/users/chtran/followers", "following_url": "https://api.github.com/users/chtran/following{/other_user}", "gists_url": "https://api.github.com/users/chtran/gists{/gist_id}", "starred_url": "https://api.github.com/users/chtran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chtran/subscriptions", "organizations_url": "https://api.github.com/users/chtran/orgs", "repos_url": "https://api.github.com/users/chtran/repos", "events_url": "https://api.github.com/users/chtran/events{/privacy}", "received_events_url": "https://api.github.com/users/chtran/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-08-07T23:27:15Z", "updated_at": "2018-09-04T17:57:17Z", "closed_at": "2018-09-04T17:57:17Z", "author_association": "NONE", "body_html": "<p>I'm trying to setup a Keras model with sparse input:</p>\n<pre><code>input_layer = tf.keras.layers.Input(shape=(10, ), sparse=True)\nweights = tf.get_variable(name='weights', shape=(10, 1))\n\nweights_mult = lambda x: tf.sparse_tensor_dense_matmul(x, weights)\noutput_layer=  tf.keras.layers.Lambda(weights_mult)(input_layer)\nmodel = tf.keras.Model([input_layer], output_layer)\nmodel.compile(loss='binary_crossentropy',\n                  optimizer=tf.keras.optimizers.Adam(lr=0.0001),\n                  metrics=['accuracy'])\n\n</code></pre>\n<p>This fails with</p>\n<pre><code>TypeError                                 Traceback (most recent call last)\n&lt;ipython-input-3-822e68cb2d64&gt; in &lt;module&gt;()\n      7 model.compile(loss='binary_crossentropy',\n      8                   optimizer=tf.keras.optimizers.Adam(lr=0.0001),\n----&gt; 9                   metrics=['accuracy'])\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py in compile(self, optimizer, loss, metrics, loss_weights, sample_weight_mode, weighted_metrics, target_tensors, **kwargs)\n    457       # Add regularization penalties\n    458       # and other layer-specific losses.\n--&gt; 459       for loss_tensor in self.losses:\n    460         total_loss += loss_tensor\n    461\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/network.py in losses(self)\n    635       else:\n    636         relevant_inputs.append(inputs)\n--&gt; 637     reachable = tf_utils.get_reachable_from_inputs(relevant_inputs, losses)\n    638     relevant_conditional_losses = [x for x in losses if x in reachable]\n    639     unconditional_losses = [\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/utils/tf_utils.py in get_reachable_from_inputs(inputs, targets)\n    115       outputs = [x.op]\n    116     else:\n--&gt; 117       raise TypeError('Expected Operation, Variable, or Tensor, got ' + str(x))\n    118\n    119     for y in outputs:\n\nTypeError: Expected Operation, Variable, or Tensor, got SparseTensor(indices=Tensor(\"input_1/indices:0\", shape=(?, 2), dtype=int64), values=Tensor(\"input_1/values:0\", shape=(?,), dtype=float32), dense_shape=Tensor(\"input_1/shape:0\", shape=(2,), dtype=int64))\n</code></pre>\n<p>It seems to me that tensorflow/python/keras/utils/tf_utils.py:get_reachable_from_inputs doesn't recognize SparseTensor as a correct input type. Is there anyway to setup a Keras model with sparse input?</p>", "body_text": "I'm trying to setup a Keras model with sparse input:\ninput_layer = tf.keras.layers.Input(shape=(10, ), sparse=True)\nweights = tf.get_variable(name='weights', shape=(10, 1))\n\nweights_mult = lambda x: tf.sparse_tensor_dense_matmul(x, weights)\noutput_layer=  tf.keras.layers.Lambda(weights_mult)(input_layer)\nmodel = tf.keras.Model([input_layer], output_layer)\nmodel.compile(loss='binary_crossentropy',\n                  optimizer=tf.keras.optimizers.Adam(lr=0.0001),\n                  metrics=['accuracy'])\n\n\nThis fails with\nTypeError                                 Traceback (most recent call last)\n<ipython-input-3-822e68cb2d64> in <module>()\n      7 model.compile(loss='binary_crossentropy',\n      8                   optimizer=tf.keras.optimizers.Adam(lr=0.0001),\n----> 9                   metrics=['accuracy'])\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py in compile(self, optimizer, loss, metrics, loss_weights, sample_weight_mode, weighted_metrics, target_tensors, **kwargs)\n    457       # Add regularization penalties\n    458       # and other layer-specific losses.\n--> 459       for loss_tensor in self.losses:\n    460         total_loss += loss_tensor\n    461\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/network.py in losses(self)\n    635       else:\n    636         relevant_inputs.append(inputs)\n--> 637     reachable = tf_utils.get_reachable_from_inputs(relevant_inputs, losses)\n    638     relevant_conditional_losses = [x for x in losses if x in reachable]\n    639     unconditional_losses = [\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/utils/tf_utils.py in get_reachable_from_inputs(inputs, targets)\n    115       outputs = [x.op]\n    116     else:\n--> 117       raise TypeError('Expected Operation, Variable, or Tensor, got ' + str(x))\n    118\n    119     for y in outputs:\n\nTypeError: Expected Operation, Variable, or Tensor, got SparseTensor(indices=Tensor(\"input_1/indices:0\", shape=(?, 2), dtype=int64), values=Tensor(\"input_1/values:0\", shape=(?,), dtype=float32), dense_shape=Tensor(\"input_1/shape:0\", shape=(2,), dtype=int64))\n\nIt seems to me that tensorflow/python/keras/utils/tf_utils.py:get_reachable_from_inputs doesn't recognize SparseTensor as a correct input type. Is there anyway to setup a Keras model with sparse input?", "body": "I'm trying to setup a Keras model with sparse input:\r\n\r\n```\r\ninput_layer = tf.keras.layers.Input(shape=(10, ), sparse=True)\r\nweights = tf.get_variable(name='weights', shape=(10, 1))\r\n\r\nweights_mult = lambda x: tf.sparse_tensor_dense_matmul(x, weights)\r\noutput_layer=  tf.keras.layers.Lambda(weights_mult)(input_layer)\r\nmodel = tf.keras.Model([input_layer], output_layer)\r\nmodel.compile(loss='binary_crossentropy',\r\n                  optimizer=tf.keras.optimizers.Adam(lr=0.0001),\r\n                  metrics=['accuracy'])\r\n\r\n```\r\nThis fails with \r\n```\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-3-822e68cb2d64> in <module>()\r\n      7 model.compile(loss='binary_crossentropy',\r\n      8                   optimizer=tf.keras.optimizers.Adam(lr=0.0001),\r\n----> 9                   metrics=['accuracy'])\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py in compile(self, optimizer, loss, metrics, loss_weights, sample_weight_mode, weighted_metrics, target_tensors, **kwargs)\r\n    457       # Add regularization penalties\r\n    458       # and other layer-specific losses.\r\n--> 459       for loss_tensor in self.losses:\r\n    460         total_loss += loss_tensor\r\n    461\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/network.py in losses(self)\r\n    635       else:\r\n    636         relevant_inputs.append(inputs)\r\n--> 637     reachable = tf_utils.get_reachable_from_inputs(relevant_inputs, losses)\r\n    638     relevant_conditional_losses = [x for x in losses if x in reachable]\r\n    639     unconditional_losses = [\r\n\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/utils/tf_utils.py in get_reachable_from_inputs(inputs, targets)\r\n    115       outputs = [x.op]\r\n    116     else:\r\n--> 117       raise TypeError('Expected Operation, Variable, or Tensor, got ' + str(x))\r\n    118\r\n    119     for y in outputs:\r\n\r\nTypeError: Expected Operation, Variable, or Tensor, got SparseTensor(indices=Tensor(\"input_1/indices:0\", shape=(?, 2), dtype=int64), values=Tensor(\"input_1/values:0\", shape=(?,), dtype=float32), dense_shape=Tensor(\"input_1/shape:0\", shape=(2,), dtype=int64))\r\n```\r\n\r\nIt seems to me that tensorflow/python/keras/utils/tf_utils.py:get_reachable_from_inputs doesn't recognize SparseTensor as a correct input type. Is there anyway to setup a Keras model with sparse input?"}