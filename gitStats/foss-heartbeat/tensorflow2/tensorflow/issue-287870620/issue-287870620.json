{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16045", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16045/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16045/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16045/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16045", "id": 287870620, "node_id": "MDU6SXNzdWUyODc4NzA2MjA=", "number": 16045, "title": "XLA: Won't converge and doesn't respect visible devices.", "user": {"login": "joeyearsley", "id": 1836025, "node_id": "MDQ6VXNlcjE4MzYwMjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1836025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joeyearsley", "html_url": "https://github.com/joeyearsley", "followers_url": "https://api.github.com/users/joeyearsley/followers", "following_url": "https://api.github.com/users/joeyearsley/following{/other_user}", "gists_url": "https://api.github.com/users/joeyearsley/gists{/gist_id}", "starred_url": "https://api.github.com/users/joeyearsley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joeyearsley/subscriptions", "organizations_url": "https://api.github.com/users/joeyearsley/orgs", "repos_url": "https://api.github.com/users/joeyearsley/repos", "events_url": "https://api.github.com/users/joeyearsley/events{/privacy}", "received_events_url": "https://api.github.com/users/joeyearsley/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "jlebar", "id": 150663, "node_id": "MDQ6VXNlcjE1MDY2Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/150663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlebar", "html_url": "https://github.com/jlebar", "followers_url": "https://api.github.com/users/jlebar/followers", "following_url": "https://api.github.com/users/jlebar/following{/other_user}", "gists_url": "https://api.github.com/users/jlebar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlebar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlebar/subscriptions", "organizations_url": "https://api.github.com/users/jlebar/orgs", "repos_url": "https://api.github.com/users/jlebar/repos", "events_url": "https://api.github.com/users/jlebar/events{/privacy}", "received_events_url": "https://api.github.com/users/jlebar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jlebar", "id": 150663, "node_id": "MDQ6VXNlcjE1MDY2Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/150663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlebar", "html_url": "https://github.com/jlebar", "followers_url": "https://api.github.com/users/jlebar/followers", "following_url": "https://api.github.com/users/jlebar/following{/other_user}", "gists_url": "https://api.github.com/users/jlebar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlebar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlebar/subscriptions", "organizations_url": "https://api.github.com/users/jlebar/orgs", "repos_url": "https://api.github.com/users/jlebar/repos", "events_url": "https://api.github.com/users/jlebar/events{/privacy}", "received_events_url": "https://api.github.com/users/jlebar/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 37, "created_at": "2018-01-11T17:55:32Z", "updated_at": "2018-09-06T19:05:14Z", "closed_at": "2018-05-02T22:45:32Z", "author_association": "CONTRIBUTOR", "body_html": "<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes (writing a copy I can share)</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Nvidia Optimized Container 17.12</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.4.1</li>\n<li><strong>Python version</strong>: IntelPython 3.5</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.5.4</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: gcc (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609</li>\n<li><strong>CUDA/cuDNN version</strong>: 9.0.176 with CUBLAS Basic Accelerated Linear Algebra 9.0.234 / 7</li>\n<li><strong>GPU model and memory</strong>: Pascal Titan 12Gb</li>\n<li><strong>Exact command to reproduce</strong>: Coming</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I've seen 2 problems with XLA:</p>\n<ol>\n<li>XLA doesn't respect visible devices (neither CUDA Visible devices or tf config options)</li>\n<li>XLA doesn't converge</li>\n</ol>\n<p><em>1</em><br>\nXLA doesn't respect visible devices, I have seen this in both Horovod and when running on a single GPU (on a Multi-GPU desktop), <code>N</code> XLA instances are created despite only one GPU being used.</p>\n<p><em>2</em><br>\nWhen I run my script with and without XLA, the XLA compiled version plateaus and doesn't converge, whilst the none-XLA version converges. Where XLA has a loss of a magnitude higher.<br>\nThe benchmark is a VGG network (with BatchNorm) and achieves a 3x speed up with XLA, it just doesn't converge.</p>\n<p>Is this a known issue? Or is it just a possibility of occurring?</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes (writing a copy I can share)\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Nvidia Optimized Container 17.12\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): 1.4.1\nPython version: IntelPython 3.5\nBazel version (if compiling from source): 0.5.4\nGCC/Compiler version (if compiling from source): gcc (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609\nCUDA/cuDNN version: 9.0.176 with CUBLAS Basic Accelerated Linear Algebra 9.0.234 / 7\nGPU model and memory: Pascal Titan 12Gb\nExact command to reproduce: Coming\n\nDescribe the problem\nI've seen 2 problems with XLA:\n\nXLA doesn't respect visible devices (neither CUDA Visible devices or tf config options)\nXLA doesn't converge\n\n1\nXLA doesn't respect visible devices, I have seen this in both Horovod and when running on a single GPU (on a Multi-GPU desktop), N XLA instances are created despite only one GPU being used.\n2\nWhen I run my script with and without XLA, the XLA compiled version plateaus and doesn't converge, whilst the none-XLA version converges. Where XLA has a loss of a magnitude higher.\nThe benchmark is a VGG network (with BatchNorm) and achieves a 3x speed up with XLA, it just doesn't converge.\nIs this a known issue? Or is it just a possibility of occurring?", "body": "------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes (writing a copy I can share)\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Nvidia Optimized Container 17.12\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.4.1\r\n- **Python version**: IntelPython 3.5\r\n- **Bazel version (if compiling from source)**: 0.5.4\r\n- **GCC/Compiler version (if compiling from source)**: gcc (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609\r\n- **CUDA/cuDNN version**: 9.0.176 with CUBLAS Basic Accelerated Linear Algebra 9.0.234 / 7\r\n- **GPU model and memory**: Pascal Titan 12Gb\r\n- **Exact command to reproduce**: Coming\r\n\r\n### Describe the problem\r\nI've seen 2 problems with XLA:\r\n1) XLA doesn't respect visible devices (neither CUDA Visible devices or tf config options)\r\n2) XLA doesn't converge\r\n\r\n_1_\r\nXLA doesn't respect visible devices, I have seen this in both Horovod and when running on a single GPU (on a Multi-GPU desktop), `N` XLA instances are created despite only one GPU being used.\r\n\r\n_2_ \r\nWhen I run my script with and without XLA, the XLA compiled version plateaus and doesn't converge, whilst the none-XLA version converges. Where XLA has a loss of a magnitude higher.\r\nThe benchmark is a VGG network (with BatchNorm) and achieves a 3x speed up with XLA, it just doesn't converge.\r\n\r\nIs this a known issue? Or is it just a possibility of occurring?\r\n\r\n"}