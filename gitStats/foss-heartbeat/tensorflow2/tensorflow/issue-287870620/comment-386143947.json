{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/386143947", "html_url": "https://github.com/tensorflow/tensorflow/issues/16045#issuecomment-386143947", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16045", "id": 386143947, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjE0Mzk0Nw==", "user": {"login": "jlebar", "id": 150663, "node_id": "MDQ6VXNlcjE1MDY2Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/150663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlebar", "html_url": "https://github.com/jlebar", "followers_url": "https://api.github.com/users/jlebar/followers", "following_url": "https://api.github.com/users/jlebar/following{/other_user}", "gists_url": "https://api.github.com/users/jlebar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlebar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlebar/subscriptions", "organizations_url": "https://api.github.com/users/jlebar/orgs", "repos_url": "https://api.github.com/users/jlebar/repos", "events_url": "https://api.github.com/users/jlebar/events{/privacy}", "received_events_url": "https://api.github.com/users/jlebar/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-02T22:42:24Z", "updated_at": "2018-05-02T22:44:33Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6165535\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/TylerBalsam\">@TylerBalsam</a> , this error seems quite different from the other etiologies discussed in this bug.</p>\n<p>\"Couldn't allocate space\" error is coming from cudnn_algorithm_picker.  It's trying to choose the fastest cudnn algorithm to use for the given convolution.  Which is not so surprising -- the input to the conv has size <code>20*2078*3238*64 * 4 bytes = 34gb</code>, which is not going to fit on a V100.</p>\n<p>This probably is a failure to pattern-match a backwards-input or backwards-filter conv to the correct cudnn call.  If you can give us steps to reproduce this (probably in a separate bug?), we can probably fix that.</p>\n<p>I'm not sure what the segfault is about.  We shouldn't segfault on GPU OOM, but it's entirely possible the CPU is OOM'ing somewhere or something.  Not really enough info here to say.</p>", "body_text": "@TylerBalsam , this error seems quite different from the other etiologies discussed in this bug.\n\"Couldn't allocate space\" error is coming from cudnn_algorithm_picker.  It's trying to choose the fastest cudnn algorithm to use for the given convolution.  Which is not so surprising -- the input to the conv has size 20*2078*3238*64 * 4 bytes = 34gb, which is not going to fit on a V100.\nThis probably is a failure to pattern-match a backwards-input or backwards-filter conv to the correct cudnn call.  If you can give us steps to reproduce this (probably in a separate bug?), we can probably fix that.\nI'm not sure what the segfault is about.  We shouldn't segfault on GPU OOM, but it's entirely possible the CPU is OOM'ing somewhere or something.  Not really enough info here to say.", "body": "@TylerBalsam , this error seems quite different from the other etiologies discussed in this bug.\r\n\r\n\"Couldn't allocate space\" error is coming from cudnn_algorithm_picker.  It's trying to choose the fastest cudnn algorithm to use for the given convolution.  Which is not so surprising -- the input to the conv has size `20*2078*3238*64 * 4 bytes = 34gb`, which is not going to fit on a V100.\r\n\r\nThis probably is a failure to pattern-match a backwards-input or backwards-filter conv to the correct cudnn call.  If you can give us steps to reproduce this (probably in a separate bug?), we can probably fix that.\r\n\r\nI'm not sure what the segfault is about.  We shouldn't segfault on GPU OOM, but it's entirely possible the CPU is OOM'ing somewhere or something.  Not really enough info here to say."}