{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/333756233", "html_url": "https://github.com/tensorflow/tensorflow/pull/12023#issuecomment-333756233", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12023", "id": 333756233, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzc1NjIzMw==", "user": {"login": "tatatodd", "id": 5453737, "node_id": "MDQ6VXNlcjU0NTM3Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5453737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatatodd", "html_url": "https://github.com/tatatodd", "followers_url": "https://api.github.com/users/tatatodd/followers", "following_url": "https://api.github.com/users/tatatodd/following{/other_user}", "gists_url": "https://api.github.com/users/tatatodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatatodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatatodd/subscriptions", "organizations_url": "https://api.github.com/users/tatatodd/orgs", "repos_url": "https://api.github.com/users/tatatodd/repos", "events_url": "https://api.github.com/users/tatatodd/events{/privacy}", "received_events_url": "https://api.github.com/users/tatatodd/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-03T06:54:25Z", "updated_at": "2017-10-03T06:54:25Z", "author_association": "MEMBER", "body_html": "<p>Sorry for the delay.  I fear the approach in this PR will be an overall maintenance burden.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1450614\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/suharshs\">@suharshs</a> and I have discussed making SavedModel more of a first-class citizen in general, for all of our tools.  He plans to add a C++ library call to perform freeze_graph functionality.  Once that support is in, I'll update tfcompile to take SavedModel as input, and hook up a call to his C++ library to the rest of the compilation pipeline.  The advantage of this approach is that we won't need a pre-processing python script, and we won't need a separate tf_saved_model_library skylark rule.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6596957\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/elibixby\">@elibixby</a> what do you think?</p>", "body_text": "Sorry for the delay.  I fear the approach in this PR will be an overall maintenance burden.\n@suharshs and I have discussed making SavedModel more of a first-class citizen in general, for all of our tools.  He plans to add a C++ library call to perform freeze_graph functionality.  Once that support is in, I'll update tfcompile to take SavedModel as input, and hook up a call to his C++ library to the rest of the compilation pipeline.  The advantage of this approach is that we won't need a pre-processing python script, and we won't need a separate tf_saved_model_library skylark rule.\n@elibixby what do you think?", "body": "Sorry for the delay.  I fear the approach in this PR will be an overall maintenance burden.\r\n\r\n@suharshs and I have discussed making SavedModel more of a first-class citizen in general, for all of our tools.  He plans to add a C++ library call to perform freeze_graph functionality.  Once that support is in, I'll update tfcompile to take SavedModel as input, and hook up a call to his C++ library to the rest of the compilation pipeline.  The advantage of this approach is that we won't need a pre-processing python script, and we won't need a separate tf_saved_model_library skylark rule.\r\n\r\n@elibixby what do you think?  "}