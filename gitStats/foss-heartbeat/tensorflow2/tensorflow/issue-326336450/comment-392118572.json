{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/392118572", "html_url": "https://github.com/tensorflow/tensorflow/issues/19547#issuecomment-392118572", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19547", "id": 392118572, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjExODU3Mg==", "user": {"login": "stoneyan", "id": 10360693, "node_id": "MDQ6VXNlcjEwMzYwNjkz", "avatar_url": "https://avatars0.githubusercontent.com/u/10360693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stoneyan", "html_url": "https://github.com/stoneyan", "followers_url": "https://api.github.com/users/stoneyan/followers", "following_url": "https://api.github.com/users/stoneyan/following{/other_user}", "gists_url": "https://api.github.com/users/stoneyan/gists{/gist_id}", "starred_url": "https://api.github.com/users/stoneyan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stoneyan/subscriptions", "organizations_url": "https://api.github.com/users/stoneyan/orgs", "repos_url": "https://api.github.com/users/stoneyan/repos", "events_url": "https://api.github.com/users/stoneyan/events{/privacy}", "received_events_url": "https://api.github.com/users/stoneyan/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-25T16:55:56Z", "updated_at": "2018-05-25T16:55:56Z", "author_association": "NONE", "body_html": "<p>Here's the code change I made in tensorflow_serving/servables/tensorflow/predict_impl.cc (three lines added):</p>\n<p>`<br>\n+std::mutex g_lock;<br>\n// Implementation of Predict using the SavedModel SignatureDef format.<br>\nStatus SavedModelPredict(const RunOptions&amp; run_options, ServerCore* core,<br>\nconst PredictRequest&amp; request,<br>\nPredictResponse* response) {<br>\n// Validate signatures.<br>\nServableHandle bundle;<br>\nTF_RETURN_IF_ERROR(core-&gt;GetServableHandle(request.model_spec(), &amp;bundle));</p>\n<p>......</p>\n<p>if (privateLogLevel &gt;= 1) {<br>\nclock_gettime(CLOCK_MONOTONIC, &amp;start);<br>\n}<br>\n+g_lock.lock();<br>\nTF_RETURN_IF_ERROR(bundle-&gt;session-&gt;Run(run_options, input_tensors,<br>\noutput_tensor_names, {}, &amp;outputs,<br>\n&amp;run_metadata));<br>\n+g_lock.unlock();</p>\n<p>if (privateLogLevel &gt;= 1) {<br>\nif (sessionRunCounter &gt;= OFFSET) {<br>\nclock_gettime(CLOCK_MONOTONIC, &amp;end);<br>\nelapsed_millisecs = (TimeSpecToSeconds(&amp;end) - TimeSpecToSeconds(&amp;start))*1000;<br>\nint currentIndex= (sessionRunCounter - OFFSET)%MAX_BUFFER_SIZE;<br>\nelapsedTimeBuffer[currentIndex]= elapsed_millisecs;<br>\nif (currentIndex == (MAX_BUFFER_SIZE-1))<br>\n{<br>\nif (privateLogLevel &gt;= 2) {<br>\nstd::cout &lt;&lt; \"Elements: \";<br>\nfor (auto i = elapsedTimeBuffer.begin(); i != elapsedTimeBuffer.end(); ++i)<br>\n`</p>", "body_text": "Here's the code change I made in tensorflow_serving/servables/tensorflow/predict_impl.cc (three lines added):\n`\n+std::mutex g_lock;\n// Implementation of Predict using the SavedModel SignatureDef format.\nStatus SavedModelPredict(const RunOptions& run_options, ServerCore* core,\nconst PredictRequest& request,\nPredictResponse* response) {\n// Validate signatures.\nServableHandle bundle;\nTF_RETURN_IF_ERROR(core->GetServableHandle(request.model_spec(), &bundle));\n......\nif (privateLogLevel >= 1) {\nclock_gettime(CLOCK_MONOTONIC, &start);\n}\n+g_lock.lock();\nTF_RETURN_IF_ERROR(bundle->session->Run(run_options, input_tensors,\noutput_tensor_names, {}, &outputs,\n&run_metadata));\n+g_lock.unlock();\nif (privateLogLevel >= 1) {\nif (sessionRunCounter >= OFFSET) {\nclock_gettime(CLOCK_MONOTONIC, &end);\nelapsed_millisecs = (TimeSpecToSeconds(&end) - TimeSpecToSeconds(&start))*1000;\nint currentIndex= (sessionRunCounter - OFFSET)%MAX_BUFFER_SIZE;\nelapsedTimeBuffer[currentIndex]= elapsed_millisecs;\nif (currentIndex == (MAX_BUFFER_SIZE-1))\n{\nif (privateLogLevel >= 2) {\nstd::cout << \"Elements: \";\nfor (auto i = elapsedTimeBuffer.begin(); i != elapsedTimeBuffer.end(); ++i)\n`", "body": "Here's the code change I made in tensorflow_serving/servables/tensorflow/predict_impl.cc (three lines added):\r\n\r\n`\r\n+std::mutex g_lock;\r\n// Implementation of Predict using the SavedModel SignatureDef format.\r\nStatus SavedModelPredict(const RunOptions& run_options, ServerCore* core,\r\n                         const PredictRequest& request,\r\n                         PredictResponse* response) {\r\n  // Validate signatures.\r\n  ServableHandle<SavedModelBundle> bundle;\r\n  TF_RETURN_IF_ERROR(core->GetServableHandle(request.model_spec(), &bundle));\r\n\r\n  ......\r\n\r\n  if (privateLogLevel >= 1) {\r\n     clock_gettime(CLOCK_MONOTONIC, &start);\r\n  }\r\n+g_lock.lock();\r\n  TF_RETURN_IF_ERROR(bundle->session->Run(run_options, input_tensors,\r\n                                          output_tensor_names, {}, &outputs,\r\n                                          &run_metadata));\r\n+g_lock.unlock();\r\n\r\n  if (privateLogLevel >= 1) {\r\n      if (sessionRunCounter >= OFFSET) {\r\n              clock_gettime(CLOCK_MONOTONIC, &end);\r\n              elapsed_millisecs = (TimeSpecToSeconds(&end) - TimeSpecToSeconds(&start))*1000;\r\n              int currentIndex= (sessionRunCounter - OFFSET)%MAX_BUFFER_SIZE;\r\n              elapsedTimeBuffer[currentIndex]= elapsed_millisecs;\r\n              if (currentIndex == (MAX_BUFFER_SIZE-1))\r\n              {\r\n                  if (privateLogLevel >= 2) {\r\n                        std::cout << \"Elements: \";\r\n                        for (auto i = elapsedTimeBuffer.begin(); i != elapsedTimeBuffer.end(); ++i)\r\n`"}