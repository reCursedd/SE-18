{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9685", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9685/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9685/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9685/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9685", "id": 226567613, "node_id": "MDU6SXNzdWUyMjY1Njc2MTM=", "number": 9685, "title": "[Java][Suggestion] Add Enum with all Operations", "user": {"login": "mcenderdragon", "id": 6342933, "node_id": "MDQ6VXNlcjYzNDI5MzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6342933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcenderdragon", "html_url": "https://github.com/mcenderdragon", "followers_url": "https://api.github.com/users/mcenderdragon/followers", "following_url": "https://api.github.com/users/mcenderdragon/following{/other_user}", "gists_url": "https://api.github.com/users/mcenderdragon/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcenderdragon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcenderdragon/subscriptions", "organizations_url": "https://api.github.com/users/mcenderdragon/orgs", "repos_url": "https://api.github.com/users/mcenderdragon/repos", "events_url": "https://api.github.com/users/mcenderdragon/events{/privacy}", "received_events_url": "https://api.github.com/users/mcenderdragon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2017-05-05T13:08:13Z", "updated_at": "2017-05-08T18:44:45Z", "closed_at": "2017-05-08T15:52:40Z", "author_association": "NONE", "body_html": "<p>Currently it is hard for beginners to start with the Java API of TF. Mostly because the function names staed in the python tutorial do not apply to the Operation names used in Java. It would be nice if we had an Enum Containing all standart possible Operations.</p>\n<p><code>grapth.opBuilder(type, name)</code></p>\n<p>I am currently struggling to find out what the correct name of \"Multiply\" is.<br>\nI have digged my way thorgh the code and most of the operations are registered trought <code>REGISTER_OP</code> and I could trace down the java methods to <code> TF_OperationDescription(TF_Graph* g, const char* op_type, const char* node_name)</code> in c_api_internal.h. But I absolutly dont know were the operations are storred.</p>\n<p>Also nice would be a table \"python function name\" to \"internal operation name\"</p>", "body_text": "Currently it is hard for beginners to start with the Java API of TF. Mostly because the function names staed in the python tutorial do not apply to the Operation names used in Java. It would be nice if we had an Enum Containing all standart possible Operations.\ngrapth.opBuilder(type, name)\nI am currently struggling to find out what the correct name of \"Multiply\" is.\nI have digged my way thorgh the code and most of the operations are registered trought REGISTER_OP and I could trace down the java methods to  TF_OperationDescription(TF_Graph* g, const char* op_type, const char* node_name) in c_api_internal.h. But I absolutly dont know were the operations are storred.\nAlso nice would be a table \"python function name\" to \"internal operation name\"", "body": "Currently it is hard for beginners to start with the Java API of TF. Mostly because the function names staed in the python tutorial do not apply to the Operation names used in Java. It would be nice if we had an Enum Containing all standart possible Operations.\r\n\r\n`grapth.opBuilder(type, name)`\r\n\r\nI am currently struggling to find out what the correct name of \"Multiply\" is.\r\nI have digged my way thorgh the code and most of the operations are registered trought `REGISTER_OP` and I could trace down the java methods to ` TF_OperationDescription(TF_Graph* g, const char* op_type, const char* node_name)` in c_api_internal.h. But I absolutly dont know were the operations are storred. \r\n\r\nAlso nice would be a table \"python function name\" to \"internal operation name\""}