{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/187174095", "pull_request_review_id": 118902153, "id": 187174095, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzE3NDA5NQ==", "diff_hunk": "@@ -103,6 +103,51 @@ def _SparseTensorDenseAddGrad(op, out_grad):\n   return (None, array_ops.gather_nd(out_grad, sp_indices), None, out_grad)\n \n \n+def _SparseReduceMinOrMaxGrad(op, out_grad):\n+  sp_indices = op.inputs[0]\n+  sp_values = op.inputs[1]\n+  sp_shape = op.inputs[2]\n+  reduction_axes = op.inputs[3]\n+  output = op.outputs[0]\n+    \n+  # Handle keepdims\n+  output_shape_kept_dims = math_ops.reduced_shape(sp_shape, op.inputs[3])\n+  out_grad = array_ops.reshape(out_grad, output_shape_kept_dims)\n+  output = array_ops.reshape(output, output_shape_kept_dims)\n+    \n+  # Map input and output coefficients\n+  scale = sp_shape // math_ops.to_int64(output_shape_kept_dims)\n+  scaled_indices = sp_indices // scale\n+    \n+  # Map pooled values with corresponding max/min values\n+  sp_max_val = array_ops.gather_nd(output, scaled_indices)\n+  indicators = math_ops.cast(math_ops.equal(sp_values, sp_max_val), out_grad.dtype)\n+  grad_values = array_ops.gather_nd(out_grad, scaled_indices)\n+    \n+  # Compute the number of selected (maximum or minimum) elements in each\n+  # reduction dimension. If there are multiple minimum or maximum elements\n+  # then the gradient will be divided between them. \n+  # (same as for MaxGrad)\n+  sp_indicators = sparse_tensor.SparseTensor(sp_indices, indicators, sp_shape)\n+  num_selected = array_ops.gather_nd(\n+      sparse_ops.sparse_reduce_sum(sp_indicators, axis=reduction_axes, keep_dims=True),\n+      scaled_indices\n+  )\n+    \n+  # (input_indices, input_values, input_shape, reduction_axes)\n+  return [None, math_ops.div(indicators, math_ops.maximum(num_selected, 1)) * grad_values, None, None]", "path": "tensorflow/python/ops/sparse_grad.py", "position": null, "original_position": 36, "commit_id": "41e96f163e953777d99ef76b8d76970f43b01dbf", "original_commit_id": "9d2c4304144020d5de6760f6dd581a7713d72f32", "user": {"login": "prafiny", "id": 1598855, "node_id": "MDQ6VXNlcjE1OTg4NTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1598855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prafiny", "html_url": "https://github.com/prafiny", "followers_url": "https://api.github.com/users/prafiny/followers", "following_url": "https://api.github.com/users/prafiny/following{/other_user}", "gists_url": "https://api.github.com/users/prafiny/gists{/gist_id}", "starred_url": "https://api.github.com/users/prafiny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prafiny/subscriptions", "organizations_url": "https://api.github.com/users/prafiny/orgs", "repos_url": "https://api.github.com/users/prafiny/repos", "events_url": "https://api.github.com/users/prafiny/events{/privacy}", "received_events_url": "https://api.github.com/users/prafiny/received_events", "type": "User", "site_admin": false}, "body": "Then this bug is also in MaxGrad since this code snippet is taken from there.", "created_at": "2018-05-09T20:57:24Z", "updated_at": "2018-05-27T11:04:22Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/19161#discussion_r187174095", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19161", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/187174095"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/19161#discussion_r187174095"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/19161"}}, "body_html": "<p>Then this bug is also in MaxGrad since this code snippet is taken from there.</p>", "body_text": "Then this bug is also in MaxGrad since this code snippet is taken from there.", "in_reply_to_id": 187110372}