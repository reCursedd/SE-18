{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/156214414", "pull_request_review_id": 82656058, "id": 156214414, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NjIxNDQxNA==", "diff_hunk": "@@ -2098,10 +2210,19 @@ bool CUDABlas::GetBlasGemmAlgorithms(\n // still return the out_algorithms. Caller needs to make sure that in this case,\n // the returned vector is empty.\n #if CUDA_VERSION >= 8000\n-  for (cublasGemmAlgo_t algo :\n-       {CUBLAS_GEMM_DFALT, CUBLAS_GEMM_ALGO0, CUBLAS_GEMM_ALGO1,\n-        CUBLAS_GEMM_ALGO2, CUBLAS_GEMM_ALGO3, CUBLAS_GEMM_ALGO4,\n-        CUBLAS_GEMM_ALGO5, CUBLAS_GEMM_ALGO6, CUBLAS_GEMM_ALGO7}) {\n+  for (cublasGemmAlgo_t algo : {\n+         CUBLAS_GEMM_DFALT, CUBLAS_GEMM_ALGO0, CUBLAS_GEMM_ALGO1,", "path": "tensorflow/stream_executor/cuda/cuda_blas.cc", "position": 212, "original_position": 196, "commit_id": "80d3e858255e1d829b927b5996b5cce091b390ec", "original_commit_id": "3b00c953872650f7e9532160f160d45bd4db58e9", "user": {"login": "nluehr", "id": 1873655, "node_id": "MDQ6VXNlcjE4NzM2NTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1873655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nluehr", "html_url": "https://github.com/nluehr", "followers_url": "https://api.github.com/users/nluehr/followers", "following_url": "https://api.github.com/users/nluehr/following{/other_user}", "gists_url": "https://api.github.com/users/nluehr/gists{/gist_id}", "starred_url": "https://api.github.com/users/nluehr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nluehr/subscriptions", "organizations_url": "https://api.github.com/users/nluehr/orgs", "repos_url": "https://api.github.com/users/nluehr/repos", "events_url": "https://api.github.com/users/nluehr/events{/privacy}", "received_events_url": "https://api.github.com/users/nluehr/received_events", "type": "User", "site_admin": false}, "body": "I'm not sure what is being suggested here. The current function seems pretty clean to me. Do you envision separate functions for CUBLAS 8 vs. 9 algos, or separate function for tensor op vs. non tensor op algos. Either of these would make the API higher up the stack more complicated.", "created_at": "2017-12-11T22:09:13Z", "updated_at": "2017-12-13T19:25:08Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/13451#discussion_r156214414", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13451", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/156214414"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/13451#discussion_r156214414"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13451"}}, "body_html": "<p>I'm not sure what is being suggested here. The current function seems pretty clean to me. Do you envision separate functions for CUBLAS 8 vs. 9 algos, or separate function for tensor op vs. non tensor op algos. Either of these would make the API higher up the stack more complicated.</p>", "body_text": "I'm not sure what is being suggested here. The current function seems pretty clean to me. Do you envision separate functions for CUBLAS 8 vs. 9 algos, or separate function for tensor op vs. non tensor op algos. Either of these would make the API higher up the stack more complicated.", "in_reply_to_id": 155104157}