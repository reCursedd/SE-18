{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/150130177", "pull_request_review_id": 75636786, "id": 150130177, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MDEzMDE3Nw==", "diff_hunk": "@@ -558,47 +641,53 @@ bool CUDABlas::DoBlasAsum(Stream *stream, uint64 elem_count,\n                           const DeviceMemory<float> &x, int incx,\n                           DeviceMemory<float> *result) {\n   return DoBlasInternal(wrap::cublasSasum, stream,\n-                        false /* = pointer_mode_host */, elem_count,\n-                        CUDAMemory(x), incx, CUDAMemoryMutable(result));\n+                        false /* = pointer_mode_host */,\n+                        false /* = use_tensor_ops */, elem_count, CUDAMemory(x),\n+                        incx, CUDAMemoryMutable(result));\n }\n \n bool CUDABlas::DoBlasAsum(Stream *stream, uint64 elem_count,\n                           const DeviceMemory<double> &x, int incx,\n                           DeviceMemory<double> *result) {\n   return DoBlasInternal(wrap::cublasDasum, stream,\n-                        false /* = pointer_mode_host */, elem_count,\n-                        CUDAMemory(x), incx, CUDAMemoryMutable(result));\n+                        false /* = pointer_mode_host */,\n+                        false /* = use_tensor_ops */, elem_count, CUDAMemory(x),\n+                        incx, CUDAMemoryMutable(result));\n }\n \n bool CUDABlas::DoBlasAsum(Stream *stream, uint64 elem_count,\n                           const DeviceMemory<std::complex<float>> &x, int incx,\n                           DeviceMemory<float> *result) {\n   return DoBlasInternal(\n-      wrap::cublasScasum, stream, false /* = pointer_mode_host */, elem_count,\n-      CUDAComplex(CUDAMemory(x)), incx, CUDAMemoryMutable(result));\n+      wrap::cublasScasum, stream, false /* = pointer_mode_host */,\n+      false /* = use_tensor_ops */, elem_count, CUDAComplex(CUDAMemory(x)),\n+      incx, CUDAMemoryMutable(result));\n }\n \n bool CUDABlas::DoBlasAsum(Stream *stream, uint64 elem_count,\n                           const DeviceMemory<std::complex<double>> &x, int incx,\n                           DeviceMemory<double> *result) {\n   return DoBlasInternal(\n-      wrap::cublasDzasum, stream, false /* = pointer_mode_host */, elem_count,\n-      CUDAComplex(CUDAMemory(x)), incx, CUDAMemoryMutable(result));\n+      wrap::cublasDzasum, stream, false /* = pointer_mode_host */,\n+      false /* = use_tensor_ops */, elem_count, CUDAComplex(CUDAMemory(x)),\n+      incx, CUDAMemoryMutable(result));\n }\n \n bool CUDABlas::DoBlasAxpy(Stream *stream, uint64 elem_count, float alpha,\n                           const DeviceMemory<float> &x, int incx,\n                           DeviceMemory<float> *y, int incy) {\n   return DoBlasInternal(wrap::cublasSaxpy, stream,\n-                        true /* = pointer_mode_host */, elem_count, &alpha,\n+                        true /* = pointer_mode_host */,\n+                        false /* = use_tensor_ops */, elem_count, &alpha,", "path": "tensorflow/stream_executor/cuda/cuda_blas.cc", "position": null, "original_position": 179, "commit_id": "80d3e858255e1d829b927b5996b5cce091b390ec", "original_commit_id": "9492b542df43ea49b160af15793be02e2f3fb376", "user": {"login": "zheng-xq", "id": 15736910, "node_id": "MDQ6VXNlcjE1NzM2OTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/15736910?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zheng-xq", "html_url": "https://github.com/zheng-xq", "followers_url": "https://api.github.com/users/zheng-xq/followers", "following_url": "https://api.github.com/users/zheng-xq/following{/other_user}", "gists_url": "https://api.github.com/users/zheng-xq/gists{/gist_id}", "starred_url": "https://api.github.com/users/zheng-xq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zheng-xq/subscriptions", "organizations_url": "https://api.github.com/users/zheng-xq/orgs", "repos_url": "https://api.github.com/users/zheng-xq/repos", "events_url": "https://api.github.com/users/zheng-xq/events{/privacy}", "received_events_url": "https://api.github.com/users/zheng-xq/received_events", "type": "User", "site_admin": false}, "body": "For most of the changes here, are they affected by the use_tensor_ops setting? \r\n\r\nIf not, I'd rather leave the majority alone, and not setting this bit at all. We can have a different DoBlasInternalWithTensorOp(....) do set the use_tensor_op", "created_at": "2017-11-10T00:51:53Z", "updated_at": "2017-12-13T19:25:08Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/13451#discussion_r150130177", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13451", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/150130177"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/13451#discussion_r150130177"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13451"}}, "body_html": "<p>For most of the changes here, are they affected by the use_tensor_ops setting?</p>\n<p>If not, I'd rather leave the majority alone, and not setting this bit at all. We can have a different DoBlasInternalWithTensorOp(....) do set the use_tensor_op</p>", "body_text": "For most of the changes here, are they affected by the use_tensor_ops setting?\nIf not, I'd rather leave the majority alone, and not setting this bit at all. We can have a different DoBlasInternalWithTensorOp(....) do set the use_tensor_op"}