{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/152438085", "pull_request_review_id": 78301044, "id": 152438085, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MjQzODA4NQ==", "diff_hunk": "@@ -1762,14 +1846,26 @@ bool CUDABlas::DoBlasGemm(\n                       \"precondition violation\";\n     }\n   }\n-  // TODO(sesse): Consider supporting the Hgemm interface, which uses half\n-  // calculations internally (faster on newer devices, such as Pascal and TX1,\n-  // but less precise).\n-  return DoBlasInternal(\n+\n+  bool use_tensor_ops = false;\n+#if CUDA_VERSION >= 9000\n+  int cc_major, cc_minor;\n+  stream->parent()->GetDeviceDescription().cuda_compute_capability(&cc_major,\n+                                                                   &cc_minor);\n+\n+  // GPUs < sm_70 don't support tensor cores\n+  if (cc_major >= 7 && TensorOpMathEnabled()) {\n+    use_tensor_ops = true;\n+  }\n+#endif\n+\n+  return DoBlasInternalWithTensorOps(\n       wrap::cublasSgemmEx, stream, true /* = pointer_mode_host */,\n-      CUDABlasTranspose(transa), CUDABlasTranspose(transb), m, n, k, &alpha,\n-      CUDAMemory(a), SE_CUDA_DATA_HALF, lda, CUDAMemory(b), SE_CUDA_DATA_HALF,\n-      ldb, &beta, CUDAMemoryMutable(c), SE_CUDA_DATA_HALF, ldc);\n+      use_tensor_ops, CUDABlasTranspose(transa), CUDABlasTranspose(transb), m,", "path": "tensorflow/stream_executor/cuda/cuda_blas.cc", "position": null, "original_position": 156, "commit_id": "80d3e858255e1d829b927b5996b5cce091b390ec", "original_commit_id": "b6210e7128f63bdf0502247026a630c3cc2b9fe7", "user": {"login": "nluehr", "id": 1873655, "node_id": "MDQ6VXNlcjE4NzM2NTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1873655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nluehr", "html_url": "https://github.com/nluehr", "followers_url": "https://api.github.com/users/nluehr/followers", "following_url": "https://api.github.com/users/nluehr/following{/other_user}", "gists_url": "https://api.github.com/users/nluehr/gists{/gist_id}", "starred_url": "https://api.github.com/users/nluehr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nluehr/subscriptions", "organizations_url": "https://api.github.com/users/nluehr/orgs", "repos_url": "https://api.github.com/users/nluehr/repos", "events_url": "https://api.github.com/users/nluehr/events{/privacy}", "received_events_url": "https://api.github.com/users/nluehr/received_events", "type": "User", "site_admin": false}, "body": "It is convenient to pass this as a flag, otherwise I'll have to do an if-else on the flag in order to make different function calls. Alternatively, I could remove DoBlasInternalWithTensorOps entirely and use direct calls to DoBlasInternalImpl. Would that be preferable?", "created_at": "2017-11-22T00:12:33Z", "updated_at": "2017-12-13T19:25:08Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/13451#discussion_r152438085", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13451", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/152438085"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/13451#discussion_r152438085"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13451"}}, "body_html": "<p>It is convenient to pass this as a flag, otherwise I'll have to do an if-else on the flag in order to make different function calls. Alternatively, I could remove DoBlasInternalWithTensorOps entirely and use direct calls to DoBlasInternalImpl. Would that be preferable?</p>", "body_text": "It is convenient to pass this as a flag, otherwise I'll have to do an if-else on the flag in order to make different function calls. Alternatively, I could remove DoBlasInternalWithTensorOps entirely and use direct calls to DoBlasInternalImpl. Would that be preferable?", "in_reply_to_id": 152418885}