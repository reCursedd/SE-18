{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9857", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9857/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9857/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9857/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9857", "id": 228259885, "node_id": "MDU6SXNzdWUyMjgyNTk4ODU=", "number": 9857, "title": "Is there a way to use tensorflow to load a few consecutive frames from a queue of many video frame folders?", "user": {"login": "stephenjia", "id": 9429707, "node_id": "MDQ6VXNlcjk0Mjk3MDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/9429707?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stephenjia", "html_url": "https://github.com/stephenjia", "followers_url": "https://api.github.com/users/stephenjia/followers", "following_url": "https://api.github.com/users/stephenjia/following{/other_user}", "gists_url": "https://api.github.com/users/stephenjia/gists{/gist_id}", "starred_url": "https://api.github.com/users/stephenjia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stephenjia/subscriptions", "organizations_url": "https://api.github.com/users/stephenjia/orgs", "repos_url": "https://api.github.com/users/stephenjia/repos", "events_url": "https://api.github.com/users/stephenjia/events{/privacy}", "received_events_url": "https://api.github.com/users/stephenjia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-12T11:06:38Z", "updated_at": "2017-10-11T15:21:11Z", "closed_at": "2017-05-12T15:56:19Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li>**OS Platform and Distribution **: Linux fedora fc25.x86_64</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: from pip</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.0.0-rc2-15-g47bba63-dirty</li>\n<li><strong>CUDA/cuDNN version</strong>: cuda 8.0/cudnn 5</li>\n<li><strong>GPU model and memory</strong>: TITAN X (Pascal)</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I have a file which lists video names. Frames of each video are saved in a separate folder. Now I want to use tensorflow to get a queue from list of video names and then load a subset of consecutive frames from a video folder every time. Is there a way to do that?<br>\nI tried the following way but it does not work.</p>\n<h3>Source code / logs</h3>\n<p>input_queue is got using tf.train.slice_input_producer.</p>\n<pre><code>def glob_frame_list(video_path):\n     frame_list = gfile.Glob(os.path.join(video_path[0]))\n     return frame_list\ndef read_video_sequence_from_disk(input_queue, seq_len, input_size):    \n    frame_list = tf.py_func(glob_frame_list, [input_queue], tf.string) # TensorShape(None)\n    frames = []\n    start_idx = tf.random_uniform([], minval=0, maxval=tf.shape(frame_list)[0]-seq_len, dtype=tf.int32) # TensorShape([])\n    # for i in tf.range(start_idx, start_idx+seq_len): # has a problem of 'tensor is not iterable'\n    def body(i):\n        img_contents = tf.read_file(frame_list[i]) \n        img = tf.image.decode_jpeg(img_contents, channels=3)        \n        frames.append(tf.expand_dims(img, axis=0))\n        return i+1    \n    i = start_idx\n    while_condition = lambda i: tf.less(i, start_idx+seq_len)\n    new_i = tf.while_loop(while_condition, body, [i])\n    frames = tf.concat(frames, axis=0)\n    return frames\n</code></pre>\n<p>When I run<br>\n<code>threads = tf.train.start_queue_runners(coord=coord, sess=sess) </code>there is the following error.<br>\n\"<br>\nInternalError (see above for traceback): Failed to run py callback pyfunc_0: see error log.<br>\n[[Node: create_inputs/PyFunc = PyFunc<a href=\"create_inputs/PyFunc/input_0\">Tin=[DT_STRING], Tout=[DT_STRING], token=\"pyfunc_0\", _device=\"/job:localhost/replica:0/task:0/cpu:0\"</a>]]<br>\n\"<br>\nCan anyone help me on this?<br>\nThanks a lot.</p>", "body_text": "System information\n\n**OS Platform and Distribution **: Linux fedora fc25.x86_64\nTensorFlow installed from (source or binary): from pip\nTensorFlow version (use command below): v1.0.0-rc2-15-g47bba63-dirty\nCUDA/cuDNN version: cuda 8.0/cudnn 5\nGPU model and memory: TITAN X (Pascal)\n\nDescribe the problem\nI have a file which lists video names. Frames of each video are saved in a separate folder. Now I want to use tensorflow to get a queue from list of video names and then load a subset of consecutive frames from a video folder every time. Is there a way to do that?\nI tried the following way but it does not work.\nSource code / logs\ninput_queue is got using tf.train.slice_input_producer.\ndef glob_frame_list(video_path):\n     frame_list = gfile.Glob(os.path.join(video_path[0]))\n     return frame_list\ndef read_video_sequence_from_disk(input_queue, seq_len, input_size):    \n    frame_list = tf.py_func(glob_frame_list, [input_queue], tf.string) # TensorShape(None)\n    frames = []\n    start_idx = tf.random_uniform([], minval=0, maxval=tf.shape(frame_list)[0]-seq_len, dtype=tf.int32) # TensorShape([])\n    # for i in tf.range(start_idx, start_idx+seq_len): # has a problem of 'tensor is not iterable'\n    def body(i):\n        img_contents = tf.read_file(frame_list[i]) \n        img = tf.image.decode_jpeg(img_contents, channels=3)        \n        frames.append(tf.expand_dims(img, axis=0))\n        return i+1    \n    i = start_idx\n    while_condition = lambda i: tf.less(i, start_idx+seq_len)\n    new_i = tf.while_loop(while_condition, body, [i])\n    frames = tf.concat(frames, axis=0)\n    return frames\n\nWhen I run\nthreads = tf.train.start_queue_runners(coord=coord, sess=sess) there is the following error.\n\"\nInternalError (see above for traceback): Failed to run py callback pyfunc_0: see error log.\n[[Node: create_inputs/PyFunc = PyFuncTin=[DT_STRING], Tout=[DT_STRING], token=\"pyfunc_0\", _device=\"/job:localhost/replica:0/task:0/cpu:0\"]]\n\"\nCan anyone help me on this?\nThanks a lot.", "body": "### System information\r\n- **OS Platform and Distribution **: Linux fedora fc25.x86_64\r\n- **TensorFlow installed from (source or binary)**: from pip\r\n- **TensorFlow version (use command below)**: v1.0.0-rc2-15-g47bba63-dirty\r\n- **CUDA/cuDNN version**: cuda 8.0/cudnn 5\r\n- **GPU model and memory**: TITAN X (Pascal)\r\n### Describe the problem\r\nI have a file which lists video names. Frames of each video are saved in a separate folder. Now I want to use tensorflow to get a queue from list of video names and then load a subset of consecutive frames from a video folder every time. Is there a way to do that? \r\nI tried the following way but it does not work.\r\n\r\n### Source code / logs\r\ninput_queue is got using tf.train.slice_input_producer.\r\n```\r\ndef glob_frame_list(video_path):\r\n     frame_list = gfile.Glob(os.path.join(video_path[0]))\r\n     return frame_list\r\ndef read_video_sequence_from_disk(input_queue, seq_len, input_size):    \r\n    frame_list = tf.py_func(glob_frame_list, [input_queue], tf.string) # TensorShape(None)\r\n    frames = []\r\n    start_idx = tf.random_uniform([], minval=0, maxval=tf.shape(frame_list)[0]-seq_len, dtype=tf.int32) # TensorShape([])\r\n    # for i in tf.range(start_idx, start_idx+seq_len): # has a problem of 'tensor is not iterable'\r\n    def body(i):\r\n        img_contents = tf.read_file(frame_list[i]) \r\n        img = tf.image.decode_jpeg(img_contents, channels=3)        \r\n        frames.append(tf.expand_dims(img, axis=0))\r\n        return i+1    \r\n    i = start_idx\r\n    while_condition = lambda i: tf.less(i, start_idx+seq_len)\r\n    new_i = tf.while_loop(while_condition, body, [i])\r\n    frames = tf.concat(frames, axis=0)\r\n    return frames\r\n```\r\n   \r\nWhen I run \r\n`threads = tf.train.start_queue_runners(coord=coord, sess=sess)\r\n`there is the following error.\r\n\"\r\nInternalError (see above for traceback): Failed to run py callback pyfunc_0: see error log.\r\n         [[Node: create_inputs/PyFunc = PyFunc[Tin=[DT_STRING], Tout=[DT_STRING], token=\"pyfunc_0\", _device=\"/job:localhost/replica:0/task:0/cpu:0\"](create_inputs/PyFunc/input_0)]]\r\n\"\r\nCan anyone help me on this?\r\nThanks a lot."}