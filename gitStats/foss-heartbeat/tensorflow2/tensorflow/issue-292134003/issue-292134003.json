{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16499", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16499/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16499/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16499/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16499", "id": 292134003, "node_id": "MDU6SXNzdWUyOTIxMzQwMDM=", "number": 16499, "title": "Extend tf.unique_with_counts to multi-dimensional tensors", "user": {"login": "violetguos", "id": 13026263, "node_id": "MDQ6VXNlcjEzMDI2MjYz", "avatar_url": "https://avatars3.githubusercontent.com/u/13026263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/violetguos", "html_url": "https://github.com/violetguos", "followers_url": "https://api.github.com/users/violetguos/followers", "following_url": "https://api.github.com/users/violetguos/following{/other_user}", "gists_url": "https://api.github.com/users/violetguos/gists{/gist_id}", "starred_url": "https://api.github.com/users/violetguos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/violetguos/subscriptions", "organizations_url": "https://api.github.com/users/violetguos/orgs", "repos_url": "https://api.github.com/users/violetguos/repos", "events_url": "https://api.github.com/users/violetguos/events{/privacy}", "received_events_url": "https://api.github.com/users/violetguos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-27T16:43:22Z", "updated_at": "2018-02-24T10:08:49Z", "closed_at": "2018-02-24T10:08:49Z", "author_association": "NONE", "body_html": "<p>I'm trying to solve KNN using tensorflow. After I get the K neighbours for N vectors, I have a N by K tensor. Now, for each vector in N, I need to use <a href=\"https://www.tensorflow.org/api_docs/python/tf/unique_with_counts\" rel=\"nofollow\"><code>tf.unique_with_counts</code></a> to find the majority vote. However, I cannot iterate in a tensor and I cannot run <a href=\"https://www.tensorflow.org/api_docs/python/tf/unique_with_counts\" rel=\"nofollow\"><code>tf.unique_with_counts</code></a> with a multi-dimensional tensor. It keeps giving me <code>InvalidArgumentError (see above for traceback): unique expects a 1D vector.</code></p>\n<p>Why can't tf support multi-demsional input?</p>\n<p>Example:</p>\n<pre><code>def knnVote():\n'''\nKNN using majority vote\n'''\n#nearest indices\nA = tf.constant([1, 1, 2, 4, 4, 4, 7, 8, 8])\nnearest_k_y, idx, votes = tf.unique_with_counts(A)\nprint(\"y\", nearest_k_y.eval())\nprint(\"idx\", idx.eval())\nprint(\"votes\", votes.eval())\nmajority = tf.argmax(votes)\npredict_res = tf.gather(nearest_k_y, majority)\n\n\nprint(\"majority\", majority.eval())\nprint(\"predict\", predict_res.eval())\nreturn predict_res\n</code></pre>\n<p>Result:</p>\n<pre><code>y [1 2 4 7 8]\nidx [0 0 1 2 2 2 3 4 4]\nvotes [2 1 3 1 2]\nmajority 2\npredict 4\n</code></pre>\n<p>But how can I extend this to N by D input A, such as the case when <code>A = tf.constant([[1, 1, 2, 4, 4, 4, 7, 8, 8], [2, 2, 3, 3, 3, 4, 4, 5, 6]])</code></p>", "body_text": "I'm trying to solve KNN using tensorflow. After I get the K neighbours for N vectors, I have a N by K tensor. Now, for each vector in N, I need to use tf.unique_with_counts to find the majority vote. However, I cannot iterate in a tensor and I cannot run tf.unique_with_counts with a multi-dimensional tensor. It keeps giving me InvalidArgumentError (see above for traceback): unique expects a 1D vector.\nWhy can't tf support multi-demsional input?\nExample:\ndef knnVote():\n'''\nKNN using majority vote\n'''\n#nearest indices\nA = tf.constant([1, 1, 2, 4, 4, 4, 7, 8, 8])\nnearest_k_y, idx, votes = tf.unique_with_counts(A)\nprint(\"y\", nearest_k_y.eval())\nprint(\"idx\", idx.eval())\nprint(\"votes\", votes.eval())\nmajority = tf.argmax(votes)\npredict_res = tf.gather(nearest_k_y, majority)\n\n\nprint(\"majority\", majority.eval())\nprint(\"predict\", predict_res.eval())\nreturn predict_res\n\nResult:\ny [1 2 4 7 8]\nidx [0 0 1 2 2 2 3 4 4]\nvotes [2 1 3 1 2]\nmajority 2\npredict 4\n\nBut how can I extend this to N by D input A, such as the case when A = tf.constant([[1, 1, 2, 4, 4, 4, 7, 8, 8], [2, 2, 3, 3, 3, 4, 4, 5, 6]])", "body": "I'm trying to solve KNN using tensorflow. After I get the K neighbours for N vectors, I have a N by K tensor. Now, for each vector in N, I need to use [```tf.unique_with_counts```][1] to find the majority vote. However, I cannot iterate in a tensor and I cannot run [```tf.unique_with_counts```][1] with a multi-dimensional tensor. It keeps giving me ```InvalidArgumentError (see above for traceback): unique expects a 1D vector.```\r\n\r\nWhy can't tf support multi-demsional input?\r\n\r\nExample:\r\n\r\n    def knnVote():\r\n    '''\r\n    KNN using majority vote\r\n    '''\r\n    #nearest indices\r\n    A = tf.constant([1, 1, 2, 4, 4, 4, 7, 8, 8])\r\n    nearest_k_y, idx, votes = tf.unique_with_counts(A)\r\n    print(\"y\", nearest_k_y.eval())\r\n    print(\"idx\", idx.eval())\r\n    print(\"votes\", votes.eval())\r\n    majority = tf.argmax(votes)\r\n    predict_res = tf.gather(nearest_k_y, majority)\r\n    \r\n    \r\n    print(\"majority\", majority.eval())\r\n    print(\"predict\", predict_res.eval())\r\n    return predict_res\r\n\r\nResult:\r\n\r\n    y [1 2 4 7 8]\r\n    idx [0 0 1 2 2 2 3 4 4]\r\n    votes [2 1 3 1 2]\r\n    majority 2\r\n    predict 4\r\n\r\nBut how can I extend this to N by D input A, such as the case when ```A = tf.constant([[1, 1, 2, 4, 4, 4, 7, 8, 8],\r\n[2, 2, 3, 3, 3, 4, 4, 5, 6]])```\r\n\r\n  [1]: https://www.tensorflow.org/api_docs/python/tf/unique_with_counts"}