{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/300033301", "html_url": "https://github.com/tensorflow/tensorflow/issues/4467#issuecomment-300033301", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4467", "id": 300033301, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDAzMzMwMQ==", "user": {"login": "ed-alertedh", "id": 24605895, "node_id": "MDQ6VXNlcjI0NjA1ODk1", "avatar_url": "https://avatars1.githubusercontent.com/u/24605895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ed-alertedh", "html_url": "https://github.com/ed-alertedh", "followers_url": "https://api.github.com/users/ed-alertedh/followers", "following_url": "https://api.github.com/users/ed-alertedh/following{/other_user}", "gists_url": "https://api.github.com/users/ed-alertedh/gists{/gist_id}", "starred_url": "https://api.github.com/users/ed-alertedh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ed-alertedh/subscriptions", "organizations_url": "https://api.github.com/users/ed-alertedh/orgs", "repos_url": "https://api.github.com/users/ed-alertedh/repos", "events_url": "https://api.github.com/users/ed-alertedh/events{/privacy}", "received_events_url": "https://api.github.com/users/ed-alertedh/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-09T01:11:16Z", "updated_at": "2017-05-09T01:11:16Z", "author_association": "NONE", "body_html": "<p>According to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"141996453\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/protocolbuffers/protobuf/issues/1332\" data-hovercard-type=\"issue\" data-hovercard-url=\"/protocolbuffers/protobuf/issues/1332/hovercard\" href=\"https://github.com/protocolbuffers/protobuf/issues/1332\">protocolbuffers/protobuf#1332</a> the wheel on pypi for protobuf 3.2.0 now includes the C++ implementation and uses it by default (although maybe not yet on OS X). I was able to verify this on linux x86_64:</p>\n<pre><code>$ pip show protobuf\nName: protobuf\nVersion: 3.2.0\nSummary: Protocol Buffers\nHome-page: https://developers.google.com/protocol-buffers/\nAuthor: protobuf@googlegroups.com\nAuthor-email: protobuf@googlegroups.com\nLicense: New BSD License\nLocation: /home/ed/.pyenv/versions/3.6.1/envs/py36/lib/python3.6/site-packages\nRequires: six, setuptools\n$ python -c \"from google.protobuf.internal import api_implementation; print(api_implementation._default_implementation_type)\"\ncpp\n</code></pre>", "body_text": "According to protocolbuffers/protobuf#1332 the wheel on pypi for protobuf 3.2.0 now includes the C++ implementation and uses it by default (although maybe not yet on OS X). I was able to verify this on linux x86_64:\n$ pip show protobuf\nName: protobuf\nVersion: 3.2.0\nSummary: Protocol Buffers\nHome-page: https://developers.google.com/protocol-buffers/\nAuthor: protobuf@googlegroups.com\nAuthor-email: protobuf@googlegroups.com\nLicense: New BSD License\nLocation: /home/ed/.pyenv/versions/3.6.1/envs/py36/lib/python3.6/site-packages\nRequires: six, setuptools\n$ python -c \"from google.protobuf.internal import api_implementation; print(api_implementation._default_implementation_type)\"\ncpp", "body": "According to google/protobuf#1332 the wheel on pypi for protobuf 3.2.0 now includes the C++ implementation and uses it by default (although maybe not yet on OS X). I was able to verify this on linux x86_64:\r\n```\r\n$ pip show protobuf\r\nName: protobuf\r\nVersion: 3.2.0\r\nSummary: Protocol Buffers\r\nHome-page: https://developers.google.com/protocol-buffers/\r\nAuthor: protobuf@googlegroups.com\r\nAuthor-email: protobuf@googlegroups.com\r\nLicense: New BSD License\r\nLocation: /home/ed/.pyenv/versions/3.6.1/envs/py36/lib/python3.6/site-packages\r\nRequires: six, setuptools\r\n$ python -c \"from google.protobuf.internal import api_implementation; print(api_implementation._default_implementation_type)\"\r\ncpp\r\n```"}