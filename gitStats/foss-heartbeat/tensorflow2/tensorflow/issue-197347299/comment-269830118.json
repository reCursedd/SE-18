{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/269830118", "html_url": "https://github.com/tensorflow/tensorflow/issues/6473#issuecomment-269830118", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6473", "id": 269830118, "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTgzMDExOA==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-30T22:29:32Z", "updated_at": "2016-12-30T22:29:32Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Yes it looks like the extension and the binary package use a different definition of <code>std::string</code>. The demangled name from the error message expands to:</p>\n<pre><code>tensorflow::LogMemory::RecordRawDeallocation(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, long long, void*, tensorflow::Allocator*, bool)\n</code></pre>\n<p>When I look for the corresponding symbol in the binary package I get the following:</p>\n<pre><code>$ objdump -t lib/python2.7/site-packages/tensorflow/python/_pywrap_tensorflow.so | grep RecordRawDealloc | c++filt\n0000000001f68110 g     F .text  00000000000003a3              tensorflow::LogMemory::RecordRawDeallocation(std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, long long, void*, tensorflow::Allocator*, bool)\n</code></pre>\n<p>Note the difference between <code>std::__cxx11::basic_string&lt;...&gt;</code> in the extension and <code>std::basic_string&lt;...&gt;</code> in the binary package.</p>\n<p>There are a few workarounds, which seem to involve involve defining <code>_GLIBCXX_USE_CXX11_ABI to </code>0` when you compile your extension. See <a href=\"http://stackoverflow.com/a/33395489/3574081\" rel=\"nofollow\">this Stack Overflow answer</a> for details.</p>", "body_text": "Yes it looks like the extension and the binary package use a different definition of std::string. The demangled name from the error message expands to:\ntensorflow::LogMemory::RecordRawDeallocation(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long long, void*, tensorflow::Allocator*, bool)\n\nWhen I look for the corresponding symbol in the binary package I get the following:\n$ objdump -t lib/python2.7/site-packages/tensorflow/python/_pywrap_tensorflow.so | grep RecordRawDealloc | c++filt\n0000000001f68110 g     F .text  00000000000003a3              tensorflow::LogMemory::RecordRawDeallocation(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long long, void*, tensorflow::Allocator*, bool)\n\nNote the difference between std::__cxx11::basic_string<...> in the extension and std::basic_string<...> in the binary package.\nThere are a few workarounds, which seem to involve involve defining _GLIBCXX_USE_CXX11_ABI to 0` when you compile your extension. See this Stack Overflow answer for details.", "body": "Yes it looks like the extension and the binary package use a different definition of `std::string`. The demangled name from the error message expands to:\r\n\r\n    tensorflow::LogMemory::RecordRawDeallocation(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long long, void*, tensorflow::Allocator*, bool)\r\n\r\nWhen I look for the corresponding symbol in the binary package I get the following:\r\n\r\n```\r\n$ objdump -t lib/python2.7/site-packages/tensorflow/python/_pywrap_tensorflow.so | grep RecordRawDealloc | c++filt\r\n0000000001f68110 g     F .text  00000000000003a3              tensorflow::LogMemory::RecordRawDeallocation(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long long, void*, tensorflow::Allocator*, bool)\r\n```\r\n\r\nNote the difference between `std::__cxx11::basic_string<...>` in the extension and `std::basic_string<...>` in the binary package.\r\n\r\nThere are a few workarounds, which seem to involve involve defining `_GLIBCXX_USE_CXX11_ABI to `0` when you compile your extension. See [this Stack Overflow answer](http://stackoverflow.com/a/33395489/3574081) for details."}