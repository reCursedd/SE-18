{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/280692490", "html_url": "https://github.com/tensorflow/tensorflow/issues/7625#issuecomment-280692490", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7625", "id": 280692490, "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDY5MjQ5MA==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-17T16:11:55Z", "updated_at": "2017-02-17T16:12:09Z", "author_association": "CONTRIBUTOR", "body_html": "<p>When I see one core being utilized, my first suspicion is that work is done in Python. Python has chosen to remain in the punch-card age and only use 1 core for its processing, citing GIL issues. So the way to troubleshoot this is:</p>\n<pre><code>python -m cProfile -o slow.prof script.py\npip install snakeviz\nsnakeviz slow.prof\n</code></pre>\n<p>This may help you find a bottleneck, possibly something obviously inefficient is being done in Python (I used this technique to speed up session.run from 120 usec to 60 usec by cutting out some unneeded Python calls). Longer term solution may be to rewrite metagraph loading in C++, someone from TF team may know if there are plans</p>", "body_text": "When I see one core being utilized, my first suspicion is that work is done in Python. Python has chosen to remain in the punch-card age and only use 1 core for its processing, citing GIL issues. So the way to troubleshoot this is:\npython -m cProfile -o slow.prof script.py\npip install snakeviz\nsnakeviz slow.prof\n\nThis may help you find a bottleneck, possibly something obviously inefficient is being done in Python (I used this technique to speed up session.run from 120 usec to 60 usec by cutting out some unneeded Python calls). Longer term solution may be to rewrite metagraph loading in C++, someone from TF team may know if there are plans", "body": "When I see one core being utilized, my first suspicion is that work is done in Python. Python has chosen to remain in the punch-card age and only use 1 core for its processing, citing GIL issues. So the way to troubleshoot this is:\r\n\r\n```\r\npython -m cProfile -o slow.prof script.py\r\npip install snakeviz\r\nsnakeviz slow.prof\r\n```\r\n\r\nThis may help you find a bottleneck, possibly something obviously inefficient is being done in Python (I used this technique to speed up session.run from 120 usec to 60 usec by cutting out some unneeded Python calls). Longer term solution may be to rewrite metagraph loading in C++, someone from TF team may know if there are plans"}