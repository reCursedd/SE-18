{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/289357945", "html_url": "https://github.com/tensorflow/tensorflow/pull/8733#issuecomment-289357945", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8733", "id": 289357945, "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTM1Nzk0NQ==", "user": {"login": "snnn", "id": 856316, "node_id": "MDQ6VXNlcjg1NjMxNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/856316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snnn", "html_url": "https://github.com/snnn", "followers_url": "https://api.github.com/users/snnn/followers", "following_url": "https://api.github.com/users/snnn/following{/other_user}", "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}", "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snnn/subscriptions", "organizations_url": "https://api.github.com/users/snnn/orgs", "repos_url": "https://api.github.com/users/snnn/repos", "events_url": "https://api.github.com/users/snnn/events{/privacy}", "received_events_url": "https://api.github.com/users/snnn/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-27T05:34:49Z", "updated_at": "2017-03-27T05:34:59Z", "author_association": "CONTRIBUTOR", "body_html": "<p>test code:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">from</span> <span class=\"pl-c1\">__future__</span> <span class=\"pl-k\">import</span> absolute_import\n<span class=\"pl-k\">from</span> <span class=\"pl-c1\">__future__</span> <span class=\"pl-k\">import</span> division\n<span class=\"pl-k\">from</span> <span class=\"pl-c1\">__future__</span> <span class=\"pl-k\">import</span> print_function\n\n<span class=\"pl-k\">import</span> logging\n<span class=\"pl-k\">import</span> argparse\n<span class=\"pl-k\">import</span> os.path\n<span class=\"pl-k\">import</span> sys\n<span class=\"pl-k\">import</span> math\n<span class=\"pl-k\">import</span> time\n<span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">from</span> tensorflow.python.ops <span class=\"pl-k\">import</span> data_flow_ops\n<span class=\"pl-k\">from</span> tensorflow.python.ops <span class=\"pl-k\">import</span> control_flow_ops\n\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">train_fn</span>(<span class=\"pl-smi\">sess</span>,<span class=\"pl-smi\">label</span>):\n  train_fn.counter <span class=\"pl-k\">+=</span> <span class=\"pl-c1\">1</span>\n  train_start_time <span class=\"pl-k\">=</span> time.time()\n  result <span class=\"pl-k\">=</span> sess.run(label)\n  duration <span class=\"pl-k\">=</span> time.time() <span class=\"pl-k\">-</span> train_start_time\n  <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>step <span class=\"pl-c1\">%d</span>: count = <span class=\"pl-c1\">%g</span>, dur = <span class=\"pl-c1\">%g</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> (train_fn.counter,<span class=\"pl-c1\">len</span>(result),duration))\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">main</span>(<span class=\"pl-smi\">_</span>):\n    logger <span class=\"pl-k\">=</span> logging.getLogger(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>tensorflow<span class=\"pl-pds\">'</span></span>)  \n    logger.setLevel(logging.<span class=\"pl-c1\">INFO</span>)\n    global_step <span class=\"pl-k\">=</span> tf.train.get_or_create_global_step()\n    reader <span class=\"pl-k\">=</span> data_flow_ops.RecordInput(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>D:<span class=\"pl-cce\">\\\\</span>testdata2<span class=\"pl-cce\">\\\\</span>tf<span class=\"pl-cce\">\\\\</span>*.tfrecord<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-v\">parallelism</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>,<span class=\"pl-v\">buffer_size</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1024</span>,<span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>record_input<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-v\">batch_size</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">40960</span>)\n    y <span class=\"pl-k\">=</span> reader.get_yield_op()\n    features <span class=\"pl-k\">=</span> tf.parse_example(\n        y,\n        <span class=\"pl-c\"><span class=\"pl-c\">#</span> Defaults are not specified since both keys are required.</span>\n        <span class=\"pl-v\">features</span><span class=\"pl-k\">=</span>{\n            <span class=\"pl-s\"><span class=\"pl-pds\">'</span>l<span class=\"pl-pds\">'</span></span>: tf.FixedLenFeature([], tf.float32),\n            <span class=\"pl-s\"><span class=\"pl-pds\">'</span>v<span class=\"pl-pds\">'</span></span>: tf.VarLenFeature(tf.int64)\n        })\n    label <span class=\"pl-k\">=</span> features[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>l<span class=\"pl-pds\">'</span></span>]\n    features <span class=\"pl-k\">=</span> features[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>v<span class=\"pl-pds\">'</span></span>]\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> Ensure the train_tensor computes grad_updates.</span>\n    train_op <span class=\"pl-k\">=</span> control_flow_ops.with_dependencies([global_step], label)  \n    train_fn.counter <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>\n\n    sv <span class=\"pl-k\">=</span> tf.train.Supervisor(<span class=\"pl-v\">logdir</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>t3<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-v\">save_summaries_secs</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>,<span class=\"pl-v\">global_step</span> <span class=\"pl-k\">=</span> global_step)\n    tf.train.basic_train_loop(sv,train_fn,[train_op])\n  \n\n<span class=\"pl-k\">if</span> <span class=\"pl-c1\">__name__</span> <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>__main__<span class=\"pl-pds\">'</span></span>:\n  tf.app.run()</pre></div>\n<p>before:<br>\nINFO:tensorflow:global_step/sec: 0<br>\nstep 1: count = 40960, dur = 0.215178<br>\nstep 2: count = 40960, dur = 0.206151<br>\nstep 3: count = 40960, dur = 0.206683<br>\nstep 4: count = 40960, dur = 0.214185<br>\nINFO:tensorflow:global_step/sec: 0<br>\nstep 5: count = 40960, dur = 0.208147<br>\nstep 6: count = 40960, dur = 0.205167<br>\nstep 7: count = 40960, dur = 0.206236<br>\nstep 8: count = 40960, dur = 0.204632<br>\nstep 9: count = 40960, dur = 0.203644<br>\nINFO:tensorflow:global_step/sec: 0<br>\nstep 10: count = 40960, dur = 0.205663<br>\nstep 11: count = 40960, dur = 0.203331<br>\nstep 12: count = 40960, dur = 0.208636<br>\nstep 13: count = 40960, dur = 0.207647</p>\n<p>After:<br>\nstep 1: count = 40960, dur = 0.0535386<br>\nstep 2: count = 40960, dur = 0.0370266<br>\nstep 3: count = 40960, dur = 0.0395277<br>\nstep 4: count = 40960, dur = 0.038027<br>\nstep 5: count = 40960, dur = 0.038027<br>\nstep 6: count = 40960, dur = 0.0395284<br>\nstep 7: count = 40960, dur = 0.0350249<br>\nstep 8: count = 40960, dur = 0.0355251<br>\nstep 9: count = 40960, dur = 0.0350249<br>\nstep 10: count = 40960, dur = 0.0355251<br>\nstep 11: count = 40960, dur = 0.0370266<br>\nstep 12: count = 40960, dur = 0.0385275<br>\nstep 13: count = 40960, dur = 0.0370264<br>\nstep 14: count = 40960, dur = 0.0370262<br>\nstep 15: count = 40960, dur = 0.0375264</p>", "body_text": "test code:\nfrom __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\n\nimport logging\nimport argparse\nimport os.path\nimport sys\nimport math\nimport time\nimport tensorflow as tf\nfrom tensorflow.python.ops import data_flow_ops\nfrom tensorflow.python.ops import control_flow_ops\n\n\ndef train_fn(sess,label):\n  train_fn.counter += 1\n  train_start_time = time.time()\n  result = sess.run(label)\n  duration = time.time() - train_start_time\n  print(\"step %d: count = %g, dur = %g\" % (train_fn.counter,len(result),duration))\n\ndef main(_):\n    logger = logging.getLogger('tensorflow')  \n    logger.setLevel(logging.INFO)\n    global_step = tf.train.get_or_create_global_step()\n    reader = data_flow_ops.RecordInput(\"D:\\\\testdata2\\\\tf\\\\*.tfrecord\",parallelism=1,buffer_size=1024,name=\"record_input\",batch_size=40960)\n    y = reader.get_yield_op()\n    features = tf.parse_example(\n        y,\n        # Defaults are not specified since both keys are required.\n        features={\n            'l': tf.FixedLenFeature([], tf.float32),\n            'v': tf.VarLenFeature(tf.int64)\n        })\n    label = features['l']\n    features = features['v']\n    # Ensure the train_tensor computes grad_updates.\n    train_op = control_flow_ops.with_dependencies([global_step], label)  \n    train_fn.counter = 0\n\n    sv = tf.train.Supervisor(logdir=\"t3\",save_summaries_secs=1,global_step = global_step)\n    tf.train.basic_train_loop(sv,train_fn,[train_op])\n  \n\nif __name__ == '__main__':\n  tf.app.run()\nbefore:\nINFO:tensorflow:global_step/sec: 0\nstep 1: count = 40960, dur = 0.215178\nstep 2: count = 40960, dur = 0.206151\nstep 3: count = 40960, dur = 0.206683\nstep 4: count = 40960, dur = 0.214185\nINFO:tensorflow:global_step/sec: 0\nstep 5: count = 40960, dur = 0.208147\nstep 6: count = 40960, dur = 0.205167\nstep 7: count = 40960, dur = 0.206236\nstep 8: count = 40960, dur = 0.204632\nstep 9: count = 40960, dur = 0.203644\nINFO:tensorflow:global_step/sec: 0\nstep 10: count = 40960, dur = 0.205663\nstep 11: count = 40960, dur = 0.203331\nstep 12: count = 40960, dur = 0.208636\nstep 13: count = 40960, dur = 0.207647\nAfter:\nstep 1: count = 40960, dur = 0.0535386\nstep 2: count = 40960, dur = 0.0370266\nstep 3: count = 40960, dur = 0.0395277\nstep 4: count = 40960, dur = 0.038027\nstep 5: count = 40960, dur = 0.038027\nstep 6: count = 40960, dur = 0.0395284\nstep 7: count = 40960, dur = 0.0350249\nstep 8: count = 40960, dur = 0.0355251\nstep 9: count = 40960, dur = 0.0350249\nstep 10: count = 40960, dur = 0.0355251\nstep 11: count = 40960, dur = 0.0370266\nstep 12: count = 40960, dur = 0.0385275\nstep 13: count = 40960, dur = 0.0370264\nstep 14: count = 40960, dur = 0.0370262\nstep 15: count = 40960, dur = 0.0375264", "body": "test code:\r\n\r\n```python\r\nfrom __future__ import absolute_import\r\nfrom __future__ import division\r\nfrom __future__ import print_function\r\n\r\nimport logging\r\nimport argparse\r\nimport os.path\r\nimport sys\r\nimport math\r\nimport time\r\nimport tensorflow as tf\r\nfrom tensorflow.python.ops import data_flow_ops\r\nfrom tensorflow.python.ops import control_flow_ops\r\n\r\n\r\ndef train_fn(sess,label):\r\n  train_fn.counter += 1\r\n  train_start_time = time.time()\r\n  result = sess.run(label)\r\n  duration = time.time() - train_start_time\r\n  print(\"step %d: count = %g, dur = %g\" % (train_fn.counter,len(result),duration))\r\n\r\ndef main(_):\r\n    logger = logging.getLogger('tensorflow')  \r\n    logger.setLevel(logging.INFO)\r\n    global_step = tf.train.get_or_create_global_step()\r\n    reader = data_flow_ops.RecordInput(\"D:\\\\testdata2\\\\tf\\\\*.tfrecord\",parallelism=1,buffer_size=1024,name=\"record_input\",batch_size=40960)\r\n    y = reader.get_yield_op()\r\n    features = tf.parse_example(\r\n        y,\r\n        # Defaults are not specified since both keys are required.\r\n        features={\r\n            'l': tf.FixedLenFeature([], tf.float32),\r\n            'v': tf.VarLenFeature(tf.int64)\r\n        })\r\n    label = features['l']\r\n    features = features['v']\r\n    # Ensure the train_tensor computes grad_updates.\r\n    train_op = control_flow_ops.with_dependencies([global_step], label)  \r\n    train_fn.counter = 0\r\n\r\n    sv = tf.train.Supervisor(logdir=\"t3\",save_summaries_secs=1,global_step = global_step)\r\n    tf.train.basic_train_loop(sv,train_fn,[train_op])\r\n  \r\n\r\nif __name__ == '__main__':\r\n  tf.app.run()\r\n```\r\n\r\nbefore:\r\nINFO:tensorflow:global_step/sec: 0\r\nstep 1: count = 40960, dur = 0.215178\r\nstep 2: count = 40960, dur = 0.206151\r\nstep 3: count = 40960, dur = 0.206683\r\nstep 4: count = 40960, dur = 0.214185\r\nINFO:tensorflow:global_step/sec: 0\r\nstep 5: count = 40960, dur = 0.208147\r\nstep 6: count = 40960, dur = 0.205167\r\nstep 7: count = 40960, dur = 0.206236\r\nstep 8: count = 40960, dur = 0.204632\r\nstep 9: count = 40960, dur = 0.203644\r\nINFO:tensorflow:global_step/sec: 0\r\nstep 10: count = 40960, dur = 0.205663\r\nstep 11: count = 40960, dur = 0.203331\r\nstep 12: count = 40960, dur = 0.208636\r\nstep 13: count = 40960, dur = 0.207647\r\n\r\nAfter:\r\nstep 1: count = 40960, dur = 0.0535386\r\nstep 2: count = 40960, dur = 0.0370266\r\nstep 3: count = 40960, dur = 0.0395277\r\nstep 4: count = 40960, dur = 0.038027\r\nstep 5: count = 40960, dur = 0.038027\r\nstep 6: count = 40960, dur = 0.0395284\r\nstep 7: count = 40960, dur = 0.0350249\r\nstep 8: count = 40960, dur = 0.0355251\r\nstep 9: count = 40960, dur = 0.0350249\r\nstep 10: count = 40960, dur = 0.0355251\r\nstep 11: count = 40960, dur = 0.0370266\r\nstep 12: count = 40960, dur = 0.0385275\r\nstep 13: count = 40960, dur = 0.0370264\r\nstep 14: count = 40960, dur = 0.0370262\r\nstep 15: count = 40960, dur = 0.0375264"}