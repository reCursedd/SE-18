{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7007", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7007/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7007/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7007/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7007", "id": 202379500, "node_id": "MDU6SXNzdWUyMDIzNzk1MDA=", "number": 7007, "title": "Native TF, Keras (Backend TF) and Lasagne(Theano) performance comparison", "user": {"login": "emrahyigit", "id": 9334985, "node_id": "MDQ6VXNlcjkzMzQ5ODU=", "avatar_url": "https://avatars0.githubusercontent.com/u/9334985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emrahyigit", "html_url": "https://github.com/emrahyigit", "followers_url": "https://api.github.com/users/emrahyigit/followers", "following_url": "https://api.github.com/users/emrahyigit/following{/other_user}", "gists_url": "https://api.github.com/users/emrahyigit/gists{/gist_id}", "starred_url": "https://api.github.com/users/emrahyigit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emrahyigit/subscriptions", "organizations_url": "https://api.github.com/users/emrahyigit/orgs", "repos_url": "https://api.github.com/users/emrahyigit/repos", "events_url": "https://api.github.com/users/emrahyigit/events{/privacy}", "received_events_url": "https://api.github.com/users/emrahyigit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-22T12:18:59Z", "updated_at": "2017-01-22T14:25:39Z", "closed_at": "2017-01-22T14:25:39Z", "author_association": "NONE", "body_html": "<p>Hey everyone,</p>\n<p>I created the exact same network with native tensorflow, keras(tensorflow) and lasagne(theano) but after many hours of testing using number of different parameters, still couldn't figure out why keras and lasagne outperforms the native tensorflow, do better convergences and produce better(slightly but better) results.</p>\n<p>The score difference is always like<br>\nKeras with Tensorflow: ~0.9830 - 0.9885<br>\nLasagne with Theano: ~0.9833 - 0.9885<br>\nTensorflow Native ~0.9765 - 0.9830</p>\n<p>If anyone feels like digging in, my environment is:</p>\n<blockquote>\n<p>Python 3.5.2 -Anaconda / Windows 10<br>\nCUDA: 8.0 with cuDNN 5.1<br>\nKeras 1.2.1<br>\nTensorflow 0.12.1<br>\nNvidia Geforce GTX 860M</p>\n</blockquote>\n<p>and <strong>keras.json</strong> file:</p>\n<pre><code>{\n    \"image_dim_ordering\": \"tf\", \n    \"epsilon\": 1e-07, \n    \"floatx\": \"float32\", \n    \"backend\": \"tensorflow\"\n}\n</code></pre>\n<p>And you can copy and execute following files in my repo:<br>\n<a href=\"https://github.com/emrahyigit/deep/blob/master/keras_cnn_mnist.py\">Keras code</a><br>\n<a href=\"https://github.com/emrahyigit/deep/blob/master/tf_cnn_mnist.py\">Native Tensorflow code</a><br>\n<a href=\"https://github.com/emrahyigit/deep/blob/master/mnist.py\">Mnist</a></p>", "body_text": "Hey everyone,\nI created the exact same network with native tensorflow, keras(tensorflow) and lasagne(theano) but after many hours of testing using number of different parameters, still couldn't figure out why keras and lasagne outperforms the native tensorflow, do better convergences and produce better(slightly but better) results.\nThe score difference is always like\nKeras with Tensorflow: ~0.9830 - 0.9885\nLasagne with Theano: ~0.9833 - 0.9885\nTensorflow Native ~0.9765 - 0.9830\nIf anyone feels like digging in, my environment is:\n\nPython 3.5.2 -Anaconda / Windows 10\nCUDA: 8.0 with cuDNN 5.1\nKeras 1.2.1\nTensorflow 0.12.1\nNvidia Geforce GTX 860M\n\nand keras.json file:\n{\n    \"image_dim_ordering\": \"tf\", \n    \"epsilon\": 1e-07, \n    \"floatx\": \"float32\", \n    \"backend\": \"tensorflow\"\n}\n\nAnd you can copy and execute following files in my repo:\nKeras code\nNative Tensorflow code\nMnist", "body": "Hey everyone,\r\n\r\nI created the exact same network with native tensorflow, keras(tensorflow) and lasagne(theano) but after many hours of testing using number of different parameters, still couldn't figure out why keras and lasagne outperforms the native tensorflow, do better convergences and produce better(slightly but better) results.\r\n\r\nThe score difference is always like\r\nKeras with Tensorflow: ~0.9830 - 0.9885\r\nLasagne with Theano: ~0.9833 - 0.9885\r\nTensorflow Native ~0.9765 - 0.9830\r\n\r\nIf anyone feels like digging in, my environment is:\r\n\r\n> Python 3.5.2 -Anaconda / Windows 10\r\n> CUDA: 8.0 with cuDNN 5.1 \r\n> Keras 1.2.1\r\n> Tensorflow 0.12.1\r\n> Nvidia Geforce GTX 860M\r\n\r\nand **keras.json** file:\r\n\r\n```\r\n{\r\n    \"image_dim_ordering\": \"tf\", \r\n    \"epsilon\": 1e-07, \r\n    \"floatx\": \"float32\", \r\n    \"backend\": \"tensorflow\"\r\n}\r\n```\r\n\r\nAnd you can copy and execute following files in my repo:\r\n[Keras code](https://github.com/emrahyigit/deep/blob/master/keras_cnn_mnist.py)\r\n[Native Tensorflow code](https://github.com/emrahyigit/deep/blob/master/tf_cnn_mnist.py)\r\n[Mnist](https://github.com/emrahyigit/deep/blob/master/mnist.py)\r\n\r\n"}