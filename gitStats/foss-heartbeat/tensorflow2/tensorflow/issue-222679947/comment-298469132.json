{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/298469132", "html_url": "https://github.com/tensorflow/tensorflow/pull/9305#issuecomment-298469132", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9305", "id": 298469132, "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODQ2OTEzMg==", "user": {"login": "vrv", "id": 463737, "node_id": "MDQ6VXNlcjQ2MzczNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/463737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrv", "html_url": "https://github.com/vrv", "followers_url": "https://api.github.com/users/vrv/followers", "following_url": "https://api.github.com/users/vrv/following{/other_user}", "gists_url": "https://api.github.com/users/vrv/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrv/subscriptions", "organizations_url": "https://api.github.com/users/vrv/orgs", "repos_url": "https://api.github.com/users/vrv/repos", "events_url": "https://api.github.com/users/vrv/events{/privacy}", "received_events_url": "https://api.github.com/users/vrv/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-02T00:40:07Z", "updated_at": "2017-05-02T00:40:07Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I think this is a simple enough change (without enough context) that we should let clients write this code.</p>\n<p>The sniff test for adding an API to a core library, whose implementation only has a few lines of code is:</p>\n<ol>\n<li>\n<p>How often do people do this?  If rare, then let clients write the code.  I haven't seen this be used very often.</p>\n</li>\n<li>\n<p>Is it easy to write those few lines wrong?  I'd argue in this case, the only challenge is remembering to add the control dependency.  But by that definition, all code that uses control dependencies should be in TF core, which would be unmaintainable.  (We definitely made a mistake in exposing control dependencies to users by default, but that needs to be fixed in a more general way).</p>\n</li>\n</ol>\n<p>So I'm going to err on the side of saying \"this is a thing you can do\" but not have the burden of maintenance be transferred to the TF core team, at least until more context is available.</p>\n<p>Hope that makes sense, and that I'm being reasonable in your opinion!</p>", "body_text": "I think this is a simple enough change (without enough context) that we should let clients write this code.\nThe sniff test for adding an API to a core library, whose implementation only has a few lines of code is:\n\n\nHow often do people do this?  If rare, then let clients write the code.  I haven't seen this be used very often.\n\n\nIs it easy to write those few lines wrong?  I'd argue in this case, the only challenge is remembering to add the control dependency.  But by that definition, all code that uses control dependencies should be in TF core, which would be unmaintainable.  (We definitely made a mistake in exposing control dependencies to users by default, but that needs to be fixed in a more general way).\n\n\nSo I'm going to err on the side of saying \"this is a thing you can do\" but not have the burden of maintenance be transferred to the TF core team, at least until more context is available.\nHope that makes sense, and that I'm being reasonable in your opinion!", "body": "I think this is a simple enough change (without enough context) that we should let clients write this code.\r\n\r\nThe sniff test for adding an API to a core library, whose implementation only has a few lines of code is:\r\n\r\n1) How often do people do this?  If rare, then let clients write the code.  I haven't seen this be used very often.\r\n\r\n2) Is it easy to write those few lines wrong?  I'd argue in this case, the only challenge is remembering to add the control dependency.  But by that definition, all code that uses control dependencies should be in TF core, which would be unmaintainable.  (We definitely made a mistake in exposing control dependencies to users by default, but that needs to be fixed in a more general way). \r\n\r\nSo I'm going to err on the side of saying \"this is a thing you can do\" but not have the burden of maintenance be transferred to the TF core team, at least until more context is available.\r\n\r\nHope that makes sense, and that I'm being reasonable in your opinion!"}