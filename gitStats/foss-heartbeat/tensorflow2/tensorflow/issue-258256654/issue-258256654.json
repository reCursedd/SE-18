{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13087", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13087/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13087/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13087/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/13087", "id": 258256654, "node_id": "MDU6SXNzdWUyNTgyNTY2NTQ=", "number": 13087, "title": "Deallocation messages broken", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-16T20:30:44Z", "updated_at": "2017-12-05T02:51:17Z", "closed_at": "2017-12-05T02:51:16Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The only way to calculate peak memory in OSS TensorFlow is to make memory timeline by parsing allocation/deallocation messages (possibly using helpers like <a href=\"github.com/yaroslavvb/memory_util\">this</a>)</p>\n<p>Sometime between TF 1.0.1 and TF 1.1, the deallocation messages stopped including allocation id, so you can't track when each tensor got deallocated.</p>\n<pre><code>import os\nos.environ['TF_CPP_MIN_LOG_LEVEL'] = ''\nos.environ['TF_CPP_MIN_VLOG_LEVEL'] = '1'\nos.environ['CUDA_VISIBLE_DEVICES'] = ''\nimport tensorflow as tf\nimport numpy as np\n\nsess = tf.Session()\na = tf.ones((1000,1000))\nsess.run(a)\n</code></pre>\n<p>In TF 1.0.1 you see this<br>\n<code>2017-09-16 13:24:28: I tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 1 allocator_name: \"cpu\" } </code></p>\n<p>In latest TF you see this</p>\n<p><code>2017-09-16 13:25:04.422108: I tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocator_name: \"cpu\" } </code></p>\n<p>Note that deallocation id is missing in later version</p>\n<p>cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=2887803\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/panyx0718\">@panyx0718</a> who mentioned ongoing work for tracking memory deallocation</p>", "body_text": "The only way to calculate peak memory in OSS TensorFlow is to make memory timeline by parsing allocation/deallocation messages (possibly using helpers like this)\nSometime between TF 1.0.1 and TF 1.1, the deallocation messages stopped including allocation id, so you can't track when each tensor got deallocated.\nimport os\nos.environ['TF_CPP_MIN_LOG_LEVEL'] = ''\nos.environ['TF_CPP_MIN_VLOG_LEVEL'] = '1'\nos.environ['CUDA_VISIBLE_DEVICES'] = ''\nimport tensorflow as tf\nimport numpy as np\n\nsess = tf.Session()\na = tf.ones((1000,1000))\nsess.run(a)\n\nIn TF 1.0.1 you see this\n2017-09-16 13:24:28: I tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 1 allocator_name: \"cpu\" } \nIn latest TF you see this\n2017-09-16 13:25:04.422108: I tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocator_name: \"cpu\" } \nNote that deallocation id is missing in later version\ncc @panyx0718 who mentioned ongoing work for tracking memory deallocation", "body": "The only way to calculate peak memory in OSS TensorFlow is to make memory timeline by parsing allocation/deallocation messages (possibly using helpers like [this](github.com/yaroslavvb/memory_util))\r\n\r\nSometime between TF 1.0.1 and TF 1.1, the deallocation messages stopped including allocation id, so you can't track when each tensor got deallocated. \r\n\r\n```\r\nimport os\r\nos.environ['TF_CPP_MIN_LOG_LEVEL'] = ''\r\nos.environ['TF_CPP_MIN_VLOG_LEVEL'] = '1'\r\nos.environ['CUDA_VISIBLE_DEVICES'] = ''\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\nsess = tf.Session()\r\na = tf.ones((1000,1000))\r\nsess.run(a)\r\n```\r\n\r\nIn TF 1.0.1 you see this\r\n`2017-09-16 13:24:28: I tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocation_id: 1 allocator_name: \"cpu\" }\r\n`\r\n\r\nIn latest TF you see this\r\n\r\n`2017-09-16 13:25:04.422108: I tensorflow/core/framework/log_memory.cc:35] __LOG_MEMORY__ MemoryLogTensorDeallocation { allocator_name: \"cpu\" }\r\n`\r\n\r\nNote that deallocation id is missing in later version\r\n\r\ncc @panyx0718 who mentioned ongoing work for tracking memory deallocation"}