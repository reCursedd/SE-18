{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/415706802", "html_url": "https://github.com/tensorflow/tensorflow/issues/19909#issuecomment-415706802", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19909", "id": 415706802, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTcwNjgwMg==", "user": {"login": "mrlittlepig", "id": 15867461, "node_id": "MDQ6VXNlcjE1ODY3NDYx", "avatar_url": "https://avatars0.githubusercontent.com/u/15867461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrlittlepig", "html_url": "https://github.com/mrlittlepig", "followers_url": "https://api.github.com/users/mrlittlepig/followers", "following_url": "https://api.github.com/users/mrlittlepig/following{/other_user}", "gists_url": "https://api.github.com/users/mrlittlepig/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrlittlepig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrlittlepig/subscriptions", "organizations_url": "https://api.github.com/users/mrlittlepig/orgs", "repos_url": "https://api.github.com/users/mrlittlepig/repos", "events_url": "https://api.github.com/users/mrlittlepig/events{/privacy}", "received_events_url": "https://api.github.com/users/mrlittlepig/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-24T09:33:10Z", "updated_at": "2018-08-24T09:41:49Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=25300810\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/spivakoa\">@spivakoa</a> I have the similar code about opencv and tensorflow c++ interface compile together in Ubuntu16.04, but I got many opencv error while compiling like this: /usr/include/opencv2/contrib/contrib.hpp:393:9: error: reference to 'int64' is ambiguous<br>\nmy CMakeLists.txt defined like:</p>\n<div class=\"highlight highlight-source-cmake\"><pre><span class=\"pl-c1\">FILE</span>(<span class=\"pl-k\">GLOB</span> HEADER_FILES *.h)\n<span class=\"pl-c1\">find_package</span>(OpenCV <span class=\"pl-k\">REQUIRED</span> highgui imgproc)\n\n<span class=\"pl-c1\">include</span>(CheckCXXCompilerFlag)\n CHECK_CXX_COMPILER_FLAG(<span class=\"pl-s\">\"-std=c++11\"</span> COMPILER_SUPPORTS_CXX11)\n CHECK_CXX_COMPILER_FLAG(<span class=\"pl-s\">\"-std=c++0x\"</span> COMPILER_SUPPORTS_CXX0X)\n <span class=\"pl-k\">if</span>(COMPILER_SUPPORTS_CXX11)\n   <span class=\"pl-c1\">set</span>(CMAKE_CXX_FLAGS <span class=\"pl-s\">\"<span class=\"pl-smi\">${CMAKE_CXX_FLAGS}</span> -std=c++11 -fPIC -O3\"</span>)\n <span class=\"pl-k\">elseif</span>(COMPILER_SUPPORTS_CXX0X)\n   <span class=\"pl-c1\">set</span>(CMAKE_CXX_FLAGS <span class=\"pl-s\">\"<span class=\"pl-smi\">${CMAKE_CXX_FLAGS}</span> -std=c++0x\"</span>)\n <span class=\"pl-k\">else</span>()\n   <span class=\"pl-c1\">message</span>(STATUS <span class=\"pl-s\">\"The compiler <span class=\"pl-smi\">${CMAKE_CXX_COMPILER}</span> has no C++11 support. Please use a different C++ compiler.\"</span>)\n <span class=\"pl-k\">endif</span>()\n\n<span class=\"pl-c1\">set</span>(eigen_root_path <span class=\"pl-smi\">${PROJECT_SOURCE_DIR}</span>/../../../software/eigen3)\n<span class=\"pl-c1\">set</span>(tf_root_path <span class=\"pl-smi\">${PROJECT_SOURCE_DIR}</span>/../../../tensorflow)\n<span class=\"pl-c1\">set</span>(glog_root_path <span class=\"pl-smi\">${PROJECT_SOURCE_DIR}</span>/../../../software/glog-0.3.5)\n<span class=\"pl-c1\">set</span>(gtest_root_path <span class=\"pl-smi\">${PROJECT_SOURCE_DIR}</span>/../../../software/gtest-1.8.0)\n\n<span class=\"pl-c1\">include_directories</span>(\n  <span class=\"pl-smi\">${gtest_root_path}</span>/include\n  <span class=\"pl-smi\">${glog_root_path}</span>/include\n  <span class=\"pl-smi\">${tf_root_path}</span>/bazel-genfiles\n  <span class=\"pl-smi\">${tf_root_path}</span>/tensorflow/contrib/makefile/gen/protobuf/include\n  <span class=\"pl-smi\">${tf_root_path}</span>\n  <span class=\"pl-smi\">${eigen_root_path}</span>\n  <span class=\"pl-smi\">${OpenCV_INCLUDE_DIRS}</span>\n)\n\n<span class=\"pl-c1\">link_directories</span>(/usr/local/lib <span class=\"pl-smi\">${glog_root_path}</span>/lib <span class=\"pl-smi\">${OpenCV_LIBRARY_DIRS}</span>)\n\n<span class=\"pl-c1\">add_library</span>(tf_lib <span class=\"pl-k\">SHARED</span>\n  util/inifile.cc\n  util/util.cc\n  <span class=\"pl-smi\">${HEADER_FILES}</span>\n)\n\n<span class=\"pl-c1\">target_link_libraries</span>(tf_lib glog tensorflow_cc tensorflow_framework <span class=\"pl-smi\">${OpenCV_LIBS}</span>)\n</pre></div>\n<p>I think these error come from tensorflow defined symbols, that opencv redefined, how can I fix it, can you help me?</p>", "body_text": "@spivakoa I have the similar code about opencv and tensorflow c++ interface compile together in Ubuntu16.04, but I got many opencv error while compiling like this: /usr/include/opencv2/contrib/contrib.hpp:393:9: error: reference to 'int64' is ambiguous\nmy CMakeLists.txt defined like:\nFILE(GLOB HEADER_FILES *.h)\nfind_package(OpenCV REQUIRED highgui imgproc)\n\ninclude(CheckCXXCompilerFlag)\n CHECK_CXX_COMPILER_FLAG(\"-std=c++11\" COMPILER_SUPPORTS_CXX11)\n CHECK_CXX_COMPILER_FLAG(\"-std=c++0x\" COMPILER_SUPPORTS_CXX0X)\n if(COMPILER_SUPPORTS_CXX11)\n   set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11 -fPIC -O3\")\n elseif(COMPILER_SUPPORTS_CXX0X)\n   set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++0x\")\n else()\n   message(STATUS \"The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.\")\n endif()\n\nset(eigen_root_path ${PROJECT_SOURCE_DIR}/../../../software/eigen3)\nset(tf_root_path ${PROJECT_SOURCE_DIR}/../../../tensorflow)\nset(glog_root_path ${PROJECT_SOURCE_DIR}/../../../software/glog-0.3.5)\nset(gtest_root_path ${PROJECT_SOURCE_DIR}/../../../software/gtest-1.8.0)\n\ninclude_directories(\n  ${gtest_root_path}/include\n  ${glog_root_path}/include\n  ${tf_root_path}/bazel-genfiles\n  ${tf_root_path}/tensorflow/contrib/makefile/gen/protobuf/include\n  ${tf_root_path}\n  ${eigen_root_path}\n  ${OpenCV_INCLUDE_DIRS}\n)\n\nlink_directories(/usr/local/lib ${glog_root_path}/lib ${OpenCV_LIBRARY_DIRS})\n\nadd_library(tf_lib SHARED\n  util/inifile.cc\n  util/util.cc\n  ${HEADER_FILES}\n)\n\ntarget_link_libraries(tf_lib glog tensorflow_cc tensorflow_framework ${OpenCV_LIBS})\n\nI think these error come from tensorflow defined symbols, that opencv redefined, how can I fix it, can you help me?", "body": "@spivakoa I have the similar code about opencv and tensorflow c++ interface compile together in Ubuntu16.04, but I got many opencv error while compiling like this: /usr/include/opencv2/contrib/contrib.hpp:393:9: error: reference to 'int64' is ambiguous\r\nmy CMakeLists.txt defined like:\r\n``` cmake\r\nFILE(GLOB HEADER_FILES *.h)\r\nfind_package(OpenCV REQUIRED highgui imgproc)\r\n\r\ninclude(CheckCXXCompilerFlag)\r\n CHECK_CXX_COMPILER_FLAG(\"-std=c++11\" COMPILER_SUPPORTS_CXX11)\r\n CHECK_CXX_COMPILER_FLAG(\"-std=c++0x\" COMPILER_SUPPORTS_CXX0X)\r\n if(COMPILER_SUPPORTS_CXX11)\r\n   set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11 -fPIC -O3\")\r\n elseif(COMPILER_SUPPORTS_CXX0X)\r\n   set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++0x\")\r\n else()\r\n   message(STATUS \"The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.\")\r\n endif()\r\n\r\nset(eigen_root_path ${PROJECT_SOURCE_DIR}/../../../software/eigen3)\r\nset(tf_root_path ${PROJECT_SOURCE_DIR}/../../../tensorflow)\r\nset(glog_root_path ${PROJECT_SOURCE_DIR}/../../../software/glog-0.3.5)\r\nset(gtest_root_path ${PROJECT_SOURCE_DIR}/../../../software/gtest-1.8.0)\r\n\r\ninclude_directories(\r\n  ${gtest_root_path}/include\r\n  ${glog_root_path}/include\r\n  ${tf_root_path}/bazel-genfiles\r\n  ${tf_root_path}/tensorflow/contrib/makefile/gen/protobuf/include\r\n  ${tf_root_path}\r\n  ${eigen_root_path}\r\n  ${OpenCV_INCLUDE_DIRS}\r\n)\r\n\r\nlink_directories(/usr/local/lib ${glog_root_path}/lib ${OpenCV_LIBRARY_DIRS})\r\n\r\nadd_library(tf_lib SHARED\r\n  util/inifile.cc\r\n  util/util.cc\r\n  ${HEADER_FILES}\r\n)\r\n\r\ntarget_link_libraries(tf_lib glog tensorflow_cc tensorflow_framework ${OpenCV_LIBS})\r\n\r\n```\r\nI think these error come from tensorflow defined symbols, that opencv redefined, how can I fix it, can you help me? "}