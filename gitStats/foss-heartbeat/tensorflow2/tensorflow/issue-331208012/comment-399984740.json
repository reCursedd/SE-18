{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/399984740", "html_url": "https://github.com/tensorflow/tensorflow/issues/19909#issuecomment-399984740", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19909", "id": 399984740, "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTk4NDc0MA==", "user": {"login": "MarkDaoust", "id": 1414837, "node_id": "MDQ6VXNlcjE0MTQ4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1414837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarkDaoust", "html_url": "https://github.com/MarkDaoust", "followers_url": "https://api.github.com/users/MarkDaoust/followers", "following_url": "https://api.github.com/users/MarkDaoust/following{/other_user}", "gists_url": "https://api.github.com/users/MarkDaoust/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarkDaoust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarkDaoust/subscriptions", "organizations_url": "https://api.github.com/users/MarkDaoust/orgs", "repos_url": "https://api.github.com/users/MarkDaoust/repos", "events_url": "https://api.github.com/users/MarkDaoust/events{/privacy}", "received_events_url": "https://api.github.com/users/MarkDaoust/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-25T15:05:38Z", "updated_at": "2018-06-25T15:05:38Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hi, thanks for the ping.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=88808\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/skye\">@skye</a>, we've got a couple of questions about handling batching in the CC api.  Do you know any good examples demonstrating this? Am I pointing <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=25300810\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/spivakoa\">@spivakoa</a> in the right direction here?</p>\n<p>I haven't gotten to look at this in more detail, but it looks like we still don't understand each other.</p>\n<blockquote>\n<pre><code>vector&lt;string&gt; output_layer = { \"detection_boxes\", \"detection_scores\", \"detection_classes\", \"num_detections\"};\n</code></pre>\n<p>Thus the first dimension is the detection_boxes coordinates from the SSD.</p>\n</blockquote>\n<p>This thing returns 4 tensors.<br>\nEach tensor is a multidimensional array.<br>\nThe first dimension of the array is (probably) the batch size.</p>\n<p>This line (looks like) it's flattening the <code>num_detections</code> tensor into a 1D array:</p>\n<pre><code>tensorflow::TTypes&lt;float&gt;::Flat num_detections = outputs[3].flat&lt;float&gt;();\n</code></pre>\n<p>And this line is only checking the detections in the first item in the batch:</p>\n<pre><code>for (size_t i = 0; i &lt; num_detections(0) &amp;&amp; i &lt; 20; ++i)\n</code></pre>\n<p>You need some sort of outer loop over the number of detections in each image. this is only looking at the first image, which made sense with the old batch size of 1.</p>", "body_text": "Hi, thanks for the ping.\n@skye, we've got a couple of questions about handling batching in the CC api.  Do you know any good examples demonstrating this? Am I pointing @spivakoa in the right direction here?\nI haven't gotten to look at this in more detail, but it looks like we still don't understand each other.\n\nvector<string> output_layer = { \"detection_boxes\", \"detection_scores\", \"detection_classes\", \"num_detections\"};\n\nThus the first dimension is the detection_boxes coordinates from the SSD.\n\nThis thing returns 4 tensors.\nEach tensor is a multidimensional array.\nThe first dimension of the array is (probably) the batch size.\nThis line (looks like) it's flattening the num_detections tensor into a 1D array:\ntensorflow::TTypes<float>::Flat num_detections = outputs[3].flat<float>();\n\nAnd this line is only checking the detections in the first item in the batch:\nfor (size_t i = 0; i < num_detections(0) && i < 20; ++i)\n\nYou need some sort of outer loop over the number of detections in each image. this is only looking at the first image, which made sense with the old batch size of 1.", "body": "Hi, thanks for the ping.\r\n\r\n@skye, we've got a couple of questions about handling batching in the CC api.  Do you know any good examples demonstrating this? Am I pointing @spivakoa in the right direction here?\r\n\r\nI haven't gotten to look at this in more detail, but it looks like we still don't understand each other.\r\n\r\n> ```\r\n> vector<string> output_layer = { \"detection_boxes\", \"detection_scores\", \"detection_classes\", \"num_detections\"};\r\n> ```\r\n>Thus the first dimension is the detection_boxes coordinates from the SSD.\r\n\r\nThis thing returns 4 tensors.\r\nEach tensor is a multidimensional array.\r\nThe first dimension of the array is (probably) the batch size.\r\n\r\nThis line (looks like) it's flattening the `num_detections` tensor into a 1D array:\r\n\r\n    tensorflow::TTypes<float>::Flat num_detections = outputs[3].flat<float>();\r\n\r\nAnd this line is only checking the detections in the first item in the batch:\r\n\r\n    for (size_t i = 0; i < num_detections(0) && i < 20; ++i)\r\n\r\nYou need some sort of outer loop over the number of detections in each image. this is only looking at the first image, which made sense with the old batch size of 1."}