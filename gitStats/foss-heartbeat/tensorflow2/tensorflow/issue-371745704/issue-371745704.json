{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23087", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23087/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23087/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23087/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23087", "id": 371745704, "node_id": "MDU6SXNzdWUzNzE3NDU3MDQ=", "number": 23087, "title": "How to interpret feature weights from bucketized and crossed columns from a trained model in TensorFlow", "user": {"login": "jingw222", "id": 5494367, "node_id": "MDQ6VXNlcjU0OTQzNjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5494367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jingw222", "html_url": "https://github.com/jingw222", "followers_url": "https://api.github.com/users/jingw222/followers", "following_url": "https://api.github.com/users/jingw222/following{/other_user}", "gists_url": "https://api.github.com/users/jingw222/gists{/gist_id}", "starred_url": "https://api.github.com/users/jingw222/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jingw222/subscriptions", "organizations_url": "https://api.github.com/users/jingw222/orgs", "repos_url": "https://api.github.com/users/jingw222/repos", "events_url": "https://api.github.com/users/jingw222/events{/privacy}", "received_events_url": "https://api.github.com/users/jingw222/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ymodak", "id": 42785357, "node_id": "MDQ6VXNlcjQyNzg1MzU3", "avatar_url": "https://avatars1.githubusercontent.com/u/42785357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ymodak", "html_url": "https://github.com/ymodak", "followers_url": "https://api.github.com/users/ymodak/followers", "following_url": "https://api.github.com/users/ymodak/following{/other_user}", "gists_url": "https://api.github.com/users/ymodak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ymodak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ymodak/subscriptions", "organizations_url": "https://api.github.com/users/ymodak/orgs", "repos_url": "https://api.github.com/users/ymodak/repos", "events_url": "https://api.github.com/users/ymodak/events{/privacy}", "received_events_url": "https://api.github.com/users/ymodak/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ymodak", "id": 42785357, "node_id": "MDQ6VXNlcjQyNzg1MzU3", "avatar_url": "https://avatars1.githubusercontent.com/u/42785357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ymodak", "html_url": "https://github.com/ymodak", "followers_url": "https://api.github.com/users/ymodak/followers", "following_url": "https://api.github.com/users/ymodak/following{/other_user}", "gists_url": "https://api.github.com/users/ymodak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ymodak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ymodak/subscriptions", "organizations_url": "https://api.github.com/users/ymodak/orgs", "repos_url": "https://api.github.com/users/ymodak/repos", "events_url": "https://api.github.com/users/ymodak/events{/privacy}", "received_events_url": "https://api.github.com/users/ymodak/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-10-18T23:00:58Z", "updated_at": "2018-10-31T18:18:57Z", "closed_at": "2018-10-31T18:18:56Z", "author_association": "NONE", "body_html": "<pre><code>Have I written custom code: NA\nOS Platform and Distribution: Mac\nTensorFlow installed from: pip\nTensorFlow version: 1.11\nBazel version: NA\nCUDA/cuDNN version: NA \nGPU model and memory: NA\nExact command to reproduce: NA \nMobile device: NA\n</code></pre>\n<p>I'm currently running into a problem where I'm not able to fetch features' weight from a linear model in TensorFlow. I know how to do it when the feature columns only consist of <code>numeric_column</code> or <code>categorical_columns_with_vocabulary_list</code>, unless <code>bucketized_column</code> or <code>crossed_column</code> are added additionally, especially because of <strong>hash bins</strong> introduced in <code>crossed_column</code>.</p>\n<p>The problem looks like this:</p>\n<pre><code>import tensorflow as tf\nimport tensorflow.feature_column as fc\n\nx1 = [1,2,3,4,5,6,7,8]\nx2 = [10,20,30,40,50]\n\nx1_fc = fc.bucketized_column('x1', bins=[3,6])\nx2_fc = fc.bucketized_column('x2', bins=[20,40])\nx1_x_x2_fc = fc.indicator_column(fc.crossed_column([x1_fc, x2_fc], 7))\nfeature_columns = [x1_fc, x2_fc, x1_x_x2_fc]\n\n# constuct the linear model\nmodel = tf.estimator.LinearClassifier(feature_columns)\n</code></pre>\n<p>The question is that when model is trained and ready to do inferences, is there any way to inspect the predictions by looking into the model's each weight of those features (both bucketized and crossed features)? I mean the weights' values can be extracted without an issue, but I struggle to interpret those values associated with my original inputs.</p>\n<p>Besides, for my experiences, when I only use <code>numeric_column</code> in the model, I do notice that the features are ordered alphabetically in the weights layer, which is somewhat weird to me.</p>\n<p><a href=\"https://stackoverflow.com/questions/47282229/tensorflow-inspecting-hash-buckets-for-categorical-and-feature-columns\" rel=\"nofollow\">This answer</a> does not seem very natural, and can be hard to implement when feature number grows or the <strong>hash bins</strong> gets large.</p>", "body_text": "Have I written custom code: NA\nOS Platform and Distribution: Mac\nTensorFlow installed from: pip\nTensorFlow version: 1.11\nBazel version: NA\nCUDA/cuDNN version: NA \nGPU model and memory: NA\nExact command to reproduce: NA \nMobile device: NA\n\nI'm currently running into a problem where I'm not able to fetch features' weight from a linear model in TensorFlow. I know how to do it when the feature columns only consist of numeric_column or categorical_columns_with_vocabulary_list, unless bucketized_column or crossed_column are added additionally, especially because of hash bins introduced in crossed_column.\nThe problem looks like this:\nimport tensorflow as tf\nimport tensorflow.feature_column as fc\n\nx1 = [1,2,3,4,5,6,7,8]\nx2 = [10,20,30,40,50]\n\nx1_fc = fc.bucketized_column('x1', bins=[3,6])\nx2_fc = fc.bucketized_column('x2', bins=[20,40])\nx1_x_x2_fc = fc.indicator_column(fc.crossed_column([x1_fc, x2_fc], 7))\nfeature_columns = [x1_fc, x2_fc, x1_x_x2_fc]\n\n# constuct the linear model\nmodel = tf.estimator.LinearClassifier(feature_columns)\n\nThe question is that when model is trained and ready to do inferences, is there any way to inspect the predictions by looking into the model's each weight of those features (both bucketized and crossed features)? I mean the weights' values can be extracted without an issue, but I struggle to interpret those values associated with my original inputs.\nBesides, for my experiences, when I only use numeric_column in the model, I do notice that the features are ordered alphabetically in the weights layer, which is somewhat weird to me.\nThis answer does not seem very natural, and can be hard to implement when feature number grows or the hash bins gets large.", "body": "```\r\nHave I written custom code: NA\r\nOS Platform and Distribution: Mac\r\nTensorFlow installed from: pip\r\nTensorFlow version: 1.11\r\nBazel version: NA\r\nCUDA/cuDNN version: NA \r\nGPU model and memory: NA\r\nExact command to reproduce: NA \r\nMobile device: NA\r\n```\r\n\r\n\r\nI'm currently running into a problem where I'm not able to fetch features' weight from a linear model in TensorFlow. I know how to do it when the feature columns only consist of ``numeric_column`` or ``categorical_columns_with_vocabulary_list``, unless ``bucketized_column`` or ``crossed_column`` are added additionally, especially because of **hash bins** introduced in ``crossed_column``.\r\n\r\nThe problem looks like this:\r\n\r\n```\r\nimport tensorflow as tf\r\nimport tensorflow.feature_column as fc\r\n\r\nx1 = [1,2,3,4,5,6,7,8]\r\nx2 = [10,20,30,40,50]\r\n\r\nx1_fc = fc.bucketized_column('x1', bins=[3,6])\r\nx2_fc = fc.bucketized_column('x2', bins=[20,40])\r\nx1_x_x2_fc = fc.indicator_column(fc.crossed_column([x1_fc, x2_fc], 7))\r\nfeature_columns = [x1_fc, x2_fc, x1_x_x2_fc]\r\n\r\n# constuct the linear model\r\nmodel = tf.estimator.LinearClassifier(feature_columns)\r\n```\r\n\r\nThe question is that when model is trained and ready to do inferences, is there any way to inspect the predictions by looking into the model's each weight of those features (both bucketized and crossed features)? I mean the weights' values can be extracted without an issue, but I struggle to interpret those values associated with my original inputs.\r\n\r\nBesides, for my experiences, when I only use ``numeric_column`` in the model, I do notice that the features are ordered alphabetically in the weights layer, which is somewhat weird to me.\r\n\r\n[This answer][1] does not seem very natural, and can be hard to implement when feature number grows or the **hash bins** gets large.\r\n\r\n\r\n  [1]: https://stackoverflow.com/questions/47282229/tensorflow-inspecting-hash-buckets-for-categorical-and-feature-columns"}