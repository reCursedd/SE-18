{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/245048486", "html_url": "https://github.com/tensorflow/tensorflow/issues/2514#issuecomment-245048486", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2514", "id": 245048486, "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTA0ODQ4Ng==", "user": {"login": "danijar", "id": 2111293, "node_id": "MDQ6VXNlcjIxMTEyOTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2111293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danijar", "html_url": "https://github.com/danijar", "followers_url": "https://api.github.com/users/danijar/followers", "following_url": "https://api.github.com/users/danijar/following{/other_user}", "gists_url": "https://api.github.com/users/danijar/gists{/gist_id}", "starred_url": "https://api.github.com/users/danijar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danijar/subscriptions", "organizations_url": "https://api.github.com/users/danijar/orgs", "repos_url": "https://api.github.com/users/danijar/repos", "events_url": "https://api.github.com/users/danijar/events{/privacy}", "received_events_url": "https://api.github.com/users/danijar/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-06T18:41:50Z", "updated_at": "2016-09-06T18:41:50Z", "author_association": "MEMBER", "body_html": "<p>Thanks. So I basically need to pass functions into <code>tf.cond</code> that do a <code>tf.identity</code> and perform the desired calls within the <code>tf.control_dependencies</code> of the identity, correct? What about something like this instead:</p>\n<div class=\"highlight highlight-source-python\"><pre>queue <span class=\"pl-k\">=</span> tf.cond(is_training, train_queue, test_queue)\nbatch <span class=\"pl-k\">=</span> queue.dequeue_many(batch_size)</pre></div>", "body_text": "Thanks. So I basically need to pass functions into tf.cond that do a tf.identity and perform the desired calls within the tf.control_dependencies of the identity, correct? What about something like this instead:\nqueue = tf.cond(is_training, train_queue, test_queue)\nbatch = queue.dequeue_many(batch_size)", "body": "Thanks. So I basically need to pass functions into `tf.cond` that do a `tf.identity` and perform the desired calls within the `tf.control_dependencies` of the identity, correct? What about something like this instead:\n\n``` python\nqueue = tf.cond(is_training, train_queue, test_queue)\nbatch = queue.dequeue_many(batch_size)\n```\n"}