{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/244435877", "html_url": "https://github.com/tensorflow/tensorflow/issues/2514#issuecomment-244435877", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2514", "id": 244435877, "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDQzNTg3Nw==", "user": {"login": "danijar", "id": 2111293, "node_id": "MDQ6VXNlcjIxMTEyOTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2111293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danijar", "html_url": "https://github.com/danijar", "followers_url": "https://api.github.com/users/danijar/followers", "following_url": "https://api.github.com/users/danijar/following{/other_user}", "gists_url": "https://api.github.com/users/danijar/gists{/gist_id}", "starred_url": "https://api.github.com/users/danijar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danijar/subscriptions", "organizations_url": "https://api.github.com/users/danijar/orgs", "repos_url": "https://api.github.com/users/danijar/repos", "events_url": "https://api.github.com/users/danijar/events{/privacy}", "received_events_url": "https://api.github.com/users/danijar/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-02T17:19:51Z", "updated_at": "2016-09-02T17:19:51Z", "author_association": "MEMBER", "body_html": "<p>Hi, I am using the same solution that was mentioned here, having a boolean placeholder <code>is_training</code>, and combining the training and evaluation queues using <code>batch = tf.cond(is_training, lambda: training_batch, lambda: testing_batch)</code>. Why would this not work? It seems to work for me, but I didn't check if it always dequeues both batches.</p>", "body_text": "Hi, I am using the same solution that was mentioned here, having a boolean placeholder is_training, and combining the training and evaluation queues using batch = tf.cond(is_training, lambda: training_batch, lambda: testing_batch). Why would this not work? It seems to work for me, but I didn't check if it always dequeues both batches.", "body": "Hi, I am using the same solution that was mentioned here, having a boolean placeholder `is_training`, and combining the training and evaluation queues using `batch = tf.cond(is_training, lambda: training_batch, lambda: testing_batch)`. Why would this not work? It seems to work for me, but I didn't check if it always dequeues both batches.\n"}