{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/223447983", "html_url": "https://github.com/tensorflow/tensorflow/issues/2514#issuecomment-223447983", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2514", "id": 223447983, "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzQ0Nzk4Mw==", "user": {"login": "22csnyder", "id": 10726729, "node_id": "MDQ6VXNlcjEwNzI2NzI5", "avatar_url": "https://avatars3.githubusercontent.com/u/10726729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/22csnyder", "html_url": "https://github.com/22csnyder", "followers_url": "https://api.github.com/users/22csnyder/followers", "following_url": "https://api.github.com/users/22csnyder/following{/other_user}", "gists_url": "https://api.github.com/users/22csnyder/gists{/gist_id}", "starred_url": "https://api.github.com/users/22csnyder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/22csnyder/subscriptions", "organizations_url": "https://api.github.com/users/22csnyder/orgs", "repos_url": "https://api.github.com/users/22csnyder/repos", "events_url": "https://api.github.com/users/22csnyder/events{/privacy}", "received_events_url": "https://api.github.com/users/22csnyder/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-02T23:02:21Z", "updated_at": "2016-06-02T23:05:08Z", "author_association": "NONE", "body_html": "<p>I have exactly the issue that markpwoodward does. If you have tensorflow v0.8 you might be able to use this workaround where by default you stream directly from the train queue except sometimes you pass test data in through a feed_dict. To be fair, I haven't tried it, and I came here looking for a better solution. I imagine it would look like this:</p>\n<pre><code>##Within Model \ninput= tf.place_holder_with_default( training_dequeue, shape)\n\n###Do training until end of epoch\nsess.run( model.update)\n\n###Do test/validate epoch\ntest_batch=sess.run( test_dequeue)\nsess.run( model.accuracy, feed_dict={input: test_batch} )\n\n\n</code></pre>", "body_text": "I have exactly the issue that markpwoodward does. If you have tensorflow v0.8 you might be able to use this workaround where by default you stream directly from the train queue except sometimes you pass test data in through a feed_dict. To be fair, I haven't tried it, and I came here looking for a better solution. I imagine it would look like this:\n##Within Model \ninput= tf.place_holder_with_default( training_dequeue, shape)\n\n###Do training until end of epoch\nsess.run( model.update)\n\n###Do test/validate epoch\ntest_batch=sess.run( test_dequeue)\nsess.run( model.accuracy, feed_dict={input: test_batch} )", "body": "I have exactly the issue that markpwoodward does. If you have tensorflow v0.8 you might be able to use this workaround where by default you stream directly from the train queue except sometimes you pass test data in through a feed_dict. To be fair, I haven't tried it, and I came here looking for a better solution. I imagine it would look like this:\n\n```\n##Within Model \ninput= tf.place_holder_with_default( training_dequeue, shape)\n\n###Do training until end of epoch\nsess.run( model.update)\n\n###Do test/validate epoch\ntest_batch=sess.run( test_dequeue)\nsess.run( model.accuracy, feed_dict={input: test_batch} )\n\n\n```\n"}