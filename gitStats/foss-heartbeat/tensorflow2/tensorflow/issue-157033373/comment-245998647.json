{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/245998647", "html_url": "https://github.com/tensorflow/tensorflow/issues/2514#issuecomment-245998647", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2514", "id": 245998647, "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTk5ODY0Nw==", "user": {"login": "cancan101", "id": 51059, "node_id": "MDQ6VXNlcjUxMDU5", "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cancan101", "html_url": "https://github.com/cancan101", "followers_url": "https://api.github.com/users/cancan101/followers", "following_url": "https://api.github.com/users/cancan101/following{/other_user}", "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}", "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions", "organizations_url": "https://api.github.com/users/cancan101/orgs", "repos_url": "https://api.github.com/users/cancan101/repos", "events_url": "https://api.github.com/users/cancan101/events{/privacy}", "received_events_url": "https://api.github.com/users/cancan101/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-09T18:28:25Z", "updated_at": "2016-09-09T18:28:37Z", "author_association": "CONTRIBUTOR", "body_html": "<p>One solution that I have found is to create a new <code>input_producer</code> each epoch and then to <code>initialize_variables</code> only the new local variable (the <code>epoch</code> count). This works but yields warnings for the old queues:</p>\n<pre><code>[[Node: input_producer_18/fraction_of_32_full_Dequeue = QueueDequeue[_class=[\"loc:@input_producer_18/input_producer/fraction_of_32_full/fraction_of_32_full\"], component_types=[DT_INT32], timeout_ms=-1, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](input_producer_18/input_producer/fraction_of_32_full/fraction_of_32_full)]]\nW tensorflow/core/framework/op_kernel.cc:940] Out of range: FIFOQueue '_37_input_producer_18/input_producer/fraction_of_32_full/fraction_of_32_full' is closed and has insufficient elements (requested 1, current size 0)\n</code></pre>", "body_text": "One solution that I have found is to create a new input_producer each epoch and then to initialize_variables only the new local variable (the epoch count). This works but yields warnings for the old queues:\n[[Node: input_producer_18/fraction_of_32_full_Dequeue = QueueDequeue[_class=[\"loc:@input_producer_18/input_producer/fraction_of_32_full/fraction_of_32_full\"], component_types=[DT_INT32], timeout_ms=-1, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](input_producer_18/input_producer/fraction_of_32_full/fraction_of_32_full)]]\nW tensorflow/core/framework/op_kernel.cc:940] Out of range: FIFOQueue '_37_input_producer_18/input_producer/fraction_of_32_full/fraction_of_32_full' is closed and has insufficient elements (requested 1, current size 0)", "body": "One solution that I have found is to create a new `input_producer` each epoch and then to `initialize_variables` only the new local variable (the `epoch` count). This works but yields warnings for the old queues:\n\n```\n[[Node: input_producer_18/fraction_of_32_full_Dequeue = QueueDequeue[_class=[\"loc:@input_producer_18/input_producer/fraction_of_32_full/fraction_of_32_full\"], component_types=[DT_INT32], timeout_ms=-1, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](input_producer_18/input_producer/fraction_of_32_full/fraction_of_32_full)]]\nW tensorflow/core/framework/op_kernel.cc:940] Out of range: FIFOQueue '_37_input_producer_18/input_producer/fraction_of_32_full/fraction_of_32_full' is closed and has insufficient elements (requested 1, current size 0)\n```\n"}