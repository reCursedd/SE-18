{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/274469834", "html_url": "https://github.com/tensorflow/tensorflow/issues/2514#issuecomment-274469834", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2514", "id": 274469834, "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDQ2OTgzNA==", "user": {"login": "TimZaman", "id": 7721540, "node_id": "MDQ6VXNlcjc3MjE1NDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7721540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimZaman", "html_url": "https://github.com/TimZaman", "followers_url": "https://api.github.com/users/TimZaman/followers", "following_url": "https://api.github.com/users/TimZaman/following{/other_user}", "gists_url": "https://api.github.com/users/TimZaman/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimZaman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimZaman/subscriptions", "organizations_url": "https://api.github.com/users/TimZaman/orgs", "repos_url": "https://api.github.com/users/TimZaman/repos", "events_url": "https://api.github.com/users/TimZaman/events{/privacy}", "received_events_url": "https://api.github.com/users/TimZaman/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-23T11:54:20Z", "updated_at": "2017-01-23T11:57:41Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9762186\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rsethur\">@rsethur</a> Using the <code>make_template()</code> method constrained me too much (also implemented trn and val models with different feeds. You can achieve the same thing with scoping. I.e. something like this where <code>Model</code> is an object setting up your model. Just make sure they share the <code>variable</code>(!) name scope to share their variables.<br>\nThe clear advantage of this is that this will look <em>very</em> neat in the Tensorboard graph.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">with</span> tf.name_scope(const.<span class=\"pl-c1\">STAGE_TRAIN</span>) <span class=\"pl-k\">as</span> stage_scope:\n    train_model <span class=\"pl-k\">=</span> Model(const.<span class=\"pl-c1\">STAGE_TRAIN</span>, <span class=\"pl-c1\">FLAGS</span>.croplen, nclasses, <span class=\"pl-c1\">FLAGS</span>.optimization, <span class=\"pl-c1\">FLAGS</span>.momentum)\n<span class=\"pl-k\">with</span> tf.name_scope(const.<span class=\"pl-c1\">STAGE_VAL</span>) <span class=\"pl-k\">as</span> stage_scope:\n    val_model <span class=\"pl-k\">=</span> Model(const.<span class=\"pl-c1\">STAGE_VAL</span>, <span class=\"pl-c1\">FLAGS</span>.croplen, nclasses)</pre></div>\n<p>You can clearly see they use the same model and its weights, but they have their own data sources:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://cloud.githubusercontent.com/assets/7721540/22203055/c281f7f4-e173-11e6-9869-2c9613339179.png\"><img src=\"https://cloud.githubusercontent.com/assets/7721540/22203055/c281f7f4-e173-11e6-9869-2c9613339179.png\" alt=\"image\" style=\"max-width:100%;\"></a></p>", "body_text": "@rsethur Using the make_template() method constrained me too much (also implemented trn and val models with different feeds. You can achieve the same thing with scoping. I.e. something like this where Model is an object setting up your model. Just make sure they share the variable(!) name scope to share their variables.\nThe clear advantage of this is that this will look very neat in the Tensorboard graph.\nwith tf.name_scope(const.STAGE_TRAIN) as stage_scope:\n    train_model = Model(const.STAGE_TRAIN, FLAGS.croplen, nclasses, FLAGS.optimization, FLAGS.momentum)\nwith tf.name_scope(const.STAGE_VAL) as stage_scope:\n    val_model = Model(const.STAGE_VAL, FLAGS.croplen, nclasses)\nYou can clearly see they use the same model and its weights, but they have their own data sources:", "body": "@rsethur Using the `make_template()` method constrained me too much (also implemented trn and val models with different feeds. You can achieve the same thing with scoping. I.e. something like this where `Model` is an object setting up your model. Just make sure they share the `variable`(!) name scope to share their variables.\r\nThe clear advantage of this is that this will look _very_ neat in the Tensorboard graph.\r\n```py\r\nwith tf.name_scope(const.STAGE_TRAIN) as stage_scope:\r\n    train_model = Model(const.STAGE_TRAIN, FLAGS.croplen, nclasses, FLAGS.optimization, FLAGS.momentum)\r\nwith tf.name_scope(const.STAGE_VAL) as stage_scope:\r\n    val_model = Model(const.STAGE_VAL, FLAGS.croplen, nclasses)\r\n```\r\nYou can clearly see they use the same model and its weights, but they have their own data sources:\r\n![image](https://cloud.githubusercontent.com/assets/7721540/22203055/c281f7f4-e173-11e6-9869-2c9613339179.png)\r\n"}