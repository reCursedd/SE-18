{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/233502521", "html_url": "https://github.com/tensorflow/tensorflow/issues/2514#issuecomment-233502521", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2514", "id": 233502521, "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzUwMjUyMQ==", "user": {"login": "markpwoodward", "id": 6820773, "node_id": "MDQ6VXNlcjY4MjA3NzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/6820773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markpwoodward", "html_url": "https://github.com/markpwoodward", "followers_url": "https://api.github.com/users/markpwoodward/followers", "following_url": "https://api.github.com/users/markpwoodward/following{/other_user}", "gists_url": "https://api.github.com/users/markpwoodward/gists{/gist_id}", "starred_url": "https://api.github.com/users/markpwoodward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markpwoodward/subscriptions", "organizations_url": "https://api.github.com/users/markpwoodward/orgs", "repos_url": "https://api.github.com/users/markpwoodward/repos", "events_url": "https://api.github.com/users/markpwoodward/events{/privacy}", "received_events_url": "https://api.github.com/users/markpwoodward/received_events", "type": "User", "site_admin": false}, "created_at": "2016-07-19T00:59:13Z", "updated_at": "2016-07-19T00:59:13Z", "author_association": "NONE", "body_html": "<p>I ended up doing the switching between validation and train in a python<br>\nproducer thread, and counting the number of elements processed. But I have<br>\nbeen thinking about this a bit, and I am leaning towards a similar (maybe<br>\nsame) idea as yours, where there are two queues (train and validation),<br>\nwith a tf.cond switching between queues, controlled by a placeholder. This<br>\nwould allow for a single model graph (no need for multiple instantiations<br>\nwith shared weights). Funny enough, Rohit Girdhar just emailed the list<br>\nwith a question, and it seems that this is the setup he is using. I copied<br>\nthe relevant portion below.</p>\n<p>\"I'm training a deep network with two data input pipelines, one for<br>\ntraining and one for validation. They use <code>shuffle_batch_join</code> and<br>\n<code>batch_join</code> respectively for parallel data reading. The data stream that<br>\nis used in the network is decided using a <code>tf.cond</code> operation on top of<br>\nthese two pipelines, which is controlled by a <code>is_training</code> placeholder<br>\nthat is set to true for a training iteration and false when doing<br>\nvalidation. I have 4 threads for reading training data and 1 thread for<br>\nvalidation...\"</p>\n<p>On Mon, Jul 18, 2016 at 12:21 PM, Christian <a href=\"mailto:notifications@github.com\">notifications@github.com</a><br>\nwrote:</p>\n<blockquote>\n<p>Picking up this old thread, a question: why don't you use make_template<br>\nand have three queues feeding into three automatically shared model graphs?<br>\nTrue, you still need to keep track when an epoch ends and switch over to<br>\nthe e.g. validation queue, but this can be done rather simple by either<br>\ncounting or have the queues return a third element that indicates one full<br>\npass through the data (training or validation data) is done. Or is this<br>\napproach considered harmful in some way?</p>\n<p>\u2014<br>\nYou are receiving this because you authored the thread.<br>\nReply to this email directly, view it on GitHub<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"157033373\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/2514\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/2514/hovercard?comment_id=233430140&amp;comment_type=issue_comment\" href=\"https://github.com/tensorflow/tensorflow/issues/2514#issuecomment-233430140\">#2514 (comment)</a>,<br>\nor mute the thread<br>\n<a href=\"https://github.com/notifications/unsubscribe-auth/AGgTpS5Jyv_NEidwew9thKg9x5KTJAiRks5qW9IhgaJpZM4Inwby\">https://github.com/notifications/unsubscribe-auth/AGgTpS5Jyv_NEidwew9thKg9x5KTJAiRks5qW9IhgaJpZM4Inwby</a><br>\n.</p>\n</blockquote>", "body_text": "I ended up doing the switching between validation and train in a python\nproducer thread, and counting the number of elements processed. But I have\nbeen thinking about this a bit, and I am leaning towards a similar (maybe\nsame) idea as yours, where there are two queues (train and validation),\nwith a tf.cond switching between queues, controlled by a placeholder. This\nwould allow for a single model graph (no need for multiple instantiations\nwith shared weights). Funny enough, Rohit Girdhar just emailed the list\nwith a question, and it seems that this is the setup he is using. I copied\nthe relevant portion below.\n\"I'm training a deep network with two data input pipelines, one for\ntraining and one for validation. They use shuffle_batch_join and\nbatch_join respectively for parallel data reading. The data stream that\nis used in the network is decided using a tf.cond operation on top of\nthese two pipelines, which is controlled by a is_training placeholder\nthat is set to true for a training iteration and false when doing\nvalidation. I have 4 threads for reading training data and 1 thread for\nvalidation...\"\nOn Mon, Jul 18, 2016 at 12:21 PM, Christian notifications@github.com\nwrote:\n\nPicking up this old thread, a question: why don't you use make_template\nand have three queues feeding into three automatically shared model graphs?\nTrue, you still need to keep track when an epoch ends and switch over to\nthe e.g. validation queue, but this can be done rather simple by either\ncounting or have the queues return a third element that indicates one full\npass through the data (training or validation data) is done. Or is this\napproach considered harmful in some way?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\n#2514 (comment),\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AGgTpS5Jyv_NEidwew9thKg9x5KTJAiRks5qW9IhgaJpZM4Inwby\n.", "body": "I ended up doing the switching between validation and train in a python\nproducer thread, and counting the number of elements processed. But I have\nbeen thinking about this a bit, and I am leaning towards a similar (maybe\nsame) idea as yours, where there are two queues (train and validation),\nwith a tf.cond switching between queues, controlled by a placeholder. This\nwould allow for a single model graph (no need for multiple instantiations\nwith shared weights). Funny enough, Rohit Girdhar just emailed the list\nwith a question, and it seems that this is the setup he is using. I copied\nthe relevant portion below.\n\n\"I'm training a deep network with two data input pipelines, one for\ntraining and one for validation. They use `shuffle_batch_join` and\n`batch_join` respectively for parallel data reading. The data stream that\nis used in the network is decided using a `tf.cond` operation on top of\nthese two pipelines, which is controlled by a `is_training` placeholder\nthat is set to true for a training iteration and false when doing\nvalidation. I have 4 threads for reading training data and 1 thread for\nvalidation...\"\n\nOn Mon, Jul 18, 2016 at 12:21 PM, Christian notifications@github.com\nwrote:\n\n> Picking up this old thread, a question: why don't you use make_template\n> and have three queues feeding into three automatically shared model graphs?\n> True, you still need to keep track when an epoch ends and switch over to\n> the e.g. validation queue, but this can be done rather simple by either\n> counting or have the queues return a third element that indicates one full\n> pass through the data (training or validation data) is done. Or is this\n> approach considered harmful in some way?\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/tensorflow/tensorflow/issues/2514#issuecomment-233430140,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AGgTpS5Jyv_NEidwew9thKg9x5KTJAiRks5qW9IhgaJpZM4Inwby\n> .\n"}