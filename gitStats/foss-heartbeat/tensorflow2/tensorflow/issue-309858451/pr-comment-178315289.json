{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/178315289", "pull_request_review_id": 108362012, "id": 178315289, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODMxNTI4OQ==", "diff_hunk": "@@ -306,6 +306,7 @@ def wasserstein_gradient_penalty(\n     discriminator_scope,\n     epsilon=1e-10,\n     target=1.0,\n+    mode='two_sided',", "path": "tensorflow/contrib/gan/python/losses/python/losses_impl.py", "position": null, "original_position": 4, "commit_id": "63fd5f6cef075044504dbf0a2bf86bc59bcf1fd4", "original_commit_id": "85e7c9fdc226823abd5fdf1ba04f17896fa9b522", "user": {"login": "joel-shor", "id": 6020988, "node_id": "MDQ6VXNlcjYwMjA5ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/6020988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joel-shor", "html_url": "https://github.com/joel-shor", "followers_url": "https://api.github.com/users/joel-shor/followers", "following_url": "https://api.github.com/users/joel-shor/following{/other_user}", "gists_url": "https://api.github.com/users/joel-shor/gists{/gist_id}", "starred_url": "https://api.github.com/users/joel-shor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joel-shor/subscriptions", "organizations_url": "https://api.github.com/users/joel-shor/orgs", "repos_url": "https://api.github.com/users/joel-shor/repos", "events_url": "https://api.github.com/users/joel-shor/events{/privacy}", "received_events_url": "https://api.github.com/users/joel-shor/received_events", "type": "User", "site_admin": false}, "body": "I'm pretty strongly in favor of a boolean, since I think there's a high likelihood that we won't need to bundle more features into this function, and if we do it might not be for a while. I prefer to think of the loss functions as atomic, which new functionality added via new functions (rather than modifying old ones). Your code is an obvious exception since it's such a small variant.\r\n\r\nIf you remain unconvinced, feel free to leave it. Otherwise, please switch the option here and the one in `train.py` to a boolean.\r\n\r\nThanks!", "created_at": "2018-03-30T15:47:08Z", "updated_at": "2018-03-30T16:50:32Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/18098#discussion_r178315289", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18098", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/178315289"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/18098#discussion_r178315289"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18098"}}, "body_html": "<p>I'm pretty strongly in favor of a boolean, since I think there's a high likelihood that we won't need to bundle more features into this function, and if we do it might not be for a while. I prefer to think of the loss functions as atomic, which new functionality added via new functions (rather than modifying old ones). Your code is an obvious exception since it's such a small variant.</p>\n<p>If you remain unconvinced, feel free to leave it. Otherwise, please switch the option here and the one in <code>train.py</code> to a boolean.</p>\n<p>Thanks!</p>", "body_text": "I'm pretty strongly in favor of a boolean, since I think there's a high likelihood that we won't need to bundle more features into this function, and if we do it might not be for a while. I prefer to think of the loss functions as atomic, which new functionality added via new functions (rather than modifying old ones). Your code is an obvious exception since it's such a small variant.\nIf you remain unconvinced, feel free to leave it. Otherwise, please switch the option here and the one in train.py to a boolean.\nThanks!", "in_reply_to_id": 178150510}