{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/178173737", "pull_request_review_id": 108194390, "id": 178173737, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODE3MzczNw==", "diff_hunk": "@@ -377,9 +383,12 @@ def wasserstein_gradient_penalty(\n     # For numerical stability, add epsilon to the sum before taking the square\n     # root. Note tf.norm does not add epsilon.\n     slopes = math_ops.sqrt(gradient_squares + epsilon)\n-    penalties = math_ops.square(slopes / target - 1.0)\n+    penalties = slopes / target - 1.0\n+    if mode == 'one_sided':\n+        penalties = clip_ops.clip_by_value(penalties, 0, np.infty)", "path": "tensorflow/contrib/gan/python/losses/python/losses_impl.py", "position": null, "original_position": 34, "commit_id": "63fd5f6cef075044504dbf0a2bf86bc59bcf1fd4", "original_commit_id": "85e7c9fdc226823abd5fdf1ba04f17896fa9b522", "user": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "body": "Yes, maximum would be more efficient. clip_by_value is just a Python wrapper that calls minimum and maximum separately :-)", "created_at": "2018-03-29T20:33:31Z", "updated_at": "2018-03-30T16:50:32Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/18098#discussion_r178173737", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18098", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/178173737"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/18098#discussion_r178173737"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18098"}}, "body_html": "<p>Yes, maximum would be more efficient. clip_by_value is just a Python wrapper that calls minimum and maximum separately :-)</p>", "body_text": "Yes, maximum would be more efficient. clip_by_value is just a Python wrapper that calls minimum and maximum separately :-)", "in_reply_to_id": 178149973}