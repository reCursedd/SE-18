{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/248140461", "html_url": "https://github.com/tensorflow/tensorflow/issues/4465#issuecomment-248140461", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4465", "id": 248140461, "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODE0MDQ2MQ==", "user": {"login": "vrv", "id": 463737, "node_id": "MDQ6VXNlcjQ2MzczNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/463737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrv", "html_url": "https://github.com/vrv", "followers_url": "https://api.github.com/users/vrv/followers", "following_url": "https://api.github.com/users/vrv/following{/other_user}", "gists_url": "https://api.github.com/users/vrv/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrv/subscriptions", "organizations_url": "https://api.github.com/users/vrv/orgs", "repos_url": "https://api.github.com/users/vrv/repos", "events_url": "https://api.github.com/users/vrv/events{/privacy}", "received_events_url": "https://api.github.com/users/vrv/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-19T21:59:10Z", "updated_at": "2016-09-19T21:59:10Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I think the example implementations might be one GPU per worker, but nothing prevents you from defining a worker having 8 GPUs, replicating the model across each GPU in a worker, averaging gradients before sending it to parameter servers.  TF is low-level enough that these are all possible.  To make the system easy to understand, the examples are simpler than what is possible.</p>\n<p>I suspect higher-level libraries will be added over time that canonicalizes these types of model deployments that are becoming more popular.</p>", "body_text": "I think the example implementations might be one GPU per worker, but nothing prevents you from defining a worker having 8 GPUs, replicating the model across each GPU in a worker, averaging gradients before sending it to parameter servers.  TF is low-level enough that these are all possible.  To make the system easy to understand, the examples are simpler than what is possible.\nI suspect higher-level libraries will be added over time that canonicalizes these types of model deployments that are becoming more popular.", "body": "I think the example implementations might be one GPU per worker, but nothing prevents you from defining a worker having 8 GPUs, replicating the model across each GPU in a worker, averaging gradients before sending it to parameter servers.  TF is low-level enough that these are all possible.  To make the system easy to understand, the examples are simpler than what is possible.\n\nI suspect higher-level libraries will be added over time that canonicalizes these types of model deployments that are becoming more popular.\n"}