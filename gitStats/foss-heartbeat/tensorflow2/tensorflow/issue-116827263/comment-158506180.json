{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/158506180", "html_url": "https://github.com/tensorflow/tensorflow/issues/206#issuecomment-158506180", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/206", "id": 158506180, "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODUwNjE4MA==", "user": {"login": "avostryakov", "id": 174194, "node_id": "MDQ6VXNlcjE3NDE5NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/174194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avostryakov", "html_url": "https://github.com/avostryakov", "followers_url": "https://api.github.com/users/avostryakov/followers", "following_url": "https://api.github.com/users/avostryakov/following{/other_user}", "gists_url": "https://api.github.com/users/avostryakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/avostryakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avostryakov/subscriptions", "organizations_url": "https://api.github.com/users/avostryakov/orgs", "repos_url": "https://api.github.com/users/avostryakov/repos", "events_url": "https://api.github.com/users/avostryakov/events{/privacy}", "received_events_url": "https://api.github.com/users/avostryakov/received_events", "type": "User", "site_admin": false}, "created_at": "2015-11-20T19:45:57Z", "updated_at": "2015-11-20T19:45:57Z", "author_association": "NONE", "body_html": "<p>If I understand correctly the following code is exactly what is needed for cross-entropy loss function<br>\nindexes = tf.constant([1, 2])<br>\nfoo[:, indexes] # [2, 6]</p>\n<p>If we will have this kind of indexing we can write:<br>\ncost = -tf.reduce_sum(tf.log(network_output[:, targets]))</p>\n<p>, where targets is a vector of class's indexes instead of</p>\n<p>cost = -tf.reduce_sum(targets*tf.log(network_output))</p>\n<p>, where targets is a sparse matrix</p>\n<p>Am I correct?</p>", "body_text": "If I understand correctly the following code is exactly what is needed for cross-entropy loss function\nindexes = tf.constant([1, 2])\nfoo[:, indexes] # [2, 6]\nIf we will have this kind of indexing we can write:\ncost = -tf.reduce_sum(tf.log(network_output[:, targets]))\n, where targets is a vector of class's indexes instead of\ncost = -tf.reduce_sum(targets*tf.log(network_output))\n, where targets is a sparse matrix\nAm I correct?", "body": "If I understand correctly the following code is exactly what is needed for cross-entropy loss function\nindexes = tf.constant([1, 2])\nfoo[:, indexes] # [2, 6]\n\nIf we will have this kind of indexing we can write:\ncost = -tf.reduce_sum(tf.log(network_output[:, targets]))\n\n, where targets is a vector of class's indexes instead of\n\ncost = -tf.reduce_sum(targets*tf.log(network_output))\n\n, where targets is a sparse matrix\n\nAm I correct?\n"}