{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/218866771", "html_url": "https://github.com/tensorflow/tensorflow/issues/206#issuecomment-218866771", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/206", "id": 218866771, "node_id": "MDEyOklzc3VlQ29tbWVudDIxODg2Njc3MQ==", "user": {"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}, "created_at": "2016-05-12T19:52:58Z", "updated_at": "2016-05-12T19:52:58Z", "author_association": "CONTRIBUTOR", "body_html": "<p>For <code>__setitem__</code>: we can't use it directly because it doesn't return a value, and usually you need the return value of assignments (to make sure they execute).  However, we could make <code>x[i].assign(y)</code> work with a bit of class trickery.</p>", "body_text": "For __setitem__: we can't use it directly because it doesn't return a value, and usually you need the return value of assignments (to make sure they execute).  However, we could make x[i].assign(y) work with a bit of class trickery.", "body": "For `__setitem__`: we can't use it directly because it doesn't return a value, and usually you need the return value of assignments (to make sure they execute).  However, we could make `x[i].assign(y)` work with a bit of class trickery.\n"}