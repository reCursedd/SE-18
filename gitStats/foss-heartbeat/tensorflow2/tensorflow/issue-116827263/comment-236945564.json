{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/236945564", "html_url": "https://github.com/tensorflow/tensorflow/issues/206#issuecomment-236945564", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/206", "id": 236945564, "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjk0NTU2NA==", "user": {"login": "Fenugreek", "id": 3323801, "node_id": "MDQ6VXNlcjMzMjM4MDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3323801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Fenugreek", "html_url": "https://github.com/Fenugreek", "followers_url": "https://api.github.com/users/Fenugreek/followers", "following_url": "https://api.github.com/users/Fenugreek/following{/other_user}", "gists_url": "https://api.github.com/users/Fenugreek/gists{/gist_id}", "starred_url": "https://api.github.com/users/Fenugreek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Fenugreek/subscriptions", "organizations_url": "https://api.github.com/users/Fenugreek/orgs", "repos_url": "https://api.github.com/users/Fenugreek/repos", "events_url": "https://api.github.com/users/Fenugreek/events{/privacy}", "received_events_url": "https://api.github.com/users/Fenugreek/received_events", "type": "User", "site_admin": false}, "created_at": "2016-08-02T15:42:16Z", "updated_at": "2016-08-02T15:42:16Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I am looking to do a max_pool that doesn't reduce the input tensor but replaces the non-max elements with zeros. Currently using a clumsy and slow workaround using space_to_depth, argmax, onehot, select and several transposes/reshapes.</p>\n<p>Implementing numpy-like indexing for assignment will help simplify this, so I'd like to add my vote for this feature. If anyone has any other ideas on how I can go about this, let me know, Thanks.</p>", "body_text": "I am looking to do a max_pool that doesn't reduce the input tensor but replaces the non-max elements with zeros. Currently using a clumsy and slow workaround using space_to_depth, argmax, onehot, select and several transposes/reshapes.\nImplementing numpy-like indexing for assignment will help simplify this, so I'd like to add my vote for this feature. If anyone has any other ideas on how I can go about this, let me know, Thanks.", "body": "I am looking to do a max_pool that doesn't reduce the input tensor but replaces the non-max elements with zeros. Currently using a clumsy and slow workaround using space_to_depth, argmax, onehot, select and several transposes/reshapes.\n\nImplementing numpy-like indexing for assignment will help simplify this, so I'd like to add my vote for this feature. If anyone has any other ideas on how I can go about this, let me know, Thanks.\n"}