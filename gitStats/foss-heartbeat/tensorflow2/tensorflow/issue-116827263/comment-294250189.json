{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/294250189", "html_url": "https://github.com/tensorflow/tensorflow/issues/206#issuecomment-294250189", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/206", "id": 294250189, "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDI1MDE4OQ==", "user": {"login": "danijar", "id": 2111293, "node_id": "MDQ6VXNlcjIxMTEyOTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2111293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danijar", "html_url": "https://github.com/danijar", "followers_url": "https://api.github.com/users/danijar/followers", "following_url": "https://api.github.com/users/danijar/following{/other_user}", "gists_url": "https://api.github.com/users/danijar/gists{/gist_id}", "starred_url": "https://api.github.com/users/danijar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danijar/subscriptions", "organizations_url": "https://api.github.com/users/danijar/orgs", "repos_url": "https://api.github.com/users/danijar/repos", "events_url": "https://api.github.com/users/danijar/events{/privacy}", "received_events_url": "https://api.github.com/users/danijar/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-14T22:41:51Z", "updated_at": "2017-04-14T22:41:51Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5229267\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/MInner\">@MInner</a> You're right, we can use transpose to to gather along any dimension:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">gather_along_axis</span>(<span class=\"pl-smi\">data</span>, <span class=\"pl-smi\">indices</span>, <span class=\"pl-smi\">axis</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0</span>):\n  <span class=\"pl-k\">if</span> <span class=\"pl-k\">not</span> axis:\n    <span class=\"pl-k\">return</span> tf.gather(data, indices)\n  rank <span class=\"pl-k\">=</span> data.shape.ndims\n  perm <span class=\"pl-k\">=</span> [axis] <span class=\"pl-k\">+</span> <span class=\"pl-c1\">list</span>(<span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">1</span>, axis)) <span class=\"pl-k\">+</span> [<span class=\"pl-c1\">0</span>] <span class=\"pl-k\">+</span> <span class=\"pl-c1\">list</span>(<span class=\"pl-c1\">range</span>(axis <span class=\"pl-k\">+</span> <span class=\"pl-c1\">1</span>, rank))\n  <span class=\"pl-k\">return</span> tf.transpose(tf.gather(tf.transpose(data, perm), indices), perm)</pre></div>\n<p>This is slower than my snipped above though, as it needs to rotate the whole data array in memory instead of computing the correct indices into the original tensor.</p>", "body_text": "@MInner You're right, we can use transpose to to gather along any dimension:\ndef gather_along_axis(data, indices, axis=0):\n  if not axis:\n    return tf.gather(data, indices)\n  rank = data.shape.ndims\n  perm = [axis] + list(range(1, axis)) + [0] + list(range(axis + 1, rank))\n  return tf.transpose(tf.gather(tf.transpose(data, perm), indices), perm)\nThis is slower than my snipped above though, as it needs to rotate the whole data array in memory instead of computing the correct indices into the original tensor.", "body": "@MInner You're right, we can use transpose to to gather along any dimension:\r\n\r\n```python\r\ndef gather_along_axis(data, indices, axis=0):\r\n  if not axis:\r\n    return tf.gather(data, indices)\r\n  rank = data.shape.ndims\r\n  perm = [axis] + list(range(1, axis)) + [0] + list(range(axis + 1, rank))\r\n  return tf.transpose(tf.gather(tf.transpose(data, perm), indices), perm)\r\n```\r\n\r\nThis is slower than my snipped above though, as it needs to rotate the whole data array in memory instead of computing the correct indices into the original tensor."}