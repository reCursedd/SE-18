{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/338103956", "html_url": "https://github.com/tensorflow/tensorflow/issues/206#issuecomment-338103956", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/206", "id": 338103956, "node_id": "MDEyOklzc3VlQ29tbWVudDMzODEwMzk1Ng==", "user": {"login": "ddmbr", "id": 752136, "node_id": "MDQ6VXNlcjc1MjEzNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/752136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddmbr", "html_url": "https://github.com/ddmbr", "followers_url": "https://api.github.com/users/ddmbr/followers", "following_url": "https://api.github.com/users/ddmbr/following{/other_user}", "gists_url": "https://api.github.com/users/ddmbr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddmbr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddmbr/subscriptions", "organizations_url": "https://api.github.com/users/ddmbr/orgs", "repos_url": "https://api.github.com/users/ddmbr/repos", "events_url": "https://api.github.com/users/ddmbr/events{/privacy}", "received_events_url": "https://api.github.com/users/ddmbr/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-20T04:37:02Z", "updated_at": "2017-10-20T04:37:02Z", "author_association": "NONE", "body_html": "<p>Hi,</p>\n<p>I just saw <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=72538\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/nova77\">@nova77</a> 's code above,</p>\n<div class=\"highlight highlight-source-python\"><pre>x <span class=\"pl-k\">=</span> tf.constant([[<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>],\n                 [<span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">6</span>],\n                 [<span class=\"pl-c1\">7</span>, <span class=\"pl-c1\">8</span>, <span class=\"pl-c1\">9</span>]])\nidx <span class=\"pl-k\">=</span> tf.constant([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">2</span>])\nidx_flattened <span class=\"pl-k\">=</span> tf.range(<span class=\"pl-c1\">0</span>, x.shape[<span class=\"pl-c1\">0</span>]) <span class=\"pl-k\">*</span> x.shape[<span class=\"pl-c1\">1</span>] <span class=\"pl-k\">+</span> idx\ny <span class=\"pl-k\">=</span> tf.gather(tf.reshape(x, [<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>]),  <span class=\"pl-c\"><span class=\"pl-c\">#</span> flatten input</span>\n              idx_flattened)  <span class=\"pl-c\"><span class=\"pl-c\">#</span> use flattened indices</span>\n\n<span class=\"pl-k\">with</span> tf.Session(<span class=\"pl-s\"><span class=\"pl-pds\">'</span><span class=\"pl-pds\">'</span></span>):\n  <span class=\"pl-c1\">print</span> y.eval()  <span class=\"pl-c\"><span class=\"pl-c\">#</span> [2 4 9]</span></pre></div>\n<p>Do we still need this workaround? Or is there already a solution (or an issue for me to track)? Thanks!</p>", "body_text": "Hi,\nI just saw @nova77 's code above,\nx = tf.constant([[1, 2, 3],\n                 [4, 5, 6],\n                 [7, 8, 9]])\nidx = tf.constant([1, 0, 2])\nidx_flattened = tf.range(0, x.shape[0]) * x.shape[1] + idx\ny = tf.gather(tf.reshape(x, [-1]),  # flatten input\n              idx_flattened)  # use flattened indices\n\nwith tf.Session(''):\n  print y.eval()  # [2 4 9]\nDo we still need this workaround? Or is there already a solution (or an issue for me to track)? Thanks!", "body": "Hi,\r\n\r\nI just saw @nova77 's code above,\r\n\r\n```python\r\nx = tf.constant([[1, 2, 3],\r\n                 [4, 5, 6],\r\n                 [7, 8, 9]])\r\nidx = tf.constant([1, 0, 2])\r\nidx_flattened = tf.range(0, x.shape[0]) * x.shape[1] + idx\r\ny = tf.gather(tf.reshape(x, [-1]),  # flatten input\r\n              idx_flattened)  # use flattened indices\r\n\r\nwith tf.Session(''):\r\n  print y.eval()  # [2 4 9]\r\n```\r\n\r\nDo we still need this workaround? Or is there already a solution (or an issue for me to track)? Thanks!"}