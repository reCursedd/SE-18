{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/323595627", "html_url": "https://github.com/tensorflow/tensorflow/issues/12414#issuecomment-323595627", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12414", "id": 323595627, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzU5NTYyNw==", "user": {"login": "georgesterpu", "id": 6018251, "node_id": "MDQ6VXNlcjYwMTgyNTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/6018251?v=4", "gravatar_id": "", "url": "https://api.github.com/users/georgesterpu", "html_url": "https://github.com/georgesterpu", "followers_url": "https://api.github.com/users/georgesterpu/followers", "following_url": "https://api.github.com/users/georgesterpu/following{/other_user}", "gists_url": "https://api.github.com/users/georgesterpu/gists{/gist_id}", "starred_url": "https://api.github.com/users/georgesterpu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/georgesterpu/subscriptions", "organizations_url": "https://api.github.com/users/georgesterpu/orgs", "repos_url": "https://api.github.com/users/georgesterpu/repos", "events_url": "https://api.github.com/users/georgesterpu/events{/privacy}", "received_events_url": "https://api.github.com/users/georgesterpu/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-20T16:23:04Z", "updated_at": "2017-08-20T16:29:40Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I get it at the end of each training epoch.<br>\nIf using BeamSearchDecoder with attention, it gets printed multiple times, depending on the beam width.</p>\n<p>One workaround that I could find is stopping the loop after the last batch, if I know in advance their number (instead of using the infinite loop and stopping on exception)</p>\n<p>Here is the content of my <code>_parse_function()</code>, couldn't make it work as a tf.py_func though, with the tuple trick indicated by <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a>:</p>\n<pre><code>def _parse_function(example, feature_size):\n\n    context_features = {\n        \"input_length\": tf.FixedLenFeature(shape=[], dtype=tf.int64),\n        \"labels_length\": tf.FixedLenFeature(shape=[], dtype=tf.int64),\n    }\n    sequence_features = {\n        \"inputs\": tf.FixedLenSequenceFeature(shape=[feature_size], dtype=tf.float32),\n        \"labels\": tf.FixedLenSequenceFeature(shape=[], dtype=tf.int64)\n    }\n\n    context_parsed, sequence_parsed = tf.parse_single_sequence_example(\n        serialized=example,\n        context_features=context_features,\n        sequence_features=sequence_features\n    )\n\n    return sequence_parsed[\"inputs\"], context_parsed[\"input_length\"], \\\n           sequence_parsed[\"labels\"], context_parsed[\"labels_length\"]\n\n</code></pre>", "body_text": "I get it at the end of each training epoch.\nIf using BeamSearchDecoder with attention, it gets printed multiple times, depending on the beam width.\nOne workaround that I could find is stopping the loop after the last batch, if I know in advance their number (instead of using the infinite loop and stopping on exception)\nHere is the content of my _parse_function(), couldn't make it work as a tf.py_func though, with the tuple trick indicated by @mrry:\ndef _parse_function(example, feature_size):\n\n    context_features = {\n        \"input_length\": tf.FixedLenFeature(shape=[], dtype=tf.int64),\n        \"labels_length\": tf.FixedLenFeature(shape=[], dtype=tf.int64),\n    }\n    sequence_features = {\n        \"inputs\": tf.FixedLenSequenceFeature(shape=[feature_size], dtype=tf.float32),\n        \"labels\": tf.FixedLenSequenceFeature(shape=[], dtype=tf.int64)\n    }\n\n    context_parsed, sequence_parsed = tf.parse_single_sequence_example(\n        serialized=example,\n        context_features=context_features,\n        sequence_features=sequence_features\n    )\n\n    return sequence_parsed[\"inputs\"], context_parsed[\"input_length\"], \\\n           sequence_parsed[\"labels\"], context_parsed[\"labels_length\"]", "body": "I get it at the end of each training epoch.\r\nIf using BeamSearchDecoder with attention, it gets printed multiple times, depending on the beam width.\r\n\r\nOne workaround that I could find is stopping the loop after the last batch, if I know in advance their number (instead of using the infinite loop and stopping on exception)\r\n\r\nHere is the content of my `_parse_function()`, couldn't make it work as a tf.py_func though, with the tuple trick indicated by @mrry:\r\n\r\n```\r\ndef _parse_function(example, feature_size):\r\n\r\n    context_features = {\r\n        \"input_length\": tf.FixedLenFeature(shape=[], dtype=tf.int64),\r\n        \"labels_length\": tf.FixedLenFeature(shape=[], dtype=tf.int64),\r\n    }\r\n    sequence_features = {\r\n        \"inputs\": tf.FixedLenSequenceFeature(shape=[feature_size], dtype=tf.float32),\r\n        \"labels\": tf.FixedLenSequenceFeature(shape=[], dtype=tf.int64)\r\n    }\r\n\r\n    context_parsed, sequence_parsed = tf.parse_single_sequence_example(\r\n        serialized=example,\r\n        context_features=context_features,\r\n        sequence_features=sequence_features\r\n    )\r\n\r\n    return sequence_parsed[\"inputs\"], context_parsed[\"input_length\"], \\\r\n           sequence_parsed[\"labels\"], context_parsed[\"labels_length\"]\r\n\r\n```"}