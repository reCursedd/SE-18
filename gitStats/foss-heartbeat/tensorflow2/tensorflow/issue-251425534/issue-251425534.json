{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12414", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12414/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12414/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12414/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12414", "id": 251425534, "node_id": "MDU6SXNzdWUyNTE0MjU1MzQ=", "number": 12414, "title": "tf Dataset / Iterator console flood when using CUDA builds", "user": {"login": "georgesterpu", "id": 6018251, "node_id": "MDQ6VXNlcjYwMTgyNTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/6018251?v=4", "gravatar_id": "", "url": "https://api.github.com/users/georgesterpu", "html_url": "https://github.com/georgesterpu", "followers_url": "https://api.github.com/users/georgesterpu/followers", "following_url": "https://api.github.com/users/georgesterpu/following{/other_user}", "gists_url": "https://api.github.com/users/georgesterpu/gists{/gist_id}", "starred_url": "https://api.github.com/users/georgesterpu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/georgesterpu/subscriptions", "organizations_url": "https://api.github.com/users/georgesterpu/orgs", "repos_url": "https://api.github.com/users/georgesterpu/repos", "events_url": "https://api.github.com/users/georgesterpu/events{/privacy}", "received_events_url": "https://api.github.com/users/georgesterpu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 48, "created_at": "2017-08-19T13:34:25Z", "updated_at": "2018-10-17T07:42:04Z", "closed_at": "2017-11-16T20:34:10Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li>**Have I written custom code **: Yes</li>\n<li>**OS Platform and Distribution **: Manjaro linux, Arch Linux repo</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li>**TensorFlow version **: 1.3.0</li>\n<li><strong>Python version</strong>: 3.6.2</li>\n<li>**Bazel version **:</li>\n<li><strong>CUDA/cuDNN version</strong>: cuda 8.0.61, cudnn 7.0.1 &amp; cudnn6 6.0.21</li>\n<li><strong>GPU model and memory</strong>: Nvidia 1080 GTX 8GB</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<h3>The problem</h3>\n<p>When using a tensorflow wheel built with cuda support, my app prints the following warning message at the end of a training epoch:</p>\n<p><code>2017-08-19 14:01:18.214060: W tensorflow/core/framework/op_kernel.cc:1192] Out of range: End of sequence [[Node: IteratorGetNext = IteratorGetNext[output_shapes=[[?,?,132], [?], [?,?], [?]], output_types=[DT_FLOAT, DT_INT64, DT_INT64, DT_INT64], _device=\"/job:localhost/replica:0/task:0/cpu:0\"](Iterator)]]</code></p>\n<p>The code trains a seq2seq model, and I assume the message gets printed somewhere downstream of seq2seq.dynamic_decode. The message still gets printed even when the NN cells are not wrapped with a tf.contrib.rnn.DeviceWrapper with device field indicating a GPU, only works fine on non-cuda builds.</p>\n<p>All of this happens while the code is protected with the try/except statements:</p>\n<pre><code>        for epoch in range(num_epochs):\n            session.run(iterator.initializer)\n            while True:\n                try:\n                    session.run([operation])\n                except tf.errors.OutOfRangeError:\n                    break\n</code></pre>\n<p>Now the only cheeky thing is that I am using the binaries from Arch Linux repositories, but these are far from being dodgy.<br>\n<a href=\"https://www.archlinux.org/packages/community/x86_64/python-tensorflow/\" rel=\"nofollow\">python-tensorflow</a><br>\n<a href=\"https://www.archlinux.org/packages/community/x86_64/python-tensorflow-cuda/\" rel=\"nofollow\">python-tensorflow-cuda</a><br>\n<a href=\"https://git.archlinux.org/svntogit/community.git/tree/trunk/PKGBUILD?h=packages/tensorflow\" rel=\"nofollow\">The build script</a></p>\n<p>This problem was in tensorflow 1.2 and persists in tensorflow 1.3.<br>\nAlso tested on a laptop without dedicated gpu, but same OS and packages, works fine.</p>", "body_text": "System information\n\n**Have I written custom code **: Yes\n**OS Platform and Distribution **: Manjaro linux, Arch Linux repo\nTensorFlow installed from (source or binary): binary\n**TensorFlow version **: 1.3.0\nPython version: 3.6.2\n**Bazel version **:\nCUDA/cuDNN version: cuda 8.0.61, cudnn 7.0.1 & cudnn6 6.0.21\nGPU model and memory: Nvidia 1080 GTX 8GB\nExact command to reproduce:\n\nThe problem\nWhen using a tensorflow wheel built with cuda support, my app prints the following warning message at the end of a training epoch:\n2017-08-19 14:01:18.214060: W tensorflow/core/framework/op_kernel.cc:1192] Out of range: End of sequence [[Node: IteratorGetNext = IteratorGetNext[output_shapes=[[?,?,132], [?], [?,?], [?]], output_types=[DT_FLOAT, DT_INT64, DT_INT64, DT_INT64], _device=\"/job:localhost/replica:0/task:0/cpu:0\"](Iterator)]]\nThe code trains a seq2seq model, and I assume the message gets printed somewhere downstream of seq2seq.dynamic_decode. The message still gets printed even when the NN cells are not wrapped with a tf.contrib.rnn.DeviceWrapper with device field indicating a GPU, only works fine on non-cuda builds.\nAll of this happens while the code is protected with the try/except statements:\n        for epoch in range(num_epochs):\n            session.run(iterator.initializer)\n            while True:\n                try:\n                    session.run([operation])\n                except tf.errors.OutOfRangeError:\n                    break\n\nNow the only cheeky thing is that I am using the binaries from Arch Linux repositories, but these are far from being dodgy.\npython-tensorflow\npython-tensorflow-cuda\nThe build script\nThis problem was in tensorflow 1.2 and persists in tensorflow 1.3.\nAlso tested on a laptop without dedicated gpu, but same OS and packages, works fine.", "body": "### System information\r\n- **Have I written custom code **: Yes\r\n- **OS Platform and Distribution **: Manjaro linux, Arch Linux repo\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version **: 1.3.0\r\n- **Python version**: 3.6.2\r\n- **Bazel version **:\r\n- **CUDA/cuDNN version**: cuda 8.0.61, cudnn 7.0.1 & cudnn6 6.0.21\r\n- **GPU model and memory**: Nvidia 1080 GTX 8GB\r\n- **Exact command to reproduce**:\r\n\r\n### The problem\r\n\r\nWhen using a tensorflow wheel built with cuda support, my app prints the following warning message at the end of a training epoch:\r\n\r\n`2017-08-19 14:01:18.214060: W tensorflow/core/framework/op_kernel.cc:1192] Out of range: End of sequence\r\n\t [[Node: IteratorGetNext = IteratorGetNext[output_shapes=[[?,?,132], [?], [?,?], [?]], output_types=[DT_FLOAT, DT_INT64, DT_INT64, DT_INT64], _device=\"/job:localhost/replica:0/task:0/cpu:0\"](Iterator)]]`\r\n\r\nThe code trains a seq2seq model, and I assume the message gets printed somewhere downstream of seq2seq.dynamic_decode. The message still gets printed even when the NN cells are not wrapped with a tf.contrib.rnn.DeviceWrapper with device field indicating a GPU, only works fine on non-cuda builds.\r\n\r\nAll of this happens while the code is protected with the try/except statements:\r\n```\r\n        for epoch in range(num_epochs):\r\n            session.run(iterator.initializer)\r\n            while True:\r\n                try:\r\n                    session.run([operation])\r\n                except tf.errors.OutOfRangeError:\r\n                    break\r\n```\r\n\r\nNow the only cheeky thing is that I am using the binaries from Arch Linux repositories, but these are far from being dodgy.\r\n[python-tensorflow](https://www.archlinux.org/packages/community/x86_64/python-tensorflow/)\r\n[python-tensorflow-cuda](https://www.archlinux.org/packages/community/x86_64/python-tensorflow-cuda/)\r\n[The build script](https://git.archlinux.org/svntogit/community.git/tree/trunk/PKGBUILD?h=packages/tensorflow)\r\n\r\nThis problem was in tensorflow 1.2 and persists in tensorflow 1.3.\r\nAlso tested on a laptop without dedicated gpu, but same OS and packages, works fine.\r\n"}