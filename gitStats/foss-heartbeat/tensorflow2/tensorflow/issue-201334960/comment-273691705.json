{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/273691705", "html_url": "https://github.com/tensorflow/tensorflow/issues/6906#issuecomment-273691705", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6906", "id": 273691705, "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzY5MTcwNQ==", "user": {"login": "gaohuazuo", "id": 10446514, "node_id": "MDQ6VXNlcjEwNDQ2NTE0", "avatar_url": "https://avatars0.githubusercontent.com/u/10446514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaohuazuo", "html_url": "https://github.com/gaohuazuo", "followers_url": "https://api.github.com/users/gaohuazuo/followers", "following_url": "https://api.github.com/users/gaohuazuo/following{/other_user}", "gists_url": "https://api.github.com/users/gaohuazuo/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaohuazuo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaohuazuo/subscriptions", "organizations_url": "https://api.github.com/users/gaohuazuo/orgs", "repos_url": "https://api.github.com/users/gaohuazuo/repos", "events_url": "https://api.github.com/users/gaohuazuo/events{/privacy}", "received_events_url": "https://api.github.com/users/gaohuazuo/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-19T06:19:56Z", "updated_at": "2017-01-19T06:19:56Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Thanks for the replies. What I'm doing is to explore the behaviour of the discriminator in GAN. The graph is roughly the following:</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://cloud.githubusercontent.com/assets/10446514/22094828/4b0cfaf0-de4b-11e6-97e3-f3c6b263b04d.png\"><img src=\"https://cloud.githubusercontent.com/assets/10446514/22094828/4b0cfaf0-de4b-11e6-97e3-f3c6b263b04d.png\" alt=\"untitled diagram\" style=\"max-width:100%;\"></a></p>\n<p>During training, gradients have to propagate through <code>x</code> to <code>G</code>. On the other hand, I want to feed some arbitrary <code>x</code> to <code>D</code> for testing. I feel that this should be suitable for <code>placeholder_with_default</code>, but it has no gradient and thereby prevents training using the same graph. Note that I either feed <code>x</code> or use the gradient, but never both, so this should be a good use case of <code>placeholder_with_default</code>.</p>\n<p>I guess it is a protective measure that <code>placeholder_with_default</code> doesn't have a gradient. However, this isn't quite meaningful, as other ops don't have the same protection, and <code>placeholder_with_default</code> has nothing special to do with feeding, except its name.</p>\n<p>In short, I would suggest using <code>identity</code> as the gradient of <code>placeholder_with_default</code>, because it does no harm and some good.</p>", "body_text": "Thanks for the replies. What I'm doing is to explore the behaviour of the discriminator in GAN. The graph is roughly the following:\n\nDuring training, gradients have to propagate through x to G. On the other hand, I want to feed some arbitrary x to D for testing. I feel that this should be suitable for placeholder_with_default, but it has no gradient and thereby prevents training using the same graph. Note that I either feed x or use the gradient, but never both, so this should be a good use case of placeholder_with_default.\nI guess it is a protective measure that placeholder_with_default doesn't have a gradient. However, this isn't quite meaningful, as other ops don't have the same protection, and placeholder_with_default has nothing special to do with feeding, except its name.\nIn short, I would suggest using identity as the gradient of placeholder_with_default, because it does no harm and some good.", "body": "Thanks for the replies. What I'm doing is to explore the behaviour of the discriminator in GAN. The graph is roughly the following:\r\n\r\n![untitled diagram](https://cloud.githubusercontent.com/assets/10446514/22094828/4b0cfaf0-de4b-11e6-97e3-f3c6b263b04d.png)\r\n\r\nDuring training, gradients have to propagate through `x` to `G`. On the other hand, I want to feed some arbitrary `x` to `D` for testing. I feel that this should be suitable for `placeholder_with_default`, but it has no gradient and thereby prevents training using the same graph. Note that I either feed `x` or use the gradient, but never both, so this should be a good use case of `placeholder_with_default`.\r\n\r\nI guess it is a protective measure that `placeholder_with_default` doesn't have a gradient. However, this isn't quite meaningful, as other ops don't have the same protection, and `placeholder_with_default` has nothing special to do with feeding, except its name.\r\n\r\nIn short, I would suggest using `identity` as the gradient of `placeholder_with_default`, because it does no harm and some good."}