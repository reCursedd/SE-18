{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9690", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9690/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9690/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9690/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9690", "id": 226621715, "node_id": "MDU6SXNzdWUyMjY2MjE3MTU=", "number": 9690, "title": "Make EIGEN_MAX_ALIGN_BYTES available from Python", "user": {"login": "eamartin", "id": 287200, "node_id": "MDQ6VXNlcjI4NzIwMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/287200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eamartin", "html_url": "https://github.com/eamartin", "followers_url": "https://api.github.com/users/eamartin/followers", "following_url": "https://api.github.com/users/eamartin/following{/other_user}", "gists_url": "https://api.github.com/users/eamartin/gists{/gist_id}", "starred_url": "https://api.github.com/users/eamartin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eamartin/subscriptions", "organizations_url": "https://api.github.com/users/eamartin/orgs", "repos_url": "https://api.github.com/users/eamartin/repos", "events_url": "https://api.github.com/users/eamartin/events{/privacy}", "received_events_url": "https://api.github.com/users/eamartin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 12, "created_at": "2017-05-05T16:14:21Z", "updated_at": "2018-11-09T23:02:50Z", "closed_at": "2018-11-09T23:02:49Z", "author_association": "NONE", "body_html": "<p>Removing unnecessary memcpys when feeding a Numpy array with a feed_dict is a <a href=\"https://github.com/tensorflow/tensorflow/issues/7951\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/7951/hovercard\">recurring feature request</a> that has large performance implications.</p>\n<p>From what I can tell, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5061\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alextp\">@alextp</a> <a href=\"https://github.com/tensorflow/tensorflow/commit/0ffa40ee3d5fae4ff14b75c2525edcaa2f01ece7\">implemented changes</a> that avoid the memcpy if the input array is <code>EIGEN_MAX_ALIGN_BYTES</code> aligned. For a user to definitely avoid memcpy's on feeding, they would need to make sure their arrays are aligned to <code>EIGEN_MAX_ALIGN_BYTES</code>. Currently, there is no way to access <code>EIGEN_MAX_ALIGN_BYTES</code> from Python, so the user can't be sure what alignment is required.</p>\n<p>It would be nice if there was a C API call (and a corresponding Python one) to make <code>EIGEN_MAX_ALIGN_BYTES</code> available. This isn't a critical feature as the user can currently be very pessimistic on alignment requirements and (probably safely) 64-byte align their inputs.</p>", "body_text": "Removing unnecessary memcpys when feeding a Numpy array with a feed_dict is a recurring feature request that has large performance implications.\nFrom what I can tell, @alextp implemented changes that avoid the memcpy if the input array is EIGEN_MAX_ALIGN_BYTES aligned. For a user to definitely avoid memcpy's on feeding, they would need to make sure their arrays are aligned to EIGEN_MAX_ALIGN_BYTES. Currently, there is no way to access EIGEN_MAX_ALIGN_BYTES from Python, so the user can't be sure what alignment is required.\nIt would be nice if there was a C API call (and a corresponding Python one) to make EIGEN_MAX_ALIGN_BYTES available. This isn't a critical feature as the user can currently be very pessimistic on alignment requirements and (probably safely) 64-byte align their inputs.", "body": "Removing unnecessary memcpys when feeding a Numpy array with a feed_dict is a [recurring feature request](https://github.com/tensorflow/tensorflow/issues/7951) that has large performance implications.\r\n\r\nFrom what I can tell, @alextp [implemented changes](https://github.com/tensorflow/tensorflow/commit/0ffa40ee3d5fae4ff14b75c2525edcaa2f01ece7) that avoid the memcpy if the input array is ``EIGEN_MAX_ALIGN_BYTES`` aligned. For a user to definitely avoid memcpy's on feeding, they would need to make sure their arrays are aligned to ``EIGEN_MAX_ALIGN_BYTES``. Currently, there is no way to access ``EIGEN_MAX_ALIGN_BYTES`` from Python, so the user can't be sure what alignment is required. \r\n\r\nIt would be nice if there was a C API call (and a corresponding Python one) to make ``EIGEN_MAX_ALIGN_BYTES`` available. This isn't a critical feature as the user can currently be very pessimistic on alignment requirements and (probably safely) 64-byte align their inputs."}