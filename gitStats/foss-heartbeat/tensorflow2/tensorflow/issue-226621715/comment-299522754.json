{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/299522754", "html_url": "https://github.com/tensorflow/tensorflow/issues/9690#issuecomment-299522754", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9690", "id": 299522754, "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTUyMjc1NA==", "user": {"login": "alextp", "id": 5061, "node_id": "MDQ6VXNlcjUwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alextp", "html_url": "https://github.com/alextp", "followers_url": "https://api.github.com/users/alextp/followers", "following_url": "https://api.github.com/users/alextp/following{/other_user}", "gists_url": "https://api.github.com/users/alextp/gists{/gist_id}", "starred_url": "https://api.github.com/users/alextp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alextp/subscriptions", "organizations_url": "https://api.github.com/users/alextp/orgs", "repos_url": "https://api.github.com/users/alextp/repos", "events_url": "https://api.github.com/users/alextp/events{/privacy}", "received_events_url": "https://api.github.com/users/alextp/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-05T17:14:36Z", "updated_at": "2017-05-05T17:14:36Z", "author_association": "MEMBER", "body_html": "<div class=\"email-fragment\">Yaroslav, why an op and not a swigged python-c-api function?</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On Fri, May 5, 2017 at 10:10 AM, Eric Martin ***@***.***&gt; wrote:\n I believe the value changes depending on how TensorFlow was compiled. For\n instance, I'd guess EIGEN_MAX_ALIGN_BYTES == 16 means you compiled with\n SSE support, and I'd expect a value of 32 for AVX or 64 for AVX-512.\n\n Getting aligned memory from Numpy is harder than it should be:\n <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"50130307\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/numpy/numpy/issues/5312\" href=\"https://github.com/numpy/numpy/issues/5312\">numpy/numpy#5312</a> &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"50130307\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/numpy/numpy/issues/5312\" href=\"https://github.com/numpy/numpy/issues/5312\">numpy/numpy#5312</a>&gt; . The only\n way I know of to get aligned memory from Numpy is to just align it yourself:\n\n In [14]: a = np.empty(1000, dtype=np.float32)\n\n In [15]: a.ctypes.data\n Out[15]: 48297584\n\n In [16]: a.ctypes.data % 16\n Out[16]: 0\n\n In [17]: a.ctypes.data % 32\n Out[17]: 16\n\n In [18]: b = a[4:]\n\n In [19]: b.ctypes.data\n Out[19]: 48297600\n\n In [20]: b.ctypes.data % 32\n Out[20]: 0\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"226621715\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/9690\" href=\"https://github.com/tensorflow/tensorflow/issues/9690#issuecomment-299521465\">#9690 (comment)</a>&gt;,\n or mute the thread\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/AAATxQXYUTo7LSJXTkPcmrCtixFAPpiuks5r21gRgaJpZM4NSH6U\">https://github.com/notifications/unsubscribe-auth/AAATxQXYUTo7LSJXTkPcmrCtixFAPpiuks5r21gRgaJpZM4NSH6U</a>&gt;\n .\n</div>\n<div class=\"email-fragment\"></div>\n<div class=\"email-signature-reply\">-- \n - Alex</div>\n</div>", "body_text": "Yaroslav, why an op and not a swigged python-c-api function?\n\u2026\nOn Fri, May 5, 2017 at 10:10 AM, Eric Martin ***@***.***> wrote:\n I believe the value changes depending on how TensorFlow was compiled. For\n instance, I'd guess EIGEN_MAX_ALIGN_BYTES == 16 means you compiled with\n SSE support, and I'd expect a value of 32 for AVX or 64 for AVX-512.\n\n Getting aligned memory from Numpy is harder than it should be:\n numpy/numpy#5312 <numpy/numpy#5312> . The only\n way I know of to get aligned memory from Numpy is to just align it yourself:\n\n In [14]: a = np.empty(1000, dtype=np.float32)\n\n In [15]: a.ctypes.data\n Out[15]: 48297584\n\n In [16]: a.ctypes.data % 16\n Out[16]: 0\n\n In [17]: a.ctypes.data % 32\n Out[17]: 16\n\n In [18]: b = a[4:]\n\n In [19]: b.ctypes.data\n Out[19]: 48297600\n\n In [20]: b.ctypes.data % 32\n Out[20]: 0\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#9690 (comment)>,\n or mute the thread\n <https://github.com/notifications/unsubscribe-auth/AAATxQXYUTo7LSJXTkPcmrCtixFAPpiuks5r21gRgaJpZM4NSH6U>\n .\n\n\n-- \n - Alex", "body": "Yaroslav, why an op and not a swigged python-c-api function?\n\nOn Fri, May 5, 2017 at 10:10 AM, Eric Martin <notifications@github.com>\nwrote:\n\n> I believe the value changes depending on how TensorFlow was compiled. For\n> instance, I'd guess EIGEN_MAX_ALIGN_BYTES == 16 means you compiled with\n> SSE support, and I'd expect a value of 32 for AVX or 64 for AVX-512.\n>\n> Getting aligned memory from Numpy is harder than it should be:\n> numpy/numpy#5312 <https://github.com/numpy/numpy/issues/5312> . The only\n> way I know of to get aligned memory from Numpy is to just align it yourself:\n>\n> In [14]: a = np.empty(1000, dtype=np.float32)\n>\n> In [15]: a.ctypes.data\n> Out[15]: 48297584\n>\n> In [16]: a.ctypes.data % 16\n> Out[16]: 0\n>\n> In [17]: a.ctypes.data % 32\n> Out[17]: 16\n>\n> In [18]: b = a[4:]\n>\n> In [19]: b.ctypes.data\n> Out[19]: 48297600\n>\n> In [20]: b.ctypes.data % 32\n> Out[20]: 0\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/tensorflow/tensorflow/issues/9690#issuecomment-299521465>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAATxQXYUTo7LSJXTkPcmrCtixFAPpiuks5r21gRgaJpZM4NSH6U>\n> .\n>\n\n\n\n-- \n - Alex\n"}