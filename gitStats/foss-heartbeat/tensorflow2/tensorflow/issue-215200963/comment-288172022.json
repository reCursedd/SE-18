{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/288172022", "html_url": "https://github.com/tensorflow/tensorflow/pull/8522#issuecomment-288172022", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8522", "id": 288172022, "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODE3MjAyMg==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-21T18:18:56Z", "updated_at": "2017-03-21T18:18:56Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I'm happy with this change if <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=22941064\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/guschmue\">@guschmue</a> is :). I agree that a specific sequential-access file interface would make sense for most input file processing; I think the main case for random access is when restoring a checkpoint. It's possible that (with this change) restoring a checkpoint will get slower but reading input files will get faster, and we should keep an eye on the former.</p>", "body_text": "I'm happy with this change if @guschmue is :). I agree that a specific sequential-access file interface would make sense for most input file processing; I think the main case for random access is when restoring a checkpoint. It's possible that (with this change) restoring a checkpoint will get slower but reading input files will get faster, and we should keep an eye on the former.", "body": "I'm happy with this change if @guschmue is :). I agree that a specific sequential-access file interface would make sense for most input file processing; I think the main case for random access is when restoring a checkpoint. It's possible that (with this change) restoring a checkpoint will get slower but reading input files will get faster, and we should keep an eye on the former."}