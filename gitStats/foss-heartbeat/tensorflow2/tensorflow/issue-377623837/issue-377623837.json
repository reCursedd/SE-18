{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23536", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23536/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23536/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23536/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23536", "id": 377623837, "node_id": "MDU6SXNzdWUzNzc2MjM4Mzc=", "number": 23536, "title": "Build CMAKE C++/Cuda project with tensorflow in debug mode", "user": {"login": "pnik073", "id": 9438525, "node_id": "MDQ6VXNlcjk0Mzg1MjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/9438525?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnik073", "html_url": "https://github.com/pnik073", "followers_url": "https://api.github.com/users/pnik073/followers", "following_url": "https://api.github.com/users/pnik073/following{/other_user}", "gists_url": "https://api.github.com/users/pnik073/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnik073/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnik073/subscriptions", "organizations_url": "https://api.github.com/users/pnik073/orgs", "repos_url": "https://api.github.com/users/pnik073/repos", "events_url": "https://api.github.com/users/pnik073/events{/privacy}", "received_events_url": "https://api.github.com/users/pnik073/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473173351, "node_id": "MDU6TGFiZWw0NzMxNzMzNTE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:build/install", "name": "type:build/install", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": {"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "skye", "id": 88808, "node_id": "MDQ6VXNlcjg4ODA4", "avatar_url": "https://avatars1.githubusercontent.com/u/88808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skye", "html_url": "https://github.com/skye", "followers_url": "https://api.github.com/users/skye/followers", "following_url": "https://api.github.com/users/skye/following{/other_user}", "gists_url": "https://api.github.com/users/skye/gists{/gist_id}", "starred_url": "https://api.github.com/users/skye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skye/subscriptions", "organizations_url": "https://api.github.com/users/skye/orgs", "repos_url": "https://api.github.com/users/skye/repos", "events_url": "https://api.github.com/users/skye/events{/privacy}", "received_events_url": "https://api.github.com/users/skye/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-11-05T23:14:36Z", "updated_at": "2018-11-11T21:35:59Z", "closed_at": null, "author_association": "NONE", "body_html": "<p><strong>System information</strong></p>\n<ul>\n<li>OS Platform and Distribution: Ubuntu 18.04</li>\n<li>TensorFlow installed from binary</li>\n<li>TensorFlow version: 1.11.0</li>\n<li>Python version: 3.6.5</li>\n<li>Installed using pip</li>\n<li>CUDA/cuDNN version: 9.0</li>\n<li>GPU model and memory: Tesla K and V series</li>\n</ul>\n<p><strong>Describe the problem</strong></p>\n<p>I am trying to integrate tensorflow in my CMAKE C++/Cuda project. It <em>works</em> when I link tensorflow when I do simply <code>cmake .</code>, which is for <code>RelWithDebInfo</code> build. However, it fails on <code>Release</code> or <code>Debug</code> mode. I speculate that the <code>libtensorflow_framework.so</code> that I have on my <code>dist-packages/tensorflow/</code> is not meant to be for that. Below, I share 2 different ways I try to link tensorflow in debug mode. Both give me the same error as found further below.</p>\n<p><strong><em>Can you hint me what goes wrong?</em></strong></p>\n<h2>Add Tensorflow N.1</h2>\n<pre><code>SET(TF_ROOT \"/usr/local/lib/python3.6/dist-packages/tensorflow/\")\ninclude_directories(SYSTEM \"${TF_ROOT}/include/\")\nlink_directories(\"${TF_ROOT}\")\ntarget_link_libraries(\n\tCppLib.Tests\n  \tdebug tensorflow_framework\n)\n</code></pre>\n<h2>Add Tensorflow N.2</h2>\n<pre><code>SET(TF_ROOT \"/usr/local/lib/python3.6/dist-packages/tensorflow/\")\ninclude_directories(SYSTEM \"${TF_ROOT}/include/\")\n#link_directories(\"${TF_ROOT}\")\n\nadd_executable(CppLib.Tests ${SRC} ${GMOCK_SRC} ${GTEST_SRC} ${GTEST_MAIN_SRC})\n\nadd_library(tensorflow_framework_ SHARED IMPORTED)\nset_target_properties(tensorflow_framework_ PROPERTIES\n                IMPORTED_LOCATION_DEBUG \"${TF_ROOT}/libtensorflow_framework.so\")\nset_target_properties(tensorflow_framework_ PROPERTIES\n                IMPORTED_LOCATION_RELEASE \"${TF_ROOT}/libtensorflow_framework.so\")\n\ntarget_link_libraries(\n\tCppLib.Tests\n        tensorflow_framework_\n)\n</code></pre>\n<h2>Error</h2>\n<pre><code>#ERROR\nCMakeFiles/CppLib.Tests.dir/TestTensorflow.cpp.o: In function `std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;* tensorflow::internal::MakeCheckOpString&lt;long, int&gt;(long const&amp;, int const&amp;, char const*)':\n/usr/local/lib/python3.6/dist-packages/tensorflow/include/tensorflow/core/platform/default/logging.h:187: undefined reference to `tensorflow::internal::CheckOpMessageBuilder::NewString[abi:cxx11]()'\ncollect2: error: ld returned 1 exit status\ntests/CppLib/CMakeFiles/CppLib.Tests.dir/build.make:799: recipe for target 'bin/Debug/CppLib.Tests' failed\nmake[2]: *** [bin/Debug/CppLib.Tests] Error 1\nCMakeFiles/Makefile2:1169: recipe for target 'tests/CppLib/CMakeFiles/CppLib.Tests.dir/all' failed\nmake[1]: *** [tests/CppLib/CMakeFiles/CppLib.Tests.dir/all] Error 2\nMakefile:140: recipe for target 'all' failed\nmake: *** [all] Error 2\n</code></pre>", "body_text": "System information\n\nOS Platform and Distribution: Ubuntu 18.04\nTensorFlow installed from binary\nTensorFlow version: 1.11.0\nPython version: 3.6.5\nInstalled using pip\nCUDA/cuDNN version: 9.0\nGPU model and memory: Tesla K and V series\n\nDescribe the problem\nI am trying to integrate tensorflow in my CMAKE C++/Cuda project. It works when I link tensorflow when I do simply cmake ., which is for RelWithDebInfo build. However, it fails on Release or Debug mode. I speculate that the libtensorflow_framework.so that I have on my dist-packages/tensorflow/ is not meant to be for that. Below, I share 2 different ways I try to link tensorflow in debug mode. Both give me the same error as found further below.\nCan you hint me what goes wrong?\nAdd Tensorflow N.1\nSET(TF_ROOT \"/usr/local/lib/python3.6/dist-packages/tensorflow/\")\ninclude_directories(SYSTEM \"${TF_ROOT}/include/\")\nlink_directories(\"${TF_ROOT}\")\ntarget_link_libraries(\n\tCppLib.Tests\n  \tdebug tensorflow_framework\n)\n\nAdd Tensorflow N.2\nSET(TF_ROOT \"/usr/local/lib/python3.6/dist-packages/tensorflow/\")\ninclude_directories(SYSTEM \"${TF_ROOT}/include/\")\n#link_directories(\"${TF_ROOT}\")\n\nadd_executable(CppLib.Tests ${SRC} ${GMOCK_SRC} ${GTEST_SRC} ${GTEST_MAIN_SRC})\n\nadd_library(tensorflow_framework_ SHARED IMPORTED)\nset_target_properties(tensorflow_framework_ PROPERTIES\n                IMPORTED_LOCATION_DEBUG \"${TF_ROOT}/libtensorflow_framework.so\")\nset_target_properties(tensorflow_framework_ PROPERTIES\n                IMPORTED_LOCATION_RELEASE \"${TF_ROOT}/libtensorflow_framework.so\")\n\ntarget_link_libraries(\n\tCppLib.Tests\n        tensorflow_framework_\n)\n\nError\n#ERROR\nCMakeFiles/CppLib.Tests.dir/TestTensorflow.cpp.o: In function `std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<long, int>(long const&, int const&, char const*)':\n/usr/local/lib/python3.6/dist-packages/tensorflow/include/tensorflow/core/platform/default/logging.h:187: undefined reference to `tensorflow::internal::CheckOpMessageBuilder::NewString[abi:cxx11]()'\ncollect2: error: ld returned 1 exit status\ntests/CppLib/CMakeFiles/CppLib.Tests.dir/build.make:799: recipe for target 'bin/Debug/CppLib.Tests' failed\nmake[2]: *** [bin/Debug/CppLib.Tests] Error 1\nCMakeFiles/Makefile2:1169: recipe for target 'tests/CppLib/CMakeFiles/CppLib.Tests.dir/all' failed\nmake[1]: *** [tests/CppLib/CMakeFiles/CppLib.Tests.dir/all] Error 2\nMakefile:140: recipe for target 'all' failed\nmake: *** [all] Error 2", "body": "**System information**\r\n- OS Platform and Distribution: Ubuntu 18.04\r\n- TensorFlow installed from binary\r\n- TensorFlow version: 1.11.0\r\n- Python version: 3.6.5\r\n- Installed using pip\r\n- CUDA/cuDNN version: 9.0\r\n- GPU model and memory: Tesla K and V series\r\n\r\n\r\n\r\n**Describe the problem**\r\n\r\nI am trying to integrate tensorflow in my CMAKE C++/Cuda project. It _works_ when I link tensorflow when I do simply `cmake .`, which is for `RelWithDebInfo` build. However, it fails on `Release` or `Debug` mode. I speculate that the `libtensorflow_framework.so` that I have on my `dist-packages/tensorflow/` is not meant to be for that. Below, I share 2 different ways I try to link tensorflow in debug mode. Both give me the same error as found further below.\r\n\r\n**_Can you hint me what goes wrong?_**\r\n\r\n## Add Tensorflow N.1\r\n```\r\nSET(TF_ROOT \"/usr/local/lib/python3.6/dist-packages/tensorflow/\")\r\ninclude_directories(SYSTEM \"${TF_ROOT}/include/\")\r\nlink_directories(\"${TF_ROOT}\")\r\ntarget_link_libraries(\r\n\tCppLib.Tests\r\n  \tdebug tensorflow_framework\r\n)\r\n```\r\n\r\n## Add Tensorflow N.2\r\n```\r\nSET(TF_ROOT \"/usr/local/lib/python3.6/dist-packages/tensorflow/\")\r\ninclude_directories(SYSTEM \"${TF_ROOT}/include/\")\r\n#link_directories(\"${TF_ROOT}\")\r\n\r\nadd_executable(CppLib.Tests ${SRC} ${GMOCK_SRC} ${GTEST_SRC} ${GTEST_MAIN_SRC})\r\n\r\nadd_library(tensorflow_framework_ SHARED IMPORTED)\r\nset_target_properties(tensorflow_framework_ PROPERTIES\r\n                IMPORTED_LOCATION_DEBUG \"${TF_ROOT}/libtensorflow_framework.so\")\r\nset_target_properties(tensorflow_framework_ PROPERTIES\r\n                IMPORTED_LOCATION_RELEASE \"${TF_ROOT}/libtensorflow_framework.so\")\r\n\r\ntarget_link_libraries(\r\n\tCppLib.Tests\r\n        tensorflow_framework_\r\n)\r\n```\r\n\r\n\r\n\r\n## Error\r\n```\r\n#ERROR\r\nCMakeFiles/CppLib.Tests.dir/TestTensorflow.cpp.o: In function `std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<long, int>(long const&, int const&, char const*)':\r\n/usr/local/lib/python3.6/dist-packages/tensorflow/include/tensorflow/core/platform/default/logging.h:187: undefined reference to `tensorflow::internal::CheckOpMessageBuilder::NewString[abi:cxx11]()'\r\ncollect2: error: ld returned 1 exit status\r\ntests/CppLib/CMakeFiles/CppLib.Tests.dir/build.make:799: recipe for target 'bin/Debug/CppLib.Tests' failed\r\nmake[2]: *** [bin/Debug/CppLib.Tests] Error 1\r\nCMakeFiles/Makefile2:1169: recipe for target 'tests/CppLib/CMakeFiles/CppLib.Tests.dir/all' failed\r\nmake[1]: *** [tests/CppLib/CMakeFiles/CppLib.Tests.dir/all] Error 2\r\nMakefile:140: recipe for target 'all' failed\r\nmake: *** [all] Error 2\r\n```\r\n"}