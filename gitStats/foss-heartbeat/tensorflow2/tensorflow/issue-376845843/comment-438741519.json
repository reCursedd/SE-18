{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/438741519", "html_url": "https://github.com/tensorflow/tensorflow/issues/23455#issuecomment-438741519", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23455", "id": 438741519, "node_id": "MDEyOklzc3VlQ29tbWVudDQzODc0MTUxOQ==", "user": {"login": "mavrov", "id": 31657104, "node_id": "MDQ6VXNlcjMxNjU3MTA0", "avatar_url": "https://avatars1.githubusercontent.com/u/31657104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mavrov", "html_url": "https://github.com/mavrov", "followers_url": "https://api.github.com/users/mavrov/followers", "following_url": "https://api.github.com/users/mavrov/following{/other_user}", "gists_url": "https://api.github.com/users/mavrov/gists{/gist_id}", "starred_url": "https://api.github.com/users/mavrov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mavrov/subscriptions", "organizations_url": "https://api.github.com/users/mavrov/orgs", "repos_url": "https://api.github.com/users/mavrov/repos", "events_url": "https://api.github.com/users/mavrov/events{/privacy}", "received_events_url": "https://api.github.com/users/mavrov/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-14T17:11:46Z", "updated_at": "2018-11-14T17:11:46Z", "author_association": "NONE", "body_html": "<p>My r1.9 branch does not use the proposed solution. It is a quick and dirty patch that solved our problems back then. I have explicitly checked for other possible leaks of the same kind and could not locate such at Tensorflow version 1.9.</p>\n<p>The proposed solution (with refactoring) resides in the branch you've pointed out but I do not recommend building from it as it is branched at an arbitrary point from master. The solution is cherry picked in r1.11 and r1.12 that are supposed to be stable release branches.</p>\n<p>And yes more leaks are happening at an increasing number of locations where the MklPrimitiveFactory is introduced in later Tensorflow versions. My branch is not the reason for those leaks and certainly cannot cause more leaking at the said locations compared to the same Tensorflow version.</p>\n<p>And as I said the fix is backwards compatible so by default it does nothing unless you set TF_MKL_REUSE_PRIMITIVE_MEMORY to 0.</p>\n<p>I hope someone looks into the problem soon. The refactored solution is already hard to rebase onto master.</p>", "body_text": "My r1.9 branch does not use the proposed solution. It is a quick and dirty patch that solved our problems back then. I have explicitly checked for other possible leaks of the same kind and could not locate such at Tensorflow version 1.9.\nThe proposed solution (with refactoring) resides in the branch you've pointed out but I do not recommend building from it as it is branched at an arbitrary point from master. The solution is cherry picked in r1.11 and r1.12 that are supposed to be stable release branches.\nAnd yes more leaks are happening at an increasing number of locations where the MklPrimitiveFactory is introduced in later Tensorflow versions. My branch is not the reason for those leaks and certainly cannot cause more leaking at the said locations compared to the same Tensorflow version.\nAnd as I said the fix is backwards compatible so by default it does nothing unless you set TF_MKL_REUSE_PRIMITIVE_MEMORY to 0.\nI hope someone looks into the problem soon. The refactored solution is already hard to rebase onto master.", "body": "My r1.9 branch does not use the proposed solution. It is a quick and dirty patch that solved our problems back then. I have explicitly checked for other possible leaks of the same kind and could not locate such at Tensorflow version 1.9. \r\n\r\nThe proposed solution (with refactoring) resides in the branch you've pointed out but I do not recommend building from it as it is branched at an arbitrary point from master. The solution is cherry picked in r1.11 and r1.12 that are supposed to be stable release branches.\r\n\r\nAnd yes more leaks are happening at an increasing number of locations where the MklPrimitiveFactory is introduced in later Tensorflow versions. My branch is not the reason for those leaks and certainly cannot cause more leaking at the said locations compared to the same Tensorflow version.\r\n\r\nAnd as I said the fix is backwards compatible so by default it does nothing unless you set TF_MKL_REUSE_PRIMITIVE_MEMORY to 0.\r\n\r\nI hope someone looks into the problem soon. The refactored solution is already hard to rebase onto master."}