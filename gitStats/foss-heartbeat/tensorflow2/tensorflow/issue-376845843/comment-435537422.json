{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/435537422", "html_url": "https://github.com/tensorflow/tensorflow/issues/23455#issuecomment-435537422", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23455", "id": 435537422, "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTUzNzQyMg==", "user": {"login": "mavrov", "id": 31657104, "node_id": "MDQ6VXNlcjMxNjU3MTA0", "avatar_url": "https://avatars1.githubusercontent.com/u/31657104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mavrov", "html_url": "https://github.com/mavrov", "followers_url": "https://api.github.com/users/mavrov/followers", "following_url": "https://api.github.com/users/mavrov/following{/other_user}", "gists_url": "https://api.github.com/users/mavrov/gists{/gist_id}", "starred_url": "https://api.github.com/users/mavrov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mavrov/subscriptions", "organizations_url": "https://api.github.com/users/mavrov/orgs", "repos_url": "https://api.github.com/users/mavrov/repos", "events_url": "https://api.github.com/users/mavrov/events{/privacy}", "received_events_url": "https://api.github.com/users/mavrov/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-02T23:24:35Z", "updated_at": "2018-11-02T23:27:58Z", "author_association": "NONE", "body_html": "<p>Your intuition is correct! I can confirm that setting do_not_cache = true and manually deleting the returned MklPrimitive pointer at the end of the scope works perfectly, in fact that's what I did for TF 1.9.</p>\n<p>Otherwise the problem indeed looks like a memory leak but in fact a pointer to each allocated primitive is stored in static thread local hash maps. Unfortunately these pointers never get deleted.</p>\n<p>Thank you for the suggestion and the quick response!</p>", "body_text": "Your intuition is correct! I can confirm that setting do_not_cache = true and manually deleting the returned MklPrimitive pointer at the end of the scope works perfectly, in fact that's what I did for TF 1.9.\nOtherwise the problem indeed looks like a memory leak but in fact a pointer to each allocated primitive is stored in static thread local hash maps. Unfortunately these pointers never get deleted.\nThank you for the suggestion and the quick response!", "body": "Your intuition is correct! I can confirm that setting do_not_cache = true and manually deleting the returned MklPrimitive pointer at the end of the scope works perfectly, in fact that's what I did for TF 1.9.\r\n\r\nOtherwise the problem indeed looks like a memory leak but in fact a pointer to each allocated primitive is stored in static thread local hash maps. Unfortunately these pointers never get deleted.\r\n\r\nThank you for the suggestion and the quick response!"}