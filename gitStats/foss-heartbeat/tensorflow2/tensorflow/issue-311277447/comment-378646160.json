{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/378646160", "html_url": "https://github.com/tensorflow/tensorflow/issues/18238#issuecomment-378646160", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18238", "id": 378646160, "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODY0NjE2MA==", "user": {"login": "burglarhobbit", "id": 15987266, "node_id": "MDQ6VXNlcjE1OTg3MjY2", "avatar_url": "https://avatars2.githubusercontent.com/u/15987266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/burglarhobbit", "html_url": "https://github.com/burglarhobbit", "followers_url": "https://api.github.com/users/burglarhobbit/followers", "following_url": "https://api.github.com/users/burglarhobbit/following{/other_user}", "gists_url": "https://api.github.com/users/burglarhobbit/gists{/gist_id}", "starred_url": "https://api.github.com/users/burglarhobbit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/burglarhobbit/subscriptions", "organizations_url": "https://api.github.com/users/burglarhobbit/orgs", "repos_url": "https://api.github.com/users/burglarhobbit/repos", "events_url": "https://api.github.com/users/burglarhobbit/events{/privacy}", "received_events_url": "https://api.github.com/users/burglarhobbit/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-04T15:40:37Z", "updated_at": "2018-04-04T15:41:01Z", "author_association": "NONE", "body_html": "<p>There's a little flaw in your logic, if the tensor and mask is like this:</p>\n<pre><code>tensor = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\nmask = np.array([[True, False, True], [False, False, True], [True, True, True]])\nboolean_mask(tensor, mask, keepdims=False) # [1, 3, 6, 7, 8, 9]\nboolean_mask(tensor, mask, keepdims=True, pad_val=0) # [[1, 3, 0], [6, 0, 0], [7, 8, 9]] \n</code></pre>\n<p>then expected output according to you should be <code>[[1, 3], [6], [7, 8, 9]]</code> but this will give ShapeError since TensorFlow doesn't allow flexible shapes like Python lists do. So what I suggest is along with <code>keepdims</code> argument, there should be a <code>pad_val</code> argument where you mention the value of the padding that is going to happen at the end.</p>", "body_text": "There's a little flaw in your logic, if the tensor and mask is like this:\ntensor = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\nmask = np.array([[True, False, True], [False, False, True], [True, True, True]])\nboolean_mask(tensor, mask, keepdims=False) # [1, 3, 6, 7, 8, 9]\nboolean_mask(tensor, mask, keepdims=True, pad_val=0) # [[1, 3, 0], [6, 0, 0], [7, 8, 9]] \n\nthen expected output according to you should be [[1, 3], [6], [7, 8, 9]] but this will give ShapeError since TensorFlow doesn't allow flexible shapes like Python lists do. So what I suggest is along with keepdims argument, there should be a pad_val argument where you mention the value of the padding that is going to happen at the end.", "body": "There's a little flaw in your logic, if the tensor and mask is like this: \r\n```\r\ntensor = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\r\nmask = np.array([[True, False, True], [False, False, True], [True, True, True]])\r\nboolean_mask(tensor, mask, keepdims=False) # [1, 3, 6, 7, 8, 9]\r\nboolean_mask(tensor, mask, keepdims=True, pad_val=0) # [[1, 3, 0], [6, 0, 0], [7, 8, 9]] \r\n``` \r\nthen expected output according to you should be `[[1, 3], [6], [7, 8, 9]]` but this will give ShapeError since TensorFlow doesn't allow flexible shapes like Python lists do. So what I suggest is along with `keepdims` argument, there should be a `pad_val` argument where you mention the value of the padding that is going to happen at the end."}