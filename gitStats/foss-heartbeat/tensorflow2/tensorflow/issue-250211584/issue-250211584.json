{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12284", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12284/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12284/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12284/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12284", "id": 250211584, "node_id": "MDU6SXNzdWUyNTAyMTE1ODQ=", "number": 12284, "title": "Cudnn `params_to_canonical` failed", "user": {"login": "chrisc36", "id": 1463280, "node_id": "MDQ6VXNlcjE0NjMyODA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1463280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisc36", "html_url": "https://github.com/chrisc36", "followers_url": "https://api.github.com/users/chrisc36/followers", "following_url": "https://api.github.com/users/chrisc36/following{/other_user}", "gists_url": "https://api.github.com/users/chrisc36/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisc36/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisc36/subscriptions", "organizations_url": "https://api.github.com/users/chrisc36/orgs", "repos_url": "https://api.github.com/users/chrisc36/repos", "events_url": "https://api.github.com/users/chrisc36/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisc36/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "protoget", "id": 5117188, "node_id": "MDQ6VXNlcjUxMTcxODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5117188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/protoget", "html_url": "https://github.com/protoget", "followers_url": "https://api.github.com/users/protoget/followers", "following_url": "https://api.github.com/users/protoget/following{/other_user}", "gists_url": "https://api.github.com/users/protoget/gists{/gist_id}", "starred_url": "https://api.github.com/users/protoget/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/protoget/subscriptions", "organizations_url": "https://api.github.com/users/protoget/orgs", "repos_url": "https://api.github.com/users/protoget/repos", "events_url": "https://api.github.com/users/protoget/events{/privacy}", "received_events_url": "https://api.github.com/users/protoget/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "protoget", "id": 5117188, "node_id": "MDQ6VXNlcjUxMTcxODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5117188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/protoget", "html_url": "https://github.com/protoget", "followers_url": "https://api.github.com/users/protoget/followers", "following_url": "https://api.github.com/users/protoget/following{/other_user}", "gists_url": "https://api.github.com/users/protoget/gists{/gist_id}", "starred_url": "https://api.github.com/users/protoget/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/protoget/subscriptions", "organizations_url": "https://api.github.com/users/protoget/orgs", "repos_url": "https://api.github.com/users/protoget/repos", "events_url": "https://api.github.com/users/protoget/events{/privacy}", "received_events_url": "https://api.github.com/users/protoget/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2017-08-15T03:19:45Z", "updated_at": "2018-02-07T23:29:17Z", "closed_at": "2018-02-07T23:29:17Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.3.0-rc2</li>\n<li><strong>Python version</strong>: 3.5.2</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.52</li>\n<li><strong>CUDA/cuDNN version</strong>: 8.0/6.0.21</li>\n<li><strong>GPU model and memory</strong>:  Tesla K80/11.17GiB</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<pre><code>sess = tf.Session(config=tf.ConfigProto(allow_soft_placement=True))\n\n# Works \ncell = cudnn_rnn_ops.CudnnGRU(1, 5, 5, input_mode=\"linear_input\")\nsess.run(cell.params_to_canonical(tf.zeros([cell.params_size()])))\n\n# aborts with \"Check failed\"\ncell = cudnn_rnn_ops.CudnnGRU(1, 5, 5, input_mode=\"skip_input\")\nsess.run(cell.params_to_canonical(tf.zeros([cell.params_size()])))\n</code></pre>\n<h3>Describe the problem</h3>\n<p>If <code>input_mode</code> is \"skip_input\", <code>params_to_canonical</code> fails with a \"Check failed\" error for at least CudnnGRU</p>\n<h3>Logs</h3>\n<p>2017-08-15 03:05:45.807704: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:893] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero<br>\n2017-08-15 03:05:45.808201: I tensorflow/core/common_runtime/gpu/gpu_device.cc:955] Found device 0 with properties:<br>\nname: Tesla K80<br>\nmajor: 3 minor: 7 memoryClockRate (GHz) 0.8235<br>\npciBusID 0000:00:1e.0<br>\nTotal memory: 11.17GiB<br>\nFree memory: 11.11GiB<br>\n2017-08-15 03:05:45.808229: I tensorflow/core/common_runtime/gpu/gpu_device.cc:976] DMA: 0<br>\n2017-08-15 03:05:45.808241: I tensorflow/core/common_runtime/gpu/gpu_device.cc:986] 0:   Y<br>\n2017-08-15 03:05:45.808261: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1045] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: Tesla K80, pci bus id: 0000:00:1e.0)<br>\n2017-08-15 03:05:46.543863: F tensorflow/contrib/cudnn_rnn/kernels/cudnn_rnn_ops.cc:627] Check failed: size == width * height Params size mismatch. Expected 25, got 0<br>\nAborted (core dumped)</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.04\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): 1.3.0-rc2\nPython version: 3.5.2\nBazel version (if compiling from source): 0.52\nCUDA/cuDNN version: 8.0/6.0.21\nGPU model and memory:  Tesla K80/11.17GiB\nExact command to reproduce:\n\nsess = tf.Session(config=tf.ConfigProto(allow_soft_placement=True))\n\n# Works \ncell = cudnn_rnn_ops.CudnnGRU(1, 5, 5, input_mode=\"linear_input\")\nsess.run(cell.params_to_canonical(tf.zeros([cell.params_size()])))\n\n# aborts with \"Check failed\"\ncell = cudnn_rnn_ops.CudnnGRU(1, 5, 5, input_mode=\"skip_input\")\nsess.run(cell.params_to_canonical(tf.zeros([cell.params_size()])))\n\nDescribe the problem\nIf input_mode is \"skip_input\", params_to_canonical fails with a \"Check failed\" error for at least CudnnGRU\nLogs\n2017-08-15 03:05:45.807704: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:893] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n2017-08-15 03:05:45.808201: I tensorflow/core/common_runtime/gpu/gpu_device.cc:955] Found device 0 with properties:\nname: Tesla K80\nmajor: 3 minor: 7 memoryClockRate (GHz) 0.8235\npciBusID 0000:00:1e.0\nTotal memory: 11.17GiB\nFree memory: 11.11GiB\n2017-08-15 03:05:45.808229: I tensorflow/core/common_runtime/gpu/gpu_device.cc:976] DMA: 0\n2017-08-15 03:05:45.808241: I tensorflow/core/common_runtime/gpu/gpu_device.cc:986] 0:   Y\n2017-08-15 03:05:45.808261: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1045] Creating TensorFlow device (/gpu:0) -> (device: 0, name: Tesla K80, pci bus id: 0000:00:1e.0)\n2017-08-15 03:05:46.543863: F tensorflow/contrib/cudnn_rnn/kernels/cudnn_rnn_ops.cc:627] Check failed: size == width * height Params size mismatch. Expected 25, got 0\nAborted (core dumped)", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.3.0-rc2\r\n- **Python version**: 3.5.2\r\n- **Bazel version (if compiling from source)**: 0.52\r\n- **CUDA/cuDNN version**: 8.0/6.0.21\r\n- **GPU model and memory**:  Tesla K80/11.17GiB\r\n- **Exact command to reproduce**:\r\n\r\n```\r\nsess = tf.Session(config=tf.ConfigProto(allow_soft_placement=True))\r\n\r\n# Works \r\ncell = cudnn_rnn_ops.CudnnGRU(1, 5, 5, input_mode=\"linear_input\")\r\nsess.run(cell.params_to_canonical(tf.zeros([cell.params_size()])))\r\n\r\n# aborts with \"Check failed\"\r\ncell = cudnn_rnn_ops.CudnnGRU(1, 5, 5, input_mode=\"skip_input\")\r\nsess.run(cell.params_to_canonical(tf.zeros([cell.params_size()])))\r\n```\r\n### Describe the problem\r\nIf `input_mode` is \"skip_input\", `params_to_canonical` fails with a \"Check failed\" error for at least CudnnGRU\r\n\r\n### Logs\r\n2017-08-15 03:05:45.807704: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:893] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2017-08-15 03:05:45.808201: I tensorflow/core/common_runtime/gpu/gpu_device.cc:955] Found device 0 with properties:\r\nname: Tesla K80\r\nmajor: 3 minor: 7 memoryClockRate (GHz) 0.8235\r\npciBusID 0000:00:1e.0\r\nTotal memory: 11.17GiB\r\nFree memory: 11.11GiB\r\n2017-08-15 03:05:45.808229: I tensorflow/core/common_runtime/gpu/gpu_device.cc:976] DMA: 0\r\n2017-08-15 03:05:45.808241: I tensorflow/core/common_runtime/gpu/gpu_device.cc:986] 0:   Y\r\n2017-08-15 03:05:45.808261: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1045] Creating TensorFlow device (/gpu:0) -> (device: 0, name: Tesla K80, pci bus id: 0000:00:1e.0)\r\n2017-08-15 03:05:46.543863: F tensorflow/contrib/cudnn_rnn/kernels/cudnn_rnn_ops.cc:627] Check failed: size == width * height Params size mismatch. Expected 25, got 0\r\nAborted (core dumped)\r\n"}