{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/267331851", "html_url": "https://github.com/tensorflow/tensorflow/issues/6269#issuecomment-267331851", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6269", "id": 267331851, "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzMzMTg1MQ==", "user": {"login": "jramapuram", "id": 8204807, "node_id": "MDQ6VXNlcjgyMDQ4MDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/8204807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jramapuram", "html_url": "https://github.com/jramapuram", "followers_url": "https://api.github.com/users/jramapuram/followers", "following_url": "https://api.github.com/users/jramapuram/following{/other_user}", "gists_url": "https://api.github.com/users/jramapuram/gists{/gist_id}", "starred_url": "https://api.github.com/users/jramapuram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jramapuram/subscriptions", "organizations_url": "https://api.github.com/users/jramapuram/orgs", "repos_url": "https://api.github.com/users/jramapuram/repos", "events_url": "https://api.github.com/users/jramapuram/events{/privacy}", "received_events_url": "https://api.github.com/users/jramapuram/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-15T13:51:32Z", "updated_at": "2016-12-15T13:51:32Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9169511\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/EloiZ\">@EloiZ</a> : Yes, I see this as well. However, I raised this ticket merely to have a GPU kernel for shuffle.</p>\n<p>Most of the time you probably aren't going to randomly shuffle in the middle of a graph and will probably do it at the beginning of the graph (eg: data shuffling). It \"should\" be possible to apply the same logic of grabbing gradients in the slicing operators to the random shuffle operator if you do need gradients for this op.</p>\n<p>My specific use case is that I'm trying to implement random permutations (and avoid the creation/storing of many permutation matrices).</p>", "body_text": "@EloiZ : Yes, I see this as well. However, I raised this ticket merely to have a GPU kernel for shuffle.\nMost of the time you probably aren't going to randomly shuffle in the middle of a graph and will probably do it at the beginning of the graph (eg: data shuffling). It \"should\" be possible to apply the same logic of grabbing gradients in the slicing operators to the random shuffle operator if you do need gradients for this op.\nMy specific use case is that I'm trying to implement random permutations (and avoid the creation/storing of many permutation matrices).", "body": "@EloiZ : Yes, I see this as well. However, I raised this ticket merely to have a GPU kernel for shuffle.\r\n\r\nMost of the time you probably aren't going to randomly shuffle in the middle of a graph and will probably do it at the beginning of the graph (eg: data shuffling). It \"should\" be possible to apply the same logic of grabbing gradients in the slicing operators to the random shuffle operator if you do need gradients for this op.\r\n\r\nMy specific use case is that I'm trying to implement random permutations (and avoid the creation/storing of many permutation matrices)."}