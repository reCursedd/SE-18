{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16264", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16264/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16264/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16264/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16264", "id": 290249168, "node_id": "MDU6SXNzdWUyOTAyNDkxNjg=", "number": 16264, "title": "No module named tensorflow.python.platform", "user": {"login": "abratchik", "id": 6899165, "node_id": "MDQ6VXNlcjY4OTkxNjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6899165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abratchik", "html_url": "https://github.com/abratchik", "followers_url": "https://api.github.com/users/abratchik/followers", "following_url": "https://api.github.com/users/abratchik/following{/other_user}", "gists_url": "https://api.github.com/users/abratchik/gists{/gist_id}", "starred_url": "https://api.github.com/users/abratchik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abratchik/subscriptions", "organizations_url": "https://api.github.com/users/abratchik/orgs", "repos_url": "https://api.github.com/users/abratchik/repos", "events_url": "https://api.github.com/users/abratchik/events{/privacy}", "received_events_url": "https://api.github.com/users/abratchik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-21T05:47:58Z", "updated_at": "2018-09-19T09:30:56Z", "closed_at": "2018-01-21T06:20:21Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<p><strong>OS</strong><br>\nLinux 4.4.0-109-generic 132-Ubuntu SMP Tue Jan 9 19:52:39 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux<br>\nVERSION=\"16.04.3 LTS (Xenial Xerus)\"<br>\nVERSION_ID=\"16.04\"<br>\nVERSION_CODENAME=xenial<br>\n<strong>Tensorflow</strong><br>\nInstalled from source (git clone from this repository):<br>\ntf.VERSION = 1.5.0-rc1<br>\ntf.GIT_VERSION = v1.5.0-rc1-1379-g20f6af3<br>\ntf.COMPILER_VERSION = v1.5.0-rc1-1379-g20f6af3<br>\nSanity check: array([1], dtype=int32)<br>\n<strong>Python version</strong><br>\nPython 2.7.12<br>\n**Bazel version **<br>\nBuild label: 0.9.0<br>\n<strong>GCC/Compiler version</strong><br>\ngcc (Ubuntu 5.4.1-2ubuntu1~16.04) 5.4.1 20160904<br>\nnvcc Cuda compilation tools, release 9.1, V9.1.85<br>\n<strong>CUDA/cuDNN version</strong><br>\nCUDA Version 9.1.85<br>\ncuDNN Version 7.0.5<br>\n<strong>GPU model and memory</strong><br>\nGeForce 1080 Ti 11Gb<br>\nDriver Version: 387.26<br>\n<strong>Exact command to reproduce</strong></p>\n<ol>\n<li>git clone <a href=\"https://github.com/tensorflow/tensorflow\">https://github.com/tensorflow/tensorflow</a></li>\n<li>./configure</li>\n</ol>\n<pre><code>WARNING: Running Bazel server needs to be killed, because the startup options are different.\nYou have bazel 0.9.0 installed.\nPlease specify the location of python. [Default is /usr/bin/python]: \n\n\nFound possible Python library paths:\n  /usr/local/lib/python2.7/dist-packages\n  /usr/lib/python2.7/dist-packages\nPlease input the desired Python library path to use.  Default is [/usr/local/lib/python2.7/dist-packages]\n/usr/lib/python2.7/dist-packages\nDo you wish to build TensorFlow with jemalloc as malloc support? [Y/n]: n\nNo jemalloc as malloc support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with Google Cloud Platform support? [Y/n]: n\nNo Google Cloud Platform support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with Hadoop File System support? [Y/n]: \nHadoop File System support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with Amazon S3 File System support? [Y/n]: n\nNo Amazon S3 File System support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with XLA JIT support? [y/N]: \nNo XLA JIT support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with GDR support? [y/N]: \nNo GDR support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with VERBS support? [y/N]: \nNo VERBS support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with OpenCL SYCL support? [y/N]: \nNo OpenCL SYCL support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with CUDA support? [y/N]: y\nCUDA support will be enabled for TensorFlow.\n\nPlease specify the CUDA SDK version you want to use, e.g. 7.0. [Leave empty to default to CUDA 9.0]: 9.1\n\n\nPlease specify the location where CUDA 9.1 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: \n\n\nPlease specify the cuDNN version you want to use. [Leave empty to default to cuDNN 7.0]: 7.0.5\n\n\nPlease specify the location where cuDNN 7.0.5 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:\n\n\nPlease specify a list of comma-separated Cuda compute capabilities you want to build with.\nYou can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.\nPlease note that each additional compute capability significantly increases your build time and binary size. [Default is: 6.1]\n\n\nDo you want to use clang as CUDA compiler? [y/N]: \nnvcc will be used as CUDA compiler.\n\nPlease specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]: \n\n\nDo you wish to build TensorFlow with MPI support? [y/N]: \nNo MPI support will be enabled for TensorFlow.\n\nPlease specify optimization flags to use during compilation when bazel option \"--config=opt\" is specified [Default is -march=native]: \n\n\nWould you like to interactively configure ./WORKSPACE for Android builds? [y/N]: \nNot configuring the WORKSPACE for Android builds.\n\nPreconfigured Bazel build configs. You can use any of the below by adding \"--config=&lt;&gt;\" to your build command. See tools/bazel.rc for more details.\n\t--config=mkl         \t# Build with MKL support.\n\t--config=monolithic  \t# Config for mostly static monolithic build.\nConfiguration finished\n</code></pre>\n<ol start=\"3\">\n<li>bazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package --action_env=\"LD_LIBRARY_PATH=${LD_LIBRARY_PATH}\"</li>\n</ol>\n<pre><code>\nTarget //tensorflow/tools/pip_package:build_pip_package up-to-date:\n  bazel-bin/tensorflow/tools/pip_package/build_pip_package\nINFO: Elapsed time: 1505.551s, Critical Path: 92.22s\nINFO: Build completed successfully, 6091 total actions \n</code></pre>\n<ol start=\"4\">\n<li>bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg</li>\n</ol>\n<p><code>Sun Jan 21 09:39:44 +04 2018 : === Output wheel file is in: /tmp/tensorflow_pkg</code></p>\n<ol start=\"5\">\n<li>sudo pip install /tmp/tensorflow_pkg/tensorflow-1.5.0rc1-cp27-cp27mu-linux_x86_64.whl</li>\n</ol>\n<pre><code>Installing collected packages: tensorflow-tensorboard, tensorflow\nSuccessfully installed tensorflow-1.5.0rc1 tensorflow-tensorboard-0.4.0\n</code></pre>\n<ol start=\"6\">\n<li>start python &amp; post 'import tensorflow as tf' command</li>\n</ol>\n<pre><code>Traceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n  File \"tensorflow/__init__.py\", line 24, in &lt;module&gt;\n    from tensorflow.python import *\n  File \"tensorflow/python/__init__.py\", line 49, in &lt;module&gt;\n    from tensorflow.python import pywrap_tensorflow\n  File \"tensorflow/python/pywrap_tensorflow.py\", line 25, in &lt;module&gt;\n    from tensorflow.python.platform import self_check\nImportError: No module named platform\n</code></pre>", "body_text": "System information\nOS\nLinux 4.4.0-109-generic 132-Ubuntu SMP Tue Jan 9 19:52:39 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\nVERSION=\"16.04.3 LTS (Xenial Xerus)\"\nVERSION_ID=\"16.04\"\nVERSION_CODENAME=xenial\nTensorflow\nInstalled from source (git clone from this repository):\ntf.VERSION = 1.5.0-rc1\ntf.GIT_VERSION = v1.5.0-rc1-1379-g20f6af3\ntf.COMPILER_VERSION = v1.5.0-rc1-1379-g20f6af3\nSanity check: array([1], dtype=int32)\nPython version\nPython 2.7.12\n**Bazel version **\nBuild label: 0.9.0\nGCC/Compiler version\ngcc (Ubuntu 5.4.1-2ubuntu1~16.04) 5.4.1 20160904\nnvcc Cuda compilation tools, release 9.1, V9.1.85\nCUDA/cuDNN version\nCUDA Version 9.1.85\ncuDNN Version 7.0.5\nGPU model and memory\nGeForce 1080 Ti 11Gb\nDriver Version: 387.26\nExact command to reproduce\n\ngit clone https://github.com/tensorflow/tensorflow\n./configure\n\nWARNING: Running Bazel server needs to be killed, because the startup options are different.\nYou have bazel 0.9.0 installed.\nPlease specify the location of python. [Default is /usr/bin/python]: \n\n\nFound possible Python library paths:\n  /usr/local/lib/python2.7/dist-packages\n  /usr/lib/python2.7/dist-packages\nPlease input the desired Python library path to use.  Default is [/usr/local/lib/python2.7/dist-packages]\n/usr/lib/python2.7/dist-packages\nDo you wish to build TensorFlow with jemalloc as malloc support? [Y/n]: n\nNo jemalloc as malloc support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with Google Cloud Platform support? [Y/n]: n\nNo Google Cloud Platform support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with Hadoop File System support? [Y/n]: \nHadoop File System support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with Amazon S3 File System support? [Y/n]: n\nNo Amazon S3 File System support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with XLA JIT support? [y/N]: \nNo XLA JIT support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with GDR support? [y/N]: \nNo GDR support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with VERBS support? [y/N]: \nNo VERBS support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with OpenCL SYCL support? [y/N]: \nNo OpenCL SYCL support will be enabled for TensorFlow.\n\nDo you wish to build TensorFlow with CUDA support? [y/N]: y\nCUDA support will be enabled for TensorFlow.\n\nPlease specify the CUDA SDK version you want to use, e.g. 7.0. [Leave empty to default to CUDA 9.0]: 9.1\n\n\nPlease specify the location where CUDA 9.1 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: \n\n\nPlease specify the cuDNN version you want to use. [Leave empty to default to cuDNN 7.0]: 7.0.5\n\n\nPlease specify the location where cuDNN 7.0.5 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:\n\n\nPlease specify a list of comma-separated Cuda compute capabilities you want to build with.\nYou can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.\nPlease note that each additional compute capability significantly increases your build time and binary size. [Default is: 6.1]\n\n\nDo you want to use clang as CUDA compiler? [y/N]: \nnvcc will be used as CUDA compiler.\n\nPlease specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]: \n\n\nDo you wish to build TensorFlow with MPI support? [y/N]: \nNo MPI support will be enabled for TensorFlow.\n\nPlease specify optimization flags to use during compilation when bazel option \"--config=opt\" is specified [Default is -march=native]: \n\n\nWould you like to interactively configure ./WORKSPACE for Android builds? [y/N]: \nNot configuring the WORKSPACE for Android builds.\n\nPreconfigured Bazel build configs. You can use any of the below by adding \"--config=<>\" to your build command. See tools/bazel.rc for more details.\n\t--config=mkl         \t# Build with MKL support.\n\t--config=monolithic  \t# Config for mostly static monolithic build.\nConfiguration finished\n\n\nbazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package --action_env=\"LD_LIBRARY_PATH=${LD_LIBRARY_PATH}\"\n\n\nTarget //tensorflow/tools/pip_package:build_pip_package up-to-date:\n  bazel-bin/tensorflow/tools/pip_package/build_pip_package\nINFO: Elapsed time: 1505.551s, Critical Path: 92.22s\nINFO: Build completed successfully, 6091 total actions \n\n\nbazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\n\nSun Jan 21 09:39:44 +04 2018 : === Output wheel file is in: /tmp/tensorflow_pkg\n\nsudo pip install /tmp/tensorflow_pkg/tensorflow-1.5.0rc1-cp27-cp27mu-linux_x86_64.whl\n\nInstalling collected packages: tensorflow-tensorboard, tensorflow\nSuccessfully installed tensorflow-1.5.0rc1 tensorflow-tensorboard-0.4.0\n\n\nstart python & post 'import tensorflow as tf' command\n\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"tensorflow/__init__.py\", line 24, in <module>\n    from tensorflow.python import *\n  File \"tensorflow/python/__init__.py\", line 49, in <module>\n    from tensorflow.python import pywrap_tensorflow\n  File \"tensorflow/python/pywrap_tensorflow.py\", line 25, in <module>\n    from tensorflow.python.platform import self_check\nImportError: No module named platform", "body": "### System information\r\n**OS**\r\nLinux 4.4.0-109-generic 132-Ubuntu SMP Tue Jan 9 19:52:39 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\r\nVERSION=\"16.04.3 LTS (Xenial Xerus)\"\r\nVERSION_ID=\"16.04\"\r\nVERSION_CODENAME=xenial\r\n**Tensorflow**\r\nInstalled from source (git clone from this repository):\r\ntf.VERSION = 1.5.0-rc1\r\ntf.GIT_VERSION = v1.5.0-rc1-1379-g20f6af3\r\ntf.COMPILER_VERSION = v1.5.0-rc1-1379-g20f6af3\r\nSanity check: array([1], dtype=int32)\r\n**Python version**\r\nPython 2.7.12\r\n**Bazel version **\r\nBuild label: 0.9.0\r\n**GCC/Compiler version**\r\ngcc (Ubuntu 5.4.1-2ubuntu1~16.04) 5.4.1 20160904\r\nnvcc Cuda compilation tools, release 9.1, V9.1.85\r\n**CUDA/cuDNN version**\r\nCUDA Version 9.1.85\r\ncuDNN Version 7.0.5\r\n**GPU model and memory**\r\nGeForce 1080 Ti 11Gb\r\nDriver Version: 387.26 \r\n**Exact command to reproduce**\r\n\r\n1. git clone https://github.com/tensorflow/tensorflow \r\n2. ./configure\r\n\r\n```\r\nWARNING: Running Bazel server needs to be killed, because the startup options are different.\r\nYou have bazel 0.9.0 installed.\r\nPlease specify the location of python. [Default is /usr/bin/python]: \r\n\r\n\r\nFound possible Python library paths:\r\n  /usr/local/lib/python2.7/dist-packages\r\n  /usr/lib/python2.7/dist-packages\r\nPlease input the desired Python library path to use.  Default is [/usr/local/lib/python2.7/dist-packages]\r\n/usr/lib/python2.7/dist-packages\r\nDo you wish to build TensorFlow with jemalloc as malloc support? [Y/n]: n\r\nNo jemalloc as malloc support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with Google Cloud Platform support? [Y/n]: n\r\nNo Google Cloud Platform support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with Hadoop File System support? [Y/n]: \r\nHadoop File System support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with Amazon S3 File System support? [Y/n]: n\r\nNo Amazon S3 File System support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with XLA JIT support? [y/N]: \r\nNo XLA JIT support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with GDR support? [y/N]: \r\nNo GDR support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with VERBS support? [y/N]: \r\nNo VERBS support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with OpenCL SYCL support? [y/N]: \r\nNo OpenCL SYCL support will be enabled for TensorFlow.\r\n\r\nDo you wish to build TensorFlow with CUDA support? [y/N]: y\r\nCUDA support will be enabled for TensorFlow.\r\n\r\nPlease specify the CUDA SDK version you want to use, e.g. 7.0. [Leave empty to default to CUDA 9.0]: 9.1\r\n\r\n\r\nPlease specify the location where CUDA 9.1 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: \r\n\r\n\r\nPlease specify the cuDNN version you want to use. [Leave empty to default to cuDNN 7.0]: 7.0.5\r\n\r\n\r\nPlease specify the location where cuDNN 7.0.5 library is installed. Refer to README.md for more details. [Default is /usr/local/cuda]:\r\n\r\n\r\nPlease specify a list of comma-separated Cuda compute capabilities you want to build with.\r\nYou can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.\r\nPlease note that each additional compute capability significantly increases your build time and binary size. [Default is: 6.1]\r\n\r\n\r\nDo you want to use clang as CUDA compiler? [y/N]: \r\nnvcc will be used as CUDA compiler.\r\n\r\nPlease specify which gcc should be used by nvcc as the host compiler. [Default is /usr/bin/gcc]: \r\n\r\n\r\nDo you wish to build TensorFlow with MPI support? [y/N]: \r\nNo MPI support will be enabled for TensorFlow.\r\n\r\nPlease specify optimization flags to use during compilation when bazel option \"--config=opt\" is specified [Default is -march=native]: \r\n\r\n\r\nWould you like to interactively configure ./WORKSPACE for Android builds? [y/N]: \r\nNot configuring the WORKSPACE for Android builds.\r\n\r\nPreconfigured Bazel build configs. You can use any of the below by adding \"--config=<>\" to your build command. See tools/bazel.rc for more details.\r\n\t--config=mkl         \t# Build with MKL support.\r\n\t--config=monolithic  \t# Config for mostly static monolithic build.\r\nConfiguration finished\r\n```\r\n\r\n3. bazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package --action_env=\"LD_LIBRARY_PATH=${LD_LIBRARY_PATH}\"\r\n\r\n```\r\n\r\nTarget //tensorflow/tools/pip_package:build_pip_package up-to-date:\r\n  bazel-bin/tensorflow/tools/pip_package/build_pip_package\r\nINFO: Elapsed time: 1505.551s, Critical Path: 92.22s\r\nINFO: Build completed successfully, 6091 total actions \r\n```\r\n\r\n4. bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\r\n\r\n`Sun Jan 21 09:39:44 +04 2018 : === Output wheel file is in: /tmp/tensorflow_pkg`\r\n\r\n5. sudo pip install /tmp/tensorflow_pkg/tensorflow-1.5.0rc1-cp27-cp27mu-linux_x86_64.whl\r\n\r\n```\r\nInstalling collected packages: tensorflow-tensorboard, tensorflow\r\nSuccessfully installed tensorflow-1.5.0rc1 tensorflow-tensorboard-0.4.0\r\n```\r\n6.  start python & post 'import tensorflow as tf' command\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"tensorflow/__init__.py\", line 24, in <module>\r\n    from tensorflow.python import *\r\n  File \"tensorflow/python/__init__.py\", line 49, in <module>\r\n    from tensorflow.python import pywrap_tensorflow\r\n  File \"tensorflow/python/pywrap_tensorflow.py\", line 25, in <module>\r\n    from tensorflow.python.platform import self_check\r\nImportError: No module named platform\r\n```\r\n\r\n"}