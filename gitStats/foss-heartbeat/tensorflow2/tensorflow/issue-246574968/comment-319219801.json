{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/319219801", "html_url": "https://github.com/tensorflow/tensorflow/issues/11882#issuecomment-319219801", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11882", "id": 319219801, "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTIxOTgwMQ==", "user": {"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-31T22:57:08Z", "updated_at": "2017-07-31T22:57:08Z", "author_association": "MEMBER", "body_html": "<p>This version shows no relative error between any of the implementations, so I am thinking there is no bug</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n\nnp.random.seed(<span class=\"pl-c1\">1234</span>)\nconv_ <span class=\"pl-k\">=</span> np.random.randn(<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">7</span>, <span class=\"pl-c1\">7</span>, <span class=\"pl-c1\">56</span>)\n\nweight <span class=\"pl-k\">=</span> np.random.uniform(<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>.,<span class=\"pl-c1\">1</span>., (<span class=\"pl-c1\">9</span>,<span class=\"pl-c1\">9</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">56</span>)).astype(np.float32)\nbias <span class=\"pl-k\">=</span> np.random.uniform(<span class=\"pl-k\">-</span><span class=\"pl-c1\">.1</span>,<span class=\"pl-c1\">.1</span>, (<span class=\"pl-c1\">1</span>)).astype(np.float32)\n\n\n<span class=\"pl-k\">with</span> tf.device(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/cpu:0<span class=\"pl-pds\">\"</span></span>):\n    bottom <span class=\"pl-k\">=</span> tf.constant(conv_, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32)\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span>weight = tf.get_variable(\"weight_cpu\", [9, 9, 1, 56], initializer=tf.random_normal_initializer(0, 0.001))</span>\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span>bias = tf.get_variable(\"bias_cpu\", initializer=np.zeros(1, dtype=np.float32))</span>\n\n    conv <span class=\"pl-k\">=</span> tf.nn.conv2d_transpose(bottom, weight, [<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">19</span>, <span class=\"pl-c1\">19</span>, <span class=\"pl-c1\">1</span>], [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">1</span>], <span class=\"pl-v\">padding</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>SAME<span class=\"pl-pds\">'</span></span>)\n    conv_cpu <span class=\"pl-k\">=</span> tf.nn.bias_add(conv, bias)\n\n\n<span class=\"pl-k\">with</span> tf.device(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>/gpu:0<span class=\"pl-pds\">'</span></span>):\n    bottom <span class=\"pl-k\">=</span> tf.constant(conv_, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32)\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span>weight = tf.get_variable(\"weight_gpu\", [9, 9, 1, 56], initializer=tf.random_normal_initializer(0, 0.001))</span>\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span>bias = tf.get_variable(\"bias_gpu\", initializer=np.zeros(1, dtype=np.float32))</span>\n\n    conv <span class=\"pl-k\">=</span> tf.nn.conv2d_transpose(bottom, weight, [<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">19</span>, <span class=\"pl-c1\">19</span>, <span class=\"pl-c1\">1</span>], [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">1</span>], <span class=\"pl-v\">padding</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>SAME<span class=\"pl-pds\">'</span></span>)\n    conv_gpu <span class=\"pl-k\">=</span> tf.nn.bias_add(conv, bias)\n\n\nsess <span class=\"pl-k\">=</span> tf.Session()\nsess.run(tf.global_variables_initializer())\ncpu_a<span class=\"pl-k\">=</span>sess.run(conv_cpu)\ngpu_a<span class=\"pl-k\">=</span>sess.run(conv_gpu)\ngpu_b<span class=\"pl-k\">=</span>sess.run(conv_gpu)</pre></div>", "body_text": "This version shows no relative error between any of the implementations, so I am thinking there is no bug\nimport tensorflow as tf\nimport numpy as np\n\nnp.random.seed(1234)\nconv_ = np.random.randn(10, 7, 7, 56)\n\nweight = np.random.uniform(-1.,1., (9,9,1,56)).astype(np.float32)\nbias = np.random.uniform(-.1,.1, (1)).astype(np.float32)\n\n\nwith tf.device(\"/cpu:0\"):\n    bottom = tf.constant(conv_, dtype=tf.float32)\n    #weight = tf.get_variable(\"weight_cpu\", [9, 9, 1, 56], initializer=tf.random_normal_initializer(0, 0.001))\n    #bias = tf.get_variable(\"bias_cpu\", initializer=np.zeros(1, dtype=np.float32))\n\n    conv = tf.nn.conv2d_transpose(bottom, weight, [10, 19, 19, 1], [1, 3, 3, 1], padding='SAME')\n    conv_cpu = tf.nn.bias_add(conv, bias)\n\n\nwith tf.device('/gpu:0'):\n    bottom = tf.constant(conv_, dtype=tf.float32)\n    #weight = tf.get_variable(\"weight_gpu\", [9, 9, 1, 56], initializer=tf.random_normal_initializer(0, 0.001))\n    #bias = tf.get_variable(\"bias_gpu\", initializer=np.zeros(1, dtype=np.float32))\n\n    conv = tf.nn.conv2d_transpose(bottom, weight, [10, 19, 19, 1], [1, 3, 3, 1], padding='SAME')\n    conv_gpu = tf.nn.bias_add(conv, bias)\n\n\nsess = tf.Session()\nsess.run(tf.global_variables_initializer())\ncpu_a=sess.run(conv_cpu)\ngpu_a=sess.run(conv_gpu)\ngpu_b=sess.run(conv_gpu)", "body": "This version shows no relative error between any of the implementations, so I am thinking there is no bug\r\n```python\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\nnp.random.seed(1234)\r\nconv_ = np.random.randn(10, 7, 7, 56)\r\n\r\nweight = np.random.uniform(-1.,1., (9,9,1,56)).astype(np.float32)\r\nbias = np.random.uniform(-.1,.1, (1)).astype(np.float32)\r\n\r\n\r\nwith tf.device(\"/cpu:0\"):\r\n    bottom = tf.constant(conv_, dtype=tf.float32)\r\n    #weight = tf.get_variable(\"weight_cpu\", [9, 9, 1, 56], initializer=tf.random_normal_initializer(0, 0.001))\r\n    #bias = tf.get_variable(\"bias_cpu\", initializer=np.zeros(1, dtype=np.float32))\r\n\r\n    conv = tf.nn.conv2d_transpose(bottom, weight, [10, 19, 19, 1], [1, 3, 3, 1], padding='SAME')\r\n    conv_cpu = tf.nn.bias_add(conv, bias)\r\n\r\n\r\nwith tf.device('/gpu:0'):\r\n    bottom = tf.constant(conv_, dtype=tf.float32)\r\n    #weight = tf.get_variable(\"weight_gpu\", [9, 9, 1, 56], initializer=tf.random_normal_initializer(0, 0.001))\r\n    #bias = tf.get_variable(\"bias_gpu\", initializer=np.zeros(1, dtype=np.float32))\r\n\r\n    conv = tf.nn.conv2d_transpose(bottom, weight, [10, 19, 19, 1], [1, 3, 3, 1], padding='SAME')\r\n    conv_gpu = tf.nn.bias_add(conv, bias)\r\n\r\n\r\nsess = tf.Session()\r\nsess.run(tf.global_variables_initializer())\r\ncpu_a=sess.run(conv_cpu)\r\ngpu_a=sess.run(conv_gpu)\r\ngpu_b=sess.run(conv_gpu)\r\n```"}