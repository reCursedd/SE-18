{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/409684386", "html_url": "https://github.com/tensorflow/tensorflow/issues/21287#issuecomment-409684386", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21287", "id": 409684386, "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTY4NDM4Ng==", "user": {"login": "mrezak", "id": 4903456, "node_id": "MDQ6VXNlcjQ5MDM0NTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/4903456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrezak", "html_url": "https://github.com/mrezak", "followers_url": "https://api.github.com/users/mrezak/followers", "following_url": "https://api.github.com/users/mrezak/following{/other_user}", "gists_url": "https://api.github.com/users/mrezak/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrezak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrezak/subscriptions", "organizations_url": "https://api.github.com/users/mrezak/orgs", "repos_url": "https://api.github.com/users/mrezak/repos", "events_url": "https://api.github.com/users/mrezak/events{/privacy}", "received_events_url": "https://api.github.com/users/mrezak/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-01T18:56:04Z", "updated_at": "2018-08-01T18:56:04Z", "author_association": "NONE", "body_html": "<p>Seems that I cannot even get <code>static_rnn</code> to work with TPU while it works okey on CPU (and it gave me similar costs as <code>dynamic_rnn</code> on CPU).</p>\n<p>Here is the model_fn code with static_rnn:</p>\n<pre><code>def model_fn(features, mode, params):\n    tf.set_random_seed(SEED) # Use for BasicRNNCell, it does not get an initializer\n    batch_size=params['batch_size']\n    ts = features.get_shape().as_list()[1]\n    seq_len = ts * np.ones([batch_size,])\n    with tf.variable_scope('encoder'):\n        init_kern = tf.random_normal_initializer(0.0, 0.1, dtype=tf.float32, seed=SEED)\n        cell = tf.contrib.rnn.BasicRNNCell(num_units=20)\n        #cell = tf.contrib.rnn.GRUCell(num_units=20, kernel_initializer=init_kern)\n        rnn_input = list(tf.split(features, ts, axis=1))\n        rnn_input = [tf.squeeze(t) for t in rnn_input]\n        _, output_latent = tf.nn.static_rnn(cell=cell, inputs=rnn_input, sequence_length=seq_len, dtype=tf.float32)\n        print(output_latent)\n    with tf.variable_scope('decoder'):\n        init_kern = tf.random_normal_initializer(0.0, 0.1, dtype=tf.float32, seed=SEED)\n        cell = tf.contrib.rnn.BasicRNNCell(num_units=20)\n        #cell = tf.contrib.rnn.GRUCell(num_units=20, kernel_initializer=init_kern)\n        z_inps = [tf.zeros([batch_size, 1])] * ts\n        output_recon, _ = tf.nn.static_rnn(cell=cell, inputs=z_inps, initial_state=output_latent,\n                                            sequence_length=seq_len, dtype=tf.float32)\n        output_recon = tf.stack(output_recon, 1)\n        print(output_recon)\n\n    winit = tf.random_normal_initializer(0.0, 0.1, dtype=tf.float32, seed=SEED)\n    output_recon = tf.contrib.layers.fully_connected(inputs=output_recon, num_outputs=params['dims'], activation_fn=None, weights_initializer=winit)\n    loss = tf.losses.mean_squared_error(features, output_recon)\n\n    global_step = tf.train.get_global_step()\n    opt = tf.train.AdamOptimizer(0.01)\n    if USE_TPU:\n        opt = tf.contrib.tpu.CrossShardOptimizer(opt)\n    train_op = opt.minimize(loss, global_step)\n    def metric_fn(labels, rec):\n        return {\n        'MSE': tf.metrics.mean_squared_error(labels, rec),\n        }\n    tpu_eval_metrics = (metric_fn, [features, output_recon])\n\n    return tpu_estimator.TPUEstimatorSpec(mode=mode,\n                                      loss=loss,\n                                      train_op=train_op,\n                                      eval_metrics=tpu_eval_metrics,\n                                      )\n</code></pre>\n<p>And here is the error I get using static_rnn on TPU:</p>\n<pre><code>    model.train(train_input, steps=num_steps)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/estimator.py\", line 366, in train\n    loss = self._train_model(input_fn, hooks, saving_listeners)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/estimator.py\", line 1119, in _train_model\n    return self._train_model_default(input_fn, hooks, saving_listeners)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/estimator.py\", line 1135, in _train_model_default\n    saving_listeners)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/estimator.py\", line 1336, in _train_with_estimator_spec\n    _, loss = mon_sess.run([estimator_spec.train_op, estimator_spec.loss])\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 577, in run\n    run_metadata=run_metadata)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 1053, in run\n    run_metadata=run_metadata)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 1144, in run\n    raise six.reraise(*original_exc_info)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 1129, in run\n    return self._sess.run(*args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 1201, in run\n    run_metadata=run_metadata)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 981, in run\n    return self._sess.run(*args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 900, in run\n    run_metadata_ptr)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1135, in _run\n    feed_dict_tensor, options, run_metadata)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1316, in _do_run\n    run_metadata)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1335, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Compilation failure: Mismatched parent frames for 932: while_context vs\n\tTPU compilation failed\n\t [[Node: tpu_compile_succeeded_assert/_25 = TPUCompileSucceededAssert[_device=\"/job:worker/replica:0/task:0/device:TPU_SYSTEM:0\"](TPUReplicate/_compile/_24)]]\n\t [[Node: encoder/rnn/basic_rnn_cell/bias/Adam/switch_val/_96_G105 = _Recv[client_terminated=false, recv_device=\"/job:worker/replica:0/task:0/device:CPU:0\", send_device=\"/job:worker/replica:0/task:0/device:TPU:0\", send_device_incarnation=3404073267463702744, tensor_name=\"edge_225_encoder/rnn/basic_rnn_cell/bias/Adam/switch_val/_96\", tensor_type=DT_FLOAT, _device=\"/job:worker/replica:0/task:0/device:CPU:0\"]()]]\n</code></pre>", "body_text": "Seems that I cannot even get static_rnn to work with TPU while it works okey on CPU (and it gave me similar costs as dynamic_rnn on CPU).\nHere is the model_fn code with static_rnn:\ndef model_fn(features, mode, params):\n    tf.set_random_seed(SEED) # Use for BasicRNNCell, it does not get an initializer\n    batch_size=params['batch_size']\n    ts = features.get_shape().as_list()[1]\n    seq_len = ts * np.ones([batch_size,])\n    with tf.variable_scope('encoder'):\n        init_kern = tf.random_normal_initializer(0.0, 0.1, dtype=tf.float32, seed=SEED)\n        cell = tf.contrib.rnn.BasicRNNCell(num_units=20)\n        #cell = tf.contrib.rnn.GRUCell(num_units=20, kernel_initializer=init_kern)\n        rnn_input = list(tf.split(features, ts, axis=1))\n        rnn_input = [tf.squeeze(t) for t in rnn_input]\n        _, output_latent = tf.nn.static_rnn(cell=cell, inputs=rnn_input, sequence_length=seq_len, dtype=tf.float32)\n        print(output_latent)\n    with tf.variable_scope('decoder'):\n        init_kern = tf.random_normal_initializer(0.0, 0.1, dtype=tf.float32, seed=SEED)\n        cell = tf.contrib.rnn.BasicRNNCell(num_units=20)\n        #cell = tf.contrib.rnn.GRUCell(num_units=20, kernel_initializer=init_kern)\n        z_inps = [tf.zeros([batch_size, 1])] * ts\n        output_recon, _ = tf.nn.static_rnn(cell=cell, inputs=z_inps, initial_state=output_latent,\n                                            sequence_length=seq_len, dtype=tf.float32)\n        output_recon = tf.stack(output_recon, 1)\n        print(output_recon)\n\n    winit = tf.random_normal_initializer(0.0, 0.1, dtype=tf.float32, seed=SEED)\n    output_recon = tf.contrib.layers.fully_connected(inputs=output_recon, num_outputs=params['dims'], activation_fn=None, weights_initializer=winit)\n    loss = tf.losses.mean_squared_error(features, output_recon)\n\n    global_step = tf.train.get_global_step()\n    opt = tf.train.AdamOptimizer(0.01)\n    if USE_TPU:\n        opt = tf.contrib.tpu.CrossShardOptimizer(opt)\n    train_op = opt.minimize(loss, global_step)\n    def metric_fn(labels, rec):\n        return {\n        'MSE': tf.metrics.mean_squared_error(labels, rec),\n        }\n    tpu_eval_metrics = (metric_fn, [features, output_recon])\n\n    return tpu_estimator.TPUEstimatorSpec(mode=mode,\n                                      loss=loss,\n                                      train_op=train_op,\n                                      eval_metrics=tpu_eval_metrics,\n                                      )\n\nAnd here is the error I get using static_rnn on TPU:\n    model.train(train_input, steps=num_steps)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/estimator.py\", line 366, in train\n    loss = self._train_model(input_fn, hooks, saving_listeners)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/estimator.py\", line 1119, in _train_model\n    return self._train_model_default(input_fn, hooks, saving_listeners)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/estimator.py\", line 1135, in _train_model_default\n    saving_listeners)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/estimator.py\", line 1336, in _train_with_estimator_spec\n    _, loss = mon_sess.run([estimator_spec.train_op, estimator_spec.loss])\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 577, in run\n    run_metadata=run_metadata)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 1053, in run\n    run_metadata=run_metadata)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 1144, in run\n    raise six.reraise(*original_exc_info)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 1129, in run\n    return self._sess.run(*args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 1201, in run\n    run_metadata=run_metadata)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 981, in run\n    return self._sess.run(*args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 900, in run\n    run_metadata_ptr)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1135, in _run\n    feed_dict_tensor, options, run_metadata)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1316, in _do_run\n    run_metadata)\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1335, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Compilation failure: Mismatched parent frames for 932: while_context vs\n\tTPU compilation failed\n\t [[Node: tpu_compile_succeeded_assert/_25 = TPUCompileSucceededAssert[_device=\"/job:worker/replica:0/task:0/device:TPU_SYSTEM:0\"](TPUReplicate/_compile/_24)]]\n\t [[Node: encoder/rnn/basic_rnn_cell/bias/Adam/switch_val/_96_G105 = _Recv[client_terminated=false, recv_device=\"/job:worker/replica:0/task:0/device:CPU:0\", send_device=\"/job:worker/replica:0/task:0/device:TPU:0\", send_device_incarnation=3404073267463702744, tensor_name=\"edge_225_encoder/rnn/basic_rnn_cell/bias/Adam/switch_val/_96\", tensor_type=DT_FLOAT, _device=\"/job:worker/replica:0/task:0/device:CPU:0\"]()]]", "body": "Seems that I cannot even get `static_rnn` to work with TPU while it works okey on CPU (and it gave me similar costs as `dynamic_rnn` on CPU). \r\n\r\nHere is the model_fn code with static_rnn:\r\n```\r\ndef model_fn(features, mode, params):\r\n    tf.set_random_seed(SEED) # Use for BasicRNNCell, it does not get an initializer\r\n    batch_size=params['batch_size']\r\n    ts = features.get_shape().as_list()[1]\r\n    seq_len = ts * np.ones([batch_size,])\r\n    with tf.variable_scope('encoder'):\r\n        init_kern = tf.random_normal_initializer(0.0, 0.1, dtype=tf.float32, seed=SEED)\r\n        cell = tf.contrib.rnn.BasicRNNCell(num_units=20)\r\n        #cell = tf.contrib.rnn.GRUCell(num_units=20, kernel_initializer=init_kern)\r\n        rnn_input = list(tf.split(features, ts, axis=1))\r\n        rnn_input = [tf.squeeze(t) for t in rnn_input]\r\n        _, output_latent = tf.nn.static_rnn(cell=cell, inputs=rnn_input, sequence_length=seq_len, dtype=tf.float32)\r\n        print(output_latent)\r\n    with tf.variable_scope('decoder'):\r\n        init_kern = tf.random_normal_initializer(0.0, 0.1, dtype=tf.float32, seed=SEED)\r\n        cell = tf.contrib.rnn.BasicRNNCell(num_units=20)\r\n        #cell = tf.contrib.rnn.GRUCell(num_units=20, kernel_initializer=init_kern)\r\n        z_inps = [tf.zeros([batch_size, 1])] * ts\r\n        output_recon, _ = tf.nn.static_rnn(cell=cell, inputs=z_inps, initial_state=output_latent,\r\n                                            sequence_length=seq_len, dtype=tf.float32)\r\n        output_recon = tf.stack(output_recon, 1)\r\n        print(output_recon)\r\n\r\n    winit = tf.random_normal_initializer(0.0, 0.1, dtype=tf.float32, seed=SEED)\r\n    output_recon = tf.contrib.layers.fully_connected(inputs=output_recon, num_outputs=params['dims'], activation_fn=None, weights_initializer=winit)\r\n    loss = tf.losses.mean_squared_error(features, output_recon)\r\n\r\n    global_step = tf.train.get_global_step()\r\n    opt = tf.train.AdamOptimizer(0.01)\r\n    if USE_TPU:\r\n        opt = tf.contrib.tpu.CrossShardOptimizer(opt)\r\n    train_op = opt.minimize(loss, global_step)\r\n    def metric_fn(labels, rec):\r\n        return {\r\n        'MSE': tf.metrics.mean_squared_error(labels, rec),\r\n        }\r\n    tpu_eval_metrics = (metric_fn, [features, output_recon])\r\n\r\n    return tpu_estimator.TPUEstimatorSpec(mode=mode,\r\n                                      loss=loss,\r\n                                      train_op=train_op,\r\n                                      eval_metrics=tpu_eval_metrics,\r\n                                      )\r\n```\r\n\r\nAnd here is the error I get using static_rnn on TPU:\r\n```\r\n    model.train(train_input, steps=num_steps)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/estimator.py\", line 366, in train\r\n    loss = self._train_model(input_fn, hooks, saving_listeners)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/estimator.py\", line 1119, in _train_model\r\n    return self._train_model_default(input_fn, hooks, saving_listeners)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/estimator.py\", line 1135, in _train_model_default\r\n    saving_listeners)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/estimator/estimator.py\", line 1336, in _train_with_estimator_spec\r\n    _, loss = mon_sess.run([estimator_spec.train_op, estimator_spec.loss])\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 577, in run\r\n    run_metadata=run_metadata)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 1053, in run\r\n    run_metadata=run_metadata)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 1144, in run\r\n    raise six.reraise(*original_exc_info)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 1129, in run\r\n    return self._sess.run(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 1201, in run\r\n    run_metadata=run_metadata)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py\", line 981, in run\r\n    return self._sess.run(*args, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 900, in run\r\n    run_metadata_ptr)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1135, in _run\r\n    feed_dict_tensor, options, run_metadata)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1316, in _do_run\r\n    run_metadata)\r\n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 1335, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Compilation failure: Mismatched parent frames for 932: while_context vs\r\n\tTPU compilation failed\r\n\t [[Node: tpu_compile_succeeded_assert/_25 = TPUCompileSucceededAssert[_device=\"/job:worker/replica:0/task:0/device:TPU_SYSTEM:0\"](TPUReplicate/_compile/_24)]]\r\n\t [[Node: encoder/rnn/basic_rnn_cell/bias/Adam/switch_val/_96_G105 = _Recv[client_terminated=false, recv_device=\"/job:worker/replica:0/task:0/device:CPU:0\", send_device=\"/job:worker/replica:0/task:0/device:TPU:0\", send_device_incarnation=3404073267463702744, tensor_name=\"edge_225_encoder/rnn/basic_rnn_cell/bias/Adam/switch_val/_96\", tensor_type=DT_FLOAT, _device=\"/job:worker/replica:0/task:0/device:CPU:0\"]()]]\r\n```"}