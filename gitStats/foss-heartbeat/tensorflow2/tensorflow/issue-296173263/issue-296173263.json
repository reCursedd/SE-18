{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16928", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16928/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16928/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16928/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/16928", "id": 296173263, "node_id": "MDExOlB1bGxSZXF1ZXN0MTY4NDQzNDE3", "number": 16928, "title": "[MSVC] Use explicit func pointer to static method instead of lambda func", "user": {"login": "rongjiecomputer", "id": 13115060, "node_id": "MDQ6VXNlcjEzMTE1MDYw", "avatar_url": "https://avatars2.githubusercontent.com/u/13115060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rongjiecomputer", "html_url": "https://github.com/rongjiecomputer", "followers_url": "https://api.github.com/users/rongjiecomputer/followers", "following_url": "https://api.github.com/users/rongjiecomputer/following{/other_user}", "gists_url": "https://api.github.com/users/rongjiecomputer/gists{/gist_id}", "starred_url": "https://api.github.com/users/rongjiecomputer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rongjiecomputer/subscriptions", "organizations_url": "https://api.github.com/users/rongjiecomputer/orgs", "repos_url": "https://api.github.com/users/rongjiecomputer/repos", "events_url": "https://api.github.com/users/rongjiecomputer/events{/privacy}", "received_events_url": "https://api.github.com/users/rongjiecomputer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "jpienaar", "id": 706766, "node_id": "MDQ6VXNlcjcwNjc2Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/706766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpienaar", "html_url": "https://github.com/jpienaar", "followers_url": "https://api.github.com/users/jpienaar/followers", "following_url": "https://api.github.com/users/jpienaar/following{/other_user}", "gists_url": "https://api.github.com/users/jpienaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpienaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpienaar/subscriptions", "organizations_url": "https://api.github.com/users/jpienaar/orgs", "repos_url": "https://api.github.com/users/jpienaar/repos", "events_url": "https://api.github.com/users/jpienaar/events{/privacy}", "received_events_url": "https://api.github.com/users/jpienaar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jpienaar", "id": 706766, "node_id": "MDQ6VXNlcjcwNjc2Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/706766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpienaar", "html_url": "https://github.com/jpienaar", "followers_url": "https://api.github.com/users/jpienaar/followers", "following_url": "https://api.github.com/users/jpienaar/following{/other_user}", "gists_url": "https://api.github.com/users/jpienaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpienaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpienaar/subscriptions", "organizations_url": "https://api.github.com/users/jpienaar/orgs", "repos_url": "https://api.github.com/users/jpienaar/repos", "events_url": "https://api.github.com/users/jpienaar/events{/privacy}", "received_events_url": "https://api.github.com/users/jpienaar/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-02-11T08:48:47Z", "updated_at": "2018-02-12T23:56:20Z", "closed_at": "2018-02-12T23:51:51Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/16928", "html_url": "https://github.com/tensorflow/tensorflow/pull/16928", "diff_url": "https://github.com/tensorflow/tensorflow/pull/16928.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/16928.patch"}, "body_html": "<p>MSVC cannot decide the common type to accept two lambda functions even though they are non-capturing and have the same function signatures.</p>\n<p>Since they just pass parameters to static methods, just use function pointers to these static methods.</p>\n<p><code>using EqShapeFuncType = bool (*)(const Shape&amp;, const Shape&amp;)</code> is really just for readability. I just thought that reader might not be able to figure out the function signature if I just use <code>auto eq_shapes = layout_sensitive ? ShapeUtil::Equal : ShapeUtil::Compatible</code>.</p>\n<p>/cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3104289\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/thefiddler\">@thefiddler</a></p>\n<p><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"296099634\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/16911\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/16911/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/16911\">#16911</a></p>", "body_text": "MSVC cannot decide the common type to accept two lambda functions even though they are non-capturing and have the same function signatures.\nSince they just pass parameters to static methods, just use function pointers to these static methods.\nusing EqShapeFuncType = bool (*)(const Shape&, const Shape&) is really just for readability. I just thought that reader might not be able to figure out the function signature if I just use auto eq_shapes = layout_sensitive ? ShapeUtil::Equal : ShapeUtil::Compatible.\n/cc @thefiddler\n#16911", "body": "MSVC cannot decide the common type to accept two lambda functions even though they are non-capturing and have the same function signatures.\r\n\r\nSince they just pass parameters to static methods, just use function pointers to these static methods.\r\n\r\n`using EqShapeFuncType = bool (*)(const Shape&, const Shape&)` is really just for readability. I just thought that reader might not be able to figure out the function signature if I just use `auto eq_shapes = layout_sensitive ? ShapeUtil::Equal : ShapeUtil::Compatible`.\r\n\r\n/cc @thefiddler\r\n\r\n#16911"}