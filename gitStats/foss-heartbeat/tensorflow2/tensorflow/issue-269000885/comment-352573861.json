{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/352573861", "html_url": "https://github.com/tensorflow/tensorflow/issues/14017#issuecomment-352573861", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14017", "id": 352573861, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjU3Mzg2MQ==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-18T22:09:48Z", "updated_at": "2017-12-18T22:09:48Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I don't think we can change that behavior without breaking backwards compatibility. I tracked down the original commit that added <a href=\"https://github.com/tensorflow/tensorflow/blame/4cdc52964ae24f2c2b863939b4dc9cbe9cd9d104/tensorflow/python/framework/tensor_util.py#L424\">this behavior</a>, by <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7943790\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zffchen78\">@zffchen78</a>. There's no documentation of the rationale, but perhaps ZF can comment.</p>\n<p>(I suspect the reason is something like \"Nobody wanted to use double precision to train their networks when we started, and choosing this default avoids the need for lots of explicit <code>tf.float32</code> casts.\" The trend towards lower-precision training seems to back this up.)</p>", "body_text": "I don't think we can change that behavior without breaking backwards compatibility. I tracked down the original commit that added this behavior, by @zffchen78. There's no documentation of the rationale, but perhaps ZF can comment.\n(I suspect the reason is something like \"Nobody wanted to use double precision to train their networks when we started, and choosing this default avoids the need for lots of explicit tf.float32 casts.\" The trend towards lower-precision training seems to back this up.)", "body": "I don't think we can change that behavior without breaking backwards compatibility. I tracked down the original commit that added [this behavior](https://github.com/tensorflow/tensorflow/blame/4cdc52964ae24f2c2b863939b4dc9cbe9cd9d104/tensorflow/python/framework/tensor_util.py#L424), by @zffchen78. There's no documentation of the rationale, but perhaps ZF can comment.\r\n\r\n(I suspect the reason is something like \"Nobody wanted to use double precision to train their networks when we started, and choosing this default avoids the need for lots of explicit `tf.float32` casts.\" The trend towards lower-precision training seems to back this up.)"}