{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11186", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11186/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11186/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11186/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/11186", "id": 239846069, "node_id": "MDU6SXNzdWUyMzk4NDYwNjk=", "number": 11186, "title": "tf.copy() as alternative to tf.identity()", "user": {"login": "danijar", "id": 2111293, "node_id": "MDQ6VXNlcjIxMTEyOTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2111293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danijar", "html_url": "https://github.com/danijar", "followers_url": "https://api.github.com/users/danijar/followers", "following_url": "https://api.github.com/users/danijar/following{/other_user}", "gists_url": "https://api.github.com/users/danijar/gists{/gist_id}", "starred_url": "https://api.github.com/users/danijar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danijar/subscriptions", "organizations_url": "https://api.github.com/users/danijar/orgs", "repos_url": "https://api.github.com/users/danijar/repos", "events_url": "https://api.github.com/users/danijar/events{/privacy}", "received_events_url": "https://api.github.com/users/danijar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-06-30T17:46:32Z", "updated_at": "2017-12-20T18:45:41Z", "closed_at": null, "author_association": "MEMBER", "body_html": "<p><code>tf.identity(tensor)</code> does or does not create a copy of the tensor based on whether it's on the same device. This can lead to bugs that are hard to find. The current way of ensuring a copy is to perform an arithmetic/logic operation that doesn't change the value, such as <code>tensor + 0</code>, <code>1 * tensor</code>, or <code>tf.equal(tensor, True)</code>. Needless to say, this makes code hard to read. Moreover, different treatment is needed for different tensor types. Can we have a <code>tf.copy(tensor)</code> that does this for us?</p>", "body_text": "tf.identity(tensor) does or does not create a copy of the tensor based on whether it's on the same device. This can lead to bugs that are hard to find. The current way of ensuring a copy is to perform an arithmetic/logic operation that doesn't change the value, such as tensor + 0, 1 * tensor, or tf.equal(tensor, True). Needless to say, this makes code hard to read. Moreover, different treatment is needed for different tensor types. Can we have a tf.copy(tensor) that does this for us?", "body": "`tf.identity(tensor)` does or does not create a copy of the tensor based on whether it's on the same device. This can lead to bugs that are hard to find. The current way of ensuring a copy is to perform an arithmetic/logic operation that doesn't change the value, such as `tensor + 0`, `1 * tensor`, or `tf.equal(tensor, True)`. Needless to say, this makes code hard to read. Moreover, different treatment is needed for different tensor types. Can we have a `tf.copy(tensor)` that does this for us?"}