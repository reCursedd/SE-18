{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/213623789", "html_url": "https://github.com/tensorflow/tensorflow/issues/2066#issuecomment-213623789", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2066", "id": 213623789, "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzYyMzc4OQ==", "user": {"login": "kshmelkov", "id": 10819534, "node_id": "MDQ6VXNlcjEwODE5NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/10819534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kshmelkov", "html_url": "https://github.com/kshmelkov", "followers_url": "https://api.github.com/users/kshmelkov/followers", "following_url": "https://api.github.com/users/kshmelkov/following{/other_user}", "gists_url": "https://api.github.com/users/kshmelkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/kshmelkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kshmelkov/subscriptions", "organizations_url": "https://api.github.com/users/kshmelkov/orgs", "repos_url": "https://api.github.com/users/kshmelkov/repos", "events_url": "https://api.github.com/users/kshmelkov/events{/privacy}", "received_events_url": "https://api.github.com/users/kshmelkov/received_events", "type": "User", "site_admin": false}, "created_at": "2016-04-22T23:29:15Z", "updated_at": "2016-04-22T23:30:08Z", "author_association": "NONE", "body_html": "<p>I managed to reduce it to really clean case:</p>\n<pre><code>import tensorflow as tf\nimport numpy as np\n\nnp.random.seed(42)\na = np.random.randn(64, 32, 32, 3)\n\nsess = tf.Session()\n\nx = tf.placeholder(tf.float32, shape=(64, 32, 32, 3))\n\nW = tf.get_variable('weights', [1, 1, 3, 16], initializer=tf.random_normal_initializer())\nout = tf.nn.conv2d(x, W, strides=[1, 2, 2, 1], padding='SAME')\nloss = tf.reduce_mean(out)\n\nopt = tf.train.GradientDescentOptimizer(0.01)\ntrain_op = opt.minimize(loss)\n\nsess.run(tf.initialize_all_variables())\nsess.run(train_op, feed_dict={x: a})\n</code></pre>\n<p>Looks like something is wrong in backward pass call to cudnn.</p>", "body_text": "I managed to reduce it to really clean case:\nimport tensorflow as tf\nimport numpy as np\n\nnp.random.seed(42)\na = np.random.randn(64, 32, 32, 3)\n\nsess = tf.Session()\n\nx = tf.placeholder(tf.float32, shape=(64, 32, 32, 3))\n\nW = tf.get_variable('weights', [1, 1, 3, 16], initializer=tf.random_normal_initializer())\nout = tf.nn.conv2d(x, W, strides=[1, 2, 2, 1], padding='SAME')\nloss = tf.reduce_mean(out)\n\nopt = tf.train.GradientDescentOptimizer(0.01)\ntrain_op = opt.minimize(loss)\n\nsess.run(tf.initialize_all_variables())\nsess.run(train_op, feed_dict={x: a})\n\nLooks like something is wrong in backward pass call to cudnn.", "body": "I managed to reduce it to really clean case:\n\n```\nimport tensorflow as tf\nimport numpy as np\n\nnp.random.seed(42)\na = np.random.randn(64, 32, 32, 3)\n\nsess = tf.Session()\n\nx = tf.placeholder(tf.float32, shape=(64, 32, 32, 3))\n\nW = tf.get_variable('weights', [1, 1, 3, 16], initializer=tf.random_normal_initializer())\nout = tf.nn.conv2d(x, W, strides=[1, 2, 2, 1], padding='SAME')\nloss = tf.reduce_mean(out)\n\nopt = tf.train.GradientDescentOptimizer(0.01)\ntrain_op = opt.minimize(loss)\n\nsess.run(tf.initialize_all_variables())\nsess.run(train_op, feed_dict={x: a})\n```\n\nLooks like something is wrong in backward pass call to cudnn.\n"}