{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/396403069", "html_url": "https://github.com/tensorflow/tensorflow/issues/17824#issuecomment-396403069", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17824", "id": 396403069, "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjQwMzA2OQ==", "user": {"login": "zo7", "id": 3229244, "node_id": "MDQ6VXNlcjMyMjkyNDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/3229244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zo7", "html_url": "https://github.com/zo7", "followers_url": "https://api.github.com/users/zo7/followers", "following_url": "https://api.github.com/users/zo7/following{/other_user}", "gists_url": "https://api.github.com/users/zo7/gists{/gist_id}", "starred_url": "https://api.github.com/users/zo7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zo7/subscriptions", "organizations_url": "https://api.github.com/users/zo7/orgs", "repos_url": "https://api.github.com/users/zo7/repos", "events_url": "https://api.github.com/users/zo7/events{/privacy}", "received_events_url": "https://api.github.com/users/zo7/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-11T22:08:32Z", "updated_at": "2018-06-11T22:08:32Z", "author_association": "NONE", "body_html": "<p>It appears that the <code>labels</code> arg in <code>model_fn</code> is always <code>None</code> during prediction even if they are provided by <code>input_fn</code>. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=19293677\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ispirmustafa\">@ispirmustafa</a>'s suggestion doesn't work here because <code>estimator.predict()</code> is tossing out labels regardless.</p>\n<p>I've run into similar situations where I'd like to get the input and ground truth labels if available alongside predictions to do further analysis (like view failure cases). This is easily done by calling <code>model_fn</code> and reading from <code>input_fn</code> manually, but it feels hacky to me. It would be nice if there was a high-level way to do this like there is with training and evaluation.</p>", "body_text": "It appears that the labels arg in model_fn is always None during prediction even if they are provided by input_fn. @ispirmustafa's suggestion doesn't work here because estimator.predict() is tossing out labels regardless.\nI've run into similar situations where I'd like to get the input and ground truth labels if available alongside predictions to do further analysis (like view failure cases). This is easily done by calling model_fn and reading from input_fn manually, but it feels hacky to me. It would be nice if there was a high-level way to do this like there is with training and evaluation.", "body": "It appears that the `labels` arg in `model_fn` is always `None` during prediction even if they are provided by `input_fn`. @ispirmustafa's suggestion doesn't work here because `estimator.predict()` is tossing out labels regardless.\r\n\r\nI've run into similar situations where I'd like to get the input and ground truth labels if available alongside predictions to do further analysis (like view failure cases). This is easily done by calling `model_fn` and reading from `input_fn` manually, but it feels hacky to me. It would be nice if there was a high-level way to do this like there is with training and evaluation."}