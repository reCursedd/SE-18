{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7857", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7857/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7857/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7857/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7857", "id": 210119237, "node_id": "MDU6SXNzdWUyMTAxMTkyMzc=", "number": 7857, "title": "\"Expected bool, got 1 of type 'int' instead\" when taking gradient through 'greater'", "user": {"login": "malmaud", "id": 987837, "node_id": "MDQ6VXNlcjk4NzgzNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/987837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malmaud", "html_url": "https://github.com/malmaud", "followers_url": "https://api.github.com/users/malmaud/followers", "following_url": "https://api.github.com/users/malmaud/following{/other_user}", "gists_url": "https://api.github.com/users/malmaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/malmaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malmaud/subscriptions", "organizations_url": "https://api.github.com/users/malmaud/orgs", "repos_url": "https://api.github.com/users/malmaud/repos", "events_url": "https://api.github.com/users/malmaud/events{/privacy}", "received_events_url": "https://api.github.com/users/malmaud/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-24T18:10:30Z", "updated_at": "2017-03-09T18:30:07Z", "closed_at": "2017-03-09T18:30:07Z", "author_association": "CONTRIBUTOR", "body_html": "<p>While I didn't expect this to work, a better error message might be in order:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\nx<span class=\"pl-k\">=</span>tf.constant(<span class=\"pl-c1\">1</span>)\ny<span class=\"pl-k\">=</span>tf.constant(<span class=\"pl-c1\">2</span>)\nz<span class=\"pl-k\">=</span>tf.greater(x,y)\ntf.gradients(z,x)</pre></div>\n<pre><code>TypeError                                 Traceback (most recent call last)\n&lt;ipython-input-8-4df05786a146&gt; in &lt;module&gt;()\n----&gt; 1 tf.gradients(z,x)\n\n/Users/malmaud/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/gradients_impl.pyc in gradients(ys, xs, grad_ys, name, colocate_gradients_with_ops, gate_gradients, aggregation_method)\n    377     ys = ops.convert_n_to_tensor_or_indexed_slices(ys, name=\"y\")\n    378     xs = ops.convert_n_to_tensor_or_indexed_slices(xs, name=\"x\")\n--&gt; 379     grad_ys = _DefaultGradYs(grad_ys, ys, colocate_gradients_with_ops)\n    380\n    381     # The approach we take here is as follows: Create a list of all ops in the\n\n/Users/malmaud/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/gradients_impl.pyc in _DefaultGradYs(grad_ys, ys, colocate_gradients_with_ops)\n    225         grad_ys[i] = array_ops.fill(\n    226             array_ops.shape(y), constant_op.constant(\n--&gt; 227                 1, dtype=y.dtype))\n    228     else:\n    229       if grad_y.dtype != y.dtype:\n\n/Users/malmaud/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/constant_op.pyc in constant(value, dtype, shape, name, verify_shape)\n    163   tensor_value = attr_value_pb2.AttrValue()\n    164   tensor_value.tensor.CopyFrom(\n--&gt; 165       tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape, verify_shape=verify_shape))\n    166   dtype_value = attr_value_pb2.AttrValue(type=tensor_value.tensor.dtype)\n    167   const_tensor = g.create_op(\n\n/Users/malmaud/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.pyc in make_tensor_proto(values, dtype, shape, verify_shape)\n    365       nparray = np.empty(shape, dtype=np_dt)\n    366     else:\n--&gt; 367       _AssertCompatible(values, dtype)\n    368       nparray = np.array(values, dtype=np_dt)\n    369       # check to them.\n\n/Users/malmaud/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.pyc in _AssertCompatible(values, dtype)\n    300     else:\n    301       raise TypeError(\"Expected %s, got %s of type '%s' instead.\" %\n--&gt; 302                       (dtype.name, repr(mismatch), type(mismatch).__name__))\n    303\n    304\n\nTypeError: Expected bool, got 1 of type 'int' instead.\n</code></pre>", "body_text": "While I didn't expect this to work, a better error message might be in order:\nimport tensorflow as tf\nx=tf.constant(1)\ny=tf.constant(2)\nz=tf.greater(x,y)\ntf.gradients(z,x)\nTypeError                                 Traceback (most recent call last)\n<ipython-input-8-4df05786a146> in <module>()\n----> 1 tf.gradients(z,x)\n\n/Users/malmaud/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/gradients_impl.pyc in gradients(ys, xs, grad_ys, name, colocate_gradients_with_ops, gate_gradients, aggregation_method)\n    377     ys = ops.convert_n_to_tensor_or_indexed_slices(ys, name=\"y\")\n    378     xs = ops.convert_n_to_tensor_or_indexed_slices(xs, name=\"x\")\n--> 379     grad_ys = _DefaultGradYs(grad_ys, ys, colocate_gradients_with_ops)\n    380\n    381     # The approach we take here is as follows: Create a list of all ops in the\n\n/Users/malmaud/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/gradients_impl.pyc in _DefaultGradYs(grad_ys, ys, colocate_gradients_with_ops)\n    225         grad_ys[i] = array_ops.fill(\n    226             array_ops.shape(y), constant_op.constant(\n--> 227                 1, dtype=y.dtype))\n    228     else:\n    229       if grad_y.dtype != y.dtype:\n\n/Users/malmaud/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/constant_op.pyc in constant(value, dtype, shape, name, verify_shape)\n    163   tensor_value = attr_value_pb2.AttrValue()\n    164   tensor_value.tensor.CopyFrom(\n--> 165       tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape, verify_shape=verify_shape))\n    166   dtype_value = attr_value_pb2.AttrValue(type=tensor_value.tensor.dtype)\n    167   const_tensor = g.create_op(\n\n/Users/malmaud/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.pyc in make_tensor_proto(values, dtype, shape, verify_shape)\n    365       nparray = np.empty(shape, dtype=np_dt)\n    366     else:\n--> 367       _AssertCompatible(values, dtype)\n    368       nparray = np.array(values, dtype=np_dt)\n    369       # check to them.\n\n/Users/malmaud/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.pyc in _AssertCompatible(values, dtype)\n    300     else:\n    301       raise TypeError(\"Expected %s, got %s of type '%s' instead.\" %\n--> 302                       (dtype.name, repr(mismatch), type(mismatch).__name__))\n    303\n    304\n\nTypeError: Expected bool, got 1 of type 'int' instead.", "body": "While I didn't expect this to work, a better error message might be in order:\r\n\r\n```python\r\nimport tensorflow as tf\r\nx=tf.constant(1)\r\ny=tf.constant(2)\r\nz=tf.greater(x,y)\r\ntf.gradients(z,x)\r\n```\r\n\r\n```\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-8-4df05786a146> in <module>()\r\n----> 1 tf.gradients(z,x)\r\n\r\n/Users/malmaud/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/gradients_impl.pyc in gradients(ys, xs, grad_ys, name, colocate_gradients_with_ops, gate_gradients, aggregation_method)\r\n    377     ys = ops.convert_n_to_tensor_or_indexed_slices(ys, name=\"y\")\r\n    378     xs = ops.convert_n_to_tensor_or_indexed_slices(xs, name=\"x\")\r\n--> 379     grad_ys = _DefaultGradYs(grad_ys, ys, colocate_gradients_with_ops)\r\n    380\r\n    381     # The approach we take here is as follows: Create a list of all ops in the\r\n\r\n/Users/malmaud/anaconda/lib/python2.7/site-packages/tensorflow/python/ops/gradients_impl.pyc in _DefaultGradYs(grad_ys, ys, colocate_gradients_with_ops)\r\n    225         grad_ys[i] = array_ops.fill(\r\n    226             array_ops.shape(y), constant_op.constant(\r\n--> 227                 1, dtype=y.dtype))\r\n    228     else:\r\n    229       if grad_y.dtype != y.dtype:\r\n\r\n/Users/malmaud/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/constant_op.pyc in constant(value, dtype, shape, name, verify_shape)\r\n    163   tensor_value = attr_value_pb2.AttrValue()\r\n    164   tensor_value.tensor.CopyFrom(\r\n--> 165       tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape, verify_shape=verify_shape))\r\n    166   dtype_value = attr_value_pb2.AttrValue(type=tensor_value.tensor.dtype)\r\n    167   const_tensor = g.create_op(\r\n\r\n/Users/malmaud/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.pyc in make_tensor_proto(values, dtype, shape, verify_shape)\r\n    365       nparray = np.empty(shape, dtype=np_dt)\r\n    366     else:\r\n--> 367       _AssertCompatible(values, dtype)\r\n    368       nparray = np.array(values, dtype=np_dt)\r\n    369       # check to them.\r\n\r\n/Users/malmaud/anaconda/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.pyc in _AssertCompatible(values, dtype)\r\n    300     else:\r\n    301       raise TypeError(\"Expected %s, got %s of type '%s' instead.\" %\r\n--> 302                       (dtype.name, repr(mismatch), type(mismatch).__name__))\r\n    303\r\n    304\r\n\r\nTypeError: Expected bool, got 1 of type 'int' instead.\r\n```"}