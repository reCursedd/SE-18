{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/372749050", "html_url": "https://github.com/tensorflow/tensorflow/issues/17566#issuecomment-372749050", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17566", "id": 372749050, "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mjc0OTA1MA==", "user": {"login": "cliffwoolley", "id": 9682398, "node_id": "MDQ6VXNlcjk2ODIzOTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/9682398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cliffwoolley", "html_url": "https://github.com/cliffwoolley", "followers_url": "https://api.github.com/users/cliffwoolley/followers", "following_url": "https://api.github.com/users/cliffwoolley/following{/other_user}", "gists_url": "https://api.github.com/users/cliffwoolley/gists{/gist_id}", "starred_url": "https://api.github.com/users/cliffwoolley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cliffwoolley/subscriptions", "organizations_url": "https://api.github.com/users/cliffwoolley/orgs", "repos_url": "https://api.github.com/users/cliffwoolley/repos", "events_url": "https://api.github.com/users/cliffwoolley/events{/privacy}", "received_events_url": "https://api.github.com/users/cliffwoolley/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-13T17:25:48Z", "updated_at": "2018-03-13T17:25:48Z", "author_association": "NONE", "body_html": "<blockquote>\n<p>For cudnn, I have not seen a statement specifying their level of backwards compatibility. I would naively expect that if you build against cudnn x.y and run with cudnn x.z for z &gt;= y, it probably will work. But to be comfortable with blessing that I'd want a statement in writing from nvidia. (Perhaps such a statement already exists.)</p>\n</blockquote>\n<p>Statement from NVIDIA:</p>\n<p>Beginning in cuDNN 7, binary compatibility of patch and minor releases is maintained as follows:</p>\n<ul>\n<li>Any patch release x.y.z is forward- or backward-compatible with applications built against another cuDNN patch release x.y.w (i.e., of the same major and minor version number, but having w!=z).</li>\n<li>cuDNN minor releases beginning with cuDNN 7 are binary backward-compatible with applications built against the same or earlier patch release (i.e., an app built against cuDNN 7.x is binary compatible with cuDNN library 7.y, where y&gt;=x).</li>\n</ul>\n<p>(Note that this compatibility was not necessarily guaranteed in prior cuDNN major releases.)</p>\n<p>--Cliff Woolley<br>\nDirector, DL Frameworks Engineering, NVIDIA</p>", "body_text": "For cudnn, I have not seen a statement specifying their level of backwards compatibility. I would naively expect that if you build against cudnn x.y and run with cudnn x.z for z >= y, it probably will work. But to be comfortable with blessing that I'd want a statement in writing from nvidia. (Perhaps such a statement already exists.)\n\nStatement from NVIDIA:\nBeginning in cuDNN 7, binary compatibility of patch and minor releases is maintained as follows:\n\nAny patch release x.y.z is forward- or backward-compatible with applications built against another cuDNN patch release x.y.w (i.e., of the same major and minor version number, but having w!=z).\ncuDNN minor releases beginning with cuDNN 7 are binary backward-compatible with applications built against the same or earlier patch release (i.e., an app built against cuDNN 7.x is binary compatible with cuDNN library 7.y, where y>=x).\n\n(Note that this compatibility was not necessarily guaranteed in prior cuDNN major releases.)\n--Cliff Woolley\nDirector, DL Frameworks Engineering, NVIDIA", "body": "> For cudnn, I have not seen a statement specifying their level of backwards compatibility. I would naively expect that if you build against cudnn x.y and run with cudnn x.z for z >= y, it probably will work. But to be comfortable with blessing that I'd want a statement in writing from nvidia. (Perhaps such a statement already exists.)\r\n\r\nStatement from NVIDIA:\r\n\r\nBeginning in cuDNN 7, binary compatibility of patch and minor releases is maintained as follows:\r\n* Any patch release x.y.z is forward- or backward-compatible with applications built against another cuDNN patch release x.y.w (i.e., of the same major and minor version number, but having w!=z).\r\n* cuDNN minor releases beginning with cuDNN 7 are binary backward-compatible with applications built against the same or earlier patch release (i.e., an app built against cuDNN 7.x is binary compatible with cuDNN library 7.y, where y>=x).\r\n\r\n(Note that this compatibility was not necessarily guaranteed in prior cuDNN major releases.)\r\n\r\n--Cliff Woolley\r\nDirector, DL Frameworks Engineering, NVIDIA"}