{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16593", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16593/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16593/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16593/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/16593", "id": 292876686, "node_id": "MDU6SXNzdWUyOTI4NzY2ODY=", "number": 16593, "title": "contrib.tfgan: batch_norm is_training=True for both training and inferencing, non-slim version", "user": {"login": "nxphi47", "id": 19323568, "node_id": "MDQ6VXNlcjE5MzIzNTY4", "avatar_url": "https://avatars3.githubusercontent.com/u/19323568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nxphi47", "html_url": "https://github.com/nxphi47", "followers_url": "https://api.github.com/users/nxphi47/followers", "following_url": "https://api.github.com/users/nxphi47/following{/other_user}", "gists_url": "https://api.github.com/users/nxphi47/gists{/gist_id}", "starred_url": "https://api.github.com/users/nxphi47/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nxphi47/subscriptions", "organizations_url": "https://api.github.com/users/nxphi47/orgs", "repos_url": "https://api.github.com/users/nxphi47/repos", "events_url": "https://api.github.com/users/nxphi47/events{/privacy}", "received_events_url": "https://api.github.com/users/nxphi47/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "joel-shor", "id": 6020988, "node_id": "MDQ6VXNlcjYwMjA5ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/6020988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joel-shor", "html_url": "https://github.com/joel-shor", "followers_url": "https://api.github.com/users/joel-shor/followers", "following_url": "https://api.github.com/users/joel-shor/following{/other_user}", "gists_url": "https://api.github.com/users/joel-shor/gists{/gist_id}", "starred_url": "https://api.github.com/users/joel-shor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joel-shor/subscriptions", "organizations_url": "https://api.github.com/users/joel-shor/orgs", "repos_url": "https://api.github.com/users/joel-shor/repos", "events_url": "https://api.github.com/users/joel-shor/events{/privacy}", "received_events_url": "https://api.github.com/users/joel-shor/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "joel-shor", "id": 6020988, "node_id": "MDQ6VXNlcjYwMjA5ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/6020988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joel-shor", "html_url": "https://github.com/joel-shor", "followers_url": "https://api.github.com/users/joel-shor/followers", "following_url": "https://api.github.com/users/joel-shor/following{/other_user}", "gists_url": "https://api.github.com/users/joel-shor/gists{/gist_id}", "starred_url": "https://api.github.com/users/joel-shor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joel-shor/subscriptions", "organizations_url": "https://api.github.com/users/joel-shor/orgs", "repos_url": "https://api.github.com/users/joel-shor/repos", "events_url": "https://api.github.com/users/joel-shor/events{/privacy}", "received_events_url": "https://api.github.com/users/joel-shor/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 16, "created_at": "2018-01-30T17:48:55Z", "updated_at": "2018-11-13T18:55:48Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>Hi, I am exploring contrib.tfgan, such a great work <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6020988\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/joel-shor\">@joel-shor</a> .</p>\n<h3>batch_norm is_training=True for both training and inferencing</h3>\n<p>However, when I see the example in source code of both generator and discriminator of MNIST, as below.</p>\n<p><a href=\"https://github.com/tensorflow/models/blob/master/research/gan/tutorial.ipynb\">https://github.com/tensorflow/models/blob/master/research/gan/tutorial.ipynb</a></p>\n<p><code>with slim.arg_scope( [layers.fully_connected, layers.conv2d_transpose], activation_fn=tf.nn.relu, normalizer_fn=layers.batch_norm, weights_regularizer=layers.l2_regularizer(weight_decay)): net = layers.fully_connected(noise, 1024) net = layers.fully_connected(net, 7 * 7 * 256) net = tf.reshape(net, [-1, 7, 7, 256])</code></p>\n<p>The default argument of layers.batch_norm is set to True, and this gen_fn and dis_fn are used for  both training phase and generating test images phase (inferencing).</p>\n<p>Is it a bug or it is intended? If it is intended, can you explain why is that?</p>\n<h3>non-slim implementation</h3>\n<p>In addition, I don't really like slim, and I believe some people don't either. Can I use other model construction libraries like tf.layers or keras to build the network. Is tfslim a must?</p>\n<p>Thank you,</p>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: MacOS</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:source</li>\n<li><strong>TensorFlow version (use command below)</strong>:1.5 and 1.4.1</li>\n<li><strong>Python version</strong>: 3.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.7</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: 4.2</li>\n<li><strong>CUDA/cuDNN version</strong>:NA (CPU)</li>\n<li><strong>GPU model and memory</strong>:NA</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>", "body_text": "Hi, I am exploring contrib.tfgan, such a great work @joel-shor .\nbatch_norm is_training=True for both training and inferencing\nHowever, when I see the example in source code of both generator and discriminator of MNIST, as below.\nhttps://github.com/tensorflow/models/blob/master/research/gan/tutorial.ipynb\nwith slim.arg_scope( [layers.fully_connected, layers.conv2d_transpose], activation_fn=tf.nn.relu, normalizer_fn=layers.batch_norm, weights_regularizer=layers.l2_regularizer(weight_decay)): net = layers.fully_connected(noise, 1024) net = layers.fully_connected(net, 7 * 7 * 256) net = tf.reshape(net, [-1, 7, 7, 256])\nThe default argument of layers.batch_norm is set to True, and this gen_fn and dis_fn are used for  both training phase and generating test images phase (inferencing).\nIs it a bug or it is intended? If it is intended, can you explain why is that?\nnon-slim implementation\nIn addition, I don't really like slim, and I believe some people don't either. Can I use other model construction libraries like tf.layers or keras to build the network. Is tfslim a must?\nThank you,\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): MacOS\nTensorFlow installed from (source or binary):source\nTensorFlow version (use command below):1.5 and 1.4.1\nPython version: 3.6\nBazel version (if compiling from source): 0.7\nGCC/Compiler version (if compiling from source): 4.2\nCUDA/cuDNN version:NA (CPU)\nGPU model and memory:NA\nExact command to reproduce:", "body": "Hi, I am exploring contrib.tfgan, such a great work @joel-shor .\r\n\r\n### batch_norm is_training=True for both training and inferencing\r\nHowever, when I see the example in source code of both generator and discriminator of MNIST, as below.\r\n\r\nhttps://github.com/tensorflow/models/blob/master/research/gan/tutorial.ipynb\r\n\r\n`with slim.arg_scope(\r\n        [layers.fully_connected, layers.conv2d_transpose],\r\n        activation_fn=tf.nn.relu, normalizer_fn=layers.batch_norm,\r\n        weights_regularizer=layers.l2_regularizer(weight_decay)):\r\n        net = layers.fully_connected(noise, 1024)\r\n        net = layers.fully_connected(net, 7 * 7 * 256)\r\n        net = tf.reshape(net, [-1, 7, 7, 256])`\r\n\r\nThe default argument of layers.batch_norm is set to True, and this gen_fn and dis_fn are used for  both training phase and generating test images phase (inferencing).\r\n\r\nIs it a bug or it is intended? If it is intended, can you explain why is that?\r\n\r\n### non-slim implementation\r\nIn addition, I don't really like slim, and I believe some people don't either. Can I use other model construction libraries like tf.layers or keras to build the network. Is tfslim a must?\r\n\r\nThank you,\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: MacOS\r\n- **TensorFlow installed from (source or binary)**:source\r\n- **TensorFlow version (use command below)**:1.5 and 1.4.1\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: 0.7\r\n- **GCC/Compiler version (if compiling from source)**: 4.2\r\n- **CUDA/cuDNN version**:NA (CPU)\r\n- **GPU model and memory**:NA\r\n- **Exact command to reproduce**:"}