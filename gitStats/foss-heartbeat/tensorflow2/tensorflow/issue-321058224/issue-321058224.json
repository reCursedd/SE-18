{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19138", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19138/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19138/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19138/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19138", "id": 321058224, "node_id": "MDU6SXNzdWUzMjEwNTgyMjQ=", "number": 19138, "title": "precision and recall values kept unchanged for some training steps.", "user": {"login": "hhzrz", "id": 17157194, "node_id": "MDQ6VXNlcjE3MTU3MTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/17157194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhzrz", "html_url": "https://github.com/hhzrz", "followers_url": "https://api.github.com/users/hhzrz/followers", "following_url": "https://api.github.com/users/hhzrz/following{/other_user}", "gists_url": "https://api.github.com/users/hhzrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhzrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhzrz/subscriptions", "organizations_url": "https://api.github.com/users/hhzrz/orgs", "repos_url": "https://api.github.com/users/hhzrz/repos", "events_url": "https://api.github.com/users/hhzrz/events{/privacy}", "received_events_url": "https://api.github.com/users/hhzrz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": {"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rohan100jain", "id": 144114, "node_id": "MDQ6VXNlcjE0NDExNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/144114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohan100jain", "html_url": "https://github.com/rohan100jain", "followers_url": "https://api.github.com/users/rohan100jain/followers", "following_url": "https://api.github.com/users/rohan100jain/following{/other_user}", "gists_url": "https://api.github.com/users/rohan100jain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohan100jain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohan100jain/subscriptions", "organizations_url": "https://api.github.com/users/rohan100jain/orgs", "repos_url": "https://api.github.com/users/rohan100jain/repos", "events_url": "https://api.github.com/users/rohan100jain/events{/privacy}", "received_events_url": "https://api.github.com/users/rohan100jain/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-05-08T06:29:50Z", "updated_at": "2018-11-14T19:18:02Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li>Have I written custom code: No, i just use a canned estimator DNNClassifier.</li>\n<li>OS Platform and Distribution: macOS High Sierra</li>\n<li>TensorFlow installed from: pip</li>\n<li>TensorFlow version: 1.8.0</li>\n<li>Bazel version: N/A</li>\n<li>CUDA/cuDNN version: N/A</li>\n<li>GPU model and memory: N/A</li>\n<li>Exact command to reproduce: N/A</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I'm using google ml-engine to train a model for ctr-prediction(the training dataset is Imbalanced).<br>\nFollowing is the training log screenshot from ml-engine.<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/17157194/39740932-52b01a7c-52ca-11e8-8952-820424e38357.jpg\"><img src=\"https://user-images.githubusercontent.com/17157194/39740932-52b01a7c-52ca-11e8-8952-820424e38357.jpg\" alt=\"pr-auc\" style=\"max-width:100%;\"></a><br>\nThe problem is: the <strong>precision</strong> and <strong>recall</strong> values kept unchanged for some training steps as i annotated in the picture(auctually these two values kept unchanged for 2 epochs in this picture). I'm pretty sure this is a bug, but i don't know where is wrong.<br>\nDoes any one can check the calculation of these two metrics(precision, recall) for me?</p>", "body_text": "System information\n\nHave I written custom code: No, i just use a canned estimator DNNClassifier.\nOS Platform and Distribution: macOS High Sierra\nTensorFlow installed from: pip\nTensorFlow version: 1.8.0\nBazel version: N/A\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nExact command to reproduce: N/A\n\nDescribe the problem\nI'm using google ml-engine to train a model for ctr-prediction(the training dataset is Imbalanced).\nFollowing is the training log screenshot from ml-engine.\n\nThe problem is: the precision and recall values kept unchanged for some training steps as i annotated in the picture(auctually these two values kept unchanged for 2 epochs in this picture). I'm pretty sure this is a bug, but i don't know where is wrong.\nDoes any one can check the calculation of these two metrics(precision, recall) for me?", "body": "### System information\r\n- Have I written custom code: No, i just use a canned estimator DNNClassifier.\r\n- OS Platform and Distribution: macOS High Sierra\r\n- TensorFlow installed from: pip\r\n- TensorFlow version: 1.8.0\r\n- Bazel version: N/A\r\n- CUDA/cuDNN version: N/A\r\n- GPU model and memory: N/A\r\n- Exact command to reproduce: N/A\r\n\r\n### Describe the problem\r\nI'm using google ml-engine to train a model for ctr-prediction(the training dataset is Imbalanced).\r\nFollowing is the training log screenshot from ml-engine.\r\n![pr-auc](https://user-images.githubusercontent.com/17157194/39740932-52b01a7c-52ca-11e8-8952-820424e38357.jpg)\r\nThe problem is: the **precision** and **recall** values kept unchanged for some training steps as i annotated in the picture(auctually these two values kept unchanged for 2 epochs in this picture). I'm pretty sure this is a bug, but i don't know where is wrong.\r\nDoes any one can check the calculation of these two metrics(precision, recall) for me?"}