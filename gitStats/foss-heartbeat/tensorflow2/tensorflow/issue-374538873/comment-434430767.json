{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/434430767", "html_url": "https://github.com/tensorflow/tensorflow/issues/23302#issuecomment-434430767", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23302", "id": 434430767, "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDQzMDc2Nw==", "user": {"login": "MindMusic", "id": 2808190, "node_id": "MDQ6VXNlcjI4MDgxOTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2808190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MindMusic", "html_url": "https://github.com/MindMusic", "followers_url": "https://api.github.com/users/MindMusic/followers", "following_url": "https://api.github.com/users/MindMusic/following{/other_user}", "gists_url": "https://api.github.com/users/MindMusic/gists{/gist_id}", "starred_url": "https://api.github.com/users/MindMusic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MindMusic/subscriptions", "organizations_url": "https://api.github.com/users/MindMusic/orgs", "repos_url": "https://api.github.com/users/MindMusic/repos", "events_url": "https://api.github.com/users/MindMusic/events{/privacy}", "received_events_url": "https://api.github.com/users/MindMusic/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-30T19:07:14Z", "updated_at": "2018-10-30T19:07:14Z", "author_association": "NONE", "body_html": "<p>EXAMPLE PROGRAM:</p>\n<pre><code>using System;\nusing System.Collections.Generic;\nusing System.Diagnostics;\nusing System.IO;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\nusing TensorFlow;\n\nnamespace TensorFlow_Test\n{\n    class Program\n    {\n        public static Stopwatch oTimer = new Stopwatch();                                 // Stopwatch for elapsed program execution time in ms.\n        private static long lLastElapsedTicks = 0;                                        // Number of ticks elapsed at the last timing fence.\n        public static long lTicksPerMicrosecond = Stopwatch.Frequency / (1000L * 1000L);  // Number of ticks per microsecond.\n\n        static void Main(string[] args)\n        {\n            TFSession m_oCaeSession;\n            TFGraph m_oCaeGraph;\n\n            oTimer.Start();\n\n            m_oCaeGraph = new TFGraph();\n            byte[] acCaeModel = File.ReadAllBytes(\"CAE.pb\");\n            m_oCaeGraph.Import(acCaeModel, \"\");\n            TFSessionOptions oTFOptions = new TFSessionOptions();\n            m_oCaeSession = new TFSession(m_oCaeGraph, oTFOptions);\n\n            float[,,,] afSpectrogram = new float[1, 128, 128, 1];\n            var oCaeInputTensor = new TFTensor(afSpectrogram);\n            LogSpeed(\"Setup\");\n\n            for (int iLoop = 1; iLoop &lt; 1000; iLoop++)\n            {\n                TFBuffer oWhatever = new TFBuffer();\n                var oCaeOutputTensor = m_oCaeSession.Run(new TFOutput[] { new TFOutput(m_oCaeGraph[\"input/X\"]) }, new TFTensor[] { oCaeInputTensor }, new TFOutput[] { new TFOutput(m_oCaeGraph[\"MaxPool2D_4/MaxPool\"]) }, null, oWhatever, new TFBuffer(new byte[] { 0x08, 0x03 }), null);\n                LogSpeed(\"PerformCAE #\" + iLoop.ToString());\n\n                if (iLoop%10==0)\n                {\n                    System.Threading.Thread.Sleep(1000);\n                    LogSpeed(\"Delay\");\n                }\n            }\n        }\n\n        public static void LogSpeed(String p_sFenceName)\n        {\n            long lElapsedTicks = oTimer.ElapsedTicks;\n            Console.WriteLine(((lElapsedTicks - lLastElapsedTicks) / lTicksPerMicrosecond) + \" microseconds to \" + p_sFenceName);\n            lLastElapsedTicks = lElapsedTicks;\n        }\n    }\n}\n</code></pre>\n<p>EXAMPLE OUTPUT:</p>\n<pre><code>2018-10-30 14:57:02.646680: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2\n668414 microseconds to Setup\n1470936 microseconds to PerformCAE #1\n874811 microseconds to PerformCAE #2\n761587 microseconds to PerformCAE #3\n658079 microseconds to PerformCAE #4\n551307 microseconds to PerformCAE #5\n378162 microseconds to PerformCAE #6\n370983 microseconds to PerformCAE #7\n390558 microseconds to PerformCAE #8\n376005 microseconds to PerformCAE #9\n383651 microseconds to PerformCAE #10\n1267764 microseconds to Delay\n1302333 microseconds to PerformCAE #11\n1137831 microseconds to PerformCAE #12\n864681 microseconds to PerformCAE #13\n713534 microseconds to PerformCAE #14\n635954 microseconds to PerformCAE #15\n...\n</code></pre>", "body_text": "EXAMPLE PROGRAM:\nusing System;\nusing System.Collections.Generic;\nusing System.Diagnostics;\nusing System.IO;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\nusing TensorFlow;\n\nnamespace TensorFlow_Test\n{\n    class Program\n    {\n        public static Stopwatch oTimer = new Stopwatch();                                 // Stopwatch for elapsed program execution time in ms.\n        private static long lLastElapsedTicks = 0;                                        // Number of ticks elapsed at the last timing fence.\n        public static long lTicksPerMicrosecond = Stopwatch.Frequency / (1000L * 1000L);  // Number of ticks per microsecond.\n\n        static void Main(string[] args)\n        {\n            TFSession m_oCaeSession;\n            TFGraph m_oCaeGraph;\n\n            oTimer.Start();\n\n            m_oCaeGraph = new TFGraph();\n            byte[] acCaeModel = File.ReadAllBytes(\"CAE.pb\");\n            m_oCaeGraph.Import(acCaeModel, \"\");\n            TFSessionOptions oTFOptions = new TFSessionOptions();\n            m_oCaeSession = new TFSession(m_oCaeGraph, oTFOptions);\n\n            float[,,,] afSpectrogram = new float[1, 128, 128, 1];\n            var oCaeInputTensor = new TFTensor(afSpectrogram);\n            LogSpeed(\"Setup\");\n\n            for (int iLoop = 1; iLoop < 1000; iLoop++)\n            {\n                TFBuffer oWhatever = new TFBuffer();\n                var oCaeOutputTensor = m_oCaeSession.Run(new TFOutput[] { new TFOutput(m_oCaeGraph[\"input/X\"]) }, new TFTensor[] { oCaeInputTensor }, new TFOutput[] { new TFOutput(m_oCaeGraph[\"MaxPool2D_4/MaxPool\"]) }, null, oWhatever, new TFBuffer(new byte[] { 0x08, 0x03 }), null);\n                LogSpeed(\"PerformCAE #\" + iLoop.ToString());\n\n                if (iLoop%10==0)\n                {\n                    System.Threading.Thread.Sleep(1000);\n                    LogSpeed(\"Delay\");\n                }\n            }\n        }\n\n        public static void LogSpeed(String p_sFenceName)\n        {\n            long lElapsedTicks = oTimer.ElapsedTicks;\n            Console.WriteLine(((lElapsedTicks - lLastElapsedTicks) / lTicksPerMicrosecond) + \" microseconds to \" + p_sFenceName);\n            lLastElapsedTicks = lElapsedTicks;\n        }\n    }\n}\n\nEXAMPLE OUTPUT:\n2018-10-30 14:57:02.646680: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2\n668414 microseconds to Setup\n1470936 microseconds to PerformCAE #1\n874811 microseconds to PerformCAE #2\n761587 microseconds to PerformCAE #3\n658079 microseconds to PerformCAE #4\n551307 microseconds to PerformCAE #5\n378162 microseconds to PerformCAE #6\n370983 microseconds to PerformCAE #7\n390558 microseconds to PerformCAE #8\n376005 microseconds to PerformCAE #9\n383651 microseconds to PerformCAE #10\n1267764 microseconds to Delay\n1302333 microseconds to PerformCAE #11\n1137831 microseconds to PerformCAE #12\n864681 microseconds to PerformCAE #13\n713534 microseconds to PerformCAE #14\n635954 microseconds to PerformCAE #15\n...", "body": "EXAMPLE PROGRAM:\r\n\r\n    using System;\r\n    using System.Collections.Generic;\r\n    using System.Diagnostics;\r\n    using System.IO;\r\n    using System.Linq;\r\n    using System.Text;\r\n    using System.Threading.Tasks;\r\n    using TensorFlow;\r\n    \r\n    namespace TensorFlow_Test\r\n    {\r\n        class Program\r\n        {\r\n            public static Stopwatch oTimer = new Stopwatch();                                 // Stopwatch for elapsed program execution time in ms.\r\n            private static long lLastElapsedTicks = 0;                                        // Number of ticks elapsed at the last timing fence.\r\n            public static long lTicksPerMicrosecond = Stopwatch.Frequency / (1000L * 1000L);  // Number of ticks per microsecond.\r\n\r\n            static void Main(string[] args)\r\n            {\r\n                TFSession m_oCaeSession;\r\n                TFGraph m_oCaeGraph;\r\n    \r\n                oTimer.Start();\r\n\r\n                m_oCaeGraph = new TFGraph();\r\n                byte[] acCaeModel = File.ReadAllBytes(\"CAE.pb\");\r\n                m_oCaeGraph.Import(acCaeModel, \"\");\r\n                TFSessionOptions oTFOptions = new TFSessionOptions();\r\n                m_oCaeSession = new TFSession(m_oCaeGraph, oTFOptions);\r\n\r\n                float[,,,] afSpectrogram = new float[1, 128, 128, 1];\r\n                var oCaeInputTensor = new TFTensor(afSpectrogram);\r\n                LogSpeed(\"Setup\");\r\n\r\n                for (int iLoop = 1; iLoop < 1000; iLoop++)\r\n                {\r\n                    TFBuffer oWhatever = new TFBuffer();\r\n                    var oCaeOutputTensor = m_oCaeSession.Run(new TFOutput[] { new TFOutput(m_oCaeGraph[\"input/X\"]) }, new TFTensor[] { oCaeInputTensor }, new TFOutput[] { new TFOutput(m_oCaeGraph[\"MaxPool2D_4/MaxPool\"]) }, null, oWhatever, new TFBuffer(new byte[] { 0x08, 0x03 }), null);\r\n                    LogSpeed(\"PerformCAE #\" + iLoop.ToString());\r\n    \r\n                    if (iLoop%10==0)\r\n                    {\r\n                        System.Threading.Thread.Sleep(1000);\r\n                        LogSpeed(\"Delay\");\r\n                    }\r\n                }\r\n            }\r\n\r\n            public static void LogSpeed(String p_sFenceName)\r\n            {\r\n                long lElapsedTicks = oTimer.ElapsedTicks;\r\n                Console.WriteLine(((lElapsedTicks - lLastElapsedTicks) / lTicksPerMicrosecond) + \" microseconds to \" + p_sFenceName);\r\n                lLastElapsedTicks = lElapsedTicks;\r\n            }\r\n        }\r\n    }\r\n\r\nEXAMPLE OUTPUT:\r\n\r\n    2018-10-30 14:57:02.646680: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2\r\n    668414 microseconds to Setup\r\n    1470936 microseconds to PerformCAE #1\r\n    874811 microseconds to PerformCAE #2\r\n    761587 microseconds to PerformCAE #3\r\n    658079 microseconds to PerformCAE #4\r\n    551307 microseconds to PerformCAE #5\r\n    378162 microseconds to PerformCAE #6\r\n    370983 microseconds to PerformCAE #7\r\n    390558 microseconds to PerformCAE #8\r\n    376005 microseconds to PerformCAE #9\r\n    383651 microseconds to PerformCAE #10\r\n    1267764 microseconds to Delay\r\n    1302333 microseconds to PerformCAE #11\r\n    1137831 microseconds to PerformCAE #12\r\n    864681 microseconds to PerformCAE #13\r\n    713534 microseconds to PerformCAE #14\r\n    635954 microseconds to PerformCAE #15\r\n    ...\r\n"}