{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/315751737", "html_url": "https://github.com/tensorflow/tensorflow/issues/8953#issuecomment-315751737", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8953", "id": 315751737, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTc1MTczNw==", "user": {"login": "frreiss", "id": 12436991, "node_id": "MDQ6VXNlcjEyNDM2OTkx", "avatar_url": "https://avatars1.githubusercontent.com/u/12436991?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frreiss", "html_url": "https://github.com/frreiss", "followers_url": "https://api.github.com/users/frreiss/followers", "following_url": "https://api.github.com/users/frreiss/following{/other_user}", "gists_url": "https://api.github.com/users/frreiss/gists{/gist_id}", "starred_url": "https://api.github.com/users/frreiss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frreiss/subscriptions", "organizations_url": "https://api.github.com/users/frreiss/orgs", "repos_url": "https://api.github.com/users/frreiss/repos", "events_url": "https://api.github.com/users/frreiss/events{/privacy}", "received_events_url": "https://api.github.com/users/frreiss/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-17T13:13:49Z", "updated_at": "2017-07-17T13:13:49Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Correction: the <code>tf_gen_op_libs</code> rule is just the first step in the codegen process. That rule generates a compiled C++ library containing the operator. Later in the build, the rule at line 1146 of <code>python/BUILD</code> invokes the rule <code>tf_gen_op_wrapper_private_py</code> from <code>python/build_defs.bzl</code>. This rule in turn invokes the rule <code>tf_gen_op_wrapper_py</code> from <code>tensorflow.bzl</code>, which creates a static binary containing the library file for the logging ops and the compiled object file for <code>python_op_gen_main.cc</code>; then invokes the binary, passing it the contents of the text file <code>python/ops/hidden_ops.txt</code>.</p>\n<p>Next, the main function in <code>python_op_gen_main.cc</code> creates an operators registry. Since the executable was only linked with the logging operators, this registry only contains the logging operators. The main function passes this registry, along with the list of operators in <code>hidden_ops.txt</code>, to the function <code>PrintPythonOps()</code>, which is defined in <code>python_op_gen.cc</code>. This function generates the contents of <code>gen_logging_ops.py</code> and prints those contents to STDOUT. Back in <code>tensorflow.bzl</code>, the <code>tf_gen_op_wrapper_py</code> rule directs STDOUT of the C++ program to <code>gen_logging_ops.py</code>.</p>", "body_text": "Correction: the tf_gen_op_libs rule is just the first step in the codegen process. That rule generates a compiled C++ library containing the operator. Later in the build, the rule at line 1146 of python/BUILD invokes the rule tf_gen_op_wrapper_private_py from python/build_defs.bzl. This rule in turn invokes the rule tf_gen_op_wrapper_py from tensorflow.bzl, which creates a static binary containing the library file for the logging ops and the compiled object file for python_op_gen_main.cc; then invokes the binary, passing it the contents of the text file python/ops/hidden_ops.txt.\nNext, the main function in python_op_gen_main.cc creates an operators registry. Since the executable was only linked with the logging operators, this registry only contains the logging operators. The main function passes this registry, along with the list of operators in hidden_ops.txt, to the function PrintPythonOps(), which is defined in python_op_gen.cc. This function generates the contents of gen_logging_ops.py and prints those contents to STDOUT. Back in tensorflow.bzl, the tf_gen_op_wrapper_py rule directs STDOUT of the C++ program to gen_logging_ops.py.", "body": "Correction: the `tf_gen_op_libs` rule is just the first step in the codegen process. That rule generates a compiled C++ library containing the operator. Later in the build, the rule at line 1146 of `python/BUILD` invokes the rule `tf_gen_op_wrapper_private_py` from `python/build_defs.bzl`. This rule in turn invokes the rule `tf_gen_op_wrapper_py` from `tensorflow.bzl`, which creates a static binary containing the library file for the logging ops and the compiled object file for `python_op_gen_main.cc`; then invokes the binary, passing it the contents of the text file `python/ops/hidden_ops.txt`.\r\n\r\nNext, the main function in `python_op_gen_main.cc` creates an operators registry. Since the executable was only linked with the logging operators, this registry only contains the logging operators. The main function passes this registry, along with the list of operators in `hidden_ops.txt`, to the function `PrintPythonOps()`, which is defined in `python_op_gen.cc`. This function generates the contents of `gen_logging_ops.py` and prints those contents to STDOUT. Back in `tensorflow.bzl`, the `tf_gen_op_wrapper_py` rule directs STDOUT of the C++ program to `gen_logging_ops.py`."}