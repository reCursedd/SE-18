{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/440686685", "html_url": "https://github.com/tensorflow/tensorflow/issues/23737#issuecomment-440686685", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23737", "id": 440686685, "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDY4NjY4NQ==", "user": {"login": "christiantinauer", "id": 16046522, "node_id": "MDQ6VXNlcjE2MDQ2NTIy", "avatar_url": "https://avatars3.githubusercontent.com/u/16046522?v=4", "gravatar_id": "", "url": "https://api.github.com/users/christiantinauer", "html_url": "https://github.com/christiantinauer", "followers_url": "https://api.github.com/users/christiantinauer/followers", "following_url": "https://api.github.com/users/christiantinauer/following{/other_user}", "gists_url": "https://api.github.com/users/christiantinauer/gists{/gist_id}", "starred_url": "https://api.github.com/users/christiantinauer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/christiantinauer/subscriptions", "organizations_url": "https://api.github.com/users/christiantinauer/orgs", "repos_url": "https://api.github.com/users/christiantinauer/repos", "events_url": "https://api.github.com/users/christiantinauer/events{/privacy}", "received_events_url": "https://api.github.com/users/christiantinauer/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-21T14:43:17Z", "updated_at": "2018-11-21T14:43:17Z", "author_association": "NONE", "body_html": "<p>They both should end up in the same shared object. The build script:</p>\n<pre><code>TF_CFLAGS=( $(python -c 'import tensorflow as tf; print(\" \".join(tf.sysconfig.get_compile_flags()))') )\nTF_LFLAGS=( $(python -c 'import tensorflow as tf; print(\" \".join(tf.sysconfig.get_link_flags()))') )\n\nnvcc \\\n  -DNDEBUG \\\n  -ccbin=g++-6 \\\n  -std=c++11 -c -o extract_volume_patches_op_gpu.cu.o \\\n  ../core/kernels/extract_volume_patches_op_gpu.cu.cc \\\n  ${TF_CFLAGS[@]} -D GOOGLE_CUDA=1 -x cu -Xcompiler -fPIC\n\nnvcc \\\n  -DNDEBUG \\\n  -ccbin=g++-6 \\\n  -std=c++11 -c -o integrate_volume_patches_op_gpu.cu.o \\\n  ../core/kernels/integrate_volume_patches_op_gpu.cu.cc \\\n  ${TF_CFLAGS[@]} -D GOOGLE_CUDA=1 -x cu -Xcompiler -fPIC\n\ng++-6 \\\n  -std=c++11 -shared -o volume_patches.so \\\n  ../core/ops/extract_volume_patches.cc \\\n  ../core/ops/integrate_volume_patches.cc \\\n  ../core/kernels/extract_volume_patches_op.cc \\\n  ../core/kernels/integrate_volume_patches_op.cc \\\n  extract_volume_patches_op_gpu.cu.o \\\n  integrate_volume_patches_op_gpu.cu.o \\\n  ${TF_CFLAGS[@]} -fPIC -lcudart ${TF_LFLAGS[@]} \\\n  -L /opt/cuda/lib64/\n</code></pre>", "body_text": "They both should end up in the same shared object. The build script:\nTF_CFLAGS=( $(python -c 'import tensorflow as tf; print(\" \".join(tf.sysconfig.get_compile_flags()))') )\nTF_LFLAGS=( $(python -c 'import tensorflow as tf; print(\" \".join(tf.sysconfig.get_link_flags()))') )\n\nnvcc \\\n  -DNDEBUG \\\n  -ccbin=g++-6 \\\n  -std=c++11 -c -o extract_volume_patches_op_gpu.cu.o \\\n  ../core/kernels/extract_volume_patches_op_gpu.cu.cc \\\n  ${TF_CFLAGS[@]} -D GOOGLE_CUDA=1 -x cu -Xcompiler -fPIC\n\nnvcc \\\n  -DNDEBUG \\\n  -ccbin=g++-6 \\\n  -std=c++11 -c -o integrate_volume_patches_op_gpu.cu.o \\\n  ../core/kernels/integrate_volume_patches_op_gpu.cu.cc \\\n  ${TF_CFLAGS[@]} -D GOOGLE_CUDA=1 -x cu -Xcompiler -fPIC\n\ng++-6 \\\n  -std=c++11 -shared -o volume_patches.so \\\n  ../core/ops/extract_volume_patches.cc \\\n  ../core/ops/integrate_volume_patches.cc \\\n  ../core/kernels/extract_volume_patches_op.cc \\\n  ../core/kernels/integrate_volume_patches_op.cc \\\n  extract_volume_patches_op_gpu.cu.o \\\n  integrate_volume_patches_op_gpu.cu.o \\\n  ${TF_CFLAGS[@]} -fPIC -lcudart ${TF_LFLAGS[@]} \\\n  -L /opt/cuda/lib64/", "body": "They both should end up in the same shared object. The build script:\r\n\r\n```\r\nTF_CFLAGS=( $(python -c 'import tensorflow as tf; print(\" \".join(tf.sysconfig.get_compile_flags()))') )\r\nTF_LFLAGS=( $(python -c 'import tensorflow as tf; print(\" \".join(tf.sysconfig.get_link_flags()))') )\r\n\r\nnvcc \\\r\n  -DNDEBUG \\\r\n  -ccbin=g++-6 \\\r\n  -std=c++11 -c -o extract_volume_patches_op_gpu.cu.o \\\r\n  ../core/kernels/extract_volume_patches_op_gpu.cu.cc \\\r\n  ${TF_CFLAGS[@]} -D GOOGLE_CUDA=1 -x cu -Xcompiler -fPIC\r\n\r\nnvcc \\\r\n  -DNDEBUG \\\r\n  -ccbin=g++-6 \\\r\n  -std=c++11 -c -o integrate_volume_patches_op_gpu.cu.o \\\r\n  ../core/kernels/integrate_volume_patches_op_gpu.cu.cc \\\r\n  ${TF_CFLAGS[@]} -D GOOGLE_CUDA=1 -x cu -Xcompiler -fPIC\r\n\r\ng++-6 \\\r\n  -std=c++11 -shared -o volume_patches.so \\\r\n  ../core/ops/extract_volume_patches.cc \\\r\n  ../core/ops/integrate_volume_patches.cc \\\r\n  ../core/kernels/extract_volume_patches_op.cc \\\r\n  ../core/kernels/integrate_volume_patches_op.cc \\\r\n  extract_volume_patches_op_gpu.cu.o \\\r\n  integrate_volume_patches_op_gpu.cu.o \\\r\n  ${TF_CFLAGS[@]} -fPIC -lcudart ${TF_LFLAGS[@]} \\\r\n  -L /opt/cuda/lib64/\r\n```"}