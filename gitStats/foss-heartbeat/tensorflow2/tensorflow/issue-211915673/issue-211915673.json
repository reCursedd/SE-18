{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8087", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8087/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8087/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8087/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8087", "id": 211915673, "node_id": "MDU6SXNzdWUyMTE5MTU2NzM=", "number": 8087, "title": "SystemError: <built-in function TF_Run> returned a result with an error set using tf.contrib.layers", "user": {"login": "jakubLangr", "id": 1884004, "node_id": "MDQ6VXNlcjE4ODQwMDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1884004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubLangr", "html_url": "https://github.com/jakubLangr", "followers_url": "https://api.github.com/users/jakubLangr/followers", "following_url": "https://api.github.com/users/jakubLangr/following{/other_user}", "gists_url": "https://api.github.com/users/jakubLangr/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubLangr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubLangr/subscriptions", "organizations_url": "https://api.github.com/users/jakubLangr/orgs", "repos_url": "https://api.github.com/users/jakubLangr/repos", "events_url": "https://api.github.com/users/jakubLangr/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubLangr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-03-04T23:13:53Z", "updated_at": "2017-06-14T06:18:10Z", "closed_at": "2017-06-14T06:18:10Z", "author_association": "NONE", "body_html": "<p>(Using <code>tf 1.0.0</code>)<br>\nI tried to follow the following example (<a href=\"https://www.tensorflow.org/get_started/tflearn\" rel=\"nofollow\">https://www.tensorflow.org/get_started/tflearn</a>) from the TF website and I get the following error:</p>\n<pre><code>INFO:tensorflow:Using default config.\nINFO:tensorflow:Using config: {'_cluster_spec': &lt;tensorflow.python.training.server_lib.ClusterSpec object at 0x7f9cfb283e80&gt;, '_task_id': 0, '_keep_checkpoint_every_n_hours': 10000, '_keep_checkpoint_max': 5, '_save_checkpoints_steps': None, '_task_type': None, '_environment': 'local', '_tf_config': gpu_options {\n  per_process_gpu_memory_fraction: 1.0\n}\n, '_master': '', '_save_checkpoints_secs': 600, '_is_chief': True, '_tf_random_seed': None, '_num_ps_replicas': 0, '_save_summary_steps': 100, '_evaluation_master': ''}\nWARNING:tensorflow:From &lt;ipython-input-131-b49d002a31c2&gt;:14: calling BaseEstimator.fit (from tensorflow.contrib.learn.python.learn.estimators.estimator) with x is deprecated and will be removed after 2016-12-01.\nInstructions for updating:\nEstimator is decoupled from Scikit Learn interface by moving into\nseparate class SKCompat. Arguments x, y and batch_size are only\navailable in the SKCompat class, Estimator will only accept input_fn.\nExample conversion:\n  est = Estimator(...) -&gt; est = SKCompat(Estimator(...))\nWARNING:tensorflow:From &lt;ipython-input-131-b49d002a31c2&gt;:14: calling BaseEstimator.fit (from tensorflow.contrib.learn.python.learn.estimators.estimator) with y is deprecated and will be removed after 2016-12-01.\nInstructions for updating:\nEstimator is decoupled from Scikit Learn interface by moving into\nseparate class SKCompat. Arguments x, y and batch_size are only\navailable in the SKCompat class, Estimator will only accept input_fn.\nExample conversion:\n  est = Estimator(...) -&gt; est = SKCompat(Estimator(...))\nWARNING:tensorflow:From /opt/conda/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/head.py:1362: scalar_summary (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2016-11-30.\nInstructions for updating:\nPlease switch to tf.summary.scalar. Note that tf.summary.scalar uses the node name instead of the tag. This means that TensorFlow will automatically de-duplicate summary names based on the scope they are created in. Also, passing a tensor or list of tags to a scalar summary op is no longer supported.\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/util/deprecation.py:247: FutureWarning: comparison to `None` will result in an elementwise object comparison in the future.\n  equality = a == b\nINFO:tensorflow:Create CheckpointSaverHook.\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nTypeError: expected bytes, tuple found\n\nDuring handling of the above exception, another exception occurred:\n\nSystemError                               Traceback (most recent call last)\n&lt;ipython-input-131-b49d002a31c2&gt; in &lt;module&gt;()\n     12 classifier.fit(x=results,\n     13                y=labels,\n---&gt; 14                steps=2000)\n     15 \n     16 # Evaluate accuracy.\n\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/util/deprecation.py in new_func(*args, **kwargs)\n    278             _call_location(), decorator_utils.get_qualified_name(func),\n    279             func.__module__, arg_name, date, instructions)\n--&gt; 280       return func(*args, **kwargs)\n    281     new_func.__doc__ = _add_deprecated_arg_notice_to_docstring(\n    282         func.__doc__, date, instructions)\n\n/opt/conda/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py in fit(self, x, y, input_fn, steps, batch_size, monitors, max_steps)\n    408     _verify_input_args(x, y, input_fn, None, batch_size)\n    409     if x is not None:\n--&gt; 410       SKCompat(self).fit(x, y, batch_size, steps, max_steps, monitors)\n    411       return self\n    412 \n\n/opt/conda/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py in fit(self, x, y, batch_size, steps, max_steps, monitors)\n   1351                         steps=steps,\n   1352                         max_steps=max_steps,\n-&gt; 1353                         monitors=all_monitors)\n   1354     return self\n   1355 \n\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/util/deprecation.py in new_func(*args, **kwargs)\n    278             _call_location(), decorator_utils.get_qualified_name(func),\n    279             func.__module__, arg_name, date, instructions)\n--&gt; 280       return func(*args, **kwargs)\n    281     new_func.__doc__ = _add_deprecated_arg_notice_to_docstring(\n    282         func.__doc__, date, instructions)\n\n/opt/conda/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py in fit(self, x, y, input_fn, steps, batch_size, monitors, max_steps)\n    424       hooks.append(basic_session_run_hooks.StopAtStepHook(steps, max_steps))\n    425 \n--&gt; 426     loss = self._train_model(input_fn=input_fn, hooks=hooks)\n    427     logging.info('Loss for final step: %s.', loss)\n    428     return self\n\n/opt/conda/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py in _train_model(self, input_fn, hooks)\n    982         loss = None\n    983         while not mon_sess.should_stop():\n--&gt; 984           _, loss = mon_sess.run([model_fn_ops.train_op, model_fn_ops.loss])\n    985       summary_io.SummaryWriterCache.clear()\n    986       return loss\n\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/training/monitored_session.py in run(self, fetches, feed_dict, options, run_metadata)\n    460                           feed_dict=feed_dict,\n    461                           options=options,\n--&gt; 462                           run_metadata=run_metadata)\n    463 \n    464   def should_stop(self):\n\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/training/monitored_session.py in run(self, fetches, feed_dict, options, run_metadata)\n    784                               feed_dict=feed_dict,\n    785                               options=options,\n--&gt; 786                               run_metadata=run_metadata)\n    787       except errors.AbortedError:\n    788         logging.info('An AbortedError was raised. Closing the current session. '\n\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/training/monitored_session.py in run(self, *args, **kwargs)\n    742 \n    743   def run(self, *args, **kwargs):\n--&gt; 744     return self._sess.run(*args, **kwargs)\n    745 \n    746 \n\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/training/monitored_session.py in run(self, fetches, feed_dict, options, run_metadata)\n    889                                   feed_dict=feed_dict,\n    890                                   options=options,\n--&gt; 891                                   run_metadata=run_metadata)\n    892 \n    893     for hook in self._hooks:\n\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/training/monitored_session.py in run(self, *args, **kwargs)\n    742 \n    743   def run(self, *args, **kwargs):\n--&gt; 744     return self._sess.run(*args, **kwargs)\n    745 \n    746 \n\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/client/session.py in run(self, fetches, feed_dict, options, run_metadata)\n    765     try:\n    766       result = self._run(None, fetches, feed_dict, options_ptr,\n--&gt; 767                          run_metadata_ptr)\n    768       if run_metadata:\n    769         proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)\n\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/client/session.py in _run(self, handle, fetches, feed_dict, options, run_metadata)\n    963     if final_fetches or final_targets:\n    964       results = self._do_run(handle, final_targets, final_fetches,\n--&gt; 965                              feed_dict_string, options, run_metadata)\n    966     else:\n    967       results = []\n\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/client/session.py in _do_run(self, handle, target_list, fetch_list, feed_dict, options, run_metadata)\n   1013     if handle is None:\n   1014       return self._do_call(_run_fn, self._session, feed_dict, fetch_list,\n-&gt; 1015                            target_list, options, run_metadata)\n   1016     else:\n   1017       return self._do_call(_prun_fn, self._session, handle, feed_dict,\n\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/client/session.py in _do_call(self, fn, *args)\n   1020   def _do_call(self, fn, *args):\n   1021     try:\n-&gt; 1022       return fn(*args)\n   1023     except errors.OpError as e:\n   1024       message = compat.as_text(e.message)\n\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/client/session.py in _run_fn(session, feed_dict, fetch_list, target_list, options, run_metadata)\n   1002         return tf_session.TF_Run(session, options,\n   1003                                  feed_dict, fetch_list, target_list,\n-&gt; 1004                                  status, run_metadata)\n   1005 \n   1006     def _prun_fn(session, handle, feed_dict, fetch_list):\n\nSystemError: &lt;built-in function TF_Run&gt; returned a result with an error set\n</code></pre>\n<p>To replicate:<br>\n(For better accuracy use Docker image <code>jupyter/datascience-notebook</code> and install tf)</p>\n<pre><code>from __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\nimport tensorflow as tf\n\nresults = np.ndarray(10,2632)\nlabels = [0,1] * 5\n\nfeature_columns = [tf.contrib.layers.real_valued_column(\"\", dimension=4)]\n\n\nclassifier = tf.contrib.learn.DNNClassifier(feature_columns=feature_columns,\n                                            hidden_units=[2623,2],\n                                            n_classes=2,\n                                            model_dir='./model')\n\n# Fit model.\nclassifier.fit(x=results,\n               y=labels,\n               steps=2000)\n\n# Evaluate accuracy.\naccuracy_score = classifier.evaluate(x=test_set.data,\n                                     y=test_set.target)[\"accuracy\"]\nprint('Accuracy: {0:f}'.format(accuracy_score))\n</code></pre>\n<p>I think this might be a problem with tensorflow badly interacting with the underlying file system? Not sure.</p>", "body_text": "(Using tf 1.0.0)\nI tried to follow the following example (https://www.tensorflow.org/get_started/tflearn) from the TF website and I get the following error:\nINFO:tensorflow:Using default config.\nINFO:tensorflow:Using config: {'_cluster_spec': <tensorflow.python.training.server_lib.ClusterSpec object at 0x7f9cfb283e80>, '_task_id': 0, '_keep_checkpoint_every_n_hours': 10000, '_keep_checkpoint_max': 5, '_save_checkpoints_steps': None, '_task_type': None, '_environment': 'local', '_tf_config': gpu_options {\n  per_process_gpu_memory_fraction: 1.0\n}\n, '_master': '', '_save_checkpoints_secs': 600, '_is_chief': True, '_tf_random_seed': None, '_num_ps_replicas': 0, '_save_summary_steps': 100, '_evaluation_master': ''}\nWARNING:tensorflow:From <ipython-input-131-b49d002a31c2>:14: calling BaseEstimator.fit (from tensorflow.contrib.learn.python.learn.estimators.estimator) with x is deprecated and will be removed after 2016-12-01.\nInstructions for updating:\nEstimator is decoupled from Scikit Learn interface by moving into\nseparate class SKCompat. Arguments x, y and batch_size are only\navailable in the SKCompat class, Estimator will only accept input_fn.\nExample conversion:\n  est = Estimator(...) -> est = SKCompat(Estimator(...))\nWARNING:tensorflow:From <ipython-input-131-b49d002a31c2>:14: calling BaseEstimator.fit (from tensorflow.contrib.learn.python.learn.estimators.estimator) with y is deprecated and will be removed after 2016-12-01.\nInstructions for updating:\nEstimator is decoupled from Scikit Learn interface by moving into\nseparate class SKCompat. Arguments x, y and batch_size are only\navailable in the SKCompat class, Estimator will only accept input_fn.\nExample conversion:\n  est = Estimator(...) -> est = SKCompat(Estimator(...))\nWARNING:tensorflow:From /opt/conda/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/head.py:1362: scalar_summary (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2016-11-30.\nInstructions for updating:\nPlease switch to tf.summary.scalar. Note that tf.summary.scalar uses the node name instead of the tag. This means that TensorFlow will automatically de-duplicate summary names based on the scope they are created in. Also, passing a tensor or list of tags to a scalar summary op is no longer supported.\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/util/deprecation.py:247: FutureWarning: comparison to `None` will result in an elementwise object comparison in the future.\n  equality = a == b\nINFO:tensorflow:Create CheckpointSaverHook.\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nTypeError: expected bytes, tuple found\n\nDuring handling of the above exception, another exception occurred:\n\nSystemError                               Traceback (most recent call last)\n<ipython-input-131-b49d002a31c2> in <module>()\n     12 classifier.fit(x=results,\n     13                y=labels,\n---> 14                steps=2000)\n     15 \n     16 # Evaluate accuracy.\n\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/util/deprecation.py in new_func(*args, **kwargs)\n    278             _call_location(), decorator_utils.get_qualified_name(func),\n    279             func.__module__, arg_name, date, instructions)\n--> 280       return func(*args, **kwargs)\n    281     new_func.__doc__ = _add_deprecated_arg_notice_to_docstring(\n    282         func.__doc__, date, instructions)\n\n/opt/conda/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py in fit(self, x, y, input_fn, steps, batch_size, monitors, max_steps)\n    408     _verify_input_args(x, y, input_fn, None, batch_size)\n    409     if x is not None:\n--> 410       SKCompat(self).fit(x, y, batch_size, steps, max_steps, monitors)\n    411       return self\n    412 \n\n/opt/conda/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py in fit(self, x, y, batch_size, steps, max_steps, monitors)\n   1351                         steps=steps,\n   1352                         max_steps=max_steps,\n-> 1353                         monitors=all_monitors)\n   1354     return self\n   1355 \n\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/util/deprecation.py in new_func(*args, **kwargs)\n    278             _call_location(), decorator_utils.get_qualified_name(func),\n    279             func.__module__, arg_name, date, instructions)\n--> 280       return func(*args, **kwargs)\n    281     new_func.__doc__ = _add_deprecated_arg_notice_to_docstring(\n    282         func.__doc__, date, instructions)\n\n/opt/conda/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py in fit(self, x, y, input_fn, steps, batch_size, monitors, max_steps)\n    424       hooks.append(basic_session_run_hooks.StopAtStepHook(steps, max_steps))\n    425 \n--> 426     loss = self._train_model(input_fn=input_fn, hooks=hooks)\n    427     logging.info('Loss for final step: %s.', loss)\n    428     return self\n\n/opt/conda/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py in _train_model(self, input_fn, hooks)\n    982         loss = None\n    983         while not mon_sess.should_stop():\n--> 984           _, loss = mon_sess.run([model_fn_ops.train_op, model_fn_ops.loss])\n    985       summary_io.SummaryWriterCache.clear()\n    986       return loss\n\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/training/monitored_session.py in run(self, fetches, feed_dict, options, run_metadata)\n    460                           feed_dict=feed_dict,\n    461                           options=options,\n--> 462                           run_metadata=run_metadata)\n    463 \n    464   def should_stop(self):\n\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/training/monitored_session.py in run(self, fetches, feed_dict, options, run_metadata)\n    784                               feed_dict=feed_dict,\n    785                               options=options,\n--> 786                               run_metadata=run_metadata)\n    787       except errors.AbortedError:\n    788         logging.info('An AbortedError was raised. Closing the current session. '\n\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/training/monitored_session.py in run(self, *args, **kwargs)\n    742 \n    743   def run(self, *args, **kwargs):\n--> 744     return self._sess.run(*args, **kwargs)\n    745 \n    746 \n\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/training/monitored_session.py in run(self, fetches, feed_dict, options, run_metadata)\n    889                                   feed_dict=feed_dict,\n    890                                   options=options,\n--> 891                                   run_metadata=run_metadata)\n    892 \n    893     for hook in self._hooks:\n\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/training/monitored_session.py in run(self, *args, **kwargs)\n    742 \n    743   def run(self, *args, **kwargs):\n--> 744     return self._sess.run(*args, **kwargs)\n    745 \n    746 \n\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/client/session.py in run(self, fetches, feed_dict, options, run_metadata)\n    765     try:\n    766       result = self._run(None, fetches, feed_dict, options_ptr,\n--> 767                          run_metadata_ptr)\n    768       if run_metadata:\n    769         proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)\n\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/client/session.py in _run(self, handle, fetches, feed_dict, options, run_metadata)\n    963     if final_fetches or final_targets:\n    964       results = self._do_run(handle, final_targets, final_fetches,\n--> 965                              feed_dict_string, options, run_metadata)\n    966     else:\n    967       results = []\n\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/client/session.py in _do_run(self, handle, target_list, fetch_list, feed_dict, options, run_metadata)\n   1013     if handle is None:\n   1014       return self._do_call(_run_fn, self._session, feed_dict, fetch_list,\n-> 1015                            target_list, options, run_metadata)\n   1016     else:\n   1017       return self._do_call(_prun_fn, self._session, handle, feed_dict,\n\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/client/session.py in _do_call(self, fn, *args)\n   1020   def _do_call(self, fn, *args):\n   1021     try:\n-> 1022       return fn(*args)\n   1023     except errors.OpError as e:\n   1024       message = compat.as_text(e.message)\n\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/client/session.py in _run_fn(session, feed_dict, fetch_list, target_list, options, run_metadata)\n   1002         return tf_session.TF_Run(session, options,\n   1003                                  feed_dict, fetch_list, target_list,\n-> 1004                                  status, run_metadata)\n   1005 \n   1006     def _prun_fn(session, handle, feed_dict, fetch_list):\n\nSystemError: <built-in function TF_Run> returned a result with an error set\n\nTo replicate:\n(For better accuracy use Docker image jupyter/datascience-notebook and install tf)\nfrom __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\nimport tensorflow as tf\n\nresults = np.ndarray(10,2632)\nlabels = [0,1] * 5\n\nfeature_columns = [tf.contrib.layers.real_valued_column(\"\", dimension=4)]\n\n\nclassifier = tf.contrib.learn.DNNClassifier(feature_columns=feature_columns,\n                                            hidden_units=[2623,2],\n                                            n_classes=2,\n                                            model_dir='./model')\n\n# Fit model.\nclassifier.fit(x=results,\n               y=labels,\n               steps=2000)\n\n# Evaluate accuracy.\naccuracy_score = classifier.evaluate(x=test_set.data,\n                                     y=test_set.target)[\"accuracy\"]\nprint('Accuracy: {0:f}'.format(accuracy_score))\n\nI think this might be a problem with tensorflow badly interacting with the underlying file system? Not sure.", "body": "(Using `tf 1.0.0`)\r\nI tried to follow the following example (https://www.tensorflow.org/get_started/tflearn) from the TF website and I get the following error:\r\n\r\n```\r\nINFO:tensorflow:Using default config.\r\nINFO:tensorflow:Using config: {'_cluster_spec': <tensorflow.python.training.server_lib.ClusterSpec object at 0x7f9cfb283e80>, '_task_id': 0, '_keep_checkpoint_every_n_hours': 10000, '_keep_checkpoint_max': 5, '_save_checkpoints_steps': None, '_task_type': None, '_environment': 'local', '_tf_config': gpu_options {\r\n  per_process_gpu_memory_fraction: 1.0\r\n}\r\n, '_master': '', '_save_checkpoints_secs': 600, '_is_chief': True, '_tf_random_seed': None, '_num_ps_replicas': 0, '_save_summary_steps': 100, '_evaluation_master': ''}\r\nWARNING:tensorflow:From <ipython-input-131-b49d002a31c2>:14: calling BaseEstimator.fit (from tensorflow.contrib.learn.python.learn.estimators.estimator) with x is deprecated and will be removed after 2016-12-01.\r\nInstructions for updating:\r\nEstimator is decoupled from Scikit Learn interface by moving into\r\nseparate class SKCompat. Arguments x, y and batch_size are only\r\navailable in the SKCompat class, Estimator will only accept input_fn.\r\nExample conversion:\r\n  est = Estimator(...) -> est = SKCompat(Estimator(...))\r\nWARNING:tensorflow:From <ipython-input-131-b49d002a31c2>:14: calling BaseEstimator.fit (from tensorflow.contrib.learn.python.learn.estimators.estimator) with y is deprecated and will be removed after 2016-12-01.\r\nInstructions for updating:\r\nEstimator is decoupled from Scikit Learn interface by moving into\r\nseparate class SKCompat. Arguments x, y and batch_size are only\r\navailable in the SKCompat class, Estimator will only accept input_fn.\r\nExample conversion:\r\n  est = Estimator(...) -> est = SKCompat(Estimator(...))\r\nWARNING:tensorflow:From /opt/conda/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/head.py:1362: scalar_summary (from tensorflow.python.ops.logging_ops) is deprecated and will be removed after 2016-11-30.\r\nInstructions for updating:\r\nPlease switch to tf.summary.scalar. Note that tf.summary.scalar uses the node name instead of the tag. This means that TensorFlow will automatically de-duplicate summary names based on the scope they are created in. Also, passing a tensor or list of tags to a scalar summary op is no longer supported.\r\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/util/deprecation.py:247: FutureWarning: comparison to `None` will result in an elementwise object comparison in the future.\r\n  equality = a == b\r\nINFO:tensorflow:Create CheckpointSaverHook.\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nTypeError: expected bytes, tuple found\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nSystemError                               Traceback (most recent call last)\r\n<ipython-input-131-b49d002a31c2> in <module>()\r\n     12 classifier.fit(x=results,\r\n     13                y=labels,\r\n---> 14                steps=2000)\r\n     15 \r\n     16 # Evaluate accuracy.\r\n\r\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/util/deprecation.py in new_func(*args, **kwargs)\r\n    278             _call_location(), decorator_utils.get_qualified_name(func),\r\n    279             func.__module__, arg_name, date, instructions)\r\n--> 280       return func(*args, **kwargs)\r\n    281     new_func.__doc__ = _add_deprecated_arg_notice_to_docstring(\r\n    282         func.__doc__, date, instructions)\r\n\r\n/opt/conda/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py in fit(self, x, y, input_fn, steps, batch_size, monitors, max_steps)\r\n    408     _verify_input_args(x, y, input_fn, None, batch_size)\r\n    409     if x is not None:\r\n--> 410       SKCompat(self).fit(x, y, batch_size, steps, max_steps, monitors)\r\n    411       return self\r\n    412 \r\n\r\n/opt/conda/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py in fit(self, x, y, batch_size, steps, max_steps, monitors)\r\n   1351                         steps=steps,\r\n   1352                         max_steps=max_steps,\r\n-> 1353                         monitors=all_monitors)\r\n   1354     return self\r\n   1355 \r\n\r\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/util/deprecation.py in new_func(*args, **kwargs)\r\n    278             _call_location(), decorator_utils.get_qualified_name(func),\r\n    279             func.__module__, arg_name, date, instructions)\r\n--> 280       return func(*args, **kwargs)\r\n    281     new_func.__doc__ = _add_deprecated_arg_notice_to_docstring(\r\n    282         func.__doc__, date, instructions)\r\n\r\n/opt/conda/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py in fit(self, x, y, input_fn, steps, batch_size, monitors, max_steps)\r\n    424       hooks.append(basic_session_run_hooks.StopAtStepHook(steps, max_steps))\r\n    425 \r\n--> 426     loss = self._train_model(input_fn=input_fn, hooks=hooks)\r\n    427     logging.info('Loss for final step: %s.', loss)\r\n    428     return self\r\n\r\n/opt/conda/lib/python3.5/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py in _train_model(self, input_fn, hooks)\r\n    982         loss = None\r\n    983         while not mon_sess.should_stop():\r\n--> 984           _, loss = mon_sess.run([model_fn_ops.train_op, model_fn_ops.loss])\r\n    985       summary_io.SummaryWriterCache.clear()\r\n    986       return loss\r\n\r\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/training/monitored_session.py in run(self, fetches, feed_dict, options, run_metadata)\r\n    460                           feed_dict=feed_dict,\r\n    461                           options=options,\r\n--> 462                           run_metadata=run_metadata)\r\n    463 \r\n    464   def should_stop(self):\r\n\r\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/training/monitored_session.py in run(self, fetches, feed_dict, options, run_metadata)\r\n    784                               feed_dict=feed_dict,\r\n    785                               options=options,\r\n--> 786                               run_metadata=run_metadata)\r\n    787       except errors.AbortedError:\r\n    788         logging.info('An AbortedError was raised. Closing the current session. '\r\n\r\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/training/monitored_session.py in run(self, *args, **kwargs)\r\n    742 \r\n    743   def run(self, *args, **kwargs):\r\n--> 744     return self._sess.run(*args, **kwargs)\r\n    745 \r\n    746 \r\n\r\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/training/monitored_session.py in run(self, fetches, feed_dict, options, run_metadata)\r\n    889                                   feed_dict=feed_dict,\r\n    890                                   options=options,\r\n--> 891                                   run_metadata=run_metadata)\r\n    892 \r\n    893     for hook in self._hooks:\r\n\r\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/training/monitored_session.py in run(self, *args, **kwargs)\r\n    742 \r\n    743   def run(self, *args, **kwargs):\r\n--> 744     return self._sess.run(*args, **kwargs)\r\n    745 \r\n    746 \r\n\r\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/client/session.py in run(self, fetches, feed_dict, options, run_metadata)\r\n    765     try:\r\n    766       result = self._run(None, fetches, feed_dict, options_ptr,\r\n--> 767                          run_metadata_ptr)\r\n    768       if run_metadata:\r\n    769         proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)\r\n\r\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/client/session.py in _run(self, handle, fetches, feed_dict, options, run_metadata)\r\n    963     if final_fetches or final_targets:\r\n    964       results = self._do_run(handle, final_targets, final_fetches,\r\n--> 965                              feed_dict_string, options, run_metadata)\r\n    966     else:\r\n    967       results = []\r\n\r\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/client/session.py in _do_run(self, handle, target_list, fetch_list, feed_dict, options, run_metadata)\r\n   1013     if handle is None:\r\n   1014       return self._do_call(_run_fn, self._session, feed_dict, fetch_list,\r\n-> 1015                            target_list, options, run_metadata)\r\n   1016     else:\r\n   1017       return self._do_call(_prun_fn, self._session, handle, feed_dict,\r\n\r\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/client/session.py in _do_call(self, fn, *args)\r\n   1020   def _do_call(self, fn, *args):\r\n   1021     try:\r\n-> 1022       return fn(*args)\r\n   1023     except errors.OpError as e:\r\n   1024       message = compat.as_text(e.message)\r\n\r\n/opt/conda/lib/python3.5/site-packages/tensorflow/python/client/session.py in _run_fn(session, feed_dict, fetch_list, target_list, options, run_metadata)\r\n   1002         return tf_session.TF_Run(session, options,\r\n   1003                                  feed_dict, fetch_list, target_list,\r\n-> 1004                                  status, run_metadata)\r\n   1005 \r\n   1006     def _prun_fn(session, handle, feed_dict, fetch_list):\r\n\r\nSystemError: <built-in function TF_Run> returned a result with an error set\r\n```\r\n\r\nTo replicate:\r\n(For better accuracy use Docker image `jupyter/datascience-notebook` and install tf)\r\n```\r\nfrom __future__ import absolute_import\r\nfrom __future__ import division\r\nfrom __future__ import print_function\r\nimport tensorflow as tf\r\n\r\nresults = np.ndarray(10,2632)\r\nlabels = [0,1] * 5\r\n\r\nfeature_columns = [tf.contrib.layers.real_valued_column(\"\", dimension=4)]\r\n\r\n\r\nclassifier = tf.contrib.learn.DNNClassifier(feature_columns=feature_columns,\r\n                                            hidden_units=[2623,2],\r\n                                            n_classes=2,\r\n                                            model_dir='./model')\r\n\r\n# Fit model.\r\nclassifier.fit(x=results,\r\n               y=labels,\r\n               steps=2000)\r\n\r\n# Evaluate accuracy.\r\naccuracy_score = classifier.evaluate(x=test_set.data,\r\n                                     y=test_set.target)[\"accuracy\"]\r\nprint('Accuracy: {0:f}'.format(accuracy_score))\r\n```\r\n\r\nI think this might be a problem with tensorflow badly interacting with the underlying file system? Not sure."}