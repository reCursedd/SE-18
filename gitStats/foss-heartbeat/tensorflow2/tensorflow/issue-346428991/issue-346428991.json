{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21295", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21295/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21295/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21295/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21295", "id": 346428991, "node_id": "MDU6SXNzdWUzNDY0Mjg5OTE=", "number": 21295, "title": "support 3d convolution with float64", "user": {"login": "Eshonar", "id": 34928224, "node_id": "MDQ6VXNlcjM0OTI4MjI0", "avatar_url": "https://avatars1.githubusercontent.com/u/34928224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Eshonar", "html_url": "https://github.com/Eshonar", "followers_url": "https://api.github.com/users/Eshonar/followers", "following_url": "https://api.github.com/users/Eshonar/following{/other_user}", "gists_url": "https://api.github.com/users/Eshonar/gists{/gist_id}", "starred_url": "https://api.github.com/users/Eshonar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Eshonar/subscriptions", "organizations_url": "https://api.github.com/users/Eshonar/orgs", "repos_url": "https://api.github.com/users/Eshonar/repos", "events_url": "https://api.github.com/users/Eshonar/events{/privacy}", "received_events_url": "https://api.github.com/users/Eshonar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "robieta", "id": 13089297, "node_id": "MDQ6VXNlcjEzMDg5Mjk3", "avatar_url": "https://avatars0.githubusercontent.com/u/13089297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robieta", "html_url": "https://github.com/robieta", "followers_url": "https://api.github.com/users/robieta/followers", "following_url": "https://api.github.com/users/robieta/following{/other_user}", "gists_url": "https://api.github.com/users/robieta/gists{/gist_id}", "starred_url": "https://api.github.com/users/robieta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robieta/subscriptions", "organizations_url": "https://api.github.com/users/robieta/orgs", "repos_url": "https://api.github.com/users/robieta/repos", "events_url": "https://api.github.com/users/robieta/events{/privacy}", "received_events_url": "https://api.github.com/users/robieta/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "robieta", "id": 13089297, "node_id": "MDQ6VXNlcjEzMDg5Mjk3", "avatar_url": "https://avatars0.githubusercontent.com/u/13089297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robieta", "html_url": "https://github.com/robieta", "followers_url": "https://api.github.com/users/robieta/followers", "following_url": "https://api.github.com/users/robieta/following{/other_user}", "gists_url": "https://api.github.com/users/robieta/gists{/gist_id}", "starred_url": "https://api.github.com/users/robieta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robieta/subscriptions", "organizations_url": "https://api.github.com/users/robieta/orgs", "repos_url": "https://api.github.com/users/robieta/repos", "events_url": "https://api.github.com/users/robieta/events{/privacy}", "received_events_url": "https://api.github.com/users/robieta/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-08-01T02:53:36Z", "updated_at": "2018-11-16T01:25:48Z", "closed_at": "2018-08-19T23:31:03Z", "author_association": "NONE", "body_html": "<hr>\n<h3>System information</h3>\n<ul>\n<li>\n<p><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:<br>\nNo</p>\n</li>\n<li>\n<p><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:<br>\nWindows 7</p>\n</li>\n<li>\n<p><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>:<br>\nN/A</p>\n</li>\n<li>\n<p><strong>TensorFlow installed from (source or binary)</strong>:<br>\nfrom pip install</p>\n</li>\n<li>\n<p><strong>TensorFlow version (use command below)</strong>:<br>\ntensorflow 1.9.0</p>\n</li>\n<li>\n<p><strong>Python version</strong>:<br>\n3.6</p>\n</li>\n<li>\n<p><strong>Bazel version (if compiling from source)</strong>:</p>\n</li>\n<li>\n<p><strong>GCC/Compiler version (if compiling from source)</strong>:</p>\n</li>\n<li>\n<p><strong>CUDA/cuDNN version</strong>:<br>\ncuDNN 9.0 v7, CUDA9.1</p>\n</li>\n<li>\n<p><strong>GPU model and memory</strong>:<br>\nGTX980Ti 6GB, Geforce Titan X 12GB</p>\n</li>\n<li>\n<p><strong>Exact command to reproduce</strong>:</p>\n</li>\n</ul>\n<p>You can collect some of this information using our environment capture script:</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\">https://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh</a></p>\n<p>You can obtain the TensorFlow version with</p>\n<p>python -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"</p>\n<h3>Describe the problem</h3>\n<p>Describe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.</p>\n<p>I'm working on some convolutional calculation on the Tensorflow and got some strange errors with the Double Precision numbers.<br>\nI needed to calculate those tensors in float64 because of the precision issues.</p>\n<p>The conv3d works fine with me on float32, but on the Double precision, it only works on CPU and on the GPU it causes error.</p>\n<p>So is there any way I can get access to this operation?</p>\n<h3>Source code / logs</h3>\n<p>Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.</p>\n<p>import tensorflow as tf<br>\nimport numpy as np</p>\n<p>with tf.device('/device:GPU:0'):</p>\n<pre><code>a = tf.constant(2 * np.ones([1, 200, 200, 200, 9], dtype=np.float64), dtype=tf.float64)\n\nb = tf.constant(np.ones([3, 3, 3, 9, 9], dtype=np.float64), dtype=tf.float64)\n\n\nsess = tf.Session()\n\ninit = tf.global_variables_initializer()\n\nsess.run(init)\n\n\nc = tf.nn.conv3d(a, b, strides=[1, 1, 1, 1, 1], padding='SAME')\nprint(a)\nprint(b)\nprint(c)\nfor i in range(1000):\n    print(sess.run(c))\n</code></pre>\n<p>the output says</p>\n<p>InvalidArgumentError (see above for traceback): Cannot assign a device for operation 'Conv3D': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.<br>\nRegistered kernels:<br>\ndevice='CPU'; T in [DT_HALF]<br>\ndevice='CPU'; T in [DT_FLOAT]<br>\ndevice='CPU'; T in [DT_DOUBLE]<br>\ndevice='GPU'; T in [DT_HALF]<br>\ndevice='GPU'; T in [DT_FLOAT]</p>\n<p>[[Node: Conv3D = Conv3D[T=DT_DOUBLE, data_format=\"NDHWC\", dilations=[1, 1, 1, 1, 1], padding=\"SAME\", strides=[1, 1, 1, 1, 1], _device=\"/device:GPU:0\"](Const, Const_1)]]</p>", "body_text": "System information\n\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nNo\n\n\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):\nWindows 7\n\n\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:\nN/A\n\n\nTensorFlow installed from (source or binary):\nfrom pip install\n\n\nTensorFlow version (use command below):\ntensorflow 1.9.0\n\n\nPython version:\n3.6\n\n\nBazel version (if compiling from source):\n\n\nGCC/Compiler version (if compiling from source):\n\n\nCUDA/cuDNN version:\ncuDNN 9.0 v7, CUDA9.1\n\n\nGPU model and memory:\nGTX980Ti 6GB, Geforce Titan X 12GB\n\n\nExact command to reproduce:\n\n\nYou can collect some of this information using our environment capture script:\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\nYou can obtain the TensorFlow version with\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\nDescribe the problem\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\nI'm working on some convolutional calculation on the Tensorflow and got some strange errors with the Double Precision numbers.\nI needed to calculate those tensors in float64 because of the precision issues.\nThe conv3d works fine with me on float32, but on the Double precision, it only works on CPU and on the GPU it causes error.\nSo is there any way I can get access to this operation?\nSource code / logs\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\nimport tensorflow as tf\nimport numpy as np\nwith tf.device('/device:GPU:0'):\na = tf.constant(2 * np.ones([1, 200, 200, 200, 9], dtype=np.float64), dtype=tf.float64)\n\nb = tf.constant(np.ones([3, 3, 3, 9, 9], dtype=np.float64), dtype=tf.float64)\n\n\nsess = tf.Session()\n\ninit = tf.global_variables_initializer()\n\nsess.run(init)\n\n\nc = tf.nn.conv3d(a, b, strides=[1, 1, 1, 1, 1], padding='SAME')\nprint(a)\nprint(b)\nprint(c)\nfor i in range(1000):\n    print(sess.run(c))\n\nthe output says\nInvalidArgumentError (see above for traceback): Cannot assign a device for operation 'Conv3D': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\nRegistered kernels:\ndevice='CPU'; T in [DT_HALF]\ndevice='CPU'; T in [DT_FLOAT]\ndevice='CPU'; T in [DT_DOUBLE]\ndevice='GPU'; T in [DT_HALF]\ndevice='GPU'; T in [DT_FLOAT]\n[[Node: Conv3D = Conv3D[T=DT_DOUBLE, data_format=\"NDHWC\", dilations=[1, 1, 1, 1, 1], padding=\"SAME\", strides=[1, 1, 1, 1, 1], _device=\"/device:GPU:0\"](Const, Const_1)]]", "body": "------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\nNo\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:\r\nWindows 7\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**:\r\nN/A\r\n- **TensorFlow installed from (source or binary)**:\r\nfrom pip install\r\n\r\n- **TensorFlow version (use command below)**:\r\ntensorflow 1.9.0\r\n\r\n\r\n\r\n- **Python version**:\r\n3.6\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**:\r\ncuDNN 9.0 v7, CUDA9.1\r\n\r\n- **GPU model and memory**:\r\nGTX980Ti 6GB, Geforce Titan X 12GB\r\n\r\n- **Exact command to reproduce**:\r\n\r\nYou can collect some of this information using our environment capture script:\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tools/tf_env_collect.sh\r\n\r\nYou can obtain the TensorFlow version with\r\n\r\npython -c \"import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)\"\r\n\r\n### Describe the problem\r\nDescribe the problem clearly here. Be sure to convey here why it's a bug in TensorFlow or a feature request.\r\n\r\nI'm working on some convolutional calculation on the Tensorflow and got some strange errors with the Double Precision numbers.\r\nI needed to calculate those tensors in float64 because of the precision issues.\r\n\r\nThe conv3d works fine with me on float32, but on the Double precision, it only works on CPU and on the GPU it causes error.\r\n\r\nSo is there any way I can get access to this operation?\r\n\r\n\r\n### Source code / logs\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached. Try to provide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\nwith tf.device('/device:GPU:0'):\r\n\r\n    a = tf.constant(2 * np.ones([1, 200, 200, 200, 9], dtype=np.float64), dtype=tf.float64)\r\n\r\n    b = tf.constant(np.ones([3, 3, 3, 9, 9], dtype=np.float64), dtype=tf.float64)\r\n\r\n\r\n    sess = tf.Session()\r\n\r\n    init = tf.global_variables_initializer()\r\n\r\n    sess.run(init)\r\n\r\n\r\n    c = tf.nn.conv3d(a, b, strides=[1, 1, 1, 1, 1], padding='SAME')\r\n    print(a)\r\n    print(b)\r\n    print(c)\r\n    for i in range(1000):\r\n        print(sess.run(c))\r\n\r\nthe output says\r\n\r\nInvalidArgumentError (see above for traceback): Cannot assign a device for operation 'Conv3D': Could not satisfy explicit device specification '/device:GPU:0' because no supported kernel for GPU devices is available.\r\nRegistered kernels:\r\n  device='CPU'; T in [DT_HALF]\r\n  device='CPU'; T in [DT_FLOAT]\r\n  device='CPU'; T in [DT_DOUBLE]\r\n  device='GPU'; T in [DT_HALF]\r\n  device='GPU'; T in [DT_FLOAT]\r\n\r\n [[Node: Conv3D = Conv3D[T=DT_DOUBLE, data_format=\"NDHWC\", dilations=[1, 1, 1, 1, 1], padding=\"SAME\", strides=[1, 1, 1, 1, 1], _device=\"/device:GPU:0\"](Const, Const_1)]]\r\n\r\n\r\n\r\n"}