{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/253575260", "html_url": "https://github.com/tensorflow/tensorflow/issues/2169#issuecomment-253575260", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2169", "id": 253575260, "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzU3NTI2MA==", "user": {"login": "hermitman", "id": 5199377, "node_id": "MDQ6VXNlcjUxOTkzNzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5199377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hermitman", "html_url": "https://github.com/hermitman", "followers_url": "https://api.github.com/users/hermitman/followers", "following_url": "https://api.github.com/users/hermitman/following{/other_user}", "gists_url": "https://api.github.com/users/hermitman/gists{/gist_id}", "starred_url": "https://api.github.com/users/hermitman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hermitman/subscriptions", "organizations_url": "https://api.github.com/users/hermitman/orgs", "repos_url": "https://api.github.com/users/hermitman/repos", "events_url": "https://api.github.com/users/hermitman/events{/privacy}", "received_events_url": "https://api.github.com/users/hermitman/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-13T17:05:15Z", "updated_at": "2016-10-13T17:05:15Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7233743\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/EmmaBYPeng\">@EmmaBYPeng</a> That is awesome! Could you share your deconv network structure? I have stuck on this problem for a while. If it works for you, then the problem should be somewhere in my deconv network structure. I basically have something like this:</p>\n<pre><code>conv2d_transpose(...)\nunpool2x2\nconv2d_transpose(...)\nunpool2x2\n...\n</code></pre>\n<p>if I <code>opt.compute_gradient()</code>, the gradients after the first unpooling layer are all <code>None</code>. If the unpooling is fine, I wonder what caused my problems. = =!</p>\n<p>May I take a look at your deconv structure, so I can figure out the difference in implementations?</p>", "body_text": "@EmmaBYPeng That is awesome! Could you share your deconv network structure? I have stuck on this problem for a while. If it works for you, then the problem should be somewhere in my deconv network structure. I basically have something like this:\nconv2d_transpose(...)\nunpool2x2\nconv2d_transpose(...)\nunpool2x2\n...\n\nif I opt.compute_gradient(), the gradients after the first unpooling layer are all None. If the unpooling is fine, I wonder what caused my problems. = =!\nMay I take a look at your deconv structure, so I can figure out the difference in implementations?", "body": "@EmmaBYPeng That is awesome! Could you share your deconv network structure? I have stuck on this problem for a while. If it works for you, then the problem should be somewhere in my deconv network structure. I basically have something like this:\n\n```\nconv2d_transpose(...)\nunpool2x2\nconv2d_transpose(...)\nunpool2x2\n...\n```\n\nif I `opt.compute_gradient()`, the gradients after the first unpooling layer are all `None`. If the unpooling is fine, I wonder what caused my problems. = =!\n\nMay I take a look at your deconv structure, so I can figure out the difference in implementations?\n"}