{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9775", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9775/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9775/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9775/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9775", "id": 227229564, "node_id": "MDU6SXNzdWUyMjcyMjk1NjQ=", "number": 9775, "title": "Feature Request: \"training\" argument for contrib.rnn.DropoutWrapper like the one in tf.layers.dropout", "user": {"login": "nelson-liu", "id": 7272031, "node_id": "MDQ6VXNlcjcyNzIwMzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/7272031?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nelson-liu", "html_url": "https://github.com/nelson-liu", "followers_url": "https://api.github.com/users/nelson-liu/followers", "following_url": "https://api.github.com/users/nelson-liu/following{/other_user}", "gists_url": "https://api.github.com/users/nelson-liu/gists{/gist_id}", "starred_url": "https://api.github.com/users/nelson-liu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nelson-liu/subscriptions", "organizations_url": "https://api.github.com/users/nelson-liu/orgs", "repos_url": "https://api.github.com/users/nelson-liu/repos", "events_url": "https://api.github.com/users/nelson-liu/events{/privacy}", "received_events_url": "https://api.github.com/users/nelson-liu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-05-09T02:29:09Z", "updated_at": "2018-06-16T11:37:14Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Linux Ubuntu 16.0.4</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.1.0</li>\n</ul>\n<h3>Feature Request: \"training\" argument for contrib.rnn.DropoutWrapper for applying dropout depending on train/inference phase.</h3>\n<p>In <a href=\"https://www.tensorflow.org/api_docs/python/tf/layers/dropout\" rel=\"nofollow\"><code>tf.layers.dropout</code></a>, the <code>training</code> parameter is a handy setting that lets you apply dropout depending on whether the model is training or doing inference. It's very convenient to be able to pass a boolean to the model placeholder and have it automatically do the right thing when it comes to dropout.</p>\n<p>Unfortunately, <a href=\"https://www.tensorflow.org/api_docs/python/tf/contrib/rnn/DropoutWrapper\" rel=\"nofollow\"><code>tf.contrib.rnn.DropoutWrapper</code></a> does not have this same parameter, and I think it would greatly benefit from it. This is a feature request for it.</p>\n<p>I tried implementing it myself with <code>tf.cond</code> and either returning the dropped-out outputs/states or the untouched ones, but I couldn't figure out how to share the variables between them in the cond.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Linux Ubuntu 16.0.4\nTensorFlow installed from (source or binary): Binary\nTensorFlow version (use command below): 1.1.0\n\nFeature Request: \"training\" argument for contrib.rnn.DropoutWrapper for applying dropout depending on train/inference phase.\nIn tf.layers.dropout, the training parameter is a handy setting that lets you apply dropout depending on whether the model is training or doing inference. It's very convenient to be able to pass a boolean to the model placeholder and have it automatically do the right thing when it comes to dropout.\nUnfortunately, tf.contrib.rnn.DropoutWrapper does not have this same parameter, and I think it would greatly benefit from it. This is a feature request for it.\nI tried implementing it myself with tf.cond and either returning the dropped-out outputs/states or the untouched ones, but I couldn't figure out how to share the variables between them in the cond.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Linux Ubuntu 16.0.4\r\n- **TensorFlow installed from (source or binary)**: Binary\r\n- **TensorFlow version (use command below)**: 1.1.0\r\n\r\n\r\n### Feature Request: \"training\" argument for contrib.rnn.DropoutWrapper for applying dropout depending on train/inference phase.\r\n\r\nIn [`tf.layers.dropout`](https://www.tensorflow.org/api_docs/python/tf/layers/dropout), the `training` parameter is a handy setting that lets you apply dropout depending on whether the model is training or doing inference. It's very convenient to be able to pass a boolean to the model placeholder and have it automatically do the right thing when it comes to dropout.\r\n\r\nUnfortunately, [`tf.contrib.rnn.DropoutWrapper`](https://www.tensorflow.org/api_docs/python/tf/contrib/rnn/DropoutWrapper) does not have this same parameter, and I think it would greatly benefit from it. This is a feature request for it.\r\n\r\nI tried implementing it myself with `tf.cond` and either returning the dropped-out outputs/states or the untouched ones, but I couldn't figure out how to share the variables between them in the cond.\r\n"}