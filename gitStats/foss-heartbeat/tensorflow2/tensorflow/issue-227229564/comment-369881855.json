{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/369881855", "html_url": "https://github.com/tensorflow/tensorflow/issues/9775#issuecomment-369881855", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9775", "id": 369881855, "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTg4MTg1NQ==", "user": {"login": "songmeixu", "id": 705582, "node_id": "MDQ6VXNlcjcwNTU4Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/705582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/songmeixu", "html_url": "https://github.com/songmeixu", "followers_url": "https://api.github.com/users/songmeixu/followers", "following_url": "https://api.github.com/users/songmeixu/following{/other_user}", "gists_url": "https://api.github.com/users/songmeixu/gists{/gist_id}", "starred_url": "https://api.github.com/users/songmeixu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/songmeixu/subscriptions", "organizations_url": "https://api.github.com/users/songmeixu/orgs", "repos_url": "https://api.github.com/users/songmeixu/repos", "events_url": "https://api.github.com/users/songmeixu/events{/privacy}", "received_events_url": "https://api.github.com/users/songmeixu/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-02T10:17:36Z", "updated_at": "2018-03-02T10:19:41Z", "author_association": "NONE", "body_html": "<p>I understand your confusion. Use a python bool for is_training, it cannot be in graph; while use a tensor.bool for is_training, you need something like tf.is_true(is_training) , but tf without it.</p>\n<p>The problem can be solved by:</p>\n<div class=\"highlight highlight-source-python\"><pre>is_training <span class=\"pl-k\">=</span> tf.placeholder_with_default(<span class=\"pl-c1\">False</span>, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>(), <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>is_training<span class=\"pl-pds\">'</span></span>)\nbasic_cell <span class=\"pl-k\">=</span> tf.contrib.rnn.BasicRNNCell(<span class=\"pl-v\">num_units</span><span class=\"pl-k\">=</span>n_neurons)\nkeep_prob <span class=\"pl-k\">=</span> tf.cond(is_training, <span class=\"pl-k\">lambda</span>:tf.constant(<span class=\"pl-c1\">0.7</span>), <span class=\"pl-k\">lambda</span>:tf.constant(<span class=\"pl-c1\">1.0</span>))\nbasic_cell <span class=\"pl-k\">=</span> tf.contrib.rnn.DropoutWrapper(basic_cell, <span class=\"pl-v\">input_keep_prob</span><span class=\"pl-k\">=</span>keep_prob)\noutputs, states <span class=\"pl-k\">=</span> tf.nn.dynamic_rnn(basic_cell, X, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> trainging</span>\nsess.run(outputs, <span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>{is_training: <span class=\"pl-c1\">True</span>})</pre></div>", "body_text": "I understand your confusion. Use a python bool for is_training, it cannot be in graph; while use a tensor.bool for is_training, you need something like tf.is_true(is_training) , but tf without it.\nThe problem can be solved by:\nis_training = tf.placeholder_with_default(False, shape=(), name='is_training')\nbasic_cell = tf.contrib.rnn.BasicRNNCell(num_units=n_neurons)\nkeep_prob = tf.cond(is_training, lambda:tf.constant(0.7), lambda:tf.constant(1.0))\nbasic_cell = tf.contrib.rnn.DropoutWrapper(basic_cell, input_keep_prob=keep_prob)\noutputs, states = tf.nn.dynamic_rnn(basic_cell, X, dtype=tf.float32)\n\n# trainging\nsess.run(outputs, feed_dict={is_training: True})", "body": "I understand your confusion. Use a python bool for is_training, it cannot be in graph; while use a tensor.bool for is_training, you need something like tf.is_true(is_training) , but tf without it.\r\n\r\nThe problem can be solved by:\r\n```python\r\nis_training = tf.placeholder_with_default(False, shape=(), name='is_training')\r\nbasic_cell = tf.contrib.rnn.BasicRNNCell(num_units=n_neurons)\r\nkeep_prob = tf.cond(is_training, lambda:tf.constant(0.7), lambda:tf.constant(1.0))\r\nbasic_cell = tf.contrib.rnn.DropoutWrapper(basic_cell, input_keep_prob=keep_prob)\r\noutputs, states = tf.nn.dynamic_rnn(basic_cell, X, dtype=tf.float32)\r\n\r\n# trainging\r\nsess.run(outputs, feed_dict={is_training: True})\r\n```"}