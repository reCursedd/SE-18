{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/433318626", "html_url": "https://github.com/tensorflow/tensorflow/issues/23272#issuecomment-433318626", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23272", "id": 433318626, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzMxODYyNg==", "user": {"login": "guptapriya", "id": 14104855, "node_id": "MDQ6VXNlcjE0MTA0ODU1", "avatar_url": "https://avatars1.githubusercontent.com/u/14104855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guptapriya", "html_url": "https://github.com/guptapriya", "followers_url": "https://api.github.com/users/guptapriya/followers", "following_url": "https://api.github.com/users/guptapriya/following{/other_user}", "gists_url": "https://api.github.com/users/guptapriya/gists{/gist_id}", "starred_url": "https://api.github.com/users/guptapriya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guptapriya/subscriptions", "organizations_url": "https://api.github.com/users/guptapriya/orgs", "repos_url": "https://api.github.com/users/guptapriya/repos", "events_url": "https://api.github.com/users/guptapriya/events{/privacy}", "received_events_url": "https://api.github.com/users/guptapriya/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-26T07:45:56Z", "updated_at": "2018-10-26T07:45:56Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=449906\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/sseveran\">@sseveran</a> did you mean this works when you use train_and_evaluate with 6 GPUs, but not 8GPUs. And if you use train instead of train_and_evaluate, how many GPUs does it take for this to happen?</p>\n<p>In general, I don't see why distribution strategy usage itself will lead to a seg fault. From the stack trace, it seems hard to tell of any connection either. Is it possible to find a way to reproduce this?</p>", "body_text": "@sseveran did you mean this works when you use train_and_evaluate with 6 GPUs, but not 8GPUs. And if you use train instead of train_and_evaluate, how many GPUs does it take for this to happen?\nIn general, I don't see why distribution strategy usage itself will lead to a seg fault. From the stack trace, it seems hard to tell of any connection either. Is it possible to find a way to reproduce this?", "body": "@sseveran did you mean this works when you use train_and_evaluate with 6 GPUs, but not 8GPUs. And if you use train instead of train_and_evaluate, how many GPUs does it take for this to happen?\r\n\r\nIn general, I don't see why distribution strategy usage itself will lead to a seg fault. From the stack trace, it seems hard to tell of any connection either. Is it possible to find a way to reproduce this? "}