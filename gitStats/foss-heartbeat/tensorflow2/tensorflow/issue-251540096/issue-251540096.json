{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12436", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12436/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12436/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12436/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12436", "id": 251540096, "node_id": "MDU6SXNzdWUyNTE1NDAwOTY=", "number": 12436, "title": "zeros_like doesn't fully respect the optimize argument", "user": {"login": "EFanZh", "id": 2160692, "node_id": "MDQ6VXNlcjIxNjA2OTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2160692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EFanZh", "html_url": "https://github.com/EFanZh", "followers_url": "https://api.github.com/users/EFanZh/followers", "following_url": "https://api.github.com/users/EFanZh/following{/other_user}", "gists_url": "https://api.github.com/users/EFanZh/gists{/gist_id}", "starred_url": "https://api.github.com/users/EFanZh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EFanZh/subscriptions", "organizations_url": "https://api.github.com/users/EFanZh/orgs", "repos_url": "https://api.github.com/users/EFanZh/repos", "events_url": "https://api.github.com/users/EFanZh/events{/privacy}", "received_events_url": "https://api.github.com/users/EFanZh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-21T03:15:45Z", "updated_at": "2017-09-17T18:11:34Z", "closed_at": "2017-09-17T18:11:34Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/array_ops.py#L1463\">The definition of <code>zeros_like</code></a> is:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">zeros_like</span>(<span class=\"pl-smi\">tensor</span>, <span class=\"pl-smi\">dtype</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">None</span>, <span class=\"pl-smi\">name</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">None</span>, <span class=\"pl-smi\">optimize</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>):\n  <span class=\"pl-k\">with</span> ops.name_scope(name, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>zeros_like<span class=\"pl-pds\">\"</span></span>, [tensor]) <span class=\"pl-k\">as</span> name:\n    tensor <span class=\"pl-k\">=</span> ops.convert_to_tensor(tensor, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>tensor<span class=\"pl-pds\">\"</span></span>)\n\n    <span class=\"pl-k\">if</span> tensor.shape.is_fully_defined():\n      <span class=\"pl-c\"><span class=\"pl-c\">#</span> We can produce a zeros tensor independent of the value of 'tensor',</span>\n      <span class=\"pl-c\"><span class=\"pl-c\">#</span> since the shape is known statically.</span>\n      <span class=\"pl-k\">return</span> zeros(tensor.shape, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>dtype <span class=\"pl-k\">or</span> tensor.dtype, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span>name)\n\n    <span class=\"pl-k\">if</span> dtype <span class=\"pl-k\">is</span> <span class=\"pl-k\">not</span> <span class=\"pl-c1\">None</span> <span class=\"pl-k\">and</span> dtype <span class=\"pl-k\">!=</span> tensor.dtype:\n      <span class=\"pl-k\">return</span> zeros(\n          shape_internal(tensor, <span class=\"pl-v\">optimize</span><span class=\"pl-k\">=</span>optimize), <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>dtype, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span>name)\n    <span class=\"pl-k\">else</span>:\n      <span class=\"pl-k\">return</span> gen_array_ops._zeros_like(tensor, <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span>name)</pre></div>\n<p>We can see that if the shape of <code>tensor</code> is already known, the <code>optimize</code> parameter is ignored, which is inconsistent with the <a href=\"https://www.tensorflow.org/api_docs/python/tf/zeros_like\" rel=\"nofollow\">documented behavior</a>.</p>", "body_text": "The definition of zeros_like is:\ndef zeros_like(tensor, dtype=None, name=None, optimize=True):\n  with ops.name_scope(name, \"zeros_like\", [tensor]) as name:\n    tensor = ops.convert_to_tensor(tensor, name=\"tensor\")\n\n    if tensor.shape.is_fully_defined():\n      # We can produce a zeros tensor independent of the value of 'tensor',\n      # since the shape is known statically.\n      return zeros(tensor.shape, dtype=dtype or tensor.dtype, name=name)\n\n    if dtype is not None and dtype != tensor.dtype:\n      return zeros(\n          shape_internal(tensor, optimize=optimize), dtype=dtype, name=name)\n    else:\n      return gen_array_ops._zeros_like(tensor, name=name)\nWe can see that if the shape of tensor is already known, the optimize parameter is ignored, which is inconsistent with the documented behavior.", "body": "[The definition of `zeros_like`](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/array_ops.py#L1463) is:\r\n\r\n```python\r\ndef zeros_like(tensor, dtype=None, name=None, optimize=True):\r\n  with ops.name_scope(name, \"zeros_like\", [tensor]) as name:\r\n    tensor = ops.convert_to_tensor(tensor, name=\"tensor\")\r\n\r\n    if tensor.shape.is_fully_defined():\r\n      # We can produce a zeros tensor independent of the value of 'tensor',\r\n      # since the shape is known statically.\r\n      return zeros(tensor.shape, dtype=dtype or tensor.dtype, name=name)\r\n\r\n    if dtype is not None and dtype != tensor.dtype:\r\n      return zeros(\r\n          shape_internal(tensor, optimize=optimize), dtype=dtype, name=name)\r\n    else:\r\n      return gen_array_ops._zeros_like(tensor, name=name)\r\n```\r\n\r\nWe can see that if the shape of `tensor` is already known, the `optimize` parameter is ignored, which is inconsistent with the [documented behavior](https://www.tensorflow.org/api_docs/python/tf/zeros_like)."}