{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/348080616", "html_url": "https://github.com/tensorflow/tensorflow/issues/13643#issuecomment-348080616", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/13643", "id": 348080616, "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODA4MDYxNg==", "user": {"login": "hpnhxxwn", "id": 5395632, "node_id": "MDQ6VXNlcjUzOTU2MzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5395632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpnhxxwn", "html_url": "https://github.com/hpnhxxwn", "followers_url": "https://api.github.com/users/hpnhxxwn/followers", "following_url": "https://api.github.com/users/hpnhxxwn/following{/other_user}", "gists_url": "https://api.github.com/users/hpnhxxwn/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpnhxxwn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpnhxxwn/subscriptions", "organizations_url": "https://api.github.com/users/hpnhxxwn/orgs", "repos_url": "https://api.github.com/users/hpnhxxwn/repos", "events_url": "https://api.github.com/users/hpnhxxwn/events{/privacy}", "received_events_url": "https://api.github.com/users/hpnhxxwn/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-30T04:38:43Z", "updated_at": "2017-11-30T04:45:03Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6510203\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/reedwm\">@reedwm</a></p>\n<p>It is my code. It was working for CPU version, but for GPU it did not work and gives me such error. Mine is Ubuntu 16.04, Python 3.5, Cuda 8 and cuDNN 5. Actually I tried both tensorflow 1.14.0 with cuDNN 6 and local build from tenforflow latest source code with cnDNN 5, both have issue. I have also tried with the nightly build xiaoyongzhu pointed yesterday, also has the same issue with cuDNN6. The error message is really mysterious and I do not know where to look at. However, the code works on CPU tensorflow.</p>\n<p>My code is below, could you suggest workaround?</p>\n<pre><code>def resnet_model(bin_multiple):\n\n    #input and reshape\n    inputs = Input(shape=input_shape)\n    reshape = Reshape(input_shape_channels)(inputs)\n\n    #normal convnet layer (have to do one initially to get 64 channels)\n    conv = Conv2D(64,(1,bin_multiple*note_range),padding=\"same\",activation='relu')(reshape)\n    pool = MaxPooling2D(pool_size=(1,2))(conv)\n\n    for i in range(int(np.log2(bin_multiple))-1):\n        print i\n        #residual block\n        bn = BatchNormalization()(pool)\n        re = Activation('relu')(bn)\n        freq_range = (bin_multiple/(2**(i+1)))*note_range\n        print freq_range\n        conv = Conv2D(64,(1,freq_range),padding=\"same\",activation='relu')(re)\n\n        #add and downsample\n        ad = add([pool,conv])\n        pool = MaxPooling2D(pool_size=(1,2))(ad)\n\n    flattened = Flatten()(pool)\n    fc = Dense(1024, activation='relu')(flattened)\n    do = Dropout(0.5)(fc)\n    fc = Dense(512, activation='relu')(do)\n    do = Dropout(0.5)(fc)\n    outputs = Dense(note_range, activation='sigmoid')(do)\n\n    model = Model(inputs=inputs, outputs=outputs)\n\n    return model\n\n... other code\n\nmodel = resnet_model(bin_multiple)\ninit_lr = float(args['init_lr'])\n    model.compile(loss='binary_crossentropy',\n              optimizer=SGD(lr=init_lr,momentum=0.9), metrics=['accuracy', 'mae', 'categorical_accuracy'])\nmodel.summary()\n\nhistory = model.fit_generator(trainGen.next(),trainGen.steps(), epochs=epochs, verbose=1,validation_data=valGen.next(),validation_steps=valGen.steps(),callbacks=callbacks, workers=8, use_multiprocessing=True)\n</code></pre>", "body_text": "@reedwm\nIt is my code. It was working for CPU version, but for GPU it did not work and gives me such error. Mine is Ubuntu 16.04, Python 3.5, Cuda 8 and cuDNN 5. Actually I tried both tensorflow 1.14.0 with cuDNN 6 and local build from tenforflow latest source code with cnDNN 5, both have issue. I have also tried with the nightly build xiaoyongzhu pointed yesterday, also has the same issue with cuDNN6. The error message is really mysterious and I do not know where to look at. However, the code works on CPU tensorflow.\nMy code is below, could you suggest workaround?\ndef resnet_model(bin_multiple):\n\n    #input and reshape\n    inputs = Input(shape=input_shape)\n    reshape = Reshape(input_shape_channels)(inputs)\n\n    #normal convnet layer (have to do one initially to get 64 channels)\n    conv = Conv2D(64,(1,bin_multiple*note_range),padding=\"same\",activation='relu')(reshape)\n    pool = MaxPooling2D(pool_size=(1,2))(conv)\n\n    for i in range(int(np.log2(bin_multiple))-1):\n        print i\n        #residual block\n        bn = BatchNormalization()(pool)\n        re = Activation('relu')(bn)\n        freq_range = (bin_multiple/(2**(i+1)))*note_range\n        print freq_range\n        conv = Conv2D(64,(1,freq_range),padding=\"same\",activation='relu')(re)\n\n        #add and downsample\n        ad = add([pool,conv])\n        pool = MaxPooling2D(pool_size=(1,2))(ad)\n\n    flattened = Flatten()(pool)\n    fc = Dense(1024, activation='relu')(flattened)\n    do = Dropout(0.5)(fc)\n    fc = Dense(512, activation='relu')(do)\n    do = Dropout(0.5)(fc)\n    outputs = Dense(note_range, activation='sigmoid')(do)\n\n    model = Model(inputs=inputs, outputs=outputs)\n\n    return model\n\n... other code\n\nmodel = resnet_model(bin_multiple)\ninit_lr = float(args['init_lr'])\n    model.compile(loss='binary_crossentropy',\n              optimizer=SGD(lr=init_lr,momentum=0.9), metrics=['accuracy', 'mae', 'categorical_accuracy'])\nmodel.summary()\n\nhistory = model.fit_generator(trainGen.next(),trainGen.steps(), epochs=epochs, verbose=1,validation_data=valGen.next(),validation_steps=valGen.steps(),callbacks=callbacks, workers=8, use_multiprocessing=True)", "body": "@reedwm \r\n\r\nIt is my code. It was working for CPU version, but for GPU it did not work and gives me such error. Mine is Ubuntu 16.04, Python 3.5, Cuda 8 and cuDNN 5. Actually I tried both tensorflow 1.14.0 with cuDNN 6 and local build from tenforflow latest source code with cnDNN 5, both have issue. I have also tried with the nightly build xiaoyongzhu pointed yesterday, also has the same issue with cuDNN6. The error message is really mysterious and I do not know where to look at. However, the code works on CPU tensorflow.\r\n\r\nMy code is below, could you suggest workaround?\r\n```\r\ndef resnet_model(bin_multiple):\r\n\r\n    #input and reshape\r\n    inputs = Input(shape=input_shape)\r\n    reshape = Reshape(input_shape_channels)(inputs)\r\n\r\n    #normal convnet layer (have to do one initially to get 64 channels)\r\n    conv = Conv2D(64,(1,bin_multiple*note_range),padding=\"same\",activation='relu')(reshape)\r\n    pool = MaxPooling2D(pool_size=(1,2))(conv)\r\n\r\n    for i in range(int(np.log2(bin_multiple))-1):\r\n        print i\r\n        #residual block\r\n        bn = BatchNormalization()(pool)\r\n        re = Activation('relu')(bn)\r\n        freq_range = (bin_multiple/(2**(i+1)))*note_range\r\n        print freq_range\r\n        conv = Conv2D(64,(1,freq_range),padding=\"same\",activation='relu')(re)\r\n\r\n        #add and downsample\r\n        ad = add([pool,conv])\r\n        pool = MaxPooling2D(pool_size=(1,2))(ad)\r\n\r\n    flattened = Flatten()(pool)\r\n    fc = Dense(1024, activation='relu')(flattened)\r\n    do = Dropout(0.5)(fc)\r\n    fc = Dense(512, activation='relu')(do)\r\n    do = Dropout(0.5)(fc)\r\n    outputs = Dense(note_range, activation='sigmoid')(do)\r\n\r\n    model = Model(inputs=inputs, outputs=outputs)\r\n\r\n    return model\r\n\r\n... other code\r\n\r\nmodel = resnet_model(bin_multiple)\r\ninit_lr = float(args['init_lr'])\r\n    model.compile(loss='binary_crossentropy',\r\n              optimizer=SGD(lr=init_lr,momentum=0.9), metrics=['accuracy', 'mae', 'categorical_accuracy'])\r\nmodel.summary()\r\n\r\nhistory = model.fit_generator(trainGen.next(),trainGen.steps(), epochs=epochs, verbose=1,validation_data=valGen.next(),validation_steps=valGen.steps(),callbacks=callbacks, workers=8, use_multiprocessing=True)\r\n```"}