{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/306821956", "html_url": "https://github.com/tensorflow/tensorflow/issues/10437#issuecomment-306821956", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10437", "id": 306821956, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjgyMTk1Ng==", "user": {"login": "petecoup", "id": 52087, "node_id": "MDQ6VXNlcjUyMDg3", "avatar_url": "https://avatars1.githubusercontent.com/u/52087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petecoup", "html_url": "https://github.com/petecoup", "followers_url": "https://api.github.com/users/petecoup/followers", "following_url": "https://api.github.com/users/petecoup/following{/other_user}", "gists_url": "https://api.github.com/users/petecoup/gists{/gist_id}", "starred_url": "https://api.github.com/users/petecoup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petecoup/subscriptions", "organizations_url": "https://api.github.com/users/petecoup/orgs", "repos_url": "https://api.github.com/users/petecoup/repos", "events_url": "https://api.github.com/users/petecoup/events{/privacy}", "received_events_url": "https://api.github.com/users/petecoup/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-07T14:59:42Z", "updated_at": "2017-06-07T14:59:42Z", "author_association": "NONE", "body_html": "<p>Not sure what you mean \"...not concerned with code right now\".  When compiling the offline compiler, tfcompile, directly calling these LLVMInitializeAMDGPU* routines is the only way you can get the target initialized so you can generate code for it (and I don't think it will even link in the guts of your target otherwise).  I imagine it is the same for the python wrapper.  For CPU targets, this is where I mentioned earlier, compiler/xla/service/cpu/cpu_compiler.cc:CpuCompiler::InitializeLLVMTarget.</p>", "body_text": "Not sure what you mean \"...not concerned with code right now\".  When compiling the offline compiler, tfcompile, directly calling these LLVMInitializeAMDGPU* routines is the only way you can get the target initialized so you can generate code for it (and I don't think it will even link in the guts of your target otherwise).  I imagine it is the same for the python wrapper.  For CPU targets, this is where I mentioned earlier, compiler/xla/service/cpu/cpu_compiler.cc:CpuCompiler::InitializeLLVMTarget.", "body": "Not sure what you mean \"...not concerned with code right now\".  When compiling the offline compiler, tfcompile, directly calling these LLVMInitializeAMDGPU* routines is the only way you can get the target initialized so you can generate code for it (and I don't think it will even link in the guts of your target otherwise).  I imagine it is the same for the python wrapper.  For CPU targets, this is where I mentioned earlier, compiler/xla/service/cpu/cpu_compiler.cc:CpuCompiler::InitializeLLVMTarget.\r\n"}