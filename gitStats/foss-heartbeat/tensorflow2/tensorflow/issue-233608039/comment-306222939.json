{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/306222939", "html_url": "https://github.com/tensorflow/tensorflow/issues/10437#issuecomment-306222939", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10437", "id": 306222939, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjIyMjkzOQ==", "user": {"login": "petecoup", "id": 52087, "node_id": "MDQ6VXNlcjUyMDg3", "avatar_url": "https://avatars1.githubusercontent.com/u/52087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petecoup", "html_url": "https://github.com/petecoup", "followers_url": "https://api.github.com/users/petecoup/followers", "following_url": "https://api.github.com/users/petecoup/following{/other_user}", "gists_url": "https://api.github.com/users/petecoup/gists{/gist_id}", "starred_url": "https://api.github.com/users/petecoup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petecoup/subscriptions", "organizations_url": "https://api.github.com/users/petecoup/orgs", "repos_url": "https://api.github.com/users/petecoup/repos", "events_url": "https://api.github.com/users/petecoup/events{/privacy}", "received_events_url": "https://api.github.com/users/petecoup/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-05T15:44:36Z", "updated_at": "2017-06-05T15:44:36Z", "author_association": "NONE", "body_html": "<p>Not sure what will be different for a GPU target, but for a CPU target, I modified the llvm.BUILD to add the target to the llvm_targets = [] list, added the target { \"name\":, ... \"tbl_outs\": [(...)] } entries to llvm_target_list, and \"cc_library\" entries like the other CPU targets (_asm_printer, _code_gen, _desc, _disassembler, _info).  Once I had all of this, in compiler/xla/service/cpu/BUILD I added @llvm//:_code_gen and @llvm//:_disassembler to the deps list for the \"cpu_compiler\" cc_library.<br>\nFrom what I see, you'd have to do something like this to enable any new target, and there isn't a way to enable \"all\" of the targets that are available in upstream llvm...and I'm not sure what would change for the AMDGPU GPU target.</p>", "body_text": "Not sure what will be different for a GPU target, but for a CPU target, I modified the llvm.BUILD to add the target to the llvm_targets = [] list, added the target { \"name\":, ... \"tbl_outs\": [(...)] } entries to llvm_target_list, and \"cc_library\" entries like the other CPU targets (_asm_printer, _code_gen, _desc, _disassembler, _info).  Once I had all of this, in compiler/xla/service/cpu/BUILD I added @llvm//:_code_gen and @llvm//:_disassembler to the deps list for the \"cpu_compiler\" cc_library.\nFrom what I see, you'd have to do something like this to enable any new target, and there isn't a way to enable \"all\" of the targets that are available in upstream llvm...and I'm not sure what would change for the AMDGPU GPU target.", "body": "Not sure what will be different for a GPU target, but for a CPU target, I modified the llvm.BUILD to add the target to the llvm_targets = [] list, added the target { \"name\":, ... \"tbl_outs\": [(...)] } entries to llvm_target_list, and \"cc_library\" entries like the other CPU targets (<target>_asm_printer, <target>_code_gen, <target>_desc, <target>_disassembler, <target>_info).  Once I had all of this, in compiler/xla/service/cpu/BUILD I added @llvm//:<target>_code_gen and @llvm//:<target>_disassembler to the deps list for the \"cpu_compiler\" cc_library.\r\nFrom what I see, you'd have to do something like this to enable any new target, and there isn't a way to enable \"all\" of the targets that are available in upstream llvm...and I'm not sure what would change for the AMDGPU GPU target."}