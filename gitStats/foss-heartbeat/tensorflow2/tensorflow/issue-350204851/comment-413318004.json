{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/413318004", "html_url": "https://github.com/tensorflow/tensorflow/issues/21585#issuecomment-413318004", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21585", "id": 413318004, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzMxODAwNA==", "user": {"login": "NylaWorker", "id": 25090956, "node_id": "MDQ6VXNlcjI1MDkwOTU2", "avatar_url": "https://avatars2.githubusercontent.com/u/25090956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NylaWorker", "html_url": "https://github.com/NylaWorker", "followers_url": "https://api.github.com/users/NylaWorker/followers", "following_url": "https://api.github.com/users/NylaWorker/following{/other_user}", "gists_url": "https://api.github.com/users/NylaWorker/gists{/gist_id}", "starred_url": "https://api.github.com/users/NylaWorker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NylaWorker/subscriptions", "organizations_url": "https://api.github.com/users/NylaWorker/orgs", "repos_url": "https://api.github.com/users/NylaWorker/repos", "events_url": "https://api.github.com/users/NylaWorker/events{/privacy}", "received_events_url": "https://api.github.com/users/NylaWorker/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-15T20:02:52Z", "updated_at": "2018-08-15T20:17:12Z", "author_association": "NONE", "body_html": "<p>Hello!<br>\nI figured it out:</p>\n<pre><code>def frozen_graph_maker(export_dir,output_graph):\n        with tf.Session(graph=tf.Graph()) as sess:\n                tf.saved_model.loader.load(sess, [tf.saved_model.tag_constants.SERVING], export_dir)\n                output_nodes = [n.name for n in tf.get_default_graph().as_graph_def().node]\n                output_graph_def = tf.graph_util.convert_variables_to_constants(\n                        sess, # The session is used to retrieve the weights\n                        sess.graph_def,\n                        output_nodes# The output node names are used to select the usefull nodes\n               )       \n        # Finally we serialize and dump the output graph to the filesystem\n        with tf.gfile.GFile(output_graph, \"wb\") as f:\n                f.write(output_graph_def.SerializeToString())\ndef main():\n        export_dir='/dir/of/pb/and/variables'\n        output_graph = \"frozen_graph.pb\"\n        frozen_graph_maker(export_dir,output_graph)\n</code></pre>\n<p>I realized that I was just loading the meta graph. I would love if you could confirm my understanding of what was failing. With <code>compat.as_bytes</code> I was just loading it as a meta graph. Is there a way of integrating variables after doing that kind of loading or should I stick with <code>tf.saved_model.loader.load()</code> ?<br>\nMy attempt of loading was completely wrong as it wasn't even calling the folder of variables.</p>\n<p>Another question:  with <code>[n.name for n in tf.get_default_graph().as_graph_def().node]</code> I am putting all nodes into the output_nodes, should I just put the last node? It works with just the last node. What is the difference? I will close this and post this follow up questions in stackoverflow. Here:<a href=\"https://stackoverflow.com/questions/51826706/tensorflow-load-a-pb-file-and-then-save-it-as-a-frozen-graph-issues/51865645#51865645\" rel=\"nofollow\">https://stackoverflow.com/questions/51826706/tensorflow-load-a-pb-file-and-then-save-it-as-a-frozen-graph-issues/51865645#51865645</a></p>\n<p>Thank you!</p>", "body_text": "Hello!\nI figured it out:\ndef frozen_graph_maker(export_dir,output_graph):\n        with tf.Session(graph=tf.Graph()) as sess:\n                tf.saved_model.loader.load(sess, [tf.saved_model.tag_constants.SERVING], export_dir)\n                output_nodes = [n.name for n in tf.get_default_graph().as_graph_def().node]\n                output_graph_def = tf.graph_util.convert_variables_to_constants(\n                        sess, # The session is used to retrieve the weights\n                        sess.graph_def,\n                        output_nodes# The output node names are used to select the usefull nodes\n               )       \n        # Finally we serialize and dump the output graph to the filesystem\n        with tf.gfile.GFile(output_graph, \"wb\") as f:\n                f.write(output_graph_def.SerializeToString())\ndef main():\n        export_dir='/dir/of/pb/and/variables'\n        output_graph = \"frozen_graph.pb\"\n        frozen_graph_maker(export_dir,output_graph)\n\nI realized that I was just loading the meta graph. I would love if you could confirm my understanding of what was failing. With compat.as_bytes I was just loading it as a meta graph. Is there a way of integrating variables after doing that kind of loading or should I stick with tf.saved_model.loader.load() ?\nMy attempt of loading was completely wrong as it wasn't even calling the folder of variables.\nAnother question:  with [n.name for n in tf.get_default_graph().as_graph_def().node] I am putting all nodes into the output_nodes, should I just put the last node? It works with just the last node. What is the difference? I will close this and post this follow up questions in stackoverflow. Here:https://stackoverflow.com/questions/51826706/tensorflow-load-a-pb-file-and-then-save-it-as-a-frozen-graph-issues/51865645#51865645\nThank you!", "body": "Hello! \r\nI figured it out:\r\n\r\n```\r\ndef frozen_graph_maker(export_dir,output_graph):\r\n        with tf.Session(graph=tf.Graph()) as sess:\r\n                tf.saved_model.loader.load(sess, [tf.saved_model.tag_constants.SERVING], export_dir)\r\n                output_nodes = [n.name for n in tf.get_default_graph().as_graph_def().node]\r\n                output_graph_def = tf.graph_util.convert_variables_to_constants(\r\n                        sess, # The session is used to retrieve the weights\r\n                        sess.graph_def,\r\n                        output_nodes# The output node names are used to select the usefull nodes\r\n               )       \r\n        # Finally we serialize and dump the output graph to the filesystem\r\n        with tf.gfile.GFile(output_graph, \"wb\") as f:\r\n                f.write(output_graph_def.SerializeToString())\r\ndef main():\r\n        export_dir='/dir/of/pb/and/variables'\r\n        output_graph = \"frozen_graph.pb\"\r\n        frozen_graph_maker(export_dir,output_graph)\r\n```\r\nI realized that I was just loading the meta graph. I would love if you could confirm my understanding of what was failing. With `compat.as_bytes` I was just loading it as a meta graph. Is there a way of integrating variables after doing that kind of loading or should I stick with `tf.saved_model.loader.load()` ? \r\nMy attempt of loading was completely wrong as it wasn't even calling the folder of variables. \r\n\r\nAnother question:  with `[n.name for n in tf.get_default_graph().as_graph_def().node]` I am putting all nodes into the output_nodes, should I just put the last node? It works with just the last node. What is the difference? I will close this and post this follow up questions in stackoverflow. Here:https://stackoverflow.com/questions/51826706/tensorflow-load-a-pb-file-and-then-save-it-as-a-frozen-graph-issues/51865645#51865645 \r\n\r\nThank you! "}