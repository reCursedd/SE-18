{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/227459091", "html_url": "https://github.com/tensorflow/tensorflow/issues/2975#issuecomment-227459091", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2975", "id": 227459091, "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzQ1OTA5MQ==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-21T14:34:19Z", "updated_at": "2016-06-21T14:34:19Z", "author_association": "CONTRIBUTOR", "body_html": "<p>This sounds like more like a question for Stack Overflow than a bug in TensorFlow, and we'll need more details to answer definitively.</p>\n<p>However, I suspect the problem is that you're rebuilding the graph in each request, and there is some collision between the shared variables. The best approach would be to create the graph once and reuse it for all requests. A quick workaround would be to wrap your call to <code>demo1.demo(input)</code> in a <code>with tf.Graph().as_default():</code> block, to ensure that the model is recreated in an empty graph.</p>", "body_text": "This sounds like more like a question for Stack Overflow than a bug in TensorFlow, and we'll need more details to answer definitively.\nHowever, I suspect the problem is that you're rebuilding the graph in each request, and there is some collision between the shared variables. The best approach would be to create the graph once and reuse it for all requests. A quick workaround would be to wrap your call to demo1.demo(input) in a with tf.Graph().as_default(): block, to ensure that the model is recreated in an empty graph.", "body": "This sounds like more like a question for Stack Overflow than a bug in TensorFlow, and we'll need more details to answer definitively.\n\nHowever, I suspect the problem is that you're rebuilding the graph in each request, and there is some collision between the shared variables. The best approach would be to create the graph once and reuse it for all requests. A quick workaround would be to wrap your call to `demo1.demo(input)` in a `with tf.Graph().as_default():` block, to ensure that the model is recreated in an empty graph.\n"}