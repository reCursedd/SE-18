{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/319", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/319/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/319/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/319/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/319", "id": 118222702, "node_id": "MDU6SXNzdWUxMTgyMjI3MDI=", "number": 319, "title": "Argmax, fetching top 5 probabilities", "user": {"login": "RamaneekGill", "id": 6265772, "node_id": "MDQ6VXNlcjYyNjU3NzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/6265772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RamaneekGill", "html_url": "https://github.com/RamaneekGill", "followers_url": "https://api.github.com/users/RamaneekGill/followers", "following_url": "https://api.github.com/users/RamaneekGill/following{/other_user}", "gists_url": "https://api.github.com/users/RamaneekGill/gists{/gist_id}", "starred_url": "https://api.github.com/users/RamaneekGill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RamaneekGill/subscriptions", "organizations_url": "https://api.github.com/users/RamaneekGill/orgs", "repos_url": "https://api.github.com/users/RamaneekGill/repos", "events_url": "https://api.github.com/users/RamaneekGill/events{/privacy}", "received_events_url": "https://api.github.com/users/RamaneekGill/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-11-21T21:41:54Z", "updated_at": "2018-07-19T07:31:40Z", "closed_at": "2015-11-24T19:45:59Z", "author_association": "NONE", "body_html": "<p>I'm having an issue with computing the accuracy of my model. I want to see if the top 5 predictions contains the actual label when comparing against the test set.</p>\n<pre><code>correct_prediction = tf.equal(tf.argmax(activation, 1), tf.argmax(y, 1))\naccuracy = tf.reduce_mean(tf.cast(correct_prediction, \"float\"))\nprint (\"ACCURACY IS:\")\nprint sess.run(accuracy, feed_dict={x: data.test_set.inputs(), y: data.test_set.targets()})\n</code></pre>\n<p>From what I've read in the documentation TensorFlow doesn't seem to have something like fetching the top 5 from <code>activation</code> and seeing if one of the items is contained in <code>argmax(y,1)</code></p>\n<p>Something like this would be nice:</p>\n<pre><code>correct_prediction = tf.contains(tf.argmax(activation, dim, N_VALUES_TO_FETCH), tf.argmax(y, dim)\n</code></pre>\n<p>Can anyone help me with the problem I am facing? Thank you.</p>", "body_text": "I'm having an issue with computing the accuracy of my model. I want to see if the top 5 predictions contains the actual label when comparing against the test set.\ncorrect_prediction = tf.equal(tf.argmax(activation, 1), tf.argmax(y, 1))\naccuracy = tf.reduce_mean(tf.cast(correct_prediction, \"float\"))\nprint (\"ACCURACY IS:\")\nprint sess.run(accuracy, feed_dict={x: data.test_set.inputs(), y: data.test_set.targets()})\n\nFrom what I've read in the documentation TensorFlow doesn't seem to have something like fetching the top 5 from activation and seeing if one of the items is contained in argmax(y,1)\nSomething like this would be nice:\ncorrect_prediction = tf.contains(tf.argmax(activation, dim, N_VALUES_TO_FETCH), tf.argmax(y, dim)\n\nCan anyone help me with the problem I am facing? Thank you.", "body": "I'm having an issue with computing the accuracy of my model. I want to see if the top 5 predictions contains the actual label when comparing against the test set.\n\n```\ncorrect_prediction = tf.equal(tf.argmax(activation, 1), tf.argmax(y, 1))\naccuracy = tf.reduce_mean(tf.cast(correct_prediction, \"float\"))\nprint (\"ACCURACY IS:\")\nprint sess.run(accuracy, feed_dict={x: data.test_set.inputs(), y: data.test_set.targets()})\n```\n\nFrom what I've read in the documentation TensorFlow doesn't seem to have something like fetching the top 5 from `activation` and seeing if one of the items is contained in `argmax(y,1)`\n\nSomething like this would be nice:\n\n```\ncorrect_prediction = tf.contains(tf.argmax(activation, dim, N_VALUES_TO_FETCH), tf.argmax(y, dim)\n```\n\nCan anyone help me with the problem I am facing? Thank you.\n"}