{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/752", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/752/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/752/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/752/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/752", "id": 126091483, "node_id": "MDU6SXNzdWUxMjYwOTE0ODM=", "number": 752, "title": "Using a model (post training)", "user": {"login": "frankcarey", "id": 377330, "node_id": "MDQ6VXNlcjM3NzMzMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/377330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frankcarey", "html_url": "https://github.com/frankcarey", "followers_url": "https://api.github.com/users/frankcarey/followers", "following_url": "https://api.github.com/users/frankcarey/following{/other_user}", "gists_url": "https://api.github.com/users/frankcarey/gists{/gist_id}", "starred_url": "https://api.github.com/users/frankcarey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frankcarey/subscriptions", "organizations_url": "https://api.github.com/users/frankcarey/orgs", "repos_url": "https://api.github.com/users/frankcarey/repos", "events_url": "https://api.github.com/users/frankcarey/events{/privacy}", "received_events_url": "https://api.github.com/users/frankcarey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-12T03:51:29Z", "updated_at": "2016-01-12T17:51:04Z", "closed_at": "2016-01-12T05:21:06Z", "author_association": "NONE", "body_html": "<p>I've trained a simple model of my own in python, categorizing images into two categories (Imagenet apples, vs imagenet oranges). I'm looking to now evaluate arbitrary images using this model to get a prediction (apples v oranges) and I'm having trouble finding out the right way to do that for some reason.</p>\n<p>At the moment I'm just using a random training image for simplicity.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span> Use the existing graph and grab a sample image from the valid dataset.</span>\ntf_image <span class=\"pl-k\">=</span> tf_valid_dataset[<span class=\"pl-c1\">1001</span>,:,:,:] \nresult <span class=\"pl-k\">=</span> tf.Session(<span class=\"pl-v\">graph</span><span class=\"pl-k\">=</span>graph).run(tf_image)</pre></div>\n<p>I was trying to look at some of the API docs and the C++ imagenet example as inspiration, but I think I'm off track. <code>result</code> ends up being tf_image it seems.</p>\n<p>I know that I want the result of a single forward pass, but having a hard time seeing the right way to get that.</p>", "body_text": "I've trained a simple model of my own in python, categorizing images into two categories (Imagenet apples, vs imagenet oranges). I'm looking to now evaluate arbitrary images using this model to get a prediction (apples v oranges) and I'm having trouble finding out the right way to do that for some reason.\nAt the moment I'm just using a random training image for simplicity.\n# Use the existing graph and grab a sample image from the valid dataset.\ntf_image = tf_valid_dataset[1001,:,:,:] \nresult = tf.Session(graph=graph).run(tf_image)\nI was trying to look at some of the API docs and the C++ imagenet example as inspiration, but I think I'm off track. result ends up being tf_image it seems.\nI know that I want the result of a single forward pass, but having a hard time seeing the right way to get that.", "body": "I've trained a simple model of my own in python, categorizing images into two categories (Imagenet apples, vs imagenet oranges). I'm looking to now evaluate arbitrary images using this model to get a prediction (apples v oranges) and I'm having trouble finding out the right way to do that for some reason.\n\nAt the moment I'm just using a random training image for simplicity.\n\n``` Python\n# Use the existing graph and grab a sample image from the valid dataset.\ntf_image = tf_valid_dataset[1001,:,:,:] \nresult = tf.Session(graph=graph).run(tf_image)\n```\n\nI was trying to look at some of the API docs and the C++ imagenet example as inspiration, but I think I'm off track. `result` ends up being tf_image it seems.\n\nI know that I want the result of a single forward pass, but having a hard time seeing the right way to get that.\n"}