{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8759", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8759/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8759/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8759/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/8759", "id": 217367653, "node_id": "MDU6SXNzdWUyMTczNjc2NTM=", "number": 8759, "title": "Simple add tensor example fails", "user": {"login": "StefanoD", "id": 1634862, "node_id": "MDQ6VXNlcjE2MzQ4NjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1634862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/StefanoD", "html_url": "https://github.com/StefanoD", "followers_url": "https://api.github.com/users/StefanoD/followers", "following_url": "https://api.github.com/users/StefanoD/following{/other_user}", "gists_url": "https://api.github.com/users/StefanoD/gists{/gist_id}", "starred_url": "https://api.github.com/users/StefanoD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/StefanoD/subscriptions", "organizations_url": "https://api.github.com/users/StefanoD/orgs", "repos_url": "https://api.github.com/users/StefanoD/repos", "events_url": "https://api.github.com/users/StefanoD/events{/privacy}", "received_events_url": "https://api.github.com/users/StefanoD/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-27T20:36:51Z", "updated_at": "2017-03-28T18:28:43Z", "closed_at": "2017-03-28T18:28:43Z", "author_association": "NONE", "body_html": "<h3>Environment info</h3>\n<p>Operating System: Ubuntu 17.04</p>\n<p>Installed version of CUDA and cuDNN:</p>\n<div class=\"highlight highlight-source-shell\"><pre>stefano@stefano-PC:<span class=\"pl-k\">~</span>$ ls -l /usr/local/cuda-8.0/lib64/libcud<span class=\"pl-k\">*</span>\n-rw-r--r-- 1 root root   556000 Jan 27 00:48 /usr/local/cuda-8.0/lib64/libcudadevrt.a\nlrwxrwxrwx 1 root root       16 Jan 27 00:51 /usr/local/cuda-8.0/lib64/libcudart.so -<span class=\"pl-k\">&gt;</span> libcudart.so.8.0\nlrwxrwxrwx 1 root root       19 Jan 27 00:51 /usr/local/cuda-8.0/lib64/libcudart.so.8.0 -<span class=\"pl-k\">&gt;</span> libcudart.so.8.0.61\n-rw-r--r-- 1 root root   415432 Jan 27 00:48 /usr/local/cuda-8.0/lib64/libcudart.so.8.0.61\n-rw-r--r-- 1 root root   775162 Jan 27 00:48 /usr/local/cuda-8.0/lib64/libcudart_static.a\n-rwxr-xr-x 1 root root 84163560 M\u00e4r 23 18:23 /usr/local/cuda-8.0/lib64/libcudnn.so\n-rwxr-xr-x 1 root root 84163560 M\u00e4r 23 18:23 /usr/local/cuda-8.0/lib64/libcudnn.so.5\n-rwxr-xr-x 1 root root 84163560 M\u00e4r 23 18:23 /usr/local/cuda-8.0/lib64/libcudnn.so.5.1.10\n-rw-r--r-- 1 root root 70364814 M\u00e4r 23 18:23 /usr/local/cuda-8.0/lib64/libcudnn_static.a</pre></div>\n<p>If installed from binary pip package, provide:</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>import tensorflow; print(tensorflow.<strong>version</strong>)<br>\n1.0.1</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<h3>If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)</h3>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\nsess <span class=\"pl-k\">=</span> tf.Session()\n\na <span class=\"pl-k\">=</span> tf.placeholder(tf.float32)\nb <span class=\"pl-k\">=</span> tf.placeholder(tf.float32)\nadder_node <span class=\"pl-k\">=</span> a <span class=\"pl-k\">+</span> b  <span class=\"pl-c\"><span class=\"pl-c\">#</span> + provides a shortcut for tf.add(a, b)</span>\n\n<span class=\"pl-c1\">print</span>(sess.run(adder_node, {a: <span class=\"pl-c1\">3</span>, b:<span class=\"pl-c1\">4.5</span>}))\n<span class=\"pl-c1\">print</span>(sess.run(adder_node, {a: [<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">3</span>], b: [<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">4</span>]}))\n</pre></div>\n<p>Output:</p>\n<pre><code>stefano@stefano-PC:~/Dokumente/Programming/Python/TensorflowCoreTutorial$ /home/stefano/tensorflow/bin/python3 /home/stefano/Dokumente/Programming/Python/TensorflowCoreTutorial/src/main.py\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcublas.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcudnn.so.5 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcufft.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcurand.so.8.0 locally\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE3 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:910] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties:\nname: GeForce GTX 1060 6GB\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.7085\npciBusID 0000:22:00.0\nTotal memory: 5.93GiB\nFree memory: 52.19MiB\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:22:00.0)\nE tensorflow/stream_executor/cuda/cuda_driver.cc:1002] failed to allocate 52.19M (54722560 bytes) from device: CUDA_ERROR_OUT_OF_MEMORY\nE tensorflow/stream_executor/cuda/cuda_driver.cc:1002] failed to allocate 46.97M (49250304 bytes) from device: CUDA_ERROR_OUT_OF_MEMORY\n0.0\n[ 0.  0.]\n</code></pre>\n<p>Expected result should be</p>\n<pre><code>7.5\n[ 3.  7.]\n</code></pre>\n<p>It seems, tensorflow reads uninitialized memory, because sometimes it prints some random numbers.</p>", "body_text": "Environment info\nOperating System: Ubuntu 17.04\nInstalled version of CUDA and cuDNN:\nstefano@stefano-PC:~$ ls -l /usr/local/cuda-8.0/lib64/libcud*\n-rw-r--r-- 1 root root   556000 Jan 27 00:48 /usr/local/cuda-8.0/lib64/libcudadevrt.a\nlrwxrwxrwx 1 root root       16 Jan 27 00:51 /usr/local/cuda-8.0/lib64/libcudart.so -> libcudart.so.8.0\nlrwxrwxrwx 1 root root       19 Jan 27 00:51 /usr/local/cuda-8.0/lib64/libcudart.so.8.0 -> libcudart.so.8.0.61\n-rw-r--r-- 1 root root   415432 Jan 27 00:48 /usr/local/cuda-8.0/lib64/libcudart.so.8.0.61\n-rw-r--r-- 1 root root   775162 Jan 27 00:48 /usr/local/cuda-8.0/lib64/libcudart_static.a\n-rwxr-xr-x 1 root root 84163560 M\u00e4r 23 18:23 /usr/local/cuda-8.0/lib64/libcudnn.so\n-rwxr-xr-x 1 root root 84163560 M\u00e4r 23 18:23 /usr/local/cuda-8.0/lib64/libcudnn.so.5\n-rwxr-xr-x 1 root root 84163560 M\u00e4r 23 18:23 /usr/local/cuda-8.0/lib64/libcudnn.so.5.1.10\n-rw-r--r-- 1 root root 70364814 M\u00e4r 23 18:23 /usr/local/cuda-8.0/lib64/libcudnn_static.a\nIf installed from binary pip package, provide:\n\n\n\nimport tensorflow; print(tensorflow.version)\n1.0.1\n\n\n\nIf possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\nimport tensorflow as tf\n\nsess = tf.Session()\n\na = tf.placeholder(tf.float32)\nb = tf.placeholder(tf.float32)\nadder_node = a + b  # + provides a shortcut for tf.add(a, b)\n\nprint(sess.run(adder_node, {a: 3, b:4.5}))\nprint(sess.run(adder_node, {a: [1,3], b: [2, 4]}))\n\nOutput:\nstefano@stefano-PC:~/Dokumente/Programming/Python/TensorflowCoreTutorial$ /home/stefano/tensorflow/bin/python3 /home/stefano/Dokumente/Programming/Python/TensorflowCoreTutorial/src/main.py\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcublas.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcudnn.so.5 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcufft.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcurand.so.8.0 locally\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE3 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:910] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties:\nname: GeForce GTX 1060 6GB\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.7085\npciBusID 0000:22:00.0\nTotal memory: 5.93GiB\nFree memory: 52.19MiB\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:22:00.0)\nE tensorflow/stream_executor/cuda/cuda_driver.cc:1002] failed to allocate 52.19M (54722560 bytes) from device: CUDA_ERROR_OUT_OF_MEMORY\nE tensorflow/stream_executor/cuda/cuda_driver.cc:1002] failed to allocate 46.97M (49250304 bytes) from device: CUDA_ERROR_OUT_OF_MEMORY\n0.0\n[ 0.  0.]\n\nExpected result should be\n7.5\n[ 3.  7.]\n\nIt seems, tensorflow reads uninitialized memory, because sometimes it prints some random numbers.", "body": "### Environment info\r\nOperating System: Ubuntu 17.04\r\n\r\nInstalled version of CUDA and cuDNN:\r\n\r\n```bash\r\nstefano@stefano-PC:~$ ls -l /usr/local/cuda-8.0/lib64/libcud*\r\n-rw-r--r-- 1 root root   556000 Jan 27 00:48 /usr/local/cuda-8.0/lib64/libcudadevrt.a\r\nlrwxrwxrwx 1 root root       16 Jan 27 00:51 /usr/local/cuda-8.0/lib64/libcudart.so -> libcudart.so.8.0\r\nlrwxrwxrwx 1 root root       19 Jan 27 00:51 /usr/local/cuda-8.0/lib64/libcudart.so.8.0 -> libcudart.so.8.0.61\r\n-rw-r--r-- 1 root root   415432 Jan 27 00:48 /usr/local/cuda-8.0/lib64/libcudart.so.8.0.61\r\n-rw-r--r-- 1 root root   775162 Jan 27 00:48 /usr/local/cuda-8.0/lib64/libcudart_static.a\r\n-rwxr-xr-x 1 root root 84163560 M\u00e4r 23 18:23 /usr/local/cuda-8.0/lib64/libcudnn.so\r\n-rwxr-xr-x 1 root root 84163560 M\u00e4r 23 18:23 /usr/local/cuda-8.0/lib64/libcudnn.so.5\r\n-rwxr-xr-x 1 root root 84163560 M\u00e4r 23 18:23 /usr/local/cuda-8.0/lib64/libcudnn.so.5.1.10\r\n-rw-r--r-- 1 root root 70364814 M\u00e4r 23 18:23 /usr/local/cuda-8.0/lib64/libcudnn_static.a\r\n```\r\n\r\nIf installed from binary pip package, provide:\r\n\r\n>>> import tensorflow; print(tensorflow.__version__)\r\n1.0.1\r\n\r\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\r\n\r\n```python\r\nimport tensorflow as tf\r\n\r\nsess = tf.Session()\r\n\r\na = tf.placeholder(tf.float32)\r\nb = tf.placeholder(tf.float32)\r\nadder_node = a + b  # + provides a shortcut for tf.add(a, b)\r\n\r\nprint(sess.run(adder_node, {a: 3, b:4.5}))\r\nprint(sess.run(adder_node, {a: [1,3], b: [2, 4]}))\r\n\r\n```\r\n\r\nOutput:\r\n\r\n```\r\nstefano@stefano-PC:~/Dokumente/Programming/Python/TensorflowCoreTutorial$ /home/stefano/tensorflow/bin/python3 /home/stefano/Dokumente/Programming/Python/TensorflowCoreTutorial/src/main.py\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcublas.so.8.0 locally\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcudnn.so.5 locally\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcufft.so.8.0 locally\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcuda.so.1 locally\r\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcurand.so.8.0 locally\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE3 instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\r\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\r\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:910] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties:\r\nname: GeForce GTX 1060 6GB\r\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.7085\r\npciBusID 0000:22:00.0\r\nTotal memory: 5.93GiB\r\nFree memory: 52.19MiB\r\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0\r\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y\r\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:22:00.0)\r\nE tensorflow/stream_executor/cuda/cuda_driver.cc:1002] failed to allocate 52.19M (54722560 bytes) from device: CUDA_ERROR_OUT_OF_MEMORY\r\nE tensorflow/stream_executor/cuda/cuda_driver.cc:1002] failed to allocate 46.97M (49250304 bytes) from device: CUDA_ERROR_OUT_OF_MEMORY\r\n0.0\r\n[ 0.  0.]\r\n```\r\n\r\nExpected result should be\r\n\r\n```\r\n7.5\r\n[ 3.  7.]\r\n```\r\nIt seems, tensorflow reads uninitialized memory, because sometimes it prints some random numbers."}