{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12932", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12932/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12932/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12932/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12932", "id": 256420695, "node_id": "MDU6SXNzdWUyNTY0MjA2OTU=", "number": 12932, "title": "Turning on grappler makes SLIM Resnet_v1_50 slower on AWS K80", "user": {"login": "tfboyd", "id": 23486130, "node_id": "MDQ6VXNlcjIzNDg2MTMw", "avatar_url": "https://avatars1.githubusercontent.com/u/23486130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tfboyd", "html_url": "https://github.com/tfboyd", "followers_url": "https://api.github.com/users/tfboyd/followers", "following_url": "https://api.github.com/users/tfboyd/following{/other_user}", "gists_url": "https://api.github.com/users/tfboyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/tfboyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tfboyd/subscriptions", "organizations_url": "https://api.github.com/users/tfboyd/orgs", "repos_url": "https://api.github.com/users/tfboyd/repos", "events_url": "https://api.github.com/users/tfboyd/events{/privacy}", "received_events_url": "https://api.github.com/users/tfboyd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "zhangyaobit", "id": 1034716, "node_id": "MDQ6VXNlcjEwMzQ3MTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1034716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyaobit", "html_url": "https://github.com/zhangyaobit", "followers_url": "https://api.github.com/users/zhangyaobit/followers", "following_url": "https://api.github.com/users/zhangyaobit/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyaobit/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyaobit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyaobit/subscriptions", "organizations_url": "https://api.github.com/users/zhangyaobit/orgs", "repos_url": "https://api.github.com/users/zhangyaobit/repos", "events_url": "https://api.github.com/users/zhangyaobit/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyaobit/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "zhangyaobit", "id": 1034716, "node_id": "MDQ6VXNlcjEwMzQ3MTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1034716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhangyaobit", "html_url": "https://github.com/zhangyaobit", "followers_url": "https://api.github.com/users/zhangyaobit/followers", "following_url": "https://api.github.com/users/zhangyaobit/following{/other_user}", "gists_url": "https://api.github.com/users/zhangyaobit/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhangyaobit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhangyaobit/subscriptions", "organizations_url": "https://api.github.com/users/zhangyaobit/orgs", "repos_url": "https://api.github.com/users/zhangyaobit/repos", "events_url": "https://api.github.com/users/zhangyaobit/events{/privacy}", "received_events_url": "https://api.github.com/users/zhangyaobit/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2017-09-09T07:07:12Z", "updated_at": "2018-01-29T20:46:41Z", "closed_at": "2018-01-29T20:41:47Z", "author_association": "MEMBER", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:source binary link <a href=\"https://s3-us-west-2.amazonaws.com/tf-benchmark/tf_binary/tensorflow-1.4.0.32ffc5a-cp27-cp27mu-linux_x86_64.whl\" rel=\"nofollow\">here</a></li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.3+ the sha-hash is in the link to download the binary I compiled.</li>\n<li><strong>Python version</strong>: 2.7</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 4.5</li>\n<li><strong>CUDA/cuDNN version</strong>: cuDNN 6 / CUDA 8</li>\n<li><strong>GPU model and memory</strong>: K80 on AWS p2.8xlarge</li>\n<li><strong>Exact command to reproduce</strong>: Running SLIM from tensorflow/models/slim I used the following command: <code>CUDA_VISIBLE_DEVICES=1 python train_image_classifier.py     --train_dir=${TRAIN_DIR}     --dataset_name=imagenet     --dataset_split_name=train     --dataset_dir=${DATASET_DIR}     --model_name=resnet_v1_50    --num_clones=1    --optimizer=sgd    --batch_size=64    --max_number_of_steps=110</code></li>\n</ul>\n<p>I added the following code to train_image_classifier.py:</p>\n<div class=\"highlight highlight-source-python\"><pre>    rewrite_options <span class=\"pl-k\">=</span> rewriter_config_pb2.RewriterConfig()\n    rewrite_options.optimizers.append(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>constfold<span class=\"pl-pds\">'</span></span>)\n    rewrite_options.optimizers.append(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>layout<span class=\"pl-pds\">'</span></span>)\n    graph_options <span class=\"pl-k\">=</span> tf.GraphOptions(<span class=\"pl-v\">rewrite_options</span><span class=\"pl-k\">=</span>rewrite_options, <span class=\"pl-v\">infer_shapes</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\n    config <span class=\"pl-k\">=</span> tf.ConfigProto(<span class=\"pl-v\">graph_options</span><span class=\"pl-k\">=</span>graph_options)\n\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span>##########################</span>\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> Kicks off the training. #</span>\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span>##########################</span>\n    slim.learning.train(\n        train_tensor,\n        <span class=\"pl-v\">session_config</span><span class=\"pl-k\">=</span>config,\n\n</pre></div>\n<p>I used this binary to test and it includes the sha-hash.  The build was done from head on 09-SEP-2017 using this command <code>bazel build -c opt --copt=-march=\"haswell\" --config=cuda //tensorflow/tools/pip_package:build_pip_package</code></p>\n<p>For /configure.  I did not include XLA I did all of the defaults with the exception of adding CUDA and cuDNN.  Nothing additional was included.</p>\n<p>With out grappler I get <strong>1.5 seconds per step and with grappler 2.0 seconds per step</strong>.  There is some variance of plus or minus .1 but it is definitely slower in my testing which was not expected.</p>\n<p><strong>Edited:</strong> I was running v1 but I think v2 gave a very similar result.</p>", "body_text": "System information\n\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):Linux Ubuntu 16.04\nTensorFlow installed from (source or binary):source binary link here\nTensorFlow version (use command below): 1.3+ the sha-hash is in the link to download the binary I compiled.\nPython version: 2.7\nBazel version (if compiling from source): 4.5\nCUDA/cuDNN version: cuDNN 6 / CUDA 8\nGPU model and memory: K80 on AWS p2.8xlarge\nExact command to reproduce: Running SLIM from tensorflow/models/slim I used the following command: CUDA_VISIBLE_DEVICES=1 python train_image_classifier.py     --train_dir=${TRAIN_DIR}     --dataset_name=imagenet     --dataset_split_name=train     --dataset_dir=${DATASET_DIR}     --model_name=resnet_v1_50    --num_clones=1    --optimizer=sgd    --batch_size=64    --max_number_of_steps=110\n\nI added the following code to train_image_classifier.py:\n    rewrite_options = rewriter_config_pb2.RewriterConfig()\n    rewrite_options.optimizers.append('constfold')\n    rewrite_options.optimizers.append('layout')\n    graph_options = tf.GraphOptions(rewrite_options=rewrite_options, infer_shapes=True)\n    config = tf.ConfigProto(graph_options=graph_options)\n\n    ###########################\n    # Kicks off the training. #\n    ###########################\n    slim.learning.train(\n        train_tensor,\n        session_config=config,\n\n\nI used this binary to test and it includes the sha-hash.  The build was done from head on 09-SEP-2017 using this command bazel build -c opt --copt=-march=\"haswell\" --config=cuda //tensorflow/tools/pip_package:build_pip_package\nFor /configure.  I did not include XLA I did all of the defaults with the exception of adding CUDA and cuDNN.  Nothing additional was included.\nWith out grappler I get 1.5 seconds per step and with grappler 2.0 seconds per step.  There is some variance of plus or minus .1 but it is definitely slower in my testing which was not expected.\nEdited: I was running v1 but I think v2 gave a very similar result.", "body": "### System information\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**:source binary link [here](https://s3-us-west-2.amazonaws.com/tf-benchmark/tf_binary/tensorflow-1.4.0.32ffc5a-cp27-cp27mu-linux_x86_64.whl)\r\n- **TensorFlow version (use command below)**: 1.3+ the sha-hash is in the link to download the binary I compiled.  \r\n- **Python version**: 2.7\r\n- **Bazel version (if compiling from source)**: 4.5\r\n- **CUDA/cuDNN version**: cuDNN 6 / CUDA 8\r\n- **GPU model and memory**: K80 on AWS p2.8xlarge\r\n- **Exact command to reproduce**: Running SLIM from tensorflow/models/slim I used the following command: `CUDA_VISIBLE_DEVICES=1 python train_image_classifier.py     --train_dir=${TRAIN_DIR}     --dataset_name=imagenet     --dataset_split_name=train     --dataset_dir=${DATASET_DIR}     --model_name=resnet_v1_50    --num_clones=1    --optimizer=sgd    --batch_size=64    --max_number_of_steps=110`\r\n\r\n\r\nI added the following code to train_image_classifier.py:  \r\n\r\n```python\r\n\r\n    rewrite_options = rewriter_config_pb2.RewriterConfig()\r\n    rewrite_options.optimizers.append('constfold')\r\n    rewrite_options.optimizers.append('layout')\r\n    graph_options = tf.GraphOptions(rewrite_options=rewrite_options, infer_shapes=True)\r\n    config = tf.ConfigProto(graph_options=graph_options)\r\n\r\n    ###########################\r\n    # Kicks off the training. #\r\n    ###########################\r\n    slim.learning.train(\r\n        train_tensor,\r\n        session_config=config,\r\n\r\n\r\n```\r\n\r\nI used this binary to test and it includes the sha-hash.  The build was done from head on 09-SEP-2017 using this command `bazel build -c opt --copt=-march=\"haswell\" --config=cuda //tensorflow/tools/pip_package:build_pip_package`\r\n\r\nFor /configure.  I did not include XLA I did all of the defaults with the exception of adding CUDA and cuDNN.  Nothing additional was included.  \r\n\r\nWith out grappler I get **1.5 seconds per step and with grappler 2.0 seconds per step**.  There is some variance of plus or minus .1 but it is definitely slower in my testing which was not expected.  \r\n\r\n**Edited:** I was running v1 but I think v2 gave a very similar result.  "}