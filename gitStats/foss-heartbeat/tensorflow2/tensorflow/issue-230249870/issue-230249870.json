{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10086", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10086/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10086/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10086/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10086", "id": 230249870, "node_id": "MDU6SXNzdWUyMzAyNDk4NzA=", "number": 10086, "title": "Type check failed in piecewise_constant.", "user": {"login": "ppwwyyxx", "id": 1381301, "node_id": "MDQ6VXNlcjEzODEzMDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1381301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ppwwyyxx", "html_url": "https://github.com/ppwwyyxx", "followers_url": "https://api.github.com/users/ppwwyyxx/followers", "following_url": "https://api.github.com/users/ppwwyyxx/following{/other_user}", "gists_url": "https://api.github.com/users/ppwwyyxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/ppwwyyxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ppwwyyxx/subscriptions", "organizations_url": "https://api.github.com/users/ppwwyyxx/orgs", "repos_url": "https://api.github.com/users/ppwwyyxx/repos", "events_url": "https://api.github.com/users/ppwwyyxx/events{/privacy}", "received_events_url": "https://api.github.com/users/ppwwyyxx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "vrv", "id": 463737, "node_id": "MDQ6VXNlcjQ2MzczNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/463737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrv", "html_url": "https://github.com/vrv", "followers_url": "https://api.github.com/users/vrv/followers", "following_url": "https://api.github.com/users/vrv/following{/other_user}", "gists_url": "https://api.github.com/users/vrv/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrv/subscriptions", "organizations_url": "https://api.github.com/users/vrv/orgs", "repos_url": "https://api.github.com/users/vrv/repos", "events_url": "https://api.github.com/users/vrv/events{/privacy}", "received_events_url": "https://api.github.com/users/vrv/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "vrv", "id": 463737, "node_id": "MDQ6VXNlcjQ2MzczNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/463737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrv", "html_url": "https://github.com/vrv", "followers_url": "https://api.github.com/users/vrv/followers", "following_url": "https://api.github.com/users/vrv/following{/other_user}", "gists_url": "https://api.github.com/users/vrv/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrv/subscriptions", "organizations_url": "https://api.github.com/users/vrv/orgs", "repos_url": "https://api.github.com/users/vrv/repos", "events_url": "https://api.github.com/users/vrv/events{/privacy}", "received_events_url": "https://api.github.com/users/vrv/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-05-21T21:23:05Z", "updated_at": "2017-06-08T02:07:45Z", "closed_at": "2017-06-08T02:07:45Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:archlinux</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>:binary</li>\n<li><strong>TensorFlow version (use command below)</strong>:v1.1.0-rc2-1140-g513b1e4 1.1.0-rc2</li>\n</ul>\n<div class=\"highlight highlight-source-python\"><pre>global_step <span class=\"pl-k\">=</span> tf.get_variable(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>gs<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">trainable</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.int32, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>[])\nglobal_step <span class=\"pl-k\">=</span> tf.get_default_graph().get_tensor_by_name(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>gs:0<span class=\"pl-pds\">'</span></span>)\nboundaries <span class=\"pl-k\">=</span> [<span class=\"pl-c1\">100000</span>, <span class=\"pl-c1\">110000</span>]\nvalues <span class=\"pl-k\">=</span> [<span class=\"pl-c1\">1.0</span>, <span class=\"pl-c1\">0.5</span>, <span class=\"pl-c1\">0.1</span>]\nlearning_rate <span class=\"pl-k\">=</span> tf.train.piecewise_constant(global_step, boundaries, values)</pre></div>\n<pre><code>    learning_rate = tf.train.piecewise_constant(global_step, boundaries, values)\n  File \"/xxx/.local/lib/python3.6/site-packages/tensorflow/python/training/learning_rate_decay.py\", line 144, in piecewise_constant\n    b.dtype, x.dtype))\nValueError: Boundaries (&lt;dtype: 'int32'&gt;) must have the same dtype as x (&lt;dtype: 'int32_ref'&gt;).\n</code></pre>\n<p>I wonder if the check is over strict? Is there a reason to distinguish <code>int32</code> and <code>int32_ref</code> here?</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):archlinux\nTensorFlow installed from (source or binary):binary\nTensorFlow version (use command below):v1.1.0-rc2-1140-g513b1e4 1.1.0-rc2\n\nglobal_step = tf.get_variable('gs', trainable=False, dtype=tf.int32, shape=[])\nglobal_step = tf.get_default_graph().get_tensor_by_name('gs:0')\nboundaries = [100000, 110000]\nvalues = [1.0, 0.5, 0.1]\nlearning_rate = tf.train.piecewise_constant(global_step, boundaries, values)\n    learning_rate = tf.train.piecewise_constant(global_step, boundaries, values)\n  File \"/xxx/.local/lib/python3.6/site-packages/tensorflow/python/training/learning_rate_decay.py\", line 144, in piecewise_constant\n    b.dtype, x.dtype))\nValueError: Boundaries (<dtype: 'int32'>) must have the same dtype as x (<dtype: 'int32_ref'>).\n\nI wonder if the check is over strict? Is there a reason to distinguish int32 and int32_ref here?", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**:\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:archlinux\r\n- **TensorFlow installed from (source or binary)**:binary\r\n- **TensorFlow version (use command below)**:v1.1.0-rc2-1140-g513b1e4 1.1.0-rc2 \r\n\r\n```python\r\nglobal_step = tf.get_variable('gs', trainable=False, dtype=tf.int32, shape=[])\r\nglobal_step = tf.get_default_graph().get_tensor_by_name('gs:0')\r\nboundaries = [100000, 110000]\r\nvalues = [1.0, 0.5, 0.1]\r\nlearning_rate = tf.train.piecewise_constant(global_step, boundaries, values)\r\n```\r\n```\r\n    learning_rate = tf.train.piecewise_constant(global_step, boundaries, values)\r\n  File \"/xxx/.local/lib/python3.6/site-packages/tensorflow/python/training/learning_rate_decay.py\", line 144, in piecewise_constant\r\n    b.dtype, x.dtype))\r\nValueError: Boundaries (<dtype: 'int32'>) must have the same dtype as x (<dtype: 'int32_ref'>).\r\n```\r\nI wonder if the check is over strict? Is there a reason to distinguish `int32` and `int32_ref` here?"}