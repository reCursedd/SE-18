{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9462", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9462/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9462/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9462/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9462", "id": 224500749, "node_id": "MDU6SXNzdWUyMjQ1MDA3NDk=", "number": 9462, "title": "numpy prod overflow during creating tensor", "user": {"login": "fesun", "id": 23738439, "node_id": "MDQ6VXNlcjIzNzM4NDM5", "avatar_url": "https://avatars3.githubusercontent.com/u/23738439?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fesun", "html_url": "https://github.com/fesun", "followers_url": "https://api.github.com/users/fesun/followers", "following_url": "https://api.github.com/users/fesun/following{/other_user}", "gists_url": "https://api.github.com/users/fesun/gists{/gist_id}", "starred_url": "https://api.github.com/users/fesun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fesun/subscriptions", "organizations_url": "https://api.github.com/users/fesun/orgs", "repos_url": "https://api.github.com/users/fesun/repos", "events_url": "https://api.github.com/users/fesun/events{/privacy}", "received_events_url": "https://api.github.com/users/fesun/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473172988, "node_id": "MDU6TGFiZWw0NzMxNzI5ODg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:bug/performance", "name": "type:bug/performance", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-04-26T15:05:00Z", "updated_at": "2017-05-17T23:12:14Z", "closed_at": "2017-05-17T23:12:14Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I am trying to allocate super large tensor using tensorflow, but failed.<br>\n<a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/framework/tensor_util.py#L417\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/framework/tensor_util.py#L417</a><br>\nAbove code uses numpy.prod to calculate shape size, and for numpy everything is typed, say if the shape is [500000000, 5], then numpy.prod returns -1794967296, it's very easy to reproduce it.<br>\nSo how about use int64 instead? int64 should be large enough for any tensor.<br>\nChanging shape_size = np.prod(shape) to shape_size = np.prod(shape, dtype=np.int64) should fix it. Also about 100 lines of code using np.prod, could we change them all to int64?</p>", "body_text": "I am trying to allocate super large tensor using tensorflow, but failed.\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/framework/tensor_util.py#L417\nAbove code uses numpy.prod to calculate shape size, and for numpy everything is typed, say if the shape is [500000000, 5], then numpy.prod returns -1794967296, it's very easy to reproduce it.\nSo how about use int64 instead? int64 should be large enough for any tensor.\nChanging shape_size = np.prod(shape) to shape_size = np.prod(shape, dtype=np.int64) should fix it. Also about 100 lines of code using np.prod, could we change them all to int64?", "body": "I am trying to allocate super large tensor using tensorflow, but failed.\r\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/framework/tensor_util.py#L417\r\nAbove code uses numpy.prod to calculate shape size, and for numpy everything is typed, say if the shape is [500000000, 5], then numpy.prod returns -1794967296, it's very easy to reproduce it.\r\nSo how about use int64 instead? int64 should be large enough for any tensor.\r\nChanging shape_size = np.prod(shape) to shape_size = np.prod(shape, dtype=np.int64) should fix it. Also about 100 lines of code using np.prod, could we change them all to int64?"}