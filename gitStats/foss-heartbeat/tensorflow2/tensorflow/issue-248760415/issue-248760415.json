{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12113", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12113/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12113/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/12113/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/12113", "id": 248760415, "node_id": "MDU6SXNzdWUyNDg3NjA0MTU=", "number": 12113, "title": "bug with tf.unique where index output is int64", "user": {"login": "dantkz", "id": 5220571, "node_id": "MDQ6VXNlcjUyMjA1NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5220571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dantkz", "html_url": "https://github.com/dantkz", "followers_url": "https://api.github.com/users/dantkz/followers", "following_url": "https://api.github.com/users/dantkz/following{/other_user}", "gists_url": "https://api.github.com/users/dantkz/gists{/gist_id}", "starred_url": "https://api.github.com/users/dantkz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dantkz/subscriptions", "organizations_url": "https://api.github.com/users/dantkz/orgs", "repos_url": "https://api.github.com/users/dantkz/repos", "events_url": "https://api.github.com/users/dantkz/events{/privacy}", "received_events_url": "https://api.github.com/users/dantkz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-08T15:45:54Z", "updated_at": "2017-08-09T23:14:25Z", "closed_at": "2017-08-09T23:14:25Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: OSX El Capitan 10.11.6</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.3.0-rc1-27-g2784b1c 1.3.0-rc2</li>\n<li><strong>Python version</strong>: 3.5.2</li>\n<li><strong>Bazel version (if compiling from source)</strong>: n/a</li>\n<li><strong>CUDA/cuDNN version</strong>: n/a</li>\n<li><strong>GPU model and memory</strong>: n/a</li>\n<li><strong>Exact command to reproduce</strong>: y, idx = tf.unique(x, out_idx=tf.int64)</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>The API says <code>tf.unique</code> supports <code>tf.int64</code> index output. However, no OpKernel supports such attributes.</p>\n<h3>Source code / logs</h3>\n<p>To reproduce:</p>\n<pre><code>import tensorflow as tf\nimport numpy as np\n\nx = tf.convert_to_tensor(np.array([0,1,2,0,1,2], dtype=np.int64))\ny, idx = tf.unique(x, out_idx=tf.int64)\nsess = tf.Session()\nprint(sess.run(idx))\n</code></pre>\n<p>Output on Macbook Air:</p>\n<pre><code>2017-08-08 16:43:20.546840: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\n2017-08-08 16:43:20.546883: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\n2017-08-08 16:43:20.546895: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\n2017-08-08 16:43:20.546905: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\nTraceback (most recent call last):\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1327, in _do_call\n    return fn(*args)\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1297, in _run_fn\n    self._extend_graph()\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1358, in _extend_graph\n    self._session, graph_def.SerializeToString(), status)\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/contextlib.py\", line 66, in __exit__\n    next(self.gen)\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py\", line 466, in raise_exception_on_not_ok_status\n    pywrap_tensorflow.TF_GetCode(status))\ntensorflow.python.framework.errors_impl.InvalidArgumentError: No OpKernel was registered to support Op 'Unique' with these attrs.  Registered devices: [CPU], Registered kernels:\n  device='CPU'; T in [DT_INT64]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_INT32]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_UINT16]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_INT16]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_UINT8]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_INT8]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_HALF]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_FLOAT]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_DOUBLE]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_STRING]; out_idx in [DT_INT32]\n  device='GPU'; T in [DT_INT32]; out_idx in [DT_INT32]\n  device='GPU'; T in [DT_INT64]; out_idx in [DT_INT32]\n\n\t [[Node: Unique = Unique[T=DT_INT64, out_idx=DT_INT64](Const)]]\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"unique.py\", line 7, in &lt;module&gt;\n    print(sess.run(idx))\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 895, in run\n    run_metadata_ptr)\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1124, in _run\n    feed_dict_tensor, options, run_metadata)\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1321, in _do_run\n    options, run_metadata)\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1340, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors_impl.InvalidArgumentError: No OpKernel was registered to support Op 'Unique' with these attrs.  Registered devices: [CPU], Registered kernels:\n  device='CPU'; T in [DT_INT64]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_INT32]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_UINT16]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_INT16]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_UINT8]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_INT8]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_HALF]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_FLOAT]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_DOUBLE]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_STRING]; out_idx in [DT_INT32]\n  device='GPU'; T in [DT_INT32]; out_idx in [DT_INT32]\n  device='GPU'; T in [DT_INT64]; out_idx in [DT_INT32]\n\n\t [[Node: Unique = Unique[T=DT_INT64, out_idx=DT_INT64](Const)]]\n\nCaused by op 'Unique', defined at:\n  File \"unique.py\", line 5, in &lt;module&gt;\n    y, idx = tf.unique(x, out_idx=tf.int64)\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 3927, in unique\n    result = _op_def_lib.apply_op(\"Unique\", x=x, out_idx=out_idx, name=name)\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/framework/op_def_library.py\", line 767, in apply_op\n    op_def=op_def)\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 2630, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 1204, in __init__\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\n\nInvalidArgumentError (see above for traceback): No OpKernel was registered to support Op 'Unique' with these attrs.  Registered devices: [CPU], Registered kernels:\n  device='CPU'; T in [DT_INT64]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_INT32]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_UINT16]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_INT16]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_UINT8]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_INT8]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_HALF]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_FLOAT]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_DOUBLE]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_STRING]; out_idx in [DT_INT32]\n  device='GPU'; T in [DT_INT32]; out_idx in [DT_INT32]\n  device='GPU'; T in [DT_INT64]; out_idx in [DT_INT32]\n\n\t [[Node: Unique = Unique[T=DT_INT64, out_idx=DT_INT64](Const)]]\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): OSX El Capitan 10.11.6\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): v1.3.0-rc1-27-g2784b1c 1.3.0-rc2\nPython version: 3.5.2\nBazel version (if compiling from source): n/a\nCUDA/cuDNN version: n/a\nGPU model and memory: n/a\nExact command to reproduce: y, idx = tf.unique(x, out_idx=tf.int64)\n\nDescribe the problem\nThe API says tf.unique supports tf.int64 index output. However, no OpKernel supports such attributes.\nSource code / logs\nTo reproduce:\nimport tensorflow as tf\nimport numpy as np\n\nx = tf.convert_to_tensor(np.array([0,1,2,0,1,2], dtype=np.int64))\ny, idx = tf.unique(x, out_idx=tf.int64)\nsess = tf.Session()\nprint(sess.run(idx))\n\nOutput on Macbook Air:\n2017-08-08 16:43:20.546840: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\n2017-08-08 16:43:20.546883: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\n2017-08-08 16:43:20.546895: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\n2017-08-08 16:43:20.546905: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\nTraceback (most recent call last):\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1327, in _do_call\n    return fn(*args)\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1297, in _run_fn\n    self._extend_graph()\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1358, in _extend_graph\n    self._session, graph_def.SerializeToString(), status)\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/contextlib.py\", line 66, in __exit__\n    next(self.gen)\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py\", line 466, in raise_exception_on_not_ok_status\n    pywrap_tensorflow.TF_GetCode(status))\ntensorflow.python.framework.errors_impl.InvalidArgumentError: No OpKernel was registered to support Op 'Unique' with these attrs.  Registered devices: [CPU], Registered kernels:\n  device='CPU'; T in [DT_INT64]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_INT32]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_UINT16]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_INT16]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_UINT8]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_INT8]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_HALF]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_FLOAT]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_DOUBLE]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_STRING]; out_idx in [DT_INT32]\n  device='GPU'; T in [DT_INT32]; out_idx in [DT_INT32]\n  device='GPU'; T in [DT_INT64]; out_idx in [DT_INT32]\n\n\t [[Node: Unique = Unique[T=DT_INT64, out_idx=DT_INT64](Const)]]\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"unique.py\", line 7, in <module>\n    print(sess.run(idx))\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 895, in run\n    run_metadata_ptr)\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1124, in _run\n    feed_dict_tensor, options, run_metadata)\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1321, in _do_run\n    options, run_metadata)\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1340, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors_impl.InvalidArgumentError: No OpKernel was registered to support Op 'Unique' with these attrs.  Registered devices: [CPU], Registered kernels:\n  device='CPU'; T in [DT_INT64]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_INT32]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_UINT16]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_INT16]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_UINT8]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_INT8]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_HALF]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_FLOAT]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_DOUBLE]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_STRING]; out_idx in [DT_INT32]\n  device='GPU'; T in [DT_INT32]; out_idx in [DT_INT32]\n  device='GPU'; T in [DT_INT64]; out_idx in [DT_INT32]\n\n\t [[Node: Unique = Unique[T=DT_INT64, out_idx=DT_INT64](Const)]]\n\nCaused by op 'Unique', defined at:\n  File \"unique.py\", line 5, in <module>\n    y, idx = tf.unique(x, out_idx=tf.int64)\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 3927, in unique\n    result = _op_def_lib.apply_op(\"Unique\", x=x, out_idx=out_idx, name=name)\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/framework/op_def_library.py\", line 767, in apply_op\n    op_def=op_def)\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 2630, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 1204, in __init__\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\n\nInvalidArgumentError (see above for traceback): No OpKernel was registered to support Op 'Unique' with these attrs.  Registered devices: [CPU], Registered kernels:\n  device='CPU'; T in [DT_INT64]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_INT32]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_UINT16]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_INT16]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_UINT8]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_INT8]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_HALF]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_FLOAT]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_DOUBLE]; out_idx in [DT_INT32]\n  device='CPU'; T in [DT_STRING]; out_idx in [DT_INT32]\n  device='GPU'; T in [DT_INT32]; out_idx in [DT_INT32]\n  device='GPU'; T in [DT_INT64]; out_idx in [DT_INT32]\n\n\t [[Node: Unique = Unique[T=DT_INT64, out_idx=DT_INT64](Const)]]", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: OSX El Capitan 10.11.6 \r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: v1.3.0-rc1-27-g2784b1c 1.3.0-rc2\r\n- **Python version**: 3.5.2\r\n- **Bazel version (if compiling from source)**: n/a\r\n- **CUDA/cuDNN version**: n/a\r\n- **GPU model and memory**: n/a\r\n- **Exact command to reproduce**: y, idx = tf.unique(x, out_idx=tf.int64)\r\n\r\n### Describe the problem\r\nThe API says `tf.unique` supports `tf.int64` index output. However, no OpKernel supports such attributes.\r\n\r\n### Source code / logs\r\nTo reproduce:\r\n\r\n```\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\nx = tf.convert_to_tensor(np.array([0,1,2,0,1,2], dtype=np.int64))\r\ny, idx = tf.unique(x, out_idx=tf.int64)\r\nsess = tf.Session()\r\nprint(sess.run(idx))\r\n```\r\n\r\nOutput on Macbook Air:\r\n```\r\n2017-08-08 16:43:20.546840: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-08-08 16:43:20.546883: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-08-08 16:43:20.546895: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\r\n2017-08-08 16:43:20.546905: W tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\r\nTraceback (most recent call last):\r\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1327, in _do_call\r\n    return fn(*args)\r\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1297, in _run_fn\r\n    self._extend_graph()\r\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1358, in _extend_graph\r\n    self._session, graph_def.SerializeToString(), status)\r\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/contextlib.py\", line 66, in __exit__\r\n    next(self.gen)\r\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py\", line 466, in raise_exception_on_not_ok_status\r\n    pywrap_tensorflow.TF_GetCode(status))\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: No OpKernel was registered to support Op 'Unique' with these attrs.  Registered devices: [CPU], Registered kernels:\r\n  device='CPU'; T in [DT_INT64]; out_idx in [DT_INT32]\r\n  device='CPU'; T in [DT_INT32]; out_idx in [DT_INT32]\r\n  device='CPU'; T in [DT_UINT16]; out_idx in [DT_INT32]\r\n  device='CPU'; T in [DT_INT16]; out_idx in [DT_INT32]\r\n  device='CPU'; T in [DT_UINT8]; out_idx in [DT_INT32]\r\n  device='CPU'; T in [DT_INT8]; out_idx in [DT_INT32]\r\n  device='CPU'; T in [DT_HALF]; out_idx in [DT_INT32]\r\n  device='CPU'; T in [DT_FLOAT]; out_idx in [DT_INT32]\r\n  device='CPU'; T in [DT_DOUBLE]; out_idx in [DT_INT32]\r\n  device='CPU'; T in [DT_STRING]; out_idx in [DT_INT32]\r\n  device='GPU'; T in [DT_INT32]; out_idx in [DT_INT32]\r\n  device='GPU'; T in [DT_INT64]; out_idx in [DT_INT32]\r\n\r\n\t [[Node: Unique = Unique[T=DT_INT64, out_idx=DT_INT64](Const)]]\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"unique.py\", line 7, in <module>\r\n    print(sess.run(idx))\r\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 895, in run\r\n    run_metadata_ptr)\r\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1124, in _run\r\n    feed_dict_tensor, options, run_metadata)\r\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1321, in _do_run\r\n    options, run_metadata)\r\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/client/session.py\", line 1340, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: No OpKernel was registered to support Op 'Unique' with these attrs.  Registered devices: [CPU], Registered kernels:\r\n  device='CPU'; T in [DT_INT64]; out_idx in [DT_INT32]\r\n  device='CPU'; T in [DT_INT32]; out_idx in [DT_INT32]\r\n  device='CPU'; T in [DT_UINT16]; out_idx in [DT_INT32]\r\n  device='CPU'; T in [DT_INT16]; out_idx in [DT_INT32]\r\n  device='CPU'; T in [DT_UINT8]; out_idx in [DT_INT32]\r\n  device='CPU'; T in [DT_INT8]; out_idx in [DT_INT32]\r\n  device='CPU'; T in [DT_HALF]; out_idx in [DT_INT32]\r\n  device='CPU'; T in [DT_FLOAT]; out_idx in [DT_INT32]\r\n  device='CPU'; T in [DT_DOUBLE]; out_idx in [DT_INT32]\r\n  device='CPU'; T in [DT_STRING]; out_idx in [DT_INT32]\r\n  device='GPU'; T in [DT_INT32]; out_idx in [DT_INT32]\r\n  device='GPU'; T in [DT_INT64]; out_idx in [DT_INT32]\r\n\r\n\t [[Node: Unique = Unique[T=DT_INT64, out_idx=DT_INT64](Const)]]\r\n\r\nCaused by op 'Unique', defined at:\r\n  File \"unique.py\", line 5, in <module>\r\n    y, idx = tf.unique(x, out_idx=tf.int64)\r\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 3927, in unique\r\n    result = _op_def_lib.apply_op(\"Unique\", x=x, out_idx=out_idx, name=name)\r\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/framework/op_def_library.py\", line 767, in apply_op\r\n    op_def=op_def)\r\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 2630, in create_op\r\n    original_op=self._default_original_op, op_def=op_def)\r\n  File \"/Users/dturmukh/anaconda/envs/python3/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 1204, in __init__\r\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\r\n\r\nInvalidArgumentError (see above for traceback): No OpKernel was registered to support Op 'Unique' with these attrs.  Registered devices: [CPU], Registered kernels:\r\n  device='CPU'; T in [DT_INT64]; out_idx in [DT_INT32]\r\n  device='CPU'; T in [DT_INT32]; out_idx in [DT_INT32]\r\n  device='CPU'; T in [DT_UINT16]; out_idx in [DT_INT32]\r\n  device='CPU'; T in [DT_INT16]; out_idx in [DT_INT32]\r\n  device='CPU'; T in [DT_UINT8]; out_idx in [DT_INT32]\r\n  device='CPU'; T in [DT_INT8]; out_idx in [DT_INT32]\r\n  device='CPU'; T in [DT_HALF]; out_idx in [DT_INT32]\r\n  device='CPU'; T in [DT_FLOAT]; out_idx in [DT_INT32]\r\n  device='CPU'; T in [DT_DOUBLE]; out_idx in [DT_INT32]\r\n  device='CPU'; T in [DT_STRING]; out_idx in [DT_INT32]\r\n  device='GPU'; T in [DT_INT32]; out_idx in [DT_INT32]\r\n  device='GPU'; T in [DT_INT64]; out_idx in [DT_INT32]\r\n\r\n\t [[Node: Unique = Unique[T=DT_INT64, out_idx=DT_INT64](Const)]]\r\n```"}