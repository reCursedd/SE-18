{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4856", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4856/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4856/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4856/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4856", "id": 181887434, "node_id": "MDU6SXNzdWUxODE4ODc0MzQ=", "number": 4856, "title": "TensorBoard charts blank on Firefox", "user": {"login": "stepseazy", "id": 16912092, "node_id": "MDQ6VXNlcjE2OTEyMDky", "avatar_url": "https://avatars0.githubusercontent.com/u/16912092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stepseazy", "html_url": "https://github.com/stepseazy", "followers_url": "https://api.github.com/users/stepseazy/followers", "following_url": "https://api.github.com/users/stepseazy/following{/other_user}", "gists_url": "https://api.github.com/users/stepseazy/gists{/gist_id}", "starred_url": "https://api.github.com/users/stepseazy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stepseazy/subscriptions", "organizations_url": "https://api.github.com/users/stepseazy/orgs", "repos_url": "https://api.github.com/users/stepseazy/repos", "events_url": "https://api.github.com/users/stepseazy/events{/privacy}", "received_events_url": "https://api.github.com/users/stepseazy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 284285184, "node_id": "MDU6TGFiZWwyODQyODUxODQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/comp:tensorboard", "name": "comp:tensorboard", "color": "0052cc", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "jart", "id": 49262, "node_id": "MDQ6VXNlcjQ5MjYy", "avatar_url": "https://avatars1.githubusercontent.com/u/49262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jart", "html_url": "https://github.com/jart", "followers_url": "https://api.github.com/users/jart/followers", "following_url": "https://api.github.com/users/jart/following{/other_user}", "gists_url": "https://api.github.com/users/jart/gists{/gist_id}", "starred_url": "https://api.github.com/users/jart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jart/subscriptions", "organizations_url": "https://api.github.com/users/jart/orgs", "repos_url": "https://api.github.com/users/jart/repos", "events_url": "https://api.github.com/users/jart/events{/privacy}", "received_events_url": "https://api.github.com/users/jart/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jart", "id": 49262, "node_id": "MDQ6VXNlcjQ5MjYy", "avatar_url": "https://avatars1.githubusercontent.com/u/49262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jart", "html_url": "https://github.com/jart", "followers_url": "https://api.github.com/users/jart/followers", "following_url": "https://api.github.com/users/jart/following{/other_user}", "gists_url": "https://api.github.com/users/jart/gists{/gist_id}", "starred_url": "https://api.github.com/users/jart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jart/subscriptions", "organizations_url": "https://api.github.com/users/jart/orgs", "repos_url": "https://api.github.com/users/jart/repos", "events_url": "https://api.github.com/users/jart/events{/privacy}", "received_events_url": "https://api.github.com/users/jart/received_events", "type": "User", "site_admin": false}, {"login": "decentralion", "id": 1400023, "node_id": "MDQ6VXNlcjE0MDAwMjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1400023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/decentralion", "html_url": "https://github.com/decentralion", "followers_url": "https://api.github.com/users/decentralion/followers", "following_url": "https://api.github.com/users/decentralion/following{/other_user}", "gists_url": "https://api.github.com/users/decentralion/gists{/gist_id}", "starred_url": "https://api.github.com/users/decentralion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/decentralion/subscriptions", "organizations_url": "https://api.github.com/users/decentralion/orgs", "repos_url": "https://api.github.com/users/decentralion/repos", "events_url": "https://api.github.com/users/decentralion/events{/privacy}", "received_events_url": "https://api.github.com/users/decentralion/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 15, "created_at": "2016-10-09T13:40:32Z", "updated_at": "2016-12-01T09:31:59Z", "closed_at": "2016-11-22T01:08:51Z", "author_association": "NONE", "body_html": "<p>NOTE: Only file GitHub issues for bugs and feature requests.  All other topics will be closed.</p>\n<p>For general support from the community, see <a href=\"https://stackoverflow.com/questions/tagged/tensorflow\" rel=\"nofollow\">StackOverflow</a>.<br>\nTo make bugs and feature requests more easy to find and organize, we close issues that are deemed<br>\nout of scope for GitHub Issues and point people to StackOverflow.</p>\n<p>For bugs or installation issues, please provide the following information.<br>\nThe more information you provide, the more easily we will be able to offer<br>\nhelp and advice.</p>\n<h3>What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?</h3>\n<p>I have not found any related issues</p>\n<h3>Environment info</h3>\n<p>Operating System:</p>\n<p>Ubuntu 16.04</p>\n<p>Installed version of CUDA and cuDNN:<br>\n(please attach the output of <code>ls -l /path/to/cuda/lib/libcud*</code>):</p>\n<pre><code>\nrik@rik-MS-7971:~$ ls -l /usr/local/cuda/lib64/libcud*\n-rw-r--r-- 1 root root   560184 Sep 23 09:09 /usr/local/cuda/lib64/libcudadevrt.a\nlrwxrwxrwx 1 root root       16 Sep 23 09:09 /usr/local/cuda/lib64/libcudart.so -&gt; libcudart.so.8.0\nlrwxrwxrwx 1 root root       19 Sep 23 09:09 /usr/local/cuda/lib64/libcudart.so.8.0 -&gt; libcudart.so.8.0.27\n-rwxr-xr-x 1 root root   394472 Sep 23 09:09 /usr/local/cuda/lib64/libcudart.so.8.0.27\n-rw-r--r-- 1 root root   737516 Sep 23 09:09 /usr/local/cuda/lib64/libcudart_static.a\nlrwxrwxrwx 1 rik  rik        13 Jul 27 01:55 /usr/local/cuda/lib64/libcudnn.so -&gt; libcudnn.so.5\nlrwxrwxrwx 1 rik  rik        17 Jul 27 01:55 /usr/local/cuda/lib64/libcudnn.so.5 -&gt; libcudnn.so.5.1.5\n-rwxrwxr-x 1 rik  rik  79337624 Sep 26 21:55 /usr/local/cuda/lib64/libcudnn.so.5.1.5\n-rw-rw-r-- 1 rik  rik  69756172 Sep 26 21:55 /usr/local/cuda/lib64/libcudnn_static.a\n</code></pre>\n<p>If installed from binary pip package, provide:</p>\n<ol>\n<li>A link to the pip package you installed:</li>\n<li>The output from <code>python -c \"import tensorflow; print(tensorflow.__version__)\"</code>.</li>\n</ol>\n<pre><code>rik@rik-MS-7971:~$ python -c \"import tensorflow; print(tensorflow.__version__)\"\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so locally\n0.11.0rc0\n</code></pre>\n<p>If installed from source, provide</p>\n<ol>\n<li>The commit hash (<code>git rev-parse HEAD</code>)</li>\n<li>The output of <code>bazel version</code></li>\n</ol>\n<h3>If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)</h3>\n<h3>What other attempted solutions have you tried?</h3>\n<p>Tried erasing files from logdir and re-running. Tried running mnist with summaries tutorial, this is also blank charts</p>\n<h3>Logs or other output that would be helpful</h3>\n<p>(If logs are large, please upload as attachment or provide link).</p>\n<hr>\n<p>All, when running <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/tutorials/mnist/mnist_with_summaries.py\">MNIST with Summaries example</a> charts exist on events and distribution tabs, they are blank. Histograms and appear correct. Also, code is running slow compated to non-tensorboard version. Please help, Thanks. Below is output.</p>\n<pre><code>I tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so locally\nSuccessfully downloaded train-images-idx3-ubyte.gz 9912422 bytes.\nExtracting /tmp/data/train-images-idx3-ubyte.gz\nSuccessfully downloaded train-labels-idx1-ubyte.gz 28881 bytes.\nExtracting /tmp/data/train-labels-idx1-ubyte.gz\nSuccessfully downloaded t10k-images-idx3-ubyte.gz 1648877 bytes.\nExtracting /tmp/data/t10k-images-idx3-ubyte.gz\nSuccessfully downloaded t10k-labels-idx1-ubyte.gz 4542 bytes.\nExtracting /tmp/data/t10k-labels-idx1-ubyte.gz\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:925] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:951] Found device 0 with properties: \nname: GeForce GTX 1080\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.797\npciBusID 0000:01:00.0\nTotal memory: 7.92GiB\nFree memory: 7.36GiB\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:972] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:982] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:1041] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0)\nAccuracy at step 0: 0.0802\nAccuracy at step 10: 0.6788\nAccuracy at step 20: 0.8217\nAccuracy at step 30: 0.8495\nAccuracy at step 40: 0.8734\nAccuracy at step 50: 0.8794\nAccuracy at step 60: 0.8847\nAccuracy at step 70: 0.8863\nAccuracy at step 80: 0.8898\nAccuracy at step 90: 0.8939\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcupti.so locally\nAdding run metadata for 99\nAccuracy at step 100: 0.9015\nAccuracy at step 110: 0.9132\nAccuracy at step 120: 0.9163\nAccuracy at step 130: 0.9197\nAccuracy at step 140: 0.9252\nAccuracy at step 150: 0.9182\nAccuracy at step 160: 0.9283\nAccuracy at step 170: 0.9243\nAccuracy at step 180: 0.9231\nAccuracy at step 190: 0.9266\nAdding run metadata for 199\nAccuracy at step 200: 0.9327\nAccuracy at step 210: 0.9336\nAccuracy at step 220: 0.9329\nAccuracy at step 230: 0.9311\nAccuracy at step 240: 0.9308\nAccuracy at step 250: 0.9214\nAccuracy at step 260: 0.9324\nAccuracy at step 270: 0.9393\nAccuracy at step 280: 0.9327\nAccuracy at step 290: 0.9401\nAdding run metadata for 299\nAccuracy at step 300: 0.9442\nAccuracy at step 310: 0.9405\nAccuracy at step 320: 0.9424\nAccuracy at step 330: 0.9425\nAccuracy at step 340: 0.9468\nAccuracy at step 350: 0.9461\nAccuracy at step 360: 0.9427\nAccuracy at step 370: 0.9434\nAccuracy at step 380: 0.9474\nAccuracy at step 390: 0.9449\nAdding run metadata for 399\nAccuracy at step 400: 0.9443\nAccuracy at step 410: 0.9449\nAccuracy at step 420: 0.9474\nAccuracy at step 430: 0.9455\nAccuracy at step 440: 0.952\nAccuracy at step 450: 0.9505\nAccuracy at step 460: 0.9525\nAccuracy at step 470: 0.9493\nAccuracy at step 480: 0.9489\nAccuracy at step 490: 0.9515\nAdding run metadata for 499\nAccuracy at step 500: 0.9517\nAccuracy at step 510: 0.9515\nAccuracy at step 520: 0.9499\nAccuracy at step 530: 0.9539\nAccuracy at step 540: 0.9548\nAccuracy at step 550: 0.9573\nAccuracy at step 560: 0.9548\nAccuracy at step 570: 0.9569\nAccuracy at step 580: 0.9552\nAccuracy at step 590: 0.9548\nAdding run metadata for 599\nAccuracy at step 600: 0.9551\nAccuracy at step 610: 0.9535\nAccuracy at step 620: 0.96\nAccuracy at step 630: 0.9599\nAccuracy at step 640: 0.9603\nAccuracy at step 650: 0.9616\nAccuracy at step 660: 0.9617\nAccuracy at step 670: 0.9623\nAccuracy at step 680: 0.9613\nAccuracy at step 690: 0.9614\nAdding run metadata for 699\nAccuracy at step 700: 0.9592\nAccuracy at step 710: 0.9614\nAccuracy at step 720: 0.9595\nAccuracy at step 730: 0.9646\nAccuracy at step 740: 0.9636\nAccuracy at step 750: 0.964\nAccuracy at step 760: 0.9656\nAccuracy at step 770: 0.9616\nAccuracy at step 780: 0.9631\nAccuracy at step 790: 0.964\nAdding run metadata for 799\nAccuracy at step 800: 0.9637\nAccuracy at step 810: 0.9637\nAccuracy at step 820: 0.9653\nAccuracy at step 830: 0.9636\nAccuracy at step 840: 0.9615\nAccuracy at step 850: 0.9654\nAccuracy at step 860: 0.9668\nAccuracy at step 870: 0.9653\nAccuracy at step 880: 0.965\nAccuracy at step 890: 0.9645\nAdding run metadata for 899\nAccuracy at step 900: 0.9664\nAccuracy at step 910: 0.967\nAccuracy at step 920: 0.9658\nAccuracy at step 930: 0.9664\nAccuracy at step 940: 0.9671\nAccuracy at step 950: 0.967\nAccuracy at step 960: 0.9663\nAccuracy at step 970: 0.968\nAccuracy at step 980: 0.9679\nAccuracy at step 990: 0.9666\nAdding run metadata for 999\n</code></pre>\n<hr>", "body_text": "NOTE: Only file GitHub issues for bugs and feature requests.  All other topics will be closed.\nFor general support from the community, see StackOverflow.\nTo make bugs and feature requests more easy to find and organize, we close issues that are deemed\nout of scope for GitHub Issues and point people to StackOverflow.\nFor bugs or installation issues, please provide the following information.\nThe more information you provide, the more easily we will be able to offer\nhelp and advice.\nWhat related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\nI have not found any related issues\nEnvironment info\nOperating System:\nUbuntu 16.04\nInstalled version of CUDA and cuDNN:\n(please attach the output of ls -l /path/to/cuda/lib/libcud*):\n\nrik@rik-MS-7971:~$ ls -l /usr/local/cuda/lib64/libcud*\n-rw-r--r-- 1 root root   560184 Sep 23 09:09 /usr/local/cuda/lib64/libcudadevrt.a\nlrwxrwxrwx 1 root root       16 Sep 23 09:09 /usr/local/cuda/lib64/libcudart.so -> libcudart.so.8.0\nlrwxrwxrwx 1 root root       19 Sep 23 09:09 /usr/local/cuda/lib64/libcudart.so.8.0 -> libcudart.so.8.0.27\n-rwxr-xr-x 1 root root   394472 Sep 23 09:09 /usr/local/cuda/lib64/libcudart.so.8.0.27\n-rw-r--r-- 1 root root   737516 Sep 23 09:09 /usr/local/cuda/lib64/libcudart_static.a\nlrwxrwxrwx 1 rik  rik        13 Jul 27 01:55 /usr/local/cuda/lib64/libcudnn.so -> libcudnn.so.5\nlrwxrwxrwx 1 rik  rik        17 Jul 27 01:55 /usr/local/cuda/lib64/libcudnn.so.5 -> libcudnn.so.5.1.5\n-rwxrwxr-x 1 rik  rik  79337624 Sep 26 21:55 /usr/local/cuda/lib64/libcudnn.so.5.1.5\n-rw-rw-r-- 1 rik  rik  69756172 Sep 26 21:55 /usr/local/cuda/lib64/libcudnn_static.a\n\nIf installed from binary pip package, provide:\n\nA link to the pip package you installed:\nThe output from python -c \"import tensorflow; print(tensorflow.__version__)\".\n\nrik@rik-MS-7971:~$ python -c \"import tensorflow; print(tensorflow.__version__)\"\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so locally\n0.11.0rc0\n\nIf installed from source, provide\n\nThe commit hash (git rev-parse HEAD)\nThe output of bazel version\n\nIf possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\nWhat other attempted solutions have you tried?\nTried erasing files from logdir and re-running. Tried running mnist with summaries tutorial, this is also blank charts\nLogs or other output that would be helpful\n(If logs are large, please upload as attachment or provide link).\n\nAll, when running MNIST with Summaries example charts exist on events and distribution tabs, they are blank. Histograms and appear correct. Also, code is running slow compated to non-tensorboard version. Please help, Thanks. Below is output.\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so locally\nSuccessfully downloaded train-images-idx3-ubyte.gz 9912422 bytes.\nExtracting /tmp/data/train-images-idx3-ubyte.gz\nSuccessfully downloaded train-labels-idx1-ubyte.gz 28881 bytes.\nExtracting /tmp/data/train-labels-idx1-ubyte.gz\nSuccessfully downloaded t10k-images-idx3-ubyte.gz 1648877 bytes.\nExtracting /tmp/data/t10k-images-idx3-ubyte.gz\nSuccessfully downloaded t10k-labels-idx1-ubyte.gz 4542 bytes.\nExtracting /tmp/data/t10k-labels-idx1-ubyte.gz\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:925] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:951] Found device 0 with properties: \nname: GeForce GTX 1080\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.797\npciBusID 0000:01:00.0\nTotal memory: 7.92GiB\nFree memory: 7.36GiB\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:972] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:982] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:1041] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0)\nAccuracy at step 0: 0.0802\nAccuracy at step 10: 0.6788\nAccuracy at step 20: 0.8217\nAccuracy at step 30: 0.8495\nAccuracy at step 40: 0.8734\nAccuracy at step 50: 0.8794\nAccuracy at step 60: 0.8847\nAccuracy at step 70: 0.8863\nAccuracy at step 80: 0.8898\nAccuracy at step 90: 0.8939\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcupti.so locally\nAdding run metadata for 99\nAccuracy at step 100: 0.9015\nAccuracy at step 110: 0.9132\nAccuracy at step 120: 0.9163\nAccuracy at step 130: 0.9197\nAccuracy at step 140: 0.9252\nAccuracy at step 150: 0.9182\nAccuracy at step 160: 0.9283\nAccuracy at step 170: 0.9243\nAccuracy at step 180: 0.9231\nAccuracy at step 190: 0.9266\nAdding run metadata for 199\nAccuracy at step 200: 0.9327\nAccuracy at step 210: 0.9336\nAccuracy at step 220: 0.9329\nAccuracy at step 230: 0.9311\nAccuracy at step 240: 0.9308\nAccuracy at step 250: 0.9214\nAccuracy at step 260: 0.9324\nAccuracy at step 270: 0.9393\nAccuracy at step 280: 0.9327\nAccuracy at step 290: 0.9401\nAdding run metadata for 299\nAccuracy at step 300: 0.9442\nAccuracy at step 310: 0.9405\nAccuracy at step 320: 0.9424\nAccuracy at step 330: 0.9425\nAccuracy at step 340: 0.9468\nAccuracy at step 350: 0.9461\nAccuracy at step 360: 0.9427\nAccuracy at step 370: 0.9434\nAccuracy at step 380: 0.9474\nAccuracy at step 390: 0.9449\nAdding run metadata for 399\nAccuracy at step 400: 0.9443\nAccuracy at step 410: 0.9449\nAccuracy at step 420: 0.9474\nAccuracy at step 430: 0.9455\nAccuracy at step 440: 0.952\nAccuracy at step 450: 0.9505\nAccuracy at step 460: 0.9525\nAccuracy at step 470: 0.9493\nAccuracy at step 480: 0.9489\nAccuracy at step 490: 0.9515\nAdding run metadata for 499\nAccuracy at step 500: 0.9517\nAccuracy at step 510: 0.9515\nAccuracy at step 520: 0.9499\nAccuracy at step 530: 0.9539\nAccuracy at step 540: 0.9548\nAccuracy at step 550: 0.9573\nAccuracy at step 560: 0.9548\nAccuracy at step 570: 0.9569\nAccuracy at step 580: 0.9552\nAccuracy at step 590: 0.9548\nAdding run metadata for 599\nAccuracy at step 600: 0.9551\nAccuracy at step 610: 0.9535\nAccuracy at step 620: 0.96\nAccuracy at step 630: 0.9599\nAccuracy at step 640: 0.9603\nAccuracy at step 650: 0.9616\nAccuracy at step 660: 0.9617\nAccuracy at step 670: 0.9623\nAccuracy at step 680: 0.9613\nAccuracy at step 690: 0.9614\nAdding run metadata for 699\nAccuracy at step 700: 0.9592\nAccuracy at step 710: 0.9614\nAccuracy at step 720: 0.9595\nAccuracy at step 730: 0.9646\nAccuracy at step 740: 0.9636\nAccuracy at step 750: 0.964\nAccuracy at step 760: 0.9656\nAccuracy at step 770: 0.9616\nAccuracy at step 780: 0.9631\nAccuracy at step 790: 0.964\nAdding run metadata for 799\nAccuracy at step 800: 0.9637\nAccuracy at step 810: 0.9637\nAccuracy at step 820: 0.9653\nAccuracy at step 830: 0.9636\nAccuracy at step 840: 0.9615\nAccuracy at step 850: 0.9654\nAccuracy at step 860: 0.9668\nAccuracy at step 870: 0.9653\nAccuracy at step 880: 0.965\nAccuracy at step 890: 0.9645\nAdding run metadata for 899\nAccuracy at step 900: 0.9664\nAccuracy at step 910: 0.967\nAccuracy at step 920: 0.9658\nAccuracy at step 930: 0.9664\nAccuracy at step 940: 0.9671\nAccuracy at step 950: 0.967\nAccuracy at step 960: 0.9663\nAccuracy at step 970: 0.968\nAccuracy at step 980: 0.9679\nAccuracy at step 990: 0.9666\nAdding run metadata for 999", "body": "NOTE: Only file GitHub issues for bugs and feature requests.  All other topics will be closed.\n\nFor general support from the community, see [StackOverflow](https://stackoverflow.com/questions/tagged/tensorflow).\nTo make bugs and feature requests more easy to find and organize, we close issues that are deemed\nout of scope for GitHub Issues and point people to StackOverflow.\n\nFor bugs or installation issues, please provide the following information.\nThe more information you provide, the more easily we will be able to offer\nhelp and advice.\n### What related GitHub issues or StackOverflow threads have you found by searching the web for your problem?\n\nI have not found any related issues\n### Environment info\n\nOperating System:\n\nUbuntu 16.04\n\nInstalled version of CUDA and cuDNN: \n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`):\n\n```\n\nrik@rik-MS-7971:~$ ls -l /usr/local/cuda/lib64/libcud*\n-rw-r--r-- 1 root root   560184 Sep 23 09:09 /usr/local/cuda/lib64/libcudadevrt.a\nlrwxrwxrwx 1 root root       16 Sep 23 09:09 /usr/local/cuda/lib64/libcudart.so -> libcudart.so.8.0\nlrwxrwxrwx 1 root root       19 Sep 23 09:09 /usr/local/cuda/lib64/libcudart.so.8.0 -> libcudart.so.8.0.27\n-rwxr-xr-x 1 root root   394472 Sep 23 09:09 /usr/local/cuda/lib64/libcudart.so.8.0.27\n-rw-r--r-- 1 root root   737516 Sep 23 09:09 /usr/local/cuda/lib64/libcudart_static.a\nlrwxrwxrwx 1 rik  rik        13 Jul 27 01:55 /usr/local/cuda/lib64/libcudnn.so -> libcudnn.so.5\nlrwxrwxrwx 1 rik  rik        17 Jul 27 01:55 /usr/local/cuda/lib64/libcudnn.so.5 -> libcudnn.so.5.1.5\n-rwxrwxr-x 1 rik  rik  79337624 Sep 26 21:55 /usr/local/cuda/lib64/libcudnn.so.5.1.5\n-rw-rw-r-- 1 rik  rik  69756172 Sep 26 21:55 /usr/local/cuda/lib64/libcudnn_static.a\n```\n\nIf installed from binary pip package, provide:\n1. A link to the pip package you installed:\n2. The output from `python -c \"import tensorflow; print(tensorflow.__version__)\"`.\n\n```\nrik@rik-MS-7971:~$ python -c \"import tensorflow; print(tensorflow.__version__)\"\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so locally\n0.11.0rc0\n```\n\nIf installed from source, provide \n1. The commit hash (`git rev-parse HEAD`)\n2. The output of `bazel version`\n### If possible, provide a minimal reproducible example (We usually don't have time to read hundreds of lines of your code)\n### What other attempted solutions have you tried?\n\nTried erasing files from logdir and re-running. Tried running mnist with summaries tutorial, this is also blank charts\n### Logs or other output that would be helpful\n\n(If logs are large, please upload as attachment or provide link).\n\n---\n\nAll, when running [MNIST with Summaries example](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/tutorials/mnist/mnist_with_summaries.py) charts exist on events and distribution tabs, they are blank. Histograms and appear correct. Also, code is running slow compated to non-tensorboard version. Please help, Thanks. Below is output.\n\n```\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so locally\nSuccessfully downloaded train-images-idx3-ubyte.gz 9912422 bytes.\nExtracting /tmp/data/train-images-idx3-ubyte.gz\nSuccessfully downloaded train-labels-idx1-ubyte.gz 28881 bytes.\nExtracting /tmp/data/train-labels-idx1-ubyte.gz\nSuccessfully downloaded t10k-images-idx3-ubyte.gz 1648877 bytes.\nExtracting /tmp/data/t10k-images-idx3-ubyte.gz\nSuccessfully downloaded t10k-labels-idx1-ubyte.gz 4542 bytes.\nExtracting /tmp/data/t10k-labels-idx1-ubyte.gz\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:925] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:951] Found device 0 with properties: \nname: GeForce GTX 1080\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.797\npciBusID 0000:01:00.0\nTotal memory: 7.92GiB\nFree memory: 7.36GiB\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:972] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:982] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:1041] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0)\nAccuracy at step 0: 0.0802\nAccuracy at step 10: 0.6788\nAccuracy at step 20: 0.8217\nAccuracy at step 30: 0.8495\nAccuracy at step 40: 0.8734\nAccuracy at step 50: 0.8794\nAccuracy at step 60: 0.8847\nAccuracy at step 70: 0.8863\nAccuracy at step 80: 0.8898\nAccuracy at step 90: 0.8939\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcupti.so locally\nAdding run metadata for 99\nAccuracy at step 100: 0.9015\nAccuracy at step 110: 0.9132\nAccuracy at step 120: 0.9163\nAccuracy at step 130: 0.9197\nAccuracy at step 140: 0.9252\nAccuracy at step 150: 0.9182\nAccuracy at step 160: 0.9283\nAccuracy at step 170: 0.9243\nAccuracy at step 180: 0.9231\nAccuracy at step 190: 0.9266\nAdding run metadata for 199\nAccuracy at step 200: 0.9327\nAccuracy at step 210: 0.9336\nAccuracy at step 220: 0.9329\nAccuracy at step 230: 0.9311\nAccuracy at step 240: 0.9308\nAccuracy at step 250: 0.9214\nAccuracy at step 260: 0.9324\nAccuracy at step 270: 0.9393\nAccuracy at step 280: 0.9327\nAccuracy at step 290: 0.9401\nAdding run metadata for 299\nAccuracy at step 300: 0.9442\nAccuracy at step 310: 0.9405\nAccuracy at step 320: 0.9424\nAccuracy at step 330: 0.9425\nAccuracy at step 340: 0.9468\nAccuracy at step 350: 0.9461\nAccuracy at step 360: 0.9427\nAccuracy at step 370: 0.9434\nAccuracy at step 380: 0.9474\nAccuracy at step 390: 0.9449\nAdding run metadata for 399\nAccuracy at step 400: 0.9443\nAccuracy at step 410: 0.9449\nAccuracy at step 420: 0.9474\nAccuracy at step 430: 0.9455\nAccuracy at step 440: 0.952\nAccuracy at step 450: 0.9505\nAccuracy at step 460: 0.9525\nAccuracy at step 470: 0.9493\nAccuracy at step 480: 0.9489\nAccuracy at step 490: 0.9515\nAdding run metadata for 499\nAccuracy at step 500: 0.9517\nAccuracy at step 510: 0.9515\nAccuracy at step 520: 0.9499\nAccuracy at step 530: 0.9539\nAccuracy at step 540: 0.9548\nAccuracy at step 550: 0.9573\nAccuracy at step 560: 0.9548\nAccuracy at step 570: 0.9569\nAccuracy at step 580: 0.9552\nAccuracy at step 590: 0.9548\nAdding run metadata for 599\nAccuracy at step 600: 0.9551\nAccuracy at step 610: 0.9535\nAccuracy at step 620: 0.96\nAccuracy at step 630: 0.9599\nAccuracy at step 640: 0.9603\nAccuracy at step 650: 0.9616\nAccuracy at step 660: 0.9617\nAccuracy at step 670: 0.9623\nAccuracy at step 680: 0.9613\nAccuracy at step 690: 0.9614\nAdding run metadata for 699\nAccuracy at step 700: 0.9592\nAccuracy at step 710: 0.9614\nAccuracy at step 720: 0.9595\nAccuracy at step 730: 0.9646\nAccuracy at step 740: 0.9636\nAccuracy at step 750: 0.964\nAccuracy at step 760: 0.9656\nAccuracy at step 770: 0.9616\nAccuracy at step 780: 0.9631\nAccuracy at step 790: 0.964\nAdding run metadata for 799\nAccuracy at step 800: 0.9637\nAccuracy at step 810: 0.9637\nAccuracy at step 820: 0.9653\nAccuracy at step 830: 0.9636\nAccuracy at step 840: 0.9615\nAccuracy at step 850: 0.9654\nAccuracy at step 860: 0.9668\nAccuracy at step 870: 0.9653\nAccuracy at step 880: 0.965\nAccuracy at step 890: 0.9645\nAdding run metadata for 899\nAccuracy at step 900: 0.9664\nAccuracy at step 910: 0.967\nAccuracy at step 920: 0.9658\nAccuracy at step 930: 0.9664\nAccuracy at step 940: 0.9671\nAccuracy at step 950: 0.967\nAccuracy at step 960: 0.9663\nAccuracy at step 970: 0.968\nAccuracy at step 980: 0.9679\nAccuracy at step 990: 0.9666\nAdding run metadata for 999\n```\n\n---\n"}