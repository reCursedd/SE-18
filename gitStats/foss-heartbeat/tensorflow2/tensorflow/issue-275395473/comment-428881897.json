{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/428881897", "html_url": "https://github.com/tensorflow/tensorflow/issues/14726#issuecomment-428881897", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14726", "id": 428881897, "node_id": "MDEyOklzc3VlQ29tbWVudDQyODg4MTg5Nw==", "user": {"login": "KrantiK94", "id": 42432791, "node_id": "MDQ6VXNlcjQyNDMyNzkx", "avatar_url": "https://avatars2.githubusercontent.com/u/42432791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KrantiK94", "html_url": "https://github.com/KrantiK94", "followers_url": "https://api.github.com/users/KrantiK94/followers", "following_url": "https://api.github.com/users/KrantiK94/following{/other_user}", "gists_url": "https://api.github.com/users/KrantiK94/gists{/gist_id}", "starred_url": "https://api.github.com/users/KrantiK94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KrantiK94/subscriptions", "organizations_url": "https://api.github.com/users/KrantiK94/orgs", "repos_url": "https://api.github.com/users/KrantiK94/repos", "events_url": "https://api.github.com/users/KrantiK94/events{/privacy}", "received_events_url": "https://api.github.com/users/KrantiK94/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-11T09:14:11Z", "updated_at": "2018-10-11T09:24:06Z", "author_association": "NONE", "body_html": "<p>I have tried it this way:</p>\n<div class=\"highlight highlight-source-python\"><pre>variables <span class=\"pl-k\">=</span> tf.trainable_variables()\n<span class=\"pl-k\">for</span> var1 <span class=\"pl-k\">in</span> variables:\n\t<span class=\"pl-k\">if</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>pred/<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">in</span> var1.name:\n\t\ttrained_var <span class=\"pl-k\">=</span> [var2 <span class=\"pl-k\">for</span> var2 <span class=\"pl-k\">in</span> tf.global_variables() <span class=\"pl-k\">if</span> var2.op.name <span class=\"pl-k\">in</span> <span class=\"pl-c1\">str</span>.replace(var1.name, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>pred/<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>)][<span class=\"pl-c1\">0</span>]\n\t\tvalue <span class=\"pl-k\">=</span> sess.run(trained_var)\n\t\tsess.run(tf.assign(var1, value))</pre></div>\n<p>For this to work I put all variables of the target model in the scope \"pred\" and the source model was in the same wider scope. By getting the value of the source via sess.run() you get the hard copy of the values which can then be assigned to your target.</p>", "body_text": "I have tried it this way:\nvariables = tf.trainable_variables()\nfor var1 in variables:\n\tif \"pred/\" in var1.name:\n\t\ttrained_var = [var2 for var2 in tf.global_variables() if var2.op.name in str.replace(var1.name, \"pred/\", \"\")][0]\n\t\tvalue = sess.run(trained_var)\n\t\tsess.run(tf.assign(var1, value))\nFor this to work I put all variables of the target model in the scope \"pred\" and the source model was in the same wider scope. By getting the value of the source via sess.run() you get the hard copy of the values which can then be assigned to your target.", "body": "I have tried it this way:\r\n\r\n```python\r\nvariables = tf.trainable_variables()\r\nfor var1 in variables:\r\n\tif \"pred/\" in var1.name:\r\n\t\ttrained_var = [var2 for var2 in tf.global_variables() if var2.op.name in str.replace(var1.name, \"pred/\", \"\")][0]\r\n\t\tvalue = sess.run(trained_var)\r\n\t\tsess.run(tf.assign(var1, value))\r\n```\r\n\r\nFor this to work I put all variables of the target model in the scope \"pred\" and the source model was in the same wider scope. By getting the value of the source via sess.run() you get the hard copy of the values which can then be assigned to your target."}