{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/290877324", "html_url": "https://github.com/tensorflow/tensorflow/issues/8833#issuecomment-290877324", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8833", "id": 290877324, "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDg3NzMyNA==", "user": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-01T00:17:48Z", "updated_at": "2017-04-01T00:17:48Z", "author_association": "CONTRIBUTOR", "body_html": "<p>That's right, the decoder needs a new, separate, type of state than what<br>\nthe encoder emitted.</p>\n<p>As of today I pushed a new method to AttentionWrapperState object called<br>\n.clone().  You would use it thus:</p>\n<p><code>initial_state = wrapper.zero_state(...).clone(cell_state=encoder_state)</code></p>\n<p>and pass that initial_state to the decoder.</p>", "body_text": "That's right, the decoder needs a new, separate, type of state than what\nthe encoder emitted.\nAs of today I pushed a new method to AttentionWrapperState object called\n.clone().  You would use it thus:\ninitial_state = wrapper.zero_state(...).clone(cell_state=encoder_state)\nand pass that initial_state to the decoder.", "body": "That's right, the decoder needs a new, separate, type of state than what\r\nthe encoder emitted.\r\n\r\nAs of today I pushed a new method to AttentionWrapperState object called\r\n.clone().  You would use it thus:\r\n\r\n`initial_state = wrapper.zero_state(...).clone(cell_state=encoder_state)`\r\n\r\nand pass that initial_state to the decoder."}