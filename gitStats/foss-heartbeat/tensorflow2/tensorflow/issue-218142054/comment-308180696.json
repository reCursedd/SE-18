{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/308180696", "html_url": "https://github.com/tensorflow/tensorflow/issues/8833#issuecomment-308180696", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8833", "id": 308180696, "node_id": "MDEyOklzc3VlQ29tbWVudDMwODE4MDY5Ng==", "user": {"login": "RylanSchaeffer", "id": 8942987, "node_id": "MDQ6VXNlcjg5NDI5ODc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8942987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RylanSchaeffer", "html_url": "https://github.com/RylanSchaeffer", "followers_url": "https://api.github.com/users/RylanSchaeffer/followers", "following_url": "https://api.github.com/users/RylanSchaeffer/following{/other_user}", "gists_url": "https://api.github.com/users/RylanSchaeffer/gists{/gist_id}", "starred_url": "https://api.github.com/users/RylanSchaeffer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RylanSchaeffer/subscriptions", "organizations_url": "https://api.github.com/users/RylanSchaeffer/orgs", "repos_url": "https://api.github.com/users/RylanSchaeffer/repos", "events_url": "https://api.github.com/users/RylanSchaeffer/events{/privacy}", "received_events_url": "https://api.github.com/users/RylanSchaeffer/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-13T16:55:50Z", "updated_at": "2017-06-13T19:50:19Z", "author_association": "NONE", "body_html": "<p>@proximacent , here's some of the code that I wrote:</p>\n<pre><code>            bahdanau_attention = BahdanauAttention(num_units=DECODER_NUM_UNITS,\n                                                   memory=encoder_outputs)\n\n            attention_cell = AttentionWrapper(cell=self._create_lstm_cell(),\n                                              attention_mechanism=bahdanau_attention)\n\n            attention_zero = attention_cell.zero_state(batch_size=self.x.shape[0], dtype=tf.float32)\n\n            init_state = attention_zero.clone(cell_state=encoder_final_states)\n\n            training_helper = TrainingHelper(inputs=self.y,  # feed in ground truth\n                                             sequence_length=length)  # feed in sequence length\n\n            decoder = BasicDecoder(cell=attention_cell,\n                                   helper=training_helper,\n                                   initial_state=init_state)\n</code></pre>\n<p>The error is raised in line 379 <code>c, h = state</code> of TensorFlow's rnn_cell_impl.py. If you want, I can paste that code.</p>\n<p>If I set a breakpoint right before line 379, the first two times I reach the breakpoint, <code>type(state)</code> evaluates to <code>&lt;class 'tensorflow.python.ops.rnn_cell_impl.LSTMStateTuple'&gt;</code>. The third time, <code>type(state)</code> evaluates to <code>&lt;class 'tensorflow.python.framework.ops.Tensor'&gt;</code>.</p>", "body_text": "@proximacent , here's some of the code that I wrote:\n            bahdanau_attention = BahdanauAttention(num_units=DECODER_NUM_UNITS,\n                                                   memory=encoder_outputs)\n\n            attention_cell = AttentionWrapper(cell=self._create_lstm_cell(),\n                                              attention_mechanism=bahdanau_attention)\n\n            attention_zero = attention_cell.zero_state(batch_size=self.x.shape[0], dtype=tf.float32)\n\n            init_state = attention_zero.clone(cell_state=encoder_final_states)\n\n            training_helper = TrainingHelper(inputs=self.y,  # feed in ground truth\n                                             sequence_length=length)  # feed in sequence length\n\n            decoder = BasicDecoder(cell=attention_cell,\n                                   helper=training_helper,\n                                   initial_state=init_state)\n\nThe error is raised in line 379 c, h = state of TensorFlow's rnn_cell_impl.py. If you want, I can paste that code.\nIf I set a breakpoint right before line 379, the first two times I reach the breakpoint, type(state) evaluates to <class 'tensorflow.python.ops.rnn_cell_impl.LSTMStateTuple'>. The third time, type(state) evaluates to <class 'tensorflow.python.framework.ops.Tensor'>.", "body": "@proximacent , here's some of the code that I wrote:\r\n```\r\n            bahdanau_attention = BahdanauAttention(num_units=DECODER_NUM_UNITS,\r\n                                                   memory=encoder_outputs)\r\n\r\n            attention_cell = AttentionWrapper(cell=self._create_lstm_cell(),\r\n                                              attention_mechanism=bahdanau_attention)\r\n\r\n            attention_zero = attention_cell.zero_state(batch_size=self.x.shape[0], dtype=tf.float32)\r\n\r\n            init_state = attention_zero.clone(cell_state=encoder_final_states)\r\n\r\n            training_helper = TrainingHelper(inputs=self.y,  # feed in ground truth\r\n                                             sequence_length=length)  # feed in sequence length\r\n\r\n            decoder = BasicDecoder(cell=attention_cell,\r\n                                   helper=training_helper,\r\n                                   initial_state=init_state)\r\n```\r\n\r\nThe error is raised in line 379 `c, h = state` of TensorFlow's rnn_cell_impl.py. If you want, I can paste that code.\r\n\r\nIf I set a breakpoint right before line 379, the first two times I reach the breakpoint, `type(state)` evaluates to `<class 'tensorflow.python.ops.rnn_cell_impl.LSTMStateTuple'>`. The third time, `type(state)` evaluates to `<class 'tensorflow.python.framework.ops.Tensor'>`."}