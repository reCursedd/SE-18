{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/308518876", "html_url": "https://github.com/tensorflow/tensorflow/issues/8833#issuecomment-308518876", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8833", "id": 308518876, "node_id": "MDEyOklzc3VlQ29tbWVudDMwODUxODg3Ng==", "user": {"login": "RylanSchaeffer", "id": 8942987, "node_id": "MDQ6VXNlcjg5NDI5ODc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8942987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RylanSchaeffer", "html_url": "https://github.com/RylanSchaeffer", "followers_url": "https://api.github.com/users/RylanSchaeffer/followers", "following_url": "https://api.github.com/users/RylanSchaeffer/following{/other_user}", "gists_url": "https://api.github.com/users/RylanSchaeffer/gists{/gist_id}", "starred_url": "https://api.github.com/users/RylanSchaeffer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RylanSchaeffer/subscriptions", "organizations_url": "https://api.github.com/users/RylanSchaeffer/orgs", "repos_url": "https://api.github.com/users/RylanSchaeffer/repos", "events_url": "https://api.github.com/users/RylanSchaeffer/events{/privacy}", "received_events_url": "https://api.github.com/users/RylanSchaeffer/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-14T18:29:43Z", "updated_at": "2017-06-14T18:30:53Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4604464\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/oahziur\">@oahziur</a> , I have an unrelated, general question about best practices. I'm currently trying to use RNNs to solve the problem I'm working on, but I'd also like to consider using fully convolutional models as well. How would you recommend storing and processing my data in a way conducive to training both types of models?</p>\n<p>Currently, I've written a script to parse all of my data (originally in .csv files) into <code>tf.train.SequenceExample</code>s and write those to TFRecords. Then I use a TFRecordReader in conjunction with <code>tf.parse_single_sequence_example</code> to pipe data into my RNN models for training. However, I don't think that this will work for convolutional models.</p>\n<p>I don't know if asking here makes sense. Creating a new issue wouldn't make sense, but people on StackOverflow don't seem to respond to TensorFlow questions with the same alacrity (if at all).</p>", "body_text": "@oahziur , I have an unrelated, general question about best practices. I'm currently trying to use RNNs to solve the problem I'm working on, but I'd also like to consider using fully convolutional models as well. How would you recommend storing and processing my data in a way conducive to training both types of models?\nCurrently, I've written a script to parse all of my data (originally in .csv files) into tf.train.SequenceExamples and write those to TFRecords. Then I use a TFRecordReader in conjunction with tf.parse_single_sequence_example to pipe data into my RNN models for training. However, I don't think that this will work for convolutional models.\nI don't know if asking here makes sense. Creating a new issue wouldn't make sense, but people on StackOverflow don't seem to respond to TensorFlow questions with the same alacrity (if at all).", "body": "@oahziur , I have an unrelated, general question about best practices. I'm currently trying to use RNNs to solve the problem I'm working on, but I'd also like to consider using fully convolutional models as well. How would you recommend storing and processing my data in a way conducive to training both types of models?\r\n\r\nCurrently, I've written a script to parse all of my data (originally in .csv files) into `tf.train.SequenceExample`s and write those to TFRecords. Then I use a TFRecordReader in conjunction with `tf.parse_single_sequence_example` to pipe data into my RNN models for training. However, I don't think that this will work for convolutional models.\r\n\r\nI don't know if asking here makes sense. Creating a new issue wouldn't make sense, but people on StackOverflow don't seem to respond to TensorFlow questions with the same alacrity (if at all)."}