{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/118", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/118/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/118/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/118", "id": 116264517, "node_id": "MDU6SXNzdWUxMTYyNjQ1MTc=", "number": 118, "title": "\"help wanted\" I cannot get the TensorBoard working, I am following the given tutorial", "user": {"login": "cristian-frincu", "id": 7535010, "node_id": "MDQ6VXNlcjc1MzUwMTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7535010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cristian-frincu", "html_url": "https://github.com/cristian-frincu", "followers_url": "https://api.github.com/users/cristian-frincu/followers", "following_url": "https://api.github.com/users/cristian-frincu/following{/other_user}", "gists_url": "https://api.github.com/users/cristian-frincu/gists{/gist_id}", "starred_url": "https://api.github.com/users/cristian-frincu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cristian-frincu/subscriptions", "organizations_url": "https://api.github.com/users/cristian-frincu/orgs", "repos_url": "https://api.github.com/users/cristian-frincu/repos", "events_url": "https://api.github.com/users/cristian-frincu/events{/privacy}", "received_events_url": "https://api.github.com/users/cristian-frincu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-11-11T04:51:06Z", "updated_at": "2015-11-11T05:27:56Z", "closed_at": "2015-11-11T05:27:56Z", "author_association": "NONE", "body_html": "<p>*<em>I am having trouble writing the log file to be able to visualize it in TensorBoard. Can somebody point me in the right direction? I have followed the code given in the tutorial. When run I get the error: *</em></p>\n<ul>\n<li>\"expected %s got %s.\" % (cls.<strong>name</strong>, type(msg).<strong>name</strong>))<br>\nTypeError: Parameter to MergeFrom() must be instance of same class: expected GraphDef got Graph. for field Event.graph_def*</li>\n</ul>\n<p>The error is said to be on line:</p>\n<div class=\"highlight highlight-source-python\"><pre>summary_writer <span class=\"pl-k\">=</span> tf.train.SummaryWriter(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>/Users/Cristian/Desktop/log<span class=\"pl-pds\">'</span></span>, sess.graph)</pre></div>\n<p><strong>My code:</strong></p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> input_data\n<span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\n\n<span class=\"pl-c1\">print</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Start program<span class=\"pl-pds\">\"</span></span>\nmnist <span class=\"pl-k\">=</span> input_data.read_data_sets(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>MNIST_data/<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-v\">one_hot</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\n<span class=\"pl-c1\">print</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Done loading images<span class=\"pl-pds\">\"</span></span>\n\nx <span class=\"pl-k\">=</span> tf.placeholder(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>float<span class=\"pl-pds\">\"</span></span>, [<span class=\"pl-c1\">None</span>, <span class=\"pl-c1\">784</span>])\nW <span class=\"pl-k\">=</span> tf.Variable(tf.zeros([<span class=\"pl-c1\">784</span>,<span class=\"pl-c1\">10</span>]))\nb <span class=\"pl-k\">=</span> tf.Variable(tf.zeros([<span class=\"pl-c1\">10</span>]))\n\ny <span class=\"pl-k\">=</span> tf.nn.softmax(tf.matmul(x,W) <span class=\"pl-k\">+</span> b)\n\ny_ <span class=\"pl-k\">=</span> tf.placeholder(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>float<span class=\"pl-pds\">\"</span></span>, [<span class=\"pl-c1\">None</span>,<span class=\"pl-c1\">10</span>])\n\n<span class=\"pl-c1\">print</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Done init<span class=\"pl-pds\">\"</span></span>\n\ncross_entropy <span class=\"pl-k\">=</span> <span class=\"pl-k\">-</span>tf.reduce_sum(y_<span class=\"pl-k\">*</span>tf.log(y))\ntrain_step <span class=\"pl-k\">=</span> tf.train.GradientDescentOptimizer(<span class=\"pl-c1\">0.01</span>).minimize(cross_entropy)\n\n\n<span class=\"pl-c1\">print</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Done loading vars<span class=\"pl-pds\">\"</span></span>\n\ninit <span class=\"pl-k\">=</span> tf.initialize_all_variables()\n<span class=\"pl-c1\">print</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Done init vars<span class=\"pl-pds\">\"</span></span>\n\nsess <span class=\"pl-k\">=</span> tf.Session()\nsess.run(init)\n\n<span class=\"pl-c1\">print</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>------<span class=\"pl-pds\">'</span></span>\n<span class=\"pl-c1\">print</span> <span class=\"pl-c1\">type</span>(sess.graph_def)\n\n\ncorrect_prediction <span class=\"pl-k\">=</span> tf.equal(tf.argmax(y,<span class=\"pl-c1\">1</span>), tf.argmax(y_,<span class=\"pl-c1\">1</span>))\naccuracy <span class=\"pl-k\">=</span> tf.reduce_mean(tf.cast(correct_prediction, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>float<span class=\"pl-pds\">\"</span></span>))\n\nacc <span class=\"pl-k\">=</span> tf.scalar_summary(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Accuracy:<span class=\"pl-pds\">\"</span></span>, accuracy)\n\nmerged_summary_op <span class=\"pl-k\">=</span> tf.merge_all_summaries()\nsummary_writer <span class=\"pl-k\">=</span> tf.train.SummaryWriter(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>/Users/Cristian/Desktop/log<span class=\"pl-pds\">'</span></span>, sess.graph)\n\n<span class=\"pl-c1\">print</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Session started<span class=\"pl-pds\">\"</span></span>\n\n\n<span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">2000</span>):\n  batch_xs, batch_ys <span class=\"pl-k\">=</span> mnist.train.next_batch(<span class=\"pl-c1\">100</span>)\n  sess.run(train_step, <span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>{x: batch_xs, y_: batch_ys})\n  <span class=\"pl-k\">if</span> i <span class=\"pl-k\">%</span> <span class=\"pl-c1\">100</span> <span class=\"pl-k\">==</span> <span class=\"pl-c1\">0</span>:\n    <span class=\"pl-c1\">print</span> sess.run(accuracy, <span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>{x: mnist.test.images, y_: mnist.test.labels})\n    summary_str <span class=\"pl-k\">=</span> sess.run(merged_summary_op)\n    summary_writer.add_summary(summary_str, i)\n\n\n<span class=\"pl-c1\">print</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Done training<span class=\"pl-pds\">\"</span></span>\n\ncorrect_prediction <span class=\"pl-k\">=</span> tf.equal(tf.argmax(y,<span class=\"pl-c1\">1</span>), tf.argmax(y_,<span class=\"pl-c1\">1</span>))\n\naccuracy <span class=\"pl-k\">=</span> tf.reduce_mean(tf.cast(correct_prediction, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>float<span class=\"pl-pds\">\"</span></span>))\n\n\n<span class=\"pl-c1\">print</span> sess.run(accuracy, <span class=\"pl-v\">feed_dict</span><span class=\"pl-k\">=</span>{x: mnist.test.images, y_: mnist.test.labels})\n</pre></div>", "body_text": "*I am having trouble writing the log file to be able to visualize it in TensorBoard. Can somebody point me in the right direction? I have followed the code given in the tutorial. When run I get the error: *\n\n\"expected %s got %s.\" % (cls.name, type(msg).name))\nTypeError: Parameter to MergeFrom() must be instance of same class: expected GraphDef got Graph. for field Event.graph_def*\n\nThe error is said to be on line:\nsummary_writer = tf.train.SummaryWriter('/Users/Cristian/Desktop/log', sess.graph)\nMy code:\nimport input_data\nimport tensorflow as tf\n\n\nprint \"Start program\"\nmnist = input_data.read_data_sets(\"MNIST_data/\", one_hot=True)\nprint \"Done loading images\"\n\nx = tf.placeholder(\"float\", [None, 784])\nW = tf.Variable(tf.zeros([784,10]))\nb = tf.Variable(tf.zeros([10]))\n\ny = tf.nn.softmax(tf.matmul(x,W) + b)\n\ny_ = tf.placeholder(\"float\", [None,10])\n\nprint \"Done init\"\n\ncross_entropy = -tf.reduce_sum(y_*tf.log(y))\ntrain_step = tf.train.GradientDescentOptimizer(0.01).minimize(cross_entropy)\n\n\nprint \"Done loading vars\"\n\ninit = tf.initialize_all_variables()\nprint \"Done init vars\"\n\nsess = tf.Session()\nsess.run(init)\n\nprint '------'\nprint type(sess.graph_def)\n\n\ncorrect_prediction = tf.equal(tf.argmax(y,1), tf.argmax(y_,1))\naccuracy = tf.reduce_mean(tf.cast(correct_prediction, \"float\"))\n\nacc = tf.scalar_summary(\"Accuracy:\", accuracy)\n\nmerged_summary_op = tf.merge_all_summaries()\nsummary_writer = tf.train.SummaryWriter('/Users/Cristian/Desktop/log', sess.graph)\n\nprint \"Session started\"\n\n\nfor i in range(2000):\n  batch_xs, batch_ys = mnist.train.next_batch(100)\n  sess.run(train_step, feed_dict={x: batch_xs, y_: batch_ys})\n  if i % 100 == 0:\n    print sess.run(accuracy, feed_dict={x: mnist.test.images, y_: mnist.test.labels})\n    summary_str = sess.run(merged_summary_op)\n    summary_writer.add_summary(summary_str, i)\n\n\nprint \"Done training\"\n\ncorrect_prediction = tf.equal(tf.argmax(y,1), tf.argmax(y_,1))\n\naccuracy = tf.reduce_mean(tf.cast(correct_prediction, \"float\"))\n\n\nprint sess.run(accuracy, feed_dict={x: mnist.test.images, y_: mnist.test.labels})", "body": "*_I am having trouble writing the log file to be able to visualize it in TensorBoard. Can somebody point me in the right direction? I have followed the code given in the tutorial. When run I get the error: *_ \n-  \"expected %s got %s.\" % (cls.**name**, type(msg).**name**))\n  TypeError: Parameter to MergeFrom() must be instance of same class: expected GraphDef got Graph. for field Event.graph_def*\n\nThe error is said to be on line:\n\n``` python\nsummary_writer = tf.train.SummaryWriter('/Users/Cristian/Desktop/log', sess.graph)\n```\n\n**My code:**\n\n``` Python\nimport input_data\nimport tensorflow as tf\n\n\nprint \"Start program\"\nmnist = input_data.read_data_sets(\"MNIST_data/\", one_hot=True)\nprint \"Done loading images\"\n\nx = tf.placeholder(\"float\", [None, 784])\nW = tf.Variable(tf.zeros([784,10]))\nb = tf.Variable(tf.zeros([10]))\n\ny = tf.nn.softmax(tf.matmul(x,W) + b)\n\ny_ = tf.placeholder(\"float\", [None,10])\n\nprint \"Done init\"\n\ncross_entropy = -tf.reduce_sum(y_*tf.log(y))\ntrain_step = tf.train.GradientDescentOptimizer(0.01).minimize(cross_entropy)\n\n\nprint \"Done loading vars\"\n\ninit = tf.initialize_all_variables()\nprint \"Done init vars\"\n\nsess = tf.Session()\nsess.run(init)\n\nprint '------'\nprint type(sess.graph_def)\n\n\ncorrect_prediction = tf.equal(tf.argmax(y,1), tf.argmax(y_,1))\naccuracy = tf.reduce_mean(tf.cast(correct_prediction, \"float\"))\n\nacc = tf.scalar_summary(\"Accuracy:\", accuracy)\n\nmerged_summary_op = tf.merge_all_summaries()\nsummary_writer = tf.train.SummaryWriter('/Users/Cristian/Desktop/log', sess.graph)\n\nprint \"Session started\"\n\n\nfor i in range(2000):\n  batch_xs, batch_ys = mnist.train.next_batch(100)\n  sess.run(train_step, feed_dict={x: batch_xs, y_: batch_ys})\n  if i % 100 == 0:\n    print sess.run(accuracy, feed_dict={x: mnist.test.images, y_: mnist.test.labels})\n    summary_str = sess.run(merged_summary_op)\n    summary_writer.add_summary(summary_str, i)\n\n\nprint \"Done training\"\n\ncorrect_prediction = tf.equal(tf.argmax(y,1), tf.argmax(y_,1))\n\naccuracy = tf.reduce_mean(tf.cast(correct_prediction, \"float\"))\n\n\nprint sess.run(accuracy, feed_dict={x: mnist.test.images, y_: mnist.test.labels})\n\n```\n"}