{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22108", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22108/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22108/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22108/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22108", "id": 357560570, "node_id": "MDU6SXNzdWUzNTc1NjA1NzA=", "number": 22108, "title": "tf.nightly-gpu will create \"nan\" in  next batch train value", "user": {"login": "Q82822", "id": 36806042, "node_id": "MDQ6VXNlcjM2ODA2MDQy", "avatar_url": "https://avatars2.githubusercontent.com/u/36806042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Q82822", "html_url": "https://github.com/Q82822", "followers_url": "https://api.github.com/users/Q82822/followers", "following_url": "https://api.github.com/users/Q82822/following{/other_user}", "gists_url": "https://api.github.com/users/Q82822/gists{/gist_id}", "starred_url": "https://api.github.com/users/Q82822/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Q82822/subscriptions", "organizations_url": "https://api.github.com/users/Q82822/orgs", "repos_url": "https://api.github.com/users/Q82822/repos", "events_url": "https://api.github.com/users/Q82822/events{/privacy}", "received_events_url": "https://api.github.com/users/Q82822/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "shivaniag", "id": 16565716, "node_id": "MDQ6VXNlcjE2NTY1NzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/16565716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivaniag", "html_url": "https://github.com/shivaniag", "followers_url": "https://api.github.com/users/shivaniag/followers", "following_url": "https://api.github.com/users/shivaniag/following{/other_user}", "gists_url": "https://api.github.com/users/shivaniag/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivaniag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivaniag/subscriptions", "organizations_url": "https://api.github.com/users/shivaniag/orgs", "repos_url": "https://api.github.com/users/shivaniag/repos", "events_url": "https://api.github.com/users/shivaniag/events{/privacy}", "received_events_url": "https://api.github.com/users/shivaniag/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-09-06T09:01:22Z", "updated_at": "2018-11-22T18:58:30Z", "closed_at": null, "author_association": "NONE", "body_html": "<hr>\n<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>:</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>:Linux Ubuntu 16.04</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>:</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.11.0   (use tf-night-gpu)</li>\n<li><strong>Python version</strong>:2.7</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>:</li>\n<li><strong>CUDA/cuDNN version</strong>: 9.0 /7.1</li>\n<li><strong>GPU model and memory</strong>:</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>I installed  tf-night-gpu, and my<code> tf.__version__</code> was <code>1.11.0-dev20180905</code><br>\nit only use <code>tf-night-gpu</code> can create  the <code>tf.keras.applications.InceptionResNetV2</code> model so i can't without. my problem is the  <code>tf-night-gpu</code> will create <code>nan</code>  in  next batch model output</p>\n<h3>Source code / logs</h3>\n<p>in first batch train the</p>\n<pre><code>('keras.layers.Embedding_input: ', &lt;tf.Tensor: id=4586198, shape=(64, 1), dtype=int32, numpy=\narray([[3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3]], dtype=int32)&gt;)\n('Embedding_output:  ', &lt;tf.Tensor: id=4586379, shape=(64, 1, 256), dtype=float32, numpy=\narray([[[ 0.01097491, -0.02041122,  0.04823625, ..., -0.0155656 ,\n          0.01521399, -0.0496642 ]],\n\n       [[ 0.01097491, -0.02041122,  0.04823625, ..., -0.0155656 ,\n          0.01521399, -0.0496642 ]],\n\n       [[ 0.01097491, -0.02041122,  0.04823625, ..., -0.0155656 ,\n          0.01521399, -0.0496642 ]],\n\n       ...,\n\n       [[ 0.01097491, -0.02041122,  0.04823625, ..., -0.0155656 ,\n          0.01521399, -0.0496642 ]],\n\n       [[ 0.01097491, -0.02041122,  0.04823625, ..., -0.0155656 ,\n          0.01521399, -0.0496642 ]],\n\n       [[ 0.01097491, -0.02041122,  0.04823625, ..., -0.0155656 ,\n          0.01521399, -0.0496642 ]]], dtype=float32)&gt;)\n</code></pre>\n<p>the next batch train , have same <code>keras.layers.Embedding_input: </code></p>\n<pre><code>`Epoch 1 Batch 0 Loss 2.0415\n(''keras.layers.Embedding_input:: ', &lt;tf.Tensor: id=4607289, shape=(64, 1), dtype=int32, numpy=\narray([[3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3]], dtype=int32)&gt;)\n(''keras.layers.Embedding_output::  ', &lt;tf.Tensor: id=4607374, shape=(64, 1, 256), dtype=float32, numpy=\narray([[[nan, nan, nan, ..., nan, nan, nan]],\n\n       [[nan, nan, nan, ..., nan, nan, nan]],\n\n       [[nan, nan, nan, ..., nan, nan, nan]],\n\n\n       [[nan, nan, nan, ..., nan, nan, nan]],\n\n       [[nan, nan, nan, ..., nan, nan, nan]],\n\n       [[nan, nan, nan, ..., nan, nan, nan]]], dtype=float32)&gt;)`\n</code></pre>\n<p>and \"nan\" forever.....</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow):\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):Linux Ubuntu 16.04\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device:\nTensorFlow installed from (source or binary): source\nTensorFlow version (use command below): 1.11.0   (use tf-night-gpu)\nPython version:2.7\nBazel version (if compiling from source):\nGCC/Compiler version (if compiling from source):\nCUDA/cuDNN version: 9.0 /7.1\nGPU model and memory:\nExact command to reproduce:\n\nDescribe the problem\nI installed  tf-night-gpu, and my tf.__version__ was 1.11.0-dev20180905\nit only use tf-night-gpu can create  the tf.keras.applications.InceptionResNetV2 model so i can't without. my problem is the  tf-night-gpu will create nan  in  next batch model output\nSource code / logs\nin first batch train the\n('keras.layers.Embedding_input: ', <tf.Tensor: id=4586198, shape=(64, 1), dtype=int32, numpy=\narray([[3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3]], dtype=int32)>)\n('Embedding_output:  ', <tf.Tensor: id=4586379, shape=(64, 1, 256), dtype=float32, numpy=\narray([[[ 0.01097491, -0.02041122,  0.04823625, ..., -0.0155656 ,\n          0.01521399, -0.0496642 ]],\n\n       [[ 0.01097491, -0.02041122,  0.04823625, ..., -0.0155656 ,\n          0.01521399, -0.0496642 ]],\n\n       [[ 0.01097491, -0.02041122,  0.04823625, ..., -0.0155656 ,\n          0.01521399, -0.0496642 ]],\n\n       ...,\n\n       [[ 0.01097491, -0.02041122,  0.04823625, ..., -0.0155656 ,\n          0.01521399, -0.0496642 ]],\n\n       [[ 0.01097491, -0.02041122,  0.04823625, ..., -0.0155656 ,\n          0.01521399, -0.0496642 ]],\n\n       [[ 0.01097491, -0.02041122,  0.04823625, ..., -0.0155656 ,\n          0.01521399, -0.0496642 ]]], dtype=float32)>)\n\nthe next batch train , have same keras.layers.Embedding_input: \n`Epoch 1 Batch 0 Loss 2.0415\n(''keras.layers.Embedding_input:: ', <tf.Tensor: id=4607289, shape=(64, 1), dtype=int32, numpy=\narray([[3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3],\n       [3]], dtype=int32)>)\n(''keras.layers.Embedding_output::  ', <tf.Tensor: id=4607374, shape=(64, 1, 256), dtype=float32, numpy=\narray([[[nan, nan, nan, ..., nan, nan, nan]],\n\n       [[nan, nan, nan, ..., nan, nan, nan]],\n\n       [[nan, nan, nan, ..., nan, nan, nan]],\n\n\n       [[nan, nan, nan, ..., nan, nan, nan]],\n\n       [[nan, nan, nan, ..., nan, nan, nan]],\n\n       [[nan, nan, nan, ..., nan, nan, nan]]], dtype=float32)>)`\n\nand \"nan\" forever.....", "body": "\r\n------------------------\r\n\r\n### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: \r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**:Linux Ubuntu 16.04\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**:\r\n- **TensorFlow installed from (source or binary)**: source\r\n- **TensorFlow version (use command below)**: 1.11.0   (use tf-night-gpu)\r\n- **Python version**:2.7\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**:\r\n- **CUDA/cuDNN version**: 9.0 /7.1\r\n- **GPU model and memory**:\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\nI installed  tf-night-gpu, and my` tf.__version__` was `1.11.0-dev20180905`\r\nit only use `tf-night-gpu` can create  the `tf.keras.applications.InceptionResNetV2` model so i can't without. my problem is the  `tf-night-gpu` will create `nan`  in  next batch model output \r\n\r\n### Source code / logs\r\nin first batch train the\r\n```\r\n('keras.layers.Embedding_input: ', <tf.Tensor: id=4586198, shape=(64, 1), dtype=int32, numpy=\r\narray([[3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3]], dtype=int32)>)\r\n('Embedding_output:  ', <tf.Tensor: id=4586379, shape=(64, 1, 256), dtype=float32, numpy=\r\narray([[[ 0.01097491, -0.02041122,  0.04823625, ..., -0.0155656 ,\r\n          0.01521399, -0.0496642 ]],\r\n\r\n       [[ 0.01097491, -0.02041122,  0.04823625, ..., -0.0155656 ,\r\n          0.01521399, -0.0496642 ]],\r\n\r\n       [[ 0.01097491, -0.02041122,  0.04823625, ..., -0.0155656 ,\r\n          0.01521399, -0.0496642 ]],\r\n\r\n       ...,\r\n\r\n       [[ 0.01097491, -0.02041122,  0.04823625, ..., -0.0155656 ,\r\n          0.01521399, -0.0496642 ]],\r\n\r\n       [[ 0.01097491, -0.02041122,  0.04823625, ..., -0.0155656 ,\r\n          0.01521399, -0.0496642 ]],\r\n\r\n       [[ 0.01097491, -0.02041122,  0.04823625, ..., -0.0155656 ,\r\n          0.01521399, -0.0496642 ]]], dtype=float32)>)\r\n```\r\nthe next batch train , have same `keras.layers.Embedding_input: `\r\n```\r\n`Epoch 1 Batch 0 Loss 2.0415\r\n(''keras.layers.Embedding_input:: ', <tf.Tensor: id=4607289, shape=(64, 1), dtype=int32, numpy=\r\narray([[3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3],\r\n       [3]], dtype=int32)>)\r\n(''keras.layers.Embedding_output::  ', <tf.Tensor: id=4607374, shape=(64, 1, 256), dtype=float32, numpy=\r\narray([[[nan, nan, nan, ..., nan, nan, nan]],\r\n\r\n       [[nan, nan, nan, ..., nan, nan, nan]],\r\n\r\n       [[nan, nan, nan, ..., nan, nan, nan]],\r\n\r\n\r\n       [[nan, nan, nan, ..., nan, nan, nan]],\r\n\r\n       [[nan, nan, nan, ..., nan, nan, nan]],\r\n\r\n       [[nan, nan, nan, ..., nan, nan, nan]]], dtype=float32)>)`\r\n```\r\nand \"nan\" forever....."}