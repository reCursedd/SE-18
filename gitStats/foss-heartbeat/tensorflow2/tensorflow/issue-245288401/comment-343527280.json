{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/343527280", "html_url": "https://github.com/tensorflow/tensorflow/issues/11736#issuecomment-343527280", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11736", "id": 343527280, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzUyNzI4MA==", "user": {"login": "aktivkohle", "id": 8266960, "node_id": "MDQ6VXNlcjgyNjY5NjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/8266960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aktivkohle", "html_url": "https://github.com/aktivkohle", "followers_url": "https://api.github.com/users/aktivkohle/followers", "following_url": "https://api.github.com/users/aktivkohle/following{/other_user}", "gists_url": "https://api.github.com/users/aktivkohle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aktivkohle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aktivkohle/subscriptions", "organizations_url": "https://api.github.com/users/aktivkohle/orgs", "repos_url": "https://api.github.com/users/aktivkohle/repos", "events_url": "https://api.github.com/users/aktivkohle/events{/privacy}", "received_events_url": "https://api.github.com/users/aktivkohle/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-10T16:55:08Z", "updated_at": "2017-11-10T16:55:08Z", "author_association": "NONE", "body_html": "<p>I was also getting the exact same error <code>crosstool_wrapper_driver_is_not_gcc failed</code> no matter what I did, tried also an older gcc, different bazels. It's now run to completion thanks to <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=657060\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/YusukeSuzuki\">@YusukeSuzuki</a> comment above. Two things which fixed it were</p>\n<ul>\n<li>Use Python 3.5 rather than Python 3.6</li>\n<li>Do not use <code>pyenv</code> as I was using for the virtual environment instead follow exactly the instructions <a href=\"https://www.tensorflow.org/install/install_linux#installing_with_virtualenv\" rel=\"nofollow\">here</a> using the <code>activate</code> command for the <code>virtualenv</code> which is contained within the tensorflow repository which you clone when building from sources.</li>\n</ul>\n<p>Of course the CUDA and Cudnn paths had to be right. I just think tensorflow is somehow incompatible with <code>pyenv</code> there's even a post somewhere about it. It has made a bit of a mess of my folders, having most of the project in a <code>pyenv</code> and the tensorflow dependent section in a separate <code>virtualenv</code>  folder but at least at least it installed properly and runs without any complaints <em>\"Tensorflow was not installed according to...\"</em></p>", "body_text": "I was also getting the exact same error crosstool_wrapper_driver_is_not_gcc failed no matter what I did, tried also an older gcc, different bazels. It's now run to completion thanks to @YusukeSuzuki comment above. Two things which fixed it were\n\nUse Python 3.5 rather than Python 3.6\nDo not use pyenv as I was using for the virtual environment instead follow exactly the instructions here using the activate command for the virtualenv which is contained within the tensorflow repository which you clone when building from sources.\n\nOf course the CUDA and Cudnn paths had to be right. I just think tensorflow is somehow incompatible with pyenv there's even a post somewhere about it. It has made a bit of a mess of my folders, having most of the project in a pyenv and the tensorflow dependent section in a separate virtualenv  folder but at least at least it installed properly and runs without any complaints \"Tensorflow was not installed according to...\"", "body": "I was also getting the exact same error `crosstool_wrapper_driver_is_not_gcc failed` no matter what I did, tried also an older gcc, different bazels. It's now run to completion thanks to @YusukeSuzuki comment above. Two things which fixed it were\r\n\r\n- Use Python 3.5 rather than Python 3.6\r\n- Do not use `pyenv` as I was using for the virtual environment instead follow exactly the instructions [here](https://www.tensorflow.org/install/install_linux#installing_with_virtualenv) using the `activate` command for the `virtualenv` which is contained within the tensorflow repository which you clone when building from sources. \r\n\r\nOf course the CUDA and Cudnn paths had to be right. I just think tensorflow is somehow incompatible with `pyenv` there's even a post somewhere about it. It has made a bit of a mess of my folders, having most of the project in a `pyenv` and the tensorflow dependent section in a separate `virtualenv`  folder but at least at least it installed properly and runs without any complaints _\"Tensorflow was not installed according to...\"_"}