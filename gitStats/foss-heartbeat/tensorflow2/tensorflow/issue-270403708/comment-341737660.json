{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/341737660", "html_url": "https://github.com/tensorflow/tensorflow/issues/14162#issuecomment-341737660", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14162", "id": 341737660, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTczNzY2MA==", "user": {"login": "ppwwyyxx", "id": 1381301, "node_id": "MDQ6VXNlcjEzODEzMDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1381301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ppwwyyxx", "html_url": "https://github.com/ppwwyyxx", "followers_url": "https://api.github.com/users/ppwwyyxx/followers", "following_url": "https://api.github.com/users/ppwwyyxx/following{/other_user}", "gists_url": "https://api.github.com/users/ppwwyyxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/ppwwyyxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ppwwyyxx/subscriptions", "organizations_url": "https://api.github.com/users/ppwwyyxx/orgs", "repos_url": "https://api.github.com/users/ppwwyyxx/repos", "events_url": "https://api.github.com/users/ppwwyyxx/events{/privacy}", "received_events_url": "https://api.github.com/users/ppwwyyxx/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-03T15:31:11Z", "updated_at": "2017-11-03T15:31:33Z", "author_association": "CONTRIBUTOR", "body_html": "<p>You'll need to give a small repro then, for bugs like this. At least it works in my test:</p>\n<div class=\"highlight highlight-source-python\"><pre>x <span class=\"pl-k\">=</span> tf.get_variable(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">5</span>])\ny <span class=\"pl-k\">=</span> x <span class=\"pl-k\">*</span> <span class=\"pl-c1\">2</span>\nloss <span class=\"pl-k\">=</span> tf.reduce_mean(y)\ngs <span class=\"pl-k\">=</span> tf.get_variable(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>global_step<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>[], <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.int64)\ngs_inc <span class=\"pl-k\">=</span> tf.assign_add(gs, <span class=\"pl-c1\">1</span>)\nloss <span class=\"pl-k\">=</span> tf.where(tf.greater(gs_inc, <span class=\"pl-c1\">2</span>), loss, tf.stop_gradient(loss))\ngrad <span class=\"pl-k\">=</span> tf.gradients(loss, x)\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    sess.run(tf.global_variables_initializer())\n    <span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">5</span>):\n        <span class=\"pl-c1\">print</span>(sess.run([grad, gs_inc]))</pre></div>\n<pre><code>[[array([ 0.,  0.,  0.,  0.,  0.], dtype=float32)], 1]\n[[array([ 0.,  0.,  0.,  0.,  0.], dtype=float32)], 2]\n[[array([ 0.40000001,  0.40000001,  0.40000001,  0.40000001,  0.40000001], dtype=float32)], 3]\n[[array([ 0.40000001,  0.40000001,  0.40000001,  0.40000001,  0.40000001], dtype=float32)], 4]\n[[array([ 0.40000001,  0.40000001,  0.40000001,  0.40000001,  0.40000001], dtype=float32)], 5]\n</code></pre>", "body_text": "You'll need to give a small repro then, for bugs like this. At least it works in my test:\nx = tf.get_variable('a', shape=[5])\ny = x * 2\nloss = tf.reduce_mean(y)\ngs = tf.get_variable('global_step', shape=[], dtype=tf.int64)\ngs_inc = tf.assign_add(gs, 1)\nloss = tf.where(tf.greater(gs_inc, 2), loss, tf.stop_gradient(loss))\ngrad = tf.gradients(loss, x)\nwith tf.Session() as sess:\n    sess.run(tf.global_variables_initializer())\n    for i in range(5):\n        print(sess.run([grad, gs_inc]))\n[[array([ 0.,  0.,  0.,  0.,  0.], dtype=float32)], 1]\n[[array([ 0.,  0.,  0.,  0.,  0.], dtype=float32)], 2]\n[[array([ 0.40000001,  0.40000001,  0.40000001,  0.40000001,  0.40000001], dtype=float32)], 3]\n[[array([ 0.40000001,  0.40000001,  0.40000001,  0.40000001,  0.40000001], dtype=float32)], 4]\n[[array([ 0.40000001,  0.40000001,  0.40000001,  0.40000001,  0.40000001], dtype=float32)], 5]", "body": "You'll need to give a small repro then, for bugs like this. At least it works in my test:\r\n```python\r\nx = tf.get_variable('a', shape=[5])\r\ny = x * 2\r\nloss = tf.reduce_mean(y)\r\ngs = tf.get_variable('global_step', shape=[], dtype=tf.int64)\r\ngs_inc = tf.assign_add(gs, 1)\r\nloss = tf.where(tf.greater(gs_inc, 2), loss, tf.stop_gradient(loss))\r\ngrad = tf.gradients(loss, x)\r\nwith tf.Session() as sess:\r\n    sess.run(tf.global_variables_initializer())\r\n    for i in range(5):\r\n        print(sess.run([grad, gs_inc]))\r\n```\r\n```\r\n[[array([ 0.,  0.,  0.,  0.,  0.], dtype=float32)], 1]\r\n[[array([ 0.,  0.,  0.,  0.,  0.], dtype=float32)], 2]\r\n[[array([ 0.40000001,  0.40000001,  0.40000001,  0.40000001,  0.40000001], dtype=float32)], 3]\r\n[[array([ 0.40000001,  0.40000001,  0.40000001,  0.40000001,  0.40000001], dtype=float32)], 4]\r\n[[array([ 0.40000001,  0.40000001,  0.40000001,  0.40000001,  0.40000001], dtype=float32)], 5]\r\n```"}