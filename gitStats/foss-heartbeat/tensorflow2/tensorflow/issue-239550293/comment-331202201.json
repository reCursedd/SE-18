{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/331202201", "html_url": "https://github.com/tensorflow/tensorflow/issues/11144#issuecomment-331202201", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11144", "id": 331202201, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTIwMjIwMQ==", "user": {"login": "rubenvereecken", "id": 5216553, "node_id": "MDQ6VXNlcjUyMTY1NTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/5216553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rubenvereecken", "html_url": "https://github.com/rubenvereecken", "followers_url": "https://api.github.com/users/rubenvereecken/followers", "following_url": "https://api.github.com/users/rubenvereecken/following{/other_user}", "gists_url": "https://api.github.com/users/rubenvereecken/gists{/gist_id}", "starred_url": "https://api.github.com/users/rubenvereecken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rubenvereecken/subscriptions", "organizations_url": "https://api.github.com/users/rubenvereecken/orgs", "repos_url": "https://api.github.com/users/rubenvereecken/repos", "events_url": "https://api.github.com/users/rubenvereecken/events{/privacy}", "received_events_url": "https://api.github.com/users/rubenvereecken/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-21T16:00:09Z", "updated_at": "2017-09-21T16:50:27Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I encountered the same issue using both <code>BasicLSTMCell</code> and <code>LSTMCell</code>. <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/rnn_cell_impl.py#L566\">This line</a> errors because <code>state</code> is a tensor instead of the expected tuple. I verified that all cells involved had <code>_state_is_tuple</code> set to <code>True</code>.</p>\n<p>The documentation is quite a bit off, but it works if you pass in an array of cell states, with a number of elements equal to the number of stacked cells. So something like <code>multicell(x, [(c1, h1), (c2, h2),...])</code> works. It doesn't confirm to the recurrent API though. From the top of my head, one fix would be to stack states and let the MultiRNNCell unstack them, so from a user perspective it's still just a tuple state.</p>", "body_text": "I encountered the same issue using both BasicLSTMCell and LSTMCell. This line errors because state is a tensor instead of the expected tuple. I verified that all cells involved had _state_is_tuple set to True.\nThe documentation is quite a bit off, but it works if you pass in an array of cell states, with a number of elements equal to the number of stacked cells. So something like multicell(x, [(c1, h1), (c2, h2),...]) works. It doesn't confirm to the recurrent API though. From the top of my head, one fix would be to stack states and let the MultiRNNCell unstack them, so from a user perspective it's still just a tuple state.", "body": "I encountered the same issue using both `BasicLSTMCell` and `LSTMCell`. [This line](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/rnn_cell_impl.py#L566) errors because `state` is a tensor instead of the expected tuple. I verified that all cells involved had `_state_is_tuple` set to `True`.\r\n\r\nThe documentation is quite a bit off, but it works if you pass in an array of cell states, with a number of elements equal to the number of stacked cells. So something like `multicell(x, [(c1, h1), (c2, h2),...])` works. It doesn't confirm to the recurrent API though. From the top of my head, one fix would be to stack states and let the MultiRNNCell unstack them, so from a user perspective it's still just a tuple state."}