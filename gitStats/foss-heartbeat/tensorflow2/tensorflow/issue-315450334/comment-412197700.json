{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/412197700", "html_url": "https://github.com/tensorflow/tensorflow/issues/18649#issuecomment-412197700", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18649", "id": 412197700, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjE5NzcwMA==", "user": {"login": "ringw", "id": 1391644, "node_id": "MDQ6VXNlcjEzOTE2NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1391644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ringw", "html_url": "https://github.com/ringw", "followers_url": "https://api.github.com/users/ringw/followers", "following_url": "https://api.github.com/users/ringw/following{/other_user}", "gists_url": "https://api.github.com/users/ringw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ringw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ringw/subscriptions", "organizations_url": "https://api.github.com/users/ringw/orgs", "repos_url": "https://api.github.com/users/ringw/repos", "events_url": "https://api.github.com/users/ringw/events{/privacy}", "received_events_url": "https://api.github.com/users/ringw/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-10T20:31:20Z", "updated_at": "2018-08-10T20:31:20Z", "author_association": "MEMBER", "body_html": "<p>Sorry for the delay. Closing because I think this would require another C++ kernel. The gradient for bilinear interpolation can't be calculated using the existing projective transformation, because the interpolation would also depend on the gradient of the transformation matrix. I don't think we can support a second C++ kernel for this particular case.</p>\n<p>I think this use case is something like <a href=\"https://en.wikipedia.org/wiki/Optical_flow\" rel=\"nofollow\">optical flow</a> between two frames. However, I'm not sure if gradient descent on the transformation matrix will work as well as some of the methods mentioned in the article. It also might be out of scope for TensorFlow, where the purpose of image processing is mostly for data augmentation for a classifier, and this kind of computer vision is better handled by OpenCV.</p>", "body_text": "Sorry for the delay. Closing because I think this would require another C++ kernel. The gradient for bilinear interpolation can't be calculated using the existing projective transformation, because the interpolation would also depend on the gradient of the transformation matrix. I don't think we can support a second C++ kernel for this particular case.\nI think this use case is something like optical flow between two frames. However, I'm not sure if gradient descent on the transformation matrix will work as well as some of the methods mentioned in the article. It also might be out of scope for TensorFlow, where the purpose of image processing is mostly for data augmentation for a classifier, and this kind of computer vision is better handled by OpenCV.", "body": "Sorry for the delay. Closing because I think this would require another C++ kernel. The gradient for bilinear interpolation can't be calculated using the existing projective transformation, because the interpolation would also depend on the gradient of the transformation matrix. I don't think we can support a second C++ kernel for this particular case.\r\n\r\nI think this use case is something like [optical flow](https://en.wikipedia.org/wiki/Optical_flow) between two frames. However, I'm not sure if gradient descent on the transformation matrix will work as well as some of the methods mentioned in the article. It also might be out of scope for TensorFlow, where the purpose of image processing is mostly for data augmentation for a classifier, and this kind of computer vision is better handled by OpenCV. "}