{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/348030487", "html_url": "https://github.com/tensorflow/tensorflow/issues/14948#issuecomment-348030487", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14948", "id": 348030487, "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODAzMDQ4Nw==", "user": {"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-29T23:22:50Z", "updated_at": "2017-11-29T23:22:50Z", "author_association": "MEMBER", "body_html": "<p>Well pywrap_tensorflow_internal is the entire c++ backend of TensorFlow. I.e. it's not just one file, it's the backend that runs everything. Cou'll at the very least need to run build_pip_package as<br>\nbazel run tensorflow/tools/pip_package:build_pip_package<br>\nBefore you do that edit the build_pip_package command to output to a specific directory  (i.e. replace</p>\n<pre><code>  TMPDIR=$(mktemp -d -t tmp.XXXXXXXXXX)\n</code></pre>\n<p>with some specific directory. Then you should have a directory with a working setup.py. Maybe this is what you are doing. But at least from there you can look if the pywrap_tensorflow_internal. However, this installation path is not officially supported, so I really have no way to test any of this on CentOS7.</p>", "body_text": "Well pywrap_tensorflow_internal is the entire c++ backend of TensorFlow. I.e. it's not just one file, it's the backend that runs everything. Cou'll at the very least need to run build_pip_package as\nbazel run tensorflow/tools/pip_package:build_pip_package\nBefore you do that edit the build_pip_package command to output to a specific directory  (i.e. replace\n  TMPDIR=$(mktemp -d -t tmp.XXXXXXXXXX)\n\nwith some specific directory. Then you should have a directory with a working setup.py. Maybe this is what you are doing. But at least from there you can look if the pywrap_tensorflow_internal. However, this installation path is not officially supported, so I really have no way to test any of this on CentOS7.", "body": "Well pywrap_tensorflow_internal is the entire c++ backend of TensorFlow. I.e. it's not just one file, it's the backend that runs everything. Cou'll at the very least need to run build_pip_package as\r\nbazel run tensorflow/tools/pip_package:build_pip_package \r\nBefore you do that edit the build_pip_package command to output to a specific directory  (i.e. replace\r\n```\r\n  TMPDIR=$(mktemp -d -t tmp.XXXXXXXXXX)\r\n```\r\nwith some specific directory. Then you should have a directory with a working setup.py. Maybe this is what you are doing. But at least from there you can look if the pywrap_tensorflow_internal. However, this installation path is not officially supported, so I really have no way to test any of this on CentOS7."}