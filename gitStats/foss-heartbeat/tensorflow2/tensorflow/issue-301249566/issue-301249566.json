{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17339", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17339/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17339/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17339/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/17339", "id": 301249566, "node_id": "MDU6SXNzdWUzMDEyNDk1NjY=", "number": 17339, "title": "tf 1.6rc1 feed_dict is slow on multi-socket machines", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-01T01:48:43Z", "updated_at": "2018-03-02T19:42:06Z", "closed_at": "2018-03-02T19:42:06Z", "author_association": "CONTRIBUTOR", "body_html": "<p>It seems as if 1.6rc1 introduces a copy in <code>feed_dict</code> on machines with &gt;1 physical socket. Similar to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"299885264\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/17233\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/17233/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/17233\">#17233</a>, but this also happens if numpy array is aligned. Fetching array from tensorflow, then feeding it back in happens at single-core memcpy speed. Downgrading to 1.5 restores fast behavior (4x faster)</p>\n<p><a href=\"https://github.com/diux-dev/cluster/blob/master/yuxin_numpy/tf_numpy_benchmark.py\">https://github.com/diux-dev/cluster/blob/master/yuxin_numpy/tf_numpy_benchmark.py</a></p>\n<pre><code># 1.6 rc1 on p3.16xlarge (2 Xeon V4 sockets) = slow\n__git_version__: v1.6.0-rc1-607-g0bde713c06\nhttps://github.com/tensorflow/tensorflow/commit/0bde713c06\npython tf_numpy_benchmark.py --benchmark=feed_cpu_tensor --allocator=tf --num-iters=51 # 10.7\nfeed_cpu_tensor               :   2.5 GB/sec, min: 39.89, median: 40.18, mean: 40.26\n\n# switch to tf 1.5, things are fast\npip install tensorflow\npython tf_numpy_benchmark.py --benchmark=feed_cpu_tensor --allocator=tf --num-iters=51 # 10.7\nfeed_cpu_tensor               :  13.0 GB/sec, min:  7.67, median:  8.88, mean:  9.26\n\n# switch to p3.8xlarge machine (1 socket), and latest TF, things are also fast\n# tensorflow.__git_version__ = v1.6.0-rc1-562-g26ae3287a1\npython tf_numpy_benchmark.py --benchmark=feed_cpu_tensor --allocator=tf --num-iters=51 # 10.7\nfeed_cpu_tensor               :  10.5 GB/sec, min:  9.49, median: 10.83, mean: 10.86\n</code></pre>", "body_text": "It seems as if 1.6rc1 introduces a copy in feed_dict on machines with >1 physical socket. Similar to #17233, but this also happens if numpy array is aligned. Fetching array from tensorflow, then feeding it back in happens at single-core memcpy speed. Downgrading to 1.5 restores fast behavior (4x faster)\nhttps://github.com/diux-dev/cluster/blob/master/yuxin_numpy/tf_numpy_benchmark.py\n# 1.6 rc1 on p3.16xlarge (2 Xeon V4 sockets) = slow\n__git_version__: v1.6.0-rc1-607-g0bde713c06\nhttps://github.com/tensorflow/tensorflow/commit/0bde713c06\npython tf_numpy_benchmark.py --benchmark=feed_cpu_tensor --allocator=tf --num-iters=51 # 10.7\nfeed_cpu_tensor               :   2.5 GB/sec, min: 39.89, median: 40.18, mean: 40.26\n\n# switch to tf 1.5, things are fast\npip install tensorflow\npython tf_numpy_benchmark.py --benchmark=feed_cpu_tensor --allocator=tf --num-iters=51 # 10.7\nfeed_cpu_tensor               :  13.0 GB/sec, min:  7.67, median:  8.88, mean:  9.26\n\n# switch to p3.8xlarge machine (1 socket), and latest TF, things are also fast\n# tensorflow.__git_version__ = v1.6.0-rc1-562-g26ae3287a1\npython tf_numpy_benchmark.py --benchmark=feed_cpu_tensor --allocator=tf --num-iters=51 # 10.7\nfeed_cpu_tensor               :  10.5 GB/sec, min:  9.49, median: 10.83, mean: 10.86", "body": "It seems as if 1.6rc1 introduces a copy in `feed_dict` on machines with >1 physical socket. Similar to https://github.com/tensorflow/tensorflow/issues/17233, but this also happens if numpy array is aligned. Fetching array from tensorflow, then feeding it back in happens at single-core memcpy speed. Downgrading to 1.5 restores fast behavior (4x faster)\r\n\r\nhttps://github.com/diux-dev/cluster/blob/master/yuxin_numpy/tf_numpy_benchmark.py\r\n```\r\n# 1.6 rc1 on p3.16xlarge (2 Xeon V4 sockets) = slow\r\n__git_version__: v1.6.0-rc1-607-g0bde713c06\r\nhttps://github.com/tensorflow/tensorflow/commit/0bde713c06\r\npython tf_numpy_benchmark.py --benchmark=feed_cpu_tensor --allocator=tf --num-iters=51 # 10.7\r\nfeed_cpu_tensor               :   2.5 GB/sec, min: 39.89, median: 40.18, mean: 40.26\r\n\r\n# switch to tf 1.5, things are fast\r\npip install tensorflow\r\npython tf_numpy_benchmark.py --benchmark=feed_cpu_tensor --allocator=tf --num-iters=51 # 10.7\r\nfeed_cpu_tensor               :  13.0 GB/sec, min:  7.67, median:  8.88, mean:  9.26\r\n\r\n# switch to p3.8xlarge machine (1 socket), and latest TF, things are also fast\r\n# tensorflow.__git_version__ = v1.6.0-rc1-562-g26ae3287a1\r\npython tf_numpy_benchmark.py --benchmark=feed_cpu_tensor --allocator=tf --num-iters=51 # 10.7\r\nfeed_cpu_tensor               :  10.5 GB/sec, min:  9.49, median: 10.83, mean: 10.86\r\n```"}