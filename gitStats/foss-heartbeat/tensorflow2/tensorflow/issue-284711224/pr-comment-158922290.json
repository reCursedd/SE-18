{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/158922290", "pull_request_review_id": 85795057, "id": 158922290, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1ODkyMjI5MA==", "diff_hunk": "@@ -1252,6 +1252,52 @@ def sparse_mask(a, mask_indices, name=None):\n     return ops.IndexedSlices(out_values, out_indices, a.dense_shape)\n \n \n+def unique(x, out_idx=None, name=None, axis=None):", "path": "tensorflow/python/ops/array_ops.py", "position": null, "original_position": 4, "commit_id": "5063c9e283c3f089d40e4ef362d14fb85311e1b5", "original_commit_id": "5b8b36538cb785259ae7bdc22d16406064f50c41", "user": {"login": "yongtang", "id": 6932348, "node_id": "MDQ6VXNlcjY5MzIzNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6932348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yongtang", "html_url": "https://github.com/yongtang", "followers_url": "https://api.github.com/users/yongtang/followers", "following_url": "https://api.github.com/users/yongtang/following{/other_user}", "gists_url": "https://api.github.com/users/yongtang/gists{/gist_id}", "starred_url": "https://api.github.com/users/yongtang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yongtang/subscriptions", "organizations_url": "https://api.github.com/users/yongtang/orgs", "repos_url": "https://api.github.com/users/yongtang/repos", "events_url": "https://api.github.com/users/yongtang/events{/privacy}", "received_events_url": "https://api.github.com/users/yongtang/received_events", "type": "User", "site_admin": false}, "body": "@drpngx It should be possible if we add a line `    .Input(\"axis: int64\")` to array_ops.cc:\r\n```\r\nREGISTER_OP(\"Unique\")\r\n    .Input(\"x: T\")\r\n    .Output(\"y: T\")\r\n    .Output(\"idx: out_idx\")\r\n    .Attr(\"T: type\")\r\n    .Attr(\"out_idx: {int32, int64} = DT_INT32\")\r\n    .SetShapeFn([](InferenceContext* c) {\r\n      c->set_output(0, c->Vector(InferenceContext::kUnknownDim));\r\n      c->set_output(1, c->input(0));\r\n      return Status::OK();\r\n    })\r\n```\r\n\r\nThough that means one additional input for the existing API. Will that be OK?", "created_at": "2017-12-28T10:03:43Z", "updated_at": "2018-01-11T18:52:27Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/15654#discussion_r158922290", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/15654", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/158922290"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/15654#discussion_r158922290"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/15654"}}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=20959853\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/drpngx\">@drpngx</a> It should be possible if we add a line <code>    .Input(\"axis: int64\")</code> to array_ops.cc:</p>\n<pre><code>REGISTER_OP(\"Unique\")\n    .Input(\"x: T\")\n    .Output(\"y: T\")\n    .Output(\"idx: out_idx\")\n    .Attr(\"T: type\")\n    .Attr(\"out_idx: {int32, int64} = DT_INT32\")\n    .SetShapeFn([](InferenceContext* c) {\n      c-&gt;set_output(0, c-&gt;Vector(InferenceContext::kUnknownDim));\n      c-&gt;set_output(1, c-&gt;input(0));\n      return Status::OK();\n    })\n</code></pre>\n<p>Though that means one additional input for the existing API. Will that be OK?</p>", "body_text": "@drpngx It should be possible if we add a line     .Input(\"axis: int64\") to array_ops.cc:\nREGISTER_OP(\"Unique\")\n    .Input(\"x: T\")\n    .Output(\"y: T\")\n    .Output(\"idx: out_idx\")\n    .Attr(\"T: type\")\n    .Attr(\"out_idx: {int32, int64} = DT_INT32\")\n    .SetShapeFn([](InferenceContext* c) {\n      c->set_output(0, c->Vector(InferenceContext::kUnknownDim));\n      c->set_output(1, c->input(0));\n      return Status::OK();\n    })\n\nThough that means one additional input for the existing API. Will that be OK?", "in_reply_to_id": 158881211}