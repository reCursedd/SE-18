{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/368397303", "html_url": "https://github.com/tensorflow/tensorflow/issues/17191#issuecomment-368397303", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/17191", "id": 368397303, "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODM5NzMwMw==", "user": {"login": "SofaPotatos", "id": 8243382, "node_id": "MDQ6VXNlcjgyNDMzODI=", "avatar_url": "https://avatars0.githubusercontent.com/u/8243382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SofaPotatos", "html_url": "https://github.com/SofaPotatos", "followers_url": "https://api.github.com/users/SofaPotatos/followers", "following_url": "https://api.github.com/users/SofaPotatos/following{/other_user}", "gists_url": "https://api.github.com/users/SofaPotatos/gists{/gist_id}", "starred_url": "https://api.github.com/users/SofaPotatos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SofaPotatos/subscriptions", "organizations_url": "https://api.github.com/users/SofaPotatos/orgs", "repos_url": "https://api.github.com/users/SofaPotatos/repos", "events_url": "https://api.github.com/users/SofaPotatos/events{/privacy}", "received_events_url": "https://api.github.com/users/SofaPotatos/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-26T05:51:23Z", "updated_at": "2018-02-26T05:59:10Z", "author_association": "NONE", "body_html": "<p>@brainnoise Thanks for your help. The following code works for my case, although I do expect a more user-friendly solution.</p>\n<pre><code>import tensorflow as tf\nfrom tensorflow.python.keras import backend as K\nfrom tensorflow.python.keras.utils import CustomObjectScope\ndef relu6(x):\n  return K.relu(x, max_value=6)\nwith CustomObjectScope({'relu6': relu6}):\n    keras_mobilenet= tf.keras.applications.mobilenet.MobileNet(weights=None)\n    keras_mobilenet.compile(optimizer=tf.keras.optimizers.SGD(lr=0.0001, momentum=0.9),\n                          loss='categorical_crossentropy',\n                          metric='accuracy')\n    mobilenet_estimator = tf.keras.estimator.model_to_estimator(keras_model=keras_mobilenet)\n</code></pre>", "body_text": "@brainnoise Thanks for your help. The following code works for my case, although I do expect a more user-friendly solution.\nimport tensorflow as tf\nfrom tensorflow.python.keras import backend as K\nfrom tensorflow.python.keras.utils import CustomObjectScope\ndef relu6(x):\n  return K.relu(x, max_value=6)\nwith CustomObjectScope({'relu6': relu6}):\n    keras_mobilenet= tf.keras.applications.mobilenet.MobileNet(weights=None)\n    keras_mobilenet.compile(optimizer=tf.keras.optimizers.SGD(lr=0.0001, momentum=0.9),\n                          loss='categorical_crossentropy',\n                          metric='accuracy')\n    mobilenet_estimator = tf.keras.estimator.model_to_estimator(keras_model=keras_mobilenet)", "body": "@brainnoise Thanks for your help. The following code works for my case, although I do expect a more user-friendly solution.\r\n```\r\nimport tensorflow as tf\r\nfrom tensorflow.python.keras import backend as K\r\nfrom tensorflow.python.keras.utils import CustomObjectScope\r\ndef relu6(x):\r\n  return K.relu(x, max_value=6)\r\nwith CustomObjectScope({'relu6': relu6}):\r\n    keras_mobilenet= tf.keras.applications.mobilenet.MobileNet(weights=None)\r\n    keras_mobilenet.compile(optimizer=tf.keras.optimizers.SGD(lr=0.0001, momentum=0.9),\r\n                          loss='categorical_crossentropy',\r\n                          metric='accuracy')\r\n    mobilenet_estimator = tf.keras.estimator.model_to_estimator(keras_model=keras_mobilenet)\r\n```"}