{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/285576952", "html_url": "https://github.com/tensorflow/tensorflow/issues/8107#issuecomment-285576952", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8107", "id": 285576952, "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTU3Njk1Mg==", "user": {"login": "countzyx", "id": 4769990, "node_id": "MDQ6VXNlcjQ3Njk5OTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4769990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/countzyx", "html_url": "https://github.com/countzyx", "followers_url": "https://api.github.com/users/countzyx/followers", "following_url": "https://api.github.com/users/countzyx/following{/other_user}", "gists_url": "https://api.github.com/users/countzyx/gists{/gist_id}", "starred_url": "https://api.github.com/users/countzyx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/countzyx/subscriptions", "organizations_url": "https://api.github.com/users/countzyx/orgs", "repos_url": "https://api.github.com/users/countzyx/repos", "events_url": "https://api.github.com/users/countzyx/events{/privacy}", "received_events_url": "https://api.github.com/users/countzyx/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-10T04:48:10Z", "updated_at": "2017-03-10T04:49:42Z", "author_association": "NONE", "body_html": "<p>This 1.0.0 build was such a pain! After way more time that I wanted to on this, I got something that works on MacOS.</p>\n<ol>\n<li>\n<p>First I had to deal with a Mac-specific issue where a protection scheme, SIP, prevents you from defining DYLD_ anything in env, so it could not find libcudart.8.0.dylib. This dude blogged a workaround - <a href=\"https://srikanthpagadala.github.io/notes/2016/11/07/enable-gpu-support-for-tensorflow-on-macos\" rel=\"nofollow\">https://srikanthpagadala.github.io/notes/2016/11/07/enable-gpu-support-for-tensorflow-on-macos</a></p>\n</li>\n<li>\n<p>Then I ran into an issue where it could not find another library, libcublas. Since I used Homebrew (as per all guidance everywhere) to get bazel, it got 0.4.4 which doesn't work with this source. Someone posted on this issue how to roll back to 0.4.3 - <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"204996668\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/7227\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/7227/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/7227\">#7227</a></p>\n</li>\n<li>\n<p>Finally, the problem you are all having here. After finally getting the build and installing the wheel in my conda env, I ran into an error trying to find pywrap_tensorflow_internal.so when I ran the interpreter and tried to import tensorflow. Turns out the wheel had one error while being assembled. I looked at the conda env site packages to see if the .so is actually there. It was, but it was named _pywrap_tensorflow_internal.so (notice the initial underscore). I removed the underscore by hand and it finally worked. :/ This last bit might help you guys on Linux maybe?</p>\n</li>\n</ol>", "body_text": "This 1.0.0 build was such a pain! After way more time that I wanted to on this, I got something that works on MacOS.\n\n\nFirst I had to deal with a Mac-specific issue where a protection scheme, SIP, prevents you from defining DYLD_ anything in env, so it could not find libcudart.8.0.dylib. This dude blogged a workaround - https://srikanthpagadala.github.io/notes/2016/11/07/enable-gpu-support-for-tensorflow-on-macos\n\n\nThen I ran into an issue where it could not find another library, libcublas. Since I used Homebrew (as per all guidance everywhere) to get bazel, it got 0.4.4 which doesn't work with this source. Someone posted on this issue how to roll back to 0.4.3 - #7227\n\n\nFinally, the problem you are all having here. After finally getting the build and installing the wheel in my conda env, I ran into an error trying to find pywrap_tensorflow_internal.so when I ran the interpreter and tried to import tensorflow. Turns out the wheel had one error while being assembled. I looked at the conda env site packages to see if the .so is actually there. It was, but it was named _pywrap_tensorflow_internal.so (notice the initial underscore). I removed the underscore by hand and it finally worked. :/ This last bit might help you guys on Linux maybe?", "body": "This 1.0.0 build was such a pain! After way more time that I wanted to on this, I got something that works on MacOS.\r\n\r\n1.  First I had to deal with a Mac-specific issue where a protection scheme, SIP, prevents you from defining DYLD_ anything in env, so it could not find libcudart.8.0.dylib. This dude blogged a workaround - [https://srikanthpagadala.github.io/notes/2016/11/07/enable-gpu-support-for-tensorflow-on-macos](https://srikanthpagadala.github.io/notes/2016/11/07/enable-gpu-support-for-tensorflow-on-macos)\r\n\r\n2. Then I ran into an issue where it could not find another library, libcublas. Since I used Homebrew (as per all guidance everywhere) to get bazel, it got 0.4.4 which doesn't work with this source. Someone posted on this issue how to roll back to 0.4.3 - [https://github.com/tensorflow/tensorflow/issues/7227](https://github.com/tensorflow/tensorflow/issues/7227)\r\n\r\n3. Finally, the problem you are all having here. After finally getting the build and installing the wheel in my conda env, I ran into an error trying to find pywrap_tensorflow_internal.so when I ran the interpreter and tried to import tensorflow. Turns out the wheel had one error while being assembled. I looked at the conda env site packages to see if the .so is actually there. It was, but it was named _pywrap_tensorflow_internal.so (notice the initial underscore). I removed the underscore by hand and it finally worked. :/ This last bit might help you guys on Linux maybe?"}