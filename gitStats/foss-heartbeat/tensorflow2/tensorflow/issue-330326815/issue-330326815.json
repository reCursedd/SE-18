{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19836", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19836/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19836/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/19836/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/19836", "id": 330326815, "node_id": "MDU6SXNzdWUzMzAzMjY4MTU=", "number": 19836, "title": "Inconsistency between layer names and weight names in HDF5 saved from tf.keras nested models", "user": {"login": "caisq", "id": 16824702, "node_id": "MDQ6VXNlcjE2ODI0NzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/16824702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caisq", "html_url": "https://github.com/caisq", "followers_url": "https://api.github.com/users/caisq/followers", "following_url": "https://api.github.com/users/caisq/following{/other_user}", "gists_url": "https://api.github.com/users/caisq/gists{/gist_id}", "starred_url": "https://api.github.com/users/caisq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caisq/subscriptions", "organizations_url": "https://api.github.com/users/caisq/orgs", "repos_url": "https://api.github.com/users/caisq/repos", "events_url": "https://api.github.com/users/caisq/events{/privacy}", "received_events_url": "https://api.github.com/users/caisq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-06-07T15:33:31Z", "updated_at": "2018-06-10T01:29:52Z", "closed_at": "2018-06-10T01:29:52Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Doesn't matter</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: pip</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.8.0</li>\n<li><strong>Python version</strong>:  Doesn't matter</li>\n</ul>\n<p>Supposed you run the following code to construct a nested Sequential model with tf.keras and save it as a .h5 file.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\n\n<span class=\"pl-k\">with</span> tf.Graph().as_default(), tf.Session():\n  inner_model <span class=\"pl-k\">=</span> tf.keras.Sequential([\n      tf.keras.layers.Dense(<span class=\"pl-c1\">4</span>, <span class=\"pl-v\">input_shape</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">3</span>], <span class=\"pl-v\">activation</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>relu<span class=\"pl-pds\">'</span></span>),\n      tf.keras.layers.Dense(<span class=\"pl-c1\">3</span>, <span class=\"pl-v\">activation</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>tanh<span class=\"pl-pds\">'</span></span>)])\n  outer_model <span class=\"pl-k\">=</span> tf.keras.Sequential()\n  outer_model.add(inner_model)\n  outer_model.add(tf.keras.layers.Dense(<span class=\"pl-c1\">1</span>, <span class=\"pl-v\">activation</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>sigmoid<span class=\"pl-pds\">'</span></span>))\n  outer_model.compile(<span class=\"pl-v\">loss</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>binary_crossentropy<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">optimizer</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>sgd<span class=\"pl-pds\">'</span></span>)\n\n  outer_model.save(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>/tmp/tf_nested_keras.h5<span class=\"pl-pds\">'</span></span>)</pre></div>\n<p>Inside the saved .h5 file, you can see the layers have the names:</p>\n<ul>\n<li>'dense_1',</li>\n<li>'dense_2'</li>\n<li>'dense_3'.</li>\n</ul>\n<p>However, the weight names do not match up with the layer names:</p>\n<ul>\n<li>'dense/kernel:0', 'dense/bias:0', 'dense_1/kernel:0', 'dense_1/bias:0', 'dense_2/kernel:0', 'dense_2/bias:0',</li>\n</ul>\n<p>This is causing issues for TensorFlow.js converters. Note that the same issue does not occur for non-tf keras.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Doesn't matter\nTensorFlow installed from (source or binary): pip\nTensorFlow version (use command below): 1.8.0\nPython version:  Doesn't matter\n\nSupposed you run the following code to construct a nested Sequential model with tf.keras and save it as a .h5 file.\nimport tensorflow as tf\n\n\nwith tf.Graph().as_default(), tf.Session():\n  inner_model = tf.keras.Sequential([\n      tf.keras.layers.Dense(4, input_shape=[3], activation='relu'),\n      tf.keras.layers.Dense(3, activation='tanh')])\n  outer_model = tf.keras.Sequential()\n  outer_model.add(inner_model)\n  outer_model.add(tf.keras.layers.Dense(1, activation='sigmoid'))\n  outer_model.compile(loss='binary_crossentropy', optimizer='sgd')\n\n  outer_model.save('/tmp/tf_nested_keras.h5')\nInside the saved .h5 file, you can see the layers have the names:\n\n'dense_1',\n'dense_2'\n'dense_3'.\n\nHowever, the weight names do not match up with the layer names:\n\n'dense/kernel:0', 'dense/bias:0', 'dense_1/kernel:0', 'dense_1/bias:0', 'dense_2/kernel:0', 'dense_2/bias:0',\n\nThis is causing issues for TensorFlow.js converters. Note that the same issue does not occur for non-tf keras.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Doesn't matter\r\n- **TensorFlow installed from (source or binary)**: pip\r\n- **TensorFlow version (use command below)**: 1.8.0\r\n- **Python version**:  Doesn't matter\r\n\r\nSupposed you run the following code to construct a nested Sequential model with tf.keras and save it as a .h5 file.\r\n\r\n```py\r\nimport tensorflow as tf\r\n\r\n\r\nwith tf.Graph().as_default(), tf.Session():\r\n  inner_model = tf.keras.Sequential([\r\n      tf.keras.layers.Dense(4, input_shape=[3], activation='relu'),\r\n      tf.keras.layers.Dense(3, activation='tanh')])\r\n  outer_model = tf.keras.Sequential()\r\n  outer_model.add(inner_model)\r\n  outer_model.add(tf.keras.layers.Dense(1, activation='sigmoid'))\r\n  outer_model.compile(loss='binary_crossentropy', optimizer='sgd')\r\n\r\n  outer_model.save('/tmp/tf_nested_keras.h5')\r\n```\r\n\r\nInside the saved .h5 file, you can see the layers have the names:\r\n* 'dense_1',\r\n* 'dense_2' \r\n* 'dense_3'.\r\n\r\nHowever, the weight names do not match up with the layer names:\r\n* 'dense/kernel:0', 'dense/bias:0', 'dense_1/kernel:0', 'dense_1/bias:0', 'dense_2/kernel:0', 'dense_2/bias:0',\r\n\r\nThis is causing issues for TensorFlow.js converters. Note that the same issue does not occur for non-tf keras.\r\n"}