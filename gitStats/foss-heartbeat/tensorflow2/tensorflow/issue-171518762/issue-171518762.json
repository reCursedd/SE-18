{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3857", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3857/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3857/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3857/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3857", "id": 171518762, "node_id": "MDU6SXNzdWUxNzE1MTg3NjI=", "number": 3857, "title": "(Eigen thirdparty) Can't compile fixed point matrix matrix multiply", "user": {"login": "michael-barrow", "id": 20428997, "node_id": "MDQ6VXNlcjIwNDI4OTk3", "avatar_url": "https://avatars1.githubusercontent.com/u/20428997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michael-barrow", "html_url": "https://github.com/michael-barrow", "followers_url": "https://api.github.com/users/michael-barrow/followers", "following_url": "https://api.github.com/users/michael-barrow/following{/other_user}", "gists_url": "https://api.github.com/users/michael-barrow/gists{/gist_id}", "starred_url": "https://api.github.com/users/michael-barrow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michael-barrow/subscriptions", "organizations_url": "https://api.github.com/users/michael-barrow/orgs", "repos_url": "https://api.github.com/users/michael-barrow/repos", "events_url": "https://api.github.com/users/michael-barrow/events{/privacy}", "received_events_url": "https://api.github.com/users/michael-barrow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-16T21:10:02Z", "updated_at": "2016-08-17T13:10:43Z", "closed_at": "2016-08-17T13:10:43Z", "author_association": "NONE", "body_html": "<p>I can't get the Eigen fixed point backend to compile a simple matrix matrix multiply with Intel AVX2.<br>\nAnyone got a working example? I think the PacketMathAVX2.h is either missing something or I need to tell Eigen to align the matrices somehow. But I'm at a loss.</p>\n<p>Here is a simple C++ code that highlights the issue.</p>\n<pre><code>#include &lt;Eigen/Dense&gt;\n#define EIGEN_VECTORIZE_AVX\n#define EIGEN_VECTORIZE_AVX2\n#include &lt;unsupported/Eigen/CXX11/Tensor&gt;\n#include &lt;unsupported/Eigen/CXX11/FixedPoint&gt;\n\nint main(int argc, char* argv[])\n{\n    Eigen::QInt8 dbg((float)1.5), dbg2((float)2.5), dbg3;\n    Eigen::Matrix&lt;Eigen::QInt32,32,32&gt;one,two,three;\n\n    dbg3 = dbg + dbg2;\n    dbg3 = dbg * dbg2;\n    dbg3 = dbg - dbg2; //OK\n    three = one * two;   //Does not compile\n    return 0;\n}\n</code></pre>\n<h3>Environment info</h3>\n<p>Operating System: Ubuntu 14.04 lts, Eigen3.3-beta2 gcc 4.9.3 cmake 3.2.2</p>\n<p>Installed version of CUDA and cuDNN:<br>\nlibcudart.so.7.5.18</p>\n<ol>\n<li>The commit hash:  <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tensorflow/tensorflow/commit/da41c02d285c2328ca81eea2ca4d12c892fc33dc/hovercard\" href=\"https://github.com/tensorflow/tensorflow/commit/da41c02d285c2328ca81eea2ca4d12c892fc33dc\"><tt>da41c02</tt></a></li>\n<li>The output of <code>bazel version</code> NA</li>\n</ol>\n<h3>Steps to reproduce</h3>\n<ol>\n<li>Install Eigen3.3-beta2</li>\n<li>Merge tensorflow/thirdparty/eigen3/unsupported/Eigen with Eigen3.3-beta2root/unsupported/Eigen</li>\n<li>build the example code listing following these steps <a href=\"https://eigen.tuxfamily.org/dox/GettingStarted.html\" rel=\"nofollow\">https://eigen.tuxfamily.org/dox/GettingStarted.html</a></li>\n</ol>\n<h3>What have you tried?</h3>\n<ol>\n<li>building without AVX defines</li>\n<li>confirmed that non-matrix algebra works ok</li>\n</ol>\n<h3>Logs or other output that would be helpful</h3>\n<p>attached</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/files/421290/tensoreigenlog.txt\">tensoreigenlog.txt</a></p>", "body_text": "I can't get the Eigen fixed point backend to compile a simple matrix matrix multiply with Intel AVX2.\nAnyone got a working example? I think the PacketMathAVX2.h is either missing something or I need to tell Eigen to align the matrices somehow. But I'm at a loss.\nHere is a simple C++ code that highlights the issue.\n#include <Eigen/Dense>\n#define EIGEN_VECTORIZE_AVX\n#define EIGEN_VECTORIZE_AVX2\n#include <unsupported/Eigen/CXX11/Tensor>\n#include <unsupported/Eigen/CXX11/FixedPoint>\n\nint main(int argc, char* argv[])\n{\n    Eigen::QInt8 dbg((float)1.5), dbg2((float)2.5), dbg3;\n    Eigen::Matrix<Eigen::QInt32,32,32>one,two,three;\n\n    dbg3 = dbg + dbg2;\n    dbg3 = dbg * dbg2;\n    dbg3 = dbg - dbg2; //OK\n    three = one * two;   //Does not compile\n    return 0;\n}\n\nEnvironment info\nOperating System: Ubuntu 14.04 lts, Eigen3.3-beta2 gcc 4.9.3 cmake 3.2.2\nInstalled version of CUDA and cuDNN:\nlibcudart.so.7.5.18\n\nThe commit hash:  da41c02\nThe output of bazel version NA\n\nSteps to reproduce\n\nInstall Eigen3.3-beta2\nMerge tensorflow/thirdparty/eigen3/unsupported/Eigen with Eigen3.3-beta2root/unsupported/Eigen\nbuild the example code listing following these steps https://eigen.tuxfamily.org/dox/GettingStarted.html\n\nWhat have you tried?\n\nbuilding without AVX defines\nconfirmed that non-matrix algebra works ok\n\nLogs or other output that would be helpful\nattached\ntensoreigenlog.txt", "body": "I can't get the Eigen fixed point backend to compile a simple matrix matrix multiply with Intel AVX2.\nAnyone got a working example? I think the PacketMathAVX2.h is either missing something or I need to tell Eigen to align the matrices somehow. But I'm at a loss.\n\nHere is a simple C++ code that highlights the issue. \n\n```\n#include <Eigen/Dense>\n#define EIGEN_VECTORIZE_AVX\n#define EIGEN_VECTORIZE_AVX2\n#include <unsupported/Eigen/CXX11/Tensor>\n#include <unsupported/Eigen/CXX11/FixedPoint>\n\nint main(int argc, char* argv[])\n{\n    Eigen::QInt8 dbg((float)1.5), dbg2((float)2.5), dbg3;\n    Eigen::Matrix<Eigen::QInt32,32,32>one,two,three;\n\n    dbg3 = dbg + dbg2;\n    dbg3 = dbg * dbg2;\n    dbg3 = dbg - dbg2; //OK\n    three = one * two;   //Does not compile\n    return 0;\n}\n```\n### Environment info\n\nOperating System: Ubuntu 14.04 lts, Eigen3.3-beta2 gcc 4.9.3 cmake 3.2.2\n\nInstalled version of CUDA and cuDNN: \nlibcudart.so.7.5.18\n1. The commit hash:  da41c02\n2. The output of `bazel version` NA\n### Steps to reproduce\n1. Install Eigen3.3-beta2\n2. Merge tensorflow/thirdparty/eigen3/unsupported/Eigen with Eigen3.3-beta2root/unsupported/Eigen\n3. build the example code listing following these steps https://eigen.tuxfamily.org/dox/GettingStarted.html  \n### What have you tried?\n1. building without AVX defines \n2. confirmed that non-matrix algebra works ok\n### Logs or other output that would be helpful\n\nattached\n\n[tensoreigenlog.txt](https://github.com/tensorflow/tensorflow/files/421290/tensoreigenlog.txt)\n"}