{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/251732674", "html_url": "https://github.com/tensorflow/tensorflow/issues/4762#issuecomment-251732674", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4762", "id": 251732674, "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTczMjY3NA==", "user": {"login": "yuanbyu", "id": 2342391, "node_id": "MDQ6VXNlcjIzNDIzOTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2342391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuanbyu", "html_url": "https://github.com/yuanbyu", "followers_url": "https://api.github.com/users/yuanbyu/followers", "following_url": "https://api.github.com/users/yuanbyu/following{/other_user}", "gists_url": "https://api.github.com/users/yuanbyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuanbyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuanbyu/subscriptions", "organizations_url": "https://api.github.com/users/yuanbyu/orgs", "repos_url": "https://api.github.com/users/yuanbyu/repos", "events_url": "https://api.github.com/users/yuanbyu/events{/privacy}", "received_events_url": "https://api.github.com/users/yuanbyu/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-05T16:53:00Z", "updated_at": "2016-10-05T16:53:00Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I have been working on a doc which we hope to turn into a technical paper. I will give you a copy when it is ready.  In the meantime, feel free to send any specific questions to me.</p>\n<p>WhileContext is at this point a python front-end concept to represent a while_loop. It can be nested to represent nested loops. Internally, a loop is a cyclic graph using five primitive ops: Enter, Exit, Switch, Merge, and NextIteration. A loop can be partitioned onto multiple machines/devices, which is done in core/graph/graph_partition.cc. Frame is a concept used in core/common_runtime/executor.cc, which manages the execution of a partition assigned to a device.  Most of the complexity in the python front-end is on backprop of while_loop.</p>", "body_text": "I have been working on a doc which we hope to turn into a technical paper. I will give you a copy when it is ready.  In the meantime, feel free to send any specific questions to me.\nWhileContext is at this point a python front-end concept to represent a while_loop. It can be nested to represent nested loops. Internally, a loop is a cyclic graph using five primitive ops: Enter, Exit, Switch, Merge, and NextIteration. A loop can be partitioned onto multiple machines/devices, which is done in core/graph/graph_partition.cc. Frame is a concept used in core/common_runtime/executor.cc, which manages the execution of a partition assigned to a device.  Most of the complexity in the python front-end is on backprop of while_loop.", "body": "I have been working on a doc which we hope to turn into a technical paper. I will give you a copy when it is ready.  In the meantime, feel free to send any specific questions to me.  \n\nWhileContext is at this point a python front-end concept to represent a while_loop. It can be nested to represent nested loops. Internally, a loop is a cyclic graph using five primitive ops: Enter, Exit, Switch, Merge, and NextIteration. A loop can be partitioned onto multiple machines/devices, which is done in core/graph/graph_partition.cc. Frame is a concept used in core/common_runtime/executor.cc, which manages the execution of a partition assigned to a device.  Most of the complexity in the python front-end is on backprop of while_loop.\n"}