{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/260803639", "html_url": "https://github.com/tensorflow/tensorflow/pull/5546#issuecomment-260803639", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5546", "id": 260803639, "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDgwMzYzOQ==", "user": {"login": "abhitopia", "id": 12864026, "node_id": "MDQ6VXNlcjEyODY0MDI2", "avatar_url": "https://avatars1.githubusercontent.com/u/12864026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abhitopia", "html_url": "https://github.com/abhitopia", "followers_url": "https://api.github.com/users/abhitopia/followers", "following_url": "https://api.github.com/users/abhitopia/following{/other_user}", "gists_url": "https://api.github.com/users/abhitopia/gists{/gist_id}", "starred_url": "https://api.github.com/users/abhitopia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abhitopia/subscriptions", "organizations_url": "https://api.github.com/users/abhitopia/orgs", "repos_url": "https://api.github.com/users/abhitopia/repos", "events_url": "https://api.github.com/users/abhitopia/events{/privacy}", "received_events_url": "https://api.github.com/users/abhitopia/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-15T23:26:33Z", "updated_at": "2016-11-15T23:31:05Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=577277\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/martinwicke\">@martinwicke</a> - I completely agree that we should let go of DataFeeders and have support for only for input_fn (which already supports dict). Using input_fn using <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/learn/python/learn/dataframe/queues/feeding_functions.py\">feeding_functions</a> looks cool.</p>\n<p>However, meanwhile the transition is still in progress and until support for DataFeeders exists, I think it still makes sense to update DataFeeders with this PR. ( I have resolved the conflicts)</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=577277\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/martinwicke\">@martinwicke</a> , <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=175486\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ilblackdragon\">@ilblackdragon</a>  - Thanks for the pointers. I will definitely checkout <code>pandas_input_fn</code> and also see if I can contribute in writing <code>iter_input_fn</code> soon.</p>", "body_text": "@martinwicke - I completely agree that we should let go of DataFeeders and have support for only for input_fn (which already supports dict). Using input_fn using feeding_functions looks cool.\nHowever, meanwhile the transition is still in progress and until support for DataFeeders exists, I think it still makes sense to update DataFeeders with this PR. ( I have resolved the conflicts)\n@martinwicke , @ilblackdragon  - Thanks for the pointers. I will definitely checkout pandas_input_fn and also see if I can contribute in writing iter_input_fn soon.", "body": "@martinwicke - I completely agree that we should let go of DataFeeders and have support for only for input_fn (which already supports dict). Using input_fn using [feeding_functions](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/learn/python/learn/dataframe/queues/feeding_functions.py) looks cool. \n\nHowever, meanwhile the transition is still in progress and until support for DataFeeders exists, I think it still makes sense to update DataFeeders with this PR. ( I have resolved the conflicts)\n\n@martinwicke , @ilblackdragon  - Thanks for the pointers. I will definitely checkout `pandas_input_fn` and also see if I can contribute in writing `iter_input_fn` soon.\n"}