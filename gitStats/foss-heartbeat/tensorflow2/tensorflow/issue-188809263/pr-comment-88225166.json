{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/88225166", "pull_request_review_id": 8803644, "id": 88225166, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4MjI1MTY2", "diff_hunk": "@@ -710,28 +710,29 @@ def _get_feature_ops_from_example(self, examples_batch):\n     return tensor_signature.create_example_parser_from_signatures(\n         self._features_info, examples_batch)\n \n-  def _check_inputs(self, features, labels):\n-    if self._features_info is not None:\n-      logging.debug('Given features: %s, required signatures: %s.',\n-                    str(features), str(self._features_info))\n+  def _check_inputs(self, features, targets, mode):\n+    if mode in self._features_info:\n+      logging.debug('Given features for %s: %s, required signatures: %s.',\n+                    mode, str(features), str(self._features_info[mode]))\n+\n       if not tensor_signature.tensors_compatible(features, self._features_info):\n-        raise ValueError('Features are incompatible with given information. '\n+        raise ValueError('Features are incompatible for %s with given information. '\n                          'Given features: %s, required signatures: %s.' %\n-                         (str(features), str(self._features_info)))\n+                         (mode, str(features), str(self._features_info[mode])))", "path": "tensorflow/contrib/learn/python/learn/estimators/estimator.py", "position": null, "original_position": 29, "commit_id": "5655df3757d891180842b5c34072d089867778f4", "original_commit_id": "78e9ff272e31f18def8b0c95ffe474d34671509c", "user": {"login": "abhitopia", "id": 12864026, "node_id": "MDQ6VXNlcjEyODY0MDI2", "avatar_url": "https://avatars1.githubusercontent.com/u/12864026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abhitopia", "html_url": "https://github.com/abhitopia", "followers_url": "https://api.github.com/users/abhitopia/followers", "following_url": "https://api.github.com/users/abhitopia/following{/other_user}", "gists_url": "https://api.github.com/users/abhitopia/gists{/gist_id}", "starred_url": "https://api.github.com/users/abhitopia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abhitopia/subscriptions", "organizations_url": "https://api.github.com/users/abhitopia/orgs", "repos_url": "https://api.github.com/users/abhitopia/repos", "events_url": "https://api.github.com/users/abhitopia/events{/privacy}", "received_events_url": "https://api.github.com/users/abhitopia/received_events", "type": "User", "site_admin": false}, "body": "@martinwicke - I am bit confused about this comment. train/eval/predict call `_check_inputs` inside their function call. If the features don't already have the signature, they are created. I don't see how \"it is not allowed to pass different features to train/eval/predict\". `self._features_info[mode]` and `self._labels_info[mode]` binds the signature for particular mode (namely 'train', 'eval' and 'predict'). One is free to use inputs with same signature across these modes though. May be I completely missed your point, please elaborate.\n", "created_at": "2016-11-16T12:18:41Z", "updated_at": "2016-11-23T19:04:48Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/5546#discussion_r88225166", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/5546", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/88225166"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/5546#discussion_r88225166"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/5546"}}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=577277\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/martinwicke\">@martinwicke</a> - I am bit confused about this comment. train/eval/predict call <code>_check_inputs</code> inside their function call. If the features don't already have the signature, they are created. I don't see how \"it is not allowed to pass different features to train/eval/predict\". <code>self._features_info[mode]</code> and <code>self._labels_info[mode]</code> binds the signature for particular mode (namely 'train', 'eval' and 'predict'). One is free to use inputs with same signature across these modes though. May be I completely missed your point, please elaborate.</p>", "body_text": "@martinwicke - I am bit confused about this comment. train/eval/predict call _check_inputs inside their function call. If the features don't already have the signature, they are created. I don't see how \"it is not allowed to pass different features to train/eval/predict\". self._features_info[mode] and self._labels_info[mode] binds the signature for particular mode (namely 'train', 'eval' and 'predict'). One is free to use inputs with same signature across these modes though. May be I completely missed your point, please elaborate.", "in_reply_to_id": 88085513}