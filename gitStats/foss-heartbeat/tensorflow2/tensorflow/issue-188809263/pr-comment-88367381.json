{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/88367381", "pull_request_review_id": 8943093, "id": 88367381, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4MzY3Mzgx", "diff_hunk": "@@ -518,22 +520,29 @@ def __init__(self, x, y, n_classes, batch_size):\n     \"\"\"Initializes a StreamingDataFeeder instance.\n \n     Args:\n-      x: iterator that returns for each element or dictionary of single element, returns features.\n-      y: iterator that returns for each element or dictionary of single element, returns 1 or many classes /\n-         regression values.\n-      n_classes: indicator of how many classes the target has. Can be dictionary of how many classes each target\n-        in y in case y is a dictionary.\n-      batch_size: Mini batch size to accumulate. If set None then assumes iterator to return already batched element.\n+      x: iterator each element of which returns one feature sample. Sample can\n+        be a Nd numpy matrix or dictionary of Nd numpy matrices.\n+      y: iterator each element of which returns one label sample. Sample can be\n+        a Nd numpy matrix or dictionary of Nd numpy matrices with 1 or many\n+        classes regression values.\n+      n_classes: indicator of how many classes the corresponding label sample\n+        has for the purposes of one-hot conversion of label. In case where y is\n+        a dictionary, n_classes must be dictionary (with same keys as y) of how\n+        many classes there are in each label in y. If key is present in y and\n+        missing in n_classes, the value is assumed None and no one-hot", "path": "tensorflow/contrib/learn/python/learn/learn_io/data_feeder.py", "position": null, "original_position": 80, "commit_id": "5655df3757d891180842b5c34072d089867778f4", "original_commit_id": "2326aab6ab81f0baff1ca947ff10d9a82d5c7289", "user": {"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}, "body": "`n_classes`\n", "created_at": "2016-11-17T01:04:25Z", "updated_at": "2016-11-23T19:04:48Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/5546#discussion_r88367381", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/5546", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/88367381"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/5546#discussion_r88367381"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/5546"}}, "body_html": "<p><code>n_classes</code></p>", "body_text": "n_classes"}