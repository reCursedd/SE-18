{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/231548925", "html_url": "https://github.com/tensorflow/tensorflow/issues/3200#issuecomment-231548925", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3200", "id": 231548925, "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTU0ODkyNQ==", "user": {"login": "skywildworld", "id": 1198509, "node_id": "MDQ6VXNlcjExOTg1MDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1198509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skywildworld", "html_url": "https://github.com/skywildworld", "followers_url": "https://api.github.com/users/skywildworld/followers", "following_url": "https://api.github.com/users/skywildworld/following{/other_user}", "gists_url": "https://api.github.com/users/skywildworld/gists{/gist_id}", "starred_url": "https://api.github.com/users/skywildworld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skywildworld/subscriptions", "organizations_url": "https://api.github.com/users/skywildworld/orgs", "repos_url": "https://api.github.com/users/skywildworld/repos", "events_url": "https://api.github.com/users/skywildworld/events{/privacy}", "received_events_url": "https://api.github.com/users/skywildworld/received_events", "type": "User", "site_admin": false}, "created_at": "2016-07-09T18:35:40Z", "updated_at": "2016-07-09T18:35:40Z", "author_association": "NONE", "body_html": "<p>This works fine for me(python 3.4).<br>\nChange function _get_dnn_feature_columns in learn/python/learn/estimators/dnn_linear_combined.py as:</p>\n<p>def _get_dnn_feature_columns(self):<br>\nreturn sorted(<br>\nset(self._dnn_feature_columns),<br>\nkey=lambda x: x.key) if self._dnn_feature_columns else None</p>", "body_text": "This works fine for me(python 3.4).\nChange function _get_dnn_feature_columns in learn/python/learn/estimators/dnn_linear_combined.py as:\ndef _get_dnn_feature_columns(self):\nreturn sorted(\nset(self._dnn_feature_columns),\nkey=lambda x: x.key) if self._dnn_feature_columns else None", "body": "This works fine for me(python 3.4).\nChange function _get_dnn_feature_columns in learn/python/learn/estimators/dnn_linear_combined.py as:\n\ndef _get_dnn_feature_columns(self):\n    return sorted(\n        set(self._dnn_feature_columns),\n        key=lambda x: x.key) if self._dnn_feature_columns else None\n"}