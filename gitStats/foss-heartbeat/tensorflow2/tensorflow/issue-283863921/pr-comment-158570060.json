{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/158570060", "pull_request_review_id": 85409892, "id": 158570060, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1ODU3MDA2MA==", "diff_hunk": "@@ -24,22 +24,33 @@ limitations under the License.\n \n #include \"tensorflow/core/platform/macros.h\"\n \n+// MSVC does not have __SSE4_1__ macro. Eigen enables EIGEN_VECTORIZE_SSE4_1\n+// when __AVX__ is defined, we should do the same.\n+#if defined(__SSE4_1__) || defined(__AVX__)", "path": "tensorflow/compiler/xla/service/cpu/cpu_runtime_sse4_1.h", "position": null, "original_position": 6, "commit_id": "2fb3c9cf76bc42a301218b3bcad7739187fd35f6", "original_commit_id": "7ead195adcc2897b3402269d29a8cc78fdf1902c", "user": {"login": "rongjiecomputer", "id": 13115060, "node_id": "MDQ6VXNlcjEzMTE1MDYw", "avatar_url": "https://avatars2.githubusercontent.com/u/13115060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rongjiecomputer", "html_url": "https://github.com/rongjiecomputer", "followers_url": "https://api.github.com/users/rongjiecomputer/followers", "following_url": "https://api.github.com/users/rongjiecomputer/following{/other_user}", "gists_url": "https://api.github.com/users/rongjiecomputer/gists{/gist_id}", "starred_url": "https://api.github.com/users/rongjiecomputer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rongjiecomputer/subscriptions", "organizations_url": "https://api.github.com/users/rongjiecomputer/orgs", "repos_url": "https://api.github.com/users/rongjiecomputer/repos", "events_url": "https://api.github.com/users/rongjiecomputer/events{/privacy}", "received_events_url": "https://api.github.com/users/rongjiecomputer/received_events", "type": "User", "site_admin": false}, "body": "> and have this defined(__SSE4_1__) || defined(__AVX__) logic only for MSVC\r\n\r\nDone. Becomes `defined(__SSE4_1__) || (defined(_MSC_VER) && defined(__AVX__))`.\r\n\r\n> I'd also avoid #define TF_XLA_HAS_SSE4_1 1 and just have #define TF_XLA_HAS_SSE4_1. Even though what you have makes GetAvailableIntrinsics shorter, it allows us to mistakenly write #ifdef TF_XLA_HAS_SSE4_1.\r\n\r\nDone. I did mistakenly write `#ifdef` while working on the old patch, so I can understand your concern.\r\n\r\n> I'd suggest putting all of these definitions in a single header\r\n\r\nI have eventually decided to not splitting the definitions out into a new header file. That requires adding a new `cc_library` and make three `cc_library(name = \"cpu_runtime_*\")` to depend on it due to Bazel's strict header dependency. Seems over-complicated.", "created_at": "2017-12-22T23:52:44Z", "updated_at": "2017-12-22T23:52:44Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/15553#discussion_r158570060", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/15553", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/158570060"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/15553#discussion_r158570060"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/15553"}}, "body_html": "<blockquote>\n<p>and have this defined(<strong>SSE4_1</strong>) || defined(<strong>AVX</strong>) logic only for MSVC</p>\n</blockquote>\n<p>Done. Becomes <code>defined(__SSE4_1__) || (defined(_MSC_VER) &amp;&amp; defined(__AVX__))</code>.</p>\n<blockquote>\n<p>I'd also avoid #define TF_XLA_HAS_SSE4_1 1 and just have #define TF_XLA_HAS_SSE4_1. Even though what you have makes GetAvailableIntrinsics shorter, it allows us to mistakenly write #ifdef TF_XLA_HAS_SSE4_1.</p>\n</blockquote>\n<p>Done. I did mistakenly write <code>#ifdef</code> while working on the old patch, so I can understand your concern.</p>\n<blockquote>\n<p>I'd suggest putting all of these definitions in a single header</p>\n</blockquote>\n<p>I have eventually decided to not splitting the definitions out into a new header file. That requires adding a new <code>cc_library</code> and make three <code>cc_library(name = \"cpu_runtime_*\")</code> to depend on it due to Bazel's strict header dependency. Seems over-complicated.</p>", "body_text": "and have this defined(SSE4_1) || defined(AVX) logic only for MSVC\n\nDone. Becomes defined(__SSE4_1__) || (defined(_MSC_VER) && defined(__AVX__)).\n\nI'd also avoid #define TF_XLA_HAS_SSE4_1 1 and just have #define TF_XLA_HAS_SSE4_1. Even though what you have makes GetAvailableIntrinsics shorter, it allows us to mistakenly write #ifdef TF_XLA_HAS_SSE4_1.\n\nDone. I did mistakenly write #ifdef while working on the old patch, so I can understand your concern.\n\nI'd suggest putting all of these definitions in a single header\n\nI have eventually decided to not splitting the definitions out into a new header file. That requires adding a new cc_library and make three cc_library(name = \"cpu_runtime_*\") to depend on it due to Bazel's strict header dependency. Seems over-complicated.", "in_reply_to_id": 158537391}