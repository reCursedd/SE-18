{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/358242049", "html_url": "https://github.com/tensorflow/tensorflow/issues/16136#issuecomment-358242049", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16136", "id": 358242049, "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODI0MjA0OQ==", "user": {"login": "l0o0", "id": 2743744, "node_id": "MDQ6VXNlcjI3NDM3NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2743744?v=4", "gravatar_id": "", "url": "https://api.github.com/users/l0o0", "html_url": "https://github.com/l0o0", "followers_url": "https://api.github.com/users/l0o0/followers", "following_url": "https://api.github.com/users/l0o0/following{/other_user}", "gists_url": "https://api.github.com/users/l0o0/gists{/gist_id}", "starred_url": "https://api.github.com/users/l0o0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/l0o0/subscriptions", "organizations_url": "https://api.github.com/users/l0o0/orgs", "repos_url": "https://api.github.com/users/l0o0/repos", "events_url": "https://api.github.com/users/l0o0/events{/privacy}", "received_events_url": "https://api.github.com/users/l0o0/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-17T09:10:32Z", "updated_at": "2018-01-17T09:10:32Z", "author_association": "NONE", "body_html": "<p>I have the same problems. I have added <code>/usr/local/cuda/lib64</code> to <code>$LD_LIBRARY_PATH</code>. The same import error message pops up when I <code>import tensorflow</code>.<br>\nAfter I make a soft link<code>sudo ln -s libcublas.so.9.0 libcublas.so.8.0</code>, Another ImportError message:</p>\n<blockquote>\n<p>ImportError: libcusolver.so.8.0: cannot open shared object file: No such file or directory</p>\n</blockquote>\n<p>So I try to make a softlink for all <code>*.9.0</code></p>\n<div class=\"highlight highlight-source-shell\"><pre><span class=\"pl-k\">for</span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">in</span> <span class=\"pl-s\"><span class=\"pl-pds\">$(</span>ls <span class=\"pl-k\">*</span>9.0<span class=\"pl-pds\">)</span></span>\n<span class=\"pl-k\">do</span>\n<span class=\"pl-c1\">echo</span> <span class=\"pl-smi\">$i</span>\nsudo ln -s <span class=\"pl-smi\">$PWD</span>/<span class=\"pl-smi\">$i</span> <span class=\"pl-smi\">$PWD</span>/<span class=\"pl-smi\">${i<span class=\"pl-k\">/</span>9.0<span class=\"pl-k\">/</span>8.0}</span>\n<span class=\"pl-k\">done</span></pre></div>\n<p>After that , ImportError comes again</p>\n<blockquote>\n<p>ImportError: libcudnn.so.6: cannot open shared object file: No such file or directory</p>\n</blockquote>\n<p>I solved the problem by the same way<code>sudo ln -s libcudnn.so.7 libcudnn.so.6</code>.  At last, I can import tensorflow without any error message.</p>\n<p>But when I try to run the code below in hello.py:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\nhello_constant <span class=\"pl-k\">=</span> tf.constant(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Hello World!<span class=\"pl-pds\">'</span></span>)\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    output <span class=\"pl-k\">=</span> sess.run(hello_constant)\n    <span class=\"pl-c1\">print</span>(output)</pre></div>\n<p>It collapsed with the following message:</p>\n<pre><code>2018-01-17 17:01:19.184972: I tensorflow/core/platform/cpu_feature_guard.cc:137] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA\n2018-01-17 17:01:19.256650: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:892] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n2018-01-17 17:01:19.256927: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1030] Found device 0 with properties: \nname: GeForce GTX 750 Ti major: 5 minor: 0 memoryClockRate(GHz): 1.0845\npciBusID: 0000:01:00.0\ntotalMemory: 1.95GiB freeMemory: 1.45GiB\n2018-01-17 17:01:19.256955: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1120] Creating TensorFlow device (/device:GPU:0) -&gt; (device: 0, name: GeForce GTX 750 Ti, pci bus id: 0000:01:00.0, compute capability: 5.0)\n*** stack smashing detected ***: &lt;unknown&gt; terminated\n[1]    31692 abort (core dumped)  python hello.py\n</code></pre>\n<p>I think tensorflow is not compatible with CUDA 9.</p>\n<p>Some helpful info:<br>\nUbuntu 17.10, Python 2.7.14, conda 4.3.29, gcc (Ubuntu 6.4.0-8ubuntu1) 6.4.0 20171010, tensorflow-gpu==1.4.0</p>\n<pre><code>(tf) \u279c  ~ nvcc -V\nnvcc: NVIDIA (R) Cuda compiler driver\nCopyright (c) 2005-2017 NVIDIA Corporation\nBuilt on Fri_Sep__1_21:08:03_CDT_2017\nCuda compilation tools, release 9.0, V9.0.176\n</code></pre>\n<p>Install cudnn by downloading cudnn-9.0-linux-x64-v7.tgz.</p>", "body_text": "I have the same problems. I have added /usr/local/cuda/lib64 to $LD_LIBRARY_PATH. The same import error message pops up when I import tensorflow.\nAfter I make a soft linksudo ln -s libcublas.so.9.0 libcublas.so.8.0, Another ImportError message:\n\nImportError: libcusolver.so.8.0: cannot open shared object file: No such file or directory\n\nSo I try to make a softlink for all *.9.0\nfor i in $(ls *9.0)\ndo\necho $i\nsudo ln -s $PWD/$i $PWD/${i/9.0/8.0}\ndone\nAfter that , ImportError comes again\n\nImportError: libcudnn.so.6: cannot open shared object file: No such file or directory\n\nI solved the problem by the same waysudo ln -s libcudnn.so.7 libcudnn.so.6.  At last, I can import tensorflow without any error message.\nBut when I try to run the code below in hello.py:\nimport tensorflow as tf\n\nhello_constant = tf.constant('Hello World!')\n\nwith tf.Session() as sess:\n    output = sess.run(hello_constant)\n    print(output)\nIt collapsed with the following message:\n2018-01-17 17:01:19.184972: I tensorflow/core/platform/cpu_feature_guard.cc:137] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA\n2018-01-17 17:01:19.256650: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:892] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n2018-01-17 17:01:19.256927: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1030] Found device 0 with properties: \nname: GeForce GTX 750 Ti major: 5 minor: 0 memoryClockRate(GHz): 1.0845\npciBusID: 0000:01:00.0\ntotalMemory: 1.95GiB freeMemory: 1.45GiB\n2018-01-17 17:01:19.256955: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1120] Creating TensorFlow device (/device:GPU:0) -> (device: 0, name: GeForce GTX 750 Ti, pci bus id: 0000:01:00.0, compute capability: 5.0)\n*** stack smashing detected ***: <unknown> terminated\n[1]    31692 abort (core dumped)  python hello.py\n\nI think tensorflow is not compatible with CUDA 9.\nSome helpful info:\nUbuntu 17.10, Python 2.7.14, conda 4.3.29, gcc (Ubuntu 6.4.0-8ubuntu1) 6.4.0 20171010, tensorflow-gpu==1.4.0\n(tf) \u279c  ~ nvcc -V\nnvcc: NVIDIA (R) Cuda compiler driver\nCopyright (c) 2005-2017 NVIDIA Corporation\nBuilt on Fri_Sep__1_21:08:03_CDT_2017\nCuda compilation tools, release 9.0, V9.0.176\n\nInstall cudnn by downloading cudnn-9.0-linux-x64-v7.tgz.", "body": "I have the same problems. I have added `/usr/local/cuda/lib64` to `$LD_LIBRARY_PATH`. The same import error message pops up when I `import tensorflow`.   \r\nAfter I make a soft link`sudo ln -s libcublas.so.9.0 libcublas.so.8.0`, Another ImportError message:\r\n>ImportError: libcusolver.so.8.0: cannot open shared object file: No such file or directory   \r\n\r\nSo I try to make a softlink for all `*.9.0`\r\n```bash\r\nfor i in $(ls *9.0)\r\ndo\r\necho $i\r\nsudo ln -s $PWD/$i $PWD/${i/9.0/8.0}\r\ndone\r\n```\r\nAfter that , ImportError comes again\r\n>ImportError: libcudnn.so.6: cannot open shared object file: No such file or directory\r\n\r\nI solved the problem by the same way`sudo ln -s libcudnn.so.7 libcudnn.so.6`.  At last, I can import tensorflow without any error message. \r\n\r\nBut when I try to run the code below in hello.py:\r\n```python\r\nimport tensorflow as tf\r\n\r\nhello_constant = tf.constant('Hello World!')\r\n\r\nwith tf.Session() as sess:\r\n    output = sess.run(hello_constant)\r\n    print(output)\r\n```\r\nIt collapsed with the following message:\r\n```\r\n2018-01-17 17:01:19.184972: I tensorflow/core/platform/cpu_feature_guard.cc:137] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA\r\n2018-01-17 17:01:19.256650: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:892] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\n2018-01-17 17:01:19.256927: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1030] Found device 0 with properties: \r\nname: GeForce GTX 750 Ti major: 5 minor: 0 memoryClockRate(GHz): 1.0845\r\npciBusID: 0000:01:00.0\r\ntotalMemory: 1.95GiB freeMemory: 1.45GiB\r\n2018-01-17 17:01:19.256955: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1120] Creating TensorFlow device (/device:GPU:0) -> (device: 0, name: GeForce GTX 750 Ti, pci bus id: 0000:01:00.0, compute capability: 5.0)\r\n*** stack smashing detected ***: <unknown> terminated\r\n[1]    31692 abort (core dumped)  python hello.py\r\n```\r\n\r\nI think tensorflow is not compatible with CUDA 9.\r\n\r\nSome helpful info:\r\nUbuntu 17.10, Python 2.7.14, conda 4.3.29, gcc (Ubuntu 6.4.0-8ubuntu1) 6.4.0 20171010, tensorflow-gpu==1.4.0\r\n```\r\n(tf) \u279c  ~ nvcc -V\r\nnvcc: NVIDIA (R) Cuda compiler driver\r\nCopyright (c) 2005-2017 NVIDIA Corporation\r\nBuilt on Fri_Sep__1_21:08:03_CDT_2017\r\nCuda compilation tools, release 9.0, V9.0.176\r\n```\r\nInstall cudnn by downloading cudnn-9.0-linux-x64-v7.tgz.\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n"}