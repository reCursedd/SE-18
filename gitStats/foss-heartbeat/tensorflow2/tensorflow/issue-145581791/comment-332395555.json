{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/332395555", "html_url": "https://github.com/tensorflow/tensorflow/issues/1763#issuecomment-332395555", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1763", "id": 332395555, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjM5NTU1NQ==", "user": {"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-27T03:04:29Z", "updated_at": "2017-09-27T03:04:29Z", "author_association": "MEMBER", "body_html": "<div class=\"email-fragment\">We could introduce a new parameter (though not with a behavior changing\ndefault), but wouldn't you simply use a regular cast if that's the behavior\nyou want? The purpose of this function is to manage conversion between the\ncommon representations of image values. And those are fixed point encoded\nvalues stored in integers and floating point values as described in the\ndocstring.\n\nEvery library dealing with images has to agree internally on a standard,\nand this is the one in TensorFlow (and btw., other libraries such as OpenGL\nhave as well, including the conversion rules).\n\nI understand that there may be images in other representations out there\n(in particular, floating point images with a 0..255 range), these need to\nbe scaled before they will work with TensorFlow functions.</div>", "body_text": "We could introduce a new parameter (though not with a behavior changing\ndefault), but wouldn't you simply use a regular cast if that's the behavior\nyou want? The purpose of this function is to manage conversion between the\ncommon representations of image values. And those are fixed point encoded\nvalues stored in integers and floating point values as described in the\ndocstring.\n\nEvery library dealing with images has to agree internally on a standard,\nand this is the one in TensorFlow (and btw., other libraries such as OpenGL\nhave as well, including the conversion rules).\n\nI understand that there may be images in other representations out there\n(in particular, floating point images with a 0..255 range), these need to\nbe scaled before they will work with TensorFlow functions.", "body": "We could introduce a new parameter (though not with a behavior changing\ndefault), but wouldn't you simply use a regular cast if that's the behavior\nyou want? The purpose of this function is to manage conversion between the\ncommon representations of image values. And those are fixed point encoded\nvalues stored in integers and floating point values as described in the\ndocstring.\n\nEvery library dealing with images has to agree internally on a standard,\nand this is the one in TensorFlow (and btw., other libraries such as OpenGL\nhave as well, including the conversion rules).\n\nI understand that there may be images in other representations out there\n(in particular, floating point images with a 0..255 range), these need to\nbe scaled before they will work with TensorFlow functions.\n"}