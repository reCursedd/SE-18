{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10260", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10260/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10260/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10260/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/10260", "id": 231858294, "node_id": "MDU6SXNzdWUyMzE4NTgyOTQ=", "number": 10260, "title": "Image and label decode from TFRecord are synchronized.", "user": {"login": "shihaoyin", "id": 16814446, "node_id": "MDQ6VXNlcjE2ODE0NDQ2", "avatar_url": "https://avatars0.githubusercontent.com/u/16814446?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shihaoyin", "html_url": "https://github.com/shihaoyin", "followers_url": "https://api.github.com/users/shihaoyin/followers", "following_url": "https://api.github.com/users/shihaoyin/following{/other_user}", "gists_url": "https://api.github.com/users/shihaoyin/gists{/gist_id}", "starred_url": "https://api.github.com/users/shihaoyin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shihaoyin/subscriptions", "organizations_url": "https://api.github.com/users/shihaoyin/orgs", "repos_url": "https://api.github.com/users/shihaoyin/repos", "events_url": "https://api.github.com/users/shihaoyin/events{/privacy}", "received_events_url": "https://api.github.com/users/shihaoyin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-28T09:44:40Z", "updated_at": "2017-05-28T10:41:35Z", "closed_at": "2017-05-28T10:41:35Z", "author_association": "NONE", "body_html": "<p>The data I read from TFRecords has a problem, the image and label are synchronized. In other words, what we want is [a---1, b---2, c---3, d---4, e---5], but what I got is [a---2, b---3, c---4, d---5, e---1]. The version of TensorFlow I used is 1.1.0. Can someone help me? thanks a lot. Here is my code:</p>\n<pre><code>import tensorflow as tf\n\nimages = ['a', 'b', 'c', 'd', 'e']\nlabels = [1, 2, 3, 4, 5]\n\n\ndef convert_to_tfrecords(_images, _labels):\n    path = 'test.tfrecords'\n    writer = tf.python_io.TFRecordWriter(path)\n    for [i, l] in zip(_images, _labels):\n        example = tf.train.Example(features=tf.train.Features(feature={\n            'image': tf.train.Feature(bytes_list=tf.train.BytesList(value=[tf.compat.as_bytes(i)])),\n            'label': tf.train.Feature(int64_list=tf.train.Int64List(value=[l]))\n        }))\n        writer.write(example.SerializeToString())\n    writer.close()\n\n\ndef read_and_decode(filename_queue):\n    reader = tf.TFRecordReader()\n    _, serialized_example = reader.read(filename_queue)\n    features = tf.parse_single_example(serialized_example, features={\n        'image': tf.FixedLenFeature([], tf.string),\n        'label': tf.FixedLenFeature([], tf.int64)\n    })\n    _image = tf.cast(features['image'], tf.string)\n    _label = tf.cast(features['label'], tf.int64)\n    return _image, _label\n\n\ndef main():\n    convert_to_tfrecords(images, labels)\n    filename = 'test.tfrecords'\n    filename_queue = tf.train.string_input_producer([filename])\n    img, lab = read_and_decode(filename_queue)\n    with tf.Session() as sess:\n        coord = tf.train.Coordinator()\n        threads = tf.train.start_queue_runners(sess=sess, coord=coord)\n        for _ in range(5):\n            print(sess.run(img), '---', sess.run(lab))\n        coord.request_stop()\n        coord.join(threads)\n\n\nif __name__ == '__main__':\n    main()\n</code></pre>", "body_text": "The data I read from TFRecords has a problem, the image and label are synchronized. In other words, what we want is [a---1, b---2, c---3, d---4, e---5], but what I got is [a---2, b---3, c---4, d---5, e---1]. The version of TensorFlow I used is 1.1.0. Can someone help me? thanks a lot. Here is my code:\nimport tensorflow as tf\n\nimages = ['a', 'b', 'c', 'd', 'e']\nlabels = [1, 2, 3, 4, 5]\n\n\ndef convert_to_tfrecords(_images, _labels):\n    path = 'test.tfrecords'\n    writer = tf.python_io.TFRecordWriter(path)\n    for [i, l] in zip(_images, _labels):\n        example = tf.train.Example(features=tf.train.Features(feature={\n            'image': tf.train.Feature(bytes_list=tf.train.BytesList(value=[tf.compat.as_bytes(i)])),\n            'label': tf.train.Feature(int64_list=tf.train.Int64List(value=[l]))\n        }))\n        writer.write(example.SerializeToString())\n    writer.close()\n\n\ndef read_and_decode(filename_queue):\n    reader = tf.TFRecordReader()\n    _, serialized_example = reader.read(filename_queue)\n    features = tf.parse_single_example(serialized_example, features={\n        'image': tf.FixedLenFeature([], tf.string),\n        'label': tf.FixedLenFeature([], tf.int64)\n    })\n    _image = tf.cast(features['image'], tf.string)\n    _label = tf.cast(features['label'], tf.int64)\n    return _image, _label\n\n\ndef main():\n    convert_to_tfrecords(images, labels)\n    filename = 'test.tfrecords'\n    filename_queue = tf.train.string_input_producer([filename])\n    img, lab = read_and_decode(filename_queue)\n    with tf.Session() as sess:\n        coord = tf.train.Coordinator()\n        threads = tf.train.start_queue_runners(sess=sess, coord=coord)\n        for _ in range(5):\n            print(sess.run(img), '---', sess.run(lab))\n        coord.request_stop()\n        coord.join(threads)\n\n\nif __name__ == '__main__':\n    main()", "body": "The data I read from TFRecords has a problem, the image and label are synchronized. In other words, what we want is [a---1, b---2, c---3, d---4, e---5], but what I got is [a---2, b---3, c---4, d---5, e---1]. The version of TensorFlow I used is 1.1.0. Can someone help me? thanks a lot. Here is my code:\r\n\r\n```\r\nimport tensorflow as tf\r\n\r\nimages = ['a', 'b', 'c', 'd', 'e']\r\nlabels = [1, 2, 3, 4, 5]\r\n\r\n\r\ndef convert_to_tfrecords(_images, _labels):\r\n    path = 'test.tfrecords'\r\n    writer = tf.python_io.TFRecordWriter(path)\r\n    for [i, l] in zip(_images, _labels):\r\n        example = tf.train.Example(features=tf.train.Features(feature={\r\n            'image': tf.train.Feature(bytes_list=tf.train.BytesList(value=[tf.compat.as_bytes(i)])),\r\n            'label': tf.train.Feature(int64_list=tf.train.Int64List(value=[l]))\r\n        }))\r\n        writer.write(example.SerializeToString())\r\n    writer.close()\r\n\r\n\r\ndef read_and_decode(filename_queue):\r\n    reader = tf.TFRecordReader()\r\n    _, serialized_example = reader.read(filename_queue)\r\n    features = tf.parse_single_example(serialized_example, features={\r\n        'image': tf.FixedLenFeature([], tf.string),\r\n        'label': tf.FixedLenFeature([], tf.int64)\r\n    })\r\n    _image = tf.cast(features['image'], tf.string)\r\n    _label = tf.cast(features['label'], tf.int64)\r\n    return _image, _label\r\n\r\n\r\ndef main():\r\n    convert_to_tfrecords(images, labels)\r\n    filename = 'test.tfrecords'\r\n    filename_queue = tf.train.string_input_producer([filename])\r\n    img, lab = read_and_decode(filename_queue)\r\n    with tf.Session() as sess:\r\n        coord = tf.train.Coordinator()\r\n        threads = tf.train.start_queue_runners(sess=sess, coord=coord)\r\n        for _ in range(5):\r\n            print(sess.run(img), '---', sess.run(lab))\r\n        coord.request_stop()\r\n        coord.join(threads)\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```"}