{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/259956962", "html_url": "https://github.com/tensorflow/tensorflow/issues/5543#issuecomment-259956962", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5543", "id": 259956962, "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTk1Njk2Mg==", "user": {"login": "DavidNorman", "id": 606831, "node_id": "MDQ6VXNlcjYwNjgzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/606831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DavidNorman", "html_url": "https://github.com/DavidNorman", "followers_url": "https://api.github.com/users/DavidNorman/followers", "following_url": "https://api.github.com/users/DavidNorman/following{/other_user}", "gists_url": "https://api.github.com/users/DavidNorman/gists{/gist_id}", "starred_url": "https://api.github.com/users/DavidNorman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DavidNorman/subscriptions", "organizations_url": "https://api.github.com/users/DavidNorman/orgs", "repos_url": "https://api.github.com/users/DavidNorman/repos", "events_url": "https://api.github.com/users/DavidNorman/events{/privacy}", "received_events_url": "https://api.github.com/users/DavidNorman/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-11T13:27:17Z", "updated_at": "2016-11-11T13:27:17Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Example:</p>\n<pre><code>import tensorflow as tf\n\n# Creates a graph.\na = tf.placeholder(tf.float32, [2,2])\nb = tf.placeholder(tf.float32, [2,2])\nc = tf.constant([[2.0,2.0],[2.0,2.0]])\nd = tf.constant([[2.0,2.0],[2.0,2.0]])\ne = tf.add(c, d)\nwith tf.control_dependencies([e]):\n  f = tf.mul(a, a)\n  g = tf.mul(b, e)\n  o = tf.add(f, g)\n\nsess = tf.Session()\n\nfd = {\n  a: [[1.0,2.0],[3.0,4.0]],\n  b: [[1.0,0.0],[0.0,1.0]],\n}\n\nsess.run(o, feed_dict=fd)\n</code></pre>\n<p>During constant folding this leads to:</p>\n<pre><code>Graph Before #nodes 11 #edges 16\n|| \n|| () -&gt; () {\n||   n2 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:ipu:0\", send_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device_incarnation=1, tensor_name=\"edge_16__recv_Placeholder_0\", tensor_type=float]()\n||   n3 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:ipu:0\", send_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device_incarnation=1, tensor_name=\"edge_17__recv_Placeholder_1_0\", tensor_type=float]()\n||   n4 = Const[dtype=float, value=Tensor&lt;type: float shape: [2,2] values: 2 2 2...&gt;]()\n||   n5 = Const[dtype=float, value=Tensor&lt;type: float shape: [2,2] values: 2 2 2...&gt;]()\n||   n6 = Add[T=float](n4, n5)\n||   n7 = Mul[T=float](n2, n2) @ n6\n||   n8 = Mul[T=float](n3, n6)\n||   n9 = Add[T=float](n7, n8)\n||   n10 = _Send[T=float, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/device:ipu:0\", send_device_incarnation=1, tensor_name=\"edge_5_Add_1\"](n9)\n|| }\n|| \n\n\nGraph After #nodes 12 #edges 17\n|| \n|| () -&gt; () {\n||   n11 = Const[dtype=float, value=Tensor&lt;type: float shape: [2,2] values: 4 4 4...&gt;]()\n||   n2 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:ipu:0\", send_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device_incarnation=1, tensor_name=\"edge_16__recv_Placeholder_0\", tensor_type=float]()\n||   n3 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:ipu:0\", send_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device_incarnation=1, tensor_name=\"edge_17__recv_Placeholder_1_0\", tensor_type=float]()\n||   n4 = Const[dtype=float, value=Tensor&lt;type: float shape: [2,2] values: 2 2 2...&gt;]()\n||   n5 = Const[dtype=float, value=Tensor&lt;type: float shape: [2,2] values: 2 2 2...&gt;]()\n||   n8 = Mul[T=float](n3, n11)\n||   n6 = Add[T=float](n4, n5)\n||   n7 = Mul[T=float](n2, n2) @ n6\n||   n9 = Add[T=float](n7, n8)\n||   n10 = _Send[T=float, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/device:ipu:0\", send_device_incarnation=1, tensor_name=\"edge_5_Add_1\"](n9)\n|| }\n|| \n</code></pre>\n<p>You can see that there is a constant replacing the Add, but that the Add remains, because it is referred to by the control edge.</p>\n<p>I think that the output should be:</p>\n<pre><code>Graph After #nodes 12 #edges 17\n|| \n|| () -&gt; () {\n||   n11 = Const[dtype=float, value=Tensor&lt;type: float shape: [2,2] values: 4 4 4...&gt;]()\n||   n2 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:ipu:0\", send_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device_incarnation=1, tensor_name=\"edge_16__recv_Placeholder_0\", tensor_type=float]()\n||   n3 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:ipu:0\", send_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device_incarnation=1, tensor_name=\"edge_17__recv_Placeholder_1_0\", tensor_type=float]()\n||   n8 = Mul[T=float](n3, n11)\n||   n7 = Mul[T=float](n2, n2) @ n11\n||   n9 = Add[T=float](n7, n8)\n||   n10 = _Send[T=float, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/device:ipu:0\", send_device_incarnation=1, tensor_name=\"edge_5_Add_1\"](n9)\n|| }\n|| \n</code></pre>", "body_text": "Example:\nimport tensorflow as tf\n\n# Creates a graph.\na = tf.placeholder(tf.float32, [2,2])\nb = tf.placeholder(tf.float32, [2,2])\nc = tf.constant([[2.0,2.0],[2.0,2.0]])\nd = tf.constant([[2.0,2.0],[2.0,2.0]])\ne = tf.add(c, d)\nwith tf.control_dependencies([e]):\n  f = tf.mul(a, a)\n  g = tf.mul(b, e)\n  o = tf.add(f, g)\n\nsess = tf.Session()\n\nfd = {\n  a: [[1.0,2.0],[3.0,4.0]],\n  b: [[1.0,0.0],[0.0,1.0]],\n}\n\nsess.run(o, feed_dict=fd)\n\nDuring constant folding this leads to:\nGraph Before #nodes 11 #edges 16\n|| \n|| () -> () {\n||   n2 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:ipu:0\", send_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device_incarnation=1, tensor_name=\"edge_16__recv_Placeholder_0\", tensor_type=float]()\n||   n3 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:ipu:0\", send_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device_incarnation=1, tensor_name=\"edge_17__recv_Placeholder_1_0\", tensor_type=float]()\n||   n4 = Const[dtype=float, value=Tensor<type: float shape: [2,2] values: 2 2 2...>]()\n||   n5 = Const[dtype=float, value=Tensor<type: float shape: [2,2] values: 2 2 2...>]()\n||   n6 = Add[T=float](n4, n5)\n||   n7 = Mul[T=float](n2, n2) @ n6\n||   n8 = Mul[T=float](n3, n6)\n||   n9 = Add[T=float](n7, n8)\n||   n10 = _Send[T=float, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/device:ipu:0\", send_device_incarnation=1, tensor_name=\"edge_5_Add_1\"](n9)\n|| }\n|| \n\n\nGraph After #nodes 12 #edges 17\n|| \n|| () -> () {\n||   n11 = Const[dtype=float, value=Tensor<type: float shape: [2,2] values: 4 4 4...>]()\n||   n2 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:ipu:0\", send_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device_incarnation=1, tensor_name=\"edge_16__recv_Placeholder_0\", tensor_type=float]()\n||   n3 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:ipu:0\", send_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device_incarnation=1, tensor_name=\"edge_17__recv_Placeholder_1_0\", tensor_type=float]()\n||   n4 = Const[dtype=float, value=Tensor<type: float shape: [2,2] values: 2 2 2...>]()\n||   n5 = Const[dtype=float, value=Tensor<type: float shape: [2,2] values: 2 2 2...>]()\n||   n8 = Mul[T=float](n3, n11)\n||   n6 = Add[T=float](n4, n5)\n||   n7 = Mul[T=float](n2, n2) @ n6\n||   n9 = Add[T=float](n7, n8)\n||   n10 = _Send[T=float, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/device:ipu:0\", send_device_incarnation=1, tensor_name=\"edge_5_Add_1\"](n9)\n|| }\n|| \n\nYou can see that there is a constant replacing the Add, but that the Add remains, because it is referred to by the control edge.\nI think that the output should be:\nGraph After #nodes 12 #edges 17\n|| \n|| () -> () {\n||   n11 = Const[dtype=float, value=Tensor<type: float shape: [2,2] values: 4 4 4...>]()\n||   n2 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:ipu:0\", send_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device_incarnation=1, tensor_name=\"edge_16__recv_Placeholder_0\", tensor_type=float]()\n||   n3 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:ipu:0\", send_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device_incarnation=1, tensor_name=\"edge_17__recv_Placeholder_1_0\", tensor_type=float]()\n||   n8 = Mul[T=float](n3, n11)\n||   n7 = Mul[T=float](n2, n2) @ n11\n||   n9 = Add[T=float](n7, n8)\n||   n10 = _Send[T=float, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/device:ipu:0\", send_device_incarnation=1, tensor_name=\"edge_5_Add_1\"](n9)\n|| }\n||", "body": "Example:\n\n```\nimport tensorflow as tf\n\n# Creates a graph.\na = tf.placeholder(tf.float32, [2,2])\nb = tf.placeholder(tf.float32, [2,2])\nc = tf.constant([[2.0,2.0],[2.0,2.0]])\nd = tf.constant([[2.0,2.0],[2.0,2.0]])\ne = tf.add(c, d)\nwith tf.control_dependencies([e]):\n  f = tf.mul(a, a)\n  g = tf.mul(b, e)\n  o = tf.add(f, g)\n\nsess = tf.Session()\n\nfd = {\n  a: [[1.0,2.0],[3.0,4.0]],\n  b: [[1.0,0.0],[0.0,1.0]],\n}\n\nsess.run(o, feed_dict=fd)\n```\n\nDuring constant folding this leads to:\n\n```\nGraph Before #nodes 11 #edges 16\n|| \n|| () -> () {\n||   n2 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:ipu:0\", send_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device_incarnation=1, tensor_name=\"edge_16__recv_Placeholder_0\", tensor_type=float]()\n||   n3 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:ipu:0\", send_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device_incarnation=1, tensor_name=\"edge_17__recv_Placeholder_1_0\", tensor_type=float]()\n||   n4 = Const[dtype=float, value=Tensor<type: float shape: [2,2] values: 2 2 2...>]()\n||   n5 = Const[dtype=float, value=Tensor<type: float shape: [2,2] values: 2 2 2...>]()\n||   n6 = Add[T=float](n4, n5)\n||   n7 = Mul[T=float](n2, n2) @ n6\n||   n8 = Mul[T=float](n3, n6)\n||   n9 = Add[T=float](n7, n8)\n||   n10 = _Send[T=float, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/device:ipu:0\", send_device_incarnation=1, tensor_name=\"edge_5_Add_1\"](n9)\n|| }\n|| \n\n\nGraph After #nodes 12 #edges 17\n|| \n|| () -> () {\n||   n11 = Const[dtype=float, value=Tensor<type: float shape: [2,2] values: 4 4 4...>]()\n||   n2 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:ipu:0\", send_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device_incarnation=1, tensor_name=\"edge_16__recv_Placeholder_0\", tensor_type=float]()\n||   n3 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:ipu:0\", send_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device_incarnation=1, tensor_name=\"edge_17__recv_Placeholder_1_0\", tensor_type=float]()\n||   n4 = Const[dtype=float, value=Tensor<type: float shape: [2,2] values: 2 2 2...>]()\n||   n5 = Const[dtype=float, value=Tensor<type: float shape: [2,2] values: 2 2 2...>]()\n||   n8 = Mul[T=float](n3, n11)\n||   n6 = Add[T=float](n4, n5)\n||   n7 = Mul[T=float](n2, n2) @ n6\n||   n9 = Add[T=float](n7, n8)\n||   n10 = _Send[T=float, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/device:ipu:0\", send_device_incarnation=1, tensor_name=\"edge_5_Add_1\"](n9)\n|| }\n|| \n```\n\nYou can see that there is a constant replacing the Add, but that the Add remains, because it is referred to by the control edge.\n\nI think that the output should be:\n\n```\nGraph After #nodes 12 #edges 17\n|| \n|| () -> () {\n||   n11 = Const[dtype=float, value=Tensor<type: float shape: [2,2] values: 4 4 4...>]()\n||   n2 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:ipu:0\", send_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device_incarnation=1, tensor_name=\"edge_16__recv_Placeholder_0\", tensor_type=float]()\n||   n3 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:ipu:0\", send_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device_incarnation=1, tensor_name=\"edge_17__recv_Placeholder_1_0\", tensor_type=float]()\n||   n8 = Mul[T=float](n3, n11)\n||   n7 = Mul[T=float](n2, n2) @ n11\n||   n9 = Add[T=float](n7, n8)\n||   n10 = _Send[T=float, client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/device:ipu:0\", send_device_incarnation=1, tensor_name=\"edge_5_Add_1\"](n9)\n|| }\n|| \n```\n"}