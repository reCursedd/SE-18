{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/260295962", "html_url": "https://github.com/tensorflow/tensorflow/issues/5543#issuecomment-260295962", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5543", "id": 260295962, "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDI5NTk2Mg==", "user": {"login": "DavidNorman", "id": 606831, "node_id": "MDQ6VXNlcjYwNjgzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/606831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DavidNorman", "html_url": "https://github.com/DavidNorman", "followers_url": "https://api.github.com/users/DavidNorman/followers", "following_url": "https://api.github.com/users/DavidNorman/following{/other_user}", "gists_url": "https://api.github.com/users/DavidNorman/gists{/gist_id}", "starred_url": "https://api.github.com/users/DavidNorman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DavidNorman/subscriptions", "organizations_url": "https://api.github.com/users/DavidNorman/orgs", "repos_url": "https://api.github.com/users/DavidNorman/repos", "events_url": "https://api.github.com/users/DavidNorman/events{/privacy}", "received_events_url": "https://api.github.com/users/DavidNorman/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-14T10:09:01Z", "updated_at": "2016-11-14T10:09:01Z", "author_association": "CONTRIBUTOR", "body_html": "<p>It seems that constant_folding.cc, ReplaceTensorWithConstant, assumes that the node that will be replaced will have multiple outputs, and only replaces those edges that are fed by the one replaced output.</p>\n<p>BroadcastGradientArgs is a good example.  It really needs to be replaced by 2 constants, and the code, as it stands, works well for that.</p>\n<p>Perhaps it is worth considering what it means to have a node that only has a control output assigned to it?  Is this valid?  If not, then the control output should be eliminated, then then the dead code pruning algorithm will kill off that node and it's upstream nodes.</p>\n<p>I've not played with the control flow (loops, conditionals), so I don't know if nodes with only control outputs are useful.   I would expect that loops and conditonals are done with Boolean edges, not control edges.  If this is the case, then I think that adding the control edge removal thing is the correct thing to do.</p>", "body_text": "It seems that constant_folding.cc, ReplaceTensorWithConstant, assumes that the node that will be replaced will have multiple outputs, and only replaces those edges that are fed by the one replaced output.\nBroadcastGradientArgs is a good example.  It really needs to be replaced by 2 constants, and the code, as it stands, works well for that.\nPerhaps it is worth considering what it means to have a node that only has a control output assigned to it?  Is this valid?  If not, then the control output should be eliminated, then then the dead code pruning algorithm will kill off that node and it's upstream nodes.\nI've not played with the control flow (loops, conditionals), so I don't know if nodes with only control outputs are useful.   I would expect that loops and conditonals are done with Boolean edges, not control edges.  If this is the case, then I think that adding the control edge removal thing is the correct thing to do.", "body": "It seems that constant_folding.cc, ReplaceTensorWithConstant, assumes that the node that will be replaced will have multiple outputs, and only replaces those edges that are fed by the one replaced output. \n\nBroadcastGradientArgs is a good example.  It really needs to be replaced by 2 constants, and the code, as it stands, works well for that.\n\nPerhaps it is worth considering what it means to have a node that only has a control output assigned to it?  Is this valid?  If not, then the control output should be eliminated, then then the dead code pruning algorithm will kill off that node and it's upstream nodes.\n\nI've not played with the control flow (loops, conditionals), so I don't know if nodes with only control outputs are useful.   I would expect that loops and conditonals are done with Boolean edges, not control edges.  If this is the case, then I think that adding the control edge removal thing is the correct thing to do.\n"}