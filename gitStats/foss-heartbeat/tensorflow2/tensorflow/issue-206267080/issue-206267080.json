{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7363", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7363/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7363/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7363/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/7363", "id": 206267080, "node_id": "MDU6SXNzdWUyMDYyNjcwODA=", "number": 7363, "title": "tf.decode_csv() seems to read the second field which actually doesn't exist.", "user": {"login": "mikigom", "id": 15151242, "node_id": "MDQ6VXNlcjE1MTUxMjQy", "avatar_url": "https://avatars1.githubusercontent.com/u/15151242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikigom", "html_url": "https://github.com/mikigom", "followers_url": "https://api.github.com/users/mikigom/followers", "following_url": "https://api.github.com/users/mikigom/following{/other_user}", "gists_url": "https://api.github.com/users/mikigom/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikigom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikigom/subscriptions", "organizations_url": "https://api.github.com/users/mikigom/orgs", "repos_url": "https://api.github.com/users/mikigom/repos", "events_url": "https://api.github.com/users/mikigom/events{/privacy}", "received_events_url": "https://api.github.com/users/mikigom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-08T17:27:29Z", "updated_at": "2017-02-09T16:34:16Z", "closed_at": "2017-02-09T16:34:07Z", "author_association": "NONE", "body_html": "<h3>Environment info</h3>\n<p>Operating System:</p>\n<pre><code>$ lsb_release -a\nNo LSB modules are available.\nDistributor ID:\tUbuntu\nDescription:\tUbuntu 14.04.5 LTS\nRelease:\t14.04\nCodename:\ttrusty\n</code></pre>\n<p>Installed version of CUDA and cuDNN:</p>\n<pre><code>$ ls -l /usr/local/cuda-8.0/lib64/libcud*\n-rw-r--r-- 1 root root   558720 11\uc6d4  4 05:18 /usr/local/cuda-8.0/lib64/libcudadevrt.a\nlrwxrwxrwx 1 root root       16 11\uc6d4  4 05:18 /usr/local/cuda-8.0/lib64/libcudart.so -&gt; libcudart.so.8.0\nlrwxrwxrwx 1 root root       19 11\uc6d4  4 05:18 /usr/local/cuda-8.0/lib64/libcudart.so.8.0 -&gt; libcudart.so.8.0.44\n-rwxr-xr-x 1 root root   415432 11\uc6d4  4 05:18 /usr/local/cuda-8.0/lib64/libcudart.so.8.0.44\n-rw-r--r-- 1 root root   775162 11\uc6d4  4 05:18 /usr/local/cuda-8.0/lib64/libcudart_static.a\n-rwxr-xr-x 1 root root 79337624 11\uc6d4  4 05:20 /usr/local/cuda-8.0/lib64/libcudnn.so\n-rwxr-xr-x 1 root root 79337624 11\uc6d4  4 05:20 /usr/local/cuda-8.0/lib64/libcudnn.so.5\n-rwxr-xr-x 1 root root 79337624 11\uc6d4  4 05:20 /usr/local/cuda-8.0/lib64/libcudnn.so.5.1.5\n-rw-r--r-- 1 root root 69756172 11\uc6d4  4 05:20 /usr/local/cuda-8.0/lib64/libcudnn_static.a\n</code></pre>\n<p>Tensorflow version:</p>\n<pre><code>$ python -c \"import tensorflow; print(tensorflow.__version__)\"\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally\n0.12.1\n</code></pre>\n<p>I tried following <a href=\"https://www.tensorflow.org/how_tos/reading_data/\" rel=\"nofollow\">'A typical pipeline for reading records from' in 'Reading data'</a>.</p>\n<p>I wanted to read just one csv file including file name of MS COCO dataset.<br>\nThe content of csv file is the following :</p>\n<pre><code>$ head -n 5 train_file_list.csv \n./train2014/COCO_train2014_000000322402.jpg,\n./train2014/COCO_train2014_000000441507.jpg,\n./train2014/COCO_train2014_000000555318.jpg,\n./train2014/COCO_train2014_000000380820.jpg,\n./train2014/COCO_train2014_000000496662.jpg,\n$ tail -n 5 train_file_list.csv \n./val2014/COCO_val2014_000000283947.jpg,\n./val2014/COCO_val2014_000000027620.jpg,\n./val2014/COCO_val2014_000000067310.jpg,\n./val2014/COCO_val2014_000000044520.jpg,\n./val2014/COCO_val2014_000000027617.jpg,\n</code></pre>\n<p>I have repeatedly confirmed that the field in csv is the only one containing the filename. I can attach pictures for the provement, but I will not. Of course, the 'train2014' and 'val2014' directories contain corresponding pictures, but that is not the case here.</p>\n<p>Trying to test for reproducing the above tutorial, I wrote code which is the following :</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n \nfilename_queue <span class=\"pl-k\">=</span> tf.train.string_input_producer([<span class=\"pl-s\"><span class=\"pl-pds\">'</span>/path/to/train_file_list.csv<span class=\"pl-pds\">'</span></span>])\n\nreader <span class=\"pl-k\">=</span> tf.TextLineReader()\nkey, value <span class=\"pl-k\">=</span> reader.read(filename_queue)\n\nrecord_defaults <span class=\"pl-k\">=</span> [[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>aa<span class=\"pl-pds\">'</span></span>]]\nfname <span class=\"pl-k\">=</span> tf.decode_csv(value, <span class=\"pl-v\">record_defaults</span><span class=\"pl-k\">=</span>record_defaults)\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    coord <span class=\"pl-k\">=</span> tf.train.Coordinator()\n    threads <span class=\"pl-k\">=</span> tf.train.start_queue_runners(<span class=\"pl-v\">coord</span><span class=\"pl-k\">=</span>coord)\n\n    <span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">5</span>):\n        example <span class=\"pl-k\">=</span> sess.run([fname])\n        <span class=\"pl-c1\">print</span>(example)\n    coord.request_stop()\n    coord.join(threads)</pre></div>\n<p>but it raise the error which is the following :</p>\n<pre><code>(tensorflow)mikigom@mikigom-desktop:~/github/HSP2P/Training$ python input_test.py \nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: \nname: GeForce GTX 1070\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.797\npciBusID 0000:01:00.0\nTotal memory: 7.92GiB\nFree memory: 6.41GiB\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX 1070, pci bus id: 0000:01:00.0)\nTraceback (most recent call last):\n  File \"input_test.py\", line 20, in &lt;module&gt;\n    example = sess.run([fname])\n  File \"/path/to/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 766, in run\n    run_metadata_ptr)\n  File \"/path/to/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 964, in _run\n    feed_dict_string, options, run_metadata)\n  File \"/path/to/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1014, in _do_run\n    target_list, options, run_metadata)\n  File \"/path/to/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1034, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Expect 1 fields but have 2 in record 0\n\t [[Node: DecodeCSV = DecodeCSV[OUT_TYPE=[DT_STRING], field_delim=\",\", _device=\"/job:localhost/replica:0/task:0/cpu:0\"](ReaderRead:1, DecodeCSV/record_defaults_0)]]\n\nCaused by op u'DecodeCSV', defined at:\n  File \"input_test.py\", line 11, in &lt;module&gt;\n    fname = tf.decode_csv(value, record_defaults=record_defaults)\n  File \"/path/to/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/ops/gen_parsing_ops.py\", line 45, in decode_csv\n    field_delim=field_delim, name=name)\n  File \"/path/to/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 759, in apply_op\n    op_def=op_def)\n  File \"/path/to/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 2240, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/path/to/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1128, in __init__\n    self._traceback = _extract_stack()\n\nInvalidArgumentError (see above for traceback): Expect 1 fields but have 2 in record 0\n\t [[Node: DecodeCSV = DecodeCSV[OUT_TYPE=[DT_STRING], field_delim=\",\", _device=\"/job:localhost/replica:0/task:0/cpu:0\"](ReaderRead:1, DecodeCSV/record_defaults_0)]]\n</code></pre>\n<p>It seems that <code>tf.decode_csv()</code> reads the second field which actually doesn't exist.<br>\nTo temporarily solve this problem, I changed <code>record_defaults</code> in the above code to:</p>\n<div class=\"highlight highlight-source-python\"><pre>record_defaults <span class=\"pl-k\">=</span> [[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>aa<span class=\"pl-pds\">'</span></span>], [<span class=\"pl-s\"><span class=\"pl-pds\">'</span>aa<span class=\"pl-pds\">'</span></span>]]</pre></div>\n<p>And if you run the code again, it will return normally.</p>\n<pre><code>$ python input_test.py \nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: \nname: GeForce GTX 1070\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.797\npciBusID 0000:01:00.0\nTotal memory: 7.92GiB\nFree memory: 6.40GiB\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX 1070, pci bus id: 0000:01:00.0)\n[['./train2014/COCO_train2014_000000322402.jpg', 'aa']]\n[['./train2014/COCO_train2014_000000441507.jpg', 'aa']]\n[['./train2014/COCO_train2014_000000555318.jpg', 'aa']]\n[['./train2014/COCO_train2014_000000380820.jpg', 'aa']]\n[['./train2014/COCO_train2014_000000496662.jpg', 'aa']]\n</code></pre>\n<p>I think this is a bug in <code>tf.decode_csv()</code>.</p>", "body_text": "Environment info\nOperating System:\n$ lsb_release -a\nNo LSB modules are available.\nDistributor ID:\tUbuntu\nDescription:\tUbuntu 14.04.5 LTS\nRelease:\t14.04\nCodename:\ttrusty\n\nInstalled version of CUDA and cuDNN:\n$ ls -l /usr/local/cuda-8.0/lib64/libcud*\n-rw-r--r-- 1 root root   558720 11\uc6d4  4 05:18 /usr/local/cuda-8.0/lib64/libcudadevrt.a\nlrwxrwxrwx 1 root root       16 11\uc6d4  4 05:18 /usr/local/cuda-8.0/lib64/libcudart.so -> libcudart.so.8.0\nlrwxrwxrwx 1 root root       19 11\uc6d4  4 05:18 /usr/local/cuda-8.0/lib64/libcudart.so.8.0 -> libcudart.so.8.0.44\n-rwxr-xr-x 1 root root   415432 11\uc6d4  4 05:18 /usr/local/cuda-8.0/lib64/libcudart.so.8.0.44\n-rw-r--r-- 1 root root   775162 11\uc6d4  4 05:18 /usr/local/cuda-8.0/lib64/libcudart_static.a\n-rwxr-xr-x 1 root root 79337624 11\uc6d4  4 05:20 /usr/local/cuda-8.0/lib64/libcudnn.so\n-rwxr-xr-x 1 root root 79337624 11\uc6d4  4 05:20 /usr/local/cuda-8.0/lib64/libcudnn.so.5\n-rwxr-xr-x 1 root root 79337624 11\uc6d4  4 05:20 /usr/local/cuda-8.0/lib64/libcudnn.so.5.1.5\n-rw-r--r-- 1 root root 69756172 11\uc6d4  4 05:20 /usr/local/cuda-8.0/lib64/libcudnn_static.a\n\nTensorflow version:\n$ python -c \"import tensorflow; print(tensorflow.__version__)\"\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally\n0.12.1\n\nI tried following 'A typical pipeline for reading records from' in 'Reading data'.\nI wanted to read just one csv file including file name of MS COCO dataset.\nThe content of csv file is the following :\n$ head -n 5 train_file_list.csv \n./train2014/COCO_train2014_000000322402.jpg,\n./train2014/COCO_train2014_000000441507.jpg,\n./train2014/COCO_train2014_000000555318.jpg,\n./train2014/COCO_train2014_000000380820.jpg,\n./train2014/COCO_train2014_000000496662.jpg,\n$ tail -n 5 train_file_list.csv \n./val2014/COCO_val2014_000000283947.jpg,\n./val2014/COCO_val2014_000000027620.jpg,\n./val2014/COCO_val2014_000000067310.jpg,\n./val2014/COCO_val2014_000000044520.jpg,\n./val2014/COCO_val2014_000000027617.jpg,\n\nI have repeatedly confirmed that the field in csv is the only one containing the filename. I can attach pictures for the provement, but I will not. Of course, the 'train2014' and 'val2014' directories contain corresponding pictures, but that is not the case here.\nTrying to test for reproducing the above tutorial, I wrote code which is the following :\nimport tensorflow as tf\n \nfilename_queue = tf.train.string_input_producer(['/path/to/train_file_list.csv'])\n\nreader = tf.TextLineReader()\nkey, value = reader.read(filename_queue)\n\nrecord_defaults = [['aa']]\nfname = tf.decode_csv(value, record_defaults=record_defaults)\n\nwith tf.Session() as sess:\n    coord = tf.train.Coordinator()\n    threads = tf.train.start_queue_runners(coord=coord)\n\n    for i in range(5):\n        example = sess.run([fname])\n        print(example)\n    coord.request_stop()\n    coord.join(threads)\nbut it raise the error which is the following :\n(tensorflow)mikigom@mikigom-desktop:~/github/HSP2P/Training$ python input_test.py \nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: \nname: GeForce GTX 1070\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.797\npciBusID 0000:01:00.0\nTotal memory: 7.92GiB\nFree memory: 6.41GiB\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1070, pci bus id: 0000:01:00.0)\nTraceback (most recent call last):\n  File \"input_test.py\", line 20, in <module>\n    example = sess.run([fname])\n  File \"/path/to/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 766, in run\n    run_metadata_ptr)\n  File \"/path/to/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 964, in _run\n    feed_dict_string, options, run_metadata)\n  File \"/path/to/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1014, in _do_run\n    target_list, options, run_metadata)\n  File \"/path/to/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1034, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Expect 1 fields but have 2 in record 0\n\t [[Node: DecodeCSV = DecodeCSV[OUT_TYPE=[DT_STRING], field_delim=\",\", _device=\"/job:localhost/replica:0/task:0/cpu:0\"](ReaderRead:1, DecodeCSV/record_defaults_0)]]\n\nCaused by op u'DecodeCSV', defined at:\n  File \"input_test.py\", line 11, in <module>\n    fname = tf.decode_csv(value, record_defaults=record_defaults)\n  File \"/path/to/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/ops/gen_parsing_ops.py\", line 45, in decode_csv\n    field_delim=field_delim, name=name)\n  File \"/path/to/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 759, in apply_op\n    op_def=op_def)\n  File \"/path/to/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 2240, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/path/to/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1128, in __init__\n    self._traceback = _extract_stack()\n\nInvalidArgumentError (see above for traceback): Expect 1 fields but have 2 in record 0\n\t [[Node: DecodeCSV = DecodeCSV[OUT_TYPE=[DT_STRING], field_delim=\",\", _device=\"/job:localhost/replica:0/task:0/cpu:0\"](ReaderRead:1, DecodeCSV/record_defaults_0)]]\n\nIt seems that tf.decode_csv() reads the second field which actually doesn't exist.\nTo temporarily solve this problem, I changed record_defaults in the above code to:\nrecord_defaults = [['aa'], ['aa']]\nAnd if you run the code again, it will return normally.\n$ python input_test.py \nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: \nname: GeForce GTX 1070\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.797\npciBusID 0000:01:00.0\nTotal memory: 7.92GiB\nFree memory: 6.40GiB\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1070, pci bus id: 0000:01:00.0)\n[['./train2014/COCO_train2014_000000322402.jpg', 'aa']]\n[['./train2014/COCO_train2014_000000441507.jpg', 'aa']]\n[['./train2014/COCO_train2014_000000555318.jpg', 'aa']]\n[['./train2014/COCO_train2014_000000380820.jpg', 'aa']]\n[['./train2014/COCO_train2014_000000496662.jpg', 'aa']]\n\nI think this is a bug in tf.decode_csv().", "body": "### Environment info\r\nOperating System:\r\n```\r\n$ lsb_release -a\r\nNo LSB modules are available.\r\nDistributor ID:\tUbuntu\r\nDescription:\tUbuntu 14.04.5 LTS\r\nRelease:\t14.04\r\nCodename:\ttrusty\r\n```\r\n\r\nInstalled version of CUDA and cuDNN: \r\n```\r\n$ ls -l /usr/local/cuda-8.0/lib64/libcud*\r\n-rw-r--r-- 1 root root   558720 11\uc6d4  4 05:18 /usr/local/cuda-8.0/lib64/libcudadevrt.a\r\nlrwxrwxrwx 1 root root       16 11\uc6d4  4 05:18 /usr/local/cuda-8.0/lib64/libcudart.so -> libcudart.so.8.0\r\nlrwxrwxrwx 1 root root       19 11\uc6d4  4 05:18 /usr/local/cuda-8.0/lib64/libcudart.so.8.0 -> libcudart.so.8.0.44\r\n-rwxr-xr-x 1 root root   415432 11\uc6d4  4 05:18 /usr/local/cuda-8.0/lib64/libcudart.so.8.0.44\r\n-rw-r--r-- 1 root root   775162 11\uc6d4  4 05:18 /usr/local/cuda-8.0/lib64/libcudart_static.a\r\n-rwxr-xr-x 1 root root 79337624 11\uc6d4  4 05:20 /usr/local/cuda-8.0/lib64/libcudnn.so\r\n-rwxr-xr-x 1 root root 79337624 11\uc6d4  4 05:20 /usr/local/cuda-8.0/lib64/libcudnn.so.5\r\n-rwxr-xr-x 1 root root 79337624 11\uc6d4  4 05:20 /usr/local/cuda-8.0/lib64/libcudnn.so.5.1.5\r\n-rw-r--r-- 1 root root 69756172 11\uc6d4  4 05:20 /usr/local/cuda-8.0/lib64/libcudnn_static.a\r\n```\r\n\r\nTensorflow version:\r\n```\r\n$ python -c \"import tensorflow; print(tensorflow.__version__)\"\r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally\r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally\r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally\r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally\r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally\r\n0.12.1\r\n```\r\n\r\nI tried following ['A typical pipeline for reading records from' in 'Reading data'](https://www.tensorflow.org/how_tos/reading_data/).\r\n\r\nI wanted to read just one csv file including file name of MS COCO dataset.\r\nThe content of csv file is the following : \r\n```\r\n$ head -n 5 train_file_list.csv \r\n./train2014/COCO_train2014_000000322402.jpg,\r\n./train2014/COCO_train2014_000000441507.jpg,\r\n./train2014/COCO_train2014_000000555318.jpg,\r\n./train2014/COCO_train2014_000000380820.jpg,\r\n./train2014/COCO_train2014_000000496662.jpg,\r\n$ tail -n 5 train_file_list.csv \r\n./val2014/COCO_val2014_000000283947.jpg,\r\n./val2014/COCO_val2014_000000027620.jpg,\r\n./val2014/COCO_val2014_000000067310.jpg,\r\n./val2014/COCO_val2014_000000044520.jpg,\r\n./val2014/COCO_val2014_000000027617.jpg,\r\n```\r\n\r\nI have repeatedly confirmed that the field in csv is the only one containing the filename. I can attach pictures for the provement, but I will not. Of course, the 'train2014' and 'val2014' directories contain corresponding pictures, but that is not the case here.\r\n\r\nTrying to test for reproducing the above tutorial, I wrote code which is the following : \r\n```python\r\nimport tensorflow as tf\r\n \r\nfilename_queue = tf.train.string_input_producer(['/path/to/train_file_list.csv'])\r\n\r\nreader = tf.TextLineReader()\r\nkey, value = reader.read(filename_queue)\r\n\r\nrecord_defaults = [['aa']]\r\nfname = tf.decode_csv(value, record_defaults=record_defaults)\r\n\r\nwith tf.Session() as sess:\r\n    coord = tf.train.Coordinator()\r\n    threads = tf.train.start_queue_runners(coord=coord)\r\n\r\n    for i in range(5):\r\n        example = sess.run([fname])\r\n        print(example)\r\n    coord.request_stop()\r\n    coord.join(threads)\r\n```\r\n\r\nbut it raise the error which is the following : \r\n```\r\n(tensorflow)mikigom@mikigom-desktop:~/github/HSP2P/Training$ python input_test.py \r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally\r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally\r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally\r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally\r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally\r\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: \r\nname: GeForce GTX 1070\r\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.797\r\npciBusID 0000:01:00.0\r\nTotal memory: 7.92GiB\r\nFree memory: 6.41GiB\r\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 \r\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y \r\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1070, pci bus id: 0000:01:00.0)\r\nTraceback (most recent call last):\r\n  File \"input_test.py\", line 20, in <module>\r\n    example = sess.run([fname])\r\n  File \"/path/to/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 766, in run\r\n    run_metadata_ptr)\r\n  File \"/path/to/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 964, in _run\r\n    feed_dict_string, options, run_metadata)\r\n  File \"/path/to/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1014, in _do_run\r\n    target_list, options, run_metadata)\r\n  File \"/path/to/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/client/session.py\", line 1034, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Expect 1 fields but have 2 in record 0\r\n\t [[Node: DecodeCSV = DecodeCSV[OUT_TYPE=[DT_STRING], field_delim=\",\", _device=\"/job:localhost/replica:0/task:0/cpu:0\"](ReaderRead:1, DecodeCSV/record_defaults_0)]]\r\n\r\nCaused by op u'DecodeCSV', defined at:\r\n  File \"input_test.py\", line 11, in <module>\r\n    fname = tf.decode_csv(value, record_defaults=record_defaults)\r\n  File \"/path/to/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/ops/gen_parsing_ops.py\", line 45, in decode_csv\r\n    field_delim=field_delim, name=name)\r\n  File \"/path/to/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 759, in apply_op\r\n    op_def=op_def)\r\n  File \"/path/to/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 2240, in create_op\r\n    original_op=self._default_original_op, op_def=op_def)\r\n  File \"/path/to/tensorflow/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1128, in __init__\r\n    self._traceback = _extract_stack()\r\n\r\nInvalidArgumentError (see above for traceback): Expect 1 fields but have 2 in record 0\r\n\t [[Node: DecodeCSV = DecodeCSV[OUT_TYPE=[DT_STRING], field_delim=\",\", _device=\"/job:localhost/replica:0/task:0/cpu:0\"](ReaderRead:1, DecodeCSV/record_defaults_0)]]\r\n```\r\n\r\nIt seems that ```tf.decode_csv()``` reads the second field which actually doesn't exist.\r\nTo temporarily solve this problem, I changed ```record_defaults``` in the above code to:\r\n```python\r\nrecord_defaults = [['aa'], ['aa']]\r\n```\r\n\r\nAnd if you run the code again, it will return normally.\r\n```\r\n$ python input_test.py \r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally\r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally\r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally\r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally\r\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally\r\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\r\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: \r\nname: GeForce GTX 1070\r\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.797\r\npciBusID 0000:01:00.0\r\nTotal memory: 7.92GiB\r\nFree memory: 6.40GiB\r\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 \r\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y \r\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1070, pci bus id: 0000:01:00.0)\r\n[['./train2014/COCO_train2014_000000322402.jpg', 'aa']]\r\n[['./train2014/COCO_train2014_000000441507.jpg', 'aa']]\r\n[['./train2014/COCO_train2014_000000555318.jpg', 'aa']]\r\n[['./train2014/COCO_train2014_000000380820.jpg', 'aa']]\r\n[['./train2014/COCO_train2014_000000496662.jpg', 'aa']]\r\n```\r\n\r\nI think this is a bug in ```tf.decode_csv()```."}