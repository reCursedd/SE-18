{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9387", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9387/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9387/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9387/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9387", "id": 223602542, "node_id": "MDU6SXNzdWUyMjM2MDI1NDI=", "number": 9387, "title": "Wrong implementation of ResNet in tensorflow/tensorflow/contrib/slim/python/slim/nets/ ?", "user": {"login": "n-triple-a", "id": 18713112, "node_id": "MDQ6VXNlcjE4NzEzMTEy", "avatar_url": "https://avatars2.githubusercontent.com/u/18713112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/n-triple-a", "html_url": "https://github.com/n-triple-a", "followers_url": "https://api.github.com/users/n-triple-a/followers", "following_url": "https://api.github.com/users/n-triple-a/following{/other_user}", "gists_url": "https://api.github.com/users/n-triple-a/gists{/gist_id}", "starred_url": "https://api.github.com/users/n-triple-a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/n-triple-a/subscriptions", "organizations_url": "https://api.github.com/users/n-triple-a/orgs", "repos_url": "https://api.github.com/users/n-triple-a/repos", "events_url": "https://api.github.com/users/n-triple-a/events{/privacy}", "received_events_url": "https://api.github.com/users/n-triple-a/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "sguada", "id": 1766524, "node_id": "MDQ6VXNlcjE3NjY1MjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1766524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sguada", "html_url": "https://github.com/sguada", "followers_url": "https://api.github.com/users/sguada/followers", "following_url": "https://api.github.com/users/sguada/following{/other_user}", "gists_url": "https://api.github.com/users/sguada/gists{/gist_id}", "starred_url": "https://api.github.com/users/sguada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sguada/subscriptions", "organizations_url": "https://api.github.com/users/sguada/orgs", "repos_url": "https://api.github.com/users/sguada/repos", "events_url": "https://api.github.com/users/sguada/events{/privacy}", "received_events_url": "https://api.github.com/users/sguada/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sguada", "id": 1766524, "node_id": "MDQ6VXNlcjE3NjY1MjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1766524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sguada", "html_url": "https://github.com/sguada", "followers_url": "https://api.github.com/users/sguada/followers", "following_url": "https://api.github.com/users/sguada/following{/other_user}", "gists_url": "https://api.github.com/users/sguada/gists{/gist_id}", "starred_url": "https://api.github.com/users/sguada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sguada/subscriptions", "organizations_url": "https://api.github.com/users/sguada/orgs", "repos_url": "https://api.github.com/users/sguada/repos", "events_url": "https://api.github.com/users/sguada/events{/privacy}", "received_events_url": "https://api.github.com/users/sguada/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2017-04-23T00:23:40Z", "updated_at": "2017-04-24T21:37:17Z", "closed_at": "2017-04-23T20:14:21Z", "author_association": "NONE", "body_html": "<p>I'm a researcher working on models related to ResNet_v1. As I was trying to use the code in this reporsitory: tensorflow/tensorflow/contrib/slim/python/slim/nets/<br>\nI realized that the ResNet_v1 model is different from Kaiming He's implementation. Specifically, in Kaiming's implementation, he applied stride 2 at the START of each block and the stride is applied to the 1*1 conv layer. For example, in Kaiming's original caffe prototxt (<a href=\"https://github.com/KaimingHe/deep-residual-networks/blob/master/prototxt/ResNet-101-deploy.prototxt\">https://github.com/KaimingHe/deep-residual-networks/blob/master/prototxt/ResNet-101-deploy.prototxt</a>), this is the first layer of 'conv3' (named in his ResNet paper) or block 2 (named by your implementation):</p>\n<pre><code>layer {\n\tbottom: \"res2c\"\n\ttop: \"res3a_branch1\"\n\tname: \"res3a_branch1\"\n\ttype: \"Convolution\"\n\tconvolution_param {\n\t\tnum_output: 512\n\t\tkernel_size: 1\n\t\tpad: 0\n\t\tstride: 2\n\t\tbias_term: false\n\t}\n}\n</code></pre>\n<p>This layer is a 1*1 conv layer that mimics the 'skip-connection' because of dimension mismatch at the bottleneck between blocks. And so does 'res3a_branch2a', which is the start of the first residual module in 'conv3'.</p>\n<p>Instead, in the tensorflow implementation, the stride 2 is applied to the END of each block(see function <strong>resnet_v1_block()</strong> in resnet_v1.py) and the stride is applied to the 3*3 conv layer of the last Residual module in each block(see function <strong>bottleneck()</strong> in resnet_v1.py).</p>\n<p>It's obvious that these two are different. Can anybody explain if it is wrong or implemented as such for some reasons?</p>", "body_text": "I'm a researcher working on models related to ResNet_v1. As I was trying to use the code in this reporsitory: tensorflow/tensorflow/contrib/slim/python/slim/nets/\nI realized that the ResNet_v1 model is different from Kaiming He's implementation. Specifically, in Kaiming's implementation, he applied stride 2 at the START of each block and the stride is applied to the 1*1 conv layer. For example, in Kaiming's original caffe prototxt (https://github.com/KaimingHe/deep-residual-networks/blob/master/prototxt/ResNet-101-deploy.prototxt), this is the first layer of 'conv3' (named in his ResNet paper) or block 2 (named by your implementation):\nlayer {\n\tbottom: \"res2c\"\n\ttop: \"res3a_branch1\"\n\tname: \"res3a_branch1\"\n\ttype: \"Convolution\"\n\tconvolution_param {\n\t\tnum_output: 512\n\t\tkernel_size: 1\n\t\tpad: 0\n\t\tstride: 2\n\t\tbias_term: false\n\t}\n}\n\nThis layer is a 1*1 conv layer that mimics the 'skip-connection' because of dimension mismatch at the bottleneck between blocks. And so does 'res3a_branch2a', which is the start of the first residual module in 'conv3'.\nInstead, in the tensorflow implementation, the stride 2 is applied to the END of each block(see function resnet_v1_block() in resnet_v1.py) and the stride is applied to the 3*3 conv layer of the last Residual module in each block(see function bottleneck() in resnet_v1.py).\nIt's obvious that these two are different. Can anybody explain if it is wrong or implemented as such for some reasons?", "body": "I'm a researcher working on models related to ResNet_v1. As I was trying to use the code in this reporsitory: tensorflow/tensorflow/contrib/slim/python/slim/nets/\r\nI realized that the ResNet_v1 model is different from Kaiming He's implementation. Specifically, in Kaiming's implementation, he applied stride 2 at the START of each block and the stride is applied to the 1*1 conv layer. For example, in Kaiming's original caffe prototxt (https://github.com/KaimingHe/deep-residual-networks/blob/master/prototxt/ResNet-101-deploy.prototxt), this is the first layer of 'conv3' (named in his ResNet paper) or block 2 (named by your implementation):\r\n\r\n```\r\nlayer {\r\n\tbottom: \"res2c\"\r\n\ttop: \"res3a_branch1\"\r\n\tname: \"res3a_branch1\"\r\n\ttype: \"Convolution\"\r\n\tconvolution_param {\r\n\t\tnum_output: 512\r\n\t\tkernel_size: 1\r\n\t\tpad: 0\r\n\t\tstride: 2\r\n\t\tbias_term: false\r\n\t}\r\n}\r\n```\r\n\r\nThis layer is a 1*1 conv layer that mimics the 'skip-connection' because of dimension mismatch at the bottleneck between blocks. And so does 'res3a_branch2a', which is the start of the first residual module in 'conv3'.\r\n\r\nInstead, in the tensorflow implementation, the stride 2 is applied to the END of each block(see function **resnet_v1_block()** in resnet_v1.py) and the stride is applied to the 3*3 conv layer of the last Residual module in each block(see function **bottleneck()** in resnet_v1.py). \r\n\r\nIt's obvious that these two are different. Can anybody explain if it is wrong or implemented as such for some reasons?"}