{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/174192340", "html_url": "https://github.com/tensorflow/tensorflow/issues/778#issuecomment-174192340", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/778", "id": 174192340, "node_id": "MDEyOklzc3VlQ29tbWVudDE3NDE5MjM0MA==", "user": {"login": "digitalsword", "id": 12500045, "node_id": "MDQ6VXNlcjEyNTAwMDQ1", "avatar_url": "https://avatars0.githubusercontent.com/u/12500045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/digitalsword", "html_url": "https://github.com/digitalsword", "followers_url": "https://api.github.com/users/digitalsword/followers", "following_url": "https://api.github.com/users/digitalsword/following{/other_user}", "gists_url": "https://api.github.com/users/digitalsword/gists{/gist_id}", "starred_url": "https://api.github.com/users/digitalsword/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/digitalsword/subscriptions", "organizations_url": "https://api.github.com/users/digitalsword/orgs", "repos_url": "https://api.github.com/users/digitalsword/repos", "events_url": "https://api.github.com/users/digitalsword/events{/privacy}", "received_events_url": "https://api.github.com/users/digitalsword/received_events", "type": "User", "site_admin": false}, "created_at": "2016-01-23T15:03:27Z", "updated_at": "2016-01-23T15:03:27Z", "author_association": "NONE", "body_html": "<p>I am able to compile bazel using gcc 4.8 installed at custom path. <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"125622945\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/bazelbuild/bazel/issues/760\" data-hovercard-type=\"issue\" data-hovercard-url=\"/bazelbuild/bazel/issues/760/hovercard\" href=\"https://github.com/bazelbuild/bazel/issues/760\">bazelbuild/bazel#760</a></p>\n<p>But I am still not able to compile tensorflow with the bazel binary on a redhat 6.7 system.</p>\n<pre><code>WARNING: Sandboxed execution is not supported on your system and thus hermeticity of actions cannot be guaranteed. See http://bazel.io/docs/bazel-user-manual.html#sandboxing for more information. You can turn off this warning via --ignore_unsupported_sandboxing.\nINFO: Found 1 target...\nERROR: /nfs/02/h212/.cache/bazel/_bazel_h212/7a2b15405f00fa358f0e0720e30182fe/external/gemmlowp/BUILD:77:1: C++ compilation of rule '@gemmlowp//:eight_bit_int_gemm' failed: crosstool_wrapper_driver_is_not_gcc failed: error executing command third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc -U_FORTIFY_SOURCE '-D_FORTIFY_SOURCE=1' -fstack-protector -fPIE -Wall -Wunused-but-set-parameter -Wno-free-nonheap-object ... (remaining 31 argument(s) skipped): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1.\ngcc: unrecognized option '-no-canonical-prefixes'\ncc1plus: error: unrecognized command line option \"-std=c++11\"\ncc1plus: error: unrecognized command line option \"-fno-canonical-system-headers\"\ncc1plus: warning: unrecognized command line option \"-Wno-free-nonheap-object\"\nTarget //tensorflow/cc:tutorials_example_trainer failed to build\nUse --verbose_failures to see the command lines of failed build steps.\nINFO: Elapsed time: 1.992s, Critical Path: 1.13s\n</code></pre>\n<pre><code>-bash-4.1$ ldd bazel_head_latest/output/bazel\n    linux-vdso.so.1 =&gt;  (0x00007fffd6386000)\n    librt.so.1 =&gt; /lib64/librt.so.1 (0x00000032c2e00000)\n    libz.so.1 =&gt; /lib64/libz.so.1 (0x00000032c2a00000)\n    libstdc++.so.6 =&gt; /usr/local/gcc/4.8.4/lib64/libstdc++.so.6 (0x00002b82e38cb000)\n    libgcc_s.so.1 =&gt; /usr/local/gcc/4.8.4/lib64/libgcc_s.so.1 (0x00002b82e3bd4000)\n    libc.so.6 =&gt; /lib64/libc.so.6 (0x00000032c1a00000)\n    libpthread.so.0 =&gt; /lib64/libpthread.so.0 (0x00000032c2200000)\n    /lib64/ld-linux-x86-64.so.2 (0x00000032c1600000)\n    libm.so.6 =&gt; /lib64/libm.so.6 (0x00000032c260\n</code></pre>", "body_text": "I am able to compile bazel using gcc 4.8 installed at custom path. bazelbuild/bazel#760\nBut I am still not able to compile tensorflow with the bazel binary on a redhat 6.7 system.\nWARNING: Sandboxed execution is not supported on your system and thus hermeticity of actions cannot be guaranteed. See http://bazel.io/docs/bazel-user-manual.html#sandboxing for more information. You can turn off this warning via --ignore_unsupported_sandboxing.\nINFO: Found 1 target...\nERROR: /nfs/02/h212/.cache/bazel/_bazel_h212/7a2b15405f00fa358f0e0720e30182fe/external/gemmlowp/BUILD:77:1: C++ compilation of rule '@gemmlowp//:eight_bit_int_gemm' failed: crosstool_wrapper_driver_is_not_gcc failed: error executing command third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc -U_FORTIFY_SOURCE '-D_FORTIFY_SOURCE=1' -fstack-protector -fPIE -Wall -Wunused-but-set-parameter -Wno-free-nonheap-object ... (remaining 31 argument(s) skipped): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1.\ngcc: unrecognized option '-no-canonical-prefixes'\ncc1plus: error: unrecognized command line option \"-std=c++11\"\ncc1plus: error: unrecognized command line option \"-fno-canonical-system-headers\"\ncc1plus: warning: unrecognized command line option \"-Wno-free-nonheap-object\"\nTarget //tensorflow/cc:tutorials_example_trainer failed to build\nUse --verbose_failures to see the command lines of failed build steps.\nINFO: Elapsed time: 1.992s, Critical Path: 1.13s\n\n-bash-4.1$ ldd bazel_head_latest/output/bazel\n    linux-vdso.so.1 =>  (0x00007fffd6386000)\n    librt.so.1 => /lib64/librt.so.1 (0x00000032c2e00000)\n    libz.so.1 => /lib64/libz.so.1 (0x00000032c2a00000)\n    libstdc++.so.6 => /usr/local/gcc/4.8.4/lib64/libstdc++.so.6 (0x00002b82e38cb000)\n    libgcc_s.so.1 => /usr/local/gcc/4.8.4/lib64/libgcc_s.so.1 (0x00002b82e3bd4000)\n    libc.so.6 => /lib64/libc.so.6 (0x00000032c1a00000)\n    libpthread.so.0 => /lib64/libpthread.so.0 (0x00000032c2200000)\n    /lib64/ld-linux-x86-64.so.2 (0x00000032c1600000)\n    libm.so.6 => /lib64/libm.so.6 (0x00000032c260", "body": "I am able to compile bazel using gcc 4.8 installed at custom path. https://github.com/bazelbuild/bazel/issues/760\n\nBut I am still not able to compile tensorflow with the bazel binary on a redhat 6.7 system.\n\n```\nWARNING: Sandboxed execution is not supported on your system and thus hermeticity of actions cannot be guaranteed. See http://bazel.io/docs/bazel-user-manual.html#sandboxing for more information. You can turn off this warning via --ignore_unsupported_sandboxing.\nINFO: Found 1 target...\nERROR: /nfs/02/h212/.cache/bazel/_bazel_h212/7a2b15405f00fa358f0e0720e30182fe/external/gemmlowp/BUILD:77:1: C++ compilation of rule '@gemmlowp//:eight_bit_int_gemm' failed: crosstool_wrapper_driver_is_not_gcc failed: error executing command third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc -U_FORTIFY_SOURCE '-D_FORTIFY_SOURCE=1' -fstack-protector -fPIE -Wall -Wunused-but-set-parameter -Wno-free-nonheap-object ... (remaining 31 argument(s) skipped): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1.\ngcc: unrecognized option '-no-canonical-prefixes'\ncc1plus: error: unrecognized command line option \"-std=c++11\"\ncc1plus: error: unrecognized command line option \"-fno-canonical-system-headers\"\ncc1plus: warning: unrecognized command line option \"-Wno-free-nonheap-object\"\nTarget //tensorflow/cc:tutorials_example_trainer failed to build\nUse --verbose_failures to see the command lines of failed build steps.\nINFO: Elapsed time: 1.992s, Critical Path: 1.13s\n```\n\n```\n-bash-4.1$ ldd bazel_head_latest/output/bazel\n    linux-vdso.so.1 =>  (0x00007fffd6386000)\n    librt.so.1 => /lib64/librt.so.1 (0x00000032c2e00000)\n    libz.so.1 => /lib64/libz.so.1 (0x00000032c2a00000)\n    libstdc++.so.6 => /usr/local/gcc/4.8.4/lib64/libstdc++.so.6 (0x00002b82e38cb000)\n    libgcc_s.so.1 => /usr/local/gcc/4.8.4/lib64/libgcc_s.so.1 (0x00002b82e3bd4000)\n    libc.so.6 => /lib64/libc.so.6 (0x00000032c1a00000)\n    libpthread.so.0 => /lib64/libpthread.so.0 (0x00000032c2200000)\n    /lib64/ld-linux-x86-64.so.2 (0x00000032c1600000)\n    libm.so.6 => /lib64/libm.so.6 (0x00000032c260\n```\n"}