{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/276740970", "html_url": "https://github.com/tensorflow/tensorflow/pull/7191#issuecomment-276740970", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7191", "id": 276740970, "node_id": "MDEyOklzc3VlQ29tbWVudDI3Njc0MDk3MA==", "user": {"login": "DavidNorman", "id": 606831, "node_id": "MDQ6VXNlcjYwNjgzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/606831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DavidNorman", "html_url": "https://github.com/DavidNorman", "followers_url": "https://api.github.com/users/DavidNorman/followers", "following_url": "https://api.github.com/users/DavidNorman/following{/other_user}", "gists_url": "https://api.github.com/users/DavidNorman/gists{/gist_id}", "starred_url": "https://api.github.com/users/DavidNorman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DavidNorman/subscriptions", "organizations_url": "https://api.github.com/users/DavidNorman/orgs", "repos_url": "https://api.github.com/users/DavidNorman/repos", "events_url": "https://api.github.com/users/DavidNorman/events{/privacy}", "received_events_url": "https://api.github.com/users/DavidNorman/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-01T18:34:59Z", "updated_at": "2017-02-01T18:34:59Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Replying to the comment by <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=463737\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vrv\">@vrv</a> at the end of the closed pull request:</p>\n<p>i think it would be great if the poplar plugin could be entirely separate from the main repo.  I think that what is required is some exporting of XLA headers, much like what is done for plugin user ops.</p>\n<p>It would certainly please my lords and masters if we could place the whole thing in a different repo.  As it stands, I think that the poplar stuff needs to be in the bazel build system, because there isn't really a pretty way of getting at all of the headers for a compilation otherwise.</p>\n<p>It would be excellent, though, if I were able to download a 'TF compiled with XLA' binary from the web, and it came with exported headers for all necessary XLA interfaces.  Or even if I were able to build one locally, and then compile my driver against XLA headers installed in the python site lib.</p>", "body_text": "Replying to the comment by @vrv at the end of the closed pull request:\ni think it would be great if the poplar plugin could be entirely separate from the main repo.  I think that what is required is some exporting of XLA headers, much like what is done for plugin user ops.\nIt would certainly please my lords and masters if we could place the whole thing in a different repo.  As it stands, I think that the poplar stuff needs to be in the bazel build system, because there isn't really a pretty way of getting at all of the headers for a compilation otherwise.\nIt would be excellent, though, if I were able to download a 'TF compiled with XLA' binary from the web, and it came with exported headers for all necessary XLA interfaces.  Or even if I were able to build one locally, and then compile my driver against XLA headers installed in the python site lib.", "body": "Replying to the comment by @vrv at the end of the closed pull request:\r\n\r\ni think it would be great if the poplar plugin could be entirely separate from the main repo.  I think that what is required is some exporting of XLA headers, much like what is done for plugin user ops.\r\n\r\nIt would certainly please my lords and masters if we could place the whole thing in a different repo.  As it stands, I think that the poplar stuff needs to be in the bazel build system, because there isn't really a pretty way of getting at all of the headers for a compilation otherwise.\r\n\r\nIt would be excellent, though, if I were able to download a 'TF compiled with XLA' binary from the web, and it came with exported headers for all necessary XLA interfaces.  Or even if I were able to build one locally, and then compile my driver against XLA headers installed in the python site lib.\r\n\r\n"}