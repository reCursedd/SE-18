{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/276753068", "html_url": "https://github.com/tensorflow/tensorflow/pull/7191#issuecomment-276753068", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7191", "id": 276753068, "node_id": "MDEyOklzc3VlQ29tbWVudDI3Njc1MzA2OA==", "user": {"login": "vrv", "id": 463737, "node_id": "MDQ6VXNlcjQ2MzczNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/463737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrv", "html_url": "https://github.com/vrv", "followers_url": "https://api.github.com/users/vrv/followers", "following_url": "https://api.github.com/users/vrv/following{/other_user}", "gists_url": "https://api.github.com/users/vrv/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrv/subscriptions", "organizations_url": "https://api.github.com/users/vrv/orgs", "repos_url": "https://api.github.com/users/vrv/repos", "events_url": "https://api.github.com/users/vrv/events{/privacy}", "received_events_url": "https://api.github.com/users/vrv/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-01T19:18:59Z", "updated_at": "2017-02-01T19:18:59Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=606831\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DavidNorman\">@DavidNorman</a> Take a look at this rule:</p>\n<p><a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/pip_package/BUILD#L22\">https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/pip_package/BUILD#L22</a>   -- it is used by the pip packager to copy over all relevant headers needed to build user ops into the pip-installed directories (Ideally, we'd be able to provide a development header library that doesn't involve python, but pip works in the short term).</p>\n<p>It is entirely probable that the transitive headers required for XLA are not packaged properly -- one thing that might be worth doing is looking at <a href=\"https://www.tensorflow.org/how_tos/adding_an_op/#with_tensorflow_binary_installation\" rel=\"nofollow\">https://www.tensorflow.org/how_tos/adding_an_op/#with_tensorflow_binary_installation</a> to figure out how you would compile user ops, but doing the same for the XLA device -- for every header that is missing, we would add it to that 'included_headers' rule somehow, so you can simply use gcc or clang with the appropriate includes to build a custom device shared object.  If that solves your bazel dependency problem, let us know!</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=348932\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/hawkinsp\">@hawkinsp</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1130906\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/eliben\">@eliben</a>  I don't know know too much about what xla headers need to be public -- is it possible for you to work out what should be exported for people who want to develop a custom device in XLA, so we can add it to the appropriate header libraries?</p>", "body_text": "@DavidNorman Take a look at this rule:\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/pip_package/BUILD#L22   -- it is used by the pip packager to copy over all relevant headers needed to build user ops into the pip-installed directories (Ideally, we'd be able to provide a development header library that doesn't involve python, but pip works in the short term).\nIt is entirely probable that the transitive headers required for XLA are not packaged properly -- one thing that might be worth doing is looking at https://www.tensorflow.org/how_tos/adding_an_op/#with_tensorflow_binary_installation to figure out how you would compile user ops, but doing the same for the XLA device -- for every header that is missing, we would add it to that 'included_headers' rule somehow, so you can simply use gcc or clang with the appropriate includes to build a custom device shared object.  If that solves your bazel dependency problem, let us know!\n@hawkinsp @eliben  I don't know know too much about what xla headers need to be public -- is it possible for you to work out what should be exported for people who want to develop a custom device in XLA, so we can add it to the appropriate header libraries?", "body": "@DavidNorman Take a look at this rule: \r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/pip_package/BUILD#L22   -- it is used by the pip packager to copy over all relevant headers needed to build user ops into the pip-installed directories (Ideally, we'd be able to provide a development header library that doesn't involve python, but pip works in the short term).\r\n\r\nIt is entirely probable that the transitive headers required for XLA are not packaged properly -- one thing that might be worth doing is looking at https://www.tensorflow.org/how_tos/adding_an_op/#with_tensorflow_binary_installation to figure out how you would compile user ops, but doing the same for the XLA device -- for every header that is missing, we would add it to that 'included_headers' rule somehow, so you can simply use gcc or clang with the appropriate includes to build a custom device shared object.  If that solves your bazel dependency problem, let us know!\r\n\r\n@hawkinsp @eliben  I don't know know too much about what xla headers need to be public -- is it possible for you to work out what should be exported for people who want to develop a custom device in XLA, so we can add it to the appropriate header libraries?"}