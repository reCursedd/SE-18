{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/361459210", "html_url": "https://github.com/tensorflow/tensorflow/issues/16540#issuecomment-361459210", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16540", "id": 361459210, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTQ1OTIxMA==", "user": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-30T02:45:14Z", "updated_at": "2018-01-30T02:45:14Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The problem is either with <code>reduce_mean</code> or <code>squared_difference</code>.  Could you identify within which op you get the precision loss?  My money's on reduce_mean but who knows if there's some issue with vectorisation primitives in Eigen's scalar_square or scalar_difference implementations.</p>", "body_text": "The problem is either with reduce_mean or squared_difference.  Could you identify within which op you get the precision loss?  My money's on reduce_mean but who knows if there's some issue with vectorisation primitives in Eigen's scalar_square or scalar_difference implementations.", "body": "The problem is either with `reduce_mean` or `squared_difference`.  Could you identify within which op you get the precision loss?  My money's on reduce_mean but who knows if there's some issue with vectorisation primitives in Eigen's scalar_square or scalar_difference implementations."}