{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9406", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9406/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9406/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9406/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9406", "id": 223740494, "node_id": "MDU6SXNzdWUyMjM3NDA0OTQ=", "number": 9406, "title": "gather_nd gradient / scatter_nd is broken", "user": {"login": "albertz", "id": 59132, "node_id": "MDQ6VXNlcjU5MTMy", "avatar_url": "https://avatars0.githubusercontent.com/u/59132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albertz", "html_url": "https://github.com/albertz", "followers_url": "https://api.github.com/users/albertz/followers", "following_url": "https://api.github.com/users/albertz/following{/other_user}", "gists_url": "https://api.github.com/users/albertz/gists{/gist_id}", "starred_url": "https://api.github.com/users/albertz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albertz/subscriptions", "organizations_url": "https://api.github.com/users/albertz/orgs", "repos_url": "https://api.github.com/users/albertz/repos", "events_url": "https://api.github.com/users/albertz/events{/privacy}", "received_events_url": "https://api.github.com/users/albertz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-04-24T08:28:00Z", "updated_at": "2017-06-16T21:06:58Z", "closed_at": "2017-06-16T21:06:58Z", "author_association": "NONE", "body_html": "<p>Test code:</p>\n<pre><code>import tensorflow as tf\nsession = tf.InteractiveSession()\n\nn_base_time = 5\nn_in = 7\nn_beam = 3\nn_batch = 1\nbase = tf.ones((n_base_time, n_batch, n_in))  # (base_time,batch,n_in)\nidxs_exp = tf.constant(0, shape=(n_beam, n_batch, 2), name=\"idxs_exp\")  # (beam,batch,2), where the 2 stands for (base_time,batch)\n# Thus K == 2. gather_nd out will be idxs_exp.shape[:2] + params.shape[2:] = (beam,batch,n_in).\ngathered = tf.gather_nd(base, idxs_exp)  # (beam,batch,n_in)\ngathered_shape, _ = session.run([tf.shape(gathered), gathered])\nassert list(gathered_shape) == [n_beam, n_batch, n_in]\n\nbase_grad = tf.gradients(gathered, base)\nassert base_grad is not None\nsession.run(base_grad)\n</code></pre>\n<p>The first <code>session.run</code> as well as the assert-check for the <code>gathered_shape</code> works fine but then the second <code>session.run</code> for the gradient breaks with the exception:</p>\n<pre><code>InvalidArgumentError (see above for traceback): Must have updates.shape = indices.shape[:IXDIM] + params_shape[IXDIM:], got updates.shape [3,1,7], indices.shape [3,1,2], params_shape [5,1,7]\n         [[Node: gradients/GatherNd_grad/ScatterNd = ScatterNd[T=DT_FLOAT, Tindices=DT_INT32, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](idxs_exp, gradients/Fill/_39, gradients/GatherNd_grad/Shape)]]\n</code></pre>\n<p>This exception message is also confusing because what it complains about what is not the case seems to be actually the case.</p>", "body_text": "Test code:\nimport tensorflow as tf\nsession = tf.InteractiveSession()\n\nn_base_time = 5\nn_in = 7\nn_beam = 3\nn_batch = 1\nbase = tf.ones((n_base_time, n_batch, n_in))  # (base_time,batch,n_in)\nidxs_exp = tf.constant(0, shape=(n_beam, n_batch, 2), name=\"idxs_exp\")  # (beam,batch,2), where the 2 stands for (base_time,batch)\n# Thus K == 2. gather_nd out will be idxs_exp.shape[:2] + params.shape[2:] = (beam,batch,n_in).\ngathered = tf.gather_nd(base, idxs_exp)  # (beam,batch,n_in)\ngathered_shape, _ = session.run([tf.shape(gathered), gathered])\nassert list(gathered_shape) == [n_beam, n_batch, n_in]\n\nbase_grad = tf.gradients(gathered, base)\nassert base_grad is not None\nsession.run(base_grad)\n\nThe first session.run as well as the assert-check for the gathered_shape works fine but then the second session.run for the gradient breaks with the exception:\nInvalidArgumentError (see above for traceback): Must have updates.shape = indices.shape[:IXDIM] + params_shape[IXDIM:], got updates.shape [3,1,7], indices.shape [3,1,2], params_shape [5,1,7]\n         [[Node: gradients/GatherNd_grad/ScatterNd = ScatterNd[T=DT_FLOAT, Tindices=DT_INT32, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](idxs_exp, gradients/Fill/_39, gradients/GatherNd_grad/Shape)]]\n\nThis exception message is also confusing because what it complains about what is not the case seems to be actually the case.", "body": "Test code:\r\n```\r\nimport tensorflow as tf\r\nsession = tf.InteractiveSession()\r\n\r\nn_base_time = 5\r\nn_in = 7\r\nn_beam = 3\r\nn_batch = 1\r\nbase = tf.ones((n_base_time, n_batch, n_in))  # (base_time,batch,n_in)\r\nidxs_exp = tf.constant(0, shape=(n_beam, n_batch, 2), name=\"idxs_exp\")  # (beam,batch,2), where the 2 stands for (base_time,batch)\r\n# Thus K == 2. gather_nd out will be idxs_exp.shape[:2] + params.shape[2:] = (beam,batch,n_in).\r\ngathered = tf.gather_nd(base, idxs_exp)  # (beam,batch,n_in)\r\ngathered_shape, _ = session.run([tf.shape(gathered), gathered])\r\nassert list(gathered_shape) == [n_beam, n_batch, n_in]\r\n\r\nbase_grad = tf.gradients(gathered, base)\r\nassert base_grad is not None\r\nsession.run(base_grad)\r\n```\r\n\r\nThe first `session.run` as well as the assert-check for the `gathered_shape` works fine but then the second `session.run` for the gradient breaks with the exception:\r\n```\r\nInvalidArgumentError (see above for traceback): Must have updates.shape = indices.shape[:IXDIM] + params_shape[IXDIM:], got updates.shape [3,1,7], indices.shape [3,1,2], params_shape [5,1,7]\r\n         [[Node: gradients/GatherNd_grad/ScatterNd = ScatterNd[T=DT_FLOAT, Tindices=DT_INT32, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](idxs_exp, gradients/Fill/_39, gradients/GatherNd_grad/Shape)]]\r\n```\r\nThis exception message is also confusing because what it complains about what is not the case seems to be actually the case.\r\n"}