{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/129583118", "pull_request_review_id": 52371751, "id": 129583118, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyOTU4MzExOA==", "diff_hunk": "@@ -0,0 +1,98 @@\n+/* Copyright 2017 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+package org.tensorflow.op.annotation;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+/**\n+ * Annotation used by classes that should be added to the Ops convenience API.\n+ *\n+ * <p>An annotation processor builds the {@code Ops} API by aggregating all classes annotated as\n+ * {@code @Operator}s. Each annotated class <b>must</b> have at least one public static factory\n+ * method named {@code create} that accepts a {@link org.tensorflow.op.Scope} as its first argument.\n+ * The processor then adds a convenience method in the {@code Ops} API. For example:\n+ *\n+ * <pre>{@code\n+ * @Operator\n+ * public final class MyOp implements Op {\n+ *   public static MyOp create(Scope scope, Operand operand) {\n+ *     ...\n+ *   }\n+ * }\n+ * }</pre>\n+ *\n+ * <p>results in a method in the {@code Ops} API\n+ *\n+ * <pre>{@code\n+ * ops.myOp(operand);\n+ * // and has exactly the same effect as calling\n+ * // MyOp.create(ops.getScope(), operand);\n+ * }</pre>\n+ */\n+@Documented\n+@Target(ElementType.TYPE)\n+@Retention(RetentionPolicy.CLASS)\n+public @interface Operator {\n+  /**\n+   * Specify an optional group within the {@code Ops} API\n+   *\n+   * <p>By default, an annotation processor will create convenience methods directly in the {@code\n+   * Ops} class. An annotated operator may optionally choose to place the method within a group. For\n+   * example:\n+   *\n+   * <pre>{@code\n+   * @Operator(group=\"math\")\n+   * public final class Add extends PrimitiveOp implements Operand {\n+   *   ...\n+   * }\n+   * }</pre>\n+   *\n+   * <p>results in the {@code add} method placed within a {@code math} group within the {@code Ops}\n+   * API.\n+   *\n+   * <pre>{@code\n+   * ops.math().add(...);\n+   * }</pre>\n+   */\n+  String group() default \"\";", "path": "tensorflow/java/src/main/java/org/tensorflow/op/annotation/Operator.java", "position": null, "original_position": 74, "commit_id": "8f051ba077fc834e64f719cbeabcfa4c985d8d37", "original_commit_id": "5888075323937f45e3968ba2d2a31debc32f6735", "user": {"login": "kbsriram", "id": 1495065, "node_id": "MDQ6VXNlcjE0OTUwNjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1495065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kbsriram", "html_url": "https://github.com/kbsriram", "followers_url": "https://api.github.com/users/kbsriram/followers", "following_url": "https://api.github.com/users/kbsriram/following{/other_user}", "gists_url": "https://api.github.com/users/kbsriram/gists{/gist_id}", "starred_url": "https://api.github.com/users/kbsriram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kbsriram/subscriptions", "organizations_url": "https://api.github.com/users/kbsriram/orgs", "repos_url": "https://api.github.com/users/kbsriram/repos", "events_url": "https://api.github.com/users/kbsriram/events{/privacy}", "received_events_url": "https://api.github.com/users/kbsriram/received_events", "type": "User", "site_admin": false}, "body": "Ack - will do. I've corrected the other nits, and added a note in the annotation Javadoc that the names must be valid Java identifiers.", "created_at": "2017-07-26T14:13:36Z", "updated_at": "2017-07-26T14:13:36Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/11559#discussion_r129583118", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11559", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/129583118"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/11559#discussion_r129583118"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11559"}}, "body_html": "<p>Ack - will do. I've corrected the other nits, and added a note in the annotation Javadoc that the names must be valid Java identifiers.</p>", "body_text": "Ack - will do. I've corrected the other nits, and added a note in the annotation Javadoc that the names must be valid Java identifiers.", "in_reply_to_id": 129197186}