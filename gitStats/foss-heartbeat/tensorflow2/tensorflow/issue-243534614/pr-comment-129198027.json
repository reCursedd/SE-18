{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/129198027", "pull_request_review_id": 51942621, "id": 129198027, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyOTE5ODAyNw==", "diff_hunk": "@@ -0,0 +1,177 @@\n+/* Copyright 2017 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+package org.tensorflow.op.core;\n+\n+import java.nio.ByteBuffer;\n+import java.nio.DoubleBuffer;\n+import java.nio.FloatBuffer;\n+import java.nio.IntBuffer;\n+import java.nio.LongBuffer;\n+import org.tensorflow.DataType;\n+import org.tensorflow.Operand;\n+import org.tensorflow.Operation;\n+import org.tensorflow.Output;\n+import org.tensorflow.Tensor;\n+import org.tensorflow.op.PrimitiveOp;\n+import org.tensorflow.op.Scope;\n+import org.tensorflow.op.annotation.Operator;\n+\n+/** An operator producing a constant value. */\n+@Operator\n+public final class Constant extends PrimitiveOp implements Operand {\n+  /**\n+   * Create a constant from a Java object.\n+   *\n+   * <p>The argument {@code object} is first converted into a Tensor using {@link\n+   * org.tensorflow.Tensor#create(Object)}, so only Objects supported by this method must be\n+   * provided. For example:\n+   *\n+   * <pre>{@code\n+   * Constant.create(scope, 7); // returns a constant scalar tensor 7\n+   * }</pre>\n+   *\n+   * @param scope is a scope used to add the underlying operation.\n+   * @param object a Java object representing the constant.\n+   * @see org.tensorflow.Tensor#create(Object) Tensor.create\n+   */\n+  public static Constant create(Scope scope, Object object) {\n+    try (Tensor value = Tensor.create(object)) {\n+      return createWithTensor(scope, value);\n+    }\n+  }\n+\n+  /**\n+   * Create a {@link DataType#INT32} constant with data from the given buffer.\n+   *\n+   * <p>Creates a constant with the given shape by copying elements from the buffer (starting from\n+   * its current position) into the tensor. For example, if {@code shape = {2,3} } (which represents\n+   * a 2x3 matrix) then the buffer must have 6 elements remaining, which will be consumed by this\n+   * method.\n+   *\n+   * @param scope is a scope used to add the underlying operation.\n+   * @param shape the tensor shape.\n+   * @param data a buffer containing the tensor data.\n+   * @throws IllegalArgumentException If the tensor shape is not compatible with the buffer\n+   */\n+  public static Constant create(Scope scope, long[] shape, IntBuffer data) {\n+    try (Tensor value = Tensor.create(shape, data)) {\n+      return createWithTensor(scope, value);\n+    }\n+  }\n+\n+  /**\n+   * Create a {@link DataType#FLOAT} constant with data from the given buffer.\n+   *\n+   * <p>Creates a constant with the given shape by copying elements from the buffer (starting from\n+   * its current position) into the tensor. For example, if {@code shape = {2,3} } (which represents\n+   * a 2x3 matrix) then the buffer must have 6 elements remaining, which will be consumed by this\n+   * method.\n+   *\n+   * @param scope is a scope used to add the underlying operation.\n+   * @param shape the tensor shape.\n+   * @param data a buffer containing the tensor data.\n+   * @throws IllegalArgumentException If the tensor shape is not compatible with the buffer\n+   */\n+  public static Constant create(Scope scope, long[] shape, FloatBuffer data) {\n+    try (Tensor value = Tensor.create(shape, data)) {\n+      return createWithTensor(scope, value);\n+    }\n+  }\n+\n+  /**\n+   * Create a {@link DataType#DOUBLE} constant with data from the given buffer.\n+   *\n+   * <p>Creates a constant with the given shape by copying elements from the buffer (starting from\n+   * its current position) into the tensor. For example, if {@code shape = {2,3} } (which represents\n+   * a 2x3 matrix) then the buffer must have 6 elements remaining, which will be consumed by this\n+   * method.\n+   *\n+   * @param scope is a scope used to add the underlying operation.\n+   * @param shape the tensor shape.\n+   * @param data a buffer containing the tensor data.\n+   * @throws IllegalArgumentException If the tensor shape is not compatible with the buffer\n+   */\n+  public static Constant create(Scope scope, long[] shape, DoubleBuffer data) {\n+    try (Tensor value = Tensor.create(shape, data)) {\n+      return createWithTensor(scope, value);\n+    }\n+  }\n+\n+  /**\n+   * Create a {@link DataType#INT64} constant with data from the given buffer.\n+   *\n+   * <p>Creates a constant with the given shape by copying elements from the buffer (starting from\n+   * its current position) into the tensor. For example, if {@code shape = {2,3} } (which represents\n+   * a 2x3 matrix) then the buffer must have 6 elements remaining, which will be consumed by this\n+   * method.\n+   *\n+   * @param scope is a scope used to add the underlying operation.\n+   * @param shape the tensor shape.\n+   * @param data a buffer containing the tensor data.\n+   * @throws IllegalArgumentException If the tensor shape is not compatible with the buffer\n+   */\n+  public static Constant create(Scope scope, long[] shape, LongBuffer data) {\n+    try (Tensor value = Tensor.create(shape, data)) {\n+      return createWithTensor(scope, value);\n+    }\n+  }\n+\n+  /**\n+   * Create a constant with data from the given buffer.\n+   *\n+   * <p>Creates a Constant with the provided shape of any type where the constant data has been\n+   * encoded into {@code data} as per the specification of the TensorFlow <a\n+   * href=\"https://www.tensorflow.org/code/tensorflow/c/c_api.h\">C API</a>.\n+   *\n+   * @param scope is a scope used to add the underlying operation.\n+   * @param dataType the tensor datatype.\n+   * @param shape the tensor shape.\n+   * @param data a buffer containing the tensor data.\n+   * @throws IllegalArgumentException If the tensor datatype or shape is not compatible with the\n+   *     buffer\n+   */\n+  public static Constant create(Scope scope, DataType dataType, long[] shape, ByteBuffer data) {\n+    try (Tensor value = Tensor.create(dataType, shape, data)) {\n+      return createWithTensor(scope, value);\n+    }\n+  }\n+\n+  private static Constant createWithTensor(Scope scope, Tensor value) {\n+    return new Constant(\n+        scope\n+            .graph()\n+            .opBuilder(OP, scope.makeOpName(OP))\n+            .setAttr(VALUE, value)", "path": "tensorflow/java/src/main/java/org/tensorflow/op/core/Constant.java", "position": null, "original_position": 157, "commit_id": "8f051ba077fc834e64f719cbeabcfa4c985d8d37", "original_commit_id": "5888075323937f45e3968ba2d2a31debc32f6735", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "Since this is the one and only place where the string constants are used, might as well inline them", "created_at": "2017-07-25T02:09:47Z", "updated_at": "2017-07-26T14:10:46Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/11559#discussion_r129198027", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11559", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/129198027"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/11559#discussion_r129198027"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/11559"}}, "body_html": "<p>Since this is the one and only place where the string constants are used, might as well inline them</p>", "body_text": "Since this is the one and only place where the string constants are used, might as well inline them"}