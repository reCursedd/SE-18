{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/317606119", "html_url": "https://github.com/tensorflow/tensorflow/pull/11408#issuecomment-317606119", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11408", "id": 317606119, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzYwNjExOQ==", "user": {"login": "hawkinsp", "id": 348932, "node_id": "MDQ6VXNlcjM0ODkzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/348932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hawkinsp", "html_url": "https://github.com/hawkinsp", "followers_url": "https://api.github.com/users/hawkinsp/followers", "following_url": "https://api.github.com/users/hawkinsp/following{/other_user}", "gists_url": "https://api.github.com/users/hawkinsp/gists{/gist_id}", "starred_url": "https://api.github.com/users/hawkinsp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hawkinsp/subscriptions", "organizations_url": "https://api.github.com/users/hawkinsp/orgs", "repos_url": "https://api.github.com/users/hawkinsp/repos", "events_url": "https://api.github.com/users/hawkinsp/events{/privacy}", "received_events_url": "https://api.github.com/users/hawkinsp/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-25T01:58:23Z", "updated_at": "2017-07-25T01:58:23Z", "author_association": "MEMBER", "body_html": "<p>I would like to do something to consolidate the two schemes rather than having two ways to disable tests.</p>\n<p>The main feature missing from the approach in the PR is the ability to disable individual tests. We use this fairly frequently if there is just one test in a suite that is broken for some reason. This does require some runtime reasoning --- it's not sufficient to disable at the build rule granularity.</p>\n<p>To inject the extra manifest file into the tests, we have a local modification to the tf_xla_py_test() build rule. It's nothing fancy --- it just adds an extra argument to the py_test() targets it generates. Is there any reason we couldn't do something similar for your plugin tests --- have the plugin description point to a manifest file instead?</p>", "body_text": "I would like to do something to consolidate the two schemes rather than having two ways to disable tests.\nThe main feature missing from the approach in the PR is the ability to disable individual tests. We use this fairly frequently if there is just one test in a suite that is broken for some reason. This does require some runtime reasoning --- it's not sufficient to disable at the build rule granularity.\nTo inject the extra manifest file into the tests, we have a local modification to the tf_xla_py_test() build rule. It's nothing fancy --- it just adds an extra argument to the py_test() targets it generates. Is there any reason we couldn't do something similar for your plugin tests --- have the plugin description point to a manifest file instead?", "body": "I would like to do something to consolidate the two schemes rather than having two ways to disable tests.\r\n\r\nThe main feature missing from the approach in the PR is the ability to disable individual tests. We use this fairly frequently if there is just one test in a suite that is broken for some reason. This does require some runtime reasoning --- it's not sufficient to disable at the build rule granularity.\r\n\r\nTo inject the extra manifest file into the tests, we have a local modification to the tf_xla_py_test() build rule. It's nothing fancy --- it just adds an extra argument to the py_test() targets it generates. Is there any reason we couldn't do something similar for your plugin tests --- have the plugin description point to a manifest file instead?\r\n"}