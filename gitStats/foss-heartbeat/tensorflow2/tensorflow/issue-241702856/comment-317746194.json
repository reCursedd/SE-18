{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/317746194", "html_url": "https://github.com/tensorflow/tensorflow/pull/11408#issuecomment-317746194", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11408", "id": 317746194, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzc0NjE5NA==", "user": {"login": "hawkinsp", "id": 348932, "node_id": "MDQ6VXNlcjM0ODkzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/348932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hawkinsp", "html_url": "https://github.com/hawkinsp", "followers_url": "https://api.github.com/users/hawkinsp/followers", "following_url": "https://api.github.com/users/hawkinsp/following{/other_user}", "gists_url": "https://api.github.com/users/hawkinsp/gists{/gist_id}", "starred_url": "https://api.github.com/users/hawkinsp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hawkinsp/subscriptions", "organizations_url": "https://api.github.com/users/hawkinsp/orgs", "repos_url": "https://api.github.com/users/hawkinsp/repos", "events_url": "https://api.github.com/users/hawkinsp/events{/privacy}", "received_events_url": "https://api.github.com/users/hawkinsp/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-25T13:59:00Z", "updated_at": "2017-07-25T13:59:00Z", "author_association": "MEMBER", "body_html": "<p>For reference here's what we do for an experimental internal backend.</p>\n<p>The BUILD file in the directory containing the manifest has:</p>\n<pre><code>exports_files([\n    \"disabled_manifest.txt\",\n])\n</code></pre>\n<p>The build_defs.bzl contains the following logic in <code>tf_xla_py_test</code> for the additional backend:</p>\n<pre><code>      backend_args += [\n          ...\n          \"--disabled_manifest=path/to/my/disabled_manifest.txt\",\n      ]\n      backend_data += [\"//path/to/my:disabled_manifest.txt\"]\n</code></pre>\n<p>This only works for Python tests --- we have a separate mechanism for C++ tests. The C++ mechanism is also based around a manifest file, but we never bothered to opensource that code with the rest of XLA since it didn't seem useful to anyone else. If you would like, I can opensource that code.</p>", "body_text": "For reference here's what we do for an experimental internal backend.\nThe BUILD file in the directory containing the manifest has:\nexports_files([\n    \"disabled_manifest.txt\",\n])\n\nThe build_defs.bzl contains the following logic in tf_xla_py_test for the additional backend:\n      backend_args += [\n          ...\n          \"--disabled_manifest=path/to/my/disabled_manifest.txt\",\n      ]\n      backend_data += [\"//path/to/my:disabled_manifest.txt\"]\n\nThis only works for Python tests --- we have a separate mechanism for C++ tests. The C++ mechanism is also based around a manifest file, but we never bothered to opensource that code with the rest of XLA since it didn't seem useful to anyone else. If you would like, I can opensource that code.", "body": "For reference here's what we do for an experimental internal backend.\r\n\r\nThe BUILD file in the directory containing the manifest has:\r\n\r\n```\r\nexports_files([\r\n    \"disabled_manifest.txt\",\r\n])\r\n```\r\n\r\nThe build_defs.bzl contains the following logic in `tf_xla_py_test` for the additional backend:\r\n```\r\n      backend_args += [\r\n          ...\r\n          \"--disabled_manifest=path/to/my/disabled_manifest.txt\",\r\n      ]\r\n      backend_data += [\"//path/to/my:disabled_manifest.txt\"]\r\n```\r\n\r\nThis only works for Python tests --- we have a separate mechanism for C++ tests. The C++ mechanism is also based around a manifest file, but we never bothered to opensource that code with the rest of XLA since it didn't seem useful to anyone else. If you would like, I can opensource that code."}