{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21120", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21120/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21120/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21120/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21120", "id": 344316397, "node_id": "MDU6SXNzdWUzNDQzMTYzOTc=", "number": 21120, "title": "Log_probabilities returned by tf.nn.ctc_beam_search_decoder", "user": {"login": "karanMal", "id": 15909866, "node_id": "MDQ6VXNlcjE1OTA5ODY2", "avatar_url": "https://avatars2.githubusercontent.com/u/15909866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karanMal", "html_url": "https://github.com/karanMal", "followers_url": "https://api.github.com/users/karanMal/followers", "following_url": "https://api.github.com/users/karanMal/following{/other_user}", "gists_url": "https://api.github.com/users/karanMal/gists{/gist_id}", "starred_url": "https://api.github.com/users/karanMal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karanMal/subscriptions", "organizations_url": "https://api.github.com/users/karanMal/orgs", "repos_url": "https://api.github.com/users/karanMal/repos", "events_url": "https://api.github.com/users/karanMal/events{/privacy}", "received_events_url": "https://api.github.com/users/karanMal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-07-25T06:58:00Z", "updated_at": "2018-08-22T04:42:40Z", "closed_at": "2018-08-22T04:42:40Z", "author_association": "NONE", "body_html": "<p><strong>System Info</strong></p>\n<ul>\n<li>Have I written custom code=Yes</li>\n<li>OS Platform and Distribution :: Linux ( CentOS version 6.6 )</li>\n<li>TensorFlow installed from: binary (pip install)</li>\n<li>TensorFlow version : 1.3.0</li>\n<li>Bazel version: N/A</li>\n<li>CUDA/cuDNN version : v8.0.44</li>\n<li>GPU model and memory: NVIDIA Quadro P5000 (16272MiB)</li>\n<li>Exact command to reproduce :N/A</li>\n<li>Mobile device: N/A</li>\n</ul>\n<p><strong>Problem</strong><br>\nI am training a LSTM-CTC speech recognition system with using beam search decoding in the following configuration:</p>\n<p><code>decoded, log_prob = tf.nn.ctc_beam_search_decoder( inputs, sequence_length, beam_width=100, top_paths=3, merge_repeated=True )</code></p>\n<p>The output of log_probabilities for a batch by the above decoder are like-</p>\n<p>`</p>\n<pre><code>   [ [ 20.45407486,  20.44991684,  20.41798401],\n\n    [ 14.9961853 ,  14.925807  ,  14.88066769],\n    ..., \n    [ 18.89863396,  18.85992241,  18.85712433],\n\n    [  3.93567419,   3.92791557,   3.89198923],\n\n    [ 14.56258488,  14.55923843,  14.51092243]],`\n</code></pre>\n<p>So how these scores represent log probabilities and if I want to compare confidence for top paths among examples then what will be the normalisation factor???</p>", "body_text": "System Info\n\nHave I written custom code=Yes\nOS Platform and Distribution :: Linux ( CentOS version 6.6 )\nTensorFlow installed from: binary (pip install)\nTensorFlow version : 1.3.0\nBazel version: N/A\nCUDA/cuDNN version : v8.0.44\nGPU model and memory: NVIDIA Quadro P5000 (16272MiB)\nExact command to reproduce :N/A\nMobile device: N/A\n\nProblem\nI am training a LSTM-CTC speech recognition system with using beam search decoding in the following configuration:\ndecoded, log_prob = tf.nn.ctc_beam_search_decoder( inputs, sequence_length, beam_width=100, top_paths=3, merge_repeated=True )\nThe output of log_probabilities for a batch by the above decoder are like-\n`\n   [ [ 20.45407486,  20.44991684,  20.41798401],\n\n    [ 14.9961853 ,  14.925807  ,  14.88066769],\n    ..., \n    [ 18.89863396,  18.85992241,  18.85712433],\n\n    [  3.93567419,   3.92791557,   3.89198923],\n\n    [ 14.56258488,  14.55923843,  14.51092243]],`\n\nSo how these scores represent log probabilities and if I want to compare confidence for top paths among examples then what will be the normalisation factor???", "body": "**System Info**\r\n\r\n- Have I written custom code=Yes\r\n- OS Platform and Distribution :: Linux ( CentOS version 6.6 )\r\n- TensorFlow installed from: binary (pip install)\r\n- TensorFlow version : 1.3.0\r\n- Bazel version: N/A\r\n- CUDA/cuDNN version : v8.0.44\r\n- GPU model and memory: NVIDIA Quadro P5000 (16272MiB)\r\n- Exact command to reproduce :N/A \r\n- Mobile device: N/A\r\n\r\n**Problem**\r\nI am training a LSTM-CTC speech recognition system with using beam search decoding in the following configuration:\r\n\r\n`decoded, log_prob =\r\ntf.nn.ctc_beam_search_decoder(\r\n    inputs,\r\n    sequence_length,\r\n    beam_width=100,\r\n    top_paths=3,\r\n    merge_repeated=True\r\n)`\r\n\r\n\r\nThe output of log_probabilities for a batch by the above decoder are like-\r\n \r\n`     \r\n\r\n       [ [ 20.45407486,  20.44991684,  20.41798401],\r\n\r\n        [ 14.9961853 ,  14.925807  ,  14.88066769],\r\n        ..., \r\n        [ 18.89863396,  18.85992241,  18.85712433],\r\n\r\n        [  3.93567419,   3.92791557,   3.89198923],\r\n\r\n        [ 14.56258488,  14.55923843,  14.51092243]],`\r\n\r\n\r\nSo how these scores represent log probabilities and if I want to compare confidence for top paths among examples then what will be the normalisation factor???\r\n\r\n\r\n"}