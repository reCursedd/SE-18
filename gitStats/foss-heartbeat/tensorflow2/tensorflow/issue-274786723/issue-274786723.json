{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14648", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14648/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14648/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14648/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14648", "id": 274786723, "node_id": "MDU6SXNzdWUyNzQ3ODY3MjM=", "number": 14648, "title": "labels produced by Dataset  API can not be well operated!  when use tf.reduce_sum or tf.split on labels ,it returnss the wrong result ", "user": {"login": "reyne-d", "id": 25190733, "node_id": "MDQ6VXNlcjI1MTkwNzMz", "avatar_url": "https://avatars0.githubusercontent.com/u/25190733?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reyne-d", "html_url": "https://github.com/reyne-d", "followers_url": "https://api.github.com/users/reyne-d/followers", "following_url": "https://api.github.com/users/reyne-d/following{/other_user}", "gists_url": "https://api.github.com/users/reyne-d/gists{/gist_id}", "starred_url": "https://api.github.com/users/reyne-d/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reyne-d/subscriptions", "organizations_url": "https://api.github.com/users/reyne-d/orgs", "repos_url": "https://api.github.com/users/reyne-d/repos", "events_url": "https://api.github.com/users/reyne-d/events{/privacy}", "received_events_url": "https://api.github.com/users/reyne-d/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473184161, "node_id": "MDU6TGFiZWw0NzMxODQxNjE=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:support", "name": "type:support", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-17T08:25:38Z", "updated_at": "2017-12-20T02:04:23Z", "closed_at": "2017-12-20T02:04:23Z", "author_association": "NONE", "body_html": "<p>my system :<br>\ncuda 8.0<br>\ntensorflow-gpu (1.3.0)<br>\ntensorflow-tensorboard (0.1.7)<br>\npython 2.7<br>\nubuntu 14.04</p>\n<h3><em><strong><strong><strong><strong><strong><strong>description\uff1a</strong></strong></strong></strong></strong></strong></em>*</h3>\n<blockquote>\n<p>I use Dataset and Estimator to train my model.  When I test the<br>\nreturn value  of Dataset , the return value(images and labels) of input_fn is right.<br>\nBut when I use tf.reduce_sum or tf.split to the labels, all results got wrong.<br>\nI can't undenstand what had happend.</p>\n</blockquote>\n<h3>*******<em><strong><strong><strong>key code</strong></strong></strong></em></h3>\n<p>def dataset_parser(value,is_training): # return signal  imagel and label<br>\ndef input_fn(is_training,num_epochs=1) # return batch imagel and label</p>\n<p>FLAGS.batch_size=5<br>\nsess = tf.InteractiveSession()<br>\nimages,labels = input_fn(True,1)<br>\nsess.run(labels)</p>\n<blockquote>\n<p>the labels of one batch</p>\n<blockquote>\n<p>array([[ 0.        ,  1.        ,  2.75984216,  5.86036015],<br>\n[ 1.        ,  0.        ,  3.82080388,  4.23745823],<br>\n[ 1.        ,  0.        ,  7.59959507,  4.93859673],<br>\n[ 0.        ,  1.        ,  3.29546738,  5.50357151],<br>\n[ 0.        ,  1.        ,  2.0612247 ,  6.73015881]], dtype=float32)</p>\n</blockquote>\n</blockquote>\n<p>label,weight,score = tf.split(value=labels,num_or_size_splits=[2,1,1],axis=1)<br>\ni = 1<br>\nprint labels<br>\nprint sess.run(label[i])<br>\nprint sess.run(weight[i])<br>\nprint sess.run(score[i])</p>\n<blockquote>\n<p>we expected to get the split value of [1,0] [3.82080388,],[ 4.23745823] ,but the result is following</p>\n<blockquote>\n<p>Tensor(\"IteratorGetNext:1\", shape=(?, 4), dtype=float32)<br>\n[ 0.  1.]<br>\n[ 2.85865355]<br>\n[ 5.57142878]</p>\n</blockquote>\n</blockquote>\n<p>a = tf.reduce_sum(labels,0)<br>\nprint  sess.run(a)</p>\n<blockquote>\n<p>we expected to get the values of [  2. \u3000\u3000 , 3.\u3000\u3000\u3000,  19.53693319\u3000\u3000 , 27.27014543],but we get the following result.</p>\n<blockquote>\n<p>[  4.           1.          25.82047653  24.87050629]</p>\n</blockquote>\n</blockquote>\n<h3># \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"code detail \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"</h3>\n<pre><code>def dataset_parser(value,is_training):\n    features = {}\n    features['image'] = tf.FixedLenFeature([], tf.string)\n    features['average_score'] = tf.FixedLenFeature((),tf.float32,default_value=0)\n    features['aes_tag'] = tf.FixedLenFeature((),tf.float32,default_value=0)\n \n    parsed = tf.parse_single_example(value, features=features)\n    image = tf.decode_raw(parsed['image'],tf.uint8)\n    image = tf.reshape(image,[256,256,3])\n\n    aes_tag = tf.one_hot(tf.cast(parsed['aes_tag'],tf.int32),FLAGS.num_classes)\n    if is_training:\n        weight = tf.where(tf.greater(score,5),FLAGS.beta,FLAGS.alpha)\n        label = tf.reshape(tf.concat([aes_tag,[weight],[score]],0),(4,))\n    \n    else:\n        weight = tf.ones(1,dtype=tf.float32)\n        label = tf.reshape(tf.concat([aes_tag,weight],0),(3,))\n\n    \n    return image,label\n\n\ndef input_fn(is_training,num_epochs=1):\n    \"\"\"Input function which provides batches for train or eval.\"\"\"\n    dataset = tf.contrib.data.TFRecordDataset([FLAGS.train_data_path if is_training  else FLAGS.test_data_path])\n\n    if is_training:\n        dataset = dataset.repeat(num_epochs)\n\n    dataset = dataset.map(lambda value: dataset_parser(value, is_training),\n        num_threads=5,output_buffer_size=FLAGS.batch_size)\n\n    if is_training:\n        buffer_size = 1250 + 2 * FLAGS.batch_size\n        dataset = dataset.shuffle(buffer_size=buffer_size)\n    iterator = dataset.batch(FLAGS.batch_size).make_one_shot_iterator()\n    images, labels = iterator.get_next()\n    return images, labels\n     \n</code></pre>", "body_text": "my system :\ncuda 8.0\ntensorflow-gpu (1.3.0)\ntensorflow-tensorboard (0.1.7)\npython 2.7\nubuntu 14.04\ndescription\uff1a*\n\nI use Dataset and Estimator to train my model.  When I test the\nreturn value  of Dataset , the return value(images and labels) of input_fn is right.\nBut when I use tf.reduce_sum or tf.split to the labels, all results got wrong.\nI can't undenstand what had happend.\n\n*******key code\ndef dataset_parser(value,is_training): # return signal  imagel and label\ndef input_fn(is_training,num_epochs=1) # return batch imagel and label\nFLAGS.batch_size=5\nsess = tf.InteractiveSession()\nimages,labels = input_fn(True,1)\nsess.run(labels)\n\nthe labels of one batch\n\narray([[ 0.        ,  1.        ,  2.75984216,  5.86036015],\n[ 1.        ,  0.        ,  3.82080388,  4.23745823],\n[ 1.        ,  0.        ,  7.59959507,  4.93859673],\n[ 0.        ,  1.        ,  3.29546738,  5.50357151],\n[ 0.        ,  1.        ,  2.0612247 ,  6.73015881]], dtype=float32)\n\n\nlabel,weight,score = tf.split(value=labels,num_or_size_splits=[2,1,1],axis=1)\ni = 1\nprint labels\nprint sess.run(label[i])\nprint sess.run(weight[i])\nprint sess.run(score[i])\n\nwe expected to get the split value of [1,0] [3.82080388,],[ 4.23745823] ,but the result is following\n\nTensor(\"IteratorGetNext:1\", shape=(?, 4), dtype=float32)\n[ 0.  1.]\n[ 2.85865355]\n[ 5.57142878]\n\n\na = tf.reduce_sum(labels,0)\nprint  sess.run(a)\n\nwe expected to get the values of [  2. \u3000\u3000 , 3.\u3000\u3000\u3000,  19.53693319\u3000\u3000 , 27.27014543],but we get the following result.\n\n[  4.           1.          25.82047653  24.87050629]\n\n\n# \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"code detail \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\ndef dataset_parser(value,is_training):\n    features = {}\n    features['image'] = tf.FixedLenFeature([], tf.string)\n    features['average_score'] = tf.FixedLenFeature((),tf.float32,default_value=0)\n    features['aes_tag'] = tf.FixedLenFeature((),tf.float32,default_value=0)\n \n    parsed = tf.parse_single_example(value, features=features)\n    image = tf.decode_raw(parsed['image'],tf.uint8)\n    image = tf.reshape(image,[256,256,3])\n\n    aes_tag = tf.one_hot(tf.cast(parsed['aes_tag'],tf.int32),FLAGS.num_classes)\n    if is_training:\n        weight = tf.where(tf.greater(score,5),FLAGS.beta,FLAGS.alpha)\n        label = tf.reshape(tf.concat([aes_tag,[weight],[score]],0),(4,))\n    \n    else:\n        weight = tf.ones(1,dtype=tf.float32)\n        label = tf.reshape(tf.concat([aes_tag,weight],0),(3,))\n\n    \n    return image,label\n\n\ndef input_fn(is_training,num_epochs=1):\n    \"\"\"Input function which provides batches for train or eval.\"\"\"\n    dataset = tf.contrib.data.TFRecordDataset([FLAGS.train_data_path if is_training  else FLAGS.test_data_path])\n\n    if is_training:\n        dataset = dataset.repeat(num_epochs)\n\n    dataset = dataset.map(lambda value: dataset_parser(value, is_training),\n        num_threads=5,output_buffer_size=FLAGS.batch_size)\n\n    if is_training:\n        buffer_size = 1250 + 2 * FLAGS.batch_size\n        dataset = dataset.shuffle(buffer_size=buffer_size)\n    iterator = dataset.batch(FLAGS.batch_size).make_one_shot_iterator()\n    images, labels = iterator.get_next()\n    return images, labels", "body": "my system :\r\n     cuda 8.0\r\n     tensorflow-gpu (1.3.0)\r\n     tensorflow-tensorboard (0.1.7)\r\n      python 2.7\r\n       ubuntu 14.04\r\n### *************description\uff1a**************\r\n\r\n>  I use Dataset and Estimator to train my model.  When I test the  \r\n>  return value  of Dataset , the return value(images and labels) of input_fn is right.   \r\n>  But when I use tf.reduce_sum or tf.split to the labels, all results got wrong.  \r\n>  I can't undenstand what had happend.\r\n\r\n### **************key code*******\r\ndef dataset_parser(value,is_training): # return signal  imagel and label\r\ndef input_fn(is_training,num_epochs=1) # return batch imagel and label\r\n\r\nFLAGS.batch_size=5\r\nsess = tf.InteractiveSession()\r\nimages,labels = input_fn(True,1)\r\nsess.run(labels)\r\n\r\n> the labels of one batch\r\n>>array([[ 0.        ,  1.        ,  2.75984216,  5.86036015],\r\n       [ 1.        ,  0.        ,  3.82080388,  4.23745823],\r\n       [ 1.        ,  0.        ,  7.59959507,  4.93859673],\r\n       [ 0.        ,  1.        ,  3.29546738,  5.50357151],\r\n       [ 0.        ,  1.        ,  2.0612247 ,  6.73015881]], dtype=float32)\r\n\r\nlabel,weight,score = tf.split(value=labels,num_or_size_splits=[2,1,1],axis=1)\r\ni = 1\r\nprint labels\r\nprint sess.run(label[i]) \r\nprint sess.run(weight[i])\r\nprint sess.run(score[i])  \r\n\r\n>  we expected to get the split value of [1,0] [3.82080388,],[ 4.23745823] ,but the result is following\r\n>>Tensor(\"IteratorGetNext:1\", shape=(?, 4), dtype=float32)\r\n>>[ 0.  1.]\r\n>>[ 2.85865355]\r\n>>[ 5.57142878]\r\n\r\na = tf.reduce_sum(labels,0)\r\nprint  sess.run(a)\r\n> we expected to get the values of [  2. \u3000\u3000 , 3.\u3000\u3000\u3000,  19.53693319\u3000\u3000 , 27.27014543],but we get the following result.\r\n >>[  4.           1.          25.82047653  24.87050629]\r\n\r\n\r\n### # \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"code detail \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\r\n\r\n```\r\ndef dataset_parser(value,is_training):\r\n    features = {}\r\n    features['image'] = tf.FixedLenFeature([], tf.string)\r\n    features['average_score'] = tf.FixedLenFeature((),tf.float32,default_value=0)\r\n    features['aes_tag'] = tf.FixedLenFeature((),tf.float32,default_value=0)\r\n \r\n    parsed = tf.parse_single_example(value, features=features)\r\n    image = tf.decode_raw(parsed['image'],tf.uint8)\r\n    image = tf.reshape(image,[256,256,3])\r\n\r\n    aes_tag = tf.one_hot(tf.cast(parsed['aes_tag'],tf.int32),FLAGS.num_classes)\r\n    if is_training:\r\n        weight = tf.where(tf.greater(score,5),FLAGS.beta,FLAGS.alpha)\r\n        label = tf.reshape(tf.concat([aes_tag,[weight],[score]],0),(4,))\r\n    \r\n    else:\r\n        weight = tf.ones(1,dtype=tf.float32)\r\n        label = tf.reshape(tf.concat([aes_tag,weight],0),(3,))\r\n\r\n    \r\n    return image,label\r\n\r\n\r\ndef input_fn(is_training,num_epochs=1):\r\n    \"\"\"Input function which provides batches for train or eval.\"\"\"\r\n    dataset = tf.contrib.data.TFRecordDataset([FLAGS.train_data_path if is_training  else FLAGS.test_data_path])\r\n\r\n    if is_training:\r\n        dataset = dataset.repeat(num_epochs)\r\n\r\n    dataset = dataset.map(lambda value: dataset_parser(value, is_training),\r\n        num_threads=5,output_buffer_size=FLAGS.batch_size)\r\n\r\n    if is_training:\r\n        buffer_size = 1250 + 2 * FLAGS.batch_size\r\n        dataset = dataset.shuffle(buffer_size=buffer_size)\r\n    iterator = dataset.batch(FLAGS.batch_size).make_one_shot_iterator()\r\n    images, labels = iterator.get_next()\r\n    return images, labels\r\n     \r\n```"}