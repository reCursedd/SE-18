{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3073", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3073/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3073/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3073/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3073", "id": 162634078, "node_id": "MDU6SXNzdWUxNjI2MzQwNzg=", "number": 3073, "title": "tf.reset_default_graph() doesn't work on kubernetes?", "user": {"login": "perhapszzy", "id": 7953637, "node_id": "MDQ6VXNlcjc5NTM2Mzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7953637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/perhapszzy", "html_url": "https://github.com/perhapszzy", "followers_url": "https://api.github.com/users/perhapszzy/followers", "following_url": "https://api.github.com/users/perhapszzy/following{/other_user}", "gists_url": "https://api.github.com/users/perhapszzy/gists{/gist_id}", "starred_url": "https://api.github.com/users/perhapszzy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/perhapszzy/subscriptions", "organizations_url": "https://api.github.com/users/perhapszzy/orgs", "repos_url": "https://api.github.com/users/perhapszzy/repos", "events_url": "https://api.github.com/users/perhapszzy/events{/privacy}", "received_events_url": "https://api.github.com/users/perhapszzy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-06-28T08:50:55Z", "updated_at": "2016-06-29T10:18:39Z", "closed_at": "2016-06-29T10:18:39Z", "author_association": "CONTRIBUTOR", "body_html": "<p>In my understanding reset_default_graph() will reset the whole graph. However, it seems that this will only reset the value of variables when running parameter servers on kubernetes.</p>\n<p>First, I tried to get variable values before and after reset_default_graph(). The value is reset (value is 0) after running reset_default_graph().</p>\n<p>Then I tried to run a totally different algorithm using the same parameter server, it reported the error below:</p>\n<p><strong>Assign requires shapes of both tensors to match. lhs shape= [5,5,32,64] rhs shape= [50000]</strong></p>\n<p>Only chief run the reset_default_graph()  cmd. The code is:</p>\n<pre><code>is_chief = (FLAGS.worker_index == 0)\nif is_chief: tf.reset_default_graph()\n</code></pre>\n<p>The whole error message is:</p>\n<pre><code>Traceback (most recent call last):                                                                                                 \n  File \"word2vector.py\", line 160, in &lt;module&gt;                                                                                     \n    with sv.prepare_or_wait_for_session(FLAGS.worker_grpc_url, config=sess_config) as sess:                                        \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/supervisor.py\", line 685, in prepare_or_wait_for_session \n    config=config, init_feed_dict=self._init_feed_dict)                                                                            \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/session_manager.py\", line 163, in prepare_session        \n    sess.run(init_op, feed_dict=init_feed_dict)                                                                                    \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 340, in run                              \n    run_metadata_ptr)                                                                                                              \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 564, in _run                             \n    feed_dict_string, options, run_metadata)                                                                                       \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 637, in _do_run                          \n    target_list, options, run_metadata)                                                                                            \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 659, in _do_call                         \n    e.code)                    \n\ntensorflow.python.framework.errors.InvalidArgumentError: Assign requires shapes of both tensors to match. lhs shape= [5,5,32,64] rhs shape= [50000]                                                                                                                   \n\n         [[Node: Variable_3/Assign = Assign[T=DT_FLOAT, _class=[\"loc:@Variable_3\"], use_locking=true, validate_shape=true, _device=\n\"/job:ps/replica:0/task:3/cpu:0\"](Variable_3, zeros_S1)]]                                                                          \nCaused by op u'Variable_3/Assign', defined at:                                                                                     \n  File \"word2vector.py\", line 127, in &lt;module&gt;                                                                                     \n    nce_biases = tf.Variable(tf.zeros([vocabulary_size]))                                                                          \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/variables.py\", line 209, in __init__                          \n    dtype=dtype)                                                                                                                   \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/variables.py\", line 308, in _init_from_args                   \n    validate_shape=validate_shape).op                                                                                              \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_state_ops.py\", line 40, in assign                         \n    use_locking=use_locking, name=name)                                                                                            \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/op_def_library.py\", line 655, in apply_op                     \n    op_def=op_def)                                                                                                                 \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 2154, in create_op                        \n    original_op=self._default_original_op, op_def=op_def)                                                                          \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1154, in __init__                         \n    self._traceback = _extract_stack()                   \n</code></pre>", "body_text": "In my understanding reset_default_graph() will reset the whole graph. However, it seems that this will only reset the value of variables when running parameter servers on kubernetes.\nFirst, I tried to get variable values before and after reset_default_graph(). The value is reset (value is 0) after running reset_default_graph().\nThen I tried to run a totally different algorithm using the same parameter server, it reported the error below:\nAssign requires shapes of both tensors to match. lhs shape= [5,5,32,64] rhs shape= [50000]\nOnly chief run the reset_default_graph()  cmd. The code is:\nis_chief = (FLAGS.worker_index == 0)\nif is_chief: tf.reset_default_graph()\n\nThe whole error message is:\nTraceback (most recent call last):                                                                                                 \n  File \"word2vector.py\", line 160, in <module>                                                                                     \n    with sv.prepare_or_wait_for_session(FLAGS.worker_grpc_url, config=sess_config) as sess:                                        \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/supervisor.py\", line 685, in prepare_or_wait_for_session \n    config=config, init_feed_dict=self._init_feed_dict)                                                                            \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/session_manager.py\", line 163, in prepare_session        \n    sess.run(init_op, feed_dict=init_feed_dict)                                                                                    \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 340, in run                              \n    run_metadata_ptr)                                                                                                              \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 564, in _run                             \n    feed_dict_string, options, run_metadata)                                                                                       \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 637, in _do_run                          \n    target_list, options, run_metadata)                                                                                            \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 659, in _do_call                         \n    e.code)                    \n\ntensorflow.python.framework.errors.InvalidArgumentError: Assign requires shapes of both tensors to match. lhs shape= [5,5,32,64] rhs shape= [50000]                                                                                                                   \n\n         [[Node: Variable_3/Assign = Assign[T=DT_FLOAT, _class=[\"loc:@Variable_3\"], use_locking=true, validate_shape=true, _device=\n\"/job:ps/replica:0/task:3/cpu:0\"](Variable_3, zeros_S1)]]                                                                          \nCaused by op u'Variable_3/Assign', defined at:                                                                                     \n  File \"word2vector.py\", line 127, in <module>                                                                                     \n    nce_biases = tf.Variable(tf.zeros([vocabulary_size]))                                                                          \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/variables.py\", line 209, in __init__                          \n    dtype=dtype)                                                                                                                   \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/variables.py\", line 308, in _init_from_args                   \n    validate_shape=validate_shape).op                                                                                              \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_state_ops.py\", line 40, in assign                         \n    use_locking=use_locking, name=name)                                                                                            \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/op_def_library.py\", line 655, in apply_op                     \n    op_def=op_def)                                                                                                                 \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 2154, in create_op                        \n    original_op=self._default_original_op, op_def=op_def)                                                                          \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1154, in __init__                         \n    self._traceback = _extract_stack()", "body": "In my understanding reset_default_graph() will reset the whole graph. However, it seems that this will only reset the value of variables when running parameter servers on kubernetes.\n\nFirst, I tried to get variable values before and after reset_default_graph(). The value is reset (value is 0) after running reset_default_graph().\n\nThen I tried to run a totally different algorithm using the same parameter server, it reported the error below:\n\n**Assign requires shapes of both tensors to match. lhs shape= [5,5,32,64] rhs shape= [50000]**\n\nOnly chief run the reset_default_graph()  cmd. The code is:\n\n```\nis_chief = (FLAGS.worker_index == 0)\nif is_chief: tf.reset_default_graph()\n```\n\nThe whole error message is:\n\n```\nTraceback (most recent call last):                                                                                                 \n  File \"word2vector.py\", line 160, in <module>                                                                                     \n    with sv.prepare_or_wait_for_session(FLAGS.worker_grpc_url, config=sess_config) as sess:                                        \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/supervisor.py\", line 685, in prepare_or_wait_for_session \n    config=config, init_feed_dict=self._init_feed_dict)                                                                            \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/session_manager.py\", line 163, in prepare_session        \n    sess.run(init_op, feed_dict=init_feed_dict)                                                                                    \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 340, in run                              \n    run_metadata_ptr)                                                                                                              \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 564, in _run                             \n    feed_dict_string, options, run_metadata)                                                                                       \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 637, in _do_run                          \n    target_list, options, run_metadata)                                                                                            \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py\", line 659, in _do_call                         \n    e.code)                    \n\ntensorflow.python.framework.errors.InvalidArgumentError: Assign requires shapes of both tensors to match. lhs shape= [5,5,32,64] rhs shape= [50000]                                                                                                                   \n\n         [[Node: Variable_3/Assign = Assign[T=DT_FLOAT, _class=[\"loc:@Variable_3\"], use_locking=true, validate_shape=true, _device=\n\"/job:ps/replica:0/task:3/cpu:0\"](Variable_3, zeros_S1)]]                                                                          \nCaused by op u'Variable_3/Assign', defined at:                                                                                     \n  File \"word2vector.py\", line 127, in <module>                                                                                     \n    nce_biases = tf.Variable(tf.zeros([vocabulary_size]))                                                                          \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/variables.py\", line 209, in __init__                          \n    dtype=dtype)                                                                                                                   \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/variables.py\", line 308, in _init_from_args                   \n    validate_shape=validate_shape).op                                                                                              \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_state_ops.py\", line 40, in assign                         \n    use_locking=use_locking, name=name)                                                                                            \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/op_def_library.py\", line 655, in apply_op                     \n    op_def=op_def)                                                                                                                 \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 2154, in create_op                        \n    original_op=self._default_original_op, op_def=op_def)                                                                          \n  File \"/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py\", line 1154, in __init__                         \n    self._traceback = _extract_stack()                   \n```\n"}