{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/350122839", "html_url": "https://github.com/tensorflow/tensorflow/issues/14605#issuecomment-350122839", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14605", "id": 350122839, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDEyMjgzOQ==", "user": {"login": "sadlerjw", "id": 2762244, "node_id": "MDQ6VXNlcjI3NjIyNDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2762244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sadlerjw", "html_url": "https://github.com/sadlerjw", "followers_url": "https://api.github.com/users/sadlerjw/followers", "following_url": "https://api.github.com/users/sadlerjw/following{/other_user}", "gists_url": "https://api.github.com/users/sadlerjw/gists{/gist_id}", "starred_url": "https://api.github.com/users/sadlerjw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sadlerjw/subscriptions", "organizations_url": "https://api.github.com/users/sadlerjw/orgs", "repos_url": "https://api.github.com/users/sadlerjw/repos", "events_url": "https://api.github.com/users/sadlerjw/events{/privacy}", "received_events_url": "https://api.github.com/users/sadlerjw/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-07T23:09:23Z", "updated_at": "2017-12-07T23:37:07Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9794932\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apollo-time\">@apollo-time</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=33706846\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/llyyun\">@llyyun</a> I'm having trouble too - I tried adding <code>-lnsync</code> (since I include <code>nsync.a</code> in the project), and also tried including it directly via <code>-l~/tensorflow/tensorflow/contrib/makefile/downloads/nsync/builds/lipo.ios.c++11/nsync.a</code> but I still get</p>\n<pre><code>ld: library not found for -l~/tensorflow/tensorflow/contrib/makefile/downloads/nsync/builds/lipo.ios.c++11/nsync.a\n</code></pre>\n<p>(I also confirmed that the file does indeed exist at that path)</p>\n<p>Could you please be more specific about how to add this to the linker flags? (I'm not good with wrangling the compiler, sorry)</p>\n<p><strong>Update</strong>: I figured out you meant <em>just to add the path</em> without any flag like <code>-l</code>, which works. But I'm working on a cocoapod that includes a custom tensorflow build - and when cocoapods is instructed to include a library, it automatically adds the <code>-lnsync</code> flag. So I guess what I'm asking is, why is <code>nsync</code> included in a different way than other libraries?</p>", "body_text": "@apollo-time @llyyun I'm having trouble too - I tried adding -lnsync (since I include nsync.a in the project), and also tried including it directly via -l~/tensorflow/tensorflow/contrib/makefile/downloads/nsync/builds/lipo.ios.c++11/nsync.a but I still get\nld: library not found for -l~/tensorflow/tensorflow/contrib/makefile/downloads/nsync/builds/lipo.ios.c++11/nsync.a\n\n(I also confirmed that the file does indeed exist at that path)\nCould you please be more specific about how to add this to the linker flags? (I'm not good with wrangling the compiler, sorry)\nUpdate: I figured out you meant just to add the path without any flag like -l, which works. But I'm working on a cocoapod that includes a custom tensorflow build - and when cocoapods is instructed to include a library, it automatically adds the -lnsync flag. So I guess what I'm asking is, why is nsync included in a different way than other libraries?", "body": "@apollo-time @llyyun I'm having trouble too - I tried adding `-lnsync` (since I include `nsync.a` in the project), and also tried including it directly via `-l~/tensorflow/tensorflow/contrib/makefile/downloads/nsync/builds/lipo.ios.c++11/nsync.a` but I still get \r\n```\r\nld: library not found for -l~/tensorflow/tensorflow/contrib/makefile/downloads/nsync/builds/lipo.ios.c++11/nsync.a\r\n```\r\n\r\n(I also confirmed that the file does indeed exist at that path)\r\n\r\nCould you please be more specific about how to add this to the linker flags? (I'm not good with wrangling the compiler, sorry)\r\n\r\n**Update**: I figured out you meant *just to add the path* without any flag like `-l`, which works. But I'm working on a cocoapod that includes a custom tensorflow build - and when cocoapods is instructed to include a library, it automatically adds the `-lnsync` flag. So I guess what I'm asking is, why is `nsync` included in a different way than other libraries?"}