{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/271028334", "html_url": "https://github.com/tensorflow/tensorflow/issues/6646#issuecomment-271028334", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6646", "id": 271028334, "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTAyODMzNA==", "user": {"login": "theweiho", "id": 6696956, "node_id": "MDQ6VXNlcjY2OTY5NTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/6696956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theweiho", "html_url": "https://github.com/theweiho", "followers_url": "https://api.github.com/users/theweiho/followers", "following_url": "https://api.github.com/users/theweiho/following{/other_user}", "gists_url": "https://api.github.com/users/theweiho/gists{/gist_id}", "starred_url": "https://api.github.com/users/theweiho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theweiho/subscriptions", "organizations_url": "https://api.github.com/users/theweiho/orgs", "repos_url": "https://api.github.com/users/theweiho/repos", "events_url": "https://api.github.com/users/theweiho/events{/privacy}", "received_events_url": "https://api.github.com/users/theweiho/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-06T22:30:53Z", "updated_at": "2017-01-06T22:30:53Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Suppose the IDs are stored as<br>\nExample 1: <code>int64_list { value: 7 value: 101 value: 420 }</code><br>\nExample 2: <code>int64_list { value: 1 value: 8888 }</code></p>\n<p>They'd currently be read in as</p>\n<pre><code>SparseTensor(\n  indices=[[0, 0], [0, 1], [0, 2], [1, 0], [1, 1]],\n  values=[7, 101, 420, 1, 8888],\n  dense_shape=[2, 3])\n</code></pre>\n<p>by <code>parse_example()</code>, and can be used directly with <code>embedding_lookup_sparse()</code>.</p>\n<p>With this change, the user will need to do an additional conversion to change it to</p>\n<pre><code>SparseTensor(\n  indices=[[0, 7], [0, 101], [0, 420], [1, 1], [1, 8888]],\n  values=[1, 1, 1, 1, 1],\n  dense_shape=[2, 8889])\n</code></pre>\n<p>before being able to pass it into <code>embedding_lookup_sparse()</code>. This seems to make things more complicated and error-prone?</p>", "body_text": "Suppose the IDs are stored as\nExample 1: int64_list { value: 7 value: 101 value: 420 }\nExample 2: int64_list { value: 1 value: 8888 }\nThey'd currently be read in as\nSparseTensor(\n  indices=[[0, 0], [0, 1], [0, 2], [1, 0], [1, 1]],\n  values=[7, 101, 420, 1, 8888],\n  dense_shape=[2, 3])\n\nby parse_example(), and can be used directly with embedding_lookup_sparse().\nWith this change, the user will need to do an additional conversion to change it to\nSparseTensor(\n  indices=[[0, 7], [0, 101], [0, 420], [1, 1], [1, 8888]],\n  values=[1, 1, 1, 1, 1],\n  dense_shape=[2, 8889])\n\nbefore being able to pass it into embedding_lookup_sparse(). This seems to make things more complicated and error-prone?", "body": "Suppose the IDs are stored as \r\nExample 1: `int64_list { value: 7 value: 101 value: 420 }`\r\nExample 2: `int64_list { value: 1 value: 8888 }`\r\n\r\nThey'd currently be read in as\r\n```\r\nSparseTensor(\r\n  indices=[[0, 0], [0, 1], [0, 2], [1, 0], [1, 1]],\r\n  values=[7, 101, 420, 1, 8888],\r\n  dense_shape=[2, 3])\r\n```\r\nby `parse_example()`, and can be used directly with `embedding_lookup_sparse()`. \r\n\r\nWith this change, the user will need to do an additional conversion to change it to \r\n```\r\nSparseTensor(\r\n  indices=[[0, 7], [0, 101], [0, 420], [1, 1], [1, 8888]],\r\n  values=[1, 1, 1, 1, 1],\r\n  dense_shape=[2, 8889])\r\n```\r\nbefore being able to pass it into `embedding_lookup_sparse()`. This seems to make things more complicated and error-prone?\r\n"}