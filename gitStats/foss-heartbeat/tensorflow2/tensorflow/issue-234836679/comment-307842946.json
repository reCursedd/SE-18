{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/307842946", "html_url": "https://github.com/tensorflow/tensorflow/issues/10597#issuecomment-307842946", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10597", "id": 307842946, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzg0Mjk0Ng==", "user": {"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-12T16:29:23Z", "updated_at": "2017-06-12T16:29:23Z", "author_association": "MEMBER", "body_html": "<p>This is a bug in generator_input_fn -- I just looked and if I read it correctly, it makes a generator per thread (each thread calls the generator function passed to generator_input_fn).</p>\n<p>If you'd like to fix that, we'd welcome a fix (although it looks non-trivial). Even a doc fix would be welcome.</p>\n<p>The alternative is to write your generator to not use global state (in your case, <code>data_src.next_batch(1)</code> -- give each generator a separate copy of data_src).</p>", "body_text": "This is a bug in generator_input_fn -- I just looked and if I read it correctly, it makes a generator per thread (each thread calls the generator function passed to generator_input_fn).\nIf you'd like to fix that, we'd welcome a fix (although it looks non-trivial). Even a doc fix would be welcome.\nThe alternative is to write your generator to not use global state (in your case, data_src.next_batch(1) -- give each generator a separate copy of data_src).", "body": "This is a bug in generator_input_fn -- I just looked and if I read it correctly, it makes a generator per thread (each thread calls the generator function passed to generator_input_fn). \r\n\r\nIf you'd like to fix that, we'd welcome a fix (although it looks non-trivial). Even a doc fix would be welcome.\r\n\r\nThe alternative is to write your generator to not use global state (in your case, `data_src.next_batch(1)` -- give each generator a separate copy of data_src)."}