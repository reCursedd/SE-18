{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21583", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21583/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21583/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21583/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21583", "id": 350171004, "node_id": "MDU6SXNzdWUzNTAxNzEwMDQ=", "number": 21583, "title": "python XML content control", "user": {"login": "zerok01", "id": 34706028, "node_id": "MDQ6VXNlcjM0NzA2MDI4", "avatar_url": "https://avatars2.githubusercontent.com/u/34706028?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zerok01", "html_url": "https://github.com/zerok01", "followers_url": "https://api.github.com/users/zerok01/followers", "following_url": "https://api.github.com/users/zerok01/following{/other_user}", "gists_url": "https://api.github.com/users/zerok01/gists{/gist_id}", "starred_url": "https://api.github.com/users/zerok01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zerok01/subscriptions", "organizations_url": "https://api.github.com/users/zerok01/orgs", "repos_url": "https://api.github.com/users/zerok01/repos", "events_url": "https://api.github.com/users/zerok01/events{/privacy}", "received_events_url": "https://api.github.com/users/zerok01/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "michaelisard", "id": 5376757, "node_id": "MDQ6VXNlcjUzNzY3NTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5376757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelisard", "html_url": "https://github.com/michaelisard", "followers_url": "https://api.github.com/users/michaelisard/followers", "following_url": "https://api.github.com/users/michaelisard/following{/other_user}", "gists_url": "https://api.github.com/users/michaelisard/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelisard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelisard/subscriptions", "organizations_url": "https://api.github.com/users/michaelisard/orgs", "repos_url": "https://api.github.com/users/michaelisard/repos", "events_url": "https://api.github.com/users/michaelisard/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelisard/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "michaelisard", "id": 5376757, "node_id": "MDQ6VXNlcjUzNzY3NTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5376757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelisard", "html_url": "https://github.com/michaelisard", "followers_url": "https://api.github.com/users/michaelisard/followers", "following_url": "https://api.github.com/users/michaelisard/following{/other_user}", "gists_url": "https://api.github.com/users/michaelisard/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelisard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelisard/subscriptions", "organizations_url": "https://api.github.com/users/michaelisard/orgs", "repos_url": "https://api.github.com/users/michaelisard/repos", "events_url": "https://api.github.com/users/michaelisard/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelisard/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-08-13T19:57:31Z", "updated_at": "2018-08-15T19:43:57Z", "closed_at": "2018-08-15T19:43:57Z", "author_association": "NONE", "body_html": "<p>Below is a code snippet from the XML content that annotates the object tag and annotates it. Some XML files do not have an object tag. In this case it gives a keyError error. How can I pass such xml files without giving keyError</p>\n<pre><code>    annotation = read_xml(annotation_path)\n    image = read_image(image_path)\n\n    gt_boxes = []\n\n    for b in annotation['object']:\n        try:\n            label_id = self.classes.index(b['name'])\n        except ValueError:\n            continue\n\n        gt_boxes.append({\n            'label': label_id,\n            'xmin': b['bndbox']['xmin'],\n            'ymin': b['bndbox']['ymin'],\n            'xmax': b['bndbox']['xmax'],\n            'ymax': b['bndbox']['ymax'],\n        })\n</code></pre>\n<p>I want to put a control code above \"for b in annotation['object']:\" command. Help me please</p>", "body_text": "Below is a code snippet from the XML content that annotates the object tag and annotates it. Some XML files do not have an object tag. In this case it gives a keyError error. How can I pass such xml files without giving keyError\n    annotation = read_xml(annotation_path)\n    image = read_image(image_path)\n\n    gt_boxes = []\n\n    for b in annotation['object']:\n        try:\n            label_id = self.classes.index(b['name'])\n        except ValueError:\n            continue\n\n        gt_boxes.append({\n            'label': label_id,\n            'xmin': b['bndbox']['xmin'],\n            'ymin': b['bndbox']['ymin'],\n            'xmax': b['bndbox']['xmax'],\n            'ymax': b['bndbox']['ymax'],\n        })\n\nI want to put a control code above \"for b in annotation['object']:\" command. Help me please", "body": "\r\nBelow is a code snippet from the XML content that annotates the object tag and annotates it. Some XML files do not have an object tag. In this case it gives a keyError error. How can I pass such xml files without giving keyError\r\n\r\n        annotation = read_xml(annotation_path)\r\n        image = read_image(image_path)\r\n\r\n        gt_boxes = []\r\n\r\n        for b in annotation['object']:\r\n            try:\r\n                label_id = self.classes.index(b['name'])\r\n            except ValueError:\r\n                continue\r\n\r\n            gt_boxes.append({\r\n                'label': label_id,\r\n                'xmin': b['bndbox']['xmin'],\r\n                'ymin': b['bndbox']['ymin'],\r\n                'xmax': b['bndbox']['xmax'],\r\n                'ymax': b['bndbox']['ymax'],\r\n            })\r\nI want to put a control code above \"for b in annotation['object']:\" command. Help me please"}