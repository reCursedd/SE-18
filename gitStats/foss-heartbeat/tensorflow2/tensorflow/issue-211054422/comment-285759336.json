{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/285759336", "html_url": "https://github.com/tensorflow/tensorflow/issues/7970#issuecomment-285759336", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7970", "id": 285759336, "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTc1OTMzNg==", "user": {"login": "ispirmustafa", "id": 19293677, "node_id": "MDQ6VXNlcjE5MjkzNjc3", "avatar_url": "https://avatars1.githubusercontent.com/u/19293677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ispirmustafa", "html_url": "https://github.com/ispirmustafa", "followers_url": "https://api.github.com/users/ispirmustafa/followers", "following_url": "https://api.github.com/users/ispirmustafa/following{/other_user}", "gists_url": "https://api.github.com/users/ispirmustafa/gists{/gist_id}", "starred_url": "https://api.github.com/users/ispirmustafa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ispirmustafa/subscriptions", "organizations_url": "https://api.github.com/users/ispirmustafa/orgs", "repos_url": "https://api.github.com/users/ispirmustafa/repos", "events_url": "https://api.github.com/users/ispirmustafa/events{/privacy}", "received_events_url": "https://api.github.com/users/ispirmustafa/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-10T19:17:24Z", "updated_at": "2017-03-10T19:17:24Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Please check the documentation of MonitoredSession.<br>\nyou need to remove following lines:</p>\n<pre><code>local_init_op = opt.local_step_init_op\n    if is_chief:\n      local_init_op = opt.chief_init_op\n    ready_for_local_init_op = opt.ready_for_local_init_op\n\n    # Initial token and chief queue runners required by the sync_replicas mode\n    chief_queue_runner = opt.get_chief_queue_runner()\n    sync_init_op = opt.get_init_tokens_op()\n\n    init_op = tf.global_variables_initializer()\n</code></pre>\n<p>Also followings:</p>\n<pre><code>   sv = tf.train.Supervisor(\n                             is_chief=is_chief,\n                             logdir=train_dir,\n                             init_op=init_op,\n                             local_init_op=local_init_op,\n                             ready_for_local_init_op=ready_for_local_init_op,\n                             recovery_wait_secs=1,\n                             global_step=global_step)\n    \n    print '######################################### ALL CREATED'\n    #sess = sv.prepare_or_wait_for_session(server.target)\n</code></pre>\n<p>Also followings:<br>\nif is_chief:<br>\nsess.run(sync_init_op)<br>\nsv.start_queue_runners(sess, [chief_queue_runner])</p>\n<p>also can you delete train_dir after running enqueue_op.</p>", "body_text": "Please check the documentation of MonitoredSession.\nyou need to remove following lines:\nlocal_init_op = opt.local_step_init_op\n    if is_chief:\n      local_init_op = opt.chief_init_op\n    ready_for_local_init_op = opt.ready_for_local_init_op\n\n    # Initial token and chief queue runners required by the sync_replicas mode\n    chief_queue_runner = opt.get_chief_queue_runner()\n    sync_init_op = opt.get_init_tokens_op()\n\n    init_op = tf.global_variables_initializer()\n\nAlso followings:\n   sv = tf.train.Supervisor(\n                             is_chief=is_chief,\n                             logdir=train_dir,\n                             init_op=init_op,\n                             local_init_op=local_init_op,\n                             ready_for_local_init_op=ready_for_local_init_op,\n                             recovery_wait_secs=1,\n                             global_step=global_step)\n    \n    print '######################################### ALL CREATED'\n    #sess = sv.prepare_or_wait_for_session(server.target)\n\nAlso followings:\nif is_chief:\nsess.run(sync_init_op)\nsv.start_queue_runners(sess, [chief_queue_runner])\nalso can you delete train_dir after running enqueue_op.", "body": "Please check the documentation of MonitoredSession. \r\nyou need to remove following lines:\r\n```\r\nlocal_init_op = opt.local_step_init_op\r\n    if is_chief:\r\n      local_init_op = opt.chief_init_op\r\n    ready_for_local_init_op = opt.ready_for_local_init_op\r\n\r\n    # Initial token and chief queue runners required by the sync_replicas mode\r\n    chief_queue_runner = opt.get_chief_queue_runner()\r\n    sync_init_op = opt.get_init_tokens_op()\r\n\r\n    init_op = tf.global_variables_initializer()\r\n```\r\n\r\nAlso followings:\r\n```\r\n   sv = tf.train.Supervisor(\r\n                             is_chief=is_chief,\r\n                             logdir=train_dir,\r\n                             init_op=init_op,\r\n                             local_init_op=local_init_op,\r\n                             ready_for_local_init_op=ready_for_local_init_op,\r\n                             recovery_wait_secs=1,\r\n                             global_step=global_step)\r\n    \r\n    print '######################################### ALL CREATED'\r\n    #sess = sv.prepare_or_wait_for_session(server.target)\r\n```\r\nAlso followings:\r\n      if is_chief:\r\n        sess.run(sync_init_op)\r\n        sv.start_queue_runners(sess, [chief_queue_runner])\r\n\r\nalso can you delete train_dir after running enqueue_op.\r\n\r\n"}