{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14693", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14693/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14693/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14693/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14693", "id": 275094160, "node_id": "MDU6SXNzdWUyNzUwOTQxNjA=", "number": 14693, "title": "Why did you call BasicLSTMCell a cell and not a layer?", "user": {"login": "nbro", "id": 9349000, "node_id": "MDQ6VXNlcjkzNDkwMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9349000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbro", "html_url": "https://github.com/nbro", "followers_url": "https://api.github.com/users/nbro/followers", "following_url": "https://api.github.com/users/nbro/following{/other_user}", "gists_url": "https://api.github.com/users/nbro/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbro/subscriptions", "organizations_url": "https://api.github.com/users/nbro/orgs", "repos_url": "https://api.github.com/users/nbro/repos", "events_url": "https://api.github.com/users/nbro/events{/privacy}", "received_events_url": "https://api.github.com/users/nbro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-18T17:15:30Z", "updated_at": "2017-11-20T04:46:02Z", "closed_at": "2017-11-19T07:45:30Z", "author_association": "NONE", "body_html": "<p><code>BasicLSTMCell</code> is actually a layer (as for a layer in MLPs) of LSTM units. Each of these LSTM units contains a cell. Each cell of an LSTM unit contains a <strong>scalar value</strong> for the CEC and a <strong>scalar</strong> representing the previous state.</p>\n<p>People are usually first introduced to MLPs or feed-forward (and fully connected) neural networks, before being introduced to RNNs and, in particular, LSTMs.</p>\n<p>Why would you call <code>BasicLSTMCell</code> a <strong>cell</strong>, if it can be thought more intuitively (at least for me) as a layer of LSTM units (as I describe them above) containing just one scalar-based cell? Wouldn't it be less ambiguous to call a <code>BasicLSTMCell</code> <code>BasicLSTMLayer</code>???</p>\n<p>Moreover, the first parameter to <code>BasicLSTMCell</code>'s <code>__init__</code> method is <code>num_units</code>, i.e. the number of LSTM units, i.e. the number of LSTM cells and gates (if we have 3 gates for every LSTM unit, then the total number of gates in one layer of LSTMs is 3 * <code>num_units</code>).</p>\n<p>It almost seems that you created TF to make it as confusing as possible to make it seem hard. It also almost seems that the person who wrote the name of the class <code>BasicLSTMCell</code> is a different person of the person who wrote its <code>__init__</code> method. What's going on??? A little bit of consistency, for once, no???</p>\n<p>A similar argument can be said for <code>MultiRNNCell</code>, which, a lot more intuitively, can be thought as a sequence of layers.</p>\n<h3>Request</h3>\n<p>Change classes such as <code>BasicLSTMCell</code> and <code>MultiRNNCell</code> to have more descriptive names of what they actually are in future versions of TF. Then change the corresponding documentation to be more compliant with these changes.</p>", "body_text": "BasicLSTMCell is actually a layer (as for a layer in MLPs) of LSTM units. Each of these LSTM units contains a cell. Each cell of an LSTM unit contains a scalar value for the CEC and a scalar representing the previous state.\nPeople are usually first introduced to MLPs or feed-forward (and fully connected) neural networks, before being introduced to RNNs and, in particular, LSTMs.\nWhy would you call BasicLSTMCell a cell, if it can be thought more intuitively (at least for me) as a layer of LSTM units (as I describe them above) containing just one scalar-based cell? Wouldn't it be less ambiguous to call a BasicLSTMCell BasicLSTMLayer???\nMoreover, the first parameter to BasicLSTMCell's __init__ method is num_units, i.e. the number of LSTM units, i.e. the number of LSTM cells and gates (if we have 3 gates for every LSTM unit, then the total number of gates in one layer of LSTMs is 3 * num_units).\nIt almost seems that you created TF to make it as confusing as possible to make it seem hard. It also almost seems that the person who wrote the name of the class BasicLSTMCell is a different person of the person who wrote its __init__ method. What's going on??? A little bit of consistency, for once, no???\nA similar argument can be said for MultiRNNCell, which, a lot more intuitively, can be thought as a sequence of layers.\nRequest\nChange classes such as BasicLSTMCell and MultiRNNCell to have more descriptive names of what they actually are in future versions of TF. Then change the corresponding documentation to be more compliant with these changes.", "body": "`BasicLSTMCell` is actually a layer (as for a layer in MLPs) of LSTM units. Each of these LSTM units contains a cell. Each cell of an LSTM unit contains a **scalar value** for the CEC and a **scalar** representing the previous state.\r\n\r\nPeople are usually first introduced to MLPs or feed-forward (and fully connected) neural networks, before being introduced to RNNs and, in particular, LSTMs. \r\n\r\nWhy would you call `BasicLSTMCell` a **cell**, if it can be thought more intuitively (at least for me) as a layer of LSTM units (as I describe them above) containing just one scalar-based cell? Wouldn't it be less ambiguous to call a `BasicLSTMCell` `BasicLSTMLayer`???\r\n\r\nMoreover, the first parameter to `BasicLSTMCell`'s `__init__` method is `num_units`, i.e. the number of LSTM units, i.e. the number of LSTM cells and gates (if we have 3 gates for every LSTM unit, then the total number of gates in one layer of LSTMs is 3 * `num_units`). \r\n\r\nIt almost seems that you created TF to make it as confusing as possible to make it seem hard. It also almost seems that the person who wrote the name of the class `BasicLSTMCell` is a different person of the person who wrote its `__init__` method. What's going on??? A little bit of consistency, for once, no???\r\n\r\nA similar argument can be said for `MultiRNNCell`, which, a lot more intuitively, can be thought as a sequence of layers.\r\n\r\n### Request\r\n\r\nChange classes such as `BasicLSTMCell` and `MultiRNNCell` to have more descriptive names of what they actually are in future versions of TF. Then change the corresponding documentation to be more compliant with these changes."}