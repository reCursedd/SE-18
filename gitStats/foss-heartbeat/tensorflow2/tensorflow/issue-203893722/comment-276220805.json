{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/276220805", "html_url": "https://github.com/tensorflow/tensorflow/issues/7136#issuecomment-276220805", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7136", "id": 276220805, "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjIyMDgwNQ==", "user": {"login": "notnot", "id": 1584593, "node_id": "MDQ6VXNlcjE1ODQ1OTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1584593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notnot", "html_url": "https://github.com/notnot", "followers_url": "https://api.github.com/users/notnot/followers", "following_url": "https://api.github.com/users/notnot/following{/other_user}", "gists_url": "https://api.github.com/users/notnot/gists{/gist_id}", "starred_url": "https://api.github.com/users/notnot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notnot/subscriptions", "organizations_url": "https://api.github.com/users/notnot/orgs", "repos_url": "https://api.github.com/users/notnot/repos", "events_url": "https://api.github.com/users/notnot/events{/privacy}", "received_events_url": "https://api.github.com/users/notnot/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-30T23:04:57Z", "updated_at": "2017-01-30T23:04:57Z", "author_association": "NONE", "body_html": "<p>Yes 'go generate' is for the package maintainer(s) to call, not for the end user who wishes to install the package. As long as the maintainer(s) know that generate.sh only works with a single-directory GOPATH all is fine.<br>\nI did some searching to figure out how to robustly find the directory that a shell script is in, so that it could find PROTOC from there. There seems to be no reliable cross-platform cross-shell solution though :(</p>", "body_text": "Yes 'go generate' is for the package maintainer(s) to call, not for the end user who wishes to install the package. As long as the maintainer(s) know that generate.sh only works with a single-directory GOPATH all is fine.\nI did some searching to figure out how to robustly find the directory that a shell script is in, so that it could find PROTOC from there. There seems to be no reliable cross-platform cross-shell solution though :(", "body": "Yes 'go generate' is for the package maintainer(s) to call, not for the end user who wishes to install the package. As long as the maintainer(s) know that generate.sh only works with a single-directory GOPATH all is fine. \r\nI did some searching to figure out how to robustly find the directory that a shell script is in, so that it could find PROTOC from there. There seems to be no reliable cross-platform cross-shell solution though :(\r\n"}