{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/139453644", "pull_request_review_id": 63388153, "id": 139453644, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTQ1MzY0NA==", "diff_hunk": "@@ -285,6 +285,51 @@ def testNumpyInputFnWithMismatchLengthOfInputs(self):\n             num_epochs=1)\n         failing_input_fn()\n \n+  def testNumpyInputFnWhenLabelIsDictionary(self):\n+    a = np.arange(4) * 1.0\n+    b = np.arange(32, 36)\n+    x = {'a': a, 'b': b}\n+    y = {'y1': np.arange(-32, -28), 'y2': np.arange(32, 28, -1)}\n+\n+    with self.test_session() as session:\n+      input_fn = numpy_io.numpy_input_fn(\n+        x, y, batch_size=2, shuffle=False, num_epochs=1)\n+      features_tensor, targets_tensor = input_fn()\n+\n+      coord = coordinator.Coordinator()\n+      threads = queue_runner_impl.start_queue_runners(session, coord=coord)\n+\n+      features, targets = session.run([features_tensor, targets_tensor])\n+      self.assertEqual(len(features), 2)\n+      self.assertAllEqual(features['a'], [0, 1])\n+      self.assertAllEqual(features['b'], [32, 33])\n+      self.assertEqual(len(targets), 2)\n+      self.assertAllEqual(targets['y1'], [-32, -31])\n+      self.assertAllEqual(targets['y2'], [32, 31])\n+\n+      session.run([features_tensor, targets_tensor])\n+      with self.assertRaises(errors.OutOfRangeError):\n+        session.run([features_tensor, targets_tensor])\n+\n+      coord.request_stop()\n+      coord.join(threads)\n+", "path": "tensorflow/python/estimator/inputs/numpy_io_test.py", "position": 73, "original_position": 32, "commit_id": "6aa603ded604de4fa301ee7bebf69f06c4590e80", "original_commit_id": "127dd2b9c8f2fa5cf47b19f246b79b20441d7aa0", "user": {"login": "martinwicke", "id": 577277, "node_id": "MDQ6VXNlcjU3NzI3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/577277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinwicke", "html_url": "https://github.com/martinwicke", "followers_url": "https://api.github.com/users/martinwicke/followers", "following_url": "https://api.github.com/users/martinwicke/following{/other_user}", "gists_url": "https://api.github.com/users/martinwicke/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinwicke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinwicke/subscriptions", "organizations_url": "https://api.github.com/users/martinwicke/orgs", "repos_url": "https://api.github.com/users/martinwicke/repos", "events_url": "https://api.github.com/users/martinwicke/events{/privacy}", "received_events_url": "https://api.github.com/users/martinwicke/received_events", "type": "User", "site_admin": false}, "body": "Please add a test for case `y={}`. Ideally it would simply work, but without a test, who knows?", "created_at": "2017-09-18T15:20:02Z", "updated_at": "2017-10-06T11:43:04Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/12645#discussion_r139453644", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12645", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/139453644"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/12645#discussion_r139453644"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12645"}}, "body_html": "<p>Please add a test for case <code>y={}</code>. Ideally it would simply work, but without a test, who knows?</p>", "body_text": "Please add a test for case y={}. Ideally it would simply work, but without a test, who knows?"}