{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/231473189", "html_url": "https://github.com/tensorflow/tensorflow/pull/3235#issuecomment-231473189", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3235", "id": 231473189, "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTQ3MzE4OQ==", "user": {"login": "keveman", "id": 229914, "node_id": "MDQ6VXNlcjIyOTkxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/229914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keveman", "html_url": "https://github.com/keveman", "followers_url": "https://api.github.com/users/keveman/followers", "following_url": "https://api.github.com/users/keveman/following{/other_user}", "gists_url": "https://api.github.com/users/keveman/gists{/gist_id}", "starred_url": "https://api.github.com/users/keveman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keveman/subscriptions", "organizations_url": "https://api.github.com/users/keveman/orgs", "repos_url": "https://api.github.com/users/keveman/repos", "events_url": "https://api.github.com/users/keveman/events{/privacy}", "received_events_url": "https://api.github.com/users/keveman/received_events", "type": "User", "site_admin": false}, "created_at": "2016-07-08T21:08:26Z", "updated_at": "2016-07-08T21:08:26Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=57440\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/IvanUkhov\">@IvanUkhov</a> Thanks a lot for the PR. Although your <code>TF_DeleteLibrary</code> frees up the memory owned by a <code>TF_Library</code> handle, I am not sure how useful that is. The reason that we didn't bother adding this function in the first place is that we don't know of a reliable way to unload the library from the process' address space. If you know of an implementation for unloading the library on linux and mac, that would make this a much stronger PR.</p>", "body_text": "@IvanUkhov Thanks a lot for the PR. Although your TF_DeleteLibrary frees up the memory owned by a TF_Library handle, I am not sure how useful that is. The reason that we didn't bother adding this function in the first place is that we don't know of a reliable way to unload the library from the process' address space. If you know of an implementation for unloading the library on linux and mac, that would make this a much stronger PR.", "body": "@IvanUkhov Thanks a lot for the PR. Although your `TF_DeleteLibrary` frees up the memory owned by a `TF_Library` handle, I am not sure how useful that is. The reason that we didn't bother adding this function in the first place is that we don't know of a reliable way to unload the library from the process' address space. If you know of an implementation for unloading the library on linux and mac, that would make this a much stronger PR.\n"}