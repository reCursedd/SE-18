{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/62399783", "pull_request_review_id": null, "id": 62399783, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMzk5Nzgz", "diff_hunk": "@@ -0,0 +1,355 @@\n+\"\"\"Tests for rnn module.\"\"\"\n+\n+from __future__ import absolute_import\n+from __future__ import division\n+from __future__ import print_function\n+\n+import time\n+import timeit\n+\n+import numpy as np\n+from six.moves import xrange  # pylint: disable=redefined-builtin\n+\n+import tensorflow as tf\n+from tensorflow.python.kernel_tests import rnn_test\n+\n+tf.contrib.rnn.Load()\n+\n+\n+def _flatten(list_of_lists):\n+  return [x for y in list_of_lists for x in y]\n+\n+\n+class LSTMTest(tf.test.TestCase):\n+\n+  def setUp(self):\n+    self._seed = 23489\n+    np.random.seed(self._seed)\n+\n+  def _testLSTMBasicToCellBlockRNN(self, use_gpu, use_sequence_length, parallel_dw):\n+    time_steps = 8\n+    num_units = 3\n+    num_proj = 4\n+    input_size = 5\n+    batch_size = 2\n+\n+    input_values = np.random.randn(time_steps, batch_size, input_size)\n+\n+    if use_sequence_length:\n+      sequence_length = np.random.randint(0, time_steps, size=batch_size)\n+    else:\n+      sequence_length = None\n+\n+    ########### Step 1: Run BasicLSTMCell\n+    initializer = tf.random_uniform_initializer(-0.01, 0.01, seed=self._seed)\n+    basic_lstm_cell = tf.nn.rnn_cell.BasicLSTMCell(num_units)\n+\n+    (values_basic, state_value_basic, basic_grad_values,\n+     basic_individual_grad_values,\n+     basic_individual_var_grad_values) = rnn_test.run_static_rnn(\n+         self, time_steps, batch_size, input_size, basic_lstm_cell,\n+         sequence_length, input_values, use_gpu, initializer=initializer)\n+\n+    ########### Step 2: Run LSTMCellBlock\n+    lstm_cell_block_cell = tf.contrib.rnn.LSTMCellBlock(num_units,\n+                                                        parallel_dw=parallel_dw)\n+\n+    (values_block, state_value_block, block_grad_values,\n+     block_individual_grad_values,\n+     block_individual_var_grad_values) = rnn_test.run_static_rnn(\n+         self, time_steps, batch_size, input_size, lstm_cell_block_cell,\n+         sequence_length, input_values, use_gpu, initializer=initializer)\n+\n+    ######### Step 3: Comparisons\n+    self.assertEqual(len(values_basic), len(values_block))\n+    for (value_basic, value_block) in zip(values_basic, values_block):\n+      self.assertAllClose(value_basic, value_block)\n+\n+    self.assertAllClose(basic_grad_values, block_grad_values)\n+\n+    self.assertEqual(len(basic_individual_grad_values),\n+                     len(block_individual_grad_values))\n+    self.assertEqual(len(basic_individual_var_grad_values),\n+                     len(block_individual_var_grad_values))\n+\n+    for i, (a, b) in enumerate(zip(basic_individual_grad_values,\n+                                   block_individual_grad_values)):\n+      tf.logging.info(\"Comparing individual gradients iteration %d\" % i)\n+      self.assertAllClose(a, b)\n+\n+    for i, (a, b) in enumerate(reversed(zip(basic_individual_var_grad_values,\n+                                   block_individual_var_grad_values))):", "path": "tensorflow/contrib/rnn/python/kernel_tests/rnn_test.py", "position": null, "original_position": 81, "commit_id": "258144b98730f99489437f6963737480be4f5a43", "original_commit_id": "727e0c76bed212fdf240a221e577e1b1a86848d5", "user": {"login": "wchan", "id": 1131892, "node_id": "MDQ6VXNlcjExMzE4OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1131892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wchan", "html_url": "https://github.com/wchan", "followers_url": "https://api.github.com/users/wchan/followers", "following_url": "https://api.github.com/users/wchan/following{/other_user}", "gists_url": "https://api.github.com/users/wchan/gists{/gist_id}", "starred_url": "https://api.github.com/users/wchan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wchan/subscriptions", "organizations_url": "https://api.github.com/users/wchan/orgs", "repos_url": "https://api.github.com/users/wchan/repos", "events_url": "https://api.github.com/users/wchan/events{/privacy}", "received_events_url": "https://api.github.com/users/wchan/received_events", "type": "User", "site_admin": false}, "body": "sorry, what does \"ws\" refer to?\n\n## \n\nWilliam Chan\nCarnegie Mellon University\n(650) 450-9455\nwilliamchan.ca\n\nOn Fri, May 6, 2016 at 3:17 PM, ebrevdo notifications@github.com wrote:\n\n> In tensorflow/contrib/rnn/python/kernel_tests/rnn_test.py\n> https://github.com/tensorflow/tensorflow/pull/2002#discussion_r62398353:\n> \n> > -      self.assertAllClose(value_basic, value_block)\n> >   +\n> > -    self.assertAllClose(basic_grad_values, block_grad_values)\n> >   +\n> > -    self.assertEqual(len(basic_individual_grad_values),\n> > -                     len(block_individual_grad_values))\n> > -    self.assertEqual(len(basic_individual_var_grad_values),\n> > -                     len(block_individual_var_grad_values))\n> >   +\n> > -    for i, (a, b) in enumerate(zip(basic_individual_grad_values,\n> > -                                   block_individual_grad_values)):\n> > -      tf.logging.info(\"Comparing individual gradients iteration %d\" % i)\n> > -      self.assertAllClose(a, b)\n> >   +\n> > -    for i, (a, b) in enumerate(reversed(zip(basic_individual_var_grad_values,\n> > -                                   block_individual_var_grad_values))):\n> \n> is this ws correct?\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly or view it on GitHub\n> https://github.com/tensorflow/tensorflow/pull/2002/files/727e0c76bed212fdf240a221e577e1b1a86848d5#r62398353\n", "created_at": "2016-05-06T22:31:37Z", "updated_at": "2016-05-18T21:31:18Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/2002#discussion_r62399783", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/2002", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/62399783"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/2002#discussion_r62399783"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/2002"}}, "body_html": "<p>sorry, what does \"ws\" refer to?</p>\n<h2></h2>\n<p>William Chan<br>\nCarnegie Mellon University<br>\n(650) 450-9455<br>\nwilliamchan.ca</p>\n<p>On Fri, May 6, 2016 at 3:17 PM, ebrevdo <a href=\"mailto:notifications@github.com\">notifications@github.com</a> wrote:</p>\n<blockquote>\n<p>In tensorflow/contrib/rnn/python/kernel_tests/rnn_test.py<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"148966307\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/2002\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/2002/hovercard?comment_id=62398353&amp;comment_type=review_comment\" href=\"https://github.com/tensorflow/tensorflow/pull/2002#discussion_r62398353\">#2002 (comment)</a>:</p>\n<blockquote>\n<ul>\n<li>\n<pre><code> self.assertAllClose(value_basic, value_block)\n</code></pre>\n<ul>\n<li></li>\n</ul>\n</li>\n<li>self.assertAllClose(basic_grad_values, block_grad_values)</li>\n</ul>\n<ul>\n<li></li>\n</ul>\n<ul>\n<li>self.assertEqual(len(basic_individual_grad_values),</li>\n<li>\n<pre><code>                len(block_individual_grad_values))\n</code></pre>\n</li>\n<li>self.assertEqual(len(basic_individual_var_grad_values),</li>\n<li>\n<pre><code>                len(block_individual_var_grad_values))\n</code></pre>\n<ul>\n<li></li>\n</ul>\n</li>\n<li>for i, (a, b) in enumerate(zip(basic_individual_grad_values,</li>\n<li>\n<pre><code>                              block_individual_grad_values)):\n</code></pre>\n</li>\n<li>\n<pre><code> tf.logging.info(\"Comparing individual gradients iteration %d\" % i)\n</code></pre>\n</li>\n<li>\n<pre><code> self.assertAllClose(a, b)\n</code></pre>\n<ul>\n<li></li>\n</ul>\n</li>\n<li>for i, (a, b) in enumerate(reversed(zip(basic_individual_var_grad_values,</li>\n<li>\n<pre><code>                              block_individual_var_grad_values))):\n</code></pre>\n</li>\n</ul>\n</blockquote>\n<p>is this ws correct?</p>\n<p>\u2014<br>\nYou are receiving this because you were mentioned.<br>\nReply to this email directly or view it on GitHub<br>\n<a href=\"https://github.com/tensorflow/tensorflow/pull/2002/files/727e0c76bed212fdf240a221e577e1b1a86848d5#r62398353\">https://github.com/tensorflow/tensorflow/pull/2002/files/727e0c76bed212fdf240a221e577e1b1a86848d5#r62398353</a></p>\n</blockquote>", "body_text": "sorry, what does \"ws\" refer to?\n\nWilliam Chan\nCarnegie Mellon University\n(650) 450-9455\nwilliamchan.ca\nOn Fri, May 6, 2016 at 3:17 PM, ebrevdo notifications@github.com wrote:\n\nIn tensorflow/contrib/rnn/python/kernel_tests/rnn_test.py\n#2002 (comment):\n\n\n\n self.assertAllClose(value_basic, value_block)\n\n\n\n\n\nself.assertAllClose(basic_grad_values, block_grad_values)\n\n\n\n\n\nself.assertEqual(len(basic_individual_grad_values),\n\n                len(block_individual_grad_values))\n\n\nself.assertEqual(len(basic_individual_var_grad_values),\n\n                len(block_individual_var_grad_values))\n\n\n\n\n\nfor i, (a, b) in enumerate(zip(basic_individual_grad_values,\n\n                              block_individual_grad_values)):\n\n\n\n tf.logging.info(\"Comparing individual gradients iteration %d\" % i)\n\n\n\n self.assertAllClose(a, b)\n\n\n\n\n\nfor i, (a, b) in enumerate(reversed(zip(basic_individual_var_grad_values,\n\n                              block_individual_var_grad_values))):\n\n\n\n\nis this ws correct?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/tensorflow/tensorflow/pull/2002/files/727e0c76bed212fdf240a221e577e1b1a86848d5#r62398353"}