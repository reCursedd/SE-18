{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/218674651", "html_url": "https://github.com/tensorflow/tensorflow/pull/2002#issuecomment-218674651", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2002", "id": 218674651, "node_id": "MDEyOklzc3VlQ29tbWVudDIxODY3NDY1MQ==", "user": {"login": "wchan", "id": 1131892, "node_id": "MDQ6VXNlcjExMzE4OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1131892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wchan", "html_url": "https://github.com/wchan", "followers_url": "https://api.github.com/users/wchan/followers", "following_url": "https://api.github.com/users/wchan/following{/other_user}", "gists_url": "https://api.github.com/users/wchan/gists{/gist_id}", "starred_url": "https://api.github.com/users/wchan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wchan/subscriptions", "organizations_url": "https://api.github.com/users/wchan/orgs", "repos_url": "https://api.github.com/users/wchan/repos", "events_url": "https://api.github.com/users/wchan/events{/privacy}", "received_events_url": "https://api.github.com/users/wchan/received_events", "type": "User", "site_admin": false}, "created_at": "2016-05-12T06:52:07Z", "updated_at": "2016-05-12T06:53:46Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=112599\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Mistobaan\">@Mistobaan</a>, the prev code is here:<br>\n<a href=\"https://github.com/wchan/tensorflow/tree/lstm_block\">https://github.com/wchan/tensorflow/tree/lstm_block</a></p>\n<p>Yes, as you mentioned, the cuDNN op requires a stacked sequence (rather than 1 time step). I think there's a few tricky things that need to be done before we can call the cuDNN API, namely it requires some memory to be shared between the fprop and bprop, and the documentation doesn't tell us how much memory is allocated. There are several hacks to accomplish this, but I'm not sure if they are \"correct\" to do.</p>\n<p>Also, some things to consider is as <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1794715\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ebrevdo\">@ebrevdo</a> mentioned, if we do have a sequence RNN op, do we want a list of 2d-tensors as input or list of 3d-tensors as input. I forget the layout of the cuDNN LSTM API, so we might want to match that too, which might not match the layout of this op.</p>", "body_text": "@Mistobaan, the prev code is here:\nhttps://github.com/wchan/tensorflow/tree/lstm_block\nYes, as you mentioned, the cuDNN op requires a stacked sequence (rather than 1 time step). I think there's a few tricky things that need to be done before we can call the cuDNN API, namely it requires some memory to be shared between the fprop and bprop, and the documentation doesn't tell us how much memory is allocated. There are several hacks to accomplish this, but I'm not sure if they are \"correct\" to do.\nAlso, some things to consider is as @ebrevdo mentioned, if we do have a sequence RNN op, do we want a list of 2d-tensors as input or list of 3d-tensors as input. I forget the layout of the cuDNN LSTM API, so we might want to match that too, which might not match the layout of this op.", "body": "@Mistobaan, the prev code is here:\nhttps://github.com/wchan/tensorflow/tree/lstm_block\n\nYes, as you mentioned, the cuDNN op requires a stacked sequence (rather than 1 time step). I think there's a few tricky things that need to be done before we can call the cuDNN API, namely it requires some memory to be shared between the fprop and bprop, and the documentation doesn't tell us how much memory is allocated. There are several hacks to accomplish this, but I'm not sure if they are \"correct\" to do.\n\nAlso, some things to consider is as @ebrevdo mentioned, if we do have a sequence RNN op, do we want a list of 2d-tensors as input or list of 3d-tensors as input. I forget the layout of the cuDNN LSTM API, so we might want to match that too, which might not match the layout of this op.\n"}