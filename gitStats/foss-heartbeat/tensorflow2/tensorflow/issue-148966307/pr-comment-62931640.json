{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/62931640", "pull_request_review_id": null, "id": 62931640, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyOTMxNjQw", "diff_hunk": "@@ -574,59 +574,16 @@ def _testDynamicEquivalentToStaticRNN(self, use_gpu, use_sequence_length):\n       sequence_length = None\n \n     ########### Step 1: Run static graph and generate readouts\n-    with self.test_session(use_gpu=use_gpu, graph=tf.Graph()) as sess:\n-      concat_inputs = tf.placeholder(tf.float32,\n-                                     shape=(time_steps, batch_size, input_size))\n-      inputs = tf.unpack(concat_inputs)\n-      initializer = tf.random_uniform_initializer(-0.01, 0.01, seed=self._seed)\n-\n-      cell = tf.nn.rnn_cell.LSTMCell(\n-          num_units, input_size, use_peepholes=True,\n-          initializer=initializer, num_proj=num_proj)\n-\n-      with tf.variable_scope(\"dynamic_scope\"):\n-        outputs_static, state_static = tf.nn.rnn(\n-            cell, inputs, sequence_length=sequence_length, dtype=tf.float32)\n-\n-      feeds = {concat_inputs: input_values}\n-\n-      # Initialize\n-      tf.initialize_all_variables().run(feed_dict=feeds)\n-\n-      # Generate gradients of sum of outputs w.r.t. inputs\n-      static_gradients = tf.gradients(\n-          outputs_static + [state_static], [concat_inputs])\n-\n-      # Generate gradients of individual outputs w.r.t. inputs\n-      static_individual_gradients = _flatten([\n-          tf.gradients(y, [concat_inputs])\n-          for y in [outputs_static[0],\n-                    outputs_static[-1],\n-                    state_static]])\n-\n-      # Generate gradients of individual variables w.r.t. inputs\n-      trainable_variables = tf.get_collection(tf.GraphKeys.TRAINABLE_VARIABLES)\n-      assert len(trainable_variables) > 1, (\n-          \"Count of trainable variables: %d\" % len(trainable_variables))\n-      # pylint: disable=bad-builtin\n-      static_individual_variable_gradients = _flatten([\n-          tf.gradients(y, trainable_variables)\n-          for y in [outputs_static[0],\n-                    outputs_static[-1],\n-                    state_static]])\n-\n-      # Test forward pass\n-      values_static = sess.run(outputs_static, feed_dict=feeds)\n-      (state_value_static,) = sess.run((state_static,), feed_dict=feeds)\n-\n-      # Test gradients to inputs and variables w.r.t. outputs & final state\n-      static_grad_values = sess.run(static_gradients, feed_dict=feeds)\n-\n-      static_individual_grad_values = sess.run(\n-          static_individual_gradients, feed_dict=feeds)\n+    initializer = tf.random_uniform_initializer(-0.01, 0.01, seed=self._seed)\n+    cell = tf.nn.rnn_cell.LSTMCell(\n+        num_units, input_size, use_peepholes=True,", "path": "tensorflow/python/kernel_tests/rnn_test.py", "position": 56, "original_position": 56, "commit_id": "258144b98730f99489437f6963737480be4f5a43", "original_commit_id": "fc40971bba82762fe413b5e7d6fe12a09722876b", "user": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "body": "You may still want to disable it, because otherwise it's not an apples-to-apples comparison (peepholes in one, no peepholes in the other)\n", "created_at": "2016-05-11T21:38:24Z", "updated_at": "2016-05-18T21:31:18Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/2002#discussion_r62931640", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/2002", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/62931640"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/2002#discussion_r62931640"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/2002"}}, "body_html": "<p>You may still want to disable it, because otherwise it's not an apples-to-apples comparison (peepholes in one, no peepholes in the other)</p>", "body_text": "You may still want to disable it, because otherwise it's not an apples-to-apples comparison (peepholes in one, no peepholes in the other)"}