{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/62957519", "pull_request_review_id": null, "id": 62957519, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyOTU3NTE5", "diff_hunk": "@@ -478,3 +533,71 @@ def _make_tf_features(self, input_feat):\n                                   [-1, self._feature_size])\n       freq_inputs.append(cur_input)\n     return freq_inputs\n+\n+\n+class LSTMCellBlock(rnn_cell.RNNCell):\n+  \"\"\"Basic LSTM recurrent network cell.\n+\n+  The implementation is based on: http://arxiv.org/abs/1409.2329.\n+\n+  We add forget_bias (default: 1) to the biases of the forget gate in order to\n+  reduce the scale of forgetting in the beginning of the training.\n+\n+  It does not allow cell clipping, a projection layer, and does not\n+  use peep-hole connections: it is the basic baseline.\n+\n+  Unlike BasicLSTMCell, this is a monolithic op and should be much faster. The\n+  weight and bias matrixes should be compatible as long as the variabel scope\n+  matches.\n+  \"\"\"\n+\n+  def __init__(self, num_units, forget_bias=1.0, input_size=None):\n+    \"\"\"Initialize the basic LSTM cell.\n+\n+    Args:\n+      num_units: int, The number of units in the LSTM cell.\n+      forget_bias: float, The bias added to forget gates (see above).\n+    \"\"\"\n+    if input_size is not None:\n+      logging.warn(\"%s: The input_size parameter is deprecated.\" % self)\n+    self._num_units = num_units\n+    self._forget_bias = forget_bias\n+\n+  @property\n+  def state_size(self):\n+    return self._num_units * 2\n+\n+  @property\n+  def output_size(self):\n+    return self._num_units\n+\n+  def __call__(self, x, states_prev, scope=None):", "path": "tensorflow/contrib/rnn/python/ops/rnn_cell.py", "position": 116, "original_position": 114, "commit_id": "258144b98730f99489437f6963737480be4f5a43", "original_commit_id": "fc40971bba82762fe413b5e7d6fe12a09722876b", "user": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "body": "That will continue to be the case: BasicLSTMCell will have a new bool\noption called \"state_is_tuple\" so you will be able to check against it.  Up\nto you - we can push this now if you prefer - or wait a day or two.\n\nOn Wed, May 11, 2016 at 7:00 PM, William Chan notifications@github.com\nwrote:\n\n> In tensorflow/contrib/rnn/python/ops/rnn_cell.py\n> https://github.com/tensorflow/tensorflow/pull/2002#discussion_r62955584:\n> \n> > -      forget_bias: float, The bias added to forget gates (see above).\n> > -    \"\"\"\n> > -    if input_size is not None:\n> > -      logging.warn(\"%s: The input_size parameter is deprecated.\" % self)\n> > -    self._num_units = num_units\n> > -    self._forget_bias = forget_bias\n> >   +\n> > -  @property\n> > -  def state_size(self):\n> > -    return self._num_units \\* 2\n> >   +\n> > -  @property\n> > -  def output_size(self):\n> > -    return self._num_units\n> >   +\n> > -  def **call**(self, x, states_prev, scope=None):\n> \n> unless the push is coming like tmr, i suggest we commit the CL as is for\n> now and then push a second CL to support such feature? or do u think its\n> better to hold off? a good thing right now is the state is /exactly/ (other\n> than numerical differences) the same as the existing BasicLSTMCell, so the\n> tests are very easy to write 1:1.\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly or view it on GitHub\n> https://github.com/tensorflow/tensorflow/pull/2002/files/fc40971bba82762fe413b5e7d6fe12a09722876b#r62955584\n", "created_at": "2016-05-12T02:35:25Z", "updated_at": "2016-05-18T21:31:18Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/2002#discussion_r62957519", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/2002", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/62957519"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/2002#discussion_r62957519"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/2002"}}, "body_html": "<p>That will continue to be the case: BasicLSTMCell will have a new bool<br>\noption called \"state_is_tuple\" so you will be able to check against it.  Up<br>\nto you - we can push this now if you prefer - or wait a day or two.</p>\n<p>On Wed, May 11, 2016 at 7:00 PM, William Chan <a href=\"mailto:notifications@github.com\">notifications@github.com</a><br>\nwrote:</p>\n<blockquote>\n<p>In tensorflow/contrib/rnn/python/ops/rnn_cell.py<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"148966307\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/2002\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tensorflow/tensorflow/pull/2002/hovercard?comment_id=62955584&amp;comment_type=review_comment\" href=\"https://github.com/tensorflow/tensorflow/pull/2002#discussion_r62955584\">#2002 (comment)</a>:</p>\n<blockquote>\n<ul>\n<li>\n<pre><code> forget_bias: float, The bias added to forget gates (see above).\n</code></pre>\n</li>\n<li>\"\"\"</li>\n<li>if input_size is not None:</li>\n<li>\n<pre><code> logging.warn(\"%s: The input_size parameter is deprecated.\" % self)\n</code></pre>\n</li>\n<li>self._num_units = num_units</li>\n<li>self._forget_bias = forget_bias</li>\n</ul>\n<ul>\n<li></li>\n</ul>\n<ul>\n<li><a class=\"user-mention\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/Property/hovercard\" href=\"https://github.com/Property\">@Property</a></li>\n<li>def state_size(self):</li>\n<li>return self._num_units * 2</li>\n</ul>\n<ul>\n<li></li>\n</ul>\n<ul>\n<li><a class=\"user-mention\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/Property/hovercard\" href=\"https://github.com/Property\">@Property</a></li>\n<li>def output_size(self):</li>\n<li>return self._num_units</li>\n</ul>\n<ul>\n<li></li>\n</ul>\n<ul>\n<li>def <strong>call</strong>(self, x, states_prev, scope=None):</li>\n</ul>\n</blockquote>\n<p>unless the push is coming like tmr, i suggest we commit the CL as is for<br>\nnow and then push a second CL to support such feature? or do u think its<br>\nbetter to hold off? a good thing right now is the state is /exactly/ (other<br>\nthan numerical differences) the same as the existing BasicLSTMCell, so the<br>\ntests are very easy to write 1:1.</p>\n<p>\u2014<br>\nYou are receiving this because you were mentioned.<br>\nReply to this email directly or view it on GitHub<br>\n<a href=\"https://github.com/tensorflow/tensorflow/pull/2002/files/fc40971bba82762fe413b5e7d6fe12a09722876b#r62955584\">https://github.com/tensorflow/tensorflow/pull/2002/files/fc40971bba82762fe413b5e7d6fe12a09722876b#r62955584</a></p>\n</blockquote>", "body_text": "That will continue to be the case: BasicLSTMCell will have a new bool\noption called \"state_is_tuple\" so you will be able to check against it.  Up\nto you - we can push this now if you prefer - or wait a day or two.\nOn Wed, May 11, 2016 at 7:00 PM, William Chan notifications@github.com\nwrote:\n\nIn tensorflow/contrib/rnn/python/ops/rnn_cell.py\n#2002 (comment):\n\n\n\n forget_bias: float, The bias added to forget gates (see above).\n\n\n\"\"\"\nif input_size is not None:\n\n logging.warn(\"%s: The input_size parameter is deprecated.\" % self)\n\n\nself._num_units = num_units\nself._forget_bias = forget_bias\n\n\n\n\n\n@Property\ndef state_size(self):\nreturn self._num_units * 2\n\n\n\n\n\n@Property\ndef output_size(self):\nreturn self._num_units\n\n\n\n\n\ndef call(self, x, states_prev, scope=None):\n\n\nunless the push is coming like tmr, i suggest we commit the CL as is for\nnow and then push a second CL to support such feature? or do u think its\nbetter to hold off? a good thing right now is the state is /exactly/ (other\nthan numerical differences) the same as the existing BasicLSTMCell, so the\ntests are very easy to write 1:1.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/tensorflow/tensorflow/pull/2002/files/fc40971bba82762fe413b5e7d6fe12a09722876b#r62955584"}