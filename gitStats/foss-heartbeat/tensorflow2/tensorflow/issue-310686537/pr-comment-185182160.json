{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/185182160", "pull_request_review_id": 116490128, "id": 185182160, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTE4MjE2MA==", "diff_hunk": "@@ -83,20 +83,20 @@ SourceWriter& SourceWriter::Append(const StringPiece& str) {\n }\n \n SourceWriter& SourceWriter::AppendType(const Type& type) {\n-  if (type.kind() == Type::Kind::GENERIC && type.name().empty()) {\n+  if (type.unknown()) {\n     Append(\"?\");\n   } else {\n     Append(type.name());\n-  }\n-  if (!type.parameters().empty()) {\n-    Append(\"<\");\n-    for (const Type& t : type.parameters()) {\n-      if (&t != &type.parameters().front()) {\n-        Append(\", \");\n+    if (!type.parameters().empty()) {\n+      Append(\"<\");\n+      for (const Type& t : type.parameters()) {\n+        if (&t != &type.parameters().front()) {", "path": "tensorflow/java/src/gen/cc/source_writer.cc", "position": null, "original_position": 33, "commit_id": "3c799b44b841dc8c4e83fb3fbb61ad4146464f60", "original_commit_id": "d083215fc6f6ec8a314d7980c75a66449c474df6", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "The intention here is to avoid the first one, right? How about:\r\n\r\n```c++\r\nbool first = true;\r\nfor (const Type& t: type.parameters()) {\r\n  if (!first) Append(\", \");\r\n  AppendType(t);\r\n  first = false;\r\n}\r\n```\r\n", "created_at": "2018-05-01T08:02:18Z", "updated_at": "2018-05-06T14:11:56Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/18192#discussion_r185182160", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18192", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/185182160"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/18192#discussion_r185182160"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18192"}}, "body_html": "<p>The intention here is to avoid the first one, right? How about:</p>\n<div class=\"highlight highlight-source-c++\"><pre><span class=\"pl-k\">bool</span> first = <span class=\"pl-c1\">true</span>;\n<span class=\"pl-k\">for</span> (<span class=\"pl-k\">const</span> Type&amp; t: type.parameters()) {\n  <span class=\"pl-k\">if</span> (!first) <span class=\"pl-c1\">Append</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>, <span class=\"pl-pds\">\"</span></span>);\n  <span class=\"pl-c1\">AppendType</span>(t);\n  first = <span class=\"pl-c1\">false</span>;\n}</pre></div>", "body_text": "The intention here is to avoid the first one, right? How about:\nbool first = true;\nfor (const Type& t: type.parameters()) {\n  if (!first) Append(\", \");\n  AppendType(t);\n  first = false;\n}"}