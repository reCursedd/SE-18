{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/185180521", "pull_request_review_id": 116490128, "id": 185180521, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTE4MDUyMQ==", "diff_hunk": "@@ -27,36 +29,55 @@ def tf_java_op_gen_srcjar(name,\n                           ops_libs_pkg=\"//tensorflow/core\",\n                           out_dir=\"ops/\",\n                           out_src_dir=\"src/main/java/\",\n+                          api_def_srcs=[],\n                           visibility=[\"//tensorflow/java:__pkg__\"]):\n \n-  gen_tools = []\n   gen_cmds = [\"rm -rf $(@D)\"]  # Always start from fresh when generating source files\n+  srcs = api_def_srcs[:]\n \n-  # Construct an op generator binary for each ops library.\n+  if not api_def_srcs:\n+    api_def_args_str = \",\"\n+  else:\n+    api_def_args = []\n+    for api_def_src in api_def_srcs:\n+      # Add directory of the first ApiDef source to args.\n+      # We are assuming all ApiDefs in a single api_def_src are in the\n+      # same directory.\n+      api_def_args.append(\n+          \"$$(dirname $$(echo $(locations \" + api_def_src +\n+          \") | cut -d\\\" \\\" -f1))\")\n+    api_def_args_str = \",\".join(api_def_args)\n+\n+  gen_tool_deps = [\":java_op_gen_lib\"]\n   for ops_lib in ops_libs:\n-    gen_lib = ops_lib[:ops_lib.rfind(\"_\")]\n-    out_gen_tool = out_dir + ops_lib + \"_gen_tool\"\n-\n-    tf_cc_binary(\n-        name=out_gen_tool,\n-        copts=tf_copts(),\n-        linkopts=[\"-lm\"],\n-        linkstatic=1,  # Faster to link this one-time-use binary dynamically\n-        deps=[gen_tool, ops_libs_pkg + \":\" + ops_lib + \"_op_lib\"])\n-\n-    gen_tools += [\":\" + out_gen_tool]\n-    gen_cmds += [\"$(location :\" + out_gen_tool + \")\" +\n-                 \" --output_dir=$(@D)/\" + out_src_dir +\n-                 \" --lib_name=\" + gen_lib +\n-                 \" --base_package=\" + gen_base_package]\n+    gen_tool_deps.append(ops_libs_pkg + \":\" + ops_lib + \"_op_lib\")\n+\n+  tf_cc_binary(", "path": "tensorflow/java/src/gen/gen_ops.bzl", "position": null, "original_position": 60, "commit_id": "3c799b44b841dc8c4e83fb3fbb61ad4146464f60", "original_commit_id": "d083215fc6f6ec8a314d7980c75a66449c474df6", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "Seems like this can be simplified - the `tf_cc_binary` can be defined in the BUILD file and this `tf_java_op_gen_srcjar` macro can then just deal with invoking the tool (instead of building it?)", "created_at": "2018-05-01T07:45:50Z", "updated_at": "2018-05-06T14:11:56Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/18192#discussion_r185180521", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18192", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/185180521"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/18192#discussion_r185180521"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18192"}}, "body_html": "<p>Seems like this can be simplified - the <code>tf_cc_binary</code> can be defined in the BUILD file and this <code>tf_java_op_gen_srcjar</code> macro can then just deal with invoking the tool (instead of building it?)</p>", "body_text": "Seems like this can be simplified - the tf_cc_binary can be defined in the BUILD file and this tf_java_op_gen_srcjar macro can then just deal with invoking the tool (instead of building it?)"}