{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/179948598", "pull_request_review_id": 110288267, "id": 179948598, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTk0ODU5OA==", "diff_hunk": "@@ -0,0 +1,137 @@\n+/* Copyright 2017 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+#ifndef TENSORFLOW_JAVA_SRC_GEN_CC_OP_PARSER_H_\n+#define TENSORFLOW_JAVA_SRC_GEN_CC_OP_PARSER_H_\n+\n+#include <map>\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+#include \"tensorflow/core/framework/op_def.pb.h\"\n+#include \"tensorflow/core/framework/api_def.pb.h\"\n+#include \"tensorflow/java/src/gen/cc/java_defs.h\"\n+\n+namespace tensorflow {\n+namespace java {\n+\n+// Specification of a TensorFlow operation to generate.\n+//\n+// This is the result of an operation definition parsing, see OpParser::Parse().\n+class OpSpec {\n+ public:\n+  class Endpoint {\n+   public:\n+    Endpoint(const Type& type, const Javadoc& javadoc)\n+      : type_(type), javadoc_(javadoc) {}\n+    const Type& type() const { return type_; }\n+    const Javadoc& javadoc() const { return javadoc_; }\n+\n+   private:\n+    Type type_;\n+    Javadoc javadoc_;\n+  };\n+\n+  class Operand {\n+   public:\n+    Operand(const string& graph_name, const Variable& var,\n+        const Type& data_type, const string& description, bool iterable)\n+     : graph_name_(graph_name), var_(var), data_type_(data_type),\n+       description_(description), iterable_(iterable) {}\n+    const string& graph_name() const { return graph_name_; }\n+    const Variable& var() const { return var_; }\n+    Variable* var_ptr() { return &var_; }\n+    const Type& data_type() const { return data_type_; }\n+    const string& description() const { return description_; }\n+    bool iterable() const { return iterable_; }\n+\n+   private:\n+    string graph_name_;\n+    Variable var_;\n+    Type data_type_;\n+    string description_;\n+    bool iterable_;\n+  };\n+\n+  explicit OpSpec(const string& graph_name) : graph_name_(graph_name) {}\n+  const string& graph_name() const { return graph_name_; }\n+  const std::vector<Endpoint> endpoints() const { return endpoints_; }\n+  void add_endpoint(const Type& type, const Javadoc& javadoc) {\n+    endpoints_.push_back(Endpoint(type, javadoc));\n+  }\n+  const std::vector<Operand>& inputs() const { return inputs_; }\n+  void add_input(const Operand& input) {\n+    inputs_.push_back(input);\n+  }\n+  const std::vector<Operand>& outputs() const { return outputs_; }\n+  void add_output(const Operand& output) {\n+    outputs_.push_back(output);\n+  }\n+  const std::vector<Operand>& attributes() const { return attributes_; }\n+  void add_attribute(const Operand& attribute) {\n+    attributes_.push_back(attribute);\n+  }\n+  const std::vector<Operand>& options() const { return options_; }\n+  void add_option(const Operand& option) {\n+    options_.push_back(option);\n+  }\n+\n+ private:\n+  string graph_name_;\n+  std::vector<Endpoint> endpoints_;\n+  std::vector<Operand> inputs_;\n+  std::vector<Operand> outputs_;\n+  std::vector<Operand> attributes_;\n+  std::vector<Operand> options_;\n+};\n+\n+// A parser of ops proto definitions.\n+//\n+// This object parses the definition and the api of an TensorFlow operation to\n+// produce a specification that can be used for Java source code rendering.\n+class OpParser {", "path": "tensorflow/java/src/gen/cc/op_parser.h", "position": null, "original_position": 105, "commit_id": "3c799b44b841dc8c4e83fb3fbb61ad4146464f60", "original_commit_id": "d86cedc3c46cc46168c90aefc82993f50ac680f8", "user": {"login": "karllessard", "id": 10109534, "node_id": "MDQ6VXNlcjEwMTA5NTM0", "avatar_url": "https://avatars3.githubusercontent.com/u/10109534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karllessard", "html_url": "https://github.com/karllessard", "followers_url": "https://api.github.com/users/karllessard/followers", "following_url": "https://api.github.com/users/karllessard/following{/other_user}", "gists_url": "https://api.github.com/users/karllessard/gists{/gist_id}", "starred_url": "https://api.github.com/users/karllessard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karllessard/subscriptions", "organizations_url": "https://api.github.com/users/karllessard/orgs", "repos_url": "https://api.github.com/users/karllessard/repos", "events_url": "https://api.github.com/users/karllessard/events{/privacy}", "received_events_url": "https://api.github.com/users/karllessard/received_events", "type": "User", "site_admin": false}, "body": "Mmh, interesting... I only created a class because I did not want to carry the data shared by helper functions in all their signatures (`visited_attrs_`, `next_generic_`, etc). \r\n\r\nBut I can check if that can be part of the `OpSpec` class directly instead.", "created_at": "2018-04-08T13:56:00Z", "updated_at": "2018-05-06T14:11:56Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/18192#discussion_r179948598", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18192", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/179948598"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/18192#discussion_r179948598"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18192"}}, "body_html": "<p>Mmh, interesting... I only created a class because I did not want to carry the data shared by helper functions in all their signatures (<code>visited_attrs_</code>, <code>next_generic_</code>, etc).</p>\n<p>But I can check if that can be part of the <code>OpSpec</code> class directly instead.</p>", "body_text": "Mmh, interesting... I only created a class because I did not want to carry the data shared by helper functions in all their signatures (visited_attrs_, next_generic_, etc).\nBut I can check if that can be part of the OpSpec class directly instead.", "in_reply_to_id": 179042820}