{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/185181802", "pull_request_review_id": 116490128, "id": 185181802, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTE4MTgwMg==", "diff_hunk": "@@ -0,0 +1,156 @@\n+/* Copyright 2018 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+#ifndef TENSORFLOW_JAVA_SRC_GEN_CC_OP_SPECS_H_\n+#define TENSORFLOW_JAVA_SRC_GEN_CC_OP_SPECS_H_\n+\n+#include <string>\n+#include <vector>\n+\n+#include \"tensorflow/core/framework/op_def.pb.h\"\n+#include \"tensorflow/core/framework/api_def.pb.h\"\n+#include \"tensorflow/core/framework/attr_value.pb.h\"\n+#include \"tensorflow/java/src/gen/cc/java_defs.h\"\n+\n+namespace tensorflow {\n+namespace java {\n+\n+class EndpointSpec {\n+ public:\n+  // A specification for an operation endpoint\n+  //\n+  // package: package of this endpoint (from which also derives its package)\n+  // name: name of this endpoint class\n+  // javadoc: the endpoint class documentation\n+  // deprecated: true if this endpoint is now deprecated\n+  EndpointSpec(const string& package, const string& name,\n+      const Javadoc& javadoc, bool deprecated)\n+    : package_(package), name_(name), javadoc_(javadoc),\n+      deprecated_(deprecated) {}\n+\n+  const string& package() const { return package_; }\n+  const string& name() const { return name_; }\n+  const Javadoc& javadoc() const { return javadoc_; }\n+  bool deprecated() const { return deprecated_; }\n+\n+ private:\n+  const string package_;\n+  const string name_;\n+  const Javadoc javadoc_;\n+  const bool deprecated_;\n+};\n+\n+class ArgumentSpec {\n+ public:\n+  // A specification for an operation argument\n+  //\n+  // op_def_name: argument name, as known by TensorFlow core\n+  // var: a variable to represent this argument in Java\n+  // type: the tensor type of this argument\n+  // description: a description of this argument, in javadoc\n+  // iterable: true if this argument is a list\n+  ArgumentSpec(const string& op_def_name, const Variable& var,\n+      const Type& type, const string& description, bool iterable)\n+    : op_def_name_(op_def_name), var_(var), type_(type),\n+      description_(description), iterable_(iterable) {}\n+  virtual ~ArgumentSpec() = default;\n+\n+  const string& op_def_name() const { return op_def_name_; }\n+  const Variable& var() const { return var_; }\n+  const Type& type() const { return type_; }\n+  const string& description() const { return description_; }\n+  bool iterable() const { return iterable_; }\n+\n+ private:\n+  const string op_def_name_;\n+  const Variable var_;\n+  const Type type_;\n+  const string description_;\n+  const bool iterable_;\n+};\n+\n+class AttributeSpec : public ArgumentSpec {\n+ public:\n+  // A specification for an operation attribute\n+  //\n+  // op_def_name: attribute name, as known by TensorFlow core\n+  // var: a variable to represent this attribute in Java\n+  // type: the type of this attribute\n+  // jni_type: the type of this attribute in JNI layer (see OperationBuilder)\n+  // description: a description of this attribute, in javadoc\n+  // iterable: true if this attribute is a list\n+  // has_default_value: true if this attribute has a default value if not set\n+  AttributeSpec(const string& op_def_name, const Variable& var,\n+      const Type& type, const Type& jni_type, const string& description,\n+      bool iterable, bool has_default_value)\n+    : ArgumentSpec(op_def_name, var, type, description, iterable),\n+      jni_type_(jni_type), has_default_value_(has_default_value) {}\n+  virtual ~AttributeSpec() = default;\n+\n+  const Type& jni_type() const { return jni_type_; }\n+  bool has_default_value() const { return has_default_value_; }\n+\n+ private:\n+  const Type jni_type_;\n+  const bool has_default_value_;\n+};\n+\n+class OpSpec {\n+ public:\n+  // Parses an op definition and its API to produce a specification used for\n+  // rendering its Java wrapper\n+  //\n+  // op_def: Op definition\n+  // api_def: Op API definition\n+  static OpSpec Create(const OpDef& op_def, const ApiDef& api_def);", "path": "tensorflow/java/src/gen/cc/op_specs.h", "position": 126, "original_position": 117, "commit_id": "3c799b44b841dc8c4e83fb3fbb61ad4146464f60", "original_commit_id": "d083215fc6f6ec8a314d7980c75a66449c474df6", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "I apologize, but I'm now confused about what `OpSpec` is offering over the `ApiDef` returned by [`ApiDefMap::GetApiDef`](https://github.com/tensorflow/tensorflow/blob/90033a0c87bb3d289144cbd429a9067a4a4881d6/tensorflow/core/framework/op_gen_lib.h#L92)\r\n\r\nIt seems that the main purpose here is to encapsulate the `OpDef` and `ApiDef` into one structure? But it does lead to a lot of indirection/duplication. Would it make sense for `GeneratedOp` to operate directly on an `OpDef` and `ApiDef` structures instead of indirecting via this as is done by the [Go](https://github.com/tensorflow/tensorflow/blob/d0f5bc17560fc97bcc7de9164aa3b237a8d5221d/tensorflow/go/genop/internal/genop.go#L132) and [C++](https://github.com/tensorflow/tensorflow/blob/e4ea3b0c5cfd17bdeffcbad14eea7a07f1b2649d/tensorflow/cc/framework/cc_op_gen.cc#L1112) generators?\r\n\r\nI feel doing so will make the code both simpler and easier to extend in the future (for example, let's say we add some other field to `ApiDef`, then we don't have to thread it through a corresponding C++ class in this file)", "created_at": "2018-05-01T07:58:51Z", "updated_at": "2018-05-06T14:11:56Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/18192#discussion_r185181802", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18192", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/185181802"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/18192#discussion_r185181802"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18192"}}, "body_html": "<p>I apologize, but I'm now confused about what <code>OpSpec</code> is offering over the <code>ApiDef</code> returned by <a href=\"https://github.com/tensorflow/tensorflow/blob/90033a0c87bb3d289144cbd429a9067a4a4881d6/tensorflow/core/framework/op_gen_lib.h#L92\"><code>ApiDefMap::GetApiDef</code></a></p>\n<p>It seems that the main purpose here is to encapsulate the <code>OpDef</code> and <code>ApiDef</code> into one structure? But it does lead to a lot of indirection/duplication. Would it make sense for <code>GeneratedOp</code> to operate directly on an <code>OpDef</code> and <code>ApiDef</code> structures instead of indirecting via this as is done by the <a href=\"https://github.com/tensorflow/tensorflow/blob/d0f5bc17560fc97bcc7de9164aa3b237a8d5221d/tensorflow/go/genop/internal/genop.go#L132\">Go</a> and <a href=\"https://github.com/tensorflow/tensorflow/blob/e4ea3b0c5cfd17bdeffcbad14eea7a07f1b2649d/tensorflow/cc/framework/cc_op_gen.cc#L1112\">C++</a> generators?</p>\n<p>I feel doing so will make the code both simpler and easier to extend in the future (for example, let's say we add some other field to <code>ApiDef</code>, then we don't have to thread it through a corresponding C++ class in this file)</p>", "body_text": "I apologize, but I'm now confused about what OpSpec is offering over the ApiDef returned by ApiDefMap::GetApiDef\nIt seems that the main purpose here is to encapsulate the OpDef and ApiDef into one structure? But it does lead to a lot of indirection/duplication. Would it make sense for GeneratedOp to operate directly on an OpDef and ApiDef structures instead of indirecting via this as is done by the Go and C++ generators?\nI feel doing so will make the code both simpler and easier to extend in the future (for example, let's say we add some other field to ApiDef, then we don't have to thread it through a corresponding C++ class in this file)"}