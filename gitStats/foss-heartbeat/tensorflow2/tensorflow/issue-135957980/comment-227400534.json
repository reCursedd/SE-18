{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/227400534", "html_url": "https://github.com/tensorflow/tensorflow/issues/1269#issuecomment-227400534", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1269", "id": 227400534, "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzQwMDUzNA==", "user": {"login": "dmirk", "id": 4357323, "node_id": "MDQ6VXNlcjQzNTczMjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/4357323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmirk", "html_url": "https://github.com/dmirk", "followers_url": "https://api.github.com/users/dmirk/followers", "following_url": "https://api.github.com/users/dmirk/following{/other_user}", "gists_url": "https://api.github.com/users/dmirk/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmirk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmirk/subscriptions", "organizations_url": "https://api.github.com/users/dmirk/orgs", "repos_url": "https://api.github.com/users/dmirk/repos", "events_url": "https://api.github.com/users/dmirk/events{/privacy}", "received_events_url": "https://api.github.com/users/dmirk/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-21T10:24:45Z", "updated_at": "2016-06-21T13:11:03Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=292790\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/bafu\">@bafu</a><br>\nWhat steps did you exactly did to get it working? I changed the code in \"TensorflowImageListener\" and \"coded_stream.h\", do i miss anything?</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3376817\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/andrewharp\">@andrewharp</a><br>\ni double checked that the right output graphs are used in the right place. Here is a link to my full shell script performing all the tasks<br>\n<a href=\"http://pastebin.com/NVbUJ3Ue\" rel=\"nofollow\">http://pastebin.com/NVbUJ3Ue</a></p>\n<p>It seems the strip_unused doesn't strip anything out of my graph. If i do the following steps:</p>\n<p><code>OUT=$IMAGEDIR/imagenet-out/output_graph.pb</code><br>\n<code>STRIPPED=$IMAGEDIR/imagenet-out/output_graph_stripped.pb</code><br>\n<code>LABELS=$IMAGEDIR/imagenet-out/output_labels.txt</code><br>\n<code>INNAMES=\"Mul:0\"</code><br>\n`OUTNAMES=\"final_result\"``</p>\n<p><code>bazel-bin/tensorflow/python/tools/strip_unused \\ --input_graph=$OUT \\ --output_graph=$STRIPPED \\ --input_node_names=$INNAMES \\ --output_node_names=$OUTNAMES \\ --input_binary=true</code></p>\n<p><code>echo \"- \"$OUT\" - size: \"$( stat -c %s $OUT)</code><br>\n<code>echo \"- \"$STRIPPED\" - size: \"$( stat -c %s $STRIPPED)</code></p>\n<p><code>bazel-bin/tensorflow/examples/label_image/label_image \\ --graph=$OUT \\ --labels=$LABELS \\ --output_layer=$OUTNAMES \\ --image=$TEST</code></p>\n<p><code>bazel-bin/tensorflow/examples/label_image/label_image \\ --graph=$STRIPPED \\ --labels=$LABELS \\ --output_layer=$OUTNAMES \\ --image=$TEST</code><br>\n<code></code><br>\nproduces following output for the newly trained classes (reduced train_steps to 300 for testing):</p>\n<blockquote>\n<p>-- Strip graph<br>\n1007 ops in the final graph.</p>\n<ul>\n<li>/home/robimo/images/imagenet-out/output_graph.pb - size: 87497129</li>\n<li>/home/robimo/images/imagenet-out/output_graph_stripped.pb - size: 87497129</li>\n</ul>\n<p>-- Test /home/robimo/images/imagenet/train/fordButtonOnOff/img4.jpg on full graph<br>\nW tensorflow/core/framework/op_def_util.cc:332] Op BatchNormWithGlobalNormalization is deprecated. It will cease to work in GraphDef version 9. Use tf.nn.batch_normalization().<br>\nI tensorflow/examples/label_image/main.cc:207] fordbuttononoff (4): 0.580274<br>\nI tensorflow/examples/label_image/main.cc:207] fordbutton01234 (0): 0.10882<br>\nI tensorflow/examples/label_image/main.cc:207] fordbutton1 (9): 0.100351<br>\nI tensorflow/examples/label_image/main.cc:207] fordbuttonvolseek (3): 0.0679065<br>\nI tensorflow/examples/label_image/main.cc:207] fordbutton3 (7): 0.0511736</p>\n<p>-- Test /home/robimo/images/imagenet/train/fordButtonOnOff/img4.jpg on stripped graph<br>\nW tensorflow/core/framework/op_def_util.cc:332] Op BatchNormWithGlobalNormalization is deprecated. It will cease to work in GraphDef version 9. Use tf.nn.batch_normalization().<br>\nI tensorflow/examples/label_image/main.cc:207] fordbuttononoff (4): 0.580274<br>\nI tensorflow/examples/label_image/main.cc:207] fordbutton01234 (0): 0.10882<br>\nI tensorflow/examples/label_image/main.cc:207] fordbutton1 (9): 0.100351<br>\nI tensorflow/examples/label_image/main.cc:207] fordbuttonvolseek (3): 0.0679065<br>\nI tensorflow/examples/label_image/main.cc:207] fordbutton3 (7): 0.0511736</p>\n</blockquote>\n<p>Both the stripped and unstripped graph have identical file sizes, and both label_image runs are succesfull.<br>\nWhat i am doing wrong?</p>", "body_text": "@bafu\nWhat steps did you exactly did to get it working? I changed the code in \"TensorflowImageListener\" and \"coded_stream.h\", do i miss anything?\n@andrewharp\ni double checked that the right output graphs are used in the right place. Here is a link to my full shell script performing all the tasks\nhttp://pastebin.com/NVbUJ3Ue\nIt seems the strip_unused doesn't strip anything out of my graph. If i do the following steps:\nOUT=$IMAGEDIR/imagenet-out/output_graph.pb\nSTRIPPED=$IMAGEDIR/imagenet-out/output_graph_stripped.pb\nLABELS=$IMAGEDIR/imagenet-out/output_labels.txt\nINNAMES=\"Mul:0\"\n`OUTNAMES=\"final_result\"``\nbazel-bin/tensorflow/python/tools/strip_unused \\ --input_graph=$OUT \\ --output_graph=$STRIPPED \\ --input_node_names=$INNAMES \\ --output_node_names=$OUTNAMES \\ --input_binary=true\necho \"- \"$OUT\" - size: \"$( stat -c %s $OUT)\necho \"- \"$STRIPPED\" - size: \"$( stat -c %s $STRIPPED)\nbazel-bin/tensorflow/examples/label_image/label_image \\ --graph=$OUT \\ --labels=$LABELS \\ --output_layer=$OUTNAMES \\ --image=$TEST\nbazel-bin/tensorflow/examples/label_image/label_image \\ --graph=$STRIPPED \\ --labels=$LABELS \\ --output_layer=$OUTNAMES \\ --image=$TEST\n\nproduces following output for the newly trained classes (reduced train_steps to 300 for testing):\n\n-- Strip graph\n1007 ops in the final graph.\n\n/home/robimo/images/imagenet-out/output_graph.pb - size: 87497129\n/home/robimo/images/imagenet-out/output_graph_stripped.pb - size: 87497129\n\n-- Test /home/robimo/images/imagenet/train/fordButtonOnOff/img4.jpg on full graph\nW tensorflow/core/framework/op_def_util.cc:332] Op BatchNormWithGlobalNormalization is deprecated. It will cease to work in GraphDef version 9. Use tf.nn.batch_normalization().\nI tensorflow/examples/label_image/main.cc:207] fordbuttononoff (4): 0.580274\nI tensorflow/examples/label_image/main.cc:207] fordbutton01234 (0): 0.10882\nI tensorflow/examples/label_image/main.cc:207] fordbutton1 (9): 0.100351\nI tensorflow/examples/label_image/main.cc:207] fordbuttonvolseek (3): 0.0679065\nI tensorflow/examples/label_image/main.cc:207] fordbutton3 (7): 0.0511736\n-- Test /home/robimo/images/imagenet/train/fordButtonOnOff/img4.jpg on stripped graph\nW tensorflow/core/framework/op_def_util.cc:332] Op BatchNormWithGlobalNormalization is deprecated. It will cease to work in GraphDef version 9. Use tf.nn.batch_normalization().\nI tensorflow/examples/label_image/main.cc:207] fordbuttononoff (4): 0.580274\nI tensorflow/examples/label_image/main.cc:207] fordbutton01234 (0): 0.10882\nI tensorflow/examples/label_image/main.cc:207] fordbutton1 (9): 0.100351\nI tensorflow/examples/label_image/main.cc:207] fordbuttonvolseek (3): 0.0679065\nI tensorflow/examples/label_image/main.cc:207] fordbutton3 (7): 0.0511736\n\nBoth the stripped and unstripped graph have identical file sizes, and both label_image runs are succesfull.\nWhat i am doing wrong?", "body": "@bafu \nWhat steps did you exactly did to get it working? I changed the code in \"TensorflowImageListener\" and \"coded_stream.h\", do i miss anything?\n\n@andrewharp \ni double checked that the right output graphs are used in the right place. Here is a link to my full shell script performing all the tasks\n[http://pastebin.com/NVbUJ3Ue](http://pastebin.com/NVbUJ3Ue)\n\nIt seems the strip_unused doesn't strip anything out of my graph. If i do the following steps:\n\n`OUT=$IMAGEDIR/imagenet-out/output_graph.pb`\n`STRIPPED=$IMAGEDIR/imagenet-out/output_graph_stripped.pb`\n`LABELS=$IMAGEDIR/imagenet-out/output_labels.txt`\n`INNAMES=\"Mul:0\"`\n`OUTNAMES=\"final_result\"``\n\n`bazel-bin/tensorflow/python/tools/strip_unused \\\n--input_graph=$OUT \\\n--output_graph=$STRIPPED \\\n--input_node_names=$INNAMES \\\n--output_node_names=$OUTNAMES \\\n--input_binary=true`\n\n`echo \"- \"$OUT\" - size: \"$( stat -c %s $OUT)`\n`echo \"- \"$STRIPPED\" - size: \"$( stat -c %s $STRIPPED)`\n\n`bazel-bin/tensorflow/examples/label_image/label_image \\\n--graph=$OUT \\\n--labels=$LABELS \\\n--output_layer=$OUTNAMES \\\n--image=$TEST`\n\n`bazel-bin/tensorflow/examples/label_image/label_image \\\n--graph=$STRIPPED \\\n--labels=$LABELS \\\n--output_layer=$OUTNAMES \\\n--image=$TEST`\n` `\nproduces following output for the newly trained classes (reduced train_steps to 300 for testing):\n\n> -- Strip graph\n> 1007 ops in the final graph.\n> - /home/robimo/images/imagenet-out/output_graph.pb - size: 87497129\n> - /home/robimo/images/imagenet-out/output_graph_stripped.pb - size: 87497129\n> \n> -- Test /home/robimo/images/imagenet/train/fordButtonOnOff/img4.jpg on full graph\n> W tensorflow/core/framework/op_def_util.cc:332] Op BatchNormWithGlobalNormalization is deprecated. It will cease to work in GraphDef version 9. Use tf.nn.batch_normalization().\n> I tensorflow/examples/label_image/main.cc:207] fordbuttononoff (4): 0.580274\n> I tensorflow/examples/label_image/main.cc:207] fordbutton01234 (0): 0.10882\n> I tensorflow/examples/label_image/main.cc:207] fordbutton1 (9): 0.100351\n> I tensorflow/examples/label_image/main.cc:207] fordbuttonvolseek (3): 0.0679065\n> I tensorflow/examples/label_image/main.cc:207] fordbutton3 (7): 0.0511736\n> \n> -- Test /home/robimo/images/imagenet/train/fordButtonOnOff/img4.jpg on stripped graph\n> W tensorflow/core/framework/op_def_util.cc:332] Op BatchNormWithGlobalNormalization is deprecated. It will cease to work in GraphDef version 9. Use tf.nn.batch_normalization().\n> I tensorflow/examples/label_image/main.cc:207] fordbuttononoff (4): 0.580274\n> I tensorflow/examples/label_image/main.cc:207] fordbutton01234 (0): 0.10882\n> I tensorflow/examples/label_image/main.cc:207] fordbutton1 (9): 0.100351\n> I tensorflow/examples/label_image/main.cc:207] fordbuttonvolseek (3): 0.0679065\n> I tensorflow/examples/label_image/main.cc:207] fordbutton3 (7): 0.0511736\n\nBoth the stripped and unstripped graph have identical file sizes, and both label_image runs are succesfull.\nWhat i am doing wrong?\n"}