{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/227586391", "html_url": "https://github.com/tensorflow/tensorflow/issues/1269#issuecomment-227586391", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1269", "id": 227586391, "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzU4NjM5MQ==", "user": {"login": "dmirk", "id": 4357323, "node_id": "MDQ6VXNlcjQzNTczMjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/4357323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmirk", "html_url": "https://github.com/dmirk", "followers_url": "https://api.github.com/users/dmirk/followers", "following_url": "https://api.github.com/users/dmirk/following{/other_user}", "gists_url": "https://api.github.com/users/dmirk/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmirk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmirk/subscriptions", "organizations_url": "https://api.github.com/users/dmirk/orgs", "repos_url": "https://api.github.com/users/dmirk/repos", "events_url": "https://api.github.com/users/dmirk/events{/privacy}", "received_events_url": "https://api.github.com/users/dmirk/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-21T22:03:50Z", "updated_at": "2016-06-21T22:03:50Z", "author_association": "NONE", "body_html": "<p>I think i got it working by modifying the for loop at line 93 in <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/tools/strip_unused.py\">strip_unused.py</a>.<br>\nIts just quick and dirty but it seems to work.<br>\nAs the DecodeJpeg Node assumes to be passed as unit8 we cannot simply add the DecodeJpeg as additional input_node_names</p>\n<pre><code>for node in input_graph_def.node:\n    if node.name in input_node_names_list or \"jpeg\" in node.op.lower():\n      placeholder_node = tf.NodeDef()\n      placeholder_node.op = \"Placeholder\"\n      placeholder_node.name = node.name\n      if \"jpeg\" in node.op.lower():\n        placeholder_node.attr[\"dtype\"].CopyFrom(tf.AttrValue(\n            type=tf.uint8.as_datatype_enum))\n      else:\n        placeholder_node.attr[\"dtype\"].CopyFrom(tf.AttrValue(\n            type=placeholder_type_enum))\n      inputs_replaced_graph_def.node.extend([placeholder_node])\n    else:\n      inputs_replaced_graph_def.node.extend([copy.deepcopy(node)])\n</code></pre>\n<p>I will test it in the next days</p>", "body_text": "I think i got it working by modifying the for loop at line 93 in strip_unused.py.\nIts just quick and dirty but it seems to work.\nAs the DecodeJpeg Node assumes to be passed as unit8 we cannot simply add the DecodeJpeg as additional input_node_names\nfor node in input_graph_def.node:\n    if node.name in input_node_names_list or \"jpeg\" in node.op.lower():\n      placeholder_node = tf.NodeDef()\n      placeholder_node.op = \"Placeholder\"\n      placeholder_node.name = node.name\n      if \"jpeg\" in node.op.lower():\n        placeholder_node.attr[\"dtype\"].CopyFrom(tf.AttrValue(\n            type=tf.uint8.as_datatype_enum))\n      else:\n        placeholder_node.attr[\"dtype\"].CopyFrom(tf.AttrValue(\n            type=placeholder_type_enum))\n      inputs_replaced_graph_def.node.extend([placeholder_node])\n    else:\n      inputs_replaced_graph_def.node.extend([copy.deepcopy(node)])\n\nI will test it in the next days", "body": "I think i got it working by modifying the for loop at line 93 in [strip_unused.py](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/tools/strip_unused.py). \nIts just quick and dirty but it seems to work.\nAs the DecodeJpeg Node assumes to be passed as unit8 we cannot simply add the DecodeJpeg as additional input_node_names\n\n```\nfor node in input_graph_def.node:\n    if node.name in input_node_names_list or \"jpeg\" in node.op.lower():\n      placeholder_node = tf.NodeDef()\n      placeholder_node.op = \"Placeholder\"\n      placeholder_node.name = node.name\n      if \"jpeg\" in node.op.lower():\n        placeholder_node.attr[\"dtype\"].CopyFrom(tf.AttrValue(\n            type=tf.uint8.as_datatype_enum))\n      else:\n        placeholder_node.attr[\"dtype\"].CopyFrom(tf.AttrValue(\n            type=placeholder_type_enum))\n      inputs_replaced_graph_def.node.extend([placeholder_node])\n    else:\n      inputs_replaced_graph_def.node.extend([copy.deepcopy(node)])\n```\n\nI will test it in the next days\n"}