{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/228027086", "html_url": "https://github.com/tensorflow/tensorflow/issues/1269#issuecomment-228027086", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/1269", "id": 228027086, "node_id": "MDEyOklzc3VlQ29tbWVudDIyODAyNzA4Ng==", "user": {"login": "bafu", "id": 292790, "node_id": "MDQ6VXNlcjI5Mjc5MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/292790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bafu", "html_url": "https://github.com/bafu", "followers_url": "https://api.github.com/users/bafu/followers", "following_url": "https://api.github.com/users/bafu/following{/other_user}", "gists_url": "https://api.github.com/users/bafu/gists{/gist_id}", "starred_url": "https://api.github.com/users/bafu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bafu/subscriptions", "organizations_url": "https://api.github.com/users/bafu/orgs", "repos_url": "https://api.github.com/users/bafu/repos", "events_url": "https://api.github.com/users/bafu/events{/privacy}", "received_events_url": "https://api.github.com/users/bafu/received_events", "type": "User", "site_admin": false}, "created_at": "2016-06-23T11:51:55Z", "updated_at": "2016-06-23T11:51:55Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4357323\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/dmirk\">@dmirk</a> Here are the steps how I build the Android demo project with a retrained model:</p>\n<ol>\n<li>\n<p>Retrained an Inception v3 model by <code>tensorflow/examples/image_retraining/retrain.py</code>.</p>\n</li>\n<li>\n<p>Go to the root directory of the Android example (<code>tensorflow/examples/android</code>).</p>\n</li>\n<li>\n<p>Put the retrained model and its label list into the <code>assets</code> directory</p>\n</li>\n<li>\n<p>Strip the retrained model by the commend:</p>\n<pre><code>python strip_unused.py\n--input_graph=&lt;retrained-pb-file&gt; \\\n--output_graph=&lt;your-stripped-pb-file&gt; \\\n--input_node_names=\"Mul\" \\\n--output_node_names=\"final_result\" \\\n--input_binary=true\n</code></pre>\n</li>\n<li>\n<p>Modify <code>src/org/tensorflow/demo/TensorflowImageListener.java</code> by modifying these variables:</p>\n<pre><code># in class TensorflowImageListener\nprivate static final int INPUT_SIZE = 299;\nprivate static final int IMAGE_MEAN = 128;\nprivate static final float IMAGE_STD = 128;\nprivate static final String INPUT_NAME = \"Mul:0\";\nprivate static final String OUTPUT_NAME = \"final_result:0\";\n</code></pre>\n</li>\n<li>\n<p>Build the project.</p>\n</li>\n</ol>", "body_text": "@dmirk Here are the steps how I build the Android demo project with a retrained model:\n\n\nRetrained an Inception v3 model by tensorflow/examples/image_retraining/retrain.py.\n\n\nGo to the root directory of the Android example (tensorflow/examples/android).\n\n\nPut the retrained model and its label list into the assets directory\n\n\nStrip the retrained model by the commend:\npython strip_unused.py\n--input_graph=<retrained-pb-file> \\\n--output_graph=<your-stripped-pb-file> \\\n--input_node_names=\"Mul\" \\\n--output_node_names=\"final_result\" \\\n--input_binary=true\n\n\n\nModify src/org/tensorflow/demo/TensorflowImageListener.java by modifying these variables:\n# in class TensorflowImageListener\nprivate static final int INPUT_SIZE = 299;\nprivate static final int IMAGE_MEAN = 128;\nprivate static final float IMAGE_STD = 128;\nprivate static final String INPUT_NAME = \"Mul:0\";\nprivate static final String OUTPUT_NAME = \"final_result:0\";\n\n\n\nBuild the project.", "body": "@dmirk Here are the steps how I build the Android demo project with a retrained model:\n1. Retrained an Inception v3 model by `tensorflow/examples/image_retraining/retrain.py`.\n2. Go to the root directory of the Android example (`tensorflow/examples/android`).\n3. Put the retrained model and its label list into the `assets` directory \n4. Strip the retrained model by the commend:\n   \n   ```\n   python strip_unused.py\n   --input_graph=<retrained-pb-file> \\\n   --output_graph=<your-stripped-pb-file> \\\n   --input_node_names=\"Mul\" \\\n   --output_node_names=\"final_result\" \\\n   --input_binary=true\n   ```\n5. Modify `src/org/tensorflow/demo/TensorflowImageListener.java` by modifying these variables:\n   \n   ```\n   # in class TensorflowImageListener\n   private static final int INPUT_SIZE = 299;\n   private static final int IMAGE_MEAN = 128;\n   private static final float IMAGE_STD = 128;\n   private static final String INPUT_NAME = \"Mul:0\";\n   private static final String OUTPUT_NAME = \"final_result:0\";\n   ```\n6. Build the project.\n"}