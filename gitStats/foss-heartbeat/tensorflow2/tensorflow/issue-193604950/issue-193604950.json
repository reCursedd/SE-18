{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6095", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6095/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6095/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6095/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/6095", "id": 193604950, "node_id": "MDU6SXNzdWUxOTM2MDQ5NTA=", "number": 6095, "title": "Add atan2 trigonometry function", "user": {"login": "jphalip", "id": 68544, "node_id": "MDQ6VXNlcjY4NTQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/68544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jphalip", "html_url": "https://github.com/jphalip", "followers_url": "https://api.github.com/users/jphalip/followers", "following_url": "https://api.github.com/users/jphalip/following{/other_user}", "gists_url": "https://api.github.com/users/jphalip/gists{/gist_id}", "starred_url": "https://api.github.com/users/jphalip/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jphalip/subscriptions", "organizations_url": "https://api.github.com/users/jphalip/orgs", "repos_url": "https://api.github.com/users/jphalip/repos", "events_url": "https://api.github.com/users/jphalip/events{/privacy}", "received_events_url": "https://api.github.com/users/jphalip/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-12-05T20:43:33Z", "updated_at": "2017-06-16T21:44:42Z", "closed_at": "2017-06-16T21:44:42Z", "author_association": "NONE", "body_html": "<p>Tensorflow has a number of built-in trigonometry functions like <code>atan</code> but it doesn't have <code>atan2</code> yet.</p>\n<p>This can be achieved with some custom code as pointed in this comment: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"169161945\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/3624\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/3624/hovercard?comment_id=242085609&amp;comment_type=issue_comment\" href=\"https://github.com/tensorflow/tensorflow/issues/3624#issuecomment-242085609\">#3624 (comment)</a>.</p>\n<p>There's actually a small mistake on the first line, where <code>np.pi</code> should not be added. The corrected code is presented below:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">atan2</span>(<span class=\"pl-smi\">y</span>, <span class=\"pl-smi\">x</span>):\n    angle <span class=\"pl-k\">=</span> tf.select(tf.greater(x,<span class=\"pl-c1\">0.0</span>), tf.atan(y<span class=\"pl-k\">/</span>x), tf.zeros_like(x))\n    angle <span class=\"pl-k\">=</span> tf.select(tf.logical_and(tf.less(x,<span class=\"pl-c1\">0.0</span>),  tf.greater_equal(y,<span class=\"pl-c1\">0.0</span>)), tf.atan(y<span class=\"pl-k\">/</span>x) <span class=\"pl-k\">+</span> np.pi, angle)\n    angle <span class=\"pl-k\">=</span> tf.select(tf.logical_and(tf.less(x,<span class=\"pl-c1\">0.0</span>),  tf.less(y,<span class=\"pl-c1\">0.0</span>)), tf.atan(y<span class=\"pl-k\">/</span>x) <span class=\"pl-k\">-</span> np.pi, angle)\n    angle <span class=\"pl-k\">=</span> tf.select(tf.logical_and(tf.equal(x,<span class=\"pl-c1\">0.0</span>), tf.greater(y,<span class=\"pl-c1\">0.0</span>)), <span class=\"pl-c1\">0.5</span><span class=\"pl-k\">*</span>np.pi <span class=\"pl-k\">*</span> tf.ones_like(x), angle)\n    angle <span class=\"pl-k\">=</span> tf.select(tf.logical_and(tf.equal(x,<span class=\"pl-c1\">0.0</span>), tf.less(y,<span class=\"pl-c1\">0.0</span>)), <span class=\"pl-k\">-</span><span class=\"pl-c1\">0.5</span><span class=\"pl-k\">*</span>np.pi <span class=\"pl-k\">*</span> tf.ones_like(x), angle)\n    angle <span class=\"pl-k\">=</span> tf.select(tf.logical_and(tf.equal(x,<span class=\"pl-c1\">0.0</span>), tf.equal(y,<span class=\"pl-c1\">0.0</span>)), np.nan <span class=\"pl-k\">*</span> tf.zeros_like(x), angle)\n    <span class=\"pl-k\">return</span> angle</pre></div>\n<p>While this custom code performs reasonably well, it'd be both faster and more convenient if Tensorflow had it built-in like the other existing functions.</p>", "body_text": "Tensorflow has a number of built-in trigonometry functions like atan but it doesn't have atan2 yet.\nThis can be achieved with some custom code as pointed in this comment: #3624 (comment).\nThere's actually a small mistake on the first line, where np.pi should not be added. The corrected code is presented below:\ndef atan2(y, x):\n    angle = tf.select(tf.greater(x,0.0), tf.atan(y/x), tf.zeros_like(x))\n    angle = tf.select(tf.logical_and(tf.less(x,0.0),  tf.greater_equal(y,0.0)), tf.atan(y/x) + np.pi, angle)\n    angle = tf.select(tf.logical_and(tf.less(x,0.0),  tf.less(y,0.0)), tf.atan(y/x) - np.pi, angle)\n    angle = tf.select(tf.logical_and(tf.equal(x,0.0), tf.greater(y,0.0)), 0.5*np.pi * tf.ones_like(x), angle)\n    angle = tf.select(tf.logical_and(tf.equal(x,0.0), tf.less(y,0.0)), -0.5*np.pi * tf.ones_like(x), angle)\n    angle = tf.select(tf.logical_and(tf.equal(x,0.0), tf.equal(y,0.0)), np.nan * tf.zeros_like(x), angle)\n    return angle\nWhile this custom code performs reasonably well, it'd be both faster and more convenient if Tensorflow had it built-in like the other existing functions.", "body": "Tensorflow has a number of built-in trigonometry functions like `atan` but it doesn't have `atan2` yet.\r\n\r\nThis can be achieved with some custom code as pointed in this comment: https://github.com/tensorflow/tensorflow/issues/3624#issuecomment-242085609.\r\n\r\nThere's actually a small mistake on the first line, where `np.pi` should not be added. The corrected code is presented below:\r\n\r\n```python\r\ndef atan2(y, x):\r\n    angle = tf.select(tf.greater(x,0.0), tf.atan(y/x), tf.zeros_like(x))\r\n    angle = tf.select(tf.logical_and(tf.less(x,0.0),  tf.greater_equal(y,0.0)), tf.atan(y/x) + np.pi, angle)\r\n    angle = tf.select(tf.logical_and(tf.less(x,0.0),  tf.less(y,0.0)), tf.atan(y/x) - np.pi, angle)\r\n    angle = tf.select(tf.logical_and(tf.equal(x,0.0), tf.greater(y,0.0)), 0.5*np.pi * tf.ones_like(x), angle)\r\n    angle = tf.select(tf.logical_and(tf.equal(x,0.0), tf.less(y,0.0)), -0.5*np.pi * tf.ones_like(x), angle)\r\n    angle = tf.select(tf.logical_and(tf.equal(x,0.0), tf.equal(y,0.0)), np.nan * tf.zeros_like(x), angle)\r\n    return angle\r\n```\r\n\r\nWhile this custom code performs reasonably well, it'd be both faster and more convenient if Tensorflow had it built-in like the other existing functions."}