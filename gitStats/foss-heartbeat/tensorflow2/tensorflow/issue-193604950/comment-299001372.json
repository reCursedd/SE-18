{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/299001372", "html_url": "https://github.com/tensorflow/tensorflow/issues/6095#issuecomment-299001372", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6095", "id": 299001372, "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTAwMTM3Mg==", "user": {"login": "asos-ben", "id": 22891125, "node_id": "MDQ6VXNlcjIyODkxMTI1", "avatar_url": "https://avatars0.githubusercontent.com/u/22891125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asos-ben", "html_url": "https://github.com/asos-ben", "followers_url": "https://api.github.com/users/asos-ben/followers", "following_url": "https://api.github.com/users/asos-ben/following{/other_user}", "gists_url": "https://api.github.com/users/asos-ben/gists{/gist_id}", "starred_url": "https://api.github.com/users/asos-ben/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asos-ben/subscriptions", "organizations_url": "https://api.github.com/users/asos-ben/orgs", "repos_url": "https://api.github.com/users/asos-ben/repos", "events_url": "https://api.github.com/users/asos-ben/events{/privacy}", "received_events_url": "https://api.github.com/users/asos-ben/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-03T18:48:51Z", "updated_at": "2017-05-03T18:52:22Z", "author_association": "NONE", "body_html": "<p>I think that select is deprecated in version 1.0, so this is now:</p>\n<pre><code>def atan2(x, y, epsilon=1.0e-12):\n        \"\"\"\n        A hack until the tf developers implement a function that can find the angle from an x and y co-\n        ordinate.\n        :param x: \n        :param epsilon: \n        :return: \n        \"\"\"\n        # Add a small number to all zeros, to avoid division by zero:\n        x = tf.where(tf.equal(x, 0.0), x+epsilon, x)\n        y = tf.where(tf.equal(y, 0.0), y+epsilon, y)\n    \n        angle = tf.where(tf.greater(x,0.0), tf.atan(y/x), tf.zeros_like(x))\n        angle = tf.where(tf.logical_and(tf.less(x,0.0),  tf.greater_equal(y,0.0)), tf.atan(y/x) + np.pi, angle)\n        angle = tf.where(tf.logical_and(tf.less(x,0.0),  tf.less(y,0.0)), tf.atan(y/x) - np.pi, angle)\n        angle = tf.where(tf.logical_and(tf.equal(x,0.0), tf.greater(y,0.0)), 0.5*np.pi * tf.ones_like(x), angle)\n        angle = tf.where(tf.logical_and(tf.equal(x,0.0), tf.less(y,0.0)), -0.5*np.pi * tf.ones_like(x), angle)\n        angle = tf.where(tf.logical_and(tf.equal(x,0.0), tf.equal(y,0.0)), tf.zeros_like(x), angle)\n        return angle\n</code></pre>", "body_text": "I think that select is deprecated in version 1.0, so this is now:\ndef atan2(x, y, epsilon=1.0e-12):\n        \"\"\"\n        A hack until the tf developers implement a function that can find the angle from an x and y co-\n        ordinate.\n        :param x: \n        :param epsilon: \n        :return: \n        \"\"\"\n        # Add a small number to all zeros, to avoid division by zero:\n        x = tf.where(tf.equal(x, 0.0), x+epsilon, x)\n        y = tf.where(tf.equal(y, 0.0), y+epsilon, y)\n    \n        angle = tf.where(tf.greater(x,0.0), tf.atan(y/x), tf.zeros_like(x))\n        angle = tf.where(tf.logical_and(tf.less(x,0.0),  tf.greater_equal(y,0.0)), tf.atan(y/x) + np.pi, angle)\n        angle = tf.where(tf.logical_and(tf.less(x,0.0),  tf.less(y,0.0)), tf.atan(y/x) - np.pi, angle)\n        angle = tf.where(tf.logical_and(tf.equal(x,0.0), tf.greater(y,0.0)), 0.5*np.pi * tf.ones_like(x), angle)\n        angle = tf.where(tf.logical_and(tf.equal(x,0.0), tf.less(y,0.0)), -0.5*np.pi * tf.ones_like(x), angle)\n        angle = tf.where(tf.logical_and(tf.equal(x,0.0), tf.equal(y,0.0)), tf.zeros_like(x), angle)\n        return angle", "body": "I think that select is deprecated in version 1.0, so this is now:\r\n\r\n```\r\ndef atan2(x, y, epsilon=1.0e-12):\r\n        \"\"\"\r\n        A hack until the tf developers implement a function that can find the angle from an x and y co-\r\n        ordinate.\r\n        :param x: \r\n        :param epsilon: \r\n        :return: \r\n        \"\"\"\r\n        # Add a small number to all zeros, to avoid division by zero:\r\n        x = tf.where(tf.equal(x, 0.0), x+epsilon, x)\r\n        y = tf.where(tf.equal(y, 0.0), y+epsilon, y)\r\n    \r\n        angle = tf.where(tf.greater(x,0.0), tf.atan(y/x), tf.zeros_like(x))\r\n        angle = tf.where(tf.logical_and(tf.less(x,0.0),  tf.greater_equal(y,0.0)), tf.atan(y/x) + np.pi, angle)\r\n        angle = tf.where(tf.logical_and(tf.less(x,0.0),  tf.less(y,0.0)), tf.atan(y/x) - np.pi, angle)\r\n        angle = tf.where(tf.logical_and(tf.equal(x,0.0), tf.greater(y,0.0)), 0.5*np.pi * tf.ones_like(x), angle)\r\n        angle = tf.where(tf.logical_and(tf.equal(x,0.0), tf.less(y,0.0)), -0.5*np.pi * tf.ones_like(x), angle)\r\n        angle = tf.where(tf.logical_and(tf.equal(x,0.0), tf.equal(y,0.0)), tf.zeros_like(x), angle)\r\n        return angle\r\n```"}