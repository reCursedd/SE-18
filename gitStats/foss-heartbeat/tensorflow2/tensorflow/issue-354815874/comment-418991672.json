{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/418991672", "html_url": "https://github.com/tensorflow/tensorflow/issues/21929#issuecomment-418991672", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21929", "id": 418991672, "node_id": "MDEyOklzc3VlQ29tbWVudDQxODk5MTY3Mg==", "user": {"login": "petrux", "id": 401919, "node_id": "MDQ6VXNlcjQwMTkxOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/401919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrux", "html_url": "https://github.com/petrux", "followers_url": "https://api.github.com/users/petrux/followers", "following_url": "https://api.github.com/users/petrux/following{/other_user}", "gists_url": "https://api.github.com/users/petrux/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrux/subscriptions", "organizations_url": "https://api.github.com/users/petrux/orgs", "repos_url": "https://api.github.com/users/petrux/repos", "events_url": "https://api.github.com/users/petrux/events{/privacy}", "received_events_url": "https://api.github.com/users/petrux/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-06T07:21:25Z", "updated_at": "2018-09-06T07:21:25Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16018\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/asimshankar\">@asimshankar</a> thanks for pointing it out! Unfortunately, I haven't been working on this piece of code since 2016. Anyway, on top of my head:</p>\n<ol>\n<li>the <code>nan</code> value for the loss means that there could be something fishy in general.</li>\n<li>even assuming that point 1 is not a real problem, could be that layer normalization doesn't fit this particular problem---by the way, note that in the original paper the MNIST problem is not tackled using RNNs but just layer-normalizing a FF network.</li>\n</ol>", "body_text": "@asimshankar thanks for pointing it out! Unfortunately, I haven't been working on this piece of code since 2016. Anyway, on top of my head:\n\nthe nan value for the loss means that there could be something fishy in general.\neven assuming that point 1 is not a real problem, could be that layer normalization doesn't fit this particular problem---by the way, note that in the original paper the MNIST problem is not tackled using RNNs but just layer-normalizing a FF network.", "body": "@asimshankar thanks for pointing it out! Unfortunately, I haven't been working on this piece of code since 2016. Anyway, on top of my head:\r\n1. the `nan` value for the loss means that there could be something fishy in general. \r\n2. even assuming that point 1 is not a real problem, could be that layer normalization doesn't fit this particular problem---by the way, note that in the original paper the MNIST problem is not tackled using RNNs but just layer-normalizing a FF network."}