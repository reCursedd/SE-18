{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/275967745", "html_url": "https://github.com/tensorflow/tensorflow/issues/2916#issuecomment-275967745", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/2916", "id": 275967745, "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTk2Nzc0NQ==", "user": {"login": "jeffhammond", "id": 406118, "node_id": "MDQ6VXNlcjQwNjExOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/406118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeffhammond", "html_url": "https://github.com/jeffhammond", "followers_url": "https://api.github.com/users/jeffhammond/followers", "following_url": "https://api.github.com/users/jeffhammond/following{/other_user}", "gists_url": "https://api.github.com/users/jeffhammond/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeffhammond/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeffhammond/subscriptions", "organizations_url": "https://api.github.com/users/jeffhammond/orgs", "repos_url": "https://api.github.com/users/jeffhammond/repos", "events_url": "https://api.github.com/users/jeffhammond/events{/privacy}", "received_events_url": "https://api.github.com/users/jeffhammond/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-30T02:23:34Z", "updated_at": "2017-01-30T02:23:34Z", "author_association": "NONE", "body_html": "<p>@avader906 I'm not going to wade too far into the MPI vs TCP/IP or Ethernet vs InfiniBand debates, other than to say that the real advantage of MPI is the ability to target any of these technologies and more while outsourcing the low-level performance optimization to someone else (who is usually an expert).  For example, IBM used MPI when running deep learning on their <a href=\"http://www-03.ibm.com/systems/technicalcomputing/solutions/bluegene/\" rel=\"nofollow\">Blue Gene/Q</a> system [1] and my Intel colleagues used MPI when running the same code across AWS and a <a href=\"http://www.cray.com/products/computing/xc-series\" rel=\"nofollow\">Cray XC</a> supercomputer [2].</p>\n<ol>\n<li><a href=\"https://doi.org/10.1109/TPDS.2016.2626289\" rel=\"nofollow\">Parallel Deep Neural Network Training for Big Data on Blue Gene/Q</a></li>\n<li><a href=\"https://arxiv.org/abs/1602.06709\" rel=\"nofollow\">Distributed Deep Learning Using Synchronous Stochastic Gradient Descent</a></li>\n</ol>", "body_text": "@avader906 I'm not going to wade too far into the MPI vs TCP/IP or Ethernet vs InfiniBand debates, other than to say that the real advantage of MPI is the ability to target any of these technologies and more while outsourcing the low-level performance optimization to someone else (who is usually an expert).  For example, IBM used MPI when running deep learning on their Blue Gene/Q system [1] and my Intel colleagues used MPI when running the same code across AWS and a Cray XC supercomputer [2].\n\nParallel Deep Neural Network Training for Big Data on Blue Gene/Q\nDistributed Deep Learning Using Synchronous Stochastic Gradient Descent", "body": "@avader906 I'm not going to wade too far into the MPI vs TCP/IP or Ethernet vs InfiniBand debates, other than to say that the real advantage of MPI is the ability to target any of these technologies and more while outsourcing the low-level performance optimization to someone else (who is usually an expert).  For example, IBM used MPI when running deep learning on their [Blue Gene/Q](http://www-03.ibm.com/systems/technicalcomputing/solutions/bluegene/) system [1] and my Intel colleagues used MPI when running the same code across AWS and a [Cray XC](http://www.cray.com/products/computing/xc-series) supercomputer [2].\r\n\r\n1. [Parallel Deep Neural Network Training for Big Data on Blue Gene/Q](https://doi.org/10.1109/TPDS.2016.2626289)\r\n2. [Distributed Deep Learning Using Synchronous Stochastic Gradient Descent](https://arxiv.org/abs/1602.06709)"}