{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20387", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20387/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20387/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20387/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/20387", "id": 336755932, "node_id": "MDU6SXNzdWUzMzY3NTU5MzI=", "number": 20387, "title": "Tensorflow C++ not releasing GPU resources after closing the session", "user": {"login": "ddrevicky", "id": 35264942, "node_id": "MDQ6VXNlcjM1MjY0OTQy", "avatar_url": "https://avatars2.githubusercontent.com/u/35264942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddrevicky", "html_url": "https://github.com/ddrevicky", "followers_url": "https://api.github.com/users/ddrevicky/followers", "following_url": "https://api.github.com/users/ddrevicky/following{/other_user}", "gists_url": "https://api.github.com/users/ddrevicky/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddrevicky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddrevicky/subscriptions", "organizations_url": "https://api.github.com/users/ddrevicky/orgs", "repos_url": "https://api.github.com/users/ddrevicky/repos", "events_url": "https://api.github.com/users/ddrevicky/events{/privacy}", "received_events_url": "https://api.github.com/users/ddrevicky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wt-huang", "id": 42785337, "node_id": "MDQ6VXNlcjQyNzg1MzM3", "avatar_url": "https://avatars0.githubusercontent.com/u/42785337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wt-huang", "html_url": "https://github.com/wt-huang", "followers_url": "https://api.github.com/users/wt-huang/followers", "following_url": "https://api.github.com/users/wt-huang/following{/other_user}", "gists_url": "https://api.github.com/users/wt-huang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wt-huang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wt-huang/subscriptions", "organizations_url": "https://api.github.com/users/wt-huang/orgs", "repos_url": "https://api.github.com/users/wt-huang/repos", "events_url": "https://api.github.com/users/wt-huang/events{/privacy}", "received_events_url": "https://api.github.com/users/wt-huang/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2018-06-28T19:48:06Z", "updated_at": "2018-10-12T23:14:06Z", "closed_at": "2018-10-12T23:14:06Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code:</strong>: No</li>\n<li>**OS Platform and Distribution: **: Windows 10</li>\n<li><strong>TensorFlow installed from</strong>: source</li>\n<li><strong>TensorFlow version (use command below)</strong>: tensorflow r1.7</li>\n<li><strong>Python version</strong>:  N/A</li>\n<li><strong>Bazel version (if compiling from source)</strong>: N/A</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: MSVC v140</li>\n<li><strong>CUDA/cuDNN version</strong>:  CUDA 9.0 and cuDNN v7.0.5</li>\n<li><strong>GPU model and memory</strong>:  NVIDIA GeForce GTX 1050 Ti 4095 MB</li>\n<li><strong>Exact command to reproduce</strong>: See code below</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Compiled tensorflow C++ with GPU support from source (branch r1.7) on Windows 10. Upon creating a new session 3GBs of memory are allocated on the GPU. Closing the session does not seem to result in the memory being released from the GPU as confirmed by the nvidia-smi command. Resources are only released when the C++ program exits.</p>\n<p>It would be desirable to have the option of releasing all the resources that tensorflow allocated since in the application I am developing the GPU computation is needed only very infrequently and if tensorflow keeps the GPU memory it is not available for rendering etc.</p>\n<h3>Source code / logs</h3>\n<pre><code>int main()\n{\n    SessionOptions options;\n    Session* session;\n    tensorflow::Status status = NewSession(SessionOptions(), &amp;session); // returns ok\n\n    status = session-&gt;Close(); // returns ok\n    delete session;\n\n    // GPU memory is still occupied at this point\n    std::string s;\n    std::cin &gt;&gt; s;\n\n    return 0;\n}\n// GPU memory is released when process exits\n</code></pre>", "body_text": "System information\n\nHave I written custom code:: No\n**OS Platform and Distribution: **: Windows 10\nTensorFlow installed from: source\nTensorFlow version (use command below): tensorflow r1.7\nPython version:  N/A\nBazel version (if compiling from source): N/A\nGCC/Compiler version (if compiling from source): MSVC v140\nCUDA/cuDNN version:  CUDA 9.0 and cuDNN v7.0.5\nGPU model and memory:  NVIDIA GeForce GTX 1050 Ti 4095 MB\nExact command to reproduce: See code below\n\nDescribe the problem\nCompiled tensorflow C++ with GPU support from source (branch r1.7) on Windows 10. Upon creating a new session 3GBs of memory are allocated on the GPU. Closing the session does not seem to result in the memory being released from the GPU as confirmed by the nvidia-smi command. Resources are only released when the C++ program exits.\nIt would be desirable to have the option of releasing all the resources that tensorflow allocated since in the application I am developing the GPU computation is needed only very infrequently and if tensorflow keeps the GPU memory it is not available for rendering etc.\nSource code / logs\nint main()\n{\n    SessionOptions options;\n    Session* session;\n    tensorflow::Status status = NewSession(SessionOptions(), &session); // returns ok\n\n    status = session->Close(); // returns ok\n    delete session;\n\n    // GPU memory is still occupied at this point\n    std::string s;\n    std::cin >> s;\n\n    return 0;\n}\n// GPU memory is released when process exits", "body": "### System information\r\n- **Have I written custom code:**: No\r\n- **OS Platform and Distribution: **: Windows 10\r\n- **TensorFlow installed from**: source\r\n- **TensorFlow version (use command below)**: tensorflow r1.7\r\n- **Python version**:  N/A\r\n- **Bazel version (if compiling from source)**: N/A\r\n- **GCC/Compiler version (if compiling from source)**: MSVC v140\r\n- **CUDA/cuDNN version**:  CUDA 9.0 and cuDNN v7.0.5\r\n- **GPU model and memory**:  NVIDIA GeForce GTX 1050 Ti 4095 MB\r\n- **Exact command to reproduce**: See code below\r\n\r\n### Describe the problem\r\nCompiled tensorflow C++ with GPU support from source (branch r1.7) on Windows 10. Upon creating a new session 3GBs of memory are allocated on the GPU. Closing the session does not seem to result in the memory being released from the GPU as confirmed by the nvidia-smi command. Resources are only released when the C++ program exits.\r\n\r\nIt would be desirable to have the option of releasing all the resources that tensorflow allocated since in the application I am developing the GPU computation is needed only very infrequently and if tensorflow keeps the GPU memory it is not available for rendering etc.\r\n\r\n### Source code / logs\r\n```\r\nint main()\r\n{\r\n    SessionOptions options;\r\n    Session* session;\r\n    tensorflow::Status status = NewSession(SessionOptions(), &session); // returns ok\r\n\r\n    status = session->Close(); // returns ok\r\n    delete session;\r\n\r\n    // GPU memory is still occupied at this point\r\n    std::string s;\r\n    std::cin >> s;\r\n\r\n    return 0;\r\n}\r\n// GPU memory is released when process exits\r\n```\r\n\r\n"}