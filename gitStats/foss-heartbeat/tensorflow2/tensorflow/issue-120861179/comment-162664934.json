{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/162664934", "html_url": "https://github.com/tensorflow/tensorflow/issues/435#issuecomment-162664934", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/435", "id": 162664934, "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjY2NDkzNA==", "user": {"login": "girving", "id": 70511, "node_id": "MDQ6VXNlcjcwNTEx", "avatar_url": "https://avatars1.githubusercontent.com/u/70511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/girving", "html_url": "https://github.com/girving", "followers_url": "https://api.github.com/users/girving/followers", "following_url": "https://api.github.com/users/girving/following{/other_user}", "gists_url": "https://api.github.com/users/girving/gists{/gist_id}", "starred_url": "https://api.github.com/users/girving/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/girving/subscriptions", "organizations_url": "https://api.github.com/users/girving/orgs", "repos_url": "https://api.github.com/users/girving/repos", "events_url": "https://api.github.com/users/girving/events{/privacy}", "received_events_url": "https://api.github.com/users/girving/received_events", "type": "User", "site_admin": false}, "created_at": "2015-12-07T21:12:52Z", "updated_at": "2015-12-07T21:12:52Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Thanks, that's a good feature request.  Not sure if it'll fly, but in past computational geometry work I also like defining cross product for 2D by 2D to 1D, 1D by 2D to 1D, and 2D by 1D to 1D (treating 1D as vertical).</p>", "body_text": "Thanks, that's a good feature request.  Not sure if it'll fly, but in past computational geometry work I also like defining cross product for 2D by 2D to 1D, 1D by 2D to 1D, and 2D by 1D to 1D (treating 1D as vertical).", "body": "Thanks, that's a good feature request.  Not sure if it'll fly, but in past computational geometry work I also like defining cross product for 2D by 2D to 1D, 1D by 2D to 1D, and 2D by 1D to 1D (treating 1D as vertical).\n"}