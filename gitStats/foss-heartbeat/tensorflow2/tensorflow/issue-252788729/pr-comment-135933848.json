{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/135933848", "pull_request_review_id": 59406022, "id": 135933848, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNTkzMzg0OA==", "diff_hunk": "@@ -43,6 +45,66 @@ struct InvVarianceToVariance {\n   void operator()(const Eigen::GpuDevice& d, double epsilon, int sample_size,\n                   int channels, T* variance);\n };\n+\n+\n+// Functor used by FusedBatchNormGradOp to do the computations when is_training=False.\n+// Both CPU and GPU will use this functor.\n+template <typename Device, typename T>\n+struct FusedBatchNormFreezeGrad {", "path": "tensorflow/core/kernels/fused_batch_norm_op.h", "position": 25, "original_position": 18, "commit_id": "f33ea380e3615e052929b635e5fa998d27cefa11", "original_commit_id": "fcca24e2f7640fcd882418033b6f5baf128c205f", "user": {"login": "ppwwyyxx", "id": 1381301, "node_id": "MDQ6VXNlcjEzODEzMDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1381301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ppwwyyxx", "html_url": "https://github.com/ppwwyyxx", "followers_url": "https://api.github.com/users/ppwwyyxx/followers", "following_url": "https://api.github.com/users/ppwwyyxx/following{/other_user}", "gists_url": "https://api.github.com/users/ppwwyyxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/ppwwyyxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ppwwyyxx/subscriptions", "organizations_url": "https://api.github.com/users/ppwwyyxx/orgs", "repos_url": "https://api.github.com/users/ppwwyyxx/repos", "events_url": "https://api.github.com/users/ppwwyyxx/events{/privacy}", "received_events_url": "https://api.github.com/users/ppwwyyxx/received_events", "type": "User", "site_admin": false}, "body": "If I understand the build process correctly, this functor needs to be instantiated in both fused_batch_norm_op.cc and fused_batch_norm_op.cu.cc, to be compiled to two kernels by nvcc and gcc respectively.  Therefore it has to be in a header file to be included by both .cc and .cu.cc. This seems like what's been done for other kernels as well (e.g. reverse_op).", "created_at": "2017-08-29T23:02:18Z", "updated_at": "2017-09-20T02:21:36Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/12580#discussion_r135933848", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12580", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/135933848"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/12580#discussion_r135933848"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12580"}}, "body_html": "<p>If I understand the build process correctly, this functor needs to be instantiated in both fused_batch_norm_op.cc and fused_batch_norm_op.cu.cc, to be compiled to two kernels by nvcc and gcc respectively.  Therefore it has to be in a header file to be included by both .cc and .cu.cc. This seems like what's been done for other kernels as well (e.g. reverse_op).</p>", "body_text": "If I understand the build process correctly, this functor needs to be instantiated in both fused_batch_norm_op.cc and fused_batch_norm_op.cu.cc, to be compiled to two kernels by nvcc and gcc respectively.  Therefore it has to be in a header file to be included by both .cc and .cu.cc. This seems like what's been done for other kernels as well (e.g. reverse_op).", "in_reply_to_id": 135905287}