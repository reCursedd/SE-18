{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/141374493", "pull_request_review_id": 65578505, "id": 141374493, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTM3NDQ5Mw==", "diff_hunk": "@@ -64,10 +65,27 @@ def testChainOfMatmul(self):\n       d = math_ops.matmul(c, b)\n       sess.run(d)\n \n-      max_bytes_in_use = sess.run(memory_stats_ops.MaxBytesInUse())\n+      max_bytes_in_use_op = memory_stats_ops.MaxBytesInUse()\n+      max_bytes_in_use = sess.run(max_bytes_in_use_op)\n       self.assertGreaterEqual(max_bytes_in_use, matrix_size_in_bytes * 3)\n       self.assertLess(max_bytes_in_use, matrix_size_in_bytes * 4)\n \n+      # run chain with 2 ops, make sure BytesInUse captures intermediate\n+      # memory usage\n+      a = random_ops.random_uniform(matrix_shape, dtype=dtype)\n+      with ops.control_dependencies([a]):\n+        bytes_in_use_op = memory_stats_ops.BytesInUse()\n+      with ops.control_dependencies([bytes_in_use_op]):\n+        b = random_ops.random_uniform(matrix_shape, dtype=dtype)\n+\n+      _, bytes_in_use, max_bytes_in_use = sess.run([a, bytes_in_use_op,\n+                                                    max_bytes_in_use_op])\n+\n+      # intermediate result allocates 1 matrix, max usage is at least 2\n+      self.assertGreaterEqual(bytes_in_use, matrix_size_in_bytes * 1)\n+      self.assertLess(bytes_in_use, matrix_size_in_bytes * 2)\n+      self.assertGreaterEqual(max_bytes_in_use, matrix_size_in_bytes * 2)", "path": "tensorflow/contrib/memory_stats/python/kernel_tests/memory_stats_ops_test.py", "position": null, "original_position": 32, "commit_id": "6c42648cf5504e2e99f609b8dd8dc39c2e388334", "original_commit_id": "7e6fd8a2402acc37854a4eae3634340ca451271f", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "body": "I left it that way because I wasn't sure about guarantees about lifetime of the allocator. If the allocator gets reset between run calls this test would be too strict. I'll assume allocator lifetime is guaranteed to span 2 session.run calls and update this in a bit", "created_at": "2017-09-27T15:10:22Z", "updated_at": "2017-09-27T15:19:59Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/13107#discussion_r141374493", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13107", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/141374493"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/13107#discussion_r141374493"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/13107"}}, "body_html": "<p>I left it that way because I wasn't sure about guarantees about lifetime of the allocator. If the allocator gets reset between run calls this test would be too strict. I'll assume allocator lifetime is guaranteed to span 2 session.run calls and update this in a bit</p>", "body_text": "I left it that way because I wasn't sure about guarantees about lifetime of the allocator. If the allocator gets reset between run calls this test would be too strict. I'll assume allocator lifetime is guaranteed to span 2 session.run calls and update this in a bit", "in_reply_to_id": 141240108}