{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18493", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18493/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18493/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/18493/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/18493", "id": 314118241, "node_id": "MDU6SXNzdWUzMTQxMTgyNDE=", "number": 18493, "title": "Tensorflow js returns NAN on large data set ", "user": {"login": "dhaneeshtnair", "id": 35426274, "node_id": "MDQ6VXNlcjM1NDI2Mjc0", "avatar_url": "https://avatars0.githubusercontent.com/u/35426274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhaneeshtnair", "html_url": "https://github.com/dhaneeshtnair", "followers_url": "https://api.github.com/users/dhaneeshtnair/followers", "following_url": "https://api.github.com/users/dhaneeshtnair/following{/other_user}", "gists_url": "https://api.github.com/users/dhaneeshtnair/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhaneeshtnair/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhaneeshtnair/subscriptions", "organizations_url": "https://api.github.com/users/dhaneeshtnair/orgs", "repos_url": "https://api.github.com/users/dhaneeshtnair/repos", "events_url": "https://api.github.com/users/dhaneeshtnair/events{/privacy}", "received_events_url": "https://api.github.com/users/dhaneeshtnair/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bignamehyp", "id": 3474655, "node_id": "MDQ6VXNlcjM0NzQ2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3474655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bignamehyp", "html_url": "https://github.com/bignamehyp", "followers_url": "https://api.github.com/users/bignamehyp/followers", "following_url": "https://api.github.com/users/bignamehyp/following{/other_user}", "gists_url": "https://api.github.com/users/bignamehyp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bignamehyp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bignamehyp/subscriptions", "organizations_url": "https://api.github.com/users/bignamehyp/orgs", "repos_url": "https://api.github.com/users/bignamehyp/repos", "events_url": "https://api.github.com/users/bignamehyp/events{/privacy}", "received_events_url": "https://api.github.com/users/bignamehyp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-04-13T13:59:13Z", "updated_at": "2018-06-27T18:49:10Z", "closed_at": "2018-06-27T18:45:21Z", "author_association": "NONE", "body_html": "\n--\n\u00a0 | \n\u00a0 | \n\u00a0 | &lt;script src=\"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@0.9.0\"&gt; &lt;/script&gt;\n\u00a0 | \u00a0\n\u00a0 | \n\u00a0 | &lt;script&gt;\n\u00a0 | \n\u00a0 | \n\u00a0 | \n\u00a0 | \n\u00a0 | \n\u00a0 | \n\u00a0 | const model = tf.sequential();\n\u00a0 | model.add(tf.layers.dense({units: 1, inputShape: [1]}));\n\u00a0 | model.compile({loss: 'meanSquaredError', optimizer: 'sgd'});\n\u00a0 | const xs = tf.tensor2d([1, 2, 3, 4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24], [24, 1]);\n\u00a0 | const ys = tf.tensor2d([3, 4, 5, 6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26], [24, 1]);\n\u00a0 | model.fit(xs, ys).then(() =&gt; {\n\u00a0 | model.predict(tf.tensor2d([11], [1, 1])).print();\n\u00a0 | });\n\u00a0 | &lt;/script&gt;\n\u00a0 | \n\u00a0 | \u00a0\n\u00a0 | \n\u00a0 | \n\u00a0 | ", "body_text": "--\n\u00a0 | \n\u00a0 | \n\u00a0 | <script src=\"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@0.9.0\"> </script>\n\u00a0 | \u00a0\n\u00a0 | \n\u00a0 | <script>\n\u00a0 | \n\u00a0 | \n\u00a0 | \n\u00a0 | \n\u00a0 | \n\u00a0 | \n\u00a0 | const model = tf.sequential();\n\u00a0 | model.add(tf.layers.dense({units: 1, inputShape: [1]}));\n\u00a0 | model.compile({loss: 'meanSquaredError', optimizer: 'sgd'});\n\u00a0 | const xs = tf.tensor2d([1, 2, 3, 4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24], [24, 1]);\n\u00a0 | const ys = tf.tensor2d([3, 4, 5, 6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26], [24, 1]);\n\u00a0 | model.fit(xs, ys).then(() => {\n\u00a0 | model.predict(tf.tensor2d([11], [1, 1])).print();\n\u00a0 | });\n\u00a0 | </script>\n\u00a0 | \n\u00a0 | \u00a0\n\u00a0 | \n\u00a0 | \n\u00a0 |", "body": "\r\n<html>\r\n--\r\n\u00a0 | <head>\r\n\u00a0 | <!-- Load TensorFlow.js -->\r\n\u00a0 | <script src=\"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@0.9.0\"> </script>\r\n\u00a0 | \u00a0\r\n\u00a0 | <!-- Place your code in the script tag below. You can also use an external .js file -->\r\n\u00a0 | <script>\r\n\u00a0 | <!--var x=[];-->\r\n\u00a0 | <!--var y=[];-->\r\n\u00a0 | <!--for(var i=1;i<=100;i++){-->\r\n\u00a0 | <!--x.push(i);-->\r\n\u00a0 | <!--x.push(i+2);-->\r\n\u00a0 | <!--}-->\r\n\u00a0 | const model = tf.sequential();\r\n\u00a0 | model.add(tf.layers.dense({units: 1, inputShape: [1]}));\r\n\u00a0 | model.compile({loss: 'meanSquaredError', optimizer: 'sgd'});\r\n\u00a0 | const xs = tf.tensor2d([1, 2, 3, 4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24], [24, 1]);\r\n\u00a0 | const ys = tf.tensor2d([3, 4, 5, 6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26], [24, 1]);\r\n\u00a0 | model.fit(xs, ys).then(() => {\r\n\u00a0 | model.predict(tf.tensor2d([11], [1, 1])).print();\r\n\u00a0 | });\r\n\u00a0 | </script>\r\n\u00a0 | </head>\r\n\u00a0 | \u00a0\r\n\u00a0 | <body>\r\n\u00a0 | </body>\r\n\u00a0 | </html>\r\n\r\n"}