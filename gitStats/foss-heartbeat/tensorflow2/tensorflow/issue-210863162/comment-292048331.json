{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/292048331", "html_url": "https://github.com/tensorflow/tensorflow/pull/7947#issuecomment-292048331", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7947", "id": 292048331, "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjA0ODMzMQ==", "user": {"login": "markslwong", "id": 704814, "node_id": "MDQ6VXNlcjcwNDgxNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/704814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markslwong", "html_url": "https://github.com/markslwong", "followers_url": "https://api.github.com/users/markslwong/followers", "following_url": "https://api.github.com/users/markslwong/following{/other_user}", "gists_url": "https://api.github.com/users/markslwong/gists{/gist_id}", "starred_url": "https://api.github.com/users/markslwong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markslwong/subscriptions", "organizations_url": "https://api.github.com/users/markslwong/orgs", "repos_url": "https://api.github.com/users/markslwong/repos", "events_url": "https://api.github.com/users/markslwong/events{/privacy}", "received_events_url": "https://api.github.com/users/markslwong/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-06T02:04:17Z", "updated_at": "2017-04-06T02:04:17Z", "author_association": "CONTRIBUTOR", "body_html": "<p>RelWithDebug works for me on both Tensorflow HEAD and my fork with the command line.  It is the good idea to keep things as is.  However this brings the bigger question of what to do with the Debug build.  I can remove those flags.  However, the consequence of doing so is that it can be only be built via MSBuild.  I've setup my previous company to build directly from Visual Studio so I have a personal preference to keep it in there so that they can continue with the existing workflow.  I also think building a solution within Visual Studio seems like a fairly reasonable thing to do.  As most people are likely users of the Tensorflow libraries and not necessarily going to need to be debugging it... I would guess that this would be the most common path.  However, I can only take a guess from my own bias lens.  I don't have any true statistics as to the most typical way to build.</p>", "body_text": "RelWithDebug works for me on both Tensorflow HEAD and my fork with the command line.  It is the good idea to keep things as is.  However this brings the bigger question of what to do with the Debug build.  I can remove those flags.  However, the consequence of doing so is that it can be only be built via MSBuild.  I've setup my previous company to build directly from Visual Studio so I have a personal preference to keep it in there so that they can continue with the existing workflow.  I also think building a solution within Visual Studio seems like a fairly reasonable thing to do.  As most people are likely users of the Tensorflow libraries and not necessarily going to need to be debugging it... I would guess that this would be the most common path.  However, I can only take a guess from my own bias lens.  I don't have any true statistics as to the most typical way to build.", "body": "RelWithDebug works for me on both Tensorflow HEAD and my fork with the command line.  It is the good idea to keep things as is.  However this brings the bigger question of what to do with the Debug build.  I can remove those flags.  However, the consequence of doing so is that it can be only be built via MSBuild.  I've setup my previous company to build directly from Visual Studio so I have a personal preference to keep it in there so that they can continue with the existing workflow.  I also think building a solution within Visual Studio seems like a fairly reasonable thing to do.  As most people are likely users of the Tensorflow libraries and not necessarily going to need to be debugging it... I would guess that this would be the most common path.  However, I can only take a guess from my own bias lens.  I don't have any true statistics as to the most typical way to build."}