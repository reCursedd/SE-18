{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/201929284", "html_url": "https://github.com/tensorflow/tensorflow/issues/150#issuecomment-201929284", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/150", "id": 201929284, "node_id": "MDEyOklzc3VlQ29tbWVudDIwMTkyOTI4NA==", "user": {"login": "jerabaul29", "id": 8382834, "node_id": "MDQ6VXNlcjgzODI4MzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/8382834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jerabaul29", "html_url": "https://github.com/jerabaul29", "followers_url": "https://api.github.com/users/jerabaul29/followers", "following_url": "https://api.github.com/users/jerabaul29/following{/other_user}", "gists_url": "https://api.github.com/users/jerabaul29/gists{/gist_id}", "starred_url": "https://api.github.com/users/jerabaul29/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jerabaul29/subscriptions", "organizations_url": "https://api.github.com/users/jerabaul29/orgs", "repos_url": "https://api.github.com/users/jerabaul29/repos", "events_url": "https://api.github.com/users/jerabaul29/events{/privacy}", "received_events_url": "https://api.github.com/users/jerabaul29/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-26T20:59:20Z", "updated_at": "2016-03-26T20:59:20Z", "author_association": "NONE", "body_html": "<p>Great!</p>\n<p>I guess a problem with 3 (or higher) D convnets will be the cost of computations. Do you think it would be possible / useful (or maybe it is already possible in your ops?) to implement a tetrahedral instead of square grid convnet as suggested in this article? Interesting also for later generalization to higher dimension: if I understand well, this approach (generalized if necessary to higher dimension) will make the number of nodes in the kernel linear instead of exponential in the dimension of the initial tensor.</p>\n<p><a href=\"http://arxiv.org/pdf/1505.02890v2.pdf\" rel=\"nofollow\">http://arxiv.org/pdf/1505.02890v2.pdf</a></p>", "body_text": "Great!\nI guess a problem with 3 (or higher) D convnets will be the cost of computations. Do you think it would be possible / useful (or maybe it is already possible in your ops?) to implement a tetrahedral instead of square grid convnet as suggested in this article? Interesting also for later generalization to higher dimension: if I understand well, this approach (generalized if necessary to higher dimension) will make the number of nodes in the kernel linear instead of exponential in the dimension of the initial tensor.\nhttp://arxiv.org/pdf/1505.02890v2.pdf", "body": "Great!\n\nI guess a problem with 3 (or higher) D convnets will be the cost of computations. Do you think it would be possible / useful (or maybe it is already possible in your ops?) to implement a tetrahedral instead of square grid convnet as suggested in this article? Interesting also for later generalization to higher dimension: if I understand well, this approach (generalized if necessary to higher dimension) will make the number of nodes in the kernel linear instead of exponential in the dimension of the initial tensor.\n\nhttp://arxiv.org/pdf/1505.02890v2.pdf\n"}