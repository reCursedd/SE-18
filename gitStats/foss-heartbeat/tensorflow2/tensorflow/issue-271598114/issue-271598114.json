{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14299", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14299/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14299/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14299/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14299", "id": 271598114, "node_id": "MDU6SXNzdWUyNzE1OTgxMTQ=", "number": 14299, "title": "padded_batch fails on nested shapes", "user": {"login": "pfc", "id": 276335, "node_id": "MDQ6VXNlcjI3NjMzNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/276335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pfc", "html_url": "https://github.com/pfc", "followers_url": "https://api.github.com/users/pfc/followers", "following_url": "https://api.github.com/users/pfc/following{/other_user}", "gists_url": "https://api.github.com/users/pfc/gists{/gist_id}", "starred_url": "https://api.github.com/users/pfc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pfc/subscriptions", "organizations_url": "https://api.github.com/users/pfc/orgs", "repos_url": "https://api.github.com/users/pfc/repos", "events_url": "https://api.github.com/users/pfc/events{/privacy}", "received_events_url": "https://api.github.com/users/pfc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-06T19:49:18Z", "updated_at": "2017-11-06T20:15:02Z", "closed_at": "2017-11-06T20:15:02Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Arch Linux, fully updated</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Source</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.3.0-rc1-4086-g028809769d 1.4.0-rc1</li>\n<li><strong>Python version</strong>: 3.6.3</li>\n<li><strong>Bazel version (if compiling from source)</strong>:</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: gcc (GCC) 7.2.0</li>\n<li><strong>CUDA/cuDNN version</strong>: cuda 9.0.176-4 cuDNN 7.0.3-1</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Trying to use tf.data.Dataset.padded_batch fails with type error for any nested shape<br>\nsee <a href=\"https://stackoverflow.com/questions/47103249/how-to-use-tf-data-dataset-padded-batch-with-a-nested-shape\" rel=\"nofollow\">stack overflow question</a></p>\n<h3>Source code / logs</h3>\n<pre><code>import tensorflow as tf\ndef generator():\n    while 1:\n        yield [[[1]*3 for y in range(32)] for x in range(32)],[[[0]*cnum for y in range(1)]for x in range(1)]\ndataset = tf.data.Dataset.from_generator(generator,tf.float32)\nshapes = (tf.TensorShape([None,None,None,3]),tf.TensorShape([None,5]))\nbatch = dataset.padded_batch(1,shapes)\n</code></pre>\n<p>note: I'm not sure if the additional None dimension representing batch should be added to the generator or not but this code does reproduce the error I'm having.</p>\n<pre><code>Traceback (most recent call last):\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/data/ops/dataset_ops.py\", line 1263, in _partial_shape_to_tensor\n    shape_like = tensor_shape.as_shape(shape_like)\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/framework/tensor_shape.py\", line 849, in as_shape\n    return TensorShape(shape)\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/framework/tensor_shape.py\", line 455, in __init__\n    self._dims = [as_dimension(d) for d in dims_iter]\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/framework/tensor_shape.py\", line 455, in &lt;listcomp&gt;\n    self._dims = [as_dimension(d) for d in dims_iter]\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/framework/tensor_shape.py\", line 397, in as_dimension\n    return Dimension(value)\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/framework/tensor_shape.py\", line 32, in __init__\n    self._value = int(value)\nTypeError: int() argument must be a string, a bytes-like object or a number, not 'TensorShape'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/data/ops/dataset_ops.py\", line 710, in padded_batch\n    return PaddedBatchDataset(self, batch_size, padded_shapes, padding_values)\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/data/ops/dataset_ops.py\", line 1309, in __init__\n    input_dataset.output_shapes, _partial_shape_to_tensor, padded_shapes)\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/data/util/nest.py\", line 519, in map_structure_up_to\n    results = [func(*tensors) for tensors in zip(*all_flattened_up_to)]\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/data/util/nest.py\", line 519, in &lt;listcomp&gt;\n    results = [func(*tensors) for tensors in zip(*all_flattened_up_to)]\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/data/ops/dataset_ops.py\", line 1271, in _partial_shape_to_tensor\n    return ops.convert_to_tensor(shape_like, dtype=dtypes.int64)\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 887, in convert_to_tensor\n    as_ref=False)\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 977, in internal_convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/framework/constant_op.py\", line 233, in _constant_tensor_conversion_function\n    return constant(v, dtype=dtype, name=name)\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/framework/constant_op.py\", line 212, in constant\n    value, dtype=dtype, shape=shape, verify_shape=verify_shape))\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/framework/tensor_util.py\", line 399, in make_tensor_proto\n    _AssertCompatible(values, dtype)\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/framework/tensor_util.py\", line 314, in _AssertCompatible\n    (dtype.name, repr(mismatch), type(mismatch).__name__))\nTypeError: Expected int64, got TensorShape([Dimension(None), Dimension(None), Dimension(None), Dimension(3)]) of type 'TensorShape' instead.\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Arch Linux, fully updated\nTensorFlow installed from (source or binary): Source\nTensorFlow version (use command below): v1.3.0-rc1-4086-g028809769d 1.4.0-rc1\nPython version: 3.6.3\nBazel version (if compiling from source):\nGCC/Compiler version (if compiling from source): gcc (GCC) 7.2.0\nCUDA/cuDNN version: cuda 9.0.176-4 cuDNN 7.0.3-1\nGPU model and memory: N/A\nExact command to reproduce:\n\nDescribe the problem\nTrying to use tf.data.Dataset.padded_batch fails with type error for any nested shape\nsee stack overflow question\nSource code / logs\nimport tensorflow as tf\ndef generator():\n    while 1:\n        yield [[[1]*3 for y in range(32)] for x in range(32)],[[[0]*cnum for y in range(1)]for x in range(1)]\ndataset = tf.data.Dataset.from_generator(generator,tf.float32)\nshapes = (tf.TensorShape([None,None,None,3]),tf.TensorShape([None,5]))\nbatch = dataset.padded_batch(1,shapes)\n\nnote: I'm not sure if the additional None dimension representing batch should be added to the generator or not but this code does reproduce the error I'm having.\nTraceback (most recent call last):\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/data/ops/dataset_ops.py\", line 1263, in _partial_shape_to_tensor\n    shape_like = tensor_shape.as_shape(shape_like)\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/framework/tensor_shape.py\", line 849, in as_shape\n    return TensorShape(shape)\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/framework/tensor_shape.py\", line 455, in __init__\n    self._dims = [as_dimension(d) for d in dims_iter]\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/framework/tensor_shape.py\", line 455, in <listcomp>\n    self._dims = [as_dimension(d) for d in dims_iter]\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/framework/tensor_shape.py\", line 397, in as_dimension\n    return Dimension(value)\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/framework/tensor_shape.py\", line 32, in __init__\n    self._value = int(value)\nTypeError: int() argument must be a string, a bytes-like object or a number, not 'TensorShape'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/data/ops/dataset_ops.py\", line 710, in padded_batch\n    return PaddedBatchDataset(self, batch_size, padded_shapes, padding_values)\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/data/ops/dataset_ops.py\", line 1309, in __init__\n    input_dataset.output_shapes, _partial_shape_to_tensor, padded_shapes)\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/data/util/nest.py\", line 519, in map_structure_up_to\n    results = [func(*tensors) for tensors in zip(*all_flattened_up_to)]\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/data/util/nest.py\", line 519, in <listcomp>\n    results = [func(*tensors) for tensors in zip(*all_flattened_up_to)]\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/data/ops/dataset_ops.py\", line 1271, in _partial_shape_to_tensor\n    return ops.convert_to_tensor(shape_like, dtype=dtypes.int64)\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 887, in convert_to_tensor\n    as_ref=False)\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 977, in internal_convert_to_tensor\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/framework/constant_op.py\", line 233, in _constant_tensor_conversion_function\n    return constant(v, dtype=dtype, name=name)\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/framework/constant_op.py\", line 212, in constant\n    value, dtype=dtype, shape=shape, verify_shape=verify_shape))\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/framework/tensor_util.py\", line 399, in make_tensor_proto\n    _AssertCompatible(values, dtype)\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/framework/tensor_util.py\", line 314, in _AssertCompatible\n    (dtype.name, repr(mismatch), type(mismatch).__name__))\nTypeError: Expected int64, got TensorShape([Dimension(None), Dimension(None), Dimension(None), Dimension(3)]) of type 'TensorShape' instead.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Arch Linux, fully updated\r\n- **TensorFlow installed from (source or binary)**: Source\r\n- **TensorFlow version (use command below)**: v1.3.0-rc1-4086-g028809769d 1.4.0-rc1\r\n- **Python version**: 3.6.3\r\n- **Bazel version (if compiling from source)**:\r\n- **GCC/Compiler version (if compiling from source)**: gcc (GCC) 7.2.0\r\n- **CUDA/cuDNN version**: cuda 9.0.176-4 cuDNN 7.0.3-1\r\n- **GPU model and memory**: N/A\r\n- **Exact command to reproduce**:\r\n\r\n### Describe the problem\r\nTrying to use tf.data.Dataset.padded_batch fails with type error for any nested shape\r\nsee [stack overflow question](https://stackoverflow.com/questions/47103249/how-to-use-tf-data-dataset-padded-batch-with-a-nested-shape)\r\n\r\n### Source code / logs\r\n```\r\nimport tensorflow as tf\r\ndef generator():\r\n    while 1:\r\n        yield [[[1]*3 for y in range(32)] for x in range(32)],[[[0]*cnum for y in range(1)]for x in range(1)]\r\ndataset = tf.data.Dataset.from_generator(generator,tf.float32)\r\nshapes = (tf.TensorShape([None,None,None,3]),tf.TensorShape([None,5]))\r\nbatch = dataset.padded_batch(1,shapes)\r\n```\r\nnote: I'm not sure if the additional None dimension representing batch should be added to the generator or not but this code does reproduce the error I'm having.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/data/ops/dataset_ops.py\", line 1263, in _partial_shape_to_tensor\r\n    shape_like = tensor_shape.as_shape(shape_like)\r\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/framework/tensor_shape.py\", line 849, in as_shape\r\n    return TensorShape(shape)\r\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/framework/tensor_shape.py\", line 455, in __init__\r\n    self._dims = [as_dimension(d) for d in dims_iter]\r\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/framework/tensor_shape.py\", line 455, in <listcomp>\r\n    self._dims = [as_dimension(d) for d in dims_iter]\r\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/framework/tensor_shape.py\", line 397, in as_dimension\r\n    return Dimension(value)\r\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/framework/tensor_shape.py\", line 32, in __init__\r\n    self._value = int(value)\r\nTypeError: int() argument must be a string, a bytes-like object or a number, not 'TensorShape'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/data/ops/dataset_ops.py\", line 710, in padded_batch\r\n    return PaddedBatchDataset(self, batch_size, padded_shapes, padding_values)\r\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/data/ops/dataset_ops.py\", line 1309, in __init__\r\n    input_dataset.output_shapes, _partial_shape_to_tensor, padded_shapes)\r\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/data/util/nest.py\", line 519, in map_structure_up_to\r\n    results = [func(*tensors) for tensors in zip(*all_flattened_up_to)]\r\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/data/util/nest.py\", line 519, in <listcomp>\r\n    results = [func(*tensors) for tensors in zip(*all_flattened_up_to)]\r\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/data/ops/dataset_ops.py\", line 1271, in _partial_shape_to_tensor\r\n    return ops.convert_to_tensor(shape_like, dtype=dtypes.int64)\r\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 887, in convert_to_tensor\r\n    as_ref=False)\r\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/framework/ops.py\", line 977, in internal_convert_to_tensor\r\n    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)\r\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/framework/constant_op.py\", line 233, in _constant_tensor_conversion_function\r\n    return constant(v, dtype=dtype, name=name)\r\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/framework/constant_op.py\", line 212, in constant\r\n    value, dtype=dtype, shape=shape, verify_shape=verify_shape))\r\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/framework/tensor_util.py\", line 399, in make_tensor_proto\r\n    _AssertCompatible(values, dtype)\r\n  File \"/usr/lib/python3.6/site-packages/tensorflow/python/framework/tensor_util.py\", line 314, in _AssertCompatible\r\n    (dtype.name, repr(mismatch), type(mismatch).__name__))\r\nTypeError: Expected int64, got TensorShape([Dimension(None), Dimension(None), Dimension(None), Dimension(3)]) of type 'TensorShape' instead.\r\n```\r\n"}