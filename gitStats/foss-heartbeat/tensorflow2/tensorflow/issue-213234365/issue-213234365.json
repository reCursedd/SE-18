{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8262", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8262/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8262/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8262/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/8262", "id": 213234365, "node_id": "MDExOlB1bGxSZXF1ZXN0MTEwMDU1MDAy", "number": 8262, "title": "Set `set +e` in generate.sh (`go generate`) to output correct information", "user": {"login": "yongtang", "id": 6932348, "node_id": "MDQ6VXNlcjY5MzIzNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6932348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yongtang", "html_url": "https://github.com/yongtang", "followers_url": "https://api.github.com/users/yongtang/followers", "following_url": "https://api.github.com/users/yongtang/following{/other_user}", "gists_url": "https://api.github.com/users/yongtang/gists{/gist_id}", "starred_url": "https://api.github.com/users/yongtang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yongtang/subscriptions", "organizations_url": "https://api.github.com/users/yongtang/orgs", "repos_url": "https://api.github.com/users/yongtang/repos", "events_url": "https://api.github.com/users/yongtang/events{/privacy}", "received_events_url": "https://api.github.com/users/yongtang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-10T03:34:25Z", "updated_at": "2017-03-11T00:01:31Z", "closed_at": "2017-03-10T23:42:14Z", "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/8262", "html_url": "https://github.com/tensorflow/tensorflow/pull/8262", "diff_url": "https://github.com/tensorflow/tensorflow/pull/8262.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/8262.patch"}, "body_html": "<p>While playing with go in tensorflow, the <code>go generate</code> will not output correct<br>\ninformation about missing protoc even though generate.sh contains the following:</p>\n<pre><code>  PATH_PROTOC=$(which protoc)\n  if [ ! -x \"${PATH_PROTOC}\" ]\n  then\n    echo \"Protocol buffer compiler protoc not found in PATH or in ${PROTOC}\"\n    echo \"Perhaps build it using:\"\n    echo \"bazel build --config opt @protobuf//:protoc\"\n    exit 1\n  fi\n  PROTOC=$PATH_PROTOC\n</code></pre>\n<p>Instread, a non-informative error is displayed:</p>\n<pre><code>root@99829f070f46:/go/src/github.com/tensorflow/tensorflow# go generate github.com/tensorflow/tensorflow/tensorflow/go/op\n../genop/main.go:15: running \"sh\": exit status 1\ntensorflow/go/op/generate.go:15: running \"go\": exit status 1\nroot@99829f070f46:/go/src/github.com/tensorflow/tensorflow#\n</code></pre>\n<p>The reason is that <code>set -e</code> is at the beginning of the script and it exit<br>\nimmediately at <code>PATH_PROTOC=$(which protoc)</code>.</p>\n<p>This fix sets <code>set +e</code> before <code>PATH_PROTOC=$(which protoc)</code> and restores <code>set -e</code><br>\nback, so that information about missing protoc outputed.</p>\n<p>Below is the new output which helps in finding out the reason for the build error:</p>\n<pre><code>root@99829f070f46:/go/src/github.com/tensorflow/tensorflow# go generate github.com/tensorflow/tensorflow/tensorflow/go/op\nProtocol buffer compiler protoc not found in PATH or in /go/src/github.com/tensorflow/tensorflow/bazel-out/host/bin/external/protobuf/protoc\nPerhaps build it using:\nbazel build --config opt @protobuf//:protoc\n../genop/main.go:15: running \"sh\": exit status 1\ntensorflow/go/op/generate.go:15: running \"go\": exit status 1\nroot@99829f070f46:/go/src/github.com/tensorflow/tensorflow#\n</code></pre>", "body_text": "While playing with go in tensorflow, the go generate will not output correct\ninformation about missing protoc even though generate.sh contains the following:\n  PATH_PROTOC=$(which protoc)\n  if [ ! -x \"${PATH_PROTOC}\" ]\n  then\n    echo \"Protocol buffer compiler protoc not found in PATH or in ${PROTOC}\"\n    echo \"Perhaps build it using:\"\n    echo \"bazel build --config opt @protobuf//:protoc\"\n    exit 1\n  fi\n  PROTOC=$PATH_PROTOC\n\nInstread, a non-informative error is displayed:\nroot@99829f070f46:/go/src/github.com/tensorflow/tensorflow# go generate github.com/tensorflow/tensorflow/tensorflow/go/op\n../genop/main.go:15: running \"sh\": exit status 1\ntensorflow/go/op/generate.go:15: running \"go\": exit status 1\nroot@99829f070f46:/go/src/github.com/tensorflow/tensorflow#\n\nThe reason is that set -e is at the beginning of the script and it exit\nimmediately at PATH_PROTOC=$(which protoc).\nThis fix sets set +e before PATH_PROTOC=$(which protoc) and restores set -e\nback, so that information about missing protoc outputed.\nBelow is the new output which helps in finding out the reason for the build error:\nroot@99829f070f46:/go/src/github.com/tensorflow/tensorflow# go generate github.com/tensorflow/tensorflow/tensorflow/go/op\nProtocol buffer compiler protoc not found in PATH or in /go/src/github.com/tensorflow/tensorflow/bazel-out/host/bin/external/protobuf/protoc\nPerhaps build it using:\nbazel build --config opt @protobuf//:protoc\n../genop/main.go:15: running \"sh\": exit status 1\ntensorflow/go/op/generate.go:15: running \"go\": exit status 1\nroot@99829f070f46:/go/src/github.com/tensorflow/tensorflow#", "body": "While playing with go in tensorflow, the `go generate` will not output correct\r\ninformation about missing protoc even though generate.sh contains the following:\r\n```\r\n  PATH_PROTOC=$(which protoc)\r\n  if [ ! -x \"${PATH_PROTOC}\" ]\r\n  then\r\n    echo \"Protocol buffer compiler protoc not found in PATH or in ${PROTOC}\"\r\n    echo \"Perhaps build it using:\"\r\n    echo \"bazel build --config opt @protobuf//:protoc\"\r\n    exit 1\r\n  fi\r\n  PROTOC=$PATH_PROTOC\r\n```\r\n\r\nInstread, a non-informative error is displayed:\r\n```\r\nroot@99829f070f46:/go/src/github.com/tensorflow/tensorflow# go generate github.com/tensorflow/tensorflow/tensorflow/go/op\r\n../genop/main.go:15: running \"sh\": exit status 1\r\ntensorflow/go/op/generate.go:15: running \"go\": exit status 1\r\nroot@99829f070f46:/go/src/github.com/tensorflow/tensorflow#\r\n```\r\n\r\nThe reason is that `set -e` is at the beginning of the script and it exit\r\nimmediately at `PATH_PROTOC=$(which protoc)`.\r\n\r\nThis fix sets `set +e` before `PATH_PROTOC=$(which protoc)` and restores `set -e`\r\nback, so that information about missing protoc outputed.\r\n\r\nBelow is the new output which helps in finding out the reason for the build error:\r\n```\r\nroot@99829f070f46:/go/src/github.com/tensorflow/tensorflow# go generate github.com/tensorflow/tensorflow/tensorflow/go/op\r\nProtocol buffer compiler protoc not found in PATH or in /go/src/github.com/tensorflow/tensorflow/bazel-out/host/bin/external/protobuf/protoc\r\nPerhaps build it using:\r\nbazel build --config opt @protobuf//:protoc\r\n../genop/main.go:15: running \"sh\": exit status 1\r\ntensorflow/go/op/generate.go:15: running \"go\": exit status 1\r\nroot@99829f070f46:/go/src/github.com/tensorflow/tensorflow#\r\n```"}