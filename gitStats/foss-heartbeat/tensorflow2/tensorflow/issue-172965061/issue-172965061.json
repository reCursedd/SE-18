{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4018", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4018/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4018/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4018/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4018", "id": 172965061, "node_id": "MDU6SXNzdWUxNzI5NjUwNjE=", "number": 4018, "title": "GPU build configuration doesn't work with Debian-packaged cuda/cudnn packages", "user": {"login": "forrcaho", "id": 492742, "node_id": "MDQ6VXNlcjQ5Mjc0Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/492742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/forrcaho", "html_url": "https://github.com/forrcaho", "followers_url": "https://api.github.com/users/forrcaho/followers", "following_url": "https://api.github.com/users/forrcaho/following{/other_user}", "gists_url": "https://api.github.com/users/forrcaho/gists{/gist_id}", "starred_url": "https://api.github.com/users/forrcaho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/forrcaho/subscriptions", "organizations_url": "https://api.github.com/users/forrcaho/orgs", "repos_url": "https://api.github.com/users/forrcaho/repos", "events_url": "https://api.github.com/users/forrcaho/events{/privacy}", "received_events_url": "https://api.github.com/users/forrcaho/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586558, "node_id": "MDU6TGFiZWw0MDQ1ODY1NTg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:community%20support", "name": "stat:community support", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-08-24T14:20:44Z", "updated_at": "2018-06-22T13:04:34Z", "closed_at": "2017-06-16T17:03:37Z", "author_association": "NONE", "body_html": "<p>I'm on a Debian 'sid' linux computer and I am attempting to build a GPU-enabled version of TensorFlow using the Debian-packaged versions of the Nvidia libraries.</p>\n<p>The CUDA packages are from Debian's non-free repository, e.g. <a href=\"https://packages.debian.org/sid/nvidia-cuda-toolkit\" rel=\"nofollow\">https://packages.debian.org/sid/nvidia-cuda-toolkit</a> and cuDNN I installed from using the .deb packages available from Nvidia's site (libcudnn5_5.1.3-1+cuda7.5_amd64.deb  and libcudnn5-dev_5.1.3-1+cuda7.5_amd64.deb).</p>\n<p>These packages put the libraries and include files in standard system locations, so there is no CUDA_TOOLKIT_PATH or CUDNN_INSTALL_PATH to speak of, as this ldconfig output shows:</p>\n<p>forrest@makemake:~$ /sbin/ldconfig -p | grep 'cud'<br>\nlibicudata.so.57 (libc6,x86-64) =&gt; /usr/lib/x86_64-linux-gnu/libicudata.so.57<br>\nlibicudata.so.55 (libc6,x86-64) =&gt; /usr/lib/x86_64-linux-gnu/libicudata.so.55<br>\nlibicudata.so.55 (libc6) =&gt; /usr/lib/i386-linux-gnu/libicudata.so.55<br>\nlibicudata.so (libc6,x86-64) =&gt; /usr/lib/x86_64-linux-gnu/libicudata.so<br>\nlibcudnn.so.5 (libc6,x86-64) =&gt; /usr/lib/x86_64-linux-gnu/libcudnn.so.5<br>\nlibcudnn.so (libc6,x86-64) =&gt; /usr/lib/x86_64-linux-gnu/libcudnn.so<br>\nlibcudart.so.7.5 (libc6,x86-64) =&gt; /usr/lib/x86_64-linux-gnu/libcudart.so.7.5<br>\nlibcudart.so (libc6,x86-64) =&gt; /usr/lib/x86_64-linux-gnu/libcudart.so<br>\nlibcuda.so.1 (libc6,x86-64) =&gt; /usr/lib/x86_64-linux-gnu/libcuda.so.1<br>\nlibcuda.so.1 (libc6) =&gt; /usr/lib/i386-linux-gnu/libcuda.so.1<br>\nlibcuda.so (libc6,x86-64) =&gt; /usr/lib/x86_64-linux-gnu/libcuda.so<br>\nlibcuda.so (libc6) =&gt; /usr/lib/i386-linux-gnu/libcuda.so</p>\n<p>I have attempted to hack the configure file to support this default Debian configuration, but so far bazel always seems to expect CUDA_INSTALL_DIR to be set.</p>", "body_text": "I'm on a Debian 'sid' linux computer and I am attempting to build a GPU-enabled version of TensorFlow using the Debian-packaged versions of the Nvidia libraries.\nThe CUDA packages are from Debian's non-free repository, e.g. https://packages.debian.org/sid/nvidia-cuda-toolkit and cuDNN I installed from using the .deb packages available from Nvidia's site (libcudnn5_5.1.3-1+cuda7.5_amd64.deb  and libcudnn5-dev_5.1.3-1+cuda7.5_amd64.deb).\nThese packages put the libraries and include files in standard system locations, so there is no CUDA_TOOLKIT_PATH or CUDNN_INSTALL_PATH to speak of, as this ldconfig output shows:\nforrest@makemake:~$ /sbin/ldconfig -p | grep 'cud'\nlibicudata.so.57 (libc6,x86-64) => /usr/lib/x86_64-linux-gnu/libicudata.so.57\nlibicudata.so.55 (libc6,x86-64) => /usr/lib/x86_64-linux-gnu/libicudata.so.55\nlibicudata.so.55 (libc6) => /usr/lib/i386-linux-gnu/libicudata.so.55\nlibicudata.so (libc6,x86-64) => /usr/lib/x86_64-linux-gnu/libicudata.so\nlibcudnn.so.5 (libc6,x86-64) => /usr/lib/x86_64-linux-gnu/libcudnn.so.5\nlibcudnn.so (libc6,x86-64) => /usr/lib/x86_64-linux-gnu/libcudnn.so\nlibcudart.so.7.5 (libc6,x86-64) => /usr/lib/x86_64-linux-gnu/libcudart.so.7.5\nlibcudart.so (libc6,x86-64) => /usr/lib/x86_64-linux-gnu/libcudart.so\nlibcuda.so.1 (libc6,x86-64) => /usr/lib/x86_64-linux-gnu/libcuda.so.1\nlibcuda.so.1 (libc6) => /usr/lib/i386-linux-gnu/libcuda.so.1\nlibcuda.so (libc6,x86-64) => /usr/lib/x86_64-linux-gnu/libcuda.so\nlibcuda.so (libc6) => /usr/lib/i386-linux-gnu/libcuda.so\nI have attempted to hack the configure file to support this default Debian configuration, but so far bazel always seems to expect CUDA_INSTALL_DIR to be set.", "body": "I'm on a Debian 'sid' linux computer and I am attempting to build a GPU-enabled version of TensorFlow using the Debian-packaged versions of the Nvidia libraries.\n\nThe CUDA packages are from Debian's non-free repository, e.g. https://packages.debian.org/sid/nvidia-cuda-toolkit and cuDNN I installed from using the .deb packages available from Nvidia's site (libcudnn5_5.1.3-1+cuda7.5_amd64.deb  and libcudnn5-dev_5.1.3-1+cuda7.5_amd64.deb).\n\nThese packages put the libraries and include files in standard system locations, so there is no CUDA_TOOLKIT_PATH or CUDNN_INSTALL_PATH to speak of, as this ldconfig output shows:\n\nforrest@makemake:~$ /sbin/ldconfig -p | grep 'cud'\n    libicudata.so.57 (libc6,x86-64) => /usr/lib/x86_64-linux-gnu/libicudata.so.57\n    libicudata.so.55 (libc6,x86-64) => /usr/lib/x86_64-linux-gnu/libicudata.so.55\n    libicudata.so.55 (libc6) => /usr/lib/i386-linux-gnu/libicudata.so.55\n    libicudata.so (libc6,x86-64) => /usr/lib/x86_64-linux-gnu/libicudata.so\n    libcudnn.so.5 (libc6,x86-64) => /usr/lib/x86_64-linux-gnu/libcudnn.so.5\n    libcudnn.so (libc6,x86-64) => /usr/lib/x86_64-linux-gnu/libcudnn.so\n    libcudart.so.7.5 (libc6,x86-64) => /usr/lib/x86_64-linux-gnu/libcudart.so.7.5\n    libcudart.so (libc6,x86-64) => /usr/lib/x86_64-linux-gnu/libcudart.so\n    libcuda.so.1 (libc6,x86-64) => /usr/lib/x86_64-linux-gnu/libcuda.so.1\n    libcuda.so.1 (libc6) => /usr/lib/i386-linux-gnu/libcuda.so.1\n    libcuda.so (libc6,x86-64) => /usr/lib/x86_64-linux-gnu/libcuda.so\n    libcuda.so (libc6) => /usr/lib/i386-linux-gnu/libcuda.so\n\nI have attempted to hack the configure file to support this default Debian configuration, but so far bazel always seems to expect CUDA_INSTALL_DIR to be set.\n"}