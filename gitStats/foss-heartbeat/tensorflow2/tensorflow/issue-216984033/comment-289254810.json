{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/289254810", "html_url": "https://github.com/tensorflow/tensorflow/issues/8715#issuecomment-289254810", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/8715", "id": 289254810, "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTI1NDgxMA==", "user": {"login": "snnn", "id": 856316, "node_id": "MDQ6VXNlcjg1NjMxNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/856316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snnn", "html_url": "https://github.com/snnn", "followers_url": "https://api.github.com/users/snnn/followers", "following_url": "https://api.github.com/users/snnn/following{/other_user}", "gists_url": "https://api.github.com/users/snnn/gists{/gist_id}", "starred_url": "https://api.github.com/users/snnn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snnn/subscriptions", "organizations_url": "https://api.github.com/users/snnn/orgs", "repos_url": "https://api.github.com/users/snnn/repos", "events_url": "https://api.github.com/users/snnn/events{/privacy}", "received_events_url": "https://api.github.com/users/snnn/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-26T03:01:33Z", "updated_at": "2017-03-26T03:02:21Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hi <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=20959853\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/drpngx\">@drpngx</a> , I'll take this.</p>\n<p>I just found the interface is a bit inconsistent.  For compressed file, it assumes that the file will be read sequentially and it will ignore the offset parameter in</p>\n<pre><code>class RecordReader{\n  //...\n  Status ReadRecord(uint64* offset, string* record);\n}\n</code></pre>\n<p>So,  if this class is designed for sequential reads, I want to remove the 'offset' argument, and use ZlibInputStream for zipped file, SnappyInputStream for snappy file, RandomAccessInputStream for uncompressed file.</p>\n<p>Is it ok?</p>", "body_text": "Hi @drpngx , I'll take this.\nI just found the interface is a bit inconsistent.  For compressed file, it assumes that the file will be read sequentially and it will ignore the offset parameter in\nclass RecordReader{\n  //...\n  Status ReadRecord(uint64* offset, string* record);\n}\n\nSo,  if this class is designed for sequential reads, I want to remove the 'offset' argument, and use ZlibInputStream for zipped file, SnappyInputStream for snappy file, RandomAccessInputStream for uncompressed file.\nIs it ok?", "body": "Hi @drpngx , I'll take this.\r\n\r\nI just found the interface is a bit inconsistent.  For compressed file, it assumes that the file will be read sequentially and it will ignore the offset parameter in \r\n```\r\nclass RecordReader{\r\n  //...\r\n  Status ReadRecord(uint64* offset, string* record);\r\n}\r\n```\r\n\r\nSo,  if this class is designed for sequential reads, I want to remove the 'offset' argument, and use ZlibInputStream for zipped file, SnappyInputStream for snappy file, RandomAccessInputStream for uncompressed file.\r\n\r\nIs it ok?"}