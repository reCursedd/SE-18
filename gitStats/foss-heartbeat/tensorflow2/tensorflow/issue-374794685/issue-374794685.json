{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23333", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23333/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23333/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23333/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23333", "id": 374794685, "node_id": "MDU6SXNzdWUzNzQ3OTQ2ODU=", "number": 23333, "title": "tf.scatter_update does not update variable with float type on GPU ", "user": {"login": "ahatamiz", "id": 26806394, "node_id": "MDQ6VXNlcjI2ODA2Mzk0", "avatar_url": "https://avatars2.githubusercontent.com/u/26806394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahatamiz", "html_url": "https://github.com/ahatamiz", "followers_url": "https://api.github.com/users/ahatamiz/followers", "following_url": "https://api.github.com/users/ahatamiz/following{/other_user}", "gists_url": "https://api.github.com/users/ahatamiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahatamiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahatamiz/subscriptions", "organizations_url": "https://api.github.com/users/ahatamiz/orgs", "repos_url": "https://api.github.com/users/ahatamiz/repos", "events_url": "https://api.github.com/users/ahatamiz/events{/privacy}", "received_events_url": "https://api.github.com/users/ahatamiz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "harshini-gadige", "id": 42781361, "node_id": "MDQ6VXNlcjQyNzgxMzYx", "avatar_url": "https://avatars1.githubusercontent.com/u/42781361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harshini-gadige", "html_url": "https://github.com/harshini-gadige", "followers_url": "https://api.github.com/users/harshini-gadige/followers", "following_url": "https://api.github.com/users/harshini-gadige/following{/other_user}", "gists_url": "https://api.github.com/users/harshini-gadige/gists{/gist_id}", "starred_url": "https://api.github.com/users/harshini-gadige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harshini-gadige/subscriptions", "organizations_url": "https://api.github.com/users/harshini-gadige/orgs", "repos_url": "https://api.github.com/users/harshini-gadige/repos", "events_url": "https://api.github.com/users/harshini-gadige/events{/privacy}", "received_events_url": "https://api.github.com/users/harshini-gadige/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "harshini-gadige", "id": 42781361, "node_id": "MDQ6VXNlcjQyNzgxMzYx", "avatar_url": "https://avatars1.githubusercontent.com/u/42781361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harshini-gadige", "html_url": "https://github.com/harshini-gadige", "followers_url": "https://api.github.com/users/harshini-gadige/followers", "following_url": "https://api.github.com/users/harshini-gadige/following{/other_user}", "gists_url": "https://api.github.com/users/harshini-gadige/gists{/gist_id}", "starred_url": "https://api.github.com/users/harshini-gadige/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harshini-gadige/subscriptions", "organizations_url": "https://api.github.com/users/harshini-gadige/orgs", "repos_url": "https://api.github.com/users/harshini-gadige/repos", "events_url": "https://api.github.com/users/harshini-gadige/events{/privacy}", "received_events_url": "https://api.github.com/users/harshini-gadige/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-10-28T20:25:36Z", "updated_at": "2018-11-07T19:23:03Z", "closed_at": "2018-11-06T21:49:47Z", "author_association": "NONE", "body_html": "<p><em>Please make sure that this is a bug. As per our <a href=\"https://github.com/tensorflow/tensorflow/blob/master/ISSUES.md\">GitHub Policy</a>, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template</em></p>\n<p><strong>System information</strong></p>\n<ul>\n<li>Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes</li>\n<li>OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  Linux Ubuntu 18.04.1 LTS</li>\n<li>TensorFlow installed from (source or binary): 1.11</li>\n<li>TensorFlow version (use command below): pip</li>\n<li>Python version: 3.6</li>\n<li>Bazel version (if compiling from source):</li>\n<li>GCC/Compiler version (if compiling from source):</li>\n<li>CUDA/cuDNN version: CUDA release 9.0, V9.0.176</li>\n<li>GPU model and memory: TITAN Xp / 12Gb</li>\n</ul>\n<p><strong>Describe the current behavior</strong></p>\n<p>On GPU, tf.scatter_update does not update the variable if the type of the variable is defined as float. However, the same code works without a problem if the code is executed on CPU. If you run the code I provided here for you, you will get random values like the one that comes in the following every time you run the code:</p>\n<p>[array([-0.27238935, -0.11273658, -0.18543988, -0.34574947, -0.4174637 ,<br>\n-0.35478222], dtype=float32), 6]</p>\n<p>This problem does not happen on a CPU, or if the variable type is set to integer.</p>\n<p><strong>Describe the expected behavior</strong><br>\nIt should simply update the variable and should output the following in a deterministic manner:</p>\n<p>[array([19., 19., 19., 19., 19., 19.], dtype=float32), 6]</p>\n<p>I suppose this is a bug in the caching process involved if the code is run on a GPU.</p>\n<p><strong>Code to reproduce the issue</strong><br>\nProvide a reproducible test case that is the bare minimum necessary to generate the problem.</p>\n<pre><code>import tensorflow as tf\nimport os\n\nos.environ[\"CUDA_DEVICE_ORDER\"]=\"PCI_BUS_ID\"\nos.environ[\"CUDA_VISIBLE_DEVICES\"]='0'\ndef cond(size, i):\n    return tf.less(i,size)\n\ndef body(size, i):\n    b=2*7.5+c\n\n    with tf.variable_scope(\"a\", reuse=tf.AUTO_REUSE):\n\t    a = tf.get_variable(\"a\",[6],dtype=tf.float32)\n\n        a = tf.scatter_update(a,i,b)\n\n        with tf.control_dependencies([a]):\n\t        return (size, i+1)\n\nwith tf.Session() as sess:\n    c=tf.constant(4.0)\n    i = tf.constant(0)\n    size = tf.constant(6)\n    _,i = tf.while_loop(cond,\n            body,\n            [size, i])\n\n    a = tf.get_variable(\"a\",[6],dtype=tf.float32)\n\n    init = tf.initialize_all_variables()\n    sess.run(init)\n    print(sess.run([a,i]))\n</code></pre>\n<p><strong>Other info / logs</strong><br>\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.</p>", "body_text": "Please make sure that this is a bug. As per our GitHub Policy, we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template\nSystem information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04):  Linux Ubuntu 18.04.1 LTS\nTensorFlow installed from (source or binary): 1.11\nTensorFlow version (use command below): pip\nPython version: 3.6\nBazel version (if compiling from source):\nGCC/Compiler version (if compiling from source):\nCUDA/cuDNN version: CUDA release 9.0, V9.0.176\nGPU model and memory: TITAN Xp / 12Gb\n\nDescribe the current behavior\nOn GPU, tf.scatter_update does not update the variable if the type of the variable is defined as float. However, the same code works without a problem if the code is executed on CPU. If you run the code I provided here for you, you will get random values like the one that comes in the following every time you run the code:\n[array([-0.27238935, -0.11273658, -0.18543988, -0.34574947, -0.4174637 ,\n-0.35478222], dtype=float32), 6]\nThis problem does not happen on a CPU, or if the variable type is set to integer.\nDescribe the expected behavior\nIt should simply update the variable and should output the following in a deterministic manner:\n[array([19., 19., 19., 19., 19., 19.], dtype=float32), 6]\nI suppose this is a bug in the caching process involved if the code is run on a GPU.\nCode to reproduce the issue\nProvide a reproducible test case that is the bare minimum necessary to generate the problem.\nimport tensorflow as tf\nimport os\n\nos.environ[\"CUDA_DEVICE_ORDER\"]=\"PCI_BUS_ID\"\nos.environ[\"CUDA_VISIBLE_DEVICES\"]='0'\ndef cond(size, i):\n    return tf.less(i,size)\n\ndef body(size, i):\n    b=2*7.5+c\n\n    with tf.variable_scope(\"a\", reuse=tf.AUTO_REUSE):\n\t    a = tf.get_variable(\"a\",[6],dtype=tf.float32)\n\n        a = tf.scatter_update(a,i,b)\n\n        with tf.control_dependencies([a]):\n\t        return (size, i+1)\n\nwith tf.Session() as sess:\n    c=tf.constant(4.0)\n    i = tf.constant(0)\n    size = tf.constant(6)\n    _,i = tf.while_loop(cond,\n            body,\n            [size, i])\n\n    a = tf.get_variable(\"a\",[6],dtype=tf.float32)\n\n    init = tf.initialize_all_variables()\n    sess.run(init)\n    print(sess.run([a,i]))\n\nOther info / logs\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.", "body": "<em>Please make sure that this is a bug. As per our [GitHub Policy](https://github.com/tensorflow/tensorflow/blob/master/ISSUES.md), we only address code/doc bugs, performance issues, feature requests and build/installation issues on GitHub. tag:bug_template</em>\r\n\r\n**System information**\r\n- Have I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\r\n- OS Platform and Distribution (e.g., Linux Ubuntu 16.04):  Linux Ubuntu 18.04.1 LTS\r\n- TensorFlow installed from (source or binary): 1.11\r\n- TensorFlow version (use command below): pip \r\n- Python version: 3.6\r\n- Bazel version (if compiling from source): \r\n- GCC/Compiler version (if compiling from source):\r\n- CUDA/cuDNN version: CUDA release 9.0, V9.0.176\r\n- GPU model and memory: TITAN Xp / 12Gb\r\n\r\n**Describe the current behavior**\r\n\r\nOn GPU, tf.scatter_update does not update the variable if the type of the variable is defined as float. However, the same code works without a problem if the code is executed on CPU. If you run the code I provided here for you, you will get random values like the one that comes in the following every time you run the code:  \r\n\r\n[array([-0.27238935, -0.11273658, -0.18543988, -0.34574947, -0.4174637 ,\r\n       -0.35478222], dtype=float32), 6]\r\n\r\nThis problem does not happen on a CPU, or if the variable type is set to integer. \r\n\r\n**Describe the expected behavior**\r\nIt should simply update the variable and should output the following in a deterministic manner: \r\n\r\n\r\n[array([19., 19., 19., 19., 19., 19.], dtype=float32), 6]\r\n\r\nI suppose this is a bug in the caching process involved if the code is run on a GPU.  \r\n\r\n**Code to reproduce the issue**\r\nProvide a reproducible test case that is the bare minimum necessary to generate the problem.\r\n\r\n    import tensorflow as tf\r\n    import os\r\n\r\n    os.environ[\"CUDA_DEVICE_ORDER\"]=\"PCI_BUS_ID\"\r\n    os.environ[\"CUDA_VISIBLE_DEVICES\"]='0'\r\n    def cond(size, i):\r\n\t    return tf.less(i,size)\r\n\r\n    def body(size, i):\r\n\t    b=2*7.5+c\r\n\r\n\t    with tf.variable_scope(\"a\", reuse=tf.AUTO_REUSE):\r\n\t\t    a = tf.get_variable(\"a\",[6],dtype=tf.float32)\r\n\r\n\t        a = tf.scatter_update(a,i,b)\r\n\r\n\t        with tf.control_dependencies([a]):\r\n\t\t        return (size, i+1)\r\n\r\n    with tf.Session() as sess:\r\n        c=tf.constant(4.0)\r\n        i = tf.constant(0)\r\n        size = tf.constant(6)\r\n        _,i = tf.while_loop(cond,\r\n                body,\r\n                [size, i])\r\n    \r\n        a = tf.get_variable(\"a\",[6],dtype=tf.float32)\r\n    \r\n        init = tf.initialize_all_variables()\r\n        sess.run(init)\r\n        print(sess.run([a,i]))\r\n\r\n**Other info / logs**\r\nInclude any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.\r\n"}