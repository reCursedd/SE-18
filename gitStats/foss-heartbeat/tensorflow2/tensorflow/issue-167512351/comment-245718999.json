{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/245718999", "html_url": "https://github.com/tensorflow/tensorflow/issues/3499#issuecomment-245718999", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3499", "id": 245718999, "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTcxODk5OQ==", "user": {"login": "aselle", "id": 326106, "node_id": "MDQ6VXNlcjMyNjEwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/326106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aselle", "html_url": "https://github.com/aselle", "followers_url": "https://api.github.com/users/aselle/followers", "following_url": "https://api.github.com/users/aselle/following{/other_user}", "gists_url": "https://api.github.com/users/aselle/gists{/gist_id}", "starred_url": "https://api.github.com/users/aselle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aselle/subscriptions", "organizations_url": "https://api.github.com/users/aselle/orgs", "repos_url": "https://api.github.com/users/aselle/repos", "events_url": "https://api.github.com/users/aselle/events{/privacy}", "received_events_url": "https://api.github.com/users/aselle/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-08T19:51:56Z", "updated_at": "2016-09-08T19:51:56Z", "author_association": "MEMBER", "body_html": "<p>Your comment about variables created is not true:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf \n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n        <span class=\"pl-k\">for</span> name <span class=\"pl-k\">in</span> [<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>a<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>b<span class=\"pl-pds\">\"</span></span>]:\n            <span class=\"pl-k\">with</span> tf.variable_scope(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>fc<span class=\"pl-pds\">\"</span></span>):\n                xx <span class=\"pl-k\">=</span> tf.Variable([<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>], <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span>name<span class=\"pl-k\">+</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>v<span class=\"pl-pds\">\"</span></span>)\n        <span class=\"pl-c1\">print</span>(xx.name)\n                x <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">1</span>], <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span>name)\n                <span class=\"pl-c1\">print</span>(x)</pre></div>\n<p>yields</p>\n<pre><code>fc/av:0\nTensor(\"fc/a:0\", shape=(1,), dtype=float32)\nfc_1/bv:0\nTensor(\"fc_1/b:0\", shape=(1,), dtype=float32)\n</code></pre>\n<p>name_scope on the outside is what you want. If you want to switch scopes and return to that scope you can (see documentation of name_scope). e.g. this does what you want...</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\n<span class=\"pl-k\">with</span> tf.name_scope(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>fc<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">as</span> scope:\n   <span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n        <span class=\"pl-k\">for</span> name <span class=\"pl-k\">in</span> [<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>a<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>b<span class=\"pl-pds\">\"</span></span>]:\n            <span class=\"pl-k\">with</span> tf.name_scope(scope):\n                xx <span class=\"pl-k\">=</span> tf.Variable([<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>], <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span>name<span class=\"pl-k\">+</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>v<span class=\"pl-pds\">\"</span></span>)\n                <span class=\"pl-c1\">print</span>(xx.name)\n                x <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, <span class=\"pl-v\">shape</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">1</span>], <span class=\"pl-v\">name</span><span class=\"pl-k\">=</span>name)\n                <span class=\"pl-c1\">print</span>(x)</pre></div>\n<p>(notice how we capture the scope on the outside)</p>", "body_text": "Your comment about variables created is not true:\nimport tensorflow as tf \n\nwith tf.Session() as sess:\n        for name in [\"a\",\"b\"]:\n            with tf.variable_scope(\"fc\"):\n                xx = tf.Variable([1,2], name=name+\"v\")\n        print(xx.name)\n                x = tf.placeholder(tf.float32, shape=[1], name=name)\n                print(x)\nyields\nfc/av:0\nTensor(\"fc/a:0\", shape=(1,), dtype=float32)\nfc_1/bv:0\nTensor(\"fc_1/b:0\", shape=(1,), dtype=float32)\n\nname_scope on the outside is what you want. If you want to switch scopes and return to that scope you can (see documentation of name_scope). e.g. this does what you want...\nimport tensorflow as tf\n\nwith tf.name_scope(\"fc\") as scope:\n   with tf.Session() as sess:\n        for name in [\"a\",\"b\"]:\n            with tf.name_scope(scope):\n                xx = tf.Variable([1,2], name=name+\"v\")\n                print(xx.name)\n                x = tf.placeholder(tf.float32, shape=[1], name=name)\n                print(x)\n(notice how we capture the scope on the outside)", "body": "Your comment about variables created is not true:\n\n``` python\nimport tensorflow as tf \n\nwith tf.Session() as sess:\n        for name in [\"a\",\"b\"]:\n            with tf.variable_scope(\"fc\"):\n                xx = tf.Variable([1,2], name=name+\"v\")\n        print(xx.name)\n                x = tf.placeholder(tf.float32, shape=[1], name=name)\n                print(x)\n```\n\nyields\n\n```\nfc/av:0\nTensor(\"fc/a:0\", shape=(1,), dtype=float32)\nfc_1/bv:0\nTensor(\"fc_1/b:0\", shape=(1,), dtype=float32)\n```\n\nname_scope on the outside is what you want. If you want to switch scopes and return to that scope you can (see documentation of name_scope). e.g. this does what you want...\n\n``` python\nimport tensorflow as tf\n\nwith tf.name_scope(\"fc\") as scope:\n   with tf.Session() as sess:\n        for name in [\"a\",\"b\"]:\n            with tf.name_scope(scope):\n                xx = tf.Variable([1,2], name=name+\"v\")\n                print(xx.name)\n                x = tf.placeholder(tf.float32, shape=[1], name=name)\n                print(x)\n```\n\n(notice how we capture the scope on the outside)\n"}