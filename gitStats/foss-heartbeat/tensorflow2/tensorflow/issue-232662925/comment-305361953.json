{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/305361953", "html_url": "https://github.com/tensorflow/tensorflow/issues/10352#issuecomment-305361953", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/10352", "id": 305361953, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTM2MTk1Mw==", "user": {"login": "josh11b", "id": 15258583, "node_id": "MDQ6VXNlcjE1MjU4NTgz", "avatar_url": "https://avatars0.githubusercontent.com/u/15258583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh11b", "html_url": "https://github.com/josh11b", "followers_url": "https://api.github.com/users/josh11b/followers", "following_url": "https://api.github.com/users/josh11b/following{/other_user}", "gists_url": "https://api.github.com/users/josh11b/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh11b/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh11b/subscriptions", "organizations_url": "https://api.github.com/users/josh11b/orgs", "repos_url": "https://api.github.com/users/josh11b/repos", "events_url": "https://api.github.com/users/josh11b/events{/privacy}", "received_events_url": "https://api.github.com/users/josh11b/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-01T01:18:32Z", "updated_at": "2017-06-01T01:18:32Z", "author_association": "MEMBER", "body_html": "<p>It sounds like a reasonable feature, but it would be hard to write a test that it is correct.  Combined with 1-based-indexing languages being off the radar for most people authoring ops, it seems like it would likely be unreliable in practice even if we added it to the OpDef. I'm further concerned that if we get this wrong for an op it could very well be a backwards-incompatible change to fix the op's definition. We a planning to switch to keeping only info needed by the runtime for interpreting graphs in the OpDef and moving other information needed by the APIs (such as docs) into separate files (tensorflow/cc/ops/op_gen_overrides.pbtxt was the first iteration of this, but we are planning another iteration).  Are there other languages with TF bindings that have this issue?</p>", "body_text": "It sounds like a reasonable feature, but it would be hard to write a test that it is correct.  Combined with 1-based-indexing languages being off the radar for most people authoring ops, it seems like it would likely be unreliable in practice even if we added it to the OpDef. I'm further concerned that if we get this wrong for an op it could very well be a backwards-incompatible change to fix the op's definition. We a planning to switch to keeping only info needed by the runtime for interpreting graphs in the OpDef and moving other information needed by the APIs (such as docs) into separate files (tensorflow/cc/ops/op_gen_overrides.pbtxt was the first iteration of this, but we are planning another iteration).  Are there other languages with TF bindings that have this issue?", "body": "It sounds like a reasonable feature, but it would be hard to write a test that it is correct.  Combined with 1-based-indexing languages being off the radar for most people authoring ops, it seems like it would likely be unreliable in practice even if we added it to the OpDef. I'm further concerned that if we get this wrong for an op it could very well be a backwards-incompatible change to fix the op's definition. We a planning to switch to keeping only info needed by the runtime for interpreting graphs in the OpDef and moving other information needed by the APIs (such as docs) into separate files (tensorflow/cc/ops/op_gen_overrides.pbtxt was the first iteration of this, but we are planning another iteration).  Are there other languages with TF bindings that have this issue?"}