{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/406747010", "html_url": "https://github.com/tensorflow/tensorflow/pull/20708#issuecomment-406747010", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20708", "id": 406747010, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjc0NzAxMA==", "user": {"login": "timshen91", "id": 1157432, "node_id": "MDQ6VXNlcjExNTc0MzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1157432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timshen91", "html_url": "https://github.com/timshen91", "followers_url": "https://api.github.com/users/timshen91/followers", "following_url": "https://api.github.com/users/timshen91/following{/other_user}", "gists_url": "https://api.github.com/users/timshen91/gists{/gist_id}", "starred_url": "https://api.github.com/users/timshen91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timshen91/subscriptions", "organizations_url": "https://api.github.com/users/timshen91/orgs", "repos_url": "https://api.github.com/users/timshen91/repos", "events_url": "https://api.github.com/users/timshen91/events{/privacy}", "received_events_url": "https://api.github.com/users/timshen91/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-20T23:00:44Z", "updated_at": "2018-07-20T23:00:44Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=150663\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jlebar\">@jlebar</a> , I can take this PR.</p>\n<p>IIUC cuDNN also supports \"given scratch space limit, find the algorithm\" [1]. Today, cuda_dnn.cc gets the scratch size limit [2] by calling <code>scratch_allocator-&gt;GetMemoryLimitInBytes(stream)</code>.</p>\n<p>For supporting MIOpen, Instead of propagating the scratch limit through AlgorithmDesc, maybe try to set it in the scratch allocator?</p>\n<p>From design's perspective, I think we should have two distinct types:<br>\na) a type that describes the constraint users provide, for the DNN library to suggest an algorithm.<br>\nb) a type that describes an exact algorithm either picked by the user, or suggested by the DNN library.</p>\n<p>Unfortunately AlgorithmDesc is (b) and a little bit of (a) [3]. But I'm leaning towards separating (a) from (b). Adding scratch space limit to AlgorithmDesc makes them more mixed.</p>\n<p>[1] <a href=\"https://docs.nvidia.com/deeplearning/sdk/cudnn-developer-guide/index.html#cudnnConvolutionBwdDataPreference_t\" rel=\"nofollow\">https://docs.nvidia.com/deeplearning/sdk/cudnn-developer-guide/index.html#cudnnConvolutionBwdDataPreference_t</a><br>\n[2] <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/f55028af4861bc78516164975a43f259507adf60/tensorflow/stream_executor/cuda/cuda_dnn.cc#L2127\">tensorflow/tensorflow/stream_executor/cuda/cuda_dnn.cc</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 2127\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/f55028af4861bc78516164975a43f259507adf60\">f55028a</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L2127\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"2127\"></td>\n          <td id=\"LC2127\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">auto</span> memory_limit_bytes = </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<br>\n[3] <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/tensorflow/tensorflow/blob/f55028af4861bc78516164975a43f259507adf60/tensorflow/stream_executor/cuda/cuda_dnn.cc#L2123\">tensorflow/tensorflow/stream_executor/cuda/cuda_dnn.cc</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 2123\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/tensorflow/tensorflow/commit/f55028af4861bc78516164975a43f259507adf60\">f55028a</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L2123\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"2123\"></td>\n          <td id=\"LC2123\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">if</span> (algorithm_config.<span class=\"pl-c1\">algorithm</span>().<span class=\"pl-c1\">is_default</span>()) { </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "body_text": "@jlebar , I can take this PR.\nIIUC cuDNN also supports \"given scratch space limit, find the algorithm\" [1]. Today, cuda_dnn.cc gets the scratch size limit [2] by calling scratch_allocator->GetMemoryLimitInBytes(stream).\nFor supporting MIOpen, Instead of propagating the scratch limit through AlgorithmDesc, maybe try to set it in the scratch allocator?\nFrom design's perspective, I think we should have two distinct types:\na) a type that describes the constraint users provide, for the DNN library to suggest an algorithm.\nb) a type that describes an exact algorithm either picked by the user, or suggested by the DNN library.\nUnfortunately AlgorithmDesc is (b) and a little bit of (a) [3]. But I'm leaning towards separating (a) from (b). Adding scratch space limit to AlgorithmDesc makes them more mixed.\n[1] https://docs.nvidia.com/deeplearning/sdk/cudnn-developer-guide/index.html#cudnnConvolutionBwdDataPreference_t\n[2] \n  \n    \n      tensorflow/tensorflow/stream_executor/cuda/cuda_dnn.cc\n    \n    \n         Line 2127\n      in\n      f55028a\n    \n    \n    \n    \n\n        \n          \n           auto memory_limit_bytes = \n        \n    \n  \n\n\n[3] \n  \n    \n      tensorflow/tensorflow/stream_executor/cuda/cuda_dnn.cc\n    \n    \n         Line 2123\n      in\n      f55028a\n    \n    \n    \n    \n\n        \n          \n           if (algorithm_config.algorithm().is_default()) {", "body": "@jlebar , I can take this PR.\r\n\r\nIIUC cuDNN also supports \"given scratch space limit, find the algorithm\" [1]. Today, cuda_dnn.cc gets the scratch size limit [2] by calling `scratch_allocator->GetMemoryLimitInBytes(stream)`.\r\n\r\nFor supporting MIOpen, Instead of propagating the scratch limit through AlgorithmDesc, maybe try to set it in the scratch allocator?\r\n\r\nFrom design's perspective, I think we should have two distinct types:\r\na) a type that describes the constraint users provide, for the DNN library to suggest an algorithm.\r\nb) a type that describes an exact algorithm either picked by the user, or suggested by the DNN library.\r\n\r\nUnfortunately AlgorithmDesc is (b) and a little bit of (a) [3]. But I'm leaning towards separating (a) from (b). Adding scratch space limit to AlgorithmDesc makes them more mixed.\r\n\r\n[1] https://docs.nvidia.com/deeplearning/sdk/cudnn-developer-guide/index.html#cudnnConvolutionBwdDataPreference_t\r\n[2] https://github.com/tensorflow/tensorflow/blob/f55028af4861bc78516164975a43f259507adf60/tensorflow/stream_executor/cuda/cuda_dnn.cc#L2127\r\n[3] https://github.com/tensorflow/tensorflow/blob/f55028af4861bc78516164975a43f259507adf60/tensorflow/stream_executor/cuda/cuda_dnn.cc#L2123"}