{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/404361435", "html_url": "https://github.com/tensorflow/tensorflow/pull/20708#issuecomment-404361435", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20708", "id": 404361435, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDM2MTQzNQ==", "user": {"login": "whchung", "id": 1673574, "node_id": "MDQ6VXNlcjE2NzM1NzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1673574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whchung", "html_url": "https://github.com/whchung", "followers_url": "https://api.github.com/users/whchung/followers", "following_url": "https://api.github.com/users/whchung/following{/other_user}", "gists_url": "https://api.github.com/users/whchung/gists{/gist_id}", "starred_url": "https://api.github.com/users/whchung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whchung/subscriptions", "organizations_url": "https://api.github.com/users/whchung/orgs", "repos_url": "https://api.github.com/users/whchung/repos", "events_url": "https://api.github.com/users/whchung/events{/privacy}", "received_events_url": "https://api.github.com/users/whchung/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-12T01:33:59Z", "updated_at": "2018-07-12T01:33:59Z", "author_association": "CONTRIBUTOR", "body_html": "<blockquote>\n<p>If at all possible we should use MIOpen the same way we use cudnn, where we ask MIOpen for a list of algorithms, and then TensorFlow / XLA runs all of the algorithms, choosing the fastest one.<br>\nWe need the ability to run \"non-optimal\" algorithms for a variety of reasons, including checking for correctness or having limited scratch memory available.<br>\nSo MIOpen should support an API that works like the cudnn API works today.</p>\n</blockquote>\n<p>To my understanding a new MIOpen API termed as \"direct mode\" is under development where it's possible for client applications to specify exact algorithm be used. This should help realize your request to allow XLA and TensorFlow to pick the best/not-so-best algorithm. However this feature is not released yet.</p>\n<p>I'd like to ask <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=12801049\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/daniellowell\">@daniellowell</a> to weigh in on the availability of this \"direct mode\". He is in charge of MIOpen API design.</p>", "body_text": "If at all possible we should use MIOpen the same way we use cudnn, where we ask MIOpen for a list of algorithms, and then TensorFlow / XLA runs all of the algorithms, choosing the fastest one.\nWe need the ability to run \"non-optimal\" algorithms for a variety of reasons, including checking for correctness or having limited scratch memory available.\nSo MIOpen should support an API that works like the cudnn API works today.\n\nTo my understanding a new MIOpen API termed as \"direct mode\" is under development where it's possible for client applications to specify exact algorithm be used. This should help realize your request to allow XLA and TensorFlow to pick the best/not-so-best algorithm. However this feature is not released yet.\nI'd like to ask @daniellowell to weigh in on the availability of this \"direct mode\". He is in charge of MIOpen API design.", "body": "> If at all possible we should use MIOpen the same way we use cudnn, where we ask MIOpen for a list of algorithms, and then TensorFlow / XLA runs all of the algorithms, choosing the fastest one.\r\n> We need the ability to run \"non-optimal\" algorithms for a variety of reasons, including checking for correctness or having limited scratch memory available.\r\n> So MIOpen should support an API that works like the cudnn API works today.\r\n\r\nTo my understanding a new MIOpen API termed as \"direct mode\" is under development where it's possible for client applications to specify exact algorithm be used. This should help realize your request to allow XLA and TensorFlow to pick the best/not-so-best algorithm. However this feature is not released yet.\r\n\r\nI'd like to ask @daniellowell to weigh in on the availability of this \"direct mode\". He is in charge of MIOpen API design. "}