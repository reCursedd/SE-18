{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/406400644", "html_url": "https://github.com/tensorflow/tensorflow/pull/20708#issuecomment-406400644", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20708", "id": 406400644, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjQwMDY0NA==", "user": {"login": "whchung", "id": 1673574, "node_id": "MDQ6VXNlcjE2NzM1NzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1673574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whchung", "html_url": "https://github.com/whchung", "followers_url": "https://api.github.com/users/whchung/followers", "following_url": "https://api.github.com/users/whchung/following{/other_user}", "gists_url": "https://api.github.com/users/whchung/gists{/gist_id}", "starred_url": "https://api.github.com/users/whchung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whchung/subscriptions", "organizations_url": "https://api.github.com/users/whchung/orgs", "repos_url": "https://api.github.com/users/whchung/repos", "events_url": "https://api.github.com/users/whchung/events{/privacy}", "received_events_url": "https://api.github.com/users/whchung/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-19T20:16:16Z", "updated_at": "2018-07-19T20:16:16Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=150663\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jlebar\">@jlebar</a> I've updated this PR. Now I put the scratch memory size field into AlgorithmDesc, and ensure the following semantic:</p>\n<p>For both CUDA and ROCm paths:</p>\n<p>AlgorithmConfig::algorithm_() would contain the algorithm ID which uses scratch memory, plus the size of scratch memory.<br>\nAlgorithmConfig::algorithm_no_scratch()_ would contain the algorithm ID which doesn't use scratch memory, with the size of scratch memory be 0.</p>\n<p>Could you kindly review it once again? Thanks.</p>", "body_text": "@jlebar I've updated this PR. Now I put the scratch memory size field into AlgorithmDesc, and ensure the following semantic:\nFor both CUDA and ROCm paths:\nAlgorithmConfig::algorithm_() would contain the algorithm ID which uses scratch memory, plus the size of scratch memory.\nAlgorithmConfig::algorithm_no_scratch()_ would contain the algorithm ID which doesn't use scratch memory, with the size of scratch memory be 0.\nCould you kindly review it once again? Thanks.", "body": "@jlebar I've updated this PR. Now I put the scratch memory size field into AlgorithmDesc, and ensure the following semantic:\r\n\r\nFor both CUDA and ROCm paths:\r\n\r\nAlgorithmConfig::algorithm_() would contain the algorithm ID which uses scratch memory, plus the size of scratch memory.\r\nAlgorithmConfig::algorithm_no_scratch()_ would contain the algorithm ID which doesn't use scratch memory, with the size of scratch memory be 0.\r\n\r\nCould you kindly review it once again? Thanks."}