{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/356359375", "html_url": "https://github.com/tensorflow/tensorflow/issues/15628#issuecomment-356359375", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15628", "id": 356359375, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjM1OTM3NQ==", "user": {"login": "poxvoculi", "id": 15676913, "node_id": "MDQ6VXNlcjE1Njc2OTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/15676913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poxvoculi", "html_url": "https://github.com/poxvoculi", "followers_url": "https://api.github.com/users/poxvoculi/followers", "following_url": "https://api.github.com/users/poxvoculi/following{/other_user}", "gists_url": "https://api.github.com/users/poxvoculi/gists{/gist_id}", "starred_url": "https://api.github.com/users/poxvoculi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poxvoculi/subscriptions", "organizations_url": "https://api.github.com/users/poxvoculi/orgs", "repos_url": "https://api.github.com/users/poxvoculi/repos", "events_url": "https://api.github.com/users/poxvoculi/events{/privacy}", "received_events_url": "https://api.github.com/users/poxvoculi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-09T17:43:13Z", "updated_at": "2018-01-09T17:43:13Z", "author_association": "MEMBER", "body_html": "<p>I don't understand what you mean by making transport pluggable.  Communication between TF distributed processes is designed to take place only via methods on the Master and Worker interfaces.  These methods need to be implemented as RPCs.  gRPC is the default RPC implementation but others are possible.  (Inside Google we use an additional two RPC systems, selected among by startup configuration options.  The contrib support cited above are examples of how to do this.)  Unless I'm mistaken, gRPC actually sits on top of HTTP, i.e. the server side uses an HTTP server to field requests.   By 'transport' do you mean a particular implementation of the Master and Worker interfaces, or do you want TF processes to communicate via some completely different methods than are in those interfaces?</p>", "body_text": "I don't understand what you mean by making transport pluggable.  Communication between TF distributed processes is designed to take place only via methods on the Master and Worker interfaces.  These methods need to be implemented as RPCs.  gRPC is the default RPC implementation but others are possible.  (Inside Google we use an additional two RPC systems, selected among by startup configuration options.  The contrib support cited above are examples of how to do this.)  Unless I'm mistaken, gRPC actually sits on top of HTTP, i.e. the server side uses an HTTP server to field requests.   By 'transport' do you mean a particular implementation of the Master and Worker interfaces, or do you want TF processes to communicate via some completely different methods than are in those interfaces?", "body": "I don't understand what you mean by making transport pluggable.  Communication between TF distributed processes is designed to take place only via methods on the Master and Worker interfaces.  These methods need to be implemented as RPCs.  gRPC is the default RPC implementation but others are possible.  (Inside Google we use an additional two RPC systems, selected among by startup configuration options.  The contrib support cited above are examples of how to do this.)  Unless I'm mistaken, gRPC actually sits on top of HTTP, i.e. the server side uses an HTTP server to field requests.   By 'transport' do you mean a particular implementation of the Master and Worker interfaces, or do you want TF processes to communicate via some completely different methods than are in those interfaces? \r\n\r\n"}