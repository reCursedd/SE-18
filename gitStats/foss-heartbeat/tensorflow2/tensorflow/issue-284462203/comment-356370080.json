{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/356370080", "html_url": "https://github.com/tensorflow/tensorflow/issues/15628#issuecomment-356370080", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15628", "id": 356370080, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjM3MDA4MA==", "user": {"login": "denismakogon", "id": 3034091, "node_id": "MDQ6VXNlcjMwMzQwOTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3034091?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denismakogon", "html_url": "https://github.com/denismakogon", "followers_url": "https://api.github.com/users/denismakogon/followers", "following_url": "https://api.github.com/users/denismakogon/following{/other_user}", "gists_url": "https://api.github.com/users/denismakogon/gists{/gist_id}", "starred_url": "https://api.github.com/users/denismakogon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denismakogon/subscriptions", "organizations_url": "https://api.github.com/users/denismakogon/orgs", "repos_url": "https://api.github.com/users/denismakogon/repos", "events_url": "https://api.github.com/users/denismakogon/events{/privacy}", "received_events_url": "https://api.github.com/users/denismakogon/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-09T18:21:15Z", "updated_at": "2018-01-09T18:21:15Z", "author_association": "NONE", "body_html": "<blockquote>\n<p>By 'transport' do you mean a particular implementation of the Master and Worker interfaces, or do you want TF processes to communicate via some completely different methods that are in those &gt; interfaces?</p>\n</blockquote>\n<p>Exactly, I want to make both master and worker use different protocols (anything else different from gRPC). I want to control every send/receive computation request along with being able to serialize/deserialize computation task object (similar to <code>cloudpickle</code> but in terms of TF).</p>\n<p>gRPC or any other RPC is not the case for me because I don't want to build an additional layer in-between service I run and TF that translates RPC requests into the actual computation task to run.</p>", "body_text": "By 'transport' do you mean a particular implementation of the Master and Worker interfaces, or do you want TF processes to communicate via some completely different methods that are in those > interfaces?\n\nExactly, I want to make both master and worker use different protocols (anything else different from gRPC). I want to control every send/receive computation request along with being able to serialize/deserialize computation task object (similar to cloudpickle but in terms of TF).\ngRPC or any other RPC is not the case for me because I don't want to build an additional layer in-between service I run and TF that translates RPC requests into the actual computation task to run.", "body": "> By 'transport' do you mean a particular implementation of the Master and Worker interfaces, or do you want TF processes to communicate via some completely different methods that are in those > interfaces?\r\n\r\nExactly, I want to make both master and worker use different protocols (anything else different from gRPC). I want to control every send/receive computation request along with being able to serialize/deserialize computation task object (similar to `cloudpickle` but in terms of TF).\r\n\r\ngRPC or any other RPC is not the case for me because I don't want to build an additional layer in-between service I run and TF that translates RPC requests into the actual computation task to run.\r\n"}