{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/366016890", "html_url": "https://github.com/tensorflow/tensorflow/issues/15628#issuecomment-366016890", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15628", "id": 366016890, "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjAxNjg5MA==", "user": {"login": "cy89", "id": 29663194, "node_id": "MDQ6VXNlcjI5NjYzMTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/29663194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cy89", "html_url": "https://github.com/cy89", "followers_url": "https://api.github.com/users/cy89/followers", "following_url": "https://api.github.com/users/cy89/following{/other_user}", "gists_url": "https://api.github.com/users/cy89/gists{/gist_id}", "starred_url": "https://api.github.com/users/cy89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cy89/subscriptions", "organizations_url": "https://api.github.com/users/cy89/orgs", "repos_url": "https://api.github.com/users/cy89/repos", "events_url": "https://api.github.com/users/cy89/events{/privacy}", "received_events_url": "https://api.github.com/users/cy89/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-15T18:23:21Z", "updated_at": "2018-02-15T18:23:21Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3034091\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/denismakogon\">@denismakogon</a> I agree with <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=15676913\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/poxvoculi\">@poxvoculi</a> in that I'm still not quite sure what you're proposing. It seems like you can replace gRPC with the RPC package of your choice. I think that if you wanted to replace protobufs with some other portable marshalling solution, you'd have a huge amount of work on your hands for not necessarily a great deal of benefit (I agree that protos can be slow, but faster solutions that retain portability are hard work).</p>\n<p>Thinking constructively, I wonder if a GitHub issue isn't quite the right way to have this discussion. Could we get you to write a somewhat longer-form document that describes (a) the problem you want to address, (b) the limitations of the current solutions, and (c) the way forward that you'd like to explore? It seems to me that a document would allow you to make a reasoned argument for what you want in a way that lets readers better understand where you're coming from.</p>", "body_text": "@denismakogon I agree with @poxvoculi in that I'm still not quite sure what you're proposing. It seems like you can replace gRPC with the RPC package of your choice. I think that if you wanted to replace protobufs with some other portable marshalling solution, you'd have a huge amount of work on your hands for not necessarily a great deal of benefit (I agree that protos can be slow, but faster solutions that retain portability are hard work).\nThinking constructively, I wonder if a GitHub issue isn't quite the right way to have this discussion. Could we get you to write a somewhat longer-form document that describes (a) the problem you want to address, (b) the limitations of the current solutions, and (c) the way forward that you'd like to explore? It seems to me that a document would allow you to make a reasoned argument for what you want in a way that lets readers better understand where you're coming from.", "body": "@denismakogon I agree with @poxvoculi in that I'm still not quite sure what you're proposing. It seems like you can replace gRPC with the RPC package of your choice. I think that if you wanted to replace protobufs with some other portable marshalling solution, you'd have a huge amount of work on your hands for not necessarily a great deal of benefit (I agree that protos can be slow, but faster solutions that retain portability are hard work). \r\n\r\nThinking constructively, I wonder if a GitHub issue isn't quite the right way to have this discussion. Could we get you to write a somewhat longer-form document that describes (a) the problem you want to address, (b) the limitations of the current solutions, and (c) the way forward that you'd like to explore? It seems to me that a document would allow you to make a reasoned argument for what you want in a way that lets readers better understand where you're coming from. "}