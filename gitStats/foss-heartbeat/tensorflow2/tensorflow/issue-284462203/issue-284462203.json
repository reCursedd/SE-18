{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15628", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15628/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15628/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/15628/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/15628", "id": 284462203, "node_id": "MDU6SXNzdWUyODQ0NjIyMDM=", "number": 15628, "title": "Support truly pluggable protocol/transport for distributed mode", "user": {"login": "denismakogon", "id": 3034091, "node_id": "MDQ6VXNlcjMwMzQwOTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3034091?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denismakogon", "html_url": "https://github.com/denismakogon", "followers_url": "https://api.github.com/users/denismakogon/followers", "following_url": "https://api.github.com/users/denismakogon/following{/other_user}", "gists_url": "https://api.github.com/users/denismakogon/gists{/gist_id}", "starred_url": "https://api.github.com/users/denismakogon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denismakogon/subscriptions", "organizations_url": "https://api.github.com/users/denismakogon/orgs", "repos_url": "https://api.github.com/users/denismakogon/repos", "events_url": "https://api.github.com/users/denismakogon/events{/privacy}", "received_events_url": "https://api.github.com/users/denismakogon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}, {"id": 473173272, "node_id": "MDU6TGFiZWw0NzMxNzMyNzI=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/type:feature", "name": "type:feature", "color": "159b2e", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2017-12-25T17:51:11Z", "updated_at": "2018-03-19T17:41:25Z", "closed_at": "2018-03-19T17:41:25Z", "author_association": "NONE", "body_html": "<p>At this moment Distributed TensorFlow supports only one type of transport/protocol which is gRPC, however, it does seem to be configurable (cluster, server, session).</p>\n<p>So, there are at least three things that need to be covered:</p>\n<ol>\n<li>Document the intercommunication protocol (session to a server), i.e. what session sends to a server, what server should respond, etc. The good example here would some kind of swagger spec.</li>\n<li>Make protocol configurable from Python.</li>\n<li>Give all a Python interface to implement new types of protocols.</li>\n</ol>\n<p>The whole idea is to let developers an ability to implement the protocol that would let distributed TensorFlow spin up and talk a number compute units (serverless, containers, VMs, etc.) instead of having a bunch of processes (cluster servers) running during computations within the session.</p>\n<p>Please note, I wasn't able to find any corresponding issues related to given topic.</p>", "body_text": "At this moment Distributed TensorFlow supports only one type of transport/protocol which is gRPC, however, it does seem to be configurable (cluster, server, session).\nSo, there are at least three things that need to be covered:\n\nDocument the intercommunication protocol (session to a server), i.e. what session sends to a server, what server should respond, etc. The good example here would some kind of swagger spec.\nMake protocol configurable from Python.\nGive all a Python interface to implement new types of protocols.\n\nThe whole idea is to let developers an ability to implement the protocol that would let distributed TensorFlow spin up and talk a number compute units (serverless, containers, VMs, etc.) instead of having a bunch of processes (cluster servers) running during computations within the session.\nPlease note, I wasn't able to find any corresponding issues related to given topic.", "body": "At this moment Distributed TensorFlow supports only one type of transport/protocol which is gRPC, however, it does seem to be configurable (cluster, server, session).\r\n\r\nSo, there are at least three things that need to be covered:\r\n1. Document the intercommunication protocol (session to a server), i.e. what session sends to a server, what server should respond, etc. The good example here would some kind of swagger spec.\r\n2. Make protocol configurable from Python.\r\n3. Give all a Python interface to implement new types of protocols.\r\n\r\nThe whole idea is to let developers an ability to implement the protocol that would let distributed TensorFlow spin up and talk a number compute units (serverless, containers, VMs, etc.) instead of having a bunch of processes (cluster servers) running during computations within the session.\r\n\r\nPlease note, I wasn't able to find any corresponding issues related to given topic."}