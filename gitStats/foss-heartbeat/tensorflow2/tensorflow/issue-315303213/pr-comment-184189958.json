{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/184189958", "pull_request_review_id": 115334981, "id": 184189958, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDE4OTk1OA==", "diff_hunk": "@@ -1483,13 +1483,13 @@ def is_jpeg(contents, name=None):\n \n \n @tf_export('image.decode_image')\n-def decode_image(contents, channels=None, name=None):\n+def decode_image(contents, channels=None, dtype=dtypes.uint8, name=None):\n   \"\"\"Convenience function for `decode_bmp`, `decode_gif`, `decode_jpeg`,\n   and `decode_png`.\n \n   Detects whether an image is a BMP, GIF, JPEG, or PNG, and performs the\n   appropriate operation to convert the input bytes `string` into a `Tensor` of\n-  type `uint8`.\n+  type `uint8`. PNG also supports type `uint16`.", "path": "tensorflow/python/ops/image_ops_impl.py", "position": null, "original_position": 12, "commit_id": "eee0aebe1bb0313e1bc5a841aded31d65123ca59", "original_commit_id": "2150307885530912d789e2f253f6e0d97ed5284f", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "(From API review)\r\n\r\nSo, IIUC, the contract of this function is that `dtype` will be ignored if the image doesn't happen to be a PNG?\r\n\r\nIt seems a more appropriate contract would be to always respect the `dtype` argument (perhaps by casting to `tf.uint16` if necessary for the non-PNG case)", "created_at": "2018-04-25T20:07:30Z", "updated_at": "2018-06-05T01:46:14Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/18628#discussion_r184189958", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18628", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/184189958"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/18628#discussion_r184189958"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18628"}}, "body_html": "<p>(From API review)</p>\n<p>So, IIUC, the contract of this function is that <code>dtype</code> will be ignored if the image doesn't happen to be a PNG?</p>\n<p>It seems a more appropriate contract would be to always respect the <code>dtype</code> argument (perhaps by casting to <code>tf.uint16</code> if necessary for the non-PNG case)</p>", "body_text": "(From API review)\nSo, IIUC, the contract of this function is that dtype will be ignored if the image doesn't happen to be a PNG?\nIt seems a more appropriate contract would be to always respect the dtype argument (perhaps by casting to tf.uint16 if necessary for the non-PNG case)"}