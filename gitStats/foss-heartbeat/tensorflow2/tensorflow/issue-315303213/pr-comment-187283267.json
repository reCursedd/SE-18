{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/187283267", "pull_request_review_id": 119029835, "id": 187283267, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzI4MzI2Nw==", "diff_hunk": "@@ -1515,6 +1517,7 @@ def decode_image(contents, channels=None, name=None):\n     if channels not in (None, 0, 1, 3, 4):\n       raise ValueError('channels must be in (None, 0, 1, 3, 4)')\n     substr = string_ops.substr(contents, 0, 3)\n+    dtype = dtypes.uint8 if dtype == dtypes.uint8 else dtypes.uint16", "path": "tensorflow/python/ops/image_ops_impl.py", "position": null, "original_position": 34, "commit_id": "eee0aebe1bb0313e1bc5a841aded31d65123ca59", "original_commit_id": "e7bd2c18fd925ef661e92a0f699fa71f17c82fd8", "user": {"login": "seanli9jan", "id": 23567362, "node_id": "MDQ6VXNlcjIzNTY3MzYy", "avatar_url": "https://avatars1.githubusercontent.com/u/23567362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seanli9jan", "html_url": "https://github.com/seanli9jan", "followers_url": "https://api.github.com/users/seanli9jan/followers", "following_url": "https://api.github.com/users/seanli9jan/following{/other_user}", "gists_url": "https://api.github.com/users/seanli9jan/gists{/gist_id}", "starred_url": "https://api.github.com/users/seanli9jan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seanli9jan/subscriptions", "organizations_url": "https://api.github.com/users/seanli9jan/orgs", "repos_url": "https://api.github.com/users/seanli9jan/repos", "events_url": "https://api.github.com/users/seanli9jan/events{/privacy}", "received_events_url": "https://api.github.com/users/seanli9jan/received_events", "type": "User", "site_admin": false}, "body": "Perhaps I should add convert_image_dtype in decode_{jpeg, png, gif, bmp}, to make sure that returned tensors have same type.\r\n\r\nSomething like:\r\n```python\r\ndef _png():\r\n  ...\r\n  return convert_image_dtype(gen_image_ops.decode_png(contents, channels,\r\n    dtype=dtypes.uint8 if dtype==dtypes.uint8 else dtypes.uint16), dtype)\r\n\r\ndef _jpeg():\r\n  ...\r\n  return convert_image_dtype(gen_image_ops.decode_jpeg(contents, channels), dtype)\r\n```", "created_at": "2018-05-10T09:31:57Z", "updated_at": "2018-06-05T01:46:14Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/18628#discussion_r187283267", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18628", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/187283267"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/18628#discussion_r187283267"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18628"}}, "body_html": "<p>Perhaps I should add convert_image_dtype in decode_{jpeg, png, gif, bmp}, to make sure that returned tensors have same type.</p>\n<p>Something like:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">_png</span>():\n  <span class=\"pl-c1\">...</span>\n  <span class=\"pl-k\">return</span> convert_image_dtype(gen_image_ops.decode_png(contents, channels,\n    <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>dtypes.uint8 <span class=\"pl-k\">if</span> dtype<span class=\"pl-k\">==</span>dtypes.uint8 <span class=\"pl-k\">else</span> dtypes.uint16), dtype)\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">_jpeg</span>():\n  <span class=\"pl-c1\">...</span>\n  <span class=\"pl-k\">return</span> convert_image_dtype(gen_image_ops.decode_jpeg(contents, channels), dtype)</pre></div>", "body_text": "Perhaps I should add convert_image_dtype in decode_{jpeg, png, gif, bmp}, to make sure that returned tensors have same type.\nSomething like:\ndef _png():\n  ...\n  return convert_image_dtype(gen_image_ops.decode_png(contents, channels,\n    dtype=dtypes.uint8 if dtype==dtypes.uint8 else dtypes.uint16), dtype)\n\ndef _jpeg():\n  ...\n  return convert_image_dtype(gen_image_ops.decode_jpeg(contents, channels), dtype)", "in_reply_to_id": 187257990}