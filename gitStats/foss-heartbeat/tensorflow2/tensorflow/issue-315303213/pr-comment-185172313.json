{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/185172313", "pull_request_review_id": 116507906, "id": 185172313, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTE3MjMxMw==", "diff_hunk": "@@ -1483,13 +1483,13 @@ def is_jpeg(contents, name=None):\n \n \n @tf_export('image.decode_image')\n-def decode_image(contents, channels=None, name=None):\n+def decode_image(contents, channels=None, dtype=dtypes.uint8, name=None):\n   \"\"\"Convenience function for `decode_bmp`, `decode_gif`, `decode_jpeg`,\n   and `decode_png`.\n \n   Detects whether an image is a BMP, GIF, JPEG, or PNG, and performs the\n   appropriate operation to convert the input bytes `string` into a `Tensor` of\n-  type `uint8`.\n+  type `uint8`. PNG also supports type `uint16`.", "path": "tensorflow/python/ops/image_ops_impl.py", "position": null, "original_position": 12, "commit_id": "eee0aebe1bb0313e1bc5a841aded31d65123ca59", "original_commit_id": "2150307885530912d789e2f253f6e0d97ed5284f", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "I understand, but here we're talking about the API for `tf.image.decode_image`.\r\n\r\nWith the change as proposed:\r\n`tf.decode_image(image_file, dtype=tf.uint16)` will return a tensor with an unpredictable `dtype`, which is not a great API.\r\n\r\nThe suggestion is to make it so that the output of `tf.decode_image` *always* respects the `dtype` argument provided.\r\n\r\nAs suggested above, this can be achieved by calling `tf.cast` on the output of  `tf.image.decode_{bmp,gif,jpeg}`, since they all return a `tf.uint8` tensor.\r\n\r\nSound reasonable?", "created_at": "2018-05-01T06:15:46Z", "updated_at": "2018-06-05T01:46:14Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/18628#discussion_r185172313", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18628", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/185172313"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/18628#discussion_r185172313"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18628"}}, "body_html": "<p>I understand, but here we're talking about the API for <code>tf.image.decode_image</code>.</p>\n<p>With the change as proposed:<br>\n<code>tf.decode_image(image_file, dtype=tf.uint16)</code> will return a tensor with an unpredictable <code>dtype</code>, which is not a great API.</p>\n<p>The suggestion is to make it so that the output of <code>tf.decode_image</code> <em>always</em> respects the <code>dtype</code> argument provided.</p>\n<p>As suggested above, this can be achieved by calling <code>tf.cast</code> on the output of  <code>tf.image.decode_{bmp,gif,jpeg}</code>, since they all return a <code>tf.uint8</code> tensor.</p>\n<p>Sound reasonable?</p>", "body_text": "I understand, but here we're talking about the API for tf.image.decode_image.\nWith the change as proposed:\ntf.decode_image(image_file, dtype=tf.uint16) will return a tensor with an unpredictable dtype, which is not a great API.\nThe suggestion is to make it so that the output of tf.decode_image always respects the dtype argument provided.\nAs suggested above, this can be achieved by calling tf.cast on the output of  tf.image.decode_{bmp,gif,jpeg}, since they all return a tf.uint8 tensor.\nSound reasonable?", "in_reply_to_id": 184189958}