{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/185684517", "pull_request_review_id": 117122335, "id": 185684517, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTY4NDUxNw==", "diff_hunk": "@@ -1541,7 +1542,7 @@ def _gif():\n       channels_msg = 'Channels must be in (None, 0, 3) when decoding GIF images'\n       assert_channels = control_flow_ops.Assert(good_channels, [channels_msg])\n       with ops.control_dependencies([assert_channels]):\n-        return gen_image_ops.decode_gif(contents)\n+        return math_ops.cast(gen_image_ops.decode_gif(contents), dtype)", "path": "tensorflow/python/ops/image_ops_impl.py", "position": null, "original_position": 43, "commit_id": "eee0aebe1bb0313e1bc5a841aded31d65123ca59", "original_commit_id": "639643132ef7cbdb02f05e130957d21edad5ec51", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "Instead of always inserting the `cast` operation into the graph, let's do it conditionally. One way to achieve this might be to do something like:\r\n\r\n```python\r\ndef _cast(t):\r\n  if dtype == tf.uint8: return t\r\n  return math_ops.cast(t, dtype)\r\n```\r\n\r\nAnd then use `_cast(gen_image_ops.decode_git(...))` etc.", "created_at": "2018-05-03T02:00:35Z", "updated_at": "2018-06-05T01:46:14Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/18628#discussion_r185684517", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18628", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/185684517"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/18628#discussion_r185684517"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18628"}}, "body_html": "<p>Instead of always inserting the <code>cast</code> operation into the graph, let's do it conditionally. One way to achieve this might be to do something like:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">_cast</span>(<span class=\"pl-smi\">t</span>):\n  <span class=\"pl-k\">if</span> dtype <span class=\"pl-k\">==</span> tf.uint8: <span class=\"pl-k\">return</span> t\n  <span class=\"pl-k\">return</span> math_ops.cast(t, dtype)</pre></div>\n<p>And then use <code>_cast(gen_image_ops.decode_git(...))</code> etc.</p>", "body_text": "Instead of always inserting the cast operation into the graph, let's do it conditionally. One way to achieve this might be to do something like:\ndef _cast(t):\n  if dtype == tf.uint8: return t\n  return math_ops.cast(t, dtype)\nAnd then use _cast(gen_image_ops.decode_git(...)) etc."}