{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/354797946", "html_url": "https://github.com/tensorflow/tensorflow/issues/6082#issuecomment-354797946", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/6082", "id": 354797946, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDc5Nzk0Ng==", "user": {"login": "zwep", "id": 26649804, "node_id": "MDQ6VXNlcjI2NjQ5ODA0", "avatar_url": "https://avatars3.githubusercontent.com/u/26649804?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zwep", "html_url": "https://github.com/zwep", "followers_url": "https://api.github.com/users/zwep/followers", "following_url": "https://api.github.com/users/zwep/following{/other_user}", "gists_url": "https://api.github.com/users/zwep/gists{/gist_id}", "starred_url": "https://api.github.com/users/zwep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zwep/subscriptions", "organizations_url": "https://api.github.com/users/zwep/orgs", "repos_url": "https://api.github.com/users/zwep/repos", "events_url": "https://api.github.com/users/zwep/events{/privacy}", "received_events_url": "https://api.github.com/users/zwep/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-02T15:55:16Z", "updated_at": "2018-01-02T15:55:16Z", "author_association": "NONE", "body_html": "<p>If anyone has some trouble with loading a checkpoint via saver.restore(), here is an alternative way I have working</p>\n<p>saver = tf.train.import_meta_graph(name_of_the_meta_file)</p>\n<h1>create a session in which we can load the checkpoint values</h1>\n<p>sess = tf.Session()</p>\n<h1>get checkpoint state</h1>\n<p>ckpt = tf.train.get_checkpoint_state(path_to_your_checkpoint)</p>\n<h1>restore session if both variables are not empty</h1>\n<p>if ckpt and ckpt.model_checkpoint_path:<br>\nsaver.restore(sess, ckpt.model_checkpoint_path)</p>", "body_text": "If anyone has some trouble with loading a checkpoint via saver.restore(), here is an alternative way I have working\nsaver = tf.train.import_meta_graph(name_of_the_meta_file)\ncreate a session in which we can load the checkpoint values\nsess = tf.Session()\nget checkpoint state\nckpt = tf.train.get_checkpoint_state(path_to_your_checkpoint)\nrestore session if both variables are not empty\nif ckpt and ckpt.model_checkpoint_path:\nsaver.restore(sess, ckpt.model_checkpoint_path)", "body": "If anyone has some trouble with loading a checkpoint via saver.restore(), here is an alternative way I have working\r\n\r\nsaver = tf.train.import_meta_graph(name_of_the_meta_file)\r\n # create a session in which we can load the checkpoint values\r\nsess = tf.Session()\r\n# get checkpoint state\r\nckpt = tf.train.get_checkpoint_state(path_to_your_checkpoint)\r\n\r\n# restore session if both variables are not empty\r\nif ckpt and ckpt.model_checkpoint_path:\r\n    saver.restore(sess, ckpt.model_checkpoint_path)\r\n"}