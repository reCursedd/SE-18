{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21044", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21044/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21044/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21044/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21044", "id": 343498187, "node_id": "MDU6SXNzdWUzNDM0OTgxODc=", "number": 21044, "title": "Reproducing when setting 'max_to_keep=0', then the get_checkpoint_state(ckpt_dir).all_model_checkpoint_paths only record the recent 1 model path.", "user": {"login": "sonack", "id": 12935189, "node_id": "MDQ6VXNlcjEyOTM1MTg5", "avatar_url": "https://avatars1.githubusercontent.com/u/12935189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sonack", "html_url": "https://github.com/sonack", "followers_url": "https://api.github.com/users/sonack/followers", "following_url": "https://api.github.com/users/sonack/following{/other_user}", "gists_url": "https://api.github.com/users/sonack/gists{/gist_id}", "starred_url": "https://api.github.com/users/sonack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sonack/subscriptions", "organizations_url": "https://api.github.com/users/sonack/orgs", "repos_url": "https://api.github.com/users/sonack/repos", "events_url": "https://api.github.com/users/sonack/events{/privacy}", "received_events_url": "https://api.github.com/users/sonack/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "allenlavoie", "id": 3731025, "node_id": "MDQ6VXNlcjM3MzEwMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3731025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allenlavoie", "html_url": "https://github.com/allenlavoie", "followers_url": "https://api.github.com/users/allenlavoie/followers", "following_url": "https://api.github.com/users/allenlavoie/following{/other_user}", "gists_url": "https://api.github.com/users/allenlavoie/gists{/gist_id}", "starred_url": "https://api.github.com/users/allenlavoie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allenlavoie/subscriptions", "organizations_url": "https://api.github.com/users/allenlavoie/orgs", "repos_url": "https://api.github.com/users/allenlavoie/repos", "events_url": "https://api.github.com/users/allenlavoie/events{/privacy}", "received_events_url": "https://api.github.com/users/allenlavoie/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "allenlavoie", "id": 3731025, "node_id": "MDQ6VXNlcjM3MzEwMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3731025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allenlavoie", "html_url": "https://github.com/allenlavoie", "followers_url": "https://api.github.com/users/allenlavoie/followers", "following_url": "https://api.github.com/users/allenlavoie/following{/other_user}", "gists_url": "https://api.github.com/users/allenlavoie/gists{/gist_id}", "starred_url": "https://api.github.com/users/allenlavoie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allenlavoie/subscriptions", "organizations_url": "https://api.github.com/users/allenlavoie/orgs", "repos_url": "https://api.github.com/users/allenlavoie/repos", "events_url": "https://api.github.com/users/allenlavoie/events{/privacy}", "received_events_url": "https://api.github.com/users/allenlavoie/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-07-23T06:02:23Z", "updated_at": "2018-09-01T10:39:10Z", "closed_at": "2018-09-01T10:39:10Z", "author_association": "NONE", "body_html": "<p>I produced the closed issue <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"261684176\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/13381\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/13381/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/13381\">#13381</a>, below is my model saving code snippets:</p>\n<div class=\"highlight highlight-source-python\"><pre> <span class=\"pl-k\">def</span> <span class=\"pl-en\">do_training</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>):\n        saver <span class=\"pl-k\">=</span> tf.train.Saver(<span class=\"pl-v\">max_to_keep</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>)\n\n        epoch_size <span class=\"pl-k\">=</span> (os.path.getsize(<span class=\"pl-c1\">self</span>.config.data_path) <span class=\"pl-k\">-</span> <span class=\"pl-c1\">1</span>) <span class=\"pl-k\">//</span> <span class=\"pl-c1\">self</span>.config.batch_size <span class=\"pl-k\">//</span> <span class=\"pl-c1\">self</span>.config.max_length\n        resume_ckpt_dir <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>.config.resume_ckpt_dir\n        <span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n            restored <span class=\"pl-k\">=</span> <span class=\"pl-c1\">False</span>\n            start_epoch <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>\n            <span class=\"pl-k\">if</span> resume_ckpt_dir:\n                ckpt <span class=\"pl-k\">=</span> tf.train.get_checkpoint_state(resume_ckpt_dir)\n                <span class=\"pl-k\">if</span> ckpt <span class=\"pl-k\">and</span> ckpt.model_checkpoint_path:\n                    saver.restore(sess, ckpt.model_checkpoint_path)\n                    restored <span class=\"pl-k\">=</span> <span class=\"pl-c1\">True</span>\n                    <span class=\"pl-c1\">print</span> (<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Restore from <span class=\"pl-c1\">%s</span> ... <span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">%</span> ckpt.model_checkpoint_path )\n                    resume_global_step <span class=\"pl-k\">=</span> sess.run(<span class=\"pl-c1\">self</span>.model.global_step)\n                    start_epoch <span class=\"pl-k\">=</span> resume_global_step <span class=\"pl-k\">//</span> epoch_size\n                    <span class=\"pl-c1\">print</span> (<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Restore global step is <span class=\"pl-c1\">%d</span><span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">%</span> resume_global_step)\n            <span class=\"pl-k\">if</span> <span class=\"pl-k\">not</span> restored:    \n                sess.run(tf.global_variables_initializer())\n            \n            writer <span class=\"pl-k\">=</span> tf.summary.FileWriter(<span class=\"pl-c1\">self</span>.config.summary_path, sess.graph)\n\n            <span class=\"pl-k\">for</span> epoch <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(start_epoch, start_epoch <span class=\"pl-k\">+</span> <span class=\"pl-c1\">self</span>.config.num_epochs):\n                gs, compl <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>.run_epoch(sess, epoch, writer)\n                \n                <span class=\"pl-k\">if</span> epoch <span class=\"pl-k\">%</span> <span class=\"pl-c1\">self</span>.config.save_epoch_interval <span class=\"pl-k\">==</span> <span class=\"pl-c1\">0</span>:\n                    <span class=\"pl-c1\">print</span> (<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Save model at global step (<span class=\"pl-c1\">%d</span>) / Epoch (<span class=\"pl-c1\">%d</span>)<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">%</span> (gs, epoch))\n                    saver.save(sess, os.path.join(<span class=\"pl-c1\">self</span>.config.save_ckpt_dir, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>ckpt<span class=\"pl-pds\">'</span></span>), <span class=\"pl-v\">global_step</span> <span class=\"pl-k\">=</span> gs)\n                <span class=\"pl-k\">if</span> compl:\n                    <span class=\"pl-c1\">print</span> (<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Val loss has reach the expected entropy within <span class=\"pl-c1\">%f</span><span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">%</span> <span class=\"pl-c1\">self</span>.config.comp_stop_width)\n                    <span class=\"pl-k\">if</span> (<span class=\"pl-c1\">self</span>.config.comp_stop):\n                        <span class=\"pl-k\">break</span>\n            writer.close()</pre></div>\n<p>The I run the follow code:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/12935189/43059769-a6292a3a-8e80-11e8-914b-287082387e71.png\"><img src=\"https://user-images.githubusercontent.com/12935189/43059769-a6292a3a-8e80-11e8-914b-287082387e71.png\" alt=\"image\" style=\"max-width:100%;\"></a></p>\n<p>I saved the model every 39 iterations, but I can only see the most recent 1 in all_model_checkpoint_paths</p>\n<p>My versions:</p>\n<ol>\n<li>tensorflow-gpu         1.3.0</li>\n<li>Ubuntu 16.04.4 LTS</li>\n</ol>", "body_text": "I produced the closed issue #13381, below is my model saving code snippets:\n def do_training(self):\n        saver = tf.train.Saver(max_to_keep = 0)\n\n        epoch_size = (os.path.getsize(self.config.data_path) - 1) // self.config.batch_size // self.config.max_length\n        resume_ckpt_dir = self.config.resume_ckpt_dir\n        with tf.Session() as sess:\n            restored = False\n            start_epoch = 0\n            if resume_ckpt_dir:\n                ckpt = tf.train.get_checkpoint_state(resume_ckpt_dir)\n                if ckpt and ckpt.model_checkpoint_path:\n                    saver.restore(sess, ckpt.model_checkpoint_path)\n                    restored = True\n                    print ('Restore from %s ... ' % ckpt.model_checkpoint_path )\n                    resume_global_step = sess.run(self.model.global_step)\n                    start_epoch = resume_global_step // epoch_size\n                    print ('Restore global step is %d' % resume_global_step)\n            if not restored:    \n                sess.run(tf.global_variables_initializer())\n            \n            writer = tf.summary.FileWriter(self.config.summary_path, sess.graph)\n\n            for epoch in range(start_epoch, start_epoch + self.config.num_epochs):\n                gs, compl = self.run_epoch(sess, epoch, writer)\n                \n                if epoch % self.config.save_epoch_interval == 0:\n                    print ('Save model at global step (%d) / Epoch (%d)' % (gs, epoch))\n                    saver.save(sess, os.path.join(self.config.save_ckpt_dir, 'ckpt'), global_step = gs)\n                if compl:\n                    print (\"Val loss has reach the expected entropy within %f\" % self.config.comp_stop_width)\n                    if (self.config.comp_stop):\n                        break\n            writer.close()\nThe I run the follow code:\n\nI saved the model every 39 iterations, but I can only see the most recent 1 in all_model_checkpoint_paths\nMy versions:\n\ntensorflow-gpu         1.3.0\nUbuntu 16.04.4 LTS", "body": "I produced the closed issue #13381, below is my model saving code snippets:\r\n\r\n```python\r\n def do_training(self):\r\n        saver = tf.train.Saver(max_to_keep = 0)\r\n\r\n        epoch_size = (os.path.getsize(self.config.data_path) - 1) // self.config.batch_size // self.config.max_length\r\n        resume_ckpt_dir = self.config.resume_ckpt_dir\r\n        with tf.Session() as sess:\r\n            restored = False\r\n            start_epoch = 0\r\n            if resume_ckpt_dir:\r\n                ckpt = tf.train.get_checkpoint_state(resume_ckpt_dir)\r\n                if ckpt and ckpt.model_checkpoint_path:\r\n                    saver.restore(sess, ckpt.model_checkpoint_path)\r\n                    restored = True\r\n                    print ('Restore from %s ... ' % ckpt.model_checkpoint_path )\r\n                    resume_global_step = sess.run(self.model.global_step)\r\n                    start_epoch = resume_global_step // epoch_size\r\n                    print ('Restore global step is %d' % resume_global_step)\r\n            if not restored:    \r\n                sess.run(tf.global_variables_initializer())\r\n            \r\n            writer = tf.summary.FileWriter(self.config.summary_path, sess.graph)\r\n\r\n            for epoch in range(start_epoch, start_epoch + self.config.num_epochs):\r\n                gs, compl = self.run_epoch(sess, epoch, writer)\r\n                \r\n                if epoch % self.config.save_epoch_interval == 0:\r\n                    print ('Save model at global step (%d) / Epoch (%d)' % (gs, epoch))\r\n                    saver.save(sess, os.path.join(self.config.save_ckpt_dir, 'ckpt'), global_step = gs)\r\n                if compl:\r\n                    print (\"Val loss has reach the expected entropy within %f\" % self.config.comp_stop_width)\r\n                    if (self.config.comp_stop):\r\n                        break\r\n            writer.close()\r\n```\r\n\r\nThe I run the follow code:\r\n![image](https://user-images.githubusercontent.com/12935189/43059769-a6292a3a-8e80-11e8-914b-287082387e71.png)\r\n\r\nI saved the model every 39 iterations, but I can only see the most recent 1 in all_model_checkpoint_paths\r\n\r\nMy versions:\r\n1. tensorflow-gpu         1.3.0\r\n2. Ubuntu 16.04.4 LTS"}