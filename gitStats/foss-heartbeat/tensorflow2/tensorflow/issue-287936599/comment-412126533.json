{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/412126533", "html_url": "https://github.com/tensorflow/tensorflow/issues/16052#issuecomment-412126533", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16052", "id": 412126533, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjEyNjUzMw==", "user": {"login": "ankitvgupta", "id": 5473865, "node_id": "MDQ6VXNlcjU0NzM4NjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/5473865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ankitvgupta", "html_url": "https://github.com/ankitvgupta", "followers_url": "https://api.github.com/users/ankitvgupta/followers", "following_url": "https://api.github.com/users/ankitvgupta/following{/other_user}", "gists_url": "https://api.github.com/users/ankitvgupta/gists{/gist_id}", "starred_url": "https://api.github.com/users/ankitvgupta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ankitvgupta/subscriptions", "organizations_url": "https://api.github.com/users/ankitvgupta/orgs", "repos_url": "https://api.github.com/users/ankitvgupta/repos", "events_url": "https://api.github.com/users/ankitvgupta/events{/privacy}", "received_events_url": "https://api.github.com/users/ankitvgupta/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-10T15:56:06Z", "updated_at": "2018-08-10T15:56:20Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hi <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=192142\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mrry\">@mrry</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1112263\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/facaiy\">@facaiy</a> , I just tried the above PR, and believe it has some issues. For one, the test cases don't include a case where one of the TensorShapes you pass to the assert is TensorShape(None). When I do that, I'm getting the following error:</p>\n<pre><code>  File \"/home/ubuntu/anaconda3/envs/reverie_env/lib/python3.6/site-packages/tensorflow/python/framework/tensor_shape.py\", line 578, in __len__\n    raise ValueError(\"Cannot take the length of Shape with unknown rank.\")\nValueError: Cannot take the length of Shape with unknown rank\n</code></pre>\n<p>Furthermore, this implementation also doesn't allow for the setting of partial shapes. For example, I would like to be able to set the shape to be [None, 5] for a tensor. However, when I do this, I get this error:</p>\n<pre lang=\"File\" data-meta=\"&quot;/home/ubuntu/anaconda3/envs/reverie_env/lib/python3.6/site-packages/tensorflow/python/framework/constant_op.py&quot;, line 238, in _tensor_shape_tensor_conversion_function\"><code>    \"Cannot convert a partially known TensorShape to a Tensor: %s\" % s)\nValueError: Cannot convert a partially known TensorShape to a Tensor: (?, 5)\n</code></pre>\n<p>This is also not a situation that the current test cases cover. I believe this is due to limitations with<br>\n<code>tf.contrib.framework.with_shape</code>, which cannot take partially known TensorShapes.</p>", "body_text": "Hi @mrry @facaiy , I just tried the above PR, and believe it has some issues. For one, the test cases don't include a case where one of the TensorShapes you pass to the assert is TensorShape(None). When I do that, I'm getting the following error:\n  File \"/home/ubuntu/anaconda3/envs/reverie_env/lib/python3.6/site-packages/tensorflow/python/framework/tensor_shape.py\", line 578, in __len__\n    raise ValueError(\"Cannot take the length of Shape with unknown rank.\")\nValueError: Cannot take the length of Shape with unknown rank\n\nFurthermore, this implementation also doesn't allow for the setting of partial shapes. For example, I would like to be able to set the shape to be [None, 5] for a tensor. However, when I do this, I get this error:\n    \"Cannot convert a partially known TensorShape to a Tensor: %s\" % s)\nValueError: Cannot convert a partially known TensorShape to a Tensor: (?, 5)\n\nThis is also not a situation that the current test cases cover. I believe this is due to limitations with\ntf.contrib.framework.with_shape, which cannot take partially known TensorShapes.", "body": "Hi @mrry @facaiy , I just tried the above PR, and believe it has some issues. For one, the test cases don't include a case where one of the TensorShapes you pass to the assert is TensorShape(None). When I do that, I'm getting the following error:\r\n```\r\n  File \"/home/ubuntu/anaconda3/envs/reverie_env/lib/python3.6/site-packages/tensorflow/python/framework/tensor_shape.py\", line 578, in __len__\r\n    raise ValueError(\"Cannot take the length of Shape with unknown rank.\")\r\nValueError: Cannot take the length of Shape with unknown rank\r\n```\r\n\r\nFurthermore, this implementation also doesn't allow for the setting of partial shapes. For example, I would like to be able to set the shape to be [None, 5] for a tensor. However, when I do this, I get this error:\r\n```   File \"/home/ubuntu/anaconda3/envs/reverie_env/lib/python3.6/site-packages/tensorflow/python/framework/constant_op.py\", line 238, in _tensor_shape_tensor_conversion_function\r\n    \"Cannot convert a partially known TensorShape to a Tensor: %s\" % s)\r\nValueError: Cannot convert a partially known TensorShape to a Tensor: (?, 5)\r\n ```\r\n\r\nThis is also not a situation that the current test cases cover. I believe this is due to limitations with \r\n `tf.contrib.framework.with_shape`, which cannot take partially known TensorShapes."}