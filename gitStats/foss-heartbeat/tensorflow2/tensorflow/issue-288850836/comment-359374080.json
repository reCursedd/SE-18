{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/359374080", "html_url": "https://github.com/tensorflow/tensorflow/pull/16153#issuecomment-359374080", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16153", "id": 359374080, "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTM3NDA4MA==", "user": {"login": "DEKHTIARJonathan", "id": 10923599, "node_id": "MDQ6VXNlcjEwOTIzNTk5", "avatar_url": "https://avatars2.githubusercontent.com/u/10923599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DEKHTIARJonathan", "html_url": "https://github.com/DEKHTIARJonathan", "followers_url": "https://api.github.com/users/DEKHTIARJonathan/followers", "following_url": "https://api.github.com/users/DEKHTIARJonathan/following{/other_user}", "gists_url": "https://api.github.com/users/DEKHTIARJonathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/DEKHTIARJonathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DEKHTIARJonathan/subscriptions", "organizations_url": "https://api.github.com/users/DEKHTIARJonathan/orgs", "repos_url": "https://api.github.com/users/DEKHTIARJonathan/repos", "events_url": "https://api.github.com/users/DEKHTIARJonathan/events{/privacy}", "received_events_url": "https://api.github.com/users/DEKHTIARJonathan/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-22T09:52:58Z", "updated_at": "2018-01-22T09:53:52Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hi everyone,</p>\n<p>I have added a few corrections to this PR. I also have implemented a few unittests in order to be sure that everything is executing fine.</p>\n<h3>Compiled Library for test (in whl format):</h3>\n<p>I have compiled the library for test only: <a href=\"https://drive.google.com/open?id=1qHtPZpOzgJGvuWnaOPSIU1caLIpoEA8m\" rel=\"nofollow\">https://drive.google.com/open?id=1qHtPZpOzgJGvuWnaOPSIU1caLIpoEA8m</a></p>\n<ul>\n<li><strong>OS</strong>: Ubuntu 16.04</li>\n<li><strong>GPU Support</strong>: No</li>\n<li><strong>Python</strong>: Python 3.5</li>\n<li><strong>Architecture:</strong> x86_64</li>\n<li><strong>Size:</strong> 55MB</li>\n</ul>\n<h3>The PR can be tested with the following script:</h3>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n\nops_array <span class=\"pl-k\">=</span> <span class=\"pl-c1\">list</span>()\n\ntarget_np_array <span class=\"pl-k\">=</span> np.ones([<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>])\n\n<span class=\"pl-k\">for</span> dtype <span class=\"pl-k\">in</span> [np.int32, np.float32, np.bool, np.uint8]:\n    <span class=\"pl-k\">for</span> target_value <span class=\"pl-k\">in</span> [<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">0.7</span>, <span class=\"pl-k\">-</span><span class=\"pl-c1\">5.2</span>]:\n        \n        op_val <span class=\"pl-k\">=</span> np.array(target_value).astype(dtype)\n        \n        tmp_ops <span class=\"pl-k\">=</span> tf.alphas_like(target_np_array, op_val)\n        ops_array.append(tmp_ops)\n\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    result_array <span class=\"pl-k\">=</span> sess.run(ops_array)\n\n<span class=\"pl-k\">for</span> _, result <span class=\"pl-k\">in</span> <span class=\"pl-c1\">enumerate</span>(result_array):\n    <span class=\"pl-k\">if</span> _:\n        <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>################<span class=\"pl-pds\">\"</span></span>)\n    <span class=\"pl-c1\">print</span>(result)</pre></div>\n<h3>Outputs:</h3>\n<div class=\"highlight highlight-source-shell\"><pre>[[0 0 0]\n [0 0 0]]\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>###############</span>\n[[1 1 1]\n [1 1 1]]\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>###############</span>\n[[0 0 0]\n [0 0 0]]\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>###############</span>\n[[-5 -5 -5]\n [-5 -5 -5]]\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>###############</span>\n[[0. 0. 0.]\n [0. 0. 0.]]\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>###############</span>\n[[1. 1. 1.]\n [1. 1. 1.]]\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>###############</span>\n[[0.7 0.7 0.7]\n [0.7 0.7 0.7]]\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>###############</span>\n[[-5.2 -5.2 -5.2]\n [-5.2 -5.2 -5.2]]\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>###############</span>\n[[False False False]\n [False False False]]\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>###############</span>\n[[ True  True  True]\n [ True  True  True]]\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>###############</span>\n[[ True  True  True]\n [ True  True  True]]\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>###############</span>\n[[ True  True  True]\n [ True  True  True]]\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>###############</span>\n[[0 0 0]\n [0 0 0]]\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>###############</span>\n[[1 1 1]\n [1 1 1]]\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>###############</span>\n[[0 0 0]\n [0 0 0]]\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>###############</span>\n[[251 251 251]\n [251 251 251]]</pre></div>", "body_text": "Hi everyone,\nI have added a few corrections to this PR. I also have implemented a few unittests in order to be sure that everything is executing fine.\nCompiled Library for test (in whl format):\nI have compiled the library for test only: https://drive.google.com/open?id=1qHtPZpOzgJGvuWnaOPSIU1caLIpoEA8m\n\nOS: Ubuntu 16.04\nGPU Support: No\nPython: Python 3.5\nArchitecture: x86_64\nSize: 55MB\n\nThe PR can be tested with the following script:\nimport tensorflow as tf\nimport numpy as np\n\nops_array = list()\n\ntarget_np_array = np.ones([2,3])\n\nfor dtype in [np.int32, np.float32, np.bool, np.uint8]:\n    for target_value in [0, 1, 0.7, -5.2]:\n        \n        op_val = np.array(target_value).astype(dtype)\n        \n        tmp_ops = tf.alphas_like(target_np_array, op_val)\n        ops_array.append(tmp_ops)\n\n\nwith tf.Session() as sess:\n    result_array = sess.run(ops_array)\n\nfor _, result in enumerate(result_array):\n    if _:\n        print(\"################\")\n    print(result)\nOutputs:\n[[0 0 0]\n [0 0 0]]\n################\n[[1 1 1]\n [1 1 1]]\n################\n[[0 0 0]\n [0 0 0]]\n################\n[[-5 -5 -5]\n [-5 -5 -5]]\n################\n[[0. 0. 0.]\n [0. 0. 0.]]\n################\n[[1. 1. 1.]\n [1. 1. 1.]]\n################\n[[0.7 0.7 0.7]\n [0.7 0.7 0.7]]\n################\n[[-5.2 -5.2 -5.2]\n [-5.2 -5.2 -5.2]]\n################\n[[False False False]\n [False False False]]\n################\n[[ True  True  True]\n [ True  True  True]]\n################\n[[ True  True  True]\n [ True  True  True]]\n################\n[[ True  True  True]\n [ True  True  True]]\n################\n[[0 0 0]\n [0 0 0]]\n################\n[[1 1 1]\n [1 1 1]]\n################\n[[0 0 0]\n [0 0 0]]\n################\n[[251 251 251]\n [251 251 251]]", "body": "Hi everyone, \r\n\r\nI have added a few corrections to this PR. I also have implemented a few unittests in order to be sure that everything is executing fine.\r\n\r\n### Compiled Library for test (in whl format):\r\n\r\nI have compiled the library for test only: https://drive.google.com/open?id=1qHtPZpOzgJGvuWnaOPSIU1caLIpoEA8m\r\n\r\n* **OS**: Ubuntu 16.04\r\n* **GPU Support**: No\r\n* **Python**: Python 3.5\r\n* **Architecture:** x86_64\r\n* **Size:** 55MB\r\n\r\n### The PR can be tested with the following script:\r\n\r\n```python\r\nimport tensorflow as tf\r\nimport numpy as np\r\n\r\nops_array = list()\r\n\r\ntarget_np_array = np.ones([2,3])\r\n\r\nfor dtype in [np.int32, np.float32, np.bool, np.uint8]:\r\n    for target_value in [0, 1, 0.7, -5.2]:\r\n        \r\n        op_val = np.array(target_value).astype(dtype)\r\n        \r\n        tmp_ops = tf.alphas_like(target_np_array, op_val)\r\n        ops_array.append(tmp_ops)\r\n\r\n\r\nwith tf.Session() as sess:\r\n    result_array = sess.run(ops_array)\r\n\r\nfor _, result in enumerate(result_array):\r\n    if _:\r\n        print(\"################\")\r\n    print(result)\r\n```\r\n\r\n### Outputs:\r\n\r\n```shell\r\n[[0 0 0]\r\n [0 0 0]]\r\n################\r\n[[1 1 1]\r\n [1 1 1]]\r\n################\r\n[[0 0 0]\r\n [0 0 0]]\r\n################\r\n[[-5 -5 -5]\r\n [-5 -5 -5]]\r\n################\r\n[[0. 0. 0.]\r\n [0. 0. 0.]]\r\n################\r\n[[1. 1. 1.]\r\n [1. 1. 1.]]\r\n################\r\n[[0.7 0.7 0.7]\r\n [0.7 0.7 0.7]]\r\n################\r\n[[-5.2 -5.2 -5.2]\r\n [-5.2 -5.2 -5.2]]\r\n################\r\n[[False False False]\r\n [False False False]]\r\n################\r\n[[ True  True  True]\r\n [ True  True  True]]\r\n################\r\n[[ True  True  True]\r\n [ True  True  True]]\r\n################\r\n[[ True  True  True]\r\n [ True  True  True]]\r\n################\r\n[[0 0 0]\r\n [0 0 0]]\r\n################\r\n[[1 1 1]\r\n [1 1 1]]\r\n################\r\n[[0 0 0]\r\n [0 0 0]]\r\n################\r\n[[251 251 251]\r\n [251 251 251]]\r\n```\r\n"}