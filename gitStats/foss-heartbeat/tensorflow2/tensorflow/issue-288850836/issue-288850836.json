{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16153", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16153/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16153/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/16153/events", "html_url": "https://github.com/tensorflow/tensorflow/pull/16153", "id": 288850836, "node_id": "MDExOlB1bGxSZXF1ZXN0MTYzMTM2Njc4", "number": 16153, "title": "New features: tf.alphas and tf.alphas_like - Related to #16128", "user": {"login": "DEKHTIARJonathan", "id": 10923599, "node_id": "MDQ6VXNlcjEwOTIzNTk5", "avatar_url": "https://avatars2.githubusercontent.com/u/10923599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DEKHTIARJonathan", "html_url": "https://github.com/DEKHTIARJonathan", "followers_url": "https://api.github.com/users/DEKHTIARJonathan/followers", "following_url": "https://api.github.com/users/DEKHTIARJonathan/following{/other_user}", "gists_url": "https://api.github.com/users/DEKHTIARJonathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/DEKHTIARJonathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DEKHTIARJonathan/subscriptions", "organizations_url": "https://api.github.com/users/DEKHTIARJonathan/orgs", "repos_url": "https://api.github.com/users/DEKHTIARJonathan/repos", "events_url": "https://api.github.com/users/DEKHTIARJonathan/events{/privacy}", "received_events_url": "https://api.github.com/users/DEKHTIARJonathan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 522623856, "node_id": "MDU6TGFiZWw1MjI2MjM4NTY=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/API%20review", "name": "API review", "color": "d4c5f9", "default": false}, {"id": 390482148, "node_id": "MDU6TGFiZWwzOTA0ODIxNDg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/awaiting%20review", "name": "awaiting review", "color": "fef2c0", "default": false}, {"id": 300136587, "node_id": "MDU6TGFiZWwzMDAxMzY1ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/cla:%20yes", "name": "cla: yes", "color": "009800", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-01-16T10:12:45Z", "updated_at": "2018-01-22T22:47:28Z", "closed_at": "2018-01-22T22:47:28Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/16153", "html_url": "https://github.com/tensorflow/tensorflow/pull/16153", "diff_url": "https://github.com/tensorflow/tensorflow/pull/16153.diff", "patch_url": "https://github.com/tensorflow/tensorflow/pull/16153.patch"}, "body_html": "<p>This PR is related to the issue: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"288545703\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/16128\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/16128/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/16128\">#16128</a></p>\n<h4>I send my work here for peer reviewing and discussion. Please do not merge now.</h4>\n<h3>A few interrogations before merging</h3>\n<ol>\n<li>Are the names I have chosen fine with everyone or you would like it to be changed to something else ?</li>\n<li>Do my implementations seem fine ?</li>\n<li>What kind of tests should I implement ? Where shall I put them ?</li>\n<li>Is it a good idea to replace the function body of tf.ones/tf.zeros and tf.ones_like/tf.zeros_like by a function call to tf.alphas and tf.alphas_like ? Not doing it would lead to code duplication, however I would understand that you might be reluctant, these functions are at the core of the library.</li>\n</ol>\n<h3>Why I created these functions ?</h3>\n<p>I oftenly need to create similar tensors with a non-zero/one value. A simple example would be cost functions in GANs with <em>label smoothing</em> applied.</p>\n<p>As stated by <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1112263\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/facaiy\">@facaiy</a> in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"288545703\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/tensorflow/tensorflow/issues/16128\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/16128/hovercard\" href=\"https://github.com/tensorflow/tensorflow/issues/16128\">#16128</a>, I could use :</p>\n<div class=\"highlight highlight-source-python\"><pre>b1 <span class=\"pl-k\">=</span> tf.ones_like(a, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.float32) <span class=\"pl-k\">*</span> <span class=\"pl-c1\">0.9</span> <span class=\"pl-c\"><span class=\"pl-c\">#</span> Tensor full of 0.9</span>\nb2 <span class=\"pl-k\">=</span> tf.ones_like(a, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.int32) <span class=\"pl-k\">*</span> <span class=\"pl-c1\">2</span> <span class=\"pl-c\"><span class=\"pl-c\">#</span> Tensor full of 2</span>\nb4 <span class=\"pl-k\">=</span> tf.ones_like(a, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>tf.bool) <span class=\"pl-c\"><span class=\"pl-c\">#</span> Tensor full of True</span></pre></div>\n<p>However, as shown in my later comments in the issue, the method implemented in this PR is almost twice as fast.</p>\n<p>In a wider view, I think that using a single function more <em>generic</em> is always a good thing whenever it is possible.</p>\n<h3>How does the function API work ?</h3>\n<p>In a very similar manner than the existing ones:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n\na <span class=\"pl-k\">=</span> tf.constant([\n    [\n        [<span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">6</span>],\n        [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>]\n    ],\n    [\n        [<span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">6</span>],\n        [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>]\n    ]\n])\n\nb1 <span class=\"pl-k\">=</span> tf.alphas_like(a, <span class=\"pl-c1\">0.5431</span>)\nb2 <span class=\"pl-k\">=</span> tf.alphas_like(a, <span class=\"pl-c1\">5</span>)\nb3 <span class=\"pl-k\">=</span> tf.alphas_like(a, <span class=\"pl-k\">-</span><span class=\"pl-c1\">5</span>)\nb4 <span class=\"pl-k\">=</span> tf.alphas_like(a, <span class=\"pl-c1\">True</span>)\n\n<span class=\"pl-k\">with</span> tf.Session() <span class=\"pl-k\">as</span> sess:\n    _b1, _b2, _b3, _b4 <span class=\"pl-k\">=</span> sess.run([b1, b2, b3, b4])\n    \n<span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>b1:<span class=\"pl-pds\">\"</span></span>, _b1)\n<span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>b2:<span class=\"pl-pds\">\"</span></span>, _b2)\n<span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>b3:<span class=\"pl-pds\">\"</span></span>, _b3)\n<span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>b4:<span class=\"pl-pds\">\"</span></span>, _b4)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>############## OUTPUTS ###############</span>\n\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> b1: [\n  [\n    [ <span class=\"pl-c1\">0.5431</span>  <span class=\"pl-c1\">0.5431</span>  <span class=\"pl-c1\">0.5431</span>]\n    [ <span class=\"pl-c1\">0.5431</span>  <span class=\"pl-c1\">0.5431</span>  <span class=\"pl-c1\">0.5431</span>]\n  ]\n  [\n    [ <span class=\"pl-c1\">0.5431</span>  <span class=\"pl-c1\">0.5431</span>  <span class=\"pl-c1\">0.5431</span>]\n    [ <span class=\"pl-c1\">0.5431</span>  <span class=\"pl-c1\">0.5431</span>  <span class=\"pl-c1\">0.5431</span>]\n  ]\n]\n\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> b2: [\n  [\n    [<span class=\"pl-c1\">5</span> <span class=\"pl-c1\">5</span> <span class=\"pl-c1\">5</span>]\n    [<span class=\"pl-c1\">5</span> <span class=\"pl-c1\">5</span> <span class=\"pl-c1\">5</span>]\n  ]\n  [\n    [<span class=\"pl-c1\">5</span> <span class=\"pl-c1\">5</span> <span class=\"pl-c1\">5</span>]\n    [<span class=\"pl-c1\">5</span> <span class=\"pl-c1\">5</span> <span class=\"pl-c1\">5</span>]\n  ]\n]\n\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> b3: [\n  [\n    [<span class=\"pl-k\">-</span><span class=\"pl-c1\">5</span> <span class=\"pl-k\">-</span><span class=\"pl-c1\">5</span> <span class=\"pl-k\">-</span><span class=\"pl-c1\">5</span>]\n    [<span class=\"pl-k\">-</span><span class=\"pl-c1\">5</span> <span class=\"pl-k\">-</span><span class=\"pl-c1\">5</span> <span class=\"pl-k\">-</span><span class=\"pl-c1\">5</span>]\n  ]\n  [\n    [<span class=\"pl-k\">-</span><span class=\"pl-c1\">5</span> <span class=\"pl-k\">-</span><span class=\"pl-c1\">5</span> <span class=\"pl-k\">-</span><span class=\"pl-c1\">5</span>]\n    [<span class=\"pl-k\">-</span><span class=\"pl-c1\">5</span> <span class=\"pl-k\">-</span><span class=\"pl-c1\">5</span> <span class=\"pl-k\">-</span><span class=\"pl-c1\">5</span>]\n  ]\n]\n\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> b4: [\n  [\n    [ <span class=\"pl-c1\">True</span>  <span class=\"pl-c1\">True</span>  <span class=\"pl-c1\">True</span>]\n    [ <span class=\"pl-c1\">True</span>  <span class=\"pl-c1\">True</span>  <span class=\"pl-c1\">True</span>]\n  ]\n  [\n    [ <span class=\"pl-c1\">True</span>  <span class=\"pl-c1\">True</span>  <span class=\"pl-c1\">True</span>]\n    [ <span class=\"pl-c1\">True</span>  <span class=\"pl-c1\">True</span>  <span class=\"pl-c1\">True</span>]\n  ]\n]</pre></div>\n<hr>\n<p>I'm of course free for discussion over video-calls. It's the first time I try to make a change at the core of TF, and I'm quite afraid of breaking everything ;) Thanks for your help btw.</p>\n<p>All the best,</p>\n<p>Jonathan DEKHTIAR</p>", "body_text": "This PR is related to the issue: #16128\nI send my work here for peer reviewing and discussion. Please do not merge now.\nA few interrogations before merging\n\nAre the names I have chosen fine with everyone or you would like it to be changed to something else ?\nDo my implementations seem fine ?\nWhat kind of tests should I implement ? Where shall I put them ?\nIs it a good idea to replace the function body of tf.ones/tf.zeros and tf.ones_like/tf.zeros_like by a function call to tf.alphas and tf.alphas_like ? Not doing it would lead to code duplication, however I would understand that you might be reluctant, these functions are at the core of the library.\n\nWhy I created these functions ?\nI oftenly need to create similar tensors with a non-zero/one value. A simple example would be cost functions in GANs with label smoothing applied.\nAs stated by @facaiy in #16128, I could use :\nb1 = tf.ones_like(a, dtype=tf.float32) * 0.9 # Tensor full of 0.9\nb2 = tf.ones_like(a, dtype=tf.int32) * 2 # Tensor full of 2\nb4 = tf.ones_like(a, dtype=tf.bool) # Tensor full of True\nHowever, as shown in my later comments in the issue, the method implemented in this PR is almost twice as fast.\nIn a wider view, I think that using a single function more generic is always a good thing whenever it is possible.\nHow does the function API work ?\nIn a very similar manner than the existing ones:\nimport tensorflow as tf\n\na = tf.constant([\n    [\n        [4, 5, 6],\n        [1, 2, 3]\n    ],\n    [\n        [4, 5, 6],\n        [1, 2, 3]\n    ]\n])\n\nb1 = tf.alphas_like(a, 0.5431)\nb2 = tf.alphas_like(a, 5)\nb3 = tf.alphas_like(a, -5)\nb4 = tf.alphas_like(a, True)\n\nwith tf.Session() as sess:\n    _b1, _b2, _b3, _b4 = sess.run([b1, b2, b3, b4])\n    \nprint(\"b1:\", _b1)\nprint(\"b2:\", _b2)\nprint(\"b3:\", _b3)\nprint(\"b4:\", _b4)\n\n############### OUTPUTS ###############\n\n>>> b1: [\n  [\n    [ 0.5431  0.5431  0.5431]\n    [ 0.5431  0.5431  0.5431]\n  ]\n  [\n    [ 0.5431  0.5431  0.5431]\n    [ 0.5431  0.5431  0.5431]\n  ]\n]\n\n>>> b2: [\n  [\n    [5 5 5]\n    [5 5 5]\n  ]\n  [\n    [5 5 5]\n    [5 5 5]\n  ]\n]\n\n>>> b3: [\n  [\n    [-5 -5 -5]\n    [-5 -5 -5]\n  ]\n  [\n    [-5 -5 -5]\n    [-5 -5 -5]\n  ]\n]\n\n>>> b4: [\n  [\n    [ True  True  True]\n    [ True  True  True]\n  ]\n  [\n    [ True  True  True]\n    [ True  True  True]\n  ]\n]\n\nI'm of course free for discussion over video-calls. It's the first time I try to make a change at the core of TF, and I'm quite afraid of breaking everything ;) Thanks for your help btw.\nAll the best,\nJonathan DEKHTIAR", "body": "This PR is related to the issue: #16128\r\n\r\n#### I send my work here for peer reviewing and discussion. Please do not merge now.\r\n\r\n### A few interrogations before merging\r\n\r\n1. Are the names I have chosen fine with everyone or you would like it to be changed to something else ?\r\n2. Do my implementations seem fine ?\r\n3. What kind of tests should I implement ? Where shall I put them ?\r\n4. Is it a good idea to replace the function body of tf.ones/tf.zeros and tf.ones_like/tf.zeros_like by a function call to tf.alphas and tf.alphas_like ? Not doing it would lead to code duplication, however I would understand that you might be reluctant, these functions are at the core of the library.\r\n\r\n### Why I created these functions ?\r\n\r\nI oftenly need to create similar tensors with a non-zero/one value. A simple example would be cost functions in GANs with *label smoothing* applied. \r\n\r\nAs stated by @facaiy in #16128, I could use : \r\n```python\r\nb1 = tf.ones_like(a, dtype=tf.float32) * 0.9 # Tensor full of 0.9\r\nb2 = tf.ones_like(a, dtype=tf.int32) * 2 # Tensor full of 2\r\nb4 = tf.ones_like(a, dtype=tf.bool) # Tensor full of True\r\n```\r\n However, as shown in my later comments in the issue, the method implemented in this PR is almost twice as fast.\r\n\r\nIn a wider view, I think that using a single function more *generic* is always a good thing whenever it is possible.\r\n\r\n### How does the function API work ?\r\n\r\nIn a very similar manner than the existing ones: \r\n\r\n```python\r\nimport tensorflow as tf\r\n\r\na = tf.constant([\r\n    [\r\n        [4, 5, 6],\r\n        [1, 2, 3]\r\n    ],\r\n    [\r\n        [4, 5, 6],\r\n        [1, 2, 3]\r\n    ]\r\n])\r\n\r\nb1 = tf.alphas_like(a, 0.5431)\r\nb2 = tf.alphas_like(a, 5)\r\nb3 = tf.alphas_like(a, -5)\r\nb4 = tf.alphas_like(a, True)\r\n\r\nwith tf.Session() as sess:\r\n    _b1, _b2, _b3, _b4 = sess.run([b1, b2, b3, b4])\r\n    \r\nprint(\"b1:\", _b1)\r\nprint(\"b2:\", _b2)\r\nprint(\"b3:\", _b3)\r\nprint(\"b4:\", _b4)\r\n\r\n############### OUTPUTS ###############\r\n\r\n>>> b1: [\r\n  [\r\n    [ 0.5431  0.5431  0.5431]\r\n    [ 0.5431  0.5431  0.5431]\r\n  ]\r\n  [\r\n    [ 0.5431  0.5431  0.5431]\r\n    [ 0.5431  0.5431  0.5431]\r\n  ]\r\n]\r\n\r\n>>> b2: [\r\n  [\r\n    [5 5 5]\r\n    [5 5 5]\r\n  ]\r\n  [\r\n    [5 5 5]\r\n    [5 5 5]\r\n  ]\r\n]\r\n\r\n>>> b3: [\r\n  [\r\n    [-5 -5 -5]\r\n    [-5 -5 -5]\r\n  ]\r\n  [\r\n    [-5 -5 -5]\r\n    [-5 -5 -5]\r\n  ]\r\n]\r\n\r\n>>> b4: [\r\n  [\r\n    [ True  True  True]\r\n    [ True  True  True]\r\n  ]\r\n  [\r\n    [ True  True  True]\r\n    [ True  True  True]\r\n  ]\r\n]\r\n```\r\n\r\n---------------------------\r\n\r\nI'm of course free for discussion over video-calls. It's the first time I try to make a change at the core of TF, and I'm quite afraid of breaking everything ;) Thanks for your help btw.\r\n\r\nAll the best,\r\n\r\nJonathan DEKHTIAR"}