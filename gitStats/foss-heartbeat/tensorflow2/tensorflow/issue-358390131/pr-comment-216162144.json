{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/216162144", "pull_request_review_id": 153586055, "id": 216162144, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjE2MjE0NA==", "diff_hunk": "@@ -819,6 +819,8 @@ def _get_scores(log_probs, sequence_lengths, length_penalty_weight):\n   \"\"\"\n   length_penalty_ = _length_penalty(\n       sequence_lengths=sequence_lengths, penalty_factor=length_penalty_weight)\n+  if not isinstance(length_penalty_, float):", "path": "tensorflow/contrib/seq2seq/python/ops/beam_search_decoder.py", "position": null, "original_position": 4, "commit_id": "414068b2aa41f93a1c0661f3f99168ead75405e0", "original_commit_id": "15b9c26d4b503d38a18d6ab634ba386829593a75", "user": {"login": "georgesterpu", "id": 6018251, "node_id": "MDQ6VXNlcjYwMTgyNTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/6018251?v=4", "gravatar_id": "", "url": "https://api.github.com/users/georgesterpu", "html_url": "https://github.com/georgesterpu", "followers_url": "https://api.github.com/users/georgesterpu/followers", "following_url": "https://api.github.com/users/georgesterpu/following{/other_user}", "gists_url": "https://api.github.com/users/georgesterpu/gists{/gist_id}", "starred_url": "https://api.github.com/users/georgesterpu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/georgesterpu/subscriptions", "organizations_url": "https://api.github.com/users/georgesterpu/orgs", "repos_url": "https://api.github.com/users/georgesterpu/repos", "events_url": "https://api.github.com/users/georgesterpu/events{/privacy}", "received_events_url": "https://api.github.com/users/georgesterpu/received_events", "type": "User", "site_admin": false}, "body": "Hi Eugene.\r\nWhen `length_penalty_` is a Python float, `math_ops.cast` will first convert it to a float32 Tensor, then cast it into float16. Would this add one more node to the graph, making the default case slightly slower ?\r\nWould it be better to import and use `gen_math_ops.cast` instead, plus the type checking ?", "created_at": "2018-09-09T16:34:23Z", "updated_at": "2018-11-02T16:40:07Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/22173#discussion_r216162144", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/22173", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/216162144"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/22173#discussion_r216162144"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/22173"}}, "body_html": "<p>Hi Eugene.<br>\nWhen <code>length_penalty_</code> is a Python float, <code>math_ops.cast</code> will first convert it to a float32 Tensor, then cast it into float16. Would this add one more node to the graph, making the default case slightly slower ?<br>\nWould it be better to import and use <code>gen_math_ops.cast</code> instead, plus the type checking ?</p>", "body_text": "Hi Eugene.\nWhen length_penalty_ is a Python float, math_ops.cast will first convert it to a float32 Tensor, then cast it into float16. Would this add one more node to the graph, making the default case slightly slower ?\nWould it be better to import and use gen_math_ops.cast instead, plus the type checking ?", "in_reply_to_id": 216161930}