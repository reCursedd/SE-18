{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/143557930", "pull_request_review_id": 68086008, "id": 143557930, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzU1NzkzMA==", "diff_hunk": "@@ -0,0 +1,115 @@\n+package org.tensorflow.processor.operator;\n+\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.Set;\n+import javax.annotation.processing.AbstractProcessor;\n+import javax.annotation.processing.Filer;\n+import javax.annotation.processing.Messager;\n+import javax.annotation.processing.ProcessingEnvironment;\n+import javax.annotation.processing.RoundEnvironment;\n+import javax.lang.model.SourceVersion;\n+import javax.lang.model.element.Element;\n+import javax.lang.model.element.TypeElement;\n+import javax.tools.Diagnostic.Kind;\n+\n+public final class OperatorProcessor extends AbstractProcessor {\n+\n+  @Override\n+  public SourceVersion getSupportedSourceVersion() {\n+    return SourceVersion.latestSupported();\n+  }\n+\n+  @Override\n+  public synchronized void init(ProcessingEnvironment processingEnv) {\n+    super.init(processingEnv);\n+    messager = processingEnv.getMessager();\n+    filer = processingEnv.getFiler();\n+  }\n+\n+  @Override\n+  public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {\n+    // Nothing needs to be done at the end of all rounds.\n+    if (roundEnv.processingOver()) {\n+      return false;\n+    }\n+\n+    // Collect all classes tagged with our annotation.\n+    Set<TypeElement> opClasses = new HashSet<TypeElement>();\n+    for (TypeElement annotation : annotations) {", "path": "tensorflow/java/src/gen/java/org/tensorflow/processor/operator/OperatorProcessor.java", "position": null, "original_position": 41, "commit_id": "52009457ea7eaa97ea974915e75f0b052261b3f1", "original_commit_id": "da2e5bfdfcf919c8f7940cdd69865bcab835f08f", "user": {"login": "kbsriram", "id": 1495065, "node_id": "MDQ6VXNlcjE0OTUwNjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1495065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kbsriram", "html_url": "https://github.com/kbsriram", "followers_url": "https://api.github.com/users/kbsriram/followers", "following_url": "https://api.github.com/users/kbsriram/following{/other_user}", "gists_url": "https://api.github.com/users/kbsriram/gists{/gist_id}", "starred_url": "https://api.github.com/users/kbsriram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kbsriram/subscriptions", "organizations_url": "https://api.github.com/users/kbsriram/orgs", "repos_url": "https://api.github.com/users/kbsriram/repos", "events_url": "https://api.github.com/users/kbsriram/events{/privacy}", "received_events_url": "https://api.github.com/users/kbsriram/received_events", "type": "User", "site_admin": false}, "body": "It can be zero or 1 depending on which phase this runs in. I'll combine this with the rest of the constraint reformulation you suggested. Ptal, and if overall it reads better to you, sgtm.\r\n", "created_at": "2017-10-09T19:33:32Z", "updated_at": "2017-10-10T14:02:07Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/12828#discussion_r143557930", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12828", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/143557930"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/12828#discussion_r143557930"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12828"}}, "body_html": "<p>It can be zero or 1 depending on which phase this runs in. I'll combine this with the rest of the constraint reformulation you suggested. Ptal, and if overall it reads better to you, sgtm.</p>", "body_text": "It can be zero or 1 depending on which phase this runs in. I'll combine this with the rest of the constraint reformulation you suggested. Ptal, and if overall it reads better to you, sgtm.", "in_reply_to_id": 142876111}