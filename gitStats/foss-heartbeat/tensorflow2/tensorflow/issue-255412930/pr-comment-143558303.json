{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/143558303", "pull_request_review_id": 68086394, "id": 143558303, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzU1ODMwMw==", "diff_hunk": "@@ -78,9 +78,40 @@ function build_libtensorflow_tarball() {\n     //tensorflow/tools/lib_package:libtensorflow_proto.zip\n \n   mkdir -p ${DIR}\n+\n   cp bazel-bin/tensorflow/tools/lib_package/libtensorflow.tar.gz ${DIR}/libtensorflow${TARBALL_SUFFIX}.tar.gz\n   cp bazel-bin/tensorflow/tools/lib_package/libtensorflow_jni.tar.gz ${DIR}/libtensorflow_jni${TARBALL_SUFFIX}.tar.gz\n-  cp bazel-bin/tensorflow/java/libtensorflow.jar bazel-bin/tensorflow/java/libtensorflow-src.jar ${DIR}\n+  cp bazel-bin/tensorflow/java/libtensorflow.jar ${DIR}\n+  cp_normalized_srcjar bazel-bin/tensorflow/java/libtensorflow-src.jar ${DIR}/libtensorflow-src.jar\n   cp bazel-genfiles/tensorflow/tools/lib_package/libtensorflow_proto.zip ${DIR}\n   chmod -x ${DIR}/*\n }\n+\n+# Helper function to copy a srcjar after moving any source files\n+# directly under the root to the \"maven-style\" src/main/java layout\n+# Arguments:", "path": "tensorflow/tools/ci_build/builds/libtensorflow.sh", "position": null, "original_position": 16, "commit_id": "52009457ea7eaa97ea974915e75f0b052261b3f1", "original_commit_id": "da2e5bfdfcf919c8f7940cdd69865bcab835f08f", "user": {"login": "kbsriram", "id": 1495065, "node_id": "MDQ6VXNlcjE0OTUwNjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1495065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kbsriram", "html_url": "https://github.com/kbsriram", "followers_url": "https://api.github.com/users/kbsriram/followers", "following_url": "https://api.github.com/users/kbsriram/following{/other_user}", "gists_url": "https://api.github.com/users/kbsriram/gists{/gist_id}", "starred_url": "https://api.github.com/users/kbsriram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kbsriram/subscriptions", "organizations_url": "https://api.github.com/users/kbsriram/orgs", "repos_url": "https://api.github.com/users/kbsriram/repos", "events_url": "https://api.github.com/users/kbsriram/events{/privacy}", "received_events_url": "https://api.github.com/users/kbsriram/received_events", "type": "User", "site_admin": false}, "body": "The problem is that the annotation processor doesn't control where its generated sources are written. The processor only provides a package name - the rest of it is determined by the environment.\r\n\r\nThe environment is first determined by the way bazel calls javac, and then by how bazel packages such generated files into its -srcs.jar. bazel generates files into a bazel-out directory, and then jars them directly in the root of its -srcs.jar file. Is there an option I missed to control all this? I tried adding things like compiler options, but this ends up just confusing bazel.\r\n", "created_at": "2017-10-09T19:35:18Z", "updated_at": "2017-10-10T14:02:07Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/12828#discussion_r143558303", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12828", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/143558303"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/12828#discussion_r143558303"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/12828"}}, "body_html": "<p>The problem is that the annotation processor doesn't control where its generated sources are written. The processor only provides a package name - the rest of it is determined by the environment.</p>\n<p>The environment is first determined by the way bazel calls javac, and then by how bazel packages such generated files into its -srcs.jar. bazel generates files into a bazel-out directory, and then jars them directly in the root of its -srcs.jar file. Is there an option I missed to control all this? I tried adding things like compiler options, but this ends up just confusing bazel.</p>", "body_text": "The problem is that the annotation processor doesn't control where its generated sources are written. The processor only provides a package name - the rest of it is determined by the environment.\nThe environment is first determined by the way bazel calls javac, and then by how bazel packages such generated files into its -srcs.jar. bazel generates files into a bazel-out directory, and then jars them directly in the root of its -srcs.jar file. Is there an option I missed to control all this? I tried adding things like compiler options, but this ends up just confusing bazel.", "in_reply_to_id": 142872337}