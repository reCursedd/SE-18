{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/224612342", "pull_request_review_id": 164021122, "id": 224612342, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDYxMjM0Mg==", "diff_hunk": "@@ -92,14 +92,20 @@ func (g *Graph) WriteTo(w io.Writer) (int64, error) {\n // another Graph into g.\n //\n // Names of imported nodes will be prefixed with prefix.\n-func (g *Graph) Import(def []byte, prefix string) error {\n+func (g *Graph) ImportWithDevice(def []byte, prefix string, device string) error {", "path": "tensorflow/go/graph.go", "position": null, "original_position": 5, "commit_id": "77ff33a378b5c309e94d118504f76951fab04802", "original_commit_id": "125b3b264ba2169ec8944bbf12cb91e495d85d76", "user": {"login": "asimshankar", "id": 16018, "node_id": "MDQ6VXNlcjE2MDE4", "avatar_url": "https://avatars2.githubusercontent.com/u/16018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asimshankar", "html_url": "https://github.com/asimshankar", "followers_url": "https://api.github.com/users/asimshankar/followers", "following_url": "https://api.github.com/users/asimshankar/following{/other_user}", "gists_url": "https://api.github.com/users/asimshankar/gists{/gist_id}", "starred_url": "https://api.github.com/users/asimshankar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asimshankar/subscriptions", "organizations_url": "https://api.github.com/users/asimshankar/orgs", "repos_url": "https://api.github.com/users/asimshankar/repos", "events_url": "https://api.github.com/users/asimshankar/events{/privacy}", "received_events_url": "https://api.github.com/users/asimshankar/received_events", "type": "User", "site_admin": false}, "body": "Should we use the options pattern here instead of a new function? That way we can avoid a combinatorial explosion of functions as more options are added (and these are truly optional).\r\n\r\nSee for example how we do optional attributes in https://godoc.org/github.com/tensorflow/tensorflow/tensorflow/go/op#AvgPool3DAttr\r\n\r\nOr alternatively, have a struct of options:\r\n\r\n```go\r\ntype GraphImportOptions struct {\r\n  Prefix string\r\n  Device string\r\n  // Other things corresponding to TF_ImportGraphDefOptions, but don't need to add them in this PR\r\n}\r\n\r\nfunc (g *Graph) ImportWithOptions(def []byte, options GraphImportOptions) error {\r\n  ...\r\n}\r\n\r\nfunc (g *Graph) Import(def []byte, prefix string) error {\r\n  return g.ImportWithOptions(def, GraphImportOptions{Prefix: prefix})\r\n}\r\n```\r\n", "created_at": "2018-10-11T21:37:10Z", "updated_at": "2018-10-23T19:56:52Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/20412#discussion_r224612342", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/20412", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/224612342"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/20412#discussion_r224612342"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/20412"}}, "body_html": "<p>Should we use the options pattern here instead of a new function? That way we can avoid a combinatorial explosion of functions as more options are added (and these are truly optional).</p>\n<p>See for example how we do optional attributes in <a href=\"https://godoc.org/github.com/tensorflow/tensorflow/tensorflow/go/op#AvgPool3DAttr\" rel=\"nofollow\">https://godoc.org/github.com/tensorflow/tensorflow/tensorflow/go/op#AvgPool3DAttr</a></p>\n<p>Or alternatively, have a struct of options:</p>\n<div class=\"highlight highlight-source-go\"><pre><span class=\"pl-k\">type</span> <span class=\"pl-v\">GraphImportOptions</span> <span class=\"pl-k\">struct</span> {\n  <span class=\"pl-v\">Prefix</span> <span class=\"pl-k\">string</span>\n  <span class=\"pl-v\">Device</span> <span class=\"pl-k\">string</span>\n  <span class=\"pl-c\"><span class=\"pl-c\">//</span> Other things corresponding to TF_ImportGraphDefOptions, but don't need to add them in this PR</span>\n}\n\n<span class=\"pl-k\">func</span> <span class=\"pl-en\">(<span class=\"pl-v\">g</span> *<span class=\"pl-v\">Graph</span>) <span class=\"pl-en\">ImportWithOptions</span></span>(<span class=\"pl-v\">def</span> []<span class=\"pl-v\">byte</span>, <span class=\"pl-v\">options</span> <span class=\"pl-v\">GraphImportOptions</span>) <span class=\"pl-v\">error</span> {\n  ...\n}\n\n<span class=\"pl-k\">func</span> <span class=\"pl-en\">(<span class=\"pl-v\">g</span> *<span class=\"pl-v\">Graph</span>) <span class=\"pl-en\">Import</span></span>(<span class=\"pl-v\">def</span> []<span class=\"pl-v\">byte</span>, <span class=\"pl-v\">prefix</span> <span class=\"pl-v\">string</span>) <span class=\"pl-v\">error</span> {\n  <span class=\"pl-k\">return</span> g.<span class=\"pl-c1\">ImportWithOptions</span>(def, GraphImportOptions{Prefix: prefix})\n}</pre></div>", "body_text": "Should we use the options pattern here instead of a new function? That way we can avoid a combinatorial explosion of functions as more options are added (and these are truly optional).\nSee for example how we do optional attributes in https://godoc.org/github.com/tensorflow/tensorflow/tensorflow/go/op#AvgPool3DAttr\nOr alternatively, have a struct of options:\ntype GraphImportOptions struct {\n  Prefix string\n  Device string\n  // Other things corresponding to TF_ImportGraphDefOptions, but don't need to add them in this PR\n}\n\nfunc (g *Graph) ImportWithOptions(def []byte, options GraphImportOptions) error {\n  ...\n}\n\nfunc (g *Graph) Import(def []byte, prefix string) error {\n  return g.ImportWithOptions(def, GraphImportOptions{Prefix: prefix})\n}"}