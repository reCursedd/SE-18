{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/423277952", "html_url": "https://github.com/tensorflow/tensorflow/pull/20412#issuecomment-423277952", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/20412", "id": 423277952, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzI3Nzk1Mg==", "user": {"login": "bioothod", "id": 1847575, "node_id": "MDQ6VXNlcjE4NDc1NzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1847575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bioothod", "html_url": "https://github.com/bioothod", "followers_url": "https://api.github.com/users/bioothod/followers", "following_url": "https://api.github.com/users/bioothod/following{/other_user}", "gists_url": "https://api.github.com/users/bioothod/gists{/gist_id}", "starred_url": "https://api.github.com/users/bioothod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bioothod/subscriptions", "organizations_url": "https://api.github.com/users/bioothod/orgs", "repos_url": "https://api.github.com/users/bioothod/repos", "events_url": "https://api.github.com/users/bioothod/events{/privacy}", "received_events_url": "https://api.github.com/users/bioothod/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-20T18:01:13Z", "updated_at": "2018-09-20T18:01:13Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I've updated patch to hide all binding implementation within C import function and do not allow to (re)bind graph in runtime (i.e. after it has been imported).</p>\n<p>TF 1.10 without this patch <em>does</em> allow execution of the graph on GPU by default (1.6-1.8 did not), but it is only the first device among multiple, so, if there are many devices one has no way to bind execution of the particular graph on particular device. It can be somehow mitigated by running multiple processes each one having access to only particular cuda device, but it is cumbersome and is not enough in some cases.</p>\n<p>My patch allows to bind particular graph to particular GPU during its import, which allows to implement load balancing policies and generally load every GPUs without hacks.</p>", "body_text": "I've updated patch to hide all binding implementation within C import function and do not allow to (re)bind graph in runtime (i.e. after it has been imported).\nTF 1.10 without this patch does allow execution of the graph on GPU by default (1.6-1.8 did not), but it is only the first device among multiple, so, if there are many devices one has no way to bind execution of the particular graph on particular device. It can be somehow mitigated by running multiple processes each one having access to only particular cuda device, but it is cumbersome and is not enough in some cases.\nMy patch allows to bind particular graph to particular GPU during its import, which allows to implement load balancing policies and generally load every GPUs without hacks.", "body": "I've updated patch to hide all binding implementation within C import function and do not allow to (re)bind graph in runtime (i.e. after it has been imported).\r\n\r\nTF 1.10 without this patch *does* allow execution of the graph on GPU by default (1.6-1.8 did not), but it is only the first device among multiple, so, if there are many devices one has no way to bind execution of the particular graph on particular device. It can be somehow mitigated by running multiple processes each one having access to only particular cuda device, but it is cumbersome and is not enough in some cases.\r\n\r\nMy patch allows to bind particular graph to particular GPU during its import, which allows to implement load balancing policies and generally load every GPUs without hacks."}