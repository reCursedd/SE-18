{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/277756354", "html_url": "https://github.com/tensorflow/tensorflow/issues/252#issuecomment-277756354", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/252", "id": 277756354, "node_id": "MDEyOklzc3VlQ29tbWVudDI3Nzc1NjM1NA==", "user": {"login": "mrry", "id": 192142, "node_id": "MDQ6VXNlcjE5MjE0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/192142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrry", "html_url": "https://github.com/mrry", "followers_url": "https://api.github.com/users/mrry/followers", "following_url": "https://api.github.com/users/mrry/following{/other_user}", "gists_url": "https://api.github.com/users/mrry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrry/subscriptions", "organizations_url": "https://api.github.com/users/mrry/orgs", "repos_url": "https://api.github.com/users/mrry/repos", "events_url": "https://api.github.com/users/mrry/events{/privacy}", "received_events_url": "https://api.github.com/users/mrry/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-06T17:42:20Z", "updated_at": "2017-02-06T17:42:20Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=70511\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/girving\">@girving</a> Unfortunately that error message is in generated code. Maybe take it up with the authors of <a href=\"https://github.com/swig/swig\">https://github.com/swig/swig</a>? :)</p>\n<p>Judging by that generated code, we seem to be in case 2 (\"I expected a <code>TF_Buffer*</code>\"). SWIG converts this C type to and from a pointer-wrapper object. I don't know enough about PyPy or <code>cpyext</code> to know if this type could be getting swizzled somehow. Here are the relevant generated code fragments for the wrappers for <code>TF_NewBuffer()</code> and <code>TF_DeleteBuffer()</code>:</p>\n<div class=\"highlight highlight-source-c++\"><pre>SWIGINTERN PyObject *<span class=\"pl-en\">_wrap_TF_NewBuffer</span>(PyObject *<span class=\"pl-en\">SWIGUNUSEDPARM</span>(self), PyObject *args) {\n  PyObject *resultobj = <span class=\"pl-c1\">0</span>;\n  TF_Buffer *result = <span class=\"pl-c1\">0</span> ;\n  \n  <span class=\"pl-k\">if</span> (!<span class=\"pl-c1\">PyArg_ParseTuple</span>(args,(<span class=\"pl-k\">char</span> *)<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>:TF_NewBuffer<span class=\"pl-pds\">\"</span></span>)) SWIG_fail;\n  {\n    Py_BEGIN_ALLOW_THREADS;\n    result = (TF_Buffer *)<span class=\"pl-c1\">TF_NewBuffer</span>();\n    Py_END_ALLOW_THREADS;\n  }\n  resultobj = <span class=\"pl-c1\">SWIG_NewPointerObj</span>(<span class=\"pl-c1\">SWIG_as_voidptr</span>(result), SWIGTYPE_p_TF_Buffer, <span class=\"pl-c1\">0</span> |  <span class=\"pl-c1\">0</span> );\n  <span class=\"pl-k\">return</span> resultobj;\nfail:\n  <span class=\"pl-k\">return</span> <span class=\"pl-c1\">NULL</span>;\n}\n\nSWIGINTERN PyObject *<span class=\"pl-en\">_wrap_TF_DeleteBuffer</span>(PyObject *<span class=\"pl-en\">SWIGUNUSEDPARM</span>(self), PyObject *args) {\n  PyObject *resultobj = <span class=\"pl-c1\">0</span>;\n  TF_Buffer *arg1 = (TF_Buffer *) <span class=\"pl-c1\">0</span> ;\n  <span class=\"pl-k\">void</span> *argp1 = <span class=\"pl-c1\">0</span> ;\n  <span class=\"pl-k\">int</span> res1 = <span class=\"pl-c1\">0</span> ;\n  PyObject * obj0 = <span class=\"pl-c1\">0</span> ;\n  \n  <span class=\"pl-k\">if</span> (!<span class=\"pl-c1\">PyArg_ParseTuple</span>(args,(<span class=\"pl-k\">char</span> *)<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>O:TF_DeleteBuffer<span class=\"pl-pds\">\"</span></span>,&amp;obj0)) SWIG_fail;\n  res1 = <span class=\"pl-c1\">SWIG_ConvertPtr</span>(obj0, &amp;argp1,SWIGTYPE_p_TF_Buffer, <span class=\"pl-c1\">0</span> |  <span class=\"pl-c1\">0</span> );\n  <span class=\"pl-k\">if</span> (!<span class=\"pl-c1\">SWIG_IsOK</span>(res1)) {\n    <span class=\"pl-c1\">SWIG_exception_fail</span>(<span class=\"pl-c1\">SWIG_ArgError</span>(res1), <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>in method '<span class=\"pl-pds\">\"</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>TF_DeleteBuffer<span class=\"pl-pds\">\"</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>', argument <span class=\"pl-pds\">\"</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1<span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span> of type '<span class=\"pl-pds\">\"</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>TF_Buffer *<span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span>'<span class=\"pl-pds\">\"</span></span>); \n  }\n  arg1 = <span class=\"pl-k\">reinterpret_cast</span>&lt; TF_Buffer * &gt;(argp1);\n  {\n    Py_BEGIN_ALLOW_THREADS;\n    <span class=\"pl-c1\">TF_DeleteBuffer</span>(arg1);\n    Py_END_ALLOW_THREADS;\n  }\n  resultobj = <span class=\"pl-c1\">SWIG_Py_Void</span>();\n  <span class=\"pl-k\">return</span> resultobj;\nfail:\n  <span class=\"pl-k\">return</span> <span class=\"pl-c1\">NULL</span>;\n}</pre></div>", "body_text": "@girving Unfortunately that error message is in generated code. Maybe take it up with the authors of https://github.com/swig/swig? :)\nJudging by that generated code, we seem to be in case 2 (\"I expected a TF_Buffer*\"). SWIG converts this C type to and from a pointer-wrapper object. I don't know enough about PyPy or cpyext to know if this type could be getting swizzled somehow. Here are the relevant generated code fragments for the wrappers for TF_NewBuffer() and TF_DeleteBuffer():\nSWIGINTERN PyObject *_wrap_TF_NewBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {\n  PyObject *resultobj = 0;\n  TF_Buffer *result = 0 ;\n  \n  if (!PyArg_ParseTuple(args,(char *)\":TF_NewBuffer\")) SWIG_fail;\n  {\n    Py_BEGIN_ALLOW_THREADS;\n    result = (TF_Buffer *)TF_NewBuffer();\n    Py_END_ALLOW_THREADS;\n  }\n  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TF_Buffer, 0 |  0 );\n  return resultobj;\nfail:\n  return NULL;\n}\n\nSWIGINTERN PyObject *_wrap_TF_DeleteBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {\n  PyObject *resultobj = 0;\n  TF_Buffer *arg1 = (TF_Buffer *) 0 ;\n  void *argp1 = 0 ;\n  int res1 = 0 ;\n  PyObject * obj0 = 0 ;\n  \n  if (!PyArg_ParseTuple(args,(char *)\"O:TF_DeleteBuffer\",&obj0)) SWIG_fail;\n  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TF_Buffer, 0 |  0 );\n  if (!SWIG_IsOK(res1)) {\n    SWIG_exception_fail(SWIG_ArgError(res1), \"in method '\" \"TF_DeleteBuffer\" \"', argument \" \"1\"\" of type '\" \"TF_Buffer *\"\"'\"); \n  }\n  arg1 = reinterpret_cast< TF_Buffer * >(argp1);\n  {\n    Py_BEGIN_ALLOW_THREADS;\n    TF_DeleteBuffer(arg1);\n    Py_END_ALLOW_THREADS;\n  }\n  resultobj = SWIG_Py_Void();\n  return resultobj;\nfail:\n  return NULL;\n}", "body": "@girving Unfortunately that error message is in generated code. Maybe take it up with the authors of https://github.com/swig/swig? :)\r\n\r\nJudging by that generated code, we seem to be in case 2 (\"I expected a `TF_Buffer*`\"). SWIG converts this C type to and from a pointer-wrapper object. I don't know enough about PyPy or `cpyext` to know if this type could be getting swizzled somehow. Here are the relevant generated code fragments for the wrappers for `TF_NewBuffer()` and `TF_DeleteBuffer()`:\r\n\r\n```c++\r\nSWIGINTERN PyObject *_wrap_TF_NewBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {\r\n  PyObject *resultobj = 0;\r\n  TF_Buffer *result = 0 ;\r\n  \r\n  if (!PyArg_ParseTuple(args,(char *)\":TF_NewBuffer\")) SWIG_fail;\r\n  {\r\n    Py_BEGIN_ALLOW_THREADS;\r\n    result = (TF_Buffer *)TF_NewBuffer();\r\n    Py_END_ALLOW_THREADS;\r\n  }\r\n  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_TF_Buffer, 0 |  0 );\r\n  return resultobj;\r\nfail:\r\n  return NULL;\r\n}\r\n\r\nSWIGINTERN PyObject *_wrap_TF_DeleteBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {\r\n  PyObject *resultobj = 0;\r\n  TF_Buffer *arg1 = (TF_Buffer *) 0 ;\r\n  void *argp1 = 0 ;\r\n  int res1 = 0 ;\r\n  PyObject * obj0 = 0 ;\r\n  \r\n  if (!PyArg_ParseTuple(args,(char *)\"O:TF_DeleteBuffer\",&obj0)) SWIG_fail;\r\n  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_TF_Buffer, 0 |  0 );\r\n  if (!SWIG_IsOK(res1)) {\r\n    SWIG_exception_fail(SWIG_ArgError(res1), \"in method '\" \"TF_DeleteBuffer\" \"', argument \" \"1\"\" of type '\" \"TF_Buffer *\"\"'\"); \r\n  }\r\n  arg1 = reinterpret_cast< TF_Buffer * >(argp1);\r\n  {\r\n    Py_BEGIN_ALLOW_THREADS;\r\n    TF_DeleteBuffer(arg1);\r\n    Py_END_ALLOW_THREADS;\r\n  }\r\n  resultobj = SWIG_Py_Void();\r\n  return resultobj;\r\nfail:\r\n  return NULL;\r\n}\r\n```"}