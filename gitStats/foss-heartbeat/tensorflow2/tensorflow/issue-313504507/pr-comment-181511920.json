{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/181511920", "pull_request_review_id": 112124549, "id": 181511920, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTUxMTkyMA==", "diff_hunk": "@@ -0,0 +1,81 @@\n+/* Copyright 2018 The TensorFlow Authors. All Rights Reserved.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+==============================================================================*/\n+\n+#include \"tensorflow/contrib/tensorrt/plugin/trt_plugin_factory.h\"\n+\n+#if GOOGLE_CUDA\n+#if GOOGLE_TENSORRT\n+\n+namespace tensorflow {\n+namespace tensorrt {\n+\n+PluginTensorRT* PluginFactoryTensorRT::createPlugin(const char* layerName,\n+                                                    const void* serial_data,\n+                                                    size_t serial_length) {\n+  size_t parsed_byte = 0;\n+  // extract op_name from serial_data\n+  size_t encoded_op_name =\n+      ExtractOpName(serial_data, serial_length, parsed_byte);\n+\n+  if (!IsPlugin(encoded_op_name)) {\n+    return nullptr;\n+  }\n+\n+  // should I lock plugins here?\n+  instance_m_.lock();\n+  auto plugin_ptr =\n+      plugin_registry_[encoded_op_name].first(serial_data, serial_length);\n+  // string op_name = \"IncPluginTRT\";\n+  // auto plugin_ptr = plugin_registry_[EncodeLayerName(&op_name)].second();\n+  // auto plugin_ptr = plugin_registry_.begin()->second.second();\n+  owned_plugins_.emplace_back(plugin_ptr);\n+  instance_m_.unlock();\n+\n+  return plugin_ptr;\n+}\n+\n+PluginTensorRT* PluginFactoryTensorRT::CreatePlugin(const string* op_name) {\n+  if (!IsPlugin(op_name)) return nullptr;\n+\n+  instance_m_.lock();\n+  auto plugin_ptr = plugin_registry_[EncodeLayerName(op_name)].second();\n+  owned_plugins_.emplace_back(plugin_ptr);\n+  instance_m_.unlock();\n+\n+  return plugin_ptr;\n+}\n+\n+bool PluginFactoryTensorRT::RegisterPlugin(\n+    const string* op_name, PluginDeserializeFunc deserialize_func,\n+    PluginConstructFunc construct_func) {\n+  if (IsPlugin(op_name)) return false;\n+\n+  // get instance_m_ first before write to registry;\n+  instance_m_.lock();\n+  auto ret = plugin_registry_.emplace(\n+      EncodeLayerName(op_name),\n+      std::make_pair(deserialize_func, construct_func));\n+  instance_m_.unlock();\n+\n+  return ret.second;\n+}\n+\n+void PluginFactoryTensorRT::DestroyPlugins() { return; }", "path": "tensorflow/contrib/tensorrt/plugin/trt_plugin_factory.cc", "position": null, "original_position": 75, "commit_id": "82a0695ccf59b6903ba36875f9f335bac710322d", "original_commit_id": "9d1aa895adda8644ddbb55b5e1dbb0797ea6cbb0", "user": {"login": "aaroey", "id": 31743510, "node_id": "MDQ6VXNlcjMxNzQzNTEw", "avatar_url": "https://avatars0.githubusercontent.com/u/31743510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaroey", "html_url": "https://github.com/aaroey", "followers_url": "https://api.github.com/users/aaroey/followers", "following_url": "https://api.github.com/users/aaroey/following{/other_user}", "gists_url": "https://api.github.com/users/aaroey/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaroey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaroey/subscriptions", "organizations_url": "https://api.github.com/users/aaroey/orgs", "repos_url": "https://api.github.com/users/aaroey/repos", "events_url": "https://api.github.com/users/aaroey/events{/privacy}", "received_events_url": "https://api.github.com/users/aaroey/received_events", "type": "User", "site_admin": false}, "body": "Why not destroying?", "created_at": "2018-04-13T21:15:33Z", "updated_at": "2018-05-15T17:09:29Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/18433#discussion_r181511920", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18433", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/181511920"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/18433#discussion_r181511920"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18433"}}, "body_html": "<p>Why not destroying?</p>", "body_text": "Why not destroying?"}