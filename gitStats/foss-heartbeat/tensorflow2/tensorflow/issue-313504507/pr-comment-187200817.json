{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/187200817", "pull_request_review_id": 118934103, "id": 187200817, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzIwMDgxNw==", "diff_hunk": "@@ -1173,6 +1193,42 @@ tensorflow::Status BinaryTensorOpTensor(\n   return tensorflow::Status::OK();\n }\n \n+tensorflow::Status ConvertPlugin(Converter& ctx,\n+                                 const tensorflow::NodeDef& node_def,\n+                                 const std::vector<TRT_TensorOrWeights>& inputs,\n+                                 std::vector<TRT_TensorOrWeights>* outputs) {\n+  // prepare input\n+  std::vector<nvinfer1::ITensor*> all_inputs;\n+  for (auto input : inputs) {\n+    all_inputs.emplace_back(const_cast<nvinfer1::ITensor*>(input.tensor()));\n+  }\n+\n+  // plugin is owned by PluginFactory\n+  // TODO(jie): destroy plugins later (resource management)\n+  PluginTensorRT* plugin =\n+      PluginFactoryTensorRT::GetInstance()->CreatePlugin(node_def.op());\n+\n+  // passing attributes\n+  // TODO(jie): support more general attribute\n+  TFAttrs attrs(node_def);\n+  auto attr_key_vector = attrs.GetAllAttrKey();\n+  for (auto attr_key : attr_key_vector) {\n+    // TODO(jie): support only list of float for toy example here.\n+    auto data = attrs.get<std::vector<float>>(attr_key);\n+    size_t size_data = data.size() * sizeof(float);\n+    plugin->SetAttribute(attr_key, static_cast<void*>(data.data()), size_data);", "path": "tensorflow/contrib/tensorrt/convert/convert_nodes.cc", "position": null, "original_position": 165, "commit_id": "82a0695ccf59b6903ba36875f9f335bac710322d", "original_commit_id": "e1e1dfdaadccf5cb02dfe179f22920d8ac638166", "user": {"login": "jjsjann123", "id": 3709243, "node_id": "MDQ6VXNlcjM3MDkyNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3709243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjsjann123", "html_url": "https://github.com/jjsjann123", "followers_url": "https://api.github.com/users/jjsjann123/followers", "following_url": "https://api.github.com/users/jjsjann123/following{/other_user}", "gists_url": "https://api.github.com/users/jjsjann123/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjsjann123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjsjann123/subscriptions", "organizations_url": "https://api.github.com/users/jjsjann123/orgs", "repos_url": "https://api.github.com/users/jjsjann123/repos", "events_url": "https://api.github.com/users/jjsjann123/events{/privacy}", "received_events_url": "https://api.github.com/users/jjsjann123/received_events", "type": "User", "site_admin": false}, "body": "This is one of the other placeholders. Technically yes.\r\nAwaiting TRT new plugin API to finalize how we pass attributes & handle serialization/deserialization.", "created_at": "2018-05-09T23:05:55Z", "updated_at": "2018-05-15T17:09:29Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/18433#discussion_r187200817", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18433", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/187200817"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/18433#discussion_r187200817"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/18433"}}, "body_html": "<p>This is one of the other placeholders. Technically yes.<br>\nAwaiting TRT new plugin API to finalize how we pass attributes &amp; handle serialization/deserialization.</p>", "body_text": "This is one of the other placeholders. Technically yes.\nAwaiting TRT new plugin API to finalize how we pass attributes & handle serialization/deserialization.", "in_reply_to_id": 185658229}