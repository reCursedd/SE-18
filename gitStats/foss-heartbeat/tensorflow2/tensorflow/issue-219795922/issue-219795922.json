{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9010", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9010/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9010/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/9010/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/9010", "id": 219795922, "node_id": "MDU6SXNzdWUyMTk3OTU5MjI=", "number": 9010, "title": "I hope pre-1.1 `tf.contrib.seq2seq` is kept somewhere for legacy support", "user": {"login": "kaniblu", "id": 938822, "node_id": "MDQ6VXNlcjkzODgyMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/938822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaniblu", "html_url": "https://github.com/kaniblu", "followers_url": "https://api.github.com/users/kaniblu/followers", "following_url": "https://api.github.com/users/kaniblu/following{/other_user}", "gists_url": "https://api.github.com/users/kaniblu/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaniblu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaniblu/subscriptions", "organizations_url": "https://api.github.com/users/kaniblu/orgs", "repos_url": "https://api.github.com/users/kaniblu/repos", "events_url": "https://api.github.com/users/kaniblu/events{/privacy}", "received_events_url": "https://api.github.com/users/kaniblu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 404586594, "node_id": "MDU6TGFiZWw0MDQ1ODY1OTQ=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20tensorflower", "name": "stat:awaiting tensorflower", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-04-06T06:10:12Z", "updated_at": "2017-04-06T17:45:15Z", "closed_at": "2017-04-06T16:37:35Z", "author_association": "NONE", "body_html": "<p>I am disappointed by the fact that pre-1.1 <code>seq2seq</code> has been completely scraped in the latest build and has been replaced by some object-oriented redesign that seems half-finished right now. We have tonnes of codes that are based on pre-1.1 <code>seq2seq</code> interface, so this change would completely break our code base. But we can't just stick to old versions because there are some improvements in other areas that we desperately need also. Why not keep the original design somewhere for legacy (<code>tf.contrib.legacy_seq2seq</code> already exists, so need to think of another name), so those who heavily rely on the module do not have to re-implement the entire codebase? Since 1.1 is still far away from being officially released, I hope a right decision is made.</p>", "body_text": "I am disappointed by the fact that pre-1.1 seq2seq has been completely scraped in the latest build and has been replaced by some object-oriented redesign that seems half-finished right now. We have tonnes of codes that are based on pre-1.1 seq2seq interface, so this change would completely break our code base. But we can't just stick to old versions because there are some improvements in other areas that we desperately need also. Why not keep the original design somewhere for legacy (tf.contrib.legacy_seq2seq already exists, so need to think of another name), so those who heavily rely on the module do not have to re-implement the entire codebase? Since 1.1 is still far away from being officially released, I hope a right decision is made.", "body": "I am disappointed by the fact that pre-1.1 `seq2seq` has been completely scraped in the latest build and has been replaced by some object-oriented redesign that seems half-finished right now. We have tonnes of codes that are based on pre-1.1 `seq2seq` interface, so this change would completely break our code base. But we can't just stick to old versions because there are some improvements in other areas that we desperately need also. Why not keep the original design somewhere for legacy (`tf.contrib.legacy_seq2seq` already exists, so need to think of another name), so those who heavily rely on the module do not have to re-implement the entire codebase? Since 1.1 is still far away from being officially released, I hope a right decision is made."}