{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/263034557", "html_url": "https://github.com/tensorflow/tensorflow/issues/5861#issuecomment-263034557", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/5861", "id": 263034557, "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzAzNDU1Nw==", "user": {"login": "FelixGruen", "id": 15670778, "node_id": "MDQ6VXNlcjE1NjcwNzc4", "avatar_url": "https://avatars0.githubusercontent.com/u/15670778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FelixGruen", "html_url": "https://github.com/FelixGruen", "followers_url": "https://api.github.com/users/FelixGruen/followers", "following_url": "https://api.github.com/users/FelixGruen/following{/other_user}", "gists_url": "https://api.github.com/users/FelixGruen/gists{/gist_id}", "starred_url": "https://api.github.com/users/FelixGruen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FelixGruen/subscriptions", "organizations_url": "https://api.github.com/users/FelixGruen/orgs", "repos_url": "https://api.github.com/users/FelixGruen/repos", "events_url": "https://api.github.com/users/FelixGruen/events{/privacy}", "received_events_url": "https://api.github.com/users/FelixGruen/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-26T00:11:55Z", "updated_at": "2016-11-26T00:11:55Z", "author_association": "NONE", "body_html": "<p>Thanks for your response. Actually I have found the problem in the meantime. <code>optimizer.compute_gradients</code> returns <code>None</code> as the gradient value for all variables not related to its input and <code>session.run</code> throws an error when you pass it a <code>None</code> value. Both are expected behaviour individually and I just didn't think of the connection, so I'm going to close this issue and would like to apologise for the trouble.</p>\n<p>Regarding the last part of your comment: I call <code>session.run</code> on the gradients because I'm interested in their value. I just passed the output of <code>optimizer.compute_gradients</code> as is to <code>session.run</code> because I wanted to keep the example as simple as possible. In my code I actually do <code>grads = sess.run([grad for grad, _ in grad_op])</code>. I did a bit of googling and apparently you had to use the second approach in previous versions of tf, but now the first one works too (apart from the <code>None</code> values ;)</p>", "body_text": "Thanks for your response. Actually I have found the problem in the meantime. optimizer.compute_gradients returns None as the gradient value for all variables not related to its input and session.run throws an error when you pass it a None value. Both are expected behaviour individually and I just didn't think of the connection, so I'm going to close this issue and would like to apologise for the trouble.\nRegarding the last part of your comment: I call session.run on the gradients because I'm interested in their value. I just passed the output of optimizer.compute_gradients as is to session.run because I wanted to keep the example as simple as possible. In my code I actually do grads = sess.run([grad for grad, _ in grad_op]). I did a bit of googling and apparently you had to use the second approach in previous versions of tf, but now the first one works too (apart from the None values ;)", "body": "Thanks for your response. Actually I have found the problem in the meantime. `optimizer.compute_gradients` returns `None` as the gradient value for all variables not related to its input and `session.run` throws an error when you pass it a `None` value. Both are expected behaviour individually and I just didn't think of the connection, so I'm going to close this issue and would like to apologise for the trouble.\r\n\r\nRegarding the last part of your comment: I call `session.run` on the gradients because I'm interested in their value. I just passed the output of `optimizer.compute_gradients` as is to `session.run` because I wanted to keep the example as simple as possible. In my code I actually do `grads = sess.run([grad for grad, _ in grad_op])`. I did a bit of googling and apparently you had to use the second approach in previous versions of tf, but now the first one works too (apart from the `None` values ;)"}