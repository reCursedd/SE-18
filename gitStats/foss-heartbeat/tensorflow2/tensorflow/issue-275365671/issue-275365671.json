{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14724", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14724/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14724/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/14724/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/14724", "id": 275365671, "node_id": "MDU6SXNzdWUyNzUzNjU2NzE=", "number": 14724, "title": "Using GPU mnist_deep.py throws OOM when allocating tensor with shape...", "user": {"login": "wolverine2k", "id": 1121738, "node_id": "MDQ6VXNlcjExMjE3Mzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1121738?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wolverine2k", "html_url": "https://github.com/wolverine2k", "followers_url": "https://api.github.com/users/wolverine2k/followers", "following_url": "https://api.github.com/users/wolverine2k/following{/other_user}", "gists_url": "https://api.github.com/users/wolverine2k/gists{/gist_id}", "starred_url": "https://api.github.com/users/wolverine2k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wolverine2k/subscriptions", "organizations_url": "https://api.github.com/users/wolverine2k/orgs", "repos_url": "https://api.github.com/users/wolverine2k/repos", "events_url": "https://api.github.com/users/wolverine2k/events{/privacy}", "received_events_url": "https://api.github.com/users/wolverine2k/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-11-20T14:02:11Z", "updated_at": "2017-11-22T11:15:23Z", "closed_at": "2017-11-22T08:14:13Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No, I am using the mnist_deep.py with tensorflow 1.4.0</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: Windows 10 &amp; Tensorflow 1.4.0 binary installation, Linux Ubuntu 16.04 &amp; Tensorflow 1.4.0 built form source</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Windows 10 installed with TF binary, Linux Ubuntu 16.04 TF built from source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.4.0</li>\n<li><strong>Python version</strong>: 3.6.2 on Windows 10, 3.5.2 on Linux</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.7.0</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: 5.4.0</li>\n<li><strong>CUDA/cuDNN version</strong>: CUDA 8.0, CuDNN 6.0</li>\n<li><strong>GPU model and memory</strong>: For Windows 10: NVIDIA GeForce 940MX, For Linux: HW similar to NVIDIA Jetson TX2</li>\n<li><strong>Exact command to reproduce</strong>: python mnist_deep.py</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>The mnist_deep.py sample given in Tensorflow examples/tutorials works fine when run on CPU. But when the same example is run using GPU, an OOM occurs when trying to allocate memory for tensor (specifically 10000) in both the cases. It does not matter if one increases/decreases the number of iterations to train the model, the OOM occurs even after a single iteration is executed.</p>\n<p>The other examples like mnist.py, mnist_softmax.py, mnist_softmax_xla.py, etc. runs properly without any issues on the GPU. I have also tried to use the config_proto options but none of them seem to help.</p>\n<h3>Source code / logs</h3>\n<hr>\n<h4>Windows 10:</h4>\n<p>tensor_name=\"edge_75_Mean_1\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"]()]]</p>\n<p>Caused by op 'conv1/Conv2D', defined at:<br>\n\u00a0 File \"mnist_deep.py\", line 176, in <br>\n\u00a0\u00a0\u00a0 tf.app.run(main=main, argv=[sys.argv[0]] + unparsed)<br>\n\u00a0 File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\platform\\app.py\", line 48, in run<br>\n\u00a0\u00a0\u00a0 _sys.exit(main(_sys.argv[:1] + flags_passthrough))<br>\n\u00a0 File \"mnist_deep.py\", line 137, in main<br>\n\u00a0\u00a0\u00a0 y_conv, keep_prob = deepnn(x)<br>\n\u00a0 File \"mnist_deep.py\", line 63, in deepnn<br>\n\u00a0\u00a0\u00a0 h_conv1 = tf.nn.relu(conv2d(x_image, W_conv1) + b_conv1)<br>\n\u00a0 File \"mnist_deep.py\", line 105, in conv2d<br>\n\u00a0\u00a0\u00a0 return tf.nn.conv2d(x, W, strides=[1, 1, 1, 1], padding='SAME')<br>\n\u00a0 File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\ops\\gen_nn_ops.py\", line 630, in conv2d<br>\n\u00a0\u00a0\u00a0 data_format=data_format, name=name)<br>\n\u00a0 File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 787, in _apply_op_helper<br>\n\u00a0\u00a0\u00a0 op_def=op_def)<br>\n\u00a0 File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 2956, in create_op<br>\n\u00a0\u00a0\u00a0 op_def=op_def)<br>\n\u00a0 File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1470, in <strong>init</strong><br>\n\u00a0\u00a0\u00a0 self._traceback = self._graph._extract_stack()\u00a0 # pylint: disable=protected-access</p>\n<p>ResourceExhaustedError (see above for traceback): OOM when allocating tensor with shape[10000,32,28,28]<br>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 [[Node: conv1/Conv2D = Conv2D[T=DT_FLOAT, data_format=\"NHWC\", padding=\"SAME\", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](reshape/Reshape, conv1/Variable/read)]]<br>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 [[Node: Mean_1/_7 = _Recv<a href=\"\">client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device_incarnation=1, tensor_name=\"edge_75_Mean_1\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"</a>]]</p>\n<hr>\n<p>####Linux:<br>\ntensor_name=\"edge_75_Mean_1\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"]()]]</p>\n<p>Caused by op 'conv1/Conv2D', defined at:<br>\n\u00a0 File \"mnist_deep.py\", line 176, in <br>\n\u00a0\u00a0\u00a0 tf.app.run(main=main, argv=[sys.argv[0]] + unparsed)<br>\n\u00a0 File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\platform\\app.py\", line 48, in run<br>\n\u00a0\u00a0\u00a0 _sys.exit(main(_sys.argv[:1] + flags_passthrough))<br>\n\u00a0 File \"mnist_deep.py\", line 137, in main<br>\n\u00a0\u00a0\u00a0 y_conv, keep_prob = deepnn(x)<br>\n\u00a0 File \"mnist_deep.py\", line 63, in deepnn<br>\n\u00a0\u00a0\u00a0 h_conv1 = tf.nn.relu(conv2d(x_image, W_conv1) + b_conv1)<br>\n\u00a0 File \"mnist_deep.py\", line 105, in conv2d<br>\n\u00a0\u00a0\u00a0 return tf.nn.conv2d(x, W, strides=[1, 1, 1, 1], padding='SAME')<br>\n\u00a0 File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\ops\\gen_nn_ops.py\", line 630, in conv2d<br>\n\u00a0\u00a0\u00a0 data_format=data_format, name=name)<br>\n\u00a0 File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 787, in _apply_op_helper<br>\n\u00a0\u00a0\u00a0 op_def=op_def)<br>\n\u00a0 File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 2956, in create_op<br>\n\u00a0\u00a0\u00a0 op_def=op_def)<br>\n\u00a0 File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1470, in <strong>init</strong><br>\n\u00a0\u00a0\u00a0 self._traceback = self._graph._extract_stack()\u00a0 # pylint: disable=protected-access</p>\n<p>ResourceExhaustedError (see above for traceback): OOM when allocating tensor with shape[10000,32,28,28]<br>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 [[Node: conv1/Conv2D = Conv2D[T=DT_FLOAT, data_format=\"NHWC\", padding=\"SAME\", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](reshape/Reshape, conv1/Variable/read)]]<br>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 [[Node: Mean_1/_7 = _Recv<a href=\"\">client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device_incarnation=1, tensor_name=\"edge_75_Mean_1\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"</a>]]</p>\n<hr>\n<p>Further detailed logs can be attached if needed. Your help and pointers to solve this will be much appreciated.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No, I am using the mnist_deep.py with tensorflow 1.4.0\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): Windows 10 & Tensorflow 1.4.0 binary installation, Linux Ubuntu 16.04 & Tensorflow 1.4.0 built form source\nTensorFlow installed from (source or binary): Windows 10 installed with TF binary, Linux Ubuntu 16.04 TF built from source\nTensorFlow version (use command below): 1.4.0\nPython version: 3.6.2 on Windows 10, 3.5.2 on Linux\nBazel version (if compiling from source): 0.7.0\nGCC/Compiler version (if compiling from source): 5.4.0\nCUDA/cuDNN version: CUDA 8.0, CuDNN 6.0\nGPU model and memory: For Windows 10: NVIDIA GeForce 940MX, For Linux: HW similar to NVIDIA Jetson TX2\nExact command to reproduce: python mnist_deep.py\n\nDescribe the problem\nThe mnist_deep.py sample given in Tensorflow examples/tutorials works fine when run on CPU. But when the same example is run using GPU, an OOM occurs when trying to allocate memory for tensor (specifically 10000) in both the cases. It does not matter if one increases/decreases the number of iterations to train the model, the OOM occurs even after a single iteration is executed.\nThe other examples like mnist.py, mnist_softmax.py, mnist_softmax_xla.py, etc. runs properly without any issues on the GPU. I have also tried to use the config_proto options but none of them seem to help.\nSource code / logs\n\nWindows 10:\ntensor_name=\"edge_75_Mean_1\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"]()]]\nCaused by op 'conv1/Conv2D', defined at:\n\u00a0 File \"mnist_deep.py\", line 176, in \n\u00a0\u00a0\u00a0 tf.app.run(main=main, argv=[sys.argv[0]] + unparsed)\n\u00a0 File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\platform\\app.py\", line 48, in run\n\u00a0\u00a0\u00a0 _sys.exit(main(_sys.argv[:1] + flags_passthrough))\n\u00a0 File \"mnist_deep.py\", line 137, in main\n\u00a0\u00a0\u00a0 y_conv, keep_prob = deepnn(x)\n\u00a0 File \"mnist_deep.py\", line 63, in deepnn\n\u00a0\u00a0\u00a0 h_conv1 = tf.nn.relu(conv2d(x_image, W_conv1) + b_conv1)\n\u00a0 File \"mnist_deep.py\", line 105, in conv2d\n\u00a0\u00a0\u00a0 return tf.nn.conv2d(x, W, strides=[1, 1, 1, 1], padding='SAME')\n\u00a0 File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\ops\\gen_nn_ops.py\", line 630, in conv2d\n\u00a0\u00a0\u00a0 data_format=data_format, name=name)\n\u00a0 File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 787, in _apply_op_helper\n\u00a0\u00a0\u00a0 op_def=op_def)\n\u00a0 File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 2956, in create_op\n\u00a0\u00a0\u00a0 op_def=op_def)\n\u00a0 File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1470, in init\n\u00a0\u00a0\u00a0 self._traceback = self._graph._extract_stack()\u00a0 # pylint: disable=protected-access\nResourceExhaustedError (see above for traceback): OOM when allocating tensor with shape[10000,32,28,28]\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 [[Node: conv1/Conv2D = Conv2D[T=DT_FLOAT, data_format=\"NHWC\", padding=\"SAME\", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](reshape/Reshape, conv1/Variable/read)]]\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 [[Node: Mean_1/_7 = _Recvclient_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device_incarnation=1, tensor_name=\"edge_75_Mean_1\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"]]\n\n####Linux:\ntensor_name=\"edge_75_Mean_1\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"]()]]\nCaused by op 'conv1/Conv2D', defined at:\n\u00a0 File \"mnist_deep.py\", line 176, in \n\u00a0\u00a0\u00a0 tf.app.run(main=main, argv=[sys.argv[0]] + unparsed)\n\u00a0 File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\platform\\app.py\", line 48, in run\n\u00a0\u00a0\u00a0 _sys.exit(main(_sys.argv[:1] + flags_passthrough))\n\u00a0 File \"mnist_deep.py\", line 137, in main\n\u00a0\u00a0\u00a0 y_conv, keep_prob = deepnn(x)\n\u00a0 File \"mnist_deep.py\", line 63, in deepnn\n\u00a0\u00a0\u00a0 h_conv1 = tf.nn.relu(conv2d(x_image, W_conv1) + b_conv1)\n\u00a0 File \"mnist_deep.py\", line 105, in conv2d\n\u00a0\u00a0\u00a0 return tf.nn.conv2d(x, W, strides=[1, 1, 1, 1], padding='SAME')\n\u00a0 File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\ops\\gen_nn_ops.py\", line 630, in conv2d\n\u00a0\u00a0\u00a0 data_format=data_format, name=name)\n\u00a0 File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 787, in _apply_op_helper\n\u00a0\u00a0\u00a0 op_def=op_def)\n\u00a0 File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 2956, in create_op\n\u00a0\u00a0\u00a0 op_def=op_def)\n\u00a0 File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1470, in init\n\u00a0\u00a0\u00a0 self._traceback = self._graph._extract_stack()\u00a0 # pylint: disable=protected-access\nResourceExhaustedError (see above for traceback): OOM when allocating tensor with shape[10000,32,28,28]\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 [[Node: conv1/Conv2D = Conv2D[T=DT_FLOAT, data_format=\"NHWC\", padding=\"SAME\", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](reshape/Reshape, conv1/Variable/read)]]\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 [[Node: Mean_1/_7 = _Recvclient_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device_incarnation=1, tensor_name=\"edge_75_Mean_1\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"]]\n\nFurther detailed logs can be attached if needed. Your help and pointers to solve this will be much appreciated.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No, I am using the mnist_deep.py with tensorflow 1.4.0\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: Windows 10 & Tensorflow 1.4.0 binary installation, Linux Ubuntu 16.04 & Tensorflow 1.4.0 built form source\r\n- **TensorFlow installed from (source or binary)**: Windows 10 installed with TF binary, Linux Ubuntu 16.04 TF built from source\r\n- **TensorFlow version (use command below)**: 1.4.0\r\n- **Python version**: 3.6.2 on Windows 10, 3.5.2 on Linux\r\n- **Bazel version (if compiling from source)**: 0.7.0\r\n- **GCC/Compiler version (if compiling from source)**: 5.4.0\r\n- **CUDA/cuDNN version**: CUDA 8.0, CuDNN 6.0 \r\n- **GPU model and memory**: For Windows 10: NVIDIA GeForce 940MX, For Linux: HW similar to NVIDIA Jetson TX2\r\n- **Exact command to reproduce**: python mnist_deep.py\r\n\r\n### Describe the problem\r\nThe mnist_deep.py sample given in Tensorflow examples/tutorials works fine when run on CPU. But when the same example is run using GPU, an OOM occurs when trying to allocate memory for tensor (specifically 10000) in both the cases. It does not matter if one increases/decreases the number of iterations to train the model, the OOM occurs even after a single iteration is executed.\r\n\r\nThe other examples like mnist.py, mnist_softmax.py, mnist_softmax_xla.py, etc. runs properly without any issues on the GPU. I have also tried to use the config_proto options but none of them seem to help.\r\n\r\n### Source code / logs\r\n************************************************\r\n#### Windows 10:\r\ntensor_name=\"edge_75_Mean_1\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"]()]]\r\n\r\nCaused by op 'conv1/Conv2D', defined at:\r\n\u00a0 File \"mnist_deep.py\", line 176, in <module>\r\n\u00a0\u00a0\u00a0 tf.app.run(main=main, argv=[sys.argv[0]] + unparsed)\r\n\u00a0 File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\platform\\app.py\", line 48, in run\r\n\u00a0\u00a0\u00a0 _sys.exit(main(_sys.argv[:1] + flags_passthrough))\r\n\u00a0 File \"mnist_deep.py\", line 137, in main\r\n\u00a0\u00a0\u00a0 y_conv, keep_prob = deepnn(x)\r\n\u00a0 File \"mnist_deep.py\", line 63, in deepnn\r\n\u00a0\u00a0\u00a0 h_conv1 = tf.nn.relu(conv2d(x_image, W_conv1) + b_conv1)\r\n\u00a0 File \"mnist_deep.py\", line 105, in conv2d\r\n\u00a0\u00a0\u00a0 return tf.nn.conv2d(x, W, strides=[1, 1, 1, 1], padding='SAME')\r\n\u00a0 File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\ops\\gen_nn_ops.py\", line 630, in conv2d\r\n\u00a0\u00a0\u00a0 data_format=data_format, name=name)\r\n\u00a0 File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 787, in _apply_op_helper\r\n\u00a0\u00a0\u00a0 op_def=op_def)\r\n\u00a0 File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 2956, in create_op\r\n\u00a0\u00a0\u00a0 op_def=op_def)\r\n\u00a0 File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1470, in __init__\r\n\u00a0\u00a0\u00a0 self._traceback = self._graph._extract_stack()\u00a0 # pylint: disable=protected-access\r\n\r\nResourceExhaustedError (see above for traceback): OOM when allocating tensor with shape[10000,32,28,28]\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 [[Node: conv1/Conv2D = Conv2D[T=DT_FLOAT, data_format=\"NHWC\", padding=\"SAME\", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](reshape/Reshape, conv1/Variable/read)]]\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 [[Node: Mean_1/_7 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device_incarnation=1, tensor_name=\"edge_75_Mean_1\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"]()]]\r\n************************************************\r\n####Linux:\r\ntensor_name=\"edge_75_Mean_1\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"]()]]\r\n\r\nCaused by op 'conv1/Conv2D', defined at:\r\n\u00a0 File \"mnist_deep.py\", line 176, in <module>\r\n\u00a0\u00a0\u00a0 tf.app.run(main=main, argv=[sys.argv[0]] + unparsed)\r\n\u00a0 File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\platform\\app.py\", line 48, in run\r\n\u00a0\u00a0\u00a0 _sys.exit(main(_sys.argv[:1] + flags_passthrough))\r\n\u00a0 File \"mnist_deep.py\", line 137, in main\r\n\u00a0\u00a0\u00a0 y_conv, keep_prob = deepnn(x)\r\n\u00a0 File \"mnist_deep.py\", line 63, in deepnn\r\n\u00a0\u00a0\u00a0 h_conv1 = tf.nn.relu(conv2d(x_image, W_conv1) + b_conv1)\r\n\u00a0 File \"mnist_deep.py\", line 105, in conv2d\r\n\u00a0\u00a0\u00a0 return tf.nn.conv2d(x, W, strides=[1, 1, 1, 1], padding='SAME')\r\n\u00a0 File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\ops\\gen_nn_ops.py\", line 630, in conv2d\r\n\u00a0\u00a0\u00a0 data_format=data_format, name=name)\r\n\u00a0 File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\op_def_library.py\", line 787, in _apply_op_helper\r\n\u00a0\u00a0\u00a0 op_def=op_def)\r\n\u00a0 File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 2956, in create_op\r\n\u00a0\u00a0\u00a0 op_def=op_def)\r\n\u00a0 File \"C:\\Program Files\\Python36\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1470, in __init__\r\n\u00a0\u00a0\u00a0 self._traceback = self._graph._extract_stack()\u00a0 # pylint: disable=protected-access\r\n\r\nResourceExhaustedError (see above for traceback): OOM when allocating tensor with shape[10000,32,28,28]\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 [[Node: conv1/Conv2D = Conv2D[T=DT_FLOAT, data_format=\"NHWC\", padding=\"SAME\", strides=[1, 1, 1, 1], use_cudnn_on_gpu=true, _device=\"/job:localhost/replica:0/task:0/device:GPU:0\"](reshape/Reshape, conv1/Variable/read)]]\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 [[Node: Mean_1/_7 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/device:CPU:0\", send_device=\"/job:localhost/replica:0/task:0/device:GPU:0\", send_device_incarnation=1, tensor_name=\"edge_75_Mean_1\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/device:CPU:0\"]()]]\r\n************************************************\r\n\r\nFurther detailed logs can be attached if needed. Your help and pointers to solve this will be much appreciated."}