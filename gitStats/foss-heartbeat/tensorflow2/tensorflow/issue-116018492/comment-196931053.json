{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/196931053", "html_url": "https://github.com/tensorflow/tensorflow/issues/70#issuecomment-196931053", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/70", "id": 196931053, "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjkzMTA1Mw==", "user": {"login": "nodirt", "id": 643254, "node_id": "MDQ6VXNlcjY0MzI1NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/643254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nodirt", "html_url": "https://github.com/nodirt", "followers_url": "https://api.github.com/users/nodirt/followers", "following_url": "https://api.github.com/users/nodirt/following{/other_user}", "gists_url": "https://api.github.com/users/nodirt/gists{/gist_id}", "starred_url": "https://api.github.com/users/nodirt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nodirt/subscriptions", "organizations_url": "https://api.github.com/users/nodirt/orgs", "repos_url": "https://api.github.com/users/nodirt/repos", "events_url": "https://api.github.com/users/nodirt/events{/privacy}", "received_events_url": "https://api.github.com/users/nodirt/received_events", "type": "User", "site_admin": false}, "created_at": "2016-03-15T17:16:25Z", "updated_at": "2016-03-15T17:49:25Z", "author_association": "NONE", "body_html": "<p>I started experimenting with Go support for TensorFlow and stumbled on need for a common DSL too.</p>\n<p>Writing a new internal DSL in Go (or C#, or Ruby, etc) is an option, but in that case there would be two or more ways to define a graph. A Go developer who became accustomed to defining graphs in Go may have a trouble understanding a graph definition in Python, and vice versa. So, I don't think each language should define its own way of defining a graph, there should be one way.</p>\n<p>At the same time, I see \"Graph construction\" in <a href=\"https://www.tensorflow.org/versions/r0.7/resources/roadmap.html#improve-support-for-c-only-users\" rel=\"nofollow\">Improve support for C++ only users</a> roadmap item. Does this mean C++ will have its own internal DSL for graph construction? That would be unfortunate.</p>\n<p>I'd be much more in favor of one DSL that compiles to GraphDef file that can be loaded in Python/C++/Go/etc. Alternatively, the C++ backend could have a dsl parser, so dsl does not need to be compiled.</p>", "body_text": "I started experimenting with Go support for TensorFlow and stumbled on need for a common DSL too.\nWriting a new internal DSL in Go (or C#, or Ruby, etc) is an option, but in that case there would be two or more ways to define a graph. A Go developer who became accustomed to defining graphs in Go may have a trouble understanding a graph definition in Python, and vice versa. So, I don't think each language should define its own way of defining a graph, there should be one way.\nAt the same time, I see \"Graph construction\" in Improve support for C++ only users roadmap item. Does this mean C++ will have its own internal DSL for graph construction? That would be unfortunate.\nI'd be much more in favor of one DSL that compiles to GraphDef file that can be loaded in Python/C++/Go/etc. Alternatively, the C++ backend could have a dsl parser, so dsl does not need to be compiled.", "body": "I started experimenting with Go support for TensorFlow and stumbled on need for a common DSL too.\n\nWriting a new internal DSL in Go (or C#, or Ruby, etc) is an option, but in that case there would be two or more ways to define a graph. A Go developer who became accustomed to defining graphs in Go may have a trouble understanding a graph definition in Python, and vice versa. So, I don't think each language should define its own way of defining a graph, there should be one way.\n\nAt the same time, I see \"Graph construction\" in [Improve support for C++ only users](https://www.tensorflow.org/versions/r0.7/resources/roadmap.html#improve-support-for-c-only-users) roadmap item. Does this mean C++ will have its own internal DSL for graph construction? That would be unfortunate.\n\nI'd be much more in favor of one DSL that compiles to GraphDef file that can be loaded in Python/C++/Go/etc. Alternatively, the C++ backend could have a dsl parser, so dsl does not need to be compiled.\n"}