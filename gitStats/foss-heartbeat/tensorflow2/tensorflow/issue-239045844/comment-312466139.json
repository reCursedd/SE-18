{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/312466139", "html_url": "https://github.com/tensorflow/tensorflow/issues/11098#issuecomment-312466139", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/11098", "id": 312466139, "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjQ2NjEzOQ==", "user": {"login": "korepwx", "id": 1984627, "node_id": "MDQ6VXNlcjE5ODQ2Mjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1984627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/korepwx", "html_url": "https://github.com/korepwx", "followers_url": "https://api.github.com/users/korepwx/followers", "following_url": "https://api.github.com/users/korepwx/following{/other_user}", "gists_url": "https://api.github.com/users/korepwx/gists{/gist_id}", "starred_url": "https://api.github.com/users/korepwx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/korepwx/subscriptions", "organizations_url": "https://api.github.com/users/korepwx/orgs", "repos_url": "https://api.github.com/users/korepwx/repos", "events_url": "https://api.github.com/users/korepwx/events{/privacy}", "received_events_url": "https://api.github.com/users/korepwx/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-02T02:06:24Z", "updated_at": "2017-07-02T02:38:39Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=184424\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ali01\">@ali01</a></p>\n<p>I think your justification is weird.  Take a look at the documentation of <a href=\"https://www.tensorflow.org/api_docs/python/tf/control_dependencies\" rel=\"nofollow\">tf.control_dependencies</a>:</p>\n<blockquote>\n<p><code>control_inputs</code>: A list of Operation or Tensor objects which must be executed or computed before running the operations defined in the context. Can also be None to clear the control dependencies.</p>\n</blockquote>\n<p>I have fed <code>tf.check_numerics</code> into <code>tf.control_dependencies</code> via <code>control_inputs</code>, no matter what it is, it should have been executed before any operation in the context being called.  And since I set <code>x = tf.identity(x)</code> within this control dependencies context, when <code>x.eval()</code> is being executed, the <code>tf.check_numerics</code> should have been done.</p>\n<p>However, it turns out not to have been called.  As a contrary, if you replace <code>tf.check_numerics</code> by <code>tf.Print</code>, you will see the value of x, right there in the output.  So I think there must be something wrong with <code>tf.check_numerics</code> and <code>tf.control_dependencies</code>.</p>", "body_text": "@ali01\nI think your justification is weird.  Take a look at the documentation of tf.control_dependencies:\n\ncontrol_inputs: A list of Operation or Tensor objects which must be executed or computed before running the operations defined in the context. Can also be None to clear the control dependencies.\n\nI have fed tf.check_numerics into tf.control_dependencies via control_inputs, no matter what it is, it should have been executed before any operation in the context being called.  And since I set x = tf.identity(x) within this control dependencies context, when x.eval() is being executed, the tf.check_numerics should have been done.\nHowever, it turns out not to have been called.  As a contrary, if you replace tf.check_numerics by tf.Print, you will see the value of x, right there in the output.  So I think there must be something wrong with tf.check_numerics and tf.control_dependencies.", "body": "@ali01 \r\n\r\nI think your justification is weird.  Take a look at the documentation of [tf.control_dependencies](https://www.tensorflow.org/api_docs/python/tf/control_dependencies):\r\n\r\n>  `control_inputs`: A list of Operation or Tensor objects which must be executed or computed before running the operations defined in the context. Can also be None to clear the control dependencies.\r\n\r\nI have fed `tf.check_numerics` into `tf.control_dependencies` via `control_inputs`, no matter what it is, it should have been executed before any operation in the context being called.  And since I set `x = tf.identity(x)` within this control dependencies context, when `x.eval()` is being executed, the `tf.check_numerics` should have been done.\r\n\r\nHowever, it turns out not to have been called.  As a contrary, if you replace `tf.check_numerics` by `tf.Print`, you will see the value of x, right there in the output.  So I think there must be something wrong with `tf.check_numerics` and `tf.control_dependencies`."}