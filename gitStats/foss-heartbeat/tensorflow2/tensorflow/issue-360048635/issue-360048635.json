{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22259", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22259/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22259/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22259/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22259", "id": 360048635, "node_id": "MDU6SXNzdWUzNjAwNDg2MzU=", "number": 22259, "title": "`tf.nn.softmax` gives an error at execution time for certain empty inputs", "user": {"login": "daniel-ziegler", "id": 1620154, "node_id": "MDQ6VXNlcjE2MjAxNTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1620154?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daniel-ziegler", "html_url": "https://github.com/daniel-ziegler", "followers_url": "https://api.github.com/users/daniel-ziegler/followers", "following_url": "https://api.github.com/users/daniel-ziegler/following{/other_user}", "gists_url": "https://api.github.com/users/daniel-ziegler/gists{/gist_id}", "starred_url": "https://api.github.com/users/daniel-ziegler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daniel-ziegler/subscriptions", "organizations_url": "https://api.github.com/users/daniel-ziegler/orgs", "repos_url": "https://api.github.com/users/daniel-ziegler/repos", "events_url": "https://api.github.com/users/daniel-ziegler/events{/privacy}", "received_events_url": "https://api.github.com/users/daniel-ziegler/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 386191887, "node_id": "MDU6TGFiZWwzODYxOTE4ODc=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:awaiting%20response", "name": "stat:awaiting response", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rmlarsen", "id": 16907534, "node_id": "MDQ6VXNlcjE2OTA3NTM0", "avatar_url": "https://avatars2.githubusercontent.com/u/16907534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmlarsen", "html_url": "https://github.com/rmlarsen", "followers_url": "https://api.github.com/users/rmlarsen/followers", "following_url": "https://api.github.com/users/rmlarsen/following{/other_user}", "gists_url": "https://api.github.com/users/rmlarsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmlarsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmlarsen/subscriptions", "organizations_url": "https://api.github.com/users/rmlarsen/orgs", "repos_url": "https://api.github.com/users/rmlarsen/repos", "events_url": "https://api.github.com/users/rmlarsen/events{/privacy}", "received_events_url": "https://api.github.com/users/rmlarsen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-09-13T20:12:41Z", "updated_at": "2018-09-24T15:34:51Z", "closed_at": "2018-09-24T15:34:51Z", "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: Yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: macOS High Sierra (10.13.6)</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: n/a</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: v1.10.0-12-g4dcfddc5d1 1.10.1</li>\n<li><strong>Python version</strong>: 3.6.4 (Anaconda)</li>\n<li><strong>Bazel version (if compiling from source)</strong>: n/a</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: n/a</li>\n<li><strong>CUDA/cuDNN version</strong>: n/a</li>\n<li><strong>GPU model and memory</strong>: n/a</li>\n<li><strong>Exact command to reproduce</strong>: n/a</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>When the softmax axis has length 0 and rank of the tensor is not 2, <code>tf.nn.softmax</code> gives an error at execution time:</p>\n<pre><code>  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/nn_ops.py\", line 1612, in _flatten_outer_dims\n    output = array_ops.reshape(logits, array_ops.concat([[-1], last_dim_size], 0))\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 6222, in reshape\n    _six.raise_from(_core._status_to_exception(e.code, message), None)\n  File \"&lt;string&gt;\", line 3, in raise_from\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero [Op:Reshape]\n</code></pre>\n<p>I'd expect it to instead just give back a tensor of the same shape (also empty).</p>\n<p>For example, <code>tf.nn.softmax(tf.zeros([0]))</code> and <code>tf.nn.softmax(tf.zeros([16,16,0]))</code> fail, but <code>tf.nn.softmax(tf.zeros([16,0]))</code> works (since no reshape needs to be performed).</p>\n<p>This seems to happen because <code>_flatten_outer_dims</code> in <code>nn_ops.py</code> uses <code>-1</code> as a dimension in a <code>reshape</code>.</p>\n<h3>Source code / logs</h3>\n<p>Here's an interactive session with eager execution that demonstrates the problem. It happens the same way without eager execution.</p>\n<pre><code>Python 3.6.4 |Anaconda custom (64-bit)| (default, Jan 16 2018, 12:04:33)\n[GCC 4.2.1 Compatible Clang 4.0.1 (tags/RELEASE_401/final)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; import tensorflow as tf\n&gt;&gt;&gt; tf.enable_eager_execution()\n&gt;&gt;&gt; tf.nn.softmax(tf.zeros([0]))\n2018-09-13 13:08:55.015409: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py\", line 454, in new_func\n    return func(*args, **kwargs)\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/nn_ops.py\", line 1738, in softmax\n    return _softmax(logits, gen_nn_ops.softmax, axis, name)\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/nn_ops.py\", line 1679, in _softmax\n    logits = _flatten_outer_dims(logits)\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/nn_ops.py\", line 1612, in _flatten_outer_dims\n    output = array_ops.reshape(logits, array_ops.concat([[-1], last_dim_size], 0))\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 6222, in reshape\n    _six.raise_from(_core._status_to_exception(e.code, message), None)\n  File \"&lt;string&gt;\", line 3, in raise_from\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero [Op:Reshape]\n&gt;&gt;&gt; tf.nn.softmax(tf.zeros([16,0]))\n&lt;tf.Tensor: id=17, shape=(16, 0), dtype=float32, numpy=array([], shape=(16, 0), dtype=float32)&gt;\n&gt;&gt;&gt; tf.nn.softmax(tf.zeros([16,16,0]))\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py\", line 454, in new_func\n    return func(*args, **kwargs)\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/nn_ops.py\", line 1738, in softmax\n    return _softmax(logits, gen_nn_ops.softmax, axis, name)\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/nn_ops.py\", line 1679, in _softmax\n    logits = _flatten_outer_dims(logits)\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/nn_ops.py\", line 1612, in _flatten_outer_dims\n    output = array_ops.reshape(logits, array_ops.concat([[-1], last_dim_size], 0))\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 6222, in reshape\n    _six.raise_from(_core._status_to_exception(e.code, message), None)\n  File \"&lt;string&gt;\", line 3, in raise_from\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero [Op:Reshape]\n&gt;&gt;&gt;\n</code></pre>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): Yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS High Sierra (10.13.6)\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: n/a\nTensorFlow installed from (source or binary): binary\nTensorFlow version (use command below): v1.10.0-12-g4dcfddc5d1 1.10.1\nPython version: 3.6.4 (Anaconda)\nBazel version (if compiling from source): n/a\nGCC/Compiler version (if compiling from source): n/a\nCUDA/cuDNN version: n/a\nGPU model and memory: n/a\nExact command to reproduce: n/a\n\nDescribe the problem\nWhen the softmax axis has length 0 and rank of the tensor is not 2, tf.nn.softmax gives an error at execution time:\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/nn_ops.py\", line 1612, in _flatten_outer_dims\n    output = array_ops.reshape(logits, array_ops.concat([[-1], last_dim_size], 0))\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 6222, in reshape\n    _six.raise_from(_core._status_to_exception(e.code, message), None)\n  File \"<string>\", line 3, in raise_from\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero [Op:Reshape]\n\nI'd expect it to instead just give back a tensor of the same shape (also empty).\nFor example, tf.nn.softmax(tf.zeros([0])) and tf.nn.softmax(tf.zeros([16,16,0])) fail, but tf.nn.softmax(tf.zeros([16,0])) works (since no reshape needs to be performed).\nThis seems to happen because _flatten_outer_dims in nn_ops.py uses -1 as a dimension in a reshape.\nSource code / logs\nHere's an interactive session with eager execution that demonstrates the problem. It happens the same way without eager execution.\nPython 3.6.4 |Anaconda custom (64-bit)| (default, Jan 16 2018, 12:04:33)\n[GCC 4.2.1 Compatible Clang 4.0.1 (tags/RELEASE_401/final)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import tensorflow as tf\n>>> tf.enable_eager_execution()\n>>> tf.nn.softmax(tf.zeros([0]))\n2018-09-13 13:08:55.015409: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py\", line 454, in new_func\n    return func(*args, **kwargs)\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/nn_ops.py\", line 1738, in softmax\n    return _softmax(logits, gen_nn_ops.softmax, axis, name)\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/nn_ops.py\", line 1679, in _softmax\n    logits = _flatten_outer_dims(logits)\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/nn_ops.py\", line 1612, in _flatten_outer_dims\n    output = array_ops.reshape(logits, array_ops.concat([[-1], last_dim_size], 0))\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 6222, in reshape\n    _six.raise_from(_core._status_to_exception(e.code, message), None)\n  File \"<string>\", line 3, in raise_from\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero [Op:Reshape]\n>>> tf.nn.softmax(tf.zeros([16,0]))\n<tf.Tensor: id=17, shape=(16, 0), dtype=float32, numpy=array([], shape=(16, 0), dtype=float32)>\n>>> tf.nn.softmax(tf.zeros([16,16,0]))\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py\", line 454, in new_func\n    return func(*args, **kwargs)\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/nn_ops.py\", line 1738, in softmax\n    return _softmax(logits, gen_nn_ops.softmax, axis, name)\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/nn_ops.py\", line 1679, in _softmax\n    logits = _flatten_outer_dims(logits)\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/nn_ops.py\", line 1612, in _flatten_outer_dims\n    output = array_ops.reshape(logits, array_ops.concat([[-1], last_dim_size], 0))\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 6222, in reshape\n    _six.raise_from(_core._status_to_exception(e.code, message), None)\n  File \"<string>\", line 3, in raise_from\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero [Op:Reshape]\n>>>", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: Yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: macOS High Sierra (10.13.6)\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: n/a\r\n- **TensorFlow installed from (source or binary)**: binary\r\n- **TensorFlow version (use command below)**: v1.10.0-12-g4dcfddc5d1 1.10.1\r\n- **Python version**: 3.6.4 (Anaconda)\r\n- **Bazel version (if compiling from source)**: n/a\r\n- **GCC/Compiler version (if compiling from source)**: n/a\r\n- **CUDA/cuDNN version**: n/a\r\n- **GPU model and memory**: n/a\r\n- **Exact command to reproduce**: n/a\r\n\r\n### Describe the problem\r\nWhen the softmax axis has length 0 and rank of the tensor is not 2, `tf.nn.softmax` gives an error at execution time:\r\n```\r\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/nn_ops.py\", line 1612, in _flatten_outer_dims\r\n    output = array_ops.reshape(logits, array_ops.concat([[-1], last_dim_size], 0))\r\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 6222, in reshape\r\n    _six.raise_from(_core._status_to_exception(e.code, message), None)\r\n  File \"<string>\", line 3, in raise_from\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero [Op:Reshape]\r\n```\r\nI'd expect it to instead just give back a tensor of the same shape (also empty).\r\n\r\nFor example, `tf.nn.softmax(tf.zeros([0]))` and `tf.nn.softmax(tf.zeros([16,16,0]))` fail, but `tf.nn.softmax(tf.zeros([16,0]))` works (since no reshape needs to be performed).\r\n\r\nThis seems to happen because `_flatten_outer_dims` in `nn_ops.py` uses `-1` as a dimension in a `reshape`. \r\n\r\n### Source code / logs\r\nHere's an interactive session with eager execution that demonstrates the problem. It happens the same way without eager execution.\r\n```\r\nPython 3.6.4 |Anaconda custom (64-bit)| (default, Jan 16 2018, 12:04:33)\r\n[GCC 4.2.1 Compatible Clang 4.0.1 (tags/RELEASE_401/final)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import tensorflow as tf\r\n>>> tf.enable_eager_execution()\r\n>>> tf.nn.softmax(tf.zeros([0]))\r\n2018-09-13 13:08:55.015409: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py\", line 454, in new_func\r\n    return func(*args, **kwargs)\r\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/nn_ops.py\", line 1738, in softmax\r\n    return _softmax(logits, gen_nn_ops.softmax, axis, name)\r\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/nn_ops.py\", line 1679, in _softmax\r\n    logits = _flatten_outer_dims(logits)\r\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/nn_ops.py\", line 1612, in _flatten_outer_dims\r\n    output = array_ops.reshape(logits, array_ops.concat([[-1], last_dim_size], 0))\r\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 6222, in reshape\r\n    _six.raise_from(_core._status_to_exception(e.code, message), None)\r\n  File \"<string>\", line 3, in raise_from\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero [Op:Reshape]\r\n>>> tf.nn.softmax(tf.zeros([16,0]))\r\n<tf.Tensor: id=17, shape=(16, 0), dtype=float32, numpy=array([], shape=(16, 0), dtype=float32)>\r\n>>> tf.nn.softmax(tf.zeros([16,16,0]))\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py\", line 454, in new_func\r\n    return func(*args, **kwargs)\r\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/nn_ops.py\", line 1738, in softmax\r\n    return _softmax(logits, gen_nn_ops.softmax, axis, name)\r\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/nn_ops.py\", line 1679, in _softmax\r\n    logits = _flatten_outer_dims(logits)\r\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/nn_ops.py\", line 1612, in _flatten_outer_dims\r\n    output = array_ops.reshape(logits, array_ops.concat([[-1], last_dim_size], 0))\r\n  File \"/Users/dmz/anaconda3/lib/python3.6/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 6222, in reshape\r\n    _six.raise_from(_core._status_to_exception(e.code, message), None)\r\n  File \"<string>\", line 3, in raise_from\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero [Op:Reshape]\r\n>>>\r\n```"}