{"url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/85967645", "pull_request_review_id": 6650569, "id": 85967645, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1OTY3NjQ1", "diff_hunk": "@@ -829,3 +829,45 @@ def _hessian_vector_product(ys, xs, v):\n \n   # Second backprop\n   return gradients(elemwise_products, xs)\n+\n+\n+def hessian(ys, x, name=\"hessian\", colocate_gradients_with_ops=False, \n+            gate_gradients=False, aggregation_method=None):\n+  \"\"\"Constructs the Hessian of sum of `ys` with respect to `x`.\n+\n+  `hessian()` adds ops to the graph to output the Hessian of `ys` with \n+  respect to `x` and returns a `Tensor`.\n+\n+  Args:\n+    ys: A `Tensor` or list of tensors to be differentiated.\n+    x: A `Tensor` to be used for differentiation.\n+    name: Optional name to use for grouping all the gradient ops together.\n+      defaults to 'gradients'.\n+    colocate_gradients_with_ops: If True, try colocating gradients with\n+      the corresponding op.\n+    gate_gradients: If True, add a tuple around the gradients returned\n+      for an operation.  This avoids some race conditions.\n+    aggregation_method: Specifies the method used to combine gradient terms.\n+      Accepted values are constants defined in the class `AggregationMethod`.\n+\n+  Returns:\n+    The hessian of `sum(ys)` with respect to `x`.\n+\n+  Raises:\n+    LookupError: if one of the operations between `x` and `ys` does not\n+      have a registered gradient function.\n+    ValueError: if the arguments are invalid\n+  \"\"\"\n+  ndims = x.get_shape().ndims\n+  if ndims is not None and ndims != 1:\n+    raise ValueError(\"Hessians can only be computed with respect to one-dimensional tensors\")", "path": "tensorflow/python/ops/gradients.py", "position": null, "original_position": 44, "commit_id": "dd4fe4e3da2def7fa04ae4e8e503ee86de014be8", "original_commit_id": "9c2c83f39b50b6e8d82dad07d41f2999ed11ee20", "user": {"login": "vrv", "id": 463737, "node_id": "MDQ6VXNlcjQ2MzczNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/463737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrv", "html_url": "https://github.com/vrv", "followers_url": "https://api.github.com/users/vrv/followers", "following_url": "https://api.github.com/users/vrv/following{/other_user}", "gists_url": "https://api.github.com/users/vrv/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrv/subscriptions", "organizations_url": "https://api.github.com/users/vrv/orgs", "repos_url": "https://api.github.com/users/vrv/repos", "events_url": "https://api.github.com/users/vrv/events{/privacy}", "received_events_url": "https://api.github.com/users/vrv/received_events", "type": "User", "site_admin": false}, "body": "Thanks for the comments @goodfeli, and thanks for the follow ups @tillahoffmann !  So is this something that we need a new function / interface for?  Is it too hard for users to just call gradients twice instead?\n\nIn general, TensorFlow tries to promote composition when possible, and only provides higher level interfaces when it is an extremely common pattern, or when there's something particularly tricky to get correct and we don't want users shooting themselves in the foot.  From what I can tell, this function doesn't really fit either of those criteria, but I could be convinced otherwise.\n\nMy inclination is to avoid adding this function just yet, mostly to keep maintenance burden low, unless we get an large number of people who think this is useful to have.  Thoughts?\n", "created_at": "2016-11-01T16:38:53Z", "updated_at": "2016-11-02T17:10:25Z", "html_url": "https://github.com/tensorflow/tensorflow/pull/5329#discussion_r85967645", "pull_request_url": "https://api.github.com/repos/tensorflow/tensorflow/pulls/5329", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/comments/85967645"}, "html": {"href": "https://github.com/tensorflow/tensorflow/pull/5329#discussion_r85967645"}, "pull_request": {"href": "https://api.github.com/repos/tensorflow/tensorflow/pulls/5329"}}, "body_html": "<p>Thanks for the comments <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=387866\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/goodfeli\">@goodfeli</a>, and thanks for the follow ups <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=966348\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/tillahoffmann\">@tillahoffmann</a> !  So is this something that we need a new function / interface for?  Is it too hard for users to just call gradients twice instead?</p>\n<p>In general, TensorFlow tries to promote composition when possible, and only provides higher level interfaces when it is an extremely common pattern, or when there's something particularly tricky to get correct and we don't want users shooting themselves in the foot.  From what I can tell, this function doesn't really fit either of those criteria, but I could be convinced otherwise.</p>\n<p>My inclination is to avoid adding this function just yet, mostly to keep maintenance burden low, unless we get an large number of people who think this is useful to have.  Thoughts?</p>", "body_text": "Thanks for the comments @goodfeli, and thanks for the follow ups @tillahoffmann !  So is this something that we need a new function / interface for?  Is it too hard for users to just call gradients twice instead?\nIn general, TensorFlow tries to promote composition when possible, and only provides higher level interfaces when it is an extremely common pattern, or when there's something particularly tricky to get correct and we don't want users shooting themselves in the foot.  From what I can tell, this function doesn't really fit either of those criteria, but I could be convinced otherwise.\nMy inclination is to avoid adding this function just yet, mostly to keep maintenance burden low, unless we get an large number of people who think this is useful to have.  Thoughts?", "in_reply_to_id": 85964545}