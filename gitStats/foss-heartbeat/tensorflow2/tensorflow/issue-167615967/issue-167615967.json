{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3505", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3505/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3505/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3505/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/3505", "id": 167615967, "node_id": "MDU6SXNzdWUxNjc2MTU5Njc=", "number": 3505, "title": "Enable fully_connected to uniquify the scope name", "user": {"login": "cgarciae", "id": 5862228, "node_id": "MDQ6VXNlcjU4NjIyMjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5862228?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cgarciae", "html_url": "https://github.com/cgarciae", "followers_url": "https://api.github.com/users/cgarciae/followers", "following_url": "https://api.github.com/users/cgarciae/following{/other_user}", "gists_url": "https://api.github.com/users/cgarciae/gists{/gist_id}", "starred_url": "https://api.github.com/users/cgarciae/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cgarciae/subscriptions", "organizations_url": "https://api.github.com/users/cgarciae/orgs", "repos_url": "https://api.github.com/users/cgarciae/repos", "events_url": "https://api.github.com/users/cgarciae/events{/privacy}", "received_events_url": "https://api.github.com/users/cgarciae/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 299643928, "node_id": "MDU6TGFiZWwyOTk2NDM5Mjg=", "url": "https://api.github.com/repos/tensorflow/tensorflow/labels/stat:contributions%20welcome", "name": "stat:contributions welcome", "color": "f4b400", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "sguada", "id": 1766524, "node_id": "MDQ6VXNlcjE3NjY1MjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1766524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sguada", "html_url": "https://github.com/sguada", "followers_url": "https://api.github.com/users/sguada/followers", "following_url": "https://api.github.com/users/sguada/following{/other_user}", "gists_url": "https://api.github.com/users/sguada/gists{/gist_id}", "starred_url": "https://api.github.com/users/sguada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sguada/subscriptions", "organizations_url": "https://api.github.com/users/sguada/orgs", "repos_url": "https://api.github.com/users/sguada/repos", "events_url": "https://api.github.com/users/sguada/events{/privacy}", "received_events_url": "https://api.github.com/users/sguada/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sguada", "id": 1766524, "node_id": "MDQ6VXNlcjE3NjY1MjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1766524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sguada", "html_url": "https://github.com/sguada", "followers_url": "https://api.github.com/users/sguada/followers", "following_url": "https://api.github.com/users/sguada/following{/other_user}", "gists_url": "https://api.github.com/users/sguada/gists{/gist_id}", "starred_url": "https://api.github.com/users/sguada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sguada/subscriptions", "organizations_url": "https://api.github.com/users/sguada/orgs", "repos_url": "https://api.github.com/users/sguada/repos", "events_url": "https://api.github.com/users/sguada/events{/privacy}", "received_events_url": "https://api.github.com/users/sguada/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2016-07-26T14:06:32Z", "updated_at": "2017-06-16T16:40:43Z", "closed_at": "2017-06-16T16:40:43Z", "author_association": "NONE", "body_html": "<p>The implementation of <code>tf.contrib.layers.fully_connected</code> uses <code>variable_op_scope</code> to handle the name scope of the variables, the problem is that the name scope is only <em>uniquified</em> if <code>scope</code> is <code>None</code>, that is, if you dont pass a custom name, by default it will be <code>\"fully_connected\"</code>.</p>\n<p>However, in the library I am building I create tons of shorcut methods like <code>relu_layer</code>, <code>sigmoid_layer</code>, etc, which are implemented using <code>fully_connected</code> plus their corresponding activation function. I'd like these names to be uniquified automatically so I don't get these kind of errors:</p>\n<blockquote>\n<p>ValueError: Variable relu_layer/weights already exists, disallowed. Did you mean to set reuse=True in VarScope?</p>\n</blockquote>\n<p>In the mean time, could you give me a hint of how to uniquify a variable name scope myself? Is there a function that does this already?</p>\n<p>Thanks!</p>", "body_text": "The implementation of tf.contrib.layers.fully_connected uses variable_op_scope to handle the name scope of the variables, the problem is that the name scope is only uniquified if scope is None, that is, if you dont pass a custom name, by default it will be \"fully_connected\".\nHowever, in the library I am building I create tons of shorcut methods like relu_layer, sigmoid_layer, etc, which are implemented using fully_connected plus their corresponding activation function. I'd like these names to be uniquified automatically so I don't get these kind of errors:\n\nValueError: Variable relu_layer/weights already exists, disallowed. Did you mean to set reuse=True in VarScope?\n\nIn the mean time, could you give me a hint of how to uniquify a variable name scope myself? Is there a function that does this already?\nThanks!", "body": "The implementation of `tf.contrib.layers.fully_connected` uses `variable_op_scope` to handle the name scope of the variables, the problem is that the name scope is only _uniquified_ if `scope` is `None`, that is, if you dont pass a custom name, by default it will be `\"fully_connected\"`. \n\nHowever, in the library I am building I create tons of shorcut methods like `relu_layer`, `sigmoid_layer`, etc, which are implemented using `fully_connected` plus their corresponding activation function. I'd like these names to be uniquified automatically so I don't get these kind of errors:\n\n> ValueError: Variable relu_layer/weights already exists, disallowed. Did you mean to set reuse=True in VarScope?\n\nIn the mean time, could you give me a hint of how to uniquify a variable name scope myself? Is there a function that does this already?\n\nThanks!\n"}