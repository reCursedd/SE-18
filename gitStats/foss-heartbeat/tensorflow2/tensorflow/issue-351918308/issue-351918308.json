{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21717", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21717/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21717/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/21717/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/21717", "id": 351918308, "node_id": "MDU6SXNzdWUzNTE5MTgzMDg=", "number": 21717, "title": "parallel_for's jacobian and batch_jacobian fail when inputs are disjoint in the comp. graph", "user": {"login": "artsobolev", "id": 434122, "node_id": "MDQ6VXNlcjQzNDEyMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/434122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artsobolev", "html_url": "https://github.com/artsobolev", "followers_url": "https://api.github.com/users/artsobolev/followers", "following_url": "https://api.github.com/users/artsobolev/following{/other_user}", "gists_url": "https://api.github.com/users/artsobolev/gists{/gist_id}", "starred_url": "https://api.github.com/users/artsobolev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artsobolev/subscriptions", "organizations_url": "https://api.github.com/users/artsobolev/orgs", "repos_url": "https://api.github.com/users/artsobolev/repos", "events_url": "https://api.github.com/users/artsobolev/events{/privacy}", "received_events_url": "https://api.github.com/users/artsobolev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "agarwal-ashish", "id": 19335798, "node_id": "MDQ6VXNlcjE5MzM1Nzk4", "avatar_url": "https://avatars3.githubusercontent.com/u/19335798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agarwal-ashish", "html_url": "https://github.com/agarwal-ashish", "followers_url": "https://api.github.com/users/agarwal-ashish/followers", "following_url": "https://api.github.com/users/agarwal-ashish/following{/other_user}", "gists_url": "https://api.github.com/users/agarwal-ashish/gists{/gist_id}", "starred_url": "https://api.github.com/users/agarwal-ashish/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agarwal-ashish/subscriptions", "organizations_url": "https://api.github.com/users/agarwal-ashish/orgs", "repos_url": "https://api.github.com/users/agarwal-ashish/repos", "events_url": "https://api.github.com/users/agarwal-ashish/events{/privacy}", "received_events_url": "https://api.github.com/users/agarwal-ashish/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "agarwal-ashish", "id": 19335798, "node_id": "MDQ6VXNlcjE5MzM1Nzk4", "avatar_url": "https://avatars3.githubusercontent.com/u/19335798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agarwal-ashish", "html_url": "https://github.com/agarwal-ashish", "followers_url": "https://api.github.com/users/agarwal-ashish/followers", "following_url": "https://api.github.com/users/agarwal-ashish/following{/other_user}", "gists_url": "https://api.github.com/users/agarwal-ashish/gists{/gist_id}", "starred_url": "https://api.github.com/users/agarwal-ashish/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agarwal-ashish/subscriptions", "organizations_url": "https://api.github.com/users/agarwal-ashish/orgs", "repos_url": "https://api.github.com/users/agarwal-ashish/repos", "events_url": "https://api.github.com/users/agarwal-ashish/events{/privacy}", "received_events_url": "https://api.github.com/users/agarwal-ashish/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-08-19T17:05:21Z", "updated_at": "2018-08-21T20:20:48Z", "closed_at": "2018-08-21T20:20:47Z", "author_association": "CONTRIBUTOR", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: yes</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: reproducible on macOS High Sierra 10.13.4 and Linux Ubuntu 16.04</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: reproducible on both source and binary</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.10</li>\n<li><strong>Python version</strong>: 3.6</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.15.2-homebrew</li>\n<li><strong>CUDA/cuDNN version</strong>: N/A</li>\n<li><strong>GPU model and memory</strong>: N/A</li>\n<li><strong>Mobile device</strong>: N/A</li>\n<li><strong>Exact command to reproduce</strong>:</li>\n</ul>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> tensorflow <span class=\"pl-k\">as</span> tf\n<span class=\"pl-k\">from</span> tensorflow.python.ops.parallel_for <span class=\"pl-k\">import</span> gradients\n\nx <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, (<span class=\"pl-c1\">None</span>,))\ny <span class=\"pl-k\">=</span> tf.placeholder(tf.float32, (<span class=\"pl-c1\">None</span>,))\n<span class=\"pl-c1\">print</span>(gradients.jacobian(x, y))</pre></div>\n<h3>Describe the problem</h3>\n<p>When the example script is run, the following exception is thrown</p>\n<pre><code>Traceback (most recent call last):\n  File \"test-2.py\", line 5, in &lt;module&gt;\n    print(gradients.jacobian(x, 5))\n  File \"/Users/asobolev/dev/tensorflow/pfor_test/venv/lib/python3.6/site-packages/tensorflow/python/ops/parallel_for/gradients.py\", line 58, in jacobian\n    pfor_outputs = control_flow_ops.pfor(loop_fn, output_size)\n  File \"/Users/asobolev/dev/tensorflow/pfor_test/venv/lib/python3.6/site-packages/tensorflow/python/ops/parallel_for/control_flow_ops.py\", line 122, in pfor\n    outputs.append(converter.convert(loop_fn_output))\n  File \"/Users/asobolev/dev/tensorflow/pfor_test/venv/lib/python3.6/site-packages/tensorflow/python/ops/parallel_for/pfor.py\", line 1075, in convert\n    output = self._convert_helper(y)\n  File \"/Users/asobolev/dev/tensorflow/pfor_test/venv/lib/python3.6/site-packages/tensorflow/python/ops/parallel_for/pfor.py\", line 1108, in _convert_helper\n    assert isinstance(y, ops.Tensor), y\nAssertionError: None\n</code></pre>\n<p>This is due to the <code>tf.gradients(y, x)</code> (which sits under to hood of <code>jacobian</code>) returning <code>None</code> when <code>y</code> is independent of <code>x</code> in terms of computational graph, that is, when <code>y</code> is not achievable from <code>x</code> by any computation path, and <code>parallel_for</code> does not like working with <code>None</code>s.</p>\n<p>This is not affecting me as I have found workarounds, but it's still a bug that needs fixing.</p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): yes\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): reproducible on macOS High Sierra 10.13.4 and Linux Ubuntu 16.04\nTensorFlow installed from (source or binary): reproducible on both source and binary\nTensorFlow version (use command below): 1.10\nPython version: 3.6\nBazel version (if compiling from source): 0.15.2-homebrew\nCUDA/cuDNN version: N/A\nGPU model and memory: N/A\nMobile device: N/A\nExact command to reproduce:\n\nimport tensorflow as tf\nfrom tensorflow.python.ops.parallel_for import gradients\n\nx = tf.placeholder(tf.float32, (None,))\ny = tf.placeholder(tf.float32, (None,))\nprint(gradients.jacobian(x, y))\nDescribe the problem\nWhen the example script is run, the following exception is thrown\nTraceback (most recent call last):\n  File \"test-2.py\", line 5, in <module>\n    print(gradients.jacobian(x, 5))\n  File \"/Users/asobolev/dev/tensorflow/pfor_test/venv/lib/python3.6/site-packages/tensorflow/python/ops/parallel_for/gradients.py\", line 58, in jacobian\n    pfor_outputs = control_flow_ops.pfor(loop_fn, output_size)\n  File \"/Users/asobolev/dev/tensorflow/pfor_test/venv/lib/python3.6/site-packages/tensorflow/python/ops/parallel_for/control_flow_ops.py\", line 122, in pfor\n    outputs.append(converter.convert(loop_fn_output))\n  File \"/Users/asobolev/dev/tensorflow/pfor_test/venv/lib/python3.6/site-packages/tensorflow/python/ops/parallel_for/pfor.py\", line 1075, in convert\n    output = self._convert_helper(y)\n  File \"/Users/asobolev/dev/tensorflow/pfor_test/venv/lib/python3.6/site-packages/tensorflow/python/ops/parallel_for/pfor.py\", line 1108, in _convert_helper\n    assert isinstance(y, ops.Tensor), y\nAssertionError: None\n\nThis is due to the tf.gradients(y, x) (which sits under to hood of jacobian) returning None when y is independent of x in terms of computational graph, that is, when y is not achievable from x by any computation path, and parallel_for does not like working with Nones.\nThis is not affecting me as I have found workarounds, but it's still a bug that needs fixing.", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: yes\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: reproducible on macOS High Sierra 10.13.4 and Linux Ubuntu 16.04\r\n- **TensorFlow installed from (source or binary)**: reproducible on both source and binary\r\n- **TensorFlow version (use command below)**: 1.10\r\n- **Python version**: 3.6\r\n- **Bazel version (if compiling from source)**: 0.15.2-homebrew\r\n- **CUDA/cuDNN version**: N/A\r\n- **GPU model and memory**: N/A\r\n- **Mobile device**: N/A\r\n- **Exact command to reproduce**:\r\n\r\n```python\r\nimport tensorflow as tf\r\nfrom tensorflow.python.ops.parallel_for import gradients\r\n\r\nx = tf.placeholder(tf.float32, (None,))\r\ny = tf.placeholder(tf.float32, (None,))\r\nprint(gradients.jacobian(x, y))\r\n```\r\n\r\n### Describe the problem\r\nWhen the example script is run, the following exception is thrown\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"test-2.py\", line 5, in <module>\r\n    print(gradients.jacobian(x, 5))\r\n  File \"/Users/asobolev/dev/tensorflow/pfor_test/venv/lib/python3.6/site-packages/tensorflow/python/ops/parallel_for/gradients.py\", line 58, in jacobian\r\n    pfor_outputs = control_flow_ops.pfor(loop_fn, output_size)\r\n  File \"/Users/asobolev/dev/tensorflow/pfor_test/venv/lib/python3.6/site-packages/tensorflow/python/ops/parallel_for/control_flow_ops.py\", line 122, in pfor\r\n    outputs.append(converter.convert(loop_fn_output))\r\n  File \"/Users/asobolev/dev/tensorflow/pfor_test/venv/lib/python3.6/site-packages/tensorflow/python/ops/parallel_for/pfor.py\", line 1075, in convert\r\n    output = self._convert_helper(y)\r\n  File \"/Users/asobolev/dev/tensorflow/pfor_test/venv/lib/python3.6/site-packages/tensorflow/python/ops/parallel_for/pfor.py\", line 1108, in _convert_helper\r\n    assert isinstance(y, ops.Tensor), y\r\nAssertionError: None\r\n```\r\n\r\nThis is due to the `tf.gradients(y, x)` (which sits under to hood of `jacobian`) returning `None` when `y` is independent of `x` in terms of computational graph, that is, when `y` is not achievable from `x` by any computation path, and `parallel_for` does not like working with `None`s.\r\n\r\nThis is not affecting me as I have found workarounds, but it's still a bug that needs fixing."}