{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4110", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4110/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4110/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/4110/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/4110", "id": 174144886, "node_id": "MDU6SXNzdWUxNzQxNDQ4ODY=", "number": 4110, "title": "r0.10: function 'repository_rule' does not exist", "user": {"login": "thiell", "id": 1494929, "node_id": "MDQ6VXNlcjE0OTQ5Mjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1494929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thiell", "html_url": "https://github.com/thiell", "followers_url": "https://api.github.com/users/thiell/followers", "following_url": "https://api.github.com/users/thiell/following{/other_user}", "gists_url": "https://api.github.com/users/thiell/gists{/gist_id}", "starred_url": "https://api.github.com/users/thiell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thiell/subscriptions", "organizations_url": "https://api.github.com/users/thiell/orgs", "repos_url": "https://api.github.com/users/thiell/repos", "events_url": "https://api.github.com/users/thiell/events{/privacy}", "received_events_url": "https://api.github.com/users/thiell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-30T22:49:34Z", "updated_at": "2017-02-17T21:32:56Z", "closed_at": "2016-08-31T06:45:52Z", "author_association": "NONE", "body_html": "<p>Hi,</p>\n<p>I previously installed tensorflow 0.8 and 0.9 on a GPU cluster with several local patches to circumvent non-standard paths for crosstool files and swig. Our users are now requesting an upgrade to 0.10 but I have the following error... Installing tensorflow on a cluster is so painful....</p>\n<p>ERROR: ~/tensorflow_0.10/tensorflow/third_party/gpus/cuda_configure.bzl:415:18: function 'repository_rule' does not exist.</p>\n<p>I suppose this is related to bazel. repository_rule is an experimental feature of bazel. What version of bazel is required to install 0.10? bazel is also painful to install to so we try to avoid upgrades as much as possible. This is very costly in terms of sys admin time.</p>\n<p>verbose logs:</p>\n<pre><code>Do you wish to build TensorFlow with GPU support? [y/N] y\nGPU support will be enabled for TensorFlow\nPlease specify which gcc should be used by nvcc as the host compiler. [Default is /global/software/Core/GCC/4.9.2-binutils-2.25/bin/gcc]: \nPlease specify the Cuda SDK version you want to use, e.g. 7.0. [Leave empty to use system default]: 7.5.18\nPlease specify the location where CUDA 7.5.18 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: /global/software/Core/CUDA/7.5.18\nPlease specify the Cudnn version you want to use. [Leave empty to use system default]: 5.0\nPlease specify the location where cuDNN 5.0 library is installed. Refer to README.md for more details. [Default is /global/software/Core/CUDA/7.5.18]: /global/software/Core/cuDNN/5.0-CUDA-7.5.18\nInvalid path to cuDNN  toolkit. Neither of the following two files can be found:\n/global/software/Core/cuDNN/5.0-CUDA-7.5.18/lib64/libcudnn.so.5.0\n/global/software/Core/cuDNN/5.0-CUDA-7.5.18/libcudnn.so.5.0\n.5.0\nPlease specify the Cudnn version you want to use. [Leave empty to use system default]: 5   \nPlease specify the location where cuDNN 5 library is installed. Refer to README.md for more details. [Default is /global/software/Core/CUDA/7.5.18]: /global/software/Core/cuDNN/5.0-CUDA-7.5.18\nPlease specify a list of comma-separated Cuda compute capabilities you want to build with.\nYou can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.\nPlease note that each additional compute capability significantly increases your build time and binary size.\n[Default is: \"3.5,5.2\"]: 3.7\nWARNING: Output base '~/.cache/bazel/_bazel_hidden/2a1b98729d2f817402a27341162b0ab6' is on NFS. This may lead to surprising failures and undetermined behavior.\n.....................\nINFO: Starting clean (this may take a while). Consider using --expunge_async if the clean takes more than several minutes.\nERROR: ~/.cache/bazel/_bazel_hidden/2a1b98729d2f817402a27341162b0ab6/server (Directory not empty).\nWARNING: Output base '~/.cache/bazel/_bazel_hidden/2a1b98729d2f817402a27341162b0ab6' is on NFS. This may lead to surprising failures and undetermined behavior.\n..............\nERROR: ~/tensorflow_0.10/tensorflow/third_party/gpus/cuda_configure.bzl:415:18: function 'repository_rule' does not exist.\nERROR: com.google.devtools.build.lib.packages.BuildFileContainsErrorsException: error loading package 'external': Extension 'third_party/gpus/cuda_configure.bzl' has errors.\nConfiguration finished\n</code></pre>\n<h3>Environment info</h3>\n<p>Operating System: RHEL 6.7</p>\n<p>Installed version of CUDA and cuDNN:<br>\n(please attach the output of <code>ls -l /path/to/cuda/lib/libcud*</code>):</p>\n<pre><code>ls /global/software/Core/CUDA/7.5.18/lib/libcud*\n/global/software/Core/CUDA/7.5.18/lib/libcudadevrt.a\n/global/software/Core/CUDA/7.5.18/lib/libcudart.so\n/global/software/Core/CUDA/7.5.18/lib/libcudart.so.7.5\n/global/software/Core/CUDA/7.5.18/lib/libcudart.so.7.5.18\n/global/software/Core/CUDA/7.5.18/lib/libcudart_static.a\n</code></pre>\n<p>If installed from source, provide</p>\n<ol>\n<li>The commit hash (<code>git rev-parse HEAD</code>)</li>\n</ol>\n<pre><code>$ git rev-parse HEAD\n6ce5b5c8298273e3861a75fb6ccde63b9dd157c5\n</code></pre>\n<ol>\n<li>The output of <code>bazel version</code></li>\n</ol>\n<p>bazel is 0.2.0 but <code>bazel version</code> doesn't seem to work...</p>\n<pre><code>$ bazel version\nWARNING: Output base '~/.cache/bazel/_bazel_hidden/2a1b98729d2f817402a27341162b0ab6' is on NFS. This may lead to surprising failures and undetermined behavior.\nBuild target: bazel-out/local_linux-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\nBuild time: Thu Jan 01 00:00:00 1970 (0)\nBuild timestamp: Thu Jan 01 00:00:00 1970 (0)\nBuild timestamp as int: 0\n</code></pre>", "body_text": "Hi,\nI previously installed tensorflow 0.8 and 0.9 on a GPU cluster with several local patches to circumvent non-standard paths for crosstool files and swig. Our users are now requesting an upgrade to 0.10 but I have the following error... Installing tensorflow on a cluster is so painful....\nERROR: ~/tensorflow_0.10/tensorflow/third_party/gpus/cuda_configure.bzl:415:18: function 'repository_rule' does not exist.\nI suppose this is related to bazel. repository_rule is an experimental feature of bazel. What version of bazel is required to install 0.10? bazel is also painful to install to so we try to avoid upgrades as much as possible. This is very costly in terms of sys admin time.\nverbose logs:\nDo you wish to build TensorFlow with GPU support? [y/N] y\nGPU support will be enabled for TensorFlow\nPlease specify which gcc should be used by nvcc as the host compiler. [Default is /global/software/Core/GCC/4.9.2-binutils-2.25/bin/gcc]: \nPlease specify the Cuda SDK version you want to use, e.g. 7.0. [Leave empty to use system default]: 7.5.18\nPlease specify the location where CUDA 7.5.18 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: /global/software/Core/CUDA/7.5.18\nPlease specify the Cudnn version you want to use. [Leave empty to use system default]: 5.0\nPlease specify the location where cuDNN 5.0 library is installed. Refer to README.md for more details. [Default is /global/software/Core/CUDA/7.5.18]: /global/software/Core/cuDNN/5.0-CUDA-7.5.18\nInvalid path to cuDNN  toolkit. Neither of the following two files can be found:\n/global/software/Core/cuDNN/5.0-CUDA-7.5.18/lib64/libcudnn.so.5.0\n/global/software/Core/cuDNN/5.0-CUDA-7.5.18/libcudnn.so.5.0\n.5.0\nPlease specify the Cudnn version you want to use. [Leave empty to use system default]: 5   \nPlease specify the location where cuDNN 5 library is installed. Refer to README.md for more details. [Default is /global/software/Core/CUDA/7.5.18]: /global/software/Core/cuDNN/5.0-CUDA-7.5.18\nPlease specify a list of comma-separated Cuda compute capabilities you want to build with.\nYou can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.\nPlease note that each additional compute capability significantly increases your build time and binary size.\n[Default is: \"3.5,5.2\"]: 3.7\nWARNING: Output base '~/.cache/bazel/_bazel_hidden/2a1b98729d2f817402a27341162b0ab6' is on NFS. This may lead to surprising failures and undetermined behavior.\n.....................\nINFO: Starting clean (this may take a while). Consider using --expunge_async if the clean takes more than several minutes.\nERROR: ~/.cache/bazel/_bazel_hidden/2a1b98729d2f817402a27341162b0ab6/server (Directory not empty).\nWARNING: Output base '~/.cache/bazel/_bazel_hidden/2a1b98729d2f817402a27341162b0ab6' is on NFS. This may lead to surprising failures and undetermined behavior.\n..............\nERROR: ~/tensorflow_0.10/tensorflow/third_party/gpus/cuda_configure.bzl:415:18: function 'repository_rule' does not exist.\nERROR: com.google.devtools.build.lib.packages.BuildFileContainsErrorsException: error loading package 'external': Extension 'third_party/gpus/cuda_configure.bzl' has errors.\nConfiguration finished\n\nEnvironment info\nOperating System: RHEL 6.7\nInstalled version of CUDA and cuDNN:\n(please attach the output of ls -l /path/to/cuda/lib/libcud*):\nls /global/software/Core/CUDA/7.5.18/lib/libcud*\n/global/software/Core/CUDA/7.5.18/lib/libcudadevrt.a\n/global/software/Core/CUDA/7.5.18/lib/libcudart.so\n/global/software/Core/CUDA/7.5.18/lib/libcudart.so.7.5\n/global/software/Core/CUDA/7.5.18/lib/libcudart.so.7.5.18\n/global/software/Core/CUDA/7.5.18/lib/libcudart_static.a\n\nIf installed from source, provide\n\nThe commit hash (git rev-parse HEAD)\n\n$ git rev-parse HEAD\n6ce5b5c8298273e3861a75fb6ccde63b9dd157c5\n\n\nThe output of bazel version\n\nbazel is 0.2.0 but bazel version doesn't seem to work...\n$ bazel version\nWARNING: Output base '~/.cache/bazel/_bazel_hidden/2a1b98729d2f817402a27341162b0ab6' is on NFS. This may lead to surprising failures and undetermined behavior.\nBuild target: bazel-out/local_linux-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\nBuild time: Thu Jan 01 00:00:00 1970 (0)\nBuild timestamp: Thu Jan 01 00:00:00 1970 (0)\nBuild timestamp as int: 0", "body": "Hi,\n\nI previously installed tensorflow 0.8 and 0.9 on a GPU cluster with several local patches to circumvent non-standard paths for crosstool files and swig. Our users are now requesting an upgrade to 0.10 but I have the following error... Installing tensorflow on a cluster is so painful....\n\nERROR: ~/tensorflow_0.10/tensorflow/third_party/gpus/cuda_configure.bzl:415:18: function 'repository_rule' does not exist.\n\nI suppose this is related to bazel. repository_rule is an experimental feature of bazel. What version of bazel is required to install 0.10? bazel is also painful to install to so we try to avoid upgrades as much as possible. This is very costly in terms of sys admin time.\n\nverbose logs:\n\n```\nDo you wish to build TensorFlow with GPU support? [y/N] y\nGPU support will be enabled for TensorFlow\nPlease specify which gcc should be used by nvcc as the host compiler. [Default is /global/software/Core/GCC/4.9.2-binutils-2.25/bin/gcc]: \nPlease specify the Cuda SDK version you want to use, e.g. 7.0. [Leave empty to use system default]: 7.5.18\nPlease specify the location where CUDA 7.5.18 toolkit is installed. Refer to README.md for more details. [Default is /usr/local/cuda]: /global/software/Core/CUDA/7.5.18\nPlease specify the Cudnn version you want to use. [Leave empty to use system default]: 5.0\nPlease specify the location where cuDNN 5.0 library is installed. Refer to README.md for more details. [Default is /global/software/Core/CUDA/7.5.18]: /global/software/Core/cuDNN/5.0-CUDA-7.5.18\nInvalid path to cuDNN  toolkit. Neither of the following two files can be found:\n/global/software/Core/cuDNN/5.0-CUDA-7.5.18/lib64/libcudnn.so.5.0\n/global/software/Core/cuDNN/5.0-CUDA-7.5.18/libcudnn.so.5.0\n.5.0\nPlease specify the Cudnn version you want to use. [Leave empty to use system default]: 5   \nPlease specify the location where cuDNN 5 library is installed. Refer to README.md for more details. [Default is /global/software/Core/CUDA/7.5.18]: /global/software/Core/cuDNN/5.0-CUDA-7.5.18\nPlease specify a list of comma-separated Cuda compute capabilities you want to build with.\nYou can find the compute capability of your device at: https://developer.nvidia.com/cuda-gpus.\nPlease note that each additional compute capability significantly increases your build time and binary size.\n[Default is: \"3.5,5.2\"]: 3.7\nWARNING: Output base '~/.cache/bazel/_bazel_hidden/2a1b98729d2f817402a27341162b0ab6' is on NFS. This may lead to surprising failures and undetermined behavior.\n.....................\nINFO: Starting clean (this may take a while). Consider using --expunge_async if the clean takes more than several minutes.\nERROR: ~/.cache/bazel/_bazel_hidden/2a1b98729d2f817402a27341162b0ab6/server (Directory not empty).\nWARNING: Output base '~/.cache/bazel/_bazel_hidden/2a1b98729d2f817402a27341162b0ab6' is on NFS. This may lead to surprising failures and undetermined behavior.\n..............\nERROR: ~/tensorflow_0.10/tensorflow/third_party/gpus/cuda_configure.bzl:415:18: function 'repository_rule' does not exist.\nERROR: com.google.devtools.build.lib.packages.BuildFileContainsErrorsException: error loading package 'external': Extension 'third_party/gpus/cuda_configure.bzl' has errors.\nConfiguration finished\n```\n### Environment info\n\nOperating System: RHEL 6.7\n\nInstalled version of CUDA and cuDNN: \n(please attach the output of `ls -l /path/to/cuda/lib/libcud*`):\n\n```\nls /global/software/Core/CUDA/7.5.18/lib/libcud*\n/global/software/Core/CUDA/7.5.18/lib/libcudadevrt.a\n/global/software/Core/CUDA/7.5.18/lib/libcudart.so\n/global/software/Core/CUDA/7.5.18/lib/libcudart.so.7.5\n/global/software/Core/CUDA/7.5.18/lib/libcudart.so.7.5.18\n/global/software/Core/CUDA/7.5.18/lib/libcudart_static.a\n```\n\nIf installed from source, provide \n1. The commit hash (`git rev-parse HEAD`)\n\n```\n$ git rev-parse HEAD\n6ce5b5c8298273e3861a75fb6ccde63b9dd157c5\n```\n1. The output of `bazel version`\n\nbazel is 0.2.0 but `bazel version` doesn't seem to work...\n\n```\n$ bazel version\nWARNING: Output base '~/.cache/bazel/_bazel_hidden/2a1b98729d2f817402a27341162b0ab6' is on NFS. This may lead to surprising failures and undetermined behavior.\nBuild target: bazel-out/local_linux-fastbuild/bin/src/main/java/com/google/devtools/build/lib/bazel/BazelServer_deploy.jar\nBuild time: Thu Jan 01 00:00:00 1970 (0)\nBuild timestamp: Thu Jan 01 00:00:00 1970 (0)\nBuild timestamp as int: 0\n```\n"}