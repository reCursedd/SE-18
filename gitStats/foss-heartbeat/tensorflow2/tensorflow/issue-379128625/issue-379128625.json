{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23629", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23629/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23629/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/23629/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/23629", "id": 379128625, "node_id": "MDU6SXNzdWUzNzkxMjg2MjU=", "number": 23629, "title": "Cannot compile tensorflow lite minimal.cc with libtensorflowlite.so", "user": {"login": "Nimitz14", "id": 12561072, "node_id": "MDQ6VXNlcjEyNTYxMDcy", "avatar_url": "https://avatars2.githubusercontent.com/u/12561072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nimitz14", "html_url": "https://github.com/Nimitz14", "followers_url": "https://api.github.com/users/Nimitz14/followers", "following_url": "https://api.github.com/users/Nimitz14/following{/other_user}", "gists_url": "https://api.github.com/users/Nimitz14/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nimitz14/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nimitz14/subscriptions", "organizations_url": "https://api.github.com/users/Nimitz14/orgs", "repos_url": "https://api.github.com/users/Nimitz14/repos", "events_url": "https://api.github.com/users/Nimitz14/events{/privacy}", "received_events_url": "https://api.github.com/users/Nimitz14/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-09T11:38:13Z", "updated_at": "2018-11-12T18:03:15Z", "closed_at": "2018-11-12T18:03:15Z", "author_association": "NONE", "body_html": "<p><strong>System information</strong><br>\nUbuntu 16, armeabi-v7a, bazel 0.18, tried out with NDK 16b and 15c</p>\n<p><strong>Describe the current behavior</strong></p>\n<p>When I run this command to compile <code>tensorflow/lite/examples/minimal.cc</code> using a <code>libtensorflowlite.so</code> I built:</p>\n<p><code>&lt;path-to&gt;/android-toolchain-15c/bin/clang++  -std=c++11 -I&lt;path-to&gt;/git/tensorflow-android -I&lt;path-to&gt;/git/flatbuffers/include -L&lt;path-to&gt;/git/tensorflow-android -L&lt;path-to&gt;/git/flatbuffers/build minimal.cc -ltensorflowlite -lflatbuffers</code></p>\n<p>I get an error</p>\n<p><code>undefined reference to 'tflite::InterpreterBuilder::operator()(std::__ndk1::unique_ptr&lt;tflite::Interpreter, std::__ndk1::default_delete&lt;tflite::Interpreter&gt; &gt;*)'</code></p>\n<p><strong>Describe the expected behavior</strong></p>\n<p>To compile.</p>\n<p><strong>Code to reproduce the issue</strong></p>\n<ol>\n<li>\n<p>Download the android ndk. Call <code>build/tools/make_standalone_toolchain.py --arch arm --api 21 --stl=libc++ --install-dir android-toolchain</code></p>\n</li>\n<li>\n<p>Build <code>libtensorflowlite.so</code>, I added this to the BUILD file:</p>\n</li>\n</ol>\n<pre><code>cc_binary(\n    name = \"libtensorflowlite.so\",\n    linkopts=[\n        \"-shared\",\n        \"-Wl,-soname=libtensorflowlite.so\",\n    ],  \n    linkshared = 1,\n    copts = tflite_copts(),\n    deps = [ \n        \":framework\",\n        \"//tensorflow/lite/kernels:builtin_ops\",\n    ],  \n)\n</code></pre>\n<p>And then called</p>\n<pre><code>bazel build //tensorflow/lite:libtensorflowlite.so --crosstool_top=//external:android/crosstool --cpu=armeabi-v7a --host_crosstool_top=@bazel_tools//tools/cpp:toolchain --cxxopt=\"-std=c++11\"\n</code></pre>\n<ol start=\"3\">\n<li>\n<p>Clone and compile the flatbuffer repo.</p>\n</li>\n<li>\n<p>Then call the problematic command</p>\n</li>\n</ol>\n<pre><code>android-toolchain/bin/clang++  -std=c++11 -Igit/tensorflow-android -Igit/flatbuffers/include -Lgit/tensorflow-android -Lgit/flatbuffers/build minimal.cc -ltensorflowlite -lflatbuffers\n</code></pre>\n<p>And you should get the error:<br>\n<code>undefined reference to 'tflite::InterpreterBuilder::operator()(std::__ndk1::unique_ptr&lt;tflite::Interpreter, std::__ndk1::default_delete&lt;tflite::Interpreter&gt; &gt;*)'</code></p>", "body_text": "System information\nUbuntu 16, armeabi-v7a, bazel 0.18, tried out with NDK 16b and 15c\nDescribe the current behavior\nWhen I run this command to compile tensorflow/lite/examples/minimal.cc using a libtensorflowlite.so I built:\n<path-to>/android-toolchain-15c/bin/clang++  -std=c++11 -I<path-to>/git/tensorflow-android -I<path-to>/git/flatbuffers/include -L<path-to>/git/tensorflow-android -L<path-to>/git/flatbuffers/build minimal.cc -ltensorflowlite -lflatbuffers\nI get an error\nundefined reference to 'tflite::InterpreterBuilder::operator()(std::__ndk1::unique_ptr<tflite::Interpreter, std::__ndk1::default_delete<tflite::Interpreter> >*)'\nDescribe the expected behavior\nTo compile.\nCode to reproduce the issue\n\n\nDownload the android ndk. Call build/tools/make_standalone_toolchain.py --arch arm --api 21 --stl=libc++ --install-dir android-toolchain\n\n\nBuild libtensorflowlite.so, I added this to the BUILD file:\n\n\ncc_binary(\n    name = \"libtensorflowlite.so\",\n    linkopts=[\n        \"-shared\",\n        \"-Wl,-soname=libtensorflowlite.so\",\n    ],  \n    linkshared = 1,\n    copts = tflite_copts(),\n    deps = [ \n        \":framework\",\n        \"//tensorflow/lite/kernels:builtin_ops\",\n    ],  \n)\n\nAnd then called\nbazel build //tensorflow/lite:libtensorflowlite.so --crosstool_top=//external:android/crosstool --cpu=armeabi-v7a --host_crosstool_top=@bazel_tools//tools/cpp:toolchain --cxxopt=\"-std=c++11\"\n\n\n\nClone and compile the flatbuffer repo.\n\n\nThen call the problematic command\n\n\nandroid-toolchain/bin/clang++  -std=c++11 -Igit/tensorflow-android -Igit/flatbuffers/include -Lgit/tensorflow-android -Lgit/flatbuffers/build minimal.cc -ltensorflowlite -lflatbuffers\n\nAnd you should get the error:\nundefined reference to 'tflite::InterpreterBuilder::operator()(std::__ndk1::unique_ptr<tflite::Interpreter, std::__ndk1::default_delete<tflite::Interpreter> >*)'", "body": "**System information**\r\nUbuntu 16, armeabi-v7a, bazel 0.18, tried out with NDK 16b and 15c\r\n\r\n\r\n**Describe the current behavior**\r\n\r\nWhen I run this command to compile `tensorflow/lite/examples/minimal.cc` using a `libtensorflowlite.so` I built:\r\n\r\n`<path-to>/android-toolchain-15c/bin/clang++  -std=c++11 -I<path-to>/git/tensorflow-android\r\n-I<path-to>/git/flatbuffers/include -L<path-to>/git/tensorflow-android\r\n-L<path-to>/git/flatbuffers/build minimal.cc -ltensorflowlite -lflatbuffers`\r\n\r\nI get an error\r\n\r\n`undefined reference to 'tflite::InterpreterBuilder::operator()(std::__ndk1::unique_ptr<tflite::Interpreter, std::__ndk1::default_delete<tflite::Interpreter> >*)'`\r\n\r\n**Describe the expected behavior**\r\n\r\nTo compile.\r\n\r\n**Code to reproduce the issue**\r\n\r\n1. Download the android ndk. Call `build/tools/make_standalone_toolchain.py --arch arm --api 21 --stl=libc++ --install-dir android-toolchain`\r\n\r\n2. Build `libtensorflowlite.so`, I added this to the BUILD file:\r\n\r\n```\r\ncc_binary(\r\n    name = \"libtensorflowlite.so\",\r\n    linkopts=[\r\n        \"-shared\",\r\n        \"-Wl,-soname=libtensorflowlite.so\",\r\n    ],  \r\n    linkshared = 1,\r\n    copts = tflite_copts(),\r\n    deps = [ \r\n        \":framework\",\r\n        \"//tensorflow/lite/kernels:builtin_ops\",\r\n    ],  \r\n)\r\n```\r\nAnd then called \r\n```\r\nbazel build //tensorflow/lite:libtensorflowlite.so --crosstool_top=//external:android/crosstool --cpu=armeabi-v7a --host_crosstool_top=@bazel_tools//tools/cpp:toolchain --cxxopt=\"-std=c++11\"\r\n```\r\n\r\n3. Clone and compile the flatbuffer repo.\r\n\r\n4. Then call the problematic command \r\n```\r\nandroid-toolchain/bin/clang++  -std=c++11 -Igit/tensorflow-android -Igit/flatbuffers/include -Lgit/tensorflow-android -Lgit/flatbuffers/build minimal.cc -ltensorflowlite -lflatbuffers\r\n```\r\nAnd you should get the error: \r\n```undefined reference to 'tflite::InterpreterBuilder::operator()(std::__ndk1::unique_ptr<tflite::Interpreter, std::__ndk1::default_delete<tflite::Interpreter> >*)'```\r\n\r\n"}