{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22395", "repository_url": "https://api.github.com/repos/tensorflow/tensorflow", "labels_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22395/labels{/name}", "comments_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22395/comments", "events_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/22395/events", "html_url": "https://github.com/tensorflow/tensorflow/issues/22395", "id": 361949553, "node_id": "MDU6SXNzdWUzNjE5NDk1NTM=", "number": 22395, "title": "numpy not found during python_api generation", "user": {"login": "maxnbk", "id": 6218350, "node_id": "MDQ6VXNlcjYyMTgzNTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6218350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxnbk", "html_url": "https://github.com/maxnbk", "followers_url": "https://api.github.com/users/maxnbk/followers", "following_url": "https://api.github.com/users/maxnbk/following{/other_user}", "gists_url": "https://api.github.com/users/maxnbk/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxnbk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxnbk/subscriptions", "organizations_url": "https://api.github.com/users/maxnbk/orgs", "repos_url": "https://api.github.com/users/maxnbk/repos", "events_url": "https://api.github.com/users/maxnbk/events{/privacy}", "received_events_url": "https://api.github.com/users/maxnbk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "annarev", "id": 22060313, "node_id": "MDQ6VXNlcjIyMDYwMzEz", "avatar_url": "https://avatars0.githubusercontent.com/u/22060313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/annarev", "html_url": "https://github.com/annarev", "followers_url": "https://api.github.com/users/annarev/followers", "following_url": "https://api.github.com/users/annarev/following{/other_user}", "gists_url": "https://api.github.com/users/annarev/gists{/gist_id}", "starred_url": "https://api.github.com/users/annarev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/annarev/subscriptions", "organizations_url": "https://api.github.com/users/annarev/orgs", "repos_url": "https://api.github.com/users/annarev/repos", "events_url": "https://api.github.com/users/annarev/events{/privacy}", "received_events_url": "https://api.github.com/users/annarev/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "annarev", "id": 22060313, "node_id": "MDQ6VXNlcjIyMDYwMzEz", "avatar_url": "https://avatars0.githubusercontent.com/u/22060313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/annarev", "html_url": "https://github.com/annarev", "followers_url": "https://api.github.com/users/annarev/followers", "following_url": "https://api.github.com/users/annarev/following{/other_user}", "gists_url": "https://api.github.com/users/annarev/gists{/gist_id}", "starred_url": "https://api.github.com/users/annarev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/annarev/subscriptions", "organizations_url": "https://api.github.com/users/annarev/orgs", "repos_url": "https://api.github.com/users/annarev/repos", "events_url": "https://api.github.com/users/annarev/events{/privacy}", "received_events_url": "https://api.github.com/users/annarev/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 27, "created_at": "2018-09-19T22:19:47Z", "updated_at": "2018-11-16T18:36:28Z", "closed_at": null, "author_association": "NONE", "body_html": "<h3>System information</h3>\n<ul>\n<li><strong>Have I written custom code (as opposed to using a stock example script provided in TensorFlow)</strong>: No</li>\n<li><strong>OS Platform and Distribution (e.g., Linux Ubuntu 16.04)</strong>: CentOS-7.4</li>\n<li><strong>Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device</strong>: None</li>\n<li><strong>TensorFlow installed from (source or binary)</strong>: Source</li>\n<li><strong>TensorFlow version (use command below)</strong>: 1.10.1, earlier versions</li>\n<li><strong>Python version</strong>: 2.7, 3.6 (separate rebuilds same issue)</li>\n<li><strong>Bazel version (if compiling from source)</strong>: 0.17.1</li>\n<li><strong>GCC/Compiler version (if compiling from source)</strong>: 4.8.5, 6.3.1 (separate rebuilds same issue)</li>\n<li><strong>CUDA/cuDNN version</strong>: CPU only build</li>\n<li><strong>GPU model and memory</strong>: Quadro K4000</li>\n<li><strong>Exact command to reproduce</strong>: Not reproducible with single command</li>\n</ul>\n<h3>Describe the problem</h3>\n<p>Problem manifests as \"No module named numpy\", during python api generation as detailed below in log section.</p>\n<p>If placing a simple <code>print(sys.path)</code> or <code>print(os.environ['PYTHONPATH'])</code> in the listed <code>__init__.py</code> (in below log), none of the resulting paths listed include the path that numpy is included on via the PYTHONPATH, which is being passed along to the build environ included via bazels CLI opts, <code>--action_env</code> and <code>--test_env</code> arguments to the build call.</p>\n<p>I believe this issue will be reproducible only under a state where someone has installed numpy to a nonstandard location, and is including it via PYTHONPATH and <code>--action_env</code> such as is listed. However, all python modules in our environment are in separate paths, as managed by an environment manager, so I cannot install them to a common system path for testing if the issue resolves itself. What is strange is that earlier steps that require numpy have built just fine and not errored from what I can tell.</p>\n<p>Apologies if my details included are omitting some crucial detail. The specific set of config values seems unnecessary for detail here, but let me know if they are needed. (Every optional component driven by <code>TF_NEED_{var}</code> is turned off except for <code>TF_NEED_JEMALLOC</code> which does not appear to be part of the problem)</p>\n<h3>Source code / logs</h3>\n<p>build command, while prefaced by many environment variable changes and the ./configure step, is of the form:<br>\n<code>bazel --batch build --action_env=PYTHONPATH --action_env=LD_LIBRARY_PATH --test_env=PYTHONPATH --test_env=LD_LIBRARY_PATH -c opt --copt=-mfpmath=both --copt=-msse4.2 //tensorflow/tools/pip_package:build_pip_package</code></p>\n<p><code>ERROR: ${build_root}/tensorflow/BUILD:581:1: Executing genrule //tensorflow:tensorflow_python_api_gen failed (Exit 1) Traceback (most recent call last): File \"/home/${user}/.cache/bazel/_bazel_${user}/ff38b9a62494579437724e08cde1b695/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/create_tensorflow.python_api.runfiles/org_tensorflow/tensorflow/python/tools/api/generator/create_python_api.py\", line 27, in &lt;module&gt; from tensorflow.python.tools.api.generator import doc_srcs File \"/home/${user}/.cache/bazel/_bazel_${user}/ff38b9a62494579437724e08cde1b695/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/create_tensorflow.python_api.runfiles/org_tensorflow/tensorflow/python/__init__.py\", line 49, in &lt;module&gt; import numpy as np ImportError: No module named numpy</code></p>", "body_text": "System information\n\nHave I written custom code (as opposed to using a stock example script provided in TensorFlow): No\nOS Platform and Distribution (e.g., Linux Ubuntu 16.04): CentOS-7.4\nMobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device: None\nTensorFlow installed from (source or binary): Source\nTensorFlow version (use command below): 1.10.1, earlier versions\nPython version: 2.7, 3.6 (separate rebuilds same issue)\nBazel version (if compiling from source): 0.17.1\nGCC/Compiler version (if compiling from source): 4.8.5, 6.3.1 (separate rebuilds same issue)\nCUDA/cuDNN version: CPU only build\nGPU model and memory: Quadro K4000\nExact command to reproduce: Not reproducible with single command\n\nDescribe the problem\nProblem manifests as \"No module named numpy\", during python api generation as detailed below in log section.\nIf placing a simple print(sys.path) or print(os.environ['PYTHONPATH']) in the listed __init__.py (in below log), none of the resulting paths listed include the path that numpy is included on via the PYTHONPATH, which is being passed along to the build environ included via bazels CLI opts, --action_env and --test_env arguments to the build call.\nI believe this issue will be reproducible only under a state where someone has installed numpy to a nonstandard location, and is including it via PYTHONPATH and --action_env such as is listed. However, all python modules in our environment are in separate paths, as managed by an environment manager, so I cannot install them to a common system path for testing if the issue resolves itself. What is strange is that earlier steps that require numpy have built just fine and not errored from what I can tell.\nApologies if my details included are omitting some crucial detail. The specific set of config values seems unnecessary for detail here, but let me know if they are needed. (Every optional component driven by TF_NEED_{var} is turned off except for TF_NEED_JEMALLOC which does not appear to be part of the problem)\nSource code / logs\nbuild command, while prefaced by many environment variable changes and the ./configure step, is of the form:\nbazel --batch build --action_env=PYTHONPATH --action_env=LD_LIBRARY_PATH --test_env=PYTHONPATH --test_env=LD_LIBRARY_PATH -c opt --copt=-mfpmath=both --copt=-msse4.2 //tensorflow/tools/pip_package:build_pip_package\nERROR: ${build_root}/tensorflow/BUILD:581:1: Executing genrule //tensorflow:tensorflow_python_api_gen failed (Exit 1) Traceback (most recent call last): File \"/home/${user}/.cache/bazel/_bazel_${user}/ff38b9a62494579437724e08cde1b695/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/create_tensorflow.python_api.runfiles/org_tensorflow/tensorflow/python/tools/api/generator/create_python_api.py\", line 27, in <module> from tensorflow.python.tools.api.generator import doc_srcs File \"/home/${user}/.cache/bazel/_bazel_${user}/ff38b9a62494579437724e08cde1b695/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/create_tensorflow.python_api.runfiles/org_tensorflow/tensorflow/python/__init__.py\", line 49, in <module> import numpy as np ImportError: No module named numpy", "body": "### System information\r\n- **Have I written custom code (as opposed to using a stock example script provided in TensorFlow)**: No\r\n- **OS Platform and Distribution (e.g., Linux Ubuntu 16.04)**: CentOS-7.4\r\n- **Mobile device (e.g. iPhone 8, Pixel 2, Samsung Galaxy) if the issue happens on mobile device**: None\r\n- **TensorFlow installed from (source or binary)**: Source\r\n- **TensorFlow version (use command below)**: 1.10.1, earlier versions\r\n- **Python version**: 2.7, 3.6 (separate rebuilds same issue)\r\n- **Bazel version (if compiling from source)**: 0.17.1\r\n- **GCC/Compiler version (if compiling from source)**: 4.8.5, 6.3.1 (separate rebuilds same issue)\r\n- **CUDA/cuDNN version**: CPU only build\r\n- **GPU model and memory**: Quadro K4000\r\n- **Exact command to reproduce**: Not reproducible with single command\r\n\r\n### Describe the problem\r\nProblem manifests as \"No module named numpy\", during python api generation as detailed below in log section.\r\n\r\nIf placing a simple `print(sys.path)` or `print(os.environ['PYTHONPATH'])` in the listed `__init__.py` (in below log), none of the resulting paths listed include the path that numpy is included on via the PYTHONPATH, which is being passed along to the build environ included via bazels CLI opts, `--action_env` and `--test_env` arguments to the build call.\r\n\r\nI believe this issue will be reproducible only under a state where someone has installed numpy to a nonstandard location, and is including it via PYTHONPATH and `--action_env` such as is listed. However, all python modules in our environment are in separate paths, as managed by an environment manager, so I cannot install them to a common system path for testing if the issue resolves itself. What is strange is that earlier steps that require numpy have built just fine and not errored from what I can tell.\r\n\r\nApologies if my details included are omitting some crucial detail. The specific set of config values seems unnecessary for detail here, but let me know if they are needed. (Every optional component driven by `TF_NEED_{var}` is turned off except for `TF_NEED_JEMALLOC` which does not appear to be part of the problem)\r\n\r\n### Source code / logs\r\n\r\nbuild command, while prefaced by many environment variable changes and the ./configure step, is of the form:\r\n`bazel --batch build --action_env=PYTHONPATH --action_env=LD_LIBRARY_PATH --test_env=PYTHONPATH --test_env=LD_LIBRARY_PATH -c opt --copt=-mfpmath=both --copt=-msse4.2 //tensorflow/tools/pip_package:build_pip_package`\r\n\r\n`ERROR: ${build_root}/tensorflow/BUILD:581:1: Executing genrule //tensorflow:tensorflow_python_api_gen failed (Exit 1)\r\nTraceback (most recent call last):\r\n  File \"/home/${user}/.cache/bazel/_bazel_${user}/ff38b9a62494579437724e08cde1b695/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/create_tensorflow.python_api.runfiles/org_tensorflow/tensorflow/python/tools/api/generator/create_python_api.py\", line 27, in <module>\r\n    from tensorflow.python.tools.api.generator import doc_srcs\r\n  File \"/home/${user}/.cache/bazel/_bazel_${user}/ff38b9a62494579437724e08cde1b695/execroot/org_tensorflow/bazel-out/host/bin/tensorflow/create_tensorflow.python_api.runfiles/org_tensorflow/tensorflow/python/__init__.py\", line 49, in <module>\r\n    import numpy as np\r\nImportError: No module named numpy`"}