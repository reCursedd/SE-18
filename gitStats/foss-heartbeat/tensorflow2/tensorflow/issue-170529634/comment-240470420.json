{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/240470420", "html_url": "https://github.com/tensorflow/tensorflow/issues/3738#issuecomment-240470420", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/3738", "id": 240470420, "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDQ3MDQyMA==", "user": {"login": "ebrevdo", "id": 1794715, "node_id": "MDQ6VXNlcjE3OTQ3MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1794715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebrevdo", "html_url": "https://github.com/ebrevdo", "followers_url": "https://api.github.com/users/ebrevdo/followers", "following_url": "https://api.github.com/users/ebrevdo/following{/other_user}", "gists_url": "https://api.github.com/users/ebrevdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebrevdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebrevdo/subscriptions", "organizations_url": "https://api.github.com/users/ebrevdo/orgs", "repos_url": "https://api.github.com/users/ebrevdo/repos", "events_url": "https://api.github.com/users/ebrevdo/events{/privacy}", "received_events_url": "https://api.github.com/users/ebrevdo/received_events", "type": "User", "site_admin": false}, "created_at": "2016-08-17T16:37:25Z", "updated_at": "2016-08-17T16:37:25Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=70511\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/girving\">@girving</a> Please keep in mind, if your max sequence_length is less than the total number of inputs to <code>rnn</code>, then the calculation is exited early (however, anything past the max sequence length <em>must</em> be filled with zeros because TensorFlow requires all outputs to be filled by <em>something</em>).</p>\n<p>If your minibatch sizes vary from iteration to iteration, you could try using <code>tf.nn.dynamic_rnn</code>, and make sure that for your LSTM inputs (now tensors of shape <code>batch_size, max_time_per_batch, depth</code>) have a <code>max_time_per_batch</code> which is exactly equal to the maximum number of frames for that minibatch (and no larger).</p>", "body_text": "@girving Please keep in mind, if your max sequence_length is less than the total number of inputs to rnn, then the calculation is exited early (however, anything past the max sequence length must be filled with zeros because TensorFlow requires all outputs to be filled by something).\nIf your minibatch sizes vary from iteration to iteration, you could try using tf.nn.dynamic_rnn, and make sure that for your LSTM inputs (now tensors of shape batch_size, max_time_per_batch, depth) have a max_time_per_batch which is exactly equal to the maximum number of frames for that minibatch (and no larger).", "body": "@girving Please keep in mind, if your max sequence_length is less than the total number of inputs to `rnn`, then the calculation is exited early (however, anything past the max sequence length _must_ be filled with zeros because TensorFlow requires all outputs to be filled by _something_).\n\nIf your minibatch sizes vary from iteration to iteration, you could try using `tf.nn.dynamic_rnn`, and make sure that for your LSTM inputs (now tensors of shape `batch_size, max_time_per_batch, depth`) have a `max_time_per_batch` which is exactly equal to the maximum number of frames for that minibatch (and no larger).\n"}