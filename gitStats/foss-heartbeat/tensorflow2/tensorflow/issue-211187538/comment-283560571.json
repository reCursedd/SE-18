{"url": "https://api.github.com/repos/tensorflow/tensorflow/issues/comments/283560571", "html_url": "https://github.com/tensorflow/tensorflow/issues/7983#issuecomment-283560571", "issue_url": "https://api.github.com/repos/tensorflow/tensorflow/issues/7983", "id": 283560571, "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzU2MDU3MQ==", "user": {"login": "gunan", "id": 7946809, "node_id": "MDQ6VXNlcjc5NDY4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7946809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gunan", "html_url": "https://github.com/gunan", "followers_url": "https://api.github.com/users/gunan/followers", "following_url": "https://api.github.com/users/gunan/following{/other_user}", "gists_url": "https://api.github.com/users/gunan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gunan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gunan/subscriptions", "organizations_url": "https://api.github.com/users/gunan/orgs", "repos_url": "https://api.github.com/users/gunan/repos", "events_url": "https://api.github.com/users/gunan/events{/privacy}", "received_events_url": "https://api.github.com/users/gunan/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-02T05:30:32Z", "updated_at": "2017-03-02T05:30:32Z", "author_association": "MEMBER", "body_html": "<p>Tensorflow tries to preallocate memory on the GPUs. I think the default is 70%  of the GPU memory.</p>\n<p>The easiest solution would be to have the two different processes sequentially.<br>\nOr you can use the <code>CUDA_VISIBLE_DEVICES</code> environment variables to give exclusive access to each process. In your programs, you would then start your session to use <code>gpu:0</code></p>", "body_text": "Tensorflow tries to preallocate memory on the GPUs. I think the default is 70%  of the GPU memory.\nThe easiest solution would be to have the two different processes sequentially.\nOr you can use the CUDA_VISIBLE_DEVICES environment variables to give exclusive access to each process. In your programs, you would then start your session to use gpu:0", "body": "Tensorflow tries to preallocate memory on the GPUs. I think the default is 70%  of the GPU memory.\r\n\r\nThe easiest solution would be to have the two different processes sequentially.\r\nOr you can use the `CUDA_VISIBLE_DEVICES` environment variables to give exclusive access to each process. In your programs, you would then start your session to use `gpu:0`"}